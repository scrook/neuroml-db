// Cell: cACint209_L5_DBC_5f1980557e_0_0
/*
{
  "id" : "cACint209_L5_DBC_5f1980557e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -4.35803, -7.44048, 0.74", "-6.8285, -4.35803, -7.44048, 0.74", "-7.4534, -5.2781, -7.46618, 0.74", "-7.50249, -5.32616, -7.46987, 0.74", "-8.4508, -5.93034, -7.55788, 0.66", "-9.36443, -6.30467, -7.64974, 0.44", "-10.4186, -6.58356, -7.75754, 0.44", "-11.3872, -6.68767, -7.97381, 0.44", "-12.0038, -6.69543, -8.15911, 1.03", "-12.7671, -6.70123, -8.468, 1.33", "-13.4404, -6.68181, -8.80632, 1.47", "-14.1058, -6.69387, -9.22671, 0.66", "-15.3931, -7.09269, -10.4054, 0.37", "-15.6818, -7.3702, -10.8501, 0.37", "-16.0878, -8.05822, -11.731, 1.11", "-16.107, -8.10826, -11.7872, 1.11", "-16.2281, -8.5612, -12.2367, 0.88", "-16.4224, -9.57617, -13.1277, 0.59", "-16.6525, -10.9125, -14.1489, 1.03", "-16.6913, -11.1448, -14.3363, 1.25", "-16.708, -11.2244, -14.3997, 1.25", "-16.7938, -11.5727, -14.6807, 1.25", "-16.8253, -11.6659, -14.7616, 1.25", "-17.26, -12.5621, -15.5417, 0.52", "-17.7327, -13.2132, -16.1404, 0.22", "-18.0255, -13.4388, -16.4412, 0.22", "-18.2284, -13.5254, -16.6136, 0.22", "-18.7205, -13.6412, -16.9731, 0.88", "-19.0597, -13.7062, -17.1787, 1.25", "-19.5901, -13.8132, -17.4557, 1.25", "-20.7057, -14.1608, -18.0953, 0.29", "-21.026, -14.3251, -18.3117, 0.29", "-21.5095, -14.6989, -18.6761, 0.29", "-22.0523, -15.2573, -19.1094, 0.29", "-22.5939, -15.9144, -19.5696, 0.29", "-23.1142, -16.6296, -20.0199, 0.52", "-23.3211, -16.9487, -20.1958, 0.52", "-23.5009, -17.1977, -20.34, 0.29", "-23.7684, -17.544, -20.6282, 0.29", "-24.0915, -17.9235, -21.0399, 1.25", "-24.3206, -18.1628, -21.332, 1.47", "-24.356, -18.1995, -21.3795, 1.47", "-24.5259, -18.3888, -21.6331, 1.47", "-25.5004, -19.6055, -23.3139, 0.22", "-25.6532, -19.8301, -23.6139, 0.81", "-25.8408, -20.1172, -23.9837, 0.81", "-25.8661, -20.1536, -24.034, 0.81", "-26.1239, -20.4691, -24.4998, 0.96", "-26.7008, -21.1049, -25.5304, 0.29", "-26.7383, -21.1386, -25.5908, 0.29", "-26.9604, -21.3815, -25.9812, 0.29", "-27.6038, -22.3088, -27.1682, 1.92", "-27.9471, -22.9083, -27.8168, 2.58", "-28.2871, -23.5948, -28.4729, 2.58", "-28.3119, -23.6436, -28.514, 2.58", "-29.0195, -24.9754, -29.5257, 0.66", "-29.5688, -25.86, -30.1576, 0.22", "-29.6837, -26.0089, -30.2498, 0.81", "-30.3556, -26.7397, -30.7186, 0.22", "-31.1586, -27.5138, -31.2172, 2.58", "-31.5368, -27.8433, -31.4487, 3.32", "-32.9628, -28.965, -32.3037, 0.44", "-33.7063, -29.5533, -32.761, 1.33", "-34.286, -30.0603, -33.1182, 1.47", "-34.9266, -30.7616, -33.5545, 0.22", "-34.994, -30.853, -33.6095, 0.22", "-35.4028, -31.4504, -33.9578, 0.22", "-35.8125, -32.1194, -34.3034, 1.69", "-35.9678, -32.3573, -34.4289, 2.06", "-37.0565, -33.7936, -35.3641, 0.22", "-37.0945, -33.8372, -35.3991, 0.22", "-37.5607, -34.3779, -35.876, 0.22", "-37.7944, -34.6525, -36.1361, 0.88", "-38.0197, -34.976, -36.4631, 1.11", "-38.9565, -36.4729, -37.9611, 0.22", "-38.9836, -36.5242, -38.0129, 0.22", "-39.3056, -37.2165, -38.7145, 1.84", "-39.4468, -37.5747, -39.0682, 1.99", "-40.0636, -39.266, -40.6535, 0.29", "-40.2509, -39.7556, -41.0735, 0.29", "-40.8841, -41.0837, -42.1218, 0.29", "-40.9564, -41.2154, -42.228, 0.29", "-41.4262, -41.9198, -42.8136, 1.11", "-41.6776, -42.2496, -43.1177, 1.47", "-42.3267, -42.9941, -43.8479, 0.29", "-43.1895, -43.8937, -44.8037, 2.43", "-43.8824, -44.5188, -45.5164, 2.43", "-44.9409, -45.3753, -46.6026, 0.52", "-45.7233, -45.9395, -47.4141, 0.66", "-46.3492, -46.3525, -48.0702, 0.22", "-46.6705, -46.5394, -48.3949, 0.59", "-46.9757, -46.7022, -48.6723, 0.59", "-47.7111, -47.1042, -49.2571, 0.22", "-48.2422, -47.4584, -49.6469, 1.18", "-48.4865, -47.6583, -49.8048, 1.33", "-49.4834, -48.6459, -50.4927, 0.37", "-50.0801, -49.3215, -50.922, 0.22", "-50.5713, -49.9269, -51.272, 0.22", "-51.1462, -50.6936, -51.6635, 1.55", "-51.5238, -51.2313, -51.9126, 2.06", "-52.5124, -52.7452, -52.5578, 0.22", "-52.7158, -53.0692, -52.6795, 0.52", "-52.9218, -53.3592, -52.7935, 0.52", "-53.5559, -54.1614, -53.1184, 0.22", "-53.9132, -54.5919, -53.2888, 0.22", "-54.3035, -55.0631, -53.4956, 1.11", "-54.6367, -55.4543, -53.6683, 1.33", "-55.6213, -56.5706, -54.2279, 0.22", "-55.9662, -56.94, -54.4316, 1.03", "-56.1568, -57.126, -54.5471, 1.03", "-57.1792, -58.0803, -55.1586, 0.22", "-57.5533, -58.4297, -55.3732, 0.22", "-57.8766, -58.7334, -55.5512, 1.18", "-58.1774, -59.0041, -55.7086, 1.4", "-59.3562, -60.0457, -56.3955, 0.22", "-59.7419, -60.3757, -56.6182, 1.11", "-60.0303, -60.6157, -56.7796, 1.33", "-60.2796, -60.8376, -56.933, 1.18", "-61.2505, -61.7576, -57.5478, 0.15", "-62.0827, -62.5804, -58.0784, 0.15", "-62.4049, -62.905, -58.277, 0.81", "-62.6004, -63.1143, -58.4226, 0.81", "-63.4066, -64.0098, -59.0636, 0.22", "-64.0703, -64.7732, -59.601, 0.22", "-64.6782, -65.4948, -60.0971, 1.47", "-64.9392, -65.7983, -60.3224, 1.84", "-66.3247, -67.4241, -61.7232, 0.15", "-66.6568, -67.799, -62.0879, 0.15", "-66.8556, -68.0181, -62.3326, 0.74", "-66.9489, -68.117, -62.454, 0.74", "-67.6814, -68.8403, -63.4191, 0.29", "-68.3323, -69.4379, -64.2534, 1.25", "-68.5858, -69.6516, -64.5504, 1.33", "-69.3912, -70.3965, -65.6757, 0.15", "-69.6364, -70.6375, -66.0494, 0.74", "-70.1527, -71.162, -66.8587, 0.22", "-70.1802, -71.1902, -66.9005, 0.22", "-70.3992, -71.4088, -67.22, 0.88", "-71.6417, -72.6427, -69.0113, 0.22", "-71.6828, -72.6822, -69.066, 0.22", "-71.805, -72.787, -69.2012, 0.22", "-72.3561, -73.201, -69.6794, 1.47", "-72.6149, -73.3726, -69.857, 1.84", "-72.8464, -73.5131, -69.9761, 1.84", "-73.1214, -73.6664, -70.0673, 1.84", "-74.3121, -74.4676, -70.7202, 0.15", "-74.3867, -74.5189, -70.7709, 0.15", "-74.9795, -74.8987, -71.2298, 0.15", "-75.486, -75.2274, -71.6397, 0.96", "-75.7973, -75.4432, -71.8978, 0.96", "-77.4321, -76.6625, -73.2909, 0.22", "-77.8585, -77.0229, -73.6692, 0.22", "-78.3937, -77.4976, -74.1326, 0.22", "-79.004, -78.0529, -74.6295, 1.11", "-79.4148, -78.4405, -74.943, 1.69", "-79.5518, -78.5809, -75.0363, 1.69", "-80.7746, -79.9878, -75.7662, 0.22", "-81.2133, -80.55, -76.0389, 0.37", "-81.6278, -81.1011, -76.3047, 0.22", "-82.1941, -81.8241, -76.6591, 1.47", "-82.5898, -82.3075, -76.9318, 1.69", "-83.5959, -83.4999, -77.6326, 0.22", "-84.4501, -84.5359, -78.2259, 0.22", "-84.8761, -85.0598, -78.541, 1.4", "-85.2805, -85.5597, -78.8521, 1.84", "-86.586, -87.1261, -79.8731, 0.15", "-87.0408, -87.6511, -80.2405, 0.15", "-87.4685, -88.1234, -80.5941, 1.18", "-87.701, -88.3812, -80.7945, 1.18", "-87.7343, -88.4191, -80.823, 1.18", "-88.7949, -89.6971, -81.7115, 0.22", "-89.3028, -90.3549, -82.0865, 1.25", "-90.0263, -91.3067, -82.6425, 0.15", "-90.3143, -91.6531, -82.8682, 0.88", "-90.4631, -91.8222, -82.9803, 1.03", "-90.9261, -92.326, -83.3089, 0.15", "-91.4551, -92.8706, -83.6482, 0.15", "-91.8744, -93.2679, -83.9351, 0.74", "-92.6605, -93.9545, -84.4812, 0.22", "-93.3378, -94.5478, -84.9505, 0.22", "-93.9456, -95.0827, -85.3693, 1.99", "-94.2216, -95.3319, -85.5565, 2.28", "-95.7709, -96.8159, -86.5653, 0.22", "-95.9885, -97.0515, -86.7023, 0.52", "-96.7169, -97.883, -87.1207, 0.15", "-96.7597, -97.9308, -87.1449, 0.15", "-97.0961, -98.285, -87.3124, 0.81", "-97.1355, -98.325, -87.3279, 0.81", "-98.2466, -99.4156, -87.6168, 0.22", "-99.0592, -100.232, -87.8785, 0.22", "-99.1135, -100.285, -87.8975, 0.22", "-99.8893, -101.07, -88.1704, 0.22", "-100.429, -101.632, -88.3921, 0.81", "-100.479, -101.687, -88.4137, 0.81", "-101.319, -102.712, -88.8291, 0.22", "-101.806, -103.318, -89.0886, 1.47", "-101.983, -103.533, -89.1797, 1.77", "-103.322, -105.125, -89.8622, 0.22", "-103.713, -105.561, -90.057, 0.52", "-104.6, -106.488, -90.4669, 0.22", "-105.682, -107.535, -90.9228, 0.22", "-106.236, -108.054, -91.1594, 1.18", "-106.403, -108.209, -91.2292, 1.4", "-107.706, -109.462, -91.8463, 0.15", "-108.001, -109.758, -92.004, 0.66", "-109.455, -111.291, -92.8525, 0.15", "-110.151, -112.066, -93.3211, 1.69", "-110.365, -112.31, -93.4738, 1.84", "-111.926, -114.167, -94.6372, 0.22", "-112.217, -114.539, -94.8757, 0.66", "-112.257, -114.596, -94.9149, 0.66", "-112.652, -115.205, -95.367, 0.15", "-112.822, -115.453, -95.5586, 0.59", "-112.876, -115.528, -95.6184, 0.59", "-113.529, -116.391, -96.2948, 0.22", "-114.118, -117.161, -96.9362, 1.33", "-114.734, -117.987, -97.6321, 0.15", "-115.015, -118.393, -97.9732, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.80597, -8.94048, 1.18", "4.33108, 6.94048, -8.59565, 1.18", "4.3825, 8.52915, -8.144, 1.47", "4.41313, 9.76542, -7.9182, 1.92", "4.43005, 11.4382, -7.78408, 0.81", "4.42488, 12.8275, -7.78615, 0.81", "4.41255, 13.7152, -7.84943, 0.74", "4.40603, 13.8603, -7.88961, 0.74", "4.26387, 15.518, -8.68862, 0.74", "4.17153, 16.4302, -9.31895, 1.11", "4.12082, 16.9768, -9.8148, 1.11", "4.06901, 17.7719, -10.6233, 1.11", "4.04973, 19.2371, -12.0652, 1.25", "4.05115, 19.2908, -12.1159, 1.25", "4.1717, 20.6061, -13.2932, 1.03", "4.3857, 22.0639, -14.5262, 0.52", "4.68883, 23.5606, -15.6905, 0.52", "4.95304, 24.5659, -16.3851, 0.81", "4.97374, 24.6293, -16.4184, 0.81", "5.25531, 25.3908, -16.7479, 1.18", "5.40667, 25.7032, -16.8199, 1.18", "5.642, 26.0969, -16.8216, 1.18", "5.69022, 26.1699, -16.8154, 1.18", "5.86345, 26.4479, -16.7976, 1.4", "5.95613, 26.6311, -16.7847, 1.4", "6.22731, 27.3146, -16.7333, 1.4", "6.44342, 28.0271, -16.6721, 0.88", "6.65314, 29.1485, -16.5666, 0.52", "6.69695, 30.1845, -16.5583, 0.37", "6.61047, 31.2811, -16.677, 0.37", "6.5265, 31.7696, -16.7754, 0.29", "6.29906, 32.6376, -17.0326, 0.29", "6.14119, 33.1456, -17.2587, 0.29", "5.65531, 34.7676, -18.3923, 1.33", "5.39132, 35.6721, -19.1314, 1.92", "5.34065, 35.8969, -19.3358, 2.21", "5.3176, 36.0695, -19.4982, 2.21", "5.28872, 37.0142, -20.4067, 2.5", "5.33652, 38.2492, -21.6748, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 10.468, -2.50048, 3.68", "1.6115, 10.468, -2.50048, 3.68", "0.99017, 12.5291, -2.80813, 2.8", "0.948124, 12.6652, -2.8347, 2.8", "0.689843, 13.4942, -3.00746, 2.8", "0.573523, 13.8507, -3.08499, 2.8", "0.305757, 14.6529, -3.26525, 2.8", "-0.097929, 15.7991, -3.54751, 3.02", "-0.663152, 17.2749, -3.9722, 3.02", "-0.68496, 17.3283, -3.99, 3.02", "-1.16239, 18.4238, -4.38527, 3.02", "-1.18559, 18.4761, -4.40446, 3.02", "-1.72461, 19.6694, -4.85628, 2.87", "-2.22547, 20.8286, -5.24366, 2.87", "-2.24815, 20.8831, -5.25703, 2.87", "-2.71803, 22.067, -5.48103, 2.73", "-3.20818, 23.3369, -5.65839, 2.58", "-3.23364, 23.4025, -5.66591, 2.58", "-3.9346, 25.1964, -5.81623, 2.36", "-4.63752, 26.9477, -5.9329, 2.06", "-5.28044, 28.472, -6.02839, 2.06", "-5.69901, 29.4461, -6.08789, 2.65", "-6.44589, 31.1361, -6.18141, 2.73", "-7.0576, 32.4875, -6.25958, 2.95", "-7.62694, 33.6754, -6.34295, 3.17", "-8.14783, 34.7119, -6.42954, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -11.2565, 0.999524, 4.05", "-3.5085, -11.2565, 0.999524, 4.05", "-4.18162, -13.0235, 0.999524, 3.68", "-4.82522, -14.7129, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.52", "8.20573, 24.4316, -1.24848, 0.52", "13.1806, 38.5826, -1.24848, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.33652, 38.2492, -21.6748, 1.25", "5.04908, 39.0079, -22.2447, 1.25", "4.81218, 39.7508, -22.7974, 1.77", "4.76083, 39.9307, -22.9321, 1.84", "4.57396, 40.8914, -23.805, 0.22", "4.51735, 41.5515, -24.5323, 1.33", "4.51769, 41.5847, -24.5779, 1.33", "4.54431, 41.739, -24.8402, 1.77", "4.5583, 41.7814, -24.921, 1.77", "4.85338, 42.4257, -26.2927, 1.18", "5.10353, 42.833, -27.2743, 1.4", "5.4435, 43.3455, -28.7553, 0.29", "5.45251, 43.3595, -28.7981, 0.29", "5.70982, 43.7738, -30.0776, 1.55", "5.73886, 43.8302, -30.2383, 1.84", "5.74713, 43.851, -30.2872, 1.84", "6.10265, 45.0051, -32.5012, 0.52", "6.11171, 45.0374, -32.5465, 0.52", "6.1649, 45.2462, -32.7849, 0.74", "6.52161, 46.785, -34.2674, 1.47", "6.69527, 47.5382, -34.8651, 0.29", "6.86788, 48.28, -35.3326, 1.69", "7.22782, 50.0009, -36.2092, 0.15", "7.31955, 50.5263, -36.47, 0.66", "7.32655, 50.5758, -36.494, 0.66", "7.43119, 51.5331, -36.9706, 0.15", "7.48138, 52.2172, -37.3523, 1.69", "7.55849, 54.234, -38.529, 0.22", "7.55833, 54.7352, -38.8466, 0.59", "7.54471, 55.8155, -39.5771, 1.92", "7.50667, 57.4998, -40.7648, 0.15", "7.50351, 57.589, -40.8308, 0.15", "7.49645, 57.9933, -41.1443, 0.37", "7.49487, 58.6145, -41.6557, 0.22", "7.49802, 59.2721, -42.2774, 1.11", "7.49729, 59.3118, -42.318, 1.11", "7.48662, 59.5845, -42.6069, 1.25", "7.43037, 60.6976, -43.8288, 0.22", "7.38333, 61.4537, -44.6665, 0.96", "7.31635, 62.2939, -45.5451, 0.15", "7.2623, 62.9994, -46.2354, 1.18", "7.25064, 63.137, -46.359, 1.47", "7.16453, 64.1468, -47.1434, 0.22", "7.13607, 64.4428, -47.3184, 0.44", "7.08271, 65.0249, -47.5771, 0.15", "6.99192, 65.8215, -47.851, 1.11", "6.94813, 66.1637, -47.9503, 1.47", "6.7902, 67.61, -48.2962, 0.22", "6.73531, 68.183, -48.4043, 0.74", "6.65913, 69.0587, -48.5633, 0.15", "6.61039, 69.7375, -48.6823, 1.11", "6.59116, 70.0276, -48.7286, 1.55", "6.44257, 72.606, -49.1164, 0.15", "6.41434, 73.1995, -49.1939, 0.66", "6.4058, 73.4883, -49.2334, 0.66", "6.38631, 75.1735, -49.4697, 0.15", "6.38641, 75.7065, -49.5401, 0.37", "6.38618, 75.7774, -49.5496, 0.37", "6.37508, 76.0758, -49.5865, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.33652, 38.2492, -21.6748, 0.37", "5.94659, 40.2386, -21.8271, 0.37", "6.3777, 42.0209, -21.9722, 0.37", "6.66496, 43.5973, -22.1046, 0.37", "6.6766, 43.7048, -22.1139, 0.37", "6.69319, 44.4666, -22.1809, 0.37", "6.69008, 44.56, -22.1928, 0.37", "6.44457, 45.6609, -22.4256, 0.66", "6.293, 46.0476, -22.529, 0.81", "6.04784, 46.6912, -22.7099, 0.81", "5.83675, 47.3891, -22.8913, 0.37", "5.59498, 48.4977, -23.1339, 0.29", "5.58173, 48.5902, -23.1514, 0.29", "5.48693, 49.7303, -23.3396, 0.29", "5.40505, 51.5744, -23.5939, 1.84", "5.39766, 52.2791, -23.6697, 2.36", "5.42304, 53.8772, -23.7942, 1.55", "5.46908, 55.7156, -23.881, 1.92", "5.50392, 56.4314, -23.9089, 2.5", "5.60238, 57.5707, -23.9556, 1.99", "5.79838, 59.2106, -24.0179, 0.22", "5.92392, 60.2692, -24.0725, 0.22", "6.00406, 61.0113, -24.1148, 0.88", "6.05494, 61.6387, -24.1587, 0.59", "6.11624, 62.7901, -24.2525, 0.29", "6.15123, 64.0736, -24.3674, 0.29", "6.16779, 65.5706, -24.5057, 0.29", "6.17457, 66.8852, -24.633, 0.29", "6.18319, 68.2947, -24.764, 1.18", "6.19754, 69.1383, -24.8265, 1.84", "6.23357, 69.9844, -24.8742, 1.4", "6.31363, 70.9049, -24.9209, 0.88", "6.50307, 72.5164, -24.9975, 0.29", "6.6852, 73.9169, -25.0559, 0.29", "7.0056, 76.2019, -25.1231, 2.14", "7.13426, 77.1284, -25.1498, 3.09", "7.2518, 78.0019, -25.1724, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.14783, 34.7119, -6.42954, 1.62", "-8.46497, 36.3095, -6.75559, 1.62", "-8.46976, 36.3675, -6.76513, 1.62", "-8.53724, 37.1846, -6.89944, 1.62", "-8.55173, 37.36, -6.92827, 1.62", "-8.61719, 38.1526, -7.05857, 1.62", "-8.62147, 38.2045, -7.0671, 1.62", "-8.51498, 39.4811, -7.15377, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.14783, 34.7119, -6.42954, 0.66", "-6.34043, 37.8016, -5.42993, 0.66", "-5.69645, 38.8147, -5.34695, 0.59", "-5.08382, 39.7397, -5.3642, 1.03", "-4.96895, 39.9178, -5.37846, 1.03", "-4.71557, 40.3463, -5.4271, 1.18", "-3.84018, 42.0621, -5.67596, 0.81", "-3.30353, 43.23, -6.04188, 0.66", "-3.26646, 43.3273, -6.0737, 0.66", "-2.93453, 44.4459, -6.35196, 0.66", "-2.63707, 45.7362, -6.57139, 0.88", "-2.36127, 47.5007, -6.73632, 1.4", "-2.32086, 47.9517, -6.74321, 1.77", "-2.27154, 48.9419, -6.70977, 2.14", "-2.19094, 50.8589, -6.45809, 1.77", "-2.0859, 52.1051, -6.09229, 1.25", "-1.95379, 53.1053, -5.65369, 1.03", "-1.76796, 53.9273, -5.14877, 0.81", "-1.45102, 54.9602, -4.38058, 0.81", "-0.78557, 56.4914, -2.97966, 0.59", "0.098757, 57.9142, -1.40495, 0.59", "0.143932, 57.9707, -1.32747, 0.59", "0.829472, 58.6265, -0.208562, 1.77", "0.869587, 58.6543, -0.147331, 1.77", "1.3111, 58.8339, 0.438422, 1.92", "1.37429, 58.8398, 0.50346, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.82522, -14.7129, 0.999524, 0.37", "-6.32517, -15.9375, -0.0826592, 0.37", "-7.32156, -16.9066, -0.475398, 0.37", "-8.73569, -18.5275, -0.442626, 0.37", "-9.37464, -19.4053, -0.0207098, 0.66", "-9.74573, -19.9427, 0.365713, 0.96", "-9.79884, -20.0052, 0.428163, 0.96", "-11.2864, -21.6739, 2.843, 0.59", "-11.3238, -21.7088, 2.90993, 0.59", "-11.9175, -22.0744, 3.88265, 1.25", "-12.1275, -22.1588, 4.1474, 1.25", "-13.5541, -22.6304, 5.50087, 0.59", "-14.1747, -22.856, 5.94951, 0.96", "-14.2699, -22.8933, 5.99627, 0.96", "-15.1479, -23.38, 6.54679, 0.96", "-15.8518, -23.9509, 7.10758, 0.59", "-16.3913, -24.6441, 7.75038, 0.29", "-16.7889, -25.4968, 8.53227, 0.29", "-17.1241, -26.2569, 9.28588, 1.11", "-17.8029, -27.7212, 10.8024, 0.22", "-17.9809, -28.0801, 11.1839, 1.25", "-18.3574, -28.6467, 11.7938, 1.55", "-18.4602, -28.7528, 11.9031, 1.55", "-19.9236, -29.7029, 12.7291, 0.59", "-20.4255, -29.9829, 12.8984, 0.74", "-21.2344, -30.3992, 13.0654, 0.74", "-22.3617, -30.9861, 13.2787, 0.59", "-22.5278, -31.0926, 13.3178, 0.59", "-23.5597, -32.14, 13.7449, 0.59", "-23.881, -32.8198, 14.1159, 1.11", "-24.0653, -33.3436, 14.4771, 1.18", "-24.1015, -33.4577, 14.5636, 1.18", "-24.5799, -34.6878, 15.5675, 0.59", "-25.1029, -35.6662, 16.3988, 0.59", "-25.9247, -36.6336, 17.2438, 0.44", "-26.7048, -37.1189, 17.7321, 0.74", "-27.4196, -37.3451, 17.9949, 0.88", "-28.9307, -37.5902, 18.3382, 0.44", "-29.7252, -37.6317, 18.4049, 0.44", "-30.6723, -37.6537, 18.3995, 0.44", "-30.7547, -37.6595, 18.3902, 0.44", "-31.7761, -37.8472, 18.2191, 0.88", "-31.8845, -37.8798, 18.2012, 0.88", "-33.0629, -38.3453, 17.9573, 1.18", "-33.6225, -38.6095, 17.8325, 1.11", "-34.4783, -39.051, 17.6166, 0.59", "-35.2712, -39.4931, 17.3902, 0.44", "-35.3402, -39.5346, 17.3671, 0.44", "-36.3819, -40.2684, 17.0327, 0.66", "-37.073, -40.8946, 16.8351, 0.37", "-37.4857, -41.4139, 16.7512, 1.03", "-37.7, -41.8498, 16.7447, 1.03", "-37.7494, -42.0309, 16.76, 1.03", "-38.0702, -43.6718, 16.9633, 0.37", "-38.15, -44.6174, 17.1405, 0.44", "-38.1596, -45.3533, 17.3121, 0.74", "-38.1378, -45.9533, 17.4727, 0.88", "-38.0798, -47.0459, 17.7924, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.82522, -14.7129, 0.999524, 3.09", "-4.83591, -14.7604, 0.998824, 3.09", "-5.13894, -16.1277, 1.00847, 2.8", "-5.54155, -17.9568, 1.02778, 2.43", "-5.86595, -19.4305, 1.04333, 2.43", "-5.88062, -19.4972, 1.04404, 2.43", "-6.34502, -21.6069, 1.06631, 2.43", "-6.59492, -22.7521, 1.08764, 2.87", "-6.79978, -23.689, 1.12385, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.52", "18.1555, 52.7336, -1.24848, 0.52", "23.1303, 66.8846, -1.24848, 0.52" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "7.2518, 78.0019, -25.1724, 0.29", "8.04026, 79.6965, -25.4496, 0.29", "8.40858, 80.331, -25.5954, 0.29", "8.80172, 80.9877, -25.7705, 0.37", "8.83934, 81.0501, -25.7884, 0.37", "9.11526, 81.5394, -25.9326, 0.37", "9.14093, 81.5869, -25.947, 0.37", "9.48152, 82.3186, -26.2324, 0.22", "9.65659, 82.7379, -26.4315, 0.44", "9.67086, 82.7956, -26.4645, 0.44", "9.75755, 83.278, -26.7455, 0.66", "9.76666, 83.3269, -26.7714, 0.66", "9.91177, 83.9151, -27.0846, 0.96", "9.93268, 83.9798, -27.1363, 0.96", "10.2228, 84.8086, -27.8722, 0.22", "10.2417, 84.8631, -27.922, 0.22", "10.5175, 85.6364, -28.6202, 1.92", "10.8076, 86.3529, -29.263, 2.36", "11.8321, 88.6218, -31.2823, 0.44", "11.9929, 88.9606, -31.5797, 0.44", "12.1118, 89.2, -31.7847, 0.44", "12.3648, 89.7223, -32.2048, 0.22", "12.6788, 90.3933, -32.6958, 0.22", "13.0413, 91.1495, -33.1629, 0.74", "13.0741, 91.2105, -33.1954, 0.74", "13.1717, 91.3862, -33.3047, 0.74", "13.6795, 92.2883, -33.9434, 0.22", "14.0861, 93.0697, -34.5346, 1.33", "14.4011, 93.7427, -35.0448, 1.77", "14.9687, 95.0341, -36.0164, 0.22", "15.2083, 95.582, -36.416, 0.22", "15.5298, 96.3157, -36.9287, 0.22", "15.8996, 97.1452, -37.4838, 1.92", "16.0424, 97.4755, -37.6863, 2.28", "16.924, 99.4841, -38.7609, 0.22", "17.2684, 100.235, -39.113, 0.22", "17.5176, 100.733, -39.3264, 0.88", "17.5848, 100.85, -39.3696, 0.88", "17.663, 100.966, -39.4066, 0.88", "18.4898, 102.031, -39.7389, 0.22", "19.081, 102.709, -39.9487, 0.22", "19.155, 102.798, -39.9797, 0.22", "19.7811, 103.571, -40.2656, 1.33", "20.0358, 103.898, -40.3873, 2.06", "20.4308, 104.429, -40.6025, 2.06", "21.3602, 105.756, -41.1623, 0.15", "21.6069, 106.115, -41.3195, 0.74", "21.6421, 106.166, -41.3411, 0.74", "21.8163, 106.429, -41.4524, 0.74", "22.3709, 107.288, -41.7829, 0.22", "22.6623, 107.743, -41.931, 0.59", "22.6968, 107.796, -41.9466, 0.59", "23.3064, 108.703, -42.2776, 0.15", "23.7923, 109.457, -42.5708, 1.55", "23.9144, 109.654, -42.6503, 1.92", "23.948, 109.709, -42.6711, 1.92", "24.1104, 109.996, -42.7852, 1.92", "24.9647, 111.552, -43.395, 0.22", "25.1979, 111.925, -43.5468, 0.52", "25.2336, 111.976, -43.5675, 0.52", "25.7795, 112.628, -43.8226, 0.22", "26.2602, 113.149, -44.0418, 1.55", "26.6219, 113.438, -44.1885, 1.55", "27.9428, 114.313, -44.6734, 0.15", "27.9894, 114.342, -44.6913, 0.15", "28.9123, 114.878, -45.0502, 0.15", "30.285, 115.617, -45.5863, 2.21", "32.3293, 116.648, -46.3471, 0.22", "32.5576, 116.764, -46.4312, 0.37", "33.4921, 117.266, -46.7483, 0.22", "33.8241, 117.46, -46.8521, 0.59", "34.0458, 117.601, -46.9135, 0.59", "34.7879, 118.129, -47.0936, 0.22", "35.0711, 118.373, -47.1783, 0.66", "35.8549, 119.033, -47.4466, 0.15", "36.424, 119.519, -47.6588, 1.77", "36.5648, 119.641, -47.7195, 1.77", "37.8957, 120.757, -48.3388, 0.22", "38.4177, 121.135, -48.655, 0.74", "38.9936, 121.497, -49.0648, 0.15", "39.3363, 121.689, -49.3535, 0.74", "39.9017, 122.012, -49.8722, 0.15", "40.4143, 122.318, -50.3649, 2.14", "42.0478, 123.413, -52.0656, 0.37", "42.7079, 123.95, -52.8035, 1.55", "43.9209, 125.092, -54.2485, 0.15", "44.4347, 125.662, -54.9036, 0.15", "44.6764, 125.976, -55.2343, 1.4", "45.4486, 127.12, -56.4189, 0.22", "45.8327, 127.708, -57.0352, 1.33", "45.9016, 127.794, -57.138, 1.62", "46.933, 128.734, -58.4504, 0.15", "47.6323, 129.212, -59.2518, 1.18", "48.836, 129.859, -60.5094, 0.88", "49.9727, 130.326, -61.553, 0.44", "51.029, 130.703, -62.4227, 1.77", "52.1424, 131.069, -63.1977, 0.22", "52.2065, 131.088, -63.2309, 0.22", "52.6096, 131.216, -63.3685, 0.66", "53.4912, 131.556, -63.4971, 0.15", "54.0979, 131.887, -63.5056, 1.11", "54.4646, 132.16, -63.4983, 1.11", "54.5204, 132.209, -63.4963, 1.11", "55.1477, 132.766, -63.4803, 0.22", "55.4382, 133.016, -63.4778, 0.59", "56.1801, 133.646, -63.4802, 0.22", "56.8301, 134.184, -63.5025, 1.4", "56.8871, 134.231, -63.5043, 1.4", "56.9825, 134.307, -63.5069, 1.55", "58.2002, 135.233, -63.5271, 0.22", "58.2528, 135.27, -63.5291, 0.22", "58.4548, 135.41, -63.5381, 0.22", "58.8839, 135.689, -63.5775, 0.81", "58.9374, 135.724, -63.5844, 0.81", "59.2014, 135.911, -63.6356, 0.81", "60.4661, 136.834, -63.9288, 0.22", "60.8997, 137.146, -64.0334, 0.22", "61.8541, 137.818, -64.2688, 1.55", "61.9048, 137.855, -64.2835, 1.55", "63.1555, 138.801, -64.6759, 0.22", "63.6325, 139.166, -64.8368, 0.22", "64.466, 139.809, -65.126, 1.62", "64.6241, 139.931, -65.1783, 1.99", "66.2552, 141.214, -65.6853, 0.22", "66.3119, 141.258, -65.7026, 0.22", "66.9254, 141.733, -65.8833, 0.74", "67.2979, 142.026, -65.9959, 0.74", "69.1465, 143.481, -66.5384, 0.15", "69.8313, 144.011, -66.7245, 1.55", "69.8845, 144.05, -66.7356, 1.55", "70.1857, 144.273, -66.7991, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "7.2518, 78.0019, -25.1724, 0.29", "6.7744, 79.9635, -25.4826, 0.29", "6.66616, 80.4367, -25.5593, 0.44", "6.44059, 81.3981, -25.7074, 0.22", "6.1435, 82.6693, -25.8971, 1.55", "6.04871, 83.0812, -25.9545, 2.21", "5.91133, 83.6824, -26.033, 1.84", "5.76187, 84.4454, -26.1219, 0.96", "5.66227, 84.9385, -26.166, 0.44", "5.64584, 85.013, -26.1697, 0.44", "5.4492, 85.9773, -26.209, 0.29", "5.42783, 86.1144, -26.2134, 0.29", "5.34866, 86.8155, -26.2325, 0.29", "5.28655, 87.509, -26.2511, 0.81", "5.26363, 87.8541, -26.2732, 1.11", "5.21345, 88.5509, -26.3468, 0.88", "5.13, 89.9747, -26.5324, 0.22", "5.09719, 90.6705, -26.6432, 0.81", "5.07731, 91.222, -26.7474, 0.81", "5.01917, 92.8751, -27.0899, 0.22", "4.96928, 94.0883, -27.358, 1.84", "4.93505, 94.7213, -27.5064, 2.21", "4.8956, 95.2728, -27.6413, 2.21", "4.75599, 97.3869, -28.1227, 0.22", "4.71531, 98.1238, -28.2743, 0.81", "4.69898, 98.4727, -28.3342, 0.88", "4.68122, 98.8263, -28.3859, 0.66", "4.60766, 99.8761, -28.5243, 0.22", "4.49045, 101.342, -28.6858, 1.84", "4.46223, 101.79, -28.7261, 2.21", "4.44258, 102.24, -28.7616, 2.21", "4.38896, 104.189, -28.8962, 0.22", "4.37939, 104.884, -28.9416, 0.88", "4.37757, 105.096, -28.9545, 0.88", "4.3681, 106.531, -29.0435, 0.22", "4.37268, 107.799, -29.1536, 0.22", "4.38821, 108.466, -29.2218, 1.33", "4.41654, 108.992, -29.2819, 1.62", "4.42787, 109.194, -29.3081, 1.62", "4.43035, 109.308, -29.3283, 1.62", "4.39772, 111.159, -29.7195, 0.22", "4.34895, 112.516, -30.0304, 0.22", "4.29851, 113.448, -30.249, 1.4", "4.27011, 113.937, -30.3607, 1.69", "4.14206, 116.008, -30.8283, 0.22", "4.08728, 116.706, -30.9687, 0.96", "4.08011, 116.772, -30.979, 0.96", "4.04014, 117.057, -31.0172, 0.81", "3.82487, 118.377, -31.1404, 0.22", "3.7996, 118.535, -31.1479, 0.22", "3.66403, 119.456, -31.1592, 0.22", "3.50508, 120.548, -31.1839, 1.69", "3.45394, 120.906, -31.1952, 2.43", "3.34558, 121.661, -31.2244, 2.36", "3.02022, 124.091, -31.3302, 0.22", "2.92665, 125.024, -31.392, 0.22", "2.91689, 125.168, -31.4053, 0.22", "2.86708, 126.358, -31.5257, 0.22", "2.84711, 127.259, -31.6251, 1.11", "2.85194, 127.803, -31.6894, 1.4", "2.91764, 129.35, -31.8868, 0.22", "2.92099, 129.41, -31.8943, 0.22", "2.95136, 129.821, -31.9365, 0.22", "3.01409, 130.68, -32.0002, 1.55", "3.03801, 131.123, -32.0198, 1.77", "3.04108, 131.19, -32.0208, 1.77", "3.05623, 131.493, -32.0165, 1.77", "3.12906, 132.798, -31.9987, 0.22", "3.16646, 133.698, -31.9884, 0.66", "3.17574, 134.183, -31.9839, 0.66", "3.16533, 135.776, -31.9844, 0.22", "3.16074, 135.921, -31.9849, 0.22", "3.0801, 137.453, -31.9878, 0.22", "2.98603, 138.497, -31.9767, 1.11", "2.90775, 139.121, -31.9557, 1.99", "2.81434, 139.653, -31.9273, 1.55", "2.50278, 140.956, -31.8259, 0.22", "2.45642, 141.129, -31.8101, 0.22", "2.12582, 142.186, -31.69, 0.22", "1.94412, 142.793, -31.6051, 0.88", "1.8902, 142.984, -31.578, 1.18", "1.87486, 143.047, -31.564, 1.18", "1.76838, 143.647, -31.4165, 0.66", "1.71782, 143.985, -31.335, 0.37", "1.57654, 144.866, -31.1354, 0.22", "1.45188, 145.514, -30.9946, 0.59", "1.2211, 146.673, -30.8281, 0.52", "1.08683, 147.32, -30.7609, 0.66", "0.986308, 147.811, -30.7234, 0.22", "0.830826, 148.558, -30.691, 1.47", "0.756222, 148.917, -30.6913, 2.14", "0.328691, 151.09, -30.756, 0.22", "0.318169, 151.149, -30.7599, 0.22", "0.22678, 151.832, -30.7886, 1.11", "0.216079, 151.977, -30.794, 1.47", "0.212524, 152.079, -30.797, 1.47", "0.191706, 152.71, -30.8227, 0.81", "0.171271, 153.232, -30.858, 0.29", "0.113227, 154.778, -30.9937, 0.22", "0.0826938, 155.493, -31.0709, 0.96", "0.0776906, 155.628, -31.0859, 0.96", "0.0728315, 155.772, -31.1005, 0.96", "0.0509009, 156.891, -31.1958, 0.22", "0.0506952, 156.958, -31.2001, 0.22", "0.0626022, 157.644, -31.2285, 0.81", "0.0690751, 157.992, -31.2395, 0.81", "0.0888921, 159.617, -31.273, 0.15", "0.0853113, 160.718, -31.3034, 1.18", "0.0806311, 161.026, -31.3123, 1.47", "0.0807674, 161.083, -31.3177, 1.47", "0.0877018, 161.36, -31.3639, 1.47", "0.137346, 162.867, -31.7015, 0.22", "0.180567, 163.711, -31.9393, 1.11", "0.202034, 164.068, -32.0522, 1.47", "0.369168, 166.028, -32.7655, 0.15", "0.452117, 166.793, -33.0681, 0.81", "0.460449, 166.854, -33.094, 0.81", "0.519691, 167.203, -33.2561, 0.81", "0.528917, 167.254, -33.2783, 0.81", "0.692085, 168.469, -33.7559, 0.22", "0.724336, 168.874, -33.8852, 0.37", "0.754649, 169.498, -34.0649, 0.22", "0.773063, 170.269, -34.2708, 1.18", "0.771667, 170.729, -34.3857, 1.47", "0.734495, 172.473, -34.793, 0.22", "0.702459, 173.243, -34.9517, 1.03", "0.690427, 173.509, -35.0064, 1.03", "0.627136, 175.213, -35.3709, 0.22", "0.608272, 175.829, -35.5006, 0.22", "0.60684, 175.894, -35.5141, 0.22", "0.6023, 176.674, -35.6359, 0.81", "0.604108, 177.156, -35.6979, 0.81", "0.601869, 178.587, -35.8401, 0.22", "0.58536, 179.567, -35.8757, 1.11", "0.578732, 179.777, -35.8756, 1.11", "0.48618, 181.539, -35.8035, 0.22", "0.430171, 182.316, -35.7458, 0.59", "0.313953, 183.569, -35.615, 0.22", "0.185687, 184.63, -35.4683, 1.18", "0.133023, 185.039, -35.4088, 1.62", "-0.0890138, 186.588, -35.1637, 0.22", "-0.17004, 187.068, -35.0832, 0.22", "-0.268151, 187.6, -34.9869, 0.59", "-0.319236, 187.87, -34.9369, 0.59", "-0.333933, 187.946, -34.9248, 0.59", "-0.506034, 188.79, -34.7774, 0.22", "-0.601493, 189.252, -34.6806, 0.52", "-0.626911, 189.391, -34.6476, 0.52", "-0.636595, 189.455, -34.6309, 0.52", "-0.73648, 190.599, -34.3779, 0.22", "-0.77836, 191.481, -34.2157, 1.11", "-0.765279, 191.899, -34.1594, 1.47", "-0.754243, 192.033, -34.1419, 1.47", "-0.701919, 192.503, -34.086, 1.47", "-0.495311, 193.966, -33.9292, 0.22", "-0.485337, 194.022, -33.9246, 0.22", "-0.292071, 195.112, -33.8502, 0.22", "-0.144468, 196.043, -33.8009, 1.11", "-0.0853078, 196.47, -33.7718, 1.55", "-0.032266, 196.884, -33.7392, 1.55", "0.159417, 198.322, -33.601, 0.22", "0.232171, 198.864, -33.5442, 0.74", "0.258367, 199.074, -33.5182, 0.74", "0.491093, 200.89, -33.2749, 0.22", "0.558733, 201.411, -33.1976, 0.74", "0.743551, 202.965, -32.8947, 0.22", "0.762769, 203.129, -32.8552, 0.22", "0.873536, 204.033, -32.6252, 0.74", "0.885669, 204.139, -32.5965, 0.74", "0.942386, 204.699, -32.4361, 1.03", "1.12066, 206.608, -31.8983, 0.15", "1.12569, 206.674, -31.8811, 0.15", "1.2175, 207.845, -31.6216, 0.15", "1.26418, 208.416, -31.5129, 1.03", "1.28964, 208.727, -31.4686, 1.03", "1.34967, 209.659, -31.3922, 0.15", "1.38648, 210.417, -31.3916, 1.11", "1.39538, 210.787, -31.3986, 1.4", "1.39485, 210.845, -31.4013, 1.4", "1.34913, 212.212, -31.5079, 0.22", "1.29792, 212.919, -31.57, 0.59", "1.29118, 212.978, -31.5758, 0.59", "1.25963, 213.185, -31.5946, 0.59", "1.11673, 214.024, -31.6725, 0.22", "1.00469, 214.631, -31.7304, 1.18", "0.872211, 215.241, -31.7928, 1.84", "0.791194, 215.586, -31.8331, 1.47", "0.322343, 217.314, -32.0548, 0.22", "0.121667, 217.963, -32.1472, 0.22", "0.102338, 218.016, -32.1556, 0.22", "-0.157395, 218.626, -32.2786, 0.81", "-0.358624, 219.076, -32.3818, 1.62", "-0.612576, 219.614, -32.5171, 2.28", "-0.708052, 219.816, -32.5702, 2.5", "-0.97556, 220.423, -32.7177, 2.14", "-1.64551, 222.102, -33.1007, 0.22", "-1.84379, 222.67, -33.2234, 0.59", "-1.86435, 222.744, -33.2374, 0.59", "-2.02507, 223.47, -33.3538, 0.22", "-2.12198, 224.019, -33.4177, 0.81", "-2.13422, 224.108, -33.4245, 0.81", "-2.17838, 224.458, -33.4336, 0.81", "-2.33879, 225.532, -33.4541, 0.22", "-2.43568, 226.152, -33.4644, 0.44", "-2.68916, 227.648, -33.4828, 0.15", "-2.7824, 228.2, -33.4855, 0.15", "-2.86313, 228.653, -33.4865, 0.59", "-2.91709, 228.937, -33.4851, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.51498, 39.4811, -7.15377, 1.55", "-8.11451, 41.3457, -8.77659, 1.55", "-8.09404, 41.4373, -8.84711, 1.55", "-7.80271, 42.6753, -9.64246, 1.47", "-7.78824, 42.7348, -9.67413, 1.47", "-7.58135, 43.5679, -10.0736, 1.25", "-7.24125, 44.9481, -10.6385, 1.25", "-7.20178, 45.1126, -10.6768, 1.25", "-6.94275, 46.1379, -10.8673, 0.81", "-6.6508, 47.298, -11.0211, 1.18", "-6.62396, 47.4101, -11.0336, 1.18", "-6.32449, 48.7678, -11.1573, 1.84", "-6.1269, 49.792, -11.2339, 2.14", "-5.95383, 50.8228, -11.3117, 2.14", "-5.80812, 52.0057, -11.4141, 2.14", "-5.80434, 52.0652, -11.4194, 2.14", "-5.79793, 52.7564, -11.4916, 1.77", "-5.85604, 54.0378, -11.6454, 1.77", "-5.95974, 54.9124, -11.7547, 1.47", "-6.17904, 56.015, -11.8851, 1.25", "-6.49012, 57.1408, -12.0325, 1.62", "-6.76434, 57.9523, -12.1483, 1.84", "-6.79109, 58.0184, -12.1587, 1.84", "-7.25253, 58.9692, -12.3454, 1.99", "-7.78425, 60.0316, -12.572, 1.69", "-8.24373, 61.0384, -12.7856, 1.47", "-8.49517, 61.7614, -12.9738, 1.33", "-8.50877, 61.8171, -12.9898, 1.33", "-8.61148, 62.8021, -13.3092, 1.11", "-8.53339, 63.8129, -13.693, 0.88", "-8.31366, 64.6363, -14.0347, 0.96", "-7.84571, 65.8747, -14.5254, 0.81", "-7.80874, 65.969, -14.5592, 0.81", "-7.59722, 66.5592, -14.7498, 0.66", "-7.54475, 66.723, -14.7965, 0.66", "-7.41717, 67.6852, -15.0269, 0.66", "-7.46187, 68.4741, -15.1601, 0.96", "-7.65274, 69.3311, -15.2449, 1.69", "-7.76982, 69.7201, -15.2793, 1.99", "-7.92484, 70.1172, -15.318, 1.99", "-8.31237, 71.0052, -15.4152, 1.84", "-8.34309, 71.0675, -15.4227, 1.84", "-8.88733, 72.143, -15.5802, 2.06", "-9.07137, 72.528, -15.6422, 2.21", "-9.36476, 73.2101, -15.7508, 2.14", "-9.76432, 74.2272, -15.9059, 1.18", "-10.1885, 75.4247, -16.0755, 1.03", "-10.4833, 76.3286, -16.187, 1.03", "-10.734, 77.17, -16.2755, 1.33", "-10.9997, 78.1548, -16.3614, 2.14", "-11.1628, 78.8751, -16.405, 2.65", "-11.3094, 79.6603, -16.4493, 2.65", "-11.4457, 80.6047, -16.5078, 2.65", "-11.4604, 80.7367, -16.5154, 2.65", "-11.5174, 81.3926, -16.5541, 2.36", "-11.5425, 82.1518, -16.6075, 2.06", "-11.5442, 83.1246, -16.6823, 1.4", "-11.5165, 84.1739, -16.7651, 0.81", "-11.4123, 85.8718, -16.8945, 0.66", "-11.2752, 87.291, -16.9898, 0.66", "-11.0731, 88.8228, -17.0788, 1.11", "-11.0613, 88.8943, -17.0828, 1.11", "-10.8713, 89.8312, -17.1281, 1.55", "-10.6131, 90.9144, -17.1776, 1.84", "-10.2897, 92.1438, -17.2374, 2.28", "-10.1381, 92.7148, -17.2646, 2.58", "-9.95541, 93.4485, -17.315, 2.58", "-9.83677, 93.9817, -17.3645, 2.58", "-9.69081, 94.846, -17.4789, 2.36", "-9.60976, 95.5913, -17.6097, 1.92", "-9.60527, 95.6718, -17.6257, 1.92", "-9.56494, 96.8598, -17.86, 0.88", "-9.54908, 98.0185, -18.0742, 0.66", "-9.54486, 99.2201, -18.3033, 0.66", "-9.5426, 99.9968, -18.4631, 0.81", "-9.52447, 100.848, -18.6472, 0.74", "-9.49237, 101.708, -18.8374, 0.59", "-9.45589, 102.57, -19.0186, 1.25", "-9.39759, 103.391, -19.2033, 1.84", "-9.27206, 104.543, -19.4619, 2.5", "-9.17764, 105.234, -19.6261, 2.65", "-9.15861, 105.347, -19.659, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.51498, 39.4811, -7.15377, 0.52", "-8.05409, 41.1362, -7.26767, 0.52", "-8.03594, 41.218, -7.27026, 0.52", "-7.94968, 42.028, -7.26183, 0.52", "-7.97318, 43.5478, -7.19623, 0.52", "-7.9802, 43.6304, -7.19137, 0.52", "-8.04321, 44.0055, -7.16369, 0.66", "-8.09052, 44.1189, -7.13426, 0.66", "-8.43768, 44.7422, -6.95732, 0.52", "-8.75441, 45.1959, -6.81169, 0.66", "-8.80933, 45.2694, -6.78453, 0.66", "-9.13935, 45.7309, -6.59224, 0.59", "-9.63765, 46.4538, -6.26762, 0.29", "-10.0406, 47.0871, -5.96074, 0.29", "-10.1104, 47.2053, -5.89791, 0.29", "-10.5494, 48.0119, -5.4484, 0.59", "-10.8474, 48.5582, -5.15476, 0.81", "-10.8865, 48.6249, -5.1206, 0.81", "-11.1809, 49.0537, -4.92074, 0.81", "-11.2237, 49.1029, -4.89732, 0.81", "-11.6708, 49.5299, -4.69353, 0.81", "-12.4616, 50.2622, -4.36806, 0.37", "-12.9888, 50.8123, -4.10098, 0.37", "-13.3983, 51.2923, -3.84869, 0.59", "-13.7246, 51.7333, -3.60073, 0.81", "-14.2242, 52.4983, -3.13552, 0.29", "-14.686, 53.2863, -2.6304, 0.52", "-15.1571, 54.2112, -2.01231, 1.33", "-15.3553, 54.6458, -1.71713, 1.55", "-15.9109, 55.965, -0.810208, 0.29", "-16.3477, 57.0118, -0.0908033, 1.55", "-16.4615, 57.2488, 0.0615093, 1.84", "-16.5316, 57.3583, 0.12217, 1.84", "-16.7608, 57.645, 0.225569, 1.84", "-16.8061, 57.6972, 0.234024, 1.84", "-17.1753, 58.0909, 0.213701, 1.62", "-17.946, 58.8688, 0.0782836, 0.37", "-18.594, 59.533, -0.0863724, 0.29", "-19.0895, 60.0785, -0.267401, 0.59", "-19.4131, 60.4448, -0.422237, 0.59", "-19.642, 60.7087, -0.544847, 0.59", "-19.947, 61.0733, -0.73077, 0.52", "-20.5112, 61.8544, -1.11127, 0.29", "-20.8893, 62.4429, -1.40529, 0.74", "-21.3272, 63.1458, -1.72454, 0.66", "-21.5663, 63.531, -1.87909, 0.88", "-21.9847, 64.2066, -2.11323, 0.66", "-23.1107, 65.9877, -2.61728, 2.14", "-23.5421, 66.6391, -2.75901, 2.14", "-24.4375, 67.9462, -2.97993, 0.22", "-24.9149, 68.6353, -3.06239, 0.22", "-25.4201, 69.3623, -3.12213, 0.22", "-25.9107, 70.0519, -3.11328, 0.88", "-26.1644, 70.3943, -3.07029, 1.03", "-26.4757, 70.8065, -2.98074, 0.74", "-27.2178, 71.8074, -2.71042, 0.22", "-27.6605, 72.4069, -2.51777, 0.22", "-28.2518, 73.2164, -2.26094, 0.22", "-28.3309, 73.3262, -2.22721, 0.22", "-28.8902, 74.1377, -1.99538, 0.22", "-29.7243, 75.3274, -1.67518, 1.69", "-30.0055, 75.7633, -1.5856, 2.21", "-30.4664, 76.509, -1.47123, 2.21", "-30.4994, 76.5706, -1.46365, 2.21", "-31.1329, 77.958, -1.29662, 0.22", "-31.4854, 78.8764, -1.18733, 0.22", "-32.0136, 80.4243, -0.940057, 0.22", "-32.0517, 80.5416, -0.918336, 0.22", "-32.4087, 81.6454, -0.66852, 1.11", "-32.6722, 82.4571, -0.491265, 1.11", "-32.9011, 83.1835, -0.316459, 0.59", "-33.3338, 84.5555, 0.0359457, 1.69", "-33.4536, 84.9094, 0.131276, 1.77", "-34.252, 87.1799, 0.707413, 0.22", "-34.9124, 89.0047, 1.18663, 0.22", "-35.1581, 89.6978, 1.38441, 1.03", "-35.3402, 90.222, 1.54108, 1.03", "-35.5023, 90.6901, 1.68495, 0.81", "-35.9772, 91.9346, 2.15976, 0.22", "-36.5659, 93.3025, 2.78434, 1.11", "-36.6887, 93.5506, 2.90816, 1.62", "-36.8614, 93.8893, 3.09953, 1.62", "-36.8892, 93.9429, 3.1342, 1.62", "-37.8889, 95.869, 4.52476, 0.22", "-38.2566, 96.5699, 5.06267, 0.81", "-38.4226, 96.8804, 5.30172, 0.81", "-39.2124, 98.3791, 6.47437, 0.22", "-39.2419, 98.438, 6.52137, 0.22", "-39.7115, 99.448, 7.33941, 1.18", "-39.8782, 99.95, 7.78035, 1.55", "-44.5267, 110.679, 8.98188, 1.55", "-49.0865, 121.331, 10.9056, 1.55", "-55.0805, 130.995, 13.4894, 1.55", "-60.5809, 140.493, 17.3798, 1.55", "-66.3335, 148.446, 23.4381, 1.55", "-71.8641, 156.987, 28.9519, 1.55", "-74.8567, 166.651, 34.7388, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "1.37429, 58.8398, 0.50346, 0.88", "-0.0511718, 59.3184, 1.69419, 0.88", "-0.139098, 59.3368, 1.76676, 0.88", "-1.17629, 59.431, 2.574, 0.88", "-1.21873, 59.4325, 2.60612, 0.88", "-3.23185, 59.5029, 4.62163, 0.59", "-3.27424, 59.5056, 4.66696, 0.59", "-3.87187, 59.5395, 5.35298, 1.18", "-4.66948, 59.6082, 6.30071, 1.18", "-4.70222, 59.6123, 6.34252, 1.18", "-7.2844, 60.3534, 9.95, 0.22", "-7.55345, 60.5068, 10.3819, 0.29", "-8.04404, 60.8755, 11.2192, 1.11", "-8.07203, 60.9039, 11.2708, 1.11", "-8.34977, 61.2557, 11.8406, 1.11", "-8.84966, 61.9926, 12.8796, 0.22", "-9.07009, 62.5984, 13.3695, 0.59", "-9.0821, 62.6382, 13.4049, 0.59", "-9.13106, 62.8826, 13.6247, 1.11", "-15.1406, 65.1731, 19.7771, 1.11", "-22.5011, 67.6033, 24.157, 1.11", "-28.4864, 71.0262, 29.8372, 1.11", "-35.0013, 74.6725, 34.7572, 1.11", "-41.3045, 78.7888, 39.616, 1.11", "-47.2666, 83.3952, 44.506, 1.11", "-53.4075, 88.3222, 48.8614, 1.11", "-59.5221, 92.4376, 53.9564, 1.11", "-64.937, 96.504, 59.8211, 1.11", "-70.57, 100.452, 65.5523, 1.11", "-75.4141, 105.522, 71.2027, 1.11", "-80.2677, 111.007, 76.4814, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "1.37429, 58.8398, 0.50346, 0.52", "1.51343, 59.7806, 1.02395, 0.52", "1.56943, 60.5977, 1.42282, 0.52", "1.56761, 60.6381, 1.43872, 0.44", "1.48851, 61.3229, 1.64878, 0.44", "1.48066, 61.3795, 1.66169, 0.44", "1.40936, 61.9138, 1.75361, 0.66", "1.39831, 61.9638, 1.7588, 0.66", "1.27394, 62.476, 1.81847, 0.66", "1.17654, 62.8941, 1.89567, 0.44", "1.04314, 63.5058, 2.08138, 0.44", "0.934602, 64.0508, 2.29245, 0.96", "0.830717, 64.8276, 2.64508, 0.81", "0.821712, 64.9438, 2.70237, 0.81", "0.835895, 65.7406, 3.13036, 0.66", "0.918201, 66.4735, 3.58336, 0.44", "0.93894, 66.5629, 3.64337, 0.44", "1.13432, 67.1166, 4.02436, 0.29", "1.2746, 67.3958, 4.22297, 0.29", "1.52096, 67.8277, 4.53317, 1.11", "1.89125, 68.3873, 4.94767, 1.47", "2.09791, 68.7064, 5.19207, 1.47", "2.11562, 68.7363, 5.21684, 1.47", "2.48786, 69.417, 5.83553, 0.88", "2.7461, 69.9278, 6.3195, 0.52", "2.75982, 69.9571, 6.34723, 0.52", "2.96235, 70.389, 6.7345, 0.74", "2.97685, 70.4187, 6.76145, 0.74", "3.13653, 70.7047, 7.00058, 0.74", "3.15692, 70.7349, 7.02292, 0.74", "3.34964, 70.9843, 7.18578, 0.74", "3.80649, 71.5919, 7.50952, 0.37", "4.04901, 71.9399, 7.65506, 0.37", "4.34691, 72.4329, 7.81859, 0.52", "4.55806, 72.8657, 7.94206, 0.37", "4.83492, 73.5835, 8.11694, 0.74", "4.97341, 74.1284, 8.22014, 1.11", "5.04624, 74.6527, 8.29079, 0.96", "5.05674, 75.3129, 8.36376, 0.44", "4.98609, 76.0886, 8.43693, 0.44", "4.92814, 76.4634, 8.47276, 0.29", "4.82597, 77.0279, 8.52814, 0.29", "4.81813, 77.0785, 8.53314, 0.29", "4.76276, 77.6158, 8.58755, 0.37", "4.74059, 78.2817, 8.64973, 0.52", "4.77486, 78.8954, 8.69593, 1.11", "4.82786, 79.3189, 8.73431, 1.69", "4.87474, 79.6253, 8.76177, 1.77", "4.91613, 79.983, 8.78819, 1.69", "4.94665, 80.3437, 8.80953, 1.47", "4.94827, 80.5861, 8.81643, 1.47", "4.9421, 80.6388, 8.81528, 1.47", "4.74483, 81.5647, 8.77605, 0.29", "4.63046, 81.9813, 8.75218, 0.66", "4.61581, 82.0305, 8.75095, 0.66", "4.54981, 82.2627, 8.75473, 0.37", "4.43202, 82.7568, 8.79003, 0.29", "4.32419, 83.3492, 8.85783, 0.29", "4.31891, 83.3998, 8.8658, 0.29", "4.30133, 84.0337, 8.97218, 1.03", "4.31314, 84.567, 9.06085, 1.69", "4.35918, 85.1342, 9.14862, 2.14", "4.38534, 85.3928, 9.18457, 2.28", "4.41311, 85.8066, 9.21698, 1.77", "4.42956, 86.2863, 9.22554, 1.18", "4.42636, 86.7868, 9.19808, 0.52", "4.40425, 87.2699, 9.15314, 0.37", "4.37762, 87.6046, 9.09618, 0.37", "4.3179, 88.3023, 8.95855, 0.74", "4.30154, 88.5571, 8.90327, 1.25", "4.28044, 88.9751, 8.80343, 1.4", "4.26707, 89.5501, 8.66245, 0.81", "4.27661, 90.7087, 8.38876, 0.37", "4.31021, 91.342, 8.24746, 0.37", "4.39573, 92.3657, 8.03834, 0.29", "4.47877, 93.1459, 7.88728, 1.84", "4.51994, 93.4374, 7.83614, 2.28", "4.60063, 93.8764, 7.77081, 2.14", "4.80586, 94.8178, 7.68297, 0.52", "4.93, 95.3481, 7.64684, 0.74", "5.01485, 95.7168, 7.6364, 0.74", "5.12541, 96.2342, 7.63708, 0.22", "5.1757, 96.5579, 7.63791, 0.22", "5.22326, 97.2121, 7.62125, 0.74", "5.21737, 97.3806, 7.60789, 0.74", "5.16836, 97.9349, 7.53948, 0.22", "5.11848, 98.3486, 7.47693, 0.74", "5.07213, 98.6929, 7.41782, 0.96", "4.98296, 99.4959, 7.27625, 0.37", "4.91872, 100.472, 7.10323, 1.25", "4.91792, 100.813, 7.05014, 1.55", "4.93169, 101.082, 7.02132, 1.77", "4.9634, 101.533, 6.99849, 1.77", "5.00906, 102.131, 6.99702, 0.88", "5.03875, 102.525, 7.01567, 0.52", "5.07447, 103.142, 7.06817, 0.44", "5.10986, 103.931, 7.11713, 0.29", "5.12957, 104.898, 7.15714, 1.25", "5.12856, 105.321, 7.16797, 2.21", "5.12229, 105.61, 7.17002, 2.5", "5.10491, 106.211, 7.16298, 2.28", "5.05715, 107.227, 7.09109, 0.66", "5.03328, 107.774, 7.02576, 0.52", "5.01162, 108.363, 6.94122, 0.66", "4.99878, 108.789, 6.87694, 0.96", "4.98625, 109.328, 6.78848, 0.96", "4.96749, 110.627, 6.55856, 0.22", "4.97201, 111.167, 6.4726, 1.18", "4.98899, 111.465, 6.42332, 0.88", "5.03235, 111.867, 6.35578, 0.74", "5.11919, 112.385, 6.27497, 0.29", "5.13174, 112.435, 6.26889, 0.29", "5.30067, 112.863, 6.25075, 0.81", "5.3183, 112.911, 6.24615, 0.81", "5.39879, 113.212, 6.20752, 1.03", "5.4288, 113.365, 6.185, 1.03", "5.44781, 113.573, 6.15127, 1.03", "5.42456, 114.512, 5.93859, 0.29", "5.34089, 115.2, 5.74726, 0.29", "5.27252, 115.631, 5.62028, 0.59", "5.25316, 115.735, 5.58898, 0.59", "5.18624, 116.129, 5.47468, 0.37", "5.10347, 116.821, 5.29905, 0.29", "5.06281, 117.575, 5.15129, 1.11", "5.07261, 117.883, 5.10739, 1.69", "5.1022, 118.218, 5.07122, 1.84", "5.16406, 118.75, 5.02905, 1.62", "5.27819, 119.505, 4.99672, 0.74", "5.40439, 120.219, 4.99886, 0.52", "5.41412, 120.272, 4.99969, 0.52", "5.54396, 121.053, 5.00944, 0.37", "5.55181, 121.112, 5.00915, 0.37", "5.58601, 121.603, 4.99511, 1.25", "5.58843, 121.948, 4.95225, 0.96", "5.58758, 121.999, 4.94298, 0.96", "5.57576, 122.466, 4.84831, 0.74", "5.5646, 122.947, 4.73101, 0.59", "5.55286, 123.344, 4.63071, 0.74", "5.50123, 124.392, 4.35929, 0.37", "5.46121, 125.037, 4.19187, 0.74", "5.42412, 125.593, 4.05017, 0.52", "5.35908, 126.306, 3.85737, 0.29", "5.2881, 126.863, 3.69257, 0.81", "5.22327, 127.233, 3.56883, 1.18", "5.21248, 127.274, 3.55339, 1.18", "5.15452, 127.477, 3.46945, 1.18", "5.00111, 128.101, 3.22933, 1.18", "4.89628, 128.636, 3.0511, 0.44", "4.81606, 129.226, 2.87576, 0.29", "4.80618, 129.343, 2.84626, 0.29", "4.78004, 130.159, 2.68334, 0.29", "4.80912, 131.282, 2.52888, 1.62", "4.83414, 131.669, 2.49945, 2.65", "4.86114, 132.055, 2.48445, 2.87", "4.8929, 132.485, 2.47699, 2.36", "4.93246, 133.084, 2.47093, 1.69", "4.98475, 134.028, 2.45757, 0.52", "5.0274, 134.768, 2.44746, 0.52", "5.04452, 135.14, 2.438, 0.81", "5.06454, 135.671, 2.41656, 0.44", "5.09199, 136.429, 2.37576, 0.44", "5.10849, 136.991, 2.33728, 0.37", "5.11091, 137.042, 2.33327, 0.37", "5.1722, 137.689, 2.27877, 0.37", "5.1853, 137.783, 2.27127, 0.37", "5.29693, 138.456, 2.21871, 1.62", "5.37755, 138.892, 2.19042, 2.36", "5.44285, 139.228, 2.17392, 2.36", "5.66161, 140.314, 2.13005, 0.29", "5.77252, 140.837, 2.11309, 0.29", "5.88755, 141.373, 2.10316, 0.37", "6.04087, 142.062, 2.09894, 0.37", "6.10136, 142.337, 2.08932, 0.59", "6.15921, 142.621, 2.06512, 0.59", "6.16698, 142.664, 2.0588, 0.59", "6.32467, 143.728, 1.84274, 0.29", "6.49941, 145.037, 1.52055, 0.29", "6.5757, 145.667, 1.33506, 0.96", "6.63578, 146.228, 1.14808, 1.18", "6.66805, 146.662, 0.990894, 0.66", "6.68405, 147.091, 0.827106, 0.44", "6.6825, 147.137, 0.806612, 0.44", "6.63685, 147.656, 0.595603, 0.22", "6.62481, 147.769, 0.561351, 0.22", "6.5474, 148.606, 0.384531, 1.47", "6.51804, 148.972, 0.328145, 2.28", "6.4976, 149.299, 0.290303, 2.58", "6.44715, 150.231, 0.212479, 0.29", "6.42052, 150.742, 0.188037, 0.22", "6.39978, 151.266, 0.175959, 0.22", "6.38597, 151.704, 0.17243, 0.22", "6.3558, 152.43, 0.169672, 1.33", "6.34469, 152.625, 0.170259, 1.62", "6.32383, 152.886, 0.162756, 1.62", "6.25711, 153.472, 0.110998, 0.37", "6.17358, 154.013, 0.0383608, 0.22", "6.12552, 154.288, -0.00154616, 0.22", "6.0724, 154.564, -0.0435356, 0.52", "5.96384, 155.171, -0.132692, 0.29", "5.80498, 156.216, -0.275437, 0.29", "5.73533, 156.793, -0.345739, 1.03", "5.71265, 157.162, -0.380231, 1.33", "5.71274, 157.325, -0.390939, 1.33", "5.73163, 157.664, -0.402632, 1.18", "5.78195, 158.152, -0.400039, 0.96", "5.8382, 158.519, -0.393711, 0.37", "5.95125, 159.165, -0.378615, 0.22", "6.05464, 159.746, -0.363777, 0.22", "6.15598, 160.351, -0.348764, 1.11", "6.20914, 160.688, -0.349715, 1.92", "6.25201, 160.966, -0.363805, 2.5", "6.25923, 161.017, -0.368767, 2.5", "6.29708, 161.33, -0.418564, 2.5", "6.33724, 161.764, -0.508546, 2.36", "6.4158, 162.787, -0.759103, 0.29", "6.44869, 163.329, -0.902107, 0.29", "6.45172, 163.413, -0.924343, 0.29", "6.46363, 163.976, -1.08189, 1.33", "6.46747, 164.303, -1.17343, 1.55", "6.46742, 164.347, -1.18527, 1.55", "6.46449, 164.667, -1.25743, 1.25", "6.49042, 165.186, -1.34412, 0.66", "6.56594, 166.157, -1.46472, 0.29", "6.62494, 166.716, -1.51424, 0.88", "6.66085, 167.003, -1.53366, 1.11", "6.71666, 167.499, -1.56011, 0.96", "6.78635, 168.492, -1.57108, 0.29", "6.81512, 169.56, -1.54864, 0.29", "6.80274, 170.253, -1.51708, 1.33", "6.7809, 170.799, -1.49493, 1.92", "6.74201, 171.401, -1.46881, 2.21", "6.59171, 173.061, -1.39406, 0.37", "6.47816, 174.01, -1.35094, 0.37", "6.36246, 174.914, -1.31032, 0.37", "6.27477, 175.576, -1.28455, 0.22", "6.18348, 176.304, -1.26114, 1.33", "6.15375, 176.57, -1.25565, 2.06", "6.11983, 176.834, -1.25818, 2.21", "6.01914, 177.464, -1.26648, 1.69", "5.82909, 178.464, -1.28455, 0.22", "5.71849, 178.986, -1.29705, 0.81", "5.65585, 179.297, -1.30906, 0.81", "5.53033, 180.099, -1.34506, 0.22", "5.47454, 180.63, -1.37359, 0.81", "5.46905, 180.75, -1.38056, 0.81", "5.47562, 181.13, -1.40431, 0.81", "5.4972, 181.454, -1.42239, 0.74", "5.58419, 182.258, -1.45924, 0.22", "5.6666, 182.859, -1.48968, 0.81", "5.70192, 183.143, -1.50569, 1.03", "5.74668, 183.571, -1.53156, 0.44", "5.81039, 184.37, -1.58229, 0.29", "5.85045, 185.044, -1.62939, 0.29", "5.8763, 185.879, -1.68848, 1.55", "5.88643, 186.138, -1.7076, 1.92", "5.88933, 186.198, -1.71214, 1.92", "5.9012, 186.463, -1.73216, 1.92", "5.95604, 188.082, -1.85995, 0.22", "5.96448, 188.837, -1.91985, 0.66", "5.959, 189.135, -1.94227, 1.03", "5.93521, 189.582, -1.98, 1.03", "5.88706, 190.083, -2.02557, 0.81", "5.80969, 190.611, -2.07735, 0.37", "5.76365, 190.838, -2.0997, 0.37", "5.68052, 191.247, -2.14056, 0.37", "5.56692, 191.825, -2.19782, 0.29", "5.45011, 192.502, -2.26179, 0.29", "5.44386, 192.553, -2.26646, 0.29", "5.3625, 193.461, -2.3412, 0.22", "5.35932, 193.52, -2.346, 0.22", "5.34749, 194.048, -2.3884, 0.22", "5.34941, 194.108, -2.39457, 0.22", "5.40347, 194.753, -2.47139, 1.47", "5.4384, 195.071, -2.51612, 1.84", "5.44358, 195.114, -2.52286, 1.84", "5.48254, 195.426, -2.57163, 1.84", "5.60725, 196.376, -2.71905, 0.22", "5.71687, 197.283, -2.85463, 0.22", "5.76435, 197.707, -2.90695, 0.88", "5.78963, 198.023, -2.93984, 1.18", "5.80214, 198.349, -2.96543, 0.96", "5.80087, 198.402, -2.96796, 0.96", "5.73415, 198.873, -2.96865, 0.37", "5.65537, 199.266, -2.96347, 0.37", "5.58147, 199.686, -2.95067, 0.37", "5.5525, 199.905, -2.94477, 0.29", "5.51317, 200.378, -2.93438, 0.22", "5.49945, 200.671, -2.92994, 0.52", "5.49844, 201.278, -2.92646, 0.22", "5.51857, 201.751, -2.93057, 0.22", "5.56267, 202.18, -2.94751, 1.11", "5.6124, 202.578, -2.98928, 1.47", "5.61851, 202.635, -2.99868, 1.47", "5.6407, 202.908, -3.05633, 1.33", "5.6424, 202.985, -3.07615, 1.33", "5.62007, 203.654, -3.26141, 0.74", "5.59156, 204.427, -3.48125, 0.29", "5.57725, 204.864, -3.59963, 0.37", "5.57704, 204.909, -3.61052, 0.37", "5.58347, 205.278, -3.68718, 0.37", "5.60502, 205.816, -3.78147, 0.22", "5.65131, 206.453, -3.87124, 1.11", "5.69465, 206.836, -3.92067, 1.4", "5.7448, 207.195, -3.9696, 1.18", "5.81684, 207.68, -4.04144, 0.44", "5.94582, 208.441, -4.17417, 0.22", "6.0525, 208.948, -4.26284, 0.74", "6.12076, 209.258, -4.31094, 1.33", "6.13051, 209.3, -4.31727, 1.33", "6.25077, 209.833, -4.38729, 1.62", "6.31515, 210.122, -4.41847, 1.62", "6.5793, 211.312, -4.51283, 0.29", "6.7415, 212.102, -4.56124, 0.29", "6.75035, 212.153, -4.56432, 0.29", "6.86146, 213.027, -4.61363, 0.29", "6.8882, 213.457, -4.63332, 1.03", "6.88821, 213.517, -4.63584, 1.03", "6.85535, 214.004, -4.66283, 1.18", "6.76905, 214.872, -4.71501, 0.29", "6.69735, 215.564, -4.75418, 0.29", "6.62469, 216.202, -4.78929, 1.18", "6.59685, 216.477, -4.80226, 1.47", "6.55899, 216.891, -4.81858, 1.25", "6.53643, 217.23, -4.8275, 1.33", "6.50842, 218.14, -4.83434, 0.22", "6.51179, 218.251, -4.83466, 0.22", "6.60256, 219.072, -4.81415, 0.22", "6.61184, 219.13, -4.81129, 0.22", "6.71976, 219.695, -4.77265, 0.74", "6.77518, 219.965, -4.7505, 1.18", "6.82723, 220.291, -4.72452, 1.18", "6.9329, 221.256, -4.6591, 0.22", "6.93695, 221.308, -4.65589, 0.22", "6.96919, 221.833, -4.62791, 0.66", "6.98766, 222.107, -4.62913, 0.66", "7.07205, 223.065, -4.67357, 0.22", "7.12471, 223.595, -4.71426, 1.25", "7.1762, 224.062, -4.76248, 1.55", "7.24518, 224.579, -4.81835, 1.69", "7.41052, 225.624, -4.93869, 0.29", "7.58296, 226.649, -5.05851, 0.22", "7.66155, 227.089, -5.11118, 0.66", "7.72082, 227.407, -5.14532, 0.81", "7.72943, 227.458, -5.15, 0.81", "7.89396, 228.547, -5.22266, 0.22", "7.98032, 229.186, -5.23909, 1.03", "8.00023, 229.35, -5.24604, 1.33", "8.11341, 230.332, -5.29233, 0.22", "8.1606, 230.761, -5.31243, 0.81", "8.19655, 231.131, -5.32913, 1.03", "8.22188, 231.434, -5.342, 0.74", "8.2985, 232.585, -5.39459, 0.22", "8.31891, 233.133, -5.42109, 0.44", "8.3133, 233.796, -5.45648, 0.22", "8.30221, 234.386, -5.48638, 1.11", "8.29178, 234.705, -5.50125, 1.33", "8.27406, 235.195, -5.5222, 0.37", "8.25227, 235.832, -5.54244, 0.15", "8.24705, 236.312, -5.5604, 0.74", "8.25118, 236.365, -5.56242, 0.74", "8.27931, 236.578, -5.57047, 0.74", "8.41991, 237.413, -5.60105, 0.22", "8.50917, 237.88, -5.61735, 1.18", "8.57752, 238.213, -5.63006, 1.62", "8.87736, 239.712, -5.69439, 0.22", "8.96707, 240.186, -5.71627, 0.29", "8.97601, 240.238, -5.71881, 0.29", "9.07123, 240.872, -5.74972, 0.29", "9.15526, 241.487, -5.78338, 0.59", "9.19683, 241.909, -5.81732, 1.11", "9.20169, 241.981, -5.82412, 1.11", "9.23667, 242.402, -5.86231, 1.55", "9.27456, 242.862, -5.90312, 1.55", "9.27793, 242.906, -5.90684, 1.55", "9.3718, 244.341, -6.01911, 0.22", "9.44036, 245.379, -6.09111, 0.22", "9.51537, 246.099, -6.13022, 1.4", "9.53712, 246.264, -6.13698, 1.77", "9.60635, 246.742, -6.151, 1.4", "9.70898, 247.318, -6.15712, 0.74", "9.87489, 248.072, -6.14754, 0.29", "10.2184, 249.419, -6.12372, 0.22", "10.3667, 249.955, -6.11247, 0.66", "10.4435, 250.211, -6.10669, 0.66", "10.6604, 250.861, -6.08803, 0.22", "10.6774, 250.911, -6.0852, 0.22", "10.8088, 251.34, -6.04826, 0.52", "10.8223, 251.397, -6.04155, 0.52", "10.8819, 251.658, -6.00667, 0.52", "10.9698, 252.023, -5.93121, 0.22", "11.1475, 252.697, -5.75049, 1.03", "11.2591, 253.048, -5.63537, 1.62", "11.3613, 253.356, -5.52646, 1.47", "11.5061, 253.798, -5.3582, 1.33", "11.8378, 254.863, -4.91377, 0.22", "12.0505, 255.552, -4.6094, 1.18", "12.3293, 256.413, -4.21535, 0.22", "12.4474, 256.775, -4.0426, 0.22", "12.6077, 257.265, -3.80326, 0.81", "12.9545, 258.31, -3.29306, 0.22", "12.9678, 258.355, -3.27234, 0.22", "13.0552, 258.689, -3.11856, 0.81", "13.066, 258.735, -3.0983, 0.81", "13.1273, 258.934, -3.00543, 1.11", "13.2566, 259.242, -2.88797, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-38.0798, -47.0459, 17.7924, 0.29", "-39.2348, -47.1393, 17.7498, 0.29", "-40.6482, -47.2091, 17.8591, 0.29", "-41.3245, -47.3024, 17.9078, 0.59", "-42.3722, -47.5864, 17.9606, 0.59", "-42.4718, -47.6264, 17.9595, 0.59", "-44.0614, -48.3902, 17.8803, 0.59", "-44.1174, -48.4185, 17.8824, 0.59", "-44.937, -48.8541, 18.0206, 0.37", "-45.6065, -49.2641, 18.1651, 0.29", "-46.1915, -49.6603, 18.2884, 0.29", "-46.2351, -49.6911, 18.2982, 0.29", "-47.3238, -50.5329, 18.5862, 0.74", "-47.6174, -50.7457, 18.7039, 1.03", "-48.3759, -51.2867, 19.1319, 0.29", "-48.4597, -51.3507, 19.1847, 0.29", "-48.9503, -51.7723, 19.5035, 0.37", "-49.2871, -52.1008, 19.6999, 0.52", "-49.5308, -52.3959, 19.8126, 0.52", "-50.0215, -52.926, 19.8835, 0.29", "-50.5902, -53.397, 19.7811, 0.29", "-50.9231, -53.6033, 19.6717, 0.59", "-51.1564, -53.716, 19.5726, 0.88", "-51.3893, -53.8202, 19.4647, 1.03", "-52.5095, -54.2902, 19.0017, 0.29", "-53.2136, -54.5629, 18.7505, 0.44", "-53.6401, -54.747, 18.6435, 0.74", "-53.7199, -54.7918, 18.6312, 0.74", "-54.194, -55.0834, 18.5861, 0.66", "-55.0044, -55.6389, 18.5816, 0.66", "-55.0528, -55.679, 18.59, 0.66", "-55.429, -56.0303, 18.6731, 0.29", "-56.2096, -56.7949, 18.8909, 0.22", "-63.9422, -61.0269, 20.6969, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-38.0798, -47.0459, 17.7924, 0.74", "-39.4663, -46.1507, 18.2519, 0.74", "-41.1554, -45.0519, 18.6696, 0.66", "-41.2627, -44.9821, 18.6962, 0.66", "-41.7628, -44.6568, 18.8198, 0.66", "-41.8221, -44.6182, 18.8345, 0.66", "-42.2043, -44.3696, 18.929, 0.52", "-42.4908, -44.093, 18.9079, 0.52", "-51.0924, -39.4213, 20.504, 0.52", "-59.0806, -33.7481, 22.2617, 0.52", "-67.3054, -29.4442, 25.6583, 0.52", "-74.2221, -23.772, 29.9386, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.79978, -23.689, 1.12385, 0.96", "-7.52312, -25.5325, 1.17281, 0.96", "-8.16174, -27.3701, 1.21645, 0.96", "-8.21954, -27.5796, 1.22082, 0.96", "-8.45856, -28.6581, 1.20878, 0.96", "-8.81993, -30.5103, 1.16064, 1.11", "-9.19377, -32.7271, 1.02059, 1.11", "-9.2039, -32.8335, 1.01201, 1.11", "-9.33173, -35.0439, 0.80043, 1.03", "-9.40141, -36.6394, 0.626276, 1.99", "-9.40309, -36.7455, 0.611628, 1.99", "-9.38598, -38.2092, 0.325473, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.79978, -23.689, 1.12385, 1.92", "-6.47465, -26.4489, 1.96296, 1.92", "-6.1611, -28.9338, 2.71431, 1.92", "-5.86323, -31.1948, 3.39206, 1.92", "-5.59287, -33.2918, 4.00569, 2.14", "-5.32146, -35.2593, 4.58114, 1.62", "-5.01596, -37.2319, 5.16215, 1.99", "-4.75947, -38.5589, 5.54336, 2.73", "-4.42284, -40.0305, 5.99484, 2.36", "-4.01321, -41.6532, 6.57006, 1.99", "-3.43569, -43.7543, 7.41121, 1.92", "-3.05972, -44.9969, 7.96834, 2.28", "-2.68692, -46.2331, 8.58871, 2.5", "-2.35839, -47.4061, 9.2349, 2.58", "-1.92025, -49.2932, 10.3932, 1.69", "-1.9074, -49.3632, 10.4388, 1.69", "-1.73559, -51.0333, 11.4995, 1.47", "-1.67954, -53.3905, 12.9, 1.25", "-1.74147, -54.7225, 13.6172, 1.62", "-1.89098, -56.1455, 14.2836, 1.62", "-2.12562, -57.6901, 14.8813, 1.25", "-2.48975, -59.472, 15.459, 1.25", "-2.98879, -61.222, 15.8646, 1.77", "-3.33708, -62.2107, 15.9785, 1.92", "-3.76458, -63.3391, 16.0191, 1.92", "-4.20757, -64.4393, 15.9951, 2.06", "-4.78796, -65.7659, 15.9247, 1.92", "-5.53868, -67.4417, 15.8043, 1.77", "-6.33174, -69.2424, 15.6572, 1.55", "-7.27588, -71.4335, 15.4903, 1.4", "-8.02333, -73.1785, 15.4072, 1.4", "-8.63596, -74.681, 15.3884, 1.84", "-9.0721, -75.8488, 15.4563, 1.77", "-9.57321, -77.4224, 15.6784, 1.25", "-9.59981, -77.5308, 15.7034, 1.25", "-9.96701, -79.5404, 16.3259, 0.88", "-10.0588, -80.5074, 16.6892, 1.62", "-10.0868, -82.2453, 17.4024, 1.92", "-10.0279, -83.7663, 18.0304, 1.92", "-9.9376, -85.2064, 18.5882, 1.77", "-9.93124, -85.3013, 18.6204, 1.77", "-9.77869, -87.3011, 19.2024, 1.62", "-9.66181, -88.9268, 19.575, 1.33", "-9.54882, -90.4654, 19.8446, 1.18", "-9.45363, -91.9386, 20.0677, 1.18", "-9.35768, -93.6133, 20.2874, 1.55", "-9.27975, -95.6837, 20.4856, 1.62", "-9.26904, -97.4947, 20.5881, 2.14", "-9.29961, -98.8702, 20.6339, 2.36", "-9.35166, -100.175, 20.6614, 2.58", "-9.39881, -101.144, 20.6858, 3.02", "-9.53891, -103.455, 20.8003, 2.21", "-9.65924, -105.486, 20.9672, 1.77", "-9.76011, -107.314, 21.1817, 1.77", "-9.84933, -109.332, 21.5088, 1.84", "-9.92681, -111.674, 22.0641, 1.84", "-9.97351, -114.017, 22.7975, 1.18", "-9.96431, -116.418, 23.7587, 0.96", "-9.96441, -116.51, 23.8062, 0.96", "-10.0068, -118.038, 24.8582, 1.33", "-10.0797, -119.531, 26.1117, 1.84", "-10.1798, -120.673, 27.165, 1.84", "-10.3007, -121.793, 28.1809, 1.77", "-10.5429, -123.881, 29.8963, 1.69", "-10.7388, -125.926, 31.2761, 0.74", "-10.8346, -127.143, 31.8982, 0.74", "-10.9261, -128.696, 32.5028, 1.18", "-10.98, -130.193, 32.9205, 1.47", "-10.9834, -131.695, 33.1112, 1.62", "-10.9407, -132.845, 33.0655, 1.92", "-10.9134, -133.771, 32.9578, 1.92", "-10.9131, -133.855, 32.9481, 1.92", "-10.9384, -134.967, 32.8475, 1.92", "-11.0413, -136.565, 32.7682, 1.33", "-11.2065, -138.139, 32.7017, 1.47", "-11.396, -139.735, 32.6481, 1.92", "-11.5254, -140.908, 32.6274, 1.92", "-11.6846, -142.48, 32.6352, 1.99", "-11.8311, -144.429, 32.7146, 1.99", "-11.9206, -146.668, 32.8836, 1.99", "-11.9232, -147.197, 32.9468, 2.36", "-11.8938, -148.457, 33.1165, 1.62", "-11.8328, -149.788, 33.317, 1.25", "-11.7243, -151.438, 33.5873, 1.11", "-11.6438, -152.834, 33.813, 0.81", "-11.5827, -154.651, 34.1089, 0.66", "-11.6077, -156.227, 34.3321, 1.55", "-11.6135, -156.33, 34.345, 1.55", "-11.7141, -157.165, 34.4933, 2.21", "-11.9162, -158.327, 34.7467, 1.92", "-12.2114, -159.85, 35.1364, 1.62", "-12.5029, -161.253, 35.5443, 1.4", "-12.8496, -162.786, 36.1227, 1.4", "-13.4252, -165.182, 37.1504, 1.33", "-13.6944, -166.352, 37.7114, 0.96", "-14.0443, -168.106, 38.6338, 0.74", "-14.0626, -168.211, 38.6959, 0.74", "-14.3614, -170.569, 40.2495, 0.66", "-14.3631, -170.646, 40.3114, 0.66", "-14.2162, -172.164, 41.6598, 1.69", "-14.105, -173.003, 42.4408, 2.21", "-13.9297, -174.321, 43.6318, 3.02", "-13.8322, -175.195, 44.3457, 3.02", "-13.5836, -178.038, 46.3529, 0.52", "-13.5565, -179.128, 46.9651, 0.52", "-13.6105, -180.516, 47.5476, 2.36", "-13.7162, -181.855, 47.9287, 3.09", "-13.7871, -182.512, 48.0327, 3.24", "-13.9698, -183.86, 48.1445, 3.02", "-14.4345, -186.871, 48.1764, 1.11", "-14.6564, -188.446, 48.2084, 0.96", "-14.7874, -189.603, 48.2507, 1.25", "-14.9253, -191.181, 48.377, 1.18", "-14.9992, -192.364, 48.531, 0.52", "-15.0022, -192.466, 48.5514, 0.52", "-14.9589, -193.537, 48.9104, 1.4", "-14.9472, -193.615, 48.9428, 1.4", "-14.5923, -194.907, 49.5603, 2.14", "-14.2919, -195.805, 49.9961, 2.14", "-14.0719, -196.461, 50.2881, 2.36", "-13.69, -197.7, 50.7894, 1.33", "-13.2616, -199.216, 51.3138, 0.81", "-12.776, -201.152, 51.8514, 0.81", "-12.377, -203.049, 52.2501, 0.81", "-12.0345, -205.073, 52.6286, 1.62", "-11.8813, -206.16, 52.8185, 1.92", "-11.7092, -207.828, 53.1517, 1.25", "-11.5895, -209.423, 53.5098, 0.96", "-11.4695, -211.57, 54.0499, 0.96", "-11.3482, -213.415, 54.6018, 0.88", "-11.2135, -215.284, 55.2679, 1.62", "-11.0207, -217.412, 56.1322, 1.84", "-10.9461, -218.544, 56.6967, 1.92", "-10.943, -218.643, 56.7533, 1.92", "-10.9317, -220.109, 57.6498, 1.62", "-10.9634, -221.925, 58.7591, 0.59", "-11.0102, -223.345, 59.6041, 0.59", "-11.0458, -225.494, 60.7844, 0.52", "-11.0857, -226.913, 61.5883, 1.69", "-11.1228, -227.83, 62.1141, 2.5", "-11.1846, -228.637, 62.5859, 2.5", "-11.2572, -229.605, 63.154, 2.5", "-11.3258, -231.075, 63.9494, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.15861, 105.347, -19.659, 0.59", "-10.3286, 106.605, -20.4244, 0.59", "-11.2121, 107.754, -21.1485, 0.44", "-11.1681, 107.942, -22.041, 0.74", "-11.0835, 108.258, -23.4376, 0.74", "-11.0781, 108.307, -23.6497, 0.74", "-11.0954, 108.579, -24.7235, 0.88", "-11.096, 108.601, -24.819, 0.88", "-11.2464, 110.459, -32.4544, 1.62", "-11.3729, 110.98, -34.614, 1.4", "-11.6139, 111.492, -36.8495, 0.37", "-11.8036, 111.766, -38.0586, 0.74", "-12.3524, 112.361, -40.5721, 0.29", "-12.6342, 112.631, -41.475, 1.4", "-13.0086, 112.945, -42.2096, 1.84", "-14.2963, 113.978, -44.9514, 0.44", "-14.4982, 114.163, -45.4212, 0.29", "-14.8242, 114.456, -46.2072, 0.29", "-15.144, 114.742, -46.9412, 0.59", "-16.2346, 115.792, -49.5658, 0.44", "-16.6119, 116.204, -50.4152, 0.22", "-16.9165, 116.576, -51.0095, 0.74", "-17.4118, 117.245, -52.0847, 0.15", "-17.4897, 117.353, -52.2562, 0.15", "-17.6775, 117.621, -52.6422, 0.15", "-18.401, 118.694, -53.907, 1.47", "-18.7789, 119.252, -54.5338, 1.62", "-20.1894, 121.279, -56.9575, 0.22", "-20.2306, 121.339, -57.0309, 0.22", "-20.7465, 122.04, -57.9326, 0.22", "-21.4312, 122.912, -59.1083, 1.25", "-21.7453, 123.328, -59.7221, 1.4", "-22.6889, 124.646, -61.6662, 0.22", "-22.746, 124.737, -61.7985, 0.22", "-23.4411, 126.007, -63.6802, 1.47", "-23.6351, 126.409, -64.2543, 1.99", "-24.5744, 128.682, -67.2611, 0.37", "-24.7951, 129.295, -67.9974, 0.29", "-25.143, 130.363, -69.1505, 1.18", "-25.5212, 131.601, -70.3881, 0.52", "-25.8313, 132.795, -71.4413, 1.55", "-25.935, 133.228, -71.78, 1.84", "-26.5325, 135.837, -73.4219, 0.22", "-26.5476, 135.923, -73.4738, 0.22", "-26.6397, 136.7, -73.8841, 0.22", "-26.6348, 137.637, -74.3171, 1.4", "-26.6259, 137.744, -74.364, 1.4", "-26.5572, 138.353, -74.6006, 1.4", "-26.1792, 140.653, -75.4491, 0.15", "-26.0129, 141.621, -75.8388, 0.74", "-25.6, 143.862, -76.8049, 0.15", "-25.4444, 144.647, -77.1572, 0.74", "-25.3545, 145.037, -77.3324, 0.88", "-24.8149, 146.993, -78.1792, 0.15", "-24.7881, 147.068, -78.2149, 0.15", "-24.5454, 147.634, -78.5287, 0.37", "-24.4559, 147.761, -78.6615, 0.37", "-23.8591, 148.312, -79.5811, 0.22", "-23.348, 148.715, -80.3736, 0.59", "-21.9608, 149.578, -82.5426, 1.69", "-21.8092, 149.66, -82.7883, 1.69", "-19.4395, 150.637, -86.8569, 0.22", "-18.9919, 150.755, -87.6645, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.15861, 105.347, -19.659, 2.65", "-9.07964, 106.361, -19.1194, 2.65", "-9.05826, 107.514, -18.6322, 2.06", "-9.10002, 109.562, -17.9063, 1.92", "-9.103, 109.627, -17.8858, 1.92", "-9.19625, 110.803, -17.5558, 0.74", "-9.35998, 112.513, -17.1138, 0.52", "-9.56941, 113.863, -16.8152, 0.52", "-9.68936, 114.505, -16.7233, 0.52", "-9.73801, 114.775, -16.7178, 0.52", "-9.86654, 115.624, -16.715, 0.52", "-9.88091, 115.756, -16.7171, 0.52", "-9.9253, 116.73, -16.7529, 0.44", "-9.93217, 117.503, -16.7495, 0.44", "-9.89516, 118.978, -16.7279, 1.84", "-9.85088, 120.187, -16.6712, 2.73", "-9.82373, 120.83, -16.6242, 3.54", "-9.79551, 121.679, -16.5461, 3.9", "-9.78245, 122.356, -16.4694, 4.05", "-9.78705, 122.995, -16.4008, 3.9", "-9.8393, 124.173, -16.2887, 3.61", "-9.91755, 124.998, -16.2124, 2.8", "-10.0358, 125.922, -16.1368, 1.69", "-10.189, 127.009, -16.0507, 1.11", "-10.3773, 128.23, -15.9637, 0.81", "-10.4895, 128.895, -15.9274, 0.66", "-10.7324, 130.3, -15.8995, 0.52", "-10.9685, 131.528, -15.8724, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-63.9422, -61.0269, 20.6969, 0.37", "-72.1602, -65.725, 21.2303, 0.37", "-79.4423, -71.4578, 23.6139, 0.37", "-87.6566, -75.8936, 25.3379, 0.37", "-95.813, -79.3431, 28.7392, 0.37", "-104.057, -83.8152, 30.185, 0.37", "-112.557, -87.7261, 31.6331, 0.37", "-119.864, -93.559, 33.6561, 0.37", "-127.594, -99.0662, 33.332, 0.37", "-135.056, -103.924, 30.2228, 0.37", "-141.953, -109.282, 26.6436, 0.37", "-149.844, -112.804, 22.9439, 0.37", "-157.7, -116.134, 19.0073, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-63.9422, -61.0269, 20.6969, 0.29", "-72.5893, -65.5689, 21.9573, 0.37", "-80.8496, -70.3826, 24.418, 0.37", "-88.5168, -76.5107, 25.9154, 0.37", "-95.6287, -83.4654, 26.5373, 0.37", "-102.491, -90.708, 26.7029, 0.37", "-109.587, -97.5356, 28.2714, 0.37", "-115.767, -105.279, 29.8673, 0.37", "-120.77, -114.015, 30.6275, 0.37", "-126.526, -122.091, 29.2516, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-74.2221, -23.772, 29.9386, 0.37", "-83.2979, -18.8811, 30.5115, 0.37", "-92.6497, -14.5055, 30.445, 0.37", "-101.806, -10.0042, 28.5507, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-74.2221, -23.772, 29.9386, 0.29", "-82.6933, -18.1161, 34.367, 0.37", "-90.7224, -11.8119, 38.7932, 0.37", "-97.8216, -6.57787, 45.4852, 0.37", "-104.577, -2.35743, 53.1457, 0.37", "-111.909, 0.490286, 60.9019, 0.37", "-120.119, 3.60055, 67.6069, 0.37", "-128.824, 6.58738, 73.7199, 0.37", "-137.394, 9.87877, 79.8702, 0.37", "-146.311, 14.3354, 84.6924, 0.37", "-155.368, 18.7532, 89.287, 0.37", "-163.993, 23.4172, 94.4366, 0.37", "-172.08, 27.1179, 100.998, 0.37", "-180.315, 31.3979, 107.015, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.38598, -38.2092, 0.325473, 0.59", "-9.93763, -38.7921, -0.0124579, 0.59", "-10.8995, -39.5324, -0.483654, 0.44", "-11.9874, -40.0801, -1.00255, 0.29", "-12.5829, -40.3018, -1.24825, 0.22", "-13.3208, -40.5565, -1.52703, 0.29", "-14.2082, -40.8611, -1.83971, 0.29", "-15.3291, -41.1933, -2.16478, 0.29", "-16.6066, -41.5572, -2.52194, 0.29", "-17.5911, -41.8774, -2.80434, 0.29", "-18.868, -42.3963, -3.20621, 1.25", "-19.2506, -42.6045, -3.34013, 1.77", "-19.8297, -43.0235, -3.56767, 1.77", "-21.4295, -44.4276, -4.23236, 1.11", "-22.3038, -45.3355, -4.63202, 0.52", "-22.9057, -46.0405, -4.97986, 0.37", "-23.6699, -47.0243, -5.53342, 0.37", "-24.2016, -47.7647, -5.98031, 0.37", "-24.2893, -47.8908, -6.05959, 0.37", "-25.0102, -48.9357, -6.71055, 1.25", "-25.4971, -49.5594, -7.1593, 1.18", "-26.4166, -50.516, -7.91405, 0.29", "-26.867, -50.8629, -8.19569, 0.22", "-27.4968, -51.2822, -8.48811, 0.22", "-27.9922, -51.6082, -8.65618, 0.44", "-28.5013, -51.9287, -8.76098, 0.44", "-29.0237, -52.263, -8.80871, 0.29", "-29.5635, -52.5958, -8.84342, 0.29", "-30.3746, -53.0892, -8.99871, 0.37", "-31.0146, -53.4893, -9.17213, 0.37", "-31.7514, -53.9126, -9.41032, 0.29", "-33.0982, -54.5939, -9.91084, 1.18", "-34.0946, -55.0675, -10.2924, 1.99", "-35.0737, -55.4936, -10.6675, 2.28", "-35.6795, -55.7459, -10.8898, 1.99", "-37.2027, -56.4314, -11.4309, 0.59", "-38.2037, -56.9867, -11.7746, 0.37", "-38.9391, -57.5433, -12.0421, 0.37", "-39.7295, -58.2258, -12.3283, 1.11", "-40.2741, -58.7197, -12.511, 1.69", "-40.858, -59.2754, -12.714, 1.84", "-41.63, -60.0382, -12.9634, 1.4", "-42.9344, -61.2428, -13.325, 0.44", "-43.6316, -61.8228, -13.5086, 0.44", "-44.5047, -62.4959, -13.7118, 0.37", "-45.2774, -63.0333, -13.8778, 1.18", "-45.9486, -63.4854, -14.0126, 1.62", "-46.6442, -63.9959, -14.1427, 1.03", "-46.7128, -64.0573, -14.159, 1.03", "-47.0645, -64.4551, -14.2847, 0.88", "-47.6467, -65.1928, -14.5678, 0.44", "-48.2542, -65.9807, -14.8974, 0.29", "-48.7969, -66.7058, -15.22, 0.29", "-49.7801, -68.0298, -15.8273, 1.92", "-50.4494, -68.941, -16.2409, 2.73", "-51.1276, -69.8725, -16.6738, 2.65", "-52.449, -71.6222, -17.494, 0.66", "-52.5121, -71.7002, -17.5317, 0.66", "-53.4857, -72.8449, -18.0878, 0.29", "-53.9154, -73.3412, -18.3089, 0.29", "-54.4479, -73.944, -18.5842, 0.29", "-55.0745, -74.6632, -18.968, 0.29", "-55.6603, -75.3243, -19.3753, 1.11", "-55.7237, -75.3975, -19.4205, 1.11", "-56.2461, -76.0092, -19.7895, 1.25", "-56.9137, -76.7961, -20.2451, 0.96", "-58.0421, -78.2959, -20.9581, 0.37", "-58.0907, -78.3697, -20.9912, 0.37", "-58.617, -79.2028, -21.335, 0.22", "-58.9683, -79.7703, -21.5459, 0.22", "-59.0727, -79.9298, -21.6078, 0.66", "-59.8004, -81.0209, -21.9958, 0.52", "-60.9923, -82.7824, -22.5944, 1.77", "-61.8485, -84.0335, -23.0197, 2.58", "-62.5797, -85.0769, -23.3777, 2.58", "-63.9944, -87.0696, -24.0468, 0.44", "-64.7418, -88.0984, -24.3681, 0.29", "-64.8069, -88.1839, -24.3912, 0.29", "-65.2963, -88.8296, -24.5072, 0.29", "-66.0347, -89.8354, -24.6467, 1.47", "-66.4271, -90.401, -24.6994, 1.84", "-66.8922, -91.1898, -24.7248, 1.47", "-68.0094, -93.2726, -24.7963, 0.29", "-68.3965, -94.0671, -24.8215, 1.11", "-68.6549, -94.6363, -24.8352, 1.25", "-69.0122, -95.4919, -24.8446, 1.03", "-69.4982, -96.7049, -24.8497, 0.22", "-69.8143, -97.4898, -24.8394, 0.22", "-70.0111, -97.975, -24.8193, 0.59", "-70.3183, -98.6433, -24.7876, 0.74", "-70.533, -99.0404, -24.7772, 0.37", "-70.9748, -99.771, -24.7678, 0.22", "-71.63, -100.757, -24.7592, 1.55", "-72.2405, -101.669, -24.7579, 2.21", "-72.5876, -102.186, -24.7568, 1.84", "-73.6811, -103.808, -24.7477, 0.22", "-74.2438, -104.628, -24.7378, 0.22", "-74.8946, -105.523, -24.7161, 1.11", "-75.2796, -106.027, -24.6957, 1.62", "-75.7594, -106.62, -24.6558, 1.84", "-76.4863, -107.497, -24.5765, 1.11", "-76.8966, -107.989, -24.5222, 0.66", "-77.9774, -109.281, -24.3889, 0.29", "-78.5623, -109.986, -24.3214, 0.59", "-79.931, -111.737, -24.1513, 0.29", "-79.9886, -111.815, -24.1437, 0.29", "-80.9074, -113.119, -24.0122, 1.18", "-81.2568, -113.637, -23.9579, 1.55", "-81.5794, -114.161, -23.9017, 1.55", "-82.446, -115.641, -23.8137, 0.52", "-83.1929, -116.994, -23.8178, 0.37", "-83.2384, -117.08, -23.8234, 0.37", "-83.7787, -118.189, -23.9444, 0.37", "-84.2202, -119.128, -24.0749, 0.29", "-85.0473, -120.936, -24.3791, 1.99", "-85.4155, -121.764, -24.5432, 2.28", "-86.2536, -123.759, -24.9309, 0.22", "-86.7508, -124.921, -25.1292, 0.22", "-86.9726, -125.455, -25.1859, 0.74", "-87.0093, -125.546, -25.1893, 0.74", "-87.3199, -126.37, -25.1605, 0.74", "-87.7208, -127.495, -25.089, 0.22", "-88.1873, -128.768, -24.9936, 0.22", "-88.9631, -130.806, -24.8375, 2.14", "-89.1391, -131.268, -24.8037, 2.36", "-89.8049, -132.939, -24.6792, 0.29", "-90.113, -133.671, -24.6136, 0.22", "-90.5418, -134.6, -24.5176, 0.22", "-91.0746, -135.684, -24.3918, 1.4", "-91.3727, -136.269, -24.3243, 1.77", "-91.7871, -137.111, -24.2132, 1.33", "-92.4631, -138.67, -23.9914, 0.37", "-92.8993, -139.792, -23.8446, 0.22", "-93.155, -140.561, -23.7579, 0.22", "-93.4547, -141.561, -23.6724, 0.81", "-93.6194, -142.146, -23.6331, 0.81", "-93.9856, -143.393, -23.5945, 0.22", "-94.2434, -144.106, -23.608, 0.22", "-94.5841, -144.879, -23.6347, 1.25", "-94.8859, -145.44, -23.656, 1.77", "-95.2462, -146.044, -23.6791, 1.77", "-96.0431, -147.356, -23.7391, 0.44", "-96.779, -148.546, -23.7935, 0.29", "-97.4027, -149.571, -23.8532, 1.4", "-97.7709, -150.175, -23.8891, 1.77", "-98.0764, -150.693, -23.9226, 1.77", "-98.9067, -152.165, -24.0172, 0.37", "-99.4945, -153.288, -24.0812, 0.29", "-100.115, -154.466, -24.1664, 0.22", "-100.669, -155.427, -24.2537, 0.22", "-101.367, -156.534, -24.361, 1.11", "-101.635, -156.929, -24.3998, 1.4", "-102.185, -157.725, -24.4794, 0.59", "-102.799, -158.647, -24.5763, 0.22", "-103.401, -159.591, -24.6745, 0.22", "-104.015, -160.532, -24.7795, 1.11", "-104.294, -160.934, -24.8212, 1.55", "-104.706, -161.509, -24.8787, 1.33", "-105.407, -162.463, -24.964, 0.59", "-105.944, -163.244, -25.0108, 0.22", "-106.274, -163.737, -25.0201, 0.66", "-106.445, -163.982, -25.0134, 0.66", "-106.619, -164.224, -24.9953, 0.66", "-107.15, -164.957, -24.9289, 0.22", "-107.73, -165.754, -24.7838, 0.22", "-108.449, -166.742, -24.5449, 1.33", "-108.765, -167.173, -24.4261, 1.62", "-109.103, -167.627, -24.2916, 1.33", "-110.174, -169.044, -23.8489, 0.29", "-110.861, -169.894, -23.5745, 0.29", "-111.451, -170.519, -23.3721, 0.29", "-112.031, -171.052, -23.2102, 0.88", "-112.438, -171.399, -23.1048, 0.88", "-112.916, -171.776, -22.9914, 0.66", "-113.767, -172.423, -22.8188, 0.15", "-114.52, -173.052, -22.7482, 0.15", "-115.229, -173.676, -22.7112, 0.15", "-115.587, -173.983, -22.7058, 0.59", "-115.662, -174.042, -22.6966, 0.59", "-116.05, -174.35, -22.6201, 0.59", "-116.684, -174.897, -22.4552, 0.22", "-116.763, -174.978, -22.4327, 0.22", "-117.643, -175.892, -22.1808, 0.22", "-118.967, -177.317, -21.8015, 1.77", "-119.434, -177.831, -21.6675, 2.14", "-120.035, -178.493, -21.5078, 1.47", "-121.158, -179.816, -21.2678, 0.37", "-122.079, -180.992, -21.1264, 0.22", "-122.561, -181.708, -21.0975, 0.81", "-122.823, -182.131, -21.118, 0.96", "-123.242, -182.816, -21.1816, 0.96", "-123.961, -184.051, -21.352, 0.22", "-124.007, -184.133, -21.3664, 0.22", "-124.457, -185.002, -21.5435, 0.22", "-124.944, -185.986, -21.7393, 0.22", "-125.249, -186.666, -21.8972, 0.96", "-125.512, -187.266, -22.0357, 1.33", "-125.864, -188.017, -22.2062, 1.11", "-126.445, -189.112, -22.5139, 0.22", "-126.744, -189.608, -22.669, 0.59", "-127.582, -190.958, -23.0697, 0.22", "-128.212, -191.946, -23.3414, 1.18", "-128.641, -192.58, -23.5245, 1.4", "-129.696, -194.047, -23.933, 0.22", "-130.313, -194.839, -24.1278, 0.22", "-131.012, -195.715, -24.3076, 1.99", "-131.55, -196.368, -24.4071, 2.5", "-132.112, -197.058, -24.5031, 2.43", "-133.558, -198.865, -24.6805, 0.22", "-134.092, -199.559, -24.7077, 0.29", "-134.832, -200.528, -24.7363, 0.22", "-135.251, -201.097, -24.7453, 0.74", "-135.444, -201.387, -24.7289, 0.74", "-136.079, -202.494, -24.5924, 0.15", "-136.486, -203.41, -24.4767, 0.15", "-136.593, -203.697, -24.4536, 0.81", "-136.927, -204.633, -24.427, 1.33", "-137.253, -205.57, -24.4342, 1.33", "-137.284, -205.659, -24.4372, 1.33", "-137.787, -207.036, -24.6036, 0.22", "-138.339, -208.545, -24.8718, 0.22", "-138.762, -209.732, -25.1379, 1.62", "-139.049, -210.503, -25.3359, 1.92", "-139.294, -211.153, -25.5175, 1.92", "-139.927, -212.896, -25.9913, 0.22", "-140.277, -213.894, -26.2541, 0.22", "-140.662, -215.099, -26.5992, 0.22", "-140.983, -216.142, -26.9125, 1.25", "-141.16, -216.644, -27.0629, 1.62", "-141.421, -217.273, -27.2269, 1.62", "-141.508, -217.455, -27.2672, 1.62", "-142.617, -219.43, -27.7506, 0.22", "-142.716, -219.602, -27.8028, 0.22", "-143.269, -220.631, -28.1544, 0.22", "-143.861, -221.777, -28.5644, 0.22", "-144.319, -222.638, -28.8685, 1.03", "-144.547, -223.063, -29.0152, 1.03", "-145.265, -224.382, -29.4508, 0.22", "-145.585, -224.985, -29.6528, 0.59", "-146.025, -225.906, -29.9601, 0.22", "-146.338, -226.587, -30.1616, 0.22", "-146.72, -227.494, -30.3734, 1.25", "-146.933, -228.019, -30.4791, 1.62", "-146.996, -228.18, -30.5064, 1.62", "-147.654, -229.836, -30.806, 0.15", "-148.061, -230.941, -31.0128, 1.25", "-148.212, -231.394, -31.1, 1.25", "-148.715, -232.833, -31.3934, 0.22", "-148.752, -232.919, -31.4128, 0.22", "-149.137, -233.645, -31.5862, 0.74", "-149.183, -233.713, -31.6052, 0.74", "-149.416, -234.038, -31.6796, 0.74", "-150.304, -235.285, -31.8895, 0.15", "-150.992, -236.304, -31.9988, 1.11", "-151.112, -236.487, -32.0187, 1.11", "-151.17, -236.581, -32.0282, 1.11", "-152.689, -238.913, -32.2624, 0.22", "-153.162, -239.616, -32.3358, 1.03", "-153.544, -240.174, -32.3916, 1.11", "-154.73, -241.822, -32.5786, 0.22", "-154.923, -242.078, -32.612, 0.59", "-155.853, -243.233, -32.7525, 0.22", "-156.321, -243.769, -32.8147, 1.33", "-156.718, -244.208, -32.8433, 1.55", "-157.338, -244.854, -32.8386, 0.88", "-158.595, -246.171, -32.7503, 0.22", "-159.154, -246.768, -32.7005, 0.66", "-159.424, -247.042, -32.7064, 0.66", "-160.463, -248.047, -32.8017, 0.22", "-161.468, -248.993, -32.9602, 1.62", "-162.232, -249.69, -33.1399, 2.06", "-162.902, -250.267, -33.3361, 2.06", "-165.25, -252.296, -34.0944, 0.22", "-165.25, -252.296, -34.0944, 0.59", "-165.403, -252.419, -34.1399, 0.59", "-166.371, -253.147, -34.3718, 0.22", "-167.323, -253.798, -34.52, 0.22", "-168.345, -254.453, -34.5682, 1.77", "-168.906, -254.805, -34.5134, 2.06", "-171.054, -256.145, -34.1689, 0.15", "-171.481, -256.4, -34.0769, 0.74", "-171.954, -256.657, -33.9183, 0.74", "-172.956, -257.182, -33.466, 0.22", "-173.802, -257.6, -33.0016, 0.22", "-174.717, -258.04, -32.4174, 1.18", "-175.148, -258.254, -32.0826, 1.55", "-176.508, -258.928, -30.961, 0.29", "-177.505, -259.417, -30.1065, 0.22", "-177.949, -259.6, -29.7425, 0.74", "-178.319, -259.719, -29.4673, 1.03", "-179.547, -260.001, -28.6666, 0.15", "-179.945, -260.061, -28.464, 0.37", "-180.034, -260.069, -28.4328, 0.37", "-181.474, -260.082, -28.0474, 0.22", "-182.494, -260.064, -27.8245, 1.18", "-183.226, -260.053, -27.6998, 1.55", "-185.02, -260.034, -27.4751, 0.22", "-185.868, -260.038, -27.3444, 0.22", "-186.907, -260.068, -27.1519, 0.96", "-187.267, -260.084, -27.0618, 1.33", "-189.019, -260.156, -26.5346, 0.22", "-189.733, -260.197, -26.2734, 0.22", "-191.018, -260.276, -25.7306, 0.96", "-191.352, -260.299, -25.5697, 1.25", "-193.503, -260.47, -24.4515, 0.22", "-194.36, -260.551, -24.0011, 0.22", "-195.991, -260.72, -23.1238, 1.84", "-196.328, -260.768, -22.9471, 2.36", "-198.554, -261.184, -21.8488, 0.22", "-199.147, -261.315, -21.5562, 0.66", "-200.052, -261.57, -21.1427, 0.22", "-200.122, -261.59, -21.1136, 0.22", "-201.075, -261.872, -20.8024, 0.96", "-201.531, -262.0, -20.6832, 0.96", "-201.618, -262.024, -20.6698, 0.96", "-202.939, -262.39, -20.4674, 0.22", "-203.026, -262.413, -20.4539, 0.22", "-204.397, -262.775, -20.2517, 0.22", "-204.496, -262.801, -20.2375, 0.22", "-205.893, -263.239, -20.0076, 0.22", "-205.991, -263.272, -19.9899, 0.22", "-206.606, -263.49, -19.8657, 1.11", "-207.233, -263.716, -19.7375, 1.4", "-207.488, -263.809, -19.6845, 1.69", "-209.927, -264.695, -19.1679, 0.22", "-210.546, -264.913, -19.0327, 0.66", "-210.835, -265.017, -18.9691, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.38598, -38.2092, 0.325473, 2.58", "-9.04764, -39.3789, -0.165045, 2.58", "-8.83924, -40.7042, -0.719446, 1.11", "-8.70804, -41.8357, -1.165, 0.66", "-8.62021, -42.7161, -1.50798, 0.59", "-8.48388, -44.1258, -2.07401, 1.25", "-8.42038, -44.7172, -2.31879, 1.62", "-8.25176, -46.5699, -3.06939, 1.11", "-8.13674, -47.67, -3.53915, 1.33", "-8.00465, -48.6597, -4.00576, 1.92", "-7.81588, -49.7058, -4.53994, 1.99", "-7.57478, -50.7793, -5.14596, 1.33", "-7.31007, -51.9235, -5.8247, 0.96", "-7.00585, -53.1753, -6.59126, 0.96", "-6.99722, -53.2201, -6.62056, 0.96", "-6.91779, -53.9905, -7.14807, 0.74", "-6.98079, -55.1286, -8.04003, 0.52", "-7.16293, -55.8973, -8.72369, 0.52", "-7.17967, -55.9405, -8.76591, 0.52", "-7.45726, -56.5393, -9.37744, 0.88", "-7.81033, -57.3043, -10.1409, 1.18", "-8.38673, -58.5527, -11.3476, 0.59", "-8.71624, -59.3051, -12.0054, 0.59", "-8.73199, -59.3451, -12.038, 0.59", "-8.95902, -60.0304, -12.5279, 0.59", "-9.26172, -61.2038, -13.2068, 1.55", "-9.42995, -62.0828, -13.5721, 2.14", "-9.52139, -62.5951, -13.7272, 2.36", "-9.53306, -62.6475, -13.7414, 2.36", "-9.70822, -63.2043, -13.8963, 2.36", "-9.99611, -63.8285, -14.0964, 2.06", "-10.5298, -64.7177, -14.4076, 1.77", "-11.1323, -65.6242, -14.7468, 0.74", "-11.4425, -66.0578, -14.924, 0.52", "-12.0031, -66.7816, -15.2421, 0.44", "-12.7389, -67.6035, -15.6558, 0.44", "-13.5159, -68.3504, -16.097, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-11.3258, -231.075, 63.9494, 0.88", "-11.3794, -232.307, 63.9719, 0.88", "-11.3619, -233.491, 63.9451, 0.88", "-11.3142, -234.316, 63.926, 1.18", "-11.2708, -234.853, 63.904, 1.18", "-11.1431, -236.307, 63.8422, 0.52", "-11.0851, -236.966, 63.8142, 0.52", "-10.9298, -238.262, 63.742, 1.99", "-10.7391, -239.511, 63.6442, 3.09", "-10.5969, -240.298, 63.5691, 3.61", "-10.4247, -241.225, 63.4785, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.3258, -231.075, 63.9494, 0.74", "-10.4576, -232.293, 63.9259, 0.74", "-9.52087, -233.811, 63.9306, 0.66", "-9.05399, -234.567, 63.933, 1.11", "-8.75383, -235.053, 63.9346, 1.25", "-7.38094, -237.277, 63.9416, 0.29", "-6.79743, -238.222, 63.9445, 0.29", "-6.09439, -239.491, 63.8964, 0.29", "-0.174399, -249.513, 64.7319, 0.29", "6.1998, -258.878, 67.4097, 0.29", "13.3977, -267.669, 69.7128, 0.29", "19.3018, -277.129, 73.1125, 0.29", "24.6741, -286.992, 76.3505, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-18.9919, 150.755, -87.6645, 0.22", "-19.6555, 149.78, -89.4817, 0.22", "-19.9131, 149.449, -90.2577, 1.18", "-20.0053, 149.344, -90.5115, 1.18", "-21.2843, 148.0, -93.8407, 0.22", "-21.5639, 147.72, -94.555, 0.22", "-22.4783, 146.802, -96.8911, 0.74", "-23.6801, 145.811, -99.9004, 0.22", "-24.0672, 145.523, -100.87, 1.03", "-24.2213, 145.413, -101.252, 1.25", "-24.3501, 145.337, -101.535, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-18.9919, 150.755, -87.6645, 0.52", "-18.2436, 152.229, -88.8624, 0.52", "-17.8241, 153.13, -89.5818, 0.22", "-17.3097, 154.512, -90.5961, 0.88", "-17.2402, 154.745, -90.7549, 1.03", "-16.7382, 156.783, -92.0855, 0.15", "-16.6295, 157.285, -92.4048, 0.52", "-16.6142, 157.474, -92.5168, 0.52", "-16.5989, 158.84, -93.2465, 0.15", "-16.6241, 159.455, -93.5354, 0.81", "-16.6789, 160.265, -93.9001, 1.11", "-16.6883, 160.331, -93.9266, 1.11", "-16.8934, 161.874, -94.5481, 0.22", "-16.9708, 162.556, -94.8392, 0.96", "-17.0034, 162.991, -95.0486, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.9685, 131.528, -15.8724, 0.96", "-11.1963, 132.287, -16.854, 0.96", "-11.4268, 133.055, -17.835, 1.03", "-11.4697, 133.235, -18.0626, 1.03", "-11.6024, 133.865, -18.844, 0.29", "-11.6821, 134.359, -19.3923, 1.25", "-11.7257, 134.702, -19.7376, 1.47", "-11.7343, 134.821, -19.8344, 1.47", "-11.8101, 135.917, -20.5642, 0.29", "-11.8147, 136.017, -20.6278, 0.29", "-11.8325, 136.86, -21.1109, 0.29", "-11.8272, 137.177, -21.301, 0.59", "-11.8012, 137.884, -21.7274, 0.44", "-11.7608, 138.78, -22.2651, 2.28", "-11.7362, 139.317, -22.5823, 2.65", "-11.7231, 139.574, -22.7395, 2.65", "-11.6408, 141.248, -23.8134, 0.37", "-11.6131, 141.78, -24.1346, 0.29", "-11.6086, 141.848, -24.1713, 0.29", "-11.5824, 142.231, -24.3482, 0.44", "-11.5728, 142.46, -24.4307, 0.44", "-11.5627, 143.141, -24.6244, 0.15", "-11.5816, 143.737, -24.7199, 0.74", "-11.583, 143.794, -24.7307, 0.74", "-11.5937, 144.143, -24.827, 0.74", "-11.6049, 144.434, -24.9191, 0.52", "-11.6521, 145.111, -25.1488, 0.29", "-11.7305, 145.949, -25.4409, 1.18", "-11.7755, 146.344, -25.5816, 1.69", "-11.9402, 147.741, -26.1431, 0.29", "-12.0096, 148.283, -26.3719, 0.29", "-12.1599, 149.308, -26.8153, 1.77", "-12.2089, 149.578, -26.9393, 2.73", "-12.2555, 149.79, -27.042, 2.73", "-12.6881, 151.542, -27.9168, 0.29", "-12.8299, 152.053, -28.1749, 0.29", "-12.8884, 152.238, -28.2759, 0.59", "-13.1089, 152.851, -28.6365, 0.22", "-13.2808, 153.271, -28.8948, 0.74", "-13.3586, 153.416, -28.9872, 1.03", "-13.3914, 153.454, -29.0135, 1.03", "-13.6036, 153.683, -29.1915, 0.81", "-13.663, 153.753, -29.2419, 0.81", "-14.2184, 154.468, -29.6846, 0.22", "-14.4759, 154.826, -29.8865, 0.59", "-14.9009, 155.426, -30.2078, 0.22", "-14.9677, 155.522, -30.255, 0.22", "-15.2532, 155.938, -30.4365, 0.22", "-15.589, 156.447, -30.6275, 0.22", "-16.0549, 157.193, -30.8744, 1.62", "-16.379, 157.734, -31.0421, 2.14", "-16.6582, 158.205, -31.1801, 2.14", "-17.381, 159.386, -31.5317, 0.29", "-17.6134, 159.755, -31.6429, 0.44", "-17.8729, 160.176, -31.7691, 0.22", "-18.2713, 160.85, -31.9656, 0.22", "-18.6308, 161.5, -32.1527, 1.25", "-18.7769, 161.779, -32.2347, 1.62", "-18.8505, 161.94, -32.2849, 1.84", "-19.3301, 163.155, -32.6926, 0.29", "-19.6606, 164.132, -33.0275, 0.29", "-19.8372, 164.808, -33.2762, 0.74", "-19.8952, 165.079, -33.3899, 0.74", "-20.0673, 166.022, -33.8179, 0.22", "-20.1933, 166.857, -34.2157, 1.62", "-20.1979, 166.901, -34.2368, 1.62", "-20.2507, 167.507, -34.5223, 1.99", "-20.3617, 168.965, -35.1837, 0.22", "-20.3652, 169.01, -35.2033, 0.22", "-20.4362, 169.691, -35.4717, 0.22", "-20.5192, 170.436, -35.7393, 0.96", "-20.5549, 170.721, -35.8373, 1.25", "-20.7235, 172.026, -36.2195, 0.22", "-20.7292, 172.074, -36.2312, 0.22", "-20.816, 172.731, -36.3932, 0.74", "-20.842, 172.908, -36.436, 0.88", "-20.919, 173.375, -36.5502, 0.29", "-21.079, 174.281, -36.7523, 0.22", "-21.1859, 174.867, -36.8598, 0.22", "-21.3045, 175.697, -36.968, 1.33", "-21.3362, 176.005, -36.9922, 1.92", "-21.3408, 176.054, -36.9942, 1.92", "-21.3714, 176.425, -36.9994, 1.77", "-21.4053, 176.809, -37.0017, 1.69", "-21.521, 178.126, -37.0002, 0.22", "-21.6454, 179.211, -36.9826, 0.22", "-21.7856, 180.228, -36.9634, 1.47", "-21.857, 180.665, -36.9552, 1.99", "-21.9152, 180.955, -36.9514, 1.92", "-22.0156, 181.362, -36.9502, 1.47", "-22.4394, 182.778, -36.9706, 0.22", "-22.6329, 183.347, -36.9792, 0.44", "-22.7225, 183.613, -36.9872, 0.44", "-22.9703, 184.364, -37.0187, 0.22", "-23.2398, 185.235, -37.0678, 1.18", "-23.3586, 185.651, -37.0966, 2.14", "-23.4852, 186.133, -37.1417, 1.62", "-23.8689, 187.669, -37.2938, 0.22", "-23.8821, 187.725, -37.2995, 0.22", "-24.1427, 188.959, -37.4113, 0.22", "-24.3512, 190.018, -37.4957, 0.22", "-24.4819, 190.713, -37.5313, 1.03", "-24.5262, 190.951, -37.5373, 1.62", "-24.5731, 191.191, -37.5353, 1.11", "-24.7631, 192.339, -37.4663, 0.22", "-24.7696, 192.387, -37.4607, 0.22", "-24.8644, 193.314, -37.3157, 1.47", "-24.8907, 193.615, -37.2611, 2.06", "-24.8964, 193.681, -37.2493, 2.06", "-25.0298, 195.086, -37.0356, 0.22", "-25.111, 195.867, -36.9387, 0.52", "-25.24, 196.905, -36.8399, 0.22", "-25.3378, 197.594, -36.7929, 1.33", "-25.3937, 197.949, -36.7819, 1.33", "-25.6052, 199.158, -36.7929, 0.22", "-25.6951, 199.62, -36.8229, 0.22", "-25.8111, 200.251, -36.8816, 0.66", "-25.854, 200.498, -36.9114, 0.66", "-26.026, 201.665, -37.0606, 0.22", "-26.0309, 201.725, -37.0683, 0.22", "-26.0535, 202.518, -37.1691, 0.22", "-26.044, 203.269, -37.277, 0.96", "-26.0255, 203.684, -37.3404, 1.62", "-26.0027, 204.116, -37.4083, 1.4", "-25.9624, 205.489, -37.6432, 0.22", "-25.9619, 205.845, -37.7118, 0.22", "-25.9853, 206.696, -37.8906, 1.11", "-25.9922, 206.819, -37.917, 1.33", "-26.0194, 207.169, -38.002, 1.18", "-26.1657, 208.717, -38.3884, 0.22", "-26.2482, 209.437, -38.5786, 1.03", "-26.2963, 209.839, -38.6866, 1.18", "-26.3294, 210.127, -38.7753, 1.03", "-26.434, 211.112, -39.1106, 0.15", "-26.5098, 211.937, -39.4111, 0.15", "-26.5734, 212.711, -39.6978, 1.33", "-26.6115, 213.14, -39.8545, 1.55", "-26.7497, 214.657, -40.4203, 0.15", "-26.7553, 214.713, -40.4406, 0.15", "-26.8396, 215.409, -40.6706, 0.15", "-26.9439, 216.207, -40.9251, 1.11", "-26.9785, 216.481, -41.0012, 1.55", "-27.1208, 217.673, -41.2814, 0.15", "-27.2041, 218.314, -41.3928, 0.74", "-27.3365, 219.263, -41.5458, 0.15", "-27.3457, 219.319, -41.5541, 0.15", "-27.4402, 219.859, -41.6268, 0.15", "-27.5581, 220.507, -41.6944, 0.96", "-27.6126, 220.803, -41.716, 0.96", "-27.8443, 222.12, -41.8209, 0.15", "-27.9347, 222.679, -41.8659, 0.44", "-27.9449, 222.744, -41.8729, 0.44", "-28.0655, 223.585, -41.9884, 0.15", "-28.1699, 224.394, -42.1153, 1.03", "-28.2094, 224.748, -42.1741, 1.33", "-28.2522, 225.302, -42.2756, 0.59", "-28.3026, 226.232, -42.457, 0.15", "-28.338, 226.931, -42.5982, 0.88", "-28.3561, 227.334, -42.6811, 1.03", "-28.3742, 227.755, -42.7645, 0.66", "-28.3856, 228.718, -42.9998, 0.15", "-28.3785, 229.729, -43.2759, 0.15", "-28.3692, 230.38, -43.433, 0.96", "-28.3685, 230.754, -43.5168, 1.25", "-28.3705, 231.003, -43.5685, 1.25", "-28.4156, 232.557, -43.8621, 0.15", "-28.4426, 232.971, -43.9255, 0.44", "-28.5283, 233.875, -44.0357, 0.15", "-28.5764, 234.299, -44.0687, 0.74", "-28.6298, 234.724, -44.086, 0.74", "-28.7249, 235.526, -44.0843, 0.15", "-28.8118, 236.193, -44.0545, 0.88", "-28.8575, 236.611, -44.0468, 0.96", "-28.9477, 237.652, -44.0581, 0.15", "-28.9959, 238.203, -44.059, 0.29", "-29.0886, 239.212, -44.0529, 0.15", "-29.1394, 239.763, -44.0441, 0.96", "-29.1777, 240.241, -44.0359, 1.18", "-29.3087, 241.871, -43.9929, 0.22", "-29.3665, 242.605, -43.9683, 0.22", "-29.381, 242.789, -43.9601, 0.22", "-29.3905, 242.917, -43.9529, 0.22", "-29.4265, 243.775, -43.9341, 0.15", "-29.446, 244.495, -43.9462, 1.11", "-29.4502, 244.891, -43.9667, 1.77", "-29.4493, 245.201, -43.9897, 1.77", "-29.4494, 245.268, -43.9961, 1.77", "-29.4597, 247.085, -44.163, 0.22", "-29.4764, 247.681, -44.2177, 0.15", "-29.478, 247.731, -44.222, 0.15", "-29.5044, 248.304, -44.2597, 0.52", "-29.5235, 248.552, -44.2729, 0.59", "-29.6785, 249.924, -44.3263, 0.15", "-29.7721, 250.644, -44.3334, 1.03", "-29.8201, 251.023, -44.3392, 1.77", "-29.867, 251.389, -44.3475, 1.55", "-30.0998, 252.959, -44.4028, 0.15", "-30.1611, 253.334, -44.4242, 0.29", "-30.274, 253.972, -44.4771, 0.15", "-30.4043, 254.683, -44.5428, 0.15", "-30.4276, 254.806, -44.5544, 0.15", "-30.6666, 256.063, -44.6858, 0.15", "-30.8404, 256.965, -44.7845, 1.11", "-30.8517, 257.022, -44.7911, 1.11", "-30.9591, 257.526, -44.8511, 1.4", "-31.0638, 258.094, -44.923, 0.59", "-31.2103, 259.006, -45.0385, 0.22", "-31.3027, 259.726, -45.1255, 0.22", "-31.3929, 260.496, -45.213, 1.03", "-31.4387, 260.97, -45.268, 1.55", "-31.6003, 263.067, -45.4971, 0.15", "-31.6047, 263.127, -45.5033, 0.15", "-31.6445, 263.635, -45.5424, 0.44", "-31.6679, 263.945, -45.5588, 0.44", "-31.7687, 265.218, -45.6085, 0.15", "-31.8319, 265.952, -45.6319, 1.03", "-31.8767, 266.443, -45.6417, 1.62", "-32.0212, 268.012, -45.7487, 0.15", "-32.2171, 270.032, -45.9529, 0.15", "-32.2991, 270.851, -46.0565, 0.15", "-32.3574, 271.41, -46.1412, 1.11", "-32.4155, 272.016, -46.2507, 1.4", "-32.5748, 274.023, -46.6597, 0.15", "-32.616, 274.61, -46.7946, 0.15", "-32.6644, 275.319, -46.9582, 0.74", "-32.6775, 275.636, -47.0175, 0.74", "-32.6785, 275.693, -47.0258, 0.74", "-32.6788, 277.302, -47.1914, 0.15", "-32.6636, 278.267, -47.2361, 1.55", "-32.6413, 278.867, -47.2629, 1.92", "-32.5615, 280.632, -47.3376, 0.15", "-32.5337, 281.214, -47.3605, 0.88", "-32.5268, 281.338, -47.3651, 0.88", "-32.4969, 281.759, -47.3805, 0.88", "-32.3936, 283.034, -47.431, 0.15", "-32.3609, 283.521, -47.4444, 0.15", "-32.3322, 284.04, -47.4485, 0.74", "-32.2722, 285.24, -47.4465, 0.15", "-32.2705, 285.298, -47.4454, 0.15", "-32.2676, 285.592, -47.4339, 0.37", "-32.2837, 286.271, -47.393, 0.22", "-32.3029, 286.709, -47.3565, 0.88", "-32.3066, 286.758, -47.3515, 0.88", "-32.4188, 288.088, -47.2692, 0.15", "-32.4646, 288.652, -47.2513, 0.15", "-32.4693, 288.718, -47.2511, 0.15", "-32.5318, 289.651, -47.2773, 1.25", "-32.5456, 289.885, -47.2936, 1.25", "-32.6486, 291.436, -47.4537, 0.15", "-32.6529, 291.495, -47.4618, 0.15", "-32.6946, 292.06, -47.5605, 1.18", "-32.71, 292.234, -47.5932, 1.18", "-32.823, 293.498, -47.8887, 0.15", "-32.9317, 294.424, -48.1537, 0.15", "-32.9665, 294.652, -48.2273, 0.44", "-33.2254, 296.224, -48.7642, 0.15", "-33.426, 297.348, -49.1749, 1.77", "-33.5502, 298.014, -49.4357, 1.55", "-33.7593, 299.07, -49.8782, 0.22", "-33.8511, 299.51, -50.0829, 0.37", "-34.0129, 300.208, -50.4235, 0.15", "-34.0251, 300.25, -50.4452, 0.15", "-34.1705, 300.726, -50.7011, 0.74", "-34.2538, 300.987, -50.8284, 0.74", "-34.4379, 301.598, -51.1039, 0.15", "-34.56, 301.969, -51.2714, 0.66", "-34.6579, 302.246, -51.3913, 1.25", "-35.1093, 303.446, -51.9165, 0.15", "-35.132, 303.504, -51.9416, 0.15", "-35.414, 304.234, -52.246, 0.15", "-35.6688, 304.922, -52.5095, 0.96", "-35.7833, 305.238, -52.6308, 1.55", "-36.3556, 306.886, -53.2394, 0.15", "-36.3699, 306.93, -53.2541, 0.15", "-36.6169, 307.758, -53.5154, 1.18", "-36.7539, 308.262, -53.6668, 0.52", "-36.9692, 309.153, -53.909, 0.15", "-37.0848, 309.671, -54.0332, 0.52", "-37.4153, 311.186, -54.3281, 0.15", "-37.5441, 311.7, -54.418, 0.15", "-37.7653, 312.453, -54.5371, 0.66", "-37.92, 312.908, -54.5981, 0.96", "-38.0508, 313.242, -54.6308, 0.96", "-38.6294, 314.435, -54.6968, 0.15", "-39.0779, 315.202, -54.7119, 0.52", "-39.2835, 315.529, -54.7127, 0.52", "-39.6265, 316.044, -54.7059, 0.15", "-40.0447, 316.648, -54.6922, 1.11", "-41.0989, 318.125, -54.6374, 0.15", "-41.4789, 318.642, -54.6034, 1.18", "-41.7612, 319.031, -54.5815, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.9685, 131.528, -15.8724, 0.59", "-10.9002, 132.091, -15.8772, 0.59", "-10.8578, 132.596, -15.8916, 1.18", "-10.8319, 133.083, -15.919, 1.84", "-10.8232, 133.371, -15.9378, 2.06", "-10.8221, 133.649, -15.9564, 2.06", "-10.8292, 134.004, -15.9795, 1.84", "-10.8544, 134.393, -16.0051, 1.55", "-10.9241, 135.089, -16.0529, 0.37", "-10.9807, 135.534, -16.0829, 0.37", "-11.0599, 136.078, -16.1268, 0.96", "-11.1465, 136.62, -16.1737, 1.47", "-11.193, 136.888, -16.1966, 1.69", "-11.2621, 137.286, -16.2269, 1.55", "-11.3255, 137.647, -16.2537, 1.33", "-11.3895, 138.116, -16.2864, 0.66", "-11.4401, 138.708, -16.3339, 0.37", "-11.4663, 139.384, -16.3907, 0.29", "-11.4665, 139.96, -16.4392, 0.29", "-11.4645, 140.005, -16.4428, 0.29", "-11.3781, 140.988, -16.5089, 0.29", "-11.3215, 141.459, -16.5316, 0.81", "-11.2736, 141.806, -16.548, 0.96", "-11.2683, 141.849, -16.5498, 0.96", "-11.2449, 142.126, -16.5597, 0.96", "-11.2157, 142.824, -16.5791, 0.29", "-11.2195, 143.236, -16.5884, 0.29", "-11.2396, 143.797, -16.5947, 1.47", "-11.2671, 144.336, -16.6137, 2.06", "-11.2749, 144.534, -16.6236, 2.5", "-11.2865, 144.851, -16.643, 2.43", "-11.2958, 145.192, -16.666, 2.14", "-11.3034, 145.582, -16.6944, 1.77", "-11.3125, 146.111, -16.733, 0.66", "-11.3293, 146.914, -16.7885, 0.44", "-11.3487, 147.553, -16.8276, 0.37", "-11.3756, 148.15, -16.8602, 0.37", "-11.4192, 148.748, -16.8875, 1.33", "-11.4738, 149.284, -16.9085, 1.77", "-11.5403, 149.787, -16.9219, 2.28", "-11.5933, 150.098, -16.9339, 2.65", "-11.6414, 150.366, -16.9462, 2.8", "-11.7105, 150.738, -16.9642, 2.5", "-11.7636, 151.05, -16.9781, 1.99", "-11.8045, 151.314, -16.9902, 1.77", "-11.8598, 151.745, -17.0089, 0.81", "-11.9108, 152.331, -17.0279, 0.44", "-11.9445, 152.926, -17.0441, 0.37", "-11.9534, 153.451, -17.0527, 0.74", "-11.9531, 153.718, -17.0545, 0.74", "-11.953, 154.108, -17.0535, 0.74", "-11.963, 154.893, -17.0531, 0.52", "-11.964, 154.931, -17.0534, 0.44", "-11.9874, 155.523, -17.0618, 0.44", "-12.0149, 156.018, -17.0713, 0.44", "-12.0742, 156.883, -17.0912, 0.44", "-12.1682, 157.931, -17.1195, 1.55", "-12.2212, 158.435, -17.1348, 2.43", "-12.2592, 158.801, -17.145, 2.65", "-12.2919, 159.117, -17.1579, 2.87", "-12.3391, 159.577, -17.1798, 2.36", "-12.3892, 160.068, -17.2139, 1.47", "-12.4228, 160.396, -17.2362, 0.96", "-12.4952, 161.045, -17.2822, 0.37", "-12.563, 161.623, -17.3224, 0.37", "-12.648, 162.337, -17.3696, 0.29", "-12.7079, 162.889, -17.4081, 1.69", "-12.7627, 163.436, -17.4622, 2.28", "-12.7899, 163.68, -17.493, 2.73", "-12.8197, 163.909, -17.5271, 2.8", "-12.8775, 164.322, -17.593, 1.99", "-12.9614, 164.904, -17.6995, 0.88", "-13.0803, 165.584, -17.8334, 0.29", "-13.1775, 166.041, -17.9359, 0.37", "-13.2538, 166.365, -18.0082, 0.44", "-13.3007, 166.539, -18.0428, 0.59", "-13.3253, 166.625, -18.0554, 0.59", "-13.4037, 166.906, -18.0768, 0.44", "-13.5069, 167.357, -18.0846, 0.37", "-13.5147, 167.4, -18.0847, 0.37", "-13.6028, 168.08, -18.0849, 0.52", "-13.6584, 168.675, -18.0828, 0.81", "-13.6736, 168.958, -18.0831, 0.81", "-13.6789, 169.249, -18.0854, 0.66", "-13.6786, 169.286, -18.0868, 0.66", "-13.6795, 169.632, -18.1135, 0.44", "-13.6806, 170.277, -18.1864, 0.37", "-13.6804, 170.881, -18.2629, 0.37", "-13.6801, 170.918, -18.2692, 0.37", "-13.6679, 171.511, -18.4006, 1.62", "-13.6562, 172.015, -18.5317, 2.65", "-13.6489, 172.305, -18.6159, 2.65", "-13.6302, 172.911, -18.8089, 1.92", "-13.6071, 173.645, -19.0494, 0.74", "-13.5952, 174.308, -19.2584, 0.37", "-13.6006, 174.895, -19.4164, 0.37", "-13.6022, 174.931, -19.4243, 0.37", "-13.6408, 175.309, -19.4868, 0.37", "-13.6561, 175.402, -19.4957, 0.37", "-13.7747, 175.94, -19.4933, 0.37", "-13.939, 176.589, -19.4535, 1.03", "-14.0745, 177.113, -19.4127, 1.77", "-14.1499, 177.42, -19.3898, 2.06", "-14.2227, 177.727, -19.3664, 1.92", "-14.3211, 178.18, -19.337, 1.33", "-14.3821, 178.5, -19.3221, 0.59", "-14.4719, 179.037, -19.3147, 0.37", "-14.5124, 179.366, -19.3097, 0.59", "-14.5268, 179.594, -19.3063, 0.66", "-14.5294, 179.733, -19.3046, 0.66", "-14.5309, 180.057, -19.3025, 0.37", "-14.5342, 180.382, -19.3015, 0.37", "-14.556, 180.989, -19.3012, 0.37", "-14.589, 181.58, -19.302, 0.37", "-14.6271, 182.131, -19.3035, 0.59", "-14.69, 182.951, -19.3062, 0.52", "-14.731, 183.45, -19.3081, 1.33", "-14.7719, 183.922, -19.3162, 2.14", "-14.8164, 184.386, -19.3383, 2.36", "-14.848, 184.796, -19.37, 2.58", "-14.8577, 185.139, -19.4035, 2.36", "-14.8517, 185.652, -19.4587, 1.62", "-14.8353, 186.157, -19.5168, 0.81", "-14.8064, 186.793, -19.59, 0.52", "-14.7759, 187.472, -19.6606, 0.52", "-14.7556, 187.958, -19.7057, 0.44", "-14.7281, 188.867, -19.778, 0.44", "-14.7148, 189.77, -19.8331, 1.11", "-14.7201, 190.274, -19.8497, 1.84", "-14.7424, 190.77, -19.8561, 2.36", "-14.7597, 190.946, -19.8575, 2.5", "-14.8217, 191.354, -19.8605, 2.21", "-14.8978, 191.752, -19.8616, 1.55", "-14.9773, 192.113, -19.8605, 0.96", "-15.0557, 192.456, -19.8607, 0.66", "-15.1659, 192.995, -19.8627, 0.37", "-15.2467, 193.478, -19.8616, 0.66", "-15.2978, 193.848, -19.8579, 0.88", "-15.3586, 194.444, -19.8481, 0.37", "-15.3837, 194.812, -19.8403, 0.37", "-15.4069, 195.41, -19.8233, 0.37", "-15.4082, 196.146, -19.8, 1.11", "-15.4069, 196.184, -19.7988, 1.11", "-15.367, 196.694, -19.7894, 1.99", "-15.3244, 197.072, -19.7877, 2.21", "-15.2885, 197.344, -19.7906, 2.36", "-15.2044, 197.974, -19.8031, 1.33", "-15.1462, 198.411, -19.8149, 0.52", "-15.0712, 199.065, -19.8353, 0.29", "-15.0462, 199.338, -19.8441, 0.59", "-15.0297, 199.567, -19.8509, 0.59", "-15.004, 200.023, -19.8623, 0.44", "-14.9871, 200.44, -19.8699, 0.37", "-14.9712, 200.901, -19.8733, 0.37", "-14.9539, 201.418, -19.8773, 1.18", "-14.9341, 201.797, -19.8849, 1.77", "-14.9042, 202.208, -19.8968, 2.06", "-14.8721, 202.577, -19.9104, 1.92", "-14.8381, 202.937, -19.9263, 1.55", "-14.798, 203.499, -19.954, 0.37", "-14.7698, 204.112, -19.9866, 0.37", "-14.7697, 204.157, -19.99, 0.37", "-14.7872, 204.616, -20.0297, 0.37", "-14.7901, 204.661, -20.0338, 0.37", "-14.8576, 205.523, -20.1086, 0.37", "-14.862, 205.568, -20.1121, 0.37", "-14.947, 206.372, -20.1826, 1.18", "-14.9996, 206.868, -20.2276, 1.62", "-15.0246, 207.14, -20.2517, 1.84", "-15.0547, 207.604, -20.2885, 1.55", "-15.066, 208.059, -20.3263, 1.11", "-15.0691, 208.509, -20.3624, 0.52", "-15.0609, 209.192, -20.4126, 0.44", "-15.048, 209.721, -20.454, 0.37", "-15.0264, 210.392, -20.506, 0.37", "-14.9851, 211.287, -20.5792, 1.33", "-14.9708, 211.558, -20.6007, 1.84", "-14.9656, 211.655, -20.6075, 1.84", "-14.9502, 211.928, -20.6264, 1.84", "-14.9296, 212.537, -20.6638, 1.25", "-14.9221, 212.901, -20.688, 0.74", "-14.92, 213.496, -20.725, 0.37", "-14.9188, 213.928, -20.7537, 0.44", "-14.9179, 214.402, -20.7913, 0.44", "-14.9197, 215.083, -20.851, 0.44", "-14.9249, 215.648, -20.9044, 1.03", "-14.9353, 216.154, -20.9523, 1.18", "-14.9432, 216.585, -21.0011, 0.74", "-14.9516, 216.905, -21.0402, 0.74", "-14.9692, 217.401, -21.1018, 0.59", "-14.9712, 217.446, -21.1071, 0.59", "-14.9906, 217.811, -21.1411, 0.59", "-15.0251, 218.538, -21.217, 1.47", "-15.0426, 218.992, -21.2632, 2.21", "-15.0533, 219.358, -21.2977, 2.5", "-15.0553, 219.674, -21.3266, 2.65", "-15.0434, 220.277, -21.3742, 1.55", "-15.0121, 220.89, -21.4132, 0.74", "-14.9552, 221.603, -21.4551, 0.52", "-14.95, 221.653, -21.4587, 0.52", "-14.8755, 222.232, -21.5058, 0.52", "-14.7581, 223.001, -21.5763, 1.33", "-14.6665, 223.541, -21.6285, 1.4", "-14.5635, 224.112, -21.6844, 1.18", "-14.4892, 224.553, -21.7364, 0.52", "-14.4769, 224.64, -21.7485, 0.52", "-14.4182, 225.156, -21.8292, 0.52", "-14.3801, 225.581, -21.899, 0.52", "-14.3283, 226.355, -22.0194, 0.74", "-14.2974, 227.035, -22.1098, 0.96", "-14.2751, 227.747, -22.1983, 1.99", "-14.2699, 227.982, -22.2254, 2.58", "-14.261, 228.312, -22.258, 2.36", "-14.2464, 228.685, -22.2895, 2.14", "-14.2132, 229.231, -22.3237, 1.03", "-14.1587, 229.816, -22.3522, 0.52", "-14.0846, 230.486, -22.3834, 0.52", "-14.0076, 231.191, -22.4107, 0.52", "-13.968, 231.569, -22.4224, 0.88", "-13.9311, 231.931, -22.4308, 0.52", "-13.8757, 232.523, -22.4386, 0.52", "-13.84, 232.997, -22.4383, 0.52", "-13.8036, 233.762, -22.4365, 1.4", "-13.7932, 234.186, -22.4354, 1.77", "-13.7906, 234.468, -22.4334, 1.92", "-13.7904, 234.741, -22.4301, 1.62", "-13.7926, 235.208, -22.4222, 1.11", "-13.7936, 235.762, -22.4136, 0.74", "-13.793, 236.57, -22.4106, 0.59", "-13.7967, 237.537, -22.407, 0.59", "-13.8019, 238.295, -22.4041, 0.44", "-13.8032, 238.618, -22.4027, 0.66", "-13.8033, 238.663, -22.4024, 0.66", "-13.8028, 239.398, -22.3978, 1.33", "-13.8029, 239.995, -22.3935, 2.21", "-13.8018, 240.456, -22.3828, 2.73", "-13.8075, 240.889, -22.3704, 2.87", "-13.8116, 241.09, -22.3662, 3.09", "-13.8264, 241.514, -22.3631, 2.36", "-13.853, 242.018, -22.3654, 1.25", "-13.8792, 242.379, -22.3725, 0.66", "-13.9499, 243.114, -22.4064, 0.37", "-14.0179, 243.676, -22.4442, 0.66", "-14.0709, 244.089, -22.4779, 0.52", "-14.0991, 244.318, -22.4995, 0.66", "-14.1484, 244.77, -22.5464, 0.74", "-14.193, 245.288, -22.6115, 0.81", "-14.2234, 245.834, -22.6908, 1.25", "-14.231, 246.18, -22.7442, 1.69", "-14.228, 246.437, -22.7861, 1.69", "-14.2086, 246.94, -22.8698, 1.4", "-14.1756, 247.491, -22.9629, 1.11", "-14.14, 247.938, -23.0313, 0.74", "-14.0866, 248.603, -23.127, 0.59", "-14.0832, 248.652, -23.1338, 0.59", "-14.0577, 249.158, -23.1944, 0.59", "-14.0559, 249.202, -23.1983, 0.59", "-14.0395, 250.07, -23.2408, 0.59", "-14.0459, 250.617, -23.2533, 1.11", "-14.048, 250.661, -23.2545, 1.11", "-14.0771, 251.065, -23.2657, 1.77", "-14.1119, 251.444, -23.2786, 2.06", "-14.1453, 251.759, -23.2926, 2.06", "-14.1973, 252.167, -23.3136, 1.77", "-14.2321, 252.447, -23.3277, 1.4", "-14.2693, 252.768, -23.3437, 0.81", "-14.3536, 253.496, -23.3823, 0.59", "-14.4342, 254.232, -23.4217, 0.59", "-14.4767, 254.685, -23.4502, 0.96", "-14.5069, 255.001, -23.4716, 0.96", "-14.5165, 255.099, -23.4782, 0.96", "-14.5402, 255.346, -23.496, 0.81", "-14.5793, 255.777, -23.5268, 0.81", "-14.6356, 256.477, -23.5757, 0.37", "-14.685, 257.163, -23.6233, 0.37", "-14.7259, 257.804, -23.6549, 0.37", "-14.7519, 258.25, -23.6687, 1.25", "-14.7711, 258.711, -23.6687, 1.77", "-14.7835, 259.092, -23.6564, 2.28", "-14.7865, 259.453, -23.6314, 2.58", "-14.7796, 259.912, -23.5915, 2.36", "-14.7732, 260.316, -23.5519, 1.92", "-14.7652, 260.814, -23.5021, 0.96", "-14.7576, 261.279, -23.4598, 0.37", "-14.7522, 261.94, -23.4103, 0.37", "-14.7528, 262.406, -23.3905, 0.74", "-14.7565, 262.681, -23.389, 0.74", "-14.7667, 263.08, -23.3954, 0.74", "-14.7816, 263.493, -23.4216, 0.37", "-14.7989, 263.946, -23.4737, 0.29", "-14.8126, 264.294, -23.5312, 0.29", "-14.8141, 264.337, -23.54, 0.29", "-14.8358, 265.189, -23.7452, 0.29", "-14.8377, 265.631, -23.8656, 0.74", "-14.8268, 266.303, -24.055, 1.84", "-14.8197, 266.552, -24.1224, 2.28", "-14.8188, 266.588, -24.131, 2.28", "-14.8115, 266.99, -24.2166, 2.06", "-14.8053, 267.542, -24.3172, 1.25", "-14.8109, 268.188, -24.399, 0.15", "-14.8179, 268.556, -24.4293, 0.15", "-14.8353, 269.112, -24.46, 0.74", "-14.8449, 269.337, -24.4673, 1.03", "-14.8606, 269.617, -24.4705, 1.03", "-14.8824, 269.929, -24.4714, 0.74", "-14.9094, 270.368, -24.4911, 0.22", "-14.9364, 270.912, -24.5308, 0.22", "-14.9711, 271.83, -24.6119, 0.88", "-14.9827, 272.196, -24.6455, 1.47", "-14.9909, 272.512, -24.6771, 1.69", "-15.0039, 273.196, -24.7482, 1.03", "-15.0161, 273.892, -24.8218, 0.37", "-15.0197, 274.821, -24.9168, 0.37", "-15.0102, 275.645, -25.0029, 0.29", "-14.9973, 276.49, -25.084, 1.4", "-14.9931, 276.821, -25.1111, 1.84", "-14.9904, 277.188, -25.1335, 1.69", "-14.9864, 277.692, -25.1678, 0.81", "-14.9799, 278.537, -25.2274, 0.29", "-14.9727, 279.308, -25.2795, 0.29", "-14.9685, 279.714, -25.3015, 0.96", "-14.9656, 280.088, -25.3187, 1.33", "-14.9616, 280.438, -25.3301, 1.33", "-14.9566, 280.749, -25.339, 1.03", "-14.9553, 280.788, -25.3397, 1.03", "-14.9173, 281.499, -25.3567, 0.29", "-14.8761, 282.145, -25.3744, 0.29", "-14.8253, 282.956, -25.412, 0.88", "-14.795, 283.547, -25.4465, 1.69", "-14.7814, 283.883, -25.4681, 2.36", "-14.7779, 284.07, -25.4806, 2.58", "-14.7779, 284.545, -25.5149, 2.06", "-14.7871, 285.499, -25.5788, 0.37", "-14.8006, 286.132, -25.617, 0.37", "-14.8231, 286.823, -25.6495, 0.37", "-14.8415, 287.369, -25.6715, 0.37", "-14.8428, 287.414, -25.6729, 0.37", "-14.8561, 288.468, -25.6899, 0.37", "-14.8554, 288.513, -25.6909, 0.37", "-14.8272, 289.107, -25.7151, 0.37", "-14.7954, 289.575, -25.7416, 0.96", "-14.7539, 290.107, -25.777, 1.25", "-14.7094, 290.649, -25.8164, 0.88", "-14.6306, 291.527, -25.8874, 0.29", "-14.624, 291.594, -25.8927, 0.29", "-14.562, 292.142, -25.9475, 0.88", "-14.5046, 292.646, -26.0008, 1.62", "-14.4711, 292.947, -26.0314, 1.99", "-14.436, 293.254, -26.058, 1.99", "-14.3992, 293.533, -26.0745, 1.69", "-14.3078, 294.138, -26.1211, 0.59", "-14.1789, 294.895, -26.1852, 0.29", "-14.1014, 295.355, -26.2327, 0.81", "-14.036, 295.756, -26.277, 0.81", "-13.9495, 296.319, -26.3402, 0.29", "-13.865, 296.92, -26.4054, 0.29", "-13.7466, 297.831, -26.5234, 0.29", "-13.642, 298.732, -26.6681, 1.25", "-13.606, 299.074, -26.7269, 1.69", "-13.5794, 299.346, -26.7748, 1.92", "-13.5358, 299.831, -26.8582, 1.47", "-13.4526, 300.681, -26.9906, 0.29", "-13.3918, 301.187, -27.0689, 0.29", "-13.2925, 301.863, -27.162, 0.88", "-13.2384, 302.187, -27.2029, 1.18", "-13.1775, 302.51, -27.2382, 0.96", "-13.0842, 302.962, -27.2746, 0.44", "-12.9664, 303.547, -27.2917, 0.29", "-12.9542, 303.61, -27.2957, 0.29", "-12.875, 304.138, -27.3458, 0.29", "-12.8702, 304.183, -27.3506, 0.29", "-12.8438, 304.505, -27.3899, 0.81", "-12.8266, 304.775, -27.4236, 0.81", "-12.7913, 305.262, -27.4811, 0.66", "-12.7309, 305.946, -27.5586, 0.29", "-12.6676, 306.506, -27.6149, 0.29", "-12.5971, 307.057, -27.6706, 1.11", "-12.5333, 307.545, -27.7167, 1.69", "-12.4939, 307.887, -27.7483, 1.92", "-12.4651, 308.188, -27.773, 1.92", "-12.4108, 308.947, -27.8406, 0.74", "-12.3848, 309.547, -27.8947, 0.37", "-12.3744, 310.224, -27.9526, 0.37", "-12.379, 311.017, -28.0247, 0.29", "-12.3888, 311.482, -28.0704, 0.29", "-12.3974, 311.892, -28.1142, 0.88", "-12.4014, 312.158, -28.1429, 0.88", "-12.3972, 312.495, -28.1735, 0.52", "-12.3797, 312.887, -28.2083, 0.29", "-12.3535, 313.299, -28.2418, 0.29", "-12.3259, 313.84, -28.2851, 0.29", "-12.3093, 314.35, -28.3224, 1.55", "-12.2915, 314.953, -28.3586, 2.58", "-12.2831, 315.241, -28.3702, 2.65", "-12.2642, 315.698, -28.3787, 2.21", "-12.2287, 316.293, -28.3869, 1.11", "-12.1874, 316.837, -28.3953, 0.52", "-12.1288, 317.496, -28.4091, 0.52", "-12.0542, 318.167, -28.4251, 0.74", "-11.9704, 318.801, -28.4413, 0.88", "-11.8687, 319.413, -28.4572, 1.33", "-11.8609, 319.45, -28.4587, 1.33", "-11.7711, 319.8, -28.4771, 1.62", "-11.7009, 320.044, -28.4918, 1.62", "-11.6853, 320.092, -28.4944, 1.62", "-11.6455, 320.209, -28.4989, 1.62", "-11.404, 320.903, -28.5115, 0.52", "-11.2232, 321.436, -28.5195, 0.29", "-11.0603, 321.916, -28.5271, 0.29", "-10.9107, 322.403, -28.5133, 0.96", "-10.8263, 322.727, -28.4866, 1.4", "-10.8181, 322.77, -28.4811, 1.4", "-10.7873, 323.045, -28.4355, 1.4", "-10.7843, 323.097, -28.4251, 1.4", "-10.7717, 323.769, -28.2831, 1.03", "-10.7724, 324.383, -28.1537, 0.44", "-10.7735, 325.151, -27.9996, 0.29", "-10.777, 325.692, -27.8826, 0.29", "-10.7818, 326.361, -27.7398, 1.33", "-10.7852, 326.715, -27.6675, 1.84", "-10.7898, 327.076, -27.6011, 1.84", "-10.7968, 327.483, -27.528, 1.25", "-10.8169, 328.249, -27.3982, 0.37", "-10.8507, 329.096, -27.2813, 0.29", "-10.8532, 329.139, -27.2764, 0.29", "-10.8904, 329.64, -27.225, 0.44", "-10.9459, 330.281, -27.1679, 0.52", "-11.0104, 330.909, -27.1241, 0.44", "-11.0965, 331.728, -27.0992, 0.44", "-11.193, 332.614, -27.0805, 1.11", "-11.2463, 333.118, -27.0736, 1.69", "-11.2796, 333.448, -27.072, 1.84", "-11.3109, 333.802, -27.0737, 1.84", "-11.3646, 334.488, -27.0845, 0.66", "-11.4145, 335.216, -27.1059, 0.37", "-11.4198, 335.305, -27.1099, 0.37", "-11.4678, 336.178, -27.1446, 0.37", "-11.4946, 336.875, -27.1662, 0.96", "-11.4954, 336.966, -27.1684, 0.96", "-11.4845, 337.429, -27.1758, 1.55", "-11.4533, 337.845, -27.1851, 1.84", "-11.4485, 337.889, -27.1862, 1.84", "-11.3969, 338.27, -27.1982, 1.69", "-11.3199, 338.819, -27.2169, 0.74", "-11.2446, 339.403, -27.2188, 0.29", "-11.173, 340.056, -27.2046, 0.29", "-11.1696, 340.101, -27.2028, 0.29", "-11.1414, 340.74, -27.1656, 0.29", "-11.1413, 340.784, -27.1621, 0.29", "-11.1586, 341.427, -27.093, 0.81", "-11.1794, 341.83, -27.0453, 1.47", "-11.2008, 342.15, -27.0097, 1.77", "-11.2059, 342.221, -27.0043, 1.77", "-11.228, 342.582, -26.988, 1.55", "-11.2333, 342.671, -26.9863, 1.55", "-11.2579, 343.094, -26.9918, 0.96", "-11.2742, 343.561, -26.9968, 0.59", "-11.2922, 344.426, -26.9897, 0.29", "-11.2989, 344.997, -26.9776, 0.29", "-11.2991, 345.043, -26.9762, 0.29", "-11.2958, 345.734, -26.9483, 0.59", "-11.2885, 346.19, -26.9251, 0.81", "-11.2667, 346.776, -26.8905, 1.25", "-11.2497, 347.063, -26.872, 1.62", "-11.238, 347.29, -26.8598, 1.69", "-11.2324, 347.388, -26.8559, 1.69", "-11.2144, 347.719, -26.8474, 1.25", "-11.1921, 348.256, -26.8337, 0.66", "-11.1703, 348.81, -26.8215, 0.66", "-11.1461, 349.457, -26.8033, 0.66", "-11.1195, 350.239, -26.7781, 0.37", "-11.1074, 350.794, -26.7589, 0.37", "-11.0933, 351.459, -26.734, 1.62", "-11.0827, 351.828, -26.7193, 2.06", "-11.0724, 352.077, -26.7093, 2.06", "-11.0468, 352.63, -26.6884, 1.47", "-11.0188, 353.175, -26.6704, 0.81", "-10.976, 353.789, -26.6568, 0.37", "-10.9114, 354.522, -26.652, 0.88", "-10.9066, 354.566, -26.6517, 0.88", "-10.8679, 354.88, -26.6502, 0.88", "-10.8624, 354.919, -26.6501, 0.88", "-10.8124, 355.303, -26.653, 1.11", "-10.7997, 355.413, -26.6555, 1.11", "-10.7795, 355.635, -26.6494, 1.11", "-10.7756, 355.68, -26.6469, 1.11", "-10.7446, 356.045, -26.6184, 0.81", "-10.7012, 356.596, -26.5671, 0.66", "-10.6612, 357.111, -26.5133, 0.44", "-10.6038, 357.818, -26.4362, 0.29", "-10.5977, 357.887, -26.4285, 0.29", "-10.5568, 358.252, -26.3865, 0.29", "-10.5479, 358.318, -26.3792, 0.29", "-10.4846, 358.848, -26.3361, 0.81", "-10.4792, 358.905, -26.3334, 0.81", "-10.451, 359.254, -26.3164, 0.81", "-10.442, 359.388, -26.3073, 0.81", "-10.3963, 360.089, -26.2512, 0.59", "-10.347, 360.951, -26.1771, 0.88", "-10.3431, 361.04, -26.1695, 0.88", "-10.3214, 361.814, -26.077, 1.62", "-10.3173, 362.147, -26.0299, 1.77", "-10.3138, 362.659, -25.9508, 1.4", "-10.3125, 363.163, -25.8668, 0.88", "-10.3159, 364.028, -25.7209, 0.52", "-10.3299, 364.768, -25.6089, 0.74", "-10.3518, 365.227, -25.5528, 1.33", "-10.3917, 365.709, -25.4955, 1.84", "-10.4177, 365.972, -25.4671, 1.99", "-10.4535, 366.343, -25.4333, 1.99", "-10.496, 366.829, -25.3997, 1.18", "-10.5466, 367.477, -25.373, 0.52", "-10.6111, 368.444, -25.3306, 0.44", "-10.6542, 369.171, -25.2988, 1.03", "-10.6768, 369.731, -25.2752, 1.25", "-10.676, 370.118, -25.2604, 1.55", "-10.6744, 370.164, -25.2588, 1.55", "-10.6471, 370.596, -25.2484, 1.55", "-10.6105, 371.147, -25.2429, 1.25", "-10.5809, 371.751, -25.2379, 0.74", "-10.5357, 372.874, -25.2295, 0.29", "-10.5343, 372.918, -25.2292, 0.29", "-10.509, 373.933, -25.223, 0.29", "-10.5009, 374.762, -25.2192, 0.29", "-10.5089, 375.543, -25.2169, 1.47", "-10.5242, 376.026, -25.2165, 2.06", "-10.5433, 376.343, -25.2171, 2.36", "-10.5798, 376.903, -25.2183, 2.06", "-10.6457, 377.852, -25.2208, 0.81", "-10.7165, 378.723, -25.2063, 0.81", "-10.7665, 379.282, -25.1875, 0.52", "-10.8296, 379.958, -25.1541, 0.81", "-10.8877, 380.607, -25.1118, 1.03", "-10.8912, 380.651, -25.108, 1.03", "-10.9207, 381.242, -25.0449, 1.03", "-10.9224, 381.351, -25.0289, 1.03", "-10.9165, 381.956, -24.9329, 0.88", "-10.9135, 382.026, -24.9217, 0.88", "-10.8746, 382.667, -24.8267, 0.74", "-10.8146, 383.38, -24.736, 0.37", "-10.7199, 384.294, -24.6435, 1.18", "-10.6588, 384.908, -24.5873, 1.92", "-10.6256, 385.275, -24.5578, 1.92", "-10.5908, 385.7, -24.5288, 1.62", "-10.5437, 386.369, -24.4939, 0.96", "-10.5042, 387.022, -24.4716, 0.74", "-10.4645, 387.805, -24.4692, 0.74", "-10.4438, 388.498, -24.4715, 0.74", "-10.4423, 388.587, -24.4722, 0.74", "-10.4388, 389.267, -24.4802, 0.74", "-10.4391, 389.373, -24.4826, 0.74", "-10.4375, 390.126, -24.5056, 0.74", "-10.4311, 390.957, -24.5354, 0.96", "-10.4284, 391.145, -24.5427, 0.96", "-10.4156, 391.925, -24.5708, 0.96", "-10.4098, 392.408, -24.5861, 1.47", "-10.4094, 392.547, -24.5895, 1.47", "-10.4123, 393.207, -24.5999, 1.69", "-10.4132, 393.27, -24.6006, 1.69", "-10.4183, 393.689, -24.6117, 1.69", "-10.4113, 394.425, -24.6349, 1.11", "-10.4021, 394.755, -24.6508, 1.03", "-10.3902, 395.07, -24.6699, 1.03", "-10.3591, 395.798, -24.7201, 0.59", "-10.3104, 396.833, -24.795, 0.44", "-10.251, 397.942, -24.8809, 0.44", "-10.2049, 398.617, -24.9326, 1.11", "-10.1489, 399.248, -24.9846, 1.69", "-10.0948, 399.704, -25.0206, 1.99", "-10.0275, 400.18, -25.0559, 1.62", "-10.0205, 400.224, -25.0585, 1.62", "-9.90408, 400.926, -25.0942, 0.88", "-9.74792, 401.864, -25.1407, 0.74", "-9.54846, 403.037, -25.2076, 0.74", "-9.54111, 403.08, -25.2101, 0.74", "-9.4184, 403.809, -25.2564, 0.74", "-9.26714, 404.73, -25.2884, 0.88", "-9.12223, 405.697, -25.2946, 0.66", "-9.11534, 405.748, -25.2932, 0.66", "-9.01003, 406.595, -25.2572, 0.66", "-8.92992, 407.263, -25.2186, 0.66", "-8.83959, 408.182, -25.1478, 1.25", "-8.81362, 408.594, -25.1079, 1.99", "-8.80888, 408.866, -25.0777, 1.99", "-8.8191, 409.331, -25.0338, 1.55", "-8.82616, 409.425, -25.0266, 1.55", "-8.89279, 410.011, -24.9983, 1.33", "-8.96683, 410.648, -25.0073, 1.18", "-9.01484, 411.2, -25.0193, 0.96", "-9.03646, 411.667, -25.0144, 0.96", "-9.03599, 411.762, -25.011, 0.96", "-9.01245, 412.305, -24.982, 0.66", "-8.95339, 412.948, -24.9369, 0.52", "-8.88256, 413.526, -24.8892, 0.52", "-8.76316, 414.364, -24.8119, 0.81", "-8.64844, 415.064, -24.743, 1.33", "-8.63165, 415.157, -24.7328, 1.33", "-8.52607, 415.687, -24.6823, 1.77", "-8.458, 416.015, -24.657, 2.28", "-8.44916, 416.058, -24.6573, 2.28", "-8.37756, 416.479, -24.7069, 2.28", "-8.33742, 416.752, -24.7487, 2.28", "-8.26362, 417.323, -24.8427, 1.92", "-8.25861, 417.366, -24.8503, 1.92", "-8.16124, 418.285, -25.0137, 0.81", "-8.07927, 419.21, -25.122, 0.81", "-8.07235, 419.307, -25.1289, 0.81", "-8.04051, 419.868, -25.1422, 0.66", "-8.0384, 419.919, -25.1401, 0.66", "-8.02345, 420.585, -25.0868, 0.66", "-8.02336, 421.46, -24.9607, 0.66", "-8.02556, 421.546, -24.9454, 0.66", "-8.05702, 422.047, -24.8395, 1.18", "-8.06525, 422.127, -24.8215, 1.18", "-8.11637, 422.578, -24.7325, 1.4", "-8.13281, 422.709, -24.7112, 1.4", "-8.17375, 423.036, -24.6715, 1.4", "-8.2485, 423.68, -24.5953, 1.11", "-8.3509, 424.711, -24.4829, 0.88", "-8.42107, 425.496, -24.4117, 1.03", "-8.48055, 426.271, -24.3572, 1.33", "-8.48665, 426.359, -24.3531, 1.33", "-8.50692, 426.647, -24.3417, 1.33", "-8.56904, 427.492, -24.3251, 0.88", "-8.6043, 427.947, -24.3105, 0.88", "-8.65909, 428.686, -24.2768, 0.74", "-8.69035, 429.229, -24.2456, 0.74", "-8.71551, 429.823, -24.2077, 1.33", "-8.71695, 429.873, -24.2043, 1.33", "-8.72158, 430.392, -24.1858, 1.92", "-8.72147, 430.797, -24.1883, 2.21", "-8.72688, 431.101, -24.2123, 2.21", "-8.75004, 431.572, -24.2774, 1.77", "-8.78954, 432.159, -24.3812, 1.18", "-8.84287, 432.776, -24.4963, 0.81", "-8.9388, 433.708, -24.681, 0.74", "-9.04688, 434.728, -24.8782, 0.66", "-9.13057, 435.599, -25.0315, 0.66", "-9.13429, 435.643, -25.0387, 0.66", "-9.16664, 436.286, -25.1197, 0.66", "-9.16598, 436.359, -25.1247, 0.66", "-9.10021, 437.301, -25.1623, 0.66", "-8.99712, 438.144, -25.1647, 0.66", "-8.98725, 438.207, -25.1638, 0.66", "-8.85952, 438.995, -25.1511, 0.66", "-8.65272, 440.175, -25.1276, 0.66", "-8.64053, 440.241, -25.1263, 0.66", "-8.57429, 440.583, -25.1189, 1.25", "-8.56465, 440.632, -25.1178, 1.25", "-8.42614, 441.376, -25.1022, 1.25", "-8.41504, 441.442, -25.101, 1.25", "-8.30781, 442.088, -25.078, 1.25", "-8.21872, 442.64, -25.0497, 0.96", "-8.13504, 443.191, -25.0079, 0.96", "-8.12973, 443.229, -25.0044, 0.96", "-8.06178, 443.79, -24.9478, 1.11", "-7.95818, 444.75, -24.8447, 0.52", "-7.89474, 445.383, -24.775, 1.18", "-7.82027, 446.059, -24.7032, 1.92", "-7.76614, 446.51, -24.6656, 2.43", "-7.71301, 446.918, -24.6405, 2.43", "-7.64517, 447.409, -24.6203, 2.43", "-7.52741, 448.233, -24.6082, 1.25", "-7.40068, 449.021, -24.6177, 0.59", "-7.2599, 449.863, -24.672, 0.74", "-7.16822, 450.394, -24.726, 1.03", "-7.14797, 450.523, -24.7448, 1.03", "-7.10295, 450.87, -24.8111, 1.03", "-7.05635, 451.355, -24.9221, 0.59", "-7.01679, 452.081, -25.1033, 0.59", "-7.01473, 452.154, -25.1203, 0.59", "-6.97963, 452.829, -25.2671, 0.59", "-6.95966, 453.019, -25.2968, 1.03", "-6.88928, 453.502, -25.3468, 0.66", "-6.83316, 453.814, -25.3619, 0.66", "-6.7203, 454.369, -25.345, 0.66", "-6.56742, 455.13, -25.2966, 0.59", "-6.39156, 456.029, -25.219, 1.03", "-6.32857, 456.365, -25.1861, 1.84", "-6.27288, 456.69, -25.1523, 1.84", "-6.14511, 457.544, -25.063, 1.18", "-6.06112, 458.227, -24.9925, 0.66", "-6.01382, 458.876, -24.9312, 0.66", "-6.01032, 458.989, -24.9236, 0.66", "-6.00297, 459.89, -24.8806, 0.66", "-6.01147, 460.595, -24.8623, 1.18", "-6.02691, 461.078, -24.8628, 1.18", "-6.06033, 461.85, -24.8652, 0.66", "-6.09558, 462.485, -24.8686, 0.66", "-6.13865, 463.085, -24.8739, 1.25", "-6.18546, 463.577, -24.8784, 1.99", "-6.22544, 463.943, -24.8807, 2.21", "-6.32147, 464.741, -24.8865, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.5159, -68.3504, -16.097, 0.44", "-13.8774, -68.7406, -15.9176, 0.44", "-13.9095, -68.7764, -15.9011, 0.44", "-14.377, -69.3285, -15.6531, 1.03", "-14.8279, -69.8481, -15.4146, 1.18", "-15.1465, -70.2073, -15.2479, 0.59", "-15.1781, -70.2426, -15.2315, 0.59", "-15.4825, -70.6023, -15.0787, 0.22", "-15.7851, -70.9537, -14.9218, 0.22", "-16.0938, -71.2988, -14.7576, 0.59", "-16.2992, -71.5335, -14.6455, 0.59", "-16.3437, -71.5926, -14.6178, 0.59", "-16.6424, -72.0338, -14.4181, 0.22", "-16.8691, -72.4096, -14.2594, 1.18", "-17.0793, -72.8406, -14.1069, 1.25", "-17.0986, -72.8885, -14.0924, 1.25", "-17.3981, -73.801, -13.8123, 0.22", "-17.4775, -74.0827, -13.7291, 0.37", "-17.5151, -74.2763, -13.6722, 0.37", "-17.6553, -75.3545, -13.3479, 0.22", "-17.6885, -75.7254, -13.2355, 0.22", "-17.747, -76.5582, -12.9789, 1.47", "-17.7826, -77.2227, -12.8002, 2.21", "-17.8113, -77.8959, -12.6327, 2.21", "-17.8133, -77.9455, -12.6196, 2.21", "-17.8127, -78.8894, -12.3877, 0.74", "-17.8114, -78.9396, -12.3772, 0.74", "-17.7755, -79.9582, -12.2167, 0.22", "-17.7668, -80.1758, -12.1858, 0.59", "-17.7448, -81.2316, -12.0523, 0.22", "-17.7264, -81.9073, -11.9714, 0.22", "-17.698, -82.5103, -11.8982, 0.22", "-17.6763, -83.0219, -11.8342, 0.52", "-17.6694, -83.2548, -11.8076, 0.52", "-17.6513, -84.2235, -11.7254, 0.22", "-17.6399, -84.8418, -11.697, 0.22", "-17.6256, -85.7251, -11.6633, 1.55", "-17.5981, -86.2298, -11.6504, 1.69", "-17.443, -87.6096, -11.6124, 0.22", "-17.3206, -88.3084, -11.5945, 0.22", "-17.2008, -88.7813, -11.5872, 0.52", "-17.0447, -89.2633, -11.6013, 0.52", "-16.7644, -89.9951, -11.6632, 0.22", "-16.5215, -90.5669, -11.7335, 1.4", "-16.3024, -91.0409, -11.8108, 1.69", "-16.1301, -91.4222, -11.8764, 1.77", "-15.5875, -92.6829, -12.0919, 0.15", "-15.2345, -93.5473, -12.2476, 0.22", "-15.0167, -94.1248, -12.3626, 0.74", "-14.847, -94.63, -12.462, 0.74", "-14.6523, -95.2669, -12.5726, 0.22", "-14.6023, -95.4479, -12.5958, 0.59", "-14.5217, -95.762, -12.6171, 0.59", "-14.5067, -95.8206, -12.6224, 0.59", "-14.2745, -96.7355, -12.7104, 0.22", "-14.1505, -97.2871, -12.7793, 0.74", "-14.0073, -97.901, -12.8779, 0.96", "-13.9045, -98.3221, -12.9507, 0.66", "-13.5642, -99.6699, -13.2109, 0.29", "-13.3668, -100.414, -13.366, 0.22", "-13.1421, -101.211, -13.5431, 0.22", "-12.8705, -102.199, -13.7675, 1.55", "-12.7905, -102.495, -13.838, 1.92", "-12.5947, -103.235, -14.0218, 0.96", "-12.4911, -103.659, -14.1366, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.5159, -68.3504, -16.097, 2.43", "-13.9344, -69.9177, -16.881, 2.43", "-14.3087, -71.3837, -17.5102, 0.96", "-14.5968, -72.5, -17.9174, 0.52", "-14.8599, -73.5291, -18.2571, 0.52", "-15.1818, -74.8185, -18.6568, 0.52", "-15.4863, -76.0791, -19.0307, 0.52", "-15.7408, -77.2339, -19.287, 0.52", "-15.994, -78.4428, -19.4999, 0.52", "-16.2313, -79.6489, -19.6905, 2.58", "-16.5022, -81.0956, -19.9501, 3.68", "-16.574, -81.4574, -20.0234, 3.68", "-16.7697, -82.3284, -20.2113, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.4247, -241.225, 63.4785, 0.59", "-10.2878, -243.695, 63.3723, 0.59", "-10.2574, -244.884, 63.2979, 0.37", "-10.2991, -246.071, 63.176, 0.37", "-10.3867, -246.879, 63.0384, 0.74", "-10.5281, -247.777, 62.8434, 0.74", "-10.6761, -248.507, 62.6552, 0.96", "-10.7037, -248.584, 62.6304, 0.96", "-11.0457, -249.422, 62.3082, 1.25", "-11.4754, -250.312, 61.9984, 0.81", "-11.5107, -250.389, 61.9823, 0.81", "-11.9643, -251.444, 61.8626, 0.59", "-12.4322, -252.714, 61.8054, 0.59", "-12.4547, -252.784, 61.8048, 0.59", "-12.8484, -254.223, 61.8351, 0.44", "-13.2546, -255.804, 61.8761, 0.44", "-13.2763, -255.888, 61.8781, 0.44", "-13.6615, -257.344, 61.8974, 2.14", "-13.8825, -258.163, 61.8732, 3.09", "-14.0629, -258.916, 61.8339, 3.61", "-14.1968, -259.795, 61.7321, 3.61", "-15.1093, -272.008, 60.0325, 3.61", "-15.3233, -283.749, 56.3887, 3.61", "-14.7356, -294.827, 51.2572, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.4247, -241.225, 63.4785, 0.59", "-9.61422, -242.307, 64.0332, 0.59", "-8.87075, -243.289, 64.6122, 0.37", "-8.41955, -243.902, 65.2816, 0.37", "-7.99634, -244.507, 66.3775, 0.37", "-7.97551, -244.539, 66.4605, 0.37", "-7.73212, -244.954, 67.6632, 0.74", "-7.73311, -244.97, 67.7422, 0.74", "-7.98553, -245.424, 70.2301, 0.74", "-7.99317, -245.436, 70.2871, 0.74", "-8.09027, -245.652, 71.0852, 0.74", "-8.14199, -245.916, 71.7283, 0.29", "-8.13255, -246.463, 72.6019, 0.29", "-8.0545, -246.969, 73.2328, 0.29", "-7.8865, -247.507, 73.7022, 0.29", "-7.72244, -247.99, 74.1127, 0.81", "-7.70154, -248.043, 74.1557, 0.81", "-7.46708, -248.459, 74.5053, 1.25", "-7.21276, -248.743, 74.7609, 1.25", "-6.82632, -249.07, 75.1138, 0.59", "-3.5825, -254.384, 82.8491, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-6.32147, 464.741, -24.8865, 0.44", "-8.3093, 466.925, -27.2255, 0.44", "-9.06935, 467.869, -28.1408, 0.44", "-9.54212, 468.505, -28.7183, 0.74", "-9.56935, 468.548, -28.7546, 0.74", "-9.92892, 469.26, -29.2947, 0.74", "-9.94921, 469.308, -29.3278, 0.74", "-10.0863, 470.174, -29.6622, 0.44", "-10.0867, 470.24, -29.6952, 0.44", "-10.0581, 471.04, -30.144, 0.88", "-10.0553, 471.862, -30.5935, 0.96", "-10.0711, 472.333, -30.8418, 1.25", "-10.0745, 472.387, -30.8728, 1.25", "-10.2162, 473.507, -31.5166, 0.66", "-10.3986, 474.386, -32.0193, 0.37", "-10.5781, 474.988, -32.3554, 0.74", "-10.777, 475.568, -32.6839, 0.74", "-11.0279, 476.23, -33.0503, 0.74", "-11.4337, 477.227, -33.5737, 0.29", "-11.946, 478.365, -34.1113, 0.29", "-12.3085, 479.137, -34.4679, 0.29", "-12.8273, 480.26, -34.9918, 1.47", "-13.0176, 480.688, -35.1764, 1.69", "-13.0471, 480.751, -35.2004, 1.69", "-13.361, 481.38, -35.4706, 1.47", "-13.3931, 481.441, -35.4967, 1.47", "-14.2699, 483.118, -36.3475, 0.22", "-14.5752, 483.721, -36.6755, 0.22", "-15.0464, 484.73, -37.25, 0.22", "-15.5476, 486.014, -37.9768, 1.03", "-15.7269, 486.53, -38.2925, 1.4", "-16.2489, 488.14, -39.3207, 0.22", "-16.39, 488.589, -39.619, 0.59", "-16.5413, 489.099, -39.9643, 0.74", "-16.9901, 490.751, -41.0484, 0.29", "-17.353, 491.939, -41.761, 0.29", "-17.377, 492.001, -41.7983, 0.29", "-17.7047, 492.648, -42.1797, 0.44", "-17.7373, 492.711, -42.2243, 0.44", "-18.0007, 493.21, -42.6102, 0.44", "-18.391, 493.967, -43.2042, 0.22", "-18.9272, 495.133, -44.0748, 1.92", "-19.0285, 495.366, -44.265, 2.5", "-19.911, 497.729, -46.2834, 0.15", "-20.0249, 498.067, -46.5767, 0.15", "-20.2903, 498.954, -47.3697, 1.4", "-20.3477, 499.157, -47.5496, 1.69", "-20.8981, 501.091, -49.2352, 0.15", "-21.0954, 501.744, -49.7754, 0.15", "-21.1539, 501.919, -49.8957, 0.15", "-21.2069, 502.073, -49.9872, 0.15", "-21.4624, 502.83, -50.3351, 0.96", "-21.6362, 503.352, -50.535, 1.47", "-21.7639, 503.728, -50.6368, 1.62", "-22.064, 504.569, -50.8672, 0.88", "-22.6281, 506.245, -51.3359, 0.22", "-22.8156, 506.882, -51.5409, 0.22", "-22.9823, 507.54, -51.7857, 0.74", "-22.997, 507.61, -51.8121, 0.74", "-23.1007, 508.189, -52.0077, 0.74", "-23.1486, 508.489, -52.0912, 0.74", "-23.3752, 510.066, -52.4376, 0.29", "-23.3867, 510.141, -52.4518, 0.29", "-23.6175, 511.56, -52.6796, 0.29", "-23.8617, 512.996, -52.8879, 0.29", "-24.0603, 514.121, -53.0228, 0.29", "-24.2148, 514.956, -53.0936, 1.47", "-24.3058, 515.424, -53.1221, 2.06", "-24.3203, 515.497, -53.1272, 2.06", "-24.4892, 516.325, -53.2115, 1.18", "-24.9611, 518.498, -53.5212, 0.22", "-25.2978, 520.062, -53.7783, 0.22", "-25.5523, 521.302, -54.0446, 1.47", "-25.6402, 521.75, -54.1582, 1.18", "-25.9632, 523.558, -54.6858, 0.22", "-26.1603, 524.763, -55.0867, 1.11", "-26.2486, 525.401, -55.3257, 1.33", "-26.5153, 527.744, -56.2605, 0.22", "-26.5216, 527.812, -56.2875, 0.22", "-26.6431, 529.455, -56.9199, 0.22", "-26.6467, 529.524, -56.9449, 0.22", "-26.7129, 531.299, -57.5402, 0.22", "-26.7168, 531.369, -57.5625, 0.22", "-26.7876, 532.351, -57.7988, 1.55", "-26.8069, 532.508, -57.8302, 2.14", "-26.9058, 533.048, -57.9117, 2.36", "-26.9196, 533.109, -57.9192, 2.36", "-27.2713, 534.188, -58.0344, 1.11", "-27.8239, 535.614, -58.1792, 0.22", "-28.3461, 536.824, -58.2947, 0.22", "-28.7305, 537.665, -58.3717, 1.4", "-28.9418, 538.097, -58.4084, 1.4", "-29.9962, 540.131, -58.5959, 0.22", "-30.4095, 540.867, -58.667, 0.88", "-30.6456, 541.269, -58.711, 0.59", "-30.6876, 541.344, -58.7195, 0.59", "-30.7871, 541.53, -58.7384, 0.59", "-31.4439, 542.934, -58.8396, 0.22", "-31.8008, 543.812, -58.8723, 0.22", "-32.1315, 544.715, -58.8994, 1.03", "-32.2835, 545.152, -58.9094, 1.4", "-32.4561, 545.709, -58.8918, 1.4", "-32.8461, 547.192, -58.7821, 0.22", "-32.8627, 547.266, -58.7736, 0.22", "-33.1902, 548.927, -58.5645, 0.22", "-33.2151, 549.075, -58.5464, 0.22", "-33.4904, 550.971, -58.3244, 0.22", "-33.6299, 552.051, -58.1911, 1.33", "-33.6723, 552.414, -58.1432, 1.62", "-33.7486, 553.103, -58.0523, 0.81", "-33.9286, 554.939, -57.811, 0.22", "-34.0393, 556.121, -57.692, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-6.32147, 464.741, -24.8865, 0.59", "-6.41248, 465.911, -24.8056, 0.59", "-6.51614, 467.148, -24.6417, 0.59", "-6.60452, 468.313, -24.456, 0.81", "-6.66856, 469.228, -24.3075, 1.25", "-6.67451, 469.314, -24.2937, 1.25", "-6.71405, 469.847, -24.2115, 1.11", "-6.80884, 470.955, -24.0317, 0.88", "-6.87464, 471.752, -23.9171, 0.44", "-6.96354, 472.918, -23.7828, 0.37", "-6.98633, 473.229, -23.7524, 0.37", "-7.05152, 474.078, -23.6891, 0.37", "-7.15834, 475.356, -23.634, 1.47", "-7.24231, 476.125, -23.6255, 1.84", "-7.27999, 476.43, -23.6219, 1.84", "-7.34945, 477.044, -23.6146, 1.84", "-7.45314, 478.067, -23.6028, 1.25", "-7.60521, 479.774, -23.5842, 0.66", "-7.7342, 481.319, -23.5685, 0.66", "-7.74188, 481.428, -23.5676, 0.66", "-7.80857, 482.544, -23.5603, 0.66", "-7.81564, 482.708, -23.5602, 0.66", "-7.85124, 483.725, -23.5628, 0.66", "-7.85297, 483.812, -23.5634, 0.66", "-7.86277, 484.74, -23.5715, 0.66", "-7.87203, 485.02, -23.5742, 0.66", "-7.90951, 485.901, -23.5831, 0.66", "-7.93364, 486.598, -23.59, 0.66", "-7.93458, 486.675, -23.5907, 0.66", "-7.92594, 487.788, -23.5988, 0.66", "-7.92359, 487.854, -23.5991, 0.66", "-7.86677, 488.942, -23.6091, 1.18", "-7.85906, 489.018, -23.6034, 1.18", "-7.72325, 489.992, -23.4656, 1.33", "-7.70883, 490.08, -23.4483, 1.33", "-7.65686, 490.354, -23.3764, 1.33", "-7.63438, 490.474, -23.3426, 1.33", "-7.34498, 491.994, -22.8622, 0.81", "-7.33388, 492.058, -22.8451, 0.81", "-7.20731, 492.662, -22.7158, 0.81", "-7.19259, 492.734, -22.7028, 0.81", "-7.01452, 493.575, -22.581, 0.96", "-6.9865, 493.7, -22.5673, 0.96", "-6.6753, 495.031, -22.4911, 0.37", "-6.41564, 496.153, -22.4382, 0.37", "-6.22587, 497.042, -22.3746, 1.33", "-6.05252, 497.852, -22.2852, 2.06", "-5.97883, 498.216, -22.2169, 2.36", "-5.86517, 498.794, -22.0817, 2.36", "-5.69849, 499.712, -21.8116, 1.62", "-5.46643, 501.127, -21.36, 0.52", "-5.20064, 502.72, -20.8202, 0.37", "-4.98046, 504.128, -20.2966, 1.55", "-4.87293, 504.832, -20.0132, 2.21", "-4.75768, 505.565, -19.6831, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.7697, -82.3284, -20.2113, 0.44", "-16.4356, -83.584, -19.7651, 0.44", "-16.0914, -84.8034, -19.2861, 0.22", "-16.0711, -84.864, -19.2581, 0.22", "-15.7469, -85.7467, -18.7298, 0.22", "-15.2535, -86.9876, -17.9763, 1.47", "-15.1011, -87.357, -17.7632, 1.99", "-15.0474, -87.4813, -17.6854, 1.99", "-14.6167, -88.3831, -17.1303, 1.77", "-13.912, -89.8033, -16.297, 0.52", "-13.3655, -90.8728, -15.6946, 0.29", "-12.9454, -91.6893, -15.2845, 0.29", "-12.9179, -91.7448, -15.2578, 0.29", "-12.5072, -92.5957, -14.873, 1.03", "-12.1191, -93.4877, -14.5284, 1.03", "-11.5975, -94.8156, -14.1068, 0.22", "-11.5802, -94.8682, -14.0904, 0.22", "-11.4237, -95.3981, -13.9402, 0.44", "-11.4086, -95.4516, -13.9244, 0.44", "-11.2021, -96.1596, -13.6971, 0.44", "-11.0599, -96.6896, -13.548, 0.29", "-10.8243, -97.586, -13.3035, 1.55", "-10.7587, -97.8232, -13.2339, 2.21", "-10.4118, -98.9187, -12.8795, 2.21", "-10.0708, -99.8887, -12.5504, 0.44", "-9.63169, -100.934, -12.1654, 0.29", "-9.43104, -101.358, -12.0004, 0.52", "-9.3981, -101.423, -11.9749, 0.52", "-9.14995, -101.848, -11.8324, 0.22", "-9.10537, -101.9, -11.8216, 0.22", "-8.77631, -102.16, -11.7662, 0.22", "-8.44634, -102.395, -11.6892, 0.74", "-8.3872, -102.443, -11.6732, 0.74", "-7.96401, -102.834, -11.5473, 0.74", "-7.22744, -103.625, -11.3143, 0.29", "-6.78011, -104.185, -11.1338, 0.29", "-6.32464, -104.873, -10.9137, 1.33", "-6.06776, -105.301, -10.7832, 1.92", "-5.93591, -105.531, -10.7174, 1.99", "-5.66018, -106.042, -10.5787, 1.55", "-5.14966, -106.998, -10.3641, 0.66", "-4.81198, -107.616, -10.265, 0.29", "-4.26782, -108.608, -10.2022, 0.22", "-3.93371, -109.254, -10.2001, 1.03", "-3.68513, -109.769, -10.224, 1.55", "-3.29579, -110.632, -10.3093, 0.88", "-2.98215, -111.402, -10.43, 0.29", "-2.67499, -112.252, -10.5799, 0.29", "-2.36925, -113.26, -10.7732, 0.22", "-2.2393, -113.726, -10.8615, 0.52", "-2.22117, -113.791, -10.8709, 0.52", "-2.04846, -114.407, -10.9038, 0.52", "-1.84273, -115.065, -10.8825, 0.44", "-1.78107, -115.258, -10.8566, 0.66", "-1.62585, -115.761, -10.7653, 0.37", "-1.42803, -116.5, -10.6109, 0.29", "-1.24501, -117.39, -10.4198, 0.29", "-1.23848, -117.446, -10.406, 0.29", "-1.18986, -118.313, -10.1922, 1.25", "-1.18429, -118.724, -10.0991, 1.84", "-1.1984, -119.1, -10.0262, 1.84", "-1.25742, -119.965, -9.91094, 0.81", "-1.3377, -120.972, -9.81066, 0.29", "-1.39396, -121.692, -9.76147, 0.22", "-1.4019, -121.789, -9.75809, 0.22", "-1.48517, -122.62, -9.77157, 0.22", "-1.6368, -123.75, -9.86051, 1.33", "-1.72705, -124.281, -9.93282, 1.99", "-1.80121, -124.626, -9.99792, 2.28", "-1.93595, -125.145, -10.0928, 2.28", "-2.3104, -126.477, -10.3256, 0.66", "-2.55533, -127.268, -10.4651, 0.22", "-2.57728, -127.334, -10.4758, 0.22", "-2.73728, -127.856, -10.5416, 0.22", "-2.89293, -128.395, -10.589, 0.74", "-2.99211, -128.767, -10.6005, 1.03", "-3.06374, -129.045, -10.5869, 1.11", "-3.19807, -129.601, -10.5497, 0.44", "-3.41979, -130.515, -10.5087, 0.22", "-3.43613, -130.582, -10.5074, 0.22", "-3.56912, -131.081, -10.512, 0.44", "-3.73545, -131.823, -10.517, 0.29", "-3.75109, -131.889, -10.5175, 0.29", "-4.02514, -132.676, -10.5022, 0.29", "-4.23467, -133.167, -10.4794, 0.22", "-4.26259, -133.231, -10.4751, 0.22", "-4.6199, -134.103, -10.3674, 0.22", "-4.80177, -134.631, -10.2459, 0.22", "-5.20111, -136.128, -9.81834, 2.14", "-5.21235, -136.182, -9.80132, 2.14", "-5.29774, -136.777, -9.61165, 1.99", "-5.37012, -137.653, -9.33009, 1.69", "-5.41095, -138.964, -8.89998, 0.59", "-5.33789, -140.19, -8.50871, 0.22", "-5.25046, -140.802, -8.3393, 0.37", "-5.14364, -141.447, -8.21533, 0.37", "-5.00609, -142.191, -8.14403, 0.74", "-4.99222, -142.258, -8.1454, 0.74", "-4.88693, -142.762, -8.21227, 1.11", "-4.68864, -143.758, -8.40201, 0.59", "-4.471, -144.872, -8.63657, 0.29", "-4.31836, -145.627, -8.80087, 0.29", "-4.29459, -145.732, -8.82442, 0.29", "-4.11572, -146.452, -8.97184, 0.29", "-4.06154, -146.641, -9.00187, 0.29", "-3.80167, -147.394, -9.06073, 0.29", "-3.56531, -148.018, -9.06785, 1.18", "-3.41892, -148.382, -9.07138, 1.47", "-3.39339, -148.445, -9.07148, 1.47", "-2.99929, -149.47, -9.06762, 0.44", "-2.74521, -150.309, -9.06084, 0.37", "-2.63304, -150.939, -9.0542, 0.81", "-2.58955, -151.364, -9.05396, 0.81", "-2.55519, -152.022, -9.0562, 0.59", "-2.54866, -152.477, -9.06266, 0.29", "-2.56966, -153.488, -9.08421, 0.22", "-2.59621, -154.57, -9.13405, 0.22", "-2.60002, -155.204, -9.17393, 0.44", "-2.59512, -155.42, -9.18992, 0.44", "-2.5634, -155.844, -9.22364, 0.44", "-2.4563, -156.647, -9.28841, 0.29", "-2.30933, -157.495, -9.35245, 1.4", "-2.19215, -158.122, -9.39722, 1.69", "-2.09904, -158.676, -9.43143, 1.92", "-1.97713, -159.451, -9.48658, 0.74", "-1.88352, -160.392, -9.56542, 0.22", "-1.84038, -161.314, -9.65071, 0.22", "-1.84048, -161.975, -9.70823, 0.88", "-1.86666, -162.476, -9.75727, 0.88", "-1.94751, -163.285, -9.84103, 0.22", "-2.09445, -164.291, -9.94753, 0.22", "-2.10741, -164.367, -9.95526, 0.22", "-2.24946, -165.078, -10.0209, 0.22", "-2.45514, -166.023, -10.0678, 1.03", "-2.55438, -166.438, -10.0746, 1.33", "-2.62379, -166.716, -10.0693, 1.33", "-2.92156, -167.96, -10.0558, 0.22", "-3.14758, -168.862, -10.0954, 0.22", "-3.29956, -169.414, -10.1549, 0.88", "-3.41025, -169.796, -10.2163, 1.11", "-3.50103, -170.098, -10.2774, 0.88", "-3.84481, -171.278, -10.5589, 0.22", "-4.14029, -172.235, -10.8185, 0.22", "-4.30741, -172.771, -10.9741, 1.55", "-4.45477, -173.245, -11.108, 1.77", "-4.61522, -173.767, -11.2406, 1.25", "-4.91736, -174.811, -11.4629, 0.22", "-5.19186, -175.874, -11.618, 0.22", "-5.20364, -175.931, -11.624, 0.22", "-5.33191, -176.884, -11.7174, 0.22", "-5.33806, -176.963, -11.7279, 0.22", "-5.34921, -177.835, -11.8632, 0.96", "-5.34892, -178.389, -11.9558, 1.47", "-5.33825, -178.988, -12.0785, 0.88", "-5.34136, -179.535, -12.2067, 0.66", "-5.36077, -180.784, -12.5385, 0.29", "-5.37831, -181.273, -12.6736, 0.59", "-5.42136, -182.098, -12.9173, 0.59", "-5.46565, -182.951, -13.1717, 0.29", "-5.46741, -183.038, -13.1959, 0.29", "-5.44555, -184.11, -13.472, 0.29", "-5.44011, -184.176, -13.487, 0.29", "-5.37159, -184.717, -13.6107, 0.74", "-5.29311, -185.337, -13.7471, 0.88", "-5.20942, -186.324, -13.9545, 0.22", "-5.17759, -187.123, -14.1186, 0.22", "-5.20758, -188.009, -14.31, 1.99", "-5.26265, -188.647, -14.4595, 2.43", "-5.46717, -190.053, -14.8041, 0.22", "-5.6216, -190.806, -14.9982, 0.44", "-5.84992, -191.73, -15.2484, 0.37", "-6.11387, -192.688, -15.5096, 0.22", "-6.304, -193.323, -15.672, 1.03", "-6.4091, -193.696, -15.7772, 1.25", "-6.53514, -194.228, -15.9425, 0.96", "-6.75945, -195.44, -16.3333, 0.15", "-6.84442, -196.075, -16.5376, 0.74", "-6.88442, -196.546, -16.6813, 0.96", "-6.96988, -198.009, -17.11, 0.22", "-6.97409, -198.148, -17.1497, 0.22", "-6.95066, -198.762, -17.3266, 0.22", "-6.88041, -199.583, -17.548, 0.22", "-6.87367, -199.642, -17.5628, 0.22", "-6.72902, -200.691, -17.8197, 2.5", "-6.66557, -201.1, -17.9118, 2.73", "-6.30635, -203.078, -18.3805, 0.22", "-6.1682, -203.674, -18.5324, 0.52", "-6.00996, -204.23, -18.6784, 0.52", "-5.65226, -205.378, -18.9647, 0.22", "-5.62924, -205.44, -18.9808, 0.22", "-5.42844, -205.938, -19.1133, 0.22", "-5.06304, -206.773, -19.3139, 1.18", "-4.91254, -207.108, -19.3917, 1.69", "-4.60446, -207.8, -19.5353, 1.33", "-4.18818, -208.757, -19.6808, 0.22", "-4.02549, -209.176, -19.7341, 0.22", "-3.82754, -209.814, -19.8058, 1.47", "-3.70729, -210.29, -19.8498, 1.69", "-3.60429, -210.78, -19.8989, 1.69", "-3.34994, -212.202, -20.0363, 0.29", "-3.24889, -212.886, -20.094, 0.29", "-3.14027, -213.632, -20.1667, 1.03", "-3.12512, -213.781, -20.1815, 1.33", "-3.04924, -215.065, -20.2956, 0.22", "-3.04463, -215.558, -20.3343, 0.22", "-3.06515, -215.91, -20.3522, 1.03", "-3.09624, -216.344, -20.3535, 1.03", "-3.23285, -217.72, -20.303, 0.22", "-3.35061, -218.517, -20.2541, 1.33", "-3.41439, -218.825, -20.2268, 1.47", "-3.5579, -219.433, -20.1983, 1.55", "-3.90304, -220.778, -20.1749, 0.22", "-4.02946, -221.22, -20.1835, 0.22", "-4.25473, -221.953, -20.2252, 0.96", "-4.42801, -222.493, -20.2686, 1.25", "-4.86106, -223.854, -20.4273, 0.22", "-4.88407, -223.928, -20.4381, 0.22", "-5.2814, -225.295, -20.6385, 0.22", "-5.36528, -225.603, -20.6797, 0.74", "-5.43594, -225.873, -20.7141, 0.74", "-5.78304, -227.239, -20.8674, 0.22", "-6.07505, -228.42, -20.9632, 0.22", "-6.42989, -229.965, -21.0918, 0.22", "-6.53055, -230.467, -21.1365, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.7697, -82.3284, -20.2113, 0.66", "-17.5439, -83.9139, -20.13, 0.66", "-17.8462, -84.4913, -20.0756, 0.52", "-18.1922, -85.0871, -20.0078, 0.88", "-18.4159, -85.4636, -19.9504, 1.03", "-18.7205, -85.9762, -19.8551, 0.96", "-19.1897, -86.7702, -19.6899, 0.37", "-19.65, -87.5486, -19.4562, 0.29", "-19.8666, -87.9518, -19.3304, 0.29", "-20.2555, -88.8229, -19.0305, 0.29", "-20.3575, -89.108, -18.9314, 0.74", "-20.38, -89.1882, -18.9066, 0.74", "-20.4491, -89.5073, -18.831, 0.74", "-20.5541, -90.1236, -18.7103, 0.59", "-20.7208, -91.1491, -18.5423, 0.29", "-20.9063, -92.203, -18.4105, 0.29", "-21.0918, -93.1962, -18.3094, 0.29", "-21.3087, -94.3173, -18.21, 0.29", "-21.4708, -95.2177, -18.168, 1.33", "-21.4837, -95.2943, -18.168, 1.33", "-21.5994, -96.0781, -18.2064, 1.99", "-21.6454, -96.5667, -18.2371, 2.21", "-21.6736, -96.9899, -18.2695, 2.21", "-21.7398, -98.4058, -18.3922, 0.29", "-21.78, -99.5772, -18.4918, 0.29", "-21.7966, -100.259, -18.5442, 0.29", "-21.7985, -100.737, -18.5763, 0.96", "-21.8066, -101.306, -18.6054, 1.47", "-21.8147, -101.654, -18.6154, 1.84", "-21.8272, -102.353, -18.6023, 0.88", "-21.8243, -102.419, -18.6027, 0.88", "-21.766, -103.112, -18.6365, 0.29", "-21.6996, -103.791, -18.693, 0.29", "-21.6905, -103.866, -18.7008, 0.29", "-21.5643, -104.818, -18.8158, 0.52", "-21.4138, -105.89, -18.9574, 0.52", "-21.2904, -106.799, -19.0723, 0.22", "-21.1965, -107.552, -19.1642, 1.47", "-21.1302, -108.182, -19.2333, 2.06", "-21.112, -108.516, -19.2648, 2.36", "-21.1257, -109.224, -19.3158, 1.69", "-21.2305, -110.321, -19.3655, 0.74", "-21.384, -111.306, -19.395, 0.44", "-21.593, -112.335, -19.4347, 0.44", "-21.7446, -112.953, -19.4646, 0.44", "-22.0578, -114.143, -19.5317, 0.29", "-22.2116, -114.75, -19.5714, 0.59", "-22.3627, -115.386, -19.6179, 0.59", "-22.4967, -116.059, -19.6692, 0.29", "-22.5074, -116.134, -19.6759, 0.29", "-22.6128, -117.101, -19.7786, 0.29", "-22.6913, -118.193, -19.9174, 0.29", "-22.7029, -118.325, -19.9359, 0.29", "-22.7863, -118.802, -20.0115, 0.29", "-22.8066, -118.863, -20.0248, 0.29", "-23.0623, -119.432, -20.2423, 0.29", "-23.0881, -119.486, -20.2679, 0.29", "-23.3726, -120.091, -20.5928, 0.29", "-23.7714, -121.01, -21.0992, 2.28", "-24.2736, -122.168, -21.7457, 2.65", "-24.9675, -123.807, -22.6564, 0.29", "-25.3187, -124.646, -23.11, 0.29", "-25.5757, -125.225, -23.4188, 0.59", "-25.7059, -125.505, -23.5697, 0.22", "-26.0317, -126.113, -23.9078, 0.22", "-26.3118, -126.528, -24.1711, 0.22", "-26.844, -127.193, -24.6328, 1.03", "-27.3413, -127.764, -25.0674, 1.92", "-27.7603, -128.257, -25.4498, 2.06", "-28.1568, -128.776, -25.8638, 1.92", "-29.2125, -130.441, -27.1635, 0.29", "-29.5194, -131.021, -27.592, 0.52", "-29.5386, -131.064, -27.6218, 0.52", "-29.7091, -131.529, -27.8924, 0.52", "-29.9702, -132.342, -28.2645, 0.37", "-30.1525, -133.051, -28.4851, 0.29", "-30.3134, -133.86, -28.6359, 0.29", "-30.448, -134.503, -28.7408, 0.88", "-30.5331, -134.928, -28.806, 0.88", "-30.7158, -136.022, -28.9579, 0.22", "-30.8278, -136.933, -29.0631, 1.55", "-30.8635, -137.497, -29.1253, 1.84", "-30.8646, -138.006, -29.1757, 1.62", "-30.8112, -139.238, -29.318, 0.22", "-30.7513, -140.093, -29.4226, 0.22", "-30.7075, -140.635, -29.4868, 0.22", "-30.6886, -141.188, -29.5475, 0.74", "-30.6979, -141.676, -29.5939, 0.74", "-30.7744, -142.747, -29.6833, 0.29", "-30.8654, -143.364, -29.7201, 0.29", "-31.0718, -144.354, -29.7464, 0.29", "-31.2961, -145.306, -29.7434, 1.77", "-31.4371, -145.87, -29.7272, 2.21", "-31.5785, -146.404, -29.6985, 2.21", "-31.8405, -147.332, -29.6199, 0.74", "-32.1032, -148.198, -29.564, 0.22", "-32.4414, -149.254, -29.5216, 0.22", "-32.6197, -149.806, -29.5148, 0.88", "-32.7814, -150.329, -29.5197, 1.03", "-32.8214, -150.467, -29.5245, 1.03", "-33.0897, -151.463, -29.5949, 0.22", "-33.2659, -152.123, -29.6596, 0.22", "-33.3014, -152.25, -29.6718, 0.22", "-33.503, -152.985, -29.741, 0.22", "-33.6447, -153.472, -29.7792, 0.22", "-33.8961, -154.278, -29.837, 1.33", "-34.0508, -154.739, -29.8638, 1.77", "-34.2959, -155.438, -29.8889, 1.77", "-34.4882, -155.994, -29.8998, 0.88", "-34.8753, -157.107, -29.9093, 0.29", "-34.9966, -157.53, -29.908, 0.74", "-35.1214, -157.988, -29.9166, 0.74", "-35.3956, -159.07, -29.9605, 0.22", "-35.5093, -159.549, -29.9866, 0.22", "-35.5293, -159.633, -29.9927, 0.22", "-35.7347, -160.5, -30.0814, 0.96", "-36.0587, -161.755, -30.2232, 1.18", "-36.1617, -162.111, -30.2708, 1.47", "-36.1885, -162.193, -30.2835, 1.47", "-36.3381, -162.619, -30.3411, 1.47", "-36.7401, -163.804, -30.4687, 0.22", "-36.8651, -164.197, -30.5068, 0.22", "-36.9977, -164.736, -30.5449, 0.74", "-37.0691, -164.994, -30.5665, 0.96", "-37.1108, -165.131, -30.579, 0.96", "-37.2181, -165.455, -30.6141, 0.96", "-37.5219, -166.358, -30.7302, 0.22", "-37.6978, -166.907, -30.8025, 0.29", "-37.8859, -167.565, -30.9369, 0.29", "-38.0135, -168.017, -31.0791, 0.29", "-38.2381, -168.825, -31.3845, 1.25", "-38.3714, -169.315, -31.5941, 1.69", "-38.4691, -169.692, -31.7775, 1.69", "-38.7425, -170.798, -32.3875, 1.03", "-39.0423, -171.937, -33.0419, 0.22", "-39.1725, -172.395, -33.3008, 0.22", "-39.5194, -173.531, -33.924, 1.99", "-39.7552, -174.247, -34.2942, 2.5", "-40.2597, -175.753, -34.9793, 0.29", "-40.5016, -176.441, -35.2399, 0.22", "-40.7576, -177.172, -35.464, 0.52", "-40.873, -177.488, -35.5462, 0.59", "-41.2615, -178.544, -35.7453, 0.22", "-41.5684, -179.421, -35.8431, 0.22", "-41.7476, -179.956, -35.868, 0.22", "-42.1031, -181.046, -35.906, 1.33", "-42.2839, -181.555, -35.9254, 1.69", "-42.48, -182.063, -35.9434, 1.47", "-42.7838, -182.753, -35.9784, 0.52", "-43.0415, -183.287, -36.0194, 0.29", "-43.7468, -184.624, -36.1468, 0.29", "-44.2584, -185.493, -36.2558, 1.11", "-44.5572, -185.983, -36.3314, 1.47", "-45.362, -187.246, -36.5518, 0.22", "-45.6689, -187.733, -36.6446, 1.77", "-46.0841, -188.404, -36.7826, 2.14", "-46.331, -188.817, -36.8736, 1.69", "-46.8864, -189.856, -37.0891, 0.22", "-46.9143, -189.917, -37.1011, 0.22", "-47.1253, -190.462, -37.2016, 0.22", "-47.3303, -191.04, -37.3259, 0.52", "-47.387, -191.216, -37.3679, 0.52", "-47.6503, -192.096, -37.5836, 0.22", "-47.805, -192.636, -37.725, 0.22", "-48.0012, -193.414, -37.9376, 1.99", "-48.1613, -194.132, -38.1463, 2.5", "-48.313, -195.131, -38.4845, 0.81", "-48.3982, -195.788, -38.7216, 0.22", "-48.4051, -195.841, -38.7406, 0.22", "-48.4593, -196.195, -38.8655, 0.52", "-48.4688, -196.248, -38.8831, 0.52", "-48.7548, -197.276, -39.2239, 0.22", "-49.0905, -198.221, -39.5246, 0.22", "-49.4126, -199.01, -39.7671, 0.22", "-49.7403, -199.701, -39.972, 1.33", "-49.8991, -199.994, -40.0552, 1.33", "-50.5652, -201.11, -40.3604, 0.22", "-51.089, -201.797, -40.5322, 0.22", "-51.1277, -201.84, -40.5435, 0.22", "-52.1451, -202.777, -40.7973, 2.28", "-52.4589, -203.021, -40.8618, 2.73", "-52.7698, -203.233, -40.9198, 2.73", "-54.2939, -204.102, -41.1747, 0.22", "-54.5961, -204.239, -41.2329, 0.74", "-54.9057, -204.362, -41.2969, 0.96", "-55.9156, -204.672, -41.5479, 0.22", "-56.379, -204.788, -41.686, 1.03", "-56.6657, -204.864, -41.8318, 1.03", "-57.7603, -205.187, -42.6688, 0.22", "-57.8044, -205.202, -42.7124, 0.22", "-58.3993, -205.418, -43.3686, 1.4", "-58.5576, -205.479, -43.5601, 1.4", "-60.1016, -206.122, -45.4704, 0.59", "-60.4566, -206.284, -45.9122, 1.03", "-61.5551, -206.845, -47.208, 0.22", "-62.105, -207.13, -47.7801, 0.22", "-62.142, -207.151, -47.8143, 0.22", "-62.6076, -207.403, -48.187, 1.11", "-62.9611, -207.582, -48.4097, 1.25", "-64.2275, -208.243, -49.144, 0.22", "-64.6456, -208.469, -49.3669, 0.66", "-65.7944, -209.105, -50.0028, 0.22", "-65.8468, -209.134, -50.031, 0.22", "-66.2009, -209.325, -50.2158, 0.96", "-66.534, -209.49, -50.3751, 1.4", "-67.0523, -209.728, -50.5911, 0.96", "-67.9891, -210.156, -50.9301, 0.22", "-68.5143, -210.404, -51.0883, 1.62", "-68.9432, -210.616, -51.2127, 1.99", "-70.3057, -211.334, -51.5722, 0.22", "-70.6991, -211.565, -51.6708, 0.37", "-70.9027, -211.696, -51.713, 0.37", "-71.4299, -212.049, -51.8111, 0.22", "-71.8608, -212.361, -51.899, 0.22", "-72.4822, -212.832, -52.0339, 0.52", "-73.1989, -213.391, -52.2035, 0.22", "-73.5973, -213.689, -52.31, 0.96", "-73.9881, -213.969, -52.4469, 0.96", "-74.9505, -214.674, -52.8465, 0.22", "-75.664, -215.207, -53.2458, 1.18", "-75.975, -215.45, -53.4939, 1.55", "-76.0093, -215.478, -53.5264, 1.55", "-76.9676, -216.281, -54.5448, 0.29", "-77.4221, -216.663, -55.0589, 0.29", "-78.3275, -217.391, -56.1146, 1.55", "-79.709, -218.454, -57.7351, 0.29", "-79.7524, -218.486, -57.7846, 0.29", "-80.1411, -218.769, -58.2107, 1.18", "-80.8303, -219.258, -58.9422, 0.22", "-81.3944, -219.65, -59.5174, 1.25", "-82.2814, -220.314, -60.3707, 0.22", "-82.4221, -220.42, -60.4948, 0.74", "-83.0308, -220.907, -61.0289, 0.22", "-83.0649, -220.937, -61.059, 0.22", "-83.5723, -221.457, -61.5104, 1.11", "-83.93, -221.86, -61.821, 1.47", "-84.7124, -222.801, -62.4485, 0.22", "-84.9207, -223.054, -62.6089, 0.59", "-85.4034, -223.645, -62.9543, 1.18", "-85.442, -223.692, -62.9816, 1.18", "-85.9117, -224.288, -63.3003, 1.18", "-86.7687, -225.371, -63.8521, 0.22", "-87.2094, -225.969, -64.1324, 1.25", "-87.3862, -226.205, -64.2411, 1.25", "-88.0379, -227.003, -64.6298, 0.29", "-88.4144, -227.438, -64.855, 0.96", "-89.3593, -228.548, -65.3539, 0.29", "-90.0176, -229.308, -65.643, 0.44", "-90.7428, -230.114, -65.9024, 0.22", "-91.4446, -230.847, -66.0998, 1.18", "-91.9371, -231.304, -66.1703, 1.77", "-93.1609, -232.298, -66.1976, 0.29", "-93.6616, -232.648, -66.1347, 0.29", "-94.0388, -232.86, -66.0382, 0.29", "-94.3874, -233.013, -65.9239, 0.88", "-95.4737, -233.418, -65.5442, 0.22", "-96.1763, -233.618, -65.3359, 1.03", "-96.5524, -233.697, -65.2496, 1.03", "-97.3091, -233.823, -65.0722, 0.22", "-99.2996, -234.045, -64.6254, 0.22", "-99.3617, -234.049, -64.6124, 0.22", "-100.603, -233.987, -64.3891, 0.81", "-100.84, -233.956, -64.355, 1.03", "-101.53, -233.795, -64.2398, 0.22", "-102.363, -233.517, -64.0935, 0.22", "-102.42, -233.493, -64.079, 0.22", "-103.407, -233.079, -63.8297, 1.33", "-103.846, -232.912, -63.7323, 1.55", "-105.349, -232.44, -63.4885, 0.22", "-105.782, -232.33, -63.44, 0.59", "-106.463, -232.193, -63.417, 0.59", "-107.192, -232.08, -63.4444, 0.44", "-108.349, -231.961, -63.5781, 0.22", "-109.077, -231.894, -63.6977, 1.03", "-109.341, -231.879, -63.7524, 1.03", "-110.456, -231.805, -63.9603, 0.22", "-110.935, -231.751, -64.0363, 0.22", "-110.988, -231.741, -64.04, 0.22", "-111.978, -231.468, -64.079, 0.22", "-112.871, -231.17, -64.0989, 0.22", "-112.922, -231.151, -64.0997, 0.22", "-113.851, -230.775, -64.1692, 1.11", "-114.2, -230.637, -64.2437, 1.55", "-115.162, -230.276, -64.542, 0.22", "-115.874, -230.048, -64.8487, 0.22", "-116.233, -229.938, -65.0279, 0.66", "-117.274, -229.664, -65.5863, 0.22", "-118.197, -229.45, -66.1048, 1.25", "-118.545, -229.38, -66.3246, 1.47", "-119.674, -229.247, -67.0346, 0.22", "-119.728, -229.246, -67.067, 0.22", "-120.156, -229.271, -67.3078, 1.03", "-120.818, -229.368, -67.6361, 1.33", "-122.52, -229.681, -68.4432, 0.22", "-123.803, -229.954, -69.0541, 0.22", "-124.782, -230.197, -69.5031, 0.22", "-125.142, -230.298, -69.6657, 1.03", "-125.598, -230.456, -69.8626, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-34.0393, 556.121, -57.692, 0.88", "-34.3784, 557.189, -57.5755, 0.88", "-34.8991, 558.831, -57.4207, 0.15", "-35.1987, 559.893, -57.4055, 0.15", "-35.2302, 560.003, -57.4073, 0.15", "-35.3946, 560.573, -57.4172, 1.03", "-35.4687, 560.83, -57.4216, 1.4", "-35.5365, 561.07, -57.4438, 1.4", "-36.1365, 563.188, -57.667, 0.22", "-36.5546, 564.767, -57.8426, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-34.0393, 556.121, -57.692, 0.22", "-33.2485, 558.403, -56.9333, 0.22", "-32.9018, 559.448, -56.5451, 0.81", "-32.7955, 559.776, -56.4162, 1.03", "-32.6275, 560.337, -56.1962, 0.81", "-31.9144, 562.826, -55.2237, 0.22", "-31.8088, 563.218, -55.0848, 0.44", "-31.6321, 564.09, -54.7966, 0.15", "-31.6205, 564.153, -54.7787, 0.15", "-31.4825, 565.11, -54.5411, 1.03", "-31.4701, 565.227, -54.5166, 1.03", "-31.3006, 566.903, -54.2682, 0.15", "-31.2605, 567.307, -54.2122, 0.29", "-31.0714, 569.178, -53.9685, 0.15", "-31.0003, 569.832, -53.8771, 0.66", "-30.991, 569.92, -53.8611, 0.66", "-30.8451, 571.494, -53.5189, 0.15", "-30.7531, 572.595, -53.2256, 0.66", "-30.669, 573.547, -52.9605, 0.22", "-30.6588, 573.635, -52.9344, 0.22", "-30.5417, 574.59, -52.6263, 0.74", "-30.5193, 574.824, -52.545, 0.74", "-30.5256, 575.027, -52.4552, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-4.75768, 505.565, -19.6831, 0.37", "-6.14067, 506.435, -19.6901, 0.37", "-6.73982, 506.818, -19.698, 0.37", "-6.80002, 506.86, -19.6929, 0.37", "-7.30248, 507.218, -19.6216, 0.37", "-7.94104, 507.7, -19.4928, 0.88", "-8.29601, 507.978, -19.4057, 0.88", "-8.34945, 508.026, -19.3836, 0.88", "-9.09606, 508.789, -18.9696, 0.88", "-9.12863, 508.828, -18.9477, 0.88", "-9.37856, 509.186, -18.7366, 1.03", "-9.42666, 509.255, -18.6983, 1.03", "-9.67485, 509.57, -18.5328, 1.03", "-9.75041, 509.66, -18.489, 1.03", "-10.2075, 510.153, -18.2658, 0.74", "-10.8153, 510.773, -17.9827, 0.29", "-11.4274, 511.373, -17.6903, 0.29", "-12.0506, 512.004, -17.3719, 0.29", "-12.125, 512.086, -17.3282, 0.29", "-12.4844, 512.527, -17.0791, 0.22", "-12.5267, 512.589, -17.0402, 0.22", "-12.7836, 513.1, -16.688, 0.52", "-12.8922, 513.722, -16.2355, 1.18", "-12.9021, 514.233, -15.8729, 1.18", "-12.8992, 514.286, -15.836, 1.18", "-12.8447, 514.564, -15.6414, 1.18", "-12.8322, 514.608, -15.6102, 1.18", "-12.4773, 515.291, -15.1193, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-4.75768, 505.565, -19.6831, 0.52", "-4.10766, 506.58, -19.7066, 0.52", "-3.53137, 507.488, -19.7025, 0.37", "-3.50149, 507.535, -19.7018, 0.37", "-3.10911, 508.173, -19.6817, 0.37", "-2.82962, 508.631, -19.6632, 0.74", "-2.41051, 509.342, -19.6273, 0.44", "-1.92014, 510.304, -19.5452, 0.37", "-1.8986, 510.347, -19.5407, 0.37", "-1.73972, 510.665, -19.5055, 0.37", "-1.71421, 510.716, -19.499, 0.37", "-1.32475, 511.574, -19.3984, 0.88", "-1.0959, 512.198, -19.364, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-36.5546, 564.767, -57.8426, 0.22", "-37.6952, 563.888, -58.4441, 0.22", "-38.0043, 563.649, -58.6213, 1.25", "-39.1426, 562.771, -59.3012, 0.22", "-39.549, 562.464, -59.5446, 0.96", "-40.7145, 561.607, -60.2289, 0.22", "-40.7631, 561.571, -60.2589, 0.22", "-41.5851, 560.952, -60.8133, 0.22", "-41.6181, 560.926, -60.8381, 0.22", "-41.9399, 560.651, -61.1128, 0.74", "-42.0848, 560.525, -61.2438, 0.88", "-43.042, 559.711, -62.016, 0.22", "-43.0753, 559.683, -62.0394, 0.22", "-43.767, 559.08, -62.5312, 0.22", "-44.1949, 558.69, -62.8439, 0.22", "-44.2252, 558.659, -62.868, 0.22", "-44.7993, 558.058, -63.3321, 1.11", "-45.2925, 557.628, -63.5019, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-36.5546, 564.767, -57.8426, 0.96", "-36.7745, 565.429, -57.8913, 0.96", "-36.7973, 565.5, -57.8946, 0.96", "-36.9123, 565.867, -57.9072, 1.18", "-37.1357, 566.595, -57.9289, 0.88", "-38.0899, 569.771, -58.0196, 0.15", "-38.1116, 569.844, -58.0216, 0.15", "-38.6289, 571.633, -58.082, 0.15", "-38.9694, 572.823, -58.157, 0.96", "-39.1132, 573.342, -58.204, 1.33", "-39.1341, 573.424, -58.2139, 1.33", "-39.1813, 573.652, -58.2509, 1.33", "-39.2074, 573.784, -58.2764, 1.33", "-39.5547, 575.746, -58.7042, 0.15", "-39.6293, 576.206, -58.7977, 0.44", "-39.7011, 576.656, -58.8843, 0.44", "-39.9668, 578.272, -59.1542, 0.22", "-39.9947, 578.43, -59.1758, 0.22", "-40.2464, 579.635, -59.2748, 0.81", "-40.5015, 580.709, -59.3056, 0.22", "-40.5375, 580.841, -59.3072, 0.22", "-40.7938, 581.667, -59.2996, 1.18", "-40.9357, 582.084, -59.2849, 1.33", "-41.7995, 584.183, -59.2008, 0.22", "-41.865, 584.316, -59.1931, 0.22", "-42.1465, 584.835, -59.1547, 0.22", "-42.5535, 585.51, -59.0894, 1.03", "-42.8926, 586.019, -59.0334, 1.33", "-43.907, 587.418, -58.8786, 0.15", "-44.4796, 588.089, -58.7894, 0.15", "-44.5278, 588.144, -58.782, 0.15", "-45.3111, 588.979, -58.6666, 0.15", "-45.3628, 589.029, -58.6588, 0.15", "-46.1202, 589.711, -58.5353, 1.03", "-46.5725, 590.11, -58.4385, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-12.4773, 515.291, -15.1193, 0.52", "-12.231, 516.724, -15.8467, 0.52", "-12.1903, 517.037, -15.982, 0.52", "-12.1827, 517.09, -16.0033, 0.52", "-12.0677, 517.826, -16.2912, 0.37", "-12.0581, 517.879, -16.3109, 0.37", "-11.8795, 518.64, -16.5813, 0.37", "-11.7111, 519.288, -16.7457, 1.03", "-11.5521, 519.828, -16.8754, 0.88", "-11.533, 519.888, -16.8897, 0.88", "-11.3349, 520.498, -17.0304, 0.59", "-10.8973, 521.885, -17.4196, 0.22", "-10.633, 522.786, -17.6937, 0.22", "-10.618, 522.837, -17.7113, 0.22", "-10.4112, 523.566, -17.989, 0.88", "-10.2836, 524.036, -18.1674, 1.11", "-9.90476, 525.528, -18.7089, 0.29", "-9.78181, 526.014, -18.8743, 0.22", "-9.51978, 526.827, -19.1548, 0.22", "-9.50087, 526.879, -19.1713, 0.22", "-9.06244, 527.998, -19.4776, 0.22", "-8.76515, 528.745, -19.6468, 1.33", "-8.62021, 529.097, -19.7076, 1.33", "-7.98225, 530.628, -19.986, 0.22", "-7.96105, 530.68, -19.9956, 0.22", "-7.57884, 531.622, -20.1899, 0.22", "-7.31189, 532.272, -20.3536, 0.81", "-6.77177, 533.631, -20.7, 0.22", "-6.52366, 534.281, -20.847, 0.81", "-6.50342, 534.334, -20.8553, 0.81", "-6.40506, 534.573, -20.8927, 0.81", "-5.94019, 535.561, -21.048, 0.22", "-5.5869, 536.267, -21.1397, 1.4", "-5.36865, 536.71, -21.1703, 1.77", "-5.03033, 537.348, -21.1896, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-12.4773, 515.291, -15.1193, 0.52", "-13.1885, 516.424, -14.8987, 0.52", "-13.2565, 516.543, -14.883, 0.52", "-13.5526, 517.098, -14.8374, 0.81", "-13.592, 517.176, -14.8339, 0.81", "-13.7634, 517.541, -14.8243, 0.59", "-14.4805, 519.14, -14.7712, 0.29", "-14.5412, 519.29, -14.771, 0.29", "-14.8432, 520.027, -14.7344, 1.03", "-15.1436, 520.76, -14.6511, 0.96", "-15.4667, 521.53, -14.519, 0.59", "-15.7901, 522.294, -14.322, 0.59", "-15.8426, 522.412, -14.276, 0.59", "-16.1634, 523.203, -13.9124, 0.59", "-16.3698, 523.914, -13.5168, 0.29", "-16.3801, 523.967, -13.4837, 0.29", "-16.444, 524.46, -13.178, 0.29", "-16.4538, 524.57, -13.1154, 0.29", "-16.534, 525.312, -12.7502, 0.59", "-16.699, 526.576, -12.257, 0.22", "-16.712, 526.646, -12.2337, 0.22", "-16.9628, 527.419, -12.0373, 0.22", "-17.0663, 527.651, -11.9964, 0.22", "-17.4553, 528.186, -11.9699, 0.22", "-17.9713, 528.46, -12.0889, 0.66", "-18.11, 528.491, -12.1415, 0.66", "-18.885, 528.586, -12.4857, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.0959, 512.198, -19.364, 0.29", "-0.460791, 513.564, -19.1194, 0.29", "-0.390065, 513.735, -19.0966, 0.29", "-3.05172E-4, 514.735, -18.9928, 0.88", "0.321758, 515.606, -18.9175, 1.25", "0.575176, 516.315, -18.8627, 1.25", "0.95854, 517.383, -18.7909, 0.44", "1.36394, 518.588, -18.7426, 0.29", "1.63487, 519.394, -18.7231, 0.88", "1.81063, 519.934, -18.7267, 1.25", "1.83734, 520.016, -18.7304, 1.25", "2.05279, 520.676, -18.7696, 0.96", "2.11442, 520.859, -18.7795, 0.96", "2.37339, 521.601, -18.8232, 0.74", "2.88523, 523.064, -18.9126, 0.29", "3.25864, 524.122, -18.9794, 0.52", "3.34501, 524.376, -18.9952, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.0959, 512.198, -19.364, 0.22", "-2.05758, 513.2, -19.0659, 0.22", "-2.11389, 513.255, -19.051, 0.22", "-2.75945, 513.856, -18.8956, 0.22", "-2.81073, 513.903, -18.8833, 0.22", "-3.77649, 514.802, -18.6509, 0.22", "-3.83384, 514.855, -18.6371, 0.22", "-4.68831, 515.744, -18.4939, 0.22", "-5.06228, 516.112, -18.4313, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-18.885, 528.586, -12.4857, 0.22", "-18.6128, 530.16, -12.6791, 0.22", "-18.6057, 530.355, -12.5876, 0.22", "-18.7138, 531.205, -12.0043, 0.22", "-18.862, 531.654, -11.5764, 0.37", "-19.195, 532.431, -10.715, 0.37", "-19.227, 532.494, -10.6188, 0.37", "-19.861, 533.677, -8.36423, 1.18", "-20.1058, 533.999, -7.59008, 1.18", "-20.5472, 534.426, -6.29076, 0.96", "-20.6641, 534.502, -5.99722, 0.96", "-21.9117, 535.096, -3.25152, 0.52", "-21.9768, 535.122, -3.11949, 0.52", "-22.4006, 535.295, -2.31136, 0.52", "-22.498, 535.336, -2.11332, 0.52", "-23.0832, 535.563, -0.991994, 0.74", "-23.5671, 535.74, -0.190871, 0.88", "-23.6278, 535.757, -0.125514, 0.88", "-24.5631, 536.095, 0.91719, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-18.885, 528.586, -12.4857, 0.22", "-19.9601, 527.786, -12.5836, 0.22", "-20.0624, 527.709, -12.593, 0.22", "-21.3526, 526.749, -12.7106, 0.22", "-21.4342, 526.688, -12.718, 0.22", "-22.2511, 526.08, -12.7924, 0.66", "-22.6477, 525.785, -12.8286, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "3.34501, 524.376, -18.9952, 0.15", "4.06732, 524.291, -19.0988, 0.15", "4.49566, 524.134, -19.1867, 0.44", "4.53217, 524.116, -19.1962, 0.44", "4.90316, 523.905, -19.322, 0.15", "5.18676, 523.741, -19.4255, 0.96", "5.49696, 523.567, -19.5379, 0.96", "6.08725, 523.194, -19.7732, 0.22", "6.17695, 523.138, -19.8107, 0.22", "6.656, 522.856, -20.0141, 0.52", "6.99161, 522.67, -20.1577, 0.52", "7.4054, 522.476, -20.331, 0.59", "7.51545, 522.438, -20.3809, 0.59", "8.02319, 522.331, -20.6095, 0.15", "8.06044, 522.324, -20.6263, 0.15", "8.25668, 522.288, -20.76, 0.15", "8.33064, 522.272, -20.8254, 0.15", "8.76443, 522.191, -21.2671, 0.88", "8.95787, 522.157, -21.4762, 1.18", "9.19173, 522.131, -21.7569, 1.18", "9.95085, 522.077, -22.7065, 0.22", "9.98044, 522.074, -22.7431, 0.22", "10.1359, 522.056, -22.9251, 0.37", "10.1681, 522.053, -22.9607, 0.37", "10.6385, 522.016, -23.4842, 0.22", "10.6635, 522.013, -23.5094, 0.22", "11.0221, 521.995, -23.794, 0.22", "11.2119, 521.98, -23.9452, 0.74", "11.4146, 521.955, -24.106, 1.03", "11.4574, 521.949, -24.1387, 1.03", "12.2877, 521.807, -24.7168, 0.37", "12.745, 521.741, -25.0562, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "3.34501, 524.376, -18.9952, 0.29", "3.83488, 526.197, -19.0896, 0.29", "4.18558, 527.32, -19.1522, 0.29", "4.21852, 527.415, -19.1577, 0.29", "4.65841, 528.681, -19.2304, 0.15", "5.11869, 530.006, -19.3065, 1.18", "5.379, 530.755, -19.3495, 1.77", "5.80739, 531.791, -19.423, 1.18", "6.1277, 532.49, -19.4782, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-24.5631, 536.095, 0.91719, 0.59", "-24.6438, 536.888, 1.11943, 0.59", "-24.651, 536.955, 1.13242, 0.59", "-24.699, 537.448, 1.2009, 0.59", "-24.7025, 537.527, 1.20897, 0.59", "-24.6879, 537.848, 1.22516, 0.59", "-24.6637, 538.037, 1.31201, 0.59", "-24.6326, 538.216, 1.57024, 0.29", "-24.6093, 538.438, 1.92222, 0.22", "-24.6133, 538.732, 2.3952, 0.22", "-24.6512, 539.014, 2.84182, 0.74", "-24.936, 540.332, 4.95214, 0.74", "-25.349, 541.752, 7.20988, 0.88", "-25.542, 542.274, 8.04635, 0.22", "-25.7517, 542.775, 8.82798, 0.22", "-25.931, 543.16, 9.36404, 0.22", "-25.956, 543.21, 9.41943, 0.22", "-26.1248, 543.552, 9.58535, 0.22", "-26.1553, 543.623, 9.59903, 0.22", "-26.3793, 544.318, 9.78037, 0.22", "-26.6329, 545.28, 10.0642, 0.81", "-26.6506, 545.334, 10.0795, 0.81", "-26.9205, 545.943, 10.2238, 0.96", "-26.9669, 546.036, 10.2418, 0.96", "-27.2003, 546.486, 10.3081, 0.96", "-27.5549, 547.163, 10.3755, 0.44", "-27.8124, 547.72, 10.4086, 0.44", "-28.1779, 548.607, 10.4536, 0.22", "-28.5003, 549.497, 10.5012, 0.37", "-28.7907, 550.375, 10.5625, 0.37", "-29.0167, 551.134, 10.6437, 0.37", "-29.2645, 552.033, 10.7991, 0.22", "-29.2812, 552.098, 10.8148, 0.22", "-29.426, 552.532, 11.0098, 0.22", "-29.4695, 552.619, 11.0875, 0.22", "-29.8535, 553.176, 11.9215, 0.15", "-30.0492, 553.478, 12.4304, 0.44", "-30.066, 553.507, 12.4764, 0.44", "-30.5013, 554.403, 13.6488, 0.88", "-30.7878, 555.118, 14.4029, 0.88", "-30.8501, 555.343, 14.5974, 0.88", "-31.0406, 556.429, 15.3763, 0.37", "-31.0932, 557.087, 15.7394, 0.22", "-31.1109, 557.823, 16.0712, 0.22", "-31.0727, 558.234, 16.2136, 0.59", "-30.9078, 559.34, 16.5831, 0.44", "-30.8866, 559.42, 16.6172, 0.44", "-30.5446, 560.14, 17.0824, 0.29", "-30.4892, 560.201, 17.1348, 0.29", "-29.7303, 560.586, 17.5838, 0.29", "-29.6826, 560.601, 17.6094, 0.29", "-28.9539, 560.891, 18.0343, 0.81", "-28.8776, 560.935, 18.0854, 0.81", "-28.4518, 561.317, 18.436, 0.81", "-27.8652, 562.102, 19.0141, 0.29", "-27.3153, 563.118, 19.6604, 0.29", "-26.6898, 564.551, 20.4291, 0.52", "-26.3845, 565.449, 20.8362, 1.33", "-26.0561, 566.601, 21.3282, 0.22", "-25.9312, 567.214, 21.5652, 0.74", "-25.9124, 567.365, 21.6143, 0.74", "-25.8111, 568.238, 21.7852, 0.37", "-25.7202, 568.742, 21.8337, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-24.5631, 536.095, 0.91719, 0.22", "-25.6423, 536.745, 0.670005, 0.22", "-26.3359, 537.153, 0.505479, 0.15", "-27.2364, 537.671, 0.264853, 0.15", "-28.3196, 538.294, -0.0245972, 0.52", "-28.793, 538.566, -0.151096, 0.52", "-29.4543, 538.947, -0.327808, 0.52", "-29.6486, 539.054, -0.377146, 0.52", "-30.7666, 539.647, -0.649025, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.1277, 532.49, -19.4782, 0.22", "7.39036, 530.756, -20.2887, 0.22", "7.75606, 530.182, -20.5207, 0.29", "8.4121, 528.995, -20.9414, 0.22", "8.94793, 528.025, -21.2851, 0.44", "9.46531, 527.089, -21.6169, 0.22", "9.50259, 527.021, -21.6408, 0.22", "9.66669, 526.57, -21.6928, 0.44", "9.78091, 526.094, -21.73, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.1277, 532.49, -19.4782, 0.29", "6.22206, 532.927, -19.4508, 0.29", "6.499, 533.933, -19.3162, 0.29", "6.81734, 534.962, -19.142, 0.29", "6.8498, 535.056, -19.125, 0.29", "7.22994, 535.985, -18.9486, 0.29", "7.30945, 536.158, -18.9147, 0.81", "7.74662, 537.002, -18.746, 0.66", "7.76944, 537.041, -18.7389, 0.66", "8.0656, 537.506, -18.6532, 0.52", "8.82897, 538.716, -18.4631, 0.29", "9.31663, 539.498, -18.3173, 0.29", "9.56175, 539.927, -18.2416, 1.33", "9.84305, 540.461, -18.1587, 1.55", "9.87131, 540.519, -18.1494, 1.55", "10.1828, 541.189, -18.0052, 1.25", "10.7975, 542.586, -17.6778, 0.37", "11.151, 543.417, -17.466, 0.29", "11.1747, 543.474, -17.4501, 0.29", "11.5488, 544.374, -17.1763, 0.29", "12.2167, 545.975, -16.6758, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-25.7202, 568.742, 21.8337, 0.44", "-25.4997, 567.277, 21.5941, 0.44", "-25.3036, 565.974, 21.3809, 0.37", "-25.1674, 565.069, 21.2329, 0.22", "-25.1557, 564.991, 21.2202, 0.22", "-24.9353, 563.527, 20.9806, 0.22", "-24.9235, 563.449, 20.9679, 0.22", "-22.8478, 552.339, 21.1375, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-25.7202, 568.742, 21.8337, 0.74", "-25.8146, 569.051, 21.8547, 0.74", "-25.8982, 569.478, 21.866, 0.22", "-25.9051, 569.513, 21.8663, 0.22", "-25.9695, 569.874, 21.8777, 0.22", "-25.9883, 569.987, 21.8828, 0.22", "-26.0421, 570.347, 21.9046, 0.22", "-26.1045, 570.825, 21.9444, 1.4", "-26.1546, 571.464, 22.0176, 0.29", "-26.1692, 571.881, 22.0853, 0.29", "-26.1689, 571.93, 22.0952, 0.29", "-26.1613, 572.396, 22.2134, 0.29", "-26.1602, 572.429, 22.2238, 0.29", "-26.1278, 572.965, 22.4422, 0.81", "-26.0902, 573.282, 22.5933, 1.11", "-26.0863, 573.313, 22.6079, 1.11", "-26.0468, 573.707, 22.787, 1.11", "-26.043, 573.76, 22.811, 1.11", "-26.046, 574.02, 22.9157, 1.11", "-26.048, 574.047, 22.927, 1.11", "-26.0796, 574.391, 23.0648, 0.22", "-26.1154, 574.752, 23.2125, 0.29", "-26.1191, 574.784, 23.2258, 0.29", "-26.1658, 575.123, 23.3637, 0.22", "-26.267, 575.698, 23.5948, 0.81", "-27.0182, 580.386, 24.8739, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "12.2167, 545.975, -16.6758, 1.84", "13.1297, 546.697, -17.195, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "12.2167, 545.975, -16.6758, 0.22", "12.1209, 548.193, -17.0653, 0.22", "12.0943, 549.388, -17.2437, 0.22", "12.0933, 549.458, -17.253, 0.22", "12.0804, 550.878, -17.415, 0.59", "12.076, 552.33, -17.5661, 0.22", "12.0831, 553.425, -17.6692, 0.66", "12.0933, 553.509, -17.6658, 0.66", "12.1405, 553.764, -17.6445, 0.66", "12.3626, 554.765, -17.5219, 0.15", "12.383, 554.843, -17.5079, 0.15", "12.5835, 555.525, -17.3491, 1.18", "13.1544, 557.118, -16.9172, 0.29", "13.3461, 557.61, -16.7736, 0.52", "13.3776, 557.681, -16.7501, 0.52", "13.5321, 557.974, -16.6333, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "13.1297, 546.697, -17.195, 0.15", "13.6368, 548.088, -17.0308, 0.15", "13.8707, 548.775, -16.9631, 0.15", "14.0305, 549.245, -16.9168, 0.29", "14.087, 549.411, -16.9005, 0.29", "14.2298, 549.831, -16.8591, 0.15", "14.3418, 550.16, -16.8267, 0.29", "14.3533, 550.245, -16.8311, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "13.1297, 546.697, -17.195, 0.29", "13.7851, 545.568, -16.8338, 0.29", "13.9932, 545.19, -16.6997, 0.29", "14.3261, 544.551, -16.4693, 0.22", "14.4464, 544.334, -16.3929, 0.52", "14.9326, 543.469, -16.0902, 0.22", "14.9537, 543.429, -16.0758, 0.22", "15.0934, 543.13, -15.9622, 0.88", "15.1913, 542.942, -15.8732, 1.03", "15.6943, 541.958, -15.31, 0.22", "15.7162, 541.906, -15.2794, 0.22", "16.0773, 540.96, -14.6979, 0.22", "16.091, 540.922, -14.6735, 0.22", "16.4284, 540.079, -14.1222, 0.22", "16.6555, 539.535, -13.7576, 0.22", "16.9495, 538.902, -13.2851, 0.22", "17.3957, 538.133, -12.6933, 0.29", "17.4367, 538.08, -12.6539, 0.29", "18.207, 537.264, -12.152, 0.15", "18.2399, 537.235, -12.1375, 0.15", "19.194, 536.527, -11.879, 0.96", "19.4816, 536.338, -11.8285, 0.96", "20.4756, 535.684, -11.711, 0.22", "21.2827, 535.157, -11.6337, 0.22", "21.3221, 535.133, -11.6314, 0.22", "22.0824, 534.648, -11.6241, 0.22", "23.2358, 533.902, -11.723, 0.22", "23.739, 533.567, -11.7561, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.3533, 550.245, -16.8311, 0.37", "14.6645, 551.563, -16.6579, 0.37", "14.6806, 551.638, -16.6517, 0.37", "14.7614, 552.091, -16.6267, 0.22", "14.9009, 553.091, -16.6145, 0.22", "14.9556, 553.621, -16.6166, 0.66", "14.9646, 553.708, -16.617, 0.66", "15.03, 554.628, -16.6787, 0.52", "15.0774, 555.421, -16.7322, 0.52", "15.1106, 556.373, -16.7957, 1.33", "15.1146, 557.167, -16.8512, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "14.3533, 550.245, -16.8311, 0.29", "15.5862, 550.278, -16.6682, 0.29", "15.6525, 550.285, -16.6614, 0.29", "17.5786, 550.593, -16.4822, 0.66", "18.8216, 550.822, -16.3662, 0.15", "19.4658, 550.945, -16.3108, 0.88", "20.1558, 551.066, -16.2793, 0.88", "21.2039, 551.257, -16.2451, 0.22", "21.2699, 551.269, -16.2476, 0.22", "22.0945, 551.413, -16.3814, 0.81", "22.4428, 551.516, -16.4521, 0.81", "23.5742, 551.911, -16.6979, 0.22", "23.8815, 552.014, -16.7722, 0.96", "23.9538, 552.039, -16.7923, 0.96", "24.5436, 552.273, -16.9862, 0.52", "25.5491, 552.65, -17.2757, 0.22", "25.6541, 552.687, -17.2979, 0.22", "25.9877, 552.788, -17.3399, 0.22", "26.0901, 552.812, -17.3508, 0.22", "27.0665, 552.986, -17.444, 0.66", "28.4746, 553.183, -17.5691, 0.15", "28.5411, 553.189, -17.575, 0.15", "29.4389, 553.257, -17.6931, 0.15", "30.0928, 553.298, -17.7702, 0.74", "30.2813, 553.312, -17.7922, 0.74", "30.8341, 553.361, -17.8575, 0.74", "30.9111, 553.368, -17.8697, 0.74", "32.0994, 553.444, -18.0565, 0.22", "33.7904, 553.492, -18.3041, 0.66", "34.2099, 553.492, -18.3584, 0.66", "34.2993, 553.49, -18.3689, 0.66", "35.0245, 553.455, -18.4386, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "15.1146, 557.167, -16.8512, 0.44", "15.2526, 558.206, -16.3996, 0.44", "15.4197, 558.931, -16.0838, 0.29", "15.6172, 559.643, -15.7776, 0.29", "15.9641, 560.763, -15.3209, 0.81", "16.0973, 561.159, -15.1705, 1.18", "16.1635, 561.348, -15.1026, 1.18", "16.6262, 562.398, -14.7969, 0.15", "16.6876, 562.51, -14.769, 0.15", "16.8999, 562.841, -14.7116, 0.66", "17.082, 563.14, -14.7016, 0.96", "17.1096, 563.192, -14.6975, 0.96", "17.1868, 563.37, -14.6627, 0.96", "17.4617, 563.981, -14.4618, 0.29", "17.5145, 564.089, -14.419, 0.29", "17.7559, 564.546, -14.2162, 0.29", "18.1974, 565.358, -13.8403, 0.37", "18.5488, 566.004, -13.5363, 0.52", "19.0858, 566.985, -13.0601, 0.96", "19.116, 567.04, -13.0348, 0.96", "19.4252, 567.584, -12.814, 1.18", "19.5221, 567.754, -12.7612, 1.18", "19.6631, 568.048, -12.73, 1.18", "19.696, 568.131, -12.7311, 1.18", "19.9325, 568.899, -12.7703, 1.33", "19.9518, 568.965, -12.7744, 1.33", "20.0877, 569.455, -12.8121, 1.25", "20.4551, 570.802, -12.9248, 0.22", "20.6596, 571.62, -12.992, 0.22", "20.7519, 572.053, -13.0213, 0.59", "20.7706, 572.147, -13.0273, 0.59", "20.8183, 572.397, -13.0426, 0.59", "20.9426, 573.138, -13.0834, 0.22", "20.9871, 573.707, -13.1007, 0.96", "21.0062, 574.397, -13.1006, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.1146, 557.167, -16.8512, 0.15", "15.6475, 559.964, -17.6521, 0.15", "15.6622, 560.077, -17.6768, 0.15", "15.7429, 560.652, -17.7938, 0.15", "15.7538, 560.744, -17.81, 0.15", "15.8053, 561.362, -17.9131, 0.59", "15.8319, 561.765, -17.9748, 0.59", "15.9177, 564.273, -18.269, 0.22", "15.933, 565.268, -18.3753, 1.25", "15.9483, 565.973, -18.439, 0.88", "15.9923, 567.807, -18.5743, 0.15", "16.0071, 568.581, -18.6148, 0.15", "16.0112, 569.435, -18.6392, 0.74", "16.0066, 570.013, -18.6374, 1.11", "15.9719, 571.324, -18.6189, 0.15", "15.9573, 572.009, -18.606, 0.96", "15.9316, 572.84, -18.5742, 1.18", "15.816, 575.187, -18.4878, 0.15", "15.809, 575.292, -18.4836, 0.15", "15.7093, 576.381, -18.4468, 0.15", "15.6996, 576.46, -18.4448, 0.15", "15.6338, 577.128, -18.4294, 0.52", "15.6208, 577.288, -18.4239, 0.52", "15.5955, 577.63, -18.4138, 0.52", "15.5916, 577.698, -18.4132, 0.52", "15.5473, 578.828, -18.4139, 0.22", "15.5167, 579.648, -18.4184, 1.11", "15.5023, 580.415, -18.4058, 0.81", "15.4851, 582.435, -18.3428, 0.15", "15.4855, 584.579, -18.2467, 0.15", "15.5029, 585.299, -18.1985, 1.03", "15.5436, 586.104, -18.1157, 0.81", "15.6892, 587.836, -17.8665, 0.22", "15.697, 587.903, -17.8538, 0.22", "15.883, 589.004, -17.5548, 0.52", "16.0903, 590.042, -17.2101, 0.22", "16.2801, 590.971, -16.8898, 0.74", "16.3894, 591.497, -16.7068, 0.74", "16.404, 591.571, -16.6814, 0.74", "16.7049, 593.101, -16.1897, 0.22", "16.7175, 593.165, -16.1706, 0.22", "16.9364, 594.369, -15.9003, 0.66", "17.014, 594.786, -15.8302, 0.66", "17.0272, 594.852, -15.8222, 0.66", "17.1972, 595.603, -15.7797, 0.22", "17.584, 596.814, -15.7459, 1.4", "18.1068, 598.229, -15.7283, 0.15", "18.1723, 598.388, -15.7291, 0.15", "18.5295, 599.2, -15.7314, 0.15", "19.0882, 600.437, -15.7344, 0.15", "20.1034, 602.607, -15.7388, 0.15", "20.6817, 603.744, -15.7308, 1.33", "20.9363, 604.204, -15.7014, 1.47", "21.8663, 605.95, -15.6175, 0.22", "21.9683, 606.151, -15.6096, 0.44", "21.9951, 606.213, -15.6105, 0.44", "22.2685, 607.254, -15.8229, 0.22", "22.666, 608.59, -15.9452, 0.88", "23.2932, 610.667, -15.8884, 0.59", "23.4355, 611.053, -15.8402, 0.37", "23.8768, 612.079, -15.6496, 0.15", "24.5672, 613.547, -15.3146, 1.62", "26.2843, 616.853, -14.4691, 0.88", "26.6803, 617.531, -14.2646, 1.25", "27.4733, 618.74, -13.8111, 0.15", "27.7573, 619.149, -13.6521, 0.66", "27.8092, 619.22, -13.6267, 0.66", "28.6817, 620.46, -13.3206, 0.22", "29.0453, 621.119, -13.3064, 0.88", "29.1825, 621.388, -13.3046, 0.88", "29.2251, 621.483, -13.3031, 0.88", "30.0018, 623.324, -13.2495, 0.22", "30.269, 623.985, -13.2305, 0.66", "30.8989, 625.689, -13.1758, 0.15", "31.197, 626.539, -13.1489, 0.15", "31.219, 626.607, -13.1465, 0.15", "31.3752, 627.171, -13.122, 0.44", "31.5183, 627.914, -13.083, 0.22", "31.5869, 628.567, -13.0465, 0.52", "31.5765, 628.66, -13.0387, 0.52", "31.5059, 628.998, -12.9906, 0.52", "31.4007, 629.397, -12.9207, 0.37", "31.3661, 629.48, -12.8986, 0.37", "31.125, 629.837, -12.7477, 0.22", "30.6768, 630.374, -12.4694, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "21.0062, 574.397, -13.1006, 0.22", "21.4034, 575.813, -12.7743, 0.22", "21.6078, 576.532, -12.5961, 0.52", "22.1255, 578.339, -12.1302, 0.29", "22.3686, 579.18, -11.9059, 0.88", "22.5562, 579.814, -11.7545, 1.18", "22.6864, 580.265, -11.6593, 1.18", "22.7524, 580.497, -11.6227, 1.18", "22.7524, 580.497, -11.6227, 1.18", "22.7672, 580.556, -11.6198, 1.18", "23.0447, 581.71, -11.5845, 0.22", "23.2732, 582.41, -11.548, 0.44", "23.6564, 583.422, -11.4665, 0.59", "23.8761, 583.901, -11.4237, 1.11", "24.1282, 584.384, -11.3779, 1.11", "24.1585, 584.435, -11.3724, 1.11", "25.2952, 586.015, -11.1704, 0.22", "25.3411, 586.067, -11.1657, 0.22", "25.9902, 586.741, -11.1381, 0.22", "26.3477, 587.109, -11.1151, 0.74", "26.3972, 587.161, -11.1116, 0.74", "26.794, 587.607, -11.0761, 0.52", "27.3948, 588.392, -11.0063, 0.22", "27.8452, 589.064, -10.8773, 0.74", "28.5513, 590.267, -10.5301, 1.25", "28.5921, 590.348, -10.5033, 1.25", "28.717, 590.637, -10.3968, 1.11", "28.9783, 591.264, -10.1077, 0.52", "29.4006, 592.194, -9.62524, 0.15", "29.432, 592.25, -9.59284, 0.15", "29.8252, 592.684, -9.30827, 0.15", "29.9105, 592.746, -9.25821, 0.15", "31.0109, 593.37, -8.59519, 0.44", "31.4614, 593.584, -8.32711, 0.66", "31.5178, 593.606, -8.29681, 0.66", "32.9054, 594.099, -7.55604, 0.22", "32.9637, 594.117, -7.52507, 0.22", "34.4121, 594.571, -6.73384, 1.33", "34.5895, 594.634, -6.62321, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "21.0062, 574.397, -13.1006, 0.15", "22.1201, 575.565, -13.9101, 0.15", "22.5237, 575.958, -14.1816, 0.15", "22.6189, 576.044, -14.2426, 0.15", "23.0782, 576.442, -14.5302, 0.44", "23.1808, 576.526, -14.5925, 0.44", "23.8545, 577.064, -14.9991, 0.22", "24.2074, 577.33, -15.1962, 0.44", "24.6822, 577.638, -15.4679, 0.15", "24.7323, 577.668, -15.4971, 0.15", "25.228, 577.942, -15.791, 0.66", "25.2784, 577.968, -15.8215, 0.66", "25.9429, 578.285, -16.2354, 0.22", "26.4772, 578.548, -16.583, 0.88", "26.5345, 578.575, -16.6209, 0.88", "26.6882, 578.648, -16.7234, 1.11", "26.7889, 578.691, -16.7926, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "34.5895, 594.634, -6.62321, 0.29", "35.3255, 596.046, -5.73909, 0.29", "35.3594, 596.103, -5.71035, 0.29", "35.876, 596.917, -5.36289, 0.29", "35.9417, 597.009, -5.33193, 0.29", "36.3871, 597.633, -5.15749, 0.74", "36.4231, 597.683, -5.14508, 0.74", "36.86, 598.309, -4.97581, 0.74", "36.9402, 598.421, -4.93071, 0.74", "37.4768, 599.139, -4.59808, 0.15", "37.7331, 599.473, -4.44204, 0.15", "37.7662, 599.518, -4.42007, 0.15", "38.8531, 601.041, -3.67339, 0.15", "39.1815, 601.55, -3.42544, 1.11", "39.4703, 602.056, -3.19708, 1.25", "40.1049, 603.242, -2.68897, 0.22", "40.4752, 603.947, -2.41519, 0.22", "40.5002, 603.999, -2.39803, 0.22", "40.809, 604.767, -2.26329, 0.29", "41.0818, 605.541, -2.15463, 0.74", "41.2729, 606.086, -2.07575, 1.11", "41.2993, 606.155, -2.06747, 1.11", "41.6545, 606.893, -2.00849, 0.66", "42.1345, 607.8, -1.95924, 0.22", "42.4725, 608.334, -1.95443, 0.15", "42.9298, 608.971, -1.97529, 1.11", "43.3606, 609.558, -2.01548, 1.69", "43.3989, 609.604, -2.01877, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "34.5895, 594.634, -6.62321, 0.29", "33.9823, 595.74, -5.82712, 0.29", "33.8138, 596.031, -5.61914, 0.29", "33.3416, 596.826, -5.02725, 0.15", "33.2408, 596.993, -4.89961, 0.15", "32.9214, 597.545, -4.4862, 0.29", "32.431, 598.411, -3.84836, 0.15", "32.3676, 598.522, -3.77461, 0.15", "31.8458, 599.523, -3.19342, 0.15", "31.7971, 599.632, -3.1469, 0.15", "31.4972, 600.371, -2.88218, 0.15", "31.4228, 600.586, -2.8292, 0.15", "30.9595, 602.026, -2.58053, 0.15", "30.9257, 602.138, -2.56614, 0.15", "30.5513, 603.49, -2.52246, 0.15", "30.5284, 603.574, -2.52261, 0.15", "30.3412, 604.277, -2.56599, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "43.3989, 609.604, -2.01877, 0.52", "44.5398, 610.963, -1.40941, 0.52", "45.5131, 612.27, -0.765379, 0.29", "45.786, 612.738, -0.541753, 0.96", "46.0864, 613.316, -0.267951, 1.11", "46.1356, 613.413, -0.21945, 1.11", "46.5488, 614.232, 0.204234, 0.81", "46.9194, 615.121, 0.669511, 1.11", "47.3934, 616.38, 1.25163, 0.37", "47.4144, 616.432, 1.27355, 0.37", "47.9128, 617.603, 1.67473, 0.29", "47.9429, 617.664, 1.69055, 0.29", "48.4849, 618.428, 1.79628, 0.81", "48.8479, 618.818, 1.81054, 1.03", "48.8989, 618.866, 1.81009, 1.03", "49.3537, 619.283, 1.79468, 0.96", "50.5033, 620.332, 1.72151, 0.66", "51.6124, 621.376, 1.64361, 0.52", "52.4765, 622.234, 1.59457, 0.44", "52.9007, 622.691, 1.58074, 0.44", "53.303, 623.087, 1.5804, 0.37", "53.4232, 623.195, 1.57932, 0.37", "54.2853, 623.905, 1.52778, 0.37", "55.1166, 624.609, 1.4777, 0.22", "56.2684, 625.524, 1.39654, 1.4", "57.9901, 626.771, 1.29935, 0.29", "58.5464, 627.129, 1.2787, 0.96", "59.0077, 627.384, 1.27064, 0.96", "66.3929, 633.817, 0.973652, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "43.3989, 609.604, -2.01877, 0.22", "42.8732, 611.182, -1.51726, 0.22", "42.4071, 612.582, -1.07257, 0.22", "42.3597, 612.725, -1.02731, 0.22", "41.9511, 613.952, -0.637583, 0.22", "40.4057, 623.536, 2.73622, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "axon_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "axon_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_DBC_5f1980557e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, axon_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, axon_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -4.35803, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -4.35803, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.4534, -5.2781, -7.46618, 0.74 ) }
    dend_75 { pt3dadd( -7.50249, -5.32616, -7.46987, 0.74 ) }
    dend_75 { pt3dadd( -8.4508, -5.93034, -7.55788, 0.66 ) }
    dend_75 { pt3dadd( -9.36443, -6.30467, -7.64974, 0.44 ) }
    dend_75 { pt3dadd( -10.4186, -6.58356, -7.75754, 0.44 ) }
    dend_75 { pt3dadd( -11.3872, -6.68767, -7.97381, 0.44 ) }
    dend_75 { pt3dadd( -12.0038, -6.69543, -8.15911, 1.03 ) }
    dend_75 { pt3dadd( -12.7671, -6.70123, -8.468, 1.33 ) }
    dend_75 { pt3dadd( -13.4404, -6.68181, -8.80632, 1.47 ) }
    dend_75 { pt3dadd( -14.1058, -6.69387, -9.22671, 0.66 ) }
    dend_75 { pt3dadd( -15.3931, -7.09269, -10.4054, 0.37 ) }
    dend_75 { pt3dadd( -15.6818, -7.3702, -10.8501, 0.37 ) }
    dend_75 { pt3dadd( -16.0878, -8.05822, -11.731, 1.11 ) }
    dend_75 { pt3dadd( -16.107, -8.10826, -11.7872, 1.11 ) }
    dend_75 { pt3dadd( -16.2281, -8.5612, -12.2367, 0.88 ) }
    dend_75 { pt3dadd( -16.4224, -9.57617, -13.1277, 0.59 ) }
    dend_75 { pt3dadd( -16.6525, -10.9125, -14.1489, 1.03 ) }
    dend_75 { pt3dadd( -16.6913, -11.1448, -14.3363, 1.25 ) }
    dend_75 { pt3dadd( -16.708, -11.2244, -14.3997, 1.25 ) }
    dend_75 { pt3dadd( -16.7938, -11.5727, -14.6807, 1.25 ) }
    dend_75 { pt3dadd( -16.8253, -11.6659, -14.7616, 1.25 ) }
    dend_75 { pt3dadd( -17.26, -12.5621, -15.5417, 0.52 ) }
    dend_75 { pt3dadd( -17.7327, -13.2132, -16.1404, 0.22 ) }
    dend_75 { pt3dadd( -18.0255, -13.4388, -16.4412, 0.22 ) }
    dend_75 { pt3dadd( -18.2284, -13.5254, -16.6136, 0.22 ) }
    dend_75 { pt3dadd( -18.7205, -13.6412, -16.9731, 0.88 ) }
    dend_75 { pt3dadd( -19.0597, -13.7062, -17.1787, 1.25 ) }
    dend_75 { pt3dadd( -19.5901, -13.8132, -17.4557, 1.25 ) }
    dend_75 { pt3dadd( -20.7057, -14.1608, -18.0953, 0.29 ) }
    dend_75 { pt3dadd( -21.026, -14.3251, -18.3117, 0.29 ) }
    dend_75 { pt3dadd( -21.5095, -14.6989, -18.6761, 0.29 ) }
    dend_75 { pt3dadd( -22.0523, -15.2573, -19.1094, 0.29 ) }
    dend_75 { pt3dadd( -22.5939, -15.9144, -19.5696, 0.29 ) }
    dend_75 { pt3dadd( -23.1142, -16.6296, -20.0199, 0.52 ) }
    dend_75 { pt3dadd( -23.3211, -16.9487, -20.1958, 0.52 ) }
    dend_75 { pt3dadd( -23.5009, -17.1977, -20.34, 0.29 ) }
    dend_75 { pt3dadd( -23.7684, -17.544, -20.6282, 0.29 ) }
    dend_75 { pt3dadd( -24.0915, -17.9235, -21.0399, 1.25 ) }
    dend_75 { pt3dadd( -24.3206, -18.1628, -21.332, 1.47 ) }
    dend_75 { pt3dadd( -24.356, -18.1995, -21.3795, 1.47 ) }
    dend_75 { pt3dadd( -24.5259, -18.3888, -21.6331, 1.47 ) }
    dend_75 { pt3dadd( -25.5004, -19.6055, -23.3139, 0.22 ) }
    dend_75 { pt3dadd( -25.6532, -19.8301, -23.6139, 0.81 ) }
    dend_75 { pt3dadd( -25.8408, -20.1172, -23.9837, 0.81 ) }
    dend_75 { pt3dadd( -25.8661, -20.1536, -24.034, 0.81 ) }
    dend_75 { pt3dadd( -26.1239, -20.4691, -24.4998, 0.96 ) }
    dend_75 { pt3dadd( -26.7008, -21.1049, -25.5304, 0.29 ) }
    dend_75 { pt3dadd( -26.7383, -21.1386, -25.5908, 0.29 ) }
    dend_75 { pt3dadd( -26.9604, -21.3815, -25.9812, 0.29 ) }
    dend_75 { pt3dadd( -27.6038, -22.3088, -27.1682, 1.92 ) }
    dend_75 { pt3dadd( -27.9471, -22.9083, -27.8168, 2.58 ) }
    dend_75 { pt3dadd( -28.2871, -23.5948, -28.4729, 2.58 ) }
    dend_75 { pt3dadd( -28.3119, -23.6436, -28.514, 2.58 ) }
    dend_75 { pt3dadd( -29.0195, -24.9754, -29.5257, 0.66 ) }
    dend_75 { pt3dadd( -29.5688, -25.86, -30.1576, 0.22 ) }
    dend_75 { pt3dadd( -29.6837, -26.0089, -30.2498, 0.81 ) }
    dend_75 { pt3dadd( -30.3556, -26.7397, -30.7186, 0.22 ) }
    dend_75 { pt3dadd( -31.1586, -27.5138, -31.2172, 2.58 ) }
    dend_75 { pt3dadd( -31.5368, -27.8433, -31.4487, 3.32 ) }
    dend_75 { pt3dadd( -32.9628, -28.965, -32.3037, 0.44 ) }
    dend_75 { pt3dadd( -33.7063, -29.5533, -32.761, 1.33 ) }
    dend_75 { pt3dadd( -34.286, -30.0603, -33.1182, 1.47 ) }
    dend_75 { pt3dadd( -34.9266, -30.7616, -33.5545, 0.22 ) }
    dend_75 { pt3dadd( -34.994, -30.853, -33.6095, 0.22 ) }
    dend_75 { pt3dadd( -35.4028, -31.4504, -33.9578, 0.22 ) }
    dend_75 { pt3dadd( -35.8125, -32.1194, -34.3034, 1.69 ) }
    dend_75 { pt3dadd( -35.9678, -32.3573, -34.4289, 2.06 ) }
    dend_75 { pt3dadd( -37.0565, -33.7936, -35.3641, 0.22 ) }
    dend_75 { pt3dadd( -37.0945, -33.8372, -35.3991, 0.22 ) }
    dend_75 { pt3dadd( -37.5607, -34.3779, -35.876, 0.22 ) }
    dend_75 { pt3dadd( -37.7944, -34.6525, -36.1361, 0.88 ) }
    dend_75 { pt3dadd( -38.0197, -34.976, -36.4631, 1.11 ) }
    dend_75 { pt3dadd( -38.9565, -36.4729, -37.9611, 0.22 ) }
    dend_75 { pt3dadd( -38.9836, -36.5242, -38.0129, 0.22 ) }
    dend_75 { pt3dadd( -39.3056, -37.2165, -38.7145, 1.84 ) }
    dend_75 { pt3dadd( -39.4468, -37.5747, -39.0682, 1.99 ) }
    dend_75 { pt3dadd( -40.0636, -39.266, -40.6535, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -40.2509, -39.7556, -41.0735, 0.29 ) }
    dend_75 { pt3dadd( -40.8841, -41.0837, -42.1218, 0.29 ) }
    dend_75 { pt3dadd( -40.9564, -41.2154, -42.228, 0.29 ) }
    dend_75 { pt3dadd( -41.4262, -41.9198, -42.8136, 1.11 ) }
    dend_75 { pt3dadd( -41.6776, -42.2496, -43.1177, 1.47 ) }
    dend_75 { pt3dadd( -42.3267, -42.9941, -43.8479, 0.29 ) }
    dend_75 { pt3dadd( -43.1895, -43.8937, -44.8037, 2.43 ) }
    dend_75 { pt3dadd( -43.8824, -44.5188, -45.5164, 2.43 ) }
    dend_75 { pt3dadd( -44.9409, -45.3753, -46.6026, 0.52 ) }
    dend_75 { pt3dadd( -45.7233, -45.9395, -47.4141, 0.66 ) }
    dend_75 { pt3dadd( -46.3492, -46.3525, -48.0702, 0.22 ) }
    dend_75 { pt3dadd( -46.6705, -46.5394, -48.3949, 0.59 ) }
    dend_75 { pt3dadd( -46.9757, -46.7022, -48.6723, 0.59 ) }
    dend_75 { pt3dadd( -47.7111, -47.1042, -49.2571, 0.22 ) }
    dend_75 { pt3dadd( -48.2422, -47.4584, -49.6469, 1.18 ) }
    dend_75 { pt3dadd( -48.4865, -47.6583, -49.8048, 1.33 ) }
    dend_75 { pt3dadd( -49.4834, -48.6459, -50.4927, 0.37 ) }
    dend_75 { pt3dadd( -50.0801, -49.3215, -50.922, 0.22 ) }
    dend_75 { pt3dadd( -50.5713, -49.9269, -51.272, 0.22 ) }
    dend_75 { pt3dadd( -51.1462, -50.6936, -51.6635, 1.55 ) }
    dend_75 { pt3dadd( -51.5238, -51.2313, -51.9126, 2.06 ) }
    dend_75 { pt3dadd( -52.5124, -52.7452, -52.5578, 0.22 ) }
    dend_75 { pt3dadd( -52.7158, -53.0692, -52.6795, 0.52 ) }
    dend_75 { pt3dadd( -52.9218, -53.3592, -52.7935, 0.52 ) }
    dend_75 { pt3dadd( -53.5559, -54.1614, -53.1184, 0.22 ) }
    dend_75 { pt3dadd( -53.9132, -54.5919, -53.2888, 0.22 ) }
    dend_75 { pt3dadd( -54.3035, -55.0631, -53.4956, 1.11 ) }
    dend_75 { pt3dadd( -54.6367, -55.4543, -53.6683, 1.33 ) }
    dend_75 { pt3dadd( -55.6213, -56.5706, -54.2279, 0.22 ) }
    dend_75 { pt3dadd( -55.9662, -56.94, -54.4316, 1.03 ) }
    dend_75 { pt3dadd( -56.1568, -57.126, -54.5471, 1.03 ) }
    dend_75 { pt3dadd( -57.1792, -58.0803, -55.1586, 0.22 ) }
    dend_75 { pt3dadd( -57.5533, -58.4297, -55.3732, 0.22 ) }
    dend_75 { pt3dadd( -57.8766, -58.7334, -55.5512, 1.18 ) }
    dend_75 { pt3dadd( -58.1774, -59.0041, -55.7086, 1.4 ) }
    dend_75 { pt3dadd( -59.3562, -60.0457, -56.3955, 0.22 ) }
    dend_75 { pt3dadd( -59.7419, -60.3757, -56.6182, 1.11 ) }
    dend_75 { pt3dadd( -60.0303, -60.6157, -56.7796, 1.33 ) }
    dend_75 { pt3dadd( -60.2796, -60.8376, -56.933, 1.18 ) }
    dend_75 { pt3dadd( -61.2505, -61.7576, -57.5478, 0.15 ) }
    dend_75 { pt3dadd( -62.0827, -62.5804, -58.0784, 0.15 ) }
    dend_75 { pt3dadd( -62.4049, -62.905, -58.277, 0.81 ) }
    dend_75 { pt3dadd( -62.6004, -63.1143, -58.4226, 0.81 ) }
    dend_75 { pt3dadd( -63.4066, -64.0098, -59.0636, 0.22 ) }
    dend_75 { pt3dadd( -64.0703, -64.7732, -59.601, 0.22 ) }
    dend_75 { pt3dadd( -64.6782, -65.4948, -60.0971, 1.47 ) }
    dend_75 { pt3dadd( -64.9392, -65.7983, -60.3224, 1.84 ) }
    dend_75 { pt3dadd( -66.3247, -67.4241, -61.7232, 0.15 ) }
    dend_75 { pt3dadd( -66.6568, -67.799, -62.0879, 0.15 ) }
    dend_75 { pt3dadd( -66.8556, -68.0181, -62.3326, 0.74 ) }
    dend_75 { pt3dadd( -66.9489, -68.117, -62.454, 0.74 ) }
    dend_75 { pt3dadd( -67.6814, -68.8403, -63.4191, 0.29 ) }
    dend_75 { pt3dadd( -68.3323, -69.4379, -64.2534, 1.25 ) }
    dend_75 { pt3dadd( -68.5858, -69.6516, -64.5504, 1.33 ) }
    dend_75 { pt3dadd( -69.3912, -70.3965, -65.6757, 0.15 ) }
    dend_75 { pt3dadd( -69.6364, -70.6375, -66.0494, 0.74 ) }
    dend_75 { pt3dadd( -70.1527, -71.162, -66.8587, 0.22 ) }
    dend_75 { pt3dadd( -70.1802, -71.1902, -66.9005, 0.22 ) }
    dend_75 { pt3dadd( -70.3992, -71.4088, -67.22, 0.88 ) }
    dend_75 { pt3dadd( -71.6417, -72.6427, -69.0113, 0.22 ) }
    dend_75 { pt3dadd( -71.6828, -72.6822, -69.066, 0.22 ) }
    dend_75 { pt3dadd( -71.805, -72.787, -69.2012, 0.22 ) }
    dend_75 { pt3dadd( -72.3561, -73.201, -69.6794, 1.47 ) }
    dend_75 { pt3dadd( -72.6149, -73.3726, -69.857, 1.84 ) }
    dend_75 { pt3dadd( -72.8464, -73.5131, -69.9761, 1.84 ) }
    dend_75 { pt3dadd( -73.1214, -73.6664, -70.0673, 1.84 ) }
    dend_75 { pt3dadd( -74.3121, -74.4676, -70.7202, 0.15 ) }
    dend_75 { pt3dadd( -74.3867, -74.5189, -70.7709, 0.15 ) }
    dend_75 { pt3dadd( -74.9795, -74.8987, -71.2298, 0.15 ) }
    dend_75 { pt3dadd( -75.486, -75.2274, -71.6397, 0.96 ) }
    dend_75 { pt3dadd( -75.7973, -75.4432, -71.8978, 0.96 ) }
    dend_75 { pt3dadd( -77.4321, -76.6625, -73.2909, 0.22 ) }
    dend_75 { pt3dadd( -77.8585, -77.0229, -73.6692, 0.22 ) }
    dend_75 { pt3dadd( -78.3937, -77.4976, -74.1326, 0.22 ) }
    dend_75 { pt3dadd( -79.004, -78.0529, -74.6295, 1.11 ) }
    dend_75 { pt3dadd( -79.4148, -78.4405, -74.943, 1.69 ) }
    dend_75 { pt3dadd( -79.5518, -78.5809, -75.0363, 1.69 ) }
    dend_75 { pt3dadd( -80.7746, -79.9878, -75.7662, 0.22 ) }
    dend_75 { pt3dadd( -81.2133, -80.55, -76.0389, 0.37 ) }
    dend_75 { pt3dadd( -81.6278, -81.1011, -76.3047, 0.22 ) }
    dend_75 { pt3dadd( -82.1941, -81.8241, -76.6591, 1.47 ) }
    dend_75 { pt3dadd( -82.5898, -82.3075, -76.9318, 1.69 ) }
    dend_75 { pt3dadd( -83.5959, -83.4999, -77.6326, 0.22 ) }
    dend_75 { pt3dadd( -84.4501, -84.5359, -78.2259, 0.22 ) }
    dend_75 { pt3dadd( -84.8761, -85.0598, -78.541, 1.4 ) }
    dend_75 { pt3dadd( -85.2805, -85.5597, -78.8521, 1.84 ) }
    dend_75 { pt3dadd( -86.586, -87.1261, -79.8731, 0.15 ) }
    dend_75 { pt3dadd( -87.0408, -87.6511, -80.2405, 0.15 ) }
    dend_75 { pt3dadd( -87.4685, -88.1234, -80.5941, 1.18 ) }
    dend_75 { pt3dadd( -87.701, -88.3812, -80.7945, 1.18 ) }
    dend_75 { pt3dadd( -87.7343, -88.4191, -80.823, 1.18 ) }
    dend_75 { pt3dadd( -88.7949, -89.6971, -81.7115, 0.22 ) }
    dend_75 { pt3dadd( -89.3028, -90.3549, -82.0865, 1.25 ) }
    dend_75 { pt3dadd( -90.0263, -91.3067, -82.6425, 0.15 ) }
    dend_75 { pt3dadd( -90.3143, -91.6531, -82.8682, 0.88 ) }
    dend_75 { pt3dadd( -90.4631, -91.8222, -82.9803, 1.03 ) }
    dend_75 { pt3dadd( -90.9261, -92.326, -83.3089, 0.15 ) }
    dend_75 { pt3dadd( -91.4551, -92.8706, -83.6482, 0.15 ) }
    dend_75 { pt3dadd( -91.8744, -93.2679, -83.9351, 0.74 ) }
    dend_75 { pt3dadd( -92.6605, -93.9545, -84.4812, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -93.3378, -94.5478, -84.9505, 0.22 ) }
    dend_75 { pt3dadd( -93.9456, -95.0827, -85.3693, 1.99 ) }
    dend_75 { pt3dadd( -94.2216, -95.3319, -85.5565, 2.28 ) }
    dend_75 { pt3dadd( -95.7709, -96.8159, -86.5653, 0.22 ) }
    dend_75 { pt3dadd( -95.9885, -97.0515, -86.7023, 0.52 ) }
    dend_75 { pt3dadd( -96.7169, -97.883, -87.1207, 0.15 ) }
    dend_75 { pt3dadd( -96.7597, -97.9308, -87.1449, 0.15 ) }
    dend_75 { pt3dadd( -97.0961, -98.285, -87.3124, 0.81 ) }
    dend_75 { pt3dadd( -97.1355, -98.325, -87.3279, 0.81 ) }
    dend_75 { pt3dadd( -98.2466, -99.4156, -87.6168, 0.22 ) }
    dend_75 { pt3dadd( -99.0592, -100.232, -87.8785, 0.22 ) }
    dend_75 { pt3dadd( -99.1135, -100.285, -87.8975, 0.22 ) }
    dend_75 { pt3dadd( -99.8893, -101.07, -88.1704, 0.22 ) }
    dend_75 { pt3dadd( -100.429, -101.632, -88.3921, 0.81 ) }
    dend_75 { pt3dadd( -100.479, -101.687, -88.4137, 0.81 ) }
    dend_75 { pt3dadd( -101.319, -102.712, -88.8291, 0.22 ) }
    dend_75 { pt3dadd( -101.806, -103.318, -89.0886, 1.47 ) }
    dend_75 { pt3dadd( -101.983, -103.533, -89.1797, 1.77 ) }
    dend_75 { pt3dadd( -103.322, -105.125, -89.8622, 0.22 ) }
    dend_75 { pt3dadd( -103.713, -105.561, -90.057, 0.52 ) }
    dend_75 { pt3dadd( -104.6, -106.488, -90.4669, 0.22 ) }
    dend_75 { pt3dadd( -105.682, -107.535, -90.9228, 0.22 ) }
    dend_75 { pt3dadd( -106.236, -108.054, -91.1594, 1.18 ) }
    dend_75 { pt3dadd( -106.403, -108.209, -91.2292, 1.4 ) }
    dend_75 { pt3dadd( -107.706, -109.462, -91.8463, 0.15 ) }
    dend_75 { pt3dadd( -108.001, -109.758, -92.004, 0.66 ) }
    dend_75 { pt3dadd( -109.455, -111.291, -92.8525, 0.15 ) }
    dend_75 { pt3dadd( -110.151, -112.066, -93.3211, 1.69 ) }
    dend_75 { pt3dadd( -110.365, -112.31, -93.4738, 1.84 ) }
    dend_75 { pt3dadd( -111.926, -114.167, -94.6372, 0.22 ) }
    dend_75 { pt3dadd( -112.217, -114.539, -94.8757, 0.66 ) }
    dend_75 { pt3dadd( -112.257, -114.596, -94.9149, 0.66 ) }
    dend_75 { pt3dadd( -112.652, -115.205, -95.367, 0.15 ) }
    dend_75 { pt3dadd( -112.822, -115.453, -95.5586, 0.59 ) }
    dend_75 { pt3dadd( -112.876, -115.528, -95.6184, 0.59 ) }
    dend_75 { pt3dadd( -113.529, -116.391, -96.2948, 0.22 ) }
    dend_75 { pt3dadd( -114.118, -117.161, -96.9362, 1.33 ) }
    dend_75 { pt3dadd( -114.734, -117.987, -97.6321, 0.15 ) }
    dend_75 { pt3dadd( -115.015, -118.393, -97.9732, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.80597, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.33108, 6.94048, -8.59565, 1.18 ) }
    dend_70 { pt3dadd( 4.3825, 8.52915, -8.144, 1.47 ) }
    dend_70 { pt3dadd( 4.41313, 9.76542, -7.9182, 1.92 ) }
    dend_70 { pt3dadd( 4.43005, 11.4382, -7.78408, 0.81 ) }
    dend_70 { pt3dadd( 4.42488, 12.8275, -7.78615, 0.81 ) }
    dend_70 { pt3dadd( 4.41255, 13.7152, -7.84943, 0.74 ) }
    dend_70 { pt3dadd( 4.40603, 13.8603, -7.88961, 0.74 ) }
    dend_70 { pt3dadd( 4.26387, 15.518, -8.68862, 0.74 ) }
    dend_70 { pt3dadd( 4.17153, 16.4302, -9.31895, 1.11 ) }
    dend_70 { pt3dadd( 4.12082, 16.9768, -9.8148, 1.11 ) }
    dend_70 { pt3dadd( 4.06901, 17.7719, -10.6233, 1.11 ) }
    dend_70 { pt3dadd( 4.04973, 19.2371, -12.0652, 1.25 ) }
    dend_70 { pt3dadd( 4.05115, 19.2908, -12.1159, 1.25 ) }
    dend_70 { pt3dadd( 4.1717, 20.6061, -13.2932, 1.03 ) }
    dend_70 { pt3dadd( 4.3857, 22.0639, -14.5262, 0.52 ) }
    dend_70 { pt3dadd( 4.68883, 23.5606, -15.6905, 0.52 ) }
    dend_70 { pt3dadd( 4.95304, 24.5659, -16.3851, 0.81 ) }
    dend_70 { pt3dadd( 4.97374, 24.6293, -16.4184, 0.81 ) }
    dend_70 { pt3dadd( 5.25531, 25.3908, -16.7479, 1.18 ) }
    dend_70 { pt3dadd( 5.40667, 25.7032, -16.8199, 1.18 ) }
    dend_70 { pt3dadd( 5.642, 26.0969, -16.8216, 1.18 ) }
    dend_70 { pt3dadd( 5.69022, 26.1699, -16.8154, 1.18 ) }
    dend_70 { pt3dadd( 5.86345, 26.4479, -16.7976, 1.4 ) }
    dend_70 { pt3dadd( 5.95613, 26.6311, -16.7847, 1.4 ) }
    dend_70 { pt3dadd( 6.22731, 27.3146, -16.7333, 1.4 ) }
    dend_70 { pt3dadd( 6.44342, 28.0271, -16.6721, 0.88 ) }
    dend_70 { pt3dadd( 6.65314, 29.1485, -16.5666, 0.52 ) }
    dend_70 { pt3dadd( 6.69695, 30.1845, -16.5583, 0.37 ) }
    dend_70 { pt3dadd( 6.61047, 31.2811, -16.677, 0.37 ) }
    dend_70 { pt3dadd( 6.5265, 31.7696, -16.7754, 0.29 ) }
    dend_70 { pt3dadd( 6.29906, 32.6376, -17.0326, 0.29 ) }
    dend_70 { pt3dadd( 6.14119, 33.1456, -17.2587, 0.29 ) }
    dend_70 { pt3dadd( 5.65531, 34.7676, -18.3923, 1.33 ) }
    dend_70 { pt3dadd( 5.39132, 35.6721, -19.1314, 1.92 ) }
    dend_70 { pt3dadd( 5.34065, 35.8969, -19.3358, 2.21 ) }
    dend_70 { pt3dadd( 5.3176, 36.0695, -19.4982, 2.21 ) }
    dend_70 { pt3dadd( 5.28872, 37.0142, -20.4067, 2.5 ) }
    dend_70 { pt3dadd( 5.33652, 38.2492, -21.6748, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 10.468, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 10.468, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 0.99017, 12.5291, -2.80813, 2.8 ) }
    dend_21 { pt3dadd( 0.948124, 12.6652, -2.8347, 2.8 ) }
    dend_21 { pt3dadd( 0.689843, 13.4942, -3.00746, 2.8 ) }
    dend_21 { pt3dadd( 0.573523, 13.8507, -3.08499, 2.8 ) }
    dend_21 { pt3dadd( 0.305757, 14.6529, -3.26525, 2.8 ) }
    dend_21 { pt3dadd( -0.097929, 15.7991, -3.54751, 3.02 ) }
    dend_21 { pt3dadd( -0.663152, 17.2749, -3.9722, 3.02 ) }
    dend_21 { pt3dadd( -0.68496, 17.3283, -3.99, 3.02 ) }
    dend_21 { pt3dadd( -1.16239, 18.4238, -4.38527, 3.02 ) }
    dend_21 { pt3dadd( -1.18559, 18.4761, -4.40446, 3.02 ) }
    dend_21 { pt3dadd( -1.72461, 19.6694, -4.85628, 2.87 ) }
    dend_21 { pt3dadd( -2.22547, 20.8286, -5.24366, 2.87 ) }
    dend_21 { pt3dadd( -2.24815, 20.8831, -5.25703, 2.87 ) }
    dend_21 { pt3dadd( -2.71803, 22.067, -5.48103, 2.73 ) }
    dend_21 { pt3dadd( -3.20818, 23.3369, -5.65839, 2.58 ) }
    dend_21 { pt3dadd( -3.23364, 23.4025, -5.66591, 2.58 ) }
    dend_21 { pt3dadd( -3.9346, 25.1964, -5.81623, 2.36 ) }
    dend_21 { pt3dadd( -4.63752, 26.9477, -5.9329, 2.06 ) }
    dend_21 { pt3dadd( -5.28044, 28.472, -6.02839, 2.06 ) }
    dend_21 { pt3dadd( -5.69901, 29.4461, -6.08789, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -6.44589, 31.1361, -6.18141, 2.73 ) }
    dend_21 { pt3dadd( -7.0576, 32.4875, -6.25958, 2.95 ) }
    dend_21 { pt3dadd( -7.62694, 33.6754, -6.34295, 3.17 ) }
    dend_21 { pt3dadd( -8.14783, 34.7119, -6.42954, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -11.2565, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -11.2565, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.18162, -13.0235, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -4.82522, -14.7129, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.52 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.52 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.52 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.33652, 38.2492, -21.6748, 1.25 ) }
    dend_74 { pt3dadd( 5.04908, 39.0079, -22.2447, 1.25 ) }
    dend_74 { pt3dadd( 4.81218, 39.7508, -22.7974, 1.77 ) }
    dend_74 { pt3dadd( 4.76083, 39.9307, -22.9321, 1.84 ) }
    dend_74 { pt3dadd( 4.57396, 40.8914, -23.805, 0.22 ) }
    dend_74 { pt3dadd( 4.51735, 41.5515, -24.5323, 1.33 ) }
    dend_74 { pt3dadd( 4.51769, 41.5847, -24.5779, 1.33 ) }
    dend_74 { pt3dadd( 4.54431, 41.739, -24.8402, 1.77 ) }
    dend_74 { pt3dadd( 4.5583, 41.7814, -24.921, 1.77 ) }
    dend_74 { pt3dadd( 4.85338, 42.4257, -26.2927, 1.18 ) }
    dend_74 { pt3dadd( 5.10353, 42.833, -27.2743, 1.4 ) }
    dend_74 { pt3dadd( 5.4435, 43.3455, -28.7553, 0.29 ) }
    dend_74 { pt3dadd( 5.45251, 43.3595, -28.7981, 0.29 ) }
    dend_74 { pt3dadd( 5.70982, 43.7738, -30.0776, 1.55 ) }
    dend_74 { pt3dadd( 5.73886, 43.8302, -30.2383, 1.84 ) }
    dend_74 { pt3dadd( 5.74713, 43.851, -30.2872, 1.84 ) }
    dend_74 { pt3dadd( 6.10265, 45.0051, -32.5012, 0.52 ) }
    dend_74 { pt3dadd( 6.11171, 45.0374, -32.5465, 0.52 ) }
    dend_74 { pt3dadd( 6.1649, 45.2462, -32.7849, 0.74 ) }
    dend_74 { pt3dadd( 6.52161, 46.785, -34.2674, 1.47 ) }
    dend_74 { pt3dadd( 6.69527, 47.5382, -34.8651, 0.29 ) }
    dend_74 { pt3dadd( 6.86788, 48.28, -35.3326, 1.69 ) }
    dend_74 { pt3dadd( 7.22782, 50.0009, -36.2092, 0.15 ) }
    dend_74 { pt3dadd( 7.31955, 50.5263, -36.47, 0.66 ) }
    dend_74 { pt3dadd( 7.32655, 50.5758, -36.494, 0.66 ) }
    dend_74 { pt3dadd( 7.43119, 51.5331, -36.9706, 0.15 ) }
    dend_74 { pt3dadd( 7.48138, 52.2172, -37.3523, 1.69 ) }
    dend_74 { pt3dadd( 7.55849, 54.234, -38.529, 0.22 ) }
    dend_74 { pt3dadd( 7.55833, 54.7352, -38.8466, 0.59 ) }
    dend_74 { pt3dadd( 7.54471, 55.8155, -39.5771, 1.92 ) }
    dend_74 { pt3dadd( 7.50667, 57.4998, -40.7648, 0.15 ) }
    dend_74 { pt3dadd( 7.50351, 57.589, -40.8308, 0.15 ) }
    dend_74 { pt3dadd( 7.49645, 57.9933, -41.1443, 0.37 ) }
    dend_74 { pt3dadd( 7.49487, 58.6145, -41.6557, 0.22 ) }
    dend_74 { pt3dadd( 7.49802, 59.2721, -42.2774, 1.11 ) }
    dend_74 { pt3dadd( 7.49729, 59.3118, -42.318, 1.11 ) }
    dend_74 { pt3dadd( 7.48662, 59.5845, -42.6069, 1.25 ) }
    dend_74 { pt3dadd( 7.43037, 60.6976, -43.8288, 0.22 ) }
    dend_74 { pt3dadd( 7.38333, 61.4537, -44.6665, 0.96 ) }
    dend_74 { pt3dadd( 7.31635, 62.2939, -45.5451, 0.15 ) }
    dend_74 { pt3dadd( 7.2623, 62.9994, -46.2354, 1.18 ) }
    dend_74 { pt3dadd( 7.25064, 63.137, -46.359, 1.47 ) }
    dend_74 { pt3dadd( 7.16453, 64.1468, -47.1434, 0.22 ) }
    dend_74 { pt3dadd( 7.13607, 64.4428, -47.3184, 0.44 ) }
    dend_74 { pt3dadd( 7.08271, 65.0249, -47.5771, 0.15 ) }
    dend_74 { pt3dadd( 6.99192, 65.8215, -47.851, 1.11 ) }
    dend_74 { pt3dadd( 6.94813, 66.1637, -47.9503, 1.47 ) }
    dend_74 { pt3dadd( 6.7902, 67.61, -48.2962, 0.22 ) }
    dend_74 { pt3dadd( 6.73531, 68.183, -48.4043, 0.74 ) }
    dend_74 { pt3dadd( 6.65913, 69.0587, -48.5633, 0.15 ) }
    dend_74 { pt3dadd( 6.61039, 69.7375, -48.6823, 1.11 ) }
    dend_74 { pt3dadd( 6.59116, 70.0276, -48.7286, 1.55 ) }
    dend_74 { pt3dadd( 6.44257, 72.606, -49.1164, 0.15 ) }
    dend_74 { pt3dadd( 6.41434, 73.1995, -49.1939, 0.66 ) }
    dend_74 { pt3dadd( 6.4058, 73.4883, -49.2334, 0.66 ) }
    dend_74 { pt3dadd( 6.38631, 75.1735, -49.4697, 0.15 ) }
    dend_74 { pt3dadd( 6.38641, 75.7065, -49.5401, 0.37 ) }
    dend_74 { pt3dadd( 6.38618, 75.7774, -49.5496, 0.37 ) }
    dend_74 { pt3dadd( 6.37508, 76.0758, -49.5865, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.33652, 38.2492, -21.6748, 0.37 ) }
    dend_71 { pt3dadd( 5.94659, 40.2386, -21.8271, 0.37 ) }
    dend_71 { pt3dadd( 6.3777, 42.0209, -21.9722, 0.37 ) }
    dend_71 { pt3dadd( 6.66496, 43.5973, -22.1046, 0.37 ) }
    dend_71 { pt3dadd( 6.6766, 43.7048, -22.1139, 0.37 ) }
    dend_71 { pt3dadd( 6.69319, 44.4666, -22.1809, 0.37 ) }
    dend_71 { pt3dadd( 6.69008, 44.56, -22.1928, 0.37 ) }
    dend_71 { pt3dadd( 6.44457, 45.6609, -22.4256, 0.66 ) }
    dend_71 { pt3dadd( 6.293, 46.0476, -22.529, 0.81 ) }
    dend_71 { pt3dadd( 6.04784, 46.6912, -22.7099, 0.81 ) }
    dend_71 { pt3dadd( 5.83675, 47.3891, -22.8913, 0.37 ) }
    dend_71 { pt3dadd( 5.59498, 48.4977, -23.1339, 0.29 ) }
    dend_71 { pt3dadd( 5.58173, 48.5902, -23.1514, 0.29 ) }
    dend_71 { pt3dadd( 5.48693, 49.7303, -23.3396, 0.29 ) }
    dend_71 { pt3dadd( 5.40505, 51.5744, -23.5939, 1.84 ) }
    dend_71 { pt3dadd( 5.39766, 52.2791, -23.6697, 2.36 ) }
    dend_71 { pt3dadd( 5.42304, 53.8772, -23.7942, 1.55 ) }
    dend_71 { pt3dadd( 5.46908, 55.7156, -23.881, 1.92 ) }
    dend_71 { pt3dadd( 5.50392, 56.4314, -23.9089, 2.5 ) }
    dend_71 { pt3dadd( 5.60238, 57.5707, -23.9556, 1.99 ) }
    dend_71 { pt3dadd( 5.79838, 59.2106, -24.0179, 0.22 ) }
    dend_71 { pt3dadd( 5.92392, 60.2692, -24.0725, 0.22 ) }
    dend_71 { pt3dadd( 6.00406, 61.0113, -24.1148, 0.88 ) }
    dend_71 { pt3dadd( 6.05494, 61.6387, -24.1587, 0.59 ) }
    dend_71 { pt3dadd( 6.11624, 62.7901, -24.2525, 0.29 ) }
    dend_71 { pt3dadd( 6.15123, 64.0736, -24.3674, 0.29 ) }
    dend_71 { pt3dadd( 6.16779, 65.5706, -24.5057, 0.29 ) }
    dend_71 { pt3dadd( 6.17457, 66.8852, -24.633, 0.29 ) }
    dend_71 { pt3dadd( 6.18319, 68.2947, -24.764, 1.18 ) }
    dend_71 { pt3dadd( 6.19754, 69.1383, -24.8265, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 6.23357, 69.9844, -24.8742, 1.4 ) }
    dend_71 { pt3dadd( 6.31363, 70.9049, -24.9209, 0.88 ) }
    dend_71 { pt3dadd( 6.50307, 72.5164, -24.9975, 0.29 ) }
    dend_71 { pt3dadd( 6.6852, 73.9169, -25.0559, 0.29 ) }
    dend_71 { pt3dadd( 7.0056, 76.2019, -25.1231, 2.14 ) }
    dend_71 { pt3dadd( 7.13426, 77.1284, -25.1498, 3.09 ) }
    dend_71 { pt3dadd( 7.2518, 78.0019, -25.1724, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.14783, 34.7119, -6.42954, 1.62 ) }
    dend_25 { pt3dadd( -8.46497, 36.3095, -6.75559, 1.62 ) }
    dend_25 { pt3dadd( -8.46976, 36.3675, -6.76513, 1.62 ) }
    dend_25 { pt3dadd( -8.53724, 37.1846, -6.89944, 1.62 ) }
    dend_25 { pt3dadd( -8.55173, 37.36, -6.92827, 1.62 ) }
    dend_25 { pt3dadd( -8.61719, 38.1526, -7.05857, 1.62 ) }
    dend_25 { pt3dadd( -8.62147, 38.2045, -7.0671, 1.62 ) }
    dend_25 { pt3dadd( -8.51498, 39.4811, -7.15377, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.14783, 34.7119, -6.42954, 0.66 ) }
    dend_22 { pt3dadd( -6.34043, 37.8016, -5.42993, 0.66 ) }
    dend_22 { pt3dadd( -5.69645, 38.8147, -5.34695, 0.59 ) }
    dend_22 { pt3dadd( -5.08382, 39.7397, -5.3642, 1.03 ) }
    dend_22 { pt3dadd( -4.96895, 39.9178, -5.37846, 1.03 ) }
    dend_22 { pt3dadd( -4.71557, 40.3463, -5.4271, 1.18 ) }
    dend_22 { pt3dadd( -3.84018, 42.0621, -5.67596, 0.81 ) }
    dend_22 { pt3dadd( -3.30353, 43.23, -6.04188, 0.66 ) }
    dend_22 { pt3dadd( -3.26646, 43.3273, -6.0737, 0.66 ) }
    dend_22 { pt3dadd( -2.93453, 44.4459, -6.35196, 0.66 ) }
    dend_22 { pt3dadd( -2.63707, 45.7362, -6.57139, 0.88 ) }
    dend_22 { pt3dadd( -2.36127, 47.5007, -6.73632, 1.4 ) }
    dend_22 { pt3dadd( -2.32086, 47.9517, -6.74321, 1.77 ) }
    dend_22 { pt3dadd( -2.27154, 48.9419, -6.70977, 2.14 ) }
    dend_22 { pt3dadd( -2.19094, 50.8589, -6.45809, 1.77 ) }
    dend_22 { pt3dadd( -2.0859, 52.1051, -6.09229, 1.25 ) }
    dend_22 { pt3dadd( -1.95379, 53.1053, -5.65369, 1.03 ) }
    dend_22 { pt3dadd( -1.76796, 53.9273, -5.14877, 0.81 ) }
    dend_22 { pt3dadd( -1.45102, 54.9602, -4.38058, 0.81 ) }
    dend_22 { pt3dadd( -0.78557, 56.4914, -2.97966, 0.59 ) }
    dend_22 { pt3dadd( 0.098757, 57.9142, -1.40495, 0.59 ) }
    dend_22 { pt3dadd( 0.143932, 57.9707, -1.32747, 0.59 ) }
    dend_22 { pt3dadd( 0.829472, 58.6265, -0.208562, 1.77 ) }
    dend_22 { pt3dadd( 0.869587, 58.6543, -0.147331, 1.77 ) }
    dend_22 { pt3dadd( 1.3111, 58.8339, 0.438422, 1.92 ) }
    dend_22 { pt3dadd( 1.37429, 58.8398, 0.50346, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.82522, -14.7129, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.32517, -15.9375, -0.0826592, 0.37 ) }
    dend_14 { pt3dadd( -7.32156, -16.9066, -0.475398, 0.37 ) }
    dend_14 { pt3dadd( -8.73569, -18.5275, -0.442626, 0.37 ) }
    dend_14 { pt3dadd( -9.37464, -19.4053, -0.0207098, 0.66 ) }
    dend_14 { pt3dadd( -9.74573, -19.9427, 0.365713, 0.96 ) }
    dend_14 { pt3dadd( -9.79884, -20.0052, 0.428163, 0.96 ) }
    dend_14 { pt3dadd( -11.2864, -21.6739, 2.843, 0.59 ) }
    dend_14 { pt3dadd( -11.3238, -21.7088, 2.90993, 0.59 ) }
    dend_14 { pt3dadd( -11.9175, -22.0744, 3.88265, 1.25 ) }
    dend_14 { pt3dadd( -12.1275, -22.1588, 4.1474, 1.25 ) }
    dend_14 { pt3dadd( -13.5541, -22.6304, 5.50087, 0.59 ) }
    dend_14 { pt3dadd( -14.1747, -22.856, 5.94951, 0.96 ) }
    dend_14 { pt3dadd( -14.2699, -22.8933, 5.99627, 0.96 ) }
    dend_14 { pt3dadd( -15.1479, -23.38, 6.54679, 0.96 ) }
    dend_14 { pt3dadd( -15.8518, -23.9509, 7.10758, 0.59 ) }
    dend_14 { pt3dadd( -16.3913, -24.6441, 7.75038, 0.29 ) }
    dend_14 { pt3dadd( -16.7889, -25.4968, 8.53227, 0.29 ) }
    dend_14 { pt3dadd( -17.1241, -26.2569, 9.28588, 1.11 ) }
    dend_14 { pt3dadd( -17.8029, -27.7212, 10.8024, 0.22 ) }
    dend_14 { pt3dadd( -17.9809, -28.0801, 11.1839, 1.25 ) }
    dend_14 { pt3dadd( -18.3574, -28.6467, 11.7938, 1.55 ) }
    dend_14 { pt3dadd( -18.4602, -28.7528, 11.9031, 1.55 ) }
    dend_14 { pt3dadd( -19.9236, -29.7029, 12.7291, 0.59 ) }
    dend_14 { pt3dadd( -20.4255, -29.9829, 12.8984, 0.74 ) }
    dend_14 { pt3dadd( -21.2344, -30.3992, 13.0654, 0.74 ) }
    dend_14 { pt3dadd( -22.3617, -30.9861, 13.2787, 0.59 ) }
    dend_14 { pt3dadd( -22.5278, -31.0926, 13.3178, 0.59 ) }
    dend_14 { pt3dadd( -23.5597, -32.14, 13.7449, 0.59 ) }
    dend_14 { pt3dadd( -23.881, -32.8198, 14.1159, 1.11 ) }
    dend_14 { pt3dadd( -24.0653, -33.3436, 14.4771, 1.18 ) }
    dend_14 { pt3dadd( -24.1015, -33.4577, 14.5636, 1.18 ) }
    dend_14 { pt3dadd( -24.5799, -34.6878, 15.5675, 0.59 ) }
    dend_14 { pt3dadd( -25.1029, -35.6662, 16.3988, 0.59 ) }
    dend_14 { pt3dadd( -25.9247, -36.6336, 17.2438, 0.44 ) }
    dend_14 { pt3dadd( -26.7048, -37.1189, 17.7321, 0.74 ) }
    dend_14 { pt3dadd( -27.4196, -37.3451, 17.9949, 0.88 ) }
    dend_14 { pt3dadd( -28.9307, -37.5902, 18.3382, 0.44 ) }
    dend_14 { pt3dadd( -29.7252, -37.6317, 18.4049, 0.44 ) }
    dend_14 { pt3dadd( -30.6723, -37.6537, 18.3995, 0.44 ) }
    dend_14 { pt3dadd( -30.7547, -37.6595, 18.3902, 0.44 ) }
    dend_14 { pt3dadd( -31.7761, -37.8472, 18.2191, 0.88 ) }
    dend_14 { pt3dadd( -31.8845, -37.8798, 18.2012, 0.88 ) }
    dend_14 { pt3dadd( -33.0629, -38.3453, 17.9573, 1.18 ) }
    dend_14 { pt3dadd( -33.6225, -38.6095, 17.8325, 1.11 ) }
    dend_14 { pt3dadd( -34.4783, -39.051, 17.6166, 0.59 ) }
    dend_14 { pt3dadd( -35.2712, -39.4931, 17.3902, 0.44 ) }
    dend_14 { pt3dadd( -35.3402, -39.5346, 17.3671, 0.44 ) }
    dend_14 { pt3dadd( -36.3819, -40.2684, 17.0327, 0.66 ) }
    dend_14 { pt3dadd( -37.073, -40.8946, 16.8351, 0.37 ) }
    dend_14 { pt3dadd( -37.4857, -41.4139, 16.7512, 1.03 ) }
    dend_14 { pt3dadd( -37.7, -41.8498, 16.7447, 1.03 ) }
    dend_14 { pt3dadd( -37.7494, -42.0309, 16.76, 1.03 ) }
    dend_14 { pt3dadd( -38.0702, -43.6718, 16.9633, 0.37 ) }
    dend_14 { pt3dadd( -38.15, -44.6174, 17.1405, 0.44 ) }
    dend_14 { pt3dadd( -38.1596, -45.3533, 17.3121, 0.74 ) }
    dend_14 { pt3dadd( -38.1378, -45.9533, 17.4727, 0.88 ) }
    dend_14 { pt3dadd( -38.0798, -47.0459, 17.7924, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.82522, -14.7129, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -4.83591, -14.7604, 0.998824, 3.09 ) }
    dend_1 { pt3dadd( -5.13894, -16.1277, 1.00847, 2.8 ) }
    dend_1 { pt3dadd( -5.54155, -17.9568, 1.02778, 2.43 ) }
    dend_1 { pt3dadd( -5.86595, -19.4305, 1.04333, 2.43 ) }
    dend_1 { pt3dadd( -5.88062, -19.4972, 1.04404, 2.43 ) }
    dend_1 { pt3dadd( -6.34502, -21.6069, 1.06631, 2.43 ) }
    dend_1 { pt3dadd( -6.59492, -22.7521, 1.08764, 2.87 ) }
    dend_1 { pt3dadd( -6.79978, -23.689, 1.12385, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.52 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.52 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.52 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 7.2518, 78.0019, -25.1724, 0.29 ) }
    dend_73 { pt3dadd( 8.04026, 79.6965, -25.4496, 0.29 ) }
    dend_73 { pt3dadd( 8.40858, 80.331, -25.5954, 0.29 ) }
    dend_73 { pt3dadd( 8.80172, 80.9877, -25.7705, 0.37 ) }
    dend_73 { pt3dadd( 8.83934, 81.0501, -25.7884, 0.37 ) }
    dend_73 { pt3dadd( 9.11526, 81.5394, -25.9326, 0.37 ) }
    dend_73 { pt3dadd( 9.14093, 81.5869, -25.947, 0.37 ) }
    dend_73 { pt3dadd( 9.48152, 82.3186, -26.2324, 0.22 ) }
    dend_73 { pt3dadd( 9.65659, 82.7379, -26.4315, 0.44 ) }
    dend_73 { pt3dadd( 9.67086, 82.7956, -26.4645, 0.44 ) }
    dend_73 { pt3dadd( 9.75755, 83.278, -26.7455, 0.66 ) }
    dend_73 { pt3dadd( 9.76666, 83.3269, -26.7714, 0.66 ) }
    dend_73 { pt3dadd( 9.91177, 83.9151, -27.0846, 0.96 ) }
    dend_73 { pt3dadd( 9.93268, 83.9798, -27.1363, 0.96 ) }
    dend_73 { pt3dadd( 10.2228, 84.8086, -27.8722, 0.22 ) }
    dend_73 { pt3dadd( 10.2417, 84.8631, -27.922, 0.22 ) }
    dend_73 { pt3dadd( 10.5175, 85.6364, -28.6202, 1.92 ) }
    dend_73 { pt3dadd( 10.8076, 86.3529, -29.263, 2.36 ) }
    dend_73 { pt3dadd( 11.8321, 88.6218, -31.2823, 0.44 ) }
    dend_73 { pt3dadd( 11.9929, 88.9606, -31.5797, 0.44 ) }
    dend_73 { pt3dadd( 12.1118, 89.2, -31.7847, 0.44 ) }
    dend_73 { pt3dadd( 12.3648, 89.7223, -32.2048, 0.22 ) }
    dend_73 { pt3dadd( 12.6788, 90.3933, -32.6958, 0.22 ) }
    dend_73 { pt3dadd( 13.0413, 91.1495, -33.1629, 0.74 ) }
    dend_73 { pt3dadd( 13.0741, 91.2105, -33.1954, 0.74 ) }
    dend_73 { pt3dadd( 13.1717, 91.3862, -33.3047, 0.74 ) }
    dend_73 { pt3dadd( 13.6795, 92.2883, -33.9434, 0.22 ) }
    dend_73 { pt3dadd( 14.0861, 93.0697, -34.5346, 1.33 ) }
    dend_73 { pt3dadd( 14.4011, 93.7427, -35.0448, 1.77 ) }
    dend_73 { pt3dadd( 14.9687, 95.0341, -36.0164, 0.22 ) }
    dend_73 { pt3dadd( 15.2083, 95.582, -36.416, 0.22 ) }
    dend_73 { pt3dadd( 15.5298, 96.3157, -36.9287, 0.22 ) }
    dend_73 { pt3dadd( 15.8996, 97.1452, -37.4838, 1.92 ) }
    dend_73 { pt3dadd( 16.0424, 97.4755, -37.6863, 2.28 ) }
    dend_73 { pt3dadd( 16.924, 99.4841, -38.7609, 0.22 ) }
    dend_73 { pt3dadd( 17.2684, 100.235, -39.113, 0.22 ) }
    dend_73 { pt3dadd( 17.5176, 100.733, -39.3264, 0.88 ) }
    dend_73 { pt3dadd( 17.5848, 100.85, -39.3696, 0.88 ) }
    dend_73 { pt3dadd( 17.663, 100.966, -39.4066, 0.88 ) }
    dend_73 { pt3dadd( 18.4898, 102.031, -39.7389, 0.22 ) }
    dend_73 { pt3dadd( 19.081, 102.709, -39.9487, 0.22 ) }
    dend_73 { pt3dadd( 19.155, 102.798, -39.9797, 0.22 ) }
    dend_73 { pt3dadd( 19.7811, 103.571, -40.2656, 1.33 ) }
    dend_73 { pt3dadd( 20.0358, 103.898, -40.3873, 2.06 ) }
    dend_73 { pt3dadd( 20.4308, 104.429, -40.6025, 2.06 ) }
    dend_73 { pt3dadd( 21.3602, 105.756, -41.1623, 0.15 ) }
    dend_73 { pt3dadd( 21.6069, 106.115, -41.3195, 0.74 ) }
    dend_73 { pt3dadd( 21.6421, 106.166, -41.3411, 0.74 ) }
    dend_73 { pt3dadd( 21.8163, 106.429, -41.4524, 0.74 ) }
    dend_73 { pt3dadd( 22.3709, 107.288, -41.7829, 0.22 ) }
    dend_73 { pt3dadd( 22.6623, 107.743, -41.931, 0.59 ) }
    dend_73 { pt3dadd( 22.6968, 107.796, -41.9466, 0.59 ) }
    dend_73 { pt3dadd( 23.3064, 108.703, -42.2776, 0.15 ) }
    dend_73 { pt3dadd( 23.7923, 109.457, -42.5708, 1.55 ) }
    dend_73 { pt3dadd( 23.9144, 109.654, -42.6503, 1.92 ) }
    dend_73 { pt3dadd( 23.948, 109.709, -42.6711, 1.92 ) }
    dend_73 { pt3dadd( 24.1104, 109.996, -42.7852, 1.92 ) }
    dend_73 { pt3dadd( 24.9647, 111.552, -43.395, 0.22 ) }
    dend_73 { pt3dadd( 25.1979, 111.925, -43.5468, 0.52 ) }
    dend_73 { pt3dadd( 25.2336, 111.976, -43.5675, 0.52 ) }
    dend_73 { pt3dadd( 25.7795, 112.628, -43.8226, 0.22 ) }
    dend_73 { pt3dadd( 26.2602, 113.149, -44.0418, 1.55 ) }
    dend_73 { pt3dadd( 26.6219, 113.438, -44.1885, 1.55 ) }
    dend_73 { pt3dadd( 27.9428, 114.313, -44.6734, 0.15 ) }
    dend_73 { pt3dadd( 27.9894, 114.342, -44.6913, 0.15 ) }
    dend_73 { pt3dadd( 28.9123, 114.878, -45.0502, 0.15 ) }
    dend_73 { pt3dadd( 30.285, 115.617, -45.5863, 2.21 ) }
    dend_73 { pt3dadd( 32.3293, 116.648, -46.3471, 0.22 ) }
    dend_73 { pt3dadd( 32.5576, 116.764, -46.4312, 0.37 ) }
    dend_73 { pt3dadd( 33.4921, 117.266, -46.7483, 0.22 ) }
    dend_73 { pt3dadd( 33.8241, 117.46, -46.8521, 0.59 ) }
    dend_73 { pt3dadd( 34.0458, 117.601, -46.9135, 0.59 ) }
    dend_73 { pt3dadd( 34.7879, 118.129, -47.0936, 0.22 ) }
    dend_73 { pt3dadd( 35.0711, 118.373, -47.1783, 0.66 ) }
    dend_73 { pt3dadd( 35.8549, 119.033, -47.4466, 0.15 ) }
    dend_73 { pt3dadd( 36.424, 119.519, -47.6588, 1.77 ) }
    dend_73 { pt3dadd( 36.5648, 119.641, -47.7195, 1.77 ) }
    dend_73 { pt3dadd( 37.8957, 120.757, -48.3388, 0.22 ) }
    dend_73 { pt3dadd( 38.4177, 121.135, -48.655, 0.74 ) }
    dend_73 { pt3dadd( 38.9936, 121.497, -49.0648, 0.15 ) }
    dend_73 { pt3dadd( 39.3363, 121.689, -49.3535, 0.74 ) }
    dend_73 { pt3dadd( 39.9017, 122.012, -49.8722, 0.15 ) }
    dend_73 { pt3dadd( 40.4143, 122.318, -50.3649, 2.14 ) }
    dend_73 { pt3dadd( 42.0478, 123.413, -52.0656, 0.37 ) }
    dend_73 { pt3dadd( 42.7079, 123.95, -52.8035, 1.55 ) }
    dend_73 { pt3dadd( 43.9209, 125.092, -54.2485, 0.15 ) }
    dend_73 { pt3dadd( 44.4347, 125.662, -54.9036, 0.15 ) }
    dend_73 { pt3dadd( 44.6764, 125.976, -55.2343, 1.4 ) }
    dend_73 { pt3dadd( 45.4486, 127.12, -56.4189, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 45.8327, 127.708, -57.0352, 1.33 ) }
    dend_73 { pt3dadd( 45.9016, 127.794, -57.138, 1.62 ) }
    dend_73 { pt3dadd( 46.933, 128.734, -58.4504, 0.15 ) }
    dend_73 { pt3dadd( 47.6323, 129.212, -59.2518, 1.18 ) }
    dend_73 { pt3dadd( 48.836, 129.859, -60.5094, 0.88 ) }
    dend_73 { pt3dadd( 49.9727, 130.326, -61.553, 0.44 ) }
    dend_73 { pt3dadd( 51.029, 130.703, -62.4227, 1.77 ) }
    dend_73 { pt3dadd( 52.1424, 131.069, -63.1977, 0.22 ) }
    dend_73 { pt3dadd( 52.2065, 131.088, -63.2309, 0.22 ) }
    dend_73 { pt3dadd( 52.6096, 131.216, -63.3685, 0.66 ) }
    dend_73 { pt3dadd( 53.4912, 131.556, -63.4971, 0.15 ) }
    dend_73 { pt3dadd( 54.0979, 131.887, -63.5056, 1.11 ) }
    dend_73 { pt3dadd( 54.4646, 132.16, -63.4983, 1.11 ) }
    dend_73 { pt3dadd( 54.5204, 132.209, -63.4963, 1.11 ) }
    dend_73 { pt3dadd( 55.1477, 132.766, -63.4803, 0.22 ) }
    dend_73 { pt3dadd( 55.4382, 133.016, -63.4778, 0.59 ) }
    dend_73 { pt3dadd( 56.1801, 133.646, -63.4802, 0.22 ) }
    dend_73 { pt3dadd( 56.8301, 134.184, -63.5025, 1.4 ) }
    dend_73 { pt3dadd( 56.8871, 134.231, -63.5043, 1.4 ) }
    dend_73 { pt3dadd( 56.9825, 134.307, -63.5069, 1.55 ) }
    dend_73 { pt3dadd( 58.2002, 135.233, -63.5271, 0.22 ) }
    dend_73 { pt3dadd( 58.2528, 135.27, -63.5291, 0.22 ) }
    dend_73 { pt3dadd( 58.4548, 135.41, -63.5381, 0.22 ) }
    dend_73 { pt3dadd( 58.8839, 135.689, -63.5775, 0.81 ) }
    dend_73 { pt3dadd( 58.9374, 135.724, -63.5844, 0.81 ) }
    dend_73 { pt3dadd( 59.2014, 135.911, -63.6356, 0.81 ) }
    dend_73 { pt3dadd( 60.4661, 136.834, -63.9288, 0.22 ) }
    dend_73 { pt3dadd( 60.8997, 137.146, -64.0334, 0.22 ) }
    dend_73 { pt3dadd( 61.8541, 137.818, -64.2688, 1.55 ) }
    dend_73 { pt3dadd( 61.9048, 137.855, -64.2835, 1.55 ) }
    dend_73 { pt3dadd( 63.1555, 138.801, -64.6759, 0.22 ) }
    dend_73 { pt3dadd( 63.6325, 139.166, -64.8368, 0.22 ) }
    dend_73 { pt3dadd( 64.466, 139.809, -65.126, 1.62 ) }
    dend_73 { pt3dadd( 64.6241, 139.931, -65.1783, 1.99 ) }
    dend_73 { pt3dadd( 66.2552, 141.214, -65.6853, 0.22 ) }
    dend_73 { pt3dadd( 66.3119, 141.258, -65.7026, 0.22 ) }
    dend_73 { pt3dadd( 66.9254, 141.733, -65.8833, 0.74 ) }
    dend_73 { pt3dadd( 67.2979, 142.026, -65.9959, 0.74 ) }
    dend_73 { pt3dadd( 69.1465, 143.481, -66.5384, 0.15 ) }
    dend_73 { pt3dadd( 69.8313, 144.011, -66.7245, 1.55 ) }
    dend_73 { pt3dadd( 69.8845, 144.05, -66.7356, 1.55 ) }
    dend_73 { pt3dadd( 70.1857, 144.273, -66.7991, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 7.2518, 78.0019, -25.1724, 0.29 ) }
    dend_72 { pt3dadd( 6.7744, 79.9635, -25.4826, 0.29 ) }
    dend_72 { pt3dadd( 6.66616, 80.4367, -25.5593, 0.44 ) }
    dend_72 { pt3dadd( 6.44059, 81.3981, -25.7074, 0.22 ) }
    dend_72 { pt3dadd( 6.1435, 82.6693, -25.8971, 1.55 ) }
    dend_72 { pt3dadd( 6.04871, 83.0812, -25.9545, 2.21 ) }
    dend_72 { pt3dadd( 5.91133, 83.6824, -26.033, 1.84 ) }
    dend_72 { pt3dadd( 5.76187, 84.4454, -26.1219, 0.96 ) }
    dend_72 { pt3dadd( 5.66227, 84.9385, -26.166, 0.44 ) }
    dend_72 { pt3dadd( 5.64584, 85.013, -26.1697, 0.44 ) }
    dend_72 { pt3dadd( 5.4492, 85.9773, -26.209, 0.29 ) }
    dend_72 { pt3dadd( 5.42783, 86.1144, -26.2134, 0.29 ) }
    dend_72 { pt3dadd( 5.34866, 86.8155, -26.2325, 0.29 ) }
    dend_72 { pt3dadd( 5.28655, 87.509, -26.2511, 0.81 ) }
    dend_72 { pt3dadd( 5.26363, 87.8541, -26.2732, 1.11 ) }
    dend_72 { pt3dadd( 5.21345, 88.5509, -26.3468, 0.88 ) }
    dend_72 { pt3dadd( 5.13, 89.9747, -26.5324, 0.22 ) }
    dend_72 { pt3dadd( 5.09719, 90.6705, -26.6432, 0.81 ) }
    dend_72 { pt3dadd( 5.07731, 91.222, -26.7474, 0.81 ) }
    dend_72 { pt3dadd( 5.01917, 92.8751, -27.0899, 0.22 ) }
    dend_72 { pt3dadd( 4.96928, 94.0883, -27.358, 1.84 ) }
    dend_72 { pt3dadd( 4.93505, 94.7213, -27.5064, 2.21 ) }
    dend_72 { pt3dadd( 4.8956, 95.2728, -27.6413, 2.21 ) }
    dend_72 { pt3dadd( 4.75599, 97.3869, -28.1227, 0.22 ) }
    dend_72 { pt3dadd( 4.71531, 98.1238, -28.2743, 0.81 ) }
    dend_72 { pt3dadd( 4.69898, 98.4727, -28.3342, 0.88 ) }
    dend_72 { pt3dadd( 4.68122, 98.8263, -28.3859, 0.66 ) }
    dend_72 { pt3dadd( 4.60766, 99.8761, -28.5243, 0.22 ) }
    dend_72 { pt3dadd( 4.49045, 101.342, -28.6858, 1.84 ) }
    dend_72 { pt3dadd( 4.46223, 101.79, -28.7261, 2.21 ) }
    dend_72 { pt3dadd( 4.44258, 102.24, -28.7616, 2.21 ) }
    dend_72 { pt3dadd( 4.38896, 104.189, -28.8962, 0.22 ) }
    dend_72 { pt3dadd( 4.37939, 104.884, -28.9416, 0.88 ) }
    dend_72 { pt3dadd( 4.37757, 105.096, -28.9545, 0.88 ) }
    dend_72 { pt3dadd( 4.3681, 106.531, -29.0435, 0.22 ) }
    dend_72 { pt3dadd( 4.37268, 107.799, -29.1536, 0.22 ) }
    dend_72 { pt3dadd( 4.38821, 108.466, -29.2218, 1.33 ) }
    dend_72 { pt3dadd( 4.41654, 108.992, -29.2819, 1.62 ) }
    dend_72 { pt3dadd( 4.42787, 109.194, -29.3081, 1.62 ) }
    dend_72 { pt3dadd( 4.43035, 109.308, -29.3283, 1.62 ) }
    dend_72 { pt3dadd( 4.39772, 111.159, -29.7195, 0.22 ) }
    dend_72 { pt3dadd( 4.34895, 112.516, -30.0304, 0.22 ) }
    dend_72 { pt3dadd( 4.29851, 113.448, -30.249, 1.4 ) }
    dend_72 { pt3dadd( 4.27011, 113.937, -30.3607, 1.69 ) }
    dend_72 { pt3dadd( 4.14206, 116.008, -30.8283, 0.22 ) }
    dend_72 { pt3dadd( 4.08728, 116.706, -30.9687, 0.96 ) }
    dend_72 { pt3dadd( 4.08011, 116.772, -30.979, 0.96 ) }
    dend_72 { pt3dadd( 4.04014, 117.057, -31.0172, 0.81 ) }
    dend_72 { pt3dadd( 3.82487, 118.377, -31.1404, 0.22 ) }
    dend_72 { pt3dadd( 3.7996, 118.535, -31.1479, 0.22 ) }
    dend_72 { pt3dadd( 3.66403, 119.456, -31.1592, 0.22 ) }
    dend_72 { pt3dadd( 3.50508, 120.548, -31.1839, 1.69 ) }
    dend_72 { pt3dadd( 3.45394, 120.906, -31.1952, 2.43 ) }
    dend_72 { pt3dadd( 3.34558, 121.661, -31.2244, 2.36 ) }
    dend_72 { pt3dadd( 3.02022, 124.091, -31.3302, 0.22 ) }
    dend_72 { pt3dadd( 2.92665, 125.024, -31.392, 0.22 ) }
    dend_72 { pt3dadd( 2.91689, 125.168, -31.4053, 0.22 ) }
    dend_72 { pt3dadd( 2.86708, 126.358, -31.5257, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( 2.84711, 127.259, -31.6251, 1.11 ) }
    dend_72 { pt3dadd( 2.85194, 127.803, -31.6894, 1.4 ) }
    dend_72 { pt3dadd( 2.91764, 129.35, -31.8868, 0.22 ) }
    dend_72 { pt3dadd( 2.92099, 129.41, -31.8943, 0.22 ) }
    dend_72 { pt3dadd( 2.95136, 129.821, -31.9365, 0.22 ) }
    dend_72 { pt3dadd( 3.01409, 130.68, -32.0002, 1.55 ) }
    dend_72 { pt3dadd( 3.03801, 131.123, -32.0198, 1.77 ) }
    dend_72 { pt3dadd( 3.04108, 131.19, -32.0208, 1.77 ) }
    dend_72 { pt3dadd( 3.05623, 131.493, -32.0165, 1.77 ) }
    dend_72 { pt3dadd( 3.12906, 132.798, -31.9987, 0.22 ) }
    dend_72 { pt3dadd( 3.16646, 133.698, -31.9884, 0.66 ) }
    dend_72 { pt3dadd( 3.17574, 134.183, -31.9839, 0.66 ) }
    dend_72 { pt3dadd( 3.16533, 135.776, -31.9844, 0.22 ) }
    dend_72 { pt3dadd( 3.16074, 135.921, -31.9849, 0.22 ) }
    dend_72 { pt3dadd( 3.0801, 137.453, -31.9878, 0.22 ) }
    dend_72 { pt3dadd( 2.98603, 138.497, -31.9767, 1.11 ) }
    dend_72 { pt3dadd( 2.90775, 139.121, -31.9557, 1.99 ) }
    dend_72 { pt3dadd( 2.81434, 139.653, -31.9273, 1.55 ) }
    dend_72 { pt3dadd( 2.50278, 140.956, -31.8259, 0.22 ) }
    dend_72 { pt3dadd( 2.45642, 141.129, -31.8101, 0.22 ) }
    dend_72 { pt3dadd( 2.12582, 142.186, -31.69, 0.22 ) }
    dend_72 { pt3dadd( 1.94412, 142.793, -31.6051, 0.88 ) }
    dend_72 { pt3dadd( 1.8902, 142.984, -31.578, 1.18 ) }
    dend_72 { pt3dadd( 1.87486, 143.047, -31.564, 1.18 ) }
    dend_72 { pt3dadd( 1.76838, 143.647, -31.4165, 0.66 ) }
    dend_72 { pt3dadd( 1.71782, 143.985, -31.335, 0.37 ) }
    dend_72 { pt3dadd( 1.57654, 144.866, -31.1354, 0.22 ) }
    dend_72 { pt3dadd( 1.45188, 145.514, -30.9946, 0.59 ) }
    dend_72 { pt3dadd( 1.2211, 146.673, -30.8281, 0.52 ) }
    dend_72 { pt3dadd( 1.08683, 147.32, -30.7609, 0.66 ) }
    dend_72 { pt3dadd( 0.986308, 147.811, -30.7234, 0.22 ) }
    dend_72 { pt3dadd( 0.830826, 148.558, -30.691, 1.47 ) }
    dend_72 { pt3dadd( 0.756222, 148.917, -30.6913, 2.14 ) }
    dend_72 { pt3dadd( 0.328691, 151.09, -30.756, 0.22 ) }
    dend_72 { pt3dadd( 0.318169, 151.149, -30.7599, 0.22 ) }
    dend_72 { pt3dadd( 0.22678, 151.832, -30.7886, 1.11 ) }
    dend_72 { pt3dadd( 0.216079, 151.977, -30.794, 1.47 ) }
    dend_72 { pt3dadd( 0.212524, 152.079, -30.797, 1.47 ) }
    dend_72 { pt3dadd( 0.191706, 152.71, -30.8227, 0.81 ) }
    dend_72 { pt3dadd( 0.171271, 153.232, -30.858, 0.29 ) }
    dend_72 { pt3dadd( 0.113227, 154.778, -30.9937, 0.22 ) }
    dend_72 { pt3dadd( 0.0826938, 155.493, -31.0709, 0.96 ) }
    dend_72 { pt3dadd( 0.0776906, 155.628, -31.0859, 0.96 ) }
    dend_72 { pt3dadd( 0.0728315, 155.772, -31.1005, 0.96 ) }
    dend_72 { pt3dadd( 0.0509009, 156.891, -31.1958, 0.22 ) }
    dend_72 { pt3dadd( 0.0506952, 156.958, -31.2001, 0.22 ) }
    dend_72 { pt3dadd( 0.0626022, 157.644, -31.2285, 0.81 ) }
    dend_72 { pt3dadd( 0.0690751, 157.992, -31.2395, 0.81 ) }
    dend_72 { pt3dadd( 0.0888921, 159.617, -31.273, 0.15 ) }
    dend_72 { pt3dadd( 0.0853113, 160.718, -31.3034, 1.18 ) }
    dend_72 { pt3dadd( 0.0806311, 161.026, -31.3123, 1.47 ) }
    dend_72 { pt3dadd( 0.0807674, 161.083, -31.3177, 1.47 ) }
    dend_72 { pt3dadd( 0.0877018, 161.36, -31.3639, 1.47 ) }
    dend_72 { pt3dadd( 0.137346, 162.867, -31.7015, 0.22 ) }
    dend_72 { pt3dadd( 0.180567, 163.711, -31.9393, 1.11 ) }
    dend_72 { pt3dadd( 0.202034, 164.068, -32.0522, 1.47 ) }
    dend_72 { pt3dadd( 0.369168, 166.028, -32.7655, 0.15 ) }
    dend_72 { pt3dadd( 0.452117, 166.793, -33.0681, 0.81 ) }
    dend_72 { pt3dadd( 0.460449, 166.854, -33.094, 0.81 ) }
    dend_72 { pt3dadd( 0.519691, 167.203, -33.2561, 0.81 ) }
    dend_72 { pt3dadd( 0.528917, 167.254, -33.2783, 0.81 ) }
    dend_72 { pt3dadd( 0.692085, 168.469, -33.7559, 0.22 ) }
    dend_72 { pt3dadd( 0.724336, 168.874, -33.8852, 0.37 ) }
    dend_72 { pt3dadd( 0.754649, 169.498, -34.0649, 0.22 ) }
    dend_72 { pt3dadd( 0.773063, 170.269, -34.2708, 1.18 ) }
    dend_72 { pt3dadd( 0.771667, 170.729, -34.3857, 1.47 ) }
    dend_72 { pt3dadd( 0.734495, 172.473, -34.793, 0.22 ) }
    dend_72 { pt3dadd( 0.702459, 173.243, -34.9517, 1.03 ) }
    dend_72 { pt3dadd( 0.690427, 173.509, -35.0064, 1.03 ) }
    dend_72 { pt3dadd( 0.627136, 175.213, -35.3709, 0.22 ) }
    dend_72 { pt3dadd( 0.608272, 175.829, -35.5006, 0.22 ) }
    dend_72 { pt3dadd( 0.60684, 175.894, -35.5141, 0.22 ) }
    dend_72 { pt3dadd( 0.6023, 176.674, -35.6359, 0.81 ) }
    dend_72 { pt3dadd( 0.604108, 177.156, -35.6979, 0.81 ) }
    dend_72 { pt3dadd( 0.601869, 178.587, -35.8401, 0.22 ) }
    dend_72 { pt3dadd( 0.58536, 179.567, -35.8757, 1.11 ) }
    dend_72 { pt3dadd( 0.578732, 179.777, -35.8756, 1.11 ) }
    dend_72 { pt3dadd( 0.48618, 181.539, -35.8035, 0.22 ) }
    dend_72 { pt3dadd( 0.430171, 182.316, -35.7458, 0.59 ) }
    dend_72 { pt3dadd( 0.313953, 183.569, -35.615, 0.22 ) }
    dend_72 { pt3dadd( 0.185687, 184.63, -35.4683, 1.18 ) }
    dend_72 { pt3dadd( 0.133023, 185.039, -35.4088, 1.62 ) }
    dend_72 { pt3dadd( -0.0890138, 186.588, -35.1637, 0.22 ) }
    dend_72 { pt3dadd( -0.17004, 187.068, -35.0832, 0.22 ) }
    dend_72 { pt3dadd( -0.268151, 187.6, -34.9869, 0.59 ) }
    dend_72 { pt3dadd( -0.319236, 187.87, -34.9369, 0.59 ) }
    dend_72 { pt3dadd( -0.333933, 187.946, -34.9248, 0.59 ) }
    dend_72 { pt3dadd( -0.506034, 188.79, -34.7774, 0.22 ) }
    dend_72 { pt3dadd( -0.601493, 189.252, -34.6806, 0.52 ) }
    dend_72 { pt3dadd( -0.626911, 189.391, -34.6476, 0.52 ) }
    dend_72 { pt3dadd( -0.636595, 189.455, -34.6309, 0.52 ) }
    dend_72 { pt3dadd( -0.73648, 190.599, -34.3779, 0.22 ) }
    dend_72 { pt3dadd( -0.77836, 191.481, -34.2157, 1.11 ) }
    dend_72 { pt3dadd( -0.765279, 191.899, -34.1594, 1.47 ) }
    dend_72 { pt3dadd( -0.754243, 192.033, -34.1419, 1.47 ) }
    dend_72 { pt3dadd( -0.701919, 192.503, -34.086, 1.47 ) }
    dend_72 { pt3dadd( -0.495311, 193.966, -33.9292, 0.22 ) }
    dend_72 { pt3dadd( -0.485337, 194.022, -33.9246, 0.22 ) }
    dend_72 { pt3dadd( -0.292071, 195.112, -33.8502, 0.22 ) }
    dend_72 { pt3dadd( -0.144468, 196.043, -33.8009, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( -0.0853078, 196.47, -33.7718, 1.55 ) }
    dend_72 { pt3dadd( -0.032266, 196.884, -33.7392, 1.55 ) }
    dend_72 { pt3dadd( 0.159417, 198.322, -33.601, 0.22 ) }
    dend_72 { pt3dadd( 0.232171, 198.864, -33.5442, 0.74 ) }
    dend_72 { pt3dadd( 0.258367, 199.074, -33.5182, 0.74 ) }
    dend_72 { pt3dadd( 0.491093, 200.89, -33.2749, 0.22 ) }
    dend_72 { pt3dadd( 0.558733, 201.411, -33.1976, 0.74 ) }
    dend_72 { pt3dadd( 0.743551, 202.965, -32.8947, 0.22 ) }
    dend_72 { pt3dadd( 0.762769, 203.129, -32.8552, 0.22 ) }
    dend_72 { pt3dadd( 0.873536, 204.033, -32.6252, 0.74 ) }
    dend_72 { pt3dadd( 0.885669, 204.139, -32.5965, 0.74 ) }
    dend_72 { pt3dadd( 0.942386, 204.699, -32.4361, 1.03 ) }
    dend_72 { pt3dadd( 1.12066, 206.608, -31.8983, 0.15 ) }
    dend_72 { pt3dadd( 1.12569, 206.674, -31.8811, 0.15 ) }
    dend_72 { pt3dadd( 1.2175, 207.845, -31.6216, 0.15 ) }
    dend_72 { pt3dadd( 1.26418, 208.416, -31.5129, 1.03 ) }
    dend_72 { pt3dadd( 1.28964, 208.727, -31.4686, 1.03 ) }
    dend_72 { pt3dadd( 1.34967, 209.659, -31.3922, 0.15 ) }
    dend_72 { pt3dadd( 1.38648, 210.417, -31.3916, 1.11 ) }
    dend_72 { pt3dadd( 1.39538, 210.787, -31.3986, 1.4 ) }
    dend_72 { pt3dadd( 1.39485, 210.845, -31.4013, 1.4 ) }
    dend_72 { pt3dadd( 1.34913, 212.212, -31.5079, 0.22 ) }
    dend_72 { pt3dadd( 1.29792, 212.919, -31.57, 0.59 ) }
    dend_72 { pt3dadd( 1.29118, 212.978, -31.5758, 0.59 ) }
    dend_72 { pt3dadd( 1.25963, 213.185, -31.5946, 0.59 ) }
    dend_72 { pt3dadd( 1.11673, 214.024, -31.6725, 0.22 ) }
    dend_72 { pt3dadd( 1.00469, 214.631, -31.7304, 1.18 ) }
    dend_72 { pt3dadd( 0.872211, 215.241, -31.7928, 1.84 ) }
    dend_72 { pt3dadd( 0.791194, 215.586, -31.8331, 1.47 ) }
    dend_72 { pt3dadd( 0.322343, 217.314, -32.0548, 0.22 ) }
    dend_72 { pt3dadd( 0.121667, 217.963, -32.1472, 0.22 ) }
    dend_72 { pt3dadd( 0.102338, 218.016, -32.1556, 0.22 ) }
    dend_72 { pt3dadd( -0.157395, 218.626, -32.2786, 0.81 ) }
    dend_72 { pt3dadd( -0.358624, 219.076, -32.3818, 1.62 ) }
    dend_72 { pt3dadd( -0.612576, 219.614, -32.5171, 2.28 ) }
    dend_72 { pt3dadd( -0.708052, 219.816, -32.5702, 2.5 ) }
    dend_72 { pt3dadd( -0.97556, 220.423, -32.7177, 2.14 ) }
    dend_72 { pt3dadd( -1.64551, 222.102, -33.1007, 0.22 ) }
    dend_72 { pt3dadd( -1.84379, 222.67, -33.2234, 0.59 ) }
    dend_72 { pt3dadd( -1.86435, 222.744, -33.2374, 0.59 ) }
    dend_72 { pt3dadd( -2.02507, 223.47, -33.3538, 0.22 ) }
    dend_72 { pt3dadd( -2.12198, 224.019, -33.4177, 0.81 ) }
    dend_72 { pt3dadd( -2.13422, 224.108, -33.4245, 0.81 ) }
    dend_72 { pt3dadd( -2.17838, 224.458, -33.4336, 0.81 ) }
    dend_72 { pt3dadd( -2.33879, 225.532, -33.4541, 0.22 ) }
    dend_72 { pt3dadd( -2.43568, 226.152, -33.4644, 0.44 ) }
    dend_72 { pt3dadd( -2.68916, 227.648, -33.4828, 0.15 ) }
    dend_72 { pt3dadd( -2.7824, 228.2, -33.4855, 0.15 ) }
    dend_72 { pt3dadd( -2.86313, 228.653, -33.4865, 0.59 ) }
    dend_72 { pt3dadd( -2.91709, 228.937, -33.4851, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.51498, 39.4811, -7.15377, 1.55 ) }
    dend_27 { pt3dadd( -8.11451, 41.3457, -8.77659, 1.55 ) }
    dend_27 { pt3dadd( -8.09404, 41.4373, -8.84711, 1.55 ) }
    dend_27 { pt3dadd( -7.80271, 42.6753, -9.64246, 1.47 ) }
    dend_27 { pt3dadd( -7.78824, 42.7348, -9.67413, 1.47 ) }
    dend_27 { pt3dadd( -7.58135, 43.5679, -10.0736, 1.25 ) }
    dend_27 { pt3dadd( -7.24125, 44.9481, -10.6385, 1.25 ) }
    dend_27 { pt3dadd( -7.20178, 45.1126, -10.6768, 1.25 ) }
    dend_27 { pt3dadd( -6.94275, 46.1379, -10.8673, 0.81 ) }
    dend_27 { pt3dadd( -6.6508, 47.298, -11.0211, 1.18 ) }
    dend_27 { pt3dadd( -6.62396, 47.4101, -11.0336, 1.18 ) }
    dend_27 { pt3dadd( -6.32449, 48.7678, -11.1573, 1.84 ) }
    dend_27 { pt3dadd( -6.1269, 49.792, -11.2339, 2.14 ) }
    dend_27 { pt3dadd( -5.95383, 50.8228, -11.3117, 2.14 ) }
    dend_27 { pt3dadd( -5.80812, 52.0057, -11.4141, 2.14 ) }
    dend_27 { pt3dadd( -5.80434, 52.0652, -11.4194, 2.14 ) }
    dend_27 { pt3dadd( -5.79793, 52.7564, -11.4916, 1.77 ) }
    dend_27 { pt3dadd( -5.85604, 54.0378, -11.6454, 1.77 ) }
    dend_27 { pt3dadd( -5.95974, 54.9124, -11.7547, 1.47 ) }
    dend_27 { pt3dadd( -6.17904, 56.015, -11.8851, 1.25 ) }
    dend_27 { pt3dadd( -6.49012, 57.1408, -12.0325, 1.62 ) }
    dend_27 { pt3dadd( -6.76434, 57.9523, -12.1483, 1.84 ) }
    dend_27 { pt3dadd( -6.79109, 58.0184, -12.1587, 1.84 ) }
    dend_27 { pt3dadd( -7.25253, 58.9692, -12.3454, 1.99 ) }
    dend_27 { pt3dadd( -7.78425, 60.0316, -12.572, 1.69 ) }
    dend_27 { pt3dadd( -8.24373, 61.0384, -12.7856, 1.47 ) }
    dend_27 { pt3dadd( -8.49517, 61.7614, -12.9738, 1.33 ) }
    dend_27 { pt3dadd( -8.50877, 61.8171, -12.9898, 1.33 ) }
    dend_27 { pt3dadd( -8.61148, 62.8021, -13.3092, 1.11 ) }
    dend_27 { pt3dadd( -8.53339, 63.8129, -13.693, 0.88 ) }
    dend_27 { pt3dadd( -8.31366, 64.6363, -14.0347, 0.96 ) }
    dend_27 { pt3dadd( -7.84571, 65.8747, -14.5254, 0.81 ) }
    dend_27 { pt3dadd( -7.80874, 65.969, -14.5592, 0.81 ) }
    dend_27 { pt3dadd( -7.59722, 66.5592, -14.7498, 0.66 ) }
    dend_27 { pt3dadd( -7.54475, 66.723, -14.7965, 0.66 ) }
    dend_27 { pt3dadd( -7.41717, 67.6852, -15.0269, 0.66 ) }
    dend_27 { pt3dadd( -7.46187, 68.4741, -15.1601, 0.96 ) }
    dend_27 { pt3dadd( -7.65274, 69.3311, -15.2449, 1.69 ) }
    dend_27 { pt3dadd( -7.76982, 69.7201, -15.2793, 1.99 ) }
    dend_27 { pt3dadd( -7.92484, 70.1172, -15.318, 1.99 ) }
    dend_27 { pt3dadd( -8.31237, 71.0052, -15.4152, 1.84 ) }
    dend_27 { pt3dadd( -8.34309, 71.0675, -15.4227, 1.84 ) }
    dend_27 { pt3dadd( -8.88733, 72.143, -15.5802, 2.06 ) }
    dend_27 { pt3dadd( -9.07137, 72.528, -15.6422, 2.21 ) }
    dend_27 { pt3dadd( -9.36476, 73.2101, -15.7508, 2.14 ) }
    dend_27 { pt3dadd( -9.76432, 74.2272, -15.9059, 1.18 ) }
    dend_27 { pt3dadd( -10.1885, 75.4247, -16.0755, 1.03 ) }
    dend_27 { pt3dadd( -10.4833, 76.3286, -16.187, 1.03 ) }
    dend_27 { pt3dadd( -10.734, 77.17, -16.2755, 1.33 ) }
    dend_27 { pt3dadd( -10.9997, 78.1548, -16.3614, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -11.1628, 78.8751, -16.405, 2.65 ) }
    dend_27 { pt3dadd( -11.3094, 79.6603, -16.4493, 2.65 ) }
    dend_27 { pt3dadd( -11.4457, 80.6047, -16.5078, 2.65 ) }
    dend_27 { pt3dadd( -11.4604, 80.7367, -16.5154, 2.65 ) }
    dend_27 { pt3dadd( -11.5174, 81.3926, -16.5541, 2.36 ) }
    dend_27 { pt3dadd( -11.5425, 82.1518, -16.6075, 2.06 ) }
    dend_27 { pt3dadd( -11.5442, 83.1246, -16.6823, 1.4 ) }
    dend_27 { pt3dadd( -11.5165, 84.1739, -16.7651, 0.81 ) }
    dend_27 { pt3dadd( -11.4123, 85.8718, -16.8945, 0.66 ) }
    dend_27 { pt3dadd( -11.2752, 87.291, -16.9898, 0.66 ) }
    dend_27 { pt3dadd( -11.0731, 88.8228, -17.0788, 1.11 ) }
    dend_27 { pt3dadd( -11.0613, 88.8943, -17.0828, 1.11 ) }
    dend_27 { pt3dadd( -10.8713, 89.8312, -17.1281, 1.55 ) }
    dend_27 { pt3dadd( -10.6131, 90.9144, -17.1776, 1.84 ) }
    dend_27 { pt3dadd( -10.2897, 92.1438, -17.2374, 2.28 ) }
    dend_27 { pt3dadd( -10.1381, 92.7148, -17.2646, 2.58 ) }
    dend_27 { pt3dadd( -9.95541, 93.4485, -17.315, 2.58 ) }
    dend_27 { pt3dadd( -9.83677, 93.9817, -17.3645, 2.58 ) }
    dend_27 { pt3dadd( -9.69081, 94.846, -17.4789, 2.36 ) }
    dend_27 { pt3dadd( -9.60976, 95.5913, -17.6097, 1.92 ) }
    dend_27 { pt3dadd( -9.60527, 95.6718, -17.6257, 1.92 ) }
    dend_27 { pt3dadd( -9.56494, 96.8598, -17.86, 0.88 ) }
    dend_27 { pt3dadd( -9.54908, 98.0185, -18.0742, 0.66 ) }
    dend_27 { pt3dadd( -9.54486, 99.2201, -18.3033, 0.66 ) }
    dend_27 { pt3dadd( -9.5426, 99.9968, -18.4631, 0.81 ) }
    dend_27 { pt3dadd( -9.52447, 100.848, -18.6472, 0.74 ) }
    dend_27 { pt3dadd( -9.49237, 101.708, -18.8374, 0.59 ) }
    dend_27 { pt3dadd( -9.45589, 102.57, -19.0186, 1.25 ) }
    dend_27 { pt3dadd( -9.39759, 103.391, -19.2033, 1.84 ) }
    dend_27 { pt3dadd( -9.27206, 104.543, -19.4619, 2.5 ) }
    dend_27 { pt3dadd( -9.17764, 105.234, -19.6261, 2.65 ) }
    dend_27 { pt3dadd( -9.15861, 105.347, -19.659, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.51498, 39.4811, -7.15377, 0.52 ) }
    dend_26 { pt3dadd( -8.05409, 41.1362, -7.26767, 0.52 ) }
    dend_26 { pt3dadd( -8.03594, 41.218, -7.27026, 0.52 ) }
    dend_26 { pt3dadd( -7.94968, 42.028, -7.26183, 0.52 ) }
    dend_26 { pt3dadd( -7.97318, 43.5478, -7.19623, 0.52 ) }
    dend_26 { pt3dadd( -7.9802, 43.6304, -7.19137, 0.52 ) }
    dend_26 { pt3dadd( -8.04321, 44.0055, -7.16369, 0.66 ) }
    dend_26 { pt3dadd( -8.09052, 44.1189, -7.13426, 0.66 ) }
    dend_26 { pt3dadd( -8.43768, 44.7422, -6.95732, 0.52 ) }
    dend_26 { pt3dadd( -8.75441, 45.1959, -6.81169, 0.66 ) }
    dend_26 { pt3dadd( -8.80933, 45.2694, -6.78453, 0.66 ) }
    dend_26 { pt3dadd( -9.13935, 45.7309, -6.59224, 0.59 ) }
    dend_26 { pt3dadd( -9.63765, 46.4538, -6.26762, 0.29 ) }
    dend_26 { pt3dadd( -10.0406, 47.0871, -5.96074, 0.29 ) }
    dend_26 { pt3dadd( -10.1104, 47.2053, -5.89791, 0.29 ) }
    dend_26 { pt3dadd( -10.5494, 48.0119, -5.4484, 0.59 ) }
    dend_26 { pt3dadd( -10.8474, 48.5582, -5.15476, 0.81 ) }
    dend_26 { pt3dadd( -10.8865, 48.6249, -5.1206, 0.81 ) }
    dend_26 { pt3dadd( -11.1809, 49.0537, -4.92074, 0.81 ) }
    dend_26 { pt3dadd( -11.2237, 49.1029, -4.89732, 0.81 ) }
    dend_26 { pt3dadd( -11.6708, 49.5299, -4.69353, 0.81 ) }
    dend_26 { pt3dadd( -12.4616, 50.2622, -4.36806, 0.37 ) }
    dend_26 { pt3dadd( -12.9888, 50.8123, -4.10098, 0.37 ) }
    dend_26 { pt3dadd( -13.3983, 51.2923, -3.84869, 0.59 ) }
    dend_26 { pt3dadd( -13.7246, 51.7333, -3.60073, 0.81 ) }
    dend_26 { pt3dadd( -14.2242, 52.4983, -3.13552, 0.29 ) }
    dend_26 { pt3dadd( -14.686, 53.2863, -2.6304, 0.52 ) }
    dend_26 { pt3dadd( -15.1571, 54.2112, -2.01231, 1.33 ) }
    dend_26 { pt3dadd( -15.3553, 54.6458, -1.71713, 1.55 ) }
    dend_26 { pt3dadd( -15.9109, 55.965, -0.810208, 0.29 ) }
    dend_26 { pt3dadd( -16.3477, 57.0118, -0.0908033, 1.55 ) }
    dend_26 { pt3dadd( -16.4615, 57.2488, 0.0615093, 1.84 ) }
    dend_26 { pt3dadd( -16.5316, 57.3583, 0.12217, 1.84 ) }
    dend_26 { pt3dadd( -16.7608, 57.645, 0.225569, 1.84 ) }
    dend_26 { pt3dadd( -16.8061, 57.6972, 0.234024, 1.84 ) }
    dend_26 { pt3dadd( -17.1753, 58.0909, 0.213701, 1.62 ) }
    dend_26 { pt3dadd( -17.946, 58.8688, 0.0782836, 0.37 ) }
    dend_26 { pt3dadd( -18.594, 59.533, -0.0863724, 0.29 ) }
    dend_26 { pt3dadd( -19.0895, 60.0785, -0.267401, 0.59 ) }
    dend_26 { pt3dadd( -19.4131, 60.4448, -0.422237, 0.59 ) }
    dend_26 { pt3dadd( -19.642, 60.7087, -0.544847, 0.59 ) }
    dend_26 { pt3dadd( -19.947, 61.0733, -0.73077, 0.52 ) }
    dend_26 { pt3dadd( -20.5112, 61.8544, -1.11127, 0.29 ) }
    dend_26 { pt3dadd( -20.8893, 62.4429, -1.40529, 0.74 ) }
    dend_26 { pt3dadd( -21.3272, 63.1458, -1.72454, 0.66 ) }
    dend_26 { pt3dadd( -21.5663, 63.531, -1.87909, 0.88 ) }
    dend_26 { pt3dadd( -21.9847, 64.2066, -2.11323, 0.66 ) }
    dend_26 { pt3dadd( -23.1107, 65.9877, -2.61728, 2.14 ) }
    dend_26 { pt3dadd( -23.5421, 66.6391, -2.75901, 2.14 ) }
    dend_26 { pt3dadd( -24.4375, 67.9462, -2.97993, 0.22 ) }
    dend_26 { pt3dadd( -24.9149, 68.6353, -3.06239, 0.22 ) }
    dend_26 { pt3dadd( -25.4201, 69.3623, -3.12213, 0.22 ) }
    dend_26 { pt3dadd( -25.9107, 70.0519, -3.11328, 0.88 ) }
    dend_26 { pt3dadd( -26.1644, 70.3943, -3.07029, 1.03 ) }
    dend_26 { pt3dadd( -26.4757, 70.8065, -2.98074, 0.74 ) }
    dend_26 { pt3dadd( -27.2178, 71.8074, -2.71042, 0.22 ) }
    dend_26 { pt3dadd( -27.6605, 72.4069, -2.51777, 0.22 ) }
    dend_26 { pt3dadd( -28.2518, 73.2164, -2.26094, 0.22 ) }
    dend_26 { pt3dadd( -28.3309, 73.3262, -2.22721, 0.22 ) }
    dend_26 { pt3dadd( -28.8902, 74.1377, -1.99538, 0.22 ) }
    dend_26 { pt3dadd( -29.7243, 75.3274, -1.67518, 1.69 ) }
    dend_26 { pt3dadd( -30.0055, 75.7633, -1.5856, 2.21 ) }
    dend_26 { pt3dadd( -30.4664, 76.509, -1.47123, 2.21 ) }
    dend_26 { pt3dadd( -30.4994, 76.5706, -1.46365, 2.21 ) }
    dend_26 { pt3dadd( -31.1329, 77.958, -1.29662, 0.22 ) }
    dend_26 { pt3dadd( -31.4854, 78.8764, -1.18733, 0.22 ) }
    dend_26 { pt3dadd( -32.0136, 80.4243, -0.940057, 0.22 ) }
    dend_26 { pt3dadd( -32.0517, 80.5416, -0.918336, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -32.4087, 81.6454, -0.66852, 1.11 ) }
    dend_26 { pt3dadd( -32.6722, 82.4571, -0.491265, 1.11 ) }
    dend_26 { pt3dadd( -32.9011, 83.1835, -0.316459, 0.59 ) }
    dend_26 { pt3dadd( -33.3338, 84.5555, 0.0359457, 1.69 ) }
    dend_26 { pt3dadd( -33.4536, 84.9094, 0.131276, 1.77 ) }
    dend_26 { pt3dadd( -34.252, 87.1799, 0.707413, 0.22 ) }
    dend_26 { pt3dadd( -34.9124, 89.0047, 1.18663, 0.22 ) }
    dend_26 { pt3dadd( -35.1581, 89.6978, 1.38441, 1.03 ) }
    dend_26 { pt3dadd( -35.3402, 90.222, 1.54108, 1.03 ) }
    dend_26 { pt3dadd( -35.5023, 90.6901, 1.68495, 0.81 ) }
    dend_26 { pt3dadd( -35.9772, 91.9346, 2.15976, 0.22 ) }
    dend_26 { pt3dadd( -36.5659, 93.3025, 2.78434, 1.11 ) }
    dend_26 { pt3dadd( -36.6887, 93.5506, 2.90816, 1.62 ) }
    dend_26 { pt3dadd( -36.8614, 93.8893, 3.09953, 1.62 ) }
    dend_26 { pt3dadd( -36.8892, 93.9429, 3.1342, 1.62 ) }
    dend_26 { pt3dadd( -37.8889, 95.869, 4.52476, 0.22 ) }
    dend_26 { pt3dadd( -38.2566, 96.5699, 5.06267, 0.81 ) }
    dend_26 { pt3dadd( -38.4226, 96.8804, 5.30172, 0.81 ) }
    dend_26 { pt3dadd( -39.2124, 98.3791, 6.47437, 0.22 ) }
    dend_26 { pt3dadd( -39.2419, 98.438, 6.52137, 0.22 ) }
    dend_26 { pt3dadd( -39.7115, 99.448, 7.33941, 1.18 ) }
    dend_26 { pt3dadd( -39.8782, 99.95, 7.78035, 1.55 ) }
    dend_26 { pt3dadd( -44.5267, 110.679, 8.98188, 1.55 ) }
    dend_26 { pt3dadd( -49.0865, 121.331, 10.9056, 1.55 ) }
    dend_26 { pt3dadd( -55.0805, 130.995, 13.4894, 1.55 ) }
    dend_26 { pt3dadd( -60.5809, 140.493, 17.3798, 1.55 ) }
    dend_26 { pt3dadd( -66.3335, 148.446, 23.4381, 1.55 ) }
    dend_26 { pt3dadd( -71.8641, 156.987, 28.9519, 1.55 ) }
    dend_26 { pt3dadd( -74.8567, 166.651, 34.7388, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 1.37429, 58.8398, 0.50346, 0.88 ) }
    dend_24 { pt3dadd( -0.0511718, 59.3184, 1.69419, 0.88 ) }
    dend_24 { pt3dadd( -0.139098, 59.3368, 1.76676, 0.88 ) }
    dend_24 { pt3dadd( -1.17629, 59.431, 2.574, 0.88 ) }
    dend_24 { pt3dadd( -1.21873, 59.4325, 2.60612, 0.88 ) }
    dend_24 { pt3dadd( -3.23185, 59.5029, 4.62163, 0.59 ) }
    dend_24 { pt3dadd( -3.27424, 59.5056, 4.66696, 0.59 ) }
    dend_24 { pt3dadd( -3.87187, 59.5395, 5.35298, 1.18 ) }
    dend_24 { pt3dadd( -4.66948, 59.6082, 6.30071, 1.18 ) }
    dend_24 { pt3dadd( -4.70222, 59.6123, 6.34252, 1.18 ) }
    dend_24 { pt3dadd( -7.2844, 60.3534, 9.95, 0.22 ) }
    dend_24 { pt3dadd( -7.55345, 60.5068, 10.3819, 0.29 ) }
    dend_24 { pt3dadd( -8.04404, 60.8755, 11.2192, 1.11 ) }
    dend_24 { pt3dadd( -8.07203, 60.9039, 11.2708, 1.11 ) }
    dend_24 { pt3dadd( -8.34977, 61.2557, 11.8406, 1.11 ) }
    dend_24 { pt3dadd( -8.84966, 61.9926, 12.8796, 0.22 ) }
    dend_24 { pt3dadd( -9.07009, 62.5984, 13.3695, 0.59 ) }
    dend_24 { pt3dadd( -9.0821, 62.6382, 13.4049, 0.59 ) }
    dend_24 { pt3dadd( -9.13106, 62.8826, 13.6247, 1.11 ) }
    dend_24 { pt3dadd( -15.1406, 65.1731, 19.7771, 1.11 ) }
    dend_24 { pt3dadd( -22.5011, 67.6033, 24.157, 1.11 ) }
    dend_24 { pt3dadd( -28.4864, 71.0262, 29.8372, 1.11 ) }
    dend_24 { pt3dadd( -35.0013, 74.6725, 34.7572, 1.11 ) }
    dend_24 { pt3dadd( -41.3045, 78.7888, 39.616, 1.11 ) }
    dend_24 { pt3dadd( -47.2666, 83.3952, 44.506, 1.11 ) }
    dend_24 { pt3dadd( -53.4075, 88.3222, 48.8614, 1.11 ) }
    dend_24 { pt3dadd( -59.5221, 92.4376, 53.9564, 1.11 ) }
    dend_24 { pt3dadd( -64.937, 96.504, 59.8211, 1.11 ) }
    dend_24 { pt3dadd( -70.57, 100.452, 65.5523, 1.11 ) }
    dend_24 { pt3dadd( -75.4141, 105.522, 71.2027, 1.11 ) }
    dend_24 { pt3dadd( -80.2677, 111.007, 76.4814, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 1.37429, 58.8398, 0.50346, 0.52 ) }
    dend_23 { pt3dadd( 1.51343, 59.7806, 1.02395, 0.52 ) }
    dend_23 { pt3dadd( 1.56943, 60.5977, 1.42282, 0.52 ) }
    dend_23 { pt3dadd( 1.56761, 60.6381, 1.43872, 0.44 ) }
    dend_23 { pt3dadd( 1.48851, 61.3229, 1.64878, 0.44 ) }
    dend_23 { pt3dadd( 1.48066, 61.3795, 1.66169, 0.44 ) }
    dend_23 { pt3dadd( 1.40936, 61.9138, 1.75361, 0.66 ) }
    dend_23 { pt3dadd( 1.39831, 61.9638, 1.7588, 0.66 ) }
    dend_23 { pt3dadd( 1.27394, 62.476, 1.81847, 0.66 ) }
    dend_23 { pt3dadd( 1.17654, 62.8941, 1.89567, 0.44 ) }
    dend_23 { pt3dadd( 1.04314, 63.5058, 2.08138, 0.44 ) }
    dend_23 { pt3dadd( 0.934602, 64.0508, 2.29245, 0.96 ) }
    dend_23 { pt3dadd( 0.830717, 64.8276, 2.64508, 0.81 ) }
    dend_23 { pt3dadd( 0.821712, 64.9438, 2.70237, 0.81 ) }
    dend_23 { pt3dadd( 0.835895, 65.7406, 3.13036, 0.66 ) }
    dend_23 { pt3dadd( 0.918201, 66.4735, 3.58336, 0.44 ) }
    dend_23 { pt3dadd( 0.93894, 66.5629, 3.64337, 0.44 ) }
    dend_23 { pt3dadd( 1.13432, 67.1166, 4.02436, 0.29 ) }
    dend_23 { pt3dadd( 1.2746, 67.3958, 4.22297, 0.29 ) }
    dend_23 { pt3dadd( 1.52096, 67.8277, 4.53317, 1.11 ) }
    dend_23 { pt3dadd( 1.89125, 68.3873, 4.94767, 1.47 ) }
    dend_23 { pt3dadd( 2.09791, 68.7064, 5.19207, 1.47 ) }
    dend_23 { pt3dadd( 2.11562, 68.7363, 5.21684, 1.47 ) }
    dend_23 { pt3dadd( 2.48786, 69.417, 5.83553, 0.88 ) }
    dend_23 { pt3dadd( 2.7461, 69.9278, 6.3195, 0.52 ) }
    dend_23 { pt3dadd( 2.75982, 69.9571, 6.34723, 0.52 ) }
    dend_23 { pt3dadd( 2.96235, 70.389, 6.7345, 0.74 ) }
    dend_23 { pt3dadd( 2.97685, 70.4187, 6.76145, 0.74 ) }
    dend_23 { pt3dadd( 3.13653, 70.7047, 7.00058, 0.74 ) }
    dend_23 { pt3dadd( 3.15692, 70.7349, 7.02292, 0.74 ) }
    dend_23 { pt3dadd( 3.34964, 70.9843, 7.18578, 0.74 ) }
    dend_23 { pt3dadd( 3.80649, 71.5919, 7.50952, 0.37 ) }
    dend_23 { pt3dadd( 4.04901, 71.9399, 7.65506, 0.37 ) }
    dend_23 { pt3dadd( 4.34691, 72.4329, 7.81859, 0.52 ) }
    dend_23 { pt3dadd( 4.55806, 72.8657, 7.94206, 0.37 ) }
    dend_23 { pt3dadd( 4.83492, 73.5835, 8.11694, 0.74 ) }
    dend_23 { pt3dadd( 4.97341, 74.1284, 8.22014, 1.11 ) }
    dend_23 { pt3dadd( 5.04624, 74.6527, 8.29079, 0.96 ) }
    dend_23 { pt3dadd( 5.05674, 75.3129, 8.36376, 0.44 ) }
    dend_23 { pt3dadd( 4.98609, 76.0886, 8.43693, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 4.92814, 76.4634, 8.47276, 0.29 ) }
    dend_23 { pt3dadd( 4.82597, 77.0279, 8.52814, 0.29 ) }
    dend_23 { pt3dadd( 4.81813, 77.0785, 8.53314, 0.29 ) }
    dend_23 { pt3dadd( 4.76276, 77.6158, 8.58755, 0.37 ) }
    dend_23 { pt3dadd( 4.74059, 78.2817, 8.64973, 0.52 ) }
    dend_23 { pt3dadd( 4.77486, 78.8954, 8.69593, 1.11 ) }
    dend_23 { pt3dadd( 4.82786, 79.3189, 8.73431, 1.69 ) }
    dend_23 { pt3dadd( 4.87474, 79.6253, 8.76177, 1.77 ) }
    dend_23 { pt3dadd( 4.91613, 79.983, 8.78819, 1.69 ) }
    dend_23 { pt3dadd( 4.94665, 80.3437, 8.80953, 1.47 ) }
    dend_23 { pt3dadd( 4.94827, 80.5861, 8.81643, 1.47 ) }
    dend_23 { pt3dadd( 4.9421, 80.6388, 8.81528, 1.47 ) }
    dend_23 { pt3dadd( 4.74483, 81.5647, 8.77605, 0.29 ) }
    dend_23 { pt3dadd( 4.63046, 81.9813, 8.75218, 0.66 ) }
    dend_23 { pt3dadd( 4.61581, 82.0305, 8.75095, 0.66 ) }
    dend_23 { pt3dadd( 4.54981, 82.2627, 8.75473, 0.37 ) }
    dend_23 { pt3dadd( 4.43202, 82.7568, 8.79003, 0.29 ) }
    dend_23 { pt3dadd( 4.32419, 83.3492, 8.85783, 0.29 ) }
    dend_23 { pt3dadd( 4.31891, 83.3998, 8.8658, 0.29 ) }
    dend_23 { pt3dadd( 4.30133, 84.0337, 8.97218, 1.03 ) }
    dend_23 { pt3dadd( 4.31314, 84.567, 9.06085, 1.69 ) }
    dend_23 { pt3dadd( 4.35918, 85.1342, 9.14862, 2.14 ) }
    dend_23 { pt3dadd( 4.38534, 85.3928, 9.18457, 2.28 ) }
    dend_23 { pt3dadd( 4.41311, 85.8066, 9.21698, 1.77 ) }
    dend_23 { pt3dadd( 4.42956, 86.2863, 9.22554, 1.18 ) }
    dend_23 { pt3dadd( 4.42636, 86.7868, 9.19808, 0.52 ) }
    dend_23 { pt3dadd( 4.40425, 87.2699, 9.15314, 0.37 ) }
    dend_23 { pt3dadd( 4.37762, 87.6046, 9.09618, 0.37 ) }
    dend_23 { pt3dadd( 4.3179, 88.3023, 8.95855, 0.74 ) }
    dend_23 { pt3dadd( 4.30154, 88.5571, 8.90327, 1.25 ) }
    dend_23 { pt3dadd( 4.28044, 88.9751, 8.80343, 1.4 ) }
    dend_23 { pt3dadd( 4.26707, 89.5501, 8.66245, 0.81 ) }
    dend_23 { pt3dadd( 4.27661, 90.7087, 8.38876, 0.37 ) }
    dend_23 { pt3dadd( 4.31021, 91.342, 8.24746, 0.37 ) }
    dend_23 { pt3dadd( 4.39573, 92.3657, 8.03834, 0.29 ) }
    dend_23 { pt3dadd( 4.47877, 93.1459, 7.88728, 1.84 ) }
    dend_23 { pt3dadd( 4.51994, 93.4374, 7.83614, 2.28 ) }
    dend_23 { pt3dadd( 4.60063, 93.8764, 7.77081, 2.14 ) }
    dend_23 { pt3dadd( 4.80586, 94.8178, 7.68297, 0.52 ) }
    dend_23 { pt3dadd( 4.93, 95.3481, 7.64684, 0.74 ) }
    dend_23 { pt3dadd( 5.01485, 95.7168, 7.6364, 0.74 ) }
    dend_23 { pt3dadd( 5.12541, 96.2342, 7.63708, 0.22 ) }
    dend_23 { pt3dadd( 5.1757, 96.5579, 7.63791, 0.22 ) }
    dend_23 { pt3dadd( 5.22326, 97.2121, 7.62125, 0.74 ) }
    dend_23 { pt3dadd( 5.21737, 97.3806, 7.60789, 0.74 ) }
    dend_23 { pt3dadd( 5.16836, 97.9349, 7.53948, 0.22 ) }
    dend_23 { pt3dadd( 5.11848, 98.3486, 7.47693, 0.74 ) }
    dend_23 { pt3dadd( 5.07213, 98.6929, 7.41782, 0.96 ) }
    dend_23 { pt3dadd( 4.98296, 99.4959, 7.27625, 0.37 ) }
    dend_23 { pt3dadd( 4.91872, 100.472, 7.10323, 1.25 ) }
    dend_23 { pt3dadd( 4.91792, 100.813, 7.05014, 1.55 ) }
    dend_23 { pt3dadd( 4.93169, 101.082, 7.02132, 1.77 ) }
    dend_23 { pt3dadd( 4.9634, 101.533, 6.99849, 1.77 ) }
    dend_23 { pt3dadd( 5.00906, 102.131, 6.99702, 0.88 ) }
    dend_23 { pt3dadd( 5.03875, 102.525, 7.01567, 0.52 ) }
    dend_23 { pt3dadd( 5.07447, 103.142, 7.06817, 0.44 ) }
    dend_23 { pt3dadd( 5.10986, 103.931, 7.11713, 0.29 ) }
    dend_23 { pt3dadd( 5.12957, 104.898, 7.15714, 1.25 ) }
    dend_23 { pt3dadd( 5.12856, 105.321, 7.16797, 2.21 ) }
    dend_23 { pt3dadd( 5.12229, 105.61, 7.17002, 2.5 ) }
    dend_23 { pt3dadd( 5.10491, 106.211, 7.16298, 2.28 ) }
    dend_23 { pt3dadd( 5.05715, 107.227, 7.09109, 0.66 ) }
    dend_23 { pt3dadd( 5.03328, 107.774, 7.02576, 0.52 ) }
    dend_23 { pt3dadd( 5.01162, 108.363, 6.94122, 0.66 ) }
    dend_23 { pt3dadd( 4.99878, 108.789, 6.87694, 0.96 ) }
    dend_23 { pt3dadd( 4.98625, 109.328, 6.78848, 0.96 ) }
    dend_23 { pt3dadd( 4.96749, 110.627, 6.55856, 0.22 ) }
    dend_23 { pt3dadd( 4.97201, 111.167, 6.4726, 1.18 ) }
    dend_23 { pt3dadd( 4.98899, 111.465, 6.42332, 0.88 ) }
    dend_23 { pt3dadd( 5.03235, 111.867, 6.35578, 0.74 ) }
    dend_23 { pt3dadd( 5.11919, 112.385, 6.27497, 0.29 ) }
    dend_23 { pt3dadd( 5.13174, 112.435, 6.26889, 0.29 ) }
    dend_23 { pt3dadd( 5.30067, 112.863, 6.25075, 0.81 ) }
    dend_23 { pt3dadd( 5.3183, 112.911, 6.24615, 0.81 ) }
    dend_23 { pt3dadd( 5.39879, 113.212, 6.20752, 1.03 ) }
    dend_23 { pt3dadd( 5.4288, 113.365, 6.185, 1.03 ) }
    dend_23 { pt3dadd( 5.44781, 113.573, 6.15127, 1.03 ) }
    dend_23 { pt3dadd( 5.42456, 114.512, 5.93859, 0.29 ) }
    dend_23 { pt3dadd( 5.34089, 115.2, 5.74726, 0.29 ) }
    dend_23 { pt3dadd( 5.27252, 115.631, 5.62028, 0.59 ) }
    dend_23 { pt3dadd( 5.25316, 115.735, 5.58898, 0.59 ) }
    dend_23 { pt3dadd( 5.18624, 116.129, 5.47468, 0.37 ) }
    dend_23 { pt3dadd( 5.10347, 116.821, 5.29905, 0.29 ) }
    dend_23 { pt3dadd( 5.06281, 117.575, 5.15129, 1.11 ) }
    dend_23 { pt3dadd( 5.07261, 117.883, 5.10739, 1.69 ) }
    dend_23 { pt3dadd( 5.1022, 118.218, 5.07122, 1.84 ) }
    dend_23 { pt3dadd( 5.16406, 118.75, 5.02905, 1.62 ) }
    dend_23 { pt3dadd( 5.27819, 119.505, 4.99672, 0.74 ) }
    dend_23 { pt3dadd( 5.40439, 120.219, 4.99886, 0.52 ) }
    dend_23 { pt3dadd( 5.41412, 120.272, 4.99969, 0.52 ) }
    dend_23 { pt3dadd( 5.54396, 121.053, 5.00944, 0.37 ) }
    dend_23 { pt3dadd( 5.55181, 121.112, 5.00915, 0.37 ) }
    dend_23 { pt3dadd( 5.58601, 121.603, 4.99511, 1.25 ) }
    dend_23 { pt3dadd( 5.58843, 121.948, 4.95225, 0.96 ) }
    dend_23 { pt3dadd( 5.58758, 121.999, 4.94298, 0.96 ) }
    dend_23 { pt3dadd( 5.57576, 122.466, 4.84831, 0.74 ) }
    dend_23 { pt3dadd( 5.5646, 122.947, 4.73101, 0.59 ) }
    dend_23 { pt3dadd( 5.55286, 123.344, 4.63071, 0.74 ) }
    dend_23 { pt3dadd( 5.50123, 124.392, 4.35929, 0.37 ) }
    dend_23 { pt3dadd( 5.46121, 125.037, 4.19187, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 5.42412, 125.593, 4.05017, 0.52 ) }
    dend_23 { pt3dadd( 5.35908, 126.306, 3.85737, 0.29 ) }
    dend_23 { pt3dadd( 5.2881, 126.863, 3.69257, 0.81 ) }
    dend_23 { pt3dadd( 5.22327, 127.233, 3.56883, 1.18 ) }
    dend_23 { pt3dadd( 5.21248, 127.274, 3.55339, 1.18 ) }
    dend_23 { pt3dadd( 5.15452, 127.477, 3.46945, 1.18 ) }
    dend_23 { pt3dadd( 5.00111, 128.101, 3.22933, 1.18 ) }
    dend_23 { pt3dadd( 4.89628, 128.636, 3.0511, 0.44 ) }
    dend_23 { pt3dadd( 4.81606, 129.226, 2.87576, 0.29 ) }
    dend_23 { pt3dadd( 4.80618, 129.343, 2.84626, 0.29 ) }
    dend_23 { pt3dadd( 4.78004, 130.159, 2.68334, 0.29 ) }
    dend_23 { pt3dadd( 4.80912, 131.282, 2.52888, 1.62 ) }
    dend_23 { pt3dadd( 4.83414, 131.669, 2.49945, 2.65 ) }
    dend_23 { pt3dadd( 4.86114, 132.055, 2.48445, 2.87 ) }
    dend_23 { pt3dadd( 4.8929, 132.485, 2.47699, 2.36 ) }
    dend_23 { pt3dadd( 4.93246, 133.084, 2.47093, 1.69 ) }
    dend_23 { pt3dadd( 4.98475, 134.028, 2.45757, 0.52 ) }
    dend_23 { pt3dadd( 5.0274, 134.768, 2.44746, 0.52 ) }
    dend_23 { pt3dadd( 5.04452, 135.14, 2.438, 0.81 ) }
    dend_23 { pt3dadd( 5.06454, 135.671, 2.41656, 0.44 ) }
    dend_23 { pt3dadd( 5.09199, 136.429, 2.37576, 0.44 ) }
    dend_23 { pt3dadd( 5.10849, 136.991, 2.33728, 0.37 ) }
    dend_23 { pt3dadd( 5.11091, 137.042, 2.33327, 0.37 ) }
    dend_23 { pt3dadd( 5.1722, 137.689, 2.27877, 0.37 ) }
    dend_23 { pt3dadd( 5.1853, 137.783, 2.27127, 0.37 ) }
    dend_23 { pt3dadd( 5.29693, 138.456, 2.21871, 1.62 ) }
    dend_23 { pt3dadd( 5.37755, 138.892, 2.19042, 2.36 ) }
    dend_23 { pt3dadd( 5.44285, 139.228, 2.17392, 2.36 ) }
    dend_23 { pt3dadd( 5.66161, 140.314, 2.13005, 0.29 ) }
    dend_23 { pt3dadd( 5.77252, 140.837, 2.11309, 0.29 ) }
    dend_23 { pt3dadd( 5.88755, 141.373, 2.10316, 0.37 ) }
    dend_23 { pt3dadd( 6.04087, 142.062, 2.09894, 0.37 ) }
    dend_23 { pt3dadd( 6.10136, 142.337, 2.08932, 0.59 ) }
    dend_23 { pt3dadd( 6.15921, 142.621, 2.06512, 0.59 ) }
    dend_23 { pt3dadd( 6.16698, 142.664, 2.0588, 0.59 ) }
    dend_23 { pt3dadd( 6.32467, 143.728, 1.84274, 0.29 ) }
    dend_23 { pt3dadd( 6.49941, 145.037, 1.52055, 0.29 ) }
    dend_23 { pt3dadd( 6.5757, 145.667, 1.33506, 0.96 ) }
    dend_23 { pt3dadd( 6.63578, 146.228, 1.14808, 1.18 ) }
    dend_23 { pt3dadd( 6.66805, 146.662, 0.990894, 0.66 ) }
    dend_23 { pt3dadd( 6.68405, 147.091, 0.827106, 0.44 ) }
    dend_23 { pt3dadd( 6.6825, 147.137, 0.806612, 0.44 ) }
    dend_23 { pt3dadd( 6.63685, 147.656, 0.595603, 0.22 ) }
    dend_23 { pt3dadd( 6.62481, 147.769, 0.561351, 0.22 ) }
    dend_23 { pt3dadd( 6.5474, 148.606, 0.384531, 1.47 ) }
    dend_23 { pt3dadd( 6.51804, 148.972, 0.328145, 2.28 ) }
    dend_23 { pt3dadd( 6.4976, 149.299, 0.290303, 2.58 ) }
    dend_23 { pt3dadd( 6.44715, 150.231, 0.212479, 0.29 ) }
    dend_23 { pt3dadd( 6.42052, 150.742, 0.188037, 0.22 ) }
    dend_23 { pt3dadd( 6.39978, 151.266, 0.175959, 0.22 ) }
    dend_23 { pt3dadd( 6.38597, 151.704, 0.17243, 0.22 ) }
    dend_23 { pt3dadd( 6.3558, 152.43, 0.169672, 1.33 ) }
    dend_23 { pt3dadd( 6.34469, 152.625, 0.170259, 1.62 ) }
    dend_23 { pt3dadd( 6.32383, 152.886, 0.162756, 1.62 ) }
    dend_23 { pt3dadd( 6.25711, 153.472, 0.110998, 0.37 ) }
    dend_23 { pt3dadd( 6.17358, 154.013, 0.0383608, 0.22 ) }
    dend_23 { pt3dadd( 6.12552, 154.288, -0.00154616, 0.22 ) }
    dend_23 { pt3dadd( 6.0724, 154.564, -0.0435356, 0.52 ) }
    dend_23 { pt3dadd( 5.96384, 155.171, -0.132692, 0.29 ) }
    dend_23 { pt3dadd( 5.80498, 156.216, -0.275437, 0.29 ) }
    dend_23 { pt3dadd( 5.73533, 156.793, -0.345739, 1.03 ) }
    dend_23 { pt3dadd( 5.71265, 157.162, -0.380231, 1.33 ) }
    dend_23 { pt3dadd( 5.71274, 157.325, -0.390939, 1.33 ) }
    dend_23 { pt3dadd( 5.73163, 157.664, -0.402632, 1.18 ) }
    dend_23 { pt3dadd( 5.78195, 158.152, -0.400039, 0.96 ) }
    dend_23 { pt3dadd( 5.8382, 158.519, -0.393711, 0.37 ) }
    dend_23 { pt3dadd( 5.95125, 159.165, -0.378615, 0.22 ) }
    dend_23 { pt3dadd( 6.05464, 159.746, -0.363777, 0.22 ) }
    dend_23 { pt3dadd( 6.15598, 160.351, -0.348764, 1.11 ) }
    dend_23 { pt3dadd( 6.20914, 160.688, -0.349715, 1.92 ) }
    dend_23 { pt3dadd( 6.25201, 160.966, -0.363805, 2.5 ) }
    dend_23 { pt3dadd( 6.25923, 161.017, -0.368767, 2.5 ) }
    dend_23 { pt3dadd( 6.29708, 161.33, -0.418564, 2.5 ) }
    dend_23 { pt3dadd( 6.33724, 161.764, -0.508546, 2.36 ) }
    dend_23 { pt3dadd( 6.4158, 162.787, -0.759103, 0.29 ) }
    dend_23 { pt3dadd( 6.44869, 163.329, -0.902107, 0.29 ) }
    dend_23 { pt3dadd( 6.45172, 163.413, -0.924343, 0.29 ) }
    dend_23 { pt3dadd( 6.46363, 163.976, -1.08189, 1.33 ) }
    dend_23 { pt3dadd( 6.46747, 164.303, -1.17343, 1.55 ) }
    dend_23 { pt3dadd( 6.46742, 164.347, -1.18527, 1.55 ) }
    dend_23 { pt3dadd( 6.46449, 164.667, -1.25743, 1.25 ) }
    dend_23 { pt3dadd( 6.49042, 165.186, -1.34412, 0.66 ) }
    dend_23 { pt3dadd( 6.56594, 166.157, -1.46472, 0.29 ) }
    dend_23 { pt3dadd( 6.62494, 166.716, -1.51424, 0.88 ) }
    dend_23 { pt3dadd( 6.66085, 167.003, -1.53366, 1.11 ) }
    dend_23 { pt3dadd( 6.71666, 167.499, -1.56011, 0.96 ) }
    dend_23 { pt3dadd( 6.78635, 168.492, -1.57108, 0.29 ) }
    dend_23 { pt3dadd( 6.81512, 169.56, -1.54864, 0.29 ) }
    dend_23 { pt3dadd( 6.80274, 170.253, -1.51708, 1.33 ) }
    dend_23 { pt3dadd( 6.7809, 170.799, -1.49493, 1.92 ) }
    dend_23 { pt3dadd( 6.74201, 171.401, -1.46881, 2.21 ) }
    dend_23 { pt3dadd( 6.59171, 173.061, -1.39406, 0.37 ) }
    dend_23 { pt3dadd( 6.47816, 174.01, -1.35094, 0.37 ) }
    dend_23 { pt3dadd( 6.36246, 174.914, -1.31032, 0.37 ) }
    dend_23 { pt3dadd( 6.27477, 175.576, -1.28455, 0.22 ) }
    dend_23 { pt3dadd( 6.18348, 176.304, -1.26114, 1.33 ) }
    dend_23 { pt3dadd( 6.15375, 176.57, -1.25565, 2.06 ) }
    dend_23 { pt3dadd( 6.11983, 176.834, -1.25818, 2.21 ) }
    dend_23 { pt3dadd( 6.01914, 177.464, -1.26648, 1.69 ) }
    dend_23 { pt3dadd( 5.82909, 178.464, -1.28455, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 5.71849, 178.986, -1.29705, 0.81 ) }
    dend_23 { pt3dadd( 5.65585, 179.297, -1.30906, 0.81 ) }
    dend_23 { pt3dadd( 5.53033, 180.099, -1.34506, 0.22 ) }
    dend_23 { pt3dadd( 5.47454, 180.63, -1.37359, 0.81 ) }
    dend_23 { pt3dadd( 5.46905, 180.75, -1.38056, 0.81 ) }
    dend_23 { pt3dadd( 5.47562, 181.13, -1.40431, 0.81 ) }
    dend_23 { pt3dadd( 5.4972, 181.454, -1.42239, 0.74 ) }
    dend_23 { pt3dadd( 5.58419, 182.258, -1.45924, 0.22 ) }
    dend_23 { pt3dadd( 5.6666, 182.859, -1.48968, 0.81 ) }
    dend_23 { pt3dadd( 5.70192, 183.143, -1.50569, 1.03 ) }
    dend_23 { pt3dadd( 5.74668, 183.571, -1.53156, 0.44 ) }
    dend_23 { pt3dadd( 5.81039, 184.37, -1.58229, 0.29 ) }
    dend_23 { pt3dadd( 5.85045, 185.044, -1.62939, 0.29 ) }
    dend_23 { pt3dadd( 5.8763, 185.879, -1.68848, 1.55 ) }
    dend_23 { pt3dadd( 5.88643, 186.138, -1.7076, 1.92 ) }
    dend_23 { pt3dadd( 5.88933, 186.198, -1.71214, 1.92 ) }
    dend_23 { pt3dadd( 5.9012, 186.463, -1.73216, 1.92 ) }
    dend_23 { pt3dadd( 5.95604, 188.082, -1.85995, 0.22 ) }
    dend_23 { pt3dadd( 5.96448, 188.837, -1.91985, 0.66 ) }
    dend_23 { pt3dadd( 5.959, 189.135, -1.94227, 1.03 ) }
    dend_23 { pt3dadd( 5.93521, 189.582, -1.98, 1.03 ) }
    dend_23 { pt3dadd( 5.88706, 190.083, -2.02557, 0.81 ) }
    dend_23 { pt3dadd( 5.80969, 190.611, -2.07735, 0.37 ) }
    dend_23 { pt3dadd( 5.76365, 190.838, -2.0997, 0.37 ) }
    dend_23 { pt3dadd( 5.68052, 191.247, -2.14056, 0.37 ) }
    dend_23 { pt3dadd( 5.56692, 191.825, -2.19782, 0.29 ) }
    dend_23 { pt3dadd( 5.45011, 192.502, -2.26179, 0.29 ) }
    dend_23 { pt3dadd( 5.44386, 192.553, -2.26646, 0.29 ) }
    dend_23 { pt3dadd( 5.3625, 193.461, -2.3412, 0.22 ) }
    dend_23 { pt3dadd( 5.35932, 193.52, -2.346, 0.22 ) }
    dend_23 { pt3dadd( 5.34749, 194.048, -2.3884, 0.22 ) }
    dend_23 { pt3dadd( 5.34941, 194.108, -2.39457, 0.22 ) }
    dend_23 { pt3dadd( 5.40347, 194.753, -2.47139, 1.47 ) }
    dend_23 { pt3dadd( 5.4384, 195.071, -2.51612, 1.84 ) }
    dend_23 { pt3dadd( 5.44358, 195.114, -2.52286, 1.84 ) }
    dend_23 { pt3dadd( 5.48254, 195.426, -2.57163, 1.84 ) }
    dend_23 { pt3dadd( 5.60725, 196.376, -2.71905, 0.22 ) }
    dend_23 { pt3dadd( 5.71687, 197.283, -2.85463, 0.22 ) }
    dend_23 { pt3dadd( 5.76435, 197.707, -2.90695, 0.88 ) }
    dend_23 { pt3dadd( 5.78963, 198.023, -2.93984, 1.18 ) }
    dend_23 { pt3dadd( 5.80214, 198.349, -2.96543, 0.96 ) }
    dend_23 { pt3dadd( 5.80087, 198.402, -2.96796, 0.96 ) }
    dend_23 { pt3dadd( 5.73415, 198.873, -2.96865, 0.37 ) }
    dend_23 { pt3dadd( 5.65537, 199.266, -2.96347, 0.37 ) }
    dend_23 { pt3dadd( 5.58147, 199.686, -2.95067, 0.37 ) }
    dend_23 { pt3dadd( 5.5525, 199.905, -2.94477, 0.29 ) }
    dend_23 { pt3dadd( 5.51317, 200.378, -2.93438, 0.22 ) }
    dend_23 { pt3dadd( 5.49945, 200.671, -2.92994, 0.52 ) }
    dend_23 { pt3dadd( 5.49844, 201.278, -2.92646, 0.22 ) }
    dend_23 { pt3dadd( 5.51857, 201.751, -2.93057, 0.22 ) }
    dend_23 { pt3dadd( 5.56267, 202.18, -2.94751, 1.11 ) }
    dend_23 { pt3dadd( 5.6124, 202.578, -2.98928, 1.47 ) }
    dend_23 { pt3dadd( 5.61851, 202.635, -2.99868, 1.47 ) }
    dend_23 { pt3dadd( 5.6407, 202.908, -3.05633, 1.33 ) }
    dend_23 { pt3dadd( 5.6424, 202.985, -3.07615, 1.33 ) }
    dend_23 { pt3dadd( 5.62007, 203.654, -3.26141, 0.74 ) }
    dend_23 { pt3dadd( 5.59156, 204.427, -3.48125, 0.29 ) }
    dend_23 { pt3dadd( 5.57725, 204.864, -3.59963, 0.37 ) }
    dend_23 { pt3dadd( 5.57704, 204.909, -3.61052, 0.37 ) }
    dend_23 { pt3dadd( 5.58347, 205.278, -3.68718, 0.37 ) }
    dend_23 { pt3dadd( 5.60502, 205.816, -3.78147, 0.22 ) }
    dend_23 { pt3dadd( 5.65131, 206.453, -3.87124, 1.11 ) }
    dend_23 { pt3dadd( 5.69465, 206.836, -3.92067, 1.4 ) }
    dend_23 { pt3dadd( 5.7448, 207.195, -3.9696, 1.18 ) }
    dend_23 { pt3dadd( 5.81684, 207.68, -4.04144, 0.44 ) }
    dend_23 { pt3dadd( 5.94582, 208.441, -4.17417, 0.22 ) }
    dend_23 { pt3dadd( 6.0525, 208.948, -4.26284, 0.74 ) }
    dend_23 { pt3dadd( 6.12076, 209.258, -4.31094, 1.33 ) }
    dend_23 { pt3dadd( 6.13051, 209.3, -4.31727, 1.33 ) }
    dend_23 { pt3dadd( 6.25077, 209.833, -4.38729, 1.62 ) }
    dend_23 { pt3dadd( 6.31515, 210.122, -4.41847, 1.62 ) }
    dend_23 { pt3dadd( 6.5793, 211.312, -4.51283, 0.29 ) }
    dend_23 { pt3dadd( 6.7415, 212.102, -4.56124, 0.29 ) }
    dend_23 { pt3dadd( 6.75035, 212.153, -4.56432, 0.29 ) }
    dend_23 { pt3dadd( 6.86146, 213.027, -4.61363, 0.29 ) }
    dend_23 { pt3dadd( 6.8882, 213.457, -4.63332, 1.03 ) }
    dend_23 { pt3dadd( 6.88821, 213.517, -4.63584, 1.03 ) }
    dend_23 { pt3dadd( 6.85535, 214.004, -4.66283, 1.18 ) }
    dend_23 { pt3dadd( 6.76905, 214.872, -4.71501, 0.29 ) }
    dend_23 { pt3dadd( 6.69735, 215.564, -4.75418, 0.29 ) }
    dend_23 { pt3dadd( 6.62469, 216.202, -4.78929, 1.18 ) }
    dend_23 { pt3dadd( 6.59685, 216.477, -4.80226, 1.47 ) }
    dend_23 { pt3dadd( 6.55899, 216.891, -4.81858, 1.25 ) }
    dend_23 { pt3dadd( 6.53643, 217.23, -4.8275, 1.33 ) }
    dend_23 { pt3dadd( 6.50842, 218.14, -4.83434, 0.22 ) }
    dend_23 { pt3dadd( 6.51179, 218.251, -4.83466, 0.22 ) }
    dend_23 { pt3dadd( 6.60256, 219.072, -4.81415, 0.22 ) }
    dend_23 { pt3dadd( 6.61184, 219.13, -4.81129, 0.22 ) }
    dend_23 { pt3dadd( 6.71976, 219.695, -4.77265, 0.74 ) }
    dend_23 { pt3dadd( 6.77518, 219.965, -4.7505, 1.18 ) }
    dend_23 { pt3dadd( 6.82723, 220.291, -4.72452, 1.18 ) }
    dend_23 { pt3dadd( 6.9329, 221.256, -4.6591, 0.22 ) }
    dend_23 { pt3dadd( 6.93695, 221.308, -4.65589, 0.22 ) }
    dend_23 { pt3dadd( 6.96919, 221.833, -4.62791, 0.66 ) }
    dend_23 { pt3dadd( 6.98766, 222.107, -4.62913, 0.66 ) }
    dend_23 { pt3dadd( 7.07205, 223.065, -4.67357, 0.22 ) }
    dend_23 { pt3dadd( 7.12471, 223.595, -4.71426, 1.25 ) }
    dend_23 { pt3dadd( 7.1762, 224.062, -4.76248, 1.55 ) }
    dend_23 { pt3dadd( 7.24518, 224.579, -4.81835, 1.69 ) }
    dend_23 { pt3dadd( 7.41052, 225.624, -4.93869, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( 7.58296, 226.649, -5.05851, 0.22 ) }
    dend_23 { pt3dadd( 7.66155, 227.089, -5.11118, 0.66 ) }
    dend_23 { pt3dadd( 7.72082, 227.407, -5.14532, 0.81 ) }
    dend_23 { pt3dadd( 7.72943, 227.458, -5.15, 0.81 ) }
    dend_23 { pt3dadd( 7.89396, 228.547, -5.22266, 0.22 ) }
    dend_23 { pt3dadd( 7.98032, 229.186, -5.23909, 1.03 ) }
    dend_23 { pt3dadd( 8.00023, 229.35, -5.24604, 1.33 ) }
    dend_23 { pt3dadd( 8.11341, 230.332, -5.29233, 0.22 ) }
    dend_23 { pt3dadd( 8.1606, 230.761, -5.31243, 0.81 ) }
    dend_23 { pt3dadd( 8.19655, 231.131, -5.32913, 1.03 ) }
    dend_23 { pt3dadd( 8.22188, 231.434, -5.342, 0.74 ) }
    dend_23 { pt3dadd( 8.2985, 232.585, -5.39459, 0.22 ) }
    dend_23 { pt3dadd( 8.31891, 233.133, -5.42109, 0.44 ) }
    dend_23 { pt3dadd( 8.3133, 233.796, -5.45648, 0.22 ) }
    dend_23 { pt3dadd( 8.30221, 234.386, -5.48638, 1.11 ) }
    dend_23 { pt3dadd( 8.29178, 234.705, -5.50125, 1.33 ) }
    dend_23 { pt3dadd( 8.27406, 235.195, -5.5222, 0.37 ) }
    dend_23 { pt3dadd( 8.25227, 235.832, -5.54244, 0.15 ) }
    dend_23 { pt3dadd( 8.24705, 236.312, -5.5604, 0.74 ) }
    dend_23 { pt3dadd( 8.25118, 236.365, -5.56242, 0.74 ) }
    dend_23 { pt3dadd( 8.27931, 236.578, -5.57047, 0.74 ) }
    dend_23 { pt3dadd( 8.41991, 237.413, -5.60105, 0.22 ) }
    dend_23 { pt3dadd( 8.50917, 237.88, -5.61735, 1.18 ) }
    dend_23 { pt3dadd( 8.57752, 238.213, -5.63006, 1.62 ) }
    dend_23 { pt3dadd( 8.87736, 239.712, -5.69439, 0.22 ) }
    dend_23 { pt3dadd( 8.96707, 240.186, -5.71627, 0.29 ) }
    dend_23 { pt3dadd( 8.97601, 240.238, -5.71881, 0.29 ) }
    dend_23 { pt3dadd( 9.07123, 240.872, -5.74972, 0.29 ) }
    dend_23 { pt3dadd( 9.15526, 241.487, -5.78338, 0.59 ) }
    dend_23 { pt3dadd( 9.19683, 241.909, -5.81732, 1.11 ) }
    dend_23 { pt3dadd( 9.20169, 241.981, -5.82412, 1.11 ) }
    dend_23 { pt3dadd( 9.23667, 242.402, -5.86231, 1.55 ) }
    dend_23 { pt3dadd( 9.27456, 242.862, -5.90312, 1.55 ) }
    dend_23 { pt3dadd( 9.27793, 242.906, -5.90684, 1.55 ) }
    dend_23 { pt3dadd( 9.3718, 244.341, -6.01911, 0.22 ) }
    dend_23 { pt3dadd( 9.44036, 245.379, -6.09111, 0.22 ) }
    dend_23 { pt3dadd( 9.51537, 246.099, -6.13022, 1.4 ) }
    dend_23 { pt3dadd( 9.53712, 246.264, -6.13698, 1.77 ) }
    dend_23 { pt3dadd( 9.60635, 246.742, -6.151, 1.4 ) }
    dend_23 { pt3dadd( 9.70898, 247.318, -6.15712, 0.74 ) }
    dend_23 { pt3dadd( 9.87489, 248.072, -6.14754, 0.29 ) }
    dend_23 { pt3dadd( 10.2184, 249.419, -6.12372, 0.22 ) }
    dend_23 { pt3dadd( 10.3667, 249.955, -6.11247, 0.66 ) }
    dend_23 { pt3dadd( 10.4435, 250.211, -6.10669, 0.66 ) }
    dend_23 { pt3dadd( 10.6604, 250.861, -6.08803, 0.22 ) }
    dend_23 { pt3dadd( 10.6774, 250.911, -6.0852, 0.22 ) }
    dend_23 { pt3dadd( 10.8088, 251.34, -6.04826, 0.52 ) }
    dend_23 { pt3dadd( 10.8223, 251.397, -6.04155, 0.52 ) }
    dend_23 { pt3dadd( 10.8819, 251.658, -6.00667, 0.52 ) }
    dend_23 { pt3dadd( 10.9698, 252.023, -5.93121, 0.22 ) }
    dend_23 { pt3dadd( 11.1475, 252.697, -5.75049, 1.03 ) }
    dend_23 { pt3dadd( 11.2591, 253.048, -5.63537, 1.62 ) }
    dend_23 { pt3dadd( 11.3613, 253.356, -5.52646, 1.47 ) }
    dend_23 { pt3dadd( 11.5061, 253.798, -5.3582, 1.33 ) }
    dend_23 { pt3dadd( 11.8378, 254.863, -4.91377, 0.22 ) }
    dend_23 { pt3dadd( 12.0505, 255.552, -4.6094, 1.18 ) }
    dend_23 { pt3dadd( 12.3293, 256.413, -4.21535, 0.22 ) }
    dend_23 { pt3dadd( 12.4474, 256.775, -4.0426, 0.22 ) }
    dend_23 { pt3dadd( 12.6077, 257.265, -3.80326, 0.81 ) }
    dend_23 { pt3dadd( 12.9545, 258.31, -3.29306, 0.22 ) }
    dend_23 { pt3dadd( 12.9678, 258.355, -3.27234, 0.22 ) }
    dend_23 { pt3dadd( 13.0552, 258.689, -3.11856, 0.81 ) }
    dend_23 { pt3dadd( 13.066, 258.735, -3.0983, 0.81 ) }
    dend_23 { pt3dadd( 13.1273, 258.934, -3.00543, 1.11 ) }
    dend_23 { pt3dadd( 13.2566, 259.242, -2.88797, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -38.0798, -47.0459, 17.7924, 0.29 ) }
    dend_18 { pt3dadd( -39.2348, -47.1393, 17.7498, 0.29 ) }
    dend_18 { pt3dadd( -40.6482, -47.2091, 17.8591, 0.29 ) }
    dend_18 { pt3dadd( -41.3245, -47.3024, 17.9078, 0.59 ) }
    dend_18 { pt3dadd( -42.3722, -47.5864, 17.9606, 0.59 ) }
    dend_18 { pt3dadd( -42.4718, -47.6264, 17.9595, 0.59 ) }
    dend_18 { pt3dadd( -44.0614, -48.3902, 17.8803, 0.59 ) }
    dend_18 { pt3dadd( -44.1174, -48.4185, 17.8824, 0.59 ) }
    dend_18 { pt3dadd( -44.937, -48.8541, 18.0206, 0.37 ) }
    dend_18 { pt3dadd( -45.6065, -49.2641, 18.1651, 0.29 ) }
    dend_18 { pt3dadd( -46.1915, -49.6603, 18.2884, 0.29 ) }
    dend_18 { pt3dadd( -46.2351, -49.6911, 18.2982, 0.29 ) }
    dend_18 { pt3dadd( -47.3238, -50.5329, 18.5862, 0.74 ) }
    dend_18 { pt3dadd( -47.6174, -50.7457, 18.7039, 1.03 ) }
    dend_18 { pt3dadd( -48.3759, -51.2867, 19.1319, 0.29 ) }
    dend_18 { pt3dadd( -48.4597, -51.3507, 19.1847, 0.29 ) }
    dend_18 { pt3dadd( -48.9503, -51.7723, 19.5035, 0.37 ) }
    dend_18 { pt3dadd( -49.2871, -52.1008, 19.6999, 0.52 ) }
    dend_18 { pt3dadd( -49.5308, -52.3959, 19.8126, 0.52 ) }
    dend_18 { pt3dadd( -50.0215, -52.926, 19.8835, 0.29 ) }
    dend_18 { pt3dadd( -50.5902, -53.397, 19.7811, 0.29 ) }
    dend_18 { pt3dadd( -50.9231, -53.6033, 19.6717, 0.59 ) }
    dend_18 { pt3dadd( -51.1564, -53.716, 19.5726, 0.88 ) }
    dend_18 { pt3dadd( -51.3893, -53.8202, 19.4647, 1.03 ) }
    dend_18 { pt3dadd( -52.5095, -54.2902, 19.0017, 0.29 ) }
    dend_18 { pt3dadd( -53.2136, -54.5629, 18.7505, 0.44 ) }
    dend_18 { pt3dadd( -53.6401, -54.747, 18.6435, 0.74 ) }
    dend_18 { pt3dadd( -53.7199, -54.7918, 18.6312, 0.74 ) }
    dend_18 { pt3dadd( -54.194, -55.0834, 18.5861, 0.66 ) }
    dend_18 { pt3dadd( -55.0044, -55.6389, 18.5816, 0.66 ) }
    dend_18 { pt3dadd( -55.0528, -55.679, 18.59, 0.66 ) }
    dend_18 { pt3dadd( -55.429, -56.0303, 18.6731, 0.29 ) }
    dend_18 { pt3dadd( -56.2096, -56.7949, 18.8909, 0.22 ) }
    dend_18 { pt3dadd( -63.9422, -61.0269, 20.6969, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -38.0798, -47.0459, 17.7924, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -39.4663, -46.1507, 18.2519, 0.74 ) }
    dend_15 { pt3dadd( -41.1554, -45.0519, 18.6696, 0.66 ) }
    dend_15 { pt3dadd( -41.2627, -44.9821, 18.6962, 0.66 ) }
    dend_15 { pt3dadd( -41.7628, -44.6568, 18.8198, 0.66 ) }
    dend_15 { pt3dadd( -41.8221, -44.6182, 18.8345, 0.66 ) }
    dend_15 { pt3dadd( -42.2043, -44.3696, 18.929, 0.52 ) }
    dend_15 { pt3dadd( -42.4908, -44.093, 18.9079, 0.52 ) }
    dend_15 { pt3dadd( -51.0924, -39.4213, 20.504, 0.52 ) }
    dend_15 { pt3dadd( -59.0806, -33.7481, 22.2617, 0.52 ) }
    dend_15 { pt3dadd( -67.3054, -29.4442, 25.6583, 0.52 ) }
    dend_15 { pt3dadd( -74.2221, -23.772, 29.9386, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.79978, -23.689, 1.12385, 0.96 ) }
    dend_7 { pt3dadd( -7.52312, -25.5325, 1.17281, 0.96 ) }
    dend_7 { pt3dadd( -8.16174, -27.3701, 1.21645, 0.96 ) }
    dend_7 { pt3dadd( -8.21954, -27.5796, 1.22082, 0.96 ) }
    dend_7 { pt3dadd( -8.45856, -28.6581, 1.20878, 0.96 ) }
    dend_7 { pt3dadd( -8.81993, -30.5103, 1.16064, 1.11 ) }
    dend_7 { pt3dadd( -9.19377, -32.7271, 1.02059, 1.11 ) }
    dend_7 { pt3dadd( -9.2039, -32.8335, 1.01201, 1.11 ) }
    dend_7 { pt3dadd( -9.33173, -35.0439, 0.80043, 1.03 ) }
    dend_7 { pt3dadd( -9.40141, -36.6394, 0.626276, 1.99 ) }
    dend_7 { pt3dadd( -9.40309, -36.7455, 0.611628, 1.99 ) }
    dend_7 { pt3dadd( -9.38598, -38.2092, 0.325473, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.79978, -23.689, 1.12385, 1.92 ) }
    dend_2 { pt3dadd( -6.47465, -26.4489, 1.96296, 1.92 ) }
    dend_2 { pt3dadd( -6.1611, -28.9338, 2.71431, 1.92 ) }
    dend_2 { pt3dadd( -5.86323, -31.1948, 3.39206, 1.92 ) }
    dend_2 { pt3dadd( -5.59287, -33.2918, 4.00569, 2.14 ) }
    dend_2 { pt3dadd( -5.32146, -35.2593, 4.58114, 1.62 ) }
    dend_2 { pt3dadd( -5.01596, -37.2319, 5.16215, 1.99 ) }
    dend_2 { pt3dadd( -4.75947, -38.5589, 5.54336, 2.73 ) }
    dend_2 { pt3dadd( -4.42284, -40.0305, 5.99484, 2.36 ) }
    dend_2 { pt3dadd( -4.01321, -41.6532, 6.57006, 1.99 ) }
    dend_2 { pt3dadd( -3.43569, -43.7543, 7.41121, 1.92 ) }
    dend_2 { pt3dadd( -3.05972, -44.9969, 7.96834, 2.28 ) }
    dend_2 { pt3dadd( -2.68692, -46.2331, 8.58871, 2.5 ) }
    dend_2 { pt3dadd( -2.35839, -47.4061, 9.2349, 2.58 ) }
    dend_2 { pt3dadd( -1.92025, -49.2932, 10.3932, 1.69 ) }
    dend_2 { pt3dadd( -1.9074, -49.3632, 10.4388, 1.69 ) }
    dend_2 { pt3dadd( -1.73559, -51.0333, 11.4995, 1.47 ) }
    dend_2 { pt3dadd( -1.67954, -53.3905, 12.9, 1.25 ) }
    dend_2 { pt3dadd( -1.74147, -54.7225, 13.6172, 1.62 ) }
    dend_2 { pt3dadd( -1.89098, -56.1455, 14.2836, 1.62 ) }
    dend_2 { pt3dadd( -2.12562, -57.6901, 14.8813, 1.25 ) }
    dend_2 { pt3dadd( -2.48975, -59.472, 15.459, 1.25 ) }
    dend_2 { pt3dadd( -2.98879, -61.222, 15.8646, 1.77 ) }
    dend_2 { pt3dadd( -3.33708, -62.2107, 15.9785, 1.92 ) }
    dend_2 { pt3dadd( -3.76458, -63.3391, 16.0191, 1.92 ) }
    dend_2 { pt3dadd( -4.20757, -64.4393, 15.9951, 2.06 ) }
    dend_2 { pt3dadd( -4.78796, -65.7659, 15.9247, 1.92 ) }
    dend_2 { pt3dadd( -5.53868, -67.4417, 15.8043, 1.77 ) }
    dend_2 { pt3dadd( -6.33174, -69.2424, 15.6572, 1.55 ) }
    dend_2 { pt3dadd( -7.27588, -71.4335, 15.4903, 1.4 ) }
    dend_2 { pt3dadd( -8.02333, -73.1785, 15.4072, 1.4 ) }
    dend_2 { pt3dadd( -8.63596, -74.681, 15.3884, 1.84 ) }
    dend_2 { pt3dadd( -9.0721, -75.8488, 15.4563, 1.77 ) }
    dend_2 { pt3dadd( -9.57321, -77.4224, 15.6784, 1.25 ) }
    dend_2 { pt3dadd( -9.59981, -77.5308, 15.7034, 1.25 ) }
    dend_2 { pt3dadd( -9.96701, -79.5404, 16.3259, 0.88 ) }
    dend_2 { pt3dadd( -10.0588, -80.5074, 16.6892, 1.62 ) }
    dend_2 { pt3dadd( -10.0868, -82.2453, 17.4024, 1.92 ) }
    dend_2 { pt3dadd( -10.0279, -83.7663, 18.0304, 1.92 ) }
    dend_2 { pt3dadd( -9.9376, -85.2064, 18.5882, 1.77 ) }
    dend_2 { pt3dadd( -9.93124, -85.3013, 18.6204, 1.77 ) }
    dend_2 { pt3dadd( -9.77869, -87.3011, 19.2024, 1.62 ) }
    dend_2 { pt3dadd( -9.66181, -88.9268, 19.575, 1.33 ) }
    dend_2 { pt3dadd( -9.54882, -90.4654, 19.8446, 1.18 ) }
    dend_2 { pt3dadd( -9.45363, -91.9386, 20.0677, 1.18 ) }
    dend_2 { pt3dadd( -9.35768, -93.6133, 20.2874, 1.55 ) }
    dend_2 { pt3dadd( -9.27975, -95.6837, 20.4856, 1.62 ) }
    dend_2 { pt3dadd( -9.26904, -97.4947, 20.5881, 2.14 ) }
    dend_2 { pt3dadd( -9.29961, -98.8702, 20.6339, 2.36 ) }
    dend_2 { pt3dadd( -9.35166, -100.175, 20.6614, 2.58 ) }
    dend_2 { pt3dadd( -9.39881, -101.144, 20.6858, 3.02 ) }
    dend_2 { pt3dadd( -9.53891, -103.455, 20.8003, 2.21 ) }
    dend_2 { pt3dadd( -9.65924, -105.486, 20.9672, 1.77 ) }
    dend_2 { pt3dadd( -9.76011, -107.314, 21.1817, 1.77 ) }
    dend_2 { pt3dadd( -9.84933, -109.332, 21.5088, 1.84 ) }
    dend_2 { pt3dadd( -9.92681, -111.674, 22.0641, 1.84 ) }
    dend_2 { pt3dadd( -9.97351, -114.017, 22.7975, 1.18 ) }
    dend_2 { pt3dadd( -9.96431, -116.418, 23.7587, 0.96 ) }
    dend_2 { pt3dadd( -9.96441, -116.51, 23.8062, 0.96 ) }
    dend_2 { pt3dadd( -10.0068, -118.038, 24.8582, 1.33 ) }
    dend_2 { pt3dadd( -10.0797, -119.531, 26.1117, 1.84 ) }
    dend_2 { pt3dadd( -10.1798, -120.673, 27.165, 1.84 ) }
    dend_2 { pt3dadd( -10.3007, -121.793, 28.1809, 1.77 ) }
    dend_2 { pt3dadd( -10.5429, -123.881, 29.8963, 1.69 ) }
    dend_2 { pt3dadd( -10.7388, -125.926, 31.2761, 0.74 ) }
    dend_2 { pt3dadd( -10.8346, -127.143, 31.8982, 0.74 ) }
    dend_2 { pt3dadd( -10.9261, -128.696, 32.5028, 1.18 ) }
    dend_2 { pt3dadd( -10.98, -130.193, 32.9205, 1.47 ) }
    dend_2 { pt3dadd( -10.9834, -131.695, 33.1112, 1.62 ) }
    dend_2 { pt3dadd( -10.9407, -132.845, 33.0655, 1.92 ) }
    dend_2 { pt3dadd( -10.9134, -133.771, 32.9578, 1.92 ) }
    dend_2 { pt3dadd( -10.9131, -133.855, 32.9481, 1.92 ) }
    dend_2 { pt3dadd( -10.9384, -134.967, 32.8475, 1.92 ) }
    dend_2 { pt3dadd( -11.0413, -136.565, 32.7682, 1.33 ) }
    dend_2 { pt3dadd( -11.2065, -138.139, 32.7017, 1.47 ) }
    dend_2 { pt3dadd( -11.396, -139.735, 32.6481, 1.92 ) }
    dend_2 { pt3dadd( -11.5254, -140.908, 32.6274, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -11.6846, -142.48, 32.6352, 1.99 ) }
    dend_2 { pt3dadd( -11.8311, -144.429, 32.7146, 1.99 ) }
    dend_2 { pt3dadd( -11.9206, -146.668, 32.8836, 1.99 ) }
    dend_2 { pt3dadd( -11.9232, -147.197, 32.9468, 2.36 ) }
    dend_2 { pt3dadd( -11.8938, -148.457, 33.1165, 1.62 ) }
    dend_2 { pt3dadd( -11.8328, -149.788, 33.317, 1.25 ) }
    dend_2 { pt3dadd( -11.7243, -151.438, 33.5873, 1.11 ) }
    dend_2 { pt3dadd( -11.6438, -152.834, 33.813, 0.81 ) }
    dend_2 { pt3dadd( -11.5827, -154.651, 34.1089, 0.66 ) }
    dend_2 { pt3dadd( -11.6077, -156.227, 34.3321, 1.55 ) }
    dend_2 { pt3dadd( -11.6135, -156.33, 34.345, 1.55 ) }
    dend_2 { pt3dadd( -11.7141, -157.165, 34.4933, 2.21 ) }
    dend_2 { pt3dadd( -11.9162, -158.327, 34.7467, 1.92 ) }
    dend_2 { pt3dadd( -12.2114, -159.85, 35.1364, 1.62 ) }
    dend_2 { pt3dadd( -12.5029, -161.253, 35.5443, 1.4 ) }
    dend_2 { pt3dadd( -12.8496, -162.786, 36.1227, 1.4 ) }
    dend_2 { pt3dadd( -13.4252, -165.182, 37.1504, 1.33 ) }
    dend_2 { pt3dadd( -13.6944, -166.352, 37.7114, 0.96 ) }
    dend_2 { pt3dadd( -14.0443, -168.106, 38.6338, 0.74 ) }
    dend_2 { pt3dadd( -14.0626, -168.211, 38.6959, 0.74 ) }
    dend_2 { pt3dadd( -14.3614, -170.569, 40.2495, 0.66 ) }
    dend_2 { pt3dadd( -14.3631, -170.646, 40.3114, 0.66 ) }
    dend_2 { pt3dadd( -14.2162, -172.164, 41.6598, 1.69 ) }
    dend_2 { pt3dadd( -14.105, -173.003, 42.4408, 2.21 ) }
    dend_2 { pt3dadd( -13.9297, -174.321, 43.6318, 3.02 ) }
    dend_2 { pt3dadd( -13.8322, -175.195, 44.3457, 3.02 ) }
    dend_2 { pt3dadd( -13.5836, -178.038, 46.3529, 0.52 ) }
    dend_2 { pt3dadd( -13.5565, -179.128, 46.9651, 0.52 ) }
    dend_2 { pt3dadd( -13.6105, -180.516, 47.5476, 2.36 ) }
    dend_2 { pt3dadd( -13.7162, -181.855, 47.9287, 3.09 ) }
    dend_2 { pt3dadd( -13.7871, -182.512, 48.0327, 3.24 ) }
    dend_2 { pt3dadd( -13.9698, -183.86, 48.1445, 3.02 ) }
    dend_2 { pt3dadd( -14.4345, -186.871, 48.1764, 1.11 ) }
    dend_2 { pt3dadd( -14.6564, -188.446, 48.2084, 0.96 ) }
    dend_2 { pt3dadd( -14.7874, -189.603, 48.2507, 1.25 ) }
    dend_2 { pt3dadd( -14.9253, -191.181, 48.377, 1.18 ) }
    dend_2 { pt3dadd( -14.9992, -192.364, 48.531, 0.52 ) }
    dend_2 { pt3dadd( -15.0022, -192.466, 48.5514, 0.52 ) }
    dend_2 { pt3dadd( -14.9589, -193.537, 48.9104, 1.4 ) }
    dend_2 { pt3dadd( -14.9472, -193.615, 48.9428, 1.4 ) }
    dend_2 { pt3dadd( -14.5923, -194.907, 49.5603, 2.14 ) }
    dend_2 { pt3dadd( -14.2919, -195.805, 49.9961, 2.14 ) }
    dend_2 { pt3dadd( -14.0719, -196.461, 50.2881, 2.36 ) }
    dend_2 { pt3dadd( -13.69, -197.7, 50.7894, 1.33 ) }
    dend_2 { pt3dadd( -13.2616, -199.216, 51.3138, 0.81 ) }
    dend_2 { pt3dadd( -12.776, -201.152, 51.8514, 0.81 ) }
    dend_2 { pt3dadd( -12.377, -203.049, 52.2501, 0.81 ) }
    dend_2 { pt3dadd( -12.0345, -205.073, 52.6286, 1.62 ) }
    dend_2 { pt3dadd( -11.8813, -206.16, 52.8185, 1.92 ) }
    dend_2 { pt3dadd( -11.7092, -207.828, 53.1517, 1.25 ) }
    dend_2 { pt3dadd( -11.5895, -209.423, 53.5098, 0.96 ) }
    dend_2 { pt3dadd( -11.4695, -211.57, 54.0499, 0.96 ) }
    dend_2 { pt3dadd( -11.3482, -213.415, 54.6018, 0.88 ) }
    dend_2 { pt3dadd( -11.2135, -215.284, 55.2679, 1.62 ) }
    dend_2 { pt3dadd( -11.0207, -217.412, 56.1322, 1.84 ) }
    dend_2 { pt3dadd( -10.9461, -218.544, 56.6967, 1.92 ) }
    dend_2 { pt3dadd( -10.943, -218.643, 56.7533, 1.92 ) }
    dend_2 { pt3dadd( -10.9317, -220.109, 57.6498, 1.62 ) }
    dend_2 { pt3dadd( -10.9634, -221.925, 58.7591, 0.59 ) }
    dend_2 { pt3dadd( -11.0102, -223.345, 59.6041, 0.59 ) }
    dend_2 { pt3dadd( -11.0458, -225.494, 60.7844, 0.52 ) }
    dend_2 { pt3dadd( -11.0857, -226.913, 61.5883, 1.69 ) }
    dend_2 { pt3dadd( -11.1228, -227.83, 62.1141, 2.5 ) }
    dend_2 { pt3dadd( -11.1846, -228.637, 62.5859, 2.5 ) }
    dend_2 { pt3dadd( -11.2572, -229.605, 63.154, 2.5 ) }
    dend_2 { pt3dadd( -11.3258, -231.075, 63.9494, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.15861, 105.347, -19.659, 0.59 ) }
    dend_67 { pt3dadd( -10.3286, 106.605, -20.4244, 0.59 ) }
    dend_67 { pt3dadd( -11.2121, 107.754, -21.1485, 0.44 ) }
    dend_67 { pt3dadd( -11.1681, 107.942, -22.041, 0.74 ) }
    dend_67 { pt3dadd( -11.0835, 108.258, -23.4376, 0.74 ) }
    dend_67 { pt3dadd( -11.0781, 108.307, -23.6497, 0.74 ) }
    dend_67 { pt3dadd( -11.0954, 108.579, -24.7235, 0.88 ) }
    dend_67 { pt3dadd( -11.096, 108.601, -24.819, 0.88 ) }
    dend_67 { pt3dadd( -11.2464, 110.459, -32.4544, 1.62 ) }
    dend_67 { pt3dadd( -11.3729, 110.98, -34.614, 1.4 ) }
    dend_67 { pt3dadd( -11.6139, 111.492, -36.8495, 0.37 ) }
    dend_67 { pt3dadd( -11.8036, 111.766, -38.0586, 0.74 ) }
    dend_67 { pt3dadd( -12.3524, 112.361, -40.5721, 0.29 ) }
    dend_67 { pt3dadd( -12.6342, 112.631, -41.475, 1.4 ) }
    dend_67 { pt3dadd( -13.0086, 112.945, -42.2096, 1.84 ) }
    dend_67 { pt3dadd( -14.2963, 113.978, -44.9514, 0.44 ) }
    dend_67 { pt3dadd( -14.4982, 114.163, -45.4212, 0.29 ) }
    dend_67 { pt3dadd( -14.8242, 114.456, -46.2072, 0.29 ) }
    dend_67 { pt3dadd( -15.144, 114.742, -46.9412, 0.59 ) }
    dend_67 { pt3dadd( -16.2346, 115.792, -49.5658, 0.44 ) }
    dend_67 { pt3dadd( -16.6119, 116.204, -50.4152, 0.22 ) }
    dend_67 { pt3dadd( -16.9165, 116.576, -51.0095, 0.74 ) }
    dend_67 { pt3dadd( -17.4118, 117.245, -52.0847, 0.15 ) }
    dend_67 { pt3dadd( -17.4897, 117.353, -52.2562, 0.15 ) }
    dend_67 { pt3dadd( -17.6775, 117.621, -52.6422, 0.15 ) }
    dend_67 { pt3dadd( -18.401, 118.694, -53.907, 1.47 ) }
    dend_67 { pt3dadd( -18.7789, 119.252, -54.5338, 1.62 ) }
    dend_67 { pt3dadd( -20.1894, 121.279, -56.9575, 0.22 ) }
    dend_67 { pt3dadd( -20.2306, 121.339, -57.0309, 0.22 ) }
    dend_67 { pt3dadd( -20.7465, 122.04, -57.9326, 0.22 ) }
    dend_67 { pt3dadd( -21.4312, 122.912, -59.1083, 1.25 ) }
    dend_67 { pt3dadd( -21.7453, 123.328, -59.7221, 1.4 ) }
    dend_67 { pt3dadd( -22.6889, 124.646, -61.6662, 0.22 ) }
    dend_67 { pt3dadd( -22.746, 124.737, -61.7985, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -23.4411, 126.007, -63.6802, 1.47 ) }
    dend_67 { pt3dadd( -23.6351, 126.409, -64.2543, 1.99 ) }
    dend_67 { pt3dadd( -24.5744, 128.682, -67.2611, 0.37 ) }
    dend_67 { pt3dadd( -24.7951, 129.295, -67.9974, 0.29 ) }
    dend_67 { pt3dadd( -25.143, 130.363, -69.1505, 1.18 ) }
    dend_67 { pt3dadd( -25.5212, 131.601, -70.3881, 0.52 ) }
    dend_67 { pt3dadd( -25.8313, 132.795, -71.4413, 1.55 ) }
    dend_67 { pt3dadd( -25.935, 133.228, -71.78, 1.84 ) }
    dend_67 { pt3dadd( -26.5325, 135.837, -73.4219, 0.22 ) }
    dend_67 { pt3dadd( -26.5476, 135.923, -73.4738, 0.22 ) }
    dend_67 { pt3dadd( -26.6397, 136.7, -73.8841, 0.22 ) }
    dend_67 { pt3dadd( -26.6348, 137.637, -74.3171, 1.4 ) }
    dend_67 { pt3dadd( -26.6259, 137.744, -74.364, 1.4 ) }
    dend_67 { pt3dadd( -26.5572, 138.353, -74.6006, 1.4 ) }
    dend_67 { pt3dadd( -26.1792, 140.653, -75.4491, 0.15 ) }
    dend_67 { pt3dadd( -26.0129, 141.621, -75.8388, 0.74 ) }
    dend_67 { pt3dadd( -25.6, 143.862, -76.8049, 0.15 ) }
    dend_67 { pt3dadd( -25.4444, 144.647, -77.1572, 0.74 ) }
    dend_67 { pt3dadd( -25.3545, 145.037, -77.3324, 0.88 ) }
    dend_67 { pt3dadd( -24.8149, 146.993, -78.1792, 0.15 ) }
    dend_67 { pt3dadd( -24.7881, 147.068, -78.2149, 0.15 ) }
    dend_67 { pt3dadd( -24.5454, 147.634, -78.5287, 0.37 ) }
    dend_67 { pt3dadd( -24.4559, 147.761, -78.6615, 0.37 ) }
    dend_67 { pt3dadd( -23.8591, 148.312, -79.5811, 0.22 ) }
    dend_67 { pt3dadd( -23.348, 148.715, -80.3736, 0.59 ) }
    dend_67 { pt3dadd( -21.9608, 149.578, -82.5426, 1.69 ) }
    dend_67 { pt3dadd( -21.8092, 149.66, -82.7883, 1.69 ) }
    dend_67 { pt3dadd( -19.4395, 150.637, -86.8569, 0.22 ) }
    dend_67 { pt3dadd( -18.9919, 150.755, -87.6645, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.15861, 105.347, -19.659, 2.65 ) }
    dend_28 { pt3dadd( -9.07964, 106.361, -19.1194, 2.65 ) }
    dend_28 { pt3dadd( -9.05826, 107.514, -18.6322, 2.06 ) }
    dend_28 { pt3dadd( -9.10002, 109.562, -17.9063, 1.92 ) }
    dend_28 { pt3dadd( -9.103, 109.627, -17.8858, 1.92 ) }
    dend_28 { pt3dadd( -9.19625, 110.803, -17.5558, 0.74 ) }
    dend_28 { pt3dadd( -9.35998, 112.513, -17.1138, 0.52 ) }
    dend_28 { pt3dadd( -9.56941, 113.863, -16.8152, 0.52 ) }
    dend_28 { pt3dadd( -9.68936, 114.505, -16.7233, 0.52 ) }
    dend_28 { pt3dadd( -9.73801, 114.775, -16.7178, 0.52 ) }
    dend_28 { pt3dadd( -9.86654, 115.624, -16.715, 0.52 ) }
    dend_28 { pt3dadd( -9.88091, 115.756, -16.7171, 0.52 ) }
    dend_28 { pt3dadd( -9.9253, 116.73, -16.7529, 0.44 ) }
    dend_28 { pt3dadd( -9.93217, 117.503, -16.7495, 0.44 ) }
    dend_28 { pt3dadd( -9.89516, 118.978, -16.7279, 1.84 ) }
    dend_28 { pt3dadd( -9.85088, 120.187, -16.6712, 2.73 ) }
    dend_28 { pt3dadd( -9.82373, 120.83, -16.6242, 3.54 ) }
    dend_28 { pt3dadd( -9.79551, 121.679, -16.5461, 3.9 ) }
    dend_28 { pt3dadd( -9.78245, 122.356, -16.4694, 4.05 ) }
    dend_28 { pt3dadd( -9.78705, 122.995, -16.4008, 3.9 ) }
    dend_28 { pt3dadd( -9.8393, 124.173, -16.2887, 3.61 ) }
    dend_28 { pt3dadd( -9.91755, 124.998, -16.2124, 2.8 ) }
    dend_28 { pt3dadd( -10.0358, 125.922, -16.1368, 1.69 ) }
    dend_28 { pt3dadd( -10.189, 127.009, -16.0507, 1.11 ) }
    dend_28 { pt3dadd( -10.3773, 128.23, -15.9637, 0.81 ) }
    dend_28 { pt3dadd( -10.4895, 128.895, -15.9274, 0.66 ) }
    dend_28 { pt3dadd( -10.7324, 130.3, -15.8995, 0.52 ) }
    dend_28 { pt3dadd( -10.9685, 131.528, -15.8724, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -63.9422, -61.0269, 20.6969, 0.37 ) }
    dend_20 { pt3dadd( -72.1602, -65.725, 21.2303, 0.37 ) }
    dend_20 { pt3dadd( -79.4423, -71.4578, 23.6139, 0.37 ) }
    dend_20 { pt3dadd( -87.6566, -75.8936, 25.3379, 0.37 ) }
    dend_20 { pt3dadd( -95.813, -79.3431, 28.7392, 0.37 ) }
    dend_20 { pt3dadd( -104.057, -83.8152, 30.185, 0.37 ) }
    dend_20 { pt3dadd( -112.557, -87.7261, 31.6331, 0.37 ) }
    dend_20 { pt3dadd( -119.864, -93.559, 33.6561, 0.37 ) }
    dend_20 { pt3dadd( -127.594, -99.0662, 33.332, 0.37 ) }
    dend_20 { pt3dadd( -135.056, -103.924, 30.2228, 0.37 ) }
    dend_20 { pt3dadd( -141.953, -109.282, 26.6436, 0.37 ) }
    dend_20 { pt3dadd( -149.844, -112.804, 22.9439, 0.37 ) }
    dend_20 { pt3dadd( -157.7, -116.134, 19.0073, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -63.9422, -61.0269, 20.6969, 0.29 ) }
    dend_19 { pt3dadd( -72.5893, -65.5689, 21.9573, 0.37 ) }
    dend_19 { pt3dadd( -80.8496, -70.3826, 24.418, 0.37 ) }
    dend_19 { pt3dadd( -88.5168, -76.5107, 25.9154, 0.37 ) }
    dend_19 { pt3dadd( -95.6287, -83.4654, 26.5373, 0.37 ) }
    dend_19 { pt3dadd( -102.491, -90.708, 26.7029, 0.37 ) }
    dend_19 { pt3dadd( -109.587, -97.5356, 28.2714, 0.37 ) }
    dend_19 { pt3dadd( -115.767, -105.279, 29.8673, 0.37 ) }
    dend_19 { pt3dadd( -120.77, -114.015, 30.6275, 0.37 ) }
    dend_19 { pt3dadd( -126.526, -122.091, 29.2516, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -74.2221, -23.772, 29.9386, 0.37 ) }
    dend_17 { pt3dadd( -83.2979, -18.8811, 30.5115, 0.37 ) }
    dend_17 { pt3dadd( -92.6497, -14.5055, 30.445, 0.37 ) }
    dend_17 { pt3dadd( -101.806, -10.0042, 28.5507, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -74.2221, -23.772, 29.9386, 0.29 ) }
    dend_16 { pt3dadd( -82.6933, -18.1161, 34.367, 0.37 ) }
    dend_16 { pt3dadd( -90.7224, -11.8119, 38.7932, 0.37 ) }
    dend_16 { pt3dadd( -97.8216, -6.57787, 45.4852, 0.37 ) }
    dend_16 { pt3dadd( -104.577, -2.35743, 53.1457, 0.37 ) }
    dend_16 { pt3dadd( -111.909, 0.490286, 60.9019, 0.37 ) }
    dend_16 { pt3dadd( -120.119, 3.60055, 67.6069, 0.37 ) }
    dend_16 { pt3dadd( -128.824, 6.58738, 73.7199, 0.37 ) }
    dend_16 { pt3dadd( -137.394, 9.87877, 79.8702, 0.37 ) }
    dend_16 { pt3dadd( -146.311, 14.3354, 84.6924, 0.37 ) }
    dend_16 { pt3dadd( -155.368, 18.7532, 89.287, 0.37 ) }
    dend_16 { pt3dadd( -163.993, 23.4172, 94.4366, 0.37 ) }
    dend_16 { pt3dadd( -172.08, 27.1179, 100.998, 0.37 ) }
    dend_16 { pt3dadd( -180.315, 31.3979, 107.015, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.38598, -38.2092, 0.325473, 0.59 ) }
    dend_13 { pt3dadd( -9.93763, -38.7921, -0.0124579, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -10.8995, -39.5324, -0.483654, 0.44 ) }
    dend_13 { pt3dadd( -11.9874, -40.0801, -1.00255, 0.29 ) }
    dend_13 { pt3dadd( -12.5829, -40.3018, -1.24825, 0.22 ) }
    dend_13 { pt3dadd( -13.3208, -40.5565, -1.52703, 0.29 ) }
    dend_13 { pt3dadd( -14.2082, -40.8611, -1.83971, 0.29 ) }
    dend_13 { pt3dadd( -15.3291, -41.1933, -2.16478, 0.29 ) }
    dend_13 { pt3dadd( -16.6066, -41.5572, -2.52194, 0.29 ) }
    dend_13 { pt3dadd( -17.5911, -41.8774, -2.80434, 0.29 ) }
    dend_13 { pt3dadd( -18.868, -42.3963, -3.20621, 1.25 ) }
    dend_13 { pt3dadd( -19.2506, -42.6045, -3.34013, 1.77 ) }
    dend_13 { pt3dadd( -19.8297, -43.0235, -3.56767, 1.77 ) }
    dend_13 { pt3dadd( -21.4295, -44.4276, -4.23236, 1.11 ) }
    dend_13 { pt3dadd( -22.3038, -45.3355, -4.63202, 0.52 ) }
    dend_13 { pt3dadd( -22.9057, -46.0405, -4.97986, 0.37 ) }
    dend_13 { pt3dadd( -23.6699, -47.0243, -5.53342, 0.37 ) }
    dend_13 { pt3dadd( -24.2016, -47.7647, -5.98031, 0.37 ) }
    dend_13 { pt3dadd( -24.2893, -47.8908, -6.05959, 0.37 ) }
    dend_13 { pt3dadd( -25.0102, -48.9357, -6.71055, 1.25 ) }
    dend_13 { pt3dadd( -25.4971, -49.5594, -7.1593, 1.18 ) }
    dend_13 { pt3dadd( -26.4166, -50.516, -7.91405, 0.29 ) }
    dend_13 { pt3dadd( -26.867, -50.8629, -8.19569, 0.22 ) }
    dend_13 { pt3dadd( -27.4968, -51.2822, -8.48811, 0.22 ) }
    dend_13 { pt3dadd( -27.9922, -51.6082, -8.65618, 0.44 ) }
    dend_13 { pt3dadd( -28.5013, -51.9287, -8.76098, 0.44 ) }
    dend_13 { pt3dadd( -29.0237, -52.263, -8.80871, 0.29 ) }
    dend_13 { pt3dadd( -29.5635, -52.5958, -8.84342, 0.29 ) }
    dend_13 { pt3dadd( -30.3746, -53.0892, -8.99871, 0.37 ) }
    dend_13 { pt3dadd( -31.0146, -53.4893, -9.17213, 0.37 ) }
    dend_13 { pt3dadd( -31.7514, -53.9126, -9.41032, 0.29 ) }
    dend_13 { pt3dadd( -33.0982, -54.5939, -9.91084, 1.18 ) }
    dend_13 { pt3dadd( -34.0946, -55.0675, -10.2924, 1.99 ) }
    dend_13 { pt3dadd( -35.0737, -55.4936, -10.6675, 2.28 ) }
    dend_13 { pt3dadd( -35.6795, -55.7459, -10.8898, 1.99 ) }
    dend_13 { pt3dadd( -37.2027, -56.4314, -11.4309, 0.59 ) }
    dend_13 { pt3dadd( -38.2037, -56.9867, -11.7746, 0.37 ) }
    dend_13 { pt3dadd( -38.9391, -57.5433, -12.0421, 0.37 ) }
    dend_13 { pt3dadd( -39.7295, -58.2258, -12.3283, 1.11 ) }
    dend_13 { pt3dadd( -40.2741, -58.7197, -12.511, 1.69 ) }
    dend_13 { pt3dadd( -40.858, -59.2754, -12.714, 1.84 ) }
    dend_13 { pt3dadd( -41.63, -60.0382, -12.9634, 1.4 ) }
    dend_13 { pt3dadd( -42.9344, -61.2428, -13.325, 0.44 ) }
    dend_13 { pt3dadd( -43.6316, -61.8228, -13.5086, 0.44 ) }
    dend_13 { pt3dadd( -44.5047, -62.4959, -13.7118, 0.37 ) }
    dend_13 { pt3dadd( -45.2774, -63.0333, -13.8778, 1.18 ) }
    dend_13 { pt3dadd( -45.9486, -63.4854, -14.0126, 1.62 ) }
    dend_13 { pt3dadd( -46.6442, -63.9959, -14.1427, 1.03 ) }
    dend_13 { pt3dadd( -46.7128, -64.0573, -14.159, 1.03 ) }
    dend_13 { pt3dadd( -47.0645, -64.4551, -14.2847, 0.88 ) }
    dend_13 { pt3dadd( -47.6467, -65.1928, -14.5678, 0.44 ) }
    dend_13 { pt3dadd( -48.2542, -65.9807, -14.8974, 0.29 ) }
    dend_13 { pt3dadd( -48.7969, -66.7058, -15.22, 0.29 ) }
    dend_13 { pt3dadd( -49.7801, -68.0298, -15.8273, 1.92 ) }
    dend_13 { pt3dadd( -50.4494, -68.941, -16.2409, 2.73 ) }
    dend_13 { pt3dadd( -51.1276, -69.8725, -16.6738, 2.65 ) }
    dend_13 { pt3dadd( -52.449, -71.6222, -17.494, 0.66 ) }
    dend_13 { pt3dadd( -52.5121, -71.7002, -17.5317, 0.66 ) }
    dend_13 { pt3dadd( -53.4857, -72.8449, -18.0878, 0.29 ) }
    dend_13 { pt3dadd( -53.9154, -73.3412, -18.3089, 0.29 ) }
    dend_13 { pt3dadd( -54.4479, -73.944, -18.5842, 0.29 ) }
    dend_13 { pt3dadd( -55.0745, -74.6632, -18.968, 0.29 ) }
    dend_13 { pt3dadd( -55.6603, -75.3243, -19.3753, 1.11 ) }
    dend_13 { pt3dadd( -55.7237, -75.3975, -19.4205, 1.11 ) }
    dend_13 { pt3dadd( -56.2461, -76.0092, -19.7895, 1.25 ) }
    dend_13 { pt3dadd( -56.9137, -76.7961, -20.2451, 0.96 ) }
    dend_13 { pt3dadd( -58.0421, -78.2959, -20.9581, 0.37 ) }
    dend_13 { pt3dadd( -58.0907, -78.3697, -20.9912, 0.37 ) }
    dend_13 { pt3dadd( -58.617, -79.2028, -21.335, 0.22 ) }
    dend_13 { pt3dadd( -58.9683, -79.7703, -21.5459, 0.22 ) }
    dend_13 { pt3dadd( -59.0727, -79.9298, -21.6078, 0.66 ) }
    dend_13 { pt3dadd( -59.8004, -81.0209, -21.9958, 0.52 ) }
    dend_13 { pt3dadd( -60.9923, -82.7824, -22.5944, 1.77 ) }
    dend_13 { pt3dadd( -61.8485, -84.0335, -23.0197, 2.58 ) }
    dend_13 { pt3dadd( -62.5797, -85.0769, -23.3777, 2.58 ) }
    dend_13 { pt3dadd( -63.9944, -87.0696, -24.0468, 0.44 ) }
    dend_13 { pt3dadd( -64.7418, -88.0984, -24.3681, 0.29 ) }
    dend_13 { pt3dadd( -64.8069, -88.1839, -24.3912, 0.29 ) }
    dend_13 { pt3dadd( -65.2963, -88.8296, -24.5072, 0.29 ) }
    dend_13 { pt3dadd( -66.0347, -89.8354, -24.6467, 1.47 ) }
    dend_13 { pt3dadd( -66.4271, -90.401, -24.6994, 1.84 ) }
    dend_13 { pt3dadd( -66.8922, -91.1898, -24.7248, 1.47 ) }
    dend_13 { pt3dadd( -68.0094, -93.2726, -24.7963, 0.29 ) }
    dend_13 { pt3dadd( -68.3965, -94.0671, -24.8215, 1.11 ) }
    dend_13 { pt3dadd( -68.6549, -94.6363, -24.8352, 1.25 ) }
    dend_13 { pt3dadd( -69.0122, -95.4919, -24.8446, 1.03 ) }
    dend_13 { pt3dadd( -69.4982, -96.7049, -24.8497, 0.22 ) }
    dend_13 { pt3dadd( -69.8143, -97.4898, -24.8394, 0.22 ) }
    dend_13 { pt3dadd( -70.0111, -97.975, -24.8193, 0.59 ) }
    dend_13 { pt3dadd( -70.3183, -98.6433, -24.7876, 0.74 ) }
    dend_13 { pt3dadd( -70.533, -99.0404, -24.7772, 0.37 ) }
    dend_13 { pt3dadd( -70.9748, -99.771, -24.7678, 0.22 ) }
    dend_13 { pt3dadd( -71.63, -100.757, -24.7592, 1.55 ) }
    dend_13 { pt3dadd( -72.2405, -101.669, -24.7579, 2.21 ) }
    dend_13 { pt3dadd( -72.5876, -102.186, -24.7568, 1.84 ) }
    dend_13 { pt3dadd( -73.6811, -103.808, -24.7477, 0.22 ) }
    dend_13 { pt3dadd( -74.2438, -104.628, -24.7378, 0.22 ) }
    dend_13 { pt3dadd( -74.8946, -105.523, -24.7161, 1.11 ) }
    dend_13 { pt3dadd( -75.2796, -106.027, -24.6957, 1.62 ) }
    dend_13 { pt3dadd( -75.7594, -106.62, -24.6558, 1.84 ) }
    dend_13 { pt3dadd( -76.4863, -107.497, -24.5765, 1.11 ) }
    dend_13 { pt3dadd( -76.8966, -107.989, -24.5222, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -77.9774, -109.281, -24.3889, 0.29 ) }
    dend_13 { pt3dadd( -78.5623, -109.986, -24.3214, 0.59 ) }
    dend_13 { pt3dadd( -79.931, -111.737, -24.1513, 0.29 ) }
    dend_13 { pt3dadd( -79.9886, -111.815, -24.1437, 0.29 ) }
    dend_13 { pt3dadd( -80.9074, -113.119, -24.0122, 1.18 ) }
    dend_13 { pt3dadd( -81.2568, -113.637, -23.9579, 1.55 ) }
    dend_13 { pt3dadd( -81.5794, -114.161, -23.9017, 1.55 ) }
    dend_13 { pt3dadd( -82.446, -115.641, -23.8137, 0.52 ) }
    dend_13 { pt3dadd( -83.1929, -116.994, -23.8178, 0.37 ) }
    dend_13 { pt3dadd( -83.2384, -117.08, -23.8234, 0.37 ) }
    dend_13 { pt3dadd( -83.7787, -118.189, -23.9444, 0.37 ) }
    dend_13 { pt3dadd( -84.2202, -119.128, -24.0749, 0.29 ) }
    dend_13 { pt3dadd( -85.0473, -120.936, -24.3791, 1.99 ) }
    dend_13 { pt3dadd( -85.4155, -121.764, -24.5432, 2.28 ) }
    dend_13 { pt3dadd( -86.2536, -123.759, -24.9309, 0.22 ) }
    dend_13 { pt3dadd( -86.7508, -124.921, -25.1292, 0.22 ) }
    dend_13 { pt3dadd( -86.9726, -125.455, -25.1859, 0.74 ) }
    dend_13 { pt3dadd( -87.0093, -125.546, -25.1893, 0.74 ) }
    dend_13 { pt3dadd( -87.3199, -126.37, -25.1605, 0.74 ) }
    dend_13 { pt3dadd( -87.7208, -127.495, -25.089, 0.22 ) }
    dend_13 { pt3dadd( -88.1873, -128.768, -24.9936, 0.22 ) }
    dend_13 { pt3dadd( -88.9631, -130.806, -24.8375, 2.14 ) }
    dend_13 { pt3dadd( -89.1391, -131.268, -24.8037, 2.36 ) }
    dend_13 { pt3dadd( -89.8049, -132.939, -24.6792, 0.29 ) }
    dend_13 { pt3dadd( -90.113, -133.671, -24.6136, 0.22 ) }
    dend_13 { pt3dadd( -90.5418, -134.6, -24.5176, 0.22 ) }
    dend_13 { pt3dadd( -91.0746, -135.684, -24.3918, 1.4 ) }
    dend_13 { pt3dadd( -91.3727, -136.269, -24.3243, 1.77 ) }
    dend_13 { pt3dadd( -91.7871, -137.111, -24.2132, 1.33 ) }
    dend_13 { pt3dadd( -92.4631, -138.67, -23.9914, 0.37 ) }
    dend_13 { pt3dadd( -92.8993, -139.792, -23.8446, 0.22 ) }
    dend_13 { pt3dadd( -93.155, -140.561, -23.7579, 0.22 ) }
    dend_13 { pt3dadd( -93.4547, -141.561, -23.6724, 0.81 ) }
    dend_13 { pt3dadd( -93.6194, -142.146, -23.6331, 0.81 ) }
    dend_13 { pt3dadd( -93.9856, -143.393, -23.5945, 0.22 ) }
    dend_13 { pt3dadd( -94.2434, -144.106, -23.608, 0.22 ) }
    dend_13 { pt3dadd( -94.5841, -144.879, -23.6347, 1.25 ) }
    dend_13 { pt3dadd( -94.8859, -145.44, -23.656, 1.77 ) }
    dend_13 { pt3dadd( -95.2462, -146.044, -23.6791, 1.77 ) }
    dend_13 { pt3dadd( -96.0431, -147.356, -23.7391, 0.44 ) }
    dend_13 { pt3dadd( -96.779, -148.546, -23.7935, 0.29 ) }
    dend_13 { pt3dadd( -97.4027, -149.571, -23.8532, 1.4 ) }
    dend_13 { pt3dadd( -97.7709, -150.175, -23.8891, 1.77 ) }
    dend_13 { pt3dadd( -98.0764, -150.693, -23.9226, 1.77 ) }
    dend_13 { pt3dadd( -98.9067, -152.165, -24.0172, 0.37 ) }
    dend_13 { pt3dadd( -99.4945, -153.288, -24.0812, 0.29 ) }
    dend_13 { pt3dadd( -100.115, -154.466, -24.1664, 0.22 ) }
    dend_13 { pt3dadd( -100.669, -155.427, -24.2537, 0.22 ) }
    dend_13 { pt3dadd( -101.367, -156.534, -24.361, 1.11 ) }
    dend_13 { pt3dadd( -101.635, -156.929, -24.3998, 1.4 ) }
    dend_13 { pt3dadd( -102.185, -157.725, -24.4794, 0.59 ) }
    dend_13 { pt3dadd( -102.799, -158.647, -24.5763, 0.22 ) }
    dend_13 { pt3dadd( -103.401, -159.591, -24.6745, 0.22 ) }
    dend_13 { pt3dadd( -104.015, -160.532, -24.7795, 1.11 ) }
    dend_13 { pt3dadd( -104.294, -160.934, -24.8212, 1.55 ) }
    dend_13 { pt3dadd( -104.706, -161.509, -24.8787, 1.33 ) }
    dend_13 { pt3dadd( -105.407, -162.463, -24.964, 0.59 ) }
    dend_13 { pt3dadd( -105.944, -163.244, -25.0108, 0.22 ) }
    dend_13 { pt3dadd( -106.274, -163.737, -25.0201, 0.66 ) }
    dend_13 { pt3dadd( -106.445, -163.982, -25.0134, 0.66 ) }
    dend_13 { pt3dadd( -106.619, -164.224, -24.9953, 0.66 ) }
    dend_13 { pt3dadd( -107.15, -164.957, -24.9289, 0.22 ) }
    dend_13 { pt3dadd( -107.73, -165.754, -24.7838, 0.22 ) }
    dend_13 { pt3dadd( -108.449, -166.742, -24.5449, 1.33 ) }
    dend_13 { pt3dadd( -108.765, -167.173, -24.4261, 1.62 ) }
    dend_13 { pt3dadd( -109.103, -167.627, -24.2916, 1.33 ) }
    dend_13 { pt3dadd( -110.174, -169.044, -23.8489, 0.29 ) }
    dend_13 { pt3dadd( -110.861, -169.894, -23.5745, 0.29 ) }
    dend_13 { pt3dadd( -111.451, -170.519, -23.3721, 0.29 ) }
    dend_13 { pt3dadd( -112.031, -171.052, -23.2102, 0.88 ) }
    dend_13 { pt3dadd( -112.438, -171.399, -23.1048, 0.88 ) }
    dend_13 { pt3dadd( -112.916, -171.776, -22.9914, 0.66 ) }
    dend_13 { pt3dadd( -113.767, -172.423, -22.8188, 0.15 ) }
    dend_13 { pt3dadd( -114.52, -173.052, -22.7482, 0.15 ) }
    dend_13 { pt3dadd( -115.229, -173.676, -22.7112, 0.15 ) }
    dend_13 { pt3dadd( -115.587, -173.983, -22.7058, 0.59 ) }
    dend_13 { pt3dadd( -115.662, -174.042, -22.6966, 0.59 ) }
    dend_13 { pt3dadd( -116.05, -174.35, -22.6201, 0.59 ) }
    dend_13 { pt3dadd( -116.684, -174.897, -22.4552, 0.22 ) }
    dend_13 { pt3dadd( -116.763, -174.978, -22.4327, 0.22 ) }
    dend_13 { pt3dadd( -117.643, -175.892, -22.1808, 0.22 ) }
    dend_13 { pt3dadd( -118.967, -177.317, -21.8015, 1.77 ) }
    dend_13 { pt3dadd( -119.434, -177.831, -21.6675, 2.14 ) }
    dend_13 { pt3dadd( -120.035, -178.493, -21.5078, 1.47 ) }
    dend_13 { pt3dadd( -121.158, -179.816, -21.2678, 0.37 ) }
    dend_13 { pt3dadd( -122.079, -180.992, -21.1264, 0.22 ) }
    dend_13 { pt3dadd( -122.561, -181.708, -21.0975, 0.81 ) }
    dend_13 { pt3dadd( -122.823, -182.131, -21.118, 0.96 ) }
    dend_13 { pt3dadd( -123.242, -182.816, -21.1816, 0.96 ) }
    dend_13 { pt3dadd( -123.961, -184.051, -21.352, 0.22 ) }
    dend_13 { pt3dadd( -124.007, -184.133, -21.3664, 0.22 ) }
    dend_13 { pt3dadd( -124.457, -185.002, -21.5435, 0.22 ) }
    dend_13 { pt3dadd( -124.944, -185.986, -21.7393, 0.22 ) }
    dend_13 { pt3dadd( -125.249, -186.666, -21.8972, 0.96 ) }
    dend_13 { pt3dadd( -125.512, -187.266, -22.0357, 1.33 ) }
    dend_13 { pt3dadd( -125.864, -188.017, -22.2062, 1.11 ) }
    dend_13 { pt3dadd( -126.445, -189.112, -22.5139, 0.22 ) }
    dend_13 { pt3dadd( -126.744, -189.608, -22.669, 0.59 ) }
    dend_13 { pt3dadd( -127.582, -190.958, -23.0697, 0.22 ) }
    dend_13 { pt3dadd( -128.212, -191.946, -23.3414, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -128.641, -192.58, -23.5245, 1.4 ) }
    dend_13 { pt3dadd( -129.696, -194.047, -23.933, 0.22 ) }
    dend_13 { pt3dadd( -130.313, -194.839, -24.1278, 0.22 ) }
    dend_13 { pt3dadd( -131.012, -195.715, -24.3076, 1.99 ) }
    dend_13 { pt3dadd( -131.55, -196.368, -24.4071, 2.5 ) }
    dend_13 { pt3dadd( -132.112, -197.058, -24.5031, 2.43 ) }
    dend_13 { pt3dadd( -133.558, -198.865, -24.6805, 0.22 ) }
    dend_13 { pt3dadd( -134.092, -199.559, -24.7077, 0.29 ) }
    dend_13 { pt3dadd( -134.832, -200.528, -24.7363, 0.22 ) }
    dend_13 { pt3dadd( -135.251, -201.097, -24.7453, 0.74 ) }
    dend_13 { pt3dadd( -135.444, -201.387, -24.7289, 0.74 ) }
    dend_13 { pt3dadd( -136.079, -202.494, -24.5924, 0.15 ) }
    dend_13 { pt3dadd( -136.486, -203.41, -24.4767, 0.15 ) }
    dend_13 { pt3dadd( -136.593, -203.697, -24.4536, 0.81 ) }
    dend_13 { pt3dadd( -136.927, -204.633, -24.427, 1.33 ) }
    dend_13 { pt3dadd( -137.253, -205.57, -24.4342, 1.33 ) }
    dend_13 { pt3dadd( -137.284, -205.659, -24.4372, 1.33 ) }
    dend_13 { pt3dadd( -137.787, -207.036, -24.6036, 0.22 ) }
    dend_13 { pt3dadd( -138.339, -208.545, -24.8718, 0.22 ) }
    dend_13 { pt3dadd( -138.762, -209.732, -25.1379, 1.62 ) }
    dend_13 { pt3dadd( -139.049, -210.503, -25.3359, 1.92 ) }
    dend_13 { pt3dadd( -139.294, -211.153, -25.5175, 1.92 ) }
    dend_13 { pt3dadd( -139.927, -212.896, -25.9913, 0.22 ) }
    dend_13 { pt3dadd( -140.277, -213.894, -26.2541, 0.22 ) }
    dend_13 { pt3dadd( -140.662, -215.099, -26.5992, 0.22 ) }
    dend_13 { pt3dadd( -140.983, -216.142, -26.9125, 1.25 ) }
    dend_13 { pt3dadd( -141.16, -216.644, -27.0629, 1.62 ) }
    dend_13 { pt3dadd( -141.421, -217.273, -27.2269, 1.62 ) }
    dend_13 { pt3dadd( -141.508, -217.455, -27.2672, 1.62 ) }
    dend_13 { pt3dadd( -142.617, -219.43, -27.7506, 0.22 ) }
    dend_13 { pt3dadd( -142.716, -219.602, -27.8028, 0.22 ) }
    dend_13 { pt3dadd( -143.269, -220.631, -28.1544, 0.22 ) }
    dend_13 { pt3dadd( -143.861, -221.777, -28.5644, 0.22 ) }
    dend_13 { pt3dadd( -144.319, -222.638, -28.8685, 1.03 ) }
    dend_13 { pt3dadd( -144.547, -223.063, -29.0152, 1.03 ) }
    dend_13 { pt3dadd( -145.265, -224.382, -29.4508, 0.22 ) }
    dend_13 { pt3dadd( -145.585, -224.985, -29.6528, 0.59 ) }
    dend_13 { pt3dadd( -146.025, -225.906, -29.9601, 0.22 ) }
    dend_13 { pt3dadd( -146.338, -226.587, -30.1616, 0.22 ) }
    dend_13 { pt3dadd( -146.72, -227.494, -30.3734, 1.25 ) }
    dend_13 { pt3dadd( -146.933, -228.019, -30.4791, 1.62 ) }
    dend_13 { pt3dadd( -146.996, -228.18, -30.5064, 1.62 ) }
    dend_13 { pt3dadd( -147.654, -229.836, -30.806, 0.15 ) }
    dend_13 { pt3dadd( -148.061, -230.941, -31.0128, 1.25 ) }
    dend_13 { pt3dadd( -148.212, -231.394, -31.1, 1.25 ) }
    dend_13 { pt3dadd( -148.715, -232.833, -31.3934, 0.22 ) }
    dend_13 { pt3dadd( -148.752, -232.919, -31.4128, 0.22 ) }
    dend_13 { pt3dadd( -149.137, -233.645, -31.5862, 0.74 ) }
    dend_13 { pt3dadd( -149.183, -233.713, -31.6052, 0.74 ) }
    dend_13 { pt3dadd( -149.416, -234.038, -31.6796, 0.74 ) }
    dend_13 { pt3dadd( -150.304, -235.285, -31.8895, 0.15 ) }
    dend_13 { pt3dadd( -150.992, -236.304, -31.9988, 1.11 ) }
    dend_13 { pt3dadd( -151.112, -236.487, -32.0187, 1.11 ) }
    dend_13 { pt3dadd( -151.17, -236.581, -32.0282, 1.11 ) }
    dend_13 { pt3dadd( -152.689, -238.913, -32.2624, 0.22 ) }
    dend_13 { pt3dadd( -153.162, -239.616, -32.3358, 1.03 ) }
    dend_13 { pt3dadd( -153.544, -240.174, -32.3916, 1.11 ) }
    dend_13 { pt3dadd( -154.73, -241.822, -32.5786, 0.22 ) }
    dend_13 { pt3dadd( -154.923, -242.078, -32.612, 0.59 ) }
    dend_13 { pt3dadd( -155.853, -243.233, -32.7525, 0.22 ) }
    dend_13 { pt3dadd( -156.321, -243.769, -32.8147, 1.33 ) }
    dend_13 { pt3dadd( -156.718, -244.208, -32.8433, 1.55 ) }
    dend_13 { pt3dadd( -157.338, -244.854, -32.8386, 0.88 ) }
    dend_13 { pt3dadd( -158.595, -246.171, -32.7503, 0.22 ) }
    dend_13 { pt3dadd( -159.154, -246.768, -32.7005, 0.66 ) }
    dend_13 { pt3dadd( -159.424, -247.042, -32.7064, 0.66 ) }
    dend_13 { pt3dadd( -160.463, -248.047, -32.8017, 0.22 ) }
    dend_13 { pt3dadd( -161.468, -248.993, -32.9602, 1.62 ) }
    dend_13 { pt3dadd( -162.232, -249.69, -33.1399, 2.06 ) }
    dend_13 { pt3dadd( -162.902, -250.267, -33.3361, 2.06 ) }
    dend_13 { pt3dadd( -165.25, -252.296, -34.0944, 0.22 ) }
    dend_13 { pt3dadd( -165.25, -252.296, -34.0944, 0.59 ) }
    dend_13 { pt3dadd( -165.403, -252.419, -34.1399, 0.59 ) }
    dend_13 { pt3dadd( -166.371, -253.147, -34.3718, 0.22 ) }
    dend_13 { pt3dadd( -167.323, -253.798, -34.52, 0.22 ) }
    dend_13 { pt3dadd( -168.345, -254.453, -34.5682, 1.77 ) }
    dend_13 { pt3dadd( -168.906, -254.805, -34.5134, 2.06 ) }
    dend_13 { pt3dadd( -171.054, -256.145, -34.1689, 0.15 ) }
    dend_13 { pt3dadd( -171.481, -256.4, -34.0769, 0.74 ) }
    dend_13 { pt3dadd( -171.954, -256.657, -33.9183, 0.74 ) }
    dend_13 { pt3dadd( -172.956, -257.182, -33.466, 0.22 ) }
    dend_13 { pt3dadd( -173.802, -257.6, -33.0016, 0.22 ) }
    dend_13 { pt3dadd( -174.717, -258.04, -32.4174, 1.18 ) }
    dend_13 { pt3dadd( -175.148, -258.254, -32.0826, 1.55 ) }
    dend_13 { pt3dadd( -176.508, -258.928, -30.961, 0.29 ) }
    dend_13 { pt3dadd( -177.505, -259.417, -30.1065, 0.22 ) }
    dend_13 { pt3dadd( -177.949, -259.6, -29.7425, 0.74 ) }
    dend_13 { pt3dadd( -178.319, -259.719, -29.4673, 1.03 ) }
    dend_13 { pt3dadd( -179.547, -260.001, -28.6666, 0.15 ) }
    dend_13 { pt3dadd( -179.945, -260.061, -28.464, 0.37 ) }
    dend_13 { pt3dadd( -180.034, -260.069, -28.4328, 0.37 ) }
    dend_13 { pt3dadd( -181.474, -260.082, -28.0474, 0.22 ) }
    dend_13 { pt3dadd( -182.494, -260.064, -27.8245, 1.18 ) }
    dend_13 { pt3dadd( -183.226, -260.053, -27.6998, 1.55 ) }
    dend_13 { pt3dadd( -185.02, -260.034, -27.4751, 0.22 ) }
    dend_13 { pt3dadd( -185.868, -260.038, -27.3444, 0.22 ) }
    dend_13 { pt3dadd( -186.907, -260.068, -27.1519, 0.96 ) }
    dend_13 { pt3dadd( -187.267, -260.084, -27.0618, 1.33 ) }
    dend_13 { pt3dadd( -189.019, -260.156, -26.5346, 0.22 ) }
    dend_13 { pt3dadd( -189.733, -260.197, -26.2734, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -191.018, -260.276, -25.7306, 0.96 ) }
    dend_13 { pt3dadd( -191.352, -260.299, -25.5697, 1.25 ) }
    dend_13 { pt3dadd( -193.503, -260.47, -24.4515, 0.22 ) }
    dend_13 { pt3dadd( -194.36, -260.551, -24.0011, 0.22 ) }
    dend_13 { pt3dadd( -195.991, -260.72, -23.1238, 1.84 ) }
    dend_13 { pt3dadd( -196.328, -260.768, -22.9471, 2.36 ) }
    dend_13 { pt3dadd( -198.554, -261.184, -21.8488, 0.22 ) }
    dend_13 { pt3dadd( -199.147, -261.315, -21.5562, 0.66 ) }
    dend_13 { pt3dadd( -200.052, -261.57, -21.1427, 0.22 ) }
    dend_13 { pt3dadd( -200.122, -261.59, -21.1136, 0.22 ) }
    dend_13 { pt3dadd( -201.075, -261.872, -20.8024, 0.96 ) }
    dend_13 { pt3dadd( -201.531, -262.0, -20.6832, 0.96 ) }
    dend_13 { pt3dadd( -201.618, -262.024, -20.6698, 0.96 ) }
    dend_13 { pt3dadd( -202.939, -262.39, -20.4674, 0.22 ) }
    dend_13 { pt3dadd( -203.026, -262.413, -20.4539, 0.22 ) }
    dend_13 { pt3dadd( -204.397, -262.775, -20.2517, 0.22 ) }
    dend_13 { pt3dadd( -204.496, -262.801, -20.2375, 0.22 ) }
    dend_13 { pt3dadd( -205.893, -263.239, -20.0076, 0.22 ) }
    dend_13 { pt3dadd( -205.991, -263.272, -19.9899, 0.22 ) }
    dend_13 { pt3dadd( -206.606, -263.49, -19.8657, 1.11 ) }
    dend_13 { pt3dadd( -207.233, -263.716, -19.7375, 1.4 ) }
    dend_13 { pt3dadd( -207.488, -263.809, -19.6845, 1.69 ) }
    dend_13 { pt3dadd( -209.927, -264.695, -19.1679, 0.22 ) }
    dend_13 { pt3dadd( -210.546, -264.913, -19.0327, 0.66 ) }
    dend_13 { pt3dadd( -210.835, -265.017, -18.9691, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.38598, -38.2092, 0.325473, 2.58 ) }
    dend_8 { pt3dadd( -9.04764, -39.3789, -0.165045, 2.58 ) }
    dend_8 { pt3dadd( -8.83924, -40.7042, -0.719446, 1.11 ) }
    dend_8 { pt3dadd( -8.70804, -41.8357, -1.165, 0.66 ) }
    dend_8 { pt3dadd( -8.62021, -42.7161, -1.50798, 0.59 ) }
    dend_8 { pt3dadd( -8.48388, -44.1258, -2.07401, 1.25 ) }
    dend_8 { pt3dadd( -8.42038, -44.7172, -2.31879, 1.62 ) }
    dend_8 { pt3dadd( -8.25176, -46.5699, -3.06939, 1.11 ) }
    dend_8 { pt3dadd( -8.13674, -47.67, -3.53915, 1.33 ) }
    dend_8 { pt3dadd( -8.00465, -48.6597, -4.00576, 1.92 ) }
    dend_8 { pt3dadd( -7.81588, -49.7058, -4.53994, 1.99 ) }
    dend_8 { pt3dadd( -7.57478, -50.7793, -5.14596, 1.33 ) }
    dend_8 { pt3dadd( -7.31007, -51.9235, -5.8247, 0.96 ) }
    dend_8 { pt3dadd( -7.00585, -53.1753, -6.59126, 0.96 ) }
    dend_8 { pt3dadd( -6.99722, -53.2201, -6.62056, 0.96 ) }
    dend_8 { pt3dadd( -6.91779, -53.9905, -7.14807, 0.74 ) }
    dend_8 { pt3dadd( -6.98079, -55.1286, -8.04003, 0.52 ) }
    dend_8 { pt3dadd( -7.16293, -55.8973, -8.72369, 0.52 ) }
    dend_8 { pt3dadd( -7.17967, -55.9405, -8.76591, 0.52 ) }
    dend_8 { pt3dadd( -7.45726, -56.5393, -9.37744, 0.88 ) }
    dend_8 { pt3dadd( -7.81033, -57.3043, -10.1409, 1.18 ) }
    dend_8 { pt3dadd( -8.38673, -58.5527, -11.3476, 0.59 ) }
    dend_8 { pt3dadd( -8.71624, -59.3051, -12.0054, 0.59 ) }
    dend_8 { pt3dadd( -8.73199, -59.3451, -12.038, 0.59 ) }
    dend_8 { pt3dadd( -8.95902, -60.0304, -12.5279, 0.59 ) }
    dend_8 { pt3dadd( -9.26172, -61.2038, -13.2068, 1.55 ) }
    dend_8 { pt3dadd( -9.42995, -62.0828, -13.5721, 2.14 ) }
    dend_8 { pt3dadd( -9.52139, -62.5951, -13.7272, 2.36 ) }
    dend_8 { pt3dadd( -9.53306, -62.6475, -13.7414, 2.36 ) }
    dend_8 { pt3dadd( -9.70822, -63.2043, -13.8963, 2.36 ) }
    dend_8 { pt3dadd( -9.99611, -63.8285, -14.0964, 2.06 ) }
    dend_8 { pt3dadd( -10.5298, -64.7177, -14.4076, 1.77 ) }
    dend_8 { pt3dadd( -11.1323, -65.6242, -14.7468, 0.74 ) }
    dend_8 { pt3dadd( -11.4425, -66.0578, -14.924, 0.52 ) }
    dend_8 { pt3dadd( -12.0031, -66.7816, -15.2421, 0.44 ) }
    dend_8 { pt3dadd( -12.7389, -67.6035, -15.6558, 0.44 ) }
    dend_8 { pt3dadd( -13.5159, -68.3504, -16.097, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -11.3258, -231.075, 63.9494, 0.88 ) }
    dend_4 { pt3dadd( -11.3794, -232.307, 63.9719, 0.88 ) }
    dend_4 { pt3dadd( -11.3619, -233.491, 63.9451, 0.88 ) }
    dend_4 { pt3dadd( -11.3142, -234.316, 63.926, 1.18 ) }
    dend_4 { pt3dadd( -11.2708, -234.853, 63.904, 1.18 ) }
    dend_4 { pt3dadd( -11.1431, -236.307, 63.8422, 0.52 ) }
    dend_4 { pt3dadd( -11.0851, -236.966, 63.8142, 0.52 ) }
    dend_4 { pt3dadd( -10.9298, -238.262, 63.742, 1.99 ) }
    dend_4 { pt3dadd( -10.7391, -239.511, 63.6442, 3.09 ) }
    dend_4 { pt3dadd( -10.5969, -240.298, 63.5691, 3.61 ) }
    dend_4 { pt3dadd( -10.4247, -241.225, 63.4785, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.3258, -231.075, 63.9494, 0.74 ) }
    dend_3 { pt3dadd( -10.4576, -232.293, 63.9259, 0.74 ) }
    dend_3 { pt3dadd( -9.52087, -233.811, 63.9306, 0.66 ) }
    dend_3 { pt3dadd( -9.05399, -234.567, 63.933, 1.11 ) }
    dend_3 { pt3dadd( -8.75383, -235.053, 63.9346, 1.25 ) }
    dend_3 { pt3dadd( -7.38094, -237.277, 63.9416, 0.29 ) }
    dend_3 { pt3dadd( -6.79743, -238.222, 63.9445, 0.29 ) }
    dend_3 { pt3dadd( -6.09439, -239.491, 63.8964, 0.29 ) }
    dend_3 { pt3dadd( -0.174399, -249.513, 64.7319, 0.29 ) }
    dend_3 { pt3dadd( 6.1998, -258.878, 67.4097, 0.29 ) }
    dend_3 { pt3dadd( 13.3977, -267.669, 69.7128, 0.29 ) }
    dend_3 { pt3dadd( 19.3018, -277.129, 73.1125, 0.29 ) }
    dend_3 { pt3dadd( 24.6741, -286.992, 76.3505, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -18.9919, 150.755, -87.6645, 0.22 ) }
    dend_69 { pt3dadd( -19.6555, 149.78, -89.4817, 0.22 ) }
    dend_69 { pt3dadd( -19.9131, 149.449, -90.2577, 1.18 ) }
    dend_69 { pt3dadd( -20.0053, 149.344, -90.5115, 1.18 ) }
    dend_69 { pt3dadd( -21.2843, 148.0, -93.8407, 0.22 ) }
    dend_69 { pt3dadd( -21.5639, 147.72, -94.555, 0.22 ) }
    dend_69 { pt3dadd( -22.4783, 146.802, -96.8911, 0.74 ) }
    dend_69 { pt3dadd( -23.6801, 145.811, -99.9004, 0.22 ) }
    dend_69 { pt3dadd( -24.0672, 145.523, -100.87, 1.03 ) }
    dend_69 { pt3dadd( -24.2213, 145.413, -101.252, 1.25 ) }
    dend_69 { pt3dadd( -24.3501, 145.337, -101.535, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -18.9919, 150.755, -87.6645, 0.52 ) }
    dend_68 { pt3dadd( -18.2436, 152.229, -88.8624, 0.52 ) }
    dend_68 { pt3dadd( -17.8241, 153.13, -89.5818, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -17.3097, 154.512, -90.5961, 0.88 ) }
    dend_68 { pt3dadd( -17.2402, 154.745, -90.7549, 1.03 ) }
    dend_68 { pt3dadd( -16.7382, 156.783, -92.0855, 0.15 ) }
    dend_68 { pt3dadd( -16.6295, 157.285, -92.4048, 0.52 ) }
    dend_68 { pt3dadd( -16.6142, 157.474, -92.5168, 0.52 ) }
    dend_68 { pt3dadd( -16.5989, 158.84, -93.2465, 0.15 ) }
    dend_68 { pt3dadd( -16.6241, 159.455, -93.5354, 0.81 ) }
    dend_68 { pt3dadd( -16.6789, 160.265, -93.9001, 1.11 ) }
    dend_68 { pt3dadd( -16.6883, 160.331, -93.9266, 1.11 ) }
    dend_68 { pt3dadd( -16.8934, 161.874, -94.5481, 0.22 ) }
    dend_68 { pt3dadd( -16.9708, 162.556, -94.8392, 0.96 ) }
    dend_68 { pt3dadd( -17.0034, 162.991, -95.0486, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.9685, 131.528, -15.8724, 0.96 ) }
    dend_66 { pt3dadd( -11.1963, 132.287, -16.854, 0.96 ) }
    dend_66 { pt3dadd( -11.4268, 133.055, -17.835, 1.03 ) }
    dend_66 { pt3dadd( -11.4697, 133.235, -18.0626, 1.03 ) }
    dend_66 { pt3dadd( -11.6024, 133.865, -18.844, 0.29 ) }
    dend_66 { pt3dadd( -11.6821, 134.359, -19.3923, 1.25 ) }
    dend_66 { pt3dadd( -11.7257, 134.702, -19.7376, 1.47 ) }
    dend_66 { pt3dadd( -11.7343, 134.821, -19.8344, 1.47 ) }
    dend_66 { pt3dadd( -11.8101, 135.917, -20.5642, 0.29 ) }
    dend_66 { pt3dadd( -11.8147, 136.017, -20.6278, 0.29 ) }
    dend_66 { pt3dadd( -11.8325, 136.86, -21.1109, 0.29 ) }
    dend_66 { pt3dadd( -11.8272, 137.177, -21.301, 0.59 ) }
    dend_66 { pt3dadd( -11.8012, 137.884, -21.7274, 0.44 ) }
    dend_66 { pt3dadd( -11.7608, 138.78, -22.2651, 2.28 ) }
    dend_66 { pt3dadd( -11.7362, 139.317, -22.5823, 2.65 ) }
    dend_66 { pt3dadd( -11.7231, 139.574, -22.7395, 2.65 ) }
    dend_66 { pt3dadd( -11.6408, 141.248, -23.8134, 0.37 ) }
    dend_66 { pt3dadd( -11.6131, 141.78, -24.1346, 0.29 ) }
    dend_66 { pt3dadd( -11.6086, 141.848, -24.1713, 0.29 ) }
    dend_66 { pt3dadd( -11.5824, 142.231, -24.3482, 0.44 ) }
    dend_66 { pt3dadd( -11.5728, 142.46, -24.4307, 0.44 ) }
    dend_66 { pt3dadd( -11.5627, 143.141, -24.6244, 0.15 ) }
    dend_66 { pt3dadd( -11.5816, 143.737, -24.7199, 0.74 ) }
    dend_66 { pt3dadd( -11.583, 143.794, -24.7307, 0.74 ) }
    dend_66 { pt3dadd( -11.5937, 144.143, -24.827, 0.74 ) }
    dend_66 { pt3dadd( -11.6049, 144.434, -24.9191, 0.52 ) }
    dend_66 { pt3dadd( -11.6521, 145.111, -25.1488, 0.29 ) }
    dend_66 { pt3dadd( -11.7305, 145.949, -25.4409, 1.18 ) }
    dend_66 { pt3dadd( -11.7755, 146.344, -25.5816, 1.69 ) }
    dend_66 { pt3dadd( -11.9402, 147.741, -26.1431, 0.29 ) }
    dend_66 { pt3dadd( -12.0096, 148.283, -26.3719, 0.29 ) }
    dend_66 { pt3dadd( -12.1599, 149.308, -26.8153, 1.77 ) }
    dend_66 { pt3dadd( -12.2089, 149.578, -26.9393, 2.73 ) }
    dend_66 { pt3dadd( -12.2555, 149.79, -27.042, 2.73 ) }
    dend_66 { pt3dadd( -12.6881, 151.542, -27.9168, 0.29 ) }
    dend_66 { pt3dadd( -12.8299, 152.053, -28.1749, 0.29 ) }
    dend_66 { pt3dadd( -12.8884, 152.238, -28.2759, 0.59 ) }
    dend_66 { pt3dadd( -13.1089, 152.851, -28.6365, 0.22 ) }
    dend_66 { pt3dadd( -13.2808, 153.271, -28.8948, 0.74 ) }
    dend_66 { pt3dadd( -13.3586, 153.416, -28.9872, 1.03 ) }
    dend_66 { pt3dadd( -13.3914, 153.454, -29.0135, 1.03 ) }
    dend_66 { pt3dadd( -13.6036, 153.683, -29.1915, 0.81 ) }
    dend_66 { pt3dadd( -13.663, 153.753, -29.2419, 0.81 ) }
    dend_66 { pt3dadd( -14.2184, 154.468, -29.6846, 0.22 ) }
    dend_66 { pt3dadd( -14.4759, 154.826, -29.8865, 0.59 ) }
    dend_66 { pt3dadd( -14.9009, 155.426, -30.2078, 0.22 ) }
    dend_66 { pt3dadd( -14.9677, 155.522, -30.255, 0.22 ) }
    dend_66 { pt3dadd( -15.2532, 155.938, -30.4365, 0.22 ) }
    dend_66 { pt3dadd( -15.589, 156.447, -30.6275, 0.22 ) }
    dend_66 { pt3dadd( -16.0549, 157.193, -30.8744, 1.62 ) }
    dend_66 { pt3dadd( -16.379, 157.734, -31.0421, 2.14 ) }
    dend_66 { pt3dadd( -16.6582, 158.205, -31.1801, 2.14 ) }
    dend_66 { pt3dadd( -17.381, 159.386, -31.5317, 0.29 ) }
    dend_66 { pt3dadd( -17.6134, 159.755, -31.6429, 0.44 ) }
    dend_66 { pt3dadd( -17.8729, 160.176, -31.7691, 0.22 ) }
    dend_66 { pt3dadd( -18.2713, 160.85, -31.9656, 0.22 ) }
    dend_66 { pt3dadd( -18.6308, 161.5, -32.1527, 1.25 ) }
    dend_66 { pt3dadd( -18.7769, 161.779, -32.2347, 1.62 ) }
    dend_66 { pt3dadd( -18.8505, 161.94, -32.2849, 1.84 ) }
    dend_66 { pt3dadd( -19.3301, 163.155, -32.6926, 0.29 ) }
    dend_66 { pt3dadd( -19.6606, 164.132, -33.0275, 0.29 ) }
    dend_66 { pt3dadd( -19.8372, 164.808, -33.2762, 0.74 ) }
    dend_66 { pt3dadd( -19.8952, 165.079, -33.3899, 0.74 ) }
    dend_66 { pt3dadd( -20.0673, 166.022, -33.8179, 0.22 ) }
    dend_66 { pt3dadd( -20.1933, 166.857, -34.2157, 1.62 ) }
    dend_66 { pt3dadd( -20.1979, 166.901, -34.2368, 1.62 ) }
    dend_66 { pt3dadd( -20.2507, 167.507, -34.5223, 1.99 ) }
    dend_66 { pt3dadd( -20.3617, 168.965, -35.1837, 0.22 ) }
    dend_66 { pt3dadd( -20.3652, 169.01, -35.2033, 0.22 ) }
    dend_66 { pt3dadd( -20.4362, 169.691, -35.4717, 0.22 ) }
    dend_66 { pt3dadd( -20.5192, 170.436, -35.7393, 0.96 ) }
    dend_66 { pt3dadd( -20.5549, 170.721, -35.8373, 1.25 ) }
    dend_66 { pt3dadd( -20.7235, 172.026, -36.2195, 0.22 ) }
    dend_66 { pt3dadd( -20.7292, 172.074, -36.2312, 0.22 ) }
    dend_66 { pt3dadd( -20.816, 172.731, -36.3932, 0.74 ) }
    dend_66 { pt3dadd( -20.842, 172.908, -36.436, 0.88 ) }
    dend_66 { pt3dadd( -20.919, 173.375, -36.5502, 0.29 ) }
    dend_66 { pt3dadd( -21.079, 174.281, -36.7523, 0.22 ) }
    dend_66 { pt3dadd( -21.1859, 174.867, -36.8598, 0.22 ) }
    dend_66 { pt3dadd( -21.3045, 175.697, -36.968, 1.33 ) }
    dend_66 { pt3dadd( -21.3362, 176.005, -36.9922, 1.92 ) }
    dend_66 { pt3dadd( -21.3408, 176.054, -36.9942, 1.92 ) }
    dend_66 { pt3dadd( -21.3714, 176.425, -36.9994, 1.77 ) }
    dend_66 { pt3dadd( -21.4053, 176.809, -37.0017, 1.69 ) }
    dend_66 { pt3dadd( -21.521, 178.126, -37.0002, 0.22 ) }
    dend_66 { pt3dadd( -21.6454, 179.211, -36.9826, 0.22 ) }
    dend_66 { pt3dadd( -21.7856, 180.228, -36.9634, 1.47 ) }
    dend_66 { pt3dadd( -21.857, 180.665, -36.9552, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -21.9152, 180.955, -36.9514, 1.92 ) }
    dend_66 { pt3dadd( -22.0156, 181.362, -36.9502, 1.47 ) }
    dend_66 { pt3dadd( -22.4394, 182.778, -36.9706, 0.22 ) }
    dend_66 { pt3dadd( -22.6329, 183.347, -36.9792, 0.44 ) }
    dend_66 { pt3dadd( -22.7225, 183.613, -36.9872, 0.44 ) }
    dend_66 { pt3dadd( -22.9703, 184.364, -37.0187, 0.22 ) }
    dend_66 { pt3dadd( -23.2398, 185.235, -37.0678, 1.18 ) }
    dend_66 { pt3dadd( -23.3586, 185.651, -37.0966, 2.14 ) }
    dend_66 { pt3dadd( -23.4852, 186.133, -37.1417, 1.62 ) }
    dend_66 { pt3dadd( -23.8689, 187.669, -37.2938, 0.22 ) }
    dend_66 { pt3dadd( -23.8821, 187.725, -37.2995, 0.22 ) }
    dend_66 { pt3dadd( -24.1427, 188.959, -37.4113, 0.22 ) }
    dend_66 { pt3dadd( -24.3512, 190.018, -37.4957, 0.22 ) }
    dend_66 { pt3dadd( -24.4819, 190.713, -37.5313, 1.03 ) }
    dend_66 { pt3dadd( -24.5262, 190.951, -37.5373, 1.62 ) }
    dend_66 { pt3dadd( -24.5731, 191.191, -37.5353, 1.11 ) }
    dend_66 { pt3dadd( -24.7631, 192.339, -37.4663, 0.22 ) }
    dend_66 { pt3dadd( -24.7696, 192.387, -37.4607, 0.22 ) }
    dend_66 { pt3dadd( -24.8644, 193.314, -37.3157, 1.47 ) }
    dend_66 { pt3dadd( -24.8907, 193.615, -37.2611, 2.06 ) }
    dend_66 { pt3dadd( -24.8964, 193.681, -37.2493, 2.06 ) }
    dend_66 { pt3dadd( -25.0298, 195.086, -37.0356, 0.22 ) }
    dend_66 { pt3dadd( -25.111, 195.867, -36.9387, 0.52 ) }
    dend_66 { pt3dadd( -25.24, 196.905, -36.8399, 0.22 ) }
    dend_66 { pt3dadd( -25.3378, 197.594, -36.7929, 1.33 ) }
    dend_66 { pt3dadd( -25.3937, 197.949, -36.7819, 1.33 ) }
    dend_66 { pt3dadd( -25.6052, 199.158, -36.7929, 0.22 ) }
    dend_66 { pt3dadd( -25.6951, 199.62, -36.8229, 0.22 ) }
    dend_66 { pt3dadd( -25.8111, 200.251, -36.8816, 0.66 ) }
    dend_66 { pt3dadd( -25.854, 200.498, -36.9114, 0.66 ) }
    dend_66 { pt3dadd( -26.026, 201.665, -37.0606, 0.22 ) }
    dend_66 { pt3dadd( -26.0309, 201.725, -37.0683, 0.22 ) }
    dend_66 { pt3dadd( -26.0535, 202.518, -37.1691, 0.22 ) }
    dend_66 { pt3dadd( -26.044, 203.269, -37.277, 0.96 ) }
    dend_66 { pt3dadd( -26.0255, 203.684, -37.3404, 1.62 ) }
    dend_66 { pt3dadd( -26.0027, 204.116, -37.4083, 1.4 ) }
    dend_66 { pt3dadd( -25.9624, 205.489, -37.6432, 0.22 ) }
    dend_66 { pt3dadd( -25.9619, 205.845, -37.7118, 0.22 ) }
    dend_66 { pt3dadd( -25.9853, 206.696, -37.8906, 1.11 ) }
    dend_66 { pt3dadd( -25.9922, 206.819, -37.917, 1.33 ) }
    dend_66 { pt3dadd( -26.0194, 207.169, -38.002, 1.18 ) }
    dend_66 { pt3dadd( -26.1657, 208.717, -38.3884, 0.22 ) }
    dend_66 { pt3dadd( -26.2482, 209.437, -38.5786, 1.03 ) }
    dend_66 { pt3dadd( -26.2963, 209.839, -38.6866, 1.18 ) }
    dend_66 { pt3dadd( -26.3294, 210.127, -38.7753, 1.03 ) }
    dend_66 { pt3dadd( -26.434, 211.112, -39.1106, 0.15 ) }
    dend_66 { pt3dadd( -26.5098, 211.937, -39.4111, 0.15 ) }
    dend_66 { pt3dadd( -26.5734, 212.711, -39.6978, 1.33 ) }
    dend_66 { pt3dadd( -26.6115, 213.14, -39.8545, 1.55 ) }
    dend_66 { pt3dadd( -26.7497, 214.657, -40.4203, 0.15 ) }
    dend_66 { pt3dadd( -26.7553, 214.713, -40.4406, 0.15 ) }
    dend_66 { pt3dadd( -26.8396, 215.409, -40.6706, 0.15 ) }
    dend_66 { pt3dadd( -26.9439, 216.207, -40.9251, 1.11 ) }
    dend_66 { pt3dadd( -26.9785, 216.481, -41.0012, 1.55 ) }
    dend_66 { pt3dadd( -27.1208, 217.673, -41.2814, 0.15 ) }
    dend_66 { pt3dadd( -27.2041, 218.314, -41.3928, 0.74 ) }
    dend_66 { pt3dadd( -27.3365, 219.263, -41.5458, 0.15 ) }
    dend_66 { pt3dadd( -27.3457, 219.319, -41.5541, 0.15 ) }
    dend_66 { pt3dadd( -27.4402, 219.859, -41.6268, 0.15 ) }
    dend_66 { pt3dadd( -27.5581, 220.507, -41.6944, 0.96 ) }
    dend_66 { pt3dadd( -27.6126, 220.803, -41.716, 0.96 ) }
    dend_66 { pt3dadd( -27.8443, 222.12, -41.8209, 0.15 ) }
    dend_66 { pt3dadd( -27.9347, 222.679, -41.8659, 0.44 ) }
    dend_66 { pt3dadd( -27.9449, 222.744, -41.8729, 0.44 ) }
    dend_66 { pt3dadd( -28.0655, 223.585, -41.9884, 0.15 ) }
    dend_66 { pt3dadd( -28.1699, 224.394, -42.1153, 1.03 ) }
    dend_66 { pt3dadd( -28.2094, 224.748, -42.1741, 1.33 ) }
    dend_66 { pt3dadd( -28.2522, 225.302, -42.2756, 0.59 ) }
    dend_66 { pt3dadd( -28.3026, 226.232, -42.457, 0.15 ) }
    dend_66 { pt3dadd( -28.338, 226.931, -42.5982, 0.88 ) }
    dend_66 { pt3dadd( -28.3561, 227.334, -42.6811, 1.03 ) }
    dend_66 { pt3dadd( -28.3742, 227.755, -42.7645, 0.66 ) }
    dend_66 { pt3dadd( -28.3856, 228.718, -42.9998, 0.15 ) }
    dend_66 { pt3dadd( -28.3785, 229.729, -43.2759, 0.15 ) }
    dend_66 { pt3dadd( -28.3692, 230.38, -43.433, 0.96 ) }
    dend_66 { pt3dadd( -28.3685, 230.754, -43.5168, 1.25 ) }
    dend_66 { pt3dadd( -28.3705, 231.003, -43.5685, 1.25 ) }
    dend_66 { pt3dadd( -28.4156, 232.557, -43.8621, 0.15 ) }
    dend_66 { pt3dadd( -28.4426, 232.971, -43.9255, 0.44 ) }
    dend_66 { pt3dadd( -28.5283, 233.875, -44.0357, 0.15 ) }
    dend_66 { pt3dadd( -28.5764, 234.299, -44.0687, 0.74 ) }
    dend_66 { pt3dadd( -28.6298, 234.724, -44.086, 0.74 ) }
    dend_66 { pt3dadd( -28.7249, 235.526, -44.0843, 0.15 ) }
    dend_66 { pt3dadd( -28.8118, 236.193, -44.0545, 0.88 ) }
    dend_66 { pt3dadd( -28.8575, 236.611, -44.0468, 0.96 ) }
    dend_66 { pt3dadd( -28.9477, 237.652, -44.0581, 0.15 ) }
    dend_66 { pt3dadd( -28.9959, 238.203, -44.059, 0.29 ) }
    dend_66 { pt3dadd( -29.0886, 239.212, -44.0529, 0.15 ) }
    dend_66 { pt3dadd( -29.1394, 239.763, -44.0441, 0.96 ) }
    dend_66 { pt3dadd( -29.1777, 240.241, -44.0359, 1.18 ) }
    dend_66 { pt3dadd( -29.3087, 241.871, -43.9929, 0.22 ) }
    dend_66 { pt3dadd( -29.3665, 242.605, -43.9683, 0.22 ) }
    dend_66 { pt3dadd( -29.381, 242.789, -43.9601, 0.22 ) }
    dend_66 { pt3dadd( -29.3905, 242.917, -43.9529, 0.22 ) }
    dend_66 { pt3dadd( -29.4265, 243.775, -43.9341, 0.15 ) }
    dend_66 { pt3dadd( -29.446, 244.495, -43.9462, 1.11 ) }
    dend_66 { pt3dadd( -29.4502, 244.891, -43.9667, 1.77 ) }
    dend_66 { pt3dadd( -29.4493, 245.201, -43.9897, 1.77 ) }
    dend_66 { pt3dadd( -29.4494, 245.268, -43.9961, 1.77 ) }
    dend_66 { pt3dadd( -29.4597, 247.085, -44.163, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -29.4764, 247.681, -44.2177, 0.15 ) }
    dend_66 { pt3dadd( -29.478, 247.731, -44.222, 0.15 ) }
    dend_66 { pt3dadd( -29.5044, 248.304, -44.2597, 0.52 ) }
    dend_66 { pt3dadd( -29.5235, 248.552, -44.2729, 0.59 ) }
    dend_66 { pt3dadd( -29.6785, 249.924, -44.3263, 0.15 ) }
    dend_66 { pt3dadd( -29.7721, 250.644, -44.3334, 1.03 ) }
    dend_66 { pt3dadd( -29.8201, 251.023, -44.3392, 1.77 ) }
    dend_66 { pt3dadd( -29.867, 251.389, -44.3475, 1.55 ) }
    dend_66 { pt3dadd( -30.0998, 252.959, -44.4028, 0.15 ) }
    dend_66 { pt3dadd( -30.1611, 253.334, -44.4242, 0.29 ) }
    dend_66 { pt3dadd( -30.274, 253.972, -44.4771, 0.15 ) }
    dend_66 { pt3dadd( -30.4043, 254.683, -44.5428, 0.15 ) }
    dend_66 { pt3dadd( -30.4276, 254.806, -44.5544, 0.15 ) }
    dend_66 { pt3dadd( -30.6666, 256.063, -44.6858, 0.15 ) }
    dend_66 { pt3dadd( -30.8404, 256.965, -44.7845, 1.11 ) }
    dend_66 { pt3dadd( -30.8517, 257.022, -44.7911, 1.11 ) }
    dend_66 { pt3dadd( -30.9591, 257.526, -44.8511, 1.4 ) }
    dend_66 { pt3dadd( -31.0638, 258.094, -44.923, 0.59 ) }
    dend_66 { pt3dadd( -31.2103, 259.006, -45.0385, 0.22 ) }
    dend_66 { pt3dadd( -31.3027, 259.726, -45.1255, 0.22 ) }
    dend_66 { pt3dadd( -31.3929, 260.496, -45.213, 1.03 ) }
    dend_66 { pt3dadd( -31.4387, 260.97, -45.268, 1.55 ) }
    dend_66 { pt3dadd( -31.6003, 263.067, -45.4971, 0.15 ) }
    dend_66 { pt3dadd( -31.6047, 263.127, -45.5033, 0.15 ) }
    dend_66 { pt3dadd( -31.6445, 263.635, -45.5424, 0.44 ) }
    dend_66 { pt3dadd( -31.6679, 263.945, -45.5588, 0.44 ) }
    dend_66 { pt3dadd( -31.7687, 265.218, -45.6085, 0.15 ) }
    dend_66 { pt3dadd( -31.8319, 265.952, -45.6319, 1.03 ) }
    dend_66 { pt3dadd( -31.8767, 266.443, -45.6417, 1.62 ) }
    dend_66 { pt3dadd( -32.0212, 268.012, -45.7487, 0.15 ) }
    dend_66 { pt3dadd( -32.2171, 270.032, -45.9529, 0.15 ) }
    dend_66 { pt3dadd( -32.2991, 270.851, -46.0565, 0.15 ) }
    dend_66 { pt3dadd( -32.3574, 271.41, -46.1412, 1.11 ) }
    dend_66 { pt3dadd( -32.4155, 272.016, -46.2507, 1.4 ) }
    dend_66 { pt3dadd( -32.5748, 274.023, -46.6597, 0.15 ) }
    dend_66 { pt3dadd( -32.616, 274.61, -46.7946, 0.15 ) }
    dend_66 { pt3dadd( -32.6644, 275.319, -46.9582, 0.74 ) }
    dend_66 { pt3dadd( -32.6775, 275.636, -47.0175, 0.74 ) }
    dend_66 { pt3dadd( -32.6785, 275.693, -47.0258, 0.74 ) }
    dend_66 { pt3dadd( -32.6788, 277.302, -47.1914, 0.15 ) }
    dend_66 { pt3dadd( -32.6636, 278.267, -47.2361, 1.55 ) }
    dend_66 { pt3dadd( -32.6413, 278.867, -47.2629, 1.92 ) }
    dend_66 { pt3dadd( -32.5615, 280.632, -47.3376, 0.15 ) }
    dend_66 { pt3dadd( -32.5337, 281.214, -47.3605, 0.88 ) }
    dend_66 { pt3dadd( -32.5268, 281.338, -47.3651, 0.88 ) }
    dend_66 { pt3dadd( -32.4969, 281.759, -47.3805, 0.88 ) }
    dend_66 { pt3dadd( -32.3936, 283.034, -47.431, 0.15 ) }
    dend_66 { pt3dadd( -32.3609, 283.521, -47.4444, 0.15 ) }
    dend_66 { pt3dadd( -32.3322, 284.04, -47.4485, 0.74 ) }
    dend_66 { pt3dadd( -32.2722, 285.24, -47.4465, 0.15 ) }
    dend_66 { pt3dadd( -32.2705, 285.298, -47.4454, 0.15 ) }
    dend_66 { pt3dadd( -32.2676, 285.592, -47.4339, 0.37 ) }
    dend_66 { pt3dadd( -32.2837, 286.271, -47.393, 0.22 ) }
    dend_66 { pt3dadd( -32.3029, 286.709, -47.3565, 0.88 ) }
    dend_66 { pt3dadd( -32.3066, 286.758, -47.3515, 0.88 ) }
    dend_66 { pt3dadd( -32.4188, 288.088, -47.2692, 0.15 ) }
    dend_66 { pt3dadd( -32.4646, 288.652, -47.2513, 0.15 ) }
    dend_66 { pt3dadd( -32.4693, 288.718, -47.2511, 0.15 ) }
    dend_66 { pt3dadd( -32.5318, 289.651, -47.2773, 1.25 ) }
    dend_66 { pt3dadd( -32.5456, 289.885, -47.2936, 1.25 ) }
    dend_66 { pt3dadd( -32.6486, 291.436, -47.4537, 0.15 ) }
    dend_66 { pt3dadd( -32.6529, 291.495, -47.4618, 0.15 ) }
    dend_66 { pt3dadd( -32.6946, 292.06, -47.5605, 1.18 ) }
    dend_66 { pt3dadd( -32.71, 292.234, -47.5932, 1.18 ) }
    dend_66 { pt3dadd( -32.823, 293.498, -47.8887, 0.15 ) }
    dend_66 { pt3dadd( -32.9317, 294.424, -48.1537, 0.15 ) }
    dend_66 { pt3dadd( -32.9665, 294.652, -48.2273, 0.44 ) }
    dend_66 { pt3dadd( -33.2254, 296.224, -48.7642, 0.15 ) }
    dend_66 { pt3dadd( -33.426, 297.348, -49.1749, 1.77 ) }
    dend_66 { pt3dadd( -33.5502, 298.014, -49.4357, 1.55 ) }
    dend_66 { pt3dadd( -33.7593, 299.07, -49.8782, 0.22 ) }
    dend_66 { pt3dadd( -33.8511, 299.51, -50.0829, 0.37 ) }
    dend_66 { pt3dadd( -34.0129, 300.208, -50.4235, 0.15 ) }
    dend_66 { pt3dadd( -34.0251, 300.25, -50.4452, 0.15 ) }
    dend_66 { pt3dadd( -34.1705, 300.726, -50.7011, 0.74 ) }
    dend_66 { pt3dadd( -34.2538, 300.987, -50.8284, 0.74 ) }
    dend_66 { pt3dadd( -34.4379, 301.598, -51.1039, 0.15 ) }
    dend_66 { pt3dadd( -34.56, 301.969, -51.2714, 0.66 ) }
    dend_66 { pt3dadd( -34.6579, 302.246, -51.3913, 1.25 ) }
    dend_66 { pt3dadd( -35.1093, 303.446, -51.9165, 0.15 ) }
    dend_66 { pt3dadd( -35.132, 303.504, -51.9416, 0.15 ) }
    dend_66 { pt3dadd( -35.414, 304.234, -52.246, 0.15 ) }
    dend_66 { pt3dadd( -35.6688, 304.922, -52.5095, 0.96 ) }
    dend_66 { pt3dadd( -35.7833, 305.238, -52.6308, 1.55 ) }
    dend_66 { pt3dadd( -36.3556, 306.886, -53.2394, 0.15 ) }
    dend_66 { pt3dadd( -36.3699, 306.93, -53.2541, 0.15 ) }
    dend_66 { pt3dadd( -36.6169, 307.758, -53.5154, 1.18 ) }
    dend_66 { pt3dadd( -36.7539, 308.262, -53.6668, 0.52 ) }
    dend_66 { pt3dadd( -36.9692, 309.153, -53.909, 0.15 ) }
    dend_66 { pt3dadd( -37.0848, 309.671, -54.0332, 0.52 ) }
    dend_66 { pt3dadd( -37.4153, 311.186, -54.3281, 0.15 ) }
    dend_66 { pt3dadd( -37.5441, 311.7, -54.418, 0.15 ) }
    dend_66 { pt3dadd( -37.7653, 312.453, -54.5371, 0.66 ) }
    dend_66 { pt3dadd( -37.92, 312.908, -54.5981, 0.96 ) }
    dend_66 { pt3dadd( -38.0508, 313.242, -54.6308, 0.96 ) }
    dend_66 { pt3dadd( -38.6294, 314.435, -54.6968, 0.15 ) }
    dend_66 { pt3dadd( -39.0779, 315.202, -54.7119, 0.52 ) }
    dend_66 { pt3dadd( -39.2835, 315.529, -54.7127, 0.52 ) }
    dend_66 { pt3dadd( -39.6265, 316.044, -54.7059, 0.15 ) }
    dend_66 { pt3dadd( -40.0447, 316.648, -54.6922, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -41.0989, 318.125, -54.6374, 0.15 ) }
    dend_66 { pt3dadd( -41.4789, 318.642, -54.6034, 1.18 ) }
    dend_66 { pt3dadd( -41.7612, 319.031, -54.5815, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.9685, 131.528, -15.8724, 0.59 ) }
    dend_29 { pt3dadd( -10.9002, 132.091, -15.8772, 0.59 ) }
    dend_29 { pt3dadd( -10.8578, 132.596, -15.8916, 1.18 ) }
    dend_29 { pt3dadd( -10.8319, 133.083, -15.919, 1.84 ) }
    dend_29 { pt3dadd( -10.8232, 133.371, -15.9378, 2.06 ) }
    dend_29 { pt3dadd( -10.8221, 133.649, -15.9564, 2.06 ) }
    dend_29 { pt3dadd( -10.8292, 134.004, -15.9795, 1.84 ) }
    dend_29 { pt3dadd( -10.8544, 134.393, -16.0051, 1.55 ) }
    dend_29 { pt3dadd( -10.9241, 135.089, -16.0529, 0.37 ) }
    dend_29 { pt3dadd( -10.9807, 135.534, -16.0829, 0.37 ) }
    dend_29 { pt3dadd( -11.0599, 136.078, -16.1268, 0.96 ) }
    dend_29 { pt3dadd( -11.1465, 136.62, -16.1737, 1.47 ) }
    dend_29 { pt3dadd( -11.193, 136.888, -16.1966, 1.69 ) }
    dend_29 { pt3dadd( -11.2621, 137.286, -16.2269, 1.55 ) }
    dend_29 { pt3dadd( -11.3255, 137.647, -16.2537, 1.33 ) }
    dend_29 { pt3dadd( -11.3895, 138.116, -16.2864, 0.66 ) }
    dend_29 { pt3dadd( -11.4401, 138.708, -16.3339, 0.37 ) }
    dend_29 { pt3dadd( -11.4663, 139.384, -16.3907, 0.29 ) }
    dend_29 { pt3dadd( -11.4665, 139.96, -16.4392, 0.29 ) }
    dend_29 { pt3dadd( -11.4645, 140.005, -16.4428, 0.29 ) }
    dend_29 { pt3dadd( -11.3781, 140.988, -16.5089, 0.29 ) }
    dend_29 { pt3dadd( -11.3215, 141.459, -16.5316, 0.81 ) }
    dend_29 { pt3dadd( -11.2736, 141.806, -16.548, 0.96 ) }
    dend_29 { pt3dadd( -11.2683, 141.849, -16.5498, 0.96 ) }
    dend_29 { pt3dadd( -11.2449, 142.126, -16.5597, 0.96 ) }
    dend_29 { pt3dadd( -11.2157, 142.824, -16.5791, 0.29 ) }
    dend_29 { pt3dadd( -11.2195, 143.236, -16.5884, 0.29 ) }
    dend_29 { pt3dadd( -11.2396, 143.797, -16.5947, 1.47 ) }
    dend_29 { pt3dadd( -11.2671, 144.336, -16.6137, 2.06 ) }
    dend_29 { pt3dadd( -11.2749, 144.534, -16.6236, 2.5 ) }
    dend_29 { pt3dadd( -11.2865, 144.851, -16.643, 2.43 ) }
    dend_29 { pt3dadd( -11.2958, 145.192, -16.666, 2.14 ) }
    dend_29 { pt3dadd( -11.3034, 145.582, -16.6944, 1.77 ) }
    dend_29 { pt3dadd( -11.3125, 146.111, -16.733, 0.66 ) }
    dend_29 { pt3dadd( -11.3293, 146.914, -16.7885, 0.44 ) }
    dend_29 { pt3dadd( -11.3487, 147.553, -16.8276, 0.37 ) }
    dend_29 { pt3dadd( -11.3756, 148.15, -16.8602, 0.37 ) }
    dend_29 { pt3dadd( -11.4192, 148.748, -16.8875, 1.33 ) }
    dend_29 { pt3dadd( -11.4738, 149.284, -16.9085, 1.77 ) }
    dend_29 { pt3dadd( -11.5403, 149.787, -16.9219, 2.28 ) }
    dend_29 { pt3dadd( -11.5933, 150.098, -16.9339, 2.65 ) }
    dend_29 { pt3dadd( -11.6414, 150.366, -16.9462, 2.8 ) }
    dend_29 { pt3dadd( -11.7105, 150.738, -16.9642, 2.5 ) }
    dend_29 { pt3dadd( -11.7636, 151.05, -16.9781, 1.99 ) }
    dend_29 { pt3dadd( -11.8045, 151.314, -16.9902, 1.77 ) }
    dend_29 { pt3dadd( -11.8598, 151.745, -17.0089, 0.81 ) }
    dend_29 { pt3dadd( -11.9108, 152.331, -17.0279, 0.44 ) }
    dend_29 { pt3dadd( -11.9445, 152.926, -17.0441, 0.37 ) }
    dend_29 { pt3dadd( -11.9534, 153.451, -17.0527, 0.74 ) }
    dend_29 { pt3dadd( -11.9531, 153.718, -17.0545, 0.74 ) }
    dend_29 { pt3dadd( -11.953, 154.108, -17.0535, 0.74 ) }
    dend_29 { pt3dadd( -11.963, 154.893, -17.0531, 0.52 ) }
    dend_29 { pt3dadd( -11.964, 154.931, -17.0534, 0.44 ) }
    dend_29 { pt3dadd( -11.9874, 155.523, -17.0618, 0.44 ) }
    dend_29 { pt3dadd( -12.0149, 156.018, -17.0713, 0.44 ) }
    dend_29 { pt3dadd( -12.0742, 156.883, -17.0912, 0.44 ) }
    dend_29 { pt3dadd( -12.1682, 157.931, -17.1195, 1.55 ) }
    dend_29 { pt3dadd( -12.2212, 158.435, -17.1348, 2.43 ) }
    dend_29 { pt3dadd( -12.2592, 158.801, -17.145, 2.65 ) }
    dend_29 { pt3dadd( -12.2919, 159.117, -17.1579, 2.87 ) }
    dend_29 { pt3dadd( -12.3391, 159.577, -17.1798, 2.36 ) }
    dend_29 { pt3dadd( -12.3892, 160.068, -17.2139, 1.47 ) }
    dend_29 { pt3dadd( -12.4228, 160.396, -17.2362, 0.96 ) }
    dend_29 { pt3dadd( -12.4952, 161.045, -17.2822, 0.37 ) }
    dend_29 { pt3dadd( -12.563, 161.623, -17.3224, 0.37 ) }
    dend_29 { pt3dadd( -12.648, 162.337, -17.3696, 0.29 ) }
    dend_29 { pt3dadd( -12.7079, 162.889, -17.4081, 1.69 ) }
    dend_29 { pt3dadd( -12.7627, 163.436, -17.4622, 2.28 ) }
    dend_29 { pt3dadd( -12.7899, 163.68, -17.493, 2.73 ) }
    dend_29 { pt3dadd( -12.8197, 163.909, -17.5271, 2.8 ) }
    dend_29 { pt3dadd( -12.8775, 164.322, -17.593, 1.99 ) }
    dend_29 { pt3dadd( -12.9614, 164.904, -17.6995, 0.88 ) }
    dend_29 { pt3dadd( -13.0803, 165.584, -17.8334, 0.29 ) }
    dend_29 { pt3dadd( -13.1775, 166.041, -17.9359, 0.37 ) }
    dend_29 { pt3dadd( -13.2538, 166.365, -18.0082, 0.44 ) }
    dend_29 { pt3dadd( -13.3007, 166.539, -18.0428, 0.59 ) }
    dend_29 { pt3dadd( -13.3253, 166.625, -18.0554, 0.59 ) }
    dend_29 { pt3dadd( -13.4037, 166.906, -18.0768, 0.44 ) }
    dend_29 { pt3dadd( -13.5069, 167.357, -18.0846, 0.37 ) }
    dend_29 { pt3dadd( -13.5147, 167.4, -18.0847, 0.37 ) }
    dend_29 { pt3dadd( -13.6028, 168.08, -18.0849, 0.52 ) }
    dend_29 { pt3dadd( -13.6584, 168.675, -18.0828, 0.81 ) }
    dend_29 { pt3dadd( -13.6736, 168.958, -18.0831, 0.81 ) }
    dend_29 { pt3dadd( -13.6789, 169.249, -18.0854, 0.66 ) }
    dend_29 { pt3dadd( -13.6786, 169.286, -18.0868, 0.66 ) }
    dend_29 { pt3dadd( -13.6795, 169.632, -18.1135, 0.44 ) }
    dend_29 { pt3dadd( -13.6806, 170.277, -18.1864, 0.37 ) }
    dend_29 { pt3dadd( -13.6804, 170.881, -18.2629, 0.37 ) }
    dend_29 { pt3dadd( -13.6801, 170.918, -18.2692, 0.37 ) }
    dend_29 { pt3dadd( -13.6679, 171.511, -18.4006, 1.62 ) }
    dend_29 { pt3dadd( -13.6562, 172.015, -18.5317, 2.65 ) }
    dend_29 { pt3dadd( -13.6489, 172.305, -18.6159, 2.65 ) }
    dend_29 { pt3dadd( -13.6302, 172.911, -18.8089, 1.92 ) }
    dend_29 { pt3dadd( -13.6071, 173.645, -19.0494, 0.74 ) }
    dend_29 { pt3dadd( -13.5952, 174.308, -19.2584, 0.37 ) }
    dend_29 { pt3dadd( -13.6006, 174.895, -19.4164, 0.37 ) }
    dend_29 { pt3dadd( -13.6022, 174.931, -19.4243, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -13.6408, 175.309, -19.4868, 0.37 ) }
    dend_29 { pt3dadd( -13.6561, 175.402, -19.4957, 0.37 ) }
    dend_29 { pt3dadd( -13.7747, 175.94, -19.4933, 0.37 ) }
    dend_29 { pt3dadd( -13.939, 176.589, -19.4535, 1.03 ) }
    dend_29 { pt3dadd( -14.0745, 177.113, -19.4127, 1.77 ) }
    dend_29 { pt3dadd( -14.1499, 177.42, -19.3898, 2.06 ) }
    dend_29 { pt3dadd( -14.2227, 177.727, -19.3664, 1.92 ) }
    dend_29 { pt3dadd( -14.3211, 178.18, -19.337, 1.33 ) }
    dend_29 { pt3dadd( -14.3821, 178.5, -19.3221, 0.59 ) }
    dend_29 { pt3dadd( -14.4719, 179.037, -19.3147, 0.37 ) }
    dend_29 { pt3dadd( -14.5124, 179.366, -19.3097, 0.59 ) }
    dend_29 { pt3dadd( -14.5268, 179.594, -19.3063, 0.66 ) }
    dend_29 { pt3dadd( -14.5294, 179.733, -19.3046, 0.66 ) }
    dend_29 { pt3dadd( -14.5309, 180.057, -19.3025, 0.37 ) }
    dend_29 { pt3dadd( -14.5342, 180.382, -19.3015, 0.37 ) }
    dend_29 { pt3dadd( -14.556, 180.989, -19.3012, 0.37 ) }
    dend_29 { pt3dadd( -14.589, 181.58, -19.302, 0.37 ) }
    dend_29 { pt3dadd( -14.6271, 182.131, -19.3035, 0.59 ) }
    dend_29 { pt3dadd( -14.69, 182.951, -19.3062, 0.52 ) }
    dend_29 { pt3dadd( -14.731, 183.45, -19.3081, 1.33 ) }
    dend_29 { pt3dadd( -14.7719, 183.922, -19.3162, 2.14 ) }
    dend_29 { pt3dadd( -14.8164, 184.386, -19.3383, 2.36 ) }
    dend_29 { pt3dadd( -14.848, 184.796, -19.37, 2.58 ) }
    dend_29 { pt3dadd( -14.8577, 185.139, -19.4035, 2.36 ) }
    dend_29 { pt3dadd( -14.8517, 185.652, -19.4587, 1.62 ) }
    dend_29 { pt3dadd( -14.8353, 186.157, -19.5168, 0.81 ) }
    dend_29 { pt3dadd( -14.8064, 186.793, -19.59, 0.52 ) }
    dend_29 { pt3dadd( -14.7759, 187.472, -19.6606, 0.52 ) }
    dend_29 { pt3dadd( -14.7556, 187.958, -19.7057, 0.44 ) }
    dend_29 { pt3dadd( -14.7281, 188.867, -19.778, 0.44 ) }
    dend_29 { pt3dadd( -14.7148, 189.77, -19.8331, 1.11 ) }
    dend_29 { pt3dadd( -14.7201, 190.274, -19.8497, 1.84 ) }
    dend_29 { pt3dadd( -14.7424, 190.77, -19.8561, 2.36 ) }
    dend_29 { pt3dadd( -14.7597, 190.946, -19.8575, 2.5 ) }
    dend_29 { pt3dadd( -14.8217, 191.354, -19.8605, 2.21 ) }
    dend_29 { pt3dadd( -14.8978, 191.752, -19.8616, 1.55 ) }
    dend_29 { pt3dadd( -14.9773, 192.113, -19.8605, 0.96 ) }
    dend_29 { pt3dadd( -15.0557, 192.456, -19.8607, 0.66 ) }
    dend_29 { pt3dadd( -15.1659, 192.995, -19.8627, 0.37 ) }
    dend_29 { pt3dadd( -15.2467, 193.478, -19.8616, 0.66 ) }
    dend_29 { pt3dadd( -15.2978, 193.848, -19.8579, 0.88 ) }
    dend_29 { pt3dadd( -15.3586, 194.444, -19.8481, 0.37 ) }
    dend_29 { pt3dadd( -15.3837, 194.812, -19.8403, 0.37 ) }
    dend_29 { pt3dadd( -15.4069, 195.41, -19.8233, 0.37 ) }
    dend_29 { pt3dadd( -15.4082, 196.146, -19.8, 1.11 ) }
    dend_29 { pt3dadd( -15.4069, 196.184, -19.7988, 1.11 ) }
    dend_29 { pt3dadd( -15.367, 196.694, -19.7894, 1.99 ) }
    dend_29 { pt3dadd( -15.3244, 197.072, -19.7877, 2.21 ) }
    dend_29 { pt3dadd( -15.2885, 197.344, -19.7906, 2.36 ) }
    dend_29 { pt3dadd( -15.2044, 197.974, -19.8031, 1.33 ) }
    dend_29 { pt3dadd( -15.1462, 198.411, -19.8149, 0.52 ) }
    dend_29 { pt3dadd( -15.0712, 199.065, -19.8353, 0.29 ) }
    dend_29 { pt3dadd( -15.0462, 199.338, -19.8441, 0.59 ) }
    dend_29 { pt3dadd( -15.0297, 199.567, -19.8509, 0.59 ) }
    dend_29 { pt3dadd( -15.004, 200.023, -19.8623, 0.44 ) }
    dend_29 { pt3dadd( -14.9871, 200.44, -19.8699, 0.37 ) }
    dend_29 { pt3dadd( -14.9712, 200.901, -19.8733, 0.37 ) }
    dend_29 { pt3dadd( -14.9539, 201.418, -19.8773, 1.18 ) }
    dend_29 { pt3dadd( -14.9341, 201.797, -19.8849, 1.77 ) }
    dend_29 { pt3dadd( -14.9042, 202.208, -19.8968, 2.06 ) }
    dend_29 { pt3dadd( -14.8721, 202.577, -19.9104, 1.92 ) }
    dend_29 { pt3dadd( -14.8381, 202.937, -19.9263, 1.55 ) }
    dend_29 { pt3dadd( -14.798, 203.499, -19.954, 0.37 ) }
    dend_29 { pt3dadd( -14.7698, 204.112, -19.9866, 0.37 ) }
    dend_29 { pt3dadd( -14.7697, 204.157, -19.99, 0.37 ) }
    dend_29 { pt3dadd( -14.7872, 204.616, -20.0297, 0.37 ) }
    dend_29 { pt3dadd( -14.7901, 204.661, -20.0338, 0.37 ) }
    dend_29 { pt3dadd( -14.8576, 205.523, -20.1086, 0.37 ) }
    dend_29 { pt3dadd( -14.862, 205.568, -20.1121, 0.37 ) }
    dend_29 { pt3dadd( -14.947, 206.372, -20.1826, 1.18 ) }
    dend_29 { pt3dadd( -14.9996, 206.868, -20.2276, 1.62 ) }
    dend_29 { pt3dadd( -15.0246, 207.14, -20.2517, 1.84 ) }
    dend_29 { pt3dadd( -15.0547, 207.604, -20.2885, 1.55 ) }
    dend_29 { pt3dadd( -15.066, 208.059, -20.3263, 1.11 ) }
    dend_29 { pt3dadd( -15.0691, 208.509, -20.3624, 0.52 ) }
    dend_29 { pt3dadd( -15.0609, 209.192, -20.4126, 0.44 ) }
    dend_29 { pt3dadd( -15.048, 209.721, -20.454, 0.37 ) }
    dend_29 { pt3dadd( -15.0264, 210.392, -20.506, 0.37 ) }
    dend_29 { pt3dadd( -14.9851, 211.287, -20.5792, 1.33 ) }
    dend_29 { pt3dadd( -14.9708, 211.558, -20.6007, 1.84 ) }
    dend_29 { pt3dadd( -14.9656, 211.655, -20.6075, 1.84 ) }
    dend_29 { pt3dadd( -14.9502, 211.928, -20.6264, 1.84 ) }
    dend_29 { pt3dadd( -14.9296, 212.537, -20.6638, 1.25 ) }
    dend_29 { pt3dadd( -14.9221, 212.901, -20.688, 0.74 ) }
    dend_29 { pt3dadd( -14.92, 213.496, -20.725, 0.37 ) }
    dend_29 { pt3dadd( -14.9188, 213.928, -20.7537, 0.44 ) }
    dend_29 { pt3dadd( -14.9179, 214.402, -20.7913, 0.44 ) }
    dend_29 { pt3dadd( -14.9197, 215.083, -20.851, 0.44 ) }
    dend_29 { pt3dadd( -14.9249, 215.648, -20.9044, 1.03 ) }
    dend_29 { pt3dadd( -14.9353, 216.154, -20.9523, 1.18 ) }
    dend_29 { pt3dadd( -14.9432, 216.585, -21.0011, 0.74 ) }
    dend_29 { pt3dadd( -14.9516, 216.905, -21.0402, 0.74 ) }
    dend_29 { pt3dadd( -14.9692, 217.401, -21.1018, 0.59 ) }
    dend_29 { pt3dadd( -14.9712, 217.446, -21.1071, 0.59 ) }
    dend_29 { pt3dadd( -14.9906, 217.811, -21.1411, 0.59 ) }
    dend_29 { pt3dadd( -15.0251, 218.538, -21.217, 1.47 ) }
    dend_29 { pt3dadd( -15.0426, 218.992, -21.2632, 2.21 ) }
    dend_29 { pt3dadd( -15.0533, 219.358, -21.2977, 2.5 ) }
    dend_29 { pt3dadd( -15.0553, 219.674, -21.3266, 2.65 ) }
    dend_29 { pt3dadd( -15.0434, 220.277, -21.3742, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -15.0121, 220.89, -21.4132, 0.74 ) }
    dend_29 { pt3dadd( -14.9552, 221.603, -21.4551, 0.52 ) }
    dend_29 { pt3dadd( -14.95, 221.653, -21.4587, 0.52 ) }
    dend_29 { pt3dadd( -14.8755, 222.232, -21.5058, 0.52 ) }
    dend_29 { pt3dadd( -14.7581, 223.001, -21.5763, 1.33 ) }
    dend_29 { pt3dadd( -14.6665, 223.541, -21.6285, 1.4 ) }
    dend_29 { pt3dadd( -14.5635, 224.112, -21.6844, 1.18 ) }
    dend_29 { pt3dadd( -14.4892, 224.553, -21.7364, 0.52 ) }
    dend_29 { pt3dadd( -14.4769, 224.64, -21.7485, 0.52 ) }
    dend_29 { pt3dadd( -14.4182, 225.156, -21.8292, 0.52 ) }
    dend_29 { pt3dadd( -14.3801, 225.581, -21.899, 0.52 ) }
    dend_29 { pt3dadd( -14.3283, 226.355, -22.0194, 0.74 ) }
    dend_29 { pt3dadd( -14.2974, 227.035, -22.1098, 0.96 ) }
    dend_29 { pt3dadd( -14.2751, 227.747, -22.1983, 1.99 ) }
    dend_29 { pt3dadd( -14.2699, 227.982, -22.2254, 2.58 ) }
    dend_29 { pt3dadd( -14.261, 228.312, -22.258, 2.36 ) }
    dend_29 { pt3dadd( -14.2464, 228.685, -22.2895, 2.14 ) }
    dend_29 { pt3dadd( -14.2132, 229.231, -22.3237, 1.03 ) }
    dend_29 { pt3dadd( -14.1587, 229.816, -22.3522, 0.52 ) }
    dend_29 { pt3dadd( -14.0846, 230.486, -22.3834, 0.52 ) }
    dend_29 { pt3dadd( -14.0076, 231.191, -22.4107, 0.52 ) }
    dend_29 { pt3dadd( -13.968, 231.569, -22.4224, 0.88 ) }
    dend_29 { pt3dadd( -13.9311, 231.931, -22.4308, 0.52 ) }
    dend_29 { pt3dadd( -13.8757, 232.523, -22.4386, 0.52 ) }
    dend_29 { pt3dadd( -13.84, 232.997, -22.4383, 0.52 ) }
    dend_29 { pt3dadd( -13.8036, 233.762, -22.4365, 1.4 ) }
    dend_29 { pt3dadd( -13.7932, 234.186, -22.4354, 1.77 ) }
    dend_29 { pt3dadd( -13.7906, 234.468, -22.4334, 1.92 ) }
    dend_29 { pt3dadd( -13.7904, 234.741, -22.4301, 1.62 ) }
    dend_29 { pt3dadd( -13.7926, 235.208, -22.4222, 1.11 ) }
    dend_29 { pt3dadd( -13.7936, 235.762, -22.4136, 0.74 ) }
    dend_29 { pt3dadd( -13.793, 236.57, -22.4106, 0.59 ) }
    dend_29 { pt3dadd( -13.7967, 237.537, -22.407, 0.59 ) }
    dend_29 { pt3dadd( -13.8019, 238.295, -22.4041, 0.44 ) }
    dend_29 { pt3dadd( -13.8032, 238.618, -22.4027, 0.66 ) }
    dend_29 { pt3dadd( -13.8033, 238.663, -22.4024, 0.66 ) }
    dend_29 { pt3dadd( -13.8028, 239.398, -22.3978, 1.33 ) }
    dend_29 { pt3dadd( -13.8029, 239.995, -22.3935, 2.21 ) }
    dend_29 { pt3dadd( -13.8018, 240.456, -22.3828, 2.73 ) }
    dend_29 { pt3dadd( -13.8075, 240.889, -22.3704, 2.87 ) }
    dend_29 { pt3dadd( -13.8116, 241.09, -22.3662, 3.09 ) }
    dend_29 { pt3dadd( -13.8264, 241.514, -22.3631, 2.36 ) }
    dend_29 { pt3dadd( -13.853, 242.018, -22.3654, 1.25 ) }
    dend_29 { pt3dadd( -13.8792, 242.379, -22.3725, 0.66 ) }
    dend_29 { pt3dadd( -13.9499, 243.114, -22.4064, 0.37 ) }
    dend_29 { pt3dadd( -14.0179, 243.676, -22.4442, 0.66 ) }
    dend_29 { pt3dadd( -14.0709, 244.089, -22.4779, 0.52 ) }
    dend_29 { pt3dadd( -14.0991, 244.318, -22.4995, 0.66 ) }
    dend_29 { pt3dadd( -14.1484, 244.77, -22.5464, 0.74 ) }
    dend_29 { pt3dadd( -14.193, 245.288, -22.6115, 0.81 ) }
    dend_29 { pt3dadd( -14.2234, 245.834, -22.6908, 1.25 ) }
    dend_29 { pt3dadd( -14.231, 246.18, -22.7442, 1.69 ) }
    dend_29 { pt3dadd( -14.228, 246.437, -22.7861, 1.69 ) }
    dend_29 { pt3dadd( -14.2086, 246.94, -22.8698, 1.4 ) }
    dend_29 { pt3dadd( -14.1756, 247.491, -22.9629, 1.11 ) }
    dend_29 { pt3dadd( -14.14, 247.938, -23.0313, 0.74 ) }
    dend_29 { pt3dadd( -14.0866, 248.603, -23.127, 0.59 ) }
    dend_29 { pt3dadd( -14.0832, 248.652, -23.1338, 0.59 ) }
    dend_29 { pt3dadd( -14.0577, 249.158, -23.1944, 0.59 ) }
    dend_29 { pt3dadd( -14.0559, 249.202, -23.1983, 0.59 ) }
    dend_29 { pt3dadd( -14.0395, 250.07, -23.2408, 0.59 ) }
    dend_29 { pt3dadd( -14.0459, 250.617, -23.2533, 1.11 ) }
    dend_29 { pt3dadd( -14.048, 250.661, -23.2545, 1.11 ) }
    dend_29 { pt3dadd( -14.0771, 251.065, -23.2657, 1.77 ) }
    dend_29 { pt3dadd( -14.1119, 251.444, -23.2786, 2.06 ) }
    dend_29 { pt3dadd( -14.1453, 251.759, -23.2926, 2.06 ) }
    dend_29 { pt3dadd( -14.1973, 252.167, -23.3136, 1.77 ) }
    dend_29 { pt3dadd( -14.2321, 252.447, -23.3277, 1.4 ) }
    dend_29 { pt3dadd( -14.2693, 252.768, -23.3437, 0.81 ) }
    dend_29 { pt3dadd( -14.3536, 253.496, -23.3823, 0.59 ) }
    dend_29 { pt3dadd( -14.4342, 254.232, -23.4217, 0.59 ) }
    dend_29 { pt3dadd( -14.4767, 254.685, -23.4502, 0.96 ) }
    dend_29 { pt3dadd( -14.5069, 255.001, -23.4716, 0.96 ) }
    dend_29 { pt3dadd( -14.5165, 255.099, -23.4782, 0.96 ) }
    dend_29 { pt3dadd( -14.5402, 255.346, -23.496, 0.81 ) }
    dend_29 { pt3dadd( -14.5793, 255.777, -23.5268, 0.81 ) }
    dend_29 { pt3dadd( -14.6356, 256.477, -23.5757, 0.37 ) }
    dend_29 { pt3dadd( -14.685, 257.163, -23.6233, 0.37 ) }
    dend_29 { pt3dadd( -14.7259, 257.804, -23.6549, 0.37 ) }
    dend_29 { pt3dadd( -14.7519, 258.25, -23.6687, 1.25 ) }
    dend_29 { pt3dadd( -14.7711, 258.711, -23.6687, 1.77 ) }
    dend_29 { pt3dadd( -14.7835, 259.092, -23.6564, 2.28 ) }
    dend_29 { pt3dadd( -14.7865, 259.453, -23.6314, 2.58 ) }
    dend_29 { pt3dadd( -14.7796, 259.912, -23.5915, 2.36 ) }
    dend_29 { pt3dadd( -14.7732, 260.316, -23.5519, 1.92 ) }
    dend_29 { pt3dadd( -14.7652, 260.814, -23.5021, 0.96 ) }
    dend_29 { pt3dadd( -14.7576, 261.279, -23.4598, 0.37 ) }
    dend_29 { pt3dadd( -14.7522, 261.94, -23.4103, 0.37 ) }
    dend_29 { pt3dadd( -14.7528, 262.406, -23.3905, 0.74 ) }
    dend_29 { pt3dadd( -14.7565, 262.681, -23.389, 0.74 ) }
    dend_29 { pt3dadd( -14.7667, 263.08, -23.3954, 0.74 ) }
    dend_29 { pt3dadd( -14.7816, 263.493, -23.4216, 0.37 ) }
    dend_29 { pt3dadd( -14.7989, 263.946, -23.4737, 0.29 ) }
    dend_29 { pt3dadd( -14.8126, 264.294, -23.5312, 0.29 ) }
    dend_29 { pt3dadd( -14.8141, 264.337, -23.54, 0.29 ) }
    dend_29 { pt3dadd( -14.8358, 265.189, -23.7452, 0.29 ) }
    dend_29 { pt3dadd( -14.8377, 265.631, -23.8656, 0.74 ) }
    dend_29 { pt3dadd( -14.8268, 266.303, -24.055, 1.84 ) }
    dend_29 { pt3dadd( -14.8197, 266.552, -24.1224, 2.28 ) }
    dend_29 { pt3dadd( -14.8188, 266.588, -24.131, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -14.8115, 266.99, -24.2166, 2.06 ) }
    dend_29 { pt3dadd( -14.8053, 267.542, -24.3172, 1.25 ) }
    dend_29 { pt3dadd( -14.8109, 268.188, -24.399, 0.15 ) }
    dend_29 { pt3dadd( -14.8179, 268.556, -24.4293, 0.15 ) }
    dend_29 { pt3dadd( -14.8353, 269.112, -24.46, 0.74 ) }
    dend_29 { pt3dadd( -14.8449, 269.337, -24.4673, 1.03 ) }
    dend_29 { pt3dadd( -14.8606, 269.617, -24.4705, 1.03 ) }
    dend_29 { pt3dadd( -14.8824, 269.929, -24.4714, 0.74 ) }
    dend_29 { pt3dadd( -14.9094, 270.368, -24.4911, 0.22 ) }
    dend_29 { pt3dadd( -14.9364, 270.912, -24.5308, 0.22 ) }
    dend_29 { pt3dadd( -14.9711, 271.83, -24.6119, 0.88 ) }
    dend_29 { pt3dadd( -14.9827, 272.196, -24.6455, 1.47 ) }
    dend_29 { pt3dadd( -14.9909, 272.512, -24.6771, 1.69 ) }
    dend_29 { pt3dadd( -15.0039, 273.196, -24.7482, 1.03 ) }
    dend_29 { pt3dadd( -15.0161, 273.892, -24.8218, 0.37 ) }
    dend_29 { pt3dadd( -15.0197, 274.821, -24.9168, 0.37 ) }
    dend_29 { pt3dadd( -15.0102, 275.645, -25.0029, 0.29 ) }
    dend_29 { pt3dadd( -14.9973, 276.49, -25.084, 1.4 ) }
    dend_29 { pt3dadd( -14.9931, 276.821, -25.1111, 1.84 ) }
    dend_29 { pt3dadd( -14.9904, 277.188, -25.1335, 1.69 ) }
    dend_29 { pt3dadd( -14.9864, 277.692, -25.1678, 0.81 ) }
    dend_29 { pt3dadd( -14.9799, 278.537, -25.2274, 0.29 ) }
    dend_29 { pt3dadd( -14.9727, 279.308, -25.2795, 0.29 ) }
    dend_29 { pt3dadd( -14.9685, 279.714, -25.3015, 0.96 ) }
    dend_29 { pt3dadd( -14.9656, 280.088, -25.3187, 1.33 ) }
    dend_29 { pt3dadd( -14.9616, 280.438, -25.3301, 1.33 ) }
    dend_29 { pt3dadd( -14.9566, 280.749, -25.339, 1.03 ) }
    dend_29 { pt3dadd( -14.9553, 280.788, -25.3397, 1.03 ) }
    dend_29 { pt3dadd( -14.9173, 281.499, -25.3567, 0.29 ) }
    dend_29 { pt3dadd( -14.8761, 282.145, -25.3744, 0.29 ) }
    dend_29 { pt3dadd( -14.8253, 282.956, -25.412, 0.88 ) }
    dend_29 { pt3dadd( -14.795, 283.547, -25.4465, 1.69 ) }
    dend_29 { pt3dadd( -14.7814, 283.883, -25.4681, 2.36 ) }
    dend_29 { pt3dadd( -14.7779, 284.07, -25.4806, 2.58 ) }
    dend_29 { pt3dadd( -14.7779, 284.545, -25.5149, 2.06 ) }
    dend_29 { pt3dadd( -14.7871, 285.499, -25.5788, 0.37 ) }
    dend_29 { pt3dadd( -14.8006, 286.132, -25.617, 0.37 ) }
    dend_29 { pt3dadd( -14.8231, 286.823, -25.6495, 0.37 ) }
    dend_29 { pt3dadd( -14.8415, 287.369, -25.6715, 0.37 ) }
    dend_29 { pt3dadd( -14.8428, 287.414, -25.6729, 0.37 ) }
    dend_29 { pt3dadd( -14.8561, 288.468, -25.6899, 0.37 ) }
    dend_29 { pt3dadd( -14.8554, 288.513, -25.6909, 0.37 ) }
    dend_29 { pt3dadd( -14.8272, 289.107, -25.7151, 0.37 ) }
    dend_29 { pt3dadd( -14.7954, 289.575, -25.7416, 0.96 ) }
    dend_29 { pt3dadd( -14.7539, 290.107, -25.777, 1.25 ) }
    dend_29 { pt3dadd( -14.7094, 290.649, -25.8164, 0.88 ) }
    dend_29 { pt3dadd( -14.6306, 291.527, -25.8874, 0.29 ) }
    dend_29 { pt3dadd( -14.624, 291.594, -25.8927, 0.29 ) }
    dend_29 { pt3dadd( -14.562, 292.142, -25.9475, 0.88 ) }
    dend_29 { pt3dadd( -14.5046, 292.646, -26.0008, 1.62 ) }
    dend_29 { pt3dadd( -14.4711, 292.947, -26.0314, 1.99 ) }
    dend_29 { pt3dadd( -14.436, 293.254, -26.058, 1.99 ) }
    dend_29 { pt3dadd( -14.3992, 293.533, -26.0745, 1.69 ) }
    dend_29 { pt3dadd( -14.3078, 294.138, -26.1211, 0.59 ) }
    dend_29 { pt3dadd( -14.1789, 294.895, -26.1852, 0.29 ) }
    dend_29 { pt3dadd( -14.1014, 295.355, -26.2327, 0.81 ) }
    dend_29 { pt3dadd( -14.036, 295.756, -26.277, 0.81 ) }
    dend_29 { pt3dadd( -13.9495, 296.319, -26.3402, 0.29 ) }
    dend_29 { pt3dadd( -13.865, 296.92, -26.4054, 0.29 ) }
    dend_29 { pt3dadd( -13.7466, 297.831, -26.5234, 0.29 ) }
    dend_29 { pt3dadd( -13.642, 298.732, -26.6681, 1.25 ) }
    dend_29 { pt3dadd( -13.606, 299.074, -26.7269, 1.69 ) }
    dend_29 { pt3dadd( -13.5794, 299.346, -26.7748, 1.92 ) }
    dend_29 { pt3dadd( -13.5358, 299.831, -26.8582, 1.47 ) }
    dend_29 { pt3dadd( -13.4526, 300.681, -26.9906, 0.29 ) }
    dend_29 { pt3dadd( -13.3918, 301.187, -27.0689, 0.29 ) }
    dend_29 { pt3dadd( -13.2925, 301.863, -27.162, 0.88 ) }
    dend_29 { pt3dadd( -13.2384, 302.187, -27.2029, 1.18 ) }
    dend_29 { pt3dadd( -13.1775, 302.51, -27.2382, 0.96 ) }
    dend_29 { pt3dadd( -13.0842, 302.962, -27.2746, 0.44 ) }
    dend_29 { pt3dadd( -12.9664, 303.547, -27.2917, 0.29 ) }
    dend_29 { pt3dadd( -12.9542, 303.61, -27.2957, 0.29 ) }
    dend_29 { pt3dadd( -12.875, 304.138, -27.3458, 0.29 ) }
    dend_29 { pt3dadd( -12.8702, 304.183, -27.3506, 0.29 ) }
    dend_29 { pt3dadd( -12.8438, 304.505, -27.3899, 0.81 ) }
    dend_29 { pt3dadd( -12.8266, 304.775, -27.4236, 0.81 ) }
    dend_29 { pt3dadd( -12.7913, 305.262, -27.4811, 0.66 ) }
    dend_29 { pt3dadd( -12.7309, 305.946, -27.5586, 0.29 ) }
    dend_29 { pt3dadd( -12.6676, 306.506, -27.6149, 0.29 ) }
    dend_29 { pt3dadd( -12.5971, 307.057, -27.6706, 1.11 ) }
    dend_29 { pt3dadd( -12.5333, 307.545, -27.7167, 1.69 ) }
    dend_29 { pt3dadd( -12.4939, 307.887, -27.7483, 1.92 ) }
    dend_29 { pt3dadd( -12.4651, 308.188, -27.773, 1.92 ) }
    dend_29 { pt3dadd( -12.4108, 308.947, -27.8406, 0.74 ) }
    dend_29 { pt3dadd( -12.3848, 309.547, -27.8947, 0.37 ) }
    dend_29 { pt3dadd( -12.3744, 310.224, -27.9526, 0.37 ) }
    dend_29 { pt3dadd( -12.379, 311.017, -28.0247, 0.29 ) }
    dend_29 { pt3dadd( -12.3888, 311.482, -28.0704, 0.29 ) }
    dend_29 { pt3dadd( -12.3974, 311.892, -28.1142, 0.88 ) }
    dend_29 { pt3dadd( -12.4014, 312.158, -28.1429, 0.88 ) }
    dend_29 { pt3dadd( -12.3972, 312.495, -28.1735, 0.52 ) }
    dend_29 { pt3dadd( -12.3797, 312.887, -28.2083, 0.29 ) }
    dend_29 { pt3dadd( -12.3535, 313.299, -28.2418, 0.29 ) }
    dend_29 { pt3dadd( -12.3259, 313.84, -28.2851, 0.29 ) }
    dend_29 { pt3dadd( -12.3093, 314.35, -28.3224, 1.55 ) }
    dend_29 { pt3dadd( -12.2915, 314.953, -28.3586, 2.58 ) }
    dend_29 { pt3dadd( -12.2831, 315.241, -28.3702, 2.65 ) }
    dend_29 { pt3dadd( -12.2642, 315.698, -28.3787, 2.21 ) }
    dend_29 { pt3dadd( -12.2287, 316.293, -28.3869, 1.11 ) }
    dend_29 { pt3dadd( -12.1874, 316.837, -28.3953, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -12.1288, 317.496, -28.4091, 0.52 ) }
    dend_29 { pt3dadd( -12.0542, 318.167, -28.4251, 0.74 ) }
    dend_29 { pt3dadd( -11.9704, 318.801, -28.4413, 0.88 ) }
    dend_29 { pt3dadd( -11.8687, 319.413, -28.4572, 1.33 ) }
    dend_29 { pt3dadd( -11.8609, 319.45, -28.4587, 1.33 ) }
    dend_29 { pt3dadd( -11.7711, 319.8, -28.4771, 1.62 ) }
    dend_29 { pt3dadd( -11.7009, 320.044, -28.4918, 1.62 ) }
    dend_29 { pt3dadd( -11.6853, 320.092, -28.4944, 1.62 ) }
    dend_29 { pt3dadd( -11.6455, 320.209, -28.4989, 1.62 ) }
    dend_29 { pt3dadd( -11.404, 320.903, -28.5115, 0.52 ) }
    dend_29 { pt3dadd( -11.2232, 321.436, -28.5195, 0.29 ) }
    dend_29 { pt3dadd( -11.0603, 321.916, -28.5271, 0.29 ) }
    dend_29 { pt3dadd( -10.9107, 322.403, -28.5133, 0.96 ) }
    dend_29 { pt3dadd( -10.8263, 322.727, -28.4866, 1.4 ) }
    dend_29 { pt3dadd( -10.8181, 322.77, -28.4811, 1.4 ) }
    dend_29 { pt3dadd( -10.7873, 323.045, -28.4355, 1.4 ) }
    dend_29 { pt3dadd( -10.7843, 323.097, -28.4251, 1.4 ) }
    dend_29 { pt3dadd( -10.7717, 323.769, -28.2831, 1.03 ) }
    dend_29 { pt3dadd( -10.7724, 324.383, -28.1537, 0.44 ) }
    dend_29 { pt3dadd( -10.7735, 325.151, -27.9996, 0.29 ) }
    dend_29 { pt3dadd( -10.777, 325.692, -27.8826, 0.29 ) }
    dend_29 { pt3dadd( -10.7818, 326.361, -27.7398, 1.33 ) }
    dend_29 { pt3dadd( -10.7852, 326.715, -27.6675, 1.84 ) }
    dend_29 { pt3dadd( -10.7898, 327.076, -27.6011, 1.84 ) }
    dend_29 { pt3dadd( -10.7968, 327.483, -27.528, 1.25 ) }
    dend_29 { pt3dadd( -10.8169, 328.249, -27.3982, 0.37 ) }
    dend_29 { pt3dadd( -10.8507, 329.096, -27.2813, 0.29 ) }
    dend_29 { pt3dadd( -10.8532, 329.139, -27.2764, 0.29 ) }
    dend_29 { pt3dadd( -10.8904, 329.64, -27.225, 0.44 ) }
    dend_29 { pt3dadd( -10.9459, 330.281, -27.1679, 0.52 ) }
    dend_29 { pt3dadd( -11.0104, 330.909, -27.1241, 0.44 ) }
    dend_29 { pt3dadd( -11.0965, 331.728, -27.0992, 0.44 ) }
    dend_29 { pt3dadd( -11.193, 332.614, -27.0805, 1.11 ) }
    dend_29 { pt3dadd( -11.2463, 333.118, -27.0736, 1.69 ) }
    dend_29 { pt3dadd( -11.2796, 333.448, -27.072, 1.84 ) }
    dend_29 { pt3dadd( -11.3109, 333.802, -27.0737, 1.84 ) }
    dend_29 { pt3dadd( -11.3646, 334.488, -27.0845, 0.66 ) }
    dend_29 { pt3dadd( -11.4145, 335.216, -27.1059, 0.37 ) }
    dend_29 { pt3dadd( -11.4198, 335.305, -27.1099, 0.37 ) }
    dend_29 { pt3dadd( -11.4678, 336.178, -27.1446, 0.37 ) }
    dend_29 { pt3dadd( -11.4946, 336.875, -27.1662, 0.96 ) }
    dend_29 { pt3dadd( -11.4954, 336.966, -27.1684, 0.96 ) }
    dend_29 { pt3dadd( -11.4845, 337.429, -27.1758, 1.55 ) }
    dend_29 { pt3dadd( -11.4533, 337.845, -27.1851, 1.84 ) }
    dend_29 { pt3dadd( -11.4485, 337.889, -27.1862, 1.84 ) }
    dend_29 { pt3dadd( -11.3969, 338.27, -27.1982, 1.69 ) }
    dend_29 { pt3dadd( -11.3199, 338.819, -27.2169, 0.74 ) }
    dend_29 { pt3dadd( -11.2446, 339.403, -27.2188, 0.29 ) }
    dend_29 { pt3dadd( -11.173, 340.056, -27.2046, 0.29 ) }
    dend_29 { pt3dadd( -11.1696, 340.101, -27.2028, 0.29 ) }
    dend_29 { pt3dadd( -11.1414, 340.74, -27.1656, 0.29 ) }
    dend_29 { pt3dadd( -11.1413, 340.784, -27.1621, 0.29 ) }
    dend_29 { pt3dadd( -11.1586, 341.427, -27.093, 0.81 ) }
    dend_29 { pt3dadd( -11.1794, 341.83, -27.0453, 1.47 ) }
    dend_29 { pt3dadd( -11.2008, 342.15, -27.0097, 1.77 ) }
    dend_29 { pt3dadd( -11.2059, 342.221, -27.0043, 1.77 ) }
    dend_29 { pt3dadd( -11.228, 342.582, -26.988, 1.55 ) }
    dend_29 { pt3dadd( -11.2333, 342.671, -26.9863, 1.55 ) }
    dend_29 { pt3dadd( -11.2579, 343.094, -26.9918, 0.96 ) }
    dend_29 { pt3dadd( -11.2742, 343.561, -26.9968, 0.59 ) }
    dend_29 { pt3dadd( -11.2922, 344.426, -26.9897, 0.29 ) }
    dend_29 { pt3dadd( -11.2989, 344.997, -26.9776, 0.29 ) }
    dend_29 { pt3dadd( -11.2991, 345.043, -26.9762, 0.29 ) }
    dend_29 { pt3dadd( -11.2958, 345.734, -26.9483, 0.59 ) }
    dend_29 { pt3dadd( -11.2885, 346.19, -26.9251, 0.81 ) }
    dend_29 { pt3dadd( -11.2667, 346.776, -26.8905, 1.25 ) }
    dend_29 { pt3dadd( -11.2497, 347.063, -26.872, 1.62 ) }
    dend_29 { pt3dadd( -11.238, 347.29, -26.8598, 1.69 ) }
    dend_29 { pt3dadd( -11.2324, 347.388, -26.8559, 1.69 ) }
    dend_29 { pt3dadd( -11.2144, 347.719, -26.8474, 1.25 ) }
    dend_29 { pt3dadd( -11.1921, 348.256, -26.8337, 0.66 ) }
    dend_29 { pt3dadd( -11.1703, 348.81, -26.8215, 0.66 ) }
    dend_29 { pt3dadd( -11.1461, 349.457, -26.8033, 0.66 ) }
    dend_29 { pt3dadd( -11.1195, 350.239, -26.7781, 0.37 ) }
    dend_29 { pt3dadd( -11.1074, 350.794, -26.7589, 0.37 ) }
    dend_29 { pt3dadd( -11.0933, 351.459, -26.734, 1.62 ) }
    dend_29 { pt3dadd( -11.0827, 351.828, -26.7193, 2.06 ) }
    dend_29 { pt3dadd( -11.0724, 352.077, -26.7093, 2.06 ) }
    dend_29 { pt3dadd( -11.0468, 352.63, -26.6884, 1.47 ) }
    dend_29 { pt3dadd( -11.0188, 353.175, -26.6704, 0.81 ) }
    dend_29 { pt3dadd( -10.976, 353.789, -26.6568, 0.37 ) }
    dend_29 { pt3dadd( -10.9114, 354.522, -26.652, 0.88 ) }
    dend_29 { pt3dadd( -10.9066, 354.566, -26.6517, 0.88 ) }
    dend_29 { pt3dadd( -10.8679, 354.88, -26.6502, 0.88 ) }
    dend_29 { pt3dadd( -10.8624, 354.919, -26.6501, 0.88 ) }
    dend_29 { pt3dadd( -10.8124, 355.303, -26.653, 1.11 ) }
    dend_29 { pt3dadd( -10.7997, 355.413, -26.6555, 1.11 ) }
    dend_29 { pt3dadd( -10.7795, 355.635, -26.6494, 1.11 ) }
    dend_29 { pt3dadd( -10.7756, 355.68, -26.6469, 1.11 ) }
    dend_29 { pt3dadd( -10.7446, 356.045, -26.6184, 0.81 ) }
    dend_29 { pt3dadd( -10.7012, 356.596, -26.5671, 0.66 ) }
    dend_29 { pt3dadd( -10.6612, 357.111, -26.5133, 0.44 ) }
    dend_29 { pt3dadd( -10.6038, 357.818, -26.4362, 0.29 ) }
    dend_29 { pt3dadd( -10.5977, 357.887, -26.4285, 0.29 ) }
    dend_29 { pt3dadd( -10.5568, 358.252, -26.3865, 0.29 ) }
    dend_29 { pt3dadd( -10.5479, 358.318, -26.3792, 0.29 ) }
    dend_29 { pt3dadd( -10.4846, 358.848, -26.3361, 0.81 ) }
    dend_29 { pt3dadd( -10.4792, 358.905, -26.3334, 0.81 ) }
    dend_29 { pt3dadd( -10.451, 359.254, -26.3164, 0.81 ) }
    dend_29 { pt3dadd( -10.442, 359.388, -26.3073, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( -10.3963, 360.089, -26.2512, 0.59 ) }
    dend_29 { pt3dadd( -10.347, 360.951, -26.1771, 0.88 ) }
    dend_29 { pt3dadd( -10.3431, 361.04, -26.1695, 0.88 ) }
    dend_29 { pt3dadd( -10.3214, 361.814, -26.077, 1.62 ) }
    dend_29 { pt3dadd( -10.3173, 362.147, -26.0299, 1.77 ) }
    dend_29 { pt3dadd( -10.3138, 362.659, -25.9508, 1.4 ) }
    dend_29 { pt3dadd( -10.3125, 363.163, -25.8668, 0.88 ) }
    dend_29 { pt3dadd( -10.3159, 364.028, -25.7209, 0.52 ) }
    dend_29 { pt3dadd( -10.3299, 364.768, -25.6089, 0.74 ) }
    dend_29 { pt3dadd( -10.3518, 365.227, -25.5528, 1.33 ) }
    dend_29 { pt3dadd( -10.3917, 365.709, -25.4955, 1.84 ) }
    dend_29 { pt3dadd( -10.4177, 365.972, -25.4671, 1.99 ) }
    dend_29 { pt3dadd( -10.4535, 366.343, -25.4333, 1.99 ) }
    dend_29 { pt3dadd( -10.496, 366.829, -25.3997, 1.18 ) }
    dend_29 { pt3dadd( -10.5466, 367.477, -25.373, 0.52 ) }
    dend_29 { pt3dadd( -10.6111, 368.444, -25.3306, 0.44 ) }
    dend_29 { pt3dadd( -10.6542, 369.171, -25.2988, 1.03 ) }
    dend_29 { pt3dadd( -10.6768, 369.731, -25.2752, 1.25 ) }
    dend_29 { pt3dadd( -10.676, 370.118, -25.2604, 1.55 ) }
    dend_29 { pt3dadd( -10.6744, 370.164, -25.2588, 1.55 ) }
    dend_29 { pt3dadd( -10.6471, 370.596, -25.2484, 1.55 ) }
    dend_29 { pt3dadd( -10.6105, 371.147, -25.2429, 1.25 ) }
    dend_29 { pt3dadd( -10.5809, 371.751, -25.2379, 0.74 ) }
    dend_29 { pt3dadd( -10.5357, 372.874, -25.2295, 0.29 ) }
    dend_29 { pt3dadd( -10.5343, 372.918, -25.2292, 0.29 ) }
    dend_29 { pt3dadd( -10.509, 373.933, -25.223, 0.29 ) }
    dend_29 { pt3dadd( -10.5009, 374.762, -25.2192, 0.29 ) }
    dend_29 { pt3dadd( -10.5089, 375.543, -25.2169, 1.47 ) }
    dend_29 { pt3dadd( -10.5242, 376.026, -25.2165, 2.06 ) }
    dend_29 { pt3dadd( -10.5433, 376.343, -25.2171, 2.36 ) }
    dend_29 { pt3dadd( -10.5798, 376.903, -25.2183, 2.06 ) }
    dend_29 { pt3dadd( -10.6457, 377.852, -25.2208, 0.81 ) }
    dend_29 { pt3dadd( -10.7165, 378.723, -25.2063, 0.81 ) }
    dend_29 { pt3dadd( -10.7665, 379.282, -25.1875, 0.52 ) }
    dend_29 { pt3dadd( -10.8296, 379.958, -25.1541, 0.81 ) }
    dend_29 { pt3dadd( -10.8877, 380.607, -25.1118, 1.03 ) }
    dend_29 { pt3dadd( -10.8912, 380.651, -25.108, 1.03 ) }
    dend_29 { pt3dadd( -10.9207, 381.242, -25.0449, 1.03 ) }
    dend_29 { pt3dadd( -10.9224, 381.351, -25.0289, 1.03 ) }
    dend_29 { pt3dadd( -10.9165, 381.956, -24.9329, 0.88 ) }
    dend_29 { pt3dadd( -10.9135, 382.026, -24.9217, 0.88 ) }
    dend_29 { pt3dadd( -10.8746, 382.667, -24.8267, 0.74 ) }
    dend_29 { pt3dadd( -10.8146, 383.38, -24.736, 0.37 ) }
    dend_29 { pt3dadd( -10.7199, 384.294, -24.6435, 1.18 ) }
    dend_29 { pt3dadd( -10.6588, 384.908, -24.5873, 1.92 ) }
    dend_29 { pt3dadd( -10.6256, 385.275, -24.5578, 1.92 ) }
    dend_29 { pt3dadd( -10.5908, 385.7, -24.5288, 1.62 ) }
    dend_29 { pt3dadd( -10.5437, 386.369, -24.4939, 0.96 ) }
    dend_29 { pt3dadd( -10.5042, 387.022, -24.4716, 0.74 ) }
    dend_29 { pt3dadd( -10.4645, 387.805, -24.4692, 0.74 ) }
    dend_29 { pt3dadd( -10.4438, 388.498, -24.4715, 0.74 ) }
    dend_29 { pt3dadd( -10.4423, 388.587, -24.4722, 0.74 ) }
    dend_29 { pt3dadd( -10.4388, 389.267, -24.4802, 0.74 ) }
    dend_29 { pt3dadd( -10.4391, 389.373, -24.4826, 0.74 ) }
    dend_29 { pt3dadd( -10.4375, 390.126, -24.5056, 0.74 ) }
    dend_29 { pt3dadd( -10.4311, 390.957, -24.5354, 0.96 ) }
    dend_29 { pt3dadd( -10.4284, 391.145, -24.5427, 0.96 ) }
    dend_29 { pt3dadd( -10.4156, 391.925, -24.5708, 0.96 ) }
    dend_29 { pt3dadd( -10.4098, 392.408, -24.5861, 1.47 ) }
    dend_29 { pt3dadd( -10.4094, 392.547, -24.5895, 1.47 ) }
    dend_29 { pt3dadd( -10.4123, 393.207, -24.5999, 1.69 ) }
    dend_29 { pt3dadd( -10.4132, 393.27, -24.6006, 1.69 ) }
    dend_29 { pt3dadd( -10.4183, 393.689, -24.6117, 1.69 ) }
    dend_29 { pt3dadd( -10.4113, 394.425, -24.6349, 1.11 ) }
    dend_29 { pt3dadd( -10.4021, 394.755, -24.6508, 1.03 ) }
    dend_29 { pt3dadd( -10.3902, 395.07, -24.6699, 1.03 ) }
    dend_29 { pt3dadd( -10.3591, 395.798, -24.7201, 0.59 ) }
    dend_29 { pt3dadd( -10.3104, 396.833, -24.795, 0.44 ) }
    dend_29 { pt3dadd( -10.251, 397.942, -24.8809, 0.44 ) }
    dend_29 { pt3dadd( -10.2049, 398.617, -24.9326, 1.11 ) }
    dend_29 { pt3dadd( -10.1489, 399.248, -24.9846, 1.69 ) }
    dend_29 { pt3dadd( -10.0948, 399.704, -25.0206, 1.99 ) }
    dend_29 { pt3dadd( -10.0275, 400.18, -25.0559, 1.62 ) }
    dend_29 { pt3dadd( -10.0205, 400.224, -25.0585, 1.62 ) }
    dend_29 { pt3dadd( -9.90408, 400.926, -25.0942, 0.88 ) }
    dend_29 { pt3dadd( -9.74792, 401.864, -25.1407, 0.74 ) }
    dend_29 { pt3dadd( -9.54846, 403.037, -25.2076, 0.74 ) }
    dend_29 { pt3dadd( -9.54111, 403.08, -25.2101, 0.74 ) }
    dend_29 { pt3dadd( -9.4184, 403.809, -25.2564, 0.74 ) }
    dend_29 { pt3dadd( -9.26714, 404.73, -25.2884, 0.88 ) }
    dend_29 { pt3dadd( -9.12223, 405.697, -25.2946, 0.66 ) }
    dend_29 { pt3dadd( -9.11534, 405.748, -25.2932, 0.66 ) }
    dend_29 { pt3dadd( -9.01003, 406.595, -25.2572, 0.66 ) }
    dend_29 { pt3dadd( -8.92992, 407.263, -25.2186, 0.66 ) }
    dend_29 { pt3dadd( -8.83959, 408.182, -25.1478, 1.25 ) }
    dend_29 { pt3dadd( -8.81362, 408.594, -25.1079, 1.99 ) }
    dend_29 { pt3dadd( -8.80888, 408.866, -25.0777, 1.99 ) }
    dend_29 { pt3dadd( -8.8191, 409.331, -25.0338, 1.55 ) }
    dend_29 { pt3dadd( -8.82616, 409.425, -25.0266, 1.55 ) }
    dend_29 { pt3dadd( -8.89279, 410.011, -24.9983, 1.33 ) }
    dend_29 { pt3dadd( -8.96683, 410.648, -25.0073, 1.18 ) }
    dend_29 { pt3dadd( -9.01484, 411.2, -25.0193, 0.96 ) }
    dend_29 { pt3dadd( -9.03646, 411.667, -25.0144, 0.96 ) }
    dend_29 { pt3dadd( -9.03599, 411.762, -25.011, 0.96 ) }
    dend_29 { pt3dadd( -9.01245, 412.305, -24.982, 0.66 ) }
    dend_29 { pt3dadd( -8.95339, 412.948, -24.9369, 0.52 ) }
    dend_29 { pt3dadd( -8.88256, 413.526, -24.8892, 0.52 ) }
    dend_29 { pt3dadd( -8.76316, 414.364, -24.8119, 0.81 ) }
    dend_29 { pt3dadd( -8.64844, 415.064, -24.743, 1.33 ) }
    dend_29 { pt3dadd( -8.63165, 415.157, -24.7328, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( -8.52607, 415.687, -24.6823, 1.77 ) }
    dend_29 { pt3dadd( -8.458, 416.015, -24.657, 2.28 ) }
    dend_29 { pt3dadd( -8.44916, 416.058, -24.6573, 2.28 ) }
    dend_29 { pt3dadd( -8.37756, 416.479, -24.7069, 2.28 ) }
    dend_29 { pt3dadd( -8.33742, 416.752, -24.7487, 2.28 ) }
    dend_29 { pt3dadd( -8.26362, 417.323, -24.8427, 1.92 ) }
    dend_29 { pt3dadd( -8.25861, 417.366, -24.8503, 1.92 ) }
    dend_29 { pt3dadd( -8.16124, 418.285, -25.0137, 0.81 ) }
    dend_29 { pt3dadd( -8.07927, 419.21, -25.122, 0.81 ) }
    dend_29 { pt3dadd( -8.07235, 419.307, -25.1289, 0.81 ) }
    dend_29 { pt3dadd( -8.04051, 419.868, -25.1422, 0.66 ) }
    dend_29 { pt3dadd( -8.0384, 419.919, -25.1401, 0.66 ) }
    dend_29 { pt3dadd( -8.02345, 420.585, -25.0868, 0.66 ) }
    dend_29 { pt3dadd( -8.02336, 421.46, -24.9607, 0.66 ) }
    dend_29 { pt3dadd( -8.02556, 421.546, -24.9454, 0.66 ) }
    dend_29 { pt3dadd( -8.05702, 422.047, -24.8395, 1.18 ) }
    dend_29 { pt3dadd( -8.06525, 422.127, -24.8215, 1.18 ) }
    dend_29 { pt3dadd( -8.11637, 422.578, -24.7325, 1.4 ) }
    dend_29 { pt3dadd( -8.13281, 422.709, -24.7112, 1.4 ) }
    dend_29 { pt3dadd( -8.17375, 423.036, -24.6715, 1.4 ) }
    dend_29 { pt3dadd( -8.2485, 423.68, -24.5953, 1.11 ) }
    dend_29 { pt3dadd( -8.3509, 424.711, -24.4829, 0.88 ) }
    dend_29 { pt3dadd( -8.42107, 425.496, -24.4117, 1.03 ) }
    dend_29 { pt3dadd( -8.48055, 426.271, -24.3572, 1.33 ) }
    dend_29 { pt3dadd( -8.48665, 426.359, -24.3531, 1.33 ) }
    dend_29 { pt3dadd( -8.50692, 426.647, -24.3417, 1.33 ) }
    dend_29 { pt3dadd( -8.56904, 427.492, -24.3251, 0.88 ) }
    dend_29 { pt3dadd( -8.6043, 427.947, -24.3105, 0.88 ) }
    dend_29 { pt3dadd( -8.65909, 428.686, -24.2768, 0.74 ) }
    dend_29 { pt3dadd( -8.69035, 429.229, -24.2456, 0.74 ) }
    dend_29 { pt3dadd( -8.71551, 429.823, -24.2077, 1.33 ) }
    dend_29 { pt3dadd( -8.71695, 429.873, -24.2043, 1.33 ) }
    dend_29 { pt3dadd( -8.72158, 430.392, -24.1858, 1.92 ) }
    dend_29 { pt3dadd( -8.72147, 430.797, -24.1883, 2.21 ) }
    dend_29 { pt3dadd( -8.72688, 431.101, -24.2123, 2.21 ) }
    dend_29 { pt3dadd( -8.75004, 431.572, -24.2774, 1.77 ) }
    dend_29 { pt3dadd( -8.78954, 432.159, -24.3812, 1.18 ) }
    dend_29 { pt3dadd( -8.84287, 432.776, -24.4963, 0.81 ) }
    dend_29 { pt3dadd( -8.9388, 433.708, -24.681, 0.74 ) }
    dend_29 { pt3dadd( -9.04688, 434.728, -24.8782, 0.66 ) }
    dend_29 { pt3dadd( -9.13057, 435.599, -25.0315, 0.66 ) }
    dend_29 { pt3dadd( -9.13429, 435.643, -25.0387, 0.66 ) }
    dend_29 { pt3dadd( -9.16664, 436.286, -25.1197, 0.66 ) }
    dend_29 { pt3dadd( -9.16598, 436.359, -25.1247, 0.66 ) }
    dend_29 { pt3dadd( -9.10021, 437.301, -25.1623, 0.66 ) }
    dend_29 { pt3dadd( -8.99712, 438.144, -25.1647, 0.66 ) }
    dend_29 { pt3dadd( -8.98725, 438.207, -25.1638, 0.66 ) }
    dend_29 { pt3dadd( -8.85952, 438.995, -25.1511, 0.66 ) }
    dend_29 { pt3dadd( -8.65272, 440.175, -25.1276, 0.66 ) }
    dend_29 { pt3dadd( -8.64053, 440.241, -25.1263, 0.66 ) }
    dend_29 { pt3dadd( -8.57429, 440.583, -25.1189, 1.25 ) }
    dend_29 { pt3dadd( -8.56465, 440.632, -25.1178, 1.25 ) }
    dend_29 { pt3dadd( -8.42614, 441.376, -25.1022, 1.25 ) }
    dend_29 { pt3dadd( -8.41504, 441.442, -25.101, 1.25 ) }
    dend_29 { pt3dadd( -8.30781, 442.088, -25.078, 1.25 ) }
    dend_29 { pt3dadd( -8.21872, 442.64, -25.0497, 0.96 ) }
    dend_29 { pt3dadd( -8.13504, 443.191, -25.0079, 0.96 ) }
    dend_29 { pt3dadd( -8.12973, 443.229, -25.0044, 0.96 ) }
    dend_29 { pt3dadd( -8.06178, 443.79, -24.9478, 1.11 ) }
    dend_29 { pt3dadd( -7.95818, 444.75, -24.8447, 0.52 ) }
    dend_29 { pt3dadd( -7.89474, 445.383, -24.775, 1.18 ) }
    dend_29 { pt3dadd( -7.82027, 446.059, -24.7032, 1.92 ) }
    dend_29 { pt3dadd( -7.76614, 446.51, -24.6656, 2.43 ) }
    dend_29 { pt3dadd( -7.71301, 446.918, -24.6405, 2.43 ) }
    dend_29 { pt3dadd( -7.64517, 447.409, -24.6203, 2.43 ) }
    dend_29 { pt3dadd( -7.52741, 448.233, -24.6082, 1.25 ) }
    dend_29 { pt3dadd( -7.40068, 449.021, -24.6177, 0.59 ) }
    dend_29 { pt3dadd( -7.2599, 449.863, -24.672, 0.74 ) }
    dend_29 { pt3dadd( -7.16822, 450.394, -24.726, 1.03 ) }
    dend_29 { pt3dadd( -7.14797, 450.523, -24.7448, 1.03 ) }
    dend_29 { pt3dadd( -7.10295, 450.87, -24.8111, 1.03 ) }
    dend_29 { pt3dadd( -7.05635, 451.355, -24.9221, 0.59 ) }
    dend_29 { pt3dadd( -7.01679, 452.081, -25.1033, 0.59 ) }
    dend_29 { pt3dadd( -7.01473, 452.154, -25.1203, 0.59 ) }
    dend_29 { pt3dadd( -6.97963, 452.829, -25.2671, 0.59 ) }
    dend_29 { pt3dadd( -6.95966, 453.019, -25.2968, 1.03 ) }
    dend_29 { pt3dadd( -6.88928, 453.502, -25.3468, 0.66 ) }
    dend_29 { pt3dadd( -6.83316, 453.814, -25.3619, 0.66 ) }
    dend_29 { pt3dadd( -6.7203, 454.369, -25.345, 0.66 ) }
    dend_29 { pt3dadd( -6.56742, 455.13, -25.2966, 0.59 ) }
    dend_29 { pt3dadd( -6.39156, 456.029, -25.219, 1.03 ) }
    dend_29 { pt3dadd( -6.32857, 456.365, -25.1861, 1.84 ) }
    dend_29 { pt3dadd( -6.27288, 456.69, -25.1523, 1.84 ) }
    dend_29 { pt3dadd( -6.14511, 457.544, -25.063, 1.18 ) }
    dend_29 { pt3dadd( -6.06112, 458.227, -24.9925, 0.66 ) }
    dend_29 { pt3dadd( -6.01382, 458.876, -24.9312, 0.66 ) }
    dend_29 { pt3dadd( -6.01032, 458.989, -24.9236, 0.66 ) }
    dend_29 { pt3dadd( -6.00297, 459.89, -24.8806, 0.66 ) }
    dend_29 { pt3dadd( -6.01147, 460.595, -24.8623, 1.18 ) }
    dend_29 { pt3dadd( -6.02691, 461.078, -24.8628, 1.18 ) }
    dend_29 { pt3dadd( -6.06033, 461.85, -24.8652, 0.66 ) }
    dend_29 { pt3dadd( -6.09558, 462.485, -24.8686, 0.66 ) }
    dend_29 { pt3dadd( -6.13865, 463.085, -24.8739, 1.25 ) }
    dend_29 { pt3dadd( -6.18546, 463.577, -24.8784, 1.99 ) }
    dend_29 { pt3dadd( -6.22544, 463.943, -24.8807, 2.21 ) }
    dend_29 { pt3dadd( -6.32147, 464.741, -24.8865, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.5159, -68.3504, -16.097, 0.44 ) }
    dend_12 { pt3dadd( -13.8774, -68.7406, -15.9176, 0.44 ) }
    dend_12 { pt3dadd( -13.9095, -68.7764, -15.9011, 0.44 ) }
    dend_12 { pt3dadd( -14.377, -69.3285, -15.6531, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -14.8279, -69.8481, -15.4146, 1.18 ) }
    dend_12 { pt3dadd( -15.1465, -70.2073, -15.2479, 0.59 ) }
    dend_12 { pt3dadd( -15.1781, -70.2426, -15.2315, 0.59 ) }
    dend_12 { pt3dadd( -15.4825, -70.6023, -15.0787, 0.22 ) }
    dend_12 { pt3dadd( -15.7851, -70.9537, -14.9218, 0.22 ) }
    dend_12 { pt3dadd( -16.0938, -71.2988, -14.7576, 0.59 ) }
    dend_12 { pt3dadd( -16.2992, -71.5335, -14.6455, 0.59 ) }
    dend_12 { pt3dadd( -16.3437, -71.5926, -14.6178, 0.59 ) }
    dend_12 { pt3dadd( -16.6424, -72.0338, -14.4181, 0.22 ) }
    dend_12 { pt3dadd( -16.8691, -72.4096, -14.2594, 1.18 ) }
    dend_12 { pt3dadd( -17.0793, -72.8406, -14.1069, 1.25 ) }
    dend_12 { pt3dadd( -17.0986, -72.8885, -14.0924, 1.25 ) }
    dend_12 { pt3dadd( -17.3981, -73.801, -13.8123, 0.22 ) }
    dend_12 { pt3dadd( -17.4775, -74.0827, -13.7291, 0.37 ) }
    dend_12 { pt3dadd( -17.5151, -74.2763, -13.6722, 0.37 ) }
    dend_12 { pt3dadd( -17.6553, -75.3545, -13.3479, 0.22 ) }
    dend_12 { pt3dadd( -17.6885, -75.7254, -13.2355, 0.22 ) }
    dend_12 { pt3dadd( -17.747, -76.5582, -12.9789, 1.47 ) }
    dend_12 { pt3dadd( -17.7826, -77.2227, -12.8002, 2.21 ) }
    dend_12 { pt3dadd( -17.8113, -77.8959, -12.6327, 2.21 ) }
    dend_12 { pt3dadd( -17.8133, -77.9455, -12.6196, 2.21 ) }
    dend_12 { pt3dadd( -17.8127, -78.8894, -12.3877, 0.74 ) }
    dend_12 { pt3dadd( -17.8114, -78.9396, -12.3772, 0.74 ) }
    dend_12 { pt3dadd( -17.7755, -79.9582, -12.2167, 0.22 ) }
    dend_12 { pt3dadd( -17.7668, -80.1758, -12.1858, 0.59 ) }
    dend_12 { pt3dadd( -17.7448, -81.2316, -12.0523, 0.22 ) }
    dend_12 { pt3dadd( -17.7264, -81.9073, -11.9714, 0.22 ) }
    dend_12 { pt3dadd( -17.698, -82.5103, -11.8982, 0.22 ) }
    dend_12 { pt3dadd( -17.6763, -83.0219, -11.8342, 0.52 ) }
    dend_12 { pt3dadd( -17.6694, -83.2548, -11.8076, 0.52 ) }
    dend_12 { pt3dadd( -17.6513, -84.2235, -11.7254, 0.22 ) }
    dend_12 { pt3dadd( -17.6399, -84.8418, -11.697, 0.22 ) }
    dend_12 { pt3dadd( -17.6256, -85.7251, -11.6633, 1.55 ) }
    dend_12 { pt3dadd( -17.5981, -86.2298, -11.6504, 1.69 ) }
    dend_12 { pt3dadd( -17.443, -87.6096, -11.6124, 0.22 ) }
    dend_12 { pt3dadd( -17.3206, -88.3084, -11.5945, 0.22 ) }
    dend_12 { pt3dadd( -17.2008, -88.7813, -11.5872, 0.52 ) }
    dend_12 { pt3dadd( -17.0447, -89.2633, -11.6013, 0.52 ) }
    dend_12 { pt3dadd( -16.7644, -89.9951, -11.6632, 0.22 ) }
    dend_12 { pt3dadd( -16.5215, -90.5669, -11.7335, 1.4 ) }
    dend_12 { pt3dadd( -16.3024, -91.0409, -11.8108, 1.69 ) }
    dend_12 { pt3dadd( -16.1301, -91.4222, -11.8764, 1.77 ) }
    dend_12 { pt3dadd( -15.5875, -92.6829, -12.0919, 0.15 ) }
    dend_12 { pt3dadd( -15.2345, -93.5473, -12.2476, 0.22 ) }
    dend_12 { pt3dadd( -15.0167, -94.1248, -12.3626, 0.74 ) }
    dend_12 { pt3dadd( -14.847, -94.63, -12.462, 0.74 ) }
    dend_12 { pt3dadd( -14.6523, -95.2669, -12.5726, 0.22 ) }
    dend_12 { pt3dadd( -14.6023, -95.4479, -12.5958, 0.59 ) }
    dend_12 { pt3dadd( -14.5217, -95.762, -12.6171, 0.59 ) }
    dend_12 { pt3dadd( -14.5067, -95.8206, -12.6224, 0.59 ) }
    dend_12 { pt3dadd( -14.2745, -96.7355, -12.7104, 0.22 ) }
    dend_12 { pt3dadd( -14.1505, -97.2871, -12.7793, 0.74 ) }
    dend_12 { pt3dadd( -14.0073, -97.901, -12.8779, 0.96 ) }
    dend_12 { pt3dadd( -13.9045, -98.3221, -12.9507, 0.66 ) }
    dend_12 { pt3dadd( -13.5642, -99.6699, -13.2109, 0.29 ) }
    dend_12 { pt3dadd( -13.3668, -100.414, -13.366, 0.22 ) }
    dend_12 { pt3dadd( -13.1421, -101.211, -13.5431, 0.22 ) }
    dend_12 { pt3dadd( -12.8705, -102.199, -13.7675, 1.55 ) }
    dend_12 { pt3dadd( -12.7905, -102.495, -13.838, 1.92 ) }
    dend_12 { pt3dadd( -12.5947, -103.235, -14.0218, 0.96 ) }
    dend_12 { pt3dadd( -12.4911, -103.659, -14.1366, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.5159, -68.3504, -16.097, 2.43 ) }
    dend_9 { pt3dadd( -13.9344, -69.9177, -16.881, 2.43 ) }
    dend_9 { pt3dadd( -14.3087, -71.3837, -17.5102, 0.96 ) }
    dend_9 { pt3dadd( -14.5968, -72.5, -17.9174, 0.52 ) }
    dend_9 { pt3dadd( -14.8599, -73.5291, -18.2571, 0.52 ) }
    dend_9 { pt3dadd( -15.1818, -74.8185, -18.6568, 0.52 ) }
    dend_9 { pt3dadd( -15.4863, -76.0791, -19.0307, 0.52 ) }
    dend_9 { pt3dadd( -15.7408, -77.2339, -19.287, 0.52 ) }
    dend_9 { pt3dadd( -15.994, -78.4428, -19.4999, 0.52 ) }
    dend_9 { pt3dadd( -16.2313, -79.6489, -19.6905, 2.58 ) }
    dend_9 { pt3dadd( -16.5022, -81.0956, -19.9501, 3.68 ) }
    dend_9 { pt3dadd( -16.574, -81.4574, -20.0234, 3.68 ) }
    dend_9 { pt3dadd( -16.7697, -82.3284, -20.2113, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.4247, -241.225, 63.4785, 0.59 ) }
    dend_6 { pt3dadd( -10.2878, -243.695, 63.3723, 0.59 ) }
    dend_6 { pt3dadd( -10.2574, -244.884, 63.2979, 0.37 ) }
    dend_6 { pt3dadd( -10.2991, -246.071, 63.176, 0.37 ) }
    dend_6 { pt3dadd( -10.3867, -246.879, 63.0384, 0.74 ) }
    dend_6 { pt3dadd( -10.5281, -247.777, 62.8434, 0.74 ) }
    dend_6 { pt3dadd( -10.6761, -248.507, 62.6552, 0.96 ) }
    dend_6 { pt3dadd( -10.7037, -248.584, 62.6304, 0.96 ) }
    dend_6 { pt3dadd( -11.0457, -249.422, 62.3082, 1.25 ) }
    dend_6 { pt3dadd( -11.4754, -250.312, 61.9984, 0.81 ) }
    dend_6 { pt3dadd( -11.5107, -250.389, 61.9823, 0.81 ) }
    dend_6 { pt3dadd( -11.9643, -251.444, 61.8626, 0.59 ) }
    dend_6 { pt3dadd( -12.4322, -252.714, 61.8054, 0.59 ) }
    dend_6 { pt3dadd( -12.4547, -252.784, 61.8048, 0.59 ) }
    dend_6 { pt3dadd( -12.8484, -254.223, 61.8351, 0.44 ) }
    dend_6 { pt3dadd( -13.2546, -255.804, 61.8761, 0.44 ) }
    dend_6 { pt3dadd( -13.2763, -255.888, 61.8781, 0.44 ) }
    dend_6 { pt3dadd( -13.6615, -257.344, 61.8974, 2.14 ) }
    dend_6 { pt3dadd( -13.8825, -258.163, 61.8732, 3.09 ) }
    dend_6 { pt3dadd( -14.0629, -258.916, 61.8339, 3.61 ) }
    dend_6 { pt3dadd( -14.1968, -259.795, 61.7321, 3.61 ) }
    dend_6 { pt3dadd( -15.1093, -272.008, 60.0325, 3.61 ) }
    dend_6 { pt3dadd( -15.3233, -283.749, 56.3887, 3.61 ) }
    dend_6 { pt3dadd( -14.7356, -294.827, 51.2572, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.4247, -241.225, 63.4785, 0.59 ) }
    dend_5 { pt3dadd( -9.61422, -242.307, 64.0332, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( -8.87075, -243.289, 64.6122, 0.37 ) }
    dend_5 { pt3dadd( -8.41955, -243.902, 65.2816, 0.37 ) }
    dend_5 { pt3dadd( -7.99634, -244.507, 66.3775, 0.37 ) }
    dend_5 { pt3dadd( -7.97551, -244.539, 66.4605, 0.37 ) }
    dend_5 { pt3dadd( -7.73212, -244.954, 67.6632, 0.74 ) }
    dend_5 { pt3dadd( -7.73311, -244.97, 67.7422, 0.74 ) }
    dend_5 { pt3dadd( -7.98553, -245.424, 70.2301, 0.74 ) }
    dend_5 { pt3dadd( -7.99317, -245.436, 70.2871, 0.74 ) }
    dend_5 { pt3dadd( -8.09027, -245.652, 71.0852, 0.74 ) }
    dend_5 { pt3dadd( -8.14199, -245.916, 71.7283, 0.29 ) }
    dend_5 { pt3dadd( -8.13255, -246.463, 72.6019, 0.29 ) }
    dend_5 { pt3dadd( -8.0545, -246.969, 73.2328, 0.29 ) }
    dend_5 { pt3dadd( -7.8865, -247.507, 73.7022, 0.29 ) }
    dend_5 { pt3dadd( -7.72244, -247.99, 74.1127, 0.81 ) }
    dend_5 { pt3dadd( -7.70154, -248.043, 74.1557, 0.81 ) }
    dend_5 { pt3dadd( -7.46708, -248.459, 74.5053, 1.25 ) }
    dend_5 { pt3dadd( -7.21276, -248.743, 74.7609, 1.25 ) }
    dend_5 { pt3dadd( -6.82632, -249.07, 75.1138, 0.59 ) }
    dend_5 { pt3dadd( -3.5825, -254.384, 82.8491, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -6.32147, 464.741, -24.8865, 0.44 ) }
    dend_61 { pt3dadd( -8.3093, 466.925, -27.2255, 0.44 ) }
    dend_61 { pt3dadd( -9.06935, 467.869, -28.1408, 0.44 ) }
    dend_61 { pt3dadd( -9.54212, 468.505, -28.7183, 0.74 ) }
    dend_61 { pt3dadd( -9.56935, 468.548, -28.7546, 0.74 ) }
    dend_61 { pt3dadd( -9.92892, 469.26, -29.2947, 0.74 ) }
    dend_61 { pt3dadd( -9.94921, 469.308, -29.3278, 0.74 ) }
    dend_61 { pt3dadd( -10.0863, 470.174, -29.6622, 0.44 ) }
    dend_61 { pt3dadd( -10.0867, 470.24, -29.6952, 0.44 ) }
    dend_61 { pt3dadd( -10.0581, 471.04, -30.144, 0.88 ) }
    dend_61 { pt3dadd( -10.0553, 471.862, -30.5935, 0.96 ) }
    dend_61 { pt3dadd( -10.0711, 472.333, -30.8418, 1.25 ) }
    dend_61 { pt3dadd( -10.0745, 472.387, -30.8728, 1.25 ) }
    dend_61 { pt3dadd( -10.2162, 473.507, -31.5166, 0.66 ) }
    dend_61 { pt3dadd( -10.3986, 474.386, -32.0193, 0.37 ) }
    dend_61 { pt3dadd( -10.5781, 474.988, -32.3554, 0.74 ) }
    dend_61 { pt3dadd( -10.777, 475.568, -32.6839, 0.74 ) }
    dend_61 { pt3dadd( -11.0279, 476.23, -33.0503, 0.74 ) }
    dend_61 { pt3dadd( -11.4337, 477.227, -33.5737, 0.29 ) }
    dend_61 { pt3dadd( -11.946, 478.365, -34.1113, 0.29 ) }
    dend_61 { pt3dadd( -12.3085, 479.137, -34.4679, 0.29 ) }
    dend_61 { pt3dadd( -12.8273, 480.26, -34.9918, 1.47 ) }
    dend_61 { pt3dadd( -13.0176, 480.688, -35.1764, 1.69 ) }
    dend_61 { pt3dadd( -13.0471, 480.751, -35.2004, 1.69 ) }
    dend_61 { pt3dadd( -13.361, 481.38, -35.4706, 1.47 ) }
    dend_61 { pt3dadd( -13.3931, 481.441, -35.4967, 1.47 ) }
    dend_61 { pt3dadd( -14.2699, 483.118, -36.3475, 0.22 ) }
    dend_61 { pt3dadd( -14.5752, 483.721, -36.6755, 0.22 ) }
    dend_61 { pt3dadd( -15.0464, 484.73, -37.25, 0.22 ) }
    dend_61 { pt3dadd( -15.5476, 486.014, -37.9768, 1.03 ) }
    dend_61 { pt3dadd( -15.7269, 486.53, -38.2925, 1.4 ) }
    dend_61 { pt3dadd( -16.2489, 488.14, -39.3207, 0.22 ) }
    dend_61 { pt3dadd( -16.39, 488.589, -39.619, 0.59 ) }
    dend_61 { pt3dadd( -16.5413, 489.099, -39.9643, 0.74 ) }
    dend_61 { pt3dadd( -16.9901, 490.751, -41.0484, 0.29 ) }
    dend_61 { pt3dadd( -17.353, 491.939, -41.761, 0.29 ) }
    dend_61 { pt3dadd( -17.377, 492.001, -41.7983, 0.29 ) }
    dend_61 { pt3dadd( -17.7047, 492.648, -42.1797, 0.44 ) }
    dend_61 { pt3dadd( -17.7373, 492.711, -42.2243, 0.44 ) }
    dend_61 { pt3dadd( -18.0007, 493.21, -42.6102, 0.44 ) }
    dend_61 { pt3dadd( -18.391, 493.967, -43.2042, 0.22 ) }
    dend_61 { pt3dadd( -18.9272, 495.133, -44.0748, 1.92 ) }
    dend_61 { pt3dadd( -19.0285, 495.366, -44.265, 2.5 ) }
    dend_61 { pt3dadd( -19.911, 497.729, -46.2834, 0.15 ) }
    dend_61 { pt3dadd( -20.0249, 498.067, -46.5767, 0.15 ) }
    dend_61 { pt3dadd( -20.2903, 498.954, -47.3697, 1.4 ) }
    dend_61 { pt3dadd( -20.3477, 499.157, -47.5496, 1.69 ) }
    dend_61 { pt3dadd( -20.8981, 501.091, -49.2352, 0.15 ) }
    dend_61 { pt3dadd( -21.0954, 501.744, -49.7754, 0.15 ) }
    dend_61 { pt3dadd( -21.1539, 501.919, -49.8957, 0.15 ) }
    dend_61 { pt3dadd( -21.2069, 502.073, -49.9872, 0.15 ) }
    dend_61 { pt3dadd( -21.4624, 502.83, -50.3351, 0.96 ) }
    dend_61 { pt3dadd( -21.6362, 503.352, -50.535, 1.47 ) }
    dend_61 { pt3dadd( -21.7639, 503.728, -50.6368, 1.62 ) }
    dend_61 { pt3dadd( -22.064, 504.569, -50.8672, 0.88 ) }
    dend_61 { pt3dadd( -22.6281, 506.245, -51.3359, 0.22 ) }
    dend_61 { pt3dadd( -22.8156, 506.882, -51.5409, 0.22 ) }
    dend_61 { pt3dadd( -22.9823, 507.54, -51.7857, 0.74 ) }
    dend_61 { pt3dadd( -22.997, 507.61, -51.8121, 0.74 ) }
    dend_61 { pt3dadd( -23.1007, 508.189, -52.0077, 0.74 ) }
    dend_61 { pt3dadd( -23.1486, 508.489, -52.0912, 0.74 ) }
    dend_61 { pt3dadd( -23.3752, 510.066, -52.4376, 0.29 ) }
    dend_61 { pt3dadd( -23.3867, 510.141, -52.4518, 0.29 ) }
    dend_61 { pt3dadd( -23.6175, 511.56, -52.6796, 0.29 ) }
    dend_61 { pt3dadd( -23.8617, 512.996, -52.8879, 0.29 ) }
    dend_61 { pt3dadd( -24.0603, 514.121, -53.0228, 0.29 ) }
    dend_61 { pt3dadd( -24.2148, 514.956, -53.0936, 1.47 ) }
    dend_61 { pt3dadd( -24.3058, 515.424, -53.1221, 2.06 ) }
    dend_61 { pt3dadd( -24.3203, 515.497, -53.1272, 2.06 ) }
    dend_61 { pt3dadd( -24.4892, 516.325, -53.2115, 1.18 ) }
    dend_61 { pt3dadd( -24.9611, 518.498, -53.5212, 0.22 ) }
    dend_61 { pt3dadd( -25.2978, 520.062, -53.7783, 0.22 ) }
    dend_61 { pt3dadd( -25.5523, 521.302, -54.0446, 1.47 ) }
    dend_61 { pt3dadd( -25.6402, 521.75, -54.1582, 1.18 ) }
    dend_61 { pt3dadd( -25.9632, 523.558, -54.6858, 0.22 ) }
    dend_61 { pt3dadd( -26.1603, 524.763, -55.0867, 1.11 ) }
    dend_61 { pt3dadd( -26.2486, 525.401, -55.3257, 1.33 ) }
    dend_61 { pt3dadd( -26.5153, 527.744, -56.2605, 0.22 ) }
    dend_61 { pt3dadd( -26.5216, 527.812, -56.2875, 0.22 ) }
    dend_61 { pt3dadd( -26.6431, 529.455, -56.9199, 0.22 ) }
    dend_61 { pt3dadd( -26.6467, 529.524, -56.9449, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( -26.7129, 531.299, -57.5402, 0.22 ) }
    dend_61 { pt3dadd( -26.7168, 531.369, -57.5625, 0.22 ) }
    dend_61 { pt3dadd( -26.7876, 532.351, -57.7988, 1.55 ) }
    dend_61 { pt3dadd( -26.8069, 532.508, -57.8302, 2.14 ) }
    dend_61 { pt3dadd( -26.9058, 533.048, -57.9117, 2.36 ) }
    dend_61 { pt3dadd( -26.9196, 533.109, -57.9192, 2.36 ) }
    dend_61 { pt3dadd( -27.2713, 534.188, -58.0344, 1.11 ) }
    dend_61 { pt3dadd( -27.8239, 535.614, -58.1792, 0.22 ) }
    dend_61 { pt3dadd( -28.3461, 536.824, -58.2947, 0.22 ) }
    dend_61 { pt3dadd( -28.7305, 537.665, -58.3717, 1.4 ) }
    dend_61 { pt3dadd( -28.9418, 538.097, -58.4084, 1.4 ) }
    dend_61 { pt3dadd( -29.9962, 540.131, -58.5959, 0.22 ) }
    dend_61 { pt3dadd( -30.4095, 540.867, -58.667, 0.88 ) }
    dend_61 { pt3dadd( -30.6456, 541.269, -58.711, 0.59 ) }
    dend_61 { pt3dadd( -30.6876, 541.344, -58.7195, 0.59 ) }
    dend_61 { pt3dadd( -30.7871, 541.53, -58.7384, 0.59 ) }
    dend_61 { pt3dadd( -31.4439, 542.934, -58.8396, 0.22 ) }
    dend_61 { pt3dadd( -31.8008, 543.812, -58.8723, 0.22 ) }
    dend_61 { pt3dadd( -32.1315, 544.715, -58.8994, 1.03 ) }
    dend_61 { pt3dadd( -32.2835, 545.152, -58.9094, 1.4 ) }
    dend_61 { pt3dadd( -32.4561, 545.709, -58.8918, 1.4 ) }
    dend_61 { pt3dadd( -32.8461, 547.192, -58.7821, 0.22 ) }
    dend_61 { pt3dadd( -32.8627, 547.266, -58.7736, 0.22 ) }
    dend_61 { pt3dadd( -33.1902, 548.927, -58.5645, 0.22 ) }
    dend_61 { pt3dadd( -33.2151, 549.075, -58.5464, 0.22 ) }
    dend_61 { pt3dadd( -33.4904, 550.971, -58.3244, 0.22 ) }
    dend_61 { pt3dadd( -33.6299, 552.051, -58.1911, 1.33 ) }
    dend_61 { pt3dadd( -33.6723, 552.414, -58.1432, 1.62 ) }
    dend_61 { pt3dadd( -33.7486, 553.103, -58.0523, 0.81 ) }
    dend_61 { pt3dadd( -33.9286, 554.939, -57.811, 0.22 ) }
    dend_61 { pt3dadd( -34.0393, 556.121, -57.692, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -6.32147, 464.741, -24.8865, 0.59 ) }
    dend_30 { pt3dadd( -6.41248, 465.911, -24.8056, 0.59 ) }
    dend_30 { pt3dadd( -6.51614, 467.148, -24.6417, 0.59 ) }
    dend_30 { pt3dadd( -6.60452, 468.313, -24.456, 0.81 ) }
    dend_30 { pt3dadd( -6.66856, 469.228, -24.3075, 1.25 ) }
    dend_30 { pt3dadd( -6.67451, 469.314, -24.2937, 1.25 ) }
    dend_30 { pt3dadd( -6.71405, 469.847, -24.2115, 1.11 ) }
    dend_30 { pt3dadd( -6.80884, 470.955, -24.0317, 0.88 ) }
    dend_30 { pt3dadd( -6.87464, 471.752, -23.9171, 0.44 ) }
    dend_30 { pt3dadd( -6.96354, 472.918, -23.7828, 0.37 ) }
    dend_30 { pt3dadd( -6.98633, 473.229, -23.7524, 0.37 ) }
    dend_30 { pt3dadd( -7.05152, 474.078, -23.6891, 0.37 ) }
    dend_30 { pt3dadd( -7.15834, 475.356, -23.634, 1.47 ) }
    dend_30 { pt3dadd( -7.24231, 476.125, -23.6255, 1.84 ) }
    dend_30 { pt3dadd( -7.27999, 476.43, -23.6219, 1.84 ) }
    dend_30 { pt3dadd( -7.34945, 477.044, -23.6146, 1.84 ) }
    dend_30 { pt3dadd( -7.45314, 478.067, -23.6028, 1.25 ) }
    dend_30 { pt3dadd( -7.60521, 479.774, -23.5842, 0.66 ) }
    dend_30 { pt3dadd( -7.7342, 481.319, -23.5685, 0.66 ) }
    dend_30 { pt3dadd( -7.74188, 481.428, -23.5676, 0.66 ) }
    dend_30 { pt3dadd( -7.80857, 482.544, -23.5603, 0.66 ) }
    dend_30 { pt3dadd( -7.81564, 482.708, -23.5602, 0.66 ) }
    dend_30 { pt3dadd( -7.85124, 483.725, -23.5628, 0.66 ) }
    dend_30 { pt3dadd( -7.85297, 483.812, -23.5634, 0.66 ) }
    dend_30 { pt3dadd( -7.86277, 484.74, -23.5715, 0.66 ) }
    dend_30 { pt3dadd( -7.87203, 485.02, -23.5742, 0.66 ) }
    dend_30 { pt3dadd( -7.90951, 485.901, -23.5831, 0.66 ) }
    dend_30 { pt3dadd( -7.93364, 486.598, -23.59, 0.66 ) }
    dend_30 { pt3dadd( -7.93458, 486.675, -23.5907, 0.66 ) }
    dend_30 { pt3dadd( -7.92594, 487.788, -23.5988, 0.66 ) }
    dend_30 { pt3dadd( -7.92359, 487.854, -23.5991, 0.66 ) }
    dend_30 { pt3dadd( -7.86677, 488.942, -23.6091, 1.18 ) }
    dend_30 { pt3dadd( -7.85906, 489.018, -23.6034, 1.18 ) }
    dend_30 { pt3dadd( -7.72325, 489.992, -23.4656, 1.33 ) }
    dend_30 { pt3dadd( -7.70883, 490.08, -23.4483, 1.33 ) }
    dend_30 { pt3dadd( -7.65686, 490.354, -23.3764, 1.33 ) }
    dend_30 { pt3dadd( -7.63438, 490.474, -23.3426, 1.33 ) }
    dend_30 { pt3dadd( -7.34498, 491.994, -22.8622, 0.81 ) }
    dend_30 { pt3dadd( -7.33388, 492.058, -22.8451, 0.81 ) }
    dend_30 { pt3dadd( -7.20731, 492.662, -22.7158, 0.81 ) }
    dend_30 { pt3dadd( -7.19259, 492.734, -22.7028, 0.81 ) }
    dend_30 { pt3dadd( -7.01452, 493.575, -22.581, 0.96 ) }
    dend_30 { pt3dadd( -6.9865, 493.7, -22.5673, 0.96 ) }
    dend_30 { pt3dadd( -6.6753, 495.031, -22.4911, 0.37 ) }
    dend_30 { pt3dadd( -6.41564, 496.153, -22.4382, 0.37 ) }
    dend_30 { pt3dadd( -6.22587, 497.042, -22.3746, 1.33 ) }
    dend_30 { pt3dadd( -6.05252, 497.852, -22.2852, 2.06 ) }
    dend_30 { pt3dadd( -5.97883, 498.216, -22.2169, 2.36 ) }
    dend_30 { pt3dadd( -5.86517, 498.794, -22.0817, 2.36 ) }
    dend_30 { pt3dadd( -5.69849, 499.712, -21.8116, 1.62 ) }
    dend_30 { pt3dadd( -5.46643, 501.127, -21.36, 0.52 ) }
    dend_30 { pt3dadd( -5.20064, 502.72, -20.8202, 0.37 ) }
    dend_30 { pt3dadd( -4.98046, 504.128, -20.2966, 1.55 ) }
    dend_30 { pt3dadd( -4.87293, 504.832, -20.0132, 2.21 ) }
    dend_30 { pt3dadd( -4.75768, 505.565, -19.6831, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.7697, -82.3284, -20.2113, 0.44 ) }
    dend_11 { pt3dadd( -16.4356, -83.584, -19.7651, 0.44 ) }
    dend_11 { pt3dadd( -16.0914, -84.8034, -19.2861, 0.22 ) }
    dend_11 { pt3dadd( -16.0711, -84.864, -19.2581, 0.22 ) }
    dend_11 { pt3dadd( -15.7469, -85.7467, -18.7298, 0.22 ) }
    dend_11 { pt3dadd( -15.2535, -86.9876, -17.9763, 1.47 ) }
    dend_11 { pt3dadd( -15.1011, -87.357, -17.7632, 1.99 ) }
    dend_11 { pt3dadd( -15.0474, -87.4813, -17.6854, 1.99 ) }
    dend_11 { pt3dadd( -14.6167, -88.3831, -17.1303, 1.77 ) }
    dend_11 { pt3dadd( -13.912, -89.8033, -16.297, 0.52 ) }
    dend_11 { pt3dadd( -13.3655, -90.8728, -15.6946, 0.29 ) }
    dend_11 { pt3dadd( -12.9454, -91.6893, -15.2845, 0.29 ) }
    dend_11 { pt3dadd( -12.9179, -91.7448, -15.2578, 0.29 ) }
    dend_11 { pt3dadd( -12.5072, -92.5957, -14.873, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -12.1191, -93.4877, -14.5284, 1.03 ) }
    dend_11 { pt3dadd( -11.5975, -94.8156, -14.1068, 0.22 ) }
    dend_11 { pt3dadd( -11.5802, -94.8682, -14.0904, 0.22 ) }
    dend_11 { pt3dadd( -11.4237, -95.3981, -13.9402, 0.44 ) }
    dend_11 { pt3dadd( -11.4086, -95.4516, -13.9244, 0.44 ) }
    dend_11 { pt3dadd( -11.2021, -96.1596, -13.6971, 0.44 ) }
    dend_11 { pt3dadd( -11.0599, -96.6896, -13.548, 0.29 ) }
    dend_11 { pt3dadd( -10.8243, -97.586, -13.3035, 1.55 ) }
    dend_11 { pt3dadd( -10.7587, -97.8232, -13.2339, 2.21 ) }
    dend_11 { pt3dadd( -10.4118, -98.9187, -12.8795, 2.21 ) }
    dend_11 { pt3dadd( -10.0708, -99.8887, -12.5504, 0.44 ) }
    dend_11 { pt3dadd( -9.63169, -100.934, -12.1654, 0.29 ) }
    dend_11 { pt3dadd( -9.43104, -101.358, -12.0004, 0.52 ) }
    dend_11 { pt3dadd( -9.3981, -101.423, -11.9749, 0.52 ) }
    dend_11 { pt3dadd( -9.14995, -101.848, -11.8324, 0.22 ) }
    dend_11 { pt3dadd( -9.10537, -101.9, -11.8216, 0.22 ) }
    dend_11 { pt3dadd( -8.77631, -102.16, -11.7662, 0.22 ) }
    dend_11 { pt3dadd( -8.44634, -102.395, -11.6892, 0.74 ) }
    dend_11 { pt3dadd( -8.3872, -102.443, -11.6732, 0.74 ) }
    dend_11 { pt3dadd( -7.96401, -102.834, -11.5473, 0.74 ) }
    dend_11 { pt3dadd( -7.22744, -103.625, -11.3143, 0.29 ) }
    dend_11 { pt3dadd( -6.78011, -104.185, -11.1338, 0.29 ) }
    dend_11 { pt3dadd( -6.32464, -104.873, -10.9137, 1.33 ) }
    dend_11 { pt3dadd( -6.06776, -105.301, -10.7832, 1.92 ) }
    dend_11 { pt3dadd( -5.93591, -105.531, -10.7174, 1.99 ) }
    dend_11 { pt3dadd( -5.66018, -106.042, -10.5787, 1.55 ) }
    dend_11 { pt3dadd( -5.14966, -106.998, -10.3641, 0.66 ) }
    dend_11 { pt3dadd( -4.81198, -107.616, -10.265, 0.29 ) }
    dend_11 { pt3dadd( -4.26782, -108.608, -10.2022, 0.22 ) }
    dend_11 { pt3dadd( -3.93371, -109.254, -10.2001, 1.03 ) }
    dend_11 { pt3dadd( -3.68513, -109.769, -10.224, 1.55 ) }
    dend_11 { pt3dadd( -3.29579, -110.632, -10.3093, 0.88 ) }
    dend_11 { pt3dadd( -2.98215, -111.402, -10.43, 0.29 ) }
    dend_11 { pt3dadd( -2.67499, -112.252, -10.5799, 0.29 ) }
    dend_11 { pt3dadd( -2.36925, -113.26, -10.7732, 0.22 ) }
    dend_11 { pt3dadd( -2.2393, -113.726, -10.8615, 0.52 ) }
    dend_11 { pt3dadd( -2.22117, -113.791, -10.8709, 0.52 ) }
    dend_11 { pt3dadd( -2.04846, -114.407, -10.9038, 0.52 ) }
    dend_11 { pt3dadd( -1.84273, -115.065, -10.8825, 0.44 ) }
    dend_11 { pt3dadd( -1.78107, -115.258, -10.8566, 0.66 ) }
    dend_11 { pt3dadd( -1.62585, -115.761, -10.7653, 0.37 ) }
    dend_11 { pt3dadd( -1.42803, -116.5, -10.6109, 0.29 ) }
    dend_11 { pt3dadd( -1.24501, -117.39, -10.4198, 0.29 ) }
    dend_11 { pt3dadd( -1.23848, -117.446, -10.406, 0.29 ) }
    dend_11 { pt3dadd( -1.18986, -118.313, -10.1922, 1.25 ) }
    dend_11 { pt3dadd( -1.18429, -118.724, -10.0991, 1.84 ) }
    dend_11 { pt3dadd( -1.1984, -119.1, -10.0262, 1.84 ) }
    dend_11 { pt3dadd( -1.25742, -119.965, -9.91094, 0.81 ) }
    dend_11 { pt3dadd( -1.3377, -120.972, -9.81066, 0.29 ) }
    dend_11 { pt3dadd( -1.39396, -121.692, -9.76147, 0.22 ) }
    dend_11 { pt3dadd( -1.4019, -121.789, -9.75809, 0.22 ) }
    dend_11 { pt3dadd( -1.48517, -122.62, -9.77157, 0.22 ) }
    dend_11 { pt3dadd( -1.6368, -123.75, -9.86051, 1.33 ) }
    dend_11 { pt3dadd( -1.72705, -124.281, -9.93282, 1.99 ) }
    dend_11 { pt3dadd( -1.80121, -124.626, -9.99792, 2.28 ) }
    dend_11 { pt3dadd( -1.93595, -125.145, -10.0928, 2.28 ) }
    dend_11 { pt3dadd( -2.3104, -126.477, -10.3256, 0.66 ) }
    dend_11 { pt3dadd( -2.55533, -127.268, -10.4651, 0.22 ) }
    dend_11 { pt3dadd( -2.57728, -127.334, -10.4758, 0.22 ) }
    dend_11 { pt3dadd( -2.73728, -127.856, -10.5416, 0.22 ) }
    dend_11 { pt3dadd( -2.89293, -128.395, -10.589, 0.74 ) }
    dend_11 { pt3dadd( -2.99211, -128.767, -10.6005, 1.03 ) }
    dend_11 { pt3dadd( -3.06374, -129.045, -10.5869, 1.11 ) }
    dend_11 { pt3dadd( -3.19807, -129.601, -10.5497, 0.44 ) }
    dend_11 { pt3dadd( -3.41979, -130.515, -10.5087, 0.22 ) }
    dend_11 { pt3dadd( -3.43613, -130.582, -10.5074, 0.22 ) }
    dend_11 { pt3dadd( -3.56912, -131.081, -10.512, 0.44 ) }
    dend_11 { pt3dadd( -3.73545, -131.823, -10.517, 0.29 ) }
    dend_11 { pt3dadd( -3.75109, -131.889, -10.5175, 0.29 ) }
    dend_11 { pt3dadd( -4.02514, -132.676, -10.5022, 0.29 ) }
    dend_11 { pt3dadd( -4.23467, -133.167, -10.4794, 0.22 ) }
    dend_11 { pt3dadd( -4.26259, -133.231, -10.4751, 0.22 ) }
    dend_11 { pt3dadd( -4.6199, -134.103, -10.3674, 0.22 ) }
    dend_11 { pt3dadd( -4.80177, -134.631, -10.2459, 0.22 ) }
    dend_11 { pt3dadd( -5.20111, -136.128, -9.81834, 2.14 ) }
    dend_11 { pt3dadd( -5.21235, -136.182, -9.80132, 2.14 ) }
    dend_11 { pt3dadd( -5.29774, -136.777, -9.61165, 1.99 ) }
    dend_11 { pt3dadd( -5.37012, -137.653, -9.33009, 1.69 ) }
    dend_11 { pt3dadd( -5.41095, -138.964, -8.89998, 0.59 ) }
    dend_11 { pt3dadd( -5.33789, -140.19, -8.50871, 0.22 ) }
    dend_11 { pt3dadd( -5.25046, -140.802, -8.3393, 0.37 ) }
    dend_11 { pt3dadd( -5.14364, -141.447, -8.21533, 0.37 ) }
    dend_11 { pt3dadd( -5.00609, -142.191, -8.14403, 0.74 ) }
    dend_11 { pt3dadd( -4.99222, -142.258, -8.1454, 0.74 ) }
    dend_11 { pt3dadd( -4.88693, -142.762, -8.21227, 1.11 ) }
    dend_11 { pt3dadd( -4.68864, -143.758, -8.40201, 0.59 ) }
    dend_11 { pt3dadd( -4.471, -144.872, -8.63657, 0.29 ) }
    dend_11 { pt3dadd( -4.31836, -145.627, -8.80087, 0.29 ) }
    dend_11 { pt3dadd( -4.29459, -145.732, -8.82442, 0.29 ) }
    dend_11 { pt3dadd( -4.11572, -146.452, -8.97184, 0.29 ) }
    dend_11 { pt3dadd( -4.06154, -146.641, -9.00187, 0.29 ) }
    dend_11 { pt3dadd( -3.80167, -147.394, -9.06073, 0.29 ) }
    dend_11 { pt3dadd( -3.56531, -148.018, -9.06785, 1.18 ) }
    dend_11 { pt3dadd( -3.41892, -148.382, -9.07138, 1.47 ) }
    dend_11 { pt3dadd( -3.39339, -148.445, -9.07148, 1.47 ) }
    dend_11 { pt3dadd( -2.99929, -149.47, -9.06762, 0.44 ) }
    dend_11 { pt3dadd( -2.74521, -150.309, -9.06084, 0.37 ) }
    dend_11 { pt3dadd( -2.63304, -150.939, -9.0542, 0.81 ) }
    dend_11 { pt3dadd( -2.58955, -151.364, -9.05396, 0.81 ) }
    dend_11 { pt3dadd( -2.55519, -152.022, -9.0562, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( -2.54866, -152.477, -9.06266, 0.29 ) }
    dend_11 { pt3dadd( -2.56966, -153.488, -9.08421, 0.22 ) }
    dend_11 { pt3dadd( -2.59621, -154.57, -9.13405, 0.22 ) }
    dend_11 { pt3dadd( -2.60002, -155.204, -9.17393, 0.44 ) }
    dend_11 { pt3dadd( -2.59512, -155.42, -9.18992, 0.44 ) }
    dend_11 { pt3dadd( -2.5634, -155.844, -9.22364, 0.44 ) }
    dend_11 { pt3dadd( -2.4563, -156.647, -9.28841, 0.29 ) }
    dend_11 { pt3dadd( -2.30933, -157.495, -9.35245, 1.4 ) }
    dend_11 { pt3dadd( -2.19215, -158.122, -9.39722, 1.69 ) }
    dend_11 { pt3dadd( -2.09904, -158.676, -9.43143, 1.92 ) }
    dend_11 { pt3dadd( -1.97713, -159.451, -9.48658, 0.74 ) }
    dend_11 { pt3dadd( -1.88352, -160.392, -9.56542, 0.22 ) }
    dend_11 { pt3dadd( -1.84038, -161.314, -9.65071, 0.22 ) }
    dend_11 { pt3dadd( -1.84048, -161.975, -9.70823, 0.88 ) }
    dend_11 { pt3dadd( -1.86666, -162.476, -9.75727, 0.88 ) }
    dend_11 { pt3dadd( -1.94751, -163.285, -9.84103, 0.22 ) }
    dend_11 { pt3dadd( -2.09445, -164.291, -9.94753, 0.22 ) }
    dend_11 { pt3dadd( -2.10741, -164.367, -9.95526, 0.22 ) }
    dend_11 { pt3dadd( -2.24946, -165.078, -10.0209, 0.22 ) }
    dend_11 { pt3dadd( -2.45514, -166.023, -10.0678, 1.03 ) }
    dend_11 { pt3dadd( -2.55438, -166.438, -10.0746, 1.33 ) }
    dend_11 { pt3dadd( -2.62379, -166.716, -10.0693, 1.33 ) }
    dend_11 { pt3dadd( -2.92156, -167.96, -10.0558, 0.22 ) }
    dend_11 { pt3dadd( -3.14758, -168.862, -10.0954, 0.22 ) }
    dend_11 { pt3dadd( -3.29956, -169.414, -10.1549, 0.88 ) }
    dend_11 { pt3dadd( -3.41025, -169.796, -10.2163, 1.11 ) }
    dend_11 { pt3dadd( -3.50103, -170.098, -10.2774, 0.88 ) }
    dend_11 { pt3dadd( -3.84481, -171.278, -10.5589, 0.22 ) }
    dend_11 { pt3dadd( -4.14029, -172.235, -10.8185, 0.22 ) }
    dend_11 { pt3dadd( -4.30741, -172.771, -10.9741, 1.55 ) }
    dend_11 { pt3dadd( -4.45477, -173.245, -11.108, 1.77 ) }
    dend_11 { pt3dadd( -4.61522, -173.767, -11.2406, 1.25 ) }
    dend_11 { pt3dadd( -4.91736, -174.811, -11.4629, 0.22 ) }
    dend_11 { pt3dadd( -5.19186, -175.874, -11.618, 0.22 ) }
    dend_11 { pt3dadd( -5.20364, -175.931, -11.624, 0.22 ) }
    dend_11 { pt3dadd( -5.33191, -176.884, -11.7174, 0.22 ) }
    dend_11 { pt3dadd( -5.33806, -176.963, -11.7279, 0.22 ) }
    dend_11 { pt3dadd( -5.34921, -177.835, -11.8632, 0.96 ) }
    dend_11 { pt3dadd( -5.34892, -178.389, -11.9558, 1.47 ) }
    dend_11 { pt3dadd( -5.33825, -178.988, -12.0785, 0.88 ) }
    dend_11 { pt3dadd( -5.34136, -179.535, -12.2067, 0.66 ) }
    dend_11 { pt3dadd( -5.36077, -180.784, -12.5385, 0.29 ) }
    dend_11 { pt3dadd( -5.37831, -181.273, -12.6736, 0.59 ) }
    dend_11 { pt3dadd( -5.42136, -182.098, -12.9173, 0.59 ) }
    dend_11 { pt3dadd( -5.46565, -182.951, -13.1717, 0.29 ) }
    dend_11 { pt3dadd( -5.46741, -183.038, -13.1959, 0.29 ) }
    dend_11 { pt3dadd( -5.44555, -184.11, -13.472, 0.29 ) }
    dend_11 { pt3dadd( -5.44011, -184.176, -13.487, 0.29 ) }
    dend_11 { pt3dadd( -5.37159, -184.717, -13.6107, 0.74 ) }
    dend_11 { pt3dadd( -5.29311, -185.337, -13.7471, 0.88 ) }
    dend_11 { pt3dadd( -5.20942, -186.324, -13.9545, 0.22 ) }
    dend_11 { pt3dadd( -5.17759, -187.123, -14.1186, 0.22 ) }
    dend_11 { pt3dadd( -5.20758, -188.009, -14.31, 1.99 ) }
    dend_11 { pt3dadd( -5.26265, -188.647, -14.4595, 2.43 ) }
    dend_11 { pt3dadd( -5.46717, -190.053, -14.8041, 0.22 ) }
    dend_11 { pt3dadd( -5.6216, -190.806, -14.9982, 0.44 ) }
    dend_11 { pt3dadd( -5.84992, -191.73, -15.2484, 0.37 ) }
    dend_11 { pt3dadd( -6.11387, -192.688, -15.5096, 0.22 ) }
    dend_11 { pt3dadd( -6.304, -193.323, -15.672, 1.03 ) }
    dend_11 { pt3dadd( -6.4091, -193.696, -15.7772, 1.25 ) }
    dend_11 { pt3dadd( -6.53514, -194.228, -15.9425, 0.96 ) }
    dend_11 { pt3dadd( -6.75945, -195.44, -16.3333, 0.15 ) }
    dend_11 { pt3dadd( -6.84442, -196.075, -16.5376, 0.74 ) }
    dend_11 { pt3dadd( -6.88442, -196.546, -16.6813, 0.96 ) }
    dend_11 { pt3dadd( -6.96988, -198.009, -17.11, 0.22 ) }
    dend_11 { pt3dadd( -6.97409, -198.148, -17.1497, 0.22 ) }
    dend_11 { pt3dadd( -6.95066, -198.762, -17.3266, 0.22 ) }
    dend_11 { pt3dadd( -6.88041, -199.583, -17.548, 0.22 ) }
    dend_11 { pt3dadd( -6.87367, -199.642, -17.5628, 0.22 ) }
    dend_11 { pt3dadd( -6.72902, -200.691, -17.8197, 2.5 ) }
    dend_11 { pt3dadd( -6.66557, -201.1, -17.9118, 2.73 ) }
    dend_11 { pt3dadd( -6.30635, -203.078, -18.3805, 0.22 ) }
    dend_11 { pt3dadd( -6.1682, -203.674, -18.5324, 0.52 ) }
    dend_11 { pt3dadd( -6.00996, -204.23, -18.6784, 0.52 ) }
    dend_11 { pt3dadd( -5.65226, -205.378, -18.9647, 0.22 ) }
    dend_11 { pt3dadd( -5.62924, -205.44, -18.9808, 0.22 ) }
    dend_11 { pt3dadd( -5.42844, -205.938, -19.1133, 0.22 ) }
    dend_11 { pt3dadd( -5.06304, -206.773, -19.3139, 1.18 ) }
    dend_11 { pt3dadd( -4.91254, -207.108, -19.3917, 1.69 ) }
    dend_11 { pt3dadd( -4.60446, -207.8, -19.5353, 1.33 ) }
    dend_11 { pt3dadd( -4.18818, -208.757, -19.6808, 0.22 ) }
    dend_11 { pt3dadd( -4.02549, -209.176, -19.7341, 0.22 ) }
    dend_11 { pt3dadd( -3.82754, -209.814, -19.8058, 1.47 ) }
    dend_11 { pt3dadd( -3.70729, -210.29, -19.8498, 1.69 ) }
    dend_11 { pt3dadd( -3.60429, -210.78, -19.8989, 1.69 ) }
    dend_11 { pt3dadd( -3.34994, -212.202, -20.0363, 0.29 ) }
    dend_11 { pt3dadd( -3.24889, -212.886, -20.094, 0.29 ) }
    dend_11 { pt3dadd( -3.14027, -213.632, -20.1667, 1.03 ) }
    dend_11 { pt3dadd( -3.12512, -213.781, -20.1815, 1.33 ) }
    dend_11 { pt3dadd( -3.04924, -215.065, -20.2956, 0.22 ) }
    dend_11 { pt3dadd( -3.04463, -215.558, -20.3343, 0.22 ) }
    dend_11 { pt3dadd( -3.06515, -215.91, -20.3522, 1.03 ) }
    dend_11 { pt3dadd( -3.09624, -216.344, -20.3535, 1.03 ) }
    dend_11 { pt3dadd( -3.23285, -217.72, -20.303, 0.22 ) }
    dend_11 { pt3dadd( -3.35061, -218.517, -20.2541, 1.33 ) }
    dend_11 { pt3dadd( -3.41439, -218.825, -20.2268, 1.47 ) }
    dend_11 { pt3dadd( -3.5579, -219.433, -20.1983, 1.55 ) }
    dend_11 { pt3dadd( -3.90304, -220.778, -20.1749, 0.22 ) }
    dend_11 { pt3dadd( -4.02946, -221.22, -20.1835, 0.22 ) }
    dend_11 { pt3dadd( -4.25473, -221.953, -20.2252, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( -4.42801, -222.493, -20.2686, 1.25 ) }
    dend_11 { pt3dadd( -4.86106, -223.854, -20.4273, 0.22 ) }
    dend_11 { pt3dadd( -4.88407, -223.928, -20.4381, 0.22 ) }
    dend_11 { pt3dadd( -5.2814, -225.295, -20.6385, 0.22 ) }
    dend_11 { pt3dadd( -5.36528, -225.603, -20.6797, 0.74 ) }
    dend_11 { pt3dadd( -5.43594, -225.873, -20.7141, 0.74 ) }
    dend_11 { pt3dadd( -5.78304, -227.239, -20.8674, 0.22 ) }
    dend_11 { pt3dadd( -6.07505, -228.42, -20.9632, 0.22 ) }
    dend_11 { pt3dadd( -6.42989, -229.965, -21.0918, 0.22 ) }
    dend_11 { pt3dadd( -6.53055, -230.467, -21.1365, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.7697, -82.3284, -20.2113, 0.66 ) }
    dend_10 { pt3dadd( -17.5439, -83.9139, -20.13, 0.66 ) }
    dend_10 { pt3dadd( -17.8462, -84.4913, -20.0756, 0.52 ) }
    dend_10 { pt3dadd( -18.1922, -85.0871, -20.0078, 0.88 ) }
    dend_10 { pt3dadd( -18.4159, -85.4636, -19.9504, 1.03 ) }
    dend_10 { pt3dadd( -18.7205, -85.9762, -19.8551, 0.96 ) }
    dend_10 { pt3dadd( -19.1897, -86.7702, -19.6899, 0.37 ) }
    dend_10 { pt3dadd( -19.65, -87.5486, -19.4562, 0.29 ) }
    dend_10 { pt3dadd( -19.8666, -87.9518, -19.3304, 0.29 ) }
    dend_10 { pt3dadd( -20.2555, -88.8229, -19.0305, 0.29 ) }
    dend_10 { pt3dadd( -20.3575, -89.108, -18.9314, 0.74 ) }
    dend_10 { pt3dadd( -20.38, -89.1882, -18.9066, 0.74 ) }
    dend_10 { pt3dadd( -20.4491, -89.5073, -18.831, 0.74 ) }
    dend_10 { pt3dadd( -20.5541, -90.1236, -18.7103, 0.59 ) }
    dend_10 { pt3dadd( -20.7208, -91.1491, -18.5423, 0.29 ) }
    dend_10 { pt3dadd( -20.9063, -92.203, -18.4105, 0.29 ) }
    dend_10 { pt3dadd( -21.0918, -93.1962, -18.3094, 0.29 ) }
    dend_10 { pt3dadd( -21.3087, -94.3173, -18.21, 0.29 ) }
    dend_10 { pt3dadd( -21.4708, -95.2177, -18.168, 1.33 ) }
    dend_10 { pt3dadd( -21.4837, -95.2943, -18.168, 1.33 ) }
    dend_10 { pt3dadd( -21.5994, -96.0781, -18.2064, 1.99 ) }
    dend_10 { pt3dadd( -21.6454, -96.5667, -18.2371, 2.21 ) }
    dend_10 { pt3dadd( -21.6736, -96.9899, -18.2695, 2.21 ) }
    dend_10 { pt3dadd( -21.7398, -98.4058, -18.3922, 0.29 ) }
    dend_10 { pt3dadd( -21.78, -99.5772, -18.4918, 0.29 ) }
    dend_10 { pt3dadd( -21.7966, -100.259, -18.5442, 0.29 ) }
    dend_10 { pt3dadd( -21.7985, -100.737, -18.5763, 0.96 ) }
    dend_10 { pt3dadd( -21.8066, -101.306, -18.6054, 1.47 ) }
    dend_10 { pt3dadd( -21.8147, -101.654, -18.6154, 1.84 ) }
    dend_10 { pt3dadd( -21.8272, -102.353, -18.6023, 0.88 ) }
    dend_10 { pt3dadd( -21.8243, -102.419, -18.6027, 0.88 ) }
    dend_10 { pt3dadd( -21.766, -103.112, -18.6365, 0.29 ) }
    dend_10 { pt3dadd( -21.6996, -103.791, -18.693, 0.29 ) }
    dend_10 { pt3dadd( -21.6905, -103.866, -18.7008, 0.29 ) }
    dend_10 { pt3dadd( -21.5643, -104.818, -18.8158, 0.52 ) }
    dend_10 { pt3dadd( -21.4138, -105.89, -18.9574, 0.52 ) }
    dend_10 { pt3dadd( -21.2904, -106.799, -19.0723, 0.22 ) }
    dend_10 { pt3dadd( -21.1965, -107.552, -19.1642, 1.47 ) }
    dend_10 { pt3dadd( -21.1302, -108.182, -19.2333, 2.06 ) }
    dend_10 { pt3dadd( -21.112, -108.516, -19.2648, 2.36 ) }
    dend_10 { pt3dadd( -21.1257, -109.224, -19.3158, 1.69 ) }
    dend_10 { pt3dadd( -21.2305, -110.321, -19.3655, 0.74 ) }
    dend_10 { pt3dadd( -21.384, -111.306, -19.395, 0.44 ) }
    dend_10 { pt3dadd( -21.593, -112.335, -19.4347, 0.44 ) }
    dend_10 { pt3dadd( -21.7446, -112.953, -19.4646, 0.44 ) }
    dend_10 { pt3dadd( -22.0578, -114.143, -19.5317, 0.29 ) }
    dend_10 { pt3dadd( -22.2116, -114.75, -19.5714, 0.59 ) }
    dend_10 { pt3dadd( -22.3627, -115.386, -19.6179, 0.59 ) }
    dend_10 { pt3dadd( -22.4967, -116.059, -19.6692, 0.29 ) }
    dend_10 { pt3dadd( -22.5074, -116.134, -19.6759, 0.29 ) }
    dend_10 { pt3dadd( -22.6128, -117.101, -19.7786, 0.29 ) }
    dend_10 { pt3dadd( -22.6913, -118.193, -19.9174, 0.29 ) }
    dend_10 { pt3dadd( -22.7029, -118.325, -19.9359, 0.29 ) }
    dend_10 { pt3dadd( -22.7863, -118.802, -20.0115, 0.29 ) }
    dend_10 { pt3dadd( -22.8066, -118.863, -20.0248, 0.29 ) }
    dend_10 { pt3dadd( -23.0623, -119.432, -20.2423, 0.29 ) }
    dend_10 { pt3dadd( -23.0881, -119.486, -20.2679, 0.29 ) }
    dend_10 { pt3dadd( -23.3726, -120.091, -20.5928, 0.29 ) }
    dend_10 { pt3dadd( -23.7714, -121.01, -21.0992, 2.28 ) }
    dend_10 { pt3dadd( -24.2736, -122.168, -21.7457, 2.65 ) }
    dend_10 { pt3dadd( -24.9675, -123.807, -22.6564, 0.29 ) }
    dend_10 { pt3dadd( -25.3187, -124.646, -23.11, 0.29 ) }
    dend_10 { pt3dadd( -25.5757, -125.225, -23.4188, 0.59 ) }
    dend_10 { pt3dadd( -25.7059, -125.505, -23.5697, 0.22 ) }
    dend_10 { pt3dadd( -26.0317, -126.113, -23.9078, 0.22 ) }
    dend_10 { pt3dadd( -26.3118, -126.528, -24.1711, 0.22 ) }
    dend_10 { pt3dadd( -26.844, -127.193, -24.6328, 1.03 ) }
    dend_10 { pt3dadd( -27.3413, -127.764, -25.0674, 1.92 ) }
    dend_10 { pt3dadd( -27.7603, -128.257, -25.4498, 2.06 ) }
    dend_10 { pt3dadd( -28.1568, -128.776, -25.8638, 1.92 ) }
    dend_10 { pt3dadd( -29.2125, -130.441, -27.1635, 0.29 ) }
    dend_10 { pt3dadd( -29.5194, -131.021, -27.592, 0.52 ) }
    dend_10 { pt3dadd( -29.5386, -131.064, -27.6218, 0.52 ) }
    dend_10 { pt3dadd( -29.7091, -131.529, -27.8924, 0.52 ) }
    dend_10 { pt3dadd( -29.9702, -132.342, -28.2645, 0.37 ) }
    dend_10 { pt3dadd( -30.1525, -133.051, -28.4851, 0.29 ) }
    dend_10 { pt3dadd( -30.3134, -133.86, -28.6359, 0.29 ) }
    dend_10 { pt3dadd( -30.448, -134.503, -28.7408, 0.88 ) }
    dend_10 { pt3dadd( -30.5331, -134.928, -28.806, 0.88 ) }
    dend_10 { pt3dadd( -30.7158, -136.022, -28.9579, 0.22 ) }
    dend_10 { pt3dadd( -30.8278, -136.933, -29.0631, 1.55 ) }
    dend_10 { pt3dadd( -30.8635, -137.497, -29.1253, 1.84 ) }
    dend_10 { pt3dadd( -30.8646, -138.006, -29.1757, 1.62 ) }
    dend_10 { pt3dadd( -30.8112, -139.238, -29.318, 0.22 ) }
    dend_10 { pt3dadd( -30.7513, -140.093, -29.4226, 0.22 ) }
    dend_10 { pt3dadd( -30.7075, -140.635, -29.4868, 0.22 ) }
    dend_10 { pt3dadd( -30.6886, -141.188, -29.5475, 0.74 ) }
    dend_10 { pt3dadd( -30.6979, -141.676, -29.5939, 0.74 ) }
    dend_10 { pt3dadd( -30.7744, -142.747, -29.6833, 0.29 ) }
    dend_10 { pt3dadd( -30.8654, -143.364, -29.7201, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -31.0718, -144.354, -29.7464, 0.29 ) }
    dend_10 { pt3dadd( -31.2961, -145.306, -29.7434, 1.77 ) }
    dend_10 { pt3dadd( -31.4371, -145.87, -29.7272, 2.21 ) }
    dend_10 { pt3dadd( -31.5785, -146.404, -29.6985, 2.21 ) }
    dend_10 { pt3dadd( -31.8405, -147.332, -29.6199, 0.74 ) }
    dend_10 { pt3dadd( -32.1032, -148.198, -29.564, 0.22 ) }
    dend_10 { pt3dadd( -32.4414, -149.254, -29.5216, 0.22 ) }
    dend_10 { pt3dadd( -32.6197, -149.806, -29.5148, 0.88 ) }
    dend_10 { pt3dadd( -32.7814, -150.329, -29.5197, 1.03 ) }
    dend_10 { pt3dadd( -32.8214, -150.467, -29.5245, 1.03 ) }
    dend_10 { pt3dadd( -33.0897, -151.463, -29.5949, 0.22 ) }
    dend_10 { pt3dadd( -33.2659, -152.123, -29.6596, 0.22 ) }
    dend_10 { pt3dadd( -33.3014, -152.25, -29.6718, 0.22 ) }
    dend_10 { pt3dadd( -33.503, -152.985, -29.741, 0.22 ) }
    dend_10 { pt3dadd( -33.6447, -153.472, -29.7792, 0.22 ) }
    dend_10 { pt3dadd( -33.8961, -154.278, -29.837, 1.33 ) }
    dend_10 { pt3dadd( -34.0508, -154.739, -29.8638, 1.77 ) }
    dend_10 { pt3dadd( -34.2959, -155.438, -29.8889, 1.77 ) }
    dend_10 { pt3dadd( -34.4882, -155.994, -29.8998, 0.88 ) }
    dend_10 { pt3dadd( -34.8753, -157.107, -29.9093, 0.29 ) }
    dend_10 { pt3dadd( -34.9966, -157.53, -29.908, 0.74 ) }
    dend_10 { pt3dadd( -35.1214, -157.988, -29.9166, 0.74 ) }
    dend_10 { pt3dadd( -35.3956, -159.07, -29.9605, 0.22 ) }
    dend_10 { pt3dadd( -35.5093, -159.549, -29.9866, 0.22 ) }
    dend_10 { pt3dadd( -35.5293, -159.633, -29.9927, 0.22 ) }
    dend_10 { pt3dadd( -35.7347, -160.5, -30.0814, 0.96 ) }
    dend_10 { pt3dadd( -36.0587, -161.755, -30.2232, 1.18 ) }
    dend_10 { pt3dadd( -36.1617, -162.111, -30.2708, 1.47 ) }
    dend_10 { pt3dadd( -36.1885, -162.193, -30.2835, 1.47 ) }
    dend_10 { pt3dadd( -36.3381, -162.619, -30.3411, 1.47 ) }
    dend_10 { pt3dadd( -36.7401, -163.804, -30.4687, 0.22 ) }
    dend_10 { pt3dadd( -36.8651, -164.197, -30.5068, 0.22 ) }
    dend_10 { pt3dadd( -36.9977, -164.736, -30.5449, 0.74 ) }
    dend_10 { pt3dadd( -37.0691, -164.994, -30.5665, 0.96 ) }
    dend_10 { pt3dadd( -37.1108, -165.131, -30.579, 0.96 ) }
    dend_10 { pt3dadd( -37.2181, -165.455, -30.6141, 0.96 ) }
    dend_10 { pt3dadd( -37.5219, -166.358, -30.7302, 0.22 ) }
    dend_10 { pt3dadd( -37.6978, -166.907, -30.8025, 0.29 ) }
    dend_10 { pt3dadd( -37.8859, -167.565, -30.9369, 0.29 ) }
    dend_10 { pt3dadd( -38.0135, -168.017, -31.0791, 0.29 ) }
    dend_10 { pt3dadd( -38.2381, -168.825, -31.3845, 1.25 ) }
    dend_10 { pt3dadd( -38.3714, -169.315, -31.5941, 1.69 ) }
    dend_10 { pt3dadd( -38.4691, -169.692, -31.7775, 1.69 ) }
    dend_10 { pt3dadd( -38.7425, -170.798, -32.3875, 1.03 ) }
    dend_10 { pt3dadd( -39.0423, -171.937, -33.0419, 0.22 ) }
    dend_10 { pt3dadd( -39.1725, -172.395, -33.3008, 0.22 ) }
    dend_10 { pt3dadd( -39.5194, -173.531, -33.924, 1.99 ) }
    dend_10 { pt3dadd( -39.7552, -174.247, -34.2942, 2.5 ) }
    dend_10 { pt3dadd( -40.2597, -175.753, -34.9793, 0.29 ) }
    dend_10 { pt3dadd( -40.5016, -176.441, -35.2399, 0.22 ) }
    dend_10 { pt3dadd( -40.7576, -177.172, -35.464, 0.52 ) }
    dend_10 { pt3dadd( -40.873, -177.488, -35.5462, 0.59 ) }
    dend_10 { pt3dadd( -41.2615, -178.544, -35.7453, 0.22 ) }
    dend_10 { pt3dadd( -41.5684, -179.421, -35.8431, 0.22 ) }
    dend_10 { pt3dadd( -41.7476, -179.956, -35.868, 0.22 ) }
    dend_10 { pt3dadd( -42.1031, -181.046, -35.906, 1.33 ) }
    dend_10 { pt3dadd( -42.2839, -181.555, -35.9254, 1.69 ) }
    dend_10 { pt3dadd( -42.48, -182.063, -35.9434, 1.47 ) }
    dend_10 { pt3dadd( -42.7838, -182.753, -35.9784, 0.52 ) }
    dend_10 { pt3dadd( -43.0415, -183.287, -36.0194, 0.29 ) }
    dend_10 { pt3dadd( -43.7468, -184.624, -36.1468, 0.29 ) }
    dend_10 { pt3dadd( -44.2584, -185.493, -36.2558, 1.11 ) }
    dend_10 { pt3dadd( -44.5572, -185.983, -36.3314, 1.47 ) }
    dend_10 { pt3dadd( -45.362, -187.246, -36.5518, 0.22 ) }
    dend_10 { pt3dadd( -45.6689, -187.733, -36.6446, 1.77 ) }
    dend_10 { pt3dadd( -46.0841, -188.404, -36.7826, 2.14 ) }
    dend_10 { pt3dadd( -46.331, -188.817, -36.8736, 1.69 ) }
    dend_10 { pt3dadd( -46.8864, -189.856, -37.0891, 0.22 ) }
    dend_10 { pt3dadd( -46.9143, -189.917, -37.1011, 0.22 ) }
    dend_10 { pt3dadd( -47.1253, -190.462, -37.2016, 0.22 ) }
    dend_10 { pt3dadd( -47.3303, -191.04, -37.3259, 0.52 ) }
    dend_10 { pt3dadd( -47.387, -191.216, -37.3679, 0.52 ) }
    dend_10 { pt3dadd( -47.6503, -192.096, -37.5836, 0.22 ) }
    dend_10 { pt3dadd( -47.805, -192.636, -37.725, 0.22 ) }
    dend_10 { pt3dadd( -48.0012, -193.414, -37.9376, 1.99 ) }
    dend_10 { pt3dadd( -48.1613, -194.132, -38.1463, 2.5 ) }
    dend_10 { pt3dadd( -48.313, -195.131, -38.4845, 0.81 ) }
    dend_10 { pt3dadd( -48.3982, -195.788, -38.7216, 0.22 ) }
    dend_10 { pt3dadd( -48.4051, -195.841, -38.7406, 0.22 ) }
    dend_10 { pt3dadd( -48.4593, -196.195, -38.8655, 0.52 ) }
    dend_10 { pt3dadd( -48.4688, -196.248, -38.8831, 0.52 ) }
    dend_10 { pt3dadd( -48.7548, -197.276, -39.2239, 0.22 ) }
    dend_10 { pt3dadd( -49.0905, -198.221, -39.5246, 0.22 ) }
    dend_10 { pt3dadd( -49.4126, -199.01, -39.7671, 0.22 ) }
    dend_10 { pt3dadd( -49.7403, -199.701, -39.972, 1.33 ) }
    dend_10 { pt3dadd( -49.8991, -199.994, -40.0552, 1.33 ) }
    dend_10 { pt3dadd( -50.5652, -201.11, -40.3604, 0.22 ) }
    dend_10 { pt3dadd( -51.089, -201.797, -40.5322, 0.22 ) }
    dend_10 { pt3dadd( -51.1277, -201.84, -40.5435, 0.22 ) }
    dend_10 { pt3dadd( -52.1451, -202.777, -40.7973, 2.28 ) }
    dend_10 { pt3dadd( -52.4589, -203.021, -40.8618, 2.73 ) }
    dend_10 { pt3dadd( -52.7698, -203.233, -40.9198, 2.73 ) }
    dend_10 { pt3dadd( -54.2939, -204.102, -41.1747, 0.22 ) }
    dend_10 { pt3dadd( -54.5961, -204.239, -41.2329, 0.74 ) }
    dend_10 { pt3dadd( -54.9057, -204.362, -41.2969, 0.96 ) }
    dend_10 { pt3dadd( -55.9156, -204.672, -41.5479, 0.22 ) }
    dend_10 { pt3dadd( -56.379, -204.788, -41.686, 1.03 ) }
    dend_10 { pt3dadd( -56.6657, -204.864, -41.8318, 1.03 ) }
    dend_10 { pt3dadd( -57.7603, -205.187, -42.6688, 0.22 ) }
    dend_10 { pt3dadd( -57.8044, -205.202, -42.7124, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -58.3993, -205.418, -43.3686, 1.4 ) }
    dend_10 { pt3dadd( -58.5576, -205.479, -43.5601, 1.4 ) }
    dend_10 { pt3dadd( -60.1016, -206.122, -45.4704, 0.59 ) }
    dend_10 { pt3dadd( -60.4566, -206.284, -45.9122, 1.03 ) }
    dend_10 { pt3dadd( -61.5551, -206.845, -47.208, 0.22 ) }
    dend_10 { pt3dadd( -62.105, -207.13, -47.7801, 0.22 ) }
    dend_10 { pt3dadd( -62.142, -207.151, -47.8143, 0.22 ) }
    dend_10 { pt3dadd( -62.6076, -207.403, -48.187, 1.11 ) }
    dend_10 { pt3dadd( -62.9611, -207.582, -48.4097, 1.25 ) }
    dend_10 { pt3dadd( -64.2275, -208.243, -49.144, 0.22 ) }
    dend_10 { pt3dadd( -64.6456, -208.469, -49.3669, 0.66 ) }
    dend_10 { pt3dadd( -65.7944, -209.105, -50.0028, 0.22 ) }
    dend_10 { pt3dadd( -65.8468, -209.134, -50.031, 0.22 ) }
    dend_10 { pt3dadd( -66.2009, -209.325, -50.2158, 0.96 ) }
    dend_10 { pt3dadd( -66.534, -209.49, -50.3751, 1.4 ) }
    dend_10 { pt3dadd( -67.0523, -209.728, -50.5911, 0.96 ) }
    dend_10 { pt3dadd( -67.9891, -210.156, -50.9301, 0.22 ) }
    dend_10 { pt3dadd( -68.5143, -210.404, -51.0883, 1.62 ) }
    dend_10 { pt3dadd( -68.9432, -210.616, -51.2127, 1.99 ) }
    dend_10 { pt3dadd( -70.3057, -211.334, -51.5722, 0.22 ) }
    dend_10 { pt3dadd( -70.6991, -211.565, -51.6708, 0.37 ) }
    dend_10 { pt3dadd( -70.9027, -211.696, -51.713, 0.37 ) }
    dend_10 { pt3dadd( -71.4299, -212.049, -51.8111, 0.22 ) }
    dend_10 { pt3dadd( -71.8608, -212.361, -51.899, 0.22 ) }
    dend_10 { pt3dadd( -72.4822, -212.832, -52.0339, 0.52 ) }
    dend_10 { pt3dadd( -73.1989, -213.391, -52.2035, 0.22 ) }
    dend_10 { pt3dadd( -73.5973, -213.689, -52.31, 0.96 ) }
    dend_10 { pt3dadd( -73.9881, -213.969, -52.4469, 0.96 ) }
    dend_10 { pt3dadd( -74.9505, -214.674, -52.8465, 0.22 ) }
    dend_10 { pt3dadd( -75.664, -215.207, -53.2458, 1.18 ) }
    dend_10 { pt3dadd( -75.975, -215.45, -53.4939, 1.55 ) }
    dend_10 { pt3dadd( -76.0093, -215.478, -53.5264, 1.55 ) }
    dend_10 { pt3dadd( -76.9676, -216.281, -54.5448, 0.29 ) }
    dend_10 { pt3dadd( -77.4221, -216.663, -55.0589, 0.29 ) }
    dend_10 { pt3dadd( -78.3275, -217.391, -56.1146, 1.55 ) }
    dend_10 { pt3dadd( -79.709, -218.454, -57.7351, 0.29 ) }
    dend_10 { pt3dadd( -79.7524, -218.486, -57.7846, 0.29 ) }
    dend_10 { pt3dadd( -80.1411, -218.769, -58.2107, 1.18 ) }
    dend_10 { pt3dadd( -80.8303, -219.258, -58.9422, 0.22 ) }
    dend_10 { pt3dadd( -81.3944, -219.65, -59.5174, 1.25 ) }
    dend_10 { pt3dadd( -82.2814, -220.314, -60.3707, 0.22 ) }
    dend_10 { pt3dadd( -82.4221, -220.42, -60.4948, 0.74 ) }
    dend_10 { pt3dadd( -83.0308, -220.907, -61.0289, 0.22 ) }
    dend_10 { pt3dadd( -83.0649, -220.937, -61.059, 0.22 ) }
    dend_10 { pt3dadd( -83.5723, -221.457, -61.5104, 1.11 ) }
    dend_10 { pt3dadd( -83.93, -221.86, -61.821, 1.47 ) }
    dend_10 { pt3dadd( -84.7124, -222.801, -62.4485, 0.22 ) }
    dend_10 { pt3dadd( -84.9207, -223.054, -62.6089, 0.59 ) }
    dend_10 { pt3dadd( -85.4034, -223.645, -62.9543, 1.18 ) }
    dend_10 { pt3dadd( -85.442, -223.692, -62.9816, 1.18 ) }
    dend_10 { pt3dadd( -85.9117, -224.288, -63.3003, 1.18 ) }
    dend_10 { pt3dadd( -86.7687, -225.371, -63.8521, 0.22 ) }
    dend_10 { pt3dadd( -87.2094, -225.969, -64.1324, 1.25 ) }
    dend_10 { pt3dadd( -87.3862, -226.205, -64.2411, 1.25 ) }
    dend_10 { pt3dadd( -88.0379, -227.003, -64.6298, 0.29 ) }
    dend_10 { pt3dadd( -88.4144, -227.438, -64.855, 0.96 ) }
    dend_10 { pt3dadd( -89.3593, -228.548, -65.3539, 0.29 ) }
    dend_10 { pt3dadd( -90.0176, -229.308, -65.643, 0.44 ) }
    dend_10 { pt3dadd( -90.7428, -230.114, -65.9024, 0.22 ) }
    dend_10 { pt3dadd( -91.4446, -230.847, -66.0998, 1.18 ) }
    dend_10 { pt3dadd( -91.9371, -231.304, -66.1703, 1.77 ) }
    dend_10 { pt3dadd( -93.1609, -232.298, -66.1976, 0.29 ) }
    dend_10 { pt3dadd( -93.6616, -232.648, -66.1347, 0.29 ) }
    dend_10 { pt3dadd( -94.0388, -232.86, -66.0382, 0.29 ) }
    dend_10 { pt3dadd( -94.3874, -233.013, -65.9239, 0.88 ) }
    dend_10 { pt3dadd( -95.4737, -233.418, -65.5442, 0.22 ) }
    dend_10 { pt3dadd( -96.1763, -233.618, -65.3359, 1.03 ) }
    dend_10 { pt3dadd( -96.5524, -233.697, -65.2496, 1.03 ) }
    dend_10 { pt3dadd( -97.3091, -233.823, -65.0722, 0.22 ) }
    dend_10 { pt3dadd( -99.2996, -234.045, -64.6254, 0.22 ) }
    dend_10 { pt3dadd( -99.3617, -234.049, -64.6124, 0.22 ) }
    dend_10 { pt3dadd( -100.603, -233.987, -64.3891, 0.81 ) }
    dend_10 { pt3dadd( -100.84, -233.956, -64.355, 1.03 ) }
    dend_10 { pt3dadd( -101.53, -233.795, -64.2398, 0.22 ) }
    dend_10 { pt3dadd( -102.363, -233.517, -64.0935, 0.22 ) }
    dend_10 { pt3dadd( -102.42, -233.493, -64.079, 0.22 ) }
    dend_10 { pt3dadd( -103.407, -233.079, -63.8297, 1.33 ) }
    dend_10 { pt3dadd( -103.846, -232.912, -63.7323, 1.55 ) }
    dend_10 { pt3dadd( -105.349, -232.44, -63.4885, 0.22 ) }
    dend_10 { pt3dadd( -105.782, -232.33, -63.44, 0.59 ) }
    dend_10 { pt3dadd( -106.463, -232.193, -63.417, 0.59 ) }
    dend_10 { pt3dadd( -107.192, -232.08, -63.4444, 0.44 ) }
    dend_10 { pt3dadd( -108.349, -231.961, -63.5781, 0.22 ) }
    dend_10 { pt3dadd( -109.077, -231.894, -63.6977, 1.03 ) }
    dend_10 { pt3dadd( -109.341, -231.879, -63.7524, 1.03 ) }
    dend_10 { pt3dadd( -110.456, -231.805, -63.9603, 0.22 ) }
    dend_10 { pt3dadd( -110.935, -231.751, -64.0363, 0.22 ) }
    dend_10 { pt3dadd( -110.988, -231.741, -64.04, 0.22 ) }
    dend_10 { pt3dadd( -111.978, -231.468, -64.079, 0.22 ) }
    dend_10 { pt3dadd( -112.871, -231.17, -64.0989, 0.22 ) }
    dend_10 { pt3dadd( -112.922, -231.151, -64.0997, 0.22 ) }
    dend_10 { pt3dadd( -113.851, -230.775, -64.1692, 1.11 ) }
    dend_10 { pt3dadd( -114.2, -230.637, -64.2437, 1.55 ) }
    dend_10 { pt3dadd( -115.162, -230.276, -64.542, 0.22 ) }
    dend_10 { pt3dadd( -115.874, -230.048, -64.8487, 0.22 ) }
    dend_10 { pt3dadd( -116.233, -229.938, -65.0279, 0.66 ) }
    dend_10 { pt3dadd( -117.274, -229.664, -65.5863, 0.22 ) }
    dend_10 { pt3dadd( -118.197, -229.45, -66.1048, 1.25 ) }
    dend_10 { pt3dadd( -118.545, -229.38, -66.3246, 1.47 ) }
    dend_10 { pt3dadd( -119.674, -229.247, -67.0346, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -119.728, -229.246, -67.067, 0.22 ) }
    dend_10 { pt3dadd( -120.156, -229.271, -67.3078, 1.03 ) }
    dend_10 { pt3dadd( -120.818, -229.368, -67.6361, 1.33 ) }
    dend_10 { pt3dadd( -122.52, -229.681, -68.4432, 0.22 ) }
    dend_10 { pt3dadd( -123.803, -229.954, -69.0541, 0.22 ) }
    dend_10 { pt3dadd( -124.782, -230.197, -69.5031, 0.22 ) }
    dend_10 { pt3dadd( -125.142, -230.298, -69.6657, 1.03 ) }
    dend_10 { pt3dadd( -125.598, -230.456, -69.8626, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -34.0393, 556.121, -57.692, 0.88 ) }
    dend_63 { pt3dadd( -34.3784, 557.189, -57.5755, 0.88 ) }
    dend_63 { pt3dadd( -34.8991, 558.831, -57.4207, 0.15 ) }
    dend_63 { pt3dadd( -35.1987, 559.893, -57.4055, 0.15 ) }
    dend_63 { pt3dadd( -35.2302, 560.003, -57.4073, 0.15 ) }
    dend_63 { pt3dadd( -35.3946, 560.573, -57.4172, 1.03 ) }
    dend_63 { pt3dadd( -35.4687, 560.83, -57.4216, 1.4 ) }
    dend_63 { pt3dadd( -35.5365, 561.07, -57.4438, 1.4 ) }
    dend_63 { pt3dadd( -36.1365, 563.188, -57.667, 0.22 ) }
    dend_63 { pt3dadd( -36.5546, 564.767, -57.8426, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -34.0393, 556.121, -57.692, 0.22 ) }
    dend_62 { pt3dadd( -33.2485, 558.403, -56.9333, 0.22 ) }
    dend_62 { pt3dadd( -32.9018, 559.448, -56.5451, 0.81 ) }
    dend_62 { pt3dadd( -32.7955, 559.776, -56.4162, 1.03 ) }
    dend_62 { pt3dadd( -32.6275, 560.337, -56.1962, 0.81 ) }
    dend_62 { pt3dadd( -31.9144, 562.826, -55.2237, 0.22 ) }
    dend_62 { pt3dadd( -31.8088, 563.218, -55.0848, 0.44 ) }
    dend_62 { pt3dadd( -31.6321, 564.09, -54.7966, 0.15 ) }
    dend_62 { pt3dadd( -31.6205, 564.153, -54.7787, 0.15 ) }
    dend_62 { pt3dadd( -31.4825, 565.11, -54.5411, 1.03 ) }
    dend_62 { pt3dadd( -31.4701, 565.227, -54.5166, 1.03 ) }
    dend_62 { pt3dadd( -31.3006, 566.903, -54.2682, 0.15 ) }
    dend_62 { pt3dadd( -31.2605, 567.307, -54.2122, 0.29 ) }
    dend_62 { pt3dadd( -31.0714, 569.178, -53.9685, 0.15 ) }
    dend_62 { pt3dadd( -31.0003, 569.832, -53.8771, 0.66 ) }
    dend_62 { pt3dadd( -30.991, 569.92, -53.8611, 0.66 ) }
    dend_62 { pt3dadd( -30.8451, 571.494, -53.5189, 0.15 ) }
    dend_62 { pt3dadd( -30.7531, 572.595, -53.2256, 0.66 ) }
    dend_62 { pt3dadd( -30.669, 573.547, -52.9605, 0.22 ) }
    dend_62 { pt3dadd( -30.6588, 573.635, -52.9344, 0.22 ) }
    dend_62 { pt3dadd( -30.5417, 574.59, -52.6263, 0.74 ) }
    dend_62 { pt3dadd( -30.5193, 574.824, -52.545, 0.74 ) }
    dend_62 { pt3dadd( -30.5256, 575.027, -52.4552, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -4.75768, 505.565, -19.6831, 0.37 ) }
    dend_52 { pt3dadd( -6.14067, 506.435, -19.6901, 0.37 ) }
    dend_52 { pt3dadd( -6.73982, 506.818, -19.698, 0.37 ) }
    dend_52 { pt3dadd( -6.80002, 506.86, -19.6929, 0.37 ) }
    dend_52 { pt3dadd( -7.30248, 507.218, -19.6216, 0.37 ) }
    dend_52 { pt3dadd( -7.94104, 507.7, -19.4928, 0.88 ) }
    dend_52 { pt3dadd( -8.29601, 507.978, -19.4057, 0.88 ) }
    dend_52 { pt3dadd( -8.34945, 508.026, -19.3836, 0.88 ) }
    dend_52 { pt3dadd( -9.09606, 508.789, -18.9696, 0.88 ) }
    dend_52 { pt3dadd( -9.12863, 508.828, -18.9477, 0.88 ) }
    dend_52 { pt3dadd( -9.37856, 509.186, -18.7366, 1.03 ) }
    dend_52 { pt3dadd( -9.42666, 509.255, -18.6983, 1.03 ) }
    dend_52 { pt3dadd( -9.67485, 509.57, -18.5328, 1.03 ) }
    dend_52 { pt3dadd( -9.75041, 509.66, -18.489, 1.03 ) }
    dend_52 { pt3dadd( -10.2075, 510.153, -18.2658, 0.74 ) }
    dend_52 { pt3dadd( -10.8153, 510.773, -17.9827, 0.29 ) }
    dend_52 { pt3dadd( -11.4274, 511.373, -17.6903, 0.29 ) }
    dend_52 { pt3dadd( -12.0506, 512.004, -17.3719, 0.29 ) }
    dend_52 { pt3dadd( -12.125, 512.086, -17.3282, 0.29 ) }
    dend_52 { pt3dadd( -12.4844, 512.527, -17.0791, 0.22 ) }
    dend_52 { pt3dadd( -12.5267, 512.589, -17.0402, 0.22 ) }
    dend_52 { pt3dadd( -12.7836, 513.1, -16.688, 0.52 ) }
    dend_52 { pt3dadd( -12.8922, 513.722, -16.2355, 1.18 ) }
    dend_52 { pt3dadd( -12.9021, 514.233, -15.8729, 1.18 ) }
    dend_52 { pt3dadd( -12.8992, 514.286, -15.836, 1.18 ) }
    dend_52 { pt3dadd( -12.8447, 514.564, -15.6414, 1.18 ) }
    dend_52 { pt3dadd( -12.8322, 514.608, -15.6102, 1.18 ) }
    dend_52 { pt3dadd( -12.4773, 515.291, -15.1193, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -4.75768, 505.565, -19.6831, 0.52 ) }
    dend_31 { pt3dadd( -4.10766, 506.58, -19.7066, 0.52 ) }
    dend_31 { pt3dadd( -3.53137, 507.488, -19.7025, 0.37 ) }
    dend_31 { pt3dadd( -3.50149, 507.535, -19.7018, 0.37 ) }
    dend_31 { pt3dadd( -3.10911, 508.173, -19.6817, 0.37 ) }
    dend_31 { pt3dadd( -2.82962, 508.631, -19.6632, 0.74 ) }
    dend_31 { pt3dadd( -2.41051, 509.342, -19.6273, 0.44 ) }
    dend_31 { pt3dadd( -1.92014, 510.304, -19.5452, 0.37 ) }
    dend_31 { pt3dadd( -1.8986, 510.347, -19.5407, 0.37 ) }
    dend_31 { pt3dadd( -1.73972, 510.665, -19.5055, 0.37 ) }
    dend_31 { pt3dadd( -1.71421, 510.716, -19.499, 0.37 ) }
    dend_31 { pt3dadd( -1.32475, 511.574, -19.3984, 0.88 ) }
    dend_31 { pt3dadd( -1.0959, 512.198, -19.364, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -36.5546, 564.767, -57.8426, 0.22 ) }
    dend_65 { pt3dadd( -37.6952, 563.888, -58.4441, 0.22 ) }
    dend_65 { pt3dadd( -38.0043, 563.649, -58.6213, 1.25 ) }
    dend_65 { pt3dadd( -39.1426, 562.771, -59.3012, 0.22 ) }
    dend_65 { pt3dadd( -39.549, 562.464, -59.5446, 0.96 ) }
    dend_65 { pt3dadd( -40.7145, 561.607, -60.2289, 0.22 ) }
    dend_65 { pt3dadd( -40.7631, 561.571, -60.2589, 0.22 ) }
    dend_65 { pt3dadd( -41.5851, 560.952, -60.8133, 0.22 ) }
    dend_65 { pt3dadd( -41.6181, 560.926, -60.8381, 0.22 ) }
    dend_65 { pt3dadd( -41.9399, 560.651, -61.1128, 0.74 ) }
    dend_65 { pt3dadd( -42.0848, 560.525, -61.2438, 0.88 ) }
    dend_65 { pt3dadd( -43.042, 559.711, -62.016, 0.22 ) }
    dend_65 { pt3dadd( -43.0753, 559.683, -62.0394, 0.22 ) }
    dend_65 { pt3dadd( -43.767, 559.08, -62.5312, 0.22 ) }
    dend_65 { pt3dadd( -44.1949, 558.69, -62.8439, 0.22 ) }
    dend_65 { pt3dadd( -44.2252, 558.659, -62.868, 0.22 ) }
    dend_65 { pt3dadd( -44.7993, 558.058, -63.3321, 1.11 ) }
    dend_65 { pt3dadd( -45.2925, 557.628, -63.5019, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -36.5546, 564.767, -57.8426, 0.96 ) }
    dend_64 { pt3dadd( -36.7745, 565.429, -57.8913, 0.96 ) }
    dend_64 { pt3dadd( -36.7973, 565.5, -57.8946, 0.96 ) }
    dend_64 { pt3dadd( -36.9123, 565.867, -57.9072, 1.18 ) }
    dend_64 { pt3dadd( -37.1357, 566.595, -57.9289, 0.88 ) }
    dend_64 { pt3dadd( -38.0899, 569.771, -58.0196, 0.15 ) }
    dend_64 { pt3dadd( -38.1116, 569.844, -58.0216, 0.15 ) }
    dend_64 { pt3dadd( -38.6289, 571.633, -58.082, 0.15 ) }
    dend_64 { pt3dadd( -38.9694, 572.823, -58.157, 0.96 ) }
    dend_64 { pt3dadd( -39.1132, 573.342, -58.204, 1.33 ) }
    dend_64 { pt3dadd( -39.1341, 573.424, -58.2139, 1.33 ) }
    dend_64 { pt3dadd( -39.1813, 573.652, -58.2509, 1.33 ) }
    dend_64 { pt3dadd( -39.2074, 573.784, -58.2764, 1.33 ) }
    dend_64 { pt3dadd( -39.5547, 575.746, -58.7042, 0.15 ) }
    dend_64 { pt3dadd( -39.6293, 576.206, -58.7977, 0.44 ) }
    dend_64 { pt3dadd( -39.7011, 576.656, -58.8843, 0.44 ) }
    dend_64 { pt3dadd( -39.9668, 578.272, -59.1542, 0.22 ) }
    dend_64 { pt3dadd( -39.9947, 578.43, -59.1758, 0.22 ) }
    dend_64 { pt3dadd( -40.2464, 579.635, -59.2748, 0.81 ) }
    dend_64 { pt3dadd( -40.5015, 580.709, -59.3056, 0.22 ) }
    dend_64 { pt3dadd( -40.5375, 580.841, -59.3072, 0.22 ) }
    dend_64 { pt3dadd( -40.7938, 581.667, -59.2996, 1.18 ) }
    dend_64 { pt3dadd( -40.9357, 582.084, -59.2849, 1.33 ) }
    dend_64 { pt3dadd( -41.7995, 584.183, -59.2008, 0.22 ) }
    dend_64 { pt3dadd( -41.865, 584.316, -59.1931, 0.22 ) }
    dend_64 { pt3dadd( -42.1465, 584.835, -59.1547, 0.22 ) }
    dend_64 { pt3dadd( -42.5535, 585.51, -59.0894, 1.03 ) }
    dend_64 { pt3dadd( -42.8926, 586.019, -59.0334, 1.33 ) }
    dend_64 { pt3dadd( -43.907, 587.418, -58.8786, 0.15 ) }
    dend_64 { pt3dadd( -44.4796, 588.089, -58.7894, 0.15 ) }
    dend_64 { pt3dadd( -44.5278, 588.144, -58.782, 0.15 ) }
    dend_64 { pt3dadd( -45.3111, 588.979, -58.6666, 0.15 ) }
    dend_64 { pt3dadd( -45.3628, 589.029, -58.6588, 0.15 ) }
    dend_64 { pt3dadd( -46.1202, 589.711, -58.5353, 1.03 ) }
    dend_64 { pt3dadd( -46.5725, 590.11, -58.4385, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -12.4773, 515.291, -15.1193, 0.52 ) }
    dend_60 { pt3dadd( -12.231, 516.724, -15.8467, 0.52 ) }
    dend_60 { pt3dadd( -12.1903, 517.037, -15.982, 0.52 ) }
    dend_60 { pt3dadd( -12.1827, 517.09, -16.0033, 0.52 ) }
    dend_60 { pt3dadd( -12.0677, 517.826, -16.2912, 0.37 ) }
    dend_60 { pt3dadd( -12.0581, 517.879, -16.3109, 0.37 ) }
    dend_60 { pt3dadd( -11.8795, 518.64, -16.5813, 0.37 ) }
    dend_60 { pt3dadd( -11.7111, 519.288, -16.7457, 1.03 ) }
    dend_60 { pt3dadd( -11.5521, 519.828, -16.8754, 0.88 ) }
    dend_60 { pt3dadd( -11.533, 519.888, -16.8897, 0.88 ) }
    dend_60 { pt3dadd( -11.3349, 520.498, -17.0304, 0.59 ) }
    dend_60 { pt3dadd( -10.8973, 521.885, -17.4196, 0.22 ) }
    dend_60 { pt3dadd( -10.633, 522.786, -17.6937, 0.22 ) }
    dend_60 { pt3dadd( -10.618, 522.837, -17.7113, 0.22 ) }
    dend_60 { pt3dadd( -10.4112, 523.566, -17.989, 0.88 ) }
    dend_60 { pt3dadd( -10.2836, 524.036, -18.1674, 1.11 ) }
    dend_60 { pt3dadd( -9.90476, 525.528, -18.7089, 0.29 ) }
    dend_60 { pt3dadd( -9.78181, 526.014, -18.8743, 0.22 ) }
    dend_60 { pt3dadd( -9.51978, 526.827, -19.1548, 0.22 ) }
    dend_60 { pt3dadd( -9.50087, 526.879, -19.1713, 0.22 ) }
    dend_60 { pt3dadd( -9.06244, 527.998, -19.4776, 0.22 ) }
    dend_60 { pt3dadd( -8.76515, 528.745, -19.6468, 1.33 ) }
    dend_60 { pt3dadd( -8.62021, 529.097, -19.7076, 1.33 ) }
    dend_60 { pt3dadd( -7.98225, 530.628, -19.986, 0.22 ) }
    dend_60 { pt3dadd( -7.96105, 530.68, -19.9956, 0.22 ) }
    dend_60 { pt3dadd( -7.57884, 531.622, -20.1899, 0.22 ) }
    dend_60 { pt3dadd( -7.31189, 532.272, -20.3536, 0.81 ) }
    dend_60 { pt3dadd( -6.77177, 533.631, -20.7, 0.22 ) }
    dend_60 { pt3dadd( -6.52366, 534.281, -20.847, 0.81 ) }
    dend_60 { pt3dadd( -6.50342, 534.334, -20.8553, 0.81 ) }
    dend_60 { pt3dadd( -6.40506, 534.573, -20.8927, 0.81 ) }
    dend_60 { pt3dadd( -5.94019, 535.561, -21.048, 0.22 ) }
    dend_60 { pt3dadd( -5.5869, 536.267, -21.1397, 1.4 ) }
    dend_60 { pt3dadd( -5.36865, 536.71, -21.1703, 1.77 ) }
    dend_60 { pt3dadd( -5.03033, 537.348, -21.1896, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -12.4773, 515.291, -15.1193, 0.52 ) }
    dend_53 { pt3dadd( -13.1885, 516.424, -14.8987, 0.52 ) }
    dend_53 { pt3dadd( -13.2565, 516.543, -14.883, 0.52 ) }
    dend_53 { pt3dadd( -13.5526, 517.098, -14.8374, 0.81 ) }
    dend_53 { pt3dadd( -13.592, 517.176, -14.8339, 0.81 ) }
    dend_53 { pt3dadd( -13.7634, 517.541, -14.8243, 0.59 ) }
    dend_53 { pt3dadd( -14.4805, 519.14, -14.7712, 0.29 ) }
    dend_53 { pt3dadd( -14.5412, 519.29, -14.771, 0.29 ) }
    dend_53 { pt3dadd( -14.8432, 520.027, -14.7344, 1.03 ) }
    dend_53 { pt3dadd( -15.1436, 520.76, -14.6511, 0.96 ) }
    dend_53 { pt3dadd( -15.4667, 521.53, -14.519, 0.59 ) }
    dend_53 { pt3dadd( -15.7901, 522.294, -14.322, 0.59 ) }
    dend_53 { pt3dadd( -15.8426, 522.412, -14.276, 0.59 ) }
    dend_53 { pt3dadd( -16.1634, 523.203, -13.9124, 0.59 ) }
    dend_53 { pt3dadd( -16.3698, 523.914, -13.5168, 0.29 ) }
    dend_53 { pt3dadd( -16.3801, 523.967, -13.4837, 0.29 ) }
    dend_53 { pt3dadd( -16.444, 524.46, -13.178, 0.29 ) }
    dend_53 { pt3dadd( -16.4538, 524.57, -13.1154, 0.29 ) }
    dend_53 { pt3dadd( -16.534, 525.312, -12.7502, 0.59 ) }
    dend_53 { pt3dadd( -16.699, 526.576, -12.257, 0.22 ) }
    dend_53 { pt3dadd( -16.712, 526.646, -12.2337, 0.22 ) }
    dend_53 { pt3dadd( -16.9628, 527.419, -12.0373, 0.22 ) }
    dend_53 { pt3dadd( -17.0663, 527.651, -11.9964, 0.22 ) }
    dend_53 { pt3dadd( -17.4553, 528.186, -11.9699, 0.22 ) }
    dend_53 { pt3dadd( -17.9713, 528.46, -12.0889, 0.66 ) }
    dend_53 { pt3dadd( -18.11, 528.491, -12.1415, 0.66 ) }
    dend_53 { pt3dadd( -18.885, 528.586, -12.4857, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.0959, 512.198, -19.364, 0.29 ) }
    dend_33 { pt3dadd( -0.460791, 513.564, -19.1194, 0.29 ) }
    dend_33 { pt3dadd( -0.390065, 513.735, -19.0966, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( -3.05172E-4, 514.735, -18.9928, 0.88 ) }
    dend_33 { pt3dadd( 0.321758, 515.606, -18.9175, 1.25 ) }
    dend_33 { pt3dadd( 0.575176, 516.315, -18.8627, 1.25 ) }
    dend_33 { pt3dadd( 0.95854, 517.383, -18.7909, 0.44 ) }
    dend_33 { pt3dadd( 1.36394, 518.588, -18.7426, 0.29 ) }
    dend_33 { pt3dadd( 1.63487, 519.394, -18.7231, 0.88 ) }
    dend_33 { pt3dadd( 1.81063, 519.934, -18.7267, 1.25 ) }
    dend_33 { pt3dadd( 1.83734, 520.016, -18.7304, 1.25 ) }
    dend_33 { pt3dadd( 2.05279, 520.676, -18.7696, 0.96 ) }
    dend_33 { pt3dadd( 2.11442, 520.859, -18.7795, 0.96 ) }
    dend_33 { pt3dadd( 2.37339, 521.601, -18.8232, 0.74 ) }
    dend_33 { pt3dadd( 2.88523, 523.064, -18.9126, 0.29 ) }
    dend_33 { pt3dadd( 3.25864, 524.122, -18.9794, 0.52 ) }
    dend_33 { pt3dadd( 3.34501, 524.376, -18.9952, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.0959, 512.198, -19.364, 0.22 ) }
    dend_32 { pt3dadd( -2.05758, 513.2, -19.0659, 0.22 ) }
    dend_32 { pt3dadd( -2.11389, 513.255, -19.051, 0.22 ) }
    dend_32 { pt3dadd( -2.75945, 513.856, -18.8956, 0.22 ) }
    dend_32 { pt3dadd( -2.81073, 513.903, -18.8833, 0.22 ) }
    dend_32 { pt3dadd( -3.77649, 514.802, -18.6509, 0.22 ) }
    dend_32 { pt3dadd( -3.83384, 514.855, -18.6371, 0.22 ) }
    dend_32 { pt3dadd( -4.68831, 515.744, -18.4939, 0.22 ) }
    dend_32 { pt3dadd( -5.06228, 516.112, -18.4313, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -18.885, 528.586, -12.4857, 0.22 ) }
    dend_55 { pt3dadd( -18.6128, 530.16, -12.6791, 0.22 ) }
    dend_55 { pt3dadd( -18.6057, 530.355, -12.5876, 0.22 ) }
    dend_55 { pt3dadd( -18.7138, 531.205, -12.0043, 0.22 ) }
    dend_55 { pt3dadd( -18.862, 531.654, -11.5764, 0.37 ) }
    dend_55 { pt3dadd( -19.195, 532.431, -10.715, 0.37 ) }
    dend_55 { pt3dadd( -19.227, 532.494, -10.6188, 0.37 ) }
    dend_55 { pt3dadd( -19.861, 533.677, -8.36423, 1.18 ) }
    dend_55 { pt3dadd( -20.1058, 533.999, -7.59008, 1.18 ) }
    dend_55 { pt3dadd( -20.5472, 534.426, -6.29076, 0.96 ) }
    dend_55 { pt3dadd( -20.6641, 534.502, -5.99722, 0.96 ) }
    dend_55 { pt3dadd( -21.9117, 535.096, -3.25152, 0.52 ) }
    dend_55 { pt3dadd( -21.9768, 535.122, -3.11949, 0.52 ) }
    dend_55 { pt3dadd( -22.4006, 535.295, -2.31136, 0.52 ) }
    dend_55 { pt3dadd( -22.498, 535.336, -2.11332, 0.52 ) }
    dend_55 { pt3dadd( -23.0832, 535.563, -0.991994, 0.74 ) }
    dend_55 { pt3dadd( -23.5671, 535.74, -0.190871, 0.88 ) }
    dend_55 { pt3dadd( -23.6278, 535.757, -0.125514, 0.88 ) }
    dend_55 { pt3dadd( -24.5631, 536.095, 0.91719, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -18.885, 528.586, -12.4857, 0.22 ) }
    dend_54 { pt3dadd( -19.9601, 527.786, -12.5836, 0.22 ) }
    dend_54 { pt3dadd( -20.0624, 527.709, -12.593, 0.22 ) }
    dend_54 { pt3dadd( -21.3526, 526.749, -12.7106, 0.22 ) }
    dend_54 { pt3dadd( -21.4342, 526.688, -12.718, 0.22 ) }
    dend_54 { pt3dadd( -22.2511, 526.08, -12.7924, 0.66 ) }
    dend_54 { pt3dadd( -22.6477, 525.785, -12.8286, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 3.34501, 524.376, -18.9952, 0.15 ) }
    dend_51 { pt3dadd( 4.06732, 524.291, -19.0988, 0.15 ) }
    dend_51 { pt3dadd( 4.49566, 524.134, -19.1867, 0.44 ) }
    dend_51 { pt3dadd( 4.53217, 524.116, -19.1962, 0.44 ) }
    dend_51 { pt3dadd( 4.90316, 523.905, -19.322, 0.15 ) }
    dend_51 { pt3dadd( 5.18676, 523.741, -19.4255, 0.96 ) }
    dend_51 { pt3dadd( 5.49696, 523.567, -19.5379, 0.96 ) }
    dend_51 { pt3dadd( 6.08725, 523.194, -19.7732, 0.22 ) }
    dend_51 { pt3dadd( 6.17695, 523.138, -19.8107, 0.22 ) }
    dend_51 { pt3dadd( 6.656, 522.856, -20.0141, 0.52 ) }
    dend_51 { pt3dadd( 6.99161, 522.67, -20.1577, 0.52 ) }
    dend_51 { pt3dadd( 7.4054, 522.476, -20.331, 0.59 ) }
    dend_51 { pt3dadd( 7.51545, 522.438, -20.3809, 0.59 ) }
    dend_51 { pt3dadd( 8.02319, 522.331, -20.6095, 0.15 ) }
    dend_51 { pt3dadd( 8.06044, 522.324, -20.6263, 0.15 ) }
    dend_51 { pt3dadd( 8.25668, 522.288, -20.76, 0.15 ) }
    dend_51 { pt3dadd( 8.33064, 522.272, -20.8254, 0.15 ) }
    dend_51 { pt3dadd( 8.76443, 522.191, -21.2671, 0.88 ) }
    dend_51 { pt3dadd( 8.95787, 522.157, -21.4762, 1.18 ) }
    dend_51 { pt3dadd( 9.19173, 522.131, -21.7569, 1.18 ) }
    dend_51 { pt3dadd( 9.95085, 522.077, -22.7065, 0.22 ) }
    dend_51 { pt3dadd( 9.98044, 522.074, -22.7431, 0.22 ) }
    dend_51 { pt3dadd( 10.1359, 522.056, -22.9251, 0.37 ) }
    dend_51 { pt3dadd( 10.1681, 522.053, -22.9607, 0.37 ) }
    dend_51 { pt3dadd( 10.6385, 522.016, -23.4842, 0.22 ) }
    dend_51 { pt3dadd( 10.6635, 522.013, -23.5094, 0.22 ) }
    dend_51 { pt3dadd( 11.0221, 521.995, -23.794, 0.22 ) }
    dend_51 { pt3dadd( 11.2119, 521.98, -23.9452, 0.74 ) }
    dend_51 { pt3dadd( 11.4146, 521.955, -24.106, 1.03 ) }
    dend_51 { pt3dadd( 11.4574, 521.949, -24.1387, 1.03 ) }
    dend_51 { pt3dadd( 12.2877, 521.807, -24.7168, 0.37 ) }
    dend_51 { pt3dadd( 12.745, 521.741, -25.0562, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 3.34501, 524.376, -18.9952, 0.29 ) }
    dend_34 { pt3dadd( 3.83488, 526.197, -19.0896, 0.29 ) }
    dend_34 { pt3dadd( 4.18558, 527.32, -19.1522, 0.29 ) }
    dend_34 { pt3dadd( 4.21852, 527.415, -19.1577, 0.29 ) }
    dend_34 { pt3dadd( 4.65841, 528.681, -19.2304, 0.15 ) }
    dend_34 { pt3dadd( 5.11869, 530.006, -19.3065, 1.18 ) }
    dend_34 { pt3dadd( 5.379, 530.755, -19.3495, 1.77 ) }
    dend_34 { pt3dadd( 5.80739, 531.791, -19.423, 1.18 ) }
    dend_34 { pt3dadd( 6.1277, 532.49, -19.4782, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -24.5631, 536.095, 0.91719, 0.59 ) }
    dend_57 { pt3dadd( -24.6438, 536.888, 1.11943, 0.59 ) }
    dend_57 { pt3dadd( -24.651, 536.955, 1.13242, 0.59 ) }
    dend_57 { pt3dadd( -24.699, 537.448, 1.2009, 0.59 ) }
    dend_57 { pt3dadd( -24.7025, 537.527, 1.20897, 0.59 ) }
    dend_57 { pt3dadd( -24.6879, 537.848, 1.22516, 0.59 ) }
    dend_57 { pt3dadd( -24.6637, 538.037, 1.31201, 0.59 ) }
    dend_57 { pt3dadd( -24.6326, 538.216, 1.57024, 0.29 ) }
    dend_57 { pt3dadd( -24.6093, 538.438, 1.92222, 0.22 ) }
    dend_57 { pt3dadd( -24.6133, 538.732, 2.3952, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( -24.6512, 539.014, 2.84182, 0.74 ) }
    dend_57 { pt3dadd( -24.936, 540.332, 4.95214, 0.74 ) }
    dend_57 { pt3dadd( -25.349, 541.752, 7.20988, 0.88 ) }
    dend_57 { pt3dadd( -25.542, 542.274, 8.04635, 0.22 ) }
    dend_57 { pt3dadd( -25.7517, 542.775, 8.82798, 0.22 ) }
    dend_57 { pt3dadd( -25.931, 543.16, 9.36404, 0.22 ) }
    dend_57 { pt3dadd( -25.956, 543.21, 9.41943, 0.22 ) }
    dend_57 { pt3dadd( -26.1248, 543.552, 9.58535, 0.22 ) }
    dend_57 { pt3dadd( -26.1553, 543.623, 9.59903, 0.22 ) }
    dend_57 { pt3dadd( -26.3793, 544.318, 9.78037, 0.22 ) }
    dend_57 { pt3dadd( -26.6329, 545.28, 10.0642, 0.81 ) }
    dend_57 { pt3dadd( -26.6506, 545.334, 10.0795, 0.81 ) }
    dend_57 { pt3dadd( -26.9205, 545.943, 10.2238, 0.96 ) }
    dend_57 { pt3dadd( -26.9669, 546.036, 10.2418, 0.96 ) }
    dend_57 { pt3dadd( -27.2003, 546.486, 10.3081, 0.96 ) }
    dend_57 { pt3dadd( -27.5549, 547.163, 10.3755, 0.44 ) }
    dend_57 { pt3dadd( -27.8124, 547.72, 10.4086, 0.44 ) }
    dend_57 { pt3dadd( -28.1779, 548.607, 10.4536, 0.22 ) }
    dend_57 { pt3dadd( -28.5003, 549.497, 10.5012, 0.37 ) }
    dend_57 { pt3dadd( -28.7907, 550.375, 10.5625, 0.37 ) }
    dend_57 { pt3dadd( -29.0167, 551.134, 10.6437, 0.37 ) }
    dend_57 { pt3dadd( -29.2645, 552.033, 10.7991, 0.22 ) }
    dend_57 { pt3dadd( -29.2812, 552.098, 10.8148, 0.22 ) }
    dend_57 { pt3dadd( -29.426, 552.532, 11.0098, 0.22 ) }
    dend_57 { pt3dadd( -29.4695, 552.619, 11.0875, 0.22 ) }
    dend_57 { pt3dadd( -29.8535, 553.176, 11.9215, 0.15 ) }
    dend_57 { pt3dadd( -30.0492, 553.478, 12.4304, 0.44 ) }
    dend_57 { pt3dadd( -30.066, 553.507, 12.4764, 0.44 ) }
    dend_57 { pt3dadd( -30.5013, 554.403, 13.6488, 0.88 ) }
    dend_57 { pt3dadd( -30.7878, 555.118, 14.4029, 0.88 ) }
    dend_57 { pt3dadd( -30.8501, 555.343, 14.5974, 0.88 ) }
    dend_57 { pt3dadd( -31.0406, 556.429, 15.3763, 0.37 ) }
    dend_57 { pt3dadd( -31.0932, 557.087, 15.7394, 0.22 ) }
    dend_57 { pt3dadd( -31.1109, 557.823, 16.0712, 0.22 ) }
    dend_57 { pt3dadd( -31.0727, 558.234, 16.2136, 0.59 ) }
    dend_57 { pt3dadd( -30.9078, 559.34, 16.5831, 0.44 ) }
    dend_57 { pt3dadd( -30.8866, 559.42, 16.6172, 0.44 ) }
    dend_57 { pt3dadd( -30.5446, 560.14, 17.0824, 0.29 ) }
    dend_57 { pt3dadd( -30.4892, 560.201, 17.1348, 0.29 ) }
    dend_57 { pt3dadd( -29.7303, 560.586, 17.5838, 0.29 ) }
    dend_57 { pt3dadd( -29.6826, 560.601, 17.6094, 0.29 ) }
    dend_57 { pt3dadd( -28.9539, 560.891, 18.0343, 0.81 ) }
    dend_57 { pt3dadd( -28.8776, 560.935, 18.0854, 0.81 ) }
    dend_57 { pt3dadd( -28.4518, 561.317, 18.436, 0.81 ) }
    dend_57 { pt3dadd( -27.8652, 562.102, 19.0141, 0.29 ) }
    dend_57 { pt3dadd( -27.3153, 563.118, 19.6604, 0.29 ) }
    dend_57 { pt3dadd( -26.6898, 564.551, 20.4291, 0.52 ) }
    dend_57 { pt3dadd( -26.3845, 565.449, 20.8362, 1.33 ) }
    dend_57 { pt3dadd( -26.0561, 566.601, 21.3282, 0.22 ) }
    dend_57 { pt3dadd( -25.9312, 567.214, 21.5652, 0.74 ) }
    dend_57 { pt3dadd( -25.9124, 567.365, 21.6143, 0.74 ) }
    dend_57 { pt3dadd( -25.8111, 568.238, 21.7852, 0.37 ) }
    dend_57 { pt3dadd( -25.7202, 568.742, 21.8337, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -24.5631, 536.095, 0.91719, 0.22 ) }
    dend_56 { pt3dadd( -25.6423, 536.745, 0.670005, 0.22 ) }
    dend_56 { pt3dadd( -26.3359, 537.153, 0.505479, 0.15 ) }
    dend_56 { pt3dadd( -27.2364, 537.671, 0.264853, 0.15 ) }
    dend_56 { pt3dadd( -28.3196, 538.294, -0.0245972, 0.52 ) }
    dend_56 { pt3dadd( -28.793, 538.566, -0.151096, 0.52 ) }
    dend_56 { pt3dadd( -29.4543, 538.947, -0.327808, 0.52 ) }
    dend_56 { pt3dadd( -29.6486, 539.054, -0.377146, 0.52 ) }
    dend_56 { pt3dadd( -30.7666, 539.647, -0.649025, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.1277, 532.49, -19.4782, 0.22 ) }
    dend_50 { pt3dadd( 7.39036, 530.756, -20.2887, 0.22 ) }
    dend_50 { pt3dadd( 7.75606, 530.182, -20.5207, 0.29 ) }
    dend_50 { pt3dadd( 8.4121, 528.995, -20.9414, 0.22 ) }
    dend_50 { pt3dadd( 8.94793, 528.025, -21.2851, 0.44 ) }
    dend_50 { pt3dadd( 9.46531, 527.089, -21.6169, 0.22 ) }
    dend_50 { pt3dadd( 9.50259, 527.021, -21.6408, 0.22 ) }
    dend_50 { pt3dadd( 9.66669, 526.57, -21.6928, 0.44 ) }
    dend_50 { pt3dadd( 9.78091, 526.094, -21.73, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.1277, 532.49, -19.4782, 0.29 ) }
    dend_35 { pt3dadd( 6.22206, 532.927, -19.4508, 0.29 ) }
    dend_35 { pt3dadd( 6.499, 533.933, -19.3162, 0.29 ) }
    dend_35 { pt3dadd( 6.81734, 534.962, -19.142, 0.29 ) }
    dend_35 { pt3dadd( 6.8498, 535.056, -19.125, 0.29 ) }
    dend_35 { pt3dadd( 7.22994, 535.985, -18.9486, 0.29 ) }
    dend_35 { pt3dadd( 7.30945, 536.158, -18.9147, 0.81 ) }
    dend_35 { pt3dadd( 7.74662, 537.002, -18.746, 0.66 ) }
    dend_35 { pt3dadd( 7.76944, 537.041, -18.7389, 0.66 ) }
    dend_35 { pt3dadd( 8.0656, 537.506, -18.6532, 0.52 ) }
    dend_35 { pt3dadd( 8.82897, 538.716, -18.4631, 0.29 ) }
    dend_35 { pt3dadd( 9.31663, 539.498, -18.3173, 0.29 ) }
    dend_35 { pt3dadd( 9.56175, 539.927, -18.2416, 1.33 ) }
    dend_35 { pt3dadd( 9.84305, 540.461, -18.1587, 1.55 ) }
    dend_35 { pt3dadd( 9.87131, 540.519, -18.1494, 1.55 ) }
    dend_35 { pt3dadd( 10.1828, 541.189, -18.0052, 1.25 ) }
    dend_35 { pt3dadd( 10.7975, 542.586, -17.6778, 0.37 ) }
    dend_35 { pt3dadd( 11.151, 543.417, -17.466, 0.29 ) }
    dend_35 { pt3dadd( 11.1747, 543.474, -17.4501, 0.29 ) }
    dend_35 { pt3dadd( 11.5488, 544.374, -17.1763, 0.29 ) }
    dend_35 { pt3dadd( 12.2167, 545.975, -16.6758, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -25.7202, 568.742, 21.8337, 0.44 ) }
    dend_59 { pt3dadd( -25.4997, 567.277, 21.5941, 0.44 ) }
    dend_59 { pt3dadd( -25.3036, 565.974, 21.3809, 0.37 ) }
    dend_59 { pt3dadd( -25.1674, 565.069, 21.2329, 0.22 ) }
    dend_59 { pt3dadd( -25.1557, 564.991, 21.2202, 0.22 ) }
    dend_59 { pt3dadd( -24.9353, 563.527, 20.9806, 0.22 ) }
    dend_59 { pt3dadd( -24.9235, 563.449, 20.9679, 0.22 ) }
    dend_59 { pt3dadd( -22.8478, 552.339, 21.1375, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -25.7202, 568.742, 21.8337, 0.74 ) }
    dend_58 { pt3dadd( -25.8146, 569.051, 21.8547, 0.74 ) }
    dend_58 { pt3dadd( -25.8982, 569.478, 21.866, 0.22 ) }
    dend_58 { pt3dadd( -25.9051, 569.513, 21.8663, 0.22 ) }
    dend_58 { pt3dadd( -25.9695, 569.874, 21.8777, 0.22 ) }
    dend_58 { pt3dadd( -25.9883, 569.987, 21.8828, 0.22 ) }
    dend_58 { pt3dadd( -26.0421, 570.347, 21.9046, 0.22 ) }
    dend_58 { pt3dadd( -26.1045, 570.825, 21.9444, 1.4 ) }
    dend_58 { pt3dadd( -26.1546, 571.464, 22.0176, 0.29 ) }
    dend_58 { pt3dadd( -26.1692, 571.881, 22.0853, 0.29 ) }
    dend_58 { pt3dadd( -26.1689, 571.93, 22.0952, 0.29 ) }
    dend_58 { pt3dadd( -26.1613, 572.396, 22.2134, 0.29 ) }
    dend_58 { pt3dadd( -26.1602, 572.429, 22.2238, 0.29 ) }
    dend_58 { pt3dadd( -26.1278, 572.965, 22.4422, 0.81 ) }
    dend_58 { pt3dadd( -26.0902, 573.282, 22.5933, 1.11 ) }
    dend_58 { pt3dadd( -26.0863, 573.313, 22.6079, 1.11 ) }
    dend_58 { pt3dadd( -26.0468, 573.707, 22.787, 1.11 ) }
    dend_58 { pt3dadd( -26.043, 573.76, 22.811, 1.11 ) }
    dend_58 { pt3dadd( -26.046, 574.02, 22.9157, 1.11 ) }
    dend_58 { pt3dadd( -26.048, 574.047, 22.927, 1.11 ) }
    dend_58 { pt3dadd( -26.0796, 574.391, 23.0648, 0.22 ) }
    dend_58 { pt3dadd( -26.1154, 574.752, 23.2125, 0.29 ) }
    dend_58 { pt3dadd( -26.1191, 574.784, 23.2258, 0.29 ) }
    dend_58 { pt3dadd( -26.1658, 575.123, 23.3637, 0.22 ) }
    dend_58 { pt3dadd( -26.267, 575.698, 23.5948, 0.81 ) }
    dend_58 { pt3dadd( -27.0182, 580.386, 24.8739, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 12.2167, 545.975, -16.6758, 1.84 ) }
    dend_37 { pt3dadd( 13.1297, 546.697, -17.195, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 12.2167, 545.975, -16.6758, 0.22 ) }
    dend_36 { pt3dadd( 12.1209, 548.193, -17.0653, 0.22 ) }
    dend_36 { pt3dadd( 12.0943, 549.388, -17.2437, 0.22 ) }
    dend_36 { pt3dadd( 12.0933, 549.458, -17.253, 0.22 ) }
    dend_36 { pt3dadd( 12.0804, 550.878, -17.415, 0.59 ) }
    dend_36 { pt3dadd( 12.076, 552.33, -17.5661, 0.22 ) }
    dend_36 { pt3dadd( 12.0831, 553.425, -17.6692, 0.66 ) }
    dend_36 { pt3dadd( 12.0933, 553.509, -17.6658, 0.66 ) }
    dend_36 { pt3dadd( 12.1405, 553.764, -17.6445, 0.66 ) }
    dend_36 { pt3dadd( 12.3626, 554.765, -17.5219, 0.15 ) }
    dend_36 { pt3dadd( 12.383, 554.843, -17.5079, 0.15 ) }
    dend_36 { pt3dadd( 12.5835, 555.525, -17.3491, 1.18 ) }
    dend_36 { pt3dadd( 13.1544, 557.118, -16.9172, 0.29 ) }
    dend_36 { pt3dadd( 13.3461, 557.61, -16.7736, 0.52 ) }
    dend_36 { pt3dadd( 13.3776, 557.681, -16.7501, 0.52 ) }
    dend_36 { pt3dadd( 13.5321, 557.974, -16.6333, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 13.1297, 546.697, -17.195, 0.15 ) }
    dend_39 { pt3dadd( 13.6368, 548.088, -17.0308, 0.15 ) }
    dend_39 { pt3dadd( 13.8707, 548.775, -16.9631, 0.15 ) }
    dend_39 { pt3dadd( 14.0305, 549.245, -16.9168, 0.29 ) }
    dend_39 { pt3dadd( 14.087, 549.411, -16.9005, 0.29 ) }
    dend_39 { pt3dadd( 14.2298, 549.831, -16.8591, 0.15 ) }
    dend_39 { pt3dadd( 14.3418, 550.16, -16.8267, 0.29 ) }
    dend_39 { pt3dadd( 14.3533, 550.245, -16.8311, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 13.1297, 546.697, -17.195, 0.29 ) }
    dend_38 { pt3dadd( 13.7851, 545.568, -16.8338, 0.29 ) }
    dend_38 { pt3dadd( 13.9932, 545.19, -16.6997, 0.29 ) }
    dend_38 { pt3dadd( 14.3261, 544.551, -16.4693, 0.22 ) }
    dend_38 { pt3dadd( 14.4464, 544.334, -16.3929, 0.52 ) }
    dend_38 { pt3dadd( 14.9326, 543.469, -16.0902, 0.22 ) }
    dend_38 { pt3dadd( 14.9537, 543.429, -16.0758, 0.22 ) }
    dend_38 { pt3dadd( 15.0934, 543.13, -15.9622, 0.88 ) }
    dend_38 { pt3dadd( 15.1913, 542.942, -15.8732, 1.03 ) }
    dend_38 { pt3dadd( 15.6943, 541.958, -15.31, 0.22 ) }
    dend_38 { pt3dadd( 15.7162, 541.906, -15.2794, 0.22 ) }
    dend_38 { pt3dadd( 16.0773, 540.96, -14.6979, 0.22 ) }
    dend_38 { pt3dadd( 16.091, 540.922, -14.6735, 0.22 ) }
    dend_38 { pt3dadd( 16.4284, 540.079, -14.1222, 0.22 ) }
    dend_38 { pt3dadd( 16.6555, 539.535, -13.7576, 0.22 ) }
    dend_38 { pt3dadd( 16.9495, 538.902, -13.2851, 0.22 ) }
    dend_38 { pt3dadd( 17.3957, 538.133, -12.6933, 0.29 ) }
    dend_38 { pt3dadd( 17.4367, 538.08, -12.6539, 0.29 ) }
    dend_38 { pt3dadd( 18.207, 537.264, -12.152, 0.15 ) }
    dend_38 { pt3dadd( 18.2399, 537.235, -12.1375, 0.15 ) }
    dend_38 { pt3dadd( 19.194, 536.527, -11.879, 0.96 ) }
    dend_38 { pt3dadd( 19.4816, 536.338, -11.8285, 0.96 ) }
    dend_38 { pt3dadd( 20.4756, 535.684, -11.711, 0.22 ) }
    dend_38 { pt3dadd( 21.2827, 535.157, -11.6337, 0.22 ) }
    dend_38 { pt3dadd( 21.3221, 535.133, -11.6314, 0.22 ) }
    dend_38 { pt3dadd( 22.0824, 534.648, -11.6241, 0.22 ) }
    dend_38 { pt3dadd( 23.2358, 533.902, -11.723, 0.22 ) }
    dend_38 { pt3dadd( 23.739, 533.567, -11.7561, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.3533, 550.245, -16.8311, 0.37 ) }
    dend_41 { pt3dadd( 14.6645, 551.563, -16.6579, 0.37 ) }
    dend_41 { pt3dadd( 14.6806, 551.638, -16.6517, 0.37 ) }
    dend_41 { pt3dadd( 14.7614, 552.091, -16.6267, 0.22 ) }
    dend_41 { pt3dadd( 14.9009, 553.091, -16.6145, 0.22 ) }
    dend_41 { pt3dadd( 14.9556, 553.621, -16.6166, 0.66 ) }
    dend_41 { pt3dadd( 14.9646, 553.708, -16.617, 0.66 ) }
    dend_41 { pt3dadd( 15.03, 554.628, -16.6787, 0.52 ) }
    dend_41 { pt3dadd( 15.0774, 555.421, -16.7322, 0.52 ) }
    dend_41 { pt3dadd( 15.1106, 556.373, -16.7957, 1.33 ) }
    dend_41 { pt3dadd( 15.1146, 557.167, -16.8512, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 14.3533, 550.245, -16.8311, 0.29 ) }
    dend_40 { pt3dadd( 15.5862, 550.278, -16.6682, 0.29 ) }
    dend_40 { pt3dadd( 15.6525, 550.285, -16.6614, 0.29 ) }
    dend_40 { pt3dadd( 17.5786, 550.593, -16.4822, 0.66 ) }
    dend_40 { pt3dadd( 18.8216, 550.822, -16.3662, 0.15 ) }
    dend_40 { pt3dadd( 19.4658, 550.945, -16.3108, 0.88 ) }
    dend_40 { pt3dadd( 20.1558, 551.066, -16.2793, 0.88 ) }
    dend_40 { pt3dadd( 21.2039, 551.257, -16.2451, 0.22 ) }
    dend_40 { pt3dadd( 21.2699, 551.269, -16.2476, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( 22.0945, 551.413, -16.3814, 0.81 ) }
    dend_40 { pt3dadd( 22.4428, 551.516, -16.4521, 0.81 ) }
    dend_40 { pt3dadd( 23.5742, 551.911, -16.6979, 0.22 ) }
    dend_40 { pt3dadd( 23.8815, 552.014, -16.7722, 0.96 ) }
    dend_40 { pt3dadd( 23.9538, 552.039, -16.7923, 0.96 ) }
    dend_40 { pt3dadd( 24.5436, 552.273, -16.9862, 0.52 ) }
    dend_40 { pt3dadd( 25.5491, 552.65, -17.2757, 0.22 ) }
    dend_40 { pt3dadd( 25.6541, 552.687, -17.2979, 0.22 ) }
    dend_40 { pt3dadd( 25.9877, 552.788, -17.3399, 0.22 ) }
    dend_40 { pt3dadd( 26.0901, 552.812, -17.3508, 0.22 ) }
    dend_40 { pt3dadd( 27.0665, 552.986, -17.444, 0.66 ) }
    dend_40 { pt3dadd( 28.4746, 553.183, -17.5691, 0.15 ) }
    dend_40 { pt3dadd( 28.5411, 553.189, -17.575, 0.15 ) }
    dend_40 { pt3dadd( 29.4389, 553.257, -17.6931, 0.15 ) }
    dend_40 { pt3dadd( 30.0928, 553.298, -17.7702, 0.74 ) }
    dend_40 { pt3dadd( 30.2813, 553.312, -17.7922, 0.74 ) }
    dend_40 { pt3dadd( 30.8341, 553.361, -17.8575, 0.74 ) }
    dend_40 { pt3dadd( 30.9111, 553.368, -17.8697, 0.74 ) }
    dend_40 { pt3dadd( 32.0994, 553.444, -18.0565, 0.22 ) }
    dend_40 { pt3dadd( 33.7904, 553.492, -18.3041, 0.66 ) }
    dend_40 { pt3dadd( 34.2099, 553.492, -18.3584, 0.66 ) }
    dend_40 { pt3dadd( 34.2993, 553.49, -18.3689, 0.66 ) }
    dend_40 { pt3dadd( 35.0245, 553.455, -18.4386, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 15.1146, 557.167, -16.8512, 0.44 ) }
    dend_43 { pt3dadd( 15.2526, 558.206, -16.3996, 0.44 ) }
    dend_43 { pt3dadd( 15.4197, 558.931, -16.0838, 0.29 ) }
    dend_43 { pt3dadd( 15.6172, 559.643, -15.7776, 0.29 ) }
    dend_43 { pt3dadd( 15.9641, 560.763, -15.3209, 0.81 ) }
    dend_43 { pt3dadd( 16.0973, 561.159, -15.1705, 1.18 ) }
    dend_43 { pt3dadd( 16.1635, 561.348, -15.1026, 1.18 ) }
    dend_43 { pt3dadd( 16.6262, 562.398, -14.7969, 0.15 ) }
    dend_43 { pt3dadd( 16.6876, 562.51, -14.769, 0.15 ) }
    dend_43 { pt3dadd( 16.8999, 562.841, -14.7116, 0.66 ) }
    dend_43 { pt3dadd( 17.082, 563.14, -14.7016, 0.96 ) }
    dend_43 { pt3dadd( 17.1096, 563.192, -14.6975, 0.96 ) }
    dend_43 { pt3dadd( 17.1868, 563.37, -14.6627, 0.96 ) }
    dend_43 { pt3dadd( 17.4617, 563.981, -14.4618, 0.29 ) }
    dend_43 { pt3dadd( 17.5145, 564.089, -14.419, 0.29 ) }
    dend_43 { pt3dadd( 17.7559, 564.546, -14.2162, 0.29 ) }
    dend_43 { pt3dadd( 18.1974, 565.358, -13.8403, 0.37 ) }
    dend_43 { pt3dadd( 18.5488, 566.004, -13.5363, 0.52 ) }
    dend_43 { pt3dadd( 19.0858, 566.985, -13.0601, 0.96 ) }
    dend_43 { pt3dadd( 19.116, 567.04, -13.0348, 0.96 ) }
    dend_43 { pt3dadd( 19.4252, 567.584, -12.814, 1.18 ) }
    dend_43 { pt3dadd( 19.5221, 567.754, -12.7612, 1.18 ) }
    dend_43 { pt3dadd( 19.6631, 568.048, -12.73, 1.18 ) }
    dend_43 { pt3dadd( 19.696, 568.131, -12.7311, 1.18 ) }
    dend_43 { pt3dadd( 19.9325, 568.899, -12.7703, 1.33 ) }
    dend_43 { pt3dadd( 19.9518, 568.965, -12.7744, 1.33 ) }
    dend_43 { pt3dadd( 20.0877, 569.455, -12.8121, 1.25 ) }
    dend_43 { pt3dadd( 20.4551, 570.802, -12.9248, 0.22 ) }
    dend_43 { pt3dadd( 20.6596, 571.62, -12.992, 0.22 ) }
    dend_43 { pt3dadd( 20.7519, 572.053, -13.0213, 0.59 ) }
    dend_43 { pt3dadd( 20.7706, 572.147, -13.0273, 0.59 ) }
    dend_43 { pt3dadd( 20.8183, 572.397, -13.0426, 0.59 ) }
    dend_43 { pt3dadd( 20.9426, 573.138, -13.0834, 0.22 ) }
    dend_43 { pt3dadd( 20.9871, 573.707, -13.1007, 0.96 ) }
    dend_43 { pt3dadd( 21.0062, 574.397, -13.1006, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.1146, 557.167, -16.8512, 0.15 ) }
    dend_42 { pt3dadd( 15.6475, 559.964, -17.6521, 0.15 ) }
    dend_42 { pt3dadd( 15.6622, 560.077, -17.6768, 0.15 ) }
    dend_42 { pt3dadd( 15.7429, 560.652, -17.7938, 0.15 ) }
    dend_42 { pt3dadd( 15.7538, 560.744, -17.81, 0.15 ) }
    dend_42 { pt3dadd( 15.8053, 561.362, -17.9131, 0.59 ) }
    dend_42 { pt3dadd( 15.8319, 561.765, -17.9748, 0.59 ) }
    dend_42 { pt3dadd( 15.9177, 564.273, -18.269, 0.22 ) }
    dend_42 { pt3dadd( 15.933, 565.268, -18.3753, 1.25 ) }
    dend_42 { pt3dadd( 15.9483, 565.973, -18.439, 0.88 ) }
    dend_42 { pt3dadd( 15.9923, 567.807, -18.5743, 0.15 ) }
    dend_42 { pt3dadd( 16.0071, 568.581, -18.6148, 0.15 ) }
    dend_42 { pt3dadd( 16.0112, 569.435, -18.6392, 0.74 ) }
    dend_42 { pt3dadd( 16.0066, 570.013, -18.6374, 1.11 ) }
    dend_42 { pt3dadd( 15.9719, 571.324, -18.6189, 0.15 ) }
    dend_42 { pt3dadd( 15.9573, 572.009, -18.606, 0.96 ) }
    dend_42 { pt3dadd( 15.9316, 572.84, -18.5742, 1.18 ) }
    dend_42 { pt3dadd( 15.816, 575.187, -18.4878, 0.15 ) }
    dend_42 { pt3dadd( 15.809, 575.292, -18.4836, 0.15 ) }
    dend_42 { pt3dadd( 15.7093, 576.381, -18.4468, 0.15 ) }
    dend_42 { pt3dadd( 15.6996, 576.46, -18.4448, 0.15 ) }
    dend_42 { pt3dadd( 15.6338, 577.128, -18.4294, 0.52 ) }
    dend_42 { pt3dadd( 15.6208, 577.288, -18.4239, 0.52 ) }
    dend_42 { pt3dadd( 15.5955, 577.63, -18.4138, 0.52 ) }
    dend_42 { pt3dadd( 15.5916, 577.698, -18.4132, 0.52 ) }
    dend_42 { pt3dadd( 15.5473, 578.828, -18.4139, 0.22 ) }
    dend_42 { pt3dadd( 15.5167, 579.648, -18.4184, 1.11 ) }
    dend_42 { pt3dadd( 15.5023, 580.415, -18.4058, 0.81 ) }
    dend_42 { pt3dadd( 15.4851, 582.435, -18.3428, 0.15 ) }
    dend_42 { pt3dadd( 15.4855, 584.579, -18.2467, 0.15 ) }
    dend_42 { pt3dadd( 15.5029, 585.299, -18.1985, 1.03 ) }
    dend_42 { pt3dadd( 15.5436, 586.104, -18.1157, 0.81 ) }
    dend_42 { pt3dadd( 15.6892, 587.836, -17.8665, 0.22 ) }
    dend_42 { pt3dadd( 15.697, 587.903, -17.8538, 0.22 ) }
    dend_42 { pt3dadd( 15.883, 589.004, -17.5548, 0.52 ) }
    dend_42 { pt3dadd( 16.0903, 590.042, -17.2101, 0.22 ) }
    dend_42 { pt3dadd( 16.2801, 590.971, -16.8898, 0.74 ) }
    dend_42 { pt3dadd( 16.3894, 591.497, -16.7068, 0.74 ) }
    dend_42 { pt3dadd( 16.404, 591.571, -16.6814, 0.74 ) }
    dend_42 { pt3dadd( 16.7049, 593.101, -16.1897, 0.22 ) }
    dend_42 { pt3dadd( 16.7175, 593.165, -16.1706, 0.22 ) }
    dend_42 { pt3dadd( 16.9364, 594.369, -15.9003, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( 17.014, 594.786, -15.8302, 0.66 ) }
    dend_42 { pt3dadd( 17.0272, 594.852, -15.8222, 0.66 ) }
    dend_42 { pt3dadd( 17.1972, 595.603, -15.7797, 0.22 ) }
    dend_42 { pt3dadd( 17.584, 596.814, -15.7459, 1.4 ) }
    dend_42 { pt3dadd( 18.1068, 598.229, -15.7283, 0.15 ) }
    dend_42 { pt3dadd( 18.1723, 598.388, -15.7291, 0.15 ) }
    dend_42 { pt3dadd( 18.5295, 599.2, -15.7314, 0.15 ) }
    dend_42 { pt3dadd( 19.0882, 600.437, -15.7344, 0.15 ) }
    dend_42 { pt3dadd( 20.1034, 602.607, -15.7388, 0.15 ) }
    dend_42 { pt3dadd( 20.6817, 603.744, -15.7308, 1.33 ) }
    dend_42 { pt3dadd( 20.9363, 604.204, -15.7014, 1.47 ) }
    dend_42 { pt3dadd( 21.8663, 605.95, -15.6175, 0.22 ) }
    dend_42 { pt3dadd( 21.9683, 606.151, -15.6096, 0.44 ) }
    dend_42 { pt3dadd( 21.9951, 606.213, -15.6105, 0.44 ) }
    dend_42 { pt3dadd( 22.2685, 607.254, -15.8229, 0.22 ) }
    dend_42 { pt3dadd( 22.666, 608.59, -15.9452, 0.88 ) }
    dend_42 { pt3dadd( 23.2932, 610.667, -15.8884, 0.59 ) }
    dend_42 { pt3dadd( 23.4355, 611.053, -15.8402, 0.37 ) }
    dend_42 { pt3dadd( 23.8768, 612.079, -15.6496, 0.15 ) }
    dend_42 { pt3dadd( 24.5672, 613.547, -15.3146, 1.62 ) }
    dend_42 { pt3dadd( 26.2843, 616.853, -14.4691, 0.88 ) }
    dend_42 { pt3dadd( 26.6803, 617.531, -14.2646, 1.25 ) }
    dend_42 { pt3dadd( 27.4733, 618.74, -13.8111, 0.15 ) }
    dend_42 { pt3dadd( 27.7573, 619.149, -13.6521, 0.66 ) }
    dend_42 { pt3dadd( 27.8092, 619.22, -13.6267, 0.66 ) }
    dend_42 { pt3dadd( 28.6817, 620.46, -13.3206, 0.22 ) }
    dend_42 { pt3dadd( 29.0453, 621.119, -13.3064, 0.88 ) }
    dend_42 { pt3dadd( 29.1825, 621.388, -13.3046, 0.88 ) }
    dend_42 { pt3dadd( 29.2251, 621.483, -13.3031, 0.88 ) }
    dend_42 { pt3dadd( 30.0018, 623.324, -13.2495, 0.22 ) }
    dend_42 { pt3dadd( 30.269, 623.985, -13.2305, 0.66 ) }
    dend_42 { pt3dadd( 30.8989, 625.689, -13.1758, 0.15 ) }
    dend_42 { pt3dadd( 31.197, 626.539, -13.1489, 0.15 ) }
    dend_42 { pt3dadd( 31.219, 626.607, -13.1465, 0.15 ) }
    dend_42 { pt3dadd( 31.3752, 627.171, -13.122, 0.44 ) }
    dend_42 { pt3dadd( 31.5183, 627.914, -13.083, 0.22 ) }
    dend_42 { pt3dadd( 31.5869, 628.567, -13.0465, 0.52 ) }
    dend_42 { pt3dadd( 31.5765, 628.66, -13.0387, 0.52 ) }
    dend_42 { pt3dadd( 31.5059, 628.998, -12.9906, 0.52 ) }
    dend_42 { pt3dadd( 31.4007, 629.397, -12.9207, 0.37 ) }
    dend_42 { pt3dadd( 31.3661, 629.48, -12.8986, 0.37 ) }
    dend_42 { pt3dadd( 31.125, 629.837, -12.7477, 0.22 ) }
    dend_42 { pt3dadd( 30.6768, 630.374, -12.4694, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 21.0062, 574.397, -13.1006, 0.22 ) }
    dend_45 { pt3dadd( 21.4034, 575.813, -12.7743, 0.22 ) }
    dend_45 { pt3dadd( 21.6078, 576.532, -12.5961, 0.52 ) }
    dend_45 { pt3dadd( 22.1255, 578.339, -12.1302, 0.29 ) }
    dend_45 { pt3dadd( 22.3686, 579.18, -11.9059, 0.88 ) }
    dend_45 { pt3dadd( 22.5562, 579.814, -11.7545, 1.18 ) }
    dend_45 { pt3dadd( 22.6864, 580.265, -11.6593, 1.18 ) }
    dend_45 { pt3dadd( 22.7524, 580.497, -11.6227, 1.18 ) }
    dend_45 { pt3dadd( 22.7524, 580.497, -11.6227, 1.18 ) }
    dend_45 { pt3dadd( 22.7672, 580.556, -11.6198, 1.18 ) }
    dend_45 { pt3dadd( 23.0447, 581.71, -11.5845, 0.22 ) }
    dend_45 { pt3dadd( 23.2732, 582.41, -11.548, 0.44 ) }
    dend_45 { pt3dadd( 23.6564, 583.422, -11.4665, 0.59 ) }
    dend_45 { pt3dadd( 23.8761, 583.901, -11.4237, 1.11 ) }
    dend_45 { pt3dadd( 24.1282, 584.384, -11.3779, 1.11 ) }
    dend_45 { pt3dadd( 24.1585, 584.435, -11.3724, 1.11 ) }
    dend_45 { pt3dadd( 25.2952, 586.015, -11.1704, 0.22 ) }
    dend_45 { pt3dadd( 25.3411, 586.067, -11.1657, 0.22 ) }
    dend_45 { pt3dadd( 25.9902, 586.741, -11.1381, 0.22 ) }
    dend_45 { pt3dadd( 26.3477, 587.109, -11.1151, 0.74 ) }
    dend_45 { pt3dadd( 26.3972, 587.161, -11.1116, 0.74 ) }
    dend_45 { pt3dadd( 26.794, 587.607, -11.0761, 0.52 ) }
    dend_45 { pt3dadd( 27.3948, 588.392, -11.0063, 0.22 ) }
    dend_45 { pt3dadd( 27.8452, 589.064, -10.8773, 0.74 ) }
    dend_45 { pt3dadd( 28.5513, 590.267, -10.5301, 1.25 ) }
    dend_45 { pt3dadd( 28.5921, 590.348, -10.5033, 1.25 ) }
    dend_45 { pt3dadd( 28.717, 590.637, -10.3968, 1.11 ) }
    dend_45 { pt3dadd( 28.9783, 591.264, -10.1077, 0.52 ) }
    dend_45 { pt3dadd( 29.4006, 592.194, -9.62524, 0.15 ) }
    dend_45 { pt3dadd( 29.432, 592.25, -9.59284, 0.15 ) }
    dend_45 { pt3dadd( 29.8252, 592.684, -9.30827, 0.15 ) }
    dend_45 { pt3dadd( 29.9105, 592.746, -9.25821, 0.15 ) }
    dend_45 { pt3dadd( 31.0109, 593.37, -8.59519, 0.44 ) }
    dend_45 { pt3dadd( 31.4614, 593.584, -8.32711, 0.66 ) }
    dend_45 { pt3dadd( 31.5178, 593.606, -8.29681, 0.66 ) }
    dend_45 { pt3dadd( 32.9054, 594.099, -7.55604, 0.22 ) }
    dend_45 { pt3dadd( 32.9637, 594.117, -7.52507, 0.22 ) }
    dend_45 { pt3dadd( 34.4121, 594.571, -6.73384, 1.33 ) }
    dend_45 { pt3dadd( 34.5895, 594.634, -6.62321, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 21.0062, 574.397, -13.1006, 0.15 ) }
    dend_44 { pt3dadd( 22.1201, 575.565, -13.9101, 0.15 ) }
    dend_44 { pt3dadd( 22.5237, 575.958, -14.1816, 0.15 ) }
    dend_44 { pt3dadd( 22.6189, 576.044, -14.2426, 0.15 ) }
    dend_44 { pt3dadd( 23.0782, 576.442, -14.5302, 0.44 ) }
    dend_44 { pt3dadd( 23.1808, 576.526, -14.5925, 0.44 ) }
    dend_44 { pt3dadd( 23.8545, 577.064, -14.9991, 0.22 ) }
    dend_44 { pt3dadd( 24.2074, 577.33, -15.1962, 0.44 ) }
    dend_44 { pt3dadd( 24.6822, 577.638, -15.4679, 0.15 ) }
    dend_44 { pt3dadd( 24.7323, 577.668, -15.4971, 0.15 ) }
    dend_44 { pt3dadd( 25.228, 577.942, -15.791, 0.66 ) }
    dend_44 { pt3dadd( 25.2784, 577.968, -15.8215, 0.66 ) }
    dend_44 { pt3dadd( 25.9429, 578.285, -16.2354, 0.22 ) }
    dend_44 { pt3dadd( 26.4772, 578.548, -16.583, 0.88 ) }
    dend_44 { pt3dadd( 26.5345, 578.575, -16.6209, 0.88 ) }
    dend_44 { pt3dadd( 26.6882, 578.648, -16.7234, 1.11 ) }
    dend_44 { pt3dadd( 26.7889, 578.691, -16.7926, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 34.5895, 594.634, -6.62321, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( 35.3255, 596.046, -5.73909, 0.29 ) }
    dend_47 { pt3dadd( 35.3594, 596.103, -5.71035, 0.29 ) }
    dend_47 { pt3dadd( 35.876, 596.917, -5.36289, 0.29 ) }
    dend_47 { pt3dadd( 35.9417, 597.009, -5.33193, 0.29 ) }
    dend_47 { pt3dadd( 36.3871, 597.633, -5.15749, 0.74 ) }
    dend_47 { pt3dadd( 36.4231, 597.683, -5.14508, 0.74 ) }
    dend_47 { pt3dadd( 36.86, 598.309, -4.97581, 0.74 ) }
    dend_47 { pt3dadd( 36.9402, 598.421, -4.93071, 0.74 ) }
    dend_47 { pt3dadd( 37.4768, 599.139, -4.59808, 0.15 ) }
    dend_47 { pt3dadd( 37.7331, 599.473, -4.44204, 0.15 ) }
    dend_47 { pt3dadd( 37.7662, 599.518, -4.42007, 0.15 ) }
    dend_47 { pt3dadd( 38.8531, 601.041, -3.67339, 0.15 ) }
    dend_47 { pt3dadd( 39.1815, 601.55, -3.42544, 1.11 ) }
    dend_47 { pt3dadd( 39.4703, 602.056, -3.19708, 1.25 ) }
    dend_47 { pt3dadd( 40.1049, 603.242, -2.68897, 0.22 ) }
    dend_47 { pt3dadd( 40.4752, 603.947, -2.41519, 0.22 ) }
    dend_47 { pt3dadd( 40.5002, 603.999, -2.39803, 0.22 ) }
    dend_47 { pt3dadd( 40.809, 604.767, -2.26329, 0.29 ) }
    dend_47 { pt3dadd( 41.0818, 605.541, -2.15463, 0.74 ) }
    dend_47 { pt3dadd( 41.2729, 606.086, -2.07575, 1.11 ) }
    dend_47 { pt3dadd( 41.2993, 606.155, -2.06747, 1.11 ) }
    dend_47 { pt3dadd( 41.6545, 606.893, -2.00849, 0.66 ) }
    dend_47 { pt3dadd( 42.1345, 607.8, -1.95924, 0.22 ) }
    dend_47 { pt3dadd( 42.4725, 608.334, -1.95443, 0.15 ) }
    dend_47 { pt3dadd( 42.9298, 608.971, -1.97529, 1.11 ) }
    dend_47 { pt3dadd( 43.3606, 609.558, -2.01548, 1.69 ) }
    dend_47 { pt3dadd( 43.3989, 609.604, -2.01877, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 34.5895, 594.634, -6.62321, 0.29 ) }
    dend_46 { pt3dadd( 33.9823, 595.74, -5.82712, 0.29 ) }
    dend_46 { pt3dadd( 33.8138, 596.031, -5.61914, 0.29 ) }
    dend_46 { pt3dadd( 33.3416, 596.826, -5.02725, 0.15 ) }
    dend_46 { pt3dadd( 33.2408, 596.993, -4.89961, 0.15 ) }
    dend_46 { pt3dadd( 32.9214, 597.545, -4.4862, 0.29 ) }
    dend_46 { pt3dadd( 32.431, 598.411, -3.84836, 0.15 ) }
    dend_46 { pt3dadd( 32.3676, 598.522, -3.77461, 0.15 ) }
    dend_46 { pt3dadd( 31.8458, 599.523, -3.19342, 0.15 ) }
    dend_46 { pt3dadd( 31.7971, 599.632, -3.1469, 0.15 ) }
    dend_46 { pt3dadd( 31.4972, 600.371, -2.88218, 0.15 ) }
    dend_46 { pt3dadd( 31.4228, 600.586, -2.8292, 0.15 ) }
    dend_46 { pt3dadd( 30.9595, 602.026, -2.58053, 0.15 ) }
    dend_46 { pt3dadd( 30.9257, 602.138, -2.56614, 0.15 ) }
    dend_46 { pt3dadd( 30.5513, 603.49, -2.52246, 0.15 ) }
    dend_46 { pt3dadd( 30.5284, 603.574, -2.52261, 0.15 ) }
    dend_46 { pt3dadd( 30.3412, 604.277, -2.56599, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 43.3989, 609.604, -2.01877, 0.52 ) }
    dend_49 { pt3dadd( 44.5398, 610.963, -1.40941, 0.52 ) }
    dend_49 { pt3dadd( 45.5131, 612.27, -0.765379, 0.29 ) }
    dend_49 { pt3dadd( 45.786, 612.738, -0.541753, 0.96 ) }
    dend_49 { pt3dadd( 46.0864, 613.316, -0.267951, 1.11 ) }
    dend_49 { pt3dadd( 46.1356, 613.413, -0.21945, 1.11 ) }
    dend_49 { pt3dadd( 46.5488, 614.232, 0.204234, 0.81 ) }
    dend_49 { pt3dadd( 46.9194, 615.121, 0.669511, 1.11 ) }
    dend_49 { pt3dadd( 47.3934, 616.38, 1.25163, 0.37 ) }
    dend_49 { pt3dadd( 47.4144, 616.432, 1.27355, 0.37 ) }
    dend_49 { pt3dadd( 47.9128, 617.603, 1.67473, 0.29 ) }
    dend_49 { pt3dadd( 47.9429, 617.664, 1.69055, 0.29 ) }
    dend_49 { pt3dadd( 48.4849, 618.428, 1.79628, 0.81 ) }
    dend_49 { pt3dadd( 48.8479, 618.818, 1.81054, 1.03 ) }
    dend_49 { pt3dadd( 48.8989, 618.866, 1.81009, 1.03 ) }
    dend_49 { pt3dadd( 49.3537, 619.283, 1.79468, 0.96 ) }
    dend_49 { pt3dadd( 50.5033, 620.332, 1.72151, 0.66 ) }
    dend_49 { pt3dadd( 51.6124, 621.376, 1.64361, 0.52 ) }
    dend_49 { pt3dadd( 52.4765, 622.234, 1.59457, 0.44 ) }
    dend_49 { pt3dadd( 52.9007, 622.691, 1.58074, 0.44 ) }
    dend_49 { pt3dadd( 53.303, 623.087, 1.5804, 0.37 ) }
    dend_49 { pt3dadd( 53.4232, 623.195, 1.57932, 0.37 ) }
    dend_49 { pt3dadd( 54.2853, 623.905, 1.52778, 0.37 ) }
    dend_49 { pt3dadd( 55.1166, 624.609, 1.4777, 0.22 ) }
    dend_49 { pt3dadd( 56.2684, 625.524, 1.39654, 1.4 ) }
    dend_49 { pt3dadd( 57.9901, 626.771, 1.29935, 0.29 ) }
    dend_49 { pt3dadd( 58.5464, 627.129, 1.2787, 0.96 ) }
    dend_49 { pt3dadd( 59.0077, 627.384, 1.27064, 0.96 ) }
    dend_49 { pt3dadd( 66.3929, 633.817, 0.973652, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 43.3989, 609.604, -2.01877, 0.22 ) }
    dend_48 { pt3dadd( 42.8732, 611.182, -1.51726, 0.22 ) }
    dend_48 { pt3dadd( 42.4071, 612.582, -1.07257, 0.22 ) }
    dend_48 { pt3dadd( 42.3597, 612.725, -1.02731, 0.22 ) }
    dend_48 { pt3dadd( 41.9511, 613.952, -0.637583, 0.22 ) }
    dend_48 { pt3dadd( 40.4057, 623.536, 2.73622, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, axon_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, axon_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_5 = new SectionList()
    dend_75 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 9
    dend_74 nseg = 3
    dend_71 nseg = 3
    dend_14 nseg = 3
    dend_73 nseg = 5
    dend_72 nseg = 7
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_24 nseg = 7
    dend_23 nseg = 11
    dend_15 nseg = 3
    dend_2 nseg = 11
    dend_67 nseg = 5
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_16 nseg = 7
    dend_13 nseg = 17
    dend_3 nseg = 3
    dend_66 nseg = 11
    dend_29 nseg = 17
    dend_6 nseg = 3
    dend_61 nseg = 5
    dend_30 nseg = 3
    dend_11 nseg = 7
    dend_10 nseg = 11
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_DBC_5f1980557e_0_0


