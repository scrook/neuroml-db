// Cell: cNAC187_L23_NBC_98c1faeec7_0_0
/*
{
  "id" : "cNAC187_L23_NBC_98c1faeec7_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33004, 6.9136, -1.72338, 3.35756", "-1.30767, 6.0419, -1.50091, 5.92196", "-1.2853, 5.17019, -1.27844, 10.136", "-1.26293, 4.29848, -1.05596, 12.0381", "-1.24056, 3.42677, -0.833493, 14.7633", "-1.21819, 2.55506, -0.61102, 15.4638", "-1.19582, 1.68335, -0.388548, 15.4684", "-1.17345, 0.811646, -0.166076, 15.4327", "-1.15108, -0.0600623, 0.0563968, 14.9176", "-1.12871, -0.931771, 0.278869, 14.1939", "-1.10634, -1.80348, 0.501341, 13.4702", "-1.08397, -2.67519, 0.723814, 12.7466", "-1.0616, -3.5469, 0.946286, 12.3598", "-1.03923, -4.4186, 1.16876, 12.0665", "-1.01686, -5.29031, 1.39123, 11.6276", "-0.994493, -6.16202, 1.6137, 11.1336", "-0.972123, -7.03373, 1.83618, 10.6396", "-0.949754, -7.90544, 2.05865, 9.89654", "-0.927384, -8.77715, 2.28112, 8.0678", "-0.905015, -9.64885, 2.50359, 6.12489", "-0.882645, -10.5206, 2.72606, 3.55851" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.38069, 1.59658, -14.2729, 1.39", "-6.33018, 1.39224, -14.8032, 1.39", "-6.23773, 1.01816, -15.7739, 1.11", "-6.14759, 0.65348, -16.7201, 1.11", "-5.79085, -0.789905, -20.4655, 1.11", "-5.64854, -1.36571, -21.9597, 1.11", "-5.56562, -1.70119, -22.8302, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-5.84069, 6.05233, -3.83293, 1.11", "-9.4545, 7.99554, -4.49864, 0.83", "-11.7511, 9.28546, -4.61561, 0.83", "-13.6045, 10.5179, -4.83814, 0.83", "-17.5951, 13.4461, -5.47238, 0.83", "-20.6489, 15.7125, -6.02429, 0.83", "-23.2936, 17.5977, -6.53882, 0.83", "-26.32, 19.3616, -6.93998, 0.83", "-30.6352, 21.6554, -7.65106, 0.83", "-32.0422, 22.3971, -7.93755, 0.56", "-33.2178, 23.0468, -8.31264, 0.83", "-34.6988, 23.7917, -8.88956, 0.83", "-36.6696, 24.5855, -9.75207, 0.83", "-39.151, 25.2486, -10.472, 0.28", "-41.3607, 26.0134, -10.9471, 0.83", "-44.7156, 27.3697, -11.7895, 0.56", "-45.9329, 27.9608, -12.1393, 0.56", "-48.6299, 29.3264, -13.0111, 0.56", "-53.7497, 31.9143, -14.8797, 0.56", "-58.7582, 34.3363, -16.9324, 0.56", "-63.1475, 36.3438, -18.9273, 0.56", "-66.5859, 37.9085, -20.55, 0.56", "-68.8222, 38.8505, -21.7244, 0.56", "-71.0336, 39.7047, -23.0144, 0.56", "-73.1124, 40.461, -24.4276, 0.56", "-75.0208, 41.0134, -25.709, 0.56", "-76.1621, 41.3625, -26.5105, 0.56", "-78.8658, 42.2185, -28.4967, 0.56", "-81.679, 43.2147, -30.5756, 0.56", "-84.2198, 44.1939, -32.5507, 0.56", "-85.8744, 44.8521, -33.8949, 0.56", "-87.4794, 45.5163, -35.2127, 0.28", "-89.9391, 46.5203, -37.2689, 0.56", "-91.255, 47.0381, -38.3373, 0.56", "-92.9772, 47.655, -39.7073, 0.56", "-95.2302, 48.4646, -41.3942, 0.28", "-96.8938, 49.0905, -42.5622, 0.28", "-98.6668, 49.8359, -43.7108, 0.56", "-100.525, 50.7175, -44.9055, 0.56", "-102.594, 51.8309, -46.2009, 0.28", "-103.381, 52.2645, -46.6656, 0.56", "-105.419, 53.4703, -47.881, 0.28", "-106.184, 53.9253, -48.3463, 0.83", "-109.285, 55.7978, -50.1648, 0.28", "-111.923, 57.5923, -51.8062, 0.28", "-113.503, 58.6911, -52.7775, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.16931, 5.51607, 2.45707, 5.56", "1.50282, 6.85618, 2.45707, 5.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.99931, 4.80433, -11.5829, 1.39", "3.26955, 5.43528, -12.2261, 1.11", "3.84936, 7.33325, -14.4367, 1.11", "4.08799, 8.52523, -16.5023, 1.11", "4.19804, 9.30213, -18.7403, 1.11", "4.30136, 9.8289, -20.8042, 1.11", "4.436, 10.2197, -22.4531, 1.11", "4.64804, 10.5351, -25.0469, 1.11", "4.97088, 10.5009, -29.3003, 1.11", "5.10337, 10.1371, -32.6346, 0.83", "5.13786, 9.9439, -33.7484, 0.83", "5.22233, 9.5422, -35.9307, 0.83", "5.35858, 9.04974, -38.3218, 0.83", "5.48429, 8.76014, -40.1776, 0.83", "5.78849, 8.22292, -44.3539, 0.83", "6.05288, 7.74418, -48.1432, 0.83", "6.17565, 7.40293, -50.5709, 0.83", "6.26741, 7.1387, -52.3432, 0.83", "6.75799, 6.16674, -59.9696, 0.56", "6.9259, 5.93439, -62.0429, 0.56", "7.0936, 5.75714, -63.7189, 1.39", "7.63458, 5.17853, -68.8483, 0.56", "7.89909, 4.88458, -70.9794, 0.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.60931, 3.29307, -6.83293, 2.78", "7.68339, 4.94838, -7.98091, 2.78", "9.43553, 7.64869, -9.85362, 2.22", "11.7334, 11.1901, -12.3096, 3.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.46931, -9.96692, 3.82707, 1.94", "2.85719, -11.7554, 3.7885, 1.39", "3.18959, -13.288, 3.75546, 2.22", "3.51566, -14.7915, 3.72304, 2.5", "4.2591, -18.2193, 3.64912, 1.39", "4.54751, -19.5492, 3.62045, 1.39", "5.32501, -23.1341, 3.54314, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.07069, -9.85968, -1.42293, 2.78", "-5.77874, -10.9612, -2.05895, 2.22", "-6.75213, -12.4756, -2.93331, 2.22", "-8.03437, -14.4705, -4.08511, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.882645, -10.5206, 2.72606, 0.644147", "-0.497843, -25.5157, 2.72606, 0.644147", "-0.11304, -40.5107, 2.72606, 0.644147" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.56562, -1.70119, -22.8302, 1.11", "-8.1781, -2.24969, -23.0199, 1.11", "-10.9707, -2.89488, -24.3446, 1.11", "-15.1111, -3.85146, -26.3087, 1.11", "-19.8952, -4.95678, -28.5781, 1.11", "-22.2727, -5.50608, -29.7059, 0.83", "-26.4291, -6.46637, -31.6775, 1.11", "-35.1438, -8.98744, -36.948, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.56562, -1.70119, -22.8302, 0.83", "-4.39104, -5.85645, -23.4571, 0.83", "-3.55341, -8.54489, -23.7566, 0.28", "-3.02812, -10.1545, -23.9025, 0.56", "-1.75984, -13.83, -24.2023, 0.28", "-0.959173, -15.9872, -24.3907, 0.56", "0.0171487, -18.4547, -24.6154, 0.28", "1.54929, -21.9836, -24.9122, 0.83", "3.11711, -25.3092, -25.1609, 0.28", "4.36746, -27.8299, -25.3621, 0.83", "5.65111, -30.201, -25.5682, 0.28", "6.61484, -31.8604, -25.7779, 0.83", "7.55291, -33.3603, -25.9286, 0.83", "9.09054, -35.7222, -26.1289, 0.28", "9.60698, -36.5659, -26.1866, 0.83", "11.9057, -40.653, -26.4123, 0.28", "12.1953, -41.2477, -26.4452, 0.56", "13.4553, -44.3443, -26.6367, 0.28", "14.048, -46.0373, -26.7496, 0.83", "15.6758, -51.726, -27.3752, 0.28", "16.1148, -53.7453, -27.6526, 0.56", "16.6144, -58.0018, -28.2871, 0.28", "16.7734, -61.6457, -28.8636, 0.28", "16.7672, -62.9472, -29.1012, 0.83", "16.5967, -66.4829, -29.7395, 0.28", "16.3294, -68.5228, -30.1426, 0.56", "15.6342, -71.9195, -30.8268, 0.28", "14.9457, -74.12, -31.2566, 0.56" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.50282, 6.85618, 2.45707, 0.56", "-2.31527, 9.19499, 0.376702, 0.56", "-4.09458, 10.431, -0.398682, 0.56", "-5.89731, 11.7202, -0.966912, 0.56", "-7.37146, 12.8339, -1.29396, 0.83", "-8.9919, 14.1591, -1.62611, 0.56", "-9.64349, 14.7535, -1.76315, 0.83", "-11.6598, 17.0103, -2.05505, 0.56", "-13.2181, 19.1498, -2.19946, 0.56", "-14.1348, 20.5075, -2.27233, 0.56", "-15.5452, 22.5975, -2.3405, 0.56", "-16.8841, 24.4993, -2.47311, 0.56", "-18.1321, 26.094, -2.68304, 0.56", "-19.378, 27.5004, -3.023, 0.56", "-20.9802, 29.0378, -3.48562, 0.56", "-21.9145, 29.8132, -3.74265, 0.83", "-23.2978, 30.7179, -4.04232, 0.56", "-25.0122, 31.5146, -4.40476, 0.83", "-26.9997, 32.1277, -4.88506, 0.28", "-28.6991, 32.4148, -5.35711, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.50282, 6.85618, 2.45707, 5.56", "1.59995, 7.13769, 3.3762, 5.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "11.7334, 11.1901, -12.3096, 0.83", "16.3215, 11.5868, -18.0032, 0.83", "17.6979, 11.7438, -19.8668, 0.56", "19.0645, 11.8896, -21.7344, 0.56", "20.984, 11.9676, -24.6212, 0.56", "22.5835, 12.0292, -27.1438, 0.56", "24.2029, 12.1396, -29.7017, 0.56", "25.1496, 12.245, -31.2354, 0.56", "25.8237, 12.3308, -32.3218, 0.83", "29.174, 12.9628, -37.5567, 0.56", "30.1783, 13.2304, -39.0186, 0.83", "31.1417, 13.4944, -40.3288, 0.56", "32.5985, 13.9147, -42.2297, 0.83", "34.9082, 14.6359, -45.1892, 0.56", "37.0437, 15.3012, -47.962, 0.28", "38.0411, 15.5654, -49.2283, 0.56", "40.6119, 16.0088, -52.8167, 0.28", "42.0119, 16.0873, -54.884, 1.11", "43.105, 16.0366, -56.5765, 0.56", "44.8628, 15.6746, -59.5461, 0.56", "45.8164, 15.3725, -61.1557, 0.56", "47.9907, 14.5212, -64.9468, 0.56", "51.198, 13.1188, -70.4336, 0.28", "52.3549, 12.5686, -72.3783, 0.83", "56.364, 10.7066, -78.9967, 0.28", "56.8968, 10.457, -79.8653, 0.83", "61.0303, 8.5319, -86.5336, 0.28", "62.2473, 7.92124, -88.4468, 0.56", "64.2486, 6.87263, -91.6694, 0.28", "65.8905, 6.10539, -94.1565, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "11.7334, 11.1901, -12.3096, 2.5", "14.2501, 12.4612, -14.9563, 2.5", "17.0757, 13.8883, -17.9277, 1.94", "20.2097, 15.4711, -21.2235, 1.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.32501, -23.1341, 3.54314, 0.83", "6.81304, -24.9542, 3.02727, 0.83", "7.90555, -26.2905, 2.64851, 0.83", "10.0755, -28.9448, 1.8962, 0.83", "11.6465, -30.8664, 1.35158, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.32501, -23.1341, 3.54314, 0.83", "4.92867, -28.5158, 7.61743, 0.83", "4.84818, -29.6088, 8.44489, 0.83", "4.68402, -31.8379, 10.1324, 1.39", "4.47523, -34.6729, 12.2787, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.03437, -14.4705, -4.08511, 1.11", "-8.08066, -15.7383, -6.17763, 1.11", "-8.54358, -16.7157, -8.81133, 1.11", "-9.22037, -17.2916, -10.9735, 1.11", "-9.83848, -17.8174, -12.9483, 1.11", "-10.309, -18.2177, -14.4513, 1.11", "-11.0197, -18.8223, -16.7217, 1.11", "-12.5428, -19.1882, -19.5377, 1.11", "-13.4983, -19.1197, -20.7643, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.03437, -14.4705, -4.08511, 1.11", "-8.02718, -19.2658, -4.4592, 1.11", "-8.12806, -23.9935, -5.04977, 1.11", "-8.22823, -29.2487, -5.90315, 1.11", "-8.20491, -31.4267, -6.31243, 1.11", "-8.18683, -33.1157, -6.62981, 1.11", "-8.17145, -34.5518, -6.89965, 1.11", "-8.25694, -36.6692, -7.37893, 1.11", "-8.52706, -40.3662, -8.68805, 1.11", "-8.44354, -43.2125, -9.8678, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.11304, -40.5107, 2.72606, 0.56", "0.271762, -55.5058, 2.72606, 0.56", "0.656564, -70.5009, 2.72606, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-35.1438, -8.98744, -36.948, 0.83", "-38.4337, -8.91172, -36.927, 0.83", "-41.2692, -8.7193, -36.5874, 0.28", "-42.7057, -8.54041, -36.3723, 0.28", "-44.2816, -8.31922, -36.1245, 0.28", "-47.6411, -7.83224, -35.7094, 1.11", "-50.7855, -7.34008, -35.4364, 0.28", "-54.2863, -6.73815, -35.2214, 0.56", "-58.2734, -5.96411, -35.1648, 0.28", "-59.8714, -5.65806, -35.1961, 0.83", "-63.7856, -4.93568, -35.4744, 0.56", "-65.9425, -4.58397, -35.7063, 0.28", "-69.9236, -4.01277, -36.3527, 0.56", "-73.4649, -3.55871, -37.0714, 0.28", "-78.6633, -3.06898, -38.1244, 1.11", "-82.582, -2.78638, -38.9507, 0.28", "-85.3856, -2.78259, -39.5511, 0.83", "-88.8585, -3.01941, -40.2856, 0.28", "-90.6436, -3.25957, -40.6735, 0.56", "-93.6689, -3.89694, -41.3583, 0.28", "-96.9422, -4.87071, -42.1406, 0.56", "-102.456, -6.76428, -43.5035, 0.28", "-105.85, -7.97953, -44.3807, 0.28", "-107.191, -8.44197, -44.7202, 0.56", "-109.56, -9.21312, -45.3345, 0.28", "-114.305, -10.6688, -46.5992, 0.56", "-118.802, -11.9875, -47.7176, 0.28", "-119.962, -12.2711, -47.9914, 0.56", "-124.808, -13.4046, -49.0806, 0.56", "-126.229, -13.716, -49.3846, 0.28", "-131.378, -14.7709, -50.364, 0.28", "-135.122, -15.4667, -51.0498, 0.83", "-138.403, -16.1619, -51.5267, 0.28", "-139.818, -16.4786, -51.7277, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-35.1438, -8.98744, -36.948, 0.56", "-36.0864, -8.43096, -37.9111, 0.56", "-36.4224, -8.22372, -38.2681, 0.56", "-38.128, -6.98724, -40.7949, 0.28", "-39.2187, -6.22694, -43.0069, 0.83", "-41.6098, -4.64935, -48.2615, 0.28", "-41.9847, -4.41172, -49.1096, 0.28", "-42.2632, -4.25496, -49.8091, 0.83", "-43.9927, -3.35703, -54.4833, 0.83", "-46.007, -2.57614, -59.8733, 0.28", "-46.3167, -2.47287, -60.6229, 0.28", "-46.4434, -2.44803, -60.8621, 0.83", "-47.7976, -2.28598, -62.9575, 0.28", "-48.3071, -2.25338, -63.6598, 1.11", "-52.5555, -2.11415, -68.7497, 0.28", "-54.0999, -2.09586, -70.4982, 1.39", "-58.6245, -2.14743, -75.5561, 0.28", "-60.5882, -2.22752, -77.7852, 1.11", "-63.9272, -2.49848, -81.5459, 0.28", "-64.4844, -2.54938, -82.1931, 0.56", "-66.1783, -2.70283, -84.1436, 0.28", "-68.2324, -2.76426, -86.5208, 0.56", "-69.8199, -2.62097, -88.2007, 0.28", "-70.5932, -2.48472, -89.0562, 0.83", "-73.4652, -1.67303, -91.9658, 0.28", "-74.3769, -1.3264, -92.918, 0.83", "-75.6491, -0.590944, -94.2173, 0.28", "-77.4175, 0.80356, -95.7829, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.59995, 7.13769, 3.3762, 0.56", "-0.344263, 10.5562, 2.69688, 0.56", "-1.96625, 13.5351, 2.36851, 0.56", "-3.42208, 16.2263, 2.2439, 0.56", "-4.13388, 17.5899, 2.18986, 0.56", "-5.56851, 20.2573, 2.1033, 0.56", "-7.17949, 23.0533, 2.02753, 0.56", "-7.88197, 24.0721, 2.01425, 0.56", "-9.32868, 25.9742, 2.13118, 0.28", "-10.3592, 27.3167, 2.26037, 0.56", "-11.8361, 29.1269, 2.36208, 0.56", "-13.107, 30.4908, 2.33554, 0.56", "-15.6459, 33.1771, 2.36026, 0.56", "-17.041, 34.5245, 2.47084, 0.56", "-19.2356, 36.5243, 2.79287, 0.56", "-21.3612, 38.4151, 3.27484, 0.56", "-24.1735, 40.9405, 4.02764, 0.56", "-28.2676, 44.5292, 5.25437, 0.56", "-30.549, 46.4889, 6.00038, 0.56", "-32.6336, 48.1706, 6.63752, 0.56", "-34.9635, 49.9133, 7.38795, 0.56", "-36.8314, 51.3725, 8.16378, 0.56", "-38.9607, 53.1657, 9.10272, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.59995, 7.13769, 3.3762, 2.22", "2.61028, 9.5589, 4.28284, 2.22", "3.36212, 11.3607, 4.95752, 1.11", "4.34522, 13.7167, 5.83972, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "20.2097, 15.4711, -21.2235, 0.83", "22.9129, 15.0837, -23.2825, 0.83", "25.5662, 14.8395, -25.0205, 0.83", "27.664, 14.766, -26.2644, 0.83", "33.5624, 14.8874, -29.6717, 0.83", "36.4898, 15.0818, -31.3758, 0.83", "43.7383, 15.6848, -35.9852, 0.83", "46.4165, 15.9761, -37.6591, 0.83", "48.8055, 16.284, -39.0915, 0.83", "51.0789, 16.6192, -40.402, 0.83", "57.1006, 17.678, -43.4579, 0.83", "61.3966, 18.5098, -45.9686, 0.83", "64.2045, 19.225, -48.3134, 1.39" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "20.2097, 15.4711, -21.2235, 1.11", "25.3883, 14.6362, -18.3265, 1.11", "28.4883, 14.1363, -16.5924, 1.11", "32.443, 13.4987, -14.3801, 1.11", "34.5877, 13.1529, -13.1804, 1.11", "36.7374, 12.8064, -11.9779, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.6465, -30.8664, 1.35158, 0.83", "12.6665, -33.1331, 2.61817, 0.83", "13.5547, -34.8402, 3.63102, 0.56", "13.8493, -35.3532, 3.90728, 0.56", "14.6726, -36.7869, 4.67931, 0.28", "15.0806, -37.4976, 5.06196, 0.83", "15.7537, -38.6697, 5.69315, 0.56", "16.2844, -39.4707, 6.05659, 0.56", "17.2077, -40.9161, 6.81917, 0.56" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "11.6465, -30.8664, 1.35158, 0.83", "14.8955, -32.5216, 1.4119, 0.83", "19.4779, -34.822, 1.31114, 0.83", "21.0787, -35.6216, 1.20377, 0.83", "22.7539, -36.5499, 0.993697, 1.11", "28.5065, -39.7376, 0.272341, 0.83", "32.3751, -41.8814, -0.212781, 0.83", "34.5974, -43.1027, -0.510103, 0.83", "38.0373, -45.0042, -1.03954, 0.83", "41.9515, -47.0895, -1.66451, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.47523, -34.6729, 12.2787, 0.56", "2.72754, -34.9222, 14.7748, 0.56", "1.83469, -35.0496, 16.05, 0.83", "1.03594, -35.1636, 17.1908, 0.28", "0.709933, -35.2101, 17.6564, 0.83", "-3.2264, -36.8158, 25.0362, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.47523, -34.6729, 12.2787, 0.56", "6.43722, -34.212, 11.6103, 0.56", "7.58956, -34.0924, 11.1834, 0.56", "10.3617, -33.9179, 10.1154, 0.56", "13.1534, -33.9144, 9.01824, 0.56", "15.349, -33.9116, 8.15539, 0.56", "18.9149, -33.9071, 6.75407, 0.28", "23.5777, -34.1444, 4.89779, 0.28", "25.6211, -34.3216, 4.05875, 0.28", "28.06, -34.6659, 2.98647, 0.28", "36.7406, -33.3617, 1.27796, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-13.4983, -19.1197, -20.7643, 0.83", "-12.6068, -20.8576, -21.9253, 0.83", "-10.5317, -26.2874, -23.8674, 0.28", "-10.2064, -27.3505, -24.0738, 0.56", "-9.6516, -29.2702, -24.2062, 0.56", "-9.13554, -31.2461, -24.2452, 0.56", "-8.51915, -33.6063, -24.2918, 0.28", "-7.64999, -37.1962, -24.0486, 0.28", "-7.40675, -38.5457, -23.7034, 0.83", "-6.84882, -42.179, -22.6933, 0.28", "-6.74353, -43.1358, -22.397, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-13.4983, -19.1197, -20.7643, 0.83", "-14.5657, -17.4418, -21.1203, 0.83", "-16.3776, -14.8047, -21.5614, 0.28", "-17.2747, -13.5762, -21.7347, 0.28", "-19.3622, -10.6976, -22.2264, 0.83", "-21.9944, -7.14386, -22.8401, 0.28", "-22.8849, -5.93594, -23.2225, 0.28", "-23.8808, -4.53825, -23.7817, 0.28", "-24.3615, -3.76854, -24.1529, 0.56", "-25.5875, -1.5877, -25.2669, 0.28", "-26.1801, -0.498885, -25.8507, 0.56", "-28.9701, 4.81169, -28.8897, 0.56", "-30.0411, 6.86284, -29.9638, 0.83", "-31.9248, 10.347, -31.5932, 0.28", "-33.6171, 13.2098, -32.7861, 0.56", "-34.4219, 14.4734, -33.2022, 0.28", "-35.034, 15.3794, -33.4391, 0.56", "-36.7932, 17.6913, -33.7522, 0.28", "-38.08, 19.1903, -33.9698, 0.56", "-39.2653, 20.4642, -34.1378, 0.83", "-40.7985, 22.0955, -34.4292, 0.83", "-43.1986, 24.654, -34.9366, 0.28", "-43.8599, 25.3613, -35.0819, 0.56", "-44.6123, 26.1804, -35.2535, 0.28", "-46.2859, 27.9045, -35.589, 0.56", "-47.296, 28.9462, -35.764, 0.28", "-47.9569, 29.5487, -35.8649, 0.56", "-49.9654, 31.2898, -36.066, 0.28", "-50.2067, 31.5001, -36.0927, 0.56", "-51.6423, 32.7107, -36.2557, 0.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.44354, -43.2125, -9.8678, 0.28", "-10.9325, -46.4708, -8.37444, 0.28", "-12.5145, -48.6986, -7.37907, 0.56", "-13.6509, -50.3518, -6.64206, 0.56", "-15.3944, -52.927, -5.51813, 0.56", "-17.6456, -56.4516, -3.97726, 0.28", "-19.5163, -59.5183, -2.65874, 0.28", "-20.7803, -61.7528, -1.78647, 0.83", "-21.6112, -63.3164, -1.13997, 0.28", "-22.0785, -64.1937, -0.774702, 0.83", "-23.4227, -66.7839, 0.313265, 0.28", "-24.0154, -67.914, 0.726527, 0.28", "-24.5371, -68.807, 0.953333, 0.56", "-25.4071, -70.1635, 1.20666, 0.28", "-26.3507, -71.6987, 1.27896, 0.56", "-28.2308, -74.8246, 1.14696, 0.28", "-28.9425, -76.0279, 0.999128, 0.83", "-31.2577, -79.6399, 0.148976, 0.28", "-32.5509, -81.5299, -0.454988, 0.56", "-34.7461, -84.66, -1.76928, 0.28", "-35.1062, -85.1604, -2.01834, 0.83", "-36.0147, -86.4054, -2.73562, 0.83", "-40.0437, -91.652, -5.93631, 0.28", "-40.7552, -92.4926, -6.48227, 0.56", "-42.4488, -94.2301, -7.71247, 0.28", "-42.9772, -94.6782, -8.03258, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.44354, -43.2125, -9.8678, 0.56", "-6.26835, -45.6081, -12.2116, 0.56", "-5.13996, -46.9486, -13.1519, 0.56", "-3.82001, -48.6706, -14.0243, 0.56", "-2.92552, -50.0024, -14.5666, 1.11", "-1.48328, -52.4213, -15.3975, 1.11", "-0.384779, -54.4719, -16.1239, 0.56", "0.572098, -56.7745, -16.672, 0.56", "1.19115, -58.4818, -17.0248, 0.28", "1.49766, -59.7943, -17.2332, 0.56", "1.63487, -60.5884, -17.3851, 0.28", "1.93709, -62.9585, -17.7431, 0.56", "2.21149, -64.8515, -18.0117, 0.28", "2.28951, -65.4244, -18.0877, 0.83", "2.67678, -68.0198, -18.375, 0.83", "2.95148, -69.581, -18.5103, 0.56", "3.51918, -72.4775, -18.6634, 0.56", "4.08711, -75.3058, -18.6877, 1.39", "4.77673, -78.5518, -18.6196, 0.28", "4.87639, -79.046, -18.5964, 0.83", "5.22065, -80.9901, -18.442, 0.28", "5.4456, -82.7377, -18.216, 0.28", "5.51859, -83.5262, -18.0938, 0.83", "5.6165, -86.0049, -17.6506, 0.28", "5.65251, -87.5188, -17.3886, 0.28", "5.67179, -88.5545, -17.2691, 0.83", "5.64299, -91.2716, -17.0525, 0.28", "5.60792, -92.0638, -17.0223, 0.83", "5.53628, -93.865, -16.9955, 1.39", "5.39727, -95.8037, -16.9791, 1.39", "5.03938, -100.7, -16.8893, 0.28", "4.96837, -101.732, -16.8579, 0.83", "4.66712, -105.511, -16.7725, 0.28", "4.46709, -107.881, -16.6564, 0.28", "4.33293, -110.645, -16.3591, 0.83", "4.28019, -112.331, -16.0838, 0.28", "4.26755, -113.736, -15.7974, 0.83", "4.34726, -116.402, -15.1285, 0.28", "4.45266, -118.172, -14.6198, 0.83", "4.84334, -124.494, -12.6888, 0.28", "4.92133, -125.569, -12.3504, 0.83", "4.97232, -127.582, -11.8331, 0.83", "4.83825, -131.738, -11.0051, 0.28", "4.80783, -132.229, -10.9523, 0.56", "4.62949, -133.99, -10.945, 0.28", "4.48172, -135.528, -11.0877, 1.39", "4.16157, -141.715, -11.9189, 0.28", "4.21945, -143.84, -12.3096, 1.11", "4.65188, -148.093, -13.2821, 0.28", "4.81553, -148.818, -13.4246, 0.83", "6.56226, -153.853, -14.2415, 0.28", "7.00769, -154.797, -14.3479, 0.83", "8.82588, -157.76, -14.3537, 0.28", "9.28125, -158.429, -14.3077, 0.56", "12.7576, -163.268, -13.5387, 0.28", "13.2493, -163.945, -13.3947, 0.83", "13.8484, -164.81, -13.1267, 0.83", "15.4517, -167.307, -12.2414, 0.28", "15.6521, -167.647, -12.0994, 0.56", "16.2225, -168.681, -11.644, 0.28", "16.5187, -169.298, -11.3331, 0.83", "18.0229, -172.467, -9.79727, 0.28", "18.3574, -173.127, -9.48883, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-38.9607, 53.1657, 9.10272, 0.56", "-41.2822, 52.8991, 9.28221, 0.56", "-44.2232, 52.5614, 9.50958, 0.56", "-52.6004, 51.8127, 11.1106, 0.56", "-61.0361, 50.3806, 11.1034, 0.56", "-69.1399, 47.7064, 10.7632, 0.56", "-77.5858, 47.0704, 9.51336, 0.56", "-85.8937, 46.7304, 7.46908, 0.56", "-94.1755, 46.4484, 5.3124, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-38.9607, 53.1657, 9.10272, 0.56", "-41.6911, 52.2829, 9.54059, 0.56", "-43.0511, 51.8432, 9.7587, 0.56", "-44.3691, 51.4171, 9.97006, 0.56", "-48.4285, 50.1047, 10.6211, 0.56", "-51.5179, 49.1059, 11.1165, 0.56", "-58.4324, 46.8705, 12.2254, 0.28", "-67.3999, 43.1232, 14.9172, 0.28", "-75.6183, 37.7826, 17.1316, 0.28", "-84.2025, 32.9577, 19.1994, 0.28", "-92.391, 27.5425, 21.333, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.34522, 13.7167, 5.83972, 0.56", "1.42494, 13.5805, 7.88877, 0.56", "-0.136359, 13.7607, 8.7682, 0.56", "-2.04626, 14.1728, 9.75229, 0.56", "-3.96745, 14.6541, 10.6247, 0.83", "-6.89948, 15.356, 11.7372, 0.56", "-7.77469, 15.5942, 12.0258, 0.83", "-10.5146, 16.6389, 12.4545, 0.28", "-11.1468, 17.1031, 12.5682, 0.83", "-11.9926, 18.4317, 12.7691, 0.83", "-12.6991, 20.4159, 13.0546, 0.56", "-12.9848, 22.1316, 13.3274, 0.56", "-13.301, 25.4422, 13.8734, 0.56", "-13.3588, 31.2984, 14.915, 0.56", "-13.2366, 34.2619, 15.4749, 0.56", "-13.1059, 35.4794, 15.7204, 0.56", "-12.493, 39.0411, 16.5262, 0.56", "-18.1054, 45.8732, 18.295, 0.56", "-23.6115, 52.8807, 19.6213, 0.56", "-29.8052, 59.446, 19.8069, 0.56", "-35.1992, 66.628, 19.1816, 0.56", "-40.71, 73.697, 18.2793, 0.56", "-45.0387, 81.3928, 16.6291, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.34522, 13.7167, 5.83972, 0.56", "7.14681, 13.7356, 6.41121, 0.56", "9.36985, 13.8586, 7.01161, 0.56", "13.0599, 14.0628, 8.00823, 0.56", "16.1243, 14.2323, 8.83588, 0.56", "18.0526, 14.339, 9.35667, 0.56", "20.479, 14.4733, 10.012, 0.56", "22.3986, 14.5665, 10.7468, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "64.2045, 19.225, -48.3134, 0.56", "66.4905, 20.5687, -49.7321, 0.56", "67.6046, 21.2236, -50.4235, 0.56", "68.8987, 21.9843, -51.2266, 0.28", "69.8618, 22.5505, -51.8243, 0.28", "71.3221, 23.4089, -52.7305, 0.56" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "64.2045, 19.225, -48.3134, 0.83", "65.5469, 17.9581, -50.7006, 0.83", "66.5821, 17.1428, -52.4633, 0.83", "67.682, 16.6748, -54.1105, 0.83", "68.7059, 16.4201, -55.4956, 0.56", "69.8272, 16.1806, -56.7765, 0.56", "71.0585, 15.9675, -58.0177, 0.28", "71.8539, 15.9523, -58.6587, 0.83", "74.5144, 16.1038, -60.4527, 0.83", "76.0469, 16.2144, -61.3935, 0.83", "78.255, 16.381, -62.9117, 0.56", "79.2106, 16.4033, -63.6268, 0.56", "80.1179, 16.4064, -64.3909, 0.56", "82.1078, 16.4139, -66.4115, 0.56", "83.2044, 16.4797, -67.7581, 0.83", "85.4797, 16.8982, -70.9496, 0.56", "86.0037, 17.0714, -71.7995, 0.28", "86.7651, 17.4053, -73.0892, 1.11", "89.1618, 18.6701, -77.0644, 0.56", "90.2276, 19.4134, -78.6797, 0.56", "91.2106, 20.1689, -80.0509, 1.39", "94.1804, 22.5528, -83.9729, 0.28", "95.8035, 23.8913, -86.0424, 0.28", "97.7301, 25.512, -88.4062, 1.39", "102.418, 29.5952, -93.8891, 0.28", "103.689, 30.6614, -95.3195, 0.83", "105.182, 31.8876, -96.9406, 0.28", "105.47, 32.1129, -97.237, 0.56", "107.334, 33.4756, -99.1491, 0.28", "108.157, 34.0152, -99.9643, 1.11", "111.545, 35.808, -103.14, 0.28", "112.805, 36.3728, -104.24, 0.83", "115.677, 37.3958, -106.484, 0.28", "115.858, 37.4374, -106.627, 0.56", "117.179, 37.573, -107.645, 0.28", "118.524, 37.5536, -108.73, 0.56", "119.471, 37.4129, -109.538, 0.28", "120.689, 37.1793, -110.65, 0.83", "123.51, 36.6418, -113.295, 0.28", "123.682, 36.6138, -113.463, 0.56", "125.291, 36.4032, -115.178, 0.28", "125.796, 36.3613, -115.727, 0.56", "127.742, 36.3168, -117.913, 0.28", "128.58, 36.3221, -118.876, 0.83", "128.722, 36.3507, -119.069, 0.83", "130.505, 36.8387, -121.885, 0.28", "130.745, 36.9357, -122.283, 0.28", "131.02, 37.0661, -122.757, 0.83", "131.139, 37.1267, -122.957, 0.83", "136.098, 39.7976, -131.547, 0.28", "136.993, 40.3089, -133.107, 0.83", "139.836, 42.0702, -138.127, 0.28", "139.995, 42.1688, -138.407, 0.28", "140.694, 42.6232, -139.633, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "36.7374, 12.8064, -11.9779, 0.56", "39.9361, 13.4652, -12.6556, 0.56", "43.8447, 13.8603, -13.1309, 0.56", "45.8527, 13.8564, -13.2941, 0.56", "48.9976, 13.6293, -13.5226, 0.56", "51.6385, 13.3067, -13.6179, 0.56", "57.2276, 12.2422, -13.5562, 0.56", "59.9935, 11.3013, -13.2751, 0.56", "62.27, 10.2519, -12.8853, 0.56", "63.8185, 9.40591, -12.4795, 0.56", "66.3143, 7.77681, -11.6114, 0.83", "68.9579, 5.69786, -10.5593, 0.56", "70.7038, 4.13404, -9.79622, 0.56", "72.9012, 2.28583, -8.73071, 0.56", "74.688, 0.94356, -7.8276, 0.56", "75.9023, 0.159863, -7.24643, 0.56", "77.0704, -0.524094, -6.80562, 0.83", "78.8044, -1.29823, -6.32201, 0.56", "80.0432, -1.7577, -6.02668, 0.56", "82.0797, -2.46302, -5.61962, 0.83", "86.2038, -3.74912, -4.86848, 0.83", "91.401, -5.17486, -4.23857, 0.56", "94.5638, -6.02183, -4.0522, 0.56", "96.3978, -6.47015, -4.05771, 0.56", "98.22, -6.83519, -4.24748, 0.56", "100.165, -7.09839, -4.66396, 0.56", "103.978, -7.13259, -6.13504, 0.83", "106.55, -6.89447, -7.19573, 0.56", "108.383, -6.77581, -7.97291, 0.83", "111.979, -6.46011, -9.40038, 0.56", "113.642, -6.26377, -9.9984, 0.56", "115.861, -5.96546, -10.6625, 0.56", "120.66, -5.34314, -11.6332, 0.28", "125.703, -4.84738, -12.5069, 0.28", "128.0, -4.78071, -12.8512, 0.28", "130.561, -4.7954, -13.1221, 0.28", "132.664, -4.80156, -13.3701, 0.28", "134.391, -4.84343, -13.6218, 0.56", "138.892, -5.00357, -14.6895, 0.28", "140.734, -5.18762, -14.9755, 0.28", "142.621, -5.62649, -15.289, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "36.7374, 12.8064, -11.9779, 0.56", "40.1563, 10.2593, -12.1616, 0.56", "42.1156, 8.79975, -12.2669, 0.83", "43.8288, 7.52341, -12.359, 0.83", "45.7538, 6.08927, -12.4625, 0.56", "48.7133, 3.88452, -12.6215, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "17.2077, -40.9161, 6.81917, 0.56", "16.4664, -41.7583, 6.95019, 0.56", "15.712, -42.6154, 7.08352, 0.56", "12.6345, -47.1878, 8.21011, 0.56", "9.01307, -51.4856, 8.64896, 0.56", "5.61951, -55.9781, 8.62461, 0.56", "3.08018, -60.9713, 8.90724, 0.56", "0.704123, -65.9386, 9.97632, 0.56", "-0.616253, -71.1278, 11.6145, 0.56", "-1.11488, -76.6184, 12.5229, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "17.2077, -40.9161, 6.81917, 0.56", "18.685, -40.7699, 7.31931, 0.56", "21.8701, -40.4251, 8.3678, 0.56", "23.7571, -40.2209, 8.98895, 0.56", "25.6914, -40.0115, 9.6257, 0.56", "28.3299, -39.726, 10.4942, 0.56", "31.4405, -39.3893, 11.5182, 0.56", "33.5667, -39.224, 12.1384, 0.56", "42.4116, -39.5771, 13.0829, 0.56", "50.9166, -38.5441, 15.494, 0.56", "59.4808, -37.2216, 17.5176, 0.56", "67.9003, -35.364, 19.6999, 0.56", "75.8217, -33.546, 23.3077, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "41.9515, -47.0895, -1.66451, 0.56", "43.7953, -49.3418, -2.61634, 0.56", "44.859, -50.6836, -3.13704, 0.28", "46.3797, -52.8853, -3.89647, 0.56", "48.4316, -55.9155, -4.94172, 0.28", "48.6615, -56.2548, -5.05675, 0.56", "49.4741, -57.4869, -5.44585, 0.28", "49.8491, -58.0415, -5.62478, 0.83", "51.6455, -60.678, -6.49981, 0.28", "52.3636, -61.6648, -6.85029, 0.56", "53.4198, -63.0141, -7.36576, 0.28", "54.1827, -63.9582, -7.74429, 0.83", "56.0071, -66.0217, -8.68689, 0.83", "57.9308, -67.9786, -9.679, 0.28", "59.1221, -68.9769, -10.2634, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "41.9515, -47.0895, -1.66451, 0.56", "43.7564, -47.0568, -1.3924, 0.56", "44.6389, -47.008, -1.33126, 0.56", "46.0142, -46.9036, -1.33098, 0.56", "47.4552, -46.7263, -1.39017, 0.56", "49.0209, -46.5436, -1.60376, 0.83", "50.6322, -46.3626, -1.84828, 0.56", "51.5648, -46.2641, -2.0971, 0.56", "52.3813, -46.2314, -2.35604, 0.56", "53.2404, -46.1858, -2.63879, 0.56", "54.919, -45.9358, -3.25563, 0.56", "56.0823, -45.6833, -3.63695, 0.56", "57.0524, -45.4574, -3.90134, 0.56", "58.3349, -45.1873, -4.21859, 0.56", "60.1185, -44.7811, -4.61431, 0.56", "61.043, -44.5525, -4.79357, 0.56", "62.2133, -44.1515, -4.95554, 0.56", "63.6846, -43.5618, -5.25441, 0.28", "69.1161, -41.9864, -6.1007, 0.28", "74.136, -39.6666, -7.49258, 0.28", "78.544, -37.0724, -9.9855, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "22.3986, 14.5665, 10.7468, 0.56", "26.4489, 15.9522, 6.92754, 0.56", "28.5639, 16.7775, 5.24543, 0.56", "29.0303, 16.9716, 4.88479, 0.56", "30.1535, 17.4274, 4.00648, 0.28", "31.8408, 18.1324, 2.71334, 0.28", "33.0294, 18.6654, 1.81477, 0.83", "35.3215, 19.7917, 0.352381, 0.28", "36.571, 20.6026, -0.521223, 0.56", "38.2247, 21.8458, -1.74299, 0.28", "39.2492, 22.6906, -2.56991, 0.83", "40.022, 23.434, -3.23459, 0.28", "41.3889, 24.8705, -4.44995, 0.28", "43.1204, 26.7929, -5.90009, 0.28", "44.4741, 28.5181, -6.94059, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "22.3986, 14.5665, 10.7468, 0.56", "23.5727, 14.8365, 12.5325, 0.56", "24.4683, 15.0425, 13.8949, 1.11", "26.0001, 15.3947, 16.2248, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "48.7133, 3.88452, -12.6215, 0.56", "51.0678, -0.184765, -14.1541, 0.56", "52.2956, -1.81763, -14.7139, 0.56", "52.7832, -2.46615, -14.9363, 0.56", "53.8695, -3.91092, -15.4317, 0.28", "55.5641, -6.16473, -16.2045, 0.56", "56.9431, -7.99858, -16.8333, 0.28", "58.1074, -9.09122, -17.0444, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "48.7133, 3.88452, -12.6215, 0.56", "52.9276, 2.29652, -9.36932, 0.56", "54.0179, 1.88563, -8.52784, 0.56", "54.694, 1.63089, -8.00613, 0.56", "56.4814, 0.95734, -6.62672, 0.56", "57.9395, 0.407872, -5.50143, 0.56", "64.6586, -3.67385, -1.35874, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "26.0001, 15.3947, 16.2248, 0.56", "26.9235, 16.9592, 16.7402, 0.56", "28.1531, 18.9741, 17.3963, 0.56", "30.1032, 22.1697, 18.437, 0.28", "32.6118, 26.2805, 19.7757, 0.28", "33.58, 27.8671, 20.2924, 0.28", "34.5646, 29.4805, 20.8178, 0.28", "35.2505, 30.5653, 21.1707, 0.56", "39.1942, 37.4778, 23.8982, 0.56", "42.4482, 44.0785, 27.9257, 0.56", "46.8702, 49.8653, 32.1542, 0.56", "52.6633, 54.443, 36.295, 0.56", "58.3385, 58.8891, 40.7278, 0.56" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "26.0001, 15.3947, 16.2248, 0.83", "26.8989, 12.7684, 16.2765, 0.83", "27.4407, 11.1852, 16.3077, 0.83", "32.6429, 0.81043, 17.4692, 0.83", "37.6469, -9.69986, 17.9378, 0.83", "41.6417, -20.5921, 17.2228, 0.83", "44.2045, -31.914, 16.7597, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "58.1074, -9.09122, -17.0444, 0.56", "59.5676, -8.28879, -17.2888, 0.56", "61.3708, -7.29768, -17.5906, 0.28", "62.25, -6.81456, -17.7378, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "58.1074, -9.09122, -17.0444, 0.28", "59.5224, -11.8228, -17.1592, 0.28", "60.7437, -13.3088, -17.1016, 0.56", "61.6844, -14.0426, -17.1729, 0.56", "63.4251, -14.9638, -17.4115, 0.56", "64.1772, -15.2809, -17.5766, 0.56", "66.5336, -16.119, -18.1536, 0.83", "69.7249, -16.7265, -19.0523, 0.83", "73.3082, -17.1037, -20.0526, 0.56", "74.3976, -17.1708, -20.3881, 0.56", "76.6727, -17.1292, -21.1614, 0.56", "78.448, -17.0254, -21.8566, 0.28", "79.6971, -16.9394, -22.4346, 0.28", "80.7314, -16.8894, -22.9412, 0.56", "82.6147, -16.8473, -23.7455, 0.28", "84.9482, -16.6942, -24.7796, 0.28", "85.7133, -16.5735, -25.1198, 0.56", "87.2648, -16.2402, -25.945, 0.83", "88.1512, -16.0168, -26.4617, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "44.2045, -31.914, 16.7597, 0.56", "48.9407, -39.9431, 14.3505, 0.56", "55.2983, -47.1014, 13.0064, 0.56", "60.0763, -55.3294, 11.4881, 0.56", "63.1858, -64.2489, 9.68737, 0.56", "66.484, -72.6407, 6.36394, 0.56", "71.3426, -80.734, 4.44387, 0.56", "77.1333, -88.4201, 3.60313, 0.56", "81.6371, -96.9576, 3.80141, 0.56", "84.9184, -105.923, 5.34618, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "44.2045, -31.914, 16.7597, 0.56", "46.4591, -40.7183, 19.7589, 0.56", "47.5943, -49.2504, 23.9819, 0.56", "51.0342, -56.8465, 28.7912, 0.56", "55.093, -64.7692, 32.4099, 0.56", "58.9056, -73.3271, 34.398, 0.56", "61.3758, -82.3922, 36.1313, 0.56", "61.8856, -91.8303, 37.3997, 0.56", "61.66, -101.052, 39.8777, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_NBC_98c1faeec7_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_32
create dend_46
public dend_46
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_18
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.4999989408307432)
    connect dend_47(0), soma_0(0.4999989408307432)
    connect dend_32(0), soma_0(0.4999989408307432)
    connect dend_31(0), soma_0(0.4999989408307432)
    connect dend_18(0), soma_0(0.4999989408307432)
    connect dend_7(0), soma_0(0.4999989408307432)
    connect dend_0(0), soma_0(0.4999989408307432)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33004, 6.9136, -1.72338, 3.35756 ) }
    soma_0 { pt3dadd( -1.30767, 6.0419, -1.50091, 5.92196 ) }
    soma_0 { pt3dadd( -1.2853, 5.17019, -1.27844, 10.136 ) }
    soma_0 { pt3dadd( -1.26293, 4.29848, -1.05596, 12.0381 ) }
    soma_0 { pt3dadd( -1.24056, 3.42677, -0.833493, 14.7633 ) }
    soma_0 { pt3dadd( -1.21819, 2.55506, -0.61102, 15.4638 ) }
    soma_0 { pt3dadd( -1.19582, 1.68335, -0.388548, 15.4684 ) }
    soma_0 { pt3dadd( -1.17345, 0.811646, -0.166076, 15.4327 ) }
    soma_0 { pt3dadd( -1.15108, -0.0600623, 0.0563968, 14.9176 ) }
    soma_0 { pt3dadd( -1.12871, -0.931771, 0.278869, 14.1939 ) }
    soma_0 { pt3dadd( -1.10634, -1.80348, 0.501341, 13.4702 ) }
    soma_0 { pt3dadd( -1.08397, -2.67519, 0.723814, 12.7466 ) }
    soma_0 { pt3dadd( -1.0616, -3.5469, 0.946286, 12.3598 ) }
    soma_0 { pt3dadd( -1.03923, -4.4186, 1.16876, 12.0665 ) }
    soma_0 { pt3dadd( -1.01686, -5.29031, 1.39123, 11.6276 ) }
    soma_0 { pt3dadd( -0.994493, -6.16202, 1.6137, 11.1336 ) }
    soma_0 { pt3dadd( -0.972123, -7.03373, 1.83618, 10.6396 ) }
    soma_0 { pt3dadd( -0.949754, -7.90544, 2.05865, 9.89654 ) }
    soma_0 { pt3dadd( -0.927384, -8.77715, 2.28112, 8.0678 ) }
    soma_0 { pt3dadd( -0.905015, -9.64885, 2.50359, 6.12489 ) }
    soma_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 3.55851 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.38069, 1.59658, -14.2729, 1.39 ) }
    dend_48 { pt3dadd( -6.33018, 1.39224, -14.8032, 1.39 ) }
    dend_48 { pt3dadd( -6.23773, 1.01816, -15.7739, 1.11 ) }
    dend_48 { pt3dadd( -6.14759, 0.65348, -16.7201, 1.11 ) }
    dend_48 { pt3dadd( -5.79085, -0.789905, -20.4655, 1.11 ) }
    dend_48 { pt3dadd( -5.64854, -1.36571, -21.9597, 1.11 ) }
    dend_48 { pt3dadd( -5.56562, -1.70119, -22.8302, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 28/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -5.84069, 6.05233, -3.83293, 1.11 ) }
    dend_47 { pt3dadd( -9.4545, 7.99554, -4.49864, 0.83 ) }
    dend_47 { pt3dadd( -11.7511, 9.28546, -4.61561, 0.83 ) }
    dend_47 { pt3dadd( -13.6045, 10.5179, -4.83814, 0.83 ) }
    dend_47 { pt3dadd( -17.5951, 13.4461, -5.47238, 0.83 ) }
    dend_47 { pt3dadd( -20.6489, 15.7125, -6.02429, 0.83 ) }
    dend_47 { pt3dadd( -23.2936, 17.5977, -6.53882, 0.83 ) }
    dend_47 { pt3dadd( -26.32, 19.3616, -6.93998, 0.83 ) }
    dend_47 { pt3dadd( -30.6352, 21.6554, -7.65106, 0.83 ) }
    dend_47 { pt3dadd( -32.0422, 22.3971, -7.93755, 0.56 ) }
    dend_47 { pt3dadd( -33.2178, 23.0468, -8.31264, 0.83 ) }
    dend_47 { pt3dadd( -34.6988, 23.7917, -8.88956, 0.83 ) }
    dend_47 { pt3dadd( -36.6696, 24.5855, -9.75207, 0.83 ) }
    dend_47 { pt3dadd( -39.151, 25.2486, -10.472, 0.28 ) }
    dend_47 { pt3dadd( -41.3607, 26.0134, -10.9471, 0.83 ) }
    dend_47 { pt3dadd( -44.7156, 27.3697, -11.7895, 0.56 ) }
    dend_47 { pt3dadd( -45.9329, 27.9608, -12.1393, 0.56 ) }
    dend_47 { pt3dadd( -48.6299, 29.3264, -13.0111, 0.56 ) }
    dend_47 { pt3dadd( -53.7497, 31.9143, -14.8797, 0.56 ) }
    dend_47 { pt3dadd( -58.7582, 34.3363, -16.9324, 0.56 ) }
    dend_47 { pt3dadd( -63.1475, 36.3438, -18.9273, 0.56 ) }
    dend_47 { pt3dadd( -66.5859, 37.9085, -20.55, 0.56 ) }
    dend_47 { pt3dadd( -68.8222, 38.8505, -21.7244, 0.56 ) }
    dend_47 { pt3dadd( -71.0336, 39.7047, -23.0144, 0.56 ) }
    dend_47 { pt3dadd( -73.1124, 40.461, -24.4276, 0.56 ) }
    dend_47 { pt3dadd( -75.0208, 41.0134, -25.709, 0.56 ) }
    dend_47 { pt3dadd( -76.1621, 41.3625, -26.5105, 0.56 ) }
    dend_47 { pt3dadd( -78.8658, 42.2185, -28.4967, 0.56 ) }
    dend_47 { pt3dadd( -81.679, 43.2147, -30.5756, 0.56 ) }
    dend_47 { pt3dadd( -84.2198, 44.1939, -32.5507, 0.56 ) }
    dend_47 { pt3dadd( -85.8744, 44.8521, -33.8949, 0.56 ) }
    dend_47 { pt3dadd( -87.4794, 45.5163, -35.2127, 0.28 ) }
    dend_47 { pt3dadd( -89.9391, 46.5203, -37.2689, 0.56 ) }
    dend_47 { pt3dadd( -91.255, 47.0381, -38.3373, 0.56 ) }
    dend_47 { pt3dadd( -92.9772, 47.655, -39.7073, 0.56 ) }
    dend_47 { pt3dadd( -95.2302, 48.4646, -41.3942, 0.28 ) }
    dend_47 { pt3dadd( -96.8938, 49.0905, -42.5622, 0.28 ) }
    dend_47 { pt3dadd( -98.6668, 49.8359, -43.7108, 0.56 ) }
    dend_47 { pt3dadd( -100.525, 50.7175, -44.9055, 0.56 ) }
    dend_47 { pt3dadd( -102.594, 51.8309, -46.2009, 0.28 ) }
    dend_47 { pt3dadd( -103.381, 52.2645, -46.6656, 0.56 ) }
    dend_47 { pt3dadd( -105.419, 53.4703, -47.881, 0.28 ) }
    dend_47 { pt3dadd( -106.184, 53.9253, -48.3463, 0.83 ) }
    dend_47 { pt3dadd( -109.285, 55.7978, -50.1648, 0.28 ) }
    dend_47 { pt3dadd( -111.923, 57.5923, -51.8062, 0.28 ) }
    dend_47 { pt3dadd( -113.503, 58.6911, -52.7775, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 74/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.16931, 5.51607, 2.45707, 5.56 ) }
    dend_32 { pt3dadd( 1.50282, 6.85618, 2.45707, 5.56 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.99931, 4.80433, -11.5829, 1.39 ) }
    dend_31 { pt3dadd( 3.26955, 5.43528, -12.2261, 1.11 ) }
    dend_31 { pt3dadd( 3.84936, 7.33325, -14.4367, 1.11 ) }
    dend_31 { pt3dadd( 4.08799, 8.52523, -16.5023, 1.11 ) }
    dend_31 { pt3dadd( 4.19804, 9.30213, -18.7403, 1.11 ) }
    dend_31 { pt3dadd( 4.30136, 9.8289, -20.8042, 1.11 ) }
    dend_31 { pt3dadd( 4.436, 10.2197, -22.4531, 1.11 ) }
    dend_31 { pt3dadd( 4.64804, 10.5351, -25.0469, 1.11 ) }
    dend_31 { pt3dadd( 4.97088, 10.5009, -29.3003, 1.11 ) }
    dend_31 { pt3dadd( 5.10337, 10.1371, -32.6346, 0.83 ) }
    dend_31 { pt3dadd( 5.13786, 9.9439, -33.7484, 0.83 ) }
    dend_31 { pt3dadd( 5.22233, 9.5422, -35.9307, 0.83 ) }
    dend_31 { pt3dadd( 5.35858, 9.04974, -38.3218, 0.83 ) }
    dend_31 { pt3dadd( 5.48429, 8.76014, -40.1776, 0.83 ) }
    dend_31 { pt3dadd( 5.78849, 8.22292, -44.3539, 0.83 ) }
    dend_31 { pt3dadd( 6.05288, 7.74418, -48.1432, 0.83 ) }
    dend_31 { pt3dadd( 6.17565, 7.40293, -50.5709, 0.83 ) }
    dend_31 { pt3dadd( 6.26741, 7.1387, -52.3432, 0.83 ) }
    dend_31 { pt3dadd( 6.75799, 6.16674, -59.9696, 0.56 ) }
    dend_31 { pt3dadd( 6.9259, 5.93439, -62.0429, 0.56 ) }
    dend_31 { pt3dadd( 7.0936, 5.75714, -63.7189, 1.39 ) }
    dend_31 { pt3dadd( 7.63458, 5.17853, -68.8483, 0.56 ) }
    dend_31 { pt3dadd( 7.89909, 4.88458, -70.9794, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 99/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.60931, 3.29307, -6.83293, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 7.68339, 4.94838, -7.98091, 2.78 ) }
    dend_18 { pt3dadd( 9.43553, 7.64869, -9.85362, 2.22 ) }
    dend_18 { pt3dadd( 11.7334, 11.1901, -12.3096, 3.06 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.46931, -9.96692, 3.82707, 1.94 ) }
    dend_7 { pt3dadd( 2.85719, -11.7554, 3.7885, 1.39 ) }
    dend_7 { pt3dadd( 3.18959, -13.288, 3.75546, 2.22 ) }
    dend_7 { pt3dadd( 3.51566, -14.7915, 3.72304, 2.5 ) }
    dend_7 { pt3dadd( 4.2591, -18.2193, 3.64912, 1.39 ) }
    dend_7 { pt3dadd( 4.54751, -19.5492, 3.62045, 1.39 ) }
    dend_7 { pt3dadd( 5.32501, -23.1341, 3.54314, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.07069, -9.85968, -1.42293, 2.78 ) }
    dend_0 { pt3dadd( -5.77874, -10.9612, -2.05895, 2.22 ) }
    dend_0 { pt3dadd( -6.75213, -12.4756, -2.93331, 2.22 ) }
    dend_0 { pt3dadd( -8.03437, -14.4705, -4.08511, 2.78 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 14/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 0.644147 ) }
    axon_0 { pt3dadd( -0.497843, -25.5157, 2.72606, 0.644147 ) }
    axon_0 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.644147 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 17/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.56562, -1.70119, -22.8302, 1.11 ) }
    dend_50 { pt3dadd( -8.1781, -2.24969, -23.0199, 1.11 ) }
    dend_50 { pt3dadd( -10.9707, -2.89488, -24.3446, 1.11 ) }
    dend_50 { pt3dadd( -15.1111, -3.85146, -26.3087, 1.11 ) }
    dend_50 { pt3dadd( -19.8952, -4.95678, -28.5781, 1.11 ) }
    dend_50 { pt3dadd( -22.2727, -5.50608, -29.7059, 0.83 ) }
    dend_50 { pt3dadd( -26.4291, -6.46637, -31.6775, 1.11 ) }
    dend_50 { pt3dadd( -35.1438, -8.98744, -36.948, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.56562, -1.70119, -22.8302, 0.83 ) }
    dend_49 { pt3dadd( -4.39104, -5.85645, -23.4571, 0.83 ) }
    dend_49 { pt3dadd( -3.55341, -8.54489, -23.7566, 0.28 ) }
    dend_49 { pt3dadd( -3.02812, -10.1545, -23.9025, 0.56 ) }
    dend_49 { pt3dadd( -1.75984, -13.83, -24.2023, 0.28 ) }
    dend_49 { pt3dadd( -0.959173, -15.9872, -24.3907, 0.56 ) }
    dend_49 { pt3dadd( 0.0171487, -18.4547, -24.6154, 0.28 ) }
    dend_49 { pt3dadd( 1.54929, -21.9836, -24.9122, 0.83 ) }
    dend_49 { pt3dadd( 3.11711, -25.3092, -25.1609, 0.28 ) }
    dend_49 { pt3dadd( 4.36746, -27.8299, -25.3621, 0.83 ) }
    dend_49 { pt3dadd( 5.65111, -30.201, -25.5682, 0.28 ) }
    dend_49 { pt3dadd( 6.61484, -31.8604, -25.7779, 0.83 ) }
    dend_49 { pt3dadd( 7.55291, -33.3603, -25.9286, 0.83 ) }
    dend_49 { pt3dadd( 9.09054, -35.7222, -26.1289, 0.28 ) }
    dend_49 { pt3dadd( 9.60698, -36.5659, -26.1866, 0.83 ) }
    dend_49 { pt3dadd( 11.9057, -40.653, -26.4123, 0.28 ) }
    dend_49 { pt3dadd( 12.1953, -41.2477, -26.4452, 0.56 ) }
    dend_49 { pt3dadd( 13.4553, -44.3443, -26.6367, 0.28 ) }
    dend_49 { pt3dadd( 14.048, -46.0373, -26.7496, 0.83 ) }
    dend_49 { pt3dadd( 15.6758, -51.726, -27.3752, 0.28 ) }
    dend_49 { pt3dadd( 16.1148, -53.7453, -27.6526, 0.56 ) }
    dend_49 { pt3dadd( 16.6144, -58.0018, -28.2871, 0.28 ) }
    dend_49 { pt3dadd( 16.7734, -61.6457, -28.8636, 0.28 ) }
    dend_49 { pt3dadd( 16.7672, -62.9472, -29.1012, 0.83 ) }
    dend_49 { pt3dadd( 16.5967, -66.4829, -29.7395, 0.28 ) }
    dend_49 { pt3dadd( 16.3294, -68.5228, -30.1426, 0.56 ) }
    dend_49 { pt3dadd( 15.6342, -71.9195, -30.8268, 0.28 ) }
    dend_49 { pt3dadd( 14.9457, -74.12, -31.2566, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_32 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.50282, 6.85618, 2.45707, 0.56 ) }
    dend_46 { pt3dadd( -2.31527, 9.19499, 0.376702, 0.56 ) }
    dend_46 { pt3dadd( -4.09458, 10.431, -0.398682, 0.56 ) }
    dend_46 { pt3dadd( -5.89731, 11.7202, -0.966912, 0.56 ) }
    dend_46 { pt3dadd( -7.37146, 12.8339, -1.29396, 0.83 ) }
    dend_46 { pt3dadd( -8.9919, 14.1591, -1.62611, 0.56 ) }
    dend_46 { pt3dadd( -9.64349, 14.7535, -1.76315, 0.83 ) }
    dend_46 { pt3dadd( -11.6598, 17.0103, -2.05505, 0.56 ) }
    dend_46 { pt3dadd( -13.2181, 19.1498, -2.19946, 0.56 ) }
    dend_46 { pt3dadd( -14.1348, 20.5075, -2.27233, 0.56 ) }
    dend_46 { pt3dadd( -15.5452, 22.5975, -2.3405, 0.56 ) }
    dend_46 { pt3dadd( -16.8841, 24.4993, -2.47311, 0.56 ) }
    dend_46 { pt3dadd( -18.1321, 26.094, -2.68304, 0.56 ) }
    dend_46 { pt3dadd( -19.378, 27.5004, -3.023, 0.56 ) }
    dend_46 { pt3dadd( -20.9802, 29.0378, -3.48562, 0.56 ) }
    dend_46 { pt3dadd( -21.9145, 29.8132, -3.74265, 0.83 ) }
    dend_46 { pt3dadd( -23.2978, 30.7179, -4.04232, 0.56 ) }
    dend_46 { pt3dadd( -25.0122, 31.5146, -4.40476, 0.83 ) }
    dend_46 { pt3dadd( -26.9997, 32.1277, -4.88506, 0.28 ) }
    dend_46 { pt3dadd( -28.6991, 32.4148, -5.35711, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.50282, 6.85618, 2.45707, 5.56 ) }
    dend_33 { pt3dadd( 1.59995, 7.13769, 3.3762, 5.56 ) }
    // Section: dend_30, id: dend_30, parent: dend_18 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 11.7334, 11.1901, -12.3096, 0.83 ) }
    dend_30 { pt3dadd( 16.3215, 11.5868, -18.0032, 0.83 ) }
    dend_30 { pt3dadd( 17.6979, 11.7438, -19.8668, 0.56 ) }
    dend_30 { pt3dadd( 19.0645, 11.8896, -21.7344, 0.56 ) }
    dend_30 { pt3dadd( 20.984, 11.9676, -24.6212, 0.56 ) }
    dend_30 { pt3dadd( 22.5835, 12.0292, -27.1438, 0.56 ) }
    dend_30 { pt3dadd( 24.2029, 12.1396, -29.7017, 0.56 ) }
    dend_30 { pt3dadd( 25.1496, 12.245, -31.2354, 0.56 ) }
    dend_30 { pt3dadd( 25.8237, 12.3308, -32.3218, 0.83 ) }
    dend_30 { pt3dadd( 29.174, 12.9628, -37.5567, 0.56 ) }
    dend_30 { pt3dadd( 30.1783, 13.2304, -39.0186, 0.83 ) }
    dend_30 { pt3dadd( 31.1417, 13.4944, -40.3288, 0.56 ) }
    dend_30 { pt3dadd( 32.5985, 13.9147, -42.2297, 0.83 ) }
    dend_30 { pt3dadd( 34.9082, 14.6359, -45.1892, 0.56 ) }
    dend_30 { pt3dadd( 37.0437, 15.3012, -47.962, 0.28 ) }
    dend_30 { pt3dadd( 38.0411, 15.5654, -49.2283, 0.56 ) }
    dend_30 { pt3dadd( 40.6119, 16.0088, -52.8167, 0.28 ) }
    dend_30 { pt3dadd( 42.0119, 16.0873, -54.884, 1.11 ) }
    dend_30 { pt3dadd( 43.105, 16.0366, -56.5765, 0.56 ) }
    dend_30 { pt3dadd( 44.8628, 15.6746, -59.5461, 0.56 ) }
    dend_30 { pt3dadd( 45.8164, 15.3725, -61.1557, 0.56 ) }
    dend_30 { pt3dadd( 47.9907, 14.5212, -64.9468, 0.56 ) }
    dend_30 { pt3dadd( 51.198, 13.1188, -70.4336, 0.28 ) }
    dend_30 { pt3dadd( 52.3549, 12.5686, -72.3783, 0.83 ) }
    dend_30 { pt3dadd( 56.364, 10.7066, -78.9967, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 56.8968, 10.457, -79.8653, 0.83 ) }
    dend_30 { pt3dadd( 61.0303, 8.5319, -86.5336, 0.28 ) }
    dend_30 { pt3dadd( 62.2473, 7.92124, -88.4468, 0.56 ) }
    dend_30 { pt3dadd( 64.2486, 6.87263, -91.6694, 0.28 ) }
    dend_30 { pt3dadd( 65.8905, 6.10539, -94.1565, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 11.7334, 11.1901, -12.3096, 2.5 ) }
    dend_19 { pt3dadd( 14.2501, 12.4612, -14.9563, 2.5 ) }
    dend_19 { pt3dadd( 17.0757, 13.8883, -17.9277, 1.94 ) }
    dend_19 { pt3dadd( 20.2097, 15.4711, -21.2235, 1.94 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 9/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.32501, -23.1341, 3.54314, 0.83 ) }
    dend_11 { pt3dadd( 6.81304, -24.9542, 3.02727, 0.83 ) }
    dend_11 { pt3dadd( 7.90555, -26.2905, 2.64851, 0.83 ) }
    dend_11 { pt3dadd( 10.0755, -28.9448, 1.8962, 0.83 ) }
    dend_11 { pt3dadd( 11.6465, -30.8664, 1.35158, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.32501, -23.1341, 3.54314, 0.83 ) }
    dend_8 { pt3dadd( 4.92867, -28.5158, 7.61743, 0.83 ) }
    dend_8 { pt3dadd( 4.84818, -29.6088, 8.44489, 0.83 ) }
    dend_8 { pt3dadd( 4.68402, -31.8379, 10.1324, 1.39 ) }
    dend_8 { pt3dadd( 4.47523, -34.6729, 12.2787, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.03437, -14.4705, -4.08511, 1.11 ) }
    dend_4 { pt3dadd( -8.08066, -15.7383, -6.17763, 1.11 ) }
    dend_4 { pt3dadd( -8.54358, -16.7157, -8.81133, 1.11 ) }
    dend_4 { pt3dadd( -9.22037, -17.2916, -10.9735, 1.11 ) }
    dend_4 { pt3dadd( -9.83848, -17.8174, -12.9483, 1.11 ) }
    dend_4 { pt3dadd( -10.309, -18.2177, -14.4513, 1.11 ) }
    dend_4 { pt3dadd( -11.0197, -18.8223, -16.7217, 1.11 ) }
    dend_4 { pt3dadd( -12.5428, -19.1882, -19.5377, 1.11 ) }
    dend_4 { pt3dadd( -13.4983, -19.1197, -20.7643, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 28/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.03437, -14.4705, -4.08511, 1.11 ) }
    dend_1 { pt3dadd( -8.02718, -19.2658, -4.4592, 1.11 ) }
    dend_1 { pt3dadd( -8.12806, -23.9935, -5.04977, 1.11 ) }
    dend_1 { pt3dadd( -8.22823, -29.2487, -5.90315, 1.11 ) }
    dend_1 { pt3dadd( -8.20491, -31.4267, -6.31243, 1.11 ) }
    dend_1 { pt3dadd( -8.18683, -33.1157, -6.62981, 1.11 ) }
    dend_1 { pt3dadd( -8.17145, -34.5518, -6.89965, 1.11 ) }
    dend_1 { pt3dadd( -8.25694, -36.6692, -7.37893, 1.11 ) }
    dend_1 { pt3dadd( -8.52706, -40.3662, -8.68805, 1.11 ) }
    dend_1 { pt3dadd( -8.44354, -43.2125, -9.8678, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 38/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.271762, -55.5058, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.656564, -70.5009, 2.72606, 0.56 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -35.1438, -8.98744, -36.948, 0.83 ) }
    dend_52 { pt3dadd( -38.4337, -8.91172, -36.927, 0.83 ) }
    dend_52 { pt3dadd( -41.2692, -8.7193, -36.5874, 0.28 ) }
    dend_52 { pt3dadd( -42.7057, -8.54041, -36.3723, 0.28 ) }
    dend_52 { pt3dadd( -44.2816, -8.31922, -36.1245, 0.28 ) }
    dend_52 { pt3dadd( -47.6411, -7.83224, -35.7094, 1.11 ) }
    dend_52 { pt3dadd( -50.7855, -7.34008, -35.4364, 0.28 ) }
    dend_52 { pt3dadd( -54.2863, -6.73815, -35.2214, 0.56 ) }
    dend_52 { pt3dadd( -58.2734, -5.96411, -35.1648, 0.28 ) }
    dend_52 { pt3dadd( -59.8714, -5.65806, -35.1961, 0.83 ) }
    dend_52 { pt3dadd( -63.7856, -4.93568, -35.4744, 0.56 ) }
    dend_52 { pt3dadd( -65.9425, -4.58397, -35.7063, 0.28 ) }
    dend_52 { pt3dadd( -69.9236, -4.01277, -36.3527, 0.56 ) }
    dend_52 { pt3dadd( -73.4649, -3.55871, -37.0714, 0.28 ) }
    dend_52 { pt3dadd( -78.6633, -3.06898, -38.1244, 1.11 ) }
    dend_52 { pt3dadd( -82.582, -2.78638, -38.9507, 0.28 ) }
    dend_52 { pt3dadd( -85.3856, -2.78259, -39.5511, 0.83 ) }
    dend_52 { pt3dadd( -88.8585, -3.01941, -40.2856, 0.28 ) }
    dend_52 { pt3dadd( -90.6436, -3.25957, -40.6735, 0.56 ) }
    dend_52 { pt3dadd( -93.6689, -3.89694, -41.3583, 0.28 ) }
    dend_52 { pt3dadd( -96.9422, -4.87071, -42.1406, 0.56 ) }
    dend_52 { pt3dadd( -102.456, -6.76428, -43.5035, 0.28 ) }
    dend_52 { pt3dadd( -105.85, -7.97953, -44.3807, 0.28 ) }
    dend_52 { pt3dadd( -107.191, -8.44197, -44.7202, 0.56 ) }
    dend_52 { pt3dadd( -109.56, -9.21312, -45.3345, 0.28 ) }
    dend_52 { pt3dadd( -114.305, -10.6688, -46.5992, 0.56 ) }
    dend_52 { pt3dadd( -118.802, -11.9875, -47.7176, 0.28 ) }
    dend_52 { pt3dadd( -119.962, -12.2711, -47.9914, 0.56 ) }
    dend_52 { pt3dadd( -124.808, -13.4046, -49.0806, 0.56 ) }
    dend_52 { pt3dadd( -126.229, -13.716, -49.3846, 0.28 ) }
    dend_52 { pt3dadd( -131.378, -14.7709, -50.364, 0.28 ) }
    dend_52 { pt3dadd( -135.122, -15.4667, -51.0498, 0.83 ) }
    dend_52 { pt3dadd( -138.403, -16.1619, -51.5267, 0.28 ) }
    dend_52 { pt3dadd( -139.818, -16.4786, -51.7277, 0.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -35.1438, -8.98744, -36.948, 0.56 ) }
    dend_51 { pt3dadd( -36.0864, -8.43096, -37.9111, 0.56 ) }
    dend_51 { pt3dadd( -36.4224, -8.22372, -38.2681, 0.56 ) }
    dend_51 { pt3dadd( -38.128, -6.98724, -40.7949, 0.28 ) }
    dend_51 { pt3dadd( -39.2187, -6.22694, -43.0069, 0.83 ) }
    dend_51 { pt3dadd( -41.6098, -4.64935, -48.2615, 0.28 ) }
    dend_51 { pt3dadd( -41.9847, -4.41172, -49.1096, 0.28 ) }
    dend_51 { pt3dadd( -42.2632, -4.25496, -49.8091, 0.83 ) }
    dend_51 { pt3dadd( -43.9927, -3.35703, -54.4833, 0.83 ) }
    dend_51 { pt3dadd( -46.007, -2.57614, -59.8733, 0.28 ) }
    dend_51 { pt3dadd( -46.3167, -2.47287, -60.6229, 0.28 ) }
    dend_51 { pt3dadd( -46.4434, -2.44803, -60.8621, 0.83 ) }
    dend_51 { pt3dadd( -47.7976, -2.28598, -62.9575, 0.28 ) }
    dend_51 { pt3dadd( -48.3071, -2.25338, -63.6598, 1.11 ) }
    dend_51 { pt3dadd( -52.5555, -2.11415, -68.7497, 0.28 ) }
    dend_51 { pt3dadd( -54.0999, -2.09586, -70.4982, 1.39 ) }
    dend_51 { pt3dadd( -58.6245, -2.14743, -75.5561, 0.28 ) }
    dend_51 { pt3dadd( -60.5882, -2.22752, -77.7852, 1.11 ) }
    dend_51 { pt3dadd( -63.9272, -2.49848, -81.5459, 0.28 ) }
    dend_51 { pt3dadd( -64.4844, -2.54938, -82.1931, 0.56 ) }
    dend_51 { pt3dadd( -66.1783, -2.70283, -84.1436, 0.28 ) }
    dend_51 { pt3dadd( -68.2324, -2.76426, -86.5208, 0.56 ) }
    dend_51 { pt3dadd( -69.8199, -2.62097, -88.2007, 0.28 ) }
    dend_51 { pt3dadd( -70.5932, -2.48472, -89.0562, 0.83 ) }
    dend_51 { pt3dadd( -73.4652, -1.67303, -91.9658, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -74.3769, -1.3264, -92.918, 0.83 ) }
    dend_51 { pt3dadd( -75.6491, -0.590944, -94.2173, 0.28 ) }
    dend_51 { pt3dadd( -77.4175, 0.80356, -95.7829, 0.56 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.59995, 7.13769, 3.3762, 0.56 ) }
    dend_43 { pt3dadd( -0.344263, 10.5562, 2.69688, 0.56 ) }
    dend_43 { pt3dadd( -1.96625, 13.5351, 2.36851, 0.56 ) }
    dend_43 { pt3dadd( -3.42208, 16.2263, 2.2439, 0.56 ) }
    dend_43 { pt3dadd( -4.13388, 17.5899, 2.18986, 0.56 ) }
    dend_43 { pt3dadd( -5.56851, 20.2573, 2.1033, 0.56 ) }
    dend_43 { pt3dadd( -7.17949, 23.0533, 2.02753, 0.56 ) }
    dend_43 { pt3dadd( -7.88197, 24.0721, 2.01425, 0.56 ) }
    dend_43 { pt3dadd( -9.32868, 25.9742, 2.13118, 0.28 ) }
    dend_43 { pt3dadd( -10.3592, 27.3167, 2.26037, 0.56 ) }
    dend_43 { pt3dadd( -11.8361, 29.1269, 2.36208, 0.56 ) }
    dend_43 { pt3dadd( -13.107, 30.4908, 2.33554, 0.56 ) }
    dend_43 { pt3dadd( -15.6459, 33.1771, 2.36026, 0.56 ) }
    dend_43 { pt3dadd( -17.041, 34.5245, 2.47084, 0.56 ) }
    dend_43 { pt3dadd( -19.2356, 36.5243, 2.79287, 0.56 ) }
    dend_43 { pt3dadd( -21.3612, 38.4151, 3.27484, 0.56 ) }
    dend_43 { pt3dadd( -24.1735, 40.9405, 4.02764, 0.56 ) }
    dend_43 { pt3dadd( -28.2676, 44.5292, 5.25437, 0.56 ) }
    dend_43 { pt3dadd( -30.549, 46.4889, 6.00038, 0.56 ) }
    dend_43 { pt3dadd( -32.6336, 48.1706, 6.63752, 0.56 ) }
    dend_43 { pt3dadd( -34.9635, 49.9133, 7.38795, 0.56 ) }
    dend_43 { pt3dadd( -36.8314, 51.3725, 8.16378, 0.56 ) }
    dend_43 { pt3dadd( -38.9607, 53.1657, 9.10272, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.59995, 7.13769, 3.3762, 2.22 ) }
    dend_34 { pt3dadd( 2.61028, 9.5589, 4.28284, 2.22 ) }
    dend_34 { pt3dadd( 3.36212, 11.3607, 4.95752, 1.11 ) }
    dend_34 { pt3dadd( 4.34522, 13.7167, 5.83972, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 20.2097, 15.4711, -21.2235, 0.83 ) }
    dend_27 { pt3dadd( 22.9129, 15.0837, -23.2825, 0.83 ) }
    dend_27 { pt3dadd( 25.5662, 14.8395, -25.0205, 0.83 ) }
    dend_27 { pt3dadd( 27.664, 14.766, -26.2644, 0.83 ) }
    dend_27 { pt3dadd( 33.5624, 14.8874, -29.6717, 0.83 ) }
    dend_27 { pt3dadd( 36.4898, 15.0818, -31.3758, 0.83 ) }
    dend_27 { pt3dadd( 43.7383, 15.6848, -35.9852, 0.83 ) }
    dend_27 { pt3dadd( 46.4165, 15.9761, -37.6591, 0.83 ) }
    dend_27 { pt3dadd( 48.8055, 16.284, -39.0915, 0.83 ) }
    dend_27 { pt3dadd( 51.0789, 16.6192, -40.402, 0.83 ) }
    dend_27 { pt3dadd( 57.1006, 17.678, -43.4579, 0.83 ) }
    dend_27 { pt3dadd( 61.3966, 18.5098, -45.9686, 0.83 ) }
    dend_27 { pt3dadd( 64.2045, 19.225, -48.3134, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 20.2097, 15.4711, -21.2235, 1.11 ) }
    dend_20 { pt3dadd( 25.3883, 14.6362, -18.3265, 1.11 ) }
    dend_20 { pt3dadd( 28.4883, 14.1363, -16.5924, 1.11 ) }
    dend_20 { pt3dadd( 32.443, 13.4987, -14.3801, 1.11 ) }
    dend_20 { pt3dadd( 34.5877, 13.1529, -13.1804, 1.11 ) }
    dend_20 { pt3dadd( 36.7374, 12.8064, -11.9779, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.6465, -30.8664, 1.35158, 0.83 ) }
    dend_15 { pt3dadd( 12.6665, -33.1331, 2.61817, 0.83 ) }
    dend_15 { pt3dadd( 13.5547, -34.8402, 3.63102, 0.56 ) }
    dend_15 { pt3dadd( 13.8493, -35.3532, 3.90728, 0.56 ) }
    dend_15 { pt3dadd( 14.6726, -36.7869, 4.67931, 0.28 ) }
    dend_15 { pt3dadd( 15.0806, -37.4976, 5.06196, 0.83 ) }
    dend_15 { pt3dadd( 15.7537, -38.6697, 5.69315, 0.56 ) }
    dend_15 { pt3dadd( 16.2844, -39.4707, 6.05659, 0.56 ) }
    dend_15 { pt3dadd( 17.2077, -40.9161, 6.81917, 0.56 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 58/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 11.6465, -30.8664, 1.35158, 0.83 ) }
    dend_12 { pt3dadd( 14.8955, -32.5216, 1.4119, 0.83 ) }
    dend_12 { pt3dadd( 19.4779, -34.822, 1.31114, 0.83 ) }
    dend_12 { pt3dadd( 21.0787, -35.6216, 1.20377, 0.83 ) }
    dend_12 { pt3dadd( 22.7539, -36.5499, 0.993697, 1.11 ) }
    dend_12 { pt3dadd( 28.5065, -39.7376, 0.272341, 0.83 ) }
    dend_12 { pt3dadd( 32.3751, -41.8814, -0.212781, 0.83 ) }
    dend_12 { pt3dadd( 34.5974, -43.1027, -0.510103, 0.83 ) }
    dend_12 { pt3dadd( 38.0373, -45.0042, -1.03954, 0.83 ) }
    dend_12 { pt3dadd( 41.9515, -47.0895, -1.66451, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.47523, -34.6729, 12.2787, 0.56 ) }
    dend_10 { pt3dadd( 2.72754, -34.9222, 14.7748, 0.56 ) }
    dend_10 { pt3dadd( 1.83469, -35.0496, 16.05, 0.83 ) }
    dend_10 { pt3dadd( 1.03594, -35.1636, 17.1908, 0.28 ) }
    dend_10 { pt3dadd( 0.709933, -35.2101, 17.6564, 0.83 ) }
    dend_10 { pt3dadd( -3.2264, -36.8158, 25.0362, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 74/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.47523, -34.6729, 12.2787, 0.56 ) }
    dend_9 { pt3dadd( 6.43722, -34.212, 11.6103, 0.56 ) }
    dend_9 { pt3dadd( 7.58956, -34.0924, 11.1834, 0.56 ) }
    dend_9 { pt3dadd( 10.3617, -33.9179, 10.1154, 0.56 ) }
    dend_9 { pt3dadd( 13.1534, -33.9144, 9.01824, 0.56 ) }
    dend_9 { pt3dadd( 15.349, -33.9116, 8.15539, 0.56 ) }
    dend_9 { pt3dadd( 18.9149, -33.9071, 6.75407, 0.28 ) }
    dend_9 { pt3dadd( 23.5777, -34.1444, 4.89779, 0.28 ) }
    dend_9 { pt3dadd( 25.6211, -34.3216, 4.05875, 0.28 ) }
    dend_9 { pt3dadd( 28.06, -34.6659, 2.98647, 0.28 ) }
    dend_9 { pt3dadd( 36.7406, -33.3617, 1.27796, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -13.4983, -19.1197, -20.7643, 0.83 ) }
    dend_6 { pt3dadd( -12.6068, -20.8576, -21.9253, 0.83 ) }
    dend_6 { pt3dadd( -10.5317, -26.2874, -23.8674, 0.28 ) }
    dend_6 { pt3dadd( -10.2064, -27.3505, -24.0738, 0.56 ) }
    dend_6 { pt3dadd( -9.6516, -29.2702, -24.2062, 0.56 ) }
    dend_6 { pt3dadd( -9.13554, -31.2461, -24.2452, 0.56 ) }
    dend_6 { pt3dadd( -8.51915, -33.6063, -24.2918, 0.28 ) }
    dend_6 { pt3dadd( -7.64999, -37.1962, -24.0486, 0.28 ) }
    dend_6 { pt3dadd( -7.40675, -38.5457, -23.7034, 0.83 ) }
    dend_6 { pt3dadd( -6.84882, -42.179, -22.6933, 0.28 ) }
    dend_6 { pt3dadd( -6.74353, -43.1358, -22.397, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -13.4983, -19.1197, -20.7643, 0.83 ) }
    dend_5 { pt3dadd( -14.5657, -17.4418, -21.1203, 0.83 ) }
    dend_5 { pt3dadd( -16.3776, -14.8047, -21.5614, 0.28 ) }
    dend_5 { pt3dadd( -17.2747, -13.5762, -21.7347, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( -19.3622, -10.6976, -22.2264, 0.83 ) }
    dend_5 { pt3dadd( -21.9944, -7.14386, -22.8401, 0.28 ) }
    dend_5 { pt3dadd( -22.8849, -5.93594, -23.2225, 0.28 ) }
    dend_5 { pt3dadd( -23.8808, -4.53825, -23.7817, 0.28 ) }
    dend_5 { pt3dadd( -24.3615, -3.76854, -24.1529, 0.56 ) }
    dend_5 { pt3dadd( -25.5875, -1.5877, -25.2669, 0.28 ) }
    dend_5 { pt3dadd( -26.1801, -0.498885, -25.8507, 0.56 ) }
    dend_5 { pt3dadd( -28.9701, 4.81169, -28.8897, 0.56 ) }
    dend_5 { pt3dadd( -30.0411, 6.86284, -29.9638, 0.83 ) }
    dend_5 { pt3dadd( -31.9248, 10.347, -31.5932, 0.28 ) }
    dend_5 { pt3dadd( -33.6171, 13.2098, -32.7861, 0.56 ) }
    dend_5 { pt3dadd( -34.4219, 14.4734, -33.2022, 0.28 ) }
    dend_5 { pt3dadd( -35.034, 15.3794, -33.4391, 0.56 ) }
    dend_5 { pt3dadd( -36.7932, 17.6913, -33.7522, 0.28 ) }
    dend_5 { pt3dadd( -38.08, 19.1903, -33.9698, 0.56 ) }
    dend_5 { pt3dadd( -39.2653, 20.4642, -34.1378, 0.83 ) }
    dend_5 { pt3dadd( -40.7985, 22.0955, -34.4292, 0.83 ) }
    dend_5 { pt3dadd( -43.1986, 24.654, -34.9366, 0.28 ) }
    dend_5 { pt3dadd( -43.8599, 25.3613, -35.0819, 0.56 ) }
    dend_5 { pt3dadd( -44.6123, 26.1804, -35.2535, 0.28 ) }
    dend_5 { pt3dadd( -46.2859, 27.9045, -35.589, 0.56 ) }
    dend_5 { pt3dadd( -47.296, 28.9462, -35.764, 0.28 ) }
    dend_5 { pt3dadd( -47.9569, 29.5487, -35.8649, 0.56 ) }
    dend_5 { pt3dadd( -49.9654, 31.2898, -36.066, 0.28 ) }
    dend_5 { pt3dadd( -50.2067, 31.5001, -36.0927, 0.56 ) }
    dend_5 { pt3dadd( -51.6423, 32.7107, -36.2557, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.44354, -43.2125, -9.8678, 0.28 ) }
    dend_3 { pt3dadd( -10.9325, -46.4708, -8.37444, 0.28 ) }
    dend_3 { pt3dadd( -12.5145, -48.6986, -7.37907, 0.56 ) }
    dend_3 { pt3dadd( -13.6509, -50.3518, -6.64206, 0.56 ) }
    dend_3 { pt3dadd( -15.3944, -52.927, -5.51813, 0.56 ) }
    dend_3 { pt3dadd( -17.6456, -56.4516, -3.97726, 0.28 ) }
    dend_3 { pt3dadd( -19.5163, -59.5183, -2.65874, 0.28 ) }
    dend_3 { pt3dadd( -20.7803, -61.7528, -1.78647, 0.83 ) }
    dend_3 { pt3dadd( -21.6112, -63.3164, -1.13997, 0.28 ) }
    dend_3 { pt3dadd( -22.0785, -64.1937, -0.774702, 0.83 ) }
    dend_3 { pt3dadd( -23.4227, -66.7839, 0.313265, 0.28 ) }
    dend_3 { pt3dadd( -24.0154, -67.914, 0.726527, 0.28 ) }
    dend_3 { pt3dadd( -24.5371, -68.807, 0.953333, 0.56 ) }
    dend_3 { pt3dadd( -25.4071, -70.1635, 1.20666, 0.28 ) }
    dend_3 { pt3dadd( -26.3507, -71.6987, 1.27896, 0.56 ) }
    dend_3 { pt3dadd( -28.2308, -74.8246, 1.14696, 0.28 ) }
    dend_3 { pt3dadd( -28.9425, -76.0279, 0.999128, 0.83 ) }
    dend_3 { pt3dadd( -31.2577, -79.6399, 0.148976, 0.28 ) }
    dend_3 { pt3dadd( -32.5509, -81.5299, -0.454988, 0.56 ) }
    dend_3 { pt3dadd( -34.7461, -84.66, -1.76928, 0.28 ) }
    dend_3 { pt3dadd( -35.1062, -85.1604, -2.01834, 0.83 ) }
    dend_3 { pt3dadd( -36.0147, -86.4054, -2.73562, 0.83 ) }
    dend_3 { pt3dadd( -40.0437, -91.652, -5.93631, 0.28 ) }
    dend_3 { pt3dadd( -40.7552, -92.4926, -6.48227, 0.56 ) }
    dend_3 { pt3dadd( -42.4488, -94.2301, -7.71247, 0.28 ) }
    dend_3 { pt3dadd( -42.9772, -94.6782, -8.03258, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.44354, -43.2125, -9.8678, 0.56 ) }
    dend_2 { pt3dadd( -6.26835, -45.6081, -12.2116, 0.56 ) }
    dend_2 { pt3dadd( -5.13996, -46.9486, -13.1519, 0.56 ) }
    dend_2 { pt3dadd( -3.82001, -48.6706, -14.0243, 0.56 ) }
    dend_2 { pt3dadd( -2.92552, -50.0024, -14.5666, 1.11 ) }
    dend_2 { pt3dadd( -1.48328, -52.4213, -15.3975, 1.11 ) }
    dend_2 { pt3dadd( -0.384779, -54.4719, -16.1239, 0.56 ) }
    dend_2 { pt3dadd( 0.572098, -56.7745, -16.672, 0.56 ) }
    dend_2 { pt3dadd( 1.19115, -58.4818, -17.0248, 0.28 ) }
    dend_2 { pt3dadd( 1.49766, -59.7943, -17.2332, 0.56 ) }
    dend_2 { pt3dadd( 1.63487, -60.5884, -17.3851, 0.28 ) }
    dend_2 { pt3dadd( 1.93709, -62.9585, -17.7431, 0.56 ) }
    dend_2 { pt3dadd( 2.21149, -64.8515, -18.0117, 0.28 ) }
    dend_2 { pt3dadd( 2.28951, -65.4244, -18.0877, 0.83 ) }
    dend_2 { pt3dadd( 2.67678, -68.0198, -18.375, 0.83 ) }
    dend_2 { pt3dadd( 2.95148, -69.581, -18.5103, 0.56 ) }
    dend_2 { pt3dadd( 3.51918, -72.4775, -18.6634, 0.56 ) }
    dend_2 { pt3dadd( 4.08711, -75.3058, -18.6877, 1.39 ) }
    dend_2 { pt3dadd( 4.77673, -78.5518, -18.6196, 0.28 ) }
    dend_2 { pt3dadd( 4.87639, -79.046, -18.5964, 0.83 ) }
    dend_2 { pt3dadd( 5.22065, -80.9901, -18.442, 0.28 ) }
    dend_2 { pt3dadd( 5.4456, -82.7377, -18.216, 0.28 ) }
    dend_2 { pt3dadd( 5.51859, -83.5262, -18.0938, 0.83 ) }
    dend_2 { pt3dadd( 5.6165, -86.0049, -17.6506, 0.28 ) }
    dend_2 { pt3dadd( 5.65251, -87.5188, -17.3886, 0.28 ) }
    dend_2 { pt3dadd( 5.67179, -88.5545, -17.2691, 0.83 ) }
    dend_2 { pt3dadd( 5.64299, -91.2716, -17.0525, 0.28 ) }
    dend_2 { pt3dadd( 5.60792, -92.0638, -17.0223, 0.83 ) }
    dend_2 { pt3dadd( 5.53628, -93.865, -16.9955, 1.39 ) }
    dend_2 { pt3dadd( 5.39727, -95.8037, -16.9791, 1.39 ) }
    dend_2 { pt3dadd( 5.03938, -100.7, -16.8893, 0.28 ) }
    dend_2 { pt3dadd( 4.96837, -101.732, -16.8579, 0.83 ) }
    dend_2 { pt3dadd( 4.66712, -105.511, -16.7725, 0.28 ) }
    dend_2 { pt3dadd( 4.46709, -107.881, -16.6564, 0.28 ) }
    dend_2 { pt3dadd( 4.33293, -110.645, -16.3591, 0.83 ) }
    dend_2 { pt3dadd( 4.28019, -112.331, -16.0838, 0.28 ) }
    dend_2 { pt3dadd( 4.26755, -113.736, -15.7974, 0.83 ) }
    dend_2 { pt3dadd( 4.34726, -116.402, -15.1285, 0.28 ) }
    dend_2 { pt3dadd( 4.45266, -118.172, -14.6198, 0.83 ) }
    dend_2 { pt3dadd( 4.84334, -124.494, -12.6888, 0.28 ) }
    dend_2 { pt3dadd( 4.92133, -125.569, -12.3504, 0.83 ) }
    dend_2 { pt3dadd( 4.97232, -127.582, -11.8331, 0.83 ) }
    dend_2 { pt3dadd( 4.83825, -131.738, -11.0051, 0.28 ) }
    dend_2 { pt3dadd( 4.80783, -132.229, -10.9523, 0.56 ) }
    dend_2 { pt3dadd( 4.62949, -133.99, -10.945, 0.28 ) }
    dend_2 { pt3dadd( 4.48172, -135.528, -11.0877, 1.39 ) }
    dend_2 { pt3dadd( 4.16157, -141.715, -11.9189, 0.28 ) }
    dend_2 { pt3dadd( 4.21945, -143.84, -12.3096, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 4.65188, -148.093, -13.2821, 0.28 ) }
    dend_2 { pt3dadd( 4.81553, -148.818, -13.4246, 0.83 ) }
    dend_2 { pt3dadd( 6.56226, -153.853, -14.2415, 0.28 ) }
    dend_2 { pt3dadd( 7.00769, -154.797, -14.3479, 0.83 ) }
    dend_2 { pt3dadd( 8.82588, -157.76, -14.3537, 0.28 ) }
    dend_2 { pt3dadd( 9.28125, -158.429, -14.3077, 0.56 ) }
    dend_2 { pt3dadd( 12.7576, -163.268, -13.5387, 0.28 ) }
    dend_2 { pt3dadd( 13.2493, -163.945, -13.3947, 0.83 ) }
    dend_2 { pt3dadd( 13.8484, -164.81, -13.1267, 0.83 ) }
    dend_2 { pt3dadd( 15.4517, -167.307, -12.2414, 0.28 ) }
    dend_2 { pt3dadd( 15.6521, -167.647, -12.0994, 0.56 ) }
    dend_2 { pt3dadd( 16.2225, -168.681, -11.644, 0.28 ) }
    dend_2 { pt3dadd( 16.5187, -169.298, -11.3331, 0.83 ) }
    dend_2 { pt3dadd( 18.0229, -172.467, -9.79727, 0.28 ) }
    dend_2 { pt3dadd( 18.3574, -173.127, -9.48883, 0.56 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 15/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -38.9607, 53.1657, 9.10272, 0.56 ) }
    dend_45 { pt3dadd( -41.2822, 52.8991, 9.28221, 0.56 ) }
    dend_45 { pt3dadd( -44.2232, 52.5614, 9.50958, 0.56 ) }
    dend_45 { pt3dadd( -52.6004, 51.8127, 11.1106, 0.56 ) }
    dend_45 { pt3dadd( -61.0361, 50.3806, 11.1034, 0.56 ) }
    dend_45 { pt3dadd( -69.1399, 47.7064, 10.7632, 0.56 ) }
    dend_45 { pt3dadd( -77.5858, 47.0704, 9.51336, 0.56 ) }
    dend_45 { pt3dadd( -85.8937, 46.7304, 7.46908, 0.56 ) }
    dend_45 { pt3dadd( -94.1755, 46.4484, 5.3124, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -38.9607, 53.1657, 9.10272, 0.56 ) }
    dend_44 { pt3dadd( -41.6911, 52.2829, 9.54059, 0.56 ) }
    dend_44 { pt3dadd( -43.0511, 51.8432, 9.7587, 0.56 ) }
    dend_44 { pt3dadd( -44.3691, 51.4171, 9.97006, 0.56 ) }
    dend_44 { pt3dadd( -48.4285, 50.1047, 10.6211, 0.56 ) }
    dend_44 { pt3dadd( -51.5179, 49.1059, 11.1165, 0.56 ) }
    dend_44 { pt3dadd( -58.4324, 46.8705, 12.2254, 0.28 ) }
    dend_44 { pt3dadd( -67.3999, 43.1232, 14.9172, 0.28 ) }
    dend_44 { pt3dadd( -75.6183, 37.7826, 17.1316, 0.28 ) }
    dend_44 { pt3dadd( -84.2025, 32.9577, 19.1994, 0.28 ) }
    dend_44 { pt3dadd( -92.391, 27.5425, 21.333, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 35/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.34522, 13.7167, 5.83972, 0.56 ) }
    dend_42 { pt3dadd( 1.42494, 13.5805, 7.88877, 0.56 ) }
    dend_42 { pt3dadd( -0.136359, 13.7607, 8.7682, 0.56 ) }
    dend_42 { pt3dadd( -2.04626, 14.1728, 9.75229, 0.56 ) }
    dend_42 { pt3dadd( -3.96745, 14.6541, 10.6247, 0.83 ) }
    dend_42 { pt3dadd( -6.89948, 15.356, 11.7372, 0.56 ) }
    dend_42 { pt3dadd( -7.77469, 15.5942, 12.0258, 0.83 ) }
    dend_42 { pt3dadd( -10.5146, 16.6389, 12.4545, 0.28 ) }
    dend_42 { pt3dadd( -11.1468, 17.1031, 12.5682, 0.83 ) }
    dend_42 { pt3dadd( -11.9926, 18.4317, 12.7691, 0.83 ) }
    dend_42 { pt3dadd( -12.6991, 20.4159, 13.0546, 0.56 ) }
    dend_42 { pt3dadd( -12.9848, 22.1316, 13.3274, 0.56 ) }
    dend_42 { pt3dadd( -13.301, 25.4422, 13.8734, 0.56 ) }
    dend_42 { pt3dadd( -13.3588, 31.2984, 14.915, 0.56 ) }
    dend_42 { pt3dadd( -13.2366, 34.2619, 15.4749, 0.56 ) }
    dend_42 { pt3dadd( -13.1059, 35.4794, 15.7204, 0.56 ) }
    dend_42 { pt3dadd( -12.493, 39.0411, 16.5262, 0.56 ) }
    dend_42 { pt3dadd( -18.1054, 45.8732, 18.295, 0.56 ) }
    dend_42 { pt3dadd( -23.6115, 52.8807, 19.6213, 0.56 ) }
    dend_42 { pt3dadd( -29.8052, 59.446, 19.8069, 0.56 ) }
    dend_42 { pt3dadd( -35.1992, 66.628, 19.1816, 0.56 ) }
    dend_42 { pt3dadd( -40.71, 73.697, 18.2793, 0.56 ) }
    dend_42 { pt3dadd( -45.0387, 81.3928, 16.6291, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.34522, 13.7167, 5.83972, 0.56 ) }
    dend_35 { pt3dadd( 7.14681, 13.7356, 6.41121, 0.56 ) }
    dend_35 { pt3dadd( 9.36985, 13.8586, 7.01161, 0.56 ) }
    dend_35 { pt3dadd( 13.0599, 14.0628, 8.00823, 0.56 ) }
    dend_35 { pt3dadd( 16.1243, 14.2323, 8.83588, 0.56 ) }
    dend_35 { pt3dadd( 18.0526, 14.339, 9.35667, 0.56 ) }
    dend_35 { pt3dadd( 20.479, 14.4733, 10.012, 0.56 ) }
    dend_35 { pt3dadd( 22.3986, 14.5665, 10.7468, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 64.2045, 19.225, -48.3134, 0.56 ) }
    dend_29 { pt3dadd( 66.4905, 20.5687, -49.7321, 0.56 ) }
    dend_29 { pt3dadd( 67.6046, 21.2236, -50.4235, 0.56 ) }
    dend_29 { pt3dadd( 68.8987, 21.9843, -51.2266, 0.28 ) }
    dend_29 { pt3dadd( 69.8618, 22.5505, -51.8243, 0.28 ) }
    dend_29 { pt3dadd( 71.3221, 23.4089, -52.7305, 0.56 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 72/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 64.2045, 19.225, -48.3134, 0.83 ) }
    dend_28 { pt3dadd( 65.5469, 17.9581, -50.7006, 0.83 ) }
    dend_28 { pt3dadd( 66.5821, 17.1428, -52.4633, 0.83 ) }
    dend_28 { pt3dadd( 67.682, 16.6748, -54.1105, 0.83 ) }
    dend_28 { pt3dadd( 68.7059, 16.4201, -55.4956, 0.56 ) }
    dend_28 { pt3dadd( 69.8272, 16.1806, -56.7765, 0.56 ) }
    dend_28 { pt3dadd( 71.0585, 15.9675, -58.0177, 0.28 ) }
    dend_28 { pt3dadd( 71.8539, 15.9523, -58.6587, 0.83 ) }
    dend_28 { pt3dadd( 74.5144, 16.1038, -60.4527, 0.83 ) }
    dend_28 { pt3dadd( 76.0469, 16.2144, -61.3935, 0.83 ) }
    dend_28 { pt3dadd( 78.255, 16.381, -62.9117, 0.56 ) }
    dend_28 { pt3dadd( 79.2106, 16.4033, -63.6268, 0.56 ) }
    dend_28 { pt3dadd( 80.1179, 16.4064, -64.3909, 0.56 ) }
    dend_28 { pt3dadd( 82.1078, 16.4139, -66.4115, 0.56 ) }
    dend_28 { pt3dadd( 83.2044, 16.4797, -67.7581, 0.83 ) }
    dend_28 { pt3dadd( 85.4797, 16.8982, -70.9496, 0.56 ) }
    dend_28 { pt3dadd( 86.0037, 17.0714, -71.7995, 0.28 ) }
    dend_28 { pt3dadd( 86.7651, 17.4053, -73.0892, 1.11 ) }
    dend_28 { pt3dadd( 89.1618, 18.6701, -77.0644, 0.56 ) }
    dend_28 { pt3dadd( 90.2276, 19.4134, -78.6797, 0.56 ) }
    dend_28 { pt3dadd( 91.2106, 20.1689, -80.0509, 1.39 ) }
    dend_28 { pt3dadd( 94.1804, 22.5528, -83.9729, 0.28 ) }
    dend_28 { pt3dadd( 95.8035, 23.8913, -86.0424, 0.28 ) }
    dend_28 { pt3dadd( 97.7301, 25.512, -88.4062, 1.39 ) }
    dend_28 { pt3dadd( 102.418, 29.5952, -93.8891, 0.28 ) }
    dend_28 { pt3dadd( 103.689, 30.6614, -95.3195, 0.83 ) }
    dend_28 { pt3dadd( 105.182, 31.8876, -96.9406, 0.28 ) }
    dend_28 { pt3dadd( 105.47, 32.1129, -97.237, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_28 { pt3dadd( 107.334, 33.4756, -99.1491, 0.28 ) }
    dend_28 { pt3dadd( 108.157, 34.0152, -99.9643, 1.11 ) }
    dend_28 { pt3dadd( 111.545, 35.808, -103.14, 0.28 ) }
    dend_28 { pt3dadd( 112.805, 36.3728, -104.24, 0.83 ) }
    dend_28 { pt3dadd( 115.677, 37.3958, -106.484, 0.28 ) }
    dend_28 { pt3dadd( 115.858, 37.4374, -106.627, 0.56 ) }
    dend_28 { pt3dadd( 117.179, 37.573, -107.645, 0.28 ) }
    dend_28 { pt3dadd( 118.524, 37.5536, -108.73, 0.56 ) }
    dend_28 { pt3dadd( 119.471, 37.4129, -109.538, 0.28 ) }
    dend_28 { pt3dadd( 120.689, 37.1793, -110.65, 0.83 ) }
    dend_28 { pt3dadd( 123.51, 36.6418, -113.295, 0.28 ) }
    dend_28 { pt3dadd( 123.682, 36.6138, -113.463, 0.56 ) }
    dend_28 { pt3dadd( 125.291, 36.4032, -115.178, 0.28 ) }
    dend_28 { pt3dadd( 125.796, 36.3613, -115.727, 0.56 ) }
    dend_28 { pt3dadd( 127.742, 36.3168, -117.913, 0.28 ) }
    dend_28 { pt3dadd( 128.58, 36.3221, -118.876, 0.83 ) }
    dend_28 { pt3dadd( 128.722, 36.3507, -119.069, 0.83 ) }
    dend_28 { pt3dadd( 130.505, 36.8387, -121.885, 0.28 ) }
    dend_28 { pt3dadd( 130.745, 36.9357, -122.283, 0.28 ) }
    dend_28 { pt3dadd( 131.02, 37.0661, -122.757, 0.83 ) }
    dend_28 { pt3dadd( 131.139, 37.1267, -122.957, 0.83 ) }
    dend_28 { pt3dadd( 136.098, 39.7976, -131.547, 0.28 ) }
    dend_28 { pt3dadd( 136.993, 40.3089, -133.107, 0.83 ) }
    dend_28 { pt3dadd( 139.836, 42.0702, -138.127, 0.28 ) }
    dend_28 { pt3dadd( 139.995, 42.1688, -138.407, 0.28 ) }
    dend_28 { pt3dadd( 140.694, 42.6232, -139.633, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 36.7374, 12.8064, -11.9779, 0.56 ) }
    dend_26 { pt3dadd( 39.9361, 13.4652, -12.6556, 0.56 ) }
    dend_26 { pt3dadd( 43.8447, 13.8603, -13.1309, 0.56 ) }
    dend_26 { pt3dadd( 45.8527, 13.8564, -13.2941, 0.56 ) }
    dend_26 { pt3dadd( 48.9976, 13.6293, -13.5226, 0.56 ) }
    dend_26 { pt3dadd( 51.6385, 13.3067, -13.6179, 0.56 ) }
    dend_26 { pt3dadd( 57.2276, 12.2422, -13.5562, 0.56 ) }
    dend_26 { pt3dadd( 59.9935, 11.3013, -13.2751, 0.56 ) }
    dend_26 { pt3dadd( 62.27, 10.2519, -12.8853, 0.56 ) }
    dend_26 { pt3dadd( 63.8185, 9.40591, -12.4795, 0.56 ) }
    dend_26 { pt3dadd( 66.3143, 7.77681, -11.6114, 0.83 ) }
    dend_26 { pt3dadd( 68.9579, 5.69786, -10.5593, 0.56 ) }
    dend_26 { pt3dadd( 70.7038, 4.13404, -9.79622, 0.56 ) }
    dend_26 { pt3dadd( 72.9012, 2.28583, -8.73071, 0.56 ) }
    dend_26 { pt3dadd( 74.688, 0.94356, -7.8276, 0.56 ) }
    dend_26 { pt3dadd( 75.9023, 0.159863, -7.24643, 0.56 ) }
    dend_26 { pt3dadd( 77.0704, -0.524094, -6.80562, 0.83 ) }
    dend_26 { pt3dadd( 78.8044, -1.29823, -6.32201, 0.56 ) }
    dend_26 { pt3dadd( 80.0432, -1.7577, -6.02668, 0.56 ) }
    dend_26 { pt3dadd( 82.0797, -2.46302, -5.61962, 0.83 ) }
    dend_26 { pt3dadd( 86.2038, -3.74912, -4.86848, 0.83 ) }
    dend_26 { pt3dadd( 91.401, -5.17486, -4.23857, 0.56 ) }
    dend_26 { pt3dadd( 94.5638, -6.02183, -4.0522, 0.56 ) }
    dend_26 { pt3dadd( 96.3978, -6.47015, -4.05771, 0.56 ) }
    dend_26 { pt3dadd( 98.22, -6.83519, -4.24748, 0.56 ) }
    dend_26 { pt3dadd( 100.165, -7.09839, -4.66396, 0.56 ) }
    dend_26 { pt3dadd( 103.978, -7.13259, -6.13504, 0.83 ) }
    dend_26 { pt3dadd( 106.55, -6.89447, -7.19573, 0.56 ) }
    dend_26 { pt3dadd( 108.383, -6.77581, -7.97291, 0.83 ) }
    dend_26 { pt3dadd( 111.979, -6.46011, -9.40038, 0.56 ) }
    dend_26 { pt3dadd( 113.642, -6.26377, -9.9984, 0.56 ) }
    dend_26 { pt3dadd( 115.861, -5.96546, -10.6625, 0.56 ) }
    dend_26 { pt3dadd( 120.66, -5.34314, -11.6332, 0.28 ) }
    dend_26 { pt3dadd( 125.703, -4.84738, -12.5069, 0.28 ) }
    dend_26 { pt3dadd( 128.0, -4.78071, -12.8512, 0.28 ) }
    dend_26 { pt3dadd( 130.561, -4.7954, -13.1221, 0.28 ) }
    dend_26 { pt3dadd( 132.664, -4.80156, -13.3701, 0.28 ) }
    dend_26 { pt3dadd( 134.391, -4.84343, -13.6218, 0.56 ) }
    dend_26 { pt3dadd( 138.892, -5.00357, -14.6895, 0.28 ) }
    dend_26 { pt3dadd( 140.734, -5.18762, -14.9755, 0.28 ) }
    dend_26 { pt3dadd( 142.621, -5.62649, -15.289, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 36.7374, 12.8064, -11.9779, 0.56 ) }
    dend_21 { pt3dadd( 40.1563, 10.2593, -12.1616, 0.56 ) }
    dend_21 { pt3dadd( 42.1156, 8.79975, -12.2669, 0.83 ) }
    dend_21 { pt3dadd( 43.8288, 7.52341, -12.359, 0.83 ) }
    dend_21 { pt3dadd( 45.7538, 6.08927, -12.4625, 0.56 ) }
    dend_21 { pt3dadd( 48.7133, 3.88452, -12.6215, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 17.2077, -40.9161, 6.81917, 0.56 ) }
    dend_17 { pt3dadd( 16.4664, -41.7583, 6.95019, 0.56 ) }
    dend_17 { pt3dadd( 15.712, -42.6154, 7.08352, 0.56 ) }
    dend_17 { pt3dadd( 12.6345, -47.1878, 8.21011, 0.56 ) }
    dend_17 { pt3dadd( 9.01307, -51.4856, 8.64896, 0.56 ) }
    dend_17 { pt3dadd( 5.61951, -55.9781, 8.62461, 0.56 ) }
    dend_17 { pt3dadd( 3.08018, -60.9713, 8.90724, 0.56 ) }
    dend_17 { pt3dadd( 0.704123, -65.9386, 9.97632, 0.56 ) }
    dend_17 { pt3dadd( -0.616253, -71.1278, 11.6145, 0.56 ) }
    dend_17 { pt3dadd( -1.11488, -76.6184, 12.5229, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 83/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 17.2077, -40.9161, 6.81917, 0.56 ) }
    dend_16 { pt3dadd( 18.685, -40.7699, 7.31931, 0.56 ) }
    dend_16 { pt3dadd( 21.8701, -40.4251, 8.3678, 0.56 ) }
    dend_16 { pt3dadd( 23.7571, -40.2209, 8.98895, 0.56 ) }
    dend_16 { pt3dadd( 25.6914, -40.0115, 9.6257, 0.56 ) }
    dend_16 { pt3dadd( 28.3299, -39.726, 10.4942, 0.56 ) }
    dend_16 { pt3dadd( 31.4405, -39.3893, 11.5182, 0.56 ) }
    dend_16 { pt3dadd( 33.5667, -39.224, 12.1384, 0.56 ) }
    dend_16 { pt3dadd( 42.4116, -39.5771, 13.0829, 0.56 ) }
    dend_16 { pt3dadd( 50.9166, -38.5441, 15.494, 0.56 ) }
    dend_16 { pt3dadd( 59.4808, -37.2216, 17.5176, 0.56 ) }
    dend_16 { pt3dadd( 67.9003, -35.364, 19.6999, 0.56 ) }
    dend_16 { pt3dadd( 75.8217, -33.546, 23.3077, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 41.9515, -47.0895, -1.66451, 0.56 ) }
    dend_14 { pt3dadd( 43.7953, -49.3418, -2.61634, 0.56 ) }
    dend_14 { pt3dadd( 44.859, -50.6836, -3.13704, 0.28 ) }
    dend_14 { pt3dadd( 46.3797, -52.8853, -3.89647, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 48.4316, -55.9155, -4.94172, 0.28 ) }
    dend_14 { pt3dadd( 48.6615, -56.2548, -5.05675, 0.56 ) }
    dend_14 { pt3dadd( 49.4741, -57.4869, -5.44585, 0.28 ) }
    dend_14 { pt3dadd( 49.8491, -58.0415, -5.62478, 0.83 ) }
    dend_14 { pt3dadd( 51.6455, -60.678, -6.49981, 0.28 ) }
    dend_14 { pt3dadd( 52.3636, -61.6648, -6.85029, 0.56 ) }
    dend_14 { pt3dadd( 53.4198, -63.0141, -7.36576, 0.28 ) }
    dend_14 { pt3dadd( 54.1827, -63.9582, -7.74429, 0.83 ) }
    dend_14 { pt3dadd( 56.0071, -66.0217, -8.68689, 0.83 ) }
    dend_14 { pt3dadd( 57.9308, -67.9786, -9.679, 0.28 ) }
    dend_14 { pt3dadd( 59.1221, -68.9769, -10.2634, 0.56 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 11/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 41.9515, -47.0895, -1.66451, 0.56 ) }
    dend_13 { pt3dadd( 43.7564, -47.0568, -1.3924, 0.56 ) }
    dend_13 { pt3dadd( 44.6389, -47.008, -1.33126, 0.56 ) }
    dend_13 { pt3dadd( 46.0142, -46.9036, -1.33098, 0.56 ) }
    dend_13 { pt3dadd( 47.4552, -46.7263, -1.39017, 0.56 ) }
    dend_13 { pt3dadd( 49.0209, -46.5436, -1.60376, 0.83 ) }
    dend_13 { pt3dadd( 50.6322, -46.3626, -1.84828, 0.56 ) }
    dend_13 { pt3dadd( 51.5648, -46.2641, -2.0971, 0.56 ) }
    dend_13 { pt3dadd( 52.3813, -46.2314, -2.35604, 0.56 ) }
    dend_13 { pt3dadd( 53.2404, -46.1858, -2.63879, 0.56 ) }
    dend_13 { pt3dadd( 54.919, -45.9358, -3.25563, 0.56 ) }
    dend_13 { pt3dadd( 56.0823, -45.6833, -3.63695, 0.56 ) }
    dend_13 { pt3dadd( 57.0524, -45.4574, -3.90134, 0.56 ) }
    dend_13 { pt3dadd( 58.3349, -45.1873, -4.21859, 0.56 ) }
    dend_13 { pt3dadd( 60.1185, -44.7811, -4.61431, 0.56 ) }
    dend_13 { pt3dadd( 61.043, -44.5525, -4.79357, 0.56 ) }
    dend_13 { pt3dadd( 62.2133, -44.1515, -4.95554, 0.56 ) }
    dend_13 { pt3dadd( 63.6846, -43.5618, -5.25441, 0.28 ) }
    dend_13 { pt3dadd( 69.1161, -41.9864, -6.1007, 0.28 ) }
    dend_13 { pt3dadd( 74.136, -39.6666, -7.49258, 0.28 ) }
    dend_13 { pt3dadd( 78.544, -37.0724, -9.9855, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 22.3986, 14.5665, 10.7468, 0.56 ) }
    dend_41 { pt3dadd( 26.4489, 15.9522, 6.92754, 0.56 ) }
    dend_41 { pt3dadd( 28.5639, 16.7775, 5.24543, 0.56 ) }
    dend_41 { pt3dadd( 29.0303, 16.9716, 4.88479, 0.56 ) }
    dend_41 { pt3dadd( 30.1535, 17.4274, 4.00648, 0.28 ) }
    dend_41 { pt3dadd( 31.8408, 18.1324, 2.71334, 0.28 ) }
    dend_41 { pt3dadd( 33.0294, 18.6654, 1.81477, 0.83 ) }
    dend_41 { pt3dadd( 35.3215, 19.7917, 0.352381, 0.28 ) }
    dend_41 { pt3dadd( 36.571, 20.6026, -0.521223, 0.56 ) }
    dend_41 { pt3dadd( 38.2247, 21.8458, -1.74299, 0.28 ) }
    dend_41 { pt3dadd( 39.2492, 22.6906, -2.56991, 0.83 ) }
    dend_41 { pt3dadd( 40.022, 23.434, -3.23459, 0.28 ) }
    dend_41 { pt3dadd( 41.3889, 24.8705, -4.44995, 0.28 ) }
    dend_41 { pt3dadd( 43.1204, 26.7929, -5.90009, 0.28 ) }
    dend_41 { pt3dadd( 44.4741, 28.5181, -6.94059, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 47/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 22.3986, 14.5665, 10.7468, 0.56 ) }
    dend_36 { pt3dadd( 23.5727, 14.8365, 12.5325, 0.56 ) }
    dend_36 { pt3dadd( 24.4683, 15.0425, 13.8949, 1.11 ) }
    dend_36 { pt3dadd( 26.0001, 15.3947, 16.2248, 0.56 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 51/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 48.7133, 3.88452, -12.6215, 0.56 ) }
    dend_23 { pt3dadd( 51.0678, -0.184765, -14.1541, 0.56 ) }
    dend_23 { pt3dadd( 52.2956, -1.81763, -14.7139, 0.56 ) }
    dend_23 { pt3dadd( 52.7832, -2.46615, -14.9363, 0.56 ) }
    dend_23 { pt3dadd( 53.8695, -3.91092, -15.4317, 0.28 ) }
    dend_23 { pt3dadd( 55.5641, -6.16473, -16.2045, 0.56 ) }
    dend_23 { pt3dadd( 56.9431, -7.99858, -16.8333, 0.28 ) }
    dend_23 { pt3dadd( 58.1074, -9.09122, -17.0444, 0.56 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 59/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 48.7133, 3.88452, -12.6215, 0.56 ) }
    dend_22 { pt3dadd( 52.9276, 2.29652, -9.36932, 0.56 ) }
    dend_22 { pt3dadd( 54.0179, 1.88563, -8.52784, 0.56 ) }
    dend_22 { pt3dadd( 54.694, 1.63089, -8.00613, 0.56 ) }
    dend_22 { pt3dadd( 56.4814, 0.95734, -6.62672, 0.56 ) }
    dend_22 { pt3dadd( 57.9395, 0.407872, -5.50143, 0.56 ) }
    dend_22 { pt3dadd( 64.6586, -3.67385, -1.35874, 0.56 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 26.0001, 15.3947, 16.2248, 0.56 ) }
    dend_40 { pt3dadd( 26.9235, 16.9592, 16.7402, 0.56 ) }
    dend_40 { pt3dadd( 28.1531, 18.9741, 17.3963, 0.56 ) }
    dend_40 { pt3dadd( 30.1032, 22.1697, 18.437, 0.28 ) }
    dend_40 { pt3dadd( 32.6118, 26.2805, 19.7757, 0.28 ) }
    dend_40 { pt3dadd( 33.58, 27.8671, 20.2924, 0.28 ) }
    dend_40 { pt3dadd( 34.5646, 29.4805, 20.8178, 0.28 ) }
    dend_40 { pt3dadd( 35.2505, 30.5653, 21.1707, 0.56 ) }
    dend_40 { pt3dadd( 39.1942, 37.4778, 23.8982, 0.56 ) }
    dend_40 { pt3dadd( 42.4482, 44.0785, 27.9257, 0.56 ) }
    dend_40 { pt3dadd( 46.8702, 49.8653, 32.1542, 0.56 ) }
    dend_40 { pt3dadd( 52.6633, 54.443, 36.295, 0.56 ) }
    dend_40 { pt3dadd( 58.3385, 58.8891, 40.7278, 0.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 79/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 26.0001, 15.3947, 16.2248, 0.83 ) }
    dend_37 { pt3dadd( 26.8989, 12.7684, 16.2765, 0.83 ) }
    dend_37 { pt3dadd( 27.4407, 11.1852, 16.3077, 0.83 ) }
    dend_37 { pt3dadd( 32.6429, 0.81043, 17.4692, 0.83 ) }
    dend_37 { pt3dadd( 37.6469, -9.69986, 17.9378, 0.83 ) }
    dend_37 { pt3dadd( 41.6417, -20.5921, 17.2228, 0.83 ) }
    dend_37 { pt3dadd( 44.2045, -31.914, 16.7597, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 86/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 58.1074, -9.09122, -17.0444, 0.56 ) }
    dend_25 { pt3dadd( 59.5676, -8.28879, -17.2888, 0.56 ) }
    dend_25 { pt3dadd( 61.3708, -7.29768, -17.5906, 0.28 ) }
    dend_25 { pt3dadd( 62.25, -6.81456, -17.7378, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 90/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 58.1074, -9.09122, -17.0444, 0.28 ) }
    dend_24 { pt3dadd( 59.5224, -11.8228, -17.1592, 0.28 ) }
    dend_24 { pt3dadd( 60.7437, -13.3088, -17.1016, 0.56 ) }
    dend_24 { pt3dadd( 61.6844, -14.0426, -17.1729, 0.56 ) }
    dend_24 { pt3dadd( 63.4251, -14.9638, -17.4115, 0.56 ) }
    dend_24 { pt3dadd( 64.1772, -15.2809, -17.5766, 0.56 ) }
    dend_24 { pt3dadd( 66.5336, -16.119, -18.1536, 0.83 ) }
    dend_24 { pt3dadd( 69.7249, -16.7265, -19.0523, 0.83 ) }
    dend_24 { pt3dadd( 73.3082, -17.1037, -20.0526, 0.56 ) }
    dend_24 { pt3dadd( 74.3976, -17.1708, -20.3881, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( 76.6727, -17.1292, -21.1614, 0.56 ) }
    dend_24 { pt3dadd( 78.448, -17.0254, -21.8566, 0.28 ) }
    dend_24 { pt3dadd( 79.6971, -16.9394, -22.4346, 0.28 ) }
    dend_24 { pt3dadd( 80.7314, -16.8894, -22.9412, 0.56 ) }
    dend_24 { pt3dadd( 82.6147, -16.8473, -23.7455, 0.28 ) }
    dend_24 { pt3dadd( 84.9482, -16.6942, -24.7796, 0.28 ) }
    dend_24 { pt3dadd( 85.7133, -16.5735, -25.1198, 0.56 ) }
    dend_24 { pt3dadd( 87.2648, -16.2402, -25.945, 0.83 ) }
    dend_24 { pt3dadd( 88.1512, -16.0168, -26.4617, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 44.2045, -31.914, 16.7597, 0.56 ) }
    dend_39 { pt3dadd( 48.9407, -39.9431, 14.3505, 0.56 ) }
    dend_39 { pt3dadd( 55.2983, -47.1014, 13.0064, 0.56 ) }
    dend_39 { pt3dadd( 60.0763, -55.3294, 11.4881, 0.56 ) }
    dend_39 { pt3dadd( 63.1858, -64.2489, 9.68737, 0.56 ) }
    dend_39 { pt3dadd( 66.484, -72.6407, 6.36394, 0.56 ) }
    dend_39 { pt3dadd( 71.3426, -80.734, 4.44387, 0.56 ) }
    dend_39 { pt3dadd( 77.1333, -88.4201, 3.60313, 0.56 ) }
    dend_39 { pt3dadd( 81.6371, -96.9576, 3.80141, 0.56 ) }
    dend_39 { pt3dadd( 84.9184, -105.923, 5.34618, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 19/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 44.2045, -31.914, 16.7597, 0.56 ) }
    dend_38 { pt3dadd( 46.4591, -40.7183, 19.7589, 0.56 ) }
    dend_38 { pt3dadd( 47.5943, -49.2504, 23.9819, 0.56 ) }
    dend_38 { pt3dadd( 51.0342, -56.8465, 28.7912, 0.56 ) }
    dend_38 { pt3dadd( 55.093, -64.7692, 32.4099, 0.56 ) }
    dend_38 { pt3dadd( 58.9056, -73.3271, 34.398, 0.56 ) }
    dend_38 { pt3dadd( 61.3758, -82.3922, 36.1313, 0.56 ) }
    dend_38 { pt3dadd( 61.8856, -91.8303, 37.3997, 0.56 ) }
    dend_38 { pt3dadd( 61.66, -101.052, 39.8777, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_47 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_52 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_51 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_43 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_45 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_37 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_38 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_11 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_19 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_8 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_12 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_29 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 7
    dend_31 nseg = 3
    dend_49 nseg = 3
    dend_46 nseg = 3
    dend_30 nseg = 5
    dend_52 nseg = 5
    dend_51 nseg = 3
    dend_43 nseg = 3
    dend_27 nseg = 3
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 7
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_42 nseg = 5
    dend_28 nseg = 7
    dend_26 nseg = 5
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_40 nseg = 3
    dend_37 nseg = 3
    dend_39 nseg = 5
    dend_38 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_NBC_98c1faeec7_0_0


