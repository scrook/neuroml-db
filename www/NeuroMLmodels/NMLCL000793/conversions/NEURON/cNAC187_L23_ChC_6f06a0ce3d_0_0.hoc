// Cell: cNAC187_L23_ChC_6f06a0ce3d_0_0
/*
{
  "id" : "cNAC187_L23_ChC_6f06a0ce3d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.247476, -12.3185, -1.01707, 2.36383", "0.272374, -11.1472, -0.92957, 3.66321", "0.297273, -9.97598, -0.842075, 5.22974", "0.322171, -8.80474, -0.75458, 6.26105", "0.34707, -7.63351, -0.667085, 6.92536", "0.371968, -6.46227, -0.57959, 7.55364", "0.396866, -5.29103, -0.492094, 8.36178", "0.421765, -4.1198, -0.404599, 9.09467", "0.446663, -2.94856, -0.317104, 9.82452", "0.471562, -1.77733, -0.229609, 10.5969", "0.49646, -0.606089, -0.142114, 10.9527", "0.521359, 0.565147, -0.0546186, 11.1935", "0.546257, 1.73638, 0.0328765, 11.3346", "0.571156, 2.90762, 0.120372, 11.3156", "0.596054, 4.07886, 0.207867, 11.2804", "0.620953, 5.25009, 0.295362, 11.0098", "0.645851, 6.42133, 0.382857, 10.6994", "0.67075, 7.59256, 0.470352, 10.2417", "0.695648, 8.7638, 0.557847, 9.96532", "0.720546, 9.93504, 0.645343, 4.49434", "0.745445, 11.1063, 0.732838, 2.79989" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "5.17534, 6.99334, -4.88165, 0.29", "5.6613, 7.56712, -4.65116, 0.29", "6.1803, 8.19557, -4.43221, 0.37", "6.73518, 8.88441, -4.22563, 0.52", "7.05815, 9.29553, -4.11867, 0.52", "7.51372, 9.86699, -3.98962, 0.81", "7.78147, 10.2207, -3.92021, 0.81", "8.08138, 10.6634, -3.83101, 0.29", "8.35427, 11.1421, -3.74307, 0.59", "8.58051, 11.5957, -3.67576, 0.59", "8.81913, 12.1127, -3.59421, 0.59", "9.13463, 12.8133, -3.47744, 0.29", "9.5876, 13.8137, -3.31626, 0.29", "9.88129, 14.43, -3.22298, 0.81", "10.0768, 14.8113, -3.17117, 0.81", "10.3508, 15.3136, -3.11568, 0.52", "10.7718, 15.982, -3.06606, 0.29", "11.3648, 16.8324, -3.02916, 0.22", "11.7165, 17.2939, -3.03191, 0.29", "12.0963, 17.7683, -3.03719, 0.29", "12.8801, 18.7246, -3.05033, 0.22", "13.6343, 19.6141, -3.06596, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.00466, -9.38466, 5.49835, 1.11", "-1.00466, -9.38466, 5.49835, 1.11", "-1.57214, -10.0604, 5.52343, 1.11", "-2.28788, -11.0096, 5.58534, 0.88", "-2.80346, -11.7655, 5.69412, 0.88", "-3.53496, -12.9876, 5.9663, 1.18", "-3.99497, -13.9035, 6.26214, 1.18", "-4.50509, -15.3379, 6.86283, 0.81", "-4.61693, -16.001, 7.20251, 1.11", "-4.5367, -17.0316, 7.7832, 1.11", "-4.28373, -17.9062, 8.33127, 0.96", "-3.77132, -19.0457, 9.09277, 1.11", "-3.35648, -19.8406, 9.62774, 1.25", "-3.00637, -20.4602, 10.0299, 0.96", "-2.48837, -21.5833, 10.6479, 1.03", "-2.20382, -22.4819, 11.0252, 1.03", "-2.13603, -23.0534, 11.2217, 0.59", "-2.20333, -23.8171, 11.4887, 0.88", "-2.31034, -24.169, 11.6361, 0.88", "-2.84205, -25.2333, 12.1431, 0.66", "-3.16425, -25.6742, 12.4035, 0.74", "-3.69176, -26.3368, 12.8152, 0.66", "-4.32786, -27.2027, 13.3673, 0.88", "-4.75258, -27.8847, 13.779, 0.81", "-5.01458, -28.4092, 14.0828, 0.44", "-5.41207, -29.4874, 14.6794, 0.81", "-5.68999, -30.4861, 15.1601, 0.81", "-5.88869, -31.5661, 15.5572, 0.59", "-5.99088, -32.5516, 15.8213, 1.11", "-6.01706, -33.3762, 15.9693, 1.33", "-6.00195, -34.0844, 16.0652, 1.11", "-5.93404, -35.0537, 16.17, 0.81", "-5.84445, -35.9582, 16.3264, 0.66", "-5.7395, -36.5667, 16.5167, 1.18", "-5.47018, -37.5363, 16.9929, 0.96", "-5.24109, -38.1966, 17.4056, 0.74", "-4.91764, -39.0322, 18.0323, 0.66", "-4.55158, -39.9446, 18.8025, 0.88", "-4.15356, -41.0268, 19.8302, 1.18", "-3.89035, -41.9284, 20.7334, 0.66", "-3.78965, -42.5248, 21.3276, 0.59", "-3.76786, -43.0781, 21.7957, 0.74", "-3.81714, -43.7078, 22.2248, 0.44", "-3.98676, -44.6239, 22.6701, 0.44", "-4.14479, -45.1903, 22.8304, 0.44", "-4.42575, -46.0607, 22.9341, 0.37", "-4.64413, -46.934, 23.148, 0.37", "-4.77293, -47.5324, 23.4185, 0.96", "-4.85373, -47.9306, 23.6726, 0.96", "-5.02023, -48.6819, 24.3036, 0.44", "-5.22303, -49.3941, 25.0103, 0.81", "-5.9457, -51.7295, 27.4955, 0.88", "-6.21662, -52.5965, 28.4287, 0.88", "-6.31832, -52.9857, 28.82, 0.88", "-6.46415, -53.7176, 29.4717, 0.66", "-6.62586, -54.8029, 30.3136, 0.52", "-6.7058, -55.5878, 30.739, 0.59", "-6.74361, -56.3731, 30.9359, 0.59", "-6.67772, -57.3583, 31.1596, 0.74", "-6.60895, -57.9344, 31.3008, 0.74", "-6.40481, -59.3927, 31.7152, 0.74", "-6.25446, -60.3089, 32.0736, 0.52", "-6.15309, -60.8903, 32.346, 0.66", "-6.03483, -61.4922, 32.6375, 0.66", "-5.82446, -62.2909, 33.0304, 0.37", "-5.63686, -62.8261, 33.2488, 0.37", "-5.34784, -63.5174, 33.4329, 0.37", "-5.03895, -64.2814, 33.5955, 0.37", "-4.79391, -64.9131, 33.7022, 0.37", "-4.36509, -65.9281, 33.8414, 0.37", "-4.10081, -66.4727, 33.9203, 0.52", "-3.91337, -66.8628, 33.9739, 0.66", "-3.66257, -67.45, 34.0603, 0.52", "-3.37238, -68.235, 34.1968, 0.52", "-3.09147, -69.0324, 34.3514, 0.74", "-2.85513, -69.7098, 34.464, 0.88", "-2.60068, -70.4195, 34.5904, 0.96", "-2.44129, -70.8556, 34.6715, 0.96", "-2.27751, -71.2991, 34.7561, 0.81", "-2.02419, -72.0923, 34.8991, 1.18", "-1.89108, -72.6543, 35.0039, 1.4", "-1.80477, -73.0993, 35.0747, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.87466, -10.9902, -0.261648, 2.87", "-2.87466, -10.9902, -0.261648, 2.87", "-3.49776, -11.591, -0.202839, 2.87", "-4.69624, -12.7657, -0.1143, 2.21", "-5.743, -13.7916, -0.0369705, 2.21", "-6.50218, -14.5356, 0.0191148, 2.21", "-7.46505, -15.4793, 0.0902474, 2.21", "-8.46693, -16.4551, 0.156926, 2.21", "-9.49753, -17.4446, 0.208416, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.71466, 9.07384, 3.05835, 3.83", "-4.02636, 9.52049, 3.35325, 3.83", "-4.75619, 10.5663, 4.04373, 3.32", "-5.37536, 11.4535, 4.62952, 3.32", "-5.93224, 12.2515, 5.15638, 3.39", "-6.69326, 13.3419, 5.87637, 3.46" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.19534, 7.62034, -4.07165, 1.99", "4.19534, 7.62034, -4.07165, 1.99", "4.32407, 8.2915, -3.72732, 1.03", "4.42751, 8.90304, -3.37542, 1.03", "4.55, 9.76049, -2.84661, 1.03", "4.61837, 10.3182, -2.49793, 1.03", "4.6861, 10.9581, -2.10561, 1.03", "4.76834, 11.8965, -1.53771, 1.11", "4.80387, 12.4198, -1.19727, 1.33", "4.83347, 13.0388, -0.788438, 1.33", "4.85056, 13.3581, -0.584643, 1.47", "4.88801, 13.7497, -0.345751, 1.47", "4.96857, 14.3811, -0.00504364, 1.25", "5.13168, 15.3576, 0.435725, 1.25", "5.23833, 15.8483, 0.626037, 1.4", "5.44118, 16.5812, 0.881032, 1.4", "5.71003, 17.4619, 1.11795, 1.18", "5.93022, 18.1785, 1.23263, 1.25", "6.11029, 18.7946, 1.26571, 1.11", "6.33788, 19.6725, 1.19514, 0.88", "6.51948, 20.4795, 1.07329, 0.88", "6.71167, 21.5857, 0.848848, 0.88", "6.83144, 22.6639, 0.589395, 1.4", "6.88478, 23.5633, 0.362585, 1.55", "6.89451, 24.763, 0.0842324, 1.84", "6.87809, 25.2543, -0.0162059, 1.84", "6.8383, 26.1702, -0.16895, 1.33", "6.8132, 27.2425, -0.280394, 0.96", "6.83744, 28.15, -0.333993, 0.96", "6.95457, 29.3731, -0.367163, 1.03", "7.06893, 29.9538, -0.358945, 1.25", "7.33389, 30.795, -0.334608, 1.47", "7.59302, 31.3552, -0.313083, 1.47", "8.07673, 32.1337, -0.278008, 1.03", "8.51763, 32.6984, -0.266375, 1.03", "9.08451, 33.3219, -0.258496, 1.47", "9.62776, 33.8762, -0.2362, 1.25", "9.98978, 34.226, -0.205462, 1.55", "10.6868, 34.8846, -0.13693, 0.81", "11.3418, 35.4996, -0.0589949, 0.81", "11.8512, 35.982, 0.0148929, 1.25", "12.3059, 36.4274, 0.0986434, 1.47", "12.7335, 36.8659, 0.199382, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000043190095856
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.745445, 11.1063, 0.732838, 0.886183", "1.06425, 26.1029, 0.732838, 0.886183", "1.38305, 41.0995, 0.732838, 0.886183" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.49753, -17.4446, 0.208416, 0.96", "-9.66695, -17.8559, 0.701724, 0.96", "-10.1046, -18.8398, 1.82702, 0.74", "-10.9037, -20.6214, 3.73785, 1.11", "-11.3961, -21.6776, 4.78167, 0.81", "-11.731, -22.3657, 5.38881, 0.66", "-12.0129, -22.9195, 5.82259, 0.44", "-12.3569, -23.5262, 6.24898, 0.66", "-12.6213, -23.943, 6.45946, 1.03", "-12.9961, -24.5959, 6.56656, 1.03", "-13.489, -25.5161, 6.58431, 0.81", "-13.8421, -26.2985, 6.55953, 0.81", "-14.1046, -27.0545, 6.50648, 0.96", "-14.4259, -28.4137, 6.37977, 0.74", "-14.6887, -30.1997, 6.20143, 0.52", "-14.7348, -30.9519, 6.10513, 0.88", "-14.7217, -32.1473, 5.88695, 0.74", "-14.6169, -33.6357, 5.53792, 0.59", "-14.4562, -35.0031, 5.15427, 0.74", "-14.2661, -36.369, 4.76152, 0.59", "-14.0529, -38.1298, 4.25324, 0.74", "-13.953, -39.5836, 3.8331, 0.81", "-13.9444, -40.7535, 3.50848, 0.52", "-13.988, -41.6929, 3.27753, 0.66", "-14.1001, -42.8655, 3.0462, 0.59", "-14.2824, -44.122, 2.90857, 0.74", "-14.4921, -45.1091, 2.90849, 0.74", "-14.8176, -46.2742, 3.00419, 0.52", "-15.1268, -47.1672, 3.1053, 0.96", "-15.3256, -47.7197, 3.16868, 1.11", "-15.5531, -48.4372, 3.23835, 1.25", "-15.7712, -49.1808, 3.305, 0.96", "-16.0332, -50.1074, 3.37133, 0.96", "-16.3748, -51.3117, 3.40498, 0.52", "-16.6228, -52.3033, 3.40095, 0.59", "-16.8295, -53.3087, 3.37675, 0.81", "-16.9655, -54.275, 3.30708, 0.96", "-17.0189, -55.1765, 3.19996, 0.96", "-17.0128, -56.451, 2.98306, 0.74", "-16.9526, -57.853, 2.69188, 0.74", "-16.9183, -58.7849, 2.46527, 1.03", "-16.8868, -60.041, 2.13254, 1.25", "-16.843, -61.1354, 1.80791, 0.66", "-16.8148, -61.8884, 1.62468, 0.52", "-16.8008, -62.725, 1.47963, 0.74", "-16.8141, -63.7851, 1.38819, 0.74", "-16.8365, -64.7646, 1.42839, 0.66", "-16.8673, -65.7679, 1.58701, 0.66", "-16.9019, -67.7539, 2.07165, 0.66", "-16.8816, -68.8076, 2.39157, 0.74", "-16.8089, -70.2179, 2.86602, 0.74", "-16.7139, -71.8202, 3.46348, 0.88", "-16.6864, -72.7808, 3.83303, 1.11", "-16.697, -73.9105, 4.26497, 1.11", "-16.718, -75.2714, 4.73179, 0.88", "-16.7474, -76.579, 5.20552, 0.74", "-16.764, -78.1133, 5.71289, 0.59", "-16.717, -79.3936, 6.03493, 0.44", "-16.668, -79.8836, 6.12805, 0.74", "-16.5028, -80.8274, 6.25702, 0.88", "-16.2461, -81.771, 6.39242, 0.88", "-15.7379, -83.2395, 6.62908, 0.66", "-15.3781, -84.1698, 6.82193, 0.81", "-15.0867, -85.0245, 7.06196, 0.81", "-14.9263, -85.8585, 7.32254, 0.59", "-14.8778, -87.2221, 7.72789, 0.74", "-14.9573, -88.0526, 7.92501, 0.96", "-15.1072, -88.8611, 8.04029, 0.96", "-15.3673, -89.9737, 8.03777, 0.66", "-15.7006, -91.3589, 7.85188, 0.44", "-15.9397, -92.4225, 7.5847, 0.81", "-16.1681, -93.6712, 7.18002, 0.81", "-16.3884, -95.3208, 6.60432, 0.37", "-16.4812, -96.3605, 6.22463, 0.81", "-16.5169, -97.2715, 5.90452, 1.03", "-16.5031, -98.1698, 5.64934, 0.52", "-16.4256, -99.241, 5.47316, 0.29", "-16.3538, -99.7678, 5.44091, 0.88", "-16.2894, -100.16, 5.44754, 1.11", "-16.1803, -100.713, 5.4488, 1.18", "-16.0122, -101.552, 5.43095, 0.81", "-15.7807, -102.799, 5.37277, 0.44", "-15.6442, -103.611, 5.28357, 0.29", "-15.5355, -104.389, 5.18968, 0.29", "-15.4618, -105.247, 5.08139, 0.59", "-15.4531, -105.575, 5.04326, 0.88", "-15.4752, -106.093, 5.00394, 0.88", "-15.5503, -106.751, 5.0178, 0.59", "-15.674, -107.669, 5.16783, 0.29", "-15.754, -108.202, 5.30563, 0.66", "-15.8544, -108.806, 5.52306, 0.81", "-15.9621, -109.465, 5.78082, 1.03", "-16.0603, -110.0, 5.99065, 1.18", "-16.2004, -110.605, 6.22384, 1.18", "-16.298, -110.972, 6.35009, 1.25", "-16.5396, -111.804, 6.5851, 0.96", "-16.7854, -112.599, 6.75659, 0.59", "-17.0776, -113.581, 6.90677, 0.37", "-17.3065, -114.393, 6.97838, 0.22", "-17.4288, -114.849, 6.99428, 0.29", "-17.6524, -115.758, 6.99346, 0.44", "-17.7873, -116.336, 6.97166, 1.03", "-17.9536, -117.144, 6.93814, 1.18", "-18.0596, -117.744, 6.90519, 1.18", "-18.2528, -118.876, 6.83679, 0.59", "-18.4241, -119.726, 6.81451, 0.59", "-18.6039, -120.505, 6.81179, 0.59", "-18.8947, -121.737, 6.78332, 0.81", "-19.0368, -122.333, 6.76083, 0.88", "-19.3538, -123.637, 6.70617, 0.52", "-19.6786, -125.034, 6.64586, 0.52", "-19.9585, -126.322, 6.61721, 0.59", "-20.1556, -127.329, 6.58773, 0.29", "-20.259, -127.967, 6.55495, 0.29", "-20.3447, -128.635, 6.51134, 0.88", "-20.4752, -129.937, 6.38929, 0.29", "-20.5702, -130.903, 6.27068, 1.03", "-20.6696, -131.799, 6.13069, 1.25", "-20.7726, -132.676, 5.95597, 1.03", "-20.9096, -134.077, 5.58312, 0.44", "-20.988, -135.023, 5.25368, 0.44", "-21.0929, -136.051, 4.82057, 0.44", "-21.2642, -137.375, 4.18221, 0.44", "-21.4574, -138.664, 3.55147, 0.66", "-21.6286, -139.791, 2.96484, 1.55", "-21.7768, -140.75, 2.44022, 1.92", "-21.9589, -141.948, 1.8232, 0.66", "-22.1967, -143.3, 1.19895, 0.59", "-22.4079, -144.244, 0.839516, 0.29", "-22.7177, -145.37, 0.502806, 0.29", "-23.0076, -146.312, 0.296326, 0.29", "-23.5087, -147.863, 0.0689714, 0.29", "-23.8264, -148.831, -0.0174819, 1.25", "-24.147, -149.846, -0.0553248, 1.33", "-24.5714, -151.253, -0.0789659, 0.52", "-24.737, -151.867, -0.0723522, 0.52", "-24.9065, -152.717, -0.0626184, 0.66", "-25.0173, -153.555, -0.0497487, 0.37", "-25.0507, -154.298, -0.0291284, 0.29", "-25.0258, -154.946, 0.00109115, 0.81", "-24.9423, -155.667, 0.0510643, 0.96", "-24.8045, -156.537, 0.129823, 0.59", "-24.6698, -157.255, 0.232575, 0.44", "-24.6403, -157.401, 0.259648, 0.37", "-24.4009, -158.69, 0.526904, 0.22", "-24.2943, -159.255, 0.656673, 0.52", "-24.2546, -159.469, 0.70948, 0.52", "-23.9405, -161.176, 1.16819, 0.22", "-23.8727, -161.529, 1.27223, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-9.49753, -17.4446, 0.208416, 1.62", "-11.1398, -18.2453, 0.732744, 1.62", "-12.3563, -18.8385, 1.12111, 1.62", "-13.2921, -19.2948, 1.4199, 1.84", "-14.1483, -19.7123, 1.69323, 2.06", "-15.0085, -20.1317, 1.96787, 2.36", "-15.5754, -20.4081, 2.14886, 2.8" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.69326, 13.3419, 5.87637, 1.25", "-7.13662, 14.836, 5.90136, 1.25", "-7.35985, 15.6963, 6.09035, 1.4", "-7.51961, 16.3657, 6.30819, 1.4", "-7.72267, 17.3092, 6.66601, 1.47", "-7.80084, 17.6724, 6.80376, 1.69", "-7.92301, 18.24, 7.01903, 1.69", "-8.10181, 19.2735, 7.63277, 1.62", "-8.17814, 19.8912, 8.08709, 1.55", "-8.23851, 20.4567, 8.56033, 1.69" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.69326, 13.3419, 5.87637, 1.77", "-7.90834, 13.9856, 7.27867, 1.77", "-9.07308, 14.6026, 8.62285, 1.62", "-9.79734, 14.9863, 9.4587, 1.55", "-10.4763, 15.346, 10.2424, 1.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "12.7335, 36.8659, 0.199382, 0.59", "13.1789, 38.2038, -0.181326, 0.59", "13.385, 38.7328, -0.312558, 0.59", "13.6443, 39.2431, -0.423625, 0.74", "13.9528, 39.7105, -0.509936, 0.74", "14.3155, 40.1645, -0.593929, 0.88", "14.6212, 40.5198, -0.659122, 1.03", "15.1523, 41.089, -0.730207, 0.59", "15.6196, 41.6043, -0.794282, 0.88", "16.0712, 42.1465, -0.884859, 0.88", "16.4768, 42.6957, -1.01008, 0.66", "16.7988, 43.256, -1.20106, 0.52", "16.9431, 43.7258, -1.50298, 0.52", "17.0459, 44.3421, -2.07626, 0.52", "17.0602, 44.9372, -2.74623, 0.96", "17.0222, 45.2347, -3.127, 1.18", "16.9415, 45.5402, -3.55411, 1.18", "16.5729, 46.518, -5.04164, 0.81", "16.4065, 46.9592, -5.70316, 0.59", "16.2404, 47.5254, -6.51778, 0.74", "16.1694, 47.9257, -7.02189, 0.66", "16.1565, 48.2921, -7.39513, 0.66", "16.2403, 48.7926, -7.82993, 0.66", "16.495, 49.5492, -8.36332, 0.81", "16.8362, 50.2727, -8.8663, 1.03", "17.1369, 50.7613, -9.20435, 0.96", "17.4866, 51.2861, -9.56683, 0.81", "18.1713, 52.3503, -10.2802, 0.81", "18.3899, 52.7453, -10.5139, 1.03", "18.6017, 53.2753, -10.7824, 1.03", "18.7181, 53.7384, -10.9674, 1.11", "18.7985, 54.336, -11.1695, 1.11", "18.8227, 54.9829, -11.3396, 0.81", "18.7995, 56.0052, -11.519, 0.74", "18.7849, 56.7481, -11.6345, 0.88", "18.7899, 57.3907, -11.7305, 0.88", "18.8205, 57.8401, -11.7978, 0.52", "18.9279, 58.5705, -11.9035, 0.37", "18.9775, 58.7776, -11.9354, 0.37", "19.1663, 59.3583, -12.0478, 0.37", "19.5152, 60.1974, -12.2216, 0.74", "19.7372, 60.7087, -12.3245, 0.96", "19.9107, 61.1563, -12.4189, 1.18", "19.9913, 61.4333, -12.4793, 1.18", "20.0804, 62.1378, -12.6225, 0.88", "20.0599, 62.8118, -12.7454, 0.29", "19.9251, 63.6654, -12.8767, 0.88", "19.7552, 64.3027, -12.9711, 0.88", "19.5215, 64.9693, -13.0618, 0.88", "19.168, 65.8449, -13.1892, 0.59", "18.9296, 66.3947, -13.267, 0.59", "18.7238, 66.9121, -13.344, 0.96", "18.4979, 67.6743, -13.4589, 0.88", "18.3951, 68.3429, -13.588, 0.52", "18.3901, 69.2045, -13.7928, 0.52", "18.4755, 69.8771, -14.0049, 0.52", "18.6463, 70.6285, -14.2765, 0.81", "18.8313, 71.2271, -14.5022, 0.81", "19.2016, 72.1463, -14.8615, 0.81", "19.4161, 72.6469, -15.0594, 0.59", "19.7073, 73.3812, -15.3519, 0.74", "19.855, 73.8537, -15.5607, 0.88", "19.9902, 74.5897, -15.9076, 0.37", "20.054, 75.268, -16.2181, 0.37", "20.0849, 75.7564, -16.4153, 0.37", "20.1333, 76.2999, -16.6434, 0.37", "20.2003, 76.6846, -16.8162, 0.37", "20.3451, 77.175, -17.0717, 0.52", "20.5073, 77.5518, -17.2757, 0.81", "20.7217, 77.974, -17.4778, 0.81", "20.9253, 78.3376, -17.6286, 0.81", "21.2107, 78.8714, -17.8225, 0.74", "21.4261, 79.3375, -17.9655, 0.59", "21.6036, 79.8426, -18.1044, 0.52", "21.7087, 80.2871, -18.2241, 0.88", "21.7763, 80.8167, -18.3679, 0.88", "21.8057, 81.4819, -18.5516, 0.44", "21.7982, 82.0674, -18.7356, 0.44", "21.7835, 82.577, -18.9312, 0.44", "21.7775, 83.1778, -19.2224, 0.81", "21.7928, 83.7455, -19.5363, 0.81", "21.8339, 84.3044, -19.8681, 0.59", "21.9131, 84.9656, -20.2722, 0.59", "21.9773, 85.3686, -20.5157, 0.88", "22.0884, 85.96, -20.8607, 0.88", "22.1963, 86.5877, -21.1972, 0.88", "22.2367, 86.9799, -21.3748, 0.96", "22.2323, 87.393, -21.5202, 0.96", "22.1539, 87.904, -21.6427, 0.44", "22.0051, 88.465, -21.7446, 0.44", "21.891, 88.8489, -21.7953, 0.44", "21.6861, 89.5617, -21.904, 0.81", "21.5532, 90.1043, -22.0011, 0.81", "21.3848, 90.8674, -22.1472, 1.11", "21.3113, 91.2396, -22.2175, 1.11", "21.1772, 91.9896, -22.3497, 0.37", "21.0994, 92.526, -22.4443, 0.37", "20.9817, 93.3933, -22.5974, 0.52", "20.9067, 93.9319, -22.6872, 0.52", "20.8166, 94.7055, -22.8414, 0.88", "20.7727, 95.1961, -22.9648, 0.88", "20.7357, 95.8971, -23.1708, 0.88", "20.7534, 96.289, -23.302, 0.96", "20.9004, 96.9974, -23.6182, 0.66", "21.2258, 97.9397, -24.1455, 0.66", "21.4763, 98.5233, -24.5406, 0.66", "21.6514, 98.9213, -24.8461, 0.59", "21.8653, 99.4351, -25.2841, 0.74", "22.0745, 100.007, -25.7968, 0.59", "22.2269, 100.48, -26.2262, 0.88", "22.3515, 100.974, -26.6493, 0.88", "22.4887, 101.468, -27.0796, 0.88", "22.5678, 101.703, -27.2848, 0.88", "22.8182, 102.303, -27.7535, 0.37", "23.0551, 102.745, -28.0363, 0.81", "23.2631, 103.04, -28.1975, 0.81", "23.8138, 103.724, -28.4863, 0.37", "24.1518, 104.137, -28.6163, 0.37", "24.4829, 104.573, -28.7089, 0.81", "24.7612, 105.011, -28.774, 0.81", "24.9321, 105.374, -28.8183, 0.81", "25.0968, 105.86, -28.8963, 0.52", "25.1678, 106.206, -28.9726, 0.59", "25.2441, 106.707, -29.1413, 0.44", "25.3187, 107.237, -29.3623, 0.59", "25.3906, 107.752, -29.5993, 0.66", "25.4976, 108.585, -29.9903, 0.44", "25.5849, 109.277, -30.3138, 1.33", "25.6367, 109.687, -30.4929, 1.33", "25.7158, 110.41, -30.7761, 0.37", "25.7842, 111.012, -30.9677, 0.29", "25.8404, 111.56, -31.1072, 0.52", "25.8538, 111.852, -31.1546, 0.74", "25.8218, 112.423, -31.2246, 0.44", "25.7235, 112.888, -31.2695, 0.74", "25.5649, 113.254, -31.3109, 0.74", "25.2795, 113.724, -31.3793, 0.44", "24.948, 114.184, -31.4983, 0.74", "24.6332, 114.569, -31.6435, 0.74", "24.4041, 114.832, -31.7918, 0.88", "24.0508, 115.246, -32.0823, 0.59", "23.8021, 115.559, -32.3262, 0.44", "23.4775, 116.048, -32.7208, 0.74", "23.304, 116.387, -32.9793, 0.59", "22.9949, 117.12, -33.4807, 1.25", "22.8992, 117.369, -33.6339, 1.4", "22.7211, 117.816, -33.8744, 0.88", "22.4685, 118.331, -34.1139, 0.59", "22.2048, 118.775, -34.2865, 0.59", "21.8603, 119.261, -34.4523, 0.66", "21.4866, 119.656, -34.5653, 0.52", "21.0635, 120.035, -34.6812, 0.37", "20.6166, 120.406, -34.7994, 0.52", "20.3865, 120.589, -34.8604, 0.66", "20.1411, 120.799, -34.9397, 0.66", "19.7946, 121.286, -35.1675, 0.29", "19.6593, 121.775, -35.4688, 0.29", "19.6109, 122.218, -35.8249, 0.66", "19.5854, 122.507, -36.1282, 0.66", "19.5165, 122.79, -36.5345, 0.52", "19.3202, 123.084, -37.1715, 0.66", "19.0264, 123.255, -37.7878, 0.81", "18.7204, 123.335, -38.241, 0.96", "18.3416, 123.396, -38.6909, 0.96", "17.7891, 123.478, -39.2378, 0.81", "17.1983, 123.577, -39.7325, 0.74", "16.6396, 123.729, -40.1288, 0.52", "16.1945, 123.926, -40.3973, 0.66", "15.8848, 124.122, -40.5535, 0.66", "15.3279, 124.579, -40.7779, 0.37", "14.9683, 124.934, -40.9013, 0.37", "14.2933, 125.697, -41.1357, 0.29", "13.9898, 126.084, -41.2655, 0.52", "13.7678, 126.403, -41.391, 0.52", "13.487, 126.843, -41.5873, 0.29", "13.2628, 127.2, -41.7607, 0.29", "12.9034, 127.765, -42.0794, 0.59", "12.5847, 128.241, -42.4184, 0.52", "12.3271, 128.665, -42.7526, 0.74", "12.2278, 128.856, -42.9138, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "12.7335, 36.8659, 0.199382, 0.96", "13.0018, 38.8403, 0.794779, 0.96", "13.1606, 39.737, 1.01505, 0.96", "13.3206, 40.4236, 1.12259, 0.81", "13.6754, 41.8245, 1.18844, 0.88", "13.9299, 42.8024, 1.13361, 0.88", "14.1466, 43.7435, 1.01565, 0.81", "14.366, 44.8431, 0.717089, 0.96", "14.5513, 45.9905, 0.347117, 0.74", "14.7295, 47.1436, -0.067976, 0.88", "14.8287, 48.1777, -0.469887, 0.88", "14.8468, 49.4044, -0.933366, 0.88", "14.7514, 50.5394, -1.33632, 1.03", "14.5095, 51.6471, -1.68661, 1.03", "14.1829, 52.5599, -1.91512, 0.88", "13.5448, 53.8174, -2.18174, 0.96", "13.0618, 54.5578, -2.33885, 1.11", "12.5035, 55.2961, -2.51178, 1.11", "11.7312, 56.2541, -2.74629, 1.11", "10.9757, 57.1733, -2.97439, 1.11", "9.973, 58.4489, -3.29216, 1.03", "9.25785, 59.4979, -3.55073, 1.03", "8.5323, 60.7482, -3.84683, 0.96", "7.96355, 62.0348, -4.17905, 1.03", "7.61212, 63.2077, -4.52143, 0.88", "7.46563, 64.0551, -4.78778, 0.88", "7.40508, 65.1245, -5.13061, 1.11", "7.41396, 65.7799, -5.35047, 1.11", "7.49448, 67.6153, -5.87997, 1.03", "7.55155, 69.0665, -6.23006, 0.88", "7.55964, 70.4061, -6.46581, 0.88", "7.48249, 71.8593, -6.59284, 0.88", "7.32866, 73.1026, -6.58942, 1.03", "6.97698, 74.9792, -6.43717, 0.88", "6.68258, 76.1968, -6.22287, 0.96", "6.40562, 77.2844, -5.97815, 1.03", "6.15692, 78.3805, -5.75119, 1.33", "5.96256, 79.5556, -5.55604, 0.74", "5.9255, 80.2628, -5.51281, 0.74", "5.99648, 81.1624, -5.58986, 0.88", "6.23247, 82.2926, -5.76123, 0.88", "6.65785, 83.6307, -6.03439, 0.81", "7.05524, 84.6178, -6.26137, 0.88", "7.64794, 85.8703, -6.57576, 0.74", "8.07669, 86.7055, -6.78636, 0.74", "8.64327, 87.8025, -7.0622, 0.81", "9.14556, 88.7823, -7.31648, 0.81", "9.49697, 89.5189, -7.49451, 0.81", "9.9362, 90.574, -7.78379, 0.81", "10.2347, 91.5266, -8.06705, 0.96", "10.4322, 92.5028, -8.388, 0.96", "10.55, 93.5073, -8.72121, 1.03", "10.6606, 94.7521, -9.17126, 0.96", "10.7832, 95.9624, -9.62353, 0.96", "10.9388, 97.4153, -10.1503, 0.96", "11.0867, 98.641, -10.6155, 0.96", "11.2717, 99.9461, -11.1156, 0.88", "11.5026, 101.575, -11.7343, 0.81", "11.6294, 102.59, -12.1248, 0.81", "11.7235, 103.626, -12.5195, 0.74", "11.7212, 104.816, -12.9911, 1.03", "11.6093, 105.758, -13.3672, 1.03", "11.2988, 106.973, -13.8197, 1.03", "10.9218, 108.071, -14.1647, 1.11", "10.6442, 108.8, -14.3808, 1.11", "10.1045, 110.231, -14.739, 0.96", "9.70575, 111.379, -14.9699, 0.96", "9.33573, 112.652, -15.1803, 0.96", "8.95524, 114.313, -15.4024, 0.88", "8.73768, 115.56, -15.5418, 1.18", "8.52062, 116.995, -15.6782, 0.96", "8.34174, 118.179, -15.7798, 0.88", "8.14828, 119.399, -15.8628, 0.88", "7.94305, 120.647, -15.9172, 0.88", "7.77789, 121.63, -15.943, 0.96", "7.56672, 122.885, -15.9671, 0.96", "7.35649, 124.141, -16.0055, 0.96", "7.16095, 125.51, -16.0697, 1.03", "7.04571, 126.667, -16.1398, 0.96", "7.00466, 128.083, -16.2489, 0.88", "7.07455, 129.341, -16.362, 0.81", "7.22763, 130.462, -16.4801, 0.96", "7.52618, 132.091, -16.6858, 0.81", "7.66416, 132.826, -16.788, 0.81", "7.79549, 133.683, -16.8949, 0.81", "7.88886, 134.958, -17.0176, 0.88", "7.86373, 135.87, -17.0787, 0.88", "7.71366, 136.748, -17.1137, 0.88", "7.43089, 137.601, -17.1321, 0.74", "6.90184, 138.792, -17.1752, 0.88", "6.13433, 140.254, -17.2188, 1.33", "5.7103, 141.027, -17.2443, 1.33", "5.19453, 142.053, -17.2826, 1.11", "4.82568, 142.939, -17.3402, 0.96", "4.57795, 143.732, -17.4188, 0.96", "4.28956, 145.07, -17.5675, 0.74", "4.16748, 146.058, -17.6972, 0.74", "4.1069, 147.092, -17.8633, 0.74", "4.08742, 148.191, -18.0719, 0.74", "4.08858, 149.488, -18.3591, 1.03", "4.09185, 150.473, -18.6259, 1.03", "4.08417, 151.456, -18.9328, 1.03", "4.04687, 152.316, -19.2195, 0.88", "3.965, 153.472, -19.6195, 0.88", "3.88373, 154.503, -19.972, 1.03", "3.82927, 155.641, -20.3853, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.38305, 41.0995, 0.732838, 0.66", "1.70185, 56.0961, 0.732838, 0.66", "2.02065, 71.0928, 0.732838, 0.66" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.5754, -20.4081, 2.14886, 0.96", "-16.7934, -21.9929, 2.59167, 0.96", "-17.8382, -23.2234, 2.90064, 0.96", "-18.6933, -24.1575, 3.10409, 1.11", "-19.2746, -24.7882, 3.15136, 1.25", "-19.7702, -25.3381, 3.12456, 1.25", "-20.691, -26.4105, 2.99378, 1.03", "-21.4313, -27.2519, 2.77699, 0.96", "-22.0941, -28.0815, 2.44345, 1.18", "-23.2289, -29.5849, 1.71627, 1.03", "-23.8888, -30.514, 1.21778, 1.03", "-24.4925, -31.4385, 0.672793, 0.88", "-24.9396, -32.2159, 0.15445, 1.11", "-25.4327, -33.1952, -0.541522, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.5754, -20.4081, 2.14886, 1.92", "-16.9437, -19.2345, 2.10897, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-8.23851, 20.4567, 8.56033, 0.88", "-8.79546, 21.128, 7.77098, 0.88", "-9.21597, 21.7468, 6.98208, 0.81", "-9.47859, 22.2123, 6.42148, 0.81", "-9.90036, 23.0989, 5.39611, 0.66", "-10.199, 23.7339, 4.67963, 1.11", "-10.471, 24.2407, 4.11179, 1.11", "-11.1379, 25.3625, 2.88773, 0.88", "-11.5358, 25.9005, 2.32152, 1.03", "-12.311, 26.6938, 1.48391, 1.11", "-13.0677, 27.2644, 0.958313, 0.88", "-14.1903, 27.7968, 0.542712, 0.88", "-15.323, 28.1152, 0.414696, 0.81", "-16.3295, 28.2811, 0.478297, 0.88", "-17.3209, 28.3659, 0.585391, 1.11", "-19.1245, 28.4558, 0.854898, 1.33", "-20.0708, 28.5141, 0.954593, 0.96", "-21.0257, 28.6268, 0.966723, 1.11", "-21.5543, 28.7289, 0.881747, 0.88", "-22.6177, 29.0298, 0.552702, 0.74", "-23.4743, 29.356, 0.172011, 1.03", "-24.6734, 29.9095, -0.543126, 1.11", "-25.336, 30.3131, -1.01587, 1.11", "-25.9891, 30.8178, -1.58434, 1.11", "-26.4272, 31.3016, -2.12164, 1.25", "-26.9056, 32.0905, -3.03429, 1.25", "-27.2534, 32.9032, -4.08513, 0.88", "-27.4969, 33.6042, -5.05116, 0.81", "-27.691, 34.1443, -5.81612, 0.81", "-28.1576, 35.3132, -7.50019, 1.03", "-28.6031, 36.2289, -8.87124, 1.18", "-29.0868, 36.9738, -10.0046, 1.33", "-29.67, 37.5889, -10.9252, 1.18", "-30.4793, 38.1724, -11.7674, 1.18", "-31.0214, 38.4817, -12.1497, 1.18", "-31.727, 38.8412, -12.469, 1.03", "-32.3485, 39.1779, -12.6713, 0.96", "-33.1306, 39.6227, -12.8622, 0.96", "-33.9736, 40.1386, -13.181, 1.11", "-34.5922, 40.5892, -13.5875, 1.11", "-35.3935, 41.2679, -14.2425, 1.03", "-36.1374, 41.9466, -14.9248, 1.47", "-36.7125, 42.4816, -15.4555, 1.84", "-38.6278, 44.212, -17.1248, 1.33", "-40.1315, 45.4764, -18.3087, 0.88", "-41.1975, 46.2706, -19.0239, 1.03", "-42.024, 46.8033, -19.4653, 0.88", "-43.0867, 47.3891, -19.8297, 0.81", "-44.2982, 47.9502, -19.9986, 0.88", "-45.1904, 48.2844, -19.9886, 1.25", "-46.1004, 48.5809, -19.9778, 1.4", "-46.7203, 48.7936, -20.024, 1.62", "-47.4787, 49.119, -20.179, 1.33", "-48.2535, 49.5532, -20.4736, 1.03", "-49.9988, 50.8249, -21.4819, 0.88", "-50.6013, 51.3991, -21.9548, 0.88", "-51.1405, 52.0899, -22.5136, 0.81", "-51.7344, 53.147, -23.3318, 0.96", "-52.0487, 54.0607, -23.9834, 0.96", "-52.1495, 54.8331, -24.4582, 1.11", "-52.0915, 55.5815, -24.813, 1.11", "-51.967, 56.2837, -25.082, 1.11", "-51.845, 56.8444, -25.2577, 1.18", "-51.7189, 57.5058, -25.4041, 1.11", "-51.6122, 58.4498, -25.5798, 0.88", "-51.6166, 59.3902, -25.7657, 0.81", "-51.7489, 59.981, -25.922, 0.81", "-52.1873, 60.6679, -26.1729, 0.81", "-52.8498, 61.1381, -26.4418, 0.96", "-53.4176, 61.346, -26.6354, 0.96", "-54.4257, 61.5579, -26.9199, 0.74", "-55.0471, 61.6451, -27.0837, 0.74", "-55.6703, 61.7276, -27.2435, 1.03", "-56.3968, 61.85, -27.4325, 1.25", "-56.9129, 61.9915, -27.5633, 1.4", "-57.862, 62.4045, -27.7768, 1.18", "-58.8758, 63.0192, -27.9909, 0.88", "-59.6244, 63.5942, -28.1519, 0.81", "-60.1954, 64.1403, -28.2393, 0.81", "-61.1117, 65.1678, -28.2993, 0.81", "-61.9213, 66.1716, -28.2949, 1.03", "-62.3299, 66.719, -28.2618, 1.25", "-62.7752, 67.3494, -28.1869, 1.4", "-63.5183, 68.4135, -28.0331, 1.03", "-64.2185, 69.3986, -27.8837, 0.88", "-64.6346, 69.9664, -27.8078, 1.11", "-65.1891, 70.7208, -27.7281, 1.11", "-65.8329, 71.6098, -27.6656, 0.96", "-66.3558, 72.3368, -27.647, 1.33", "-66.7638, 72.8998, -27.6793, 1.33", "-67.252, 73.5843, -27.7577, 1.11", "-67.8411, 74.3784, -27.8998, 0.88", "-68.4238, 75.0932, -28.0654, 0.88", "-68.929, 75.643, -28.2073, 1.11", "-69.5108, 76.2281, -28.349, 1.11", "-70.1999, 76.889, -28.4917, 0.59", "-70.7908, 77.4421, -28.5946, 0.52", "-71.5443, 78.1438, -28.6979, 0.81", "-72.5756, 79.1317, -28.7955, 0.96", "-73.3586, 79.9072, -28.8225, 1.25", "-73.8863, 80.4413, -28.8073, 1.47", "-74.4207, 80.9847, -28.7686, 1.47", "-75.1683, 81.7649, -28.7026, 1.03", "-75.6674, 82.3082, -28.6629, 1.03", "-76.6403, 83.444, -28.5973, 1.03", "-77.3403, 84.3701, -28.5635, 0.96", "-77.9435, 85.3395, -28.5444, 0.74", "-78.4068, 86.3978, -28.5481, 0.74", "-78.6462, 87.446, -28.5769, 1.03", "-78.6807, 88.2916, -28.6185, 1.03", "-78.4989, 89.5057, -28.7055, 0.81", "-78.1948, 90.603, -28.8008, 0.81", "-77.6603, 92.0534, -28.9426, 0.74", "-77.2094, 93.1089, -29.0534, 1.03", "-76.8711, 93.8481, -29.1275, 1.03", "-76.349, 95.0136, -29.2346, 0.96", "-75.98, 95.9455, -29.3178, 1.4", "-75.6958, 96.8328, -29.3862, 1.25", "-75.4742, 97.8287, -29.4619, 0.81", "-75.3816, 98.6024, -29.5214, 0.59", "-75.3469, 99.5931, -29.5973, 0.59", "-75.4157, 100.945, -29.6746, 0.74", "-75.5054, 101.821, -29.7063, 0.81", "-75.6441, 102.724, -29.7104, 0.81", "-75.8406, 103.743, -29.6913, 0.66", "-76.0984, 104.841, -29.6509, 0.88", "-76.4481, 106.052, -29.5739, 0.96", "-76.7946, 107.043, -29.4821, 0.74", "-77.2325, 108.066, -29.3706, 0.96", "-77.6762, 108.934, -29.2507, 0.96", "-78.1951, 109.78, -29.1184, 0.88", "-78.9578, 110.816, -28.952, 0.88", "-79.5363, 111.523, -28.8498, 0.74", "-80.1042, 112.191, -28.7592, 1.03", "-80.4088, 112.563, -28.7152, 1.03", "-81.0348, 113.392, -28.6144, 0.81", "-81.9304, 114.748, -28.5002, 1.03", "-82.3658, 115.523, -28.4639, 0.88", "-82.7263, 116.286, -28.4557, 0.88", "-83.1205, 117.281, -28.4727, 1.11", "-83.4569, 118.248, -28.5112, 0.96", "-83.7655, 119.289, -28.5729, 0.81", "-84.0055, 120.243, -28.6399, 0.81", "-84.3654, 121.855, -28.7586, 0.88", "-84.5981, 122.964, -28.84, 1.11", "-84.7545, 123.725, -28.8903, 1.11", "-84.9048, 124.418, -28.9276, 0.96", "-85.0879, 125.174, -28.9471, 0.96", "-85.3467, 126.095, -28.9647, 0.66", "-85.6841, 127.121, -28.9765, 0.81", "-86.2414, 128.568, -28.9813, 0.88", "-86.8715, 130.009, -28.9759, 1.11", "-87.2694, 130.814, -28.965, 1.03", "-87.5609, 131.346, -28.9368, 1.03", "-88.0885, 132.234, -28.8531, 0.96", "-88.5394, 132.97, -28.7533, 0.96", "-89.1295, 133.948, -28.5657, 1.18", "-89.5231, 134.707, -28.3963, 1.03", "-89.9238, 135.694, -28.1604, 0.96", "-90.1035, 136.356, -27.9913, 0.59", "-90.2029, 137.097, -27.7945, 0.59", "-90.2078, 137.807, -27.6115, 0.81", "-90.0824, 138.959, -27.3465, 1.11", "-89.9702, 139.532, -27.22, 1.11", "-89.7454, 140.377, -27.0523, 0.81", "-89.5015, 141.169, -26.8945, 0.96", "-89.1889, 142.12, -26.7087, 0.81", "-88.9146, 142.935, -26.559, 0.96", "-88.5998, 143.826, -26.3859, 0.96", "-88.3242, 144.546, -26.26, 1.03", "-88.1336, 145.039, -26.1822, 1.03", "-87.924, 145.634, -26.0996, 0.96", "-87.7511, 146.312, -26.0202, 0.96", "-87.6155, 147.269, -25.9185, 0.74", "-87.5953, 148.176, -25.8456, 0.74", "-87.6725, 149.024, -25.785, 0.96", "-87.8801, 150.102, -25.7207, 0.96", "-88.2147, 151.229, -25.6707, 1.11", "-88.4073, 151.733, -25.661, 1.11", "-88.826, 152.703, -25.6736, 0.74", "-89.1951, 153.536, -25.6798, 0.74", "-89.6829, 154.708, -25.6764, 0.74", "-90.1588, 155.974, -25.6589, 0.81", "-90.5211, 157.072, -25.6375, 0.96", "-90.8416, 158.186, -25.6107, 1.03", "-91.1581, 159.385, -25.5683, 1.11", "-91.382, 160.382, -25.4855, 0.88", "-91.576, 161.413, -25.3648, 0.88", "-91.715, 162.27, -25.2406, 0.81", "-91.8089, 162.91, -25.1387, 0.81", "-91.9764, 164.018, -24.9687, 0.66", "-92.2084, 165.485, -24.7431, 0.66", "-92.3819, 166.503, -24.5686, 0.88", "-92.5247, 167.277, -24.426, 1.11", "-92.7597, 168.412, -24.2118, 0.96", "-93.0127, 169.465, -24.0024, 0.96", "-93.2323, 170.255, -23.841, 0.66", "-93.627, 171.414, -23.6026, 0.59", "-94.0133, 172.439, -23.356, 0.59", "-94.4043, 173.451, -23.1062, 0.74", "-94.7345, 174.328, -22.896, 0.74", "-94.9534, 174.974, -22.7773, 0.81", "-95.1373, 175.556, -22.7055, 0.81", "-95.4369, 176.597, -22.5945, 0.59", "-95.7867, 177.961, -22.4108, 0.74", "-95.9746, 178.754, -22.2732, 0.74", "-96.2924, 180.184, -21.9835, 1.03", "-96.461, 181.018, -21.7782, 0.52", "-96.5993, 181.803, -21.5496, 0.52", "-96.7559, 182.888, -21.1776, 0.88", "-96.8863, 184.006, -20.7542, 0.59", "-96.9559, 184.889, -20.387, 0.44", "-96.9855, 185.69, -20.0453, 0.74", "-97.0021, 186.479, -19.7418, 0.74", "-97.0518, 187.568, -19.3604, 0.66", "-97.1246, 188.484, -19.0802, 0.59", "-97.2716, 189.498, -18.7606, 0.59", "-97.4413, 190.219, -18.4933, 0.59", "-97.7716, 191.187, -18.0977, 0.59", "-98.2314, 192.282, -17.6242, 0.81", "-98.5563, 192.993, -17.3159, 0.81", "-99.1052, 194.189, -16.8003, 0.74", "-99.6204, 195.398, -16.257, 0.66", "-99.8811, 196.092, -15.914, 0.59", "-100.221, 197.14, -15.3865, 0.59", "-100.493, 198.098, -14.9083, 0.96", "-100.674, 198.765, -14.5721, 0.96", "-101.133, 200.375, -13.8026, 0.88", "-101.429, 201.274, -13.3823, 0.66", "-101.709, 201.996, -13.0381, 0.37", "-101.942, 202.52, -12.8028, 0.44", "-102.261, 203.167, -12.5601, 0.44", "-102.674, 203.928, -12.355, 0.44", "-103.241, 204.83, -12.2012, 0.44", "-103.919, 205.774, -12.0637, 0.44", "-104.643, 206.676, -11.917, 0.44", "-105.33, 207.526, -11.7752, 0.52", "-105.732, 208.079, -11.6906, 0.52", "-106.151, 208.769, -11.6069, 0.52", "-106.571, 209.58, -11.5581, 0.59", "-106.832, 210.115, -11.5369, 0.59", "-107.323, 211.026, -11.5077, 0.59", "-108.015, 212.233, -11.4764, 0.44", "-108.738, 213.4, -11.45, 0.44", "-109.712, 214.744, -11.4221, 0.44", "-110.187, 215.237, -11.4113, 0.44", "-111.444, 215.766, -11.3724, 0.44", "-112.427, 215.72, -11.3182, 0.37", "-113.46, 215.435, -11.2417, 0.37", "-114.454, 215.01, -11.1532, 1.25", "-115.524, 214.452, -11.0485, 0.37", "-116.202, 214.083, -10.9477, 0.37", "-116.505, 213.922, -10.8762, 0.59", "-117.098, 213.634, -10.6744, 0.59", "-117.593, 213.399, -10.4382, 0.29", "-118.373, 213.04, -10.0044, 0.29", "-119.26, 212.726, -9.4437, 0.66", "-119.883, 212.534, -8.9934, 1.11", "-120.404, 212.39, -8.57536, 1.33", "-121.019, 212.238, -7.99856, 1.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.23851, 20.4567, 8.56033, 0.81", "-8.50495, 22.6537, 8.32263, 0.81", "-8.76617, 24.3489, 8.09932, 0.96", "-9.10209, 26.044, 7.87158, 0.88", "-9.31816, 26.8899, 7.76523, 0.88", "-9.71722, 28.1814, 7.6177, 1.03", "-10.0195, 28.9958, 7.53738, 1.03", "-10.7578, 30.4644, 7.39918, 0.96", "-11.5169, 31.6762, 7.32989, 0.96", "-12.4253, 32.8395, 7.29006, 1.11", "-13.2487, 33.6947, 7.27784, 1.18", "-14.4978, 34.7786, 7.29251, 1.18", "-15.3889, 35.4719, 7.32098, 1.4", "-16.0199, 35.9454, 7.37699, 1.25", "-17.0048, 36.695, 7.50236, 0.88", "-17.9673, 37.4812, 7.6516, 1.18", "-18.4993, 37.9815, 7.77832, 1.47", "-19.1017, 38.6369, 7.97145, 1.33", "-20.3002, 40.0655, 8.43313, 0.96", "-20.8766, 40.8027, 8.68391, 1.18", "-21.4104, 41.5144, 8.94156, 1.18", "-22.4672, 42.8501, 9.42316, 1.18", "-22.8429, 43.2766, 9.57471, 1.33", "-23.5399, 43.9613, 9.80734, 0.96", "-24.12, 44.446, 9.95096, 0.81", "-24.7682, 44.935, 10.0987, 0.81", "-25.7137, 45.5808, 10.2829, 1.11", "-26.288, 45.9623, 10.3605, 1.11", "-26.9158, 46.4346, 10.4182, 0.88", "-27.2924, 46.7989, 10.4303, 0.88", "-27.6938, 47.3336, 10.409, 0.88", "-28.2582, 48.4557, 10.2802, 1.11", "-28.4616, 49.137, 10.1163, 1.11", "-28.6865, 50.3006, 9.76588, 1.11", "-28.869, 51.4883, 9.32515, 1.03", "-29.0201, 52.5496, 8.89106, 1.4", "-29.1668, 53.469, 8.45594, 1.62", "-29.4683, 55.0564, 7.63816, 0.88", "-29.7274, 56.0531, 7.11077, 0.88", "-30.1332, 57.2256, 6.55932, 0.88", "-30.5484, 58.1748, 6.20218, 1.03", "-31.1445, 59.2817, 5.92274, 0.81", "-31.5686, 59.9214, 5.95351, 0.96", "-32.0478, 60.4657, 6.23764, 0.81", "-33.1034, 61.3837, 7.20347, 1.25", "-34.1873, 62.1417, 8.42369, 1.25", "-34.7165, 62.4433, 9.03239, 0.96", "-35.7355, 62.959, 10.1876, 0.96", "-36.5246, 63.3215, 10.9878, 0.96", "-37.0948, 63.5887, 11.4669, 0.96", "-37.9944, 64.0693, 12.0175, 0.81", "-38.7131, 64.5601, 12.3396, 0.96", "-39.6666, 65.3645, 12.6893, 0.96", "-40.0949, 65.7659, 12.8119, 1.11", "-40.9241, 66.5911, 13.0355, 1.11", "-41.7838, 67.4973, 13.2129, 0.96", "-42.7077, 68.5305, 13.3557, 0.81", "-43.7529, 69.7845, 13.4632, 1.03", "-44.5222, 70.7968, 13.5567, 1.18", "-45.3712, 72.008, 13.6984, 1.18", "-46.2754, 73.4993, 13.8986, 1.03", "-46.7157, 74.3871, 14.0485, 1.11", "-47.0349, 75.3241, 14.2655, 1.11", "-47.326, 76.9321, 14.7785, 0.96", "-47.3859, 77.6585, 15.0733, 0.96", "-47.4281, 78.6464, 15.5664, 0.74", "-47.5021, 79.5203, 16.0956, 0.74", "-47.8013, 80.8288, 16.9709, 0.96", "-48.1793, 81.5994, 17.517, 0.88", "-48.8096, 82.1961, 17.9122, 0.74", "-49.6487, 82.6033, 18.1707, 0.74", "-50.5921, 82.9017, 18.3008, 0.81", "-51.8579, 83.2343, 18.342, 0.88", "-52.6452, 83.4316, 18.3192, 0.88", "-53.4018, 83.6393, 18.2725, 1.03", "-54.4763, 83.9646, 18.206, 1.03", "-55.9713, 84.4394, 18.217, 0.96", "-56.9172, 84.7358, 18.2971, 0.96", "-58.0501, 85.0682, 18.4915, 0.81", "-58.8279, 85.2759, 18.6706, 0.81", "-59.8529, 85.5252, 18.9543, 0.81", "-61.3467, 85.8558, 19.4295, 0.88", "-62.1946, 86.0317, 19.6965, 0.88", "-63.3657, 86.3084, 20.0474, 0.88", "-64.3079, 86.6051, 20.3228, 0.96", "-65.072, 86.9431, 20.5589, 0.96", "-65.8364, 87.3825, 20.8055, 0.81", "-66.4931, 87.8325, 21.0192, 0.96", "-67.1659, 88.3541, 21.2857, 0.96", "-67.9086, 89.0064, 21.6914, 0.88", "-68.6006, 89.658, 22.2009, 0.88", "-69.0838, 90.1623, 22.6488, 0.96", "-69.53, 90.6983, 23.185, 0.96", "-70.1036, 91.5345, 24.045, 0.81", "-70.6217, 92.3907, 24.9383, 0.81", "-71.0481, 93.1168, 25.6227, 0.88", "-71.4204, 93.7705, 26.1377, 0.81", "-71.8946, 94.6584, 26.6907, 0.81", "-72.4413, 95.6836, 27.1213, 0.96", "-72.8792, 96.4469, 27.3012, 0.81", "-73.7145, 97.7648, 27.4509, 0.74", "-74.314, 98.6305, 27.4608, 0.74", "-75.0477, 99.5791, 27.3874, 0.74", "-75.8771, 100.591, 27.1774, 0.88", "-76.2909, 101.098, 27.0246, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-10.4763, 15.346, 10.2424, 0.74", "-12.5234, 14.0537, 11.8376, 0.74", "-13.1055, 13.6184, 12.321, 0.88", "-14.2591, 12.7187, 13.2066, 0.81", "-15.6775, 11.3664, 14.4615, 0.52", "-16.2484, 10.8458, 14.8584, 0.44", "-17.0585, 10.1639, 15.2775, 0.44", "-17.6725, 9.66459, 15.3114, 0.29", "-18.3115, 9.33509, 15.1451, 0.29", "-20.1583, 8.99721, 14.0903, 1.4", "-22.5154, 8.75085, 12.4527, 0.29", "-23.265, 8.70956, 11.9087, 0.29", "-24.4442, 8.72174, 10.9779, 0.37", "-25.1769, 8.79657, 10.3565, 0.44", "-25.9906, 8.95514, 9.61357, 0.37" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.4763, 15.346, 10.2424, 2.28", "-11.1113, 17.0015, 10.6589, 2.28", "-11.5433, 18.128, 10.9423, 1.4", "-11.824, 18.8597, 11.1264, 1.4", "-12.2485, 19.9665, 11.4048, 1.4", "-12.5233, 20.683, 11.5851, 1.4", "-12.8061, 21.4203, 11.7706, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.82927, 155.641, -20.3853, 0.59", "4.40845, 157.58, -21.4601, 0.59", "4.64, 158.632, -21.9744, 0.59", "4.868, 160.09, -22.5642, 0.59", "4.93748, 160.656, -22.76, 0.59", "5.06448, 161.7, -23.1325, 0.81", "5.17101, 162.615, -23.4508, 0.88", "5.24482, 163.536, -23.6979, 0.88", "5.3005, 164.95, -24.0721, 0.66", "5.29402, 165.92, -24.2949, 0.88", "5.23189, 167.218, -24.5564, 0.96", "5.13652, 168.257, -24.7518, 0.81", "5.02983, 168.903, -24.8646, 0.81", "4.72102, 170.007, -25.0535, 0.66", "4.29894, 170.939, -25.2101, 0.74", "3.56355, 172.032, -25.3427, 0.44", "2.9051, 172.741, -25.3851, 0.44", "2.46308, 173.129, -25.4126, 0.81", "1.95868, 173.546, -25.4462, 0.96", "1.45181, 173.98, -25.4861, 0.74", "0.798797, 174.638, -25.5305, 0.74", "0.227538, 175.372, -25.6736, 0.88", "-0.396097, 176.419, -25.9677, 1.03", "-0.829299, 177.343, -26.3385, 0.88", "-1.21503, 178.333, -26.8013, 0.74", "-1.54122, 179.312, -27.293, 0.88", "-2.17008, 181.494, -28.4303, 0.66", "-2.54034, 182.945, -29.1724, 1.03", "-2.8793, 184.446, -29.9088, 0.88", "-3.17421, 185.916, -30.5181, 1.03", "-3.3612, 186.949, -30.8617, 1.03", "-3.55341, 188.148, -31.1427, 0.88", "-3.73873, 189.301, -31.2643, 0.81", "-3.92612, 190.381, -31.3449, 0.81", "-4.28818, 192.06, -31.4521, 0.66", "-4.51967, 192.93, -31.5441, 0.66", "-4.9161, 194.11, -31.7559, 1.03", "-5.21947, 194.853, -31.9446, 0.81", "-5.68357, 195.902, -32.3003, 0.59", "-6.19122, 197.018, -32.7978, 0.59", "-6.48589, 197.684, -33.1967, 0.59", "-6.8253, 198.441, -33.7659, 0.59", "-7.15117, 199.133, -34.3704, 0.59", "-7.71245, 200.26, -35.4179, 0.59", "-8.31004, 201.388, -36.441, 1.18", "-8.83683, 202.301, -37.2549, 1.33", "-9.61406, 203.549, -38.3583, 0.74", "-10.0713, 204.251, -38.9328, 0.74", "-10.5588, 205.009, -39.5299, 0.74", "-11.271, 206.232, -40.4476, 0.88", "-11.6195, 207.008, -40.9372, 0.88", "-11.8145, 207.586, -41.2485, 1.03", "-12.0958, 208.682, -41.7916, 0.74", "-12.3154, 209.595, -42.2201, 0.74", "-12.6915, 210.923, -42.813, 0.59", "-13.1219, 212.016, -43.2565, 0.74", "-13.7295, 213.132, -43.6099, 0.74", "-14.1489, 213.804, -43.8518, 0.74", "-14.9445, 214.958, -44.345, 0.88", "-15.5103, 215.709, -44.6826, 1.03", "-16.1921, 216.518, -45.0784, 0.74", "-16.9809, 217.372, -45.6521, 0.59", "-18.3348, 218.769, -46.8001, 0.59", "-19.0578, 219.512, -47.592, 0.74", "-19.4813, 219.945, -48.1132, 0.96", "-20.0209, 220.461, -48.8086, 0.88", "-20.715, 221.005, -49.6364, 0.74", "-21.782, 221.77, -50.8936, 1.55", "-22.7339, 222.462, -51.9811, 1.99", "-23.5929, 223.222, -53.1178, 0.74", "-24.1317, 223.947, -54.0488, 0.59", "-24.5401, 224.969, -55.1006, 0.88", "-24.7713, 226.174, -56.0614, 0.81", "-24.8158, 227.019, -56.6454, 0.81", "-24.734, 228.043, -57.4401, 0.74", "-24.569, 229.126, -58.3803, 0.74", "-24.456, 229.996, -59.2425, 0.66", "-24.3809, 230.681, -59.9908, 0.66", "-24.3486, 231.907, -61.3796, 1.47", "-24.3994, 234.187, -64.0453, 1.18", "-24.4506, 235.009, -65.0043, 1.03", "-24.5554, 236.808, -67.0543, 1.03", "-24.5996, 237.819, -68.0753, 0.74", "-24.6249, 239.021, -69.0666, 1.03", "-24.6314, 239.478, -69.3322, 1.25", "-24.6704, 240.919, -69.9172, 0.66", "-24.6864, 242.101, -70.3429, 0.66", "-24.7401, 243.532, -70.7635, 0.81", "-24.8502, 244.56, -71.1151, 0.66", "-25.0273, 245.511, -71.5053, 0.66", "-25.5072, 247.236, -72.2849, 0.66", "-25.8497, 248.175, -72.7413, 0.52", "-26.2032, 249.014, -73.1702, 0.66", "-26.4526, 249.616, -73.4885, 0.81", "-26.8958, 250.716, -73.9223, 0.52", "-27.2494, 251.648, -74.1127, 0.52", "-27.6299, 252.776, -74.1898, 0.88", "-27.8788, 253.645, -74.2082, 0.88", "-28.1188, 254.685, -74.2216, 0.59", "-28.3649, 256.341, -74.2677, 0.74", "-28.3624, 257.622, -74.5952, 0.44", "-28.2025, 258.583, -75.2077, 0.44", "-28.034, 259.288, -75.8434, 0.44", "-27.7714, 260.223, -76.8156, 0.44", "-27.4543, 261.172, -77.926, 1.11", "-26.6157, 263.66, -80.9857, 0.88", "-26.207, 264.908, -82.4585, 0.44", "-25.9799, 265.751, -83.3541, 0.66", "-25.864, 266.415, -83.9517, 0.44", "-25.7875, 267.588, -84.7345, 0.44", "-25.7883, 268.788, -85.2372, 0.44", "-25.844, 270.366, -85.5428, 0.59", "-25.9323, 271.87, -85.7232, 0.59", "-26.0828, 273.295, -85.8731, 0.52", "-26.3192, 274.558, -85.9853, 0.37", "-26.7099, 275.859, -86.076, 0.37", "-27.073, 276.717, -86.1675, 0.37", "-27.6766, 277.64, -86.3279, 0.37", "-28.3919, 278.462, -86.5235, 0.37", "-29.0289, 279.073, -86.717, 0.74", "-30.0502, 279.879, -87.0311, 0.66", "-30.9397, 280.478, -87.306, 0.66", "-32.2772, 281.291, -87.7259, 0.44", "-33.2047, 281.806, -88.0206, 0.37", "-33.7419, 282.101, -88.1921, 0.37", "-34.7225, 282.601, -88.5176, 0.29", "-35.266, 282.801, -88.6961, 0.29", "-36.0234, 282.878, -88.9314, 1.03", "-36.7412, 282.688, -89.1618, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "3.82927, 155.641, -20.3853, 0.59", "4.0854, 157.181, -19.7809, 0.59", "4.21063, 158.255, -19.4881, 0.81", "4.27608, 159.741, -19.2753, 0.88", "4.26874, 160.801, -19.2166, 0.59", "4.24928, 161.582, -19.2441, 0.59", "4.23284, 162.694, -19.33, 0.96", "4.20141, 163.304, -19.4269, 1.11", "4.13647, 164.594, -19.697, 0.66", "4.11771, 165.524, -19.9434, 0.66", "4.06462, 166.976, -20.2307, 0.66", "4.03575, 168.101, -20.3671, 0.59", "4.01968, 169.021, -20.3913, 0.59", "4.01785, 170.348, -20.3273, 0.59", "4.03882, 171.491, -20.2077, 0.59", "4.08854, 173.566, -19.9073, 0.66", "4.10638, 174.559, -19.7313, 0.66", "4.10929, 175.815, -19.5179, 0.52", "4.11126, 176.874, -19.3514, 0.52", "4.0959, 177.96, -19.2087, 0.52", "4.08159, 178.779, -19.1353, 0.74", "4.08843, 179.509, -19.1384, 0.74", "4.11266, 180.375, -19.1522, 0.88", "4.16986, 180.973, -19.1566, 0.88", "4.48919, 182.454, -19.0882, 0.59", "4.77381, 183.129, -19.0179, 0.81", "5.30351, 183.939, -18.8736, 0.59", "6.05671, 184.833, -18.6566, 0.74", "6.85432, 185.641, -18.4458, 0.74", "7.71012, 186.418, -18.2575, 0.74", "8.6889, 187.267, -18.0732, 0.59", "9.58492, 188.035, -17.9108, 0.59", "10.5295, 188.862, -17.7494, 0.81", "11.3896, 189.654, -17.6411, 0.81", "12.5463, 190.818, -17.5565, 0.59", "13.2203, 191.567, -17.5396, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-25.4327, -33.1952, -0.541522, 0.74", "-25.6724, -34.4931, -2.71639, 0.74", "-25.7857, -35.4968, -4.03424, 0.88", "-25.9434, -37.2828, -5.92852, 1.03", "-26.0174, -38.0303, -6.58119, 0.96", "-26.1422, -38.9832, -7.28534, 0.66", "-26.2956, -39.879, -7.86127, 0.88", "-26.4492, -40.6936, -8.14049, 0.81", "-26.6645, -41.4466, -8.268, 0.81", "-27.0079, -42.2839, -8.31308, 0.66", "-27.3914, -43.0029, -8.36333, 0.66", "-27.7811, -43.6505, -8.44401, 0.74", "-28.3398, -44.5317, -8.5968, 0.59", "-28.6446, -45.0568, -8.69544, 0.52", "-28.8919, -45.5669, -8.79393, 0.52", "-29.2854, -46.62, -8.98847, 0.88", "-29.5023, -47.3856, -9.11591, 0.88", "-29.6929, -48.2077, -9.23224, 0.74", "-29.9518, -49.3842, -9.36851, 0.74", "-30.1149, -50.0499, -9.4348, 0.74", "-30.426, -51.0882, -9.51579, 0.81", "-30.7509, -51.9405, -9.54654, 0.81", "-31.1464, -52.7867, -9.53471, 0.66", "-31.5948, -53.6067, -9.50201, 0.74", "-32.0561, -54.3532, -9.45886, 0.74", "-32.534, -55.0834, -9.42724, 0.81", "-32.9653, -55.7412, -9.41128, 0.81", "-33.2699, -56.2287, -9.41059, 0.74", "-33.6669, -56.9559, -9.43221, 0.52", "-33.946, -57.5693, -9.46999, 0.52", "-34.2779, -58.4534, -9.55093, 0.52", "-34.5386, -59.281, -9.62336, 1.03", "-34.6828, -59.8016, -9.66848, 1.03", "-34.8493, -60.4392, -9.70489, 0.81", "-34.9867, -60.98, -9.71726, 0.88", "-35.139, -61.7072, -9.70692, 1.03", "-35.2883, -62.687, -9.66437, 0.74", "-35.3512, -63.3267, -9.67049, 0.74", "-35.3961, -64.1382, -9.7174, 0.74", "-35.4124, -64.8688, -9.83439, 0.59", "-35.4119, -65.8396, -10.0847, 0.66", "-35.3946, -66.4169, -10.2888, 0.66", "-35.3302, -67.4824, -10.7689, 0.66", "-35.3046, -68.0283, -11.047, 0.52", "-35.3092, -69.0753, -11.6187, 0.59", "-35.3639, -69.609, -11.9109, 0.81", "-35.4688, -70.0876, -12.1576, 0.81", "-35.6399, -70.6783, -12.4164, 0.29", "-35.8411, -71.2704, -12.6025, 0.29", "-36.1355, -72.0284, -12.7872, 0.74", "-36.3901, -72.6574, -12.8854, 1.25", "-36.5649, -73.0973, -12.9445, 1.47", "-36.689, -73.425, -12.9795, 1.62", "-36.9032, -74.0527, -13.0309, 1.25", "-37.108, -74.7693, -13.0923, 0.44", "-37.3129, -75.5249, -13.1798, 0.29", "-37.5871, -76.5303, -13.2891, 0.66", "-37.7745, -77.2105, -13.3569, 0.96", "-37.8884, -77.6207, -13.3937, 1.25", "-38.0102, -78.0773, -13.4298, 1.47", "-38.1988, -78.8105, -13.4772, 1.03", "-38.4659, -79.7231, -13.5178, 0.29", "-38.6547, -80.2959, -13.5282, 0.44", "-38.8497, -80.7885, -13.5244, 0.74", "-39.079, -81.3023, -13.5057, 0.96", "-39.3145, -81.769, -13.473, 1.25", "-39.5455, -82.1512, -13.4404, 1.25", "-39.9984, -82.7448, -13.405, 1.03", "-40.4638, -83.241, -13.3425, 0.81", "-40.6987, -83.4503, -13.3251, 0.81", "-40.9917, -83.6886, -13.3183, 0.59", "-41.459, -84.059, -13.3332, 0.52", "-41.7416, -84.306, -13.3598, 0.52", "-42.2872, -84.8634, -13.4507, 0.59", "-42.9455, -85.708, -13.6334, 0.44", "-43.2665, -86.2385, -13.774, 0.29", "-43.4551, -86.6071, -13.8805, 0.29", "-43.7272, -87.1868, -14.0551, 0.66", "-43.9403, -87.6472, -14.1974, 1.03", "-44.1357, -88.0607, -14.3274, 1.03", "-44.5564, -88.8242, -14.533, 0.29", "-44.9291, -89.37, -14.6987, 0.29", "-45.2458, -89.7531, -14.8145, 0.29", "-45.3848, -89.8995, -14.8574, 0.44", "-45.642, -90.168, -14.9263, 0.44", "-46.2334, -90.8186, -15.0649, 0.66", "-46.4589, -91.0851, -15.1136, 0.66", "-47.0106, -91.7689, -15.235, 0.29", "-47.2899, -92.1153, -15.2902, 0.29", "-47.7046, -92.6271, -15.3555, 0.59", "-48.0498, -93.0639, -15.3945, 0.81", "-48.47, -93.6141, -15.4342, 0.29", "-48.8288, -94.113, -15.4823, 0.52", "-49.1947, -94.6825, -15.564, 0.52", "-49.493, -95.2684, -15.6678, 0.44", "-49.7669, -96.0059, -15.7838, 0.74", "-49.9058, -96.5425, -15.9767, 0.88", "-50.0036, -97.1579, -16.2797, 0.88", "-50.0469, -97.6931, -16.5693, 0.29", "-50.0548, -98.4991, -17.1328, 0.29", "-50.0377, -99.1639, -17.648, 0.29", "-49.9645, -101.417, -19.4756, 0.59", "-49.9498, -101.821, -19.811, 0.81", "-49.9289, -102.33, -20.2472, 0.81", "-49.8418, -104.006, -21.7084, 0.29", "-49.7895, -104.605, -22.2269, 0.74", "-49.7437, -104.951, -22.5022, 0.74", "-49.5955, -106.073, -23.1973, 0.22", "-49.4971, -106.994, -23.7319, 1.11", "-49.4481, -107.543, -24.022, 1.11", "-49.3654, -108.592, -24.4531, 0.22", "-49.2863, -109.365, -24.7452, 0.59", "-49.1393, -110.577, -25.1837, 0.22", "-49.0738, -111.225, -25.3879, 0.37", "-49.056, -111.529, -25.4845, 0.37", "-49.0689, -112.129, -25.6763, 0.22", "-49.1324, -112.881, -25.9161, 0.22", "-49.2636, -114.104, -26.3162, 1.47", "-49.3604, -114.828, -26.548, 1.62", "-49.5421, -115.722, -26.8082, 1.25", "-49.909, -117.165, -27.1982, 0.15", "-50.1698, -118.002, -27.4067, 0.22", "-50.2956, -118.366, -27.4774, 0.88", "-50.4343, -118.772, -27.5476, 1.03", "-50.7289, -119.696, -27.7168, 0.15", "-50.9185, -120.35, -27.8446, 0.52", "-51.0678, -120.866, -27.958, 0.74", "-51.8537, -123.521, -28.5693, 0.22", "-52.1134, -124.388, -28.7749, 0.81", "-52.2251, -124.762, -28.8665, 0.81", "-52.6824, -126.346, -29.2637, 0.22", "-52.863, -126.979, -29.4162, 0.59" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-25.4327, -33.1952, -0.541522, 0.59", "-25.2943, -34.0143, -0.615583, 0.59", "-25.1849, -34.5052, -0.657405, 0.59", "-25.0366, -35.1026, -0.747432, 0.81", "-24.9275, -35.5515, -0.82371, 0.81", "-24.7641, -36.3112, -0.971217, 1.03", "-24.6962, -36.7183, -1.05713, 1.03", "-24.6429, -37.1984, -1.14854, 0.88", "-24.618, -38.0824, -1.26108, 0.88", "-24.6947, -38.6621, -1.27559, 1.03", "-24.8859, -39.1559, -1.2146, 1.03", "-25.2844, -39.7565, -1.04473, 0.52", "-25.9833, -40.5817, -0.7538, 1.03", "-26.3498, -40.9667, -0.599043, 1.03", "-26.7727, -41.4084, -0.402239, 0.88", "-27.1852, -41.8684, -0.214252, 0.81", "-27.6421, -42.4323, -0.00189866, 0.59", "-28.0148, -42.9634, 0.162821, 0.59", "-28.3885, -43.6111, 0.301793, 0.59", "-28.7669, -44.3768, 0.457544, 0.88", "-28.9886, -44.904, 0.571136, 0.88", "-29.1318, -45.2958, 0.663423, 0.74", "-29.3201, -45.8162, 0.795715, 0.96", "-29.4943, -46.2464, 0.906447, 1.03", "-29.672, -46.6283, 1.00463, 1.03", "-30.0163, -47.2759, 1.16326, 0.59", "-30.2855, -47.7629, 1.25135, 0.37", "-30.5879, -48.2938, 1.30908, 0.37", "-30.895, -48.8462, 1.34043, 0.81", "-31.2041, -49.4495, 1.35246, 0.81", "-31.4066, -49.8935, 1.34801, 0.81", "-31.6964, -50.6156, 1.34478, 0.96", "-31.9134, -51.2171, 1.34927, 0.96", "-32.0983, -51.799, 1.37127, 0.66", "-32.273, -52.3876, 1.42294, 0.66", "-32.4363, -52.8627, 1.49258, 0.59", "-32.6972, -53.4415, 1.62274, 0.66", "-32.8743, -53.7151, 1.72448, 0.88", "-33.16, -54.0532, 1.87836, 0.88", "-33.4761, -54.3637, 2.03496, 0.74", "-33.9314, -54.7835, 2.26115, 0.59", "-34.2181, -55.0608, 2.40526, 0.59", "-34.5451, -55.4346, 2.57206, 0.59", "-34.9518, -56.0063, 2.78121, 0.44", "-35.1907, -56.4112, 2.89204, 0.66", "-35.4351, -56.9003, 2.99381, 0.81", "-35.6365, -57.3587, 3.07196, 0.88", "-35.8999, -57.9829, 3.15816, 0.88", "-36.151, -58.548, 3.21088, 0.88", "-36.4912, -59.2217, 3.25413, 0.66", "-36.7579, -59.6747, 3.26854, 0.66", "-37.0094, -60.0419, 3.26805, 0.81", "-37.3122, -60.4284, 3.26032, 0.96", "-37.6627, -60.8063, 3.261, 0.96", "-38.027, -61.1725, 3.2816, 0.88", "-38.5302, -61.692, 3.35104, 0.88", "-38.9295, -62.1367, 3.44929, 1.03", "-39.13, -62.3976, 3.53104, 1.03", "-39.5344, -63.0394, 3.77262, 0.59", "-39.7484, -63.4578, 3.94288, 0.74", "-39.9996, -64.0219, 4.16694, 0.88", "-40.1344, -64.3611, 4.29061, 0.88", "-40.3606, -64.9511, 4.47864, 0.74", "-40.5717, -65.5277, 4.64013, 0.88", "-40.7383, -65.964, 4.73189, 0.88", "-41.0237, -66.5816, 4.83297, 0.66", "-41.2648, -67.0263, 4.89041, 0.66", "-41.4688, -67.3711, 4.93188, 0.96", "-41.7975, -67.887, 5.00048, 0.74", "-42.2582, -68.5542, 5.10073, 0.74", "-42.5839, -69.0017, 5.16955, 0.96", "-42.8648, -69.3716, 5.22455, 0.96", "-43.2056, -69.7919, 5.28387, 0.88", "-43.5813, -70.2185, 5.33431, 0.81", "-44.1002, -70.7424, 5.38033, 0.66", "-44.6785, -71.2729, 5.42086, 0.59", "-45.0987, -71.6277, 5.44468, 0.81", "-45.4835, -71.9464, 5.46216, 0.81", "-46.0569, -72.4031, 5.47299, 0.66", "-46.5653, -72.782, 5.47273, 0.88", "-47.001, -73.064, 5.46879, 1.47", "-47.3035, -73.2159, 5.46193, 1.62" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-16.9437, -19.2345, 2.10897, 0.66", "-18.0332, -19.1128, 2.05802, 0.66", "-18.7432, -18.9879, 2.00188, 0.81", "-19.5187, -18.8196, 1.92076, 1.11", "-20.2399, -18.6421, 1.83507, 1.11", "-20.8434, -18.4807, 1.7627, 1.11", "-21.6608, -18.2527, 1.65542, 1.03", "-22.5025, -17.9801, 1.50708, 1.18", "-22.9752, -17.8058, 1.42443, 1.18", "-23.4744, -17.5964, 1.34806, 1.18", "-24.0986, -17.2958, 1.26483, 1.11", "-24.8753, -16.8744, 1.20591, 0.96", "-25.5826, -16.4327, 1.18732, 0.96", "-26.34, -15.8671, 1.2007, 0.96", "-26.9683, -15.2879, 1.23463, 0.88", "-27.4507, -14.6953, 1.30271, 0.88", "-27.9523, -13.809, 1.4227, 0.88", "-28.212, -13.1185, 1.51983, 0.81", "-28.3904, -12.3611, 1.61247, 0.88", "-28.485, -11.7182, 1.66962, 0.88", "-28.5876, -10.6828, 1.71741, 0.81", "-28.6739, -9.71672, 1.71771, 0.88", "-28.7676, -8.80094, 1.66902, 0.88", "-28.9208, -7.68003, 1.59205, 0.96", "-29.0462, -7.00229, 1.54213, 0.96", "-29.2403, -6.17319, 1.47342, 1.11", "-29.4868, -5.33657, 1.39801, 1.11", "-29.8136, -4.42487, 1.33697, 1.03", "-30.1097, -3.75458, 1.31572, 0.88", "-30.5502, -2.92684, 1.31276, 0.88", "-30.9702, -2.24393, 1.36629, 1.03", "-31.6918, -1.23995, 1.49763, 1.11", "-32.1367, -0.724282, 1.59008, 1.11", "-32.9214, 6.07193E-4, 1.79876, 0.88", "-33.3863, 0.339946, 1.94083, 1.03", "-34.2788, 0.880576, 2.24896, 0.81", "-34.9252, 1.23836, 2.50379, 0.66", "-35.3818, 1.49226, 2.71574, 0.66", "-36.2723, 2.06844, 3.19636, 0.81", "-36.7719, 2.48304, 3.47451, 0.81", "-37.1879, 2.93942, 3.68286, 0.74", "-37.4514, 3.29515, 3.74846, 0.74", "-37.8083, 3.75227, 3.78903, 0.74", "-38.2443, 4.23634, 3.74544, 0.74", "-38.7634, 4.67984, 3.60231, 0.88", "-39.4447, 5.11305, 3.37896, 1.03", "-40.2022, 5.47023, 3.09375, 1.18", "-41.1537, 5.80926, 2.66615, 0.81", "-41.7068, 5.95958, 2.38381, 0.81", "-42.5713, 6.13472, 1.86384, 0.81", "-43.3168, 6.27096, 1.35305, 1.03", "-44.0618, 6.43052, 0.774925, 0.88", "-45.1149, 6.71641, -0.106493, 0.96", "-45.6141, 6.90182, -0.558563, 1.18", "-46.5287, 7.34233, -1.38665, 1.4", "-47.0511, 7.67676, -1.82844, 1.18", "-47.7584, 8.21101, -2.4044, 0.88", "-48.2438, 8.65806, -2.76013, 0.88", "-48.7706, 9.24977, -3.07698, 1.03", "-49.1102, 9.68709, -3.24242, 0.88", "-49.6821, 10.535, -3.42258, 1.47" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-16.9437, -19.2345, 2.10897, 1.4", "-17.772, -18.4443, 2.65556, 1.4", "-18.5126, -17.7654, 3.12027, 1.25", "-19.1629, -17.17, 3.55217, 1.03", "-19.8069, -16.5564, 3.9614, 1.03", "-20.2679, -16.0884, 4.26016, 0.88", "-20.7014, -15.6045, 4.58292, 0.88", "-21.0567, -15.1446, 4.92875, 1.03", "-21.3386, -14.639, 5.29051, 1.03", "-21.5498, -14.0355, 5.69712, 0.74", "-21.6641, -13.5511, 5.99752, 0.74", "-21.8069, -12.5894, 6.53789, 0.88", "-21.8709, -11.6696, 7.04175, 1.03", "-21.8855, -10.7397, 7.53584, 1.03", "-21.8654, -10.1815, 7.80178, 1.03", "-21.7931, -9.4363, 8.16061, 0.74", "-21.6819, -8.63237, 8.49772, 1.11", "-21.5704, -7.97077, 8.75704, 0.96", "-21.4882, -7.49025, 8.95114, 0.88", "-21.3152, -6.58529, 9.34378, 0.81", "-21.1415, -5.58058, 9.77498, 0.74", "-21.0035, -4.67358, 10.1458, 0.81", "-20.9108, -3.71069, 10.5291, 1.03", "-20.8672, -2.82288, 10.845, 1.03", "-20.8454, -1.87418, 11.1509, 0.88", "-20.8489, -1.02915, 11.3947, 0.88", "-20.8645, -0.212076, 11.578, 1.11", "-20.8845, 0.383426, 11.6876, 1.11", "-20.9267, 1.1939, 11.7998, 0.74", "-20.958, 1.97591, 11.9084, 0.81", "-21.0077, 2.99807, 12.0425, 0.81", "-21.0422, 3.89967, 12.1206, 0.96", "-21.071, 4.79528, 12.1675, 0.66", "-21.0824, 5.78175, 12.1936, 0.52", "-21.0904, 6.67993, 12.2098, 0.74", "-21.0983, 7.20182, 12.23, 0.74", "-21.1331, 8.36704, 12.2938, 0.74", "-21.1799, 9.26217, 12.3626, 0.74", "-21.2736, 10.1692, 12.4648, 0.74", "-21.4703, 11.2009, 12.6205, 0.66", "-21.7737, 12.2098, 12.8123, 0.96", "-22.0095, 12.8451, 12.9666, 0.96", "-22.2459, 13.4062, 13.1446, 0.96", "-22.7252, 14.4901, 13.5098, 0.81", "-23.1028, 15.3563, 13.8068, 0.96", "-23.4279, 16.244, 14.0976, 1.11", "-23.6417, 17.0035, 14.3488, 0.96", "-23.828, 17.9209, 14.6668, 0.88", "-23.9333, 18.8109, 14.9745, 0.88", "-23.9585, 19.5504, 15.2268, 0.88", "-23.9489, 20.6102, 15.5644, 1.03", "-23.9344, 21.6291, 15.8611, 0.74", "-23.9446, 22.0671, 15.9758, 0.74", "-24.0207, 22.8446, 16.16, 0.88", "-24.1091, 23.3519, 16.2832, 0.88", "-24.3477, 24.2566, 16.5044, 0.74", "-24.6414, 25.0614, 16.7068, 0.66", "-24.8854, 25.5815, 16.8392, 0.66", "-25.5468, 26.7012, 17.1688, 1.03", "-25.866, 27.1682, 17.3084, 1.03", "-26.336, 27.8238, 17.4954, 0.81", "-26.6813, 28.319, 17.6196, 0.81", "-27.1287, 28.9809, 17.7279, 0.52", "-27.4454, 29.4816, 17.7692, 0.52", "-27.8805, 30.2321, 17.7743, 0.74", "-28.2505, 30.955, 17.7498, 0.81", "-28.5911, 31.7448, 17.7092, 0.81", "-28.8768, 32.5472, 17.675, 0.88", "-29.0683, 33.1904, 17.6649, 1.03", "-29.2263, 33.7735, 17.6738, 1.03", "-29.4585, 34.6162, 17.7161, 0.88", "-29.7138, 35.4885, 17.7612, 0.74", "-30.0271, 36.4972, 17.8154, 0.96", "-30.2721, 37.2399, 17.859, 1.03", "-30.5358, 37.9368, 17.8934, 1.03", "-30.8731, 38.6938, 17.9295, 0.88", "-31.3986, 39.653, 17.981, 0.96", "-31.763, 40.1774, 18.0064, 0.81", "-32.0741, 40.5354, 18.0264, 0.96", "-32.5195, 40.9679, 18.0668, 1.18", "-32.8996, 41.2974, 18.1275, 1.18", "-33.3458, 41.6703, 18.231, 1.11", "-33.7877, 42.0716, 18.3672, 1.25", "-34.2144, 42.5464, 18.5297, 1.25", "-34.6373, 43.1634, 18.7238, 1.03", "-34.9426, 43.7838, 18.902, 0.88", "-35.177, 44.5303, 19.0964, 0.74", "-35.2924, 45.2827, 19.2735, 0.74", "-35.3002, 46.2812, 19.4812, 0.81", "-35.2284, 46.9924, 19.5904, 0.81", "-35.1061, 47.6901, 19.6485, 0.96", "-34.9868, 48.3388, 19.6585, 0.96", "-34.8947, 48.8778, 19.6458, 0.88", "-34.8063, 49.5833, 19.6314, 0.88", "-34.7476, 50.4308, 19.6301, 0.81", "-34.7242, 51.2483, 19.6517, 0.74", "-34.7214, 52.2914, 19.7207, 0.88", "-34.7254, 52.9636, 19.7987, 0.88", "-34.7047, 53.6909, 19.9067, 1.03", "-34.6277, 54.466, 20.0425, 0.96", "-34.4746, 55.1037, 20.1721, 0.88", "-34.2557, 55.6267, 20.2674, 1.03", "-33.8458, 56.3043, 20.3732, 0.96", "-33.4598, 56.8668, 20.4377, 0.88", "-33.1002, 57.3621, 20.4724, 0.88", "-32.6021, 58.0935, 20.522, 0.81", "-32.1387, 58.8766, 20.5847, 0.74", "-31.6227, 59.864, 20.6792, 0.81", "-31.2824, 60.6101, 20.7549, 1.03", "-31.1441, 60.9541, 20.795, 1.03", "-30.7591, 61.9923, 20.919, 0.81", "-30.4543, 62.8555, 21.0153, 0.88", "-30.1675, 63.6188, 21.0888, 0.88", "-29.7545, 64.5665, 21.1449, 0.88", "-29.4443, 65.1471, 21.1693, 0.88", "-29.09, 65.6993, 21.1847, 1.11", "-28.6612, 66.2954, 21.1966, 1.11", "-28.1015, 67.0676, 21.2134, 0.81", "-27.6133, 67.779, 21.2388, 0.96", "-27.0316, 68.6665, 21.2881, 0.96", "-26.5362, 69.4709, 21.3102, 0.88", "-25.9139, 70.5549, 21.3217, 0.88", "-25.5371, 71.2891, 21.3094, 1.03", "-25.2108, 72.0662, 21.2833, 1.03", "-24.8671, 73.191, 21.2417, 0.88", "-24.6993, 74.0082, 21.2121, 0.88", "-24.6131, 74.6206, 21.1855, 0.74", "-24.5377, 75.3129, 21.1589, 0.88", "-24.4611, 76.2862, 21.1445, 0.81", "-24.4134, 77.4914, 21.1971, 0.81", "-24.4071, 78.6372, 21.3332, 0.88", "-24.4177, 79.1579, 21.4382, 0.88", "-24.4832, 80.4202, 21.7556, 0.81", "-24.5932, 81.5724, 22.1017, 0.74", "-24.7775, 82.7176, 22.5031, 0.88", "-24.9775, 83.4895, 22.8138, 0.96", "-25.3527, 84.603, 23.3015, 1.03", "-25.6584, 85.4634, 23.7074, 0.88", "-26.0244, 86.4765, 24.1955, 1.11", "-26.2308, 87.1023, 24.4859, 1.25", "-26.4803, 88.055, 24.8827, 0.81", "-26.6592, 89.0483, 25.2579, 0.66", "-26.814, 90.5457, 25.7973, 0.66", "-26.8608, 91.3296, 26.0618, 0.96", "-26.8834, 91.9132, 26.241, 0.96", "-26.9185, 92.6415, 26.4287, 0.96", "-26.9881, 93.2839, 26.5623, 0.81", "-27.1503, 93.9156, 26.6594, 0.59", "-27.4403, 94.6146, 26.7262, 0.66", "-27.6879, 95.1131, 26.7744, 0.96", "-27.8975, 95.5093, 26.8152, 0.96", "-28.447, 96.5502, 26.9477, 0.74", "-28.7873, 97.2777, 27.0739, 0.66", "-28.9764, 97.7679, 27.196, 0.88", "-29.1431, 98.2868, 27.3665, 0.88", "-29.3416, 98.9215, 27.606, 0.74", "-29.5103, 99.4521, 27.8456, 0.74", "-29.7412, 100.255, 28.244, 0.81", "-29.9496, 101.044, 28.6381, 0.66", "-30.1724, 101.932, 29.0707, 0.81", "-30.4152, 102.907, 29.5373, 0.96", "-30.6423, 103.795, 29.9414, 1.11", "-30.872, 104.701, 30.3153, 0.81", "-31.0846, 105.537, 30.6354, 0.59", "-31.2573, 106.205, 30.8769, 0.81", "-31.5029, 107.133, 31.2146, 0.59", "-31.7237, 107.96, 31.5098, 0.74", "-31.9569, 108.765, 31.7821, 1.03", "-32.2126, 109.599, 32.0478, 1.03", "-32.4585, 110.468, 32.27, 0.74", "-32.6277, 111.152, 32.3952, 0.74", "-32.8525, 112.144, 32.5061, 0.74", "-33.061, 113.149, 32.6009, 0.59", "-33.1801, 113.773, 32.6596, 0.59", "-33.393, 114.828, 32.7671, 0.66", "-33.5642, 115.515, 32.8577, 0.52", "-33.8126, 116.273, 32.9908, 0.74", "-34.1246, 117.033, 33.1688, 0.96", "-34.4659, 117.761, 33.4002, 0.74", "-35.0314, 118.799, 33.7915, 0.74", "-35.5037, 119.549, 34.0899, 0.88", "-35.8912, 120.102, 34.2832, 0.88", "-36.4624, 120.858, 34.4982, 0.74", "-37.2216, 121.791, 34.7037, 0.74", "-37.9464, 122.654, 34.868, 0.81", "-38.5874, 123.454, 35.0072, 0.96", "-39.1933, 124.285, 35.1398, 0.88", "-39.6624, 125.019, 35.2488, 0.88", "-40.227, 126.097, 35.3973, 0.81", "-40.5503, 126.892, 35.4875, 0.81", "-40.8978, 128.036, 35.6055, 0.96", "-41.1656, 129.074, 35.7137, 1.11", "-41.414, 130.069, 35.8199, 0.81", "-41.6846, 131.088, 35.9235, 0.81", "-41.9061, 131.816, 35.9961, 0.81", "-42.2567, 132.737, 36.0966, 0.81", "-42.9747, 134.194, 36.2857, 0.96", "-43.5009, 135.024, 36.4206, 0.96", "-44.1163, 135.818, 36.5813, 1.03", "-44.7279, 136.51, 36.751, 1.11", "-45.3991, 137.23, 36.9581, 0.88", "-46.0532, 137.92, 37.1738, 0.66", "-46.8133, 138.733, 37.4282, 0.66", "-47.6333, 139.697, 37.7446, 0.74", "-48.1674, 140.425, 37.996, 0.88", "-48.5863, 141.097, 38.2378, 0.81", "-48.9001, 141.687, 38.4576, 0.81", "-49.1297, 142.193, 38.6407, 0.81", "-49.5913, 143.299, 39.0253, 0.59", "-49.9392, 144.084, 39.2866, 0.74", "-50.2453, 144.664, 39.4587, 0.52", "-50.5727, 145.16, 39.5799, 0.74", "-51.1058, 145.799, 39.6997, 0.88", "-51.6096, 146.281, 39.7568, 0.88", "-52.3138, 146.824, 39.7757, 0.74", "-53.1212, 147.391, 39.7614, 0.88", "-53.8098, 147.887, 39.7352, 0.66", "-54.408, 148.337, 39.7161, 0.66", "-54.8701, 148.699, 39.721, 0.66", "-55.3944, 149.128, 39.7555, 0.59", "-55.9232, 149.59, 39.8365, 0.44", "-56.6484, 150.284, 40.0365, 0.88", "-57.2264, 150.928, 40.2466, 1.03", "-57.7504, 151.62, 40.478, 0.74", "-58.2578, 152.391, 40.7358, 0.74", "-58.7113, 153.139, 40.9817, 0.74", "-59.0941, 153.755, 41.1871, 0.74", "-59.5949, 154.568, 41.4362, 0.44", "-60.0396, 155.327, 41.6556, 0.66", "-60.6602, 156.426, 41.9581, 0.81", "-61.1832, 157.37, 42.2149, 0.81", "-61.7526, 158.373, 42.4897, 0.66", "-62.269, 159.273, 42.7493, 0.66", "-62.8028, 160.157, 43.0493, 0.66", "-63.2372, 160.834, 43.2748, 0.74", "-63.7558, 161.59, 43.4998, 0.74", "-64.3304, 162.379, 43.694, 0.59", "-64.8128, 163.0, 43.7983, 0.81", "-65.4306, 163.722, 43.8621, 0.59", "-66.052, 164.422, 43.8555, 0.74", "-66.5777, 165.072, 43.8154, 0.81", "-66.8458, 165.445, 43.7781, 0.81", "-67.3038, 166.191, 43.7418, 0.81", "-67.5918, 166.723, 43.7561, 0.81", "-67.917, 167.402, 43.8458, 0.59", "-68.3251, 168.289, 44.077, 0.59", "-68.7542, 169.145, 44.3784, 0.66", "-69.2135, 169.928, 44.7507, 0.66", "-69.7037, 170.591, 45.203, 0.59", "-70.3252, 171.279, 45.8232, 0.81", "-70.8659, 171.805, 46.3678, 0.81", "-71.6456, 172.499, 47.1501, 0.52", "-72.3191, 173.094, 47.8088, 0.52", "-73.2636, 173.971, 48.5824, 0.74", "-73.7841, 174.499, 48.9301, 0.74", "-74.3708, 175.132, 49.2128, 1.25", "-74.8511, 175.67, 49.3502, 1.25", "-75.5076, 176.384, 49.381, 0.96", "-76.4714, 177.365, 49.2626, 0.81", "-77.1044, 177.922, 49.1303, 0.74", "-77.8354, 178.427, 48.9925, 0.52", "-78.4375, 178.73, 48.9138, 0.52", "-79.7756, 179.185, 48.7778, 0.44", "-80.8221, 179.381, 48.7137, 0.52", "-81.8253, 179.408, 48.6976, 0.66", "-82.8074, 179.306, 48.7009, 0.66", "-83.644, 179.134, 48.7052, 0.66", "-84.2867, 178.947, 48.7339, 0.66", "-84.835, 178.738, 48.7696, 0.52", "-85.7473, 178.355, 48.8111, 0.44", "-86.4905, 178.038, 48.8276, 0.37", "-87.4949, 177.588, 48.8389, 0.37", "-88.2719, 177.217, 48.8374, 0.37", "-89.2911, 176.671, 48.8164, 0.74", "-89.9747, 176.252, 48.7847, 0.74", "-90.7058, 175.734, 48.7235, 0.74", "-91.3629, 175.205, 48.6584, 0.44", "-91.9317, 174.713, 48.6042, 0.44", "-92.373, 174.338, 48.5984, 0.66", "-93.1015, 173.715, 48.7074, 0.66", "-93.7274, 173.175, 48.8388, 0.52", "-94.3012, 172.672, 48.9413, 0.52", "-94.8121, 172.186, 49.0, 0.52", "-95.3806, 171.554, 49.0288, 0.66", "-96.0348, 170.65, 48.9914, 0.59", "-96.5234, 169.778, 48.8801, 0.37", "-96.9077, 168.955, 48.7324, 0.37", "-97.2349, 168.18, 48.5352, 0.29", "-97.4773, 167.559, 48.3463, 0.29", "-97.8311, 166.674, 48.0111, 0.44", "-98.1163, 166.074, 47.7488, 0.44", "-98.488, 165.402, 47.4957, 0.66", "-98.9238, 164.762, 47.2876, 0.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-76.2909, 101.098, 27.0246, 0.66", "-74.7328, 102.053, 29.1605, 0.66", "-73.9011, 102.657, 30.2267, 0.66", "-71.9969, 104.329, 32.6632, 0.66", "-71.239, 105.119, 33.6971, 0.66", "-70.3421, 106.236, 35.0219, 0.44", "-69.9951, 106.776, 35.5945, 0.44", "-69.5341, 107.5, 36.23, 0.74", "-69.2551, 108.15, 36.6836, 0.74", "-69.1183, 109.221, 37.1385, 0.66", "-69.0713, 109.931, 37.4261, 0.44", "-68.9859, 110.905, 37.8055, 0.37", "-68.8215, 111.586, 38.1194, 0.37", "-68.3677, 112.448, 38.6655, 0.81", "-68.0735, 112.893, 38.9329, 0.81", "-67.4502, 113.753, 39.3834, 0.44", "-66.9273, 114.534, 39.7548, 0.44", "-66.5458, 115.301, 40.065, 0.44", "-66.1529, 117.281, 40.6254, 0.52", "-66.2475, 119.039, 40.9526, 0.81", "-66.4095, 119.736, 41.0394, 0.81", "-66.9894, 121.376, 41.1642, 0.52", "-67.5918, 122.969, 41.2176, 0.52", "-68.2277, 124.654, 41.2428, 0.52", "-68.5771, 125.637, 41.2199, 0.81", "-68.9031, 126.777, 41.2508, 0.81", "-69.2373, 128.35, 41.3084, 0.44", "-69.4131, 129.879, 41.3623, 0.44", "-69.4292, 130.794, 41.4118, 0.44", "-69.3641, 132.278, 41.5182, 0.44", "-69.2737, 133.474, 41.6413, 0.74", "-69.2157, 134.159, 41.7355, 0.74", "-69.173, 134.959, 41.8727, 0.44", "-69.185, 136.003, 42.0647, 0.29", "-69.217, 137.078, 42.2713, 0.88", "-69.2439, 138.146, 42.5122, 0.88", "-69.262, 138.898, 42.6586, 0.88", "-69.2769, 139.731, 42.8206, 0.66", "-69.3075, 141.05, 43.0517, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-76.2909, 101.098, 27.0246, 0.52", "-77.0909, 101.371, 27.5935, 0.52", "-77.9858, 101.796, 28.184, 0.52", "-78.7558, 102.255, 28.6626, 0.66", "-79.7571, 102.977, 29.2442, 0.81", "-80.1851, 103.337, 29.4757, 0.81", "-81.0163, 104.136, 29.8935, 0.66", "-81.6514, 104.919, 30.2397, 0.88", "-82.0117, 105.436, 30.4194, 0.88", "-82.4572, 106.116, 30.5924, 0.66", "-82.8501, 106.764, 30.7332, 0.66", "-83.2194, 107.422, 30.8878, 0.66", "-83.715, 108.403, 31.1402, 0.66", "-83.978, 109.0, 31.3145, 0.59", "-84.3156, 109.906, 31.6607, 0.52", "-84.5448, 110.66, 32.0356, 0.52", "-84.6921, 111.239, 32.3725, 0.44", "-84.8783, 112.057, 32.9054, 0.44", "-85.01, 112.725, 33.3558, 0.44", "-85.1995, 113.813, 34.1067, 0.59", "-85.3582, 114.711, 34.7006, 0.74", "-85.4677, 115.223, 35.0089, 0.59", "-85.6865, 116.048, 35.4593, 0.81", "-85.8176, 116.414, 35.6283, 0.81", "-86.1392, 117.087, 35.8415, 0.81", "-86.6282, 117.885, 36.0105, 0.37", "-86.9782, 118.369, 36.0961, 0.37", "-87.4473, 118.962, 36.1771, 0.37", "-87.9886, 119.582, 36.2471, 0.37", "-88.5278, 120.138, 36.2946, 0.37", "-89.4895, 120.977, 36.3762, 0.96", "-90.0125, 121.374, 36.4501, 1.11", "-90.9731, 122.047, 36.5964, 0.59", "-91.6695, 122.515, 36.7068, 0.52", "-92.4019, 123.012, 36.8214, 0.52", "-93.4279, 123.736, 36.9732, 0.66", "-94.3343, 124.397, 37.096, 1.25", "-94.7488, 124.73, 37.1619, 1.4", "-95.759, 125.631, 37.3498, 0.52", "-96.3844, 126.26, 37.462, 0.52", "-97.3881, 127.384, 37.6327, 0.52", "-97.9495, 128.076, 37.6998, 0.52", "-98.5846, 128.893, 37.7435, 0.52", "-99.2665, 129.815, 37.8164, 0.66", "-99.7013, 130.45, 37.8784, 0.74", "-100.305, 131.367, 37.9877, 0.88", "-100.815, 132.167, 38.1018, 0.37", "-101.273, 132.91, 38.1971, 0.29", "-101.736, 133.662, 38.2864, 0.37", "-102.106, 134.287, 38.3493, 0.52", "-102.329, 134.647, 38.3694, 0.74", "-102.69, 135.198, 38.4237, 0.74", "-103.23, 135.88, 38.5269, 0.44", "-103.731, 136.389, 38.6289, 0.44", "-104.311, 136.897, 38.7446, 0.29", "-104.862, 137.366, 38.9017, 0.29", "-106.122, 138.482, 39.3474, 0.37", "-106.805, 139.142, 39.6413, 0.37", "-107.519, 139.921, 40.0014, 0.37", "-107.791, 140.253, 40.14, 0.37", "-108.31, 140.927, 40.3977, 0.29", "-108.628, 141.337, 40.5373, 0.29", "-108.989, 141.766, 40.644, 0.29", "-109.613, 142.478, 40.873, 0.29", "-110.257, 143.132, 41.1312, 0.37", "-110.807, 143.606, 41.3535, 0.37", "-111.615, 144.176, 41.6665, 0.37", "-112.344, 144.61, 41.9794, 0.29", "-113.282, 145.115, 42.4251, 0.29", "-113.733, 145.344, 42.6811, 0.29", "-114.464, 145.725, 43.194, 0.88", "-114.524, 145.211, 43.4677, 1.18", "-114.552, 144.803, 43.664, 1.18" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.8061, 21.4203, 11.7706, 0.66", "-14.3341, 20.5316, 11.3405, 0.66", "-15.3578, 20.0203, 11.0854, 0.66", "-16.0101, 19.7446, 10.9207, 0.88", "-17.0083, 19.4197, 10.6276, 0.74", "-17.7235, 19.2525, 10.4084, 0.88", "-18.6042, 19.1174, 10.134, 1.18", "-19.6081, 19.1281, 9.86844, 1.18", "-20.2261, 19.2395, 9.6809, 1.18", "-21.4938, 19.6691, 9.24968, 0.66", "-22.2282, 19.9885, 8.98821, 0.59", "-22.739, 20.222, 8.80361, 0.59", "-23.666, 20.6252, 8.42229, 0.52", "-24.3211, 20.8581, 8.12912, 0.52", "-25.1411, 21.0958, 7.78645, 0.52", "-26.4151, 21.4499, 7.29418, 0.52", "-27.4012, 21.734, 6.92586, 0.74", "-28.505, 22.0941, 6.53746, 0.44", "-29.5716, 22.5145, 6.19025, 0.44", "-30.8731, 23.0853, 5.79126, 0.66", "-31.6969, 23.534, 5.53991, 0.81", "-32.3556, 24.0038, 5.31397, 0.96", "-32.7463, 24.3272, 5.16865, 0.96", "-33.2111, 24.7602, 4.95689, 0.59", "-33.5913, 25.1268, 4.72432, 0.44", "-34.1067, 25.5203, 4.38829, 0.44", "-34.8619, 26.0014, 3.978, 0.29", "-35.4087, 26.3248, 3.73973, 0.29", "-36.0865, 26.701, 3.50081, 0.59", "-36.5692, 26.9334, 3.39364, 0.59", "-38.0241, 27.4349, 3.27473, 0.74", "-38.9778, 27.7321, 3.30436, 0.59", "-39.8523, 27.9859, 3.4161, 0.59", "-40.6291, 28.1979, 3.56111, 0.66", "-41.7054, 28.4992, 3.79885, 0.66", "-43.2958, 28.9735, 4.17184, 0.96", "-44.5438, 29.3497, 4.42816, 0.52", "-45.3326, 29.5377, 4.56945, 0.52", "-46.0149, 29.6843, 4.6776, 0.59", "-47.1621, 29.9648, 4.82348, 0.37", "-47.8198, 30.1331, 4.83471, 0.37", "-48.8004, 30.3403, 4.7409, 0.37", "-50.0395, 30.5018, 4.53461, 0.59", "-50.6238, 30.585, 4.4051, 0.59", "-51.1084, 30.67, 4.27887, 0.59", "-52.243, 30.9403, 3.92548, 0.29", "-53.0106, 31.1972, 3.6428, 0.29", "-53.5074, 31.4182, 3.43871, 0.59", "-54.2763, 31.822, 3.09531, 0.59", "-54.8807, 32.1334, 2.81675, 0.52", "-55.7029, 32.5205, 2.43461, 0.52", "-56.5215, 32.8548, 2.06295, 0.52", "-57.1351, 33.0901, 1.76913, 0.52", "-58.0688, 33.3844, 1.29576, 0.74", "-58.7204, 33.5299, 0.961763, 0.88", "-59.2061, 33.6114, 0.720376, 0.88", "-60.0724, 33.7154, 0.334071, 0.59" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.8061, 21.4203, 11.7706, 1.18", "-11.9944, 22.2561, 12.6787, 1.18", "-11.1999, 22.9933, 13.5222, 1.18", "-10.3792, 23.6933, 14.3561, 1.18", "-9.446, 24.4747, 15.3642, 1.18", "-8.58773, 25.2213, 16.3336, 1.03", "-7.89037, 25.8887, 17.156, 1.25", "-7.48624, 26.3011, 17.673, 1.25", "-6.74172, 27.1834, 18.5035, 0.96", "-6.0311, 28.2351, 19.1914, 1.55", "-5.65336, 28.9157, 19.4769, 1.55", "-5.09234, 30.2113, 19.8165, 1.25", "-4.64466, 31.5982, 20.0327, 1.11", "-3.90104, 35.0344, 20.2676, 0.81", "-3.78893, 36.0941, 20.2376, 1.03", "-3.79602, 37.1556, 20.0932, 1.03", "-4.03862, 38.4503, 19.8867, 0.88", "-4.55624, 39.5178, 19.7246, 0.88", "-5.48313, 40.4872, 19.7864, 0.96", "-6.26859, 41.093, 20.023, 0.96", "-7.50794, 41.9207, 20.4159, 1.03", "-9.56603, 43.1135, 21.1836, 1.25", "-10.5832, 43.6353, 21.661, 1.18", "-12.9874, 44.7993, 23.1317, 1.25", "-14.1244, 45.3237, 24.0598, 1.62" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-36.7412, 282.688, -89.1618, 0.22", "-37.8031, 283.142, -89.4576, 0.22", "-38.8332, 283.583, -89.7445, 0.44", "-39.7461, 283.973, -89.9988, 0.37" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-36.7412, 282.688, -89.1618, 0.22", "-38.3916, 282.489, -89.7016, 0.22", "-39.8726, 282.31, -90.1859, 0.22", "-41.0313, 282.171, -90.5649, 0.22", "-41.5758, 282.105, -90.7429, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.2203, 191.567, -17.5396, 0.37", "13.4466, 192.93, -17.4248, 0.37", "13.6408, 193.852, -17.2789, 0.66", "13.8356, 194.776, -17.1194, 0.66", "14.0959, 196.118, -16.9045, 0.44", "14.2417, 197.002, -16.7807, 0.44", "14.4849, 198.845, -16.5728, 0.88", "14.5051, 199.057, -16.5502, 1.03", "14.5704, 200.294, -16.4662, 0.66", "14.5986, 201.439, -16.4399, 0.88", "14.5896, 202.13, -16.4631, 0.88", "14.5542, 203.022, -16.5421, 0.66", "14.4752, 204.184, -16.7105, 0.37", "14.3921, 205.044, -16.8307, 0.37", "14.2085, 206.534, -17.0393, 0.59", "14.0848, 207.46, -17.1638, 0.81", "13.8793, 209.132, -17.3636, 0.37", "13.7492, 210.205, -17.4873, 0.37", "13.5693, 211.671, -17.6597, 0.81", "13.473, 212.407, -17.7586, 0.96", "13.3011, 213.816, -17.9679, 0.37", "13.1747, 215.015, -18.1645, 0.29", "13.0533, 216.388, -18.4117, 0.52", "12.9094, 218.082, -18.7595, 0.74", "12.8096, 219.093, -19.0037, 0.88", "12.6861, 220.111, -19.2645, 0.66", "12.5278, 221.335, -19.5794, 0.59", "12.3779, 222.533, -19.8723, 0.74", "12.2582, 223.637, -20.114, 0.74", "12.1802, 225.002, -20.3679, 0.59", "12.1833, 226.0, -20.5063, 0.44", "12.2682, 227.474, -20.6554, 0.29", "12.3982, 228.554, -20.7128, 0.37", "12.7298, 230.365, -20.7166, 0.52", "13.0938, 231.96, -20.6572, 0.66", "13.3586, 233.052, -20.5996, 0.66", "13.5362, 233.988, -20.5394, 0.37", "13.6849, 235.077, -20.4646, 0.52", "13.8741, 236.614, -20.3145, 0.37", "14.0439, 238.184, -20.1186, 0.52", "14.1018, 239.165, -20.005, 0.59", "14.1448, 241.194, -19.8339, 0.81", "14.1283, 242.485, -19.7782, 0.29", "14.0626, 243.437, -19.8034, 0.29", "13.9385, 244.313, -19.873, 0.59", "13.7254, 245.451, -20.0102, 0.59", "13.3621, 247.105, -20.2815, 0.44", "12.9168, 248.927, -20.6691, 0.29", "12.4505, 250.582, -21.0639, 0.37", "12.1499, 251.562, -21.3153, 0.66", "11.7494, 252.877, -21.6515, 0.29", "11.2671, 254.518, -22.061, 0.29", "10.6542, 256.596, -22.5804, 0.29", "10.3321, 257.728, -22.8607, 0.44", "10.2519, 258.05, -22.9379, 0.44", "10.0093, 259.151, -23.2225, 0.22", "9.87026, 259.801, -23.3875, 0.22" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.2203, 191.567, -17.5396, 0.52", "13.6781, 191.302, -17.3786, 0.52", "13.9828, 191.094, -17.2649, 0.52", "14.3651, 190.837, -17.1159, 0.81", "14.6827, 190.638, -16.9859, 0.88", "15.174, 190.355, -16.7758, 0.37", "15.7149, 190.043, -16.5445, 0.29", "16.4157, 189.622, -16.2442, 0.29", "16.7809, 189.413, -16.0861, 0.44", "17.3686, 189.095, -15.8229, 0.44", "18.018, 188.757, -15.5071, 0.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-47.3035, -73.2159, 5.46193, 0.74", "-48.4126, -72.8725, 6.11651, 0.74", "-49.378, -72.6658, 6.69558, 0.88", "-50.2646, -72.5902, 7.21367, 1.03", "-51.199, -72.6099, 7.77459, 0.88", "-52.9782, -72.7836, 8.84799, 1.03", "-53.3501, -72.8394, 9.05407, 1.03", "-54.3131, -73.1293, 9.57009, 0.81", "-55.3672, -73.6006, 10.0769, 0.66", "-56.0852, -74.0851, 10.3682, 0.66", "-56.6238, -74.5456, 10.5749, 0.52", "-57.5315, -75.4285, 10.8924, 0.52", "-58.2376, -76.1473, 11.1719, 0.52", "-58.8654, -76.8027, 11.4588, 0.52", "-60.4127, -78.4086, 12.2094, 0.52", "-61.3306, -79.3592, 12.6598, 0.52", "-62.0564, -80.0794, 13.0194, 0.52", "-63.0357, -80.946, 13.4809, 0.74", "-63.668, -81.3789, 13.7363, 0.96", "-64.4821, -81.7672, 13.9719, 0.66", "-65.0267, -81.9348, 14.0598, 0.66", "-66.128, -82.1957, 14.1201, 0.59", "-67.4788, -82.423, 14.1042, 0.44", "-68.4793, -82.5097, 14.0436, 0.44", "-69.5198, -82.5429, 13.9405, 0.44", "-70.4468, -82.5412, 13.8407, 0.44", "-71.5425, -82.5337, 13.7102, 0.44", "-72.1906, -82.5204, 13.6258, 0.44", "-73.228, -82.5123, 13.4397, 0.59", "-73.7865, -82.5184, 13.305, 0.52", "-74.6955, -82.5378, 13.0619, 0.37", "-75.722, -82.5993, 12.7693, 0.52", "-76.2925, -82.6719, 12.6, 0.52", "-77.4807, -82.8765, 12.1842, 0.74", "-78.2381, -83.0166, 11.8773, 0.59", "-78.8689, -83.1121, 11.6044, 0.59", "-79.5485, -83.186, 11.2735, 0.37", "-80.2046, -83.248, 10.9444, 0.29", "-81.1094, -83.3394, 10.5219, 0.29", "-81.7418, -83.3838, 10.2573, 0.37", "-82.2407, -83.4314, 10.0657, 0.37", "-82.8936, -83.5107, 9.84155, 0.37", "-83.6248, -83.63, 9.58807, 0.59", "-84.2382, -83.781, 9.38285, 0.74", "-84.5764, -83.8959, 9.26171, 0.74", "-85.2445, -84.1592, 8.9788, 0.44", "-85.9938, -84.4396, 8.62389, 0.59", "-86.7908, -84.7281, 8.22165, 0.74", "-87.7122, -85.0495, 7.74777, 0.29", "-88.4824, -85.3136, 7.35422, 0.29", "-89.5463, -85.7186, 6.8427, 0.37", "-90.2391, -86.0262, 6.50301, 0.37", "-90.8789, -86.3175, 6.20217, 0.29", "-91.702, -86.6643, 5.84685, 0.29", "-92.2828, -86.8643, 5.60819, 0.29", "-93.0625, -87.0811, 5.3172, 0.29", "-94.0131, -87.2939, 5.00267, 0.29", "-95.0132, -87.4581, 4.69525, 0.29", "-95.7775, -87.5099, 4.4688, 0.29", "-97.0367, -87.4961, 4.0795, 0.74", "-97.8155, -87.4271, 3.83421, 0.81", "-98.8391, -87.276, 3.48516, 0.29", "-99.2837, -87.2127, 3.33367, 0.29", "-100.1, -87.1246, 3.01531, 0.88", "-100.686, -87.0733, 2.75751, 1.03", "-101.15, -87.0337, 2.52737, 0.52", "-101.987, -86.9639, 2.08709, 0.29", "-102.951, -86.893, 1.5813, 0.29", "-103.347, -86.8653, 1.39796, 0.52", "-103.737, -86.8312, 1.24111, 0.52", "-104.593, -86.7238, 0.932073, 0.44", "-105.354, -86.5944, 0.656794, 0.59", "-106.251, -86.3819, 0.336154, 0.81", "-106.848, -86.2134, 0.111426, 0.81", "-107.647, -85.987, -0.193722, 0.81", "-108.245, -85.8215, -0.434239, 0.74", "-109.164, -85.5773, -0.76669, 0.66", "-110.079, -85.3664, -1.08289, 0.81", "-110.762, -85.2519, -1.3041, 0.81", "-111.658, -85.1724, -1.56637, 0.59", "-112.611, -85.1652, -1.81382, 0.44", "-113.888, -85.2472, -2.11098, 0.37", "-114.834, -85.3564, -2.27723, 0.59", "-115.67, -85.4672, -2.38279, 0.66", "-116.398, -85.556, -2.45559, 0.66", "-116.819, -85.597, -2.49275, 0.59", "-117.585, -85.6368, -2.56192, 0.59", "-118.515, -85.638, -2.70284, 0.29", "-119.295, -85.6158, -2.77688, 0.29", "-119.902, -85.6064, -2.82484, 0.29", "-120.647, -85.6301, -2.87927, 0.81", "-121.167, -85.6878, -2.90288, 0.96", "-121.823, -85.8308, -2.91621, 0.96", "-123.004, -86.2472, -3.01408, 0.22", "-123.281, -86.3703, -3.03678, 0.44", "-123.718, -86.5841, -3.05376, 0.44", "-124.366, -86.9065, -3.04656, 0.59", "-124.675, -87.0513, -3.03392, 0.81", "-125.89, -87.5376, -2.91234, 0.22", "-126.621, -87.7712, -2.81609, 0.81", "-127.308, -87.9522, -2.7167, 0.96", "-127.874, -88.0779, -2.61937, 0.96", "-128.715, -88.2285, -2.46466, 0.52", "-130.416, -88.4813, -2.14224, 1.92", "-131.277, -88.5807, -1.94826, 2.58", "-132.034, -88.655, -1.79217, 2.73", "-133.197, -88.7724, -1.58951, 1.92", "-134.457, -88.9265, -1.44237, 1.11", "-135.355, -89.0549, -1.38137, 0.74", "-136.52, -89.2489, -1.4006, 0.74", "-137.438, -89.4389, -1.48294, 1.18", "-138.6, -89.716, -1.66195, 0.37", "-139.758, -90.0258, -1.9565, 0.44", "-140.446, -90.2432, -2.18718, 0.88", "-141.239, -90.5435, -2.49987, 0.88", "-142.094, -90.941, -2.88414, 0.81", "-142.505, -91.1564, -3.06116, 0.88", "-143.024, -91.4178, -3.23857, 0.74", "-143.707, -91.7228, -3.38973, 0.44", "-144.362, -91.9583, -3.45951, 0.74", "-145.329, -92.2053, -3.45577, 0.29", "-145.772, -92.2802, -3.42937, 0.29", "-146.905, -92.4439, -3.3273, 0.66", "-147.393, -92.5336, -3.27276, 0.66", "-148.123, -92.6971, -3.26161, 0.59", "-148.59, -92.8397, -3.31247, 0.37", "-149.219, -93.08, -3.45122, 0.29", "-149.923, -93.4086, -3.66256, 0.29", "-150.925, -93.9556, -4.02697, 0.29", "-152.12, -94.6462, -4.4948, 0.29", "-153.107, -95.2311, -4.89408, 0.29", "-153.819, -95.6509, -5.18901, 0.22", "-154.415, -95.9754, -5.44286, 0.22", "-154.415, -95.9754, -5.44286, 0.52", "-154.804, -96.1185, -5.59351, 0.52", "-155.608, -96.3961, -5.7538, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-47.3035, -73.2159, 5.46193, 0.66", "-47.6279, -74.1794, 5.72501, 0.66", "-47.8969, -74.9556, 6.00383, 0.59", "-48.0668, -75.3971, 6.17638, 0.74", "-48.306, -75.9361, 6.38712, 0.37", "-48.5159, -76.3334, 6.5378, 0.59", "-48.8606, -76.889, 6.76061, 0.52", "-49.1891, -77.3355, 6.95944, 0.59", "-49.5128, -77.7397, 7.13892, 0.29", "-49.778, -78.0778, 7.27709, 0.29", "-50.0971, -78.5277, 7.42969, 0.52", "-50.461, -79.1867, 7.59636, 0.52", "-50.7234, -79.8405, 7.72647, 0.52", "-50.8839, -80.3718, 7.85837, 0.74", "-51.0252, -80.9003, 8.01365, 0.59", "-51.2033, -81.5727, 8.22412, 0.52", "-51.3738, -82.1685, 8.42037, 0.44", "-51.5428, -82.6181, 8.56865, 0.44", "-52.0136, -83.4804, 8.8928, 0.66", "-52.3599, -83.961, 9.08201, 0.29", "-52.6274, -84.265, 9.19789, 0.29", "-52.8946, -84.5425, 9.29492, 0.29", "-53.206, -84.8678, 9.39551, 0.66", "-53.4494, -85.1479, 9.4738, 0.88", "-53.6742, -85.4576, 9.54771, 0.88", "-54.0063, -86.0187, 9.68772, 0.59", "-54.2683, -86.5447, 9.80601, 0.52", "-54.4109, -86.8674, 9.86692, 0.52", "-54.64, -87.4482, 9.93854, 0.74", "-54.8148, -87.8921, 9.96636, 0.88", "-54.9944, -88.3149, 9.97516, 0.74", "-55.2396, -88.8814, 9.97636, 0.44", "-55.423, -89.3016, 9.97766, 0.66", "-55.7523, -90.0866, 9.99666, 0.44", "-55.9184, -90.5044, 10.0184, 0.44", "-56.1024, -90.9683, 10.0667, 0.74", "-56.297, -91.4482, 10.1393, 0.74", "-56.5298, -92.0107, 10.2407, 0.74", "-56.8625, -92.7914, 10.3878, 0.52", "-57.177, -93.4934, 10.5245, 0.66", "-57.4556, -94.0834, 10.6189, 0.66", "-57.6852, -94.5318, 10.6764, 0.74", "-57.9433, -95.0069, 10.6967, 0.52", "-58.2263, -95.5231, 10.6803, 0.29", "-58.3759, -95.8087, 10.6562, 0.29", "-58.5277, -96.129, 10.6153, 0.29", "-58.6886, -96.5124, 10.559, 0.59", "-59.0396, -97.4026, 10.4296, 0.66", "-59.2171, -97.9034, 10.3866, 0.52", "-59.3829, -98.3855, 10.4072, 0.96", "-59.5227, -98.8946, 10.4401, 0.66", "-59.6937, -99.5877, 10.5509, 0.44", "-59.789, -99.9659, 10.6765, 0.44", "-59.9405, -100.531, 11.06, 0.44", "-60.0609, -101.158, 11.6597, 0.66", "-60.1374, -101.923, 12.5399, 0.96", "-60.1414, -102.533, 13.3133, 0.81", "-60.1092, -103.09, 14.0333, 0.88", "-60.068, -103.658, 14.722, 0.66", "-60.0584, -104.126, 15.2216, 0.66", "-60.0793, -104.547, 15.5866, 0.59", "-60.1421, -104.973, 15.9086, 0.44", "-60.2008, -105.391, 16.1229, 0.81", "-60.2517, -105.783, 16.2689, 0.81", "-60.3366, -106.379, 16.4535, 0.44", "-60.4407, -106.898, 16.6041, 0.44", "-60.5597, -107.428, 16.7595, 0.66", "-60.7104, -108.062, 16.9538, 0.59", "-60.7992, -108.568, 17.1216, 0.52", "-60.8132, -108.802, 17.2041, 0.74", "-60.7679, -109.773, 17.576, 0.29", "-60.7244, -110.123, 17.7186, 0.29", "-60.6295, -110.663, 17.9416, 0.29", "-60.4741, -111.487, 18.2789, 0.52", "-60.2872, -112.383, 18.6482, 0.37", "-60.1667, -112.879, 18.8633, 0.59", "-60.0701, -113.241, 19.0479, 0.59", "-59.9544, -113.715, 19.3329, 0.44", "-59.8502, -114.195, 19.6899, 0.44", "-59.8092, -114.458, 19.9173, 0.81", "-59.7655, -114.742, 20.1893, 0.81", "-59.6593, -115.294, 20.7201, 0.59", "-59.5731, -115.707, 21.1066, 0.52", "-59.4875, -116.111, 21.494, 0.52", "-59.4179, -116.565, 21.9085, 0.52", "-59.4046, -116.885, 22.1522, 0.29", "-59.4337, -117.269, 22.3771, 0.29", "-59.4976, -117.65, 22.552, 0.52", "-59.591, -118.068, 22.7267, 0.52", "-59.7354, -118.667, 22.9981, 0.29", "-59.8776, -119.237, 23.3013, 0.29", "-59.9795, -119.682, 23.5492, 0.52", "-60.0454, -119.998, 23.7237, 0.52", "-60.1532, -120.485, 23.9849, 0.29", "-60.2718, -121.0, 24.2463, 0.52", "-60.3453, -121.26, 24.3833, 0.52", "-60.5114, -121.777, 24.6749, 0.52", "-60.7183, -122.346, 25.0244, 0.74", "-61.0313, -123.116, 25.4931, 0.22", "-61.2703, -123.636, 25.8027, 0.22", "-61.5123, -124.124, 26.0886, 0.22", "-61.7671, -124.64, 26.411, 0.52", "-61.9844, -125.104, 26.7582, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-49.6821, 10.535, -3.42258, 0.81", "-50.7461, 10.8261, -3.17173, 0.81", "-51.4163, 10.9574, -3.01715, 0.81", "-52.5111, 11.1332, -2.77685, 0.74", "-53.1187, 11.2431, -2.64954, 0.74", "-53.67, 11.3626, -2.53869, 0.81", "-54.5908, 11.6139, -2.3611, 0.96", "-55.172, 11.8174, -2.24271, 0.52", "-55.6103, 12.0205, -2.15919, 0.52", "-56.3264, 12.5251, -2.09469, 0.74", "-56.7259, 12.9143, -2.10758, 0.74", "-57.2252, 13.5249, -2.18574, 0.44", "-57.6907, 14.1889, -2.29767, 0.44", "-58.0375, 14.6836, -2.39668, 0.44", "-58.7574, 15.6128, -2.60841, 0.81", "-59.1631, 16.0563, -2.72902, 0.96", "-59.7934, 16.6076, -2.91025, 0.96", "-60.2717, 16.9302, -3.03422, 0.88", "-60.9695, 17.277, -3.18017, 0.96", "-61.6426, 17.5116, -3.28115, 1.11", "-62.1354, 17.627, -3.32362, 1.11", "-62.6441, 17.7128, -3.35066, 1.11", "-63.0994, 17.7597, -3.35511, 0.74", "-63.6386, 17.7847, -3.34436, 0.29", "-64.4226, 17.7823, -3.27956, 0.29", "-65.1087, 17.7814, -3.18742, 0.88", "-65.6352, 17.7985, -3.08164, 1.03", "-66.2134, 17.8363, -2.9262, 1.03", "-66.7875, 17.8784, -2.74889, 1.11", "-67.7718, 17.97, -2.40707, 0.37", "-68.4913, 18.0478, -2.14577, 0.29", "-69.3067, 18.1344, -1.87426, 0.29", "-69.9801, 18.199, -1.6854, 0.96", "-70.6232, 18.2464, -1.52119, 1.18", "-70.96, 18.2484, -1.44781, 1.33", "-71.9386, 18.1735, -1.27728, 0.44", "-73.0094, 18.0095, -1.10305, 0.44", "-73.5374, 17.9109, -1.02609, 0.37", "-73.979, 17.8418, -0.964798, 0.37", "-74.8023, 17.7637, -0.842761, 0.37", "-75.4602, 17.7551, -0.739394, 0.59", "-76.0804, 17.8091, -0.632807, 0.74", "-76.8303, 17.9166, -0.50179, 0.88", "-77.4569, 18.0488, -0.390913, 0.88", "-77.9876, 18.1965, -0.284205, 0.74", "-78.7472, 18.4528, -0.113563, 0.29", "-79.1552, 18.5988, 0.0107678, 0.22", "-80.0088, 18.8991, 0.317582, 0.22", "-80.8514, 19.1711, 0.668425, 0.59", "-81.4016, 19.3294, 0.914131, 0.81", "-82.2211, 19.5453, 1.29058, 0.81", "-83.2464, 19.7732, 1.78678, 0.96", "-84.0192, 19.9348, 2.15583, 0.59", "-84.7196, 20.1108, 2.47393, 0.22", "-85.2938, 20.2618, 2.70545, 0.22", "-85.7635, 20.4182, 2.88823, 0.44", "-86.5015, 20.7394, 3.16919, 0.59", "-87.169, 21.0713, 3.40464, 0.52", "-88.1573, 21.5882, 3.75757, 0.66", "-88.6911, 21.8637, 3.93416, 0.66", "-89.777, 22.3894, 4.26042, 0.66", "-90.4542, 22.6948, 4.44572, 0.59", "-91.0711, 22.9298, 4.55076, 0.44", "-91.8594, 23.1186, 4.61953, 0.37", "-92.5732, 23.1844, 4.64663, 0.29", "-93.1131, 23.1745, 4.64659, 0.29", "-93.6614, 23.1144, 4.62474, 0.44", "-94.7928, 22.9584, 4.58922, 0.59", "-95.1484, 22.9205, 4.58451, 0.59", "-96.2146, 22.8314, 4.61041, 0.37", "-97.1034, 22.761, 4.65332, 0.29", "-97.6731, 22.7249, 4.6872, 0.29", "-97.9573, 22.7136, 4.71636, 0.29", "-98.7248, 22.7039, 4.84699, 0.59", "-99.1174, 22.7063, 4.91325, 0.59", "-99.5123, 22.7329, 4.97186, 0.52", "-99.9826, 22.8045, 5.05329, 0.66", "-100.797, 22.9526, 5.2129, 0.29", "-101.167, 23.0059, 5.29502, 0.29", "-101.601, 23.0398, 5.41389, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-49.6821, 10.535, -3.42258, 0.74", "-49.6964, 11.5936, -3.55236, 0.74", "-49.7365, 12.8671, -3.73057, 0.74", "-49.838, 14.4131, -3.95646, 0.74", "-49.9626, 15.3144, -4.11772, 0.74", "-50.388, 17.3048, -4.49057, 0.88", "-50.6415, 18.2138, -4.66993, 0.88", "-50.9594, 19.0216, -4.87162, 0.96", "-51.4162, 19.9141, -5.12764, 0.81", "-52.3748, 21.4483, -5.60237, 0.74", "-53.1945, 22.6576, -6.03775, 0.96", "-53.8539, 23.5862, -6.40634, 0.96", "-54.6552, 24.7384, -6.89585, 0.81", "-55.2434, 25.6532, -7.32207, 0.74", "-55.6348, 26.3575, -7.6783, 0.74", "-56.2585, 27.6975, -8.37164, 0.74", "-56.5977, 28.5061, -8.80058, 0.88", "-56.9284, 29.2825, -9.17927, 0.88", "-57.2641, 30.0052, -9.48701, 0.66", "-57.6778, 30.7432, -9.79727, 0.66", "-58.187, 31.5096, -10.1011, 0.81", "-58.7551, 32.2473, -10.369, 0.81", "-59.513, 33.1525, -10.7568, 0.66", "-60.0787, 33.7854, -11.0336, 0.81", "-60.7311, 34.5, -11.3681, 0.81", "-61.2167, 35.0842, -11.6605, 0.59", "-61.4934, 35.5035, -11.8697, 0.59", "-61.9538, 36.3913, -12.2566, 0.59", "-62.2981, 37.2428, -12.5488, 0.59", "-62.5858, 38.032, -12.7959, 0.74", "-62.8927, 38.8466, -13.067, 0.88", "-63.3816, 39.9378, -13.4712, 1.25", "-63.8848, 40.8643, -13.8579, 0.66", "-64.3977, 41.6637, -14.2247, 0.66", "-65.2968, 42.8577, -14.8703, 0.81", "-66.0426, 43.6809, -15.3556, 0.81", "-66.7688, 44.3391, -15.7847, 0.96", "-67.4755, 44.8721, -16.1344, 0.66", "-68.2203, 45.3649, -16.4173, 0.52", "-69.3327, 46.0461, -16.7037, 0.52", "-70.2521, 46.5917, -16.8196, 1.11", "-70.8498, 46.9745, -16.8263, 1.33", "-71.7097, 47.595, -16.7602, 0.66", "-72.4899, 48.2341, -16.648, 0.52", "-73.036, 48.7392, -16.5478, 0.66", "-73.3197, 49.044, -16.4872, 0.66", "-74.076, 49.9712, -16.36, 0.44", "-74.6508, 50.7795, -16.2934, 0.81", "-75.0508, 51.4104, -16.2901, 0.81", "-75.5965, 52.3347, -16.3296, 0.88", "-76.183, 53.3545, -16.4067, 0.88", "-76.7971, 54.3965, -16.5127, 0.59", "-77.2604, 55.1379, -16.6102, 0.81", "-77.9202, 56.1143, -16.7447, 0.96", "-78.412, 56.757, -16.8198, 0.96", "-78.9697, 57.4297, -16.9105, 0.96", "-79.9086, 58.5577, -17.0631, 0.96", "-80.7211, 59.5904, -17.1895, 0.88", "-81.3627, 60.4878, -17.3111, 0.88", "-82.2586, 61.9486, -17.5646, 0.81", "-82.8403, 63.1127, -17.8092, 0.52", "-83.2046, 64.1024, -18.058, 0.74", "-83.4231, 65.0693, -18.3435, 0.74", "-83.5382, 65.9844, -18.6523, 0.88", "-83.6221, 67.0274, -19.023, 0.66", "-83.6909, 67.9082, -19.3528, 0.88", "-83.8292, 68.7163, -19.6768, 0.88", "-84.1152, 69.5375, -20.0567, 0.66", "-84.6165, 70.4182, -20.499, 0.66", "-85.2316, 71.1782, -20.8821, 0.96", "-85.7655, 71.7073, -21.1105, 0.96", "-86.5134, 72.3708, -21.3614, 0.74", "-87.3639, 73.1473, -21.5815, 0.66", "-87.8471, 73.6421, -21.673, 0.66", "-88.4184, 74.2983, -21.7492, 0.66", "-89.3312, 75.4597, -21.8526, 1.03", "-89.7753, 76.1079, -21.897, 1.03", "-90.5651, 77.3783, -22.0301, 0.74", "-91.4421, 78.8822, -22.3081, 0.88", "-92.0041, 79.8141, -22.5332, 0.74", "-92.6898, 80.8614, -22.8423, 0.96", "-93.6273, 82.142, -23.2797, 0.59", "-94.7119, 83.4957, -23.7859, 0.52", "-95.4511, 84.3654, -24.1513, 0.66", "-96.3882, 85.5151, -24.6697, 0.81", "-96.965, 86.2916, -25.0293, 1.03", "-97.5262, 87.1233, -25.3719, 0.74", "-97.8497, 87.6328, -25.5346, 0.96", "-98.315, 88.4299, -25.6839, 0.96", "-98.9128, 89.4941, -25.805, 0.59", "-99.3302, 90.274, -25.872, 0.59", "-99.9634, 91.4067, -25.9311, 0.74", "-100.535, 92.3067, -25.9506, 0.81", "-101.307, 93.2877, -25.9327, 0.96", "-102.148, 94.16, -25.8753, 1.18", "-103.058, 94.9492, -25.7908, 0.59", "-103.821, 95.5468, -25.7774, 0.66", "-104.563, 96.1007, -25.8334, 0.66", "-105.662, 96.9188, -25.9836, 0.52", "-106.418, 97.4964, -26.132, 0.81", "-107.266, 98.1421, -26.3282, 0.81", "-108.956, 99.3731, -26.7444, 0.88", "-109.859, 99.9931, -26.9838, 0.59", "-110.723, 100.546, -27.2234, 0.81", "-111.652, 101.107, -27.4888, 0.81", "-112.813, 101.774, -27.808, 0.81", "-113.507, 102.16, -27.9713, 0.81", "-114.384, 102.628, -28.1025, 0.74", "-115.256, 103.1, -28.25, 0.59", "-116.099, 103.611, -28.4094, 0.59", "-116.889, 104.204, -28.5792, 0.74", "-117.755, 105.075, -28.8062, 0.81", "-118.319, 105.852, -28.9714, 0.88", "-118.662, 106.472, -29.0565, 0.88", "-118.983, 107.176, -29.1208, 0.74", "-119.354, 108.062, -29.1654, 0.74", "-119.67, 108.851, -29.1908, 0.52", "-120.143, 110.125, -29.2209, 0.44", "-120.541, 111.179, -29.2319, 0.74", "-120.77, 111.71, -29.2324, 0.74", "-121.245, 112.599, -29.2682, 0.59", "-121.648, 113.176, -29.3398, 0.59", "-122.09, 113.677, -29.4432, 0.59", "-122.959, 114.452, -29.6662, 0.66", "-124.077, 115.28, -29.9682, 0.37", "-125.322, 116.062, -30.2855, 0.37", "-126.75, 116.811, -30.6041, 0.52", "-127.385, 117.112, -30.7233, 0.52", "-128.449, 117.595, -30.8981, 0.29", "-129.236, 117.961, -31.0279, 0.66", "-129.906, 118.311, -31.1275, 0.66", "-130.863, 118.925, -31.2442, 0.37", "-131.67, 119.562, -31.333, 0.44", "-132.468, 120.296, -31.4407, 0.29", "-133.189, 121.054, -31.5719, 0.29", "-133.868, 121.827, -31.7135, 0.29", "-134.486, 122.547, -31.8525, 0.74", "-134.786, 122.867, -31.9208, 0.74", "-135.231, 123.247, -32.0026, 0.37", "-136.086, 123.803, -32.1257, 0.29", "-136.693, 124.121, -32.2, 0.29", "-137.184, 124.346, -32.2757, 0.29", "-138.031, 124.686, -32.4126, 0.29", "-138.824, 124.964, -32.5389, 0.66", "-139.395, 125.133, -32.6246, 0.66", "-140.234, 125.34, -32.7268, 0.37", "-141.13, 125.579, -32.872, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.1244, 45.3237, 24.0598, 0.96", "-14.2555, 46.5272, 24.8505, 0.96", "-14.3947, 47.4764, 25.3436, 0.81", "-14.5377, 48.2711, 25.6817, 0.74", "-14.7191, 49.1341, 25.9753, 0.74", "-14.9955, 50.3068, 26.2907, 0.81", "-15.2692, 51.3714, 26.5175, 0.66", "-15.4803, 52.0818, 26.6033, 0.81", "-15.695, 52.7614, 26.6491, 0.81", "-16.0519, 53.7692, 26.7008, 0.66", "-16.4829, 54.8421, 26.7446, 0.81", "-16.8051, 55.586, 26.7842, 0.96", "-17.1181, 56.362, 26.8661, 1.03", "-17.4494, 57.26, 26.9962, 0.59", "-17.6962, 58.1112, 27.1256, 0.59", "-17.9007, 59.0217, 27.2659, 0.44", "-18.0362, 59.7499, 27.3733, 0.44", "-18.285, 61.1641, 27.5485, 0.81", "-18.4194, 61.8935, 27.6001, 1.03", "-18.801, 63.2695, 27.6658, 0.66", "-19.044, 63.8746, 27.6709, 0.66", "-19.3992, 64.512, 27.6712, 0.81", "-19.8219, 65.1256, 27.6827, 0.59", "-20.4228, 65.8235, 27.7544, 0.44", "-21.6604, 67.1428, 28.0574, 0.44", "-22.6027, 68.1146, 28.417, 0.37", "-23.3996, 69.0335, 28.8146, 0.37", "-23.9324, 69.8002, 29.1772, 0.37", "-24.576, 71.1005, 29.7945, 0.44", "-24.941, 71.7708, 30.342, 0.29", "-25.141, 72.3297, 30.7584, 0.29", "-25.3711, 73.2029, 31.3321, 0.29", "-25.5696, 74.1135, 31.8124, 0.96", "-25.7401, 74.8981, 32.1429, 1.11", "-26.7095, 79.3931, 33.8106, 1.11", "-27.8946, 83.1948, 35.3459, 0.44", "-28.1693, 83.7808, 35.713, 0.29", "-28.6192, 84.3281, 36.3967, 0.29", "-28.9536, 84.4499, 36.9729, 0.29", "-29.3127, 84.3436, 37.6604, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-14.1244, 45.3237, 24.0598, 0.74", "-13.8774, 45.6088, 25.6041, 0.74", "-13.766, 45.7374, 26.3005, 0.74", "-13.5525, 45.9838, 27.6351, 0.74", "-13.3632, 46.2023, 28.8183, 1.03", "-13.1691, 46.4263, 30.0318, 1.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-13.1691, 46.4263, 30.0318, 0.66", "-12.9984, 46.839, 30.2696, 0.66", "-12.905, 47.1619, 30.451, 0.66", "-12.8194, 47.5578, 30.6591, 0.74", "-12.7449, 48.0145, 30.891, 0.74", "-12.6702, 48.6016, 31.1857, 1.18", "-12.6162, 49.1295, 31.4573, 0.96", "-12.5877, 49.5658, 31.6997, 0.81", "-12.5628, 50.0224, 31.9597, 0.52", "-12.5447, 50.39, 32.1882, 0.52", "-12.5309, 50.7813, 32.4497, 0.96", "-12.5256, 50.9983, 32.5946, 0.96", "-12.533, 51.3089, 32.8244, 0.96", "-12.5451, 51.5782, 33.0291, 0.59", "-12.5533, 51.9004, 33.2538, 0.37", "-12.5462, 52.1895, 33.4956, 0.37", "-12.5186, 52.4231, 33.716, 0.37", "-12.4062, 52.791, 34.0735, 0.37", "-12.1688, 53.2065, 34.5001, 0.37", "-11.8882, 53.4952, 34.8348, 0.74", "-11.2262, 54.0361, 35.5045, 0.22", "-10.9766, 54.1996, 35.7299, 0.22", "-10.4854, 54.4534, 36.1284, 0.22", "-9.99777, 54.6313, 36.4842, 0.22", "-9.64371, 54.7179, 36.7298, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-13.1691, 46.4263, 30.0318, 0.74", "-12.9627, 46.2586, 30.7752, 0.74", "-12.8239, 46.2673, 31.4027, 0.44", "-12.7027, 46.364, 32.0121, 0.44", "-12.6127, 46.4756, 32.4576, 0.59", "-12.5082, 46.6167, 32.9563, 0.29", "-12.3979, 46.7798, 33.6056, 0.29", "-12.3368, 46.9484, 34.0703, 0.44", "-12.3097, 47.0591, 34.3152, 0.44", "-12.2675, 47.321, 34.8456, 0.66", "-12.213, 47.5449, 35.2963, 0.74", "-12.1096, 47.8481, 36.0566, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_37", "dend_24", "dend_9", "dend_0", "dend_36", "dend_25", "dend_19", "dend_10", "dend_8", "dend_1", "dend_31", "dend_26", "dend_23", "dend_20", "dend_18", "dend_11", "dend_5", "dend_2", "dend_35", "dend_32", "dend_28", "dend_27", "dend_22", "dend_21", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_30", "dend_29", "dend_16", "dend_13", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_ChC_6f06a0ce3d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.45000043190095856)
    connect dend_37(0), soma_0(0.45000043190095856)
    connect dend_24(0), soma_0(0.45000043190095856)
    connect dend_9(0), soma_0(0.45000043190095856)
    connect dend_0(0), soma_0(0.45000043190095856)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.247476, -12.3185, -1.01707, 2.36383 ) }
    soma_0 { pt3dadd( 0.272374, -11.1472, -0.92957, 3.66321 ) }
    soma_0 { pt3dadd( 0.297273, -9.97598, -0.842075, 5.22974 ) }
    soma_0 { pt3dadd( 0.322171, -8.80474, -0.75458, 6.26105 ) }
    soma_0 { pt3dadd( 0.34707, -7.63351, -0.667085, 6.92536 ) }
    soma_0 { pt3dadd( 0.371968, -6.46227, -0.57959, 7.55364 ) }
    soma_0 { pt3dadd( 0.396866, -5.29103, -0.492094, 8.36178 ) }
    soma_0 { pt3dadd( 0.421765, -4.1198, -0.404599, 9.09467 ) }
    soma_0 { pt3dadd( 0.446663, -2.94856, -0.317104, 9.82452 ) }
    soma_0 { pt3dadd( 0.471562, -1.77733, -0.229609, 10.5969 ) }
    soma_0 { pt3dadd( 0.49646, -0.606089, -0.142114, 10.9527 ) }
    soma_0 { pt3dadd( 0.521359, 0.565147, -0.0546186, 11.1935 ) }
    soma_0 { pt3dadd( 0.546257, 1.73638, 0.0328765, 11.3346 ) }
    soma_0 { pt3dadd( 0.571156, 2.90762, 0.120372, 11.3156 ) }
    soma_0 { pt3dadd( 0.596054, 4.07886, 0.207867, 11.2804 ) }
    soma_0 { pt3dadd( 0.620953, 5.25009, 0.295362, 11.0098 ) }
    soma_0 { pt3dadd( 0.645851, 6.42133, 0.382857, 10.6994 ) }
    soma_0 { pt3dadd( 0.67075, 7.59256, 0.470352, 10.2417 ) }
    soma_0 { pt3dadd( 0.695648, 8.7638, 0.557847, 9.96532 ) }
    soma_0 { pt3dadd( 0.720546, 9.93504, 0.645343, 4.49434 ) }
    soma_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 2.79989 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 5.17534, 6.99334, -4.88165, 0.29 ) }
    dend_38 { pt3dadd( 5.6613, 7.56712, -4.65116, 0.29 ) }
    dend_38 { pt3dadd( 6.1803, 8.19557, -4.43221, 0.37 ) }
    dend_38 { pt3dadd( 6.73518, 8.88441, -4.22563, 0.52 ) }
    dend_38 { pt3dadd( 7.05815, 9.29553, -4.11867, 0.52 ) }
    dend_38 { pt3dadd( 7.51372, 9.86699, -3.98962, 0.81 ) }
    dend_38 { pt3dadd( 7.78147, 10.2207, -3.92021, 0.81 ) }
    dend_38 { pt3dadd( 8.08138, 10.6634, -3.83101, 0.29 ) }
    dend_38 { pt3dadd( 8.35427, 11.1421, -3.74307, 0.59 ) }
    dend_38 { pt3dadd( 8.58051, 11.5957, -3.67576, 0.59 ) }
    dend_38 { pt3dadd( 8.81913, 12.1127, -3.59421, 0.59 ) }
    dend_38 { pt3dadd( 9.13463, 12.8133, -3.47744, 0.29 ) }
    dend_38 { pt3dadd( 9.5876, 13.8137, -3.31626, 0.29 ) }
    dend_38 { pt3dadd( 9.88129, 14.43, -3.22298, 0.81 ) }
    dend_38 { pt3dadd( 10.0768, 14.8113, -3.17117, 0.81 ) }
    dend_38 { pt3dadd( 10.3508, 15.3136, -3.11568, 0.52 ) }
    dend_38 { pt3dadd( 10.7718, 15.982, -3.06606, 0.29 ) }
    dend_38 { pt3dadd( 11.3648, 16.8324, -3.02916, 0.22 ) }
    dend_38 { pt3dadd( 11.7165, 17.2939, -3.03191, 0.29 ) }
    dend_38 { pt3dadd( 12.0963, 17.7683, -3.03719, 0.29 ) }
    dend_38 { pt3dadd( 12.8801, 18.7246, -3.05033, 0.22 ) }
    dend_38 { pt3dadd( 13.6343, 19.6141, -3.06596, 0.22 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.00466, -9.38466, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.00466, -9.38466, 5.49835, 1.11 ) }
    dend_37 { pt3dadd( -1.57214, -10.0604, 5.52343, 1.11 ) }
    dend_37 { pt3dadd( -2.28788, -11.0096, 5.58534, 0.88 ) }
    dend_37 { pt3dadd( -2.80346, -11.7655, 5.69412, 0.88 ) }
    dend_37 { pt3dadd( -3.53496, -12.9876, 5.9663, 1.18 ) }
    dend_37 { pt3dadd( -3.99497, -13.9035, 6.26214, 1.18 ) }
    dend_37 { pt3dadd( -4.50509, -15.3379, 6.86283, 0.81 ) }
    dend_37 { pt3dadd( -4.61693, -16.001, 7.20251, 1.11 ) }
    dend_37 { pt3dadd( -4.5367, -17.0316, 7.7832, 1.11 ) }
    dend_37 { pt3dadd( -4.28373, -17.9062, 8.33127, 0.96 ) }
    dend_37 { pt3dadd( -3.77132, -19.0457, 9.09277, 1.11 ) }
    dend_37 { pt3dadd( -3.35648, -19.8406, 9.62774, 1.25 ) }
    dend_37 { pt3dadd( -3.00637, -20.4602, 10.0299, 0.96 ) }
    dend_37 { pt3dadd( -2.48837, -21.5833, 10.6479, 1.03 ) }
    dend_37 { pt3dadd( -2.20382, -22.4819, 11.0252, 1.03 ) }
    dend_37 { pt3dadd( -2.13603, -23.0534, 11.2217, 0.59 ) }
    dend_37 { pt3dadd( -2.20333, -23.8171, 11.4887, 0.88 ) }
    dend_37 { pt3dadd( -2.31034, -24.169, 11.6361, 0.88 ) }
    dend_37 { pt3dadd( -2.84205, -25.2333, 12.1431, 0.66 ) }
    dend_37 { pt3dadd( -3.16425, -25.6742, 12.4035, 0.74 ) }
    dend_37 { pt3dadd( -3.69176, -26.3368, 12.8152, 0.66 ) }
    dend_37 { pt3dadd( -4.32786, -27.2027, 13.3673, 0.88 ) }
    dend_37 { pt3dadd( -4.75258, -27.8847, 13.779, 0.81 ) }
    dend_37 { pt3dadd( -5.01458, -28.4092, 14.0828, 0.44 ) }
    dend_37 { pt3dadd( -5.41207, -29.4874, 14.6794, 0.81 ) }
    dend_37 { pt3dadd( -5.68999, -30.4861, 15.1601, 0.81 ) }
    dend_37 { pt3dadd( -5.88869, -31.5661, 15.5572, 0.59 ) }
    dend_37 { pt3dadd( -5.99088, -32.5516, 15.8213, 1.11 ) }
    dend_37 { pt3dadd( -6.01706, -33.3762, 15.9693, 1.33 ) }
    dend_37 { pt3dadd( -6.00195, -34.0844, 16.0652, 1.11 ) }
    dend_37 { pt3dadd( -5.93404, -35.0537, 16.17, 0.81 ) }
    dend_37 { pt3dadd( -5.84445, -35.9582, 16.3264, 0.66 ) }
    dend_37 { pt3dadd( -5.7395, -36.5667, 16.5167, 1.18 ) }
    dend_37 { pt3dadd( -5.47018, -37.5363, 16.9929, 0.96 ) }
    dend_37 { pt3dadd( -5.24109, -38.1966, 17.4056, 0.74 ) }
    dend_37 { pt3dadd( -4.91764, -39.0322, 18.0323, 0.66 ) }
    dend_37 { pt3dadd( -4.55158, -39.9446, 18.8025, 0.88 ) }
    dend_37 { pt3dadd( -4.15356, -41.0268, 19.8302, 1.18 ) }
    dend_37 { pt3dadd( -3.89035, -41.9284, 20.7334, 0.66 ) }
    dend_37 { pt3dadd( -3.78965, -42.5248, 21.3276, 0.59 ) }
    dend_37 { pt3dadd( -3.76786, -43.0781, 21.7957, 0.74 ) }
    dend_37 { pt3dadd( -3.81714, -43.7078, 22.2248, 0.44 ) }
    dend_37 { pt3dadd( -3.98676, -44.6239, 22.6701, 0.44 ) }
    dend_37 { pt3dadd( -4.14479, -45.1903, 22.8304, 0.44 ) }
    dend_37 { pt3dadd( -4.42575, -46.0607, 22.9341, 0.37 ) }
    dend_37 { pt3dadd( -4.64413, -46.934, 23.148, 0.37 ) }
    dend_37 { pt3dadd( -4.77293, -47.5324, 23.4185, 0.96 ) }
    dend_37 { pt3dadd( -4.85373, -47.9306, 23.6726, 0.96 ) }
    dend_37 { pt3dadd( -5.02023, -48.6819, 24.3036, 0.44 ) }
    dend_37 { pt3dadd( -5.22303, -49.3941, 25.0103, 0.81 ) }
    dend_37 { pt3dadd( -5.9457, -51.7295, 27.4955, 0.88 ) }
    dend_37 { pt3dadd( -6.21662, -52.5965, 28.4287, 0.88 ) }
    dend_37 { pt3dadd( -6.31832, -52.9857, 28.82, 0.88 ) }
    dend_37 { pt3dadd( -6.46415, -53.7176, 29.4717, 0.66 ) }
    dend_37 { pt3dadd( -6.62586, -54.8029, 30.3136, 0.52 ) }
    dend_37 { pt3dadd( -6.7058, -55.5878, 30.739, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( -6.74361, -56.3731, 30.9359, 0.59 ) }
    dend_37 { pt3dadd( -6.67772, -57.3583, 31.1596, 0.74 ) }
    dend_37 { pt3dadd( -6.60895, -57.9344, 31.3008, 0.74 ) }
    dend_37 { pt3dadd( -6.40481, -59.3927, 31.7152, 0.74 ) }
    dend_37 { pt3dadd( -6.25446, -60.3089, 32.0736, 0.52 ) }
    dend_37 { pt3dadd( -6.15309, -60.8903, 32.346, 0.66 ) }
    dend_37 { pt3dadd( -6.03483, -61.4922, 32.6375, 0.66 ) }
    dend_37 { pt3dadd( -5.82446, -62.2909, 33.0304, 0.37 ) }
    dend_37 { pt3dadd( -5.63686, -62.8261, 33.2488, 0.37 ) }
    dend_37 { pt3dadd( -5.34784, -63.5174, 33.4329, 0.37 ) }
    dend_37 { pt3dadd( -5.03895, -64.2814, 33.5955, 0.37 ) }
    dend_37 { pt3dadd( -4.79391, -64.9131, 33.7022, 0.37 ) }
    dend_37 { pt3dadd( -4.36509, -65.9281, 33.8414, 0.37 ) }
    dend_37 { pt3dadd( -4.10081, -66.4727, 33.9203, 0.52 ) }
    dend_37 { pt3dadd( -3.91337, -66.8628, 33.9739, 0.66 ) }
    dend_37 { pt3dadd( -3.66257, -67.45, 34.0603, 0.52 ) }
    dend_37 { pt3dadd( -3.37238, -68.235, 34.1968, 0.52 ) }
    dend_37 { pt3dadd( -3.09147, -69.0324, 34.3514, 0.74 ) }
    dend_37 { pt3dadd( -2.85513, -69.7098, 34.464, 0.88 ) }
    dend_37 { pt3dadd( -2.60068, -70.4195, 34.5904, 0.96 ) }
    dend_37 { pt3dadd( -2.44129, -70.8556, 34.6715, 0.96 ) }
    dend_37 { pt3dadd( -2.27751, -71.2991, 34.7561, 0.81 ) }
    dend_37 { pt3dadd( -2.02419, -72.0923, 34.8991, 1.18 ) }
    dend_37 { pt3dadd( -1.89108, -72.6543, 35.0039, 1.4 ) }
    dend_37 { pt3dadd( -1.80477, -73.0993, 35.0747, 1.4 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.87466, -10.9902, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -2.87466, -10.9902, -0.261648, 2.87 ) }
    dend_24 { pt3dadd( -3.49776, -11.591, -0.202839, 2.87 ) }
    dend_24 { pt3dadd( -4.69624, -12.7657, -0.1143, 2.21 ) }
    dend_24 { pt3dadd( -5.743, -13.7916, -0.0369705, 2.21 ) }
    dend_24 { pt3dadd( -6.50218, -14.5356, 0.0191148, 2.21 ) }
    dend_24 { pt3dadd( -7.46505, -15.4793, 0.0902474, 2.21 ) }
    dend_24 { pt3dadd( -8.46693, -16.4551, 0.156926, 2.21 ) }
    dend_24 { pt3dadd( -9.49753, -17.4446, 0.208416, 2.36 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 34/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.71466, 9.07384, 3.05835, 3.83 ) }
    dend_9 { pt3dadd( -4.02636, 9.52049, 3.35325, 3.83 ) }
    dend_9 { pt3dadd( -4.75619, 10.5663, 4.04373, 3.32 ) }
    dend_9 { pt3dadd( -5.37536, 11.4535, 4.62952, 3.32 ) }
    dend_9 { pt3dadd( -5.93224, 12.2515, 5.15638, 3.39 ) }
    dend_9 { pt3dadd( -6.69326, 13.3419, 5.87637, 3.46 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 40/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.19534, 7.62034, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.19534, 7.62034, -4.07165, 1.99 ) }
    dend_0 { pt3dadd( 4.32407, 8.2915, -3.72732, 1.03 ) }
    dend_0 { pt3dadd( 4.42751, 8.90304, -3.37542, 1.03 ) }
    dend_0 { pt3dadd( 4.55, 9.76049, -2.84661, 1.03 ) }
    dend_0 { pt3dadd( 4.61837, 10.3182, -2.49793, 1.03 ) }
    dend_0 { pt3dadd( 4.6861, 10.9581, -2.10561, 1.03 ) }
    dend_0 { pt3dadd( 4.76834, 11.8965, -1.53771, 1.11 ) }
    dend_0 { pt3dadd( 4.80387, 12.4198, -1.19727, 1.33 ) }
    dend_0 { pt3dadd( 4.83347, 13.0388, -0.788438, 1.33 ) }
    dend_0 { pt3dadd( 4.85056, 13.3581, -0.584643, 1.47 ) }
    dend_0 { pt3dadd( 4.88801, 13.7497, -0.345751, 1.47 ) }
    dend_0 { pt3dadd( 4.96857, 14.3811, -0.00504364, 1.25 ) }
    dend_0 { pt3dadd( 5.13168, 15.3576, 0.435725, 1.25 ) }
    dend_0 { pt3dadd( 5.23833, 15.8483, 0.626037, 1.4 ) }
    dend_0 { pt3dadd( 5.44118, 16.5812, 0.881032, 1.4 ) }
    dend_0 { pt3dadd( 5.71003, 17.4619, 1.11795, 1.18 ) }
    dend_0 { pt3dadd( 5.93022, 18.1785, 1.23263, 1.25 ) }
    dend_0 { pt3dadd( 6.11029, 18.7946, 1.26571, 1.11 ) }
    dend_0 { pt3dadd( 6.33788, 19.6725, 1.19514, 0.88 ) }
    dend_0 { pt3dadd( 6.51948, 20.4795, 1.07329, 0.88 ) }
    dend_0 { pt3dadd( 6.71167, 21.5857, 0.848848, 0.88 ) }
    dend_0 { pt3dadd( 6.83144, 22.6639, 0.589395, 1.4 ) }
    dend_0 { pt3dadd( 6.88478, 23.5633, 0.362585, 1.55 ) }
    dend_0 { pt3dadd( 6.89451, 24.763, 0.0842324, 1.84 ) }
    dend_0 { pt3dadd( 6.87809, 25.2543, -0.0162059, 1.84 ) }
    dend_0 { pt3dadd( 6.8383, 26.1702, -0.16895, 1.33 ) }
    dend_0 { pt3dadd( 6.8132, 27.2425, -0.280394, 0.96 ) }
    dend_0 { pt3dadd( 6.83744, 28.15, -0.333993, 0.96 ) }
    dend_0 { pt3dadd( 6.95457, 29.3731, -0.367163, 1.03 ) }
    dend_0 { pt3dadd( 7.06893, 29.9538, -0.358945, 1.25 ) }
    dend_0 { pt3dadd( 7.33389, 30.795, -0.334608, 1.47 ) }
    dend_0 { pt3dadd( 7.59302, 31.3552, -0.313083, 1.47 ) }
    dend_0 { pt3dadd( 8.07673, 32.1337, -0.278008, 1.03 ) }
    dend_0 { pt3dadd( 8.51763, 32.6984, -0.266375, 1.03 ) }
    dend_0 { pt3dadd( 9.08451, 33.3219, -0.258496, 1.47 ) }
    dend_0 { pt3dadd( 9.62776, 33.8762, -0.2362, 1.25 ) }
    dend_0 { pt3dadd( 9.98978, 34.226, -0.205462, 1.55 ) }
    dend_0 { pt3dadd( 10.6868, 34.8846, -0.13693, 0.81 ) }
    dend_0 { pt3dadd( 11.3418, 35.4996, -0.0589949, 0.81 ) }
    dend_0 { pt3dadd( 11.8512, 35.982, 0.0148929, 1.25 ) }
    dend_0 { pt3dadd( 12.3059, 36.4274, 0.0986434, 1.47 ) }
    dend_0 { pt3dadd( 12.7335, 36.8659, 0.199382, 1.84 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.745445, 11.1063, 0.732838, 0.886183 ) }
    axon_0 { pt3dadd( 1.06425, 26.1029, 0.732838, 0.886183 ) }
    axon_0 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.886183 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 86/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.49753, -17.4446, 0.208416, 0.96 ) }
    dend_36 { pt3dadd( -9.66695, -17.8559, 0.701724, 0.96 ) }
    dend_36 { pt3dadd( -10.1046, -18.8398, 1.82702, 0.74 ) }
    dend_36 { pt3dadd( -10.9037, -20.6214, 3.73785, 1.11 ) }
    dend_36 { pt3dadd( -11.3961, -21.6776, 4.78167, 0.81 ) }
    dend_36 { pt3dadd( -11.731, -22.3657, 5.38881, 0.66 ) }
    dend_36 { pt3dadd( -12.0129, -22.9195, 5.82259, 0.44 ) }
    dend_36 { pt3dadd( -12.3569, -23.5262, 6.24898, 0.66 ) }
    dend_36 { pt3dadd( -12.6213, -23.943, 6.45946, 1.03 ) }
    dend_36 { pt3dadd( -12.9961, -24.5959, 6.56656, 1.03 ) }
    dend_36 { pt3dadd( -13.489, -25.5161, 6.58431, 0.81 ) }
    dend_36 { pt3dadd( -13.8421, -26.2985, 6.55953, 0.81 ) }
    dend_36 { pt3dadd( -14.1046, -27.0545, 6.50648, 0.96 ) }
    dend_36 { pt3dadd( -14.4259, -28.4137, 6.37977, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -14.6887, -30.1997, 6.20143, 0.52 ) }
    dend_36 { pt3dadd( -14.7348, -30.9519, 6.10513, 0.88 ) }
    dend_36 { pt3dadd( -14.7217, -32.1473, 5.88695, 0.74 ) }
    dend_36 { pt3dadd( -14.6169, -33.6357, 5.53792, 0.59 ) }
    dend_36 { pt3dadd( -14.4562, -35.0031, 5.15427, 0.74 ) }
    dend_36 { pt3dadd( -14.2661, -36.369, 4.76152, 0.59 ) }
    dend_36 { pt3dadd( -14.0529, -38.1298, 4.25324, 0.74 ) }
    dend_36 { pt3dadd( -13.953, -39.5836, 3.8331, 0.81 ) }
    dend_36 { pt3dadd( -13.9444, -40.7535, 3.50848, 0.52 ) }
    dend_36 { pt3dadd( -13.988, -41.6929, 3.27753, 0.66 ) }
    dend_36 { pt3dadd( -14.1001, -42.8655, 3.0462, 0.59 ) }
    dend_36 { pt3dadd( -14.2824, -44.122, 2.90857, 0.74 ) }
    dend_36 { pt3dadd( -14.4921, -45.1091, 2.90849, 0.74 ) }
    dend_36 { pt3dadd( -14.8176, -46.2742, 3.00419, 0.52 ) }
    dend_36 { pt3dadd( -15.1268, -47.1672, 3.1053, 0.96 ) }
    dend_36 { pt3dadd( -15.3256, -47.7197, 3.16868, 1.11 ) }
    dend_36 { pt3dadd( -15.5531, -48.4372, 3.23835, 1.25 ) }
    dend_36 { pt3dadd( -15.7712, -49.1808, 3.305, 0.96 ) }
    dend_36 { pt3dadd( -16.0332, -50.1074, 3.37133, 0.96 ) }
    dend_36 { pt3dadd( -16.3748, -51.3117, 3.40498, 0.52 ) }
    dend_36 { pt3dadd( -16.6228, -52.3033, 3.40095, 0.59 ) }
    dend_36 { pt3dadd( -16.8295, -53.3087, 3.37675, 0.81 ) }
    dend_36 { pt3dadd( -16.9655, -54.275, 3.30708, 0.96 ) }
    dend_36 { pt3dadd( -17.0189, -55.1765, 3.19996, 0.96 ) }
    dend_36 { pt3dadd( -17.0128, -56.451, 2.98306, 0.74 ) }
    dend_36 { pt3dadd( -16.9526, -57.853, 2.69188, 0.74 ) }
    dend_36 { pt3dadd( -16.9183, -58.7849, 2.46527, 1.03 ) }
    dend_36 { pt3dadd( -16.8868, -60.041, 2.13254, 1.25 ) }
    dend_36 { pt3dadd( -16.843, -61.1354, 1.80791, 0.66 ) }
    dend_36 { pt3dadd( -16.8148, -61.8884, 1.62468, 0.52 ) }
    dend_36 { pt3dadd( -16.8008, -62.725, 1.47963, 0.74 ) }
    dend_36 { pt3dadd( -16.8141, -63.7851, 1.38819, 0.74 ) }
    dend_36 { pt3dadd( -16.8365, -64.7646, 1.42839, 0.66 ) }
    dend_36 { pt3dadd( -16.8673, -65.7679, 1.58701, 0.66 ) }
    dend_36 { pt3dadd( -16.9019, -67.7539, 2.07165, 0.66 ) }
    dend_36 { pt3dadd( -16.8816, -68.8076, 2.39157, 0.74 ) }
    dend_36 { pt3dadd( -16.8089, -70.2179, 2.86602, 0.74 ) }
    dend_36 { pt3dadd( -16.7139, -71.8202, 3.46348, 0.88 ) }
    dend_36 { pt3dadd( -16.6864, -72.7808, 3.83303, 1.11 ) }
    dend_36 { pt3dadd( -16.697, -73.9105, 4.26497, 1.11 ) }
    dend_36 { pt3dadd( -16.718, -75.2714, 4.73179, 0.88 ) }
    dend_36 { pt3dadd( -16.7474, -76.579, 5.20552, 0.74 ) }
    dend_36 { pt3dadd( -16.764, -78.1133, 5.71289, 0.59 ) }
    dend_36 { pt3dadd( -16.717, -79.3936, 6.03493, 0.44 ) }
    dend_36 { pt3dadd( -16.668, -79.8836, 6.12805, 0.74 ) }
    dend_36 { pt3dadd( -16.5028, -80.8274, 6.25702, 0.88 ) }
    dend_36 { pt3dadd( -16.2461, -81.771, 6.39242, 0.88 ) }
    dend_36 { pt3dadd( -15.7379, -83.2395, 6.62908, 0.66 ) }
    dend_36 { pt3dadd( -15.3781, -84.1698, 6.82193, 0.81 ) }
    dend_36 { pt3dadd( -15.0867, -85.0245, 7.06196, 0.81 ) }
    dend_36 { pt3dadd( -14.9263, -85.8585, 7.32254, 0.59 ) }
    dend_36 { pt3dadd( -14.8778, -87.2221, 7.72789, 0.74 ) }
    dend_36 { pt3dadd( -14.9573, -88.0526, 7.92501, 0.96 ) }
    dend_36 { pt3dadd( -15.1072, -88.8611, 8.04029, 0.96 ) }
    dend_36 { pt3dadd( -15.3673, -89.9737, 8.03777, 0.66 ) }
    dend_36 { pt3dadd( -15.7006, -91.3589, 7.85188, 0.44 ) }
    dend_36 { pt3dadd( -15.9397, -92.4225, 7.5847, 0.81 ) }
    dend_36 { pt3dadd( -16.1681, -93.6712, 7.18002, 0.81 ) }
    dend_36 { pt3dadd( -16.3884, -95.3208, 6.60432, 0.37 ) }
    dend_36 { pt3dadd( -16.4812, -96.3605, 6.22463, 0.81 ) }
    dend_36 { pt3dadd( -16.5169, -97.2715, 5.90452, 1.03 ) }
    dend_36 { pt3dadd( -16.5031, -98.1698, 5.64934, 0.52 ) }
    dend_36 { pt3dadd( -16.4256, -99.241, 5.47316, 0.29 ) }
    dend_36 { pt3dadd( -16.3538, -99.7678, 5.44091, 0.88 ) }
    dend_36 { pt3dadd( -16.2894, -100.16, 5.44754, 1.11 ) }
    dend_36 { pt3dadd( -16.1803, -100.713, 5.4488, 1.18 ) }
    dend_36 { pt3dadd( -16.0122, -101.552, 5.43095, 0.81 ) }
    dend_36 { pt3dadd( -15.7807, -102.799, 5.37277, 0.44 ) }
    dend_36 { pt3dadd( -15.6442, -103.611, 5.28357, 0.29 ) }
    dend_36 { pt3dadd( -15.5355, -104.389, 5.18968, 0.29 ) }
    dend_36 { pt3dadd( -15.4618, -105.247, 5.08139, 0.59 ) }
    dend_36 { pt3dadd( -15.4531, -105.575, 5.04326, 0.88 ) }
    dend_36 { pt3dadd( -15.4752, -106.093, 5.00394, 0.88 ) }
    dend_36 { pt3dadd( -15.5503, -106.751, 5.0178, 0.59 ) }
    dend_36 { pt3dadd( -15.674, -107.669, 5.16783, 0.29 ) }
    dend_36 { pt3dadd( -15.754, -108.202, 5.30563, 0.66 ) }
    dend_36 { pt3dadd( -15.8544, -108.806, 5.52306, 0.81 ) }
    dend_36 { pt3dadd( -15.9621, -109.465, 5.78082, 1.03 ) }
    dend_36 { pt3dadd( -16.0603, -110.0, 5.99065, 1.18 ) }
    dend_36 { pt3dadd( -16.2004, -110.605, 6.22384, 1.18 ) }
    dend_36 { pt3dadd( -16.298, -110.972, 6.35009, 1.25 ) }
    dend_36 { pt3dadd( -16.5396, -111.804, 6.5851, 0.96 ) }
    dend_36 { pt3dadd( -16.7854, -112.599, 6.75659, 0.59 ) }
    dend_36 { pt3dadd( -17.0776, -113.581, 6.90677, 0.37 ) }
    dend_36 { pt3dadd( -17.3065, -114.393, 6.97838, 0.22 ) }
    dend_36 { pt3dadd( -17.4288, -114.849, 6.99428, 0.29 ) }
    dend_36 { pt3dadd( -17.6524, -115.758, 6.99346, 0.44 ) }
    dend_36 { pt3dadd( -17.7873, -116.336, 6.97166, 1.03 ) }
    dend_36 { pt3dadd( -17.9536, -117.144, 6.93814, 1.18 ) }
    dend_36 { pt3dadd( -18.0596, -117.744, 6.90519, 1.18 ) }
    dend_36 { pt3dadd( -18.2528, -118.876, 6.83679, 0.59 ) }
    dend_36 { pt3dadd( -18.4241, -119.726, 6.81451, 0.59 ) }
    dend_36 { pt3dadd( -18.6039, -120.505, 6.81179, 0.59 ) }
    dend_36 { pt3dadd( -18.8947, -121.737, 6.78332, 0.81 ) }
    dend_36 { pt3dadd( -19.0368, -122.333, 6.76083, 0.88 ) }
    dend_36 { pt3dadd( -19.3538, -123.637, 6.70617, 0.52 ) }
    dend_36 { pt3dadd( -19.6786, -125.034, 6.64586, 0.52 ) }
    dend_36 { pt3dadd( -19.9585, -126.322, 6.61721, 0.59 ) }
    dend_36 { pt3dadd( -20.1556, -127.329, 6.58773, 0.29 ) }
    dend_36 { pt3dadd( -20.259, -127.967, 6.55495, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -20.3447, -128.635, 6.51134, 0.88 ) }
    dend_36 { pt3dadd( -20.4752, -129.937, 6.38929, 0.29 ) }
    dend_36 { pt3dadd( -20.5702, -130.903, 6.27068, 1.03 ) }
    dend_36 { pt3dadd( -20.6696, -131.799, 6.13069, 1.25 ) }
    dend_36 { pt3dadd( -20.7726, -132.676, 5.95597, 1.03 ) }
    dend_36 { pt3dadd( -20.9096, -134.077, 5.58312, 0.44 ) }
    dend_36 { pt3dadd( -20.988, -135.023, 5.25368, 0.44 ) }
    dend_36 { pt3dadd( -21.0929, -136.051, 4.82057, 0.44 ) }
    dend_36 { pt3dadd( -21.2642, -137.375, 4.18221, 0.44 ) }
    dend_36 { pt3dadd( -21.4574, -138.664, 3.55147, 0.66 ) }
    dend_36 { pt3dadd( -21.6286, -139.791, 2.96484, 1.55 ) }
    dend_36 { pt3dadd( -21.7768, -140.75, 2.44022, 1.92 ) }
    dend_36 { pt3dadd( -21.9589, -141.948, 1.8232, 0.66 ) }
    dend_36 { pt3dadd( -22.1967, -143.3, 1.19895, 0.59 ) }
    dend_36 { pt3dadd( -22.4079, -144.244, 0.839516, 0.29 ) }
    dend_36 { pt3dadd( -22.7177, -145.37, 0.502806, 0.29 ) }
    dend_36 { pt3dadd( -23.0076, -146.312, 0.296326, 0.29 ) }
    dend_36 { pt3dadd( -23.5087, -147.863, 0.0689714, 0.29 ) }
    dend_36 { pt3dadd( -23.8264, -148.831, -0.0174819, 1.25 ) }
    dend_36 { pt3dadd( -24.147, -149.846, -0.0553248, 1.33 ) }
    dend_36 { pt3dadd( -24.5714, -151.253, -0.0789659, 0.52 ) }
    dend_36 { pt3dadd( -24.737, -151.867, -0.0723522, 0.52 ) }
    dend_36 { pt3dadd( -24.9065, -152.717, -0.0626184, 0.66 ) }
    dend_36 { pt3dadd( -25.0173, -153.555, -0.0497487, 0.37 ) }
    dend_36 { pt3dadd( -25.0507, -154.298, -0.0291284, 0.29 ) }
    dend_36 { pt3dadd( -25.0258, -154.946, 0.00109115, 0.81 ) }
    dend_36 { pt3dadd( -24.9423, -155.667, 0.0510643, 0.96 ) }
    dend_36 { pt3dadd( -24.8045, -156.537, 0.129823, 0.59 ) }
    dend_36 { pt3dadd( -24.6698, -157.255, 0.232575, 0.44 ) }
    dend_36 { pt3dadd( -24.6403, -157.401, 0.259648, 0.37 ) }
    dend_36 { pt3dadd( -24.4009, -158.69, 0.526904, 0.22 ) }
    dend_36 { pt3dadd( -24.2943, -159.255, 0.656673, 0.52 ) }
    dend_36 { pt3dadd( -24.2546, -159.469, 0.70948, 0.52 ) }
    dend_36 { pt3dadd( -23.9405, -161.176, 1.16819, 0.22 ) }
    dend_36 { pt3dadd( -23.8727, -161.529, 1.27223, 0.37 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 35/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -9.49753, -17.4446, 0.208416, 1.62 ) }
    dend_25 { pt3dadd( -11.1398, -18.2453, 0.732744, 1.62 ) }
    dend_25 { pt3dadd( -12.3563, -18.8385, 1.12111, 1.62 ) }
    dend_25 { pt3dadd( -13.2921, -19.2948, 1.4199, 1.84 ) }
    dend_25 { pt3dadd( -14.1483, -19.7123, 1.69323, 2.06 ) }
    dend_25 { pt3dadd( -15.0085, -20.1317, 1.96787, 2.36 ) }
    dend_25 { pt3dadd( -15.5754, -20.4081, 2.14886, 2.8 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 42/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.69326, 13.3419, 5.87637, 1.25 ) }
    dend_19 { pt3dadd( -7.13662, 14.836, 5.90136, 1.25 ) }
    dend_19 { pt3dadd( -7.35985, 15.6963, 6.09035, 1.4 ) }
    dend_19 { pt3dadd( -7.51961, 16.3657, 6.30819, 1.4 ) }
    dend_19 { pt3dadd( -7.72267, 17.3092, 6.66601, 1.47 ) }
    dend_19 { pt3dadd( -7.80084, 17.6724, 6.80376, 1.69 ) }
    dend_19 { pt3dadd( -7.92301, 18.24, 7.01903, 1.69 ) }
    dend_19 { pt3dadd( -8.10181, 19.2735, 7.63277, 1.62 ) }
    dend_19 { pt3dadd( -8.17814, 19.8912, 8.08709, 1.55 ) }
    dend_19 { pt3dadd( -8.23851, 20.4567, 8.56033, 1.69 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.69326, 13.3419, 5.87637, 1.77 ) }
    dend_10 { pt3dadd( -7.90834, 13.9856, 7.27867, 1.77 ) }
    dend_10 { pt3dadd( -9.07308, 14.6026, 8.62285, 1.62 ) }
    dend_10 { pt3dadd( -9.79734, 14.9863, 9.4587, 1.55 ) }
    dend_10 { pt3dadd( -10.4763, 15.346, 10.2424, 1.77 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 57/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 12.7335, 36.8659, 0.199382, 0.59 ) }
    dend_8 { pt3dadd( 13.1789, 38.2038, -0.181326, 0.59 ) }
    dend_8 { pt3dadd( 13.385, 38.7328, -0.312558, 0.59 ) }
    dend_8 { pt3dadd( 13.6443, 39.2431, -0.423625, 0.74 ) }
    dend_8 { pt3dadd( 13.9528, 39.7105, -0.509936, 0.74 ) }
    dend_8 { pt3dadd( 14.3155, 40.1645, -0.593929, 0.88 ) }
    dend_8 { pt3dadd( 14.6212, 40.5198, -0.659122, 1.03 ) }
    dend_8 { pt3dadd( 15.1523, 41.089, -0.730207, 0.59 ) }
    dend_8 { pt3dadd( 15.6196, 41.6043, -0.794282, 0.88 ) }
    dend_8 { pt3dadd( 16.0712, 42.1465, -0.884859, 0.88 ) }
    dend_8 { pt3dadd( 16.4768, 42.6957, -1.01008, 0.66 ) }
    dend_8 { pt3dadd( 16.7988, 43.256, -1.20106, 0.52 ) }
    dend_8 { pt3dadd( 16.9431, 43.7258, -1.50298, 0.52 ) }
    dend_8 { pt3dadd( 17.0459, 44.3421, -2.07626, 0.52 ) }
    dend_8 { pt3dadd( 17.0602, 44.9372, -2.74623, 0.96 ) }
    dend_8 { pt3dadd( 17.0222, 45.2347, -3.127, 1.18 ) }
    dend_8 { pt3dadd( 16.9415, 45.5402, -3.55411, 1.18 ) }
    dend_8 { pt3dadd( 16.5729, 46.518, -5.04164, 0.81 ) }
    dend_8 { pt3dadd( 16.4065, 46.9592, -5.70316, 0.59 ) }
    dend_8 { pt3dadd( 16.2404, 47.5254, -6.51778, 0.74 ) }
    dend_8 { pt3dadd( 16.1694, 47.9257, -7.02189, 0.66 ) }
    dend_8 { pt3dadd( 16.1565, 48.2921, -7.39513, 0.66 ) }
    dend_8 { pt3dadd( 16.2403, 48.7926, -7.82993, 0.66 ) }
    dend_8 { pt3dadd( 16.495, 49.5492, -8.36332, 0.81 ) }
    dend_8 { pt3dadd( 16.8362, 50.2727, -8.8663, 1.03 ) }
    dend_8 { pt3dadd( 17.1369, 50.7613, -9.20435, 0.96 ) }
    dend_8 { pt3dadd( 17.4866, 51.2861, -9.56683, 0.81 ) }
    dend_8 { pt3dadd( 18.1713, 52.3503, -10.2802, 0.81 ) }
    dend_8 { pt3dadd( 18.3899, 52.7453, -10.5139, 1.03 ) }
    dend_8 { pt3dadd( 18.6017, 53.2753, -10.7824, 1.03 ) }
    dend_8 { pt3dadd( 18.7181, 53.7384, -10.9674, 1.11 ) }
    dend_8 { pt3dadd( 18.7985, 54.336, -11.1695, 1.11 ) }
    dend_8 { pt3dadd( 18.8227, 54.9829, -11.3396, 0.81 ) }
    dend_8 { pt3dadd( 18.7995, 56.0052, -11.519, 0.74 ) }
    dend_8 { pt3dadd( 18.7849, 56.7481, -11.6345, 0.88 ) }
    dend_8 { pt3dadd( 18.7899, 57.3907, -11.7305, 0.88 ) }
    dend_8 { pt3dadd( 18.8205, 57.8401, -11.7978, 0.52 ) }
    dend_8 { pt3dadd( 18.9279, 58.5705, -11.9035, 0.37 ) }
    dend_8 { pt3dadd( 18.9775, 58.7776, -11.9354, 0.37 ) }
    dend_8 { pt3dadd( 19.1663, 59.3583, -12.0478, 0.37 ) }
    dend_8 { pt3dadd( 19.5152, 60.1974, -12.2216, 0.74 ) }
    dend_8 { pt3dadd( 19.7372, 60.7087, -12.3245, 0.96 ) }
    dend_8 { pt3dadd( 19.9107, 61.1563, -12.4189, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 19.9913, 61.4333, -12.4793, 1.18 ) }
    dend_8 { pt3dadd( 20.0804, 62.1378, -12.6225, 0.88 ) }
    dend_8 { pt3dadd( 20.0599, 62.8118, -12.7454, 0.29 ) }
    dend_8 { pt3dadd( 19.9251, 63.6654, -12.8767, 0.88 ) }
    dend_8 { pt3dadd( 19.7552, 64.3027, -12.9711, 0.88 ) }
    dend_8 { pt3dadd( 19.5215, 64.9693, -13.0618, 0.88 ) }
    dend_8 { pt3dadd( 19.168, 65.8449, -13.1892, 0.59 ) }
    dend_8 { pt3dadd( 18.9296, 66.3947, -13.267, 0.59 ) }
    dend_8 { pt3dadd( 18.7238, 66.9121, -13.344, 0.96 ) }
    dend_8 { pt3dadd( 18.4979, 67.6743, -13.4589, 0.88 ) }
    dend_8 { pt3dadd( 18.3951, 68.3429, -13.588, 0.52 ) }
    dend_8 { pt3dadd( 18.3901, 69.2045, -13.7928, 0.52 ) }
    dend_8 { pt3dadd( 18.4755, 69.8771, -14.0049, 0.52 ) }
    dend_8 { pt3dadd( 18.6463, 70.6285, -14.2765, 0.81 ) }
    dend_8 { pt3dadd( 18.8313, 71.2271, -14.5022, 0.81 ) }
    dend_8 { pt3dadd( 19.2016, 72.1463, -14.8615, 0.81 ) }
    dend_8 { pt3dadd( 19.4161, 72.6469, -15.0594, 0.59 ) }
    dend_8 { pt3dadd( 19.7073, 73.3812, -15.3519, 0.74 ) }
    dend_8 { pt3dadd( 19.855, 73.8537, -15.5607, 0.88 ) }
    dend_8 { pt3dadd( 19.9902, 74.5897, -15.9076, 0.37 ) }
    dend_8 { pt3dadd( 20.054, 75.268, -16.2181, 0.37 ) }
    dend_8 { pt3dadd( 20.0849, 75.7564, -16.4153, 0.37 ) }
    dend_8 { pt3dadd( 20.1333, 76.2999, -16.6434, 0.37 ) }
    dend_8 { pt3dadd( 20.2003, 76.6846, -16.8162, 0.37 ) }
    dend_8 { pt3dadd( 20.3451, 77.175, -17.0717, 0.52 ) }
    dend_8 { pt3dadd( 20.5073, 77.5518, -17.2757, 0.81 ) }
    dend_8 { pt3dadd( 20.7217, 77.974, -17.4778, 0.81 ) }
    dend_8 { pt3dadd( 20.9253, 78.3376, -17.6286, 0.81 ) }
    dend_8 { pt3dadd( 21.2107, 78.8714, -17.8225, 0.74 ) }
    dend_8 { pt3dadd( 21.4261, 79.3375, -17.9655, 0.59 ) }
    dend_8 { pt3dadd( 21.6036, 79.8426, -18.1044, 0.52 ) }
    dend_8 { pt3dadd( 21.7087, 80.2871, -18.2241, 0.88 ) }
    dend_8 { pt3dadd( 21.7763, 80.8167, -18.3679, 0.88 ) }
    dend_8 { pt3dadd( 21.8057, 81.4819, -18.5516, 0.44 ) }
    dend_8 { pt3dadd( 21.7982, 82.0674, -18.7356, 0.44 ) }
    dend_8 { pt3dadd( 21.7835, 82.577, -18.9312, 0.44 ) }
    dend_8 { pt3dadd( 21.7775, 83.1778, -19.2224, 0.81 ) }
    dend_8 { pt3dadd( 21.7928, 83.7455, -19.5363, 0.81 ) }
    dend_8 { pt3dadd( 21.8339, 84.3044, -19.8681, 0.59 ) }
    dend_8 { pt3dadd( 21.9131, 84.9656, -20.2722, 0.59 ) }
    dend_8 { pt3dadd( 21.9773, 85.3686, -20.5157, 0.88 ) }
    dend_8 { pt3dadd( 22.0884, 85.96, -20.8607, 0.88 ) }
    dend_8 { pt3dadd( 22.1963, 86.5877, -21.1972, 0.88 ) }
    dend_8 { pt3dadd( 22.2367, 86.9799, -21.3748, 0.96 ) }
    dend_8 { pt3dadd( 22.2323, 87.393, -21.5202, 0.96 ) }
    dend_8 { pt3dadd( 22.1539, 87.904, -21.6427, 0.44 ) }
    dend_8 { pt3dadd( 22.0051, 88.465, -21.7446, 0.44 ) }
    dend_8 { pt3dadd( 21.891, 88.8489, -21.7953, 0.44 ) }
    dend_8 { pt3dadd( 21.6861, 89.5617, -21.904, 0.81 ) }
    dend_8 { pt3dadd( 21.5532, 90.1043, -22.0011, 0.81 ) }
    dend_8 { pt3dadd( 21.3848, 90.8674, -22.1472, 1.11 ) }
    dend_8 { pt3dadd( 21.3113, 91.2396, -22.2175, 1.11 ) }
    dend_8 { pt3dadd( 21.1772, 91.9896, -22.3497, 0.37 ) }
    dend_8 { pt3dadd( 21.0994, 92.526, -22.4443, 0.37 ) }
    dend_8 { pt3dadd( 20.9817, 93.3933, -22.5974, 0.52 ) }
    dend_8 { pt3dadd( 20.9067, 93.9319, -22.6872, 0.52 ) }
    dend_8 { pt3dadd( 20.8166, 94.7055, -22.8414, 0.88 ) }
    dend_8 { pt3dadd( 20.7727, 95.1961, -22.9648, 0.88 ) }
    dend_8 { pt3dadd( 20.7357, 95.8971, -23.1708, 0.88 ) }
    dend_8 { pt3dadd( 20.7534, 96.289, -23.302, 0.96 ) }
    dend_8 { pt3dadd( 20.9004, 96.9974, -23.6182, 0.66 ) }
    dend_8 { pt3dadd( 21.2258, 97.9397, -24.1455, 0.66 ) }
    dend_8 { pt3dadd( 21.4763, 98.5233, -24.5406, 0.66 ) }
    dend_8 { pt3dadd( 21.6514, 98.9213, -24.8461, 0.59 ) }
    dend_8 { pt3dadd( 21.8653, 99.4351, -25.2841, 0.74 ) }
    dend_8 { pt3dadd( 22.0745, 100.007, -25.7968, 0.59 ) }
    dend_8 { pt3dadd( 22.2269, 100.48, -26.2262, 0.88 ) }
    dend_8 { pt3dadd( 22.3515, 100.974, -26.6493, 0.88 ) }
    dend_8 { pt3dadd( 22.4887, 101.468, -27.0796, 0.88 ) }
    dend_8 { pt3dadd( 22.5678, 101.703, -27.2848, 0.88 ) }
    dend_8 { pt3dadd( 22.8182, 102.303, -27.7535, 0.37 ) }
    dend_8 { pt3dadd( 23.0551, 102.745, -28.0363, 0.81 ) }
    dend_8 { pt3dadd( 23.2631, 103.04, -28.1975, 0.81 ) }
    dend_8 { pt3dadd( 23.8138, 103.724, -28.4863, 0.37 ) }
    dend_8 { pt3dadd( 24.1518, 104.137, -28.6163, 0.37 ) }
    dend_8 { pt3dadd( 24.4829, 104.573, -28.7089, 0.81 ) }
    dend_8 { pt3dadd( 24.7612, 105.011, -28.774, 0.81 ) }
    dend_8 { pt3dadd( 24.9321, 105.374, -28.8183, 0.81 ) }
    dend_8 { pt3dadd( 25.0968, 105.86, -28.8963, 0.52 ) }
    dend_8 { pt3dadd( 25.1678, 106.206, -28.9726, 0.59 ) }
    dend_8 { pt3dadd( 25.2441, 106.707, -29.1413, 0.44 ) }
    dend_8 { pt3dadd( 25.3187, 107.237, -29.3623, 0.59 ) }
    dend_8 { pt3dadd( 25.3906, 107.752, -29.5993, 0.66 ) }
    dend_8 { pt3dadd( 25.4976, 108.585, -29.9903, 0.44 ) }
    dend_8 { pt3dadd( 25.5849, 109.277, -30.3138, 1.33 ) }
    dend_8 { pt3dadd( 25.6367, 109.687, -30.4929, 1.33 ) }
    dend_8 { pt3dadd( 25.7158, 110.41, -30.7761, 0.37 ) }
    dend_8 { pt3dadd( 25.7842, 111.012, -30.9677, 0.29 ) }
    dend_8 { pt3dadd( 25.8404, 111.56, -31.1072, 0.52 ) }
    dend_8 { pt3dadd( 25.8538, 111.852, -31.1546, 0.74 ) }
    dend_8 { pt3dadd( 25.8218, 112.423, -31.2246, 0.44 ) }
    dend_8 { pt3dadd( 25.7235, 112.888, -31.2695, 0.74 ) }
    dend_8 { pt3dadd( 25.5649, 113.254, -31.3109, 0.74 ) }
    dend_8 { pt3dadd( 25.2795, 113.724, -31.3793, 0.44 ) }
    dend_8 { pt3dadd( 24.948, 114.184, -31.4983, 0.74 ) }
    dend_8 { pt3dadd( 24.6332, 114.569, -31.6435, 0.74 ) }
    dend_8 { pt3dadd( 24.4041, 114.832, -31.7918, 0.88 ) }
    dend_8 { pt3dadd( 24.0508, 115.246, -32.0823, 0.59 ) }
    dend_8 { pt3dadd( 23.8021, 115.559, -32.3262, 0.44 ) }
    dend_8 { pt3dadd( 23.4775, 116.048, -32.7208, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( 23.304, 116.387, -32.9793, 0.59 ) }
    dend_8 { pt3dadd( 22.9949, 117.12, -33.4807, 1.25 ) }
    dend_8 { pt3dadd( 22.8992, 117.369, -33.6339, 1.4 ) }
    dend_8 { pt3dadd( 22.7211, 117.816, -33.8744, 0.88 ) }
    dend_8 { pt3dadd( 22.4685, 118.331, -34.1139, 0.59 ) }
    dend_8 { pt3dadd( 22.2048, 118.775, -34.2865, 0.59 ) }
    dend_8 { pt3dadd( 21.8603, 119.261, -34.4523, 0.66 ) }
    dend_8 { pt3dadd( 21.4866, 119.656, -34.5653, 0.52 ) }
    dend_8 { pt3dadd( 21.0635, 120.035, -34.6812, 0.37 ) }
    dend_8 { pt3dadd( 20.6166, 120.406, -34.7994, 0.52 ) }
    dend_8 { pt3dadd( 20.3865, 120.589, -34.8604, 0.66 ) }
    dend_8 { pt3dadd( 20.1411, 120.799, -34.9397, 0.66 ) }
    dend_8 { pt3dadd( 19.7946, 121.286, -35.1675, 0.29 ) }
    dend_8 { pt3dadd( 19.6593, 121.775, -35.4688, 0.29 ) }
    dend_8 { pt3dadd( 19.6109, 122.218, -35.8249, 0.66 ) }
    dend_8 { pt3dadd( 19.5854, 122.507, -36.1282, 0.66 ) }
    dend_8 { pt3dadd( 19.5165, 122.79, -36.5345, 0.52 ) }
    dend_8 { pt3dadd( 19.3202, 123.084, -37.1715, 0.66 ) }
    dend_8 { pt3dadd( 19.0264, 123.255, -37.7878, 0.81 ) }
    dend_8 { pt3dadd( 18.7204, 123.335, -38.241, 0.96 ) }
    dend_8 { pt3dadd( 18.3416, 123.396, -38.6909, 0.96 ) }
    dend_8 { pt3dadd( 17.7891, 123.478, -39.2378, 0.81 ) }
    dend_8 { pt3dadd( 17.1983, 123.577, -39.7325, 0.74 ) }
    dend_8 { pt3dadd( 16.6396, 123.729, -40.1288, 0.52 ) }
    dend_8 { pt3dadd( 16.1945, 123.926, -40.3973, 0.66 ) }
    dend_8 { pt3dadd( 15.8848, 124.122, -40.5535, 0.66 ) }
    dend_8 { pt3dadd( 15.3279, 124.579, -40.7779, 0.37 ) }
    dend_8 { pt3dadd( 14.9683, 124.934, -40.9013, 0.37 ) }
    dend_8 { pt3dadd( 14.2933, 125.697, -41.1357, 0.29 ) }
    dend_8 { pt3dadd( 13.9898, 126.084, -41.2655, 0.52 ) }
    dend_8 { pt3dadd( 13.7678, 126.403, -41.391, 0.52 ) }
    dend_8 { pt3dadd( 13.487, 126.843, -41.5873, 0.29 ) }
    dend_8 { pt3dadd( 13.2628, 127.2, -41.7607, 0.29 ) }
    dend_8 { pt3dadd( 12.9034, 127.765, -42.0794, 0.59 ) }
    dend_8 { pt3dadd( 12.5847, 128.241, -42.4184, 0.52 ) }
    dend_8 { pt3dadd( 12.3271, 128.665, -42.7526, 0.74 ) }
    dend_8 { pt3dadd( 12.2278, 128.856, -42.9138, 0.74 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 37/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 12.7335, 36.8659, 0.199382, 0.96 ) }
    dend_1 { pt3dadd( 13.0018, 38.8403, 0.794779, 0.96 ) }
    dend_1 { pt3dadd( 13.1606, 39.737, 1.01505, 0.96 ) }
    dend_1 { pt3dadd( 13.3206, 40.4236, 1.12259, 0.81 ) }
    dend_1 { pt3dadd( 13.6754, 41.8245, 1.18844, 0.88 ) }
    dend_1 { pt3dadd( 13.9299, 42.8024, 1.13361, 0.88 ) }
    dend_1 { pt3dadd( 14.1466, 43.7435, 1.01565, 0.81 ) }
    dend_1 { pt3dadd( 14.366, 44.8431, 0.717089, 0.96 ) }
    dend_1 { pt3dadd( 14.5513, 45.9905, 0.347117, 0.74 ) }
    dend_1 { pt3dadd( 14.7295, 47.1436, -0.067976, 0.88 ) }
    dend_1 { pt3dadd( 14.8287, 48.1777, -0.469887, 0.88 ) }
    dend_1 { pt3dadd( 14.8468, 49.4044, -0.933366, 0.88 ) }
    dend_1 { pt3dadd( 14.7514, 50.5394, -1.33632, 1.03 ) }
    dend_1 { pt3dadd( 14.5095, 51.6471, -1.68661, 1.03 ) }
    dend_1 { pt3dadd( 14.1829, 52.5599, -1.91512, 0.88 ) }
    dend_1 { pt3dadd( 13.5448, 53.8174, -2.18174, 0.96 ) }
    dend_1 { pt3dadd( 13.0618, 54.5578, -2.33885, 1.11 ) }
    dend_1 { pt3dadd( 12.5035, 55.2961, -2.51178, 1.11 ) }
    dend_1 { pt3dadd( 11.7312, 56.2541, -2.74629, 1.11 ) }
    dend_1 { pt3dadd( 10.9757, 57.1733, -2.97439, 1.11 ) }
    dend_1 { pt3dadd( 9.973, 58.4489, -3.29216, 1.03 ) }
    dend_1 { pt3dadd( 9.25785, 59.4979, -3.55073, 1.03 ) }
    dend_1 { pt3dadd( 8.5323, 60.7482, -3.84683, 0.96 ) }
    dend_1 { pt3dadd( 7.96355, 62.0348, -4.17905, 1.03 ) }
    dend_1 { pt3dadd( 7.61212, 63.2077, -4.52143, 0.88 ) }
    dend_1 { pt3dadd( 7.46563, 64.0551, -4.78778, 0.88 ) }
    dend_1 { pt3dadd( 7.40508, 65.1245, -5.13061, 1.11 ) }
    dend_1 { pt3dadd( 7.41396, 65.7799, -5.35047, 1.11 ) }
    dend_1 { pt3dadd( 7.49448, 67.6153, -5.87997, 1.03 ) }
    dend_1 { pt3dadd( 7.55155, 69.0665, -6.23006, 0.88 ) }
    dend_1 { pt3dadd( 7.55964, 70.4061, -6.46581, 0.88 ) }
    dend_1 { pt3dadd( 7.48249, 71.8593, -6.59284, 0.88 ) }
    dend_1 { pt3dadd( 7.32866, 73.1026, -6.58942, 1.03 ) }
    dend_1 { pt3dadd( 6.97698, 74.9792, -6.43717, 0.88 ) }
    dend_1 { pt3dadd( 6.68258, 76.1968, -6.22287, 0.96 ) }
    dend_1 { pt3dadd( 6.40562, 77.2844, -5.97815, 1.03 ) }
    dend_1 { pt3dadd( 6.15692, 78.3805, -5.75119, 1.33 ) }
    dend_1 { pt3dadd( 5.96256, 79.5556, -5.55604, 0.74 ) }
    dend_1 { pt3dadd( 5.9255, 80.2628, -5.51281, 0.74 ) }
    dend_1 { pt3dadd( 5.99648, 81.1624, -5.58986, 0.88 ) }
    dend_1 { pt3dadd( 6.23247, 82.2926, -5.76123, 0.88 ) }
    dend_1 { pt3dadd( 6.65785, 83.6307, -6.03439, 0.81 ) }
    dend_1 { pt3dadd( 7.05524, 84.6178, -6.26137, 0.88 ) }
    dend_1 { pt3dadd( 7.64794, 85.8703, -6.57576, 0.74 ) }
    dend_1 { pt3dadd( 8.07669, 86.7055, -6.78636, 0.74 ) }
    dend_1 { pt3dadd( 8.64327, 87.8025, -7.0622, 0.81 ) }
    dend_1 { pt3dadd( 9.14556, 88.7823, -7.31648, 0.81 ) }
    dend_1 { pt3dadd( 9.49697, 89.5189, -7.49451, 0.81 ) }
    dend_1 { pt3dadd( 9.9362, 90.574, -7.78379, 0.81 ) }
    dend_1 { pt3dadd( 10.2347, 91.5266, -8.06705, 0.96 ) }
    dend_1 { pt3dadd( 10.4322, 92.5028, -8.388, 0.96 ) }
    dend_1 { pt3dadd( 10.55, 93.5073, -8.72121, 1.03 ) }
    dend_1 { pt3dadd( 10.6606, 94.7521, -9.17126, 0.96 ) }
    dend_1 { pt3dadd( 10.7832, 95.9624, -9.62353, 0.96 ) }
    dend_1 { pt3dadd( 10.9388, 97.4153, -10.1503, 0.96 ) }
    dend_1 { pt3dadd( 11.0867, 98.641, -10.6155, 0.96 ) }
    dend_1 { pt3dadd( 11.2717, 99.9461, -11.1156, 0.88 ) }
    dend_1 { pt3dadd( 11.5026, 101.575, -11.7343, 0.81 ) }
    dend_1 { pt3dadd( 11.6294, 102.59, -12.1248, 0.81 ) }
    dend_1 { pt3dadd( 11.7235, 103.626, -12.5195, 0.74 ) }
    dend_1 { pt3dadd( 11.7212, 104.816, -12.9911, 1.03 ) }
    dend_1 { pt3dadd( 11.6093, 105.758, -13.3672, 1.03 ) }
    dend_1 { pt3dadd( 11.2988, 106.973, -13.8197, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 10.9218, 108.071, -14.1647, 1.11 ) }
    dend_1 { pt3dadd( 10.6442, 108.8, -14.3808, 1.11 ) }
    dend_1 { pt3dadd( 10.1045, 110.231, -14.739, 0.96 ) }
    dend_1 { pt3dadd( 9.70575, 111.379, -14.9699, 0.96 ) }
    dend_1 { pt3dadd( 9.33573, 112.652, -15.1803, 0.96 ) }
    dend_1 { pt3dadd( 8.95524, 114.313, -15.4024, 0.88 ) }
    dend_1 { pt3dadd( 8.73768, 115.56, -15.5418, 1.18 ) }
    dend_1 { pt3dadd( 8.52062, 116.995, -15.6782, 0.96 ) }
    dend_1 { pt3dadd( 8.34174, 118.179, -15.7798, 0.88 ) }
    dend_1 { pt3dadd( 8.14828, 119.399, -15.8628, 0.88 ) }
    dend_1 { pt3dadd( 7.94305, 120.647, -15.9172, 0.88 ) }
    dend_1 { pt3dadd( 7.77789, 121.63, -15.943, 0.96 ) }
    dend_1 { pt3dadd( 7.56672, 122.885, -15.9671, 0.96 ) }
    dend_1 { pt3dadd( 7.35649, 124.141, -16.0055, 0.96 ) }
    dend_1 { pt3dadd( 7.16095, 125.51, -16.0697, 1.03 ) }
    dend_1 { pt3dadd( 7.04571, 126.667, -16.1398, 0.96 ) }
    dend_1 { pt3dadd( 7.00466, 128.083, -16.2489, 0.88 ) }
    dend_1 { pt3dadd( 7.07455, 129.341, -16.362, 0.81 ) }
    dend_1 { pt3dadd( 7.22763, 130.462, -16.4801, 0.96 ) }
    dend_1 { pt3dadd( 7.52618, 132.091, -16.6858, 0.81 ) }
    dend_1 { pt3dadd( 7.66416, 132.826, -16.788, 0.81 ) }
    dend_1 { pt3dadd( 7.79549, 133.683, -16.8949, 0.81 ) }
    dend_1 { pt3dadd( 7.88886, 134.958, -17.0176, 0.88 ) }
    dend_1 { pt3dadd( 7.86373, 135.87, -17.0787, 0.88 ) }
    dend_1 { pt3dadd( 7.71366, 136.748, -17.1137, 0.88 ) }
    dend_1 { pt3dadd( 7.43089, 137.601, -17.1321, 0.74 ) }
    dend_1 { pt3dadd( 6.90184, 138.792, -17.1752, 0.88 ) }
    dend_1 { pt3dadd( 6.13433, 140.254, -17.2188, 1.33 ) }
    dend_1 { pt3dadd( 5.7103, 141.027, -17.2443, 1.33 ) }
    dend_1 { pt3dadd( 5.19453, 142.053, -17.2826, 1.11 ) }
    dend_1 { pt3dadd( 4.82568, 142.939, -17.3402, 0.96 ) }
    dend_1 { pt3dadd( 4.57795, 143.732, -17.4188, 0.96 ) }
    dend_1 { pt3dadd( 4.28956, 145.07, -17.5675, 0.74 ) }
    dend_1 { pt3dadd( 4.16748, 146.058, -17.6972, 0.74 ) }
    dend_1 { pt3dadd( 4.1069, 147.092, -17.8633, 0.74 ) }
    dend_1 { pt3dadd( 4.08742, 148.191, -18.0719, 0.74 ) }
    dend_1 { pt3dadd( 4.08858, 149.488, -18.3591, 1.03 ) }
    dend_1 { pt3dadd( 4.09185, 150.473, -18.6259, 1.03 ) }
    dend_1 { pt3dadd( 4.08417, 151.456, -18.9328, 1.03 ) }
    dend_1 { pt3dadd( 4.04687, 152.316, -19.2195, 0.88 ) }
    dend_1 { pt3dadd( 3.965, 153.472, -19.6195, 0.88 ) }
    dend_1 { pt3dadd( 3.88373, 154.503, -19.972, 1.03 ) }
    dend_1 { pt3dadd( 3.82927, 155.641, -20.3853, 0.88 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.38305, 41.0995, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 1.70185, 56.0961, 0.732838, 0.66 ) }
    axon_1 { pt3dadd( 2.02065, 71.0928, 0.732838, 0.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 46/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.5754, -20.4081, 2.14886, 0.96 ) }
    dend_31 { pt3dadd( -16.7934, -21.9929, 2.59167, 0.96 ) }
    dend_31 { pt3dadd( -17.8382, -23.2234, 2.90064, 0.96 ) }
    dend_31 { pt3dadd( -18.6933, -24.1575, 3.10409, 1.11 ) }
    dend_31 { pt3dadd( -19.2746, -24.7882, 3.15136, 1.25 ) }
    dend_31 { pt3dadd( -19.7702, -25.3381, 3.12456, 1.25 ) }
    dend_31 { pt3dadd( -20.691, -26.4105, 2.99378, 1.03 ) }
    dend_31 { pt3dadd( -21.4313, -27.2519, 2.77699, 0.96 ) }
    dend_31 { pt3dadd( -22.0941, -28.0815, 2.44345, 1.18 ) }
    dend_31 { pt3dadd( -23.2289, -29.5849, 1.71627, 1.03 ) }
    dend_31 { pt3dadd( -23.8888, -30.514, 1.21778, 1.03 ) }
    dend_31 { pt3dadd( -24.4925, -31.4385, 0.672793, 0.88 ) }
    dend_31 { pt3dadd( -24.9396, -32.2159, 0.15445, 1.11 ) }
    dend_31 { pt3dadd( -25.4327, -33.1952, -0.541522, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 60/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.5754, -20.4081, 2.14886, 1.92 ) }
    dend_26 { pt3dadd( -16.9437, -19.2345, 2.10897, 1.92 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 62/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -8.23851, 20.4567, 8.56033, 0.88 ) }
    dend_23 { pt3dadd( -8.79546, 21.128, 7.77098, 0.88 ) }
    dend_23 { pt3dadd( -9.21597, 21.7468, 6.98208, 0.81 ) }
    dend_23 { pt3dadd( -9.47859, 22.2123, 6.42148, 0.81 ) }
    dend_23 { pt3dadd( -9.90036, 23.0989, 5.39611, 0.66 ) }
    dend_23 { pt3dadd( -10.199, 23.7339, 4.67963, 1.11 ) }
    dend_23 { pt3dadd( -10.471, 24.2407, 4.11179, 1.11 ) }
    dend_23 { pt3dadd( -11.1379, 25.3625, 2.88773, 0.88 ) }
    dend_23 { pt3dadd( -11.5358, 25.9005, 2.32152, 1.03 ) }
    dend_23 { pt3dadd( -12.311, 26.6938, 1.48391, 1.11 ) }
    dend_23 { pt3dadd( -13.0677, 27.2644, 0.958313, 0.88 ) }
    dend_23 { pt3dadd( -14.1903, 27.7968, 0.542712, 0.88 ) }
    dend_23 { pt3dadd( -15.323, 28.1152, 0.414696, 0.81 ) }
    dend_23 { pt3dadd( -16.3295, 28.2811, 0.478297, 0.88 ) }
    dend_23 { pt3dadd( -17.3209, 28.3659, 0.585391, 1.11 ) }
    dend_23 { pt3dadd( -19.1245, 28.4558, 0.854898, 1.33 ) }
    dend_23 { pt3dadd( -20.0708, 28.5141, 0.954593, 0.96 ) }
    dend_23 { pt3dadd( -21.0257, 28.6268, 0.966723, 1.11 ) }
    dend_23 { pt3dadd( -21.5543, 28.7289, 0.881747, 0.88 ) }
    dend_23 { pt3dadd( -22.6177, 29.0298, 0.552702, 0.74 ) }
    dend_23 { pt3dadd( -23.4743, 29.356, 0.172011, 1.03 ) }
    dend_23 { pt3dadd( -24.6734, 29.9095, -0.543126, 1.11 ) }
    dend_23 { pt3dadd( -25.336, 30.3131, -1.01587, 1.11 ) }
    dend_23 { pt3dadd( -25.9891, 30.8178, -1.58434, 1.11 ) }
    dend_23 { pt3dadd( -26.4272, 31.3016, -2.12164, 1.25 ) }
    dend_23 { pt3dadd( -26.9056, 32.0905, -3.03429, 1.25 ) }
    dend_23 { pt3dadd( -27.2534, 32.9032, -4.08513, 0.88 ) }
    dend_23 { pt3dadd( -27.4969, 33.6042, -5.05116, 0.81 ) }
    dend_23 { pt3dadd( -27.691, 34.1443, -5.81612, 0.81 ) }
    dend_23 { pt3dadd( -28.1576, 35.3132, -7.50019, 1.03 ) }
    dend_23 { pt3dadd( -28.6031, 36.2289, -8.87124, 1.18 ) }
    dend_23 { pt3dadd( -29.0868, 36.9738, -10.0046, 1.33 ) }
    dend_23 { pt3dadd( -29.67, 37.5889, -10.9252, 1.18 ) }
    dend_23 { pt3dadd( -30.4793, 38.1724, -11.7674, 1.18 ) }
    dend_23 { pt3dadd( -31.0214, 38.4817, -12.1497, 1.18 ) }
    dend_23 { pt3dadd( -31.727, 38.8412, -12.469, 1.03 ) }
    dend_23 { pt3dadd( -32.3485, 39.1779, -12.6713, 0.96 ) }
    dend_23 { pt3dadd( -33.1306, 39.6227, -12.8622, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_23 { pt3dadd( -33.9736, 40.1386, -13.181, 1.11 ) }
    dend_23 { pt3dadd( -34.5922, 40.5892, -13.5875, 1.11 ) }
    dend_23 { pt3dadd( -35.3935, 41.2679, -14.2425, 1.03 ) }
    dend_23 { pt3dadd( -36.1374, 41.9466, -14.9248, 1.47 ) }
    dend_23 { pt3dadd( -36.7125, 42.4816, -15.4555, 1.84 ) }
    dend_23 { pt3dadd( -38.6278, 44.212, -17.1248, 1.33 ) }
    dend_23 { pt3dadd( -40.1315, 45.4764, -18.3087, 0.88 ) }
    dend_23 { pt3dadd( -41.1975, 46.2706, -19.0239, 1.03 ) }
    dend_23 { pt3dadd( -42.024, 46.8033, -19.4653, 0.88 ) }
    dend_23 { pt3dadd( -43.0867, 47.3891, -19.8297, 0.81 ) }
    dend_23 { pt3dadd( -44.2982, 47.9502, -19.9986, 0.88 ) }
    dend_23 { pt3dadd( -45.1904, 48.2844, -19.9886, 1.25 ) }
    dend_23 { pt3dadd( -46.1004, 48.5809, -19.9778, 1.4 ) }
    dend_23 { pt3dadd( -46.7203, 48.7936, -20.024, 1.62 ) }
    dend_23 { pt3dadd( -47.4787, 49.119, -20.179, 1.33 ) }
    dend_23 { pt3dadd( -48.2535, 49.5532, -20.4736, 1.03 ) }
    dend_23 { pt3dadd( -49.9988, 50.8249, -21.4819, 0.88 ) }
    dend_23 { pt3dadd( -50.6013, 51.3991, -21.9548, 0.88 ) }
    dend_23 { pt3dadd( -51.1405, 52.0899, -22.5136, 0.81 ) }
    dend_23 { pt3dadd( -51.7344, 53.147, -23.3318, 0.96 ) }
    dend_23 { pt3dadd( -52.0487, 54.0607, -23.9834, 0.96 ) }
    dend_23 { pt3dadd( -52.1495, 54.8331, -24.4582, 1.11 ) }
    dend_23 { pt3dadd( -52.0915, 55.5815, -24.813, 1.11 ) }
    dend_23 { pt3dadd( -51.967, 56.2837, -25.082, 1.11 ) }
    dend_23 { pt3dadd( -51.845, 56.8444, -25.2577, 1.18 ) }
    dend_23 { pt3dadd( -51.7189, 57.5058, -25.4041, 1.11 ) }
    dend_23 { pt3dadd( -51.6122, 58.4498, -25.5798, 0.88 ) }
    dend_23 { pt3dadd( -51.6166, 59.3902, -25.7657, 0.81 ) }
    dend_23 { pt3dadd( -51.7489, 59.981, -25.922, 0.81 ) }
    dend_23 { pt3dadd( -52.1873, 60.6679, -26.1729, 0.81 ) }
    dend_23 { pt3dadd( -52.8498, 61.1381, -26.4418, 0.96 ) }
    dend_23 { pt3dadd( -53.4176, 61.346, -26.6354, 0.96 ) }
    dend_23 { pt3dadd( -54.4257, 61.5579, -26.9199, 0.74 ) }
    dend_23 { pt3dadd( -55.0471, 61.6451, -27.0837, 0.74 ) }
    dend_23 { pt3dadd( -55.6703, 61.7276, -27.2435, 1.03 ) }
    dend_23 { pt3dadd( -56.3968, 61.85, -27.4325, 1.25 ) }
    dend_23 { pt3dadd( -56.9129, 61.9915, -27.5633, 1.4 ) }
    dend_23 { pt3dadd( -57.862, 62.4045, -27.7768, 1.18 ) }
    dend_23 { pt3dadd( -58.8758, 63.0192, -27.9909, 0.88 ) }
    dend_23 { pt3dadd( -59.6244, 63.5942, -28.1519, 0.81 ) }
    dend_23 { pt3dadd( -60.1954, 64.1403, -28.2393, 0.81 ) }
    dend_23 { pt3dadd( -61.1117, 65.1678, -28.2993, 0.81 ) }
    dend_23 { pt3dadd( -61.9213, 66.1716, -28.2949, 1.03 ) }
    dend_23 { pt3dadd( -62.3299, 66.719, -28.2618, 1.25 ) }
    dend_23 { pt3dadd( -62.7752, 67.3494, -28.1869, 1.4 ) }
    dend_23 { pt3dadd( -63.5183, 68.4135, -28.0331, 1.03 ) }
    dend_23 { pt3dadd( -64.2185, 69.3986, -27.8837, 0.88 ) }
    dend_23 { pt3dadd( -64.6346, 69.9664, -27.8078, 1.11 ) }
    dend_23 { pt3dadd( -65.1891, 70.7208, -27.7281, 1.11 ) }
    dend_23 { pt3dadd( -65.8329, 71.6098, -27.6656, 0.96 ) }
    dend_23 { pt3dadd( -66.3558, 72.3368, -27.647, 1.33 ) }
    dend_23 { pt3dadd( -66.7638, 72.8998, -27.6793, 1.33 ) }
    dend_23 { pt3dadd( -67.252, 73.5843, -27.7577, 1.11 ) }
    dend_23 { pt3dadd( -67.8411, 74.3784, -27.8998, 0.88 ) }
    dend_23 { pt3dadd( -68.4238, 75.0932, -28.0654, 0.88 ) }
    dend_23 { pt3dadd( -68.929, 75.643, -28.2073, 1.11 ) }
    dend_23 { pt3dadd( -69.5108, 76.2281, -28.349, 1.11 ) }
    dend_23 { pt3dadd( -70.1999, 76.889, -28.4917, 0.59 ) }
    dend_23 { pt3dadd( -70.7908, 77.4421, -28.5946, 0.52 ) }
    dend_23 { pt3dadd( -71.5443, 78.1438, -28.6979, 0.81 ) }
    dend_23 { pt3dadd( -72.5756, 79.1317, -28.7955, 0.96 ) }
    dend_23 { pt3dadd( -73.3586, 79.9072, -28.8225, 1.25 ) }
    dend_23 { pt3dadd( -73.8863, 80.4413, -28.8073, 1.47 ) }
    dend_23 { pt3dadd( -74.4207, 80.9847, -28.7686, 1.47 ) }
    dend_23 { pt3dadd( -75.1683, 81.7649, -28.7026, 1.03 ) }
    dend_23 { pt3dadd( -75.6674, 82.3082, -28.6629, 1.03 ) }
    dend_23 { pt3dadd( -76.6403, 83.444, -28.5973, 1.03 ) }
    dend_23 { pt3dadd( -77.3403, 84.3701, -28.5635, 0.96 ) }
    dend_23 { pt3dadd( -77.9435, 85.3395, -28.5444, 0.74 ) }
    dend_23 { pt3dadd( -78.4068, 86.3978, -28.5481, 0.74 ) }
    dend_23 { pt3dadd( -78.6462, 87.446, -28.5769, 1.03 ) }
    dend_23 { pt3dadd( -78.6807, 88.2916, -28.6185, 1.03 ) }
    dend_23 { pt3dadd( -78.4989, 89.5057, -28.7055, 0.81 ) }
    dend_23 { pt3dadd( -78.1948, 90.603, -28.8008, 0.81 ) }
    dend_23 { pt3dadd( -77.6603, 92.0534, -28.9426, 0.74 ) }
    dend_23 { pt3dadd( -77.2094, 93.1089, -29.0534, 1.03 ) }
    dend_23 { pt3dadd( -76.8711, 93.8481, -29.1275, 1.03 ) }
    dend_23 { pt3dadd( -76.349, 95.0136, -29.2346, 0.96 ) }
    dend_23 { pt3dadd( -75.98, 95.9455, -29.3178, 1.4 ) }
    dend_23 { pt3dadd( -75.6958, 96.8328, -29.3862, 1.25 ) }
    dend_23 { pt3dadd( -75.4742, 97.8287, -29.4619, 0.81 ) }
    dend_23 { pt3dadd( -75.3816, 98.6024, -29.5214, 0.59 ) }
    dend_23 { pt3dadd( -75.3469, 99.5931, -29.5973, 0.59 ) }
    dend_23 { pt3dadd( -75.4157, 100.945, -29.6746, 0.74 ) }
    dend_23 { pt3dadd( -75.5054, 101.821, -29.7063, 0.81 ) }
    dend_23 { pt3dadd( -75.6441, 102.724, -29.7104, 0.81 ) }
    dend_23 { pt3dadd( -75.8406, 103.743, -29.6913, 0.66 ) }
    dend_23 { pt3dadd( -76.0984, 104.841, -29.6509, 0.88 ) }
    dend_23 { pt3dadd( -76.4481, 106.052, -29.5739, 0.96 ) }
    dend_23 { pt3dadd( -76.7946, 107.043, -29.4821, 0.74 ) }
    dend_23 { pt3dadd( -77.2325, 108.066, -29.3706, 0.96 ) }
    dend_23 { pt3dadd( -77.6762, 108.934, -29.2507, 0.96 ) }
    dend_23 { pt3dadd( -78.1951, 109.78, -29.1184, 0.88 ) }
    dend_23 { pt3dadd( -78.9578, 110.816, -28.952, 0.88 ) }
    dend_23 { pt3dadd( -79.5363, 111.523, -28.8498, 0.74 ) }
    dend_23 { pt3dadd( -80.1042, 112.191, -28.7592, 1.03 ) }
    dend_23 { pt3dadd( -80.4088, 112.563, -28.7152, 1.03 ) }
    dend_23 { pt3dadd( -81.0348, 113.392, -28.6144, 0.81 ) }
    dend_23 { pt3dadd( -81.9304, 114.748, -28.5002, 1.03 ) }
    dend_23 { pt3dadd( -82.3658, 115.523, -28.4639, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_23 { pt3dadd( -82.7263, 116.286, -28.4557, 0.88 ) }
    dend_23 { pt3dadd( -83.1205, 117.281, -28.4727, 1.11 ) }
    dend_23 { pt3dadd( -83.4569, 118.248, -28.5112, 0.96 ) }
    dend_23 { pt3dadd( -83.7655, 119.289, -28.5729, 0.81 ) }
    dend_23 { pt3dadd( -84.0055, 120.243, -28.6399, 0.81 ) }
    dend_23 { pt3dadd( -84.3654, 121.855, -28.7586, 0.88 ) }
    dend_23 { pt3dadd( -84.5981, 122.964, -28.84, 1.11 ) }
    dend_23 { pt3dadd( -84.7545, 123.725, -28.8903, 1.11 ) }
    dend_23 { pt3dadd( -84.9048, 124.418, -28.9276, 0.96 ) }
    dend_23 { pt3dadd( -85.0879, 125.174, -28.9471, 0.96 ) }
    dend_23 { pt3dadd( -85.3467, 126.095, -28.9647, 0.66 ) }
    dend_23 { pt3dadd( -85.6841, 127.121, -28.9765, 0.81 ) }
    dend_23 { pt3dadd( -86.2414, 128.568, -28.9813, 0.88 ) }
    dend_23 { pt3dadd( -86.8715, 130.009, -28.9759, 1.11 ) }
    dend_23 { pt3dadd( -87.2694, 130.814, -28.965, 1.03 ) }
    dend_23 { pt3dadd( -87.5609, 131.346, -28.9368, 1.03 ) }
    dend_23 { pt3dadd( -88.0885, 132.234, -28.8531, 0.96 ) }
    dend_23 { pt3dadd( -88.5394, 132.97, -28.7533, 0.96 ) }
    dend_23 { pt3dadd( -89.1295, 133.948, -28.5657, 1.18 ) }
    dend_23 { pt3dadd( -89.5231, 134.707, -28.3963, 1.03 ) }
    dend_23 { pt3dadd( -89.9238, 135.694, -28.1604, 0.96 ) }
    dend_23 { pt3dadd( -90.1035, 136.356, -27.9913, 0.59 ) }
    dend_23 { pt3dadd( -90.2029, 137.097, -27.7945, 0.59 ) }
    dend_23 { pt3dadd( -90.2078, 137.807, -27.6115, 0.81 ) }
    dend_23 { pt3dadd( -90.0824, 138.959, -27.3465, 1.11 ) }
    dend_23 { pt3dadd( -89.9702, 139.532, -27.22, 1.11 ) }
    dend_23 { pt3dadd( -89.7454, 140.377, -27.0523, 0.81 ) }
    dend_23 { pt3dadd( -89.5015, 141.169, -26.8945, 0.96 ) }
    dend_23 { pt3dadd( -89.1889, 142.12, -26.7087, 0.81 ) }
    dend_23 { pt3dadd( -88.9146, 142.935, -26.559, 0.96 ) }
    dend_23 { pt3dadd( -88.5998, 143.826, -26.3859, 0.96 ) }
    dend_23 { pt3dadd( -88.3242, 144.546, -26.26, 1.03 ) }
    dend_23 { pt3dadd( -88.1336, 145.039, -26.1822, 1.03 ) }
    dend_23 { pt3dadd( -87.924, 145.634, -26.0996, 0.96 ) }
    dend_23 { pt3dadd( -87.7511, 146.312, -26.0202, 0.96 ) }
    dend_23 { pt3dadd( -87.6155, 147.269, -25.9185, 0.74 ) }
    dend_23 { pt3dadd( -87.5953, 148.176, -25.8456, 0.74 ) }
    dend_23 { pt3dadd( -87.6725, 149.024, -25.785, 0.96 ) }
    dend_23 { pt3dadd( -87.8801, 150.102, -25.7207, 0.96 ) }
    dend_23 { pt3dadd( -88.2147, 151.229, -25.6707, 1.11 ) }
    dend_23 { pt3dadd( -88.4073, 151.733, -25.661, 1.11 ) }
    dend_23 { pt3dadd( -88.826, 152.703, -25.6736, 0.74 ) }
    dend_23 { pt3dadd( -89.1951, 153.536, -25.6798, 0.74 ) }
    dend_23 { pt3dadd( -89.6829, 154.708, -25.6764, 0.74 ) }
    dend_23 { pt3dadd( -90.1588, 155.974, -25.6589, 0.81 ) }
    dend_23 { pt3dadd( -90.5211, 157.072, -25.6375, 0.96 ) }
    dend_23 { pt3dadd( -90.8416, 158.186, -25.6107, 1.03 ) }
    dend_23 { pt3dadd( -91.1581, 159.385, -25.5683, 1.11 ) }
    dend_23 { pt3dadd( -91.382, 160.382, -25.4855, 0.88 ) }
    dend_23 { pt3dadd( -91.576, 161.413, -25.3648, 0.88 ) }
    dend_23 { pt3dadd( -91.715, 162.27, -25.2406, 0.81 ) }
    dend_23 { pt3dadd( -91.8089, 162.91, -25.1387, 0.81 ) }
    dend_23 { pt3dadd( -91.9764, 164.018, -24.9687, 0.66 ) }
    dend_23 { pt3dadd( -92.2084, 165.485, -24.7431, 0.66 ) }
    dend_23 { pt3dadd( -92.3819, 166.503, -24.5686, 0.88 ) }
    dend_23 { pt3dadd( -92.5247, 167.277, -24.426, 1.11 ) }
    dend_23 { pt3dadd( -92.7597, 168.412, -24.2118, 0.96 ) }
    dend_23 { pt3dadd( -93.0127, 169.465, -24.0024, 0.96 ) }
    dend_23 { pt3dadd( -93.2323, 170.255, -23.841, 0.66 ) }
    dend_23 { pt3dadd( -93.627, 171.414, -23.6026, 0.59 ) }
    dend_23 { pt3dadd( -94.0133, 172.439, -23.356, 0.59 ) }
    dend_23 { pt3dadd( -94.4043, 173.451, -23.1062, 0.74 ) }
    dend_23 { pt3dadd( -94.7345, 174.328, -22.896, 0.74 ) }
    dend_23 { pt3dadd( -94.9534, 174.974, -22.7773, 0.81 ) }
    dend_23 { pt3dadd( -95.1373, 175.556, -22.7055, 0.81 ) }
    dend_23 { pt3dadd( -95.4369, 176.597, -22.5945, 0.59 ) }
    dend_23 { pt3dadd( -95.7867, 177.961, -22.4108, 0.74 ) }
    dend_23 { pt3dadd( -95.9746, 178.754, -22.2732, 0.74 ) }
    dend_23 { pt3dadd( -96.2924, 180.184, -21.9835, 1.03 ) }
    dend_23 { pt3dadd( -96.461, 181.018, -21.7782, 0.52 ) }
    dend_23 { pt3dadd( -96.5993, 181.803, -21.5496, 0.52 ) }
    dend_23 { pt3dadd( -96.7559, 182.888, -21.1776, 0.88 ) }
    dend_23 { pt3dadd( -96.8863, 184.006, -20.7542, 0.59 ) }
    dend_23 { pt3dadd( -96.9559, 184.889, -20.387, 0.44 ) }
    dend_23 { pt3dadd( -96.9855, 185.69, -20.0453, 0.74 ) }
    dend_23 { pt3dadd( -97.0021, 186.479, -19.7418, 0.74 ) }
    dend_23 { pt3dadd( -97.0518, 187.568, -19.3604, 0.66 ) }
    dend_23 { pt3dadd( -97.1246, 188.484, -19.0802, 0.59 ) }
    dend_23 { pt3dadd( -97.2716, 189.498, -18.7606, 0.59 ) }
    dend_23 { pt3dadd( -97.4413, 190.219, -18.4933, 0.59 ) }
    dend_23 { pt3dadd( -97.7716, 191.187, -18.0977, 0.59 ) }
    dend_23 { pt3dadd( -98.2314, 192.282, -17.6242, 0.81 ) }
    dend_23 { pt3dadd( -98.5563, 192.993, -17.3159, 0.81 ) }
    dend_23 { pt3dadd( -99.1052, 194.189, -16.8003, 0.74 ) }
    dend_23 { pt3dadd( -99.6204, 195.398, -16.257, 0.66 ) }
    dend_23 { pt3dadd( -99.8811, 196.092, -15.914, 0.59 ) }
    dend_23 { pt3dadd( -100.221, 197.14, -15.3865, 0.59 ) }
    dend_23 { pt3dadd( -100.493, 198.098, -14.9083, 0.96 ) }
    dend_23 { pt3dadd( -100.674, 198.765, -14.5721, 0.96 ) }
    dend_23 { pt3dadd( -101.133, 200.375, -13.8026, 0.88 ) }
    dend_23 { pt3dadd( -101.429, 201.274, -13.3823, 0.66 ) }
    dend_23 { pt3dadd( -101.709, 201.996, -13.0381, 0.37 ) }
    dend_23 { pt3dadd( -101.942, 202.52, -12.8028, 0.44 ) }
    dend_23 { pt3dadd( -102.261, 203.167, -12.5601, 0.44 ) }
    dend_23 { pt3dadd( -102.674, 203.928, -12.355, 0.44 ) }
    dend_23 { pt3dadd( -103.241, 204.83, -12.2012, 0.44 ) }
    dend_23 { pt3dadd( -103.919, 205.774, -12.0637, 0.44 ) }
    dend_23 { pt3dadd( -104.643, 206.676, -11.917, 0.44 ) }
    dend_23 { pt3dadd( -105.33, 207.526, -11.7752, 0.52 ) }
    dend_23 { pt3dadd( -105.732, 208.079, -11.6906, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -106.151, 208.769, -11.6069, 0.52 ) }
    dend_23 { pt3dadd( -106.571, 209.58, -11.5581, 0.59 ) }
    dend_23 { pt3dadd( -106.832, 210.115, -11.5369, 0.59 ) }
    dend_23 { pt3dadd( -107.323, 211.026, -11.5077, 0.59 ) }
    dend_23 { pt3dadd( -108.015, 212.233, -11.4764, 0.44 ) }
    dend_23 { pt3dadd( -108.738, 213.4, -11.45, 0.44 ) }
    dend_23 { pt3dadd( -109.712, 214.744, -11.4221, 0.44 ) }
    dend_23 { pt3dadd( -110.187, 215.237, -11.4113, 0.44 ) }
    dend_23 { pt3dadd( -111.444, 215.766, -11.3724, 0.44 ) }
    dend_23 { pt3dadd( -112.427, 215.72, -11.3182, 0.37 ) }
    dend_23 { pt3dadd( -113.46, 215.435, -11.2417, 0.37 ) }
    dend_23 { pt3dadd( -114.454, 215.01, -11.1532, 1.25 ) }
    dend_23 { pt3dadd( -115.524, 214.452, -11.0485, 0.37 ) }
    dend_23 { pt3dadd( -116.202, 214.083, -10.9477, 0.37 ) }
    dend_23 { pt3dadd( -116.505, 213.922, -10.8762, 0.59 ) }
    dend_23 { pt3dadd( -117.098, 213.634, -10.6744, 0.59 ) }
    dend_23 { pt3dadd( -117.593, 213.399, -10.4382, 0.29 ) }
    dend_23 { pt3dadd( -118.373, 213.04, -10.0044, 0.29 ) }
    dend_23 { pt3dadd( -119.26, 212.726, -9.4437, 0.66 ) }
    dend_23 { pt3dadd( -119.883, 212.534, -8.9934, 1.11 ) }
    dend_23 { pt3dadd( -120.404, 212.39, -8.57536, 1.33 ) }
    dend_23 { pt3dadd( -121.019, 212.238, -7.99856, 1.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.23851, 20.4567, 8.56033, 0.81 ) }
    dend_20 { pt3dadd( -8.50495, 22.6537, 8.32263, 0.81 ) }
    dend_20 { pt3dadd( -8.76617, 24.3489, 8.09932, 0.96 ) }
    dend_20 { pt3dadd( -9.10209, 26.044, 7.87158, 0.88 ) }
    dend_20 { pt3dadd( -9.31816, 26.8899, 7.76523, 0.88 ) }
    dend_20 { pt3dadd( -9.71722, 28.1814, 7.6177, 1.03 ) }
    dend_20 { pt3dadd( -10.0195, 28.9958, 7.53738, 1.03 ) }
    dend_20 { pt3dadd( -10.7578, 30.4644, 7.39918, 0.96 ) }
    dend_20 { pt3dadd( -11.5169, 31.6762, 7.32989, 0.96 ) }
    dend_20 { pt3dadd( -12.4253, 32.8395, 7.29006, 1.11 ) }
    dend_20 { pt3dadd( -13.2487, 33.6947, 7.27784, 1.18 ) }
    dend_20 { pt3dadd( -14.4978, 34.7786, 7.29251, 1.18 ) }
    dend_20 { pt3dadd( -15.3889, 35.4719, 7.32098, 1.4 ) }
    dend_20 { pt3dadd( -16.0199, 35.9454, 7.37699, 1.25 ) }
    dend_20 { pt3dadd( -17.0048, 36.695, 7.50236, 0.88 ) }
    dend_20 { pt3dadd( -17.9673, 37.4812, 7.6516, 1.18 ) }
    dend_20 { pt3dadd( -18.4993, 37.9815, 7.77832, 1.47 ) }
    dend_20 { pt3dadd( -19.1017, 38.6369, 7.97145, 1.33 ) }
    dend_20 { pt3dadd( -20.3002, 40.0655, 8.43313, 0.96 ) }
    dend_20 { pt3dadd( -20.8766, 40.8027, 8.68391, 1.18 ) }
    dend_20 { pt3dadd( -21.4104, 41.5144, 8.94156, 1.18 ) }
    dend_20 { pt3dadd( -22.4672, 42.8501, 9.42316, 1.18 ) }
    dend_20 { pt3dadd( -22.8429, 43.2766, 9.57471, 1.33 ) }
    dend_20 { pt3dadd( -23.5399, 43.9613, 9.80734, 0.96 ) }
    dend_20 { pt3dadd( -24.12, 44.446, 9.95096, 0.81 ) }
    dend_20 { pt3dadd( -24.7682, 44.935, 10.0987, 0.81 ) }
    dend_20 { pt3dadd( -25.7137, 45.5808, 10.2829, 1.11 ) }
    dend_20 { pt3dadd( -26.288, 45.9623, 10.3605, 1.11 ) }
    dend_20 { pt3dadd( -26.9158, 46.4346, 10.4182, 0.88 ) }
    dend_20 { pt3dadd( -27.2924, 46.7989, 10.4303, 0.88 ) }
    dend_20 { pt3dadd( -27.6938, 47.3336, 10.409, 0.88 ) }
    dend_20 { pt3dadd( -28.2582, 48.4557, 10.2802, 1.11 ) }
    dend_20 { pt3dadd( -28.4616, 49.137, 10.1163, 1.11 ) }
    dend_20 { pt3dadd( -28.6865, 50.3006, 9.76588, 1.11 ) }
    dend_20 { pt3dadd( -28.869, 51.4883, 9.32515, 1.03 ) }
    dend_20 { pt3dadd( -29.0201, 52.5496, 8.89106, 1.4 ) }
    dend_20 { pt3dadd( -29.1668, 53.469, 8.45594, 1.62 ) }
    dend_20 { pt3dadd( -29.4683, 55.0564, 7.63816, 0.88 ) }
    dend_20 { pt3dadd( -29.7274, 56.0531, 7.11077, 0.88 ) }
    dend_20 { pt3dadd( -30.1332, 57.2256, 6.55932, 0.88 ) }
    dend_20 { pt3dadd( -30.5484, 58.1748, 6.20218, 1.03 ) }
    dend_20 { pt3dadd( -31.1445, 59.2817, 5.92274, 0.81 ) }
    dend_20 { pt3dadd( -31.5686, 59.9214, 5.95351, 0.96 ) }
    dend_20 { pt3dadd( -32.0478, 60.4657, 6.23764, 0.81 ) }
    dend_20 { pt3dadd( -33.1034, 61.3837, 7.20347, 1.25 ) }
    dend_20 { pt3dadd( -34.1873, 62.1417, 8.42369, 1.25 ) }
    dend_20 { pt3dadd( -34.7165, 62.4433, 9.03239, 0.96 ) }
    dend_20 { pt3dadd( -35.7355, 62.959, 10.1876, 0.96 ) }
    dend_20 { pt3dadd( -36.5246, 63.3215, 10.9878, 0.96 ) }
    dend_20 { pt3dadd( -37.0948, 63.5887, 11.4669, 0.96 ) }
    dend_20 { pt3dadd( -37.9944, 64.0693, 12.0175, 0.81 ) }
    dend_20 { pt3dadd( -38.7131, 64.5601, 12.3396, 0.96 ) }
    dend_20 { pt3dadd( -39.6666, 65.3645, 12.6893, 0.96 ) }
    dend_20 { pt3dadd( -40.0949, 65.7659, 12.8119, 1.11 ) }
    dend_20 { pt3dadd( -40.9241, 66.5911, 13.0355, 1.11 ) }
    dend_20 { pt3dadd( -41.7838, 67.4973, 13.2129, 0.96 ) }
    dend_20 { pt3dadd( -42.7077, 68.5305, 13.3557, 0.81 ) }
    dend_20 { pt3dadd( -43.7529, 69.7845, 13.4632, 1.03 ) }
    dend_20 { pt3dadd( -44.5222, 70.7968, 13.5567, 1.18 ) }
    dend_20 { pt3dadd( -45.3712, 72.008, 13.6984, 1.18 ) }
    dend_20 { pt3dadd( -46.2754, 73.4993, 13.8986, 1.03 ) }
    dend_20 { pt3dadd( -46.7157, 74.3871, 14.0485, 1.11 ) }
    dend_20 { pt3dadd( -47.0349, 75.3241, 14.2655, 1.11 ) }
    dend_20 { pt3dadd( -47.326, 76.9321, 14.7785, 0.96 ) }
    dend_20 { pt3dadd( -47.3859, 77.6585, 15.0733, 0.96 ) }
    dend_20 { pt3dadd( -47.4281, 78.6464, 15.5664, 0.74 ) }
    dend_20 { pt3dadd( -47.5021, 79.5203, 16.0956, 0.74 ) }
    dend_20 { pt3dadd( -47.8013, 80.8288, 16.9709, 0.96 ) }
    dend_20 { pt3dadd( -48.1793, 81.5994, 17.517, 0.88 ) }
    dend_20 { pt3dadd( -48.8096, 82.1961, 17.9122, 0.74 ) }
    dend_20 { pt3dadd( -49.6487, 82.6033, 18.1707, 0.74 ) }
    dend_20 { pt3dadd( -50.5921, 82.9017, 18.3008, 0.81 ) }
    dend_20 { pt3dadd( -51.8579, 83.2343, 18.342, 0.88 ) }
    dend_20 { pt3dadd( -52.6452, 83.4316, 18.3192, 0.88 ) }
    dend_20 { pt3dadd( -53.4018, 83.6393, 18.2725, 1.03 ) }
    dend_20 { pt3dadd( -54.4763, 83.9646, 18.206, 1.03 ) }
    dend_20 { pt3dadd( -55.9713, 84.4394, 18.217, 0.96 ) }
    dend_20 { pt3dadd( -56.9172, 84.7358, 18.2971, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( -58.0501, 85.0682, 18.4915, 0.81 ) }
    dend_20 { pt3dadd( -58.8279, 85.2759, 18.6706, 0.81 ) }
    dend_20 { pt3dadd( -59.8529, 85.5252, 18.9543, 0.81 ) }
    dend_20 { pt3dadd( -61.3467, 85.8558, 19.4295, 0.88 ) }
    dend_20 { pt3dadd( -62.1946, 86.0317, 19.6965, 0.88 ) }
    dend_20 { pt3dadd( -63.3657, 86.3084, 20.0474, 0.88 ) }
    dend_20 { pt3dadd( -64.3079, 86.6051, 20.3228, 0.96 ) }
    dend_20 { pt3dadd( -65.072, 86.9431, 20.5589, 0.96 ) }
    dend_20 { pt3dadd( -65.8364, 87.3825, 20.8055, 0.81 ) }
    dend_20 { pt3dadd( -66.4931, 87.8325, 21.0192, 0.96 ) }
    dend_20 { pt3dadd( -67.1659, 88.3541, 21.2857, 0.96 ) }
    dend_20 { pt3dadd( -67.9086, 89.0064, 21.6914, 0.88 ) }
    dend_20 { pt3dadd( -68.6006, 89.658, 22.2009, 0.88 ) }
    dend_20 { pt3dadd( -69.0838, 90.1623, 22.6488, 0.96 ) }
    dend_20 { pt3dadd( -69.53, 90.6983, 23.185, 0.96 ) }
    dend_20 { pt3dadd( -70.1036, 91.5345, 24.045, 0.81 ) }
    dend_20 { pt3dadd( -70.6217, 92.3907, 24.9383, 0.81 ) }
    dend_20 { pt3dadd( -71.0481, 93.1168, 25.6227, 0.88 ) }
    dend_20 { pt3dadd( -71.4204, 93.7705, 26.1377, 0.81 ) }
    dend_20 { pt3dadd( -71.8946, 94.6584, 26.6907, 0.81 ) }
    dend_20 { pt3dadd( -72.4413, 95.6836, 27.1213, 0.96 ) }
    dend_20 { pt3dadd( -72.8792, 96.4469, 27.3012, 0.81 ) }
    dend_20 { pt3dadd( -73.7145, 97.7648, 27.4509, 0.74 ) }
    dend_20 { pt3dadd( -74.314, 98.6305, 27.4608, 0.74 ) }
    dend_20 { pt3dadd( -75.0477, 99.5791, 27.3874, 0.74 ) }
    dend_20 { pt3dadd( -75.8771, 100.591, 27.1774, 0.88 ) }
    dend_20 { pt3dadd( -76.2909, 101.098, 27.0246, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -10.4763, 15.346, 10.2424, 0.74 ) }
    dend_18 { pt3dadd( -12.5234, 14.0537, 11.8376, 0.74 ) }
    dend_18 { pt3dadd( -13.1055, 13.6184, 12.321, 0.88 ) }
    dend_18 { pt3dadd( -14.2591, 12.7187, 13.2066, 0.81 ) }
    dend_18 { pt3dadd( -15.6775, 11.3664, 14.4615, 0.52 ) }
    dend_18 { pt3dadd( -16.2484, 10.8458, 14.8584, 0.44 ) }
    dend_18 { pt3dadd( -17.0585, 10.1639, 15.2775, 0.44 ) }
    dend_18 { pt3dadd( -17.6725, 9.66459, 15.3114, 0.29 ) }
    dend_18 { pt3dadd( -18.3115, 9.33509, 15.1451, 0.29 ) }
    dend_18 { pt3dadd( -20.1583, 8.99721, 14.0903, 1.4 ) }
    dend_18 { pt3dadd( -22.5154, 8.75085, 12.4527, 0.29 ) }
    dend_18 { pt3dadd( -23.265, 8.70956, 11.9087, 0.29 ) }
    dend_18 { pt3dadd( -24.4442, 8.72174, 10.9779, 0.37 ) }
    dend_18 { pt3dadd( -25.1769, 8.79657, 10.3565, 0.44 ) }
    dend_18 { pt3dadd( -25.9906, 8.95514, 9.61357, 0.37 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 42/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.4763, 15.346, 10.2424, 2.28 ) }
    dend_11 { pt3dadd( -11.1113, 17.0015, 10.6589, 2.28 ) }
    dend_11 { pt3dadd( -11.5433, 18.128, 10.9423, 1.4 ) }
    dend_11 { pt3dadd( -11.824, 18.8597, 11.1264, 1.4 ) }
    dend_11 { pt3dadd( -12.2485, 19.9665, 11.4048, 1.4 ) }
    dend_11 { pt3dadd( -12.5233, 20.683, 11.5851, 1.4 ) }
    dend_11 { pt3dadd( -12.8061, 21.4203, 11.7706, 1.69 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 49/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.82927, 155.641, -20.3853, 0.59 ) }
    dend_5 { pt3dadd( 4.40845, 157.58, -21.4601, 0.59 ) }
    dend_5 { pt3dadd( 4.64, 158.632, -21.9744, 0.59 ) }
    dend_5 { pt3dadd( 4.868, 160.09, -22.5642, 0.59 ) }
    dend_5 { pt3dadd( 4.93748, 160.656, -22.76, 0.59 ) }
    dend_5 { pt3dadd( 5.06448, 161.7, -23.1325, 0.81 ) }
    dend_5 { pt3dadd( 5.17101, 162.615, -23.4508, 0.88 ) }
    dend_5 { pt3dadd( 5.24482, 163.536, -23.6979, 0.88 ) }
    dend_5 { pt3dadd( 5.3005, 164.95, -24.0721, 0.66 ) }
    dend_5 { pt3dadd( 5.29402, 165.92, -24.2949, 0.88 ) }
    dend_5 { pt3dadd( 5.23189, 167.218, -24.5564, 0.96 ) }
    dend_5 { pt3dadd( 5.13652, 168.257, -24.7518, 0.81 ) }
    dend_5 { pt3dadd( 5.02983, 168.903, -24.8646, 0.81 ) }
    dend_5 { pt3dadd( 4.72102, 170.007, -25.0535, 0.66 ) }
    dend_5 { pt3dadd( 4.29894, 170.939, -25.2101, 0.74 ) }
    dend_5 { pt3dadd( 3.56355, 172.032, -25.3427, 0.44 ) }
    dend_5 { pt3dadd( 2.9051, 172.741, -25.3851, 0.44 ) }
    dend_5 { pt3dadd( 2.46308, 173.129, -25.4126, 0.81 ) }
    dend_5 { pt3dadd( 1.95868, 173.546, -25.4462, 0.96 ) }
    dend_5 { pt3dadd( 1.45181, 173.98, -25.4861, 0.74 ) }
    dend_5 { pt3dadd( 0.798797, 174.638, -25.5305, 0.74 ) }
    dend_5 { pt3dadd( 0.227538, 175.372, -25.6736, 0.88 ) }
    dend_5 { pt3dadd( -0.396097, 176.419, -25.9677, 1.03 ) }
    dend_5 { pt3dadd( -0.829299, 177.343, -26.3385, 0.88 ) }
    dend_5 { pt3dadd( -1.21503, 178.333, -26.8013, 0.74 ) }
    dend_5 { pt3dadd( -1.54122, 179.312, -27.293, 0.88 ) }
    dend_5 { pt3dadd( -2.17008, 181.494, -28.4303, 0.66 ) }
    dend_5 { pt3dadd( -2.54034, 182.945, -29.1724, 1.03 ) }
    dend_5 { pt3dadd( -2.8793, 184.446, -29.9088, 0.88 ) }
    dend_5 { pt3dadd( -3.17421, 185.916, -30.5181, 1.03 ) }
    dend_5 { pt3dadd( -3.3612, 186.949, -30.8617, 1.03 ) }
    dend_5 { pt3dadd( -3.55341, 188.148, -31.1427, 0.88 ) }
    dend_5 { pt3dadd( -3.73873, 189.301, -31.2643, 0.81 ) }
    dend_5 { pt3dadd( -3.92612, 190.381, -31.3449, 0.81 ) }
    dend_5 { pt3dadd( -4.28818, 192.06, -31.4521, 0.66 ) }
    dend_5 { pt3dadd( -4.51967, 192.93, -31.5441, 0.66 ) }
    dend_5 { pt3dadd( -4.9161, 194.11, -31.7559, 1.03 ) }
    dend_5 { pt3dadd( -5.21947, 194.853, -31.9446, 0.81 ) }
    dend_5 { pt3dadd( -5.68357, 195.902, -32.3003, 0.59 ) }
    dend_5 { pt3dadd( -6.19122, 197.018, -32.7978, 0.59 ) }
    dend_5 { pt3dadd( -6.48589, 197.684, -33.1967, 0.59 ) }
    dend_5 { pt3dadd( -6.8253, 198.441, -33.7659, 0.59 ) }
    dend_5 { pt3dadd( -7.15117, 199.133, -34.3704, 0.59 ) }
    dend_5 { pt3dadd( -7.71245, 200.26, -35.4179, 0.59 ) }
    dend_5 { pt3dadd( -8.31004, 201.388, -36.441, 1.18 ) }
    dend_5 { pt3dadd( -8.83683, 202.301, -37.2549, 1.33 ) }
    dend_5 { pt3dadd( -9.61406, 203.549, -38.3583, 0.74 ) }
    dend_5 { pt3dadd( -10.0713, 204.251, -38.9328, 0.74 ) }
    dend_5 { pt3dadd( -10.5588, 205.009, -39.5299, 0.74 ) }
    dend_5 { pt3dadd( -11.271, 206.232, -40.4476, 0.88 ) }
    dend_5 { pt3dadd( -11.6195, 207.008, -40.9372, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_5 { pt3dadd( -11.8145, 207.586, -41.2485, 1.03 ) }
    dend_5 { pt3dadd( -12.0958, 208.682, -41.7916, 0.74 ) }
    dend_5 { pt3dadd( -12.3154, 209.595, -42.2201, 0.74 ) }
    dend_5 { pt3dadd( -12.6915, 210.923, -42.813, 0.59 ) }
    dend_5 { pt3dadd( -13.1219, 212.016, -43.2565, 0.74 ) }
    dend_5 { pt3dadd( -13.7295, 213.132, -43.6099, 0.74 ) }
    dend_5 { pt3dadd( -14.1489, 213.804, -43.8518, 0.74 ) }
    dend_5 { pt3dadd( -14.9445, 214.958, -44.345, 0.88 ) }
    dend_5 { pt3dadd( -15.5103, 215.709, -44.6826, 1.03 ) }
    dend_5 { pt3dadd( -16.1921, 216.518, -45.0784, 0.74 ) }
    dend_5 { pt3dadd( -16.9809, 217.372, -45.6521, 0.59 ) }
    dend_5 { pt3dadd( -18.3348, 218.769, -46.8001, 0.59 ) }
    dend_5 { pt3dadd( -19.0578, 219.512, -47.592, 0.74 ) }
    dend_5 { pt3dadd( -19.4813, 219.945, -48.1132, 0.96 ) }
    dend_5 { pt3dadd( -20.0209, 220.461, -48.8086, 0.88 ) }
    dend_5 { pt3dadd( -20.715, 221.005, -49.6364, 0.74 ) }
    dend_5 { pt3dadd( -21.782, 221.77, -50.8936, 1.55 ) }
    dend_5 { pt3dadd( -22.7339, 222.462, -51.9811, 1.99 ) }
    dend_5 { pt3dadd( -23.5929, 223.222, -53.1178, 0.74 ) }
    dend_5 { pt3dadd( -24.1317, 223.947, -54.0488, 0.59 ) }
    dend_5 { pt3dadd( -24.5401, 224.969, -55.1006, 0.88 ) }
    dend_5 { pt3dadd( -24.7713, 226.174, -56.0614, 0.81 ) }
    dend_5 { pt3dadd( -24.8158, 227.019, -56.6454, 0.81 ) }
    dend_5 { pt3dadd( -24.734, 228.043, -57.4401, 0.74 ) }
    dend_5 { pt3dadd( -24.569, 229.126, -58.3803, 0.74 ) }
    dend_5 { pt3dadd( -24.456, 229.996, -59.2425, 0.66 ) }
    dend_5 { pt3dadd( -24.3809, 230.681, -59.9908, 0.66 ) }
    dend_5 { pt3dadd( -24.3486, 231.907, -61.3796, 1.47 ) }
    dend_5 { pt3dadd( -24.3994, 234.187, -64.0453, 1.18 ) }
    dend_5 { pt3dadd( -24.4506, 235.009, -65.0043, 1.03 ) }
    dend_5 { pt3dadd( -24.5554, 236.808, -67.0543, 1.03 ) }
    dend_5 { pt3dadd( -24.5996, 237.819, -68.0753, 0.74 ) }
    dend_5 { pt3dadd( -24.6249, 239.021, -69.0666, 1.03 ) }
    dend_5 { pt3dadd( -24.6314, 239.478, -69.3322, 1.25 ) }
    dend_5 { pt3dadd( -24.6704, 240.919, -69.9172, 0.66 ) }
    dend_5 { pt3dadd( -24.6864, 242.101, -70.3429, 0.66 ) }
    dend_5 { pt3dadd( -24.7401, 243.532, -70.7635, 0.81 ) }
    dend_5 { pt3dadd( -24.8502, 244.56, -71.1151, 0.66 ) }
    dend_5 { pt3dadd( -25.0273, 245.511, -71.5053, 0.66 ) }
    dend_5 { pt3dadd( -25.5072, 247.236, -72.2849, 0.66 ) }
    dend_5 { pt3dadd( -25.8497, 248.175, -72.7413, 0.52 ) }
    dend_5 { pt3dadd( -26.2032, 249.014, -73.1702, 0.66 ) }
    dend_5 { pt3dadd( -26.4526, 249.616, -73.4885, 0.81 ) }
    dend_5 { pt3dadd( -26.8958, 250.716, -73.9223, 0.52 ) }
    dend_5 { pt3dadd( -27.2494, 251.648, -74.1127, 0.52 ) }
    dend_5 { pt3dadd( -27.6299, 252.776, -74.1898, 0.88 ) }
    dend_5 { pt3dadd( -27.8788, 253.645, -74.2082, 0.88 ) }
    dend_5 { pt3dadd( -28.1188, 254.685, -74.2216, 0.59 ) }
    dend_5 { pt3dadd( -28.3649, 256.341, -74.2677, 0.74 ) }
    dend_5 { pt3dadd( -28.3624, 257.622, -74.5952, 0.44 ) }
    dend_5 { pt3dadd( -28.2025, 258.583, -75.2077, 0.44 ) }
    dend_5 { pt3dadd( -28.034, 259.288, -75.8434, 0.44 ) }
    dend_5 { pt3dadd( -27.7714, 260.223, -76.8156, 0.44 ) }
    dend_5 { pt3dadd( -27.4543, 261.172, -77.926, 1.11 ) }
    dend_5 { pt3dadd( -26.6157, 263.66, -80.9857, 0.88 ) }
    dend_5 { pt3dadd( -26.207, 264.908, -82.4585, 0.44 ) }
    dend_5 { pt3dadd( -25.9799, 265.751, -83.3541, 0.66 ) }
    dend_5 { pt3dadd( -25.864, 266.415, -83.9517, 0.44 ) }
    dend_5 { pt3dadd( -25.7875, 267.588, -84.7345, 0.44 ) }
    dend_5 { pt3dadd( -25.7883, 268.788, -85.2372, 0.44 ) }
    dend_5 { pt3dadd( -25.844, 270.366, -85.5428, 0.59 ) }
    dend_5 { pt3dadd( -25.9323, 271.87, -85.7232, 0.59 ) }
    dend_5 { pt3dadd( -26.0828, 273.295, -85.8731, 0.52 ) }
    dend_5 { pt3dadd( -26.3192, 274.558, -85.9853, 0.37 ) }
    dend_5 { pt3dadd( -26.7099, 275.859, -86.076, 0.37 ) }
    dend_5 { pt3dadd( -27.073, 276.717, -86.1675, 0.37 ) }
    dend_5 { pt3dadd( -27.6766, 277.64, -86.3279, 0.37 ) }
    dend_5 { pt3dadd( -28.3919, 278.462, -86.5235, 0.37 ) }
    dend_5 { pt3dadd( -29.0289, 279.073, -86.717, 0.74 ) }
    dend_5 { pt3dadd( -30.0502, 279.879, -87.0311, 0.66 ) }
    dend_5 { pt3dadd( -30.9397, 280.478, -87.306, 0.66 ) }
    dend_5 { pt3dadd( -32.2772, 281.291, -87.7259, 0.44 ) }
    dend_5 { pt3dadd( -33.2047, 281.806, -88.0206, 0.37 ) }
    dend_5 { pt3dadd( -33.7419, 282.101, -88.1921, 0.37 ) }
    dend_5 { pt3dadd( -34.7225, 282.601, -88.5176, 0.29 ) }
    dend_5 { pt3dadd( -35.266, 282.801, -88.6961, 0.29 ) }
    dend_5 { pt3dadd( -36.0234, 282.878, -88.9314, 1.03 ) }
    dend_5 { pt3dadd( -36.7412, 282.688, -89.1618, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 78/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 3.82927, 155.641, -20.3853, 0.59 ) }
    dend_2 { pt3dadd( 4.0854, 157.181, -19.7809, 0.59 ) }
    dend_2 { pt3dadd( 4.21063, 158.255, -19.4881, 0.81 ) }
    dend_2 { pt3dadd( 4.27608, 159.741, -19.2753, 0.88 ) }
    dend_2 { pt3dadd( 4.26874, 160.801, -19.2166, 0.59 ) }
    dend_2 { pt3dadd( 4.24928, 161.582, -19.2441, 0.59 ) }
    dend_2 { pt3dadd( 4.23284, 162.694, -19.33, 0.96 ) }
    dend_2 { pt3dadd( 4.20141, 163.304, -19.4269, 1.11 ) }
    dend_2 { pt3dadd( 4.13647, 164.594, -19.697, 0.66 ) }
    dend_2 { pt3dadd( 4.11771, 165.524, -19.9434, 0.66 ) }
    dend_2 { pt3dadd( 4.06462, 166.976, -20.2307, 0.66 ) }
    dend_2 { pt3dadd( 4.03575, 168.101, -20.3671, 0.59 ) }
    dend_2 { pt3dadd( 4.01968, 169.021, -20.3913, 0.59 ) }
    dend_2 { pt3dadd( 4.01785, 170.348, -20.3273, 0.59 ) }
    dend_2 { pt3dadd( 4.03882, 171.491, -20.2077, 0.59 ) }
    dend_2 { pt3dadd( 4.08854, 173.566, -19.9073, 0.66 ) }
    dend_2 { pt3dadd( 4.10638, 174.559, -19.7313, 0.66 ) }
    dend_2 { pt3dadd( 4.10929, 175.815, -19.5179, 0.52 ) }
    dend_2 { pt3dadd( 4.11126, 176.874, -19.3514, 0.52 ) }
    dend_2 { pt3dadd( 4.0959, 177.96, -19.2087, 0.52 ) }
    dend_2 { pt3dadd( 4.08159, 178.779, -19.1353, 0.74 ) }
    dend_2 { pt3dadd( 4.08843, 179.509, -19.1384, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 4.11266, 180.375, -19.1522, 0.88 ) }
    dend_2 { pt3dadd( 4.16986, 180.973, -19.1566, 0.88 ) }
    dend_2 { pt3dadd( 4.48919, 182.454, -19.0882, 0.59 ) }
    dend_2 { pt3dadd( 4.77381, 183.129, -19.0179, 0.81 ) }
    dend_2 { pt3dadd( 5.30351, 183.939, -18.8736, 0.59 ) }
    dend_2 { pt3dadd( 6.05671, 184.833, -18.6566, 0.74 ) }
    dend_2 { pt3dadd( 6.85432, 185.641, -18.4458, 0.74 ) }
    dend_2 { pt3dadd( 7.71012, 186.418, -18.2575, 0.74 ) }
    dend_2 { pt3dadd( 8.6889, 187.267, -18.0732, 0.59 ) }
    dend_2 { pt3dadd( 9.58492, 188.035, -17.9108, 0.59 ) }
    dend_2 { pt3dadd( 10.5295, 188.862, -17.7494, 0.81 ) }
    dend_2 { pt3dadd( 11.3896, 189.654, -17.6411, 0.81 ) }
    dend_2 { pt3dadd( 12.5463, 190.818, -17.5565, 0.59 ) }
    dend_2 { pt3dadd( 13.2203, 191.567, -17.5396, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 14/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -25.4327, -33.1952, -0.541522, 0.74 ) }
    dend_35 { pt3dadd( -25.6724, -34.4931, -2.71639, 0.74 ) }
    dend_35 { pt3dadd( -25.7857, -35.4968, -4.03424, 0.88 ) }
    dend_35 { pt3dadd( -25.9434, -37.2828, -5.92852, 1.03 ) }
    dend_35 { pt3dadd( -26.0174, -38.0303, -6.58119, 0.96 ) }
    dend_35 { pt3dadd( -26.1422, -38.9832, -7.28534, 0.66 ) }
    dend_35 { pt3dadd( -26.2956, -39.879, -7.86127, 0.88 ) }
    dend_35 { pt3dadd( -26.4492, -40.6936, -8.14049, 0.81 ) }
    dend_35 { pt3dadd( -26.6645, -41.4466, -8.268, 0.81 ) }
    dend_35 { pt3dadd( -27.0079, -42.2839, -8.31308, 0.66 ) }
    dend_35 { pt3dadd( -27.3914, -43.0029, -8.36333, 0.66 ) }
    dend_35 { pt3dadd( -27.7811, -43.6505, -8.44401, 0.74 ) }
    dend_35 { pt3dadd( -28.3398, -44.5317, -8.5968, 0.59 ) }
    dend_35 { pt3dadd( -28.6446, -45.0568, -8.69544, 0.52 ) }
    dend_35 { pt3dadd( -28.8919, -45.5669, -8.79393, 0.52 ) }
    dend_35 { pt3dadd( -29.2854, -46.62, -8.98847, 0.88 ) }
    dend_35 { pt3dadd( -29.5023, -47.3856, -9.11591, 0.88 ) }
    dend_35 { pt3dadd( -29.6929, -48.2077, -9.23224, 0.74 ) }
    dend_35 { pt3dadd( -29.9518, -49.3842, -9.36851, 0.74 ) }
    dend_35 { pt3dadd( -30.1149, -50.0499, -9.4348, 0.74 ) }
    dend_35 { pt3dadd( -30.426, -51.0882, -9.51579, 0.81 ) }
    dend_35 { pt3dadd( -30.7509, -51.9405, -9.54654, 0.81 ) }
    dend_35 { pt3dadd( -31.1464, -52.7867, -9.53471, 0.66 ) }
    dend_35 { pt3dadd( -31.5948, -53.6067, -9.50201, 0.74 ) }
    dend_35 { pt3dadd( -32.0561, -54.3532, -9.45886, 0.74 ) }
    dend_35 { pt3dadd( -32.534, -55.0834, -9.42724, 0.81 ) }
    dend_35 { pt3dadd( -32.9653, -55.7412, -9.41128, 0.81 ) }
    dend_35 { pt3dadd( -33.2699, -56.2287, -9.41059, 0.74 ) }
    dend_35 { pt3dadd( -33.6669, -56.9559, -9.43221, 0.52 ) }
    dend_35 { pt3dadd( -33.946, -57.5693, -9.46999, 0.52 ) }
    dend_35 { pt3dadd( -34.2779, -58.4534, -9.55093, 0.52 ) }
    dend_35 { pt3dadd( -34.5386, -59.281, -9.62336, 1.03 ) }
    dend_35 { pt3dadd( -34.6828, -59.8016, -9.66848, 1.03 ) }
    dend_35 { pt3dadd( -34.8493, -60.4392, -9.70489, 0.81 ) }
    dend_35 { pt3dadd( -34.9867, -60.98, -9.71726, 0.88 ) }
    dend_35 { pt3dadd( -35.139, -61.7072, -9.70692, 1.03 ) }
    dend_35 { pt3dadd( -35.2883, -62.687, -9.66437, 0.74 ) }
    dend_35 { pt3dadd( -35.3512, -63.3267, -9.67049, 0.74 ) }
    dend_35 { pt3dadd( -35.3961, -64.1382, -9.7174, 0.74 ) }
    dend_35 { pt3dadd( -35.4124, -64.8688, -9.83439, 0.59 ) }
    dend_35 { pt3dadd( -35.4119, -65.8396, -10.0847, 0.66 ) }
    dend_35 { pt3dadd( -35.3946, -66.4169, -10.2888, 0.66 ) }
    dend_35 { pt3dadd( -35.3302, -67.4824, -10.7689, 0.66 ) }
    dend_35 { pt3dadd( -35.3046, -68.0283, -11.047, 0.52 ) }
    dend_35 { pt3dadd( -35.3092, -69.0753, -11.6187, 0.59 ) }
    dend_35 { pt3dadd( -35.3639, -69.609, -11.9109, 0.81 ) }
    dend_35 { pt3dadd( -35.4688, -70.0876, -12.1576, 0.81 ) }
    dend_35 { pt3dadd( -35.6399, -70.6783, -12.4164, 0.29 ) }
    dend_35 { pt3dadd( -35.8411, -71.2704, -12.6025, 0.29 ) }
    dend_35 { pt3dadd( -36.1355, -72.0284, -12.7872, 0.74 ) }
    dend_35 { pt3dadd( -36.3901, -72.6574, -12.8854, 1.25 ) }
    dend_35 { pt3dadd( -36.5649, -73.0973, -12.9445, 1.47 ) }
    dend_35 { pt3dadd( -36.689, -73.425, -12.9795, 1.62 ) }
    dend_35 { pt3dadd( -36.9032, -74.0527, -13.0309, 1.25 ) }
    dend_35 { pt3dadd( -37.108, -74.7693, -13.0923, 0.44 ) }
    dend_35 { pt3dadd( -37.3129, -75.5249, -13.1798, 0.29 ) }
    dend_35 { pt3dadd( -37.5871, -76.5303, -13.2891, 0.66 ) }
    dend_35 { pt3dadd( -37.7745, -77.2105, -13.3569, 0.96 ) }
    dend_35 { pt3dadd( -37.8884, -77.6207, -13.3937, 1.25 ) }
    dend_35 { pt3dadd( -38.0102, -78.0773, -13.4298, 1.47 ) }
    dend_35 { pt3dadd( -38.1988, -78.8105, -13.4772, 1.03 ) }
    dend_35 { pt3dadd( -38.4659, -79.7231, -13.5178, 0.29 ) }
    dend_35 { pt3dadd( -38.6547, -80.2959, -13.5282, 0.44 ) }
    dend_35 { pt3dadd( -38.8497, -80.7885, -13.5244, 0.74 ) }
    dend_35 { pt3dadd( -39.079, -81.3023, -13.5057, 0.96 ) }
    dend_35 { pt3dadd( -39.3145, -81.769, -13.473, 1.25 ) }
    dend_35 { pt3dadd( -39.5455, -82.1512, -13.4404, 1.25 ) }
    dend_35 { pt3dadd( -39.9984, -82.7448, -13.405, 1.03 ) }
    dend_35 { pt3dadd( -40.4638, -83.241, -13.3425, 0.81 ) }
    dend_35 { pt3dadd( -40.6987, -83.4503, -13.3251, 0.81 ) }
    dend_35 { pt3dadd( -40.9917, -83.6886, -13.3183, 0.59 ) }
    dend_35 { pt3dadd( -41.459, -84.059, -13.3332, 0.52 ) }
    dend_35 { pt3dadd( -41.7416, -84.306, -13.3598, 0.52 ) }
    dend_35 { pt3dadd( -42.2872, -84.8634, -13.4507, 0.59 ) }
    dend_35 { pt3dadd( -42.9455, -85.708, -13.6334, 0.44 ) }
    dend_35 { pt3dadd( -43.2665, -86.2385, -13.774, 0.29 ) }
    dend_35 { pt3dadd( -43.4551, -86.6071, -13.8805, 0.29 ) }
    dend_35 { pt3dadd( -43.7272, -87.1868, -14.0551, 0.66 ) }
    dend_35 { pt3dadd( -43.9403, -87.6472, -14.1974, 1.03 ) }
    dend_35 { pt3dadd( -44.1357, -88.0607, -14.3274, 1.03 ) }
    dend_35 { pt3dadd( -44.5564, -88.8242, -14.533, 0.29 ) }
    dend_35 { pt3dadd( -44.9291, -89.37, -14.6987, 0.29 ) }
    dend_35 { pt3dadd( -45.2458, -89.7531, -14.8145, 0.29 ) }
    dend_35 { pt3dadd( -45.3848, -89.8995, -14.8574, 0.44 ) }
    dend_35 { pt3dadd( -45.642, -90.168, -14.9263, 0.44 ) }
    dend_35 { pt3dadd( -46.2334, -90.8186, -15.0649, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( -46.4589, -91.0851, -15.1136, 0.66 ) }
    dend_35 { pt3dadd( -47.0106, -91.7689, -15.235, 0.29 ) }
    dend_35 { pt3dadd( -47.2899, -92.1153, -15.2902, 0.29 ) }
    dend_35 { pt3dadd( -47.7046, -92.6271, -15.3555, 0.59 ) }
    dend_35 { pt3dadd( -48.0498, -93.0639, -15.3945, 0.81 ) }
    dend_35 { pt3dadd( -48.47, -93.6141, -15.4342, 0.29 ) }
    dend_35 { pt3dadd( -48.8288, -94.113, -15.4823, 0.52 ) }
    dend_35 { pt3dadd( -49.1947, -94.6825, -15.564, 0.52 ) }
    dend_35 { pt3dadd( -49.493, -95.2684, -15.6678, 0.44 ) }
    dend_35 { pt3dadd( -49.7669, -96.0059, -15.7838, 0.74 ) }
    dend_35 { pt3dadd( -49.9058, -96.5425, -15.9767, 0.88 ) }
    dend_35 { pt3dadd( -50.0036, -97.1579, -16.2797, 0.88 ) }
    dend_35 { pt3dadd( -50.0469, -97.6931, -16.5693, 0.29 ) }
    dend_35 { pt3dadd( -50.0548, -98.4991, -17.1328, 0.29 ) }
    dend_35 { pt3dadd( -50.0377, -99.1639, -17.648, 0.29 ) }
    dend_35 { pt3dadd( -49.9645, -101.417, -19.4756, 0.59 ) }
    dend_35 { pt3dadd( -49.9498, -101.821, -19.811, 0.81 ) }
    dend_35 { pt3dadd( -49.9289, -102.33, -20.2472, 0.81 ) }
    dend_35 { pt3dadd( -49.8418, -104.006, -21.7084, 0.29 ) }
    dend_35 { pt3dadd( -49.7895, -104.605, -22.2269, 0.74 ) }
    dend_35 { pt3dadd( -49.7437, -104.951, -22.5022, 0.74 ) }
    dend_35 { pt3dadd( -49.5955, -106.073, -23.1973, 0.22 ) }
    dend_35 { pt3dadd( -49.4971, -106.994, -23.7319, 1.11 ) }
    dend_35 { pt3dadd( -49.4481, -107.543, -24.022, 1.11 ) }
    dend_35 { pt3dadd( -49.3654, -108.592, -24.4531, 0.22 ) }
    dend_35 { pt3dadd( -49.2863, -109.365, -24.7452, 0.59 ) }
    dend_35 { pt3dadd( -49.1393, -110.577, -25.1837, 0.22 ) }
    dend_35 { pt3dadd( -49.0738, -111.225, -25.3879, 0.37 ) }
    dend_35 { pt3dadd( -49.056, -111.529, -25.4845, 0.37 ) }
    dend_35 { pt3dadd( -49.0689, -112.129, -25.6763, 0.22 ) }
    dend_35 { pt3dadd( -49.1324, -112.881, -25.9161, 0.22 ) }
    dend_35 { pt3dadd( -49.2636, -114.104, -26.3162, 1.47 ) }
    dend_35 { pt3dadd( -49.3604, -114.828, -26.548, 1.62 ) }
    dend_35 { pt3dadd( -49.5421, -115.722, -26.8082, 1.25 ) }
    dend_35 { pt3dadd( -49.909, -117.165, -27.1982, 0.15 ) }
    dend_35 { pt3dadd( -50.1698, -118.002, -27.4067, 0.22 ) }
    dend_35 { pt3dadd( -50.2956, -118.366, -27.4774, 0.88 ) }
    dend_35 { pt3dadd( -50.4343, -118.772, -27.5476, 1.03 ) }
    dend_35 { pt3dadd( -50.7289, -119.696, -27.7168, 0.15 ) }
    dend_35 { pt3dadd( -50.9185, -120.35, -27.8446, 0.52 ) }
    dend_35 { pt3dadd( -51.0678, -120.866, -27.958, 0.74 ) }
    dend_35 { pt3dadd( -51.8537, -123.521, -28.5693, 0.22 ) }
    dend_35 { pt3dadd( -52.1134, -124.388, -28.7749, 0.81 ) }
    dend_35 { pt3dadd( -52.2251, -124.762, -28.8665, 0.81 ) }
    dend_35 { pt3dadd( -52.6824, -126.346, -29.2637, 0.22 ) }
    dend_35 { pt3dadd( -52.863, -126.979, -29.4162, 0.59 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 46/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -25.4327, -33.1952, -0.541522, 0.59 ) }
    dend_32 { pt3dadd( -25.2943, -34.0143, -0.615583, 0.59 ) }
    dend_32 { pt3dadd( -25.1849, -34.5052, -0.657405, 0.59 ) }
    dend_32 { pt3dadd( -25.0366, -35.1026, -0.747432, 0.81 ) }
    dend_32 { pt3dadd( -24.9275, -35.5515, -0.82371, 0.81 ) }
    dend_32 { pt3dadd( -24.7641, -36.3112, -0.971217, 1.03 ) }
    dend_32 { pt3dadd( -24.6962, -36.7183, -1.05713, 1.03 ) }
    dend_32 { pt3dadd( -24.6429, -37.1984, -1.14854, 0.88 ) }
    dend_32 { pt3dadd( -24.618, -38.0824, -1.26108, 0.88 ) }
    dend_32 { pt3dadd( -24.6947, -38.6621, -1.27559, 1.03 ) }
    dend_32 { pt3dadd( -24.8859, -39.1559, -1.2146, 1.03 ) }
    dend_32 { pt3dadd( -25.2844, -39.7565, -1.04473, 0.52 ) }
    dend_32 { pt3dadd( -25.9833, -40.5817, -0.7538, 1.03 ) }
    dend_32 { pt3dadd( -26.3498, -40.9667, -0.599043, 1.03 ) }
    dend_32 { pt3dadd( -26.7727, -41.4084, -0.402239, 0.88 ) }
    dend_32 { pt3dadd( -27.1852, -41.8684, -0.214252, 0.81 ) }
    dend_32 { pt3dadd( -27.6421, -42.4323, -0.00189866, 0.59 ) }
    dend_32 { pt3dadd( -28.0148, -42.9634, 0.162821, 0.59 ) }
    dend_32 { pt3dadd( -28.3885, -43.6111, 0.301793, 0.59 ) }
    dend_32 { pt3dadd( -28.7669, -44.3768, 0.457544, 0.88 ) }
    dend_32 { pt3dadd( -28.9886, -44.904, 0.571136, 0.88 ) }
    dend_32 { pt3dadd( -29.1318, -45.2958, 0.663423, 0.74 ) }
    dend_32 { pt3dadd( -29.3201, -45.8162, 0.795715, 0.96 ) }
    dend_32 { pt3dadd( -29.4943, -46.2464, 0.906447, 1.03 ) }
    dend_32 { pt3dadd( -29.672, -46.6283, 1.00463, 1.03 ) }
    dend_32 { pt3dadd( -30.0163, -47.2759, 1.16326, 0.59 ) }
    dend_32 { pt3dadd( -30.2855, -47.7629, 1.25135, 0.37 ) }
    dend_32 { pt3dadd( -30.5879, -48.2938, 1.30908, 0.37 ) }
    dend_32 { pt3dadd( -30.895, -48.8462, 1.34043, 0.81 ) }
    dend_32 { pt3dadd( -31.2041, -49.4495, 1.35246, 0.81 ) }
    dend_32 { pt3dadd( -31.4066, -49.8935, 1.34801, 0.81 ) }
    dend_32 { pt3dadd( -31.6964, -50.6156, 1.34478, 0.96 ) }
    dend_32 { pt3dadd( -31.9134, -51.2171, 1.34927, 0.96 ) }
    dend_32 { pt3dadd( -32.0983, -51.799, 1.37127, 0.66 ) }
    dend_32 { pt3dadd( -32.273, -52.3876, 1.42294, 0.66 ) }
    dend_32 { pt3dadd( -32.4363, -52.8627, 1.49258, 0.59 ) }
    dend_32 { pt3dadd( -32.6972, -53.4415, 1.62274, 0.66 ) }
    dend_32 { pt3dadd( -32.8743, -53.7151, 1.72448, 0.88 ) }
    dend_32 { pt3dadd( -33.16, -54.0532, 1.87836, 0.88 ) }
    dend_32 { pt3dadd( -33.4761, -54.3637, 2.03496, 0.74 ) }
    dend_32 { pt3dadd( -33.9314, -54.7835, 2.26115, 0.59 ) }
    dend_32 { pt3dadd( -34.2181, -55.0608, 2.40526, 0.59 ) }
    dend_32 { pt3dadd( -34.5451, -55.4346, 2.57206, 0.59 ) }
    dend_32 { pt3dadd( -34.9518, -56.0063, 2.78121, 0.44 ) }
    dend_32 { pt3dadd( -35.1907, -56.4112, 2.89204, 0.66 ) }
    dend_32 { pt3dadd( -35.4351, -56.9003, 2.99381, 0.81 ) }
    dend_32 { pt3dadd( -35.6365, -57.3587, 3.07196, 0.88 ) }
    dend_32 { pt3dadd( -35.8999, -57.9829, 3.15816, 0.88 ) }
    dend_32 { pt3dadd( -36.151, -58.548, 3.21088, 0.88 ) }
    dend_32 { pt3dadd( -36.4912, -59.2217, 3.25413, 0.66 ) }
    dend_32 { pt3dadd( -36.7579, -59.6747, 3.26854, 0.66 ) }
    dend_32 { pt3dadd( -37.0094, -60.0419, 3.26805, 0.81 ) }
    dend_32 { pt3dadd( -37.3122, -60.4284, 3.26032, 0.96 ) }
    dend_32 { pt3dadd( -37.6627, -60.8063, 3.261, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -38.027, -61.1725, 3.2816, 0.88 ) }
    dend_32 { pt3dadd( -38.5302, -61.692, 3.35104, 0.88 ) }
    dend_32 { pt3dadd( -38.9295, -62.1367, 3.44929, 1.03 ) }
    dend_32 { pt3dadd( -39.13, -62.3976, 3.53104, 1.03 ) }
    dend_32 { pt3dadd( -39.5344, -63.0394, 3.77262, 0.59 ) }
    dend_32 { pt3dadd( -39.7484, -63.4578, 3.94288, 0.74 ) }
    dend_32 { pt3dadd( -39.9996, -64.0219, 4.16694, 0.88 ) }
    dend_32 { pt3dadd( -40.1344, -64.3611, 4.29061, 0.88 ) }
    dend_32 { pt3dadd( -40.3606, -64.9511, 4.47864, 0.74 ) }
    dend_32 { pt3dadd( -40.5717, -65.5277, 4.64013, 0.88 ) }
    dend_32 { pt3dadd( -40.7383, -65.964, 4.73189, 0.88 ) }
    dend_32 { pt3dadd( -41.0237, -66.5816, 4.83297, 0.66 ) }
    dend_32 { pt3dadd( -41.2648, -67.0263, 4.89041, 0.66 ) }
    dend_32 { pt3dadd( -41.4688, -67.3711, 4.93188, 0.96 ) }
    dend_32 { pt3dadd( -41.7975, -67.887, 5.00048, 0.74 ) }
    dend_32 { pt3dadd( -42.2582, -68.5542, 5.10073, 0.74 ) }
    dend_32 { pt3dadd( -42.5839, -69.0017, 5.16955, 0.96 ) }
    dend_32 { pt3dadd( -42.8648, -69.3716, 5.22455, 0.96 ) }
    dend_32 { pt3dadd( -43.2056, -69.7919, 5.28387, 0.88 ) }
    dend_32 { pt3dadd( -43.5813, -70.2185, 5.33431, 0.81 ) }
    dend_32 { pt3dadd( -44.1002, -70.7424, 5.38033, 0.66 ) }
    dend_32 { pt3dadd( -44.6785, -71.2729, 5.42086, 0.59 ) }
    dend_32 { pt3dadd( -45.0987, -71.6277, 5.44468, 0.81 ) }
    dend_32 { pt3dadd( -45.4835, -71.9464, 5.46216, 0.81 ) }
    dend_32 { pt3dadd( -46.0569, -72.4031, 5.47299, 0.66 ) }
    dend_32 { pt3dadd( -46.5653, -72.782, 5.47273, 0.88 ) }
    dend_32 { pt3dadd( -47.001, -73.064, 5.46879, 1.47 ) }
    dend_32 { pt3dadd( -47.3035, -73.2159, 5.46193, 1.62 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -16.9437, -19.2345, 2.10897, 0.66 ) }
    dend_28 { pt3dadd( -18.0332, -19.1128, 2.05802, 0.66 ) }
    dend_28 { pt3dadd( -18.7432, -18.9879, 2.00188, 0.81 ) }
    dend_28 { pt3dadd( -19.5187, -18.8196, 1.92076, 1.11 ) }
    dend_28 { pt3dadd( -20.2399, -18.6421, 1.83507, 1.11 ) }
    dend_28 { pt3dadd( -20.8434, -18.4807, 1.7627, 1.11 ) }
    dend_28 { pt3dadd( -21.6608, -18.2527, 1.65542, 1.03 ) }
    dend_28 { pt3dadd( -22.5025, -17.9801, 1.50708, 1.18 ) }
    dend_28 { pt3dadd( -22.9752, -17.8058, 1.42443, 1.18 ) }
    dend_28 { pt3dadd( -23.4744, -17.5964, 1.34806, 1.18 ) }
    dend_28 { pt3dadd( -24.0986, -17.2958, 1.26483, 1.11 ) }
    dend_28 { pt3dadd( -24.8753, -16.8744, 1.20591, 0.96 ) }
    dend_28 { pt3dadd( -25.5826, -16.4327, 1.18732, 0.96 ) }
    dend_28 { pt3dadd( -26.34, -15.8671, 1.2007, 0.96 ) }
    dend_28 { pt3dadd( -26.9683, -15.2879, 1.23463, 0.88 ) }
    dend_28 { pt3dadd( -27.4507, -14.6953, 1.30271, 0.88 ) }
    dend_28 { pt3dadd( -27.9523, -13.809, 1.4227, 0.88 ) }
    dend_28 { pt3dadd( -28.212, -13.1185, 1.51983, 0.81 ) }
    dend_28 { pt3dadd( -28.3904, -12.3611, 1.61247, 0.88 ) }
    dend_28 { pt3dadd( -28.485, -11.7182, 1.66962, 0.88 ) }
    dend_28 { pt3dadd( -28.5876, -10.6828, 1.71741, 0.81 ) }
    dend_28 { pt3dadd( -28.6739, -9.71672, 1.71771, 0.88 ) }
    dend_28 { pt3dadd( -28.7676, -8.80094, 1.66902, 0.88 ) }
    dend_28 { pt3dadd( -28.9208, -7.68003, 1.59205, 0.96 ) }
    dend_28 { pt3dadd( -29.0462, -7.00229, 1.54213, 0.96 ) }
    dend_28 { pt3dadd( -29.2403, -6.17319, 1.47342, 1.11 ) }
    dend_28 { pt3dadd( -29.4868, -5.33657, 1.39801, 1.11 ) }
    dend_28 { pt3dadd( -29.8136, -4.42487, 1.33697, 1.03 ) }
    dend_28 { pt3dadd( -30.1097, -3.75458, 1.31572, 0.88 ) }
    dend_28 { pt3dadd( -30.5502, -2.92684, 1.31276, 0.88 ) }
    dend_28 { pt3dadd( -30.9702, -2.24393, 1.36629, 1.03 ) }
    dend_28 { pt3dadd( -31.6918, -1.23995, 1.49763, 1.11 ) }
    dend_28 { pt3dadd( -32.1367, -0.724282, 1.59008, 1.11 ) }
    dend_28 { pt3dadd( -32.9214, 6.07193E-4, 1.79876, 0.88 ) }
    dend_28 { pt3dadd( -33.3863, 0.339946, 1.94083, 1.03 ) }
    dend_28 { pt3dadd( -34.2788, 0.880576, 2.24896, 0.81 ) }
    dend_28 { pt3dadd( -34.9252, 1.23836, 2.50379, 0.66 ) }
    dend_28 { pt3dadd( -35.3818, 1.49226, 2.71574, 0.66 ) }
    dend_28 { pt3dadd( -36.2723, 2.06844, 3.19636, 0.81 ) }
    dend_28 { pt3dadd( -36.7719, 2.48304, 3.47451, 0.81 ) }
    dend_28 { pt3dadd( -37.1879, 2.93942, 3.68286, 0.74 ) }
    dend_28 { pt3dadd( -37.4514, 3.29515, 3.74846, 0.74 ) }
    dend_28 { pt3dadd( -37.8083, 3.75227, 3.78903, 0.74 ) }
    dend_28 { pt3dadd( -38.2443, 4.23634, 3.74544, 0.74 ) }
    dend_28 { pt3dadd( -38.7634, 4.67984, 3.60231, 0.88 ) }
    dend_28 { pt3dadd( -39.4447, 5.11305, 3.37896, 1.03 ) }
    dend_28 { pt3dadd( -40.2022, 5.47023, 3.09375, 1.18 ) }
    dend_28 { pt3dadd( -41.1537, 5.80926, 2.66615, 0.81 ) }
    dend_28 { pt3dadd( -41.7068, 5.95958, 2.38381, 0.81 ) }
    dend_28 { pt3dadd( -42.5713, 6.13472, 1.86384, 0.81 ) }
    dend_28 { pt3dadd( -43.3168, 6.27096, 1.35305, 1.03 ) }
    dend_28 { pt3dadd( -44.0618, 6.43052, 0.774925, 0.88 ) }
    dend_28 { pt3dadd( -45.1149, 6.71641, -0.106493, 0.96 ) }
    dend_28 { pt3dadd( -45.6141, 6.90182, -0.558563, 1.18 ) }
    dend_28 { pt3dadd( -46.5287, 7.34233, -1.38665, 1.4 ) }
    dend_28 { pt3dadd( -47.0511, 7.67676, -1.82844, 1.18 ) }
    dend_28 { pt3dadd( -47.7584, 8.21101, -2.4044, 0.88 ) }
    dend_28 { pt3dadd( -48.2438, 8.65806, -2.76013, 0.88 ) }
    dend_28 { pt3dadd( -48.7706, 9.24977, -3.07698, 1.03 ) }
    dend_28 { pt3dadd( -49.1102, 9.68709, -3.24242, 0.88 ) }
    dend_28 { pt3dadd( -49.6821, 10.535, -3.42258, 1.47 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 89/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -16.9437, -19.2345, 2.10897, 1.4 ) }
    dend_27 { pt3dadd( -17.772, -18.4443, 2.65556, 1.4 ) }
    dend_27 { pt3dadd( -18.5126, -17.7654, 3.12027, 1.25 ) }
    dend_27 { pt3dadd( -19.1629, -17.17, 3.55217, 1.03 ) }
    dend_27 { pt3dadd( -19.8069, -16.5564, 3.9614, 1.03 ) }
    dend_27 { pt3dadd( -20.2679, -16.0884, 4.26016, 0.88 ) }
    dend_27 { pt3dadd( -20.7014, -15.6045, 4.58292, 0.88 ) }
    dend_27 { pt3dadd( -21.0567, -15.1446, 4.92875, 1.03 ) }
    dend_27 { pt3dadd( -21.3386, -14.639, 5.29051, 1.03 ) }
    dend_27 { pt3dadd( -21.5498, -14.0355, 5.69712, 0.74 ) }
    dend_27 { pt3dadd( -21.6641, -13.5511, 5.99752, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -21.8069, -12.5894, 6.53789, 0.88 ) }
    dend_27 { pt3dadd( -21.8709, -11.6696, 7.04175, 1.03 ) }
    dend_27 { pt3dadd( -21.8855, -10.7397, 7.53584, 1.03 ) }
    dend_27 { pt3dadd( -21.8654, -10.1815, 7.80178, 1.03 ) }
    dend_27 { pt3dadd( -21.7931, -9.4363, 8.16061, 0.74 ) }
    dend_27 { pt3dadd( -21.6819, -8.63237, 8.49772, 1.11 ) }
    dend_27 { pt3dadd( -21.5704, -7.97077, 8.75704, 0.96 ) }
    dend_27 { pt3dadd( -21.4882, -7.49025, 8.95114, 0.88 ) }
    dend_27 { pt3dadd( -21.3152, -6.58529, 9.34378, 0.81 ) }
    dend_27 { pt3dadd( -21.1415, -5.58058, 9.77498, 0.74 ) }
    dend_27 { pt3dadd( -21.0035, -4.67358, 10.1458, 0.81 ) }
    dend_27 { pt3dadd( -20.9108, -3.71069, 10.5291, 1.03 ) }
    dend_27 { pt3dadd( -20.8672, -2.82288, 10.845, 1.03 ) }
    dend_27 { pt3dadd( -20.8454, -1.87418, 11.1509, 0.88 ) }
    dend_27 { pt3dadd( -20.8489, -1.02915, 11.3947, 0.88 ) }
    dend_27 { pt3dadd( -20.8645, -0.212076, 11.578, 1.11 ) }
    dend_27 { pt3dadd( -20.8845, 0.383426, 11.6876, 1.11 ) }
    dend_27 { pt3dadd( -20.9267, 1.1939, 11.7998, 0.74 ) }
    dend_27 { pt3dadd( -20.958, 1.97591, 11.9084, 0.81 ) }
    dend_27 { pt3dadd( -21.0077, 2.99807, 12.0425, 0.81 ) }
    dend_27 { pt3dadd( -21.0422, 3.89967, 12.1206, 0.96 ) }
    dend_27 { pt3dadd( -21.071, 4.79528, 12.1675, 0.66 ) }
    dend_27 { pt3dadd( -21.0824, 5.78175, 12.1936, 0.52 ) }
    dend_27 { pt3dadd( -21.0904, 6.67993, 12.2098, 0.74 ) }
    dend_27 { pt3dadd( -21.0983, 7.20182, 12.23, 0.74 ) }
    dend_27 { pt3dadd( -21.1331, 8.36704, 12.2938, 0.74 ) }
    dend_27 { pt3dadd( -21.1799, 9.26217, 12.3626, 0.74 ) }
    dend_27 { pt3dadd( -21.2736, 10.1692, 12.4648, 0.74 ) }
    dend_27 { pt3dadd( -21.4703, 11.2009, 12.6205, 0.66 ) }
    dend_27 { pt3dadd( -21.7737, 12.2098, 12.8123, 0.96 ) }
    dend_27 { pt3dadd( -22.0095, 12.8451, 12.9666, 0.96 ) }
    dend_27 { pt3dadd( -22.2459, 13.4062, 13.1446, 0.96 ) }
    dend_27 { pt3dadd( -22.7252, 14.4901, 13.5098, 0.81 ) }
    dend_27 { pt3dadd( -23.1028, 15.3563, 13.8068, 0.96 ) }
    dend_27 { pt3dadd( -23.4279, 16.244, 14.0976, 1.11 ) }
    dend_27 { pt3dadd( -23.6417, 17.0035, 14.3488, 0.96 ) }
    dend_27 { pt3dadd( -23.828, 17.9209, 14.6668, 0.88 ) }
    dend_27 { pt3dadd( -23.9333, 18.8109, 14.9745, 0.88 ) }
    dend_27 { pt3dadd( -23.9585, 19.5504, 15.2268, 0.88 ) }
    dend_27 { pt3dadd( -23.9489, 20.6102, 15.5644, 1.03 ) }
    dend_27 { pt3dadd( -23.9344, 21.6291, 15.8611, 0.74 ) }
    dend_27 { pt3dadd( -23.9446, 22.0671, 15.9758, 0.74 ) }
    dend_27 { pt3dadd( -24.0207, 22.8446, 16.16, 0.88 ) }
    dend_27 { pt3dadd( -24.1091, 23.3519, 16.2832, 0.88 ) }
    dend_27 { pt3dadd( -24.3477, 24.2566, 16.5044, 0.74 ) }
    dend_27 { pt3dadd( -24.6414, 25.0614, 16.7068, 0.66 ) }
    dend_27 { pt3dadd( -24.8854, 25.5815, 16.8392, 0.66 ) }
    dend_27 { pt3dadd( -25.5468, 26.7012, 17.1688, 1.03 ) }
    dend_27 { pt3dadd( -25.866, 27.1682, 17.3084, 1.03 ) }
    dend_27 { pt3dadd( -26.336, 27.8238, 17.4954, 0.81 ) }
    dend_27 { pt3dadd( -26.6813, 28.319, 17.6196, 0.81 ) }
    dend_27 { pt3dadd( -27.1287, 28.9809, 17.7279, 0.52 ) }
    dend_27 { pt3dadd( -27.4454, 29.4816, 17.7692, 0.52 ) }
    dend_27 { pt3dadd( -27.8805, 30.2321, 17.7743, 0.74 ) }
    dend_27 { pt3dadd( -28.2505, 30.955, 17.7498, 0.81 ) }
    dend_27 { pt3dadd( -28.5911, 31.7448, 17.7092, 0.81 ) }
    dend_27 { pt3dadd( -28.8768, 32.5472, 17.675, 0.88 ) }
    dend_27 { pt3dadd( -29.0683, 33.1904, 17.6649, 1.03 ) }
    dend_27 { pt3dadd( -29.2263, 33.7735, 17.6738, 1.03 ) }
    dend_27 { pt3dadd( -29.4585, 34.6162, 17.7161, 0.88 ) }
    dend_27 { pt3dadd( -29.7138, 35.4885, 17.7612, 0.74 ) }
    dend_27 { pt3dadd( -30.0271, 36.4972, 17.8154, 0.96 ) }
    dend_27 { pt3dadd( -30.2721, 37.2399, 17.859, 1.03 ) }
    dend_27 { pt3dadd( -30.5358, 37.9368, 17.8934, 1.03 ) }
    dend_27 { pt3dadd( -30.8731, 38.6938, 17.9295, 0.88 ) }
    dend_27 { pt3dadd( -31.3986, 39.653, 17.981, 0.96 ) }
    dend_27 { pt3dadd( -31.763, 40.1774, 18.0064, 0.81 ) }
    dend_27 { pt3dadd( -32.0741, 40.5354, 18.0264, 0.96 ) }
    dend_27 { pt3dadd( -32.5195, 40.9679, 18.0668, 1.18 ) }
    dend_27 { pt3dadd( -32.8996, 41.2974, 18.1275, 1.18 ) }
    dend_27 { pt3dadd( -33.3458, 41.6703, 18.231, 1.11 ) }
    dend_27 { pt3dadd( -33.7877, 42.0716, 18.3672, 1.25 ) }
    dend_27 { pt3dadd( -34.2144, 42.5464, 18.5297, 1.25 ) }
    dend_27 { pt3dadd( -34.6373, 43.1634, 18.7238, 1.03 ) }
    dend_27 { pt3dadd( -34.9426, 43.7838, 18.902, 0.88 ) }
    dend_27 { pt3dadd( -35.177, 44.5303, 19.0964, 0.74 ) }
    dend_27 { pt3dadd( -35.2924, 45.2827, 19.2735, 0.74 ) }
    dend_27 { pt3dadd( -35.3002, 46.2812, 19.4812, 0.81 ) }
    dend_27 { pt3dadd( -35.2284, 46.9924, 19.5904, 0.81 ) }
    dend_27 { pt3dadd( -35.1061, 47.6901, 19.6485, 0.96 ) }
    dend_27 { pt3dadd( -34.9868, 48.3388, 19.6585, 0.96 ) }
    dend_27 { pt3dadd( -34.8947, 48.8778, 19.6458, 0.88 ) }
    dend_27 { pt3dadd( -34.8063, 49.5833, 19.6314, 0.88 ) }
    dend_27 { pt3dadd( -34.7476, 50.4308, 19.6301, 0.81 ) }
    dend_27 { pt3dadd( -34.7242, 51.2483, 19.6517, 0.74 ) }
    dend_27 { pt3dadd( -34.7214, 52.2914, 19.7207, 0.88 ) }
    dend_27 { pt3dadd( -34.7254, 52.9636, 19.7987, 0.88 ) }
    dend_27 { pt3dadd( -34.7047, 53.6909, 19.9067, 1.03 ) }
    dend_27 { pt3dadd( -34.6277, 54.466, 20.0425, 0.96 ) }
    dend_27 { pt3dadd( -34.4746, 55.1037, 20.1721, 0.88 ) }
    dend_27 { pt3dadd( -34.2557, 55.6267, 20.2674, 1.03 ) }
    dend_27 { pt3dadd( -33.8458, 56.3043, 20.3732, 0.96 ) }
    dend_27 { pt3dadd( -33.4598, 56.8668, 20.4377, 0.88 ) }
    dend_27 { pt3dadd( -33.1002, 57.3621, 20.4724, 0.88 ) }
    dend_27 { pt3dadd( -32.6021, 58.0935, 20.522, 0.81 ) }
    dend_27 { pt3dadd( -32.1387, 58.8766, 20.5847, 0.74 ) }
    dend_27 { pt3dadd( -31.6227, 59.864, 20.6792, 0.81 ) }
    dend_27 { pt3dadd( -31.2824, 60.6101, 20.7549, 1.03 ) }
    dend_27 { pt3dadd( -31.1441, 60.9541, 20.795, 1.03 ) }
    dend_27 { pt3dadd( -30.7591, 61.9923, 20.919, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -30.4543, 62.8555, 21.0153, 0.88 ) }
    dend_27 { pt3dadd( -30.1675, 63.6188, 21.0888, 0.88 ) }
    dend_27 { pt3dadd( -29.7545, 64.5665, 21.1449, 0.88 ) }
    dend_27 { pt3dadd( -29.4443, 65.1471, 21.1693, 0.88 ) }
    dend_27 { pt3dadd( -29.09, 65.6993, 21.1847, 1.11 ) }
    dend_27 { pt3dadd( -28.6612, 66.2954, 21.1966, 1.11 ) }
    dend_27 { pt3dadd( -28.1015, 67.0676, 21.2134, 0.81 ) }
    dend_27 { pt3dadd( -27.6133, 67.779, 21.2388, 0.96 ) }
    dend_27 { pt3dadd( -27.0316, 68.6665, 21.2881, 0.96 ) }
    dend_27 { pt3dadd( -26.5362, 69.4709, 21.3102, 0.88 ) }
    dend_27 { pt3dadd( -25.9139, 70.5549, 21.3217, 0.88 ) }
    dend_27 { pt3dadd( -25.5371, 71.2891, 21.3094, 1.03 ) }
    dend_27 { pt3dadd( -25.2108, 72.0662, 21.2833, 1.03 ) }
    dend_27 { pt3dadd( -24.8671, 73.191, 21.2417, 0.88 ) }
    dend_27 { pt3dadd( -24.6993, 74.0082, 21.2121, 0.88 ) }
    dend_27 { pt3dadd( -24.6131, 74.6206, 21.1855, 0.74 ) }
    dend_27 { pt3dadd( -24.5377, 75.3129, 21.1589, 0.88 ) }
    dend_27 { pt3dadd( -24.4611, 76.2862, 21.1445, 0.81 ) }
    dend_27 { pt3dadd( -24.4134, 77.4914, 21.1971, 0.81 ) }
    dend_27 { pt3dadd( -24.4071, 78.6372, 21.3332, 0.88 ) }
    dend_27 { pt3dadd( -24.4177, 79.1579, 21.4382, 0.88 ) }
    dend_27 { pt3dadd( -24.4832, 80.4202, 21.7556, 0.81 ) }
    dend_27 { pt3dadd( -24.5932, 81.5724, 22.1017, 0.74 ) }
    dend_27 { pt3dadd( -24.7775, 82.7176, 22.5031, 0.88 ) }
    dend_27 { pt3dadd( -24.9775, 83.4895, 22.8138, 0.96 ) }
    dend_27 { pt3dadd( -25.3527, 84.603, 23.3015, 1.03 ) }
    dend_27 { pt3dadd( -25.6584, 85.4634, 23.7074, 0.88 ) }
    dend_27 { pt3dadd( -26.0244, 86.4765, 24.1955, 1.11 ) }
    dend_27 { pt3dadd( -26.2308, 87.1023, 24.4859, 1.25 ) }
    dend_27 { pt3dadd( -26.4803, 88.055, 24.8827, 0.81 ) }
    dend_27 { pt3dadd( -26.6592, 89.0483, 25.2579, 0.66 ) }
    dend_27 { pt3dadd( -26.814, 90.5457, 25.7973, 0.66 ) }
    dend_27 { pt3dadd( -26.8608, 91.3296, 26.0618, 0.96 ) }
    dend_27 { pt3dadd( -26.8834, 91.9132, 26.241, 0.96 ) }
    dend_27 { pt3dadd( -26.9185, 92.6415, 26.4287, 0.96 ) }
    dend_27 { pt3dadd( -26.9881, 93.2839, 26.5623, 0.81 ) }
    dend_27 { pt3dadd( -27.1503, 93.9156, 26.6594, 0.59 ) }
    dend_27 { pt3dadd( -27.4403, 94.6146, 26.7262, 0.66 ) }
    dend_27 { pt3dadd( -27.6879, 95.1131, 26.7744, 0.96 ) }
    dend_27 { pt3dadd( -27.8975, 95.5093, 26.8152, 0.96 ) }
    dend_27 { pt3dadd( -28.447, 96.5502, 26.9477, 0.74 ) }
    dend_27 { pt3dadd( -28.7873, 97.2777, 27.0739, 0.66 ) }
    dend_27 { pt3dadd( -28.9764, 97.7679, 27.196, 0.88 ) }
    dend_27 { pt3dadd( -29.1431, 98.2868, 27.3665, 0.88 ) }
    dend_27 { pt3dadd( -29.3416, 98.9215, 27.606, 0.74 ) }
    dend_27 { pt3dadd( -29.5103, 99.4521, 27.8456, 0.74 ) }
    dend_27 { pt3dadd( -29.7412, 100.255, 28.244, 0.81 ) }
    dend_27 { pt3dadd( -29.9496, 101.044, 28.6381, 0.66 ) }
    dend_27 { pt3dadd( -30.1724, 101.932, 29.0707, 0.81 ) }
    dend_27 { pt3dadd( -30.4152, 102.907, 29.5373, 0.96 ) }
    dend_27 { pt3dadd( -30.6423, 103.795, 29.9414, 1.11 ) }
    dend_27 { pt3dadd( -30.872, 104.701, 30.3153, 0.81 ) }
    dend_27 { pt3dadd( -31.0846, 105.537, 30.6354, 0.59 ) }
    dend_27 { pt3dadd( -31.2573, 106.205, 30.8769, 0.81 ) }
    dend_27 { pt3dadd( -31.5029, 107.133, 31.2146, 0.59 ) }
    dend_27 { pt3dadd( -31.7237, 107.96, 31.5098, 0.74 ) }
    dend_27 { pt3dadd( -31.9569, 108.765, 31.7821, 1.03 ) }
    dend_27 { pt3dadd( -32.2126, 109.599, 32.0478, 1.03 ) }
    dend_27 { pt3dadd( -32.4585, 110.468, 32.27, 0.74 ) }
    dend_27 { pt3dadd( -32.6277, 111.152, 32.3952, 0.74 ) }
    dend_27 { pt3dadd( -32.8525, 112.144, 32.5061, 0.74 ) }
    dend_27 { pt3dadd( -33.061, 113.149, 32.6009, 0.59 ) }
    dend_27 { pt3dadd( -33.1801, 113.773, 32.6596, 0.59 ) }
    dend_27 { pt3dadd( -33.393, 114.828, 32.7671, 0.66 ) }
    dend_27 { pt3dadd( -33.5642, 115.515, 32.8577, 0.52 ) }
    dend_27 { pt3dadd( -33.8126, 116.273, 32.9908, 0.74 ) }
    dend_27 { pt3dadd( -34.1246, 117.033, 33.1688, 0.96 ) }
    dend_27 { pt3dadd( -34.4659, 117.761, 33.4002, 0.74 ) }
    dend_27 { pt3dadd( -35.0314, 118.799, 33.7915, 0.74 ) }
    dend_27 { pt3dadd( -35.5037, 119.549, 34.0899, 0.88 ) }
    dend_27 { pt3dadd( -35.8912, 120.102, 34.2832, 0.88 ) }
    dend_27 { pt3dadd( -36.4624, 120.858, 34.4982, 0.74 ) }
    dend_27 { pt3dadd( -37.2216, 121.791, 34.7037, 0.74 ) }
    dend_27 { pt3dadd( -37.9464, 122.654, 34.868, 0.81 ) }
    dend_27 { pt3dadd( -38.5874, 123.454, 35.0072, 0.96 ) }
    dend_27 { pt3dadd( -39.1933, 124.285, 35.1398, 0.88 ) }
    dend_27 { pt3dadd( -39.6624, 125.019, 35.2488, 0.88 ) }
    dend_27 { pt3dadd( -40.227, 126.097, 35.3973, 0.81 ) }
    dend_27 { pt3dadd( -40.5503, 126.892, 35.4875, 0.81 ) }
    dend_27 { pt3dadd( -40.8978, 128.036, 35.6055, 0.96 ) }
    dend_27 { pt3dadd( -41.1656, 129.074, 35.7137, 1.11 ) }
    dend_27 { pt3dadd( -41.414, 130.069, 35.8199, 0.81 ) }
    dend_27 { pt3dadd( -41.6846, 131.088, 35.9235, 0.81 ) }
    dend_27 { pt3dadd( -41.9061, 131.816, 35.9961, 0.81 ) }
    dend_27 { pt3dadd( -42.2567, 132.737, 36.0966, 0.81 ) }
    dend_27 { pt3dadd( -42.9747, 134.194, 36.2857, 0.96 ) }
    dend_27 { pt3dadd( -43.5009, 135.024, 36.4206, 0.96 ) }
    dend_27 { pt3dadd( -44.1163, 135.818, 36.5813, 1.03 ) }
    dend_27 { pt3dadd( -44.7279, 136.51, 36.751, 1.11 ) }
    dend_27 { pt3dadd( -45.3991, 137.23, 36.9581, 0.88 ) }
    dend_27 { pt3dadd( -46.0532, 137.92, 37.1738, 0.66 ) }
    dend_27 { pt3dadd( -46.8133, 138.733, 37.4282, 0.66 ) }
    dend_27 { pt3dadd( -47.6333, 139.697, 37.7446, 0.74 ) }
    dend_27 { pt3dadd( -48.1674, 140.425, 37.996, 0.88 ) }
    dend_27 { pt3dadd( -48.5863, 141.097, 38.2378, 0.81 ) }
    dend_27 { pt3dadd( -48.9001, 141.687, 38.4576, 0.81 ) }
    dend_27 { pt3dadd( -49.1297, 142.193, 38.6407, 0.81 ) }
    dend_27 { pt3dadd( -49.5913, 143.299, 39.0253, 0.59 ) }
    dend_27 { pt3dadd( -49.9392, 144.084, 39.2866, 0.74 ) }
    dend_27 { pt3dadd( -50.2453, 144.664, 39.4587, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( -50.5727, 145.16, 39.5799, 0.74 ) }
    dend_27 { pt3dadd( -51.1058, 145.799, 39.6997, 0.88 ) }
    dend_27 { pt3dadd( -51.6096, 146.281, 39.7568, 0.88 ) }
    dend_27 { pt3dadd( -52.3138, 146.824, 39.7757, 0.74 ) }
    dend_27 { pt3dadd( -53.1212, 147.391, 39.7614, 0.88 ) }
    dend_27 { pt3dadd( -53.8098, 147.887, 39.7352, 0.66 ) }
    dend_27 { pt3dadd( -54.408, 148.337, 39.7161, 0.66 ) }
    dend_27 { pt3dadd( -54.8701, 148.699, 39.721, 0.66 ) }
    dend_27 { pt3dadd( -55.3944, 149.128, 39.7555, 0.59 ) }
    dend_27 { pt3dadd( -55.9232, 149.59, 39.8365, 0.44 ) }
    dend_27 { pt3dadd( -56.6484, 150.284, 40.0365, 0.88 ) }
    dend_27 { pt3dadd( -57.2264, 150.928, 40.2466, 1.03 ) }
    dend_27 { pt3dadd( -57.7504, 151.62, 40.478, 0.74 ) }
    dend_27 { pt3dadd( -58.2578, 152.391, 40.7358, 0.74 ) }
    dend_27 { pt3dadd( -58.7113, 153.139, 40.9817, 0.74 ) }
    dend_27 { pt3dadd( -59.0941, 153.755, 41.1871, 0.74 ) }
    dend_27 { pt3dadd( -59.5949, 154.568, 41.4362, 0.44 ) }
    dend_27 { pt3dadd( -60.0396, 155.327, 41.6556, 0.66 ) }
    dend_27 { pt3dadd( -60.6602, 156.426, 41.9581, 0.81 ) }
    dend_27 { pt3dadd( -61.1832, 157.37, 42.2149, 0.81 ) }
    dend_27 { pt3dadd( -61.7526, 158.373, 42.4897, 0.66 ) }
    dend_27 { pt3dadd( -62.269, 159.273, 42.7493, 0.66 ) }
    dend_27 { pt3dadd( -62.8028, 160.157, 43.0493, 0.66 ) }
    dend_27 { pt3dadd( -63.2372, 160.834, 43.2748, 0.74 ) }
    dend_27 { pt3dadd( -63.7558, 161.59, 43.4998, 0.74 ) }
    dend_27 { pt3dadd( -64.3304, 162.379, 43.694, 0.59 ) }
    dend_27 { pt3dadd( -64.8128, 163.0, 43.7983, 0.81 ) }
    dend_27 { pt3dadd( -65.4306, 163.722, 43.8621, 0.59 ) }
    dend_27 { pt3dadd( -66.052, 164.422, 43.8555, 0.74 ) }
    dend_27 { pt3dadd( -66.5777, 165.072, 43.8154, 0.81 ) }
    dend_27 { pt3dadd( -66.8458, 165.445, 43.7781, 0.81 ) }
    dend_27 { pt3dadd( -67.3038, 166.191, 43.7418, 0.81 ) }
    dend_27 { pt3dadd( -67.5918, 166.723, 43.7561, 0.81 ) }
    dend_27 { pt3dadd( -67.917, 167.402, 43.8458, 0.59 ) }
    dend_27 { pt3dadd( -68.3251, 168.289, 44.077, 0.59 ) }
    dend_27 { pt3dadd( -68.7542, 169.145, 44.3784, 0.66 ) }
    dend_27 { pt3dadd( -69.2135, 169.928, 44.7507, 0.66 ) }
    dend_27 { pt3dadd( -69.7037, 170.591, 45.203, 0.59 ) }
    dend_27 { pt3dadd( -70.3252, 171.279, 45.8232, 0.81 ) }
    dend_27 { pt3dadd( -70.8659, 171.805, 46.3678, 0.81 ) }
    dend_27 { pt3dadd( -71.6456, 172.499, 47.1501, 0.52 ) }
    dend_27 { pt3dadd( -72.3191, 173.094, 47.8088, 0.52 ) }
    dend_27 { pt3dadd( -73.2636, 173.971, 48.5824, 0.74 ) }
    dend_27 { pt3dadd( -73.7841, 174.499, 48.9301, 0.74 ) }
    dend_27 { pt3dadd( -74.3708, 175.132, 49.2128, 1.25 ) }
    dend_27 { pt3dadd( -74.8511, 175.67, 49.3502, 1.25 ) }
    dend_27 { pt3dadd( -75.5076, 176.384, 49.381, 0.96 ) }
    dend_27 { pt3dadd( -76.4714, 177.365, 49.2626, 0.81 ) }
    dend_27 { pt3dadd( -77.1044, 177.922, 49.1303, 0.74 ) }
    dend_27 { pt3dadd( -77.8354, 178.427, 48.9925, 0.52 ) }
    dend_27 { pt3dadd( -78.4375, 178.73, 48.9138, 0.52 ) }
    dend_27 { pt3dadd( -79.7756, 179.185, 48.7778, 0.44 ) }
    dend_27 { pt3dadd( -80.8221, 179.381, 48.7137, 0.52 ) }
    dend_27 { pt3dadd( -81.8253, 179.408, 48.6976, 0.66 ) }
    dend_27 { pt3dadd( -82.8074, 179.306, 48.7009, 0.66 ) }
    dend_27 { pt3dadd( -83.644, 179.134, 48.7052, 0.66 ) }
    dend_27 { pt3dadd( -84.2867, 178.947, 48.7339, 0.66 ) }
    dend_27 { pt3dadd( -84.835, 178.738, 48.7696, 0.52 ) }
    dend_27 { pt3dadd( -85.7473, 178.355, 48.8111, 0.44 ) }
    dend_27 { pt3dadd( -86.4905, 178.038, 48.8276, 0.37 ) }
    dend_27 { pt3dadd( -87.4949, 177.588, 48.8389, 0.37 ) }
    dend_27 { pt3dadd( -88.2719, 177.217, 48.8374, 0.37 ) }
    dend_27 { pt3dadd( -89.2911, 176.671, 48.8164, 0.74 ) }
    dend_27 { pt3dadd( -89.9747, 176.252, 48.7847, 0.74 ) }
    dend_27 { pt3dadd( -90.7058, 175.734, 48.7235, 0.74 ) }
    dend_27 { pt3dadd( -91.3629, 175.205, 48.6584, 0.44 ) }
    dend_27 { pt3dadd( -91.9317, 174.713, 48.6042, 0.44 ) }
    dend_27 { pt3dadd( -92.373, 174.338, 48.5984, 0.66 ) }
    dend_27 { pt3dadd( -93.1015, 173.715, 48.7074, 0.66 ) }
    dend_27 { pt3dadd( -93.7274, 173.175, 48.8388, 0.52 ) }
    dend_27 { pt3dadd( -94.3012, 172.672, 48.9413, 0.52 ) }
    dend_27 { pt3dadd( -94.8121, 172.186, 49.0, 0.52 ) }
    dend_27 { pt3dadd( -95.3806, 171.554, 49.0288, 0.66 ) }
    dend_27 { pt3dadd( -96.0348, 170.65, 48.9914, 0.59 ) }
    dend_27 { pt3dadd( -96.5234, 169.778, 48.8801, 0.37 ) }
    dend_27 { pt3dadd( -96.9077, 168.955, 48.7324, 0.37 ) }
    dend_27 { pt3dadd( -97.2349, 168.18, 48.5352, 0.29 ) }
    dend_27 { pt3dadd( -97.4773, 167.559, 48.3463, 0.29 ) }
    dend_27 { pt3dadd( -97.8311, 166.674, 48.0111, 0.44 ) }
    dend_27 { pt3dadd( -98.1163, 166.074, 47.7488, 0.44 ) }
    dend_27 { pt3dadd( -98.488, 165.402, 47.4957, 0.66 ) }
    dend_27 { pt3dadd( -98.9238, 164.762, 47.2876, 0.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 82/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -76.2909, 101.098, 27.0246, 0.66 ) }
    dend_22 { pt3dadd( -74.7328, 102.053, 29.1605, 0.66 ) }
    dend_22 { pt3dadd( -73.9011, 102.657, 30.2267, 0.66 ) }
    dend_22 { pt3dadd( -71.9969, 104.329, 32.6632, 0.66 ) }
    dend_22 { pt3dadd( -71.239, 105.119, 33.6971, 0.66 ) }
    dend_22 { pt3dadd( -70.3421, 106.236, 35.0219, 0.44 ) }
    dend_22 { pt3dadd( -69.9951, 106.776, 35.5945, 0.44 ) }
    dend_22 { pt3dadd( -69.5341, 107.5, 36.23, 0.74 ) }
    dend_22 { pt3dadd( -69.2551, 108.15, 36.6836, 0.74 ) }
    dend_22 { pt3dadd( -69.1183, 109.221, 37.1385, 0.66 ) }
    dend_22 { pt3dadd( -69.0713, 109.931, 37.4261, 0.44 ) }
    dend_22 { pt3dadd( -68.9859, 110.905, 37.8055, 0.37 ) }
    dend_22 { pt3dadd( -68.8215, 111.586, 38.1194, 0.37 ) }
    dend_22 { pt3dadd( -68.3677, 112.448, 38.6655, 0.81 ) }
    dend_22 { pt3dadd( -68.0735, 112.893, 38.9329, 0.81 ) }
    dend_22 { pt3dadd( -67.4502, 113.753, 39.3834, 0.44 ) }
    dend_22 { pt3dadd( -66.9273, 114.534, 39.7548, 0.44 ) }
    dend_22 { pt3dadd( -66.5458, 115.301, 40.065, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_22 { pt3dadd( -66.1529, 117.281, 40.6254, 0.52 ) }
    dend_22 { pt3dadd( -66.2475, 119.039, 40.9526, 0.81 ) }
    dend_22 { pt3dadd( -66.4095, 119.736, 41.0394, 0.81 ) }
    dend_22 { pt3dadd( -66.9894, 121.376, 41.1642, 0.52 ) }
    dend_22 { pt3dadd( -67.5918, 122.969, 41.2176, 0.52 ) }
    dend_22 { pt3dadd( -68.2277, 124.654, 41.2428, 0.52 ) }
    dend_22 { pt3dadd( -68.5771, 125.637, 41.2199, 0.81 ) }
    dend_22 { pt3dadd( -68.9031, 126.777, 41.2508, 0.81 ) }
    dend_22 { pt3dadd( -69.2373, 128.35, 41.3084, 0.44 ) }
    dend_22 { pt3dadd( -69.4131, 129.879, 41.3623, 0.44 ) }
    dend_22 { pt3dadd( -69.4292, 130.794, 41.4118, 0.44 ) }
    dend_22 { pt3dadd( -69.3641, 132.278, 41.5182, 0.44 ) }
    dend_22 { pt3dadd( -69.2737, 133.474, 41.6413, 0.74 ) }
    dend_22 { pt3dadd( -69.2157, 134.159, 41.7355, 0.74 ) }
    dend_22 { pt3dadd( -69.173, 134.959, 41.8727, 0.44 ) }
    dend_22 { pt3dadd( -69.185, 136.003, 42.0647, 0.29 ) }
    dend_22 { pt3dadd( -69.217, 137.078, 42.2713, 0.88 ) }
    dend_22 { pt3dadd( -69.2439, 138.146, 42.5122, 0.88 ) }
    dend_22 { pt3dadd( -69.262, 138.898, 42.6586, 0.88 ) }
    dend_22 { pt3dadd( -69.2769, 139.731, 42.8206, 0.66 ) }
    dend_22 { pt3dadd( -69.3075, 141.05, 43.0517, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -76.2909, 101.098, 27.0246, 0.52 ) }
    dend_21 { pt3dadd( -77.0909, 101.371, 27.5935, 0.52 ) }
    dend_21 { pt3dadd( -77.9858, 101.796, 28.184, 0.52 ) }
    dend_21 { pt3dadd( -78.7558, 102.255, 28.6626, 0.66 ) }
    dend_21 { pt3dadd( -79.7571, 102.977, 29.2442, 0.81 ) }
    dend_21 { pt3dadd( -80.1851, 103.337, 29.4757, 0.81 ) }
    dend_21 { pt3dadd( -81.0163, 104.136, 29.8935, 0.66 ) }
    dend_21 { pt3dadd( -81.6514, 104.919, 30.2397, 0.88 ) }
    dend_21 { pt3dadd( -82.0117, 105.436, 30.4194, 0.88 ) }
    dend_21 { pt3dadd( -82.4572, 106.116, 30.5924, 0.66 ) }
    dend_21 { pt3dadd( -82.8501, 106.764, 30.7332, 0.66 ) }
    dend_21 { pt3dadd( -83.2194, 107.422, 30.8878, 0.66 ) }
    dend_21 { pt3dadd( -83.715, 108.403, 31.1402, 0.66 ) }
    dend_21 { pt3dadd( -83.978, 109.0, 31.3145, 0.59 ) }
    dend_21 { pt3dadd( -84.3156, 109.906, 31.6607, 0.52 ) }
    dend_21 { pt3dadd( -84.5448, 110.66, 32.0356, 0.52 ) }
    dend_21 { pt3dadd( -84.6921, 111.239, 32.3725, 0.44 ) }
    dend_21 { pt3dadd( -84.8783, 112.057, 32.9054, 0.44 ) }
    dend_21 { pt3dadd( -85.01, 112.725, 33.3558, 0.44 ) }
    dend_21 { pt3dadd( -85.1995, 113.813, 34.1067, 0.59 ) }
    dend_21 { pt3dadd( -85.3582, 114.711, 34.7006, 0.74 ) }
    dend_21 { pt3dadd( -85.4677, 115.223, 35.0089, 0.59 ) }
    dend_21 { pt3dadd( -85.6865, 116.048, 35.4593, 0.81 ) }
    dend_21 { pt3dadd( -85.8176, 116.414, 35.6283, 0.81 ) }
    dend_21 { pt3dadd( -86.1392, 117.087, 35.8415, 0.81 ) }
    dend_21 { pt3dadd( -86.6282, 117.885, 36.0105, 0.37 ) }
    dend_21 { pt3dadd( -86.9782, 118.369, 36.0961, 0.37 ) }
    dend_21 { pt3dadd( -87.4473, 118.962, 36.1771, 0.37 ) }
    dend_21 { pt3dadd( -87.9886, 119.582, 36.2471, 0.37 ) }
    dend_21 { pt3dadd( -88.5278, 120.138, 36.2946, 0.37 ) }
    dend_21 { pt3dadd( -89.4895, 120.977, 36.3762, 0.96 ) }
    dend_21 { pt3dadd( -90.0125, 121.374, 36.4501, 1.11 ) }
    dend_21 { pt3dadd( -90.9731, 122.047, 36.5964, 0.59 ) }
    dend_21 { pt3dadd( -91.6695, 122.515, 36.7068, 0.52 ) }
    dend_21 { pt3dadd( -92.4019, 123.012, 36.8214, 0.52 ) }
    dend_21 { pt3dadd( -93.4279, 123.736, 36.9732, 0.66 ) }
    dend_21 { pt3dadd( -94.3343, 124.397, 37.096, 1.25 ) }
    dend_21 { pt3dadd( -94.7488, 124.73, 37.1619, 1.4 ) }
    dend_21 { pt3dadd( -95.759, 125.631, 37.3498, 0.52 ) }
    dend_21 { pt3dadd( -96.3844, 126.26, 37.462, 0.52 ) }
    dend_21 { pt3dadd( -97.3881, 127.384, 37.6327, 0.52 ) }
    dend_21 { pt3dadd( -97.9495, 128.076, 37.6998, 0.52 ) }
    dend_21 { pt3dadd( -98.5846, 128.893, 37.7435, 0.52 ) }
    dend_21 { pt3dadd( -99.2665, 129.815, 37.8164, 0.66 ) }
    dend_21 { pt3dadd( -99.7013, 130.45, 37.8784, 0.74 ) }
    dend_21 { pt3dadd( -100.305, 131.367, 37.9877, 0.88 ) }
    dend_21 { pt3dadd( -100.815, 132.167, 38.1018, 0.37 ) }
    dend_21 { pt3dadd( -101.273, 132.91, 38.1971, 0.29 ) }
    dend_21 { pt3dadd( -101.736, 133.662, 38.2864, 0.37 ) }
    dend_21 { pt3dadd( -102.106, 134.287, 38.3493, 0.52 ) }
    dend_21 { pt3dadd( -102.329, 134.647, 38.3694, 0.74 ) }
    dend_21 { pt3dadd( -102.69, 135.198, 38.4237, 0.74 ) }
    dend_21 { pt3dadd( -103.23, 135.88, 38.5269, 0.44 ) }
    dend_21 { pt3dadd( -103.731, 136.389, 38.6289, 0.44 ) }
    dend_21 { pt3dadd( -104.311, 136.897, 38.7446, 0.29 ) }
    dend_21 { pt3dadd( -104.862, 137.366, 38.9017, 0.29 ) }
    dend_21 { pt3dadd( -106.122, 138.482, 39.3474, 0.37 ) }
    dend_21 { pt3dadd( -106.805, 139.142, 39.6413, 0.37 ) }
    dend_21 { pt3dadd( -107.519, 139.921, 40.0014, 0.37 ) }
    dend_21 { pt3dadd( -107.791, 140.253, 40.14, 0.37 ) }
    dend_21 { pt3dadd( -108.31, 140.927, 40.3977, 0.29 ) }
    dend_21 { pt3dadd( -108.628, 141.337, 40.5373, 0.29 ) }
    dend_21 { pt3dadd( -108.989, 141.766, 40.644, 0.29 ) }
    dend_21 { pt3dadd( -109.613, 142.478, 40.873, 0.29 ) }
    dend_21 { pt3dadd( -110.257, 143.132, 41.1312, 0.37 ) }
    dend_21 { pt3dadd( -110.807, 143.606, 41.3535, 0.37 ) }
    dend_21 { pt3dadd( -111.615, 144.176, 41.6665, 0.37 ) }
    dend_21 { pt3dadd( -112.344, 144.61, 41.9794, 0.29 ) }
    dend_21 { pt3dadd( -113.282, 145.115, 42.4251, 0.29 ) }
    dend_21 { pt3dadd( -113.733, 145.344, 42.6811, 0.29 ) }
    dend_21 { pt3dadd( -114.464, 145.725, 43.194, 0.88 ) }
    dend_21 { pt3dadd( -114.524, 145.211, 43.4677, 1.18 ) }
    dend_21 { pt3dadd( -114.552, 144.803, 43.664, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 94/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.8061, 21.4203, 11.7706, 0.66 ) }
    dend_17 { pt3dadd( -14.3341, 20.5316, 11.3405, 0.66 ) }
    dend_17 { pt3dadd( -15.3578, 20.0203, 11.0854, 0.66 ) }
    dend_17 { pt3dadd( -16.0101, 19.7446, 10.9207, 0.88 ) }
    dend_17 { pt3dadd( -17.0083, 19.4197, 10.6276, 0.74 ) }
    dend_17 { pt3dadd( -17.7235, 19.2525, 10.4084, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_17 { pt3dadd( -18.6042, 19.1174, 10.134, 1.18 ) }
    dend_17 { pt3dadd( -19.6081, 19.1281, 9.86844, 1.18 ) }
    dend_17 { pt3dadd( -20.2261, 19.2395, 9.6809, 1.18 ) }
    dend_17 { pt3dadd( -21.4938, 19.6691, 9.24968, 0.66 ) }
    dend_17 { pt3dadd( -22.2282, 19.9885, 8.98821, 0.59 ) }
    dend_17 { pt3dadd( -22.739, 20.222, 8.80361, 0.59 ) }
    dend_17 { pt3dadd( -23.666, 20.6252, 8.42229, 0.52 ) }
    dend_17 { pt3dadd( -24.3211, 20.8581, 8.12912, 0.52 ) }
    dend_17 { pt3dadd( -25.1411, 21.0958, 7.78645, 0.52 ) }
    dend_17 { pt3dadd( -26.4151, 21.4499, 7.29418, 0.52 ) }
    dend_17 { pt3dadd( -27.4012, 21.734, 6.92586, 0.74 ) }
    dend_17 { pt3dadd( -28.505, 22.0941, 6.53746, 0.44 ) }
    dend_17 { pt3dadd( -29.5716, 22.5145, 6.19025, 0.44 ) }
    dend_17 { pt3dadd( -30.8731, 23.0853, 5.79126, 0.66 ) }
    dend_17 { pt3dadd( -31.6969, 23.534, 5.53991, 0.81 ) }
    dend_17 { pt3dadd( -32.3556, 24.0038, 5.31397, 0.96 ) }
    dend_17 { pt3dadd( -32.7463, 24.3272, 5.16865, 0.96 ) }
    dend_17 { pt3dadd( -33.2111, 24.7602, 4.95689, 0.59 ) }
    dend_17 { pt3dadd( -33.5913, 25.1268, 4.72432, 0.44 ) }
    dend_17 { pt3dadd( -34.1067, 25.5203, 4.38829, 0.44 ) }
    dend_17 { pt3dadd( -34.8619, 26.0014, 3.978, 0.29 ) }
    dend_17 { pt3dadd( -35.4087, 26.3248, 3.73973, 0.29 ) }
    dend_17 { pt3dadd( -36.0865, 26.701, 3.50081, 0.59 ) }
    dend_17 { pt3dadd( -36.5692, 26.9334, 3.39364, 0.59 ) }
    dend_17 { pt3dadd( -38.0241, 27.4349, 3.27473, 0.74 ) }
    dend_17 { pt3dadd( -38.9778, 27.7321, 3.30436, 0.59 ) }
    dend_17 { pt3dadd( -39.8523, 27.9859, 3.4161, 0.59 ) }
    dend_17 { pt3dadd( -40.6291, 28.1979, 3.56111, 0.66 ) }
    dend_17 { pt3dadd( -41.7054, 28.4992, 3.79885, 0.66 ) }
    dend_17 { pt3dadd( -43.2958, 28.9735, 4.17184, 0.96 ) }
    dend_17 { pt3dadd( -44.5438, 29.3497, 4.42816, 0.52 ) }
    dend_17 { pt3dadd( -45.3326, 29.5377, 4.56945, 0.52 ) }
    dend_17 { pt3dadd( -46.0149, 29.6843, 4.6776, 0.59 ) }
    dend_17 { pt3dadd( -47.1621, 29.9648, 4.82348, 0.37 ) }
    dend_17 { pt3dadd( -47.8198, 30.1331, 4.83471, 0.37 ) }
    dend_17 { pt3dadd( -48.8004, 30.3403, 4.7409, 0.37 ) }
    dend_17 { pt3dadd( -50.0395, 30.5018, 4.53461, 0.59 ) }
    dend_17 { pt3dadd( -50.6238, 30.585, 4.4051, 0.59 ) }
    dend_17 { pt3dadd( -51.1084, 30.67, 4.27887, 0.59 ) }
    dend_17 { pt3dadd( -52.243, 30.9403, 3.92548, 0.29 ) }
    dend_17 { pt3dadd( -53.0106, 31.1972, 3.6428, 0.29 ) }
    dend_17 { pt3dadd( -53.5074, 31.4182, 3.43871, 0.59 ) }
    dend_17 { pt3dadd( -54.2763, 31.822, 3.09531, 0.59 ) }
    dend_17 { pt3dadd( -54.8807, 32.1334, 2.81675, 0.52 ) }
    dend_17 { pt3dadd( -55.7029, 32.5205, 2.43461, 0.52 ) }
    dend_17 { pt3dadd( -56.5215, 32.8548, 2.06295, 0.52 ) }
    dend_17 { pt3dadd( -57.1351, 33.0901, 1.76913, 0.52 ) }
    dend_17 { pt3dadd( -58.0688, 33.3844, 1.29576, 0.74 ) }
    dend_17 { pt3dadd( -58.7204, 33.5299, 0.961763, 0.88 ) }
    dend_17 { pt3dadd( -59.2061, 33.6114, 0.720376, 0.88 ) }
    dend_17 { pt3dadd( -60.0724, 33.7154, 0.334071, 0.59 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.8061, 21.4203, 11.7706, 1.18 ) }
    dend_12 { pt3dadd( -11.9944, 22.2561, 12.6787, 1.18 ) }
    dend_12 { pt3dadd( -11.1999, 22.9933, 13.5222, 1.18 ) }
    dend_12 { pt3dadd( -10.3792, 23.6933, 14.3561, 1.18 ) }
    dend_12 { pt3dadd( -9.446, 24.4747, 15.3642, 1.18 ) }
    dend_12 { pt3dadd( -8.58773, 25.2213, 16.3336, 1.03 ) }
    dend_12 { pt3dadd( -7.89037, 25.8887, 17.156, 1.25 ) }
    dend_12 { pt3dadd( -7.48624, 26.3011, 17.673, 1.25 ) }
    dend_12 { pt3dadd( -6.74172, 27.1834, 18.5035, 0.96 ) }
    dend_12 { pt3dadd( -6.0311, 28.2351, 19.1914, 1.55 ) }
    dend_12 { pt3dadd( -5.65336, 28.9157, 19.4769, 1.55 ) }
    dend_12 { pt3dadd( -5.09234, 30.2113, 19.8165, 1.25 ) }
    dend_12 { pt3dadd( -4.64466, 31.5982, 20.0327, 1.11 ) }
    dend_12 { pt3dadd( -3.90104, 35.0344, 20.2676, 0.81 ) }
    dend_12 { pt3dadd( -3.78893, 36.0941, 20.2376, 1.03 ) }
    dend_12 { pt3dadd( -3.79602, 37.1556, 20.0932, 1.03 ) }
    dend_12 { pt3dadd( -4.03862, 38.4503, 19.8867, 0.88 ) }
    dend_12 { pt3dadd( -4.55624, 39.5178, 19.7246, 0.88 ) }
    dend_12 { pt3dadd( -5.48313, 40.4872, 19.7864, 0.96 ) }
    dend_12 { pt3dadd( -6.26859, 41.093, 20.023, 0.96 ) }
    dend_12 { pt3dadd( -7.50794, 41.9207, 20.4159, 1.03 ) }
    dend_12 { pt3dadd( -9.56603, 43.1135, 21.1836, 1.25 ) }
    dend_12 { pt3dadd( -10.5832, 43.6353, 21.661, 1.18 ) }
    dend_12 { pt3dadd( -12.9874, 44.7993, 23.1317, 1.25 ) }
    dend_12 { pt3dadd( -14.1244, 45.3237, 24.0598, 1.62 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -36.7412, 282.688, -89.1618, 0.22 ) }
    dend_7 { pt3dadd( -37.8031, 283.142, -89.4576, 0.22 ) }
    dend_7 { pt3dadd( -38.8332, 283.583, -89.7445, 0.44 ) }
    dend_7 { pt3dadd( -39.7461, 283.973, -89.9988, 0.37 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 80/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -36.7412, 282.688, -89.1618, 0.22 ) }
    dend_6 { pt3dadd( -38.3916, 282.489, -89.7016, 0.22 ) }
    dend_6 { pt3dadd( -39.8726, 282.31, -90.1859, 0.22 ) }
    dend_6 { pt3dadd( -41.0313, 282.171, -90.5649, 0.22 ) }
    dend_6 { pt3dadd( -41.5758, 282.105, -90.7429, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.2203, 191.567, -17.5396, 0.37 ) }
    dend_4 { pt3dadd( 13.4466, 192.93, -17.4248, 0.37 ) }
    dend_4 { pt3dadd( 13.6408, 193.852, -17.2789, 0.66 ) }
    dend_4 { pt3dadd( 13.8356, 194.776, -17.1194, 0.66 ) }
    dend_4 { pt3dadd( 14.0959, 196.118, -16.9045, 0.44 ) }
    dend_4 { pt3dadd( 14.2417, 197.002, -16.7807, 0.44 ) }
    dend_4 { pt3dadd( 14.4849, 198.845, -16.5728, 0.88 ) }
    dend_4 { pt3dadd( 14.5051, 199.057, -16.5502, 1.03 ) }
    dend_4 { pt3dadd( 14.5704, 200.294, -16.4662, 0.66 ) }
    dend_4 { pt3dadd( 14.5986, 201.439, -16.4399, 0.88 ) }
    dend_4 { pt3dadd( 14.5896, 202.13, -16.4631, 0.88 ) }
    dend_4 { pt3dadd( 14.5542, 203.022, -16.5421, 0.66 ) }
    dend_4 { pt3dadd( 14.4752, 204.184, -16.7105, 0.37 ) }
    dend_4 { pt3dadd( 14.3921, 205.044, -16.8307, 0.37 ) }
    dend_4 { pt3dadd( 14.2085, 206.534, -17.0393, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_4 { pt3dadd( 14.0848, 207.46, -17.1638, 0.81 ) }
    dend_4 { pt3dadd( 13.8793, 209.132, -17.3636, 0.37 ) }
    dend_4 { pt3dadd( 13.7492, 210.205, -17.4873, 0.37 ) }
    dend_4 { pt3dadd( 13.5693, 211.671, -17.6597, 0.81 ) }
    dend_4 { pt3dadd( 13.473, 212.407, -17.7586, 0.96 ) }
    dend_4 { pt3dadd( 13.3011, 213.816, -17.9679, 0.37 ) }
    dend_4 { pt3dadd( 13.1747, 215.015, -18.1645, 0.29 ) }
    dend_4 { pt3dadd( 13.0533, 216.388, -18.4117, 0.52 ) }
    dend_4 { pt3dadd( 12.9094, 218.082, -18.7595, 0.74 ) }
    dend_4 { pt3dadd( 12.8096, 219.093, -19.0037, 0.88 ) }
    dend_4 { pt3dadd( 12.6861, 220.111, -19.2645, 0.66 ) }
    dend_4 { pt3dadd( 12.5278, 221.335, -19.5794, 0.59 ) }
    dend_4 { pt3dadd( 12.3779, 222.533, -19.8723, 0.74 ) }
    dend_4 { pt3dadd( 12.2582, 223.637, -20.114, 0.74 ) }
    dend_4 { pt3dadd( 12.1802, 225.002, -20.3679, 0.59 ) }
    dend_4 { pt3dadd( 12.1833, 226.0, -20.5063, 0.44 ) }
    dend_4 { pt3dadd( 12.2682, 227.474, -20.6554, 0.29 ) }
    dend_4 { pt3dadd( 12.3982, 228.554, -20.7128, 0.37 ) }
    dend_4 { pt3dadd( 12.7298, 230.365, -20.7166, 0.52 ) }
    dend_4 { pt3dadd( 13.0938, 231.96, -20.6572, 0.66 ) }
    dend_4 { pt3dadd( 13.3586, 233.052, -20.5996, 0.66 ) }
    dend_4 { pt3dadd( 13.5362, 233.988, -20.5394, 0.37 ) }
    dend_4 { pt3dadd( 13.6849, 235.077, -20.4646, 0.52 ) }
    dend_4 { pt3dadd( 13.8741, 236.614, -20.3145, 0.37 ) }
    dend_4 { pt3dadd( 14.0439, 238.184, -20.1186, 0.52 ) }
    dend_4 { pt3dadd( 14.1018, 239.165, -20.005, 0.59 ) }
    dend_4 { pt3dadd( 14.1448, 241.194, -19.8339, 0.81 ) }
    dend_4 { pt3dadd( 14.1283, 242.485, -19.7782, 0.29 ) }
    dend_4 { pt3dadd( 14.0626, 243.437, -19.8034, 0.29 ) }
    dend_4 { pt3dadd( 13.9385, 244.313, -19.873, 0.59 ) }
    dend_4 { pt3dadd( 13.7254, 245.451, -20.0102, 0.59 ) }
    dend_4 { pt3dadd( 13.3621, 247.105, -20.2815, 0.44 ) }
    dend_4 { pt3dadd( 12.9168, 248.927, -20.6691, 0.29 ) }
    dend_4 { pt3dadd( 12.4505, 250.582, -21.0639, 0.37 ) }
    dend_4 { pt3dadd( 12.1499, 251.562, -21.3153, 0.66 ) }
    dend_4 { pt3dadd( 11.7494, 252.877, -21.6515, 0.29 ) }
    dend_4 { pt3dadd( 11.2671, 254.518, -22.061, 0.29 ) }
    dend_4 { pt3dadd( 10.6542, 256.596, -22.5804, 0.29 ) }
    dend_4 { pt3dadd( 10.3321, 257.728, -22.8607, 0.44 ) }
    dend_4 { pt3dadd( 10.2519, 258.05, -22.9379, 0.44 ) }
    dend_4 { pt3dadd( 10.0093, 259.151, -23.2225, 0.22 ) }
    dend_4 { pt3dadd( 9.87026, 259.801, -23.3875, 0.22 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.2203, 191.567, -17.5396, 0.52 ) }
    dend_3 { pt3dadd( 13.6781, 191.302, -17.3786, 0.52 ) }
    dend_3 { pt3dadd( 13.9828, 191.094, -17.2649, 0.52 ) }
    dend_3 { pt3dadd( 14.3651, 190.837, -17.1159, 0.81 ) }
    dend_3 { pt3dadd( 14.6827, 190.638, -16.9859, 0.88 ) }
    dend_3 { pt3dadd( 15.174, 190.355, -16.7758, 0.37 ) }
    dend_3 { pt3dadd( 15.7149, 190.043, -16.5445, 0.29 ) }
    dend_3 { pt3dadd( 16.4157, 189.622, -16.2442, 0.29 ) }
    dend_3 { pt3dadd( 16.7809, 189.413, -16.0861, 0.44 ) }
    dend_3 { pt3dadd( 17.3686, 189.095, -15.8229, 0.44 ) }
    dend_3 { pt3dadd( 18.018, 188.757, -15.5071, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 53/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -47.3035, -73.2159, 5.46193, 0.74 ) }
    dend_34 { pt3dadd( -48.4126, -72.8725, 6.11651, 0.74 ) }
    dend_34 { pt3dadd( -49.378, -72.6658, 6.69558, 0.88 ) }
    dend_34 { pt3dadd( -50.2646, -72.5902, 7.21367, 1.03 ) }
    dend_34 { pt3dadd( -51.199, -72.6099, 7.77459, 0.88 ) }
    dend_34 { pt3dadd( -52.9782, -72.7836, 8.84799, 1.03 ) }
    dend_34 { pt3dadd( -53.3501, -72.8394, 9.05407, 1.03 ) }
    dend_34 { pt3dadd( -54.3131, -73.1293, 9.57009, 0.81 ) }
    dend_34 { pt3dadd( -55.3672, -73.6006, 10.0769, 0.66 ) }
    dend_34 { pt3dadd( -56.0852, -74.0851, 10.3682, 0.66 ) }
    dend_34 { pt3dadd( -56.6238, -74.5456, 10.5749, 0.52 ) }
    dend_34 { pt3dadd( -57.5315, -75.4285, 10.8924, 0.52 ) }
    dend_34 { pt3dadd( -58.2376, -76.1473, 11.1719, 0.52 ) }
    dend_34 { pt3dadd( -58.8654, -76.8027, 11.4588, 0.52 ) }
    dend_34 { pt3dadd( -60.4127, -78.4086, 12.2094, 0.52 ) }
    dend_34 { pt3dadd( -61.3306, -79.3592, 12.6598, 0.52 ) }
    dend_34 { pt3dadd( -62.0564, -80.0794, 13.0194, 0.52 ) }
    dend_34 { pt3dadd( -63.0357, -80.946, 13.4809, 0.74 ) }
    dend_34 { pt3dadd( -63.668, -81.3789, 13.7363, 0.96 ) }
    dend_34 { pt3dadd( -64.4821, -81.7672, 13.9719, 0.66 ) }
    dend_34 { pt3dadd( -65.0267, -81.9348, 14.0598, 0.66 ) }
    dend_34 { pt3dadd( -66.128, -82.1957, 14.1201, 0.59 ) }
    dend_34 { pt3dadd( -67.4788, -82.423, 14.1042, 0.44 ) }
    dend_34 { pt3dadd( -68.4793, -82.5097, 14.0436, 0.44 ) }
    dend_34 { pt3dadd( -69.5198, -82.5429, 13.9405, 0.44 ) }
    dend_34 { pt3dadd( -70.4468, -82.5412, 13.8407, 0.44 ) }
    dend_34 { pt3dadd( -71.5425, -82.5337, 13.7102, 0.44 ) }
    dend_34 { pt3dadd( -72.1906, -82.5204, 13.6258, 0.44 ) }
    dend_34 { pt3dadd( -73.228, -82.5123, 13.4397, 0.59 ) }
    dend_34 { pt3dadd( -73.7865, -82.5184, 13.305, 0.52 ) }
    dend_34 { pt3dadd( -74.6955, -82.5378, 13.0619, 0.37 ) }
    dend_34 { pt3dadd( -75.722, -82.5993, 12.7693, 0.52 ) }
    dend_34 { pt3dadd( -76.2925, -82.6719, 12.6, 0.52 ) }
    dend_34 { pt3dadd( -77.4807, -82.8765, 12.1842, 0.74 ) }
    dend_34 { pt3dadd( -78.2381, -83.0166, 11.8773, 0.59 ) }
    dend_34 { pt3dadd( -78.8689, -83.1121, 11.6044, 0.59 ) }
    dend_34 { pt3dadd( -79.5485, -83.186, 11.2735, 0.37 ) }
    dend_34 { pt3dadd( -80.2046, -83.248, 10.9444, 0.29 ) }
    dend_34 { pt3dadd( -81.1094, -83.3394, 10.5219, 0.29 ) }
    dend_34 { pt3dadd( -81.7418, -83.3838, 10.2573, 0.37 ) }
    dend_34 { pt3dadd( -82.2407, -83.4314, 10.0657, 0.37 ) }
    dend_34 { pt3dadd( -82.8936, -83.5107, 9.84155, 0.37 ) }
    dend_34 { pt3dadd( -83.6248, -83.63, 9.58807, 0.59 ) }
    dend_34 { pt3dadd( -84.2382, -83.781, 9.38285, 0.74 ) }
    dend_34 { pt3dadd( -84.5764, -83.8959, 9.26171, 0.74 ) }
    dend_34 { pt3dadd( -85.2445, -84.1592, 8.9788, 0.44 ) }
    dend_34 { pt3dadd( -85.9938, -84.4396, 8.62389, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_34 { pt3dadd( -86.7908, -84.7281, 8.22165, 0.74 ) }
    dend_34 { pt3dadd( -87.7122, -85.0495, 7.74777, 0.29 ) }
    dend_34 { pt3dadd( -88.4824, -85.3136, 7.35422, 0.29 ) }
    dend_34 { pt3dadd( -89.5463, -85.7186, 6.8427, 0.37 ) }
    dend_34 { pt3dadd( -90.2391, -86.0262, 6.50301, 0.37 ) }
    dend_34 { pt3dadd( -90.8789, -86.3175, 6.20217, 0.29 ) }
    dend_34 { pt3dadd( -91.702, -86.6643, 5.84685, 0.29 ) }
    dend_34 { pt3dadd( -92.2828, -86.8643, 5.60819, 0.29 ) }
    dend_34 { pt3dadd( -93.0625, -87.0811, 5.3172, 0.29 ) }
    dend_34 { pt3dadd( -94.0131, -87.2939, 5.00267, 0.29 ) }
    dend_34 { pt3dadd( -95.0132, -87.4581, 4.69525, 0.29 ) }
    dend_34 { pt3dadd( -95.7775, -87.5099, 4.4688, 0.29 ) }
    dend_34 { pt3dadd( -97.0367, -87.4961, 4.0795, 0.74 ) }
    dend_34 { pt3dadd( -97.8155, -87.4271, 3.83421, 0.81 ) }
    dend_34 { pt3dadd( -98.8391, -87.276, 3.48516, 0.29 ) }
    dend_34 { pt3dadd( -99.2837, -87.2127, 3.33367, 0.29 ) }
    dend_34 { pt3dadd( -100.1, -87.1246, 3.01531, 0.88 ) }
    dend_34 { pt3dadd( -100.686, -87.0733, 2.75751, 1.03 ) }
    dend_34 { pt3dadd( -101.15, -87.0337, 2.52737, 0.52 ) }
    dend_34 { pt3dadd( -101.987, -86.9639, 2.08709, 0.29 ) }
    dend_34 { pt3dadd( -102.951, -86.893, 1.5813, 0.29 ) }
    dend_34 { pt3dadd( -103.347, -86.8653, 1.39796, 0.52 ) }
    dend_34 { pt3dadd( -103.737, -86.8312, 1.24111, 0.52 ) }
    dend_34 { pt3dadd( -104.593, -86.7238, 0.932073, 0.44 ) }
    dend_34 { pt3dadd( -105.354, -86.5944, 0.656794, 0.59 ) }
    dend_34 { pt3dadd( -106.251, -86.3819, 0.336154, 0.81 ) }
    dend_34 { pt3dadd( -106.848, -86.2134, 0.111426, 0.81 ) }
    dend_34 { pt3dadd( -107.647, -85.987, -0.193722, 0.81 ) }
    dend_34 { pt3dadd( -108.245, -85.8215, -0.434239, 0.74 ) }
    dend_34 { pt3dadd( -109.164, -85.5773, -0.76669, 0.66 ) }
    dend_34 { pt3dadd( -110.079, -85.3664, -1.08289, 0.81 ) }
    dend_34 { pt3dadd( -110.762, -85.2519, -1.3041, 0.81 ) }
    dend_34 { pt3dadd( -111.658, -85.1724, -1.56637, 0.59 ) }
    dend_34 { pt3dadd( -112.611, -85.1652, -1.81382, 0.44 ) }
    dend_34 { pt3dadd( -113.888, -85.2472, -2.11098, 0.37 ) }
    dend_34 { pt3dadd( -114.834, -85.3564, -2.27723, 0.59 ) }
    dend_34 { pt3dadd( -115.67, -85.4672, -2.38279, 0.66 ) }
    dend_34 { pt3dadd( -116.398, -85.556, -2.45559, 0.66 ) }
    dend_34 { pt3dadd( -116.819, -85.597, -2.49275, 0.59 ) }
    dend_34 { pt3dadd( -117.585, -85.6368, -2.56192, 0.59 ) }
    dend_34 { pt3dadd( -118.515, -85.638, -2.70284, 0.29 ) }
    dend_34 { pt3dadd( -119.295, -85.6158, -2.77688, 0.29 ) }
    dend_34 { pt3dadd( -119.902, -85.6064, -2.82484, 0.29 ) }
    dend_34 { pt3dadd( -120.647, -85.6301, -2.87927, 0.81 ) }
    dend_34 { pt3dadd( -121.167, -85.6878, -2.90288, 0.96 ) }
    dend_34 { pt3dadd( -121.823, -85.8308, -2.91621, 0.96 ) }
    dend_34 { pt3dadd( -123.004, -86.2472, -3.01408, 0.22 ) }
    dend_34 { pt3dadd( -123.281, -86.3703, -3.03678, 0.44 ) }
    dend_34 { pt3dadd( -123.718, -86.5841, -3.05376, 0.44 ) }
    dend_34 { pt3dadd( -124.366, -86.9065, -3.04656, 0.59 ) }
    dend_34 { pt3dadd( -124.675, -87.0513, -3.03392, 0.81 ) }
    dend_34 { pt3dadd( -125.89, -87.5376, -2.91234, 0.22 ) }
    dend_34 { pt3dadd( -126.621, -87.7712, -2.81609, 0.81 ) }
    dend_34 { pt3dadd( -127.308, -87.9522, -2.7167, 0.96 ) }
    dend_34 { pt3dadd( -127.874, -88.0779, -2.61937, 0.96 ) }
    dend_34 { pt3dadd( -128.715, -88.2285, -2.46466, 0.52 ) }
    dend_34 { pt3dadd( -130.416, -88.4813, -2.14224, 1.92 ) }
    dend_34 { pt3dadd( -131.277, -88.5807, -1.94826, 2.58 ) }
    dend_34 { pt3dadd( -132.034, -88.655, -1.79217, 2.73 ) }
    dend_34 { pt3dadd( -133.197, -88.7724, -1.58951, 1.92 ) }
    dend_34 { pt3dadd( -134.457, -88.9265, -1.44237, 1.11 ) }
    dend_34 { pt3dadd( -135.355, -89.0549, -1.38137, 0.74 ) }
    dend_34 { pt3dadd( -136.52, -89.2489, -1.4006, 0.74 ) }
    dend_34 { pt3dadd( -137.438, -89.4389, -1.48294, 1.18 ) }
    dend_34 { pt3dadd( -138.6, -89.716, -1.66195, 0.37 ) }
    dend_34 { pt3dadd( -139.758, -90.0258, -1.9565, 0.44 ) }
    dend_34 { pt3dadd( -140.446, -90.2432, -2.18718, 0.88 ) }
    dend_34 { pt3dadd( -141.239, -90.5435, -2.49987, 0.88 ) }
    dend_34 { pt3dadd( -142.094, -90.941, -2.88414, 0.81 ) }
    dend_34 { pt3dadd( -142.505, -91.1564, -3.06116, 0.88 ) }
    dend_34 { pt3dadd( -143.024, -91.4178, -3.23857, 0.74 ) }
    dend_34 { pt3dadd( -143.707, -91.7228, -3.38973, 0.44 ) }
    dend_34 { pt3dadd( -144.362, -91.9583, -3.45951, 0.74 ) }
    dend_34 { pt3dadd( -145.329, -92.2053, -3.45577, 0.29 ) }
    dend_34 { pt3dadd( -145.772, -92.2802, -3.42937, 0.29 ) }
    dend_34 { pt3dadd( -146.905, -92.4439, -3.3273, 0.66 ) }
    dend_34 { pt3dadd( -147.393, -92.5336, -3.27276, 0.66 ) }
    dend_34 { pt3dadd( -148.123, -92.6971, -3.26161, 0.59 ) }
    dend_34 { pt3dadd( -148.59, -92.8397, -3.31247, 0.37 ) }
    dend_34 { pt3dadd( -149.219, -93.08, -3.45122, 0.29 ) }
    dend_34 { pt3dadd( -149.923, -93.4086, -3.66256, 0.29 ) }
    dend_34 { pt3dadd( -150.925, -93.9556, -4.02697, 0.29 ) }
    dend_34 { pt3dadd( -152.12, -94.6462, -4.4948, 0.29 ) }
    dend_34 { pt3dadd( -153.107, -95.2311, -4.89408, 0.29 ) }
    dend_34 { pt3dadd( -153.819, -95.6509, -5.18901, 0.22 ) }
    dend_34 { pt3dadd( -154.415, -95.9754, -5.44286, 0.22 ) }
    dend_34 { pt3dadd( -154.415, -95.9754, -5.44286, 0.52 ) }
    dend_34 { pt3dadd( -154.804, -96.1185, -5.59351, 0.52 ) }
    dend_34 { pt3dadd( -155.608, -96.3961, -5.7538, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -47.3035, -73.2159, 5.46193, 0.66 ) }
    dend_33 { pt3dadd( -47.6279, -74.1794, 5.72501, 0.66 ) }
    dend_33 { pt3dadd( -47.8969, -74.9556, 6.00383, 0.59 ) }
    dend_33 { pt3dadd( -48.0668, -75.3971, 6.17638, 0.74 ) }
    dend_33 { pt3dadd( -48.306, -75.9361, 6.38712, 0.37 ) }
    dend_33 { pt3dadd( -48.5159, -76.3334, 6.5378, 0.59 ) }
    dend_33 { pt3dadd( -48.8606, -76.889, 6.76061, 0.52 ) }
    dend_33 { pt3dadd( -49.1891, -77.3355, 6.95944, 0.59 ) }
    dend_33 { pt3dadd( -49.5128, -77.7397, 7.13892, 0.29 ) }
    dend_33 { pt3dadd( -49.778, -78.0778, 7.27709, 0.29 ) }
    dend_33 { pt3dadd( -50.0971, -78.5277, 7.42969, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_33 { pt3dadd( -50.461, -79.1867, 7.59636, 0.52 ) }
    dend_33 { pt3dadd( -50.7234, -79.8405, 7.72647, 0.52 ) }
    dend_33 { pt3dadd( -50.8839, -80.3718, 7.85837, 0.74 ) }
    dend_33 { pt3dadd( -51.0252, -80.9003, 8.01365, 0.59 ) }
    dend_33 { pt3dadd( -51.2033, -81.5727, 8.22412, 0.52 ) }
    dend_33 { pt3dadd( -51.3738, -82.1685, 8.42037, 0.44 ) }
    dend_33 { pt3dadd( -51.5428, -82.6181, 8.56865, 0.44 ) }
    dend_33 { pt3dadd( -52.0136, -83.4804, 8.8928, 0.66 ) }
    dend_33 { pt3dadd( -52.3599, -83.961, 9.08201, 0.29 ) }
    dend_33 { pt3dadd( -52.6274, -84.265, 9.19789, 0.29 ) }
    dend_33 { pt3dadd( -52.8946, -84.5425, 9.29492, 0.29 ) }
    dend_33 { pt3dadd( -53.206, -84.8678, 9.39551, 0.66 ) }
    dend_33 { pt3dadd( -53.4494, -85.1479, 9.4738, 0.88 ) }
    dend_33 { pt3dadd( -53.6742, -85.4576, 9.54771, 0.88 ) }
    dend_33 { pt3dadd( -54.0063, -86.0187, 9.68772, 0.59 ) }
    dend_33 { pt3dadd( -54.2683, -86.5447, 9.80601, 0.52 ) }
    dend_33 { pt3dadd( -54.4109, -86.8674, 9.86692, 0.52 ) }
    dend_33 { pt3dadd( -54.64, -87.4482, 9.93854, 0.74 ) }
    dend_33 { pt3dadd( -54.8148, -87.8921, 9.96636, 0.88 ) }
    dend_33 { pt3dadd( -54.9944, -88.3149, 9.97516, 0.74 ) }
    dend_33 { pt3dadd( -55.2396, -88.8814, 9.97636, 0.44 ) }
    dend_33 { pt3dadd( -55.423, -89.3016, 9.97766, 0.66 ) }
    dend_33 { pt3dadd( -55.7523, -90.0866, 9.99666, 0.44 ) }
    dend_33 { pt3dadd( -55.9184, -90.5044, 10.0184, 0.44 ) }
    dend_33 { pt3dadd( -56.1024, -90.9683, 10.0667, 0.74 ) }
    dend_33 { pt3dadd( -56.297, -91.4482, 10.1393, 0.74 ) }
    dend_33 { pt3dadd( -56.5298, -92.0107, 10.2407, 0.74 ) }
    dend_33 { pt3dadd( -56.8625, -92.7914, 10.3878, 0.52 ) }
    dend_33 { pt3dadd( -57.177, -93.4934, 10.5245, 0.66 ) }
    dend_33 { pt3dadd( -57.4556, -94.0834, 10.6189, 0.66 ) }
    dend_33 { pt3dadd( -57.6852, -94.5318, 10.6764, 0.74 ) }
    dend_33 { pt3dadd( -57.9433, -95.0069, 10.6967, 0.52 ) }
    dend_33 { pt3dadd( -58.2263, -95.5231, 10.6803, 0.29 ) }
    dend_33 { pt3dadd( -58.3759, -95.8087, 10.6562, 0.29 ) }
    dend_33 { pt3dadd( -58.5277, -96.129, 10.6153, 0.29 ) }
    dend_33 { pt3dadd( -58.6886, -96.5124, 10.559, 0.59 ) }
    dend_33 { pt3dadd( -59.0396, -97.4026, 10.4296, 0.66 ) }
    dend_33 { pt3dadd( -59.2171, -97.9034, 10.3866, 0.52 ) }
    dend_33 { pt3dadd( -59.3829, -98.3855, 10.4072, 0.96 ) }
    dend_33 { pt3dadd( -59.5227, -98.8946, 10.4401, 0.66 ) }
    dend_33 { pt3dadd( -59.6937, -99.5877, 10.5509, 0.44 ) }
    dend_33 { pt3dadd( -59.789, -99.9659, 10.6765, 0.44 ) }
    dend_33 { pt3dadd( -59.9405, -100.531, 11.06, 0.44 ) }
    dend_33 { pt3dadd( -60.0609, -101.158, 11.6597, 0.66 ) }
    dend_33 { pt3dadd( -60.1374, -101.923, 12.5399, 0.96 ) }
    dend_33 { pt3dadd( -60.1414, -102.533, 13.3133, 0.81 ) }
    dend_33 { pt3dadd( -60.1092, -103.09, 14.0333, 0.88 ) }
    dend_33 { pt3dadd( -60.068, -103.658, 14.722, 0.66 ) }
    dend_33 { pt3dadd( -60.0584, -104.126, 15.2216, 0.66 ) }
    dend_33 { pt3dadd( -60.0793, -104.547, 15.5866, 0.59 ) }
    dend_33 { pt3dadd( -60.1421, -104.973, 15.9086, 0.44 ) }
    dend_33 { pt3dadd( -60.2008, -105.391, 16.1229, 0.81 ) }
    dend_33 { pt3dadd( -60.2517, -105.783, 16.2689, 0.81 ) }
    dend_33 { pt3dadd( -60.3366, -106.379, 16.4535, 0.44 ) }
    dend_33 { pt3dadd( -60.4407, -106.898, 16.6041, 0.44 ) }
    dend_33 { pt3dadd( -60.5597, -107.428, 16.7595, 0.66 ) }
    dend_33 { pt3dadd( -60.7104, -108.062, 16.9538, 0.59 ) }
    dend_33 { pt3dadd( -60.7992, -108.568, 17.1216, 0.52 ) }
    dend_33 { pt3dadd( -60.8132, -108.802, 17.2041, 0.74 ) }
    dend_33 { pt3dadd( -60.7679, -109.773, 17.576, 0.29 ) }
    dend_33 { pt3dadd( -60.7244, -110.123, 17.7186, 0.29 ) }
    dend_33 { pt3dadd( -60.6295, -110.663, 17.9416, 0.29 ) }
    dend_33 { pt3dadd( -60.4741, -111.487, 18.2789, 0.52 ) }
    dend_33 { pt3dadd( -60.2872, -112.383, 18.6482, 0.37 ) }
    dend_33 { pt3dadd( -60.1667, -112.879, 18.8633, 0.59 ) }
    dend_33 { pt3dadd( -60.0701, -113.241, 19.0479, 0.59 ) }
    dend_33 { pt3dadd( -59.9544, -113.715, 19.3329, 0.44 ) }
    dend_33 { pt3dadd( -59.8502, -114.195, 19.6899, 0.44 ) }
    dend_33 { pt3dadd( -59.8092, -114.458, 19.9173, 0.81 ) }
    dend_33 { pt3dadd( -59.7655, -114.742, 20.1893, 0.81 ) }
    dend_33 { pt3dadd( -59.6593, -115.294, 20.7201, 0.59 ) }
    dend_33 { pt3dadd( -59.5731, -115.707, 21.1066, 0.52 ) }
    dend_33 { pt3dadd( -59.4875, -116.111, 21.494, 0.52 ) }
    dend_33 { pt3dadd( -59.4179, -116.565, 21.9085, 0.52 ) }
    dend_33 { pt3dadd( -59.4046, -116.885, 22.1522, 0.29 ) }
    dend_33 { pt3dadd( -59.4337, -117.269, 22.3771, 0.29 ) }
    dend_33 { pt3dadd( -59.4976, -117.65, 22.552, 0.52 ) }
    dend_33 { pt3dadd( -59.591, -118.068, 22.7267, 0.52 ) }
    dend_33 { pt3dadd( -59.7354, -118.667, 22.9981, 0.29 ) }
    dend_33 { pt3dadd( -59.8776, -119.237, 23.3013, 0.29 ) }
    dend_33 { pt3dadd( -59.9795, -119.682, 23.5492, 0.52 ) }
    dend_33 { pt3dadd( -60.0454, -119.998, 23.7237, 0.52 ) }
    dend_33 { pt3dadd( -60.1532, -120.485, 23.9849, 0.29 ) }
    dend_33 { pt3dadd( -60.2718, -121.0, 24.2463, 0.52 ) }
    dend_33 { pt3dadd( -60.3453, -121.26, 24.3833, 0.52 ) }
    dend_33 { pt3dadd( -60.5114, -121.777, 24.6749, 0.52 ) }
    dend_33 { pt3dadd( -60.7183, -122.346, 25.0244, 0.74 ) }
    dend_33 { pt3dadd( -61.0313, -123.116, 25.4931, 0.22 ) }
    dend_33 { pt3dadd( -61.2703, -123.636, 25.8027, 0.22 ) }
    dend_33 { pt3dadd( -61.5123, -124.124, 26.0886, 0.22 ) }
    dend_33 { pt3dadd( -61.7671, -124.64, 26.411, 0.52 ) }
    dend_33 { pt3dadd( -61.9844, -125.104, 26.7582, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -49.6821, 10.535, -3.42258, 0.81 ) }
    dend_30 { pt3dadd( -50.7461, 10.8261, -3.17173, 0.81 ) }
    dend_30 { pt3dadd( -51.4163, 10.9574, -3.01715, 0.81 ) }
    dend_30 { pt3dadd( -52.5111, 11.1332, -2.77685, 0.74 ) }
    dend_30 { pt3dadd( -53.1187, 11.2431, -2.64954, 0.74 ) }
    dend_30 { pt3dadd( -53.67, 11.3626, -2.53869, 0.81 ) }
    dend_30 { pt3dadd( -54.5908, 11.6139, -2.3611, 0.96 ) }
    dend_30 { pt3dadd( -55.172, 11.8174, -2.24271, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_30 { pt3dadd( -55.6103, 12.0205, -2.15919, 0.52 ) }
    dend_30 { pt3dadd( -56.3264, 12.5251, -2.09469, 0.74 ) }
    dend_30 { pt3dadd( -56.7259, 12.9143, -2.10758, 0.74 ) }
    dend_30 { pt3dadd( -57.2252, 13.5249, -2.18574, 0.44 ) }
    dend_30 { pt3dadd( -57.6907, 14.1889, -2.29767, 0.44 ) }
    dend_30 { pt3dadd( -58.0375, 14.6836, -2.39668, 0.44 ) }
    dend_30 { pt3dadd( -58.7574, 15.6128, -2.60841, 0.81 ) }
    dend_30 { pt3dadd( -59.1631, 16.0563, -2.72902, 0.96 ) }
    dend_30 { pt3dadd( -59.7934, 16.6076, -2.91025, 0.96 ) }
    dend_30 { pt3dadd( -60.2717, 16.9302, -3.03422, 0.88 ) }
    dend_30 { pt3dadd( -60.9695, 17.277, -3.18017, 0.96 ) }
    dend_30 { pt3dadd( -61.6426, 17.5116, -3.28115, 1.11 ) }
    dend_30 { pt3dadd( -62.1354, 17.627, -3.32362, 1.11 ) }
    dend_30 { pt3dadd( -62.6441, 17.7128, -3.35066, 1.11 ) }
    dend_30 { pt3dadd( -63.0994, 17.7597, -3.35511, 0.74 ) }
    dend_30 { pt3dadd( -63.6386, 17.7847, -3.34436, 0.29 ) }
    dend_30 { pt3dadd( -64.4226, 17.7823, -3.27956, 0.29 ) }
    dend_30 { pt3dadd( -65.1087, 17.7814, -3.18742, 0.88 ) }
    dend_30 { pt3dadd( -65.6352, 17.7985, -3.08164, 1.03 ) }
    dend_30 { pt3dadd( -66.2134, 17.8363, -2.9262, 1.03 ) }
    dend_30 { pt3dadd( -66.7875, 17.8784, -2.74889, 1.11 ) }
    dend_30 { pt3dadd( -67.7718, 17.97, -2.40707, 0.37 ) }
    dend_30 { pt3dadd( -68.4913, 18.0478, -2.14577, 0.29 ) }
    dend_30 { pt3dadd( -69.3067, 18.1344, -1.87426, 0.29 ) }
    dend_30 { pt3dadd( -69.9801, 18.199, -1.6854, 0.96 ) }
    dend_30 { pt3dadd( -70.6232, 18.2464, -1.52119, 1.18 ) }
    dend_30 { pt3dadd( -70.96, 18.2484, -1.44781, 1.33 ) }
    dend_30 { pt3dadd( -71.9386, 18.1735, -1.27728, 0.44 ) }
    dend_30 { pt3dadd( -73.0094, 18.0095, -1.10305, 0.44 ) }
    dend_30 { pt3dadd( -73.5374, 17.9109, -1.02609, 0.37 ) }
    dend_30 { pt3dadd( -73.979, 17.8418, -0.964798, 0.37 ) }
    dend_30 { pt3dadd( -74.8023, 17.7637, -0.842761, 0.37 ) }
    dend_30 { pt3dadd( -75.4602, 17.7551, -0.739394, 0.59 ) }
    dend_30 { pt3dadd( -76.0804, 17.8091, -0.632807, 0.74 ) }
    dend_30 { pt3dadd( -76.8303, 17.9166, -0.50179, 0.88 ) }
    dend_30 { pt3dadd( -77.4569, 18.0488, -0.390913, 0.88 ) }
    dend_30 { pt3dadd( -77.9876, 18.1965, -0.284205, 0.74 ) }
    dend_30 { pt3dadd( -78.7472, 18.4528, -0.113563, 0.29 ) }
    dend_30 { pt3dadd( -79.1552, 18.5988, 0.0107678, 0.22 ) }
    dend_30 { pt3dadd( -80.0088, 18.8991, 0.317582, 0.22 ) }
    dend_30 { pt3dadd( -80.8514, 19.1711, 0.668425, 0.59 ) }
    dend_30 { pt3dadd( -81.4016, 19.3294, 0.914131, 0.81 ) }
    dend_30 { pt3dadd( -82.2211, 19.5453, 1.29058, 0.81 ) }
    dend_30 { pt3dadd( -83.2464, 19.7732, 1.78678, 0.96 ) }
    dend_30 { pt3dadd( -84.0192, 19.9348, 2.15583, 0.59 ) }
    dend_30 { pt3dadd( -84.7196, 20.1108, 2.47393, 0.22 ) }
    dend_30 { pt3dadd( -85.2938, 20.2618, 2.70545, 0.22 ) }
    dend_30 { pt3dadd( -85.7635, 20.4182, 2.88823, 0.44 ) }
    dend_30 { pt3dadd( -86.5015, 20.7394, 3.16919, 0.59 ) }
    dend_30 { pt3dadd( -87.169, 21.0713, 3.40464, 0.52 ) }
    dend_30 { pt3dadd( -88.1573, 21.5882, 3.75757, 0.66 ) }
    dend_30 { pt3dadd( -88.6911, 21.8637, 3.93416, 0.66 ) }
    dend_30 { pt3dadd( -89.777, 22.3894, 4.26042, 0.66 ) }
    dend_30 { pt3dadd( -90.4542, 22.6948, 4.44572, 0.59 ) }
    dend_30 { pt3dadd( -91.0711, 22.9298, 4.55076, 0.44 ) }
    dend_30 { pt3dadd( -91.8594, 23.1186, 4.61953, 0.37 ) }
    dend_30 { pt3dadd( -92.5732, 23.1844, 4.64663, 0.29 ) }
    dend_30 { pt3dadd( -93.1131, 23.1745, 4.64659, 0.29 ) }
    dend_30 { pt3dadd( -93.6614, 23.1144, 4.62474, 0.44 ) }
    dend_30 { pt3dadd( -94.7928, 22.9584, 4.58922, 0.59 ) }
    dend_30 { pt3dadd( -95.1484, 22.9205, 4.58451, 0.59 ) }
    dend_30 { pt3dadd( -96.2146, 22.8314, 4.61041, 0.37 ) }
    dend_30 { pt3dadd( -97.1034, 22.761, 4.65332, 0.29 ) }
    dend_30 { pt3dadd( -97.6731, 22.7249, 4.6872, 0.29 ) }
    dend_30 { pt3dadd( -97.9573, 22.7136, 4.71636, 0.29 ) }
    dend_30 { pt3dadd( -98.7248, 22.7039, 4.84699, 0.59 ) }
    dend_30 { pt3dadd( -99.1174, 22.7063, 4.91325, 0.59 ) }
    dend_30 { pt3dadd( -99.5123, 22.7329, 4.97186, 0.52 ) }
    dend_30 { pt3dadd( -99.9826, 22.8045, 5.05329, 0.66 ) }
    dend_30 { pt3dadd( -100.797, 22.9526, 5.2129, 0.29 ) }
    dend_30 { pt3dadd( -101.167, 23.0059, 5.29502, 0.29 ) }
    dend_30 { pt3dadd( -101.601, 23.0398, 5.41389, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 72/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -49.6821, 10.535, -3.42258, 0.74 ) }
    dend_29 { pt3dadd( -49.6964, 11.5936, -3.55236, 0.74 ) }
    dend_29 { pt3dadd( -49.7365, 12.8671, -3.73057, 0.74 ) }
    dend_29 { pt3dadd( -49.838, 14.4131, -3.95646, 0.74 ) }
    dend_29 { pt3dadd( -49.9626, 15.3144, -4.11772, 0.74 ) }
    dend_29 { pt3dadd( -50.388, 17.3048, -4.49057, 0.88 ) }
    dend_29 { pt3dadd( -50.6415, 18.2138, -4.66993, 0.88 ) }
    dend_29 { pt3dadd( -50.9594, 19.0216, -4.87162, 0.96 ) }
    dend_29 { pt3dadd( -51.4162, 19.9141, -5.12764, 0.81 ) }
    dend_29 { pt3dadd( -52.3748, 21.4483, -5.60237, 0.74 ) }
    dend_29 { pt3dadd( -53.1945, 22.6576, -6.03775, 0.96 ) }
    dend_29 { pt3dadd( -53.8539, 23.5862, -6.40634, 0.96 ) }
    dend_29 { pt3dadd( -54.6552, 24.7384, -6.89585, 0.81 ) }
    dend_29 { pt3dadd( -55.2434, 25.6532, -7.32207, 0.74 ) }
    dend_29 { pt3dadd( -55.6348, 26.3575, -7.6783, 0.74 ) }
    dend_29 { pt3dadd( -56.2585, 27.6975, -8.37164, 0.74 ) }
    dend_29 { pt3dadd( -56.5977, 28.5061, -8.80058, 0.88 ) }
    dend_29 { pt3dadd( -56.9284, 29.2825, -9.17927, 0.88 ) }
    dend_29 { pt3dadd( -57.2641, 30.0052, -9.48701, 0.66 ) }
    dend_29 { pt3dadd( -57.6778, 30.7432, -9.79727, 0.66 ) }
    dend_29 { pt3dadd( -58.187, 31.5096, -10.1011, 0.81 ) }
    dend_29 { pt3dadd( -58.7551, 32.2473, -10.369, 0.81 ) }
    dend_29 { pt3dadd( -59.513, 33.1525, -10.7568, 0.66 ) }
    dend_29 { pt3dadd( -60.0787, 33.7854, -11.0336, 0.81 ) }
    dend_29 { pt3dadd( -60.7311, 34.5, -11.3681, 0.81 ) }
    dend_29 { pt3dadd( -61.2167, 35.0842, -11.6605, 0.59 ) }
    dend_29 { pt3dadd( -61.4934, 35.5035, -11.8697, 0.59 ) }
    dend_29 { pt3dadd( -61.9538, 36.3913, -12.2566, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_29 { pt3dadd( -62.2981, 37.2428, -12.5488, 0.59 ) }
    dend_29 { pt3dadd( -62.5858, 38.032, -12.7959, 0.74 ) }
    dend_29 { pt3dadd( -62.8927, 38.8466, -13.067, 0.88 ) }
    dend_29 { pt3dadd( -63.3816, 39.9378, -13.4712, 1.25 ) }
    dend_29 { pt3dadd( -63.8848, 40.8643, -13.8579, 0.66 ) }
    dend_29 { pt3dadd( -64.3977, 41.6637, -14.2247, 0.66 ) }
    dend_29 { pt3dadd( -65.2968, 42.8577, -14.8703, 0.81 ) }
    dend_29 { pt3dadd( -66.0426, 43.6809, -15.3556, 0.81 ) }
    dend_29 { pt3dadd( -66.7688, 44.3391, -15.7847, 0.96 ) }
    dend_29 { pt3dadd( -67.4755, 44.8721, -16.1344, 0.66 ) }
    dend_29 { pt3dadd( -68.2203, 45.3649, -16.4173, 0.52 ) }
    dend_29 { pt3dadd( -69.3327, 46.0461, -16.7037, 0.52 ) }
    dend_29 { pt3dadd( -70.2521, 46.5917, -16.8196, 1.11 ) }
    dend_29 { pt3dadd( -70.8498, 46.9745, -16.8263, 1.33 ) }
    dend_29 { pt3dadd( -71.7097, 47.595, -16.7602, 0.66 ) }
    dend_29 { pt3dadd( -72.4899, 48.2341, -16.648, 0.52 ) }
    dend_29 { pt3dadd( -73.036, 48.7392, -16.5478, 0.66 ) }
    dend_29 { pt3dadd( -73.3197, 49.044, -16.4872, 0.66 ) }
    dend_29 { pt3dadd( -74.076, 49.9712, -16.36, 0.44 ) }
    dend_29 { pt3dadd( -74.6508, 50.7795, -16.2934, 0.81 ) }
    dend_29 { pt3dadd( -75.0508, 51.4104, -16.2901, 0.81 ) }
    dend_29 { pt3dadd( -75.5965, 52.3347, -16.3296, 0.88 ) }
    dend_29 { pt3dadd( -76.183, 53.3545, -16.4067, 0.88 ) }
    dend_29 { pt3dadd( -76.7971, 54.3965, -16.5127, 0.59 ) }
    dend_29 { pt3dadd( -77.2604, 55.1379, -16.6102, 0.81 ) }
    dend_29 { pt3dadd( -77.9202, 56.1143, -16.7447, 0.96 ) }
    dend_29 { pt3dadd( -78.412, 56.757, -16.8198, 0.96 ) }
    dend_29 { pt3dadd( -78.9697, 57.4297, -16.9105, 0.96 ) }
    dend_29 { pt3dadd( -79.9086, 58.5577, -17.0631, 0.96 ) }
    dend_29 { pt3dadd( -80.7211, 59.5904, -17.1895, 0.88 ) }
    dend_29 { pt3dadd( -81.3627, 60.4878, -17.3111, 0.88 ) }
    dend_29 { pt3dadd( -82.2586, 61.9486, -17.5646, 0.81 ) }
    dend_29 { pt3dadd( -82.8403, 63.1127, -17.8092, 0.52 ) }
    dend_29 { pt3dadd( -83.2046, 64.1024, -18.058, 0.74 ) }
    dend_29 { pt3dadd( -83.4231, 65.0693, -18.3435, 0.74 ) }
    dend_29 { pt3dadd( -83.5382, 65.9844, -18.6523, 0.88 ) }
    dend_29 { pt3dadd( -83.6221, 67.0274, -19.023, 0.66 ) }
    dend_29 { pt3dadd( -83.6909, 67.9082, -19.3528, 0.88 ) }
    dend_29 { pt3dadd( -83.8292, 68.7163, -19.6768, 0.88 ) }
    dend_29 { pt3dadd( -84.1152, 69.5375, -20.0567, 0.66 ) }
    dend_29 { pt3dadd( -84.6165, 70.4182, -20.499, 0.66 ) }
    dend_29 { pt3dadd( -85.2316, 71.1782, -20.8821, 0.96 ) }
    dend_29 { pt3dadd( -85.7655, 71.7073, -21.1105, 0.96 ) }
    dend_29 { pt3dadd( -86.5134, 72.3708, -21.3614, 0.74 ) }
    dend_29 { pt3dadd( -87.3639, 73.1473, -21.5815, 0.66 ) }
    dend_29 { pt3dadd( -87.8471, 73.6421, -21.673, 0.66 ) }
    dend_29 { pt3dadd( -88.4184, 74.2983, -21.7492, 0.66 ) }
    dend_29 { pt3dadd( -89.3312, 75.4597, -21.8526, 1.03 ) }
    dend_29 { pt3dadd( -89.7753, 76.1079, -21.897, 1.03 ) }
    dend_29 { pt3dadd( -90.5651, 77.3783, -22.0301, 0.74 ) }
    dend_29 { pt3dadd( -91.4421, 78.8822, -22.3081, 0.88 ) }
    dend_29 { pt3dadd( -92.0041, 79.8141, -22.5332, 0.74 ) }
    dend_29 { pt3dadd( -92.6898, 80.8614, -22.8423, 0.96 ) }
    dend_29 { pt3dadd( -93.6273, 82.142, -23.2797, 0.59 ) }
    dend_29 { pt3dadd( -94.7119, 83.4957, -23.7859, 0.52 ) }
    dend_29 { pt3dadd( -95.4511, 84.3654, -24.1513, 0.66 ) }
    dend_29 { pt3dadd( -96.3882, 85.5151, -24.6697, 0.81 ) }
    dend_29 { pt3dadd( -96.965, 86.2916, -25.0293, 1.03 ) }
    dend_29 { pt3dadd( -97.5262, 87.1233, -25.3719, 0.74 ) }
    dend_29 { pt3dadd( -97.8497, 87.6328, -25.5346, 0.96 ) }
    dend_29 { pt3dadd( -98.315, 88.4299, -25.6839, 0.96 ) }
    dend_29 { pt3dadd( -98.9128, 89.4941, -25.805, 0.59 ) }
    dend_29 { pt3dadd( -99.3302, 90.274, -25.872, 0.59 ) }
    dend_29 { pt3dadd( -99.9634, 91.4067, -25.9311, 0.74 ) }
    dend_29 { pt3dadd( -100.535, 92.3067, -25.9506, 0.81 ) }
    dend_29 { pt3dadd( -101.307, 93.2877, -25.9327, 0.96 ) }
    dend_29 { pt3dadd( -102.148, 94.16, -25.8753, 1.18 ) }
    dend_29 { pt3dadd( -103.058, 94.9492, -25.7908, 0.59 ) }
    dend_29 { pt3dadd( -103.821, 95.5468, -25.7774, 0.66 ) }
    dend_29 { pt3dadd( -104.563, 96.1007, -25.8334, 0.66 ) }
    dend_29 { pt3dadd( -105.662, 96.9188, -25.9836, 0.52 ) }
    dend_29 { pt3dadd( -106.418, 97.4964, -26.132, 0.81 ) }
    dend_29 { pt3dadd( -107.266, 98.1421, -26.3282, 0.81 ) }
    dend_29 { pt3dadd( -108.956, 99.3731, -26.7444, 0.88 ) }
    dend_29 { pt3dadd( -109.859, 99.9931, -26.9838, 0.59 ) }
    dend_29 { pt3dadd( -110.723, 100.546, -27.2234, 0.81 ) }
    dend_29 { pt3dadd( -111.652, 101.107, -27.4888, 0.81 ) }
    dend_29 { pt3dadd( -112.813, 101.774, -27.808, 0.81 ) }
    dend_29 { pt3dadd( -113.507, 102.16, -27.9713, 0.81 ) }
    dend_29 { pt3dadd( -114.384, 102.628, -28.1025, 0.74 ) }
    dend_29 { pt3dadd( -115.256, 103.1, -28.25, 0.59 ) }
    dend_29 { pt3dadd( -116.099, 103.611, -28.4094, 0.59 ) }
    dend_29 { pt3dadd( -116.889, 104.204, -28.5792, 0.74 ) }
    dend_29 { pt3dadd( -117.755, 105.075, -28.8062, 0.81 ) }
    dend_29 { pt3dadd( -118.319, 105.852, -28.9714, 0.88 ) }
    dend_29 { pt3dadd( -118.662, 106.472, -29.0565, 0.88 ) }
    dend_29 { pt3dadd( -118.983, 107.176, -29.1208, 0.74 ) }
    dend_29 { pt3dadd( -119.354, 108.062, -29.1654, 0.74 ) }
    dend_29 { pt3dadd( -119.67, 108.851, -29.1908, 0.52 ) }
    dend_29 { pt3dadd( -120.143, 110.125, -29.2209, 0.44 ) }
    dend_29 { pt3dadd( -120.541, 111.179, -29.2319, 0.74 ) }
    dend_29 { pt3dadd( -120.77, 111.71, -29.2324, 0.74 ) }
    dend_29 { pt3dadd( -121.245, 112.599, -29.2682, 0.59 ) }
    dend_29 { pt3dadd( -121.648, 113.176, -29.3398, 0.59 ) }
    dend_29 { pt3dadd( -122.09, 113.677, -29.4432, 0.59 ) }
    dend_29 { pt3dadd( -122.959, 114.452, -29.6662, 0.66 ) }
    dend_29 { pt3dadd( -124.077, 115.28, -29.9682, 0.37 ) }
    dend_29 { pt3dadd( -125.322, 116.062, -30.2855, 0.37 ) }
    dend_29 { pt3dadd( -126.75, 116.811, -30.6041, 0.52 ) }
    dend_29 { pt3dadd( -127.385, 117.112, -30.7233, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_29 { pt3dadd( -128.449, 117.595, -30.8981, 0.29 ) }
    dend_29 { pt3dadd( -129.236, 117.961, -31.0279, 0.66 ) }
    dend_29 { pt3dadd( -129.906, 118.311, -31.1275, 0.66 ) }
    dend_29 { pt3dadd( -130.863, 118.925, -31.2442, 0.37 ) }
    dend_29 { pt3dadd( -131.67, 119.562, -31.333, 0.44 ) }
    dend_29 { pt3dadd( -132.468, 120.296, -31.4407, 0.29 ) }
    dend_29 { pt3dadd( -133.189, 121.054, -31.5719, 0.29 ) }
    dend_29 { pt3dadd( -133.868, 121.827, -31.7135, 0.29 ) }
    dend_29 { pt3dadd( -134.486, 122.547, -31.8525, 0.74 ) }
    dend_29 { pt3dadd( -134.786, 122.867, -31.9208, 0.74 ) }
    dend_29 { pt3dadd( -135.231, 123.247, -32.0026, 0.37 ) }
    dend_29 { pt3dadd( -136.086, 123.803, -32.1257, 0.29 ) }
    dend_29 { pt3dadd( -136.693, 124.121, -32.2, 0.29 ) }
    dend_29 { pt3dadd( -137.184, 124.346, -32.2757, 0.29 ) }
    dend_29 { pt3dadd( -138.031, 124.686, -32.4126, 0.29 ) }
    dend_29 { pt3dadd( -138.824, 124.964, -32.5389, 0.66 ) }
    dend_29 { pt3dadd( -139.395, 125.133, -32.6246, 0.66 ) }
    dend_29 { pt3dadd( -140.234, 125.34, -32.7268, 0.37 ) }
    dend_29 { pt3dadd( -141.13, 125.579, -32.872, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 19/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.1244, 45.3237, 24.0598, 0.96 ) }
    dend_16 { pt3dadd( -14.2555, 46.5272, 24.8505, 0.96 ) }
    dend_16 { pt3dadd( -14.3947, 47.4764, 25.3436, 0.81 ) }
    dend_16 { pt3dadd( -14.5377, 48.2711, 25.6817, 0.74 ) }
    dend_16 { pt3dadd( -14.7191, 49.1341, 25.9753, 0.74 ) }
    dend_16 { pt3dadd( -14.9955, 50.3068, 26.2907, 0.81 ) }
    dend_16 { pt3dadd( -15.2692, 51.3714, 26.5175, 0.66 ) }
    dend_16 { pt3dadd( -15.4803, 52.0818, 26.6033, 0.81 ) }
    dend_16 { pt3dadd( -15.695, 52.7614, 26.6491, 0.81 ) }
    dend_16 { pt3dadd( -16.0519, 53.7692, 26.7008, 0.66 ) }
    dend_16 { pt3dadd( -16.4829, 54.8421, 26.7446, 0.81 ) }
    dend_16 { pt3dadd( -16.8051, 55.586, 26.7842, 0.96 ) }
    dend_16 { pt3dadd( -17.1181, 56.362, 26.8661, 1.03 ) }
    dend_16 { pt3dadd( -17.4494, 57.26, 26.9962, 0.59 ) }
    dend_16 { pt3dadd( -17.6962, 58.1112, 27.1256, 0.59 ) }
    dend_16 { pt3dadd( -17.9007, 59.0217, 27.2659, 0.44 ) }
    dend_16 { pt3dadd( -18.0362, 59.7499, 27.3733, 0.44 ) }
    dend_16 { pt3dadd( -18.285, 61.1641, 27.5485, 0.81 ) }
    dend_16 { pt3dadd( -18.4194, 61.8935, 27.6001, 1.03 ) }
    dend_16 { pt3dadd( -18.801, 63.2695, 27.6658, 0.66 ) }
    dend_16 { pt3dadd( -19.044, 63.8746, 27.6709, 0.66 ) }
    dend_16 { pt3dadd( -19.3992, 64.512, 27.6712, 0.81 ) }
    dend_16 { pt3dadd( -19.8219, 65.1256, 27.6827, 0.59 ) }
    dend_16 { pt3dadd( -20.4228, 65.8235, 27.7544, 0.44 ) }
    dend_16 { pt3dadd( -21.6604, 67.1428, 28.0574, 0.44 ) }
    dend_16 { pt3dadd( -22.6027, 68.1146, 28.417, 0.37 ) }
    dend_16 { pt3dadd( -23.3996, 69.0335, 28.8146, 0.37 ) }
    dend_16 { pt3dadd( -23.9324, 69.8002, 29.1772, 0.37 ) }
    dend_16 { pt3dadd( -24.576, 71.1005, 29.7945, 0.44 ) }
    dend_16 { pt3dadd( -24.941, 71.7708, 30.342, 0.29 ) }
    dend_16 { pt3dadd( -25.141, 72.3297, 30.7584, 0.29 ) }
    dend_16 { pt3dadd( -25.3711, 73.2029, 31.3321, 0.29 ) }
    dend_16 { pt3dadd( -25.5696, 74.1135, 31.8124, 0.96 ) }
    dend_16 { pt3dadd( -25.7401, 74.8981, 32.1429, 1.11 ) }
    dend_16 { pt3dadd( -26.7095, 79.3931, 33.8106, 1.11 ) }
    dend_16 { pt3dadd( -27.8946, 83.1948, 35.3459, 0.44 ) }
    dend_16 { pt3dadd( -28.1693, 83.7808, 35.713, 0.29 ) }
    dend_16 { pt3dadd( -28.6192, 84.3281, 36.3967, 0.29 ) }
    dend_16 { pt3dadd( -28.9536, 84.4499, 36.9729, 0.29 ) }
    dend_16 { pt3dadd( -29.3127, 84.3436, 37.6604, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -14.1244, 45.3237, 24.0598, 0.74 ) }
    dend_13 { pt3dadd( -13.8774, 45.6088, 25.6041, 0.74 ) }
    dend_13 { pt3dadd( -13.766, 45.7374, 26.3005, 0.74 ) }
    dend_13 { pt3dadd( -13.5525, 45.9838, 27.6351, 0.74 ) }
    dend_13 { pt3dadd( -13.3632, 46.2023, 28.8183, 1.03 ) }
    dend_13 { pt3dadd( -13.1691, 46.4263, 30.0318, 1.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -13.1691, 46.4263, 30.0318, 0.66 ) }
    dend_15 { pt3dadd( -12.9984, 46.839, 30.2696, 0.66 ) }
    dend_15 { pt3dadd( -12.905, 47.1619, 30.451, 0.66 ) }
    dend_15 { pt3dadd( -12.8194, 47.5578, 30.6591, 0.74 ) }
    dend_15 { pt3dadd( -12.7449, 48.0145, 30.891, 0.74 ) }
    dend_15 { pt3dadd( -12.6702, 48.6016, 31.1857, 1.18 ) }
    dend_15 { pt3dadd( -12.6162, 49.1295, 31.4573, 0.96 ) }
    dend_15 { pt3dadd( -12.5877, 49.5658, 31.6997, 0.81 ) }
    dend_15 { pt3dadd( -12.5628, 50.0224, 31.9597, 0.52 ) }
    dend_15 { pt3dadd( -12.5447, 50.39, 32.1882, 0.52 ) }
    dend_15 { pt3dadd( -12.5309, 50.7813, 32.4497, 0.96 ) }
    dend_15 { pt3dadd( -12.5256, 50.9983, 32.5946, 0.96 ) }
    dend_15 { pt3dadd( -12.533, 51.3089, 32.8244, 0.96 ) }
    dend_15 { pt3dadd( -12.5451, 51.5782, 33.0291, 0.59 ) }
    dend_15 { pt3dadd( -12.5533, 51.9004, 33.2538, 0.37 ) }
    dend_15 { pt3dadd( -12.5462, 52.1895, 33.4956, 0.37 ) }
    dend_15 { pt3dadd( -12.5186, 52.4231, 33.716, 0.37 ) }
    dend_15 { pt3dadd( -12.4062, 52.791, 34.0735, 0.37 ) }
    dend_15 { pt3dadd( -12.1688, 53.2065, 34.5001, 0.37 ) }
    dend_15 { pt3dadd( -11.8882, 53.4952, 34.8348, 0.74 ) }
    dend_15 { pt3dadd( -11.2262, 54.0361, 35.5045, 0.22 ) }
    dend_15 { pt3dadd( -10.9766, 54.1996, 35.7299, 0.22 ) }
    dend_15 { pt3dadd( -10.4854, 54.4534, 36.1284, 0.22 ) }
    dend_15 { pt3dadd( -9.99777, 54.6313, 36.4842, 0.22 ) }
    dend_15 { pt3dadd( -9.64371, 54.7179, 36.7298, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -13.1691, 46.4263, 30.0318, 0.74 ) }
    dend_14 { pt3dadd( -12.9627, 46.2586, 30.7752, 0.74 ) }
    dend_14 { pt3dadd( -12.8239, 46.2673, 31.4027, 0.44 ) }
    dend_14 { pt3dadd( -12.7027, 46.364, 32.0121, 0.44 ) }
    dend_14 { pt3dadd( -12.6127, 46.4756, 32.4576, 0.59 ) }
    dend_14 { pt3dadd( -12.5082, 46.6167, 32.9563, 0.29 ) }
    dend_14 { pt3dadd( -12.3979, 46.7798, 33.6056, 0.29 ) }
    dend_14 { pt3dadd( -12.3368, 46.9484, 34.0703, 0.44 ) }
    dend_14 { pt3dadd( -12.3097, 47.0591, 34.3152, 0.44 ) }
    dend_14 { pt3dadd( -12.2675, 47.321, 34.8456, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -12.213, 47.5449, 35.2963, 0.74 ) }
    dend_14 { pt3dadd( -12.1096, 47.8481, 36.0566, 0.52 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_37, dend_24, dend_9, dend_0, dend_36, dend_25, dend_19, dend_10, dend_8, dend_1, dend_31, dend_26, dend_23, dend_20, dend_18, dend_11, dend_5, dend_2, dend_35, dend_32, dend_28, dend_27, dend_22, dend_21, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_30, dend_29, dend_16, dend_13, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_8 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_35 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_32 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_27 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_21 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_4 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_33 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_30 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_29 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_24 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_10 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_19 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_12 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_14 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_15 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_3 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_7 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 3
    dend_36 nseg = 7
    dend_8 nseg = 5
    dend_1 nseg = 7
    dend_23 nseg = 13
    dend_20 nseg = 5
    dend_5 nseg = 9
    dend_2 nseg = 3
    dend_35 nseg = 5
    dend_32 nseg = 3
    dend_28 nseg = 3
    dend_27 nseg = 13
    dend_22 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_4 nseg = 3
    dend_34 nseg = 7
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_29 nseg = 7
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_ChC_6f06a0ce3d_0_0


