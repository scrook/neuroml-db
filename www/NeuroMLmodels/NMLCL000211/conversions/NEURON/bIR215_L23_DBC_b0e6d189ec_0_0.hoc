// Cell: bIR215_L23_DBC_b0e6d189ec_0_0
/*
{
  "id" : "bIR215_L23_DBC_b0e6d189ec_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.36129, -7.58075, 0.00144685, 3.22785", "2.18013, -6.85906, 0.00129054, 6.03886", "1.99896, -6.13737, 0.00113423, 7.42316", "1.81779, -5.41568, 9.77923E-4, 8.36559", "1.63662, -4.69399, 8.21614E-4, 9.26167", "1.45546, -3.9723, 6.65304E-4, 9.90915", "1.27429, -3.25061, 5.08995E-4, 10.4263", "1.09312, -2.52892, 3.52686E-4, 10.8393", "0.911955, -1.80723, 1.96376E-4, 11.2188", "0.730788, -1.08554, 4.00668E-5, 11.4122", "0.54962, -0.363848, -1.16243E-4, 11.4389", "0.368453, 0.357841, -2.72552E-4, 11.3929", "0.187285, 1.07953, -4.28861E-4, 11.2923", "0.00611797, 1.80122, -5.85171E-4, 10.9441", "-0.175049, 2.52291, -7.4148E-4, 10.5254", "-0.356217, 3.2446, -8.9779E-4, 10.1407", "-0.537384, 3.96629, -0.0010541, 9.5776", "-0.718552, 4.68798, -0.00121041, 8.87208", "-0.899719, 5.40967, -0.00136672, 7.79472", "-1.08089, 6.13136, -0.00152303, 6.05918", "-1.26205, 6.85305, -0.00167934, 3.96403" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.04582, 7.3084, -2.62764, 1.8", "1.02676, 8.51479, -3.11329, 0.96", "1.00664, 9.78815, -3.62591, 0.72", "0.974689, 11.8096, -4.43968, 0.96", "0.953487, 13.1514, -4.97981, 1.32", "0.924644, 14.9765, -5.71457, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.0441755, -7.3286, 6.04236, 1.68", "-0.0923074, -7.84267, 6.2857, 0.72", "-0.185537, -8.8384, 6.75703, 0.96", "-0.240791, -9.42854, 7.03638, 1.32", "-0.298351, -10.0433, 7.32738, 0.96", "-0.32713, -10.3506, 7.47288, 0.96", "-0.392844, -11.0525, 7.80511, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.07582, 7.6234, 2.85236, 1.68", "-0.0110498, 8.22454, 2.95738, 1.68", "0.069548, 9.04938, 3.36272, 1.44", "0.203788, 9.6389, 3.73426, 0.96", "0.321794, 10.1086, 4.06892, 0.84", "0.422843, 10.5365, 4.3773, 0.96", "0.645242, 11.6097, 5.23633, 0.84", "0.781608, 12.1794, 5.75152, 0.72", "0.893288, 12.6178, 6.17815, 0.72", "1.02909, 13.171, 6.70561, 0.84", "1.09254, 13.5063, 6.98798, 0.96", "1.23663, 14.5835, 7.73075, 0.24", "1.28584, 15.0741, 7.97103, 0.24", "1.32286, 15.4733, 8.14149, 0.6", "1.36684, 16.0203, 8.34381, 1.44", "1.41187, 16.7418, 8.56464, 1.56", "1.43037, 17.3524, 8.72483, 1.56", "1.4296, 18.0296, 8.85283, 1.56", "1.38639, 19.2087, 9.07285, 0.6", "1.34144, 19.8505, 9.18444, 0.48", "1.27843, 20.4734, 9.2934, 0.48", "1.23746, 20.8495, 9.35611, 0.96", "1.15393, 21.7087, 9.5084, 0.6", "1.10931, 22.3412, 9.62564, 0.6", "1.08894, 22.9899, 9.74426, 0.96", "1.07629, 24.1324, 9.98577, 0.84", "1.06897, 24.7649, 10.1366, 0.84", "1.02966, 25.7718, 10.3924, 0.72", "0.945109, 26.7583, 10.6544, 0.84", "0.92007, 26.9667, 10.7076, 0.84", "0.834605, 27.5279, 10.8405, 0.72", "0.698914, 28.3715, 11.0099, 0.48", "0.589781, 29.1719, 11.1354, 0.48", "0.52195, 29.8536, 11.2127, 0.6", "0.480024, 30.4901, 11.2879, 0.84", "0.463746, 30.811, 11.3399, 0.84", "0.448241, 31.263, 11.4251, 0.48", "0.416112, 32.2147, 11.6166, 0.48", "0.386373, 33.1353, 11.8397, 0.48", "0.328505, 34.2719, 12.1743, 0.6", "0.25777, 35.119, 12.4519, 1.08", "0.197284, 35.6325, 12.6158, 1.32", "0.125924, 36.0896, 12.7556, 1.32", "0.00812867, 36.7205, 12.9419, 0.84", "-0.114459, 37.4378, 13.1138, 0.6", "-0.208457, 38.0689, 13.2384, 0.48", "-0.301461, 38.7694, 13.3416, 0.6", "-0.354397, 39.1962, 13.3993, 0.48", "-0.409093, 39.6727, 13.4446, 0.48", "-0.469645, 40.1026, 13.4392, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.15581, -7.1291, -6.17764, 1.44", "2.66743, -8.06659, -6.27751, 1.08", "1.94977, -9.25335, -6.40625, 1.44", "1.22152, -10.3952, -6.61606, 1.56", "0.319675, -11.7965, -6.95674, 1.56", "-0.840267, -13.6382, -7.46048, 1.2", "-1.50228, -14.7348, -7.82549, 0.72", "-1.90362, -15.3288, -8.05441, 0.72", "-2.86017, -16.627, -8.6603, 1.56", "-3.20819, -17.0931, -8.93008, 1.8", "-3.53639, -17.5724, -9.28865, 2.16", "-3.9984, -18.5598, -10.2241, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.91582, -4.6931, -0.277637, 1.32", "5.45466, -5.21575, -0.91058, 1.2", "6.14402, -5.69806, -1.80847, 0.72", "6.6265, -5.92565, -2.41307, 0.72", "7.55953, -6.25559, -3.49181, 1.68", "8.23185, -6.4283, -4.22513, 2.04", "9.58731, -6.69696, -5.62013, 1.92", "10.5168, -6.79705, -6.51239, 1.92", "11.5011, -6.87178, -7.3682, 0.96", "12.0977, -6.93352, -7.81965, 0.96", "13.2658, -7.15169, -8.56031, 1.44", "13.9488, -7.37163, -8.93182, 1.92", "14.9427, -7.77369, -9.35593, 1.56", "15.9841, -8.2968, -9.73866, 1.2", "16.9289, -8.88606, -10.0652, 1.2", "17.9309, -9.61801, -10.3957, 1.56", "18.3259, -9.96294, -10.4956, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.46419, -1.9421, 0.432363, 0.96", "-4.94109, -1.77818, 0.993253, 0.6", "-5.89172, -1.29194, 1.96614, 0.72", "-5.99645, -1.23924, 2.05722, 0.72", "-6.97813, -0.889068, 2.85341, 0.72", "-7.43241, -0.80113, 3.22104, 0.72", "-8.04004, -0.743236, 3.71996, 0.72", "-8.52732, -0.73631, 4.16512, 0.72", "-9.02422, -0.770136, 4.6069, 0.72", "-10.1948, -0.914268, 5.67652, 0.72", "-11.3306, -1.11832, 6.70347, 0.84", "-12.2377, -1.33706, 7.55455, 1.08", "-13.1989, -1.62601, 8.51258, 1.44", "-13.7013, -1.78969, 9.05087, 1.68", "-14.4323, -2.00778, 9.88242, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.77419, 5.8804, -7.59764, 1.08", "-4.01957, 6.45112, -7.72809, 1.08", "-4.2821, 7.00075, -7.92337, 0.84", "-4.47204, 7.33658, -8.08276, 0.12", "-4.71904, 7.70467, -8.27322, 0.12", "-5.04314, 8.14077, -8.50295, 0.84", "-5.83533, 9.20383, -9.04057, 0.84", "-6.31654, 9.84253, -9.36622, 0.84", "-6.83903, 10.5559, -9.7045, 0.48", "-7.27989, 11.1769, -9.96882, 0.12", "-7.53511, 11.5456, -10.1212, 0.12", "-7.98876, 12.2245, -10.3848, 0.6", "-8.38912, 12.8584, -10.5843, 0.6", "-8.83554, 13.6071, -10.8177, 0.72", "-9.03538, 13.9588, -10.9257, 1.08", "-9.52748, 14.8288, -11.2379, 0.6", "-9.88713, 15.4405, -11.4647, 0.36", "-10.2112, 15.9888, -11.6784, 0.12", "-10.6507, 16.7511, -11.9747, 0.48", "-11.02, 17.4348, -12.232, 0.48", "-11.6037, 18.6043, -12.6291, 0.48", "-12.1094, 19.7112, -12.9806, 0.6", "-12.5758, 20.8504, -13.3634, 0.36", "-12.7449, 21.3099, -13.523, 0.36", "-13.0284, 22.1519, -13.8187, 1.2", "-13.235, 22.8034, -14.0506, 1.08", "-13.4745, 23.5712, -14.3304, 0.72", "-13.6945, 24.2516, -14.5931, 0.24", "-13.9755, 25.0542, -14.8868, 0.24", "-14.1245, 25.4674, -15.0309, 0.72", "-14.4197, 26.2341, -15.2582, 0.84", "-14.6883, 26.9163, -15.4438, 0.48", "-14.8469, 27.3024, -15.5232, 0.24", "-15.0881, 27.8501, -15.6152, 0.12", "-15.2482, 28.2055, -15.6765, 0.96", "-15.64, 29.0937, -15.803, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.26205, 6.85305, -0.00167934, 0.906991", "-4.91421, 21.4016, -0.00167934, 0.906991", "-8.56637, 35.9502, -0.00167934, 0.906991" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "0.924644, 14.9765, -5.71457, 0.36", "1.56962, 15.5362, -6.01471, 0.36", "2.33746, 16.148, -6.44294, 0.48", "2.90737, 16.5828, -6.79313, 0.48", "3.53342, 17.0521, -7.17432, 0.48", "4.69197, 17.9148, -7.84078, 0.48", "5.19017, 18.3027, -8.18129, 0.96", "5.58798, 18.6423, -8.52108, 0.96", "6.18453, 19.2405, -9.17191, 0.48", "6.49384, 19.5911, -9.5469, 0.48", "6.78123, 19.9297, -9.94578, 0.48", "7.64171, 21.0225, -11.1967, 0.36", "7.92347, 21.3815, -11.6519, 0.36", "8.28054, 21.8143, -12.2226, 0.84", "8.59571, 22.1625, -12.7083, 0.84", "9.51461, 23.0481, -14.0282, 0.48", "9.71641, 23.2134, -14.2726, 0.48", "10.417, 23.6935, -14.9358, 0.96", "10.8712, 23.9824, -15.3396, 1.32", "11.4623, 24.369, -15.8534, 1.08", "12.2418, 24.9699, -16.5446, 0.12", "12.7308, 25.438, -16.9781, 0.12", "12.876, 25.6021, -17.1333, 0.48", "13.3542, 26.2053, -17.6874, 0.72", "13.6439, 26.6013, -18.0531, 0.12", "14.043, 27.178, -18.5374, 0.12", "14.4353, 27.7688, -18.9737, 0.48", "14.9503, 28.5321, -19.5008, 0.72", "15.3757, 29.1233, -19.8582, 0.12", "15.9245, 29.8134, -20.1907, 0.12", "16.4068, 30.384, -20.4071, 0.96", "16.6871, 30.7045, -20.5019, 1.08", "17.3451, 31.4876, -20.6551, 0.6", "17.9463, 32.245, -20.7486, 0.6", "18.6064, 33.1255, -20.9184, 0.36", "19.2095, 33.9476, -21.1077, 0.24", "19.5554, 34.4297, -21.2556, 0.84", "19.7682, 34.731, -21.3623, 1.08", "20.1395, 35.2747, -21.5974, 0.6", "21.0919, 36.7057, -22.4253, 0.24", "21.4484, 37.2801, -22.8099, 0.24", "21.7358, 37.7722, -23.1564, 0.72", "22.0247, 38.3017, -23.5241, 1.2", "22.3721, 38.9821, -23.9882, 0.6", "22.8095, 39.86, -24.5294, 0.12", "23.208, 40.665, -24.9545, 0.12", "23.4005, 41.0641, -25.1684, 0.36", "23.541, 41.3595, -25.308, 0.36", "23.8236, 41.9306, -25.5654, 0.12", "24.2759, 42.7803, -25.9774, 0.12", "24.6497, 43.434, -26.3116, 0.84", "24.771, 43.6157, -26.4163, 1.2", "25.2129, 44.2052, -26.7627, 1.2", "25.696, 44.8058, -27.1398, 0.96", "26.4232, 45.6839, -27.6847, 0.36", "26.9464, 46.2993, -28.205, 0.36", "27.347, 46.7433, -28.671, 0.36", "27.6258, 47.0336, -29.0231, 0.36", "28.1877, 47.5878, -29.779, 0.6", "28.413, 47.8029, -30.0803, 0.84", "29.6165, 48.9487, -31.6456, 0.84", "30.0713, 49.3805, -32.2583, 0.12", "30.3321, 49.6468, -32.6019, 0.12", "30.5149, 49.8332, -32.8177, 0.12", "30.7808, 50.0996, -33.0423, 0.6", "31.1113, 50.4358, -33.2385, 0.6", "31.4535, 50.7996, -33.3532, 0.12", "31.8466, 51.2279, -33.4851, 0.12", "32.3341, 51.768, -33.6646, 0.72", "32.8265, 52.3406, -33.8552, 0.96", "33.223, 52.8303, -34.0671, 0.12", "33.801, 53.5195, -34.4118, 0.12", "34.1047, 53.8804, -34.6117, 0.84", "34.4051, 54.2394, -34.8142, 0.96", "34.6954, 54.5981, -35.0024, 0.48", "35.3893, 55.4914, -35.4931, 0.12", "35.9401, 56.2246, -35.9038, 0.12", "36.5128, 57.0544, -36.3428, 0.12", "36.7236, 57.399, -36.512, 0.96", "36.9562, 57.8224, -36.7407, 0.96", "37.2551, 58.4408, -37.0634, 0.24", "37.3979, 58.782, -37.2052, 0.12", "37.677, 59.5638, -37.5034, 0.12", "37.9057, 60.2272, -37.7255, 0.72", "38.3977, 61.6356, -38.1554, 0.12", "38.636, 62.3097, -38.3339, 0.12", "39.2423, 63.9644, -38.7227, 0.12", "39.503, 64.6706, -38.9125, 0.12", "39.7613, 65.3615, -39.1196, 0.12", "39.8742, 65.6757, -39.2144, 0.96", "40.0226, 66.1489, -39.3411, 1.32", "40.184, 66.7646, -39.5549, 1.32", "40.4404, 68.1264, -40.147, 0.12", "40.5544, 68.9264, -40.5049, 0.12", "40.5988, 69.3901, -40.704, 0.12", "40.6379, 70.0716, -40.9841, 0.84", "40.6577, 70.8236, -41.2607, 0.12", "40.6611, 71.6047, -41.5183, 0.12", "40.6612, 72.3159, -41.7243, 0.12", "40.6643, 72.7917, -41.8884, 0.84", "40.6995, 73.411, -42.1173, 0.12", "40.7859, 74.0868, -42.3734, 0.12", "40.9275, 74.793, -42.6234, 0.72", "41.088, 75.3519, -42.8263, 0.72", "41.2954, 75.8937, -43.0451, 0.12", "41.5638, 76.4833, -43.2853, 0.12", "41.7979, 76.9467, -43.4545, 0.24", "42.04, 77.3732, -43.6673, 0.24", "42.2754, 77.7799, -43.9052, 0.24", "42.6252, 78.4103, -44.3078, 0.72", "42.7755, 78.6929, -44.5007, 1.2", "43.0262, 79.1827, -44.8581, 1.2", "43.7464, 80.5863, -45.9338, 0.12", "44.157, 81.3465, -46.5301, 0.12", "44.398, 81.7672, -46.88, 0.48", "44.6362, 82.1415, -47.2057, 0.12", "44.8344, 82.4289, -47.4638, 0.12", "45.1645, 82.8595, -47.8427, 0.6", "45.3414, 83.0595, -48.0407, 0.6", "46.075, 83.7616, -48.9906, 0.12", "46.5096, 84.1602, -49.5928, 0.12", "46.5908, 84.2379, -49.7091, 0.72", "46.8569, 84.5002, -50.09, 0.72", "47.7722, 85.3969, -51.509, 0.6", "48.2449, 85.8669, -52.2448, 0.12", "48.5529, 86.186, -52.7098, 0.12", "48.7882, 86.4474, -53.0994, 0.12", "49.0495, 86.7755, -53.5259, 0.6", "49.8851, 87.8967, -54.7515, 0.12", "50.2315, 88.4439, -55.1605, 0.12", "50.4801, 88.8942, -55.4419, 0.72", "51.0648, 90.0962, -56.1354, 0.12", "51.5345, 91.1804, -56.6909, 0.12", "51.822, 91.946, -57.0068, 0.12", "52.3725, 93.6256, -57.5443, 0.12", "52.5954, 94.3767, -57.77, 0.84", "52.7952, 95.123, -57.9559, 0.12", "53.1166, 96.4238, -58.1959, 0.12", "53.2701, 97.0994, -58.3199, 0.6", "53.4325, 97.8312, -58.4438, 0.12", "53.5442, 98.257, -58.5062, 0.12", "53.8962, 99.4469, -58.6306, 0.12", "54.1187, 100.127, -58.6886, 0.72", "54.356, 100.825, -58.7464, 0.12", "54.8646, 102.173, -58.876, 0.24", "54.9928, 102.495, -58.9006, 0.24", "55.0954, 102.749, -58.9219, 0.12", "55.5805, 103.903, -59.0198, 0.12", "55.8312, 104.475, -59.0608, 0.12", "56.17, 105.174, -59.0944, 0.12", "56.225, 105.283, -59.0966, 0.72", "56.5134, 105.837, -59.0992, 0.84", "56.8234, 106.413, -59.0909, 0.12", "57.3779, 107.385, -59.0652, 0.12", "57.9511, 108.363, -59.0511, 0.12", "58.197, 108.791, -59.0492, 0.12", "58.3897, 109.127, -59.0497, 0.72", "58.8018, 109.835, -59.055, 0.84", "59.0876, 110.339, -59.0618, 0.12", "59.6939, 111.433, -59.0613, 0.12", "60.2708, 112.491, -59.0736, 0.12", "60.5934, 113.089, -59.0841, 0.12", "60.7629, 113.39, -59.0898, 0.6", "61.1817, 114.083, -59.107, 0.72", "61.4623, 114.526, -59.1172, 0.12", "62.4039, 115.947, -59.1647, 0.12", "62.6794, 116.355, -59.1809, 0.12", "63.2866, 117.259, -59.2167, 0.12", "63.5776, 117.714, -59.2301, 0.84", "63.7781, 118.04, -59.2203, 0.96", "64.0508, 118.512, -59.1808, 0.96", "64.452, 119.219, -59.0778, 0.6", "64.8253, 119.89, -58.9712, 0.6", "65.3634, 120.896, -58.8026, 0.6", "65.8647, 121.825, -58.6381, 0.12", "66.5325, 123.057, -58.4286, 0.12", "67.1811, 124.266, -58.2257, 0.12", "67.3429, 124.568, -58.1768, 0.36", "67.5469, 124.955, -58.122, 0.36", "67.6723, 125.198, -58.0984, 0.12", "68.0734, 125.997, -58.0698, 0.12", "68.1782, 126.219, -58.062, 0.36", "68.3227, 126.543, -58.0513, 0.12", "68.6059, 127.139, -58.0325, 0.12", "69.09, 128.056, -58.0287, 0.12", "69.3991, 128.583, -58.0387, 0.48", "69.7567, 129.122, -58.0565, 0.48", "69.9165, 129.342, -58.0666, 0.12", "70.3935, 129.955, -58.0978, 0.12", "70.8469, 130.49, -58.1247, 0.12", "71.2516, 130.94, -58.1454, 0.6", "71.8276, 131.572, -58.1688, 0.72", "72.2297, 132.013, -58.2168, 0.36", "72.7348, 132.596, -58.3035, 0.36", "73.3716, 133.384, -58.4383, 0.48", "73.686, 133.785, -58.5103, 0.24", "73.9949, 134.189, -58.593, 0.24", "74.8278, 135.289, -58.8398, 0.24", "75.2206, 135.802, -58.9618, 0.24", "75.7453, 136.473, -59.1185, 0.36", "75.9759, 136.772, -59.1897, 0.12", "76.2383, 137.115, -59.2609, 0.12", "76.5651, 137.544, -59.3275, 0.24", "76.7092, 137.739, -59.3467, 0.12", "77.1946, 138.455, -59.4389, 0.12", "77.607, 139.122, -59.5241, 0.6", "77.9579, 139.728, -59.5948, 0.72", "78.1734, 140.111, -59.6358, 0.72", "78.4396, 140.599, -59.681, 0.12", "79.0359, 141.707, -59.7437, 0.12", "79.5953, 142.787, -59.763, 0.12", "79.8752, 143.323, -59.7507, 0.48", "80.0392, 143.627, -59.7383, 0.12", "80.3913, 144.246, -59.7012, 0.12", "80.8418, 144.976, -59.6712, 0.12", "81.3832, 145.797, -59.6762, 0.12", "81.7206, 146.306, -59.6991, 0.12", "82.0547, 146.816, -59.7134, 0.6", "82.3796, 147.332, -59.7257, 0.6", "82.8538, 148.103, -59.7411, 0.12", "83.6795, 149.537, -59.7638, 0.12", "84.3577, 150.842, -59.7576, 0.12", "84.6666, 151.537, -59.7582, 0.72", "84.819, 151.96, -59.7585, 0.72", "84.9392, 152.395, -59.7555, 0.24", "85.1611, 153.502, -59.759, 0.24", "85.2438, 154.24, -59.7677, 0.24", "85.2973, 154.886, -59.7787, 0.48", "85.3636, 155.626, -59.7873, 0.6", "85.4044, 155.973, -59.7768, 0.6", "85.4786, 156.64, -59.7365, 0.6", "85.5971, 158.097, -59.6019, 0.12", "85.6462, 158.986, -59.4682, 0.12", "85.6628, 159.959, -59.2894, 0.12", "85.661, 160.876, -59.1182, 0.12", "85.6583, 161.048, -59.0874, 0.36", "85.6177, 162.311, -58.8715, 0.36", "85.5789, 163.012, -58.7953, 0.12", "85.487, 164.253, -58.6548, 0.12", "85.4579, 164.621, -58.6141, 0.48", "85.4151, 165.238, -58.5532, 0.48", "85.4114, 165.514, -58.532, 0.12", "85.4459, 166.629, -58.4793, 0.12", "85.4501, 166.743, -58.4798, 0.72", "85.4738, 167.237, -58.4894, 0.12", "85.544, 168.215, -58.5155, 0.12", "85.6629, 169.228, -58.5455, 0.12", "85.8155, 170.078, -58.5795, 0.36", "86.0109, 170.84, -58.6919, 0.12", "86.3777, 172.001, -58.9468, 0.12", "86.8459, 173.234, -59.289, 0.48", "87.2628, 174.125, -59.6188, 0.48", "87.7198, 174.91, -59.9776, 0.84", "88.9616, 176.622, -60.9508, 0.24", "89.5422, 177.277, -61.3942, 0.12", "89.9224, 177.627, -61.682, 0.48", "90.5535, 178.116, -62.1393, 0.36", "91.0473, 178.464, -62.5461, 0.36", "91.6346, 178.838, -62.9956, 0.72", "92.0282, 179.063, -63.2824, 0.96", "92.5401, 179.339, -63.6591, 0.96", "93.2141, 179.701, -64.1241, 1.08", "95.1366, 180.767, -65.3495, 0.12", "96.0483, 181.261, -65.8983, 0.12", "96.8091, 181.656, -66.2896, 0.36", "97.6856, 182.101, -66.7638, 0.12", "98.4863, 182.495, -67.1692, 0.12", "98.7134, 182.601, -67.2566, 0.36", "99.2673, 182.831, -67.3938, 0.12", "99.8659, 183.04, -67.611, 0.12", "101.165, 183.486, -68.1457, 0.36", "101.618, 183.639, -68.3749, 0.6", "102.157, 183.854, -68.642, 1.08", "102.872, 184.174, -68.9606, 0.24", "103.722, 184.573, -69.2867, 0.12", "104.172, 184.789, -69.4431, 0.48", "104.401, 184.91, -69.5045, 0.12", "105.65, 185.675, -69.8822, 0.12", "105.981, 185.93, -69.99, 0.6", "106.236, 186.186, -70.1115, 0.6", "106.767, 186.896, -70.4941, 0.12", "107.069, 187.411, -70.817, 0.12", "107.259, 187.878, -71.1296, 0.12", "107.362, 188.472, -71.5081, 0.48", "107.409, 189.834, -72.4017, 0.12", "107.372, 190.43, -72.8245, 0.12", "107.322, 190.847, -73.0838, 0.36", "107.276, 191.187, -73.2755, 0.12", "107.139, 192.267, -73.8299, 0.12", "106.975, 193.825, -74.5603, 0.72", "106.926, 194.903, -74.933, 0.12", "106.921, 197.015, -75.593, 0.12", "106.937, 197.957, -75.8788, 0.12", "106.942, 198.095, -75.9172, 0.48", "106.963, 198.364, -75.9743, 0.12", "107.287, 201.181, -76.1589, 0.12", "107.306, 201.303, -76.1566, 0.48" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.924644, 14.9765, -5.71457, 1.08", "0.852411, 15.8443, -5.4583, 1.08", "0.769235, 16.8572, -5.1755, 1.08", "0.649256, 18.2716, -4.818, 1.08", "0.560982, 19.3123, -4.55498, 0.84", "0.468808, 20.3989, -4.28034, 0.36", "0.427702, 20.8835, -4.15786, 0.36", "0.385612, 21.3491, -4.03506, 0.36", "0.33062, 22.0142, -3.84156, 0.6" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.392844, -11.0525, 7.80511, 1.32", "-0.410998, -11.5664, 7.77533, 1.32", "-0.419423, -11.8151, 7.75346, 1.44", "-0.439391, -12.4325, 7.72097, 1.32", "-0.457092, -13.1921, 7.70202, 1.08", "-0.47529, -13.8062, 7.70287, 1.08", "-0.50902, -14.4811, 7.71449, 0.84", "-0.563147, -15.2181, 7.73772, 0.84", "-0.625057, -15.9381, 7.76768, 0.84", "-0.723115, -16.8076, 7.81336, 0.96", "-0.826793, -17.4521, 7.84344, 0.96", "-0.961365, -18.0985, 7.89831, 0.96", "-1.09504, -18.6365, 7.95983, 0.96", "-1.34969, -19.4912, 8.05881, 0.72", "-1.52792, -20.0158, 8.11483, 0.84", "-1.87265, -20.9552, 8.21894, 0.84", "-2.35672, -22.2421, 8.36559, 0.96", "-2.53891, -22.7175, 8.42713, 1.2", "-2.70567, -23.1288, 8.48945, 1.68", "-2.96846, -23.6826, 8.59589, 1.68" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.392844, -11.0525, 7.80511, 0.6", "0.0517465, -11.1998, 8.11379, 0.6", "0.815192, -11.4615, 8.92708, 0.48", "1.19532, -11.5876, 9.36743, 0.48", "2.13084, -11.9065, 10.4715, 0.48", "2.48594, -12.0496, 10.8952, 0.48", "3.00553, -12.2486, 11.5276, 1.32", "4.45148, -12.7932, 13.5087, 0.96", "4.66827, -12.8637, 13.8267, 0.36", "4.81007, -12.8851, 14.0629, 0.36", "5.1404, -12.8428, 14.6602, 0.36", "5.62669, -12.6404, 15.5751, 0.48", "6.02957, -12.3731, 16.283, 0.48", "6.25157, -12.2182, 16.6072, 0.48", "6.74805, -11.8946, 17.3206, 0.12", "6.91839, -11.7915, 17.5381, 0.12", "7.27058, -11.5784, 17.9118, 0.48", "7.62175, -11.3978, 18.2048, 0.48", "8.27415, -11.0816, 18.6125, 0.6", "8.70553, -10.8567, 18.8248, 0.12", "9.25111, -10.5459, 19.0247, 0.48", "10.0226, -10.0523, 19.2465, 0.48", "10.3058, -9.84834, 19.3159, 0.48", "10.7144, -9.50735, 19.3854, 0.48", "11.165, -9.06227, 19.4385, 0.48", "11.928, -8.19701, 19.5217, 0.48", "12.609, -7.35004, 19.5839, 0.48", "13.2822, -6.46717, 19.6254, 0.48", "13.7964, -5.73071, 19.6441, 0.12", "14.1697, -5.12704, 19.6453, 0.12", "14.4201, -4.68629, 19.6501, 0.12", "14.7144, -4.11387, 19.658, 0.84", "14.9275, -3.74092, 19.6784, 1.2", "15.1861, -3.42264, 19.7394, 1.44", "15.7753, -2.91605, 19.9224, 0.72", "16.3501, -2.51166, 20.1014, 0.36", "16.7735, -2.23755, 20.2644, 0.48", "17.3212, -1.87277, 20.5068, 0.48", "18.2471, -1.22228, 20.9462, 0.36", "18.8121, -0.802691, 21.2205, 0.36", "19.1429, -0.557428, 21.3852, 0.36", "20.0665, 0.182202, 21.8454, 0.12", "20.5351, 0.627515, 22.111, 1.08", "20.7952, 0.950729, 22.2806, 1.2", "21.0317, 1.36611, 22.4432, 1.08", "27.9104, 4.0733, 25.9592, 1.08", "34.008, 8.33651, 29.5212, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.469645, 40.1026, 13.4392, 0.12", "0.314179, 41.5576, 13.1137, 0.12", "1.03476, 43.0113, 12.8243, 0.12", "1.496, 43.9944, 12.6439, 0.12", "2.12449, 45.3932, 12.4115, 0.12", "2.55304, 46.3396, 12.1732, 0.12", "3.18879, 47.7311, 11.7533, 0.12", "3.74121, 48.9469, 11.3669, 0.12", "3.9524, 49.4088, 11.1571, 0.12", "4.41421, 50.4816, 10.5308, 0.96", "5.15525, 52.4477, 9.1702, 0.12", "5.28829, 52.8177, 8.88249, 0.12", "5.40841, 53.123, 8.61083, 0.36", "5.81956, 54.0859, 7.7075, 0.12", "5.93741, 54.3495, 7.47156, 0.12", "6.35644, 55.2858, 6.76628, 0.12", "6.55135, 55.7393, 6.52609, 0.12", "6.87097, 56.4751, 6.17068, 0.12", "7.08769, 56.9735, 5.97438, 0.12", "7.46012, 57.8551, 5.67972, 0.12", "8.00494, 59.2658, 5.0333, 0.12", "8.25184, 59.9832, 4.62929, 0.12", "8.43213, 60.5792, 4.26585, 0.12", "8.80939, 62.0006, 3.31119, 0.12", "8.95109, 62.6202, 2.86477, 1.2", "9.34642, 64.9132, 1.23583, 0.12", "9.49369, 66.176, 0.345081, 0.12", "9.51428, 66.3978, 0.189647, 0.48", "9.53674, 67.1077, -0.410123, 0.12", "9.4996, 67.6199, -0.869054, 0.12", "9.24146, 68.7975, -2.11169, 0.12", "9.06215, 69.3246, -2.70884, 1.2", "8.94504, 69.5487, -3.04633, 1.2", "7.7734, 71.3146, -6.16131, 0.12", "7.26716, 71.9172, -7.35075, 0.12", "5.85516, 73.2866, -10.8295, 0.12", "5.69503, 73.4127, -11.2529, 0.12", "4.95778, 74.0027, -13.5168, 0.6", "4.8583, 74.0893, -13.8657, 0.6", "4.70301, 74.2953, -14.7745, 0.6", "4.9226, 74.7809, -16.9824, 0.12", "5.30104, 75.036, -17.2846, 0.12", "6.67846, 76.2903, -17.9737, 0.12", "7.21451, 76.9582, -18.1375, 0.6", "7.60992, 77.6118, -18.2288, 0.12", "8.06612, 78.4463, -18.2827, 0.12", "8.4598, 79.4656, -18.2388, 0.12", "8.75214, 80.6679, -18.1887, 0.12", "8.81104, 81.793, -18.1503, 0.12", "8.7879, 82.5659, -18.1503, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.469645, 40.1026, 13.4392, 0.72", "-0.755241, 40.7014, 13.4899, 0.72", "-1.04775, 41.337, 13.541, 0.84", "-1.26088, 41.8056, 13.5771, 1.08", "-1.59012, 42.5366, 13.6038, 0.72", "-1.94639, 43.3686, 13.6175, 0.48", "-2.19094, 43.9846, 13.6197, 0.48", "-2.37739, 44.5129, 13.6151, 0.72", "-2.52571, 44.9583, 13.6098, 0.96", "-2.76344, 45.71, 13.5988, 0.84", "-2.94814, 46.3156, 13.5943, 0.72", "-3.15282, 47.0128, 13.6074, 0.72", "-3.42883, 47.8673, 13.6394, 0.72", "-3.52847, 48.1515, 13.6718, 0.72", "-3.67009, 48.5527, 13.7466, 0.72", "-3.98443, 49.4404, 13.9548, 0.6", "-4.21305, 50.044, 14.0607, 0.6", "-4.60873, 51.0585, 14.2548, 0.48", "-5.00665, 52.0824, 14.4478, 0.48", "-5.39737, 53.0497, 14.5986, 0.48", "-5.88631, 54.2298, 14.7507, 0.6", "-6.54242, 55.8411, 14.9494, 0.6", "-7.0866, 57.2311, 15.1048, 0.72", "-7.50973, 58.3692, 15.2111, 0.6", "-7.86276, 59.315, 15.276, 0.12", "-8.08471, 59.9016, 15.3236, 0.12", "-8.45717, 60.904, 15.421, 0.12", "-8.8849, 62.143, 15.5624, 0.24", "-9.22578, 63.1756, 15.6254, 0.24", "-9.39133, 63.7149, 15.6656, 0.24", "-9.50574, 64.1223, 15.7019, 0.6", "-9.66587, 64.6543, 15.7326, 0.12", "-9.82728, 65.1445, 15.7376, 0.24", "-9.99336, 65.6534, 15.7363, 0.24", "-10.0397, 65.7945, 15.7349, 0.24", "-10.2447, 66.3899, 15.732, 0.36", "-10.6146, 67.3977, 15.7592, 0.36", "-10.9068, 68.1392, 15.8, 0.36", "-11.0603, 68.4667, 15.8322, 0.48", "-11.5174, 69.3277, 15.9463, 0.48", "-11.9331, 70.0394, 16.0601, 0.48", "-12.2667, 70.5678, 16.1693, 0.6", "-12.5372, 70.9903, 16.2738, 0.72", "-13.0606, 71.87, 16.5048, 0.36", "-13.4407, 72.5878, 16.6871, 0.36", "-13.4829, 72.681, 16.7081, 0.48", "-13.701, 73.2776, 16.8168, 0.36", "-13.9221, 74.0827, 16.9183, 0.36", "-14.1328, 75.1062, 17.0067, 0.36", "-14.2841, 76.0554, 17.0549, 0.36", "-14.3833, 76.6878, 17.0783, 0.36", "-14.4666, 77.1987, 17.0902, 0.6", "-14.6616, 78.3316, 17.099, 0.84", "-14.7621, 78.8751, 17.1022, 0.36", "-14.9313, 79.7523, 17.1081, 0.36", "-15.0938, 80.6287, 17.1144, 0.36", "-15.3145, 81.8683, 17.1247, 0.36", "-15.4159, 82.4921, 17.1306, 0.48", "-15.4599, 82.805, 17.134, 0.48", "-15.4941, 83.1365, 17.1379, 0.24", "-15.5583, 84.0798, 17.1555, 0.24", "-15.5859, 84.7113, 17.1736, 0.6", "-15.6128, 85.4469, 17.2004, 0.6", "-15.6311, 85.9732, 17.2219, 0.48", "-15.6667, 86.9201, 17.2655, 0.48", "-15.6873, 87.506, 17.2938, 0.12", "-15.7261, 88.6546, 17.3474, 0.12", "-15.761, 89.5929, 17.3871, 0.12", "-15.7695, 89.8034, 17.3948, 0.72", "-15.8009, 90.534, 17.4166, 0.84", "-15.8486, 91.4871, 17.4291, 0.36", "-15.928, 92.9468, 17.4243, 0.36", "-15.9853, 93.8848, 17.416, 0.36", "-16.04, 94.6205, 17.4067, 0.36", "-16.1074, 95.3539, 17.398, 0.48", "-16.2243, 96.4137, 17.3867, 0.96", "-16.2636, 96.7273, 17.3844, 0.96", "-16.3615, 97.4493, 17.3817, 0.36", "-16.4872, 98.3088, 17.3829, 0.36", "-16.6932, 99.6626, 17.393, 0.36", "-16.8885, 100.907, 17.411, 0.36", "-16.9584, 101.322, 17.4209, 0.48", "-17.0203, 101.649, 17.4287, 0.36", "-17.1554, 102.266, 17.4382, 0.36", "-17.3754, 103.184, 17.4458, 0.48", "-17.4644, 103.504, 17.4469, 0.36", "-17.9137, 105.029, 17.4502, 0.36", "-18.3272, 106.388, 17.4517, 0.48", "-18.6384, 107.385, 17.4509, 0.96", "-18.7734, 107.796, 17.4496, 0.6", "-19.1281, 108.809, 17.4429, 0.72", "-22.1197, 117.02, 17.5745, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.9984, -18.5598, -10.2241, 1.56", "-3.89869, -18.3815, -11.9259, 1.56", "-3.4628, -17.602, -19.3653, 1.44", "-3.10098, -16.9549, -25.5404, 2.04", "-2.97728, -16.7337, -27.6516, 1.32", "-2.92643, -16.6427, -28.5196, 1.2", "-2.89785, -16.5916, -29.0073, 0.12" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.9984, -18.5598, -10.2241, 0.48", "-4.31275, -20.0067, -9.9796, 0.48", "-4.44044, -20.5664, -9.85987, 0.48", "-4.62807, -21.3786, -9.67809, 0.72", "-4.89078, -22.5051, -9.48011, 1.2", "-5.18779, -23.8045, -9.25425, 0.6", "-5.40099, -24.7771, -9.09292, 0.36", "-5.64533, -25.8514, -8.93906, 0.36", "-5.8334, -26.7131, -8.82152, 0.48", "-6.08787, -28.0315, -8.628, 0.84", "-6.2687, -29.2787, -8.45584, 0.72", "-6.34511, -30.1261, -8.34729, 0.72", "-6.39292, -31.0758, -8.21977, 0.72", "-6.41953, -31.7738, -8.13623, 0.72", "-6.44205, -32.9822, -7.97776, 0.84", "-6.43458, -34.2424, -7.77923, 0.84", "-6.41354, -35.1528, -7.63918, 0.48", "-6.39008, -35.8735, -7.52705, 0.6", "-6.36273, -36.5818, -7.41295, 1.08", "-6.34622, -37.1699, -7.31819, 1.32", "-6.32835, -38.5734, -7.13073, 0.96", "-6.31272, -39.7812, -6.95826, 0.96", "-6.28609, -41.2082, -6.76009, 0.72", "-6.25333, -42.8587, -6.53602, 0.72", "-6.22089, -44.3166, -6.35155, 0.96", "-6.18859, -45.7922, -6.1734, 1.2", "-6.16977, -46.9877, -6.05248, 0.6", "-6.16034, -47.7009, -5.98733, 0.6", "-6.14177, -48.8649, -5.87462, 0.6", "-6.12283, -49.7106, -5.81617, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.9984, -18.5598, -10.2241, 1.44", "-3.64623, -19.2788, -10.5755, 1.44", "-3.20517, -20.5709, -11.0916, 0.72", "-3.12028, -21.0203, -11.2318, 0.12", "-3.10449, -21.3472, -11.3069, 0.24", "-3.11582, -21.6091, -11.3504, 0.24", "-3.18088, -22.3887, -11.4504, 0.24", "-3.28442, -22.97, -11.5135, 0.48", "-3.41625, -23.5507, -11.5747, 0.6", "-3.58309, -24.2635, -11.6864, 0.36", "-3.77498, -25.0549, -11.8371, 0.36", "-3.90464, -25.6196, -11.9601, 0.36", "-4.04435, -26.3795, -12.162, 0.72", "-4.13735, -27.1596, -12.3917, 0.36", "-4.16261, -27.7335, -12.578, 0.36", "-4.14705, -28.131, -12.7093, 0.6", "-4.12439, -28.4651, -12.827, 0.6", "-4.08863, -29.1131, -13.0614, 0.36", "-4.07532, -29.7597, -13.278, 0.36", "-4.08671, -30.35, -13.4888, 0.36", "-4.11199, -30.9873, -13.7281, 0.48", "-4.18262, -31.8981, -14.0954, 0.6", "-4.27475, -32.5235, -14.3507, 0.84", "-4.37654, -32.978, -14.5341, 0.84", "-4.57347, -33.6578, -14.8024, 0.36", "-4.85573, -34.5148, -15.1354, 0.36", "-5.07728, -35.1552, -15.3785, 0.48", "-5.23766, -35.6863, -15.5549, 0.48", "-5.4366, -36.4218, -15.7866, 0.84", "-5.66796, -37.3377, -16.0792, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "18.3259, -9.96294, -10.4956, 0.6", "20.0932, -10.9219, -9.40404, 0.6", "20.9493, -11.3415, -9.05578, 0.6", "21.9917, -11.8476, -8.78556, 0.6", "22.6787, -12.1936, -8.67695, 0.6", "23.8399, -12.7798, -8.46035, 0.48", "24.4842, -13.1159, -8.33115, 0.84", "25.2273, -13.5227, -8.27263, 0.84", "26.0409, -13.9855, -8.21906, 0.36", "27.3781, -14.8754, -8.14293, 0.48", "28.4952, -15.7444, -8.0203, 0.96", "28.8124, -16.0442, -7.95945, 1.08", "29.4489, -16.7832, -7.83846, 0.48", "29.6873, -17.1091, -7.78265, 0.48", "30.1714, -17.8631, -7.64744, 0.72", "30.6129, -18.6603, -7.52305, 1.2", "31.2085, -19.8339, -7.37114, 1.32", "31.6528, -20.7091, -7.20858, 0.6", "32.1612, -21.7027, -6.95355, 0.96", "32.5373, -22.4179, -6.74456, 0.96", "32.9483, -23.179, -6.50683, 0.6", "33.3447, -23.9134, -6.26426, 0.6", "33.8796, -24.967, -5.90982, 0.72", "34.1913, -25.6419, -5.69162, 0.84", "34.6294, -26.677, -5.37892, 1.08", "35.0008, -27.641, -5.09339, 1.08", "35.3376, -28.5959, -4.82283, 0.48", "35.7755, -29.9306, -4.49057, 0.48", "36.0213, -30.7682, -4.31603, 0.48", "36.3356, -31.9412, -4.0611, 0.96", "36.6001, -33.0321, -3.79384, 0.96", "36.7978, -33.859, -3.58883, 0.6", "36.9959, -34.6721, -3.39546, 0.48", "37.1655, -35.3622, -3.23373, 0.6", "37.4605, -36.5142, -2.94936, 0.84", "37.7572, -37.6091, -2.68014, 0.6", "38.033, -38.5556, -2.44096, 0.48", "38.2373, -39.237, -2.27398, 0.48", "38.5317, -40.1748, -2.05428, 0.6", "38.8543, -41.0974, -1.86292, 0.96", "39.2696, -42.1968, -1.69199, 1.08", "39.6436, -43.1454, -1.56137, 0.84", "39.9623, -43.9703, -1.45082, 0.6", "40.2252, -44.6437, -1.37489, 0.48", "40.6264, -45.6599, -1.29366, 0.6", "41.028, -46.7136, -1.23949, 0.84", "41.3892, -47.6745, -1.19367, 0.96", "41.7352, -48.6172, -1.14399, 1.08", "42.0135, -49.4167, -1.09215, 0.72", "42.2567, -50.1946, -1.03196, 0.48", "42.502, -51.0421, -0.95165, 0.48", "42.6558, -51.5876, -0.886621, 0.48", "42.8833, -52.4375, -0.779551, 0.84", "42.9838, -52.8467, -0.723375, 0.96", "43.1654, -53.6927, -0.594074, 0.96", "43.3118, -54.3979, -0.465064, 0.6", "43.4058, -54.8415, -0.381208, 0.48", "43.6098, -55.8146, -0.211587, 0.48", "43.7623, -56.5115, -0.061605, 0.6", "43.9857, -57.4764, 0.176782, 0.84", "44.2164, -58.4789, 0.450885, 0.72", "44.4086, -59.302, 0.69027, 0.48", "44.6778, -60.428, 1.02803, 0.6", "44.9528, -61.4946, 1.34995, 0.48", "45.187, -62.3139, 1.59153, 0.72", "45.4405, -63.1189, 1.81681, 1.08", "45.6862, -63.8402, 2.00014, 0.6", "45.9918, -64.6684, 2.19353, 0.6", "46.3751, -65.6161, 2.4177, 0.6", "46.645, -66.2766, 2.55581, 0.6", "46.9419, -66.9819, 2.71927, 0.84", "47.2156, -67.6374, 2.88314, 0.84", "47.5275, -68.4739, 3.10474, 0.84", "47.8342, -69.4293, 3.33266, 0.48", "47.9832, -69.9803, 3.45065, 0.84", "48.1296, -70.67, 3.5806, 1.2", "48.2724, -71.5227, 3.71653, 1.44", "48.3933, -72.3863, 3.78932, 0.84", "48.4929, -73.3767, 3.76231, 0.48", "48.5133, -73.6991, 3.72771, 0.72", "48.5415, -74.2773, 3.63387, 0.84", "48.5683, -74.8456, 3.52316, 0.84", "48.6141, -75.8203, 3.30138, 0.6", "48.6786, -77.0242, 3.04062, 0.48", "48.7308, -78.04, 2.81248, 0.48", "48.7685, -78.6987, 2.66279, 0.6", "48.8209, -79.406, 2.50547, 0.72", "48.906, -80.2708, 2.33928, 0.72", "49.0531, -81.3945, 2.15312, 0.84", "49.2969, -82.7144, 1.95693, 0.84", "49.4847, -83.5595, 1.85814, 0.84", "49.6287, -84.1459, 1.81779, 0.6", "49.8997, -85.1603, 1.78386, 0.48", "50.1736, -86.1029, 1.79204, 0.48", "50.487, -87.1138, 1.83811, 0.48", "50.7774, -88.0302, 1.92849, 0.48", "50.9528, -88.6011, 1.99039, 0.48", "51.1208, -89.1696, 2.08654, 0.6", "51.4455, -90.3074, 2.34513, 0.6", "51.6391, -90.9896, 2.54071, 0.84", "51.7447, -91.3944, 2.6668, 1.08", "51.9286, -92.0945, 2.8345, 1.08", "52.2393, -93.2293, 2.99556, 0.6", "52.3795, -93.6586, 2.92048, 0.6", "52.5331, -94.002, 2.67453, 0.72", "52.7037, -94.3137, 2.31219, 0.84", "53.2729, -95.1726, 1.11687, 0.84", "53.7689, -95.7555, 0.117883, 1.08", "54.435, -96.3577, -1.13154, 0.72", "54.6814, -96.5263, -1.53556, 0.72", "55.2809, -96.859, -2.36571, 0.6", "55.6792, -97.0555, -2.80299, 0.6", "56.2759, -97.3615, -3.28285, 0.6", "56.7455, -97.6545, -3.5679, 0.6", "57.4193, -98.163, -3.8876, 0.6", "57.8827, -98.6418, -4.1321, 1.08", "58.3113, -99.2461, -4.3577, 1.08", "58.7255, -99.9753, -4.63537, 0.6", "59.0256, -100.566, -4.90609, 0.6", "59.223, -100.921, -5.11858, 0.6", "59.7352, -101.664, -5.76352, 0.6", "59.9923, -101.957, -6.08817, 0.6", "60.5613, -102.474, -6.75073, 0.84", "61.3208, -103.029, -7.52614, 0.84", "62.1556, -103.553, -8.29709, 0.96", "63.1146, -104.091, -9.10682, 0.84", "63.6322, -104.366, -9.48841, 0.6", "64.1633, -104.667, -9.83205, 0.72", "64.6152, -104.952, -10.0698, 0.72", "65.2776, -105.43, -10.3257, 0.48", "65.7839, -105.852, -10.482, 0.48", "66.3641, -106.394, -10.6171, 0.48", "67.0105, -107.067, -10.7726, 0.48", "67.7083, -107.885, -10.9304, 0.36", "68.3412, -108.69, -11.0471, 0.36", "68.761, -109.24, -11.1041, 0.6", "69.4285, -110.128, -11.1752, 0.6", "69.8137, -110.642, -11.21, 0.48", "70.4747, -111.504, -11.2424, 0.48", "71.1727, -112.383, -11.24, 0.48", "71.9641, -113.335, -11.2219, 0.48", "72.4343, -113.876, -11.1988, 0.6", "72.9388, -114.445, -11.1643, 0.6", "73.5614, -115.141, -11.1036, 0.84", "74.0241, -115.687, -11.0476, 0.48", "74.5134, -116.322, -10.9733, 0.48", "74.8041, -116.75, -10.9168, 0.48", "75.2209, -117.391, -10.8664, 0.72", "75.7176, -118.156, -10.8394, 0.84", "76.4324, -119.313, -10.8721, 0.48", "76.8352, -119.976, -10.9177, 0.48", "77.6048, -121.248, -11.0854, 0.48", "78.2115, -122.221, -11.2632, 0.6", "78.5544, -122.743, -11.3873, 0.6", "79.1118, -123.522, -11.6339, 0.48", "79.6449, -124.206, -11.8928, 0.48", "80.2077, -124.895, -12.1649, 0.84", "80.6535, -125.418, -12.3561, 0.84", "80.9066, -125.724, -12.4328, 0.84", "81.5061, -126.484, -12.5919, 0.6", "81.9385, -127.05, -12.6735, 0.48", "82.299, -127.567, -12.725, 0.48", "82.8067, -128.334, -12.791, 0.48", "83.2117, -128.986, -12.8514, 0.48", "83.6802, -129.742, -12.9108, 0.36", "84.1468, -130.471, -12.9358, 0.36", "84.4867, -130.958, -12.9258, 0.6", "85.0748, -131.756, -12.8733, 0.6", "85.57, -132.418, -12.7992, 0.6", "86.503, -133.617, -12.5621, 0.6", "87.4115, -134.728, -12.2566, 0.6", "88.2238, -135.703, -11.9474, 0.36", "88.5277, -136.075, -11.8159, 0.36", "89.2012, -136.978, -11.4765, 0.36", "89.8829, -138.0, -11.1086, 0.84", "90.3843, -138.847, -10.8306, 0.6", "90.9254, -139.835, -10.5641, 0.6", "91.3484, -140.633, -10.369, 0.36", "91.9536, -141.747, -10.1057, 0.36", "92.3592, -142.484, -9.94269, 0.36", "92.8539, -143.389, -9.775, 0.48", "93.713, -144.95, -9.49046, 0.48", "94.1519, -145.754, -9.34594, 0.48", "94.5784, -146.57, -9.22864, 0.72", "94.849, -147.144, -9.16043, 0.72", "95.1353, -147.983, -9.10096, 0.48", "95.3048, -149.06, -9.20849, 0.48", "95.3289, -149.76, -9.38786, 0.48", "95.3139, -150.806, -9.7575, 0.6", "95.2758, -151.645, -10.1392, 0.6", "95.2279, -152.647, -10.6747, 0.48", "95.1544, -154.654, -11.8969, 0.48", "95.1515, -155.328, -12.3394, 0.48", "95.1717, -155.583, -12.5109, 0.48", "95.3683, -156.741, -13.2592, 0.84", "95.5794, -157.601, -13.7783, 0.96", "95.8979, -158.678, -14.3615, 0.96", "96.0022, -159.052, -14.5198, 0.96", "96.2439, -160.124, -14.9555, 0.48", "96.3877, -160.894, -15.2401, 0.84", "96.543, -161.755, -15.5018, 0.48", "96.6888, -162.575, -15.7223, 0.48", "96.8205, -163.312, -15.8959, 0.6", "97.0711, -164.691, -16.228, 0.6", "97.2733, -165.793, -16.4757, 0.36", "97.4367, -166.59, -16.6575, 0.36", "97.548, -167.024, -16.7509, 0.6", "97.6732, -167.407, -16.8267, 0.6", "98.0185, -168.209, -16.9903, 0.24", "98.2549, -168.663, -17.0619, 0.24", "98.4113, -168.942, -17.1033, 0.24", "98.6286, -169.339, -17.1599, 0.48", "99.0208, -170.032, -17.2407, 0.36", "99.3105, -170.516, -17.2749, 0.36", "99.6156, -171.006, -17.2796, 0.36", "99.9924, -171.621, -17.2975, 0.6", "100.361, -172.231, -17.3129, 0.6", "100.686, -172.749, -17.3214, 0.6", "101.188, -173.513, -17.3168, 0.84", "101.69, -174.279, -17.3127, 0.84", "102.189, -175.078, -17.3008, 0.24", "102.485, -175.595, -17.2859, 0.24", "102.691, -175.947, -17.2713, 0.48", "103.13, -176.653, -17.2338, 0.48", "103.658, -177.4, -17.1841, 0.48", "104.224, -178.093, -17.1241, 0.24", "104.527, -178.428, -17.085, 0.24", "105.365, -179.317, -16.9869, 0.24", "105.676, -179.645, -16.9522, 0.6", "106.259, -180.239, -16.8941, 0.6", "106.757, -180.75, -16.8472, 0.6", "107.06, -181.072, -16.8277, 0.6", "107.706, -181.782, -16.8003, 0.36", "108.135, -182.258, -16.7917, 0.36", "108.411, -182.542, -16.7924, 0.72", "109.211, -183.278, -16.8107, 0.72", "109.91, -183.848, -16.8362, 0.72", "110.417, -184.23, -16.8561, 0.48", "111.159, -184.751, -16.8861, 0.48", "112.104, -185.391, -16.919, 0.48", "112.786, -185.846, -16.9273, 0.36", "113.457, -186.284, -16.9174, 0.36", "114.126, -186.751, -16.8778, 0.36", "114.444, -186.995, -16.8522, 0.6", "114.751, -187.254, -16.8204, 0.6", "115.357, -187.812, -16.7449, 0.72", "115.793, -188.217, -16.6891, 0.48", "116.125, -188.52, -16.6489, 0.48", "116.514, -188.854, -16.6191, 0.6", "117.132, -189.371, -16.5925, 0.6", "117.466, -189.655, -16.5858, 0.36", "117.941, -190.081, -16.5838, 0.48", "118.234, -190.358, -16.5875, 0.48", "119.003, -191.105, -16.6047, 0.36", "119.424, -191.53, -16.6154, 0.36", "119.954, -192.09, -16.6244, 0.6", "120.598, -192.788, -16.6279, 0.6", "121.09, -193.367, -16.6177, 0.36", "121.466, -193.847, -16.5993, 0.36", "121.818, -194.336, -16.5891, 0.36", "122.456, -195.308, -16.5837, 0.36", "122.767, -195.826, -16.5832, 0.72", "123.18, -196.602, -16.5999, 0.72", "123.569, -197.423, -16.6221, 0.84", "124.173, -198.82, -16.6665, 0.48", "124.608, -199.903, -16.7265, 0.36", "124.859, -200.569, -16.7731, 0.36", "125.232, -201.569, -16.8456, 0.72", "125.561, -202.411, -16.8997, 0.72", "125.979, -203.421, -16.9392, 0.72", "126.384, -204.313, -16.9421, 0.6", "126.731, -204.964, -16.9368, 0.12", "127.159, -205.677, -16.912, 0.12", "127.43, -206.083, -16.8794, 0.48", "127.861, -206.651, -16.8262, 0.6", "128.318, -207.208, -16.7621, 0.48", "128.91, -207.892, -16.6662, 0.36", "129.205, -208.235, -16.6219, 0.36", "129.867, -209.021, -16.5304, 0.36", "130.546, -209.784, -16.3592, 0.36", "131.076, -210.309, -16.1671, 0.36", "131.67, -210.81, -15.902, 0.36", "132.094, -211.121, -15.6849, 0.72", "132.69, -211.523, -15.3495, 1.08", "134.243, -212.507, -14.4024, 0.96", "134.848, -212.889, -14.0459, 0.36", "135.193, -213.109, -13.8636, 0.36", "135.784, -213.524, -13.6143, 0.36", "136.326, -213.968, -13.4724, 0.36", "136.835, -214.468, -13.4464, 0.36", "137.427, -215.073, -13.5228, 0.48", "137.835, -215.476, -13.5804, 0.48", "138.295, -215.874, -13.6421, 0.36", "138.782, -216.225, -13.6753, 0.36", "139.587, -216.727, -13.6834, 0.36", "141.025, -217.533, -13.6114, 0.36", "141.657, -217.852, -13.5443, 0.36", "142.286, -218.158, -13.4627, 0.72", "143.248, -218.639, -13.3086, 0.6", "143.585, -218.828, -13.2466, 0.48", "144.174, -219.203, -13.1255, 0.48", "145.105, -219.84, -12.9404, 0.48", "145.77, -220.296, -12.8025, 0.6", "146.184, -220.586, -12.7243, 0.96", "146.747, -220.99, -12.639, 1.08", "147.221, -221.323, -12.5579, 0.84", "148.054, -221.913, -12.3968, 0.48", "148.713, -222.364, -12.2622, 0.24", "149.566, -222.88, -12.1056, 0.36", "150.06, -223.155, -12.0268, 0.36", "150.448, -223.368, -11.9719, 0.6", "150.977, -223.709, -11.8987, 0.6", "151.315, -223.966, -11.86, 0.36", "151.873, -224.429, -11.828, 0.24", "152.26, -224.767, -11.8028, 0.24", "152.565, -225.05, -11.794, 0.36", "152.959, -225.465, -11.7877, 0.36", "153.358, -225.925, -11.7856, 0.48", "153.842, -226.568, -11.7791, 0.48", "154.347, -227.34, -11.8093, 0.72", "154.697, -227.909, -11.8522, 0.72", "154.917, -228.279, -11.8868, 0.72", "155.27, -228.907, -11.9461, 0.6", "155.525, -229.408, -12.0033, 0.6", "155.943, -230.282, -12.1086, 0.48", "156.304, -231.039, -12.196, 0.36", "156.707, -231.844, -12.2735, 0.36", "157.06, -232.533, -12.3488, 0.36", "157.421, -233.265, -12.4254, 0.48", "157.641, -233.737, -12.4608, 0.48", "157.831, -234.225, -12.4673, 0.6", "157.994, -234.72, -12.466, 0.6", "158.146, -235.251, -12.4762, 0.6", "158.296, -235.831, -12.4869, 0.6", "158.49, -236.685, -12.4801, 0.48", "158.656, -237.555, -12.4918, 0.48", "158.777, -238.271, -12.5059, 0.6", "158.935, -239.206, -12.5419, 0.72", "159.071, -239.921, -12.593, 0.72", "159.345, -241.174, -12.7665, 0.72", "159.57, -242.03, -12.9117, 1.08", "159.771, -242.715, -13.0322, 1.08", "160.032, -243.547, -13.1697, 0.72", "160.428, -244.676, -13.3191, 0.48", "160.968, -246.068, -13.5088, 0.96", "161.576, -247.54, -13.7192, 0.36", "161.816, -248.132, -13.7891, 0.36", "162.04, -248.738, -13.841, 0.72", "162.512, -250.167, -13.891, 0.84", "162.77, -251.065, -13.8799, 0.84", "162.943, -251.776, -13.8465, 0.48", "163.142, -252.817, -13.7912, 0.48", "163.373, -254.243, -13.739, 0.48", "163.507, -255.283, -13.7056, 0.48", "163.585, -256.007, -13.6798, 0.48", "163.637, -256.593, -13.6674, 0.72", "163.702, -257.333, -13.6726, 0.72", "163.799, -258.495, -13.7405, 0.36", "163.819, -258.902, -13.7936, 0.36", "163.835, -259.492, -13.8903, 0.36", "163.869, -260.426, -14.0463, 0.24", "163.913, -261.717, -14.2369, 0.24", "163.929, -262.028, -14.2738, 0.72", "163.994, -262.878, -14.3197, 0.36", "164.092, -263.746, -14.3377, 0.36", "164.179, -264.346, -14.3392, 0.36", "164.325, -265.121, -14.3107, 0.48", "164.393, -265.428, -14.2999, 0.12", "164.676, -266.411, -14.1745, 0.12", "164.877, -266.95, -14.0559, 0.12", "165.108, -267.475, -13.9165, 0.84", "165.429, -268.101, -13.7398, 0.96", "165.803, -268.748, -13.5627, 0.96", "166.604, -270.032, -13.1215, 0.24", "166.932, -270.539, -12.9246, 0.48", "167.729, -271.708, -12.4423, 0.48", "168.647, -272.99, -11.8926, 0.48", "169.249, -273.807, -11.5572, 0.48", "170.238, -275.147, -11.0582, 0.48", "170.737, -275.834, -10.8431, 0.48", "171.203, -276.451, -10.5989, 0.84", "171.497, -276.825, -10.411, 0.84", "171.846, -277.239, -10.1583, 0.12", "172.339, -277.788, -9.7879, 0.12", "172.428, -277.874, -9.71788, 0.36", "173.376, -278.694, -8.75572, 0.12", "173.605, -278.899, -8.46237, 0.12", "174.05, -279.305, -7.84488, 0.12", "174.05, -279.305, -7.84488, 0.36", "174.647, -279.82, -6.82874, 0.12", "174.852, -280.019, -6.49883, 0.12", "175.042, -280.238, -6.18699, 0.72", "175.299, -280.597, -5.72787, 0.84", "176.093, -281.968, -4.20565, 0.6", "176.277, -282.311, -3.86555, 0.12", "176.569, -282.865, -3.40268, 0.12", "176.942, -283.498, -2.8896, 0.12", "177.336, -284.116, -2.43421, 0.12", "177.623, -284.552, -2.17716, 0.12", "177.623, -284.552, -2.17716, 0.6", "178.114, -285.268, -1.86242, 0.6", "178.654, -286.05, -1.5319, 0.48", "179.047, -286.602, -1.3182, 0.48", "179.581, -287.355, -1.0293, 0.48", "180.03, -288.023, -0.796277, 0.24", "180.48, -288.745, -0.575511, 0.24", "180.702, -289.103, -0.430825, 0.6", "181.01, -289.583, -0.20822, 0.72", "181.417, -290.172, 0.0916752, 0.72", "181.733, -290.589, 0.310672, 0.12", "182.116, -291.048, 0.546039, 0.12", "183.549, -292.59, 1.38005, 0.12", "183.974, -293.01, 1.60917, 0.96", "184.374, -293.385, 1.79963, 0.12", "184.97, -293.903, 2.02721, 0.12", "185.209, -294.099, 2.10103, 0.12", "185.532, -294.345, 2.16733, 0.6", "185.89, -294.613, 2.20794, 0.6", "186.458, -294.99, 2.32967, 0.48", "186.88, -295.249, 2.45321, 0.48", "187.531, -295.623, 2.66218, 0.72", "188.089, -295.931, 2.84153, 0.36", "188.691, -296.255, 3.03312, 0.12", "189.385, -296.617, 3.28734, 0.12", "189.645, -296.75, 3.3918, 0.48", "190.068, -296.984, 3.55466, 0.6", "190.688, -297.371, 3.77115, 0.72", "191.003, -297.587, 3.89344, 0.72", "191.856, -298.181, 4.25338, 0.12", "192.062, -298.327, 4.35358, 0.12", "192.683, -298.749, 4.70018, 0.12", "193.002, -298.956, 4.88998, 0.12", "193.678, -299.382, 5.32716, 0.48", "193.998, -299.575, 5.52837, 0.48", "194.345, -299.774, 5.72007, 0.96", "195.182, -300.206, 6.15591, 0.48", "195.605, -300.401, 6.35723, 0.48", "196.225, -300.659, 6.60251, 0.48", "196.664, -300.803, 6.78323, 0.48", "197.076, -300.873, 7.00008, 0.12", "197.198, -300.87, 7.06687, 0.12", "197.583, -300.809, 7.26848, 0.72", "197.967, -300.72, 7.4621, 0.72", "199.403, -300.37, 8.09459, 0.12", "200.142, -300.195, 8.38551, 0.12", "201.051, -300.008, 8.70839, 0.12", "201.342, -299.956, 8.80603, 0.12", "201.813, -299.869, 8.95624, 0.48", "202.586, -299.73, 9.15826, 0.48", "203.44, -299.585, 9.30734, 0.72", "204.031, -299.486, 9.40345, 0.84", "205.337, -299.248, 9.65483, 0.36", "206.157, -299.114, 9.81907, 0.12", "206.883, -299.018, 9.97344, 0.24", "207.561, -298.963, 10.1122, 0.24", "208.177, -298.971, 10.199, 0.24", "208.726, -299.018, 10.2347, 0.72", "209.526, -299.157, 10.1945, 0.72", "210.146, -299.304, 10.08, 0.72", "211.001, -299.529, 9.84144, 0.36", "211.804, -299.7, 9.53386, 0.48", "212.316, -299.761, 9.28369, 0.6", "213.024, -299.778, 8.86611, 0.6", "214.059, -299.711, 8.1168, 0.12", "214.385, -299.67, 7.84718, 0.12", "214.947, -299.593, 7.35194, 0.12", "215.426, -299.543, 6.94985, 0.48", "215.577, -299.546, 6.82469, 0.48", "216.263, -299.694, 6.32307, 0.12", "216.496, -299.813, 6.1517, 0.12", "216.942, -300.087, 5.80834, 0.12", "217.225, -300.278, 5.60266, 0.48", "217.626, -300.519, 5.29887, 0.48", "218.039, -300.685, 4.96185, 0.12", "218.686, -300.798, 4.4206, 0.6", "219.255, -300.822, 3.93554, 0.72", "219.594, -300.799, 3.6563, 0.72", "220.262, -300.726, 3.12751, 0.72", "221.114, -300.614, 2.5233, 0.12", "221.447, -300.565, 2.32039, 0.12", "221.97, -300.494, 2.03819, 0.12", "222.356, -300.448, 1.84146, 0.12", "222.868, -300.381, 1.61237, 0.6", "223.777, -300.263, 1.28761, 0.6", "224.485, -300.141, 1.07439, 0.72", "224.958, -300.036, 0.939276, 0.12", "225.495, -299.888, 0.800123, 0.12", "226.036, -299.737, 0.679546, 0.6", "226.583, -299.597, 0.580298, 0.6", "227.142, -299.503, 0.496976, 0.84", "228.26, -299.448, 0.449038, 0.84", "229.096, -299.502, 0.490869, 0.36", "229.797, -299.634, 0.608635, 0.36", "230.267, -299.773, 0.732365, 0.36", "231.058, -300.082, 0.999525, 0.36", "232.267, -300.67, 1.46944, 0.72", "232.684, -300.907, 1.64206, 0.72", "233.574, -301.434, 1.99716, 0.36", "234.056, -301.715, 2.16579, 0.36", "234.597, -302.013, 2.301, 0.36", "235.009, -302.232, 2.35148, 0.48", "235.485, -302.494, 2.3368, 0.24", "235.846, -302.714, 2.31335, 0.24", "236.311, -303.071, 2.22646, 0.6", "236.902, -303.603, 2.09765, 0.6", "237.225, -303.907, 2.02413, 0.6", "237.883, -304.508, 1.87798, 0.96", "238.356, -304.919, 1.77173, 0.96", "239.303, -305.661, 1.48964, 0.36", "239.716, -305.925, 1.34195, 0.36", "240.322, -306.223, 1.10735, 0.36", "240.763, -306.381, 0.940836, 0.36", "241.169, -306.483, 0.802272, 0.72", "241.934, -306.616, 0.59028, 0.36", "242.54, -306.678, 0.493501, 0.36", "243.156, -306.744, 0.427918, 0.36", "243.724, -306.816, 0.396669, 0.36", "244.468, -306.918, 0.38686, 0.48", "245.172, -307.004, 0.402286, 0.48", "246.043, -307.094, 0.434993, 0.36", "246.664, -307.14, 0.444705, 0.36", "247.383, -307.175, 0.436873, 0.36", "248.078, -307.201, 0.409339, 0.36", "248.493, -307.216, 0.377861, 0.36", "249.147, -307.238, 0.299505, 0.24", "249.558, -307.251, 0.229528, 0.24", "250.106, -307.257, 0.136967, 0.36", "250.534, -307.258, 0.0550753, 0.36", "251.096, -307.257, -0.0575695, 0.12", "251.528, -307.275, -0.139201, 0.72", "252.213, -307.341, -0.237893, 1.2", "252.776, -307.438, -0.302854, 1.2", "253.931, -307.706, -0.4271, 0.36", "254.2, -307.777, -0.454342, 0.36", "255.149, -308.073, -0.538814, 0.36", "255.872, -308.359, -0.587733, 0.84", "256.596, -308.732, -0.613028, 0.48", "257.14, -309.066, -0.613961, 0.36", "257.721, -309.47, -0.577519, 0.24", "258.206, -309.826, -0.536558, 0.24", "258.806, -310.279, -0.477605, 0.24", "259.657, -310.946, -0.410508, 0.24", "260.051, -311.273, -0.373541, 0.6", "260.455, -311.614, -0.332019, 0.48", "260.698, -311.818, -0.310631, 0.36", "261.513, -312.437, -0.27553, 0.36", "262.032, -312.765, -0.282114, 0.12", "262.559, -313.026, -0.319624, 0.12", "263.133, -313.271, -0.383445, 0.12", "263.319, -313.338, -0.398792, 0.48", "263.629, -313.431, -0.405664, 0.12", "264.065, -313.553, -0.384656, 0.12", "264.874, -313.804, -0.286963, 0.72", "265.294, -313.929, -0.226188, 0.72", "266.217, -314.208, -0.0812727, 0.24", "266.689, -314.359, 0.0173905, 0.24", "267.082, -314.511, 0.118255, 0.24", "267.462, -314.695, 0.259674, 0.24", "268.079, -315.036, 0.54631, 0.24", "268.312, -315.176, 0.661354, 0.24", "269.275, -315.778, 1.11308, 0.24", "269.774, -316.082, 1.32747, 0.96", "270.748, -316.658, 1.70933, 0.48", "271.37, -317.019, 1.91792, 0.36", "271.852, -317.306, 2.04754, 0.6", "272.565, -317.691, 2.19637, 0.84", "273.148, -317.968, 2.26534, 0.12", "273.411, -318.064, 2.28047, 0.12", "274.263, -318.299, 2.27228, 0.12", "275.051, -318.477, 2.26471, 0.96", "275.978, -318.65, 2.27289, 0.12", "276.475, -318.725, 2.28263, 0.12", "277.218, -318.805, 2.34022, 0.12", "277.528, -318.817, 2.367, 0.12", "277.837, -318.798, 2.39207, 0.12", "278.578, -318.704, 2.44202, 0.48", "279.167, -318.624, 2.4548, 0.48", "280.106, -318.533, 2.47773, 0.12", "280.607, -318.516, 2.49176, 0.12", "281.18, -318.516, 2.49913, 0.12", "281.688, -318.529, 2.48494, 0.36", "282.134, -318.566, 2.44942, 0.12", "282.626, -318.646, 2.38563, 0.12", "282.894, -318.703, 2.33306, 0.12", "283.43, -318.819, 2.23071, 0.6", "283.816, -318.862, 2.15783, 0.12", "284.499, -318.855, 2.03038, 0.12", "285.193, -318.792, 1.90194, 0.12", "285.462, -318.747, 1.84778, 0.36", "285.728, -318.689, 1.7924, 0.24", "286.847, -318.391, 1.52369, 0.24", "287.26, -318.277, 1.42328, 0.48", "287.566, -318.188, 1.34426, 0.12", "288.04, -318.043, 1.21656, 0.12", "288.448, -317.921, 1.10469, 0.36", "288.906, -317.791, 0.977568, 0.12", "291.385, -317.173, 0.286226, 0.12", "291.748, -317.088, 0.188513, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "18.3259, -9.96294, -10.4956, 0.36", "19.2254, -9.66682, -10.3169, 0.36", "19.9649, -9.44739, -10.1437, 0.36", "20.5223, -9.26986, -10.0048, 0.48", "21.1036, -9.05717, -9.85946, 0.48", "21.9985, -8.62164, -9.55832, 0.12", "22.6937, -8.17824, -9.29326, 0.12", "22.9423, -7.95432, -9.16255, 0.48", "23.3381, -7.45605, -8.9257, 0.48", "23.6297, -6.96152, -8.7291, 0.24", "24.2312, -5.70974, -8.28094, 0.36", "24.688, -4.59413, -7.93792, 0.36", "25.0918, -3.45714, -7.6038, 0.6", "25.3983, -2.53174, -7.34227, 1.08", "25.7717, -1.33945, -7.0126, 0.84", "26.0304, -0.486935, -6.78758, 0.48", "26.358, 0.590927, -6.54103, 0.96", "26.5298, 1.17472, -6.39859, 1.08", "26.8154, 2.05516, -6.18296, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-14.4323, -2.00778, 9.88242, 0.48", "-14.8689, -1.19769, 9.81845, 0.48", "-15.1653, -0.685228, 9.81496, 0.24", "-15.5054, -0.18286, 9.83282, 0.24", "-15.9291, 0.339534, 9.86605, 0.72", "-16.1895, 0.61647, 9.8906, 0.96", "-16.8269, 1.19601, 9.95251, 0.48", "-17.4148, 1.5785, 10.0307, 0.36", "-17.898, 1.80429, 10.0938, 0.36", "-18.534, 2.00569, 10.1534, 0.6", "-18.8869, 2.08891, 10.1743, 0.36", "-19.4029, 2.1872, 10.2081, 0.48", "-20.1136, 2.29929, 10.2962, 0.72", "-20.7148, 2.38108, 10.388, 1.08", "-21.3355, 2.45311, 10.5172, 0.96", "-21.8711, 2.48925, 10.6543, 0.96", "-22.4264, 2.49631, 10.8364, 0.72", "-23.2474, 2.43057, 11.1943, 0.6", "-23.8978, 2.23269, 11.5848, 0.36", "-24.0792, 2.10637, 11.7526, 0.36", "-24.3727, 1.78195, 12.1064, 0.36", "-24.7476, 1.29813, 12.6179, 0.48", "-24.9819, 0.993261, 12.9446, 0.48", "-25.3011, 0.662779, 13.3194, 0.48", "-25.7362, 0.445229, 13.7309, 0.48", "-26.2278, 0.350318, 14.0968, 0.48", "-26.8885, 0.303548, 14.5111, 0.48", "-27.2869, 0.292388, 14.6998, 0.24", "-27.6555, 0.287686, 14.8417, 0.24", "-28.1022, 0.300873, 15.0091, 0.6", "-28.5862, 0.325204, 15.1705, 0.6", "-29.0602, 0.404, 15.3342, 0.72", "-29.6562, 0.624566, 15.52, 0.12", "-29.9347, 0.805137, 15.6549, 0.12", "-30.4891, 1.24953, 15.9808, 0.12", "-30.8497, 1.58462, 16.2145, 0.48", "-31.395, 2.13631, 16.6137, 0.6", "-31.6739, 2.40866, 16.8272, 0.6", "-32.3639, 2.92434, 17.3833, 0.36", "-32.7321, 3.05345, 17.683, 0.36", "-32.9398, 3.05002, 17.8439, 0.36", "-33.187, 3.0043, 18.0357, 0.36", "-33.5509, 2.91223, 18.3273, 0.6", "-34.1621, 2.78585, 18.814, 0.84", "-34.9408, 2.69002, 19.4117, 0.6", "-35.4851, 2.66423, 19.854, 0.48", "-35.7563, 2.66518, 20.0817, 0.48", "-36.1458, 2.68923, 20.4213, 0.36", "-36.4747, 2.73525, 20.7203, 0.36", "-36.83, 2.81843, 21.0234, 0.48", "-37.2585, 2.97877, 21.3122, 0.72", "-37.3248, 3.01416, 21.3585, 0.72", "-37.7489, 3.28427, 21.6439, 0.72", "-38.0269, 3.48812, 21.8413, 0.48", "-38.3875, 3.77644, 22.0905, 0.48", "-38.7944, 4.12816, 22.3567, 0.6", "-39.5695, 4.7536, 22.7984, 0.24", "-40.0598, 5.07791, 23.034, 0.24", "-40.9268, 5.55017, 23.3858, 0.48", "-41.4818, 5.79038, 23.5756, 0.36", "-41.7219, 5.87707, 23.6432, 0.36", "-42.6402, 6.11464, 23.8467, 0.36", "-43.5281, 6.22747, 23.9626, 0.36", "-43.8768, 6.22792, 23.9965, 0.36", "-44.321, 6.18309, 24.0167, 0.36", "-44.9436, 6.07669, 24.0513, 0.36", "-45.4582, 5.96907, 24.0843, 0.24", "-45.8266, 5.86447, 24.1117, 0.24", "-46.2419, 5.686, 24.1406, 0.24", "-46.6294, 5.48011, 24.1986, 0.24", "-47.0231, 5.26714, 24.2767, 0.24", "-47.2716, 5.14699, 24.3443, 0.24", "-47.5974, 5.01749, 24.4585, 0.48", "-48.4187, 4.70394, 24.7803, 0.36", "-49.0602, 4.483, 25.0732, 0.24", "-49.5975, 4.34247, 25.3897, 0.24", "-50.1739, 4.19202, 25.7762, 0.48", "-50.6535, 4.06728, 26.1239, 0.24", "-51.0865, 3.948, 26.4542, 0.24", "-51.5553, 3.77934, 26.8119, 0.12", "-52.5368, 3.22673, 27.4937, 1.68", "-53.0691, 2.74971, 27.8553, 0.36", "-53.1783, 2.62095, 27.9166, 0.36", "-53.4906, 2.22751, 28.0456, 0.24", "-53.9969, 1.55782, 28.188, 0.24", "-54.201, 1.25499, 28.2141, 0.24", "-54.4924, 0.795488, 28.206, 0.24", "-54.6999, 0.498769, 28.2059, 0.24", "-55.1081, -0.0256618, 28.2081, 0.24", "-55.4524, -0.400213, 28.2123, 0.24", "-55.9661, -0.889838, 28.2208, 0.24", "-56.1704, -1.07171, 28.2248, 0.24", "-56.3794, -1.25157, 28.2294, 0.24", "-56.776, -1.65799, 28.2396, 0.24", "-57.0079, -1.94649, 28.2467, 0.24", "-57.5053, -2.40304, 28.2617, 0.24", "-64.2695, -2.53552, 31.0034, 0.24", "-71.0982, -1.58487, 33.4176, 0.24", "-77.6188, -0.454823, 36.5167, 0.24", "-84.0554, 0.697843, 39.7796, 0.24", "-90.2751, 0.954498, 43.593, 0.24", "-96.2966, 1.76571, 47.6464, 0.24", "-102.344, 1.57435, 51.7308, 0.24", "-107.804, 0.86894, 56.5298, 0.24", "-112.408, 0.622771, 62.1897, 0.24", "-117.234, -0.966758, 67.4519, 0.24", "-122.061, -4.06853, 72.063, 0.24", "-126.616, -6.87423, 77.101, 0.24" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.4323, -2.00778, 9.88242, 0.12", "-15.4111, -5.58325, 2.69676, 0.12", "-15.5577, -6.03831, 1.93216, 0.12", "-15.7082, -6.42687, 1.41619, 0.48", "-15.8652, -6.75788, 1.1067, 0.48", "-16.466, -7.83187, 0.447852, 0.48", "-16.9017, -8.50646, 0.153206, 0.12", "-17.5945, -9.30546, 0.376699, 0.6", "-18.1195, -9.83174, 0.50461, 0.6", "-18.8231, -10.4936, 0.63012, 0.6", "-19.3777, -11.01, 0.691456, 0.6", "-20.0066, -11.6022, 0.704967, 0.24", "-20.5004, -12.0658, 0.770263, 0.24", "-20.814, -12.3513, 0.841132, 0.24", "-21.2193, -12.7012, 0.955279, 0.84", "-21.6907, -13.083, 1.10638, 0.96", "-22.4271, -13.6508, 1.35286, 0.96", "-23.8797, -14.7313, 1.84138, 0.72", "-24.6501, -15.2477, 2.07016, 0.6", "-25.8921, -15.9859, 2.38772, 0.6", "-26.2929, -16.1937, 2.47439, 0.6", "-26.9069, -16.4588, 2.57765, 0.36", "-27.7263, -16.7472, 2.66586, 0.36", "-28.9014, -17.078, 2.69068, 0.36", "-29.6455, -17.2372, 2.72436, 0.36", "-29.9753, -17.284, 2.74638, 0.6", "-30.6354, -17.3625, 2.80603, 1.08", "-31.1015, -17.4111, 2.86275, 1.08", "-31.7066, -17.4777, 2.95262, 1.08", "-32.6459, -17.6256, 3.11051, 0.12", "-33.2179, -17.7571, 3.22399, 0.12", "-33.6233, -17.8825, 3.30606, 0.12", "-34.0235, -18.029, 3.40247, 0.12", "-34.586, -18.2447, 3.54082, 0.6", "-35.4079, -18.5544, 3.73326, 0.6", "-35.9661, -18.7563, 3.85515, 0.72", "-37.26, -19.1946, 4.1399, 0.84", "-38.3176, -19.5365, 4.36302, 0.48", "-39.038, -19.7442, 4.50357, 0.48", "-39.9046, -19.9846, 4.66591, 0.48", "-40.4971, -20.1492, 4.76683, 0.36", "-40.9478, -20.2628, 4.82834, 0.36", "-41.7901, -20.4548, 4.94151, 0.36", "-42.6993, -20.6391, 5.121, 0.36", "-43.8978, -20.8537, 5.44134, 0.36", "-44.6726, -20.9714, 5.66767, 0.36", "-45.4042, -21.0582, 5.85871, 0.36", "-46.1832, -21.1068, 6.04099, 0.36", "-47.7763, -21.1096, 6.36582, 0.48", "-48.662, -21.0745, 6.4954, 0.72", "-49.5009, -20.9976, 6.52993, 0.72", "-50.6266, -20.9162, 6.43821, 0.36", "-51.2404, -20.9055, 6.322, 0.36", "-51.6935, -20.9411, 6.19479, 0.36", "-52.242, -21.041, 6.01239, 0.6", "-53.2311, -21.333, 5.72351, 0.72", "-54.4854, -21.8147, 5.49586, 0.72", "-55.3278, -22.1744, 5.46988, 0.36", "-56.3449, -22.5433, 5.63378, 0.36", "-57.009, -22.7523, 5.88747, 0.36", "-57.5632, -22.9078, 6.22868, 0.36", "-58.4233, -23.1295, 6.95978, 0.48", "-59.4021, -23.3525, 7.90418, 0.48", "-61.16, -23.6271, 9.89441, 0.48", "-61.8633, -23.6782, 10.7215, 0.48", "-62.2941, -23.7142, 11.2157, 0.48", "-62.7841, -23.7612, 11.7771, 0.48", "-63.573, -23.8985, 12.5991, 0.48", "-65.4041, -24.443, 14.3182, 0.48", "-65.8903, -24.6425, 14.6773, 0.48", "-66.4641, -24.7471, 15.1441, 0.48", "-77.8642, -28.4361, 18.6189, 0.48", "-89.0729, -31.902, 22.8528, 0.48", "-101.0, -34.1001, 25.6516, 0.48", "-113.282, -35.7091, 26.795, 0.48", "-125.453, -38.3097, 26.6175, 0.48", "-137.263, -42.2567, 27.3581, 0.48", "-148.417, -47.8052, 28.6421, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.64, 29.0937, -15.803, 0.12", "-17.7694, 29.9339, -15.6372, 0.12", "-19.4433, 30.4599, -15.7627, 0.12", "-19.9052, 30.5954, -15.8139, 0.12", "-20.7096, 30.7933, -15.892, 0.6", "-21.6508, 31.0009, -15.9701, 0.84", "-22.2001, 31.1088, -16.0064, 0.84", "-23.5026, 31.2795, -16.238, 0.12", "-24.3679, 31.3409, -16.3529, 0.12", "-25.3483, 31.3964, -16.5113, 0.12", "-25.7477, 31.4458, -16.5895, 0.96", "-26.2856, 31.5442, -16.715, 0.96", "-27.8099, 31.8633, -17.0848, 0.24", "-28.7387, 32.0346, -17.2911, 0.24", "-29.1968, 32.091, -17.4343, 0.24", "-30.4113, 32.1932, -17.8758, 0.6", "-31.0559, 32.2057, -18.1339, 0.24", "-31.4357, 32.2059, -18.2884, 0.24", "-32.3283, 32.1578, -18.5964, 0.24", "-33.3113, 32.0154, -18.947, 0.84", "-33.9529, 31.8769, -19.1588, 0.84", "-34.9729, 31.6623, -19.4329, 0.24", "-35.4479, 31.6249, -19.5162, 0.24", "-35.875, 31.6318, -19.5816, 0.24", "-36.4417, 31.6754, -19.6425, 0.24", "-36.5995, 31.6852, -19.6471, 0.12", "-37.4624, 31.733, -19.6512, 0.12", "-38.2906, 31.7739, -19.707, 0.48", "-39.1307, 31.8104, -19.8204, 0.12", "-39.8149, 31.8479, -19.9464, 0.12", "-40.4945, 31.9039, -20.0896, 0.48", "-40.9747, 31.9489, -20.1899, 0.48", "-42.4988, 32.1304, -20.5072, 0.12", "-43.4281, 32.277, -20.7286, 0.12", "-43.6092, 32.3094, -20.788, 0.12", "-44.2746, 32.4446, -21.0996, 0.6", "-45.0034, 32.5829, -21.472, 0.6", "-45.5437, 32.6702, -21.7446, 0.6", "-46.5414, 32.8293, -22.2094, 0.72", "-48.0273, 33.0499, -22.9801, 0.36", "-48.9289, 33.1933, -23.4488, 0.12", "-49.7979, 33.3296, -23.9143, 0.12", "-50.1788, 33.3916, -24.1092, 0.72", "-50.6773, 33.4713, -24.3599, 0.84", "-51.5055, 33.6171, -24.7115, 0.12", "-52.3218, 33.7648, -24.9912, 0.12", "-53.0677, 33.8926, -25.2294, 0.6", "-53.578, 33.9789, -25.4385, 0.72", "-55.121, 34.2057, -26.0705, 0.12", "-55.7545, 34.2811, -26.3153, 0.12", "-56.5062, 34.3695, -26.6305, 0.12", "-56.8985, 34.4135, -26.8063, 0.48", "-58.2839, 34.6081, -27.4024, 0.12", "-59.4839, 34.8186, -28.023, 0.12", "-59.8474, 34.8964, -28.2143, 1.08", "-61.3768, 35.263, -29.0718, 0.12", "-61.7385, 35.3581, -29.2898, 0.12", "-62.4361, 35.5804, -29.6879, 0.84", "-64.2077, 36.2403, -30.5926, 0.12", "-65.1231, 36.628, -31.0794, 0.12", "-65.596, 36.8526, -31.2966, 0.36", "-66.2685, 37.2073, -31.5324, 0.12", "-67.4943, 37.9479, -31.9274, 0.12", "-67.8814, 38.2205, -32.0837, 0.36", "-68.3265, 38.6264, -32.2834, 0.12", "-69.1196, 39.5428, -32.7847, 0.12", "-69.3419, 39.8324, -32.9381, 0.48", "-69.5701, 40.1501, -33.093, 0.48", "-70.7783, 41.8004, -34.0838, 0.12", "-71.4777, 42.7016, -34.6599, 0.12", "-72.0935, 43.4499, -35.1416, 0.12", "-72.6602, 44.0794, -35.547, 0.12", "-73.2006, 44.623, -35.8548, 0.6", "-74.3916, 45.6317, -36.4711, 0.12", "-74.7276, 45.8738, -36.6121, 0.12", "-75.1275, 46.1128, -36.7856, 0.12", "-75.8865, 46.5222, -37.1165, 0.12", "-76.5316, 46.8525, -37.3774, 0.48", "-78.2957, 47.7076, -37.9407, 0.12", "-78.7952, 47.9291, -38.0896, 0.12", "-79.8999, 48.3489, -38.4188, 0.6", "-80.4053, 48.5132, -38.5525, 0.12", "-81.0614, 48.7039, -38.6957, 0.12", "-81.867, 48.9262, -38.8121, 0.6", "-83.4771, 49.3447, -38.9602, 0.12", "-84.9395, 49.6921, -39.1131, 0.12", "-85.8816, 49.9006, -39.2143, 0.12", "-86.5961, 50.0466, -39.2796, 0.12", "-87.5709, 50.2396, -39.3334, 0.12", "-89.0083, 50.5333, -39.3414, 0.12", "-89.9503, 50.7385, -39.2699, 0.12", "-90.5089, 50.865, -39.222, 0.84", "-91.279, 51.0569, -39.1442, 1.2", "-92.0149, 51.2806, -39.0495, 0.12", "-92.6995, 51.5447, -38.9375, 0.12", "-93.6889, 52.0105, -38.7497, 0.12", "-94.5638, 52.4746, -38.606, 0.48", "-94.9844, 52.715, -38.5573, 0.12", "-95.9902, 53.3392, -38.4863, 0.12", "-96.6756, 53.7583, -38.4606, 0.12", "-97.3494, 54.1564, -38.4429, 0.48", "-98.0432, 54.5482, -38.4688, 0.48", "-98.6232, 54.8552, -38.5118, 0.12", "-99.7205, 55.3909, -38.657, 0.12", "-100.587, 55.7874, -38.8481, 0.12", "-101.196, 56.0597, -39.0126, 0.48", "-102.1, 56.4531, -39.2719, 0.12", "-103.083, 56.8622, -39.5522, 0.12", "-104.439, 57.4378, -39.9205, 0.84", "-105.395, 57.8375, -40.2658, 0.12", "-105.885, 58.0634, -40.474, 0.12", "-106.57, 58.4189, -40.7659, 0.12", "-107.348, 58.8654, -41.2075, 0.12", "-107.787, 59.1238, -41.495, 0.36", "-109.075, 59.9539, -42.4468, 0.12", "-109.542, 60.2902, -42.8528, 0.12", "-110.017, 60.6747, -43.3967, 0.48", "-111.534, 62.1054, -45.765, 0.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.64, 29.0937, -15.803, 0.12", "-15.6888, 29.8098, -15.879, 0.12", "-15.7842, 30.792, -16.0419, 0.12", "-15.8579, 31.446, -16.1597, 0.72", "-15.9198, 31.9913, -16.2656, 0.96", "-15.9611, 32.3346, -16.3327, 0.96", "-16.0883, 33.3218, -16.5866, 0.12", "-16.268, 34.5873, -16.9962, 0.12", "-16.3286, 35.0155, -17.1463, 0.48", "-16.4258, 35.6546, -17.3719, 0.24", "-16.5781, 36.5063, -17.6759, 0.24", "-16.8113, 37.7726, -18.1077, 0.72", "-16.9393, 38.498, -18.3261, 0.96", "-17.0929, 39.3417, -18.5837, 0.36", "-17.1848, 39.8605, -18.7347, 0.36", "-17.3052, 40.5531, -18.9115, 0.12", "-17.4265, 41.2232, -19.0499, 0.12", "-17.5981, 42.0963, -19.1681, 0.12", "-17.6835, 42.4824, -19.2201, 0.6", "-17.8437, 43.1773, -19.3162, 0.12", "-17.9876, 43.824, -19.3989, 0.12", "-18.136, 44.5169, -19.4761, 0.48", "-18.2568, 44.9881, -19.5263, 0.96", "-18.3908, 45.4645, -19.573, 0.96", "-18.5279, 45.9412, -19.6143, 0.12", "-18.7638, 46.6786, -19.6662, 0.12", "-19.0092, 47.4069, -19.7183, 0.12", "-19.1118, 47.7098, -19.7387, 0.6", "-19.1676, 47.8561, -19.747, 0.6", "-19.306, 48.1434, -19.7572, 0.12", "-19.5366, 48.5428, -19.8308, 0.12", "-19.8373, 49.0222, -19.9829, 0.12", "-20.1315, 49.4996, -20.1684, 0.72", "-20.3221, 49.8144, -20.3124, 0.96", "-20.7963, 50.5885, -20.7385, 0.48", "-21.5914, 51.8577, -21.5049, 0.12", "-21.9066, 52.3392, -21.8173, 0.12", "-22.1849, 52.7382, -22.086, 0.12", "-22.5059, 53.1818, -22.3794, 0.48", "-22.8386, 53.6303, -22.6709, 0.12", "-23.316, 54.2481, -23.0106, 0.12", "-23.551, 54.5445, -23.1198, 1.08", "-23.8334, 54.8854, -23.2319, 1.32", "-24.0769, 55.1778, -23.3319, 0.96", "-24.6507, 55.888, -23.5591, 0.24", "-25.3013, 56.6977, -23.8699, 0.24", "-25.7978, 57.2914, -24.1455, 0.24", "-26.2825, 57.8508, -24.4286, 0.24", "-26.8118, 58.415, -24.7259, 0.96", "-27.11, 58.6987, -24.9154, 1.2", "-27.9388, 59.4323, -25.4706, 0.36", "-28.427, 59.8344, -25.8223, 0.12", "-28.6886, 60.0425, -26.0108, 0.72", "-29.2385, 60.5023, -26.4126, 0.72", "-30.502, 61.6136, -27.2943, 0.24", "-30.8126, 61.9027, -27.5096, 0.12", "-31.1084, 62.1953, -27.7051, 0.12", "-31.3923, 62.5028, -27.8977, 0.24", "-32.0945, 63.3278, -28.3477, 0.48", "-32.4354, 63.7702, -28.572, 0.12", "-32.739, 64.1919, -28.7369, 0.12", "-32.8252, 64.3113, -28.7842, 0.72", "-33.2133, 64.8572, -28.9896, 0.84", "-33.51, 65.2847, -29.1351, 0.84", "-34.2576, 66.3332, -29.5596, 0.36", "-34.6403, 66.8697, -29.8146, 0.12", "-34.9653, 67.327, -30.0573, 0.6", "-35.2509, 67.7299, -30.2894, 1.08", "-35.4229, 67.9911, -30.4365, 1.08", "-36.1768, 69.2096, -31.0665, 0.12", "-36.4505, 69.6824, -31.2686, 0.12", "-36.6309, 70.0064, -31.407, 0.48", "-36.9072, 70.5491, -31.6092, 0.12", "-37.4303, 71.6239, -31.9356, 0.12", "-37.6011, 71.975, -32.0118, 0.72", "-37.8761, 72.553, -32.0842, 0.84", "-38.1569, 73.1158, -32.1526, 0.12", "-38.5732, 73.9201, -32.2401, 0.12", "-38.8317, 74.4033, -32.2828, 0.12", "-39.2165, 75.078, -32.3395, 0.6", "-39.4669, 75.511, -32.3688, 0.36", "-39.7051, 75.9123, -32.3874, 0.6", "-40.0343, 76.4615, -32.4284, 0.84", "-40.207, 76.7518, -32.4601, 0.84", "-40.5946, 77.4397, -32.5474, 0.24", "-41.0413, 78.2569, -32.6779, 0.12", "-41.3688, 78.8726, -32.7868, 0.48", "-41.9146, 79.9417, -32.9953, 0.12", "-42.3765, 80.8957, -33.1951, 0.12", "-42.619, 81.4264, -33.3103, 0.48", "-42.8096, 81.8715, -33.4057, 0.12", "-43.0649, 82.5118, -33.5277, 0.12", "-43.1428, 82.7166, -33.5605, 0.36", "-43.3788, 83.3348, -33.6507, 0.12", "-43.5098, 83.6551, -33.7035, 0.12", "-43.8787, 84.5138, -33.8365, 0.48", "-44.2184, 85.277, -33.9428, 1.2", "-44.4831, 85.8363, -34.0211, 0.6", "-44.7645, 86.4165, -34.1112, 0.12", "-45.2838, 87.4692, -34.2828, 0.12", "-45.8676, 88.6428, -34.4779, 0.12", "-46.0423, 88.9956, -34.5359, 0.12", "-46.2849, 89.4777, -34.6082, 0.6", "-46.5894, 90.0866, -34.7058, 0.12", "-46.9127, 90.7344, -34.814, 0.12", "-47.121, 91.1444, -34.9006, 0.72", "-47.3445, 91.57, -35.0087, 0.72", "-47.5232, 91.9055, -35.0937, 0.72", "-47.9019, 92.6226, -35.3381, 0.12", "-48.3033, 93.4169, -35.6381, 0.12", "-48.5248, 93.8838, -35.8275, 0.12", "-48.9134, 94.7716, -36.1818, 0.48", "-49.1965, 95.4603, -36.4605, 0.48", "-49.6688, 96.6637, -36.9301, 0.12", "-50.0015, 97.5613, -37.2508, 0.12", "-50.1873, 98.0878, -37.4559, 0.12", "-50.4284, 98.799, -37.7268, 0.12", "-50.5443, 99.1526, -37.8474, 0.72", "-50.711, 99.655, -38.0086, 0.72", "-50.8527, 100.067, -38.1126, 0.48", "-51.0931, 100.756, -38.3057, 0.12", "-51.3699, 101.556, -38.6162, 0.12", "-51.4996, 101.962, -38.7901, 0.36", "-51.6176, 102.343, -38.9383, 0.12", "-51.7997, 102.948, -39.1431, 0.12", "-51.9258, 103.369, -39.2692, 0.48", "-52.3824, 104.92, -39.673, 0.24", "-52.6599, 105.843, -39.9186, 0.24", "-53.0994, 107.313, -40.2921, 0.24", "-53.5239, 108.753, -40.6202, 0.24", "-53.6241, 109.082, -40.6894, 0.24", "-53.755, 109.505, -40.7631, 0.48", "-53.9457, 110.105, -40.8359, 0.12", "-54.1795, 110.72, -40.9283, 0.12", "-54.3635, 111.132, -40.9955, 0.12", "-54.5804, 111.541, -41.0577, 0.48", "-54.7485, 111.834, -41.0982, 0.72", "-55.1849, 112.543, -41.1795, 0.12", "-55.9782, 113.777, -41.2854, 0.12", "-56.6359, 114.755, -41.4131, 0.12", "-57.0258, 115.332, -41.5045, 0.12", "-57.1726, 115.555, -41.5429, 0.84", "-57.4665, 116.015, -41.6282, 0.96", "-57.9183, 116.759, -41.7661, 0.72", "-58.4064, 117.623, -41.9415, 0.12", "-59.0202, 118.719, -42.1664, 0.12", "-59.3037, 119.221, -42.302, 0.36", "-59.7768, 120.06, -42.5578, 0.12", "-60.1735, 120.806, -42.8011, 0.12", "-60.3807, 121.231, -42.94, 0.12", "-60.5633, 121.629, -43.0618, 0.72", "-61.1827, 122.959, -43.5048, 0.12", "-61.6109, 123.841, -43.8643, 0.12", "-61.9725, 124.564, -44.1879, 0.12", "-62.1547, 124.931, -44.3589, 0.12", "-62.367, 125.376, -44.599, 0.12", "-62.6337, 125.972, -44.9405, 0.36", "-63.0446, 126.875, -45.4542, 0.12", "-63.3817, 127.537, -45.9187, 0.12", "-63.5161, 127.774, -46.0995, 0.48", "-64.0084, 128.757, -46.7477, 0.24", "-64.0436, 128.847, -46.8012, 0.12", "-64.1782, 129.258, -47.0354, 0.12", "-64.2972, 129.673, -47.2183, 0.12", "-64.4163, 130.086, -47.3897, 0.12", "-64.7192, 131.191, -47.7902, 0.12", "-64.8711, 131.805, -48.0311, 0.36", "-64.9853, 132.376, -48.2954, 0.12", "-65.2, 133.577, -48.8435, 0.12", "-65.2633, 133.938, -48.9889, 0.6", "-65.3369, 134.308, -49.1208, 0.6", "-65.6785, 135.684, -49.5562, 0.12", "-65.8833, 136.383, -49.7952, 0.12", "-66.4912, 138.198, -50.453, 0.12", "-66.9918, 139.508, -50.9626, 0.12", "-67.2181, 140.045, -51.1671, 0.12", "-67.4165, 140.443, -51.3099, 0.84", "-68.315, 142.02, -51.8923, 0.12", "-68.6356, 142.511, -52.1234, 0.12", "-69.0077, 143.052, -52.4295, 0.12", "-69.3233, 143.517, -52.6858, 0.12", "-69.671, 144.063, -52.9331, 0.48", "-70.2398, 145.025, -53.2472, 0.12", "-70.5848, 145.662, -53.3453, 0.12", "-71.0895, 146.633, -53.4527, 0.12", "-71.4844, 147.397, -53.5066, 0.12", "-71.9092, 148.224, -53.5349, 0.48", "-72.1185, 148.643, -53.5347, 0.12", "-73.0978, 150.562, -53.4277, 0.12", "-73.4977, 151.315, -53.3814, 0.12", "-73.9596, 152.133, -53.3265, 0.12", "-74.1845, 152.542, -53.3005, 0.6" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.56637, 35.9502, -0.00167934, 0.12", "-12.2185, 50.4988, -0.00167934, 0.12", "-15.8707, 65.0474, -0.00167934, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "0.33062, 22.0142, -3.84156, 0.96", "-0.0383134, 22.4271, -4.29123, 0.96", "-0.460705, 22.919, -4.70934, 0.96", "-0.855756, 23.3889, -4.99381, 0.6", "-2.89089, 25.8395, -6.20083, 0.72", "-3.32387, 26.3772, -6.42583, 0.12", "-3.87562, 27.1059, -6.67524, 0.12", "-4.46544, 27.9416, -6.9417, 0.24", "-5.2796, 29.1962, -7.25924, 0.6", "-5.99749, 30.405, -7.45883, 0.6", "-6.34546, 31.0367, -7.51473, 0.12", "-6.94854, 32.1602, -7.6765, 0.12", "-7.50492, 33.2286, -7.87994, 0.12", "-7.9495, 34.0772, -8.10267, 0.48", "-8.17326, 34.494, -8.23195, 0.48", "-8.84113, 35.5645, -8.65939, 0.12", "-9.33948, 36.2357, -8.97937, 0.12", "-9.74896, 36.7041, -9.25563, 0.6", "-10.4429, 37.4255, -9.69778, 0.12", "-10.998, 37.9552, -10.0786, 0.12", "-12.2249, 39.097, -10.9182, 0.12", "-12.8012, 39.6227, -11.2715, 0.12", "-13.293, 40.0522, -11.5573, 0.12", "-13.7665, 40.4678, -11.7985, 0.96", "-14.8239, 41.4092, -12.2177, 0.12", "-15.2305, 41.7687, -12.3851, 0.12", "-15.9333, 42.3946, -12.6165, 0.12", "-16.4264, 42.8136, -12.7594, 0.96", "-16.9998, 43.2851, -12.9061, 1.08", "-17.2305, 43.4667, -12.9623, 1.08", "-18.8207, 44.7065, -13.3098, 0.24", "-19.6615, 45.36, -13.5274, 0.12", "-20.5784, 46.0813, -13.7871, 0.12", "-21.0395, 46.4468, -13.9114, 0.72", "-21.4062, 46.7469, -14.0033, 0.72", "-22.1897, 47.4504, -14.1485, 0.36", "-22.5658, 47.8365, -14.1669, 0.12", "-22.9391, 48.2594, -14.1856, 0.12", "-23.2461, 48.6379, -14.1904, 0.48", "-23.5349, 49.0081, -14.1726, 0.12", "-24.0813, 49.7199, -14.1431, 0.12", "-24.3819, 50.1114, -14.1165, 0.12", "-24.8775, 50.7222, -14.0678, 0.84", "-25.3066, 51.2341, -14.0059, 0.72", "-25.625, 51.5962, -13.9433, 0.12", "-25.97, 51.9725, -13.8511, 0.12", "-26.4772, 52.5179, -13.6934, 0.12", "-26.9894, 53.0913, -13.5145, 0.12", "-27.4635, 53.6391, -13.3274, 0.48", "-28.0018, 54.2714, -13.093, 0.6", "-28.326, 54.6658, -12.9435, 0.24", "-28.8009, 55.2377, -12.7709, 0.24", "-29.1113, 55.6057, -12.6998, 0.12", "-29.4796, 56.0426, -12.6591, 0.12", "-29.7953, 56.4002, -12.6547, 0.6", "-30.3869, 57.0277, -12.6628, 0.84", "-31.3644, 57.9831, -12.6811, 0.12", "-31.9187, 58.4904, -12.6833, 0.12", "-32.4234, 58.9313, -12.6721, 0.24", "-32.7452, 59.2064, -12.6559, 0.12", "-33.5659, 59.8949, -12.5772, 0.12", "-34.0375, 60.2764, -12.5304, 0.48", "-34.5535, 60.7044, -12.4621, 0.12", "-34.9865, 61.0708, -12.4268, 0.12", "-35.2026, 61.264, -12.4181, 0.48", "-35.6675, 61.7507, -12.4111, 0.48", "-36.3158, 62.4722, -12.5042, 0.12", "-36.7581, 62.9715, -12.6015, 0.12", "-37.3109, 63.5907, -12.8005, 0.48", "-37.5628, 63.8856, -12.9082, 0.12", "-38.3987, 64.9259, -13.2582, 0.12", "-39.404, 66.2532, -13.6597, 0.84", "-39.7901, 66.7915, -13.7987, 0.84", "-40.5864, 67.925, -14.1008, 0.12", "-41.3256, 68.9939, -14.4016, 0.12", "-42.2283, 70.323, -14.755, 0.12", "-42.4924, 70.7233, -14.8461, 0.6", "-42.8185, 71.2326, -14.9513, 0.72", "-43.2348, 71.8553, -15.1284, 0.12", "-43.913, 72.8144, -15.4251, 0.12", "-44.3025, 73.3269, -15.6284, 0.12", "-44.63, 73.7326, -15.8419, 0.72", "-45.4906, 74.7969, -16.3866, 0.72", "-46.0779, 75.5273, -16.7395, 0.12", "-47.0158, 76.7262, -17.3385, 0.12", "-47.2828, 77.093, -17.5146, 0.48", "-47.9129, 78.0561, -17.9249, 0.12", "-48.8662, 79.6431, -18.4969, 0.12", "-49.008, 79.8995, -18.5781, 0.48", "-49.5548, 81.0144, -18.8825, 0.12", "-50.009, 82.0347, -19.1771, 0.12", "-50.5435, 83.348, -19.5289, 0.12", "-50.6501, 83.6251, -19.6018, 0.48", "-51.0134, 84.6164, -19.8898, 0.12", "-51.8889, 86.9323, -20.5837, 0.12", "-52.107, 87.5017, -20.7424, 0.6", "-52.2475, 87.8723, -20.8478, 0.72", "-52.5868, 88.7608, -21.083, 0.12", "-52.9281, 89.6673, -21.285, 0.24", "-53.194, 90.3679, -21.3934, 0.12", "-53.5571, 91.2796, -21.5156, 0.12", "-54.193, 92.8728, -21.6603, 0.12", "-54.4064, 93.4125, -21.6902, 0.48", "-54.4539, 93.5412, -21.6886, 0.12", "-54.7067, 94.2233, -21.6661, 0.12", "-54.8053, 94.5122, -21.6365, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "0.33062, 22.0142, -3.84156, 0.96", "0.269482, 23.082, -3.82348, 0.96", "0.230147, 23.7563, -3.81339, 0.96", "0.153366, 24.8305, -3.79975, 0.6", "0.087561, 25.769, -3.78914, 0.48", "-0.0110993, 27.2436, -3.77435, 0.48", "-0.128574, 28.9993, -3.75941, 0.48", "-0.172994, 29.6596, -3.74582, 0.96", "-0.22127, 30.3825, -3.72197, 1.44", "-0.276611, 31.1877, -3.68725, 1.08", "-0.338198, 32.1268, -3.63984, 0.84", "-0.416852, 33.3301, -3.57247, 0.84", "-0.454224, 34.1406, -3.52834, 0.36", "-0.49705, 35.6142, -3.45899, 0.36", "-0.50405, 36.1519, -3.42809, 0.72", "-0.507571, 37.2155, -3.36085, 1.32", "-0.498, 37.7528, -3.32619, 1.32", "-0.455716, 38.8358, -3.26281, 0.6", "-0.401504, 39.9075, -3.21441, 0.48", "-0.350451, 40.8457, -3.16718, 0.6", "-0.324222, 41.3885, -3.13924, 0.96", "-0.289194, 42.2043, -3.07884, 0.84", "-0.249486, 43.3991, -2.97362, 0.72", "-0.230212, 44.3253, -2.88227, 0.72", "-0.218582, 45.0084, -2.81792, 1.08", "-0.21266, 45.5344, -2.78078, 1.2", "-0.212051, 46.8666, -2.66744, 0.6", "-0.223171, 47.7937, -2.58262, 0.6", "-0.232204, 48.1957, -2.54567, 0.96", "-0.255961, 48.8684, -2.49164, 0.96", "-0.290898, 49.5925, -2.45625, 0.84", "-0.370071, 50.8837, -2.43203, 0.36", "-0.48414, 52.3549, -2.44872, 0.36", "-0.555824, 53.1595, -2.44924, 0.72", "-0.650163, 54.1097, -2.43438, 1.08", "-0.791184, 55.3517, -2.40017, 0.6", "-0.919469, 56.4088, -2.3675, 0.48", "-1.00893, 57.0888, -2.35282, 0.48", "-1.16654, 58.2545, -2.31699, 1.2", "-1.31823, 59.3421, -2.27439, 0.48", "-1.51517, 60.687, -2.20928, 0.48", "-1.61969, 61.3806, -2.15673, 0.12", "-1.77882, 62.4383, -2.07074, 0.12", "-1.828, 62.8365, -2.02841, 0.12", "-1.86221, 63.247, -1.98008, 0.96", "-1.89836, 64.0567, -1.86761, 0.96", "-1.91817, 65.1293, -1.6991, 0.72", "-1.92072, 65.6602, -1.61264, 0.84", "-1.91655, 67.0247, -1.37647, 0.48", "-1.90284, 68.3476, -1.16187, 0.48", "-1.88594, 69.4012, -1.008, 0.48", "-1.8706, 70.3457, -0.894165, 1.08", "-1.86001, 70.8704, -0.845025, 1.32", "-1.82242, 72.4339, -0.720523, 0.36", "-1.77289, 74.1744, -0.621199, 0.36", "-1.7343, 75.227, -0.567808, 0.48", "-1.64945, 76.9511, -0.497703, 0.6", "-1.58713, 78.0618, -0.464735, 0.72", "-1.54175, 79.0015, -0.451383, 0.72", "-1.52113, 79.6948, -0.453041, 0.72", "-1.52044, 80.9066, -0.471305, 0.36", "-1.56071, 82.516, -0.442993, 0.48", "-1.65636, 84.5104, -0.355132, 0.48", "-1.73759, 85.607, -0.285492, 0.48", "-1.91531, 87.486, -0.13318, 0.96", "-2.16857, 89.7733, 0.105941, 0.48", "-2.37813, 91.4086, 0.305855, 0.12", "-2.47162, 92.0727, 0.39584, 0.12", "-2.65969, 93.4056, 0.587208, 0.72", "-2.71295, 93.8118, 0.650012, 0.84", "-2.81705, 94.6616, 0.775559, 0.48", "-2.98843, 96.1268, 0.998077, 0.48", "-3.121, 97.445, 1.15312, 0.48", "-3.17934, 98.0986, 1.23456, 0.96", "-3.25614, 99.1202, 1.36855, 0.36", "-3.35716, 100.58, 1.5556, 0.36", "-3.44003, 101.859, 1.7107, 0.36", "-3.51421, 103.188, 1.87355, 0.36", "-3.55273, 103.849, 1.94747, 0.84", "-3.57734, 104.25, 1.99006, 0.84", "-3.62971, 105.063, 2.05997, 0.36", "-3.67499, 105.72, 2.12609, 0.12", "-3.72111, 106.391, 2.1568, 0.96", "-3.77838, 107.197, 2.1778, 1.32", "-3.86327, 108.364, 2.25188, 0.36", "-3.95718, 109.697, 2.36623, 0.36", "-4.06111, 111.258, 2.52545, 0.6", "-4.15296, 112.794, 2.6801, 0.48", "-4.21067, 113.853, 2.7813, 0.48", "-4.28727, 115.415, 2.91396, 0.84", "-4.33151, 116.22, 2.96457, 0.96", "-4.35093, 116.488, 2.98057, 0.96", "-4.41557, 117.153, 3.03524, 0.36", "-4.48916, 117.829, 3.12225, 0.36", "-4.55969, 118.498, 3.18347, 0.84", "-4.63362, 119.345, 3.22438, 1.32", "-4.6729, 119.885, 3.27732, 0.96", "-4.72586, 121.012, 3.42747, 0.36", "-4.75929, 122.461, 3.66021, 0.36", "-4.74811, 123.38, 3.79994, 0.36", "-4.70999, 124.179, 3.90833, 0.36", "-4.62773, 125.162, 4.02419, 0.72", "-4.55345, 125.866, 4.11114, 0.36", "-4.42844, 126.928, 4.23114, 0.24", "-4.34854, 127.594, 4.31651, 0.84", "-4.27402, 128.275, 4.40412, 0.84", "-4.22922, 128.83, 4.46464, 0.72", "-4.18873, 129.708, 4.58212, 0.12", "-4.17281, 130.767, 4.77188, 0.12", "-4.17672, 131.542, 4.94664, 0.48", "-4.18243, 131.937, 5.02799, 0.24", "-4.2219, 133.518, 5.28775, 0.24", "-4.25483, 134.604, 5.4396, 0.72", "-4.27416, 135.273, 5.51147, 1.08", "-4.3119, 136.38, 5.62542, 0.96", "-4.36103, 137.562, 5.75667, 0.72", "-4.40469, 138.507, 5.86035, 0.6", "-4.44537, 139.362, 5.94122, 0.12", "-4.49218, 140.164, 6.02438, 0.12", "-4.55054, 141.086, 6.19622, 0.12", "-4.60258, 141.899, 6.39871, 0.48", "-4.62848, 142.272, 6.51263, 0.12", "-4.73299, 143.661, 6.9602, 0.12", "-4.82586, 144.77, 7.29086, 0.6", "-4.93132, 145.848, 7.59477, 0.12", "-5.05252, 147.141, 7.88941, 0.12", "-5.08965, 147.558, 7.96087, 0.12", "-5.15438, 148.342, 8.06917, 0.6", "-5.28605, 150.071, 8.24526, 1.08", "-5.34866, 151.037, 8.30321, 1.08", "-5.43684, 152.676, 8.36432, 0.48", "-5.47566, 153.743, 8.41013, 0.12", "-5.51166, 155.526, 8.48979, 0.12", "-5.51104, 156.187, 8.51806, 0.12", "-5.48709, 157.389, 8.56596, 0.12", "-5.45954, 158.24, 8.59093, 0.72", "-5.44117, 158.801, 8.60173, 0.12", "-5.41237, 159.608, 8.59649, 0.12", "-5.35503, 161.216, 8.54455, 0.48", "-5.31179, 162.592, 8.47804, 0.6", "-5.28881, 163.534, 8.41976, 0.6", "-5.27994, 164.207, 8.38524, 0.84", "-5.28027, 165.138, 8.36135, 0.6", "-5.29862, 166.203, 8.36975, 0.72", "-5.3341, 167.047, 8.40221, 0.36", "-5.41065, 168.239, 8.51247, 0.48", "-5.5439, 169.745, 8.69931, 0.48", "-5.67844, 171.266, 8.91683, 0.6", "-5.79429, 172.464, 9.10733, 0.48", "-5.86579, 173.135, 9.22238, 0.48", "-6.01848, 174.536, 9.53555, 0.12", "-6.11038, 175.393, 9.75658, 0.12", "-6.22874, 176.538, 10.0586, 0.12", "-6.2752, 177.004, 10.1794, 0.96", "-6.35128, 177.664, 10.3429, 1.08", "-6.5755, 179.321, 10.7107, 0.36", "-6.67825, 179.973, 10.8337, 0.36", "-6.95287, 181.536, 11.1128, 0.36", "-7.15531, 182.481, 11.2566, 0.36", "-7.38063, 183.465, 11.3661, 0.24", "-7.55462, 184.17, 11.4053, 0.24", "-7.6943, 184.7, 11.3979, 0.6", "-7.8048, 185.087, 11.3913, 0.6", "-8.04078, 185.894, 11.4036, 0.36", "-8.32535, 186.875, 11.442, 0.36", "-8.65064, 188.032, 11.5078, 0.24", "-9.10979, 189.747, 11.6327, 0.24", "-9.41148, 190.963, 11.7312, 0.24", "-9.6211, 191.895, 11.8169, 0.24", "-9.69542, 192.3, 11.8582, 0.6", "-9.77221, 192.83, 11.9125, 0.6", "-9.83597, 193.378, 11.9644, 0.6", "-9.92004, 194.437, 12.0442, 0.36", "-9.94288, 194.737, 12.0555, 0.12", "-10.0496, 195.798, 12.0495, 0.12", "-10.1552, 196.631, 12.03, 0.12", "-10.2452, 197.178, 12.008, 0.36", "-10.3046, 197.472, 11.9932, 0.12", "-10.5358, 198.456, 11.9316, 0.12", "-10.6584, 198.978, 11.8964, 0.48", "-10.7471, 199.41, 11.8663, 0.12", "-10.8216, 199.95, 11.8319, 0.12", "-10.8844, 201.024, 11.7731, 0.12", "-10.9078, 201.878, 11.7299, 0.72", "-10.896, 202.553, 11.7014, 0.84", "-10.8701, 203.154, 11.685, 0.36", "-10.7984, 203.995, 11.6858, 0.36", "-10.7058, 204.589, 11.6864, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.96846, -23.6826, 8.59589, 0.6", "-4.44274, -24.8848, 7.46432, 0.6", "-4.99574, -25.3464, 7.03439, 0.48", "-5.61903, -25.8861, 6.57159, 0.48", "-6.27145, -26.4885, 6.10413, 0.48", "-6.73625, -26.9368, 5.80412, 0.48", "-7.53086, -27.7374, 5.33851, 0.6", "-8.16636, -28.4592, 5.04835, 0.72", "-9.04931, -29.4842, 4.63405, 0.84", "-9.78381, -30.3715, 4.29967, 0.84", "-10.3075, -31.0343, 4.11169, 1.08", "-10.7524, -31.6414, 3.98641, 1.32", "-11.2135, -32.3381, 3.88914, 1.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.96846, -23.6826, 8.59589, 0.96", "-2.98662, -24.7899, 9.19979, 0.96", "-2.97589, -25.2742, 9.41924, 0.6", "-2.92969, -26.0417, 9.7798, 0.48", "-2.87174, -26.7383, 10.0991, 0.12", "-2.79609, -27.5051, 10.4534, 0.12", "-2.75974, -27.8533, 10.6118, 0.72", "-2.69203, -28.6636, 10.9212, 0.72", "-2.63114, -29.4882, 11.2761, 0.6", "-2.60565, -29.8818, 11.4667, 0.6", "-2.58952, -30.4722, 11.7547, 0.36", "-2.58605, -30.7469, 11.8975, 0.36", "-2.58422, -31.3452, 12.2027, 0.36", "-2.57788, -32.425, 12.7633, 0.36", "-2.56429, -33.0213, 13.046, 0.6", "-2.53185, -33.4998, 13.2784, 0.6", "-2.46598, -33.9781, 13.5, 0.72", "-2.38931, -34.3619, 13.676, 0.84", "-2.20011, -35.1101, 13.9931, 0.6", "-2.0793, -35.5953, 14.1785, 0.48", "-2.00898, -36.0168, 14.3577, 0.36", "-1.98192, -36.5644, 14.6448, 0.36", "-1.99455, -36.828, 14.7897, 0.6", "-2.0376, -37.237, 15.0101, 0.72", "-2.12949, -37.9737, 15.3655, 0.72", "-2.17046, -38.5955, 15.7169, 0.48", "-2.16946, -39.2, 16.0653, 0.6", "-2.14641, -39.6838, 16.3519, 0.84", "-2.11414, -40.0652, 16.5628, 1.08", "-2.03787, -40.6928, 16.8893, 1.32", "-1.79709, -42.3241, 17.6367, 0.72", "-1.71157, -42.8864, 17.8645, 0.36", "-1.54022, -44.1058, 18.3161, 0.48", "-1.45415, -44.9104, 18.6052, 0.6", "-1.43186, -45.2227, 18.7065, 0.84", "-1.40953, -45.9528, 18.9012, 0.84", "-1.41638, -46.7943, 19.0503, 0.72", "-1.42027, -47.5787, 19.1626, 0.48", "-1.39246, -48.4171, 19.2677, 0.36", "-1.35995, -48.9422, 19.335, 0.36", "-1.30236, -49.5775, 19.4125, 0.6", "-1.20758, -50.3152, 19.4942, 0.6", "-1.06657, -51.0507, 19.5886, 0.6", "-0.865359, -51.8153, 19.69, 0.6", "-0.582371, -52.6296, 19.8035, 0.48", "-0.324834, -53.2828, 19.9272, 0.48", "-0.0804615, -53.8801, 20.0786, 0.6", "0.243026, -54.7037, 20.3466, 0.36", "0.404675, -55.1736, 20.5118, 0.36", "0.680176, -56.0923, 20.8197, 0.36", "0.951061, -57.1287, 21.1654, 0.48", "1.09443, -57.7784, 21.3654, 0.48", "1.24922, -58.6385, 21.5918, 0.48", "1.36174, -59.4914, 21.8118, 0.48", "1.42402, -60.1071, 21.979, 0.72", "1.46514, -60.6239, 22.1444, 0.72", "1.4992, -60.9917, 22.2693, 0.72", "1.57725, -61.5887, 22.4843, 0.84", "1.72279, -62.5935, 22.8914, 0.12", "1.82082, -63.2474, 23.2264, 0.12", "1.94636, -64.0774, 23.7206, 0.48", "1.99996, -64.433, 23.9607, 0.6", "2.07406, -64.9254, 24.3271, 0.6", "1.8609, -73.6545, 26.1537, 0.6", "1.50806, -82.2561, 28.4515, 0.6", "-0.101547, -90.2512, 31.92, 0.6", "-0.406386, -97.879, 36.3567, 0.6", "0.471221, -106.423, 38.6926, 0.6", "1.54752, -115.228, 39.6581, 0.6", "4.32526, -123.643, 40.2537, 0.6", "7.24677, -131.931, 41.4712, 0.6", "10.6424, -140.085, 42.1336, 0.6", "14.7836, -147.707, 43.6964, 0.6", "17.7576, -155.521, 46.5468, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "34.008, 8.33651, 29.5212, 0.48", "42.2817, 14.2061, 36.4765, 0.48", "49.0803, 21.3591, 43.9387, 0.48", "55.7994, 28.5427, 51.4471, 0.48", "63.7819, 34.7847, 58.451, 0.48", "71.287, 40.253, 66.5011, 0.48", "78.2982, 44.2241, 75.7122, 0.48", "83.856, 48.8255, 85.6337, 0.48", "91.186, 52.2595, 94.7886, 0.48", "97.7903, 54.2412, 104.839, 0.48", "105.028, 57.8988, 113.99, 0.48", "113.508, 61.634, 121.961, 0.48", "122.655, 66.1429, 128.733, 0.48", "130.999, 69.0742, 137.141, 0.48", "139.826, 71.8014, 145.103, 0.48", "149.863, 75.0495, 151.233, 0.48", "160.816, 78.4399, 155.396, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "34.008, 8.33651, 29.5212, 0.36", "40.7182, 12.0261, 33.608, 0.48", "47.7681, 16.4594, 36.1332, 0.48", "53.9511, 21.2476, 40.012, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-2.89785, -16.5916, -29.0073, 0.48", "-5.42758, -16.3785, -32.8993, 0.48", "-6.10829, -16.2898, -33.907, 0.48", "-6.28652, -16.2689, -34.1355, 0.12", "-6.81259, -16.2062, -34.8046, 0.12", "-7.65984, -16.1189, -35.8532, 0.72", "-8.28043, -16.0629, -36.6422, 0.84", "-9.2031, -15.9966, -37.6564, 0.12", "-10.3088, -15.9294, -38.9524, 0.12", "-11.2592, -15.8738, -40.0602, 0.84", "-11.5511, -15.868, -40.3889, 0.84", "-12.662, -15.906, -41.584, 0.12", "-12.9327, -15.9239, -41.8673, 0.12", "-13.3957, -15.9611, -42.278, 0.12", "-13.6863, -15.9775, -42.531, 1.08", "-14.3187, -16.0036, -42.9884, 0.84", "-15.4263, -16.026, -43.7224, 0.12", "-16.3033, -16.0121, -44.2843, 0.12", "-16.662, -15.9786, -44.6349, 0.48", "-17.1721, -15.8886, -45.294, 0.12", "-17.6546, -15.7677, -45.9987, 0.12", "-17.8784, -15.6743, -46.4397, 0.84", "-18.3094, -15.4638, -47.4059, 1.08", "-19.3233, -14.9696, -49.934, 0.6", "-19.6251, -14.8238, -50.7073, 0.84", "-19.8058, -14.7386, -51.1799, 0.84", "-20.8629, -14.2877, -53.9095, 0.12", "-21.0652, -14.2199, -54.365, 0.12", "-21.3613, -14.157, -54.8943, 0.12", "-21.5898, -14.1281, -55.2034, 0.48", "-22.069, -14.0926, -55.8066, 0.12", "-23.2063, -14.055, -57.1114, 0.12", "-23.7411, -14.0537, -57.6106, 0.12", "-24.4667, -14.016, -58.3081, 0.84", "-24.7302, -13.9922, -58.5606, 0.84", "-25.7514, -13.8967, -59.505, 0.12", "-26.1273, -13.8613, -59.8368, 0.12", "-26.4984, -13.8232, -60.1509, 0.12", "-27.7689, -13.6902, -61.1634, 0.12", "-27.9614, -13.6653, -61.311, 0.72", "-28.8206, -13.5337, -61.952, 0.72", "-29.5798, -13.4005, -62.5118, 0.12", "-30.0387, -13.3127, -62.9038, 0.12", "-30.659, -13.1887, -63.4773, 0.48", "-31.4986, -13.0121, -64.2953, 0.12", "-31.754, -12.9542, -64.5509, 0.12", "-32.3742, -12.7716, -65.3043, 0.72", "-33.1417, -12.5141, -66.342, 0.12", "-33.3505, -12.4434, -66.6704, 0.12", "-33.4077, -12.4261, -66.7768, 0.6", "-33.6432, -12.374, -67.218, 0.6", "-34.6877, -12.1891, -69.1202, 0.48", "-34.9941, -12.1472, -69.6596, 0.48", "-35.8657, -12.0952, -71.1669, 0.72", "-36.685, -12.1076, -72.497, 0.12", "-36.9846, -12.1386, -72.9462, 0.12", "-37.3409, -12.2068, -73.442, 0.48", "-38.3369, -12.5166, -74.6052, 0.12", "-39.225, -12.8932, -75.6488, 0.12", "-39.8277, -13.2189, -76.2986, 0.12", "-40.2521, -13.4964, -76.7256, 0.12", "-40.6766, -13.8439, -77.2109, 0.6", "-41.0451, -14.1876, -77.6945, 0.6", "-41.8117, -14.9607, -78.7214, 0.12", "-42.0844, -15.2353, -79.1027, 0.12", "-42.3903, -15.5242, -79.5535, 0.12", "-43.2491, -16.2601, -80.7162, 0.12", "-43.9613, -16.8209, -81.7056, 0.12", "-44.2593, -17.0307, -82.111, 0.12", "-44.5274, -17.1905, -82.4251, 0.12", "-44.8918, -17.3842, -82.8344, 0.6", "-45.5515, -17.7101, -83.5817, 0.6", "-47.1104, -18.4155, -85.0192, 0.12", "-47.5014, -18.5976, -85.3585, 0.12", "-48.1256, -18.8772, -85.9472, 0.12", "-48.5419, -19.0425, -86.3242, 0.36", "-49.6441, -19.4109, -87.2437, 0.12", "-50.8489, -19.7269, -88.1906, 0.12", "-51.815, -19.9734, -88.8155, 0.36", "-52.685, -20.1895, -89.3719, 0.12", "-53.8088, -20.4494, -90.1084, 0.12", "-54.2348, -20.5275, -90.3655, 0.48", "-54.9711, -20.6523, -90.8325, 0.12", "-55.6726, -20.7781, -91.3497, 0.12", "-56.0715, -20.8505, -91.6646, 0.36", "-56.7168, -20.9703, -92.337, 0.12", "-57.1633, -21.0041, -93.1035, 0.12", "-57.6651, -20.9654, -94.2764, 0.6", "-57.7443, -20.9339, -94.5355, 0.6", "-58.0579, -20.6683, -95.9018, 0.12", "-58.3245, -20.1963, -97.717, 0.48", "-58.5029, -19.4583, -100.054, 0.12", "-58.513, -19.2074, -100.701, 0.12", "-58.4749, -18.5889, -102.029, 0.12", "-58.4389, -18.3816, -102.496, 0.6", "-58.2256, -17.6446, -104.236, 0.48", "-57.9922, -17.056, -105.795, 0.24", "-57.8862, -16.821, -106.638, 0.24", "-57.6694, -16.2878, -109.379, 0.84", "-57.6098, -15.8293, -112.48, 0.48", "-57.6275, -15.7868, -113.024, 0.48", "-57.6791, -15.784, -113.566, 0.6", "-58.1022, -15.9567, -116.199, 0.6", "-58.7498, -16.2975, -119.442, 0.12", "-59.1643, -16.5202, -120.977, 0.12", "-59.9312, -16.8303, -123.2, 0.12", "-60.2246, -16.9272, -124.023, 0.12", "-60.5463, -17.0304, -124.907, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.89785, -16.5916, -29.0073, 0.12", "-3.12223, -16.3804, -29.0212, 0.12", "-3.40943, -16.0943, -29.0326, 0.12", "-3.84633, -15.5912, -29.2439, 0.12", "-4.05562, -15.2904, -29.4078, 0.6", "-4.26701, -14.902, -29.6812, 0.84", "-4.38896, -14.6494, -29.8832, 0.6", "-4.57409, -14.2081, -30.2634, 0.6", "-4.98222, -12.9871, -31.5122, 0.12", "-5.10868, -12.4973, -32.0808, 0.12", "-5.29663, -11.7557, -32.9616, 0.72", "-5.43614, -11.2292, -33.5835, 0.72", "-5.51415, -10.9679, -33.8824, 0.72", "-5.78728, -10.0876, -34.8747, 0.72", "-6.06063, -9.33822, -35.6859, 0.12", "-6.30535, -8.73015, -36.3695, 0.12", "-6.44034, -8.41533, -36.7018, 0.12", "-6.58654, -8.07182, -37.0321, 0.72", "-6.95243, -7.26196, -37.7711, 0.84", "-7.36673, -6.45804, -38.4248, 0.12", "-7.52911, -6.16432, -38.6784, 0.12", "-7.97338, -5.37085, -39.404, 0.12", "-8.31395, -4.78772, -39.9166, 0.12", "-8.55067, -4.34967, -40.293, 0.6", "-8.7643, -3.94529, -40.6072, 0.6", "-9.17579, -3.12689, -41.2188, 0.12", "-9.32624, -2.81, -41.4657, 0.12", "-9.55448, -2.3137, -41.8582, 0.12", "-10.2103, -0.901918, -42.9713, 0.12", "-10.4022, -0.481116, -43.326, 0.12", "-10.5104, -0.236681, -43.5378, 0.48", "-10.8971, 0.605343, -44.2438, 0.36", "-10.9955, 0.804468, -44.4481, 0.36", "-11.1746, 1.1315, -44.8009, 0.72", "-11.831, 2.2078, -45.9281, 0.12", "-12.0239, 2.55533, -46.3379, 0.12", "-12.1581, 2.83881, -46.6951, 0.6", "-12.6483, 3.96826, -48.1807, 0.12", "-12.9666, 4.71551, -49.1776, 0.12", "-13.0859, 4.99663, -49.5479, 0.96", "-13.5557, 6.06846, -50.8956, 0.96", "-13.779, 6.57764, -51.5656, 0.12", "-13.8515, 6.74931, -51.7817, 0.12", "-13.9831, 7.06379, -52.1285, 0.12", "-14.0681, 7.27648, -52.3842, 0.12", "-14.3528, 8.02392, -53.115, 0.12", "-14.5692, 8.60114, -53.5736, 0.84", "-14.7146, 9.03882, -53.8818, 0.96", "-14.7809, 9.26086, -54.026, 0.96", "-15.1013, 10.4265, -54.8013, 0.12", "-15.4179, 11.5533, -55.5078, 0.12", "-15.7908, 12.8547, -56.2632, 0.12", "-16.0704, 13.858, -56.821, 0.12", "-16.1913, 14.3076, -57.0564, 0.72", "-16.5354, 15.5816, -57.6746, 0.12", "-16.8811, 16.8154, -58.2042, 0.12", "-16.9325, 16.9882, -58.2763, 0.48", "-16.9716, 17.1128, -58.3195, 0.12", "-17.2897, 18.019, -58.6213, 0.12", "-17.675, 18.9489, -58.8646, 0.6", "-17.8222, 19.2604, -58.9298, 0.12", "-18.2802, 20.173, -59.1355, 0.12", "-18.5527, 20.7179, -59.2539, 0.36", "-18.6703, 20.9543, -59.303, 0.12", "-19.3941, 22.4929, -59.5743, 0.12", "-19.6071, 22.9822, -59.6382, 0.72", "-19.8556, 23.6112, -59.7116, 0.48", "-19.9829, 24.0345, -59.7546, 0.12", "-20.0127, 24.1623, -59.7738, 0.12", "-20.266, 25.5632, -60.0306, 0.12", "-20.3119, 25.9063, -60.0993, 0.24", "-20.3402, 26.0967, -60.135, 0.12", "-20.5561, 27.4083, -60.3898, 0.12", "-20.7551, 28.4898, -60.651, 0.48", "-20.8119, 28.7831, -60.7293, 0.12", "-21.0714, 30.1095, -61.1147, 0.12", "-21.2728, 31.153, -61.4175, 0.12", "-21.385, 31.71, -61.5887, 0.6", "-21.5694, 32.541, -61.8434, 0.12", "-21.7874, 33.4956, -62.0956, 0.12", "-21.8515, 33.7776, -62.1782, 0.48", "-21.9254, 34.1012, -62.2926, 0.48", "-22.0445, 34.6143, -62.4908, 0.12", "-22.2709, 35.5723, -62.8302, 0.12", "-22.3757, 36.037, -62.9372, 0.48" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.12283, -49.7106, -5.81617, 0.72", "-7.01193, -51.268, -5.85751, 0.72", "-7.42452, -52.0325, -5.92675, 0.48", "-7.99309, -53.1955, -6.01242, 0.48", "-8.65597, -54.682, -6.11087, 0.48", "-8.95066, -55.3659, -6.15007, 0.6", "-9.58305, -56.8525, -6.22388, 0.84", "-9.8131, -57.4172, -6.26927, 0.96", "-10.3092, -58.6035, -6.34453, 0.48", "-10.6135, -59.3029, -6.37493, 0.36", "-11.1965, -60.5668, -6.35443, 0.36", "-11.6657, -61.5341, -6.28557, 0.72", "-12.0613, -62.312, -6.1852, 0.36", "-12.407, -62.9647, -6.10679, 0.72", "-12.8594, -63.8119, -6.02328, 1.08", "-13.3228, -64.7397, -5.9511, 1.08", "-13.6503, -65.476, -5.91377, 0.72", "-13.9616, -66.2284, -5.89686, 0.72", "-14.2115, -66.845, -5.89915, 0.72", "-14.5864, -67.7242, -5.92441, 0.72", "-15.0954, -68.8765, -5.98734, 0.36", "-15.4556, -69.6772, -6.05503, 0.36", "-15.8399, -70.5607, -6.12182, 0.48", "-16.1919, -71.4617, -6.18059, 0.48", "-16.4509, -72.2697, -6.22102, 0.36", "-16.6476, -73.0623, -6.27988, 0.48", "-16.7802, -73.7729, -6.34052, 0.48", "-16.9781, -75.1186, -6.48284, 0.48", "-17.1147, -76.3193, -6.64907, 0.48", "-17.2356, -77.6566, -6.86347, 0.48", "-17.3398, -78.973, -7.0934, 0.36", "-17.4298, -79.9752, -7.27661, 0.6", "-17.5775, -81.164, -7.49265, 0.72", "-17.7122, -81.9694, -7.64825, 0.36", "-17.8691, -82.7067, -7.76687, 0.48", "-18.0663, -83.436, -7.84522, 0.48", "-18.3157, -84.1988, -7.90859, 0.36", "-18.7099, -85.2023, -8.07293, 0.36", "-19.139, -86.118, -8.31005, 0.48", "-19.5524, -86.876, -8.54809, 0.6", "-20.2595, -88.0977, -9.02923, 0.96", "-21.0343, -89.4032, -9.62704, 0.96", "-21.8395, -90.8365, -10.3392, 0.48", "-22.3752, -91.9176, -10.8932, 0.48", "-22.7668, -92.7899, -11.3331, 0.6", "-23.2642, -94.0048, -11.931, 0.84", "-23.552, -94.7751, -12.2559, 0.6", "-23.899, -95.7278, -12.5655, 0.72", "-24.3621, -96.9865, -12.8645, 0.36", "-24.6598, -97.7718, -13.0273, 0.36", "-25.0008, -98.6622, -13.1968, 0.48", "-25.4492, -99.8393, -13.3931, 0.48", "-25.845, -100.931, -13.5855, 0.48", "-26.1273, -101.748, -13.7377, 0.6", "-26.3816, -102.531, -13.8849, 0.84", "-26.6976, -103.669, -14.1058, 0.84", "-27.0387, -105.002, -14.3599, 0.84", "-27.2865, -105.985, -14.5338, 0.48", "-27.5364, -106.89, -14.6691, 0.48", "-27.8354, -107.802, -14.8125, 0.6", "-28.0859, -108.433, -14.9231, 0.6", "-28.4922, -109.302, -15.0989, 0.36", "-28.825, -109.962, -15.243, 0.36", "-29.0854, -110.523, -15.3669, 0.36", "-29.3419, -111.159, -15.5001, 0.6", "-29.5822, -111.872, -15.6356, 0.84", "-29.8118, -112.634, -15.7573, 0.84", "-30.1669, -113.958, -15.968, 0.36", "-30.4938, -115.141, -16.1424, 0.36", "-30.7224, -115.91, -16.2547, 0.36", "-30.8811, -116.358, -16.3178, 0.72", "-31.2404, -117.146, -16.4689, 0.96", "-31.8579, -118.245, -16.7617, 0.36", "-32.2549, -118.846, -16.9643, 0.36", "-32.554, -119.288, -17.1305, 0.72", "-32.9542, -119.942, -17.3779, 0.72", "-33.5753, -121.064, -17.7896, 0.36", "-33.7248, -121.348, -17.8865, 0.36", "-34.1283, -122.116, -18.1331, 0.48", "-34.7161, -123.271, -18.5227, 0.48", "-35.155, -124.215, -18.8259, 0.48", "-35.4193, -124.856, -19.0534, 0.48", "-35.6865, -125.566, -19.3607, 0.48", "-35.9447, -126.199, -19.6988, 0.36", "-36.2005, -126.727, -20.0373, 0.6", "-36.5695, -127.382, -20.5288, 0.72", "-37.0009, -128.099, -21.0699, 0.72", "-37.4235, -128.827, -21.5974, 0.48", "-37.6046, -129.143, -21.8107, 0.36", "-37.8641, -129.634, -22.1794, 0.36", "-38.0815, -129.998, -22.5209, 0.6", "-38.4509, -130.52, -23.0902, 0.6", "-38.8854, -131.085, -23.7351, 0.6", "-39.1254, -131.384, -24.1038, 0.6", "-40.1881, -132.777, -25.8836, 0.72", "-40.6793, -133.505, -26.8097, 0.48", "-40.911, -133.904, -27.2837, 0.48", "-41.0477, -134.171, -27.5769, 0.48", "-41.2658, -134.547, -27.9476, 0.72", "-41.5483, -134.92, -28.3202, 0.84", "-41.9754, -135.409, -28.8134, 0.84", "-42.4559, -136.019, -29.4809, 0.48", "-42.6872, -136.313, -29.8584, 0.48", "-43.2304, -137.008, -30.7587, 0.72", "-44.0054, -138.026, -32.0628, 0.72", "-44.649, -139.002, -33.2094, 0.36", "-44.802, -139.275, -33.5129, 0.36", "-45.0832, -139.864, -34.1536, 0.36", "-45.4383, -140.689, -35.1217, 0.6", "-45.5492, -141.002, -35.5091, 0.84", "-45.8736, -141.978, -36.7307, 0.36", "-46.0714, -142.608, -37.5653, 0.48", "-46.2864, -143.289, -38.6747, 0.96", "-46.5683, -144.122, -40.3326, 0.96", "-46.8949, -144.817, -42.0299, 0.48", "-46.9604, -144.906, -42.3372, 0.48", "-47.1428, -145.113, -43.2302, 0.72", "-47.5307, -145.639, -45.463, 0.36", "-47.6214, -145.816, -46.1805, 0.6", "-47.7269, -146.089, -47.1715, 0.72", "-48.2459, -147.398, -51.6595, 0.48", "-48.3234, -147.59, -52.2446, 0.36", "-48.4517, -147.913, -53.107, 0.36", "-48.5039, -148.186, -53.6461, 0.36", "-48.5454, -148.437, -54.1116, 0.36", "-48.5814, -148.731, -54.661, 0.48", "-48.6755, -149.04, -55.176, 0.48", "-48.7656, -149.457, -56.24, 0.36", "-48.7721, -149.601, -56.655, 0.36", "-48.6632, -150.079, -58.0245, 0.36", "-48.413, -150.603, -59.5943, 0.48", "-48.3032, -150.792, -60.157, 0.6", "-47.8011, -151.56, -62.2725, 0.36", "-47.6214, -151.823, -62.9225, 0.36", "-47.405, -152.163, -63.6547, 0.48", "-47.1568, -152.791, -64.7197, 0.12", "-47.1229, -153.213, -65.3435, 0.12", "-47.1367, -153.385, -65.5837, 0.12", "-47.1591, -153.477, -65.6979, 0.6", "-47.2949, -153.835, -66.1573, 0.84", "-47.82, -155.019, -67.5599, 0.6", "-48.1941, -155.956, -68.4816, 0.6", "-48.2852, -156.158, -68.7133, 0.12", "-48.5428, -156.583, -69.2594, 0.12", "-48.6916, -156.778, -69.5473, 0.24", "-49.036, -157.154, -70.1379, 0.24", "-49.3395, -157.441, -70.5767, 0.24", "-50.7075, -158.548, -72.245, 0.48", "-51.2067, -158.938, -72.8301, 0.48", "-51.8251, -159.444, -73.5888, 0.48", "-52.1389, -159.722, -74.0091, 0.36", "-52.3604, -159.94, -74.3546, 0.12", "-53.0418, -160.591, -75.2945, 0.12", "-53.3792, -160.951, -75.62, 0.48", "-53.8348, -161.497, -76.2062, 0.6", "-54.3408, -162.17, -77.0184, 0.6", "-54.7838, -162.871, -78.0125, 0.12", "-55.1936, -163.805, -79.4753, 0.12", "-55.5611, -164.994, -81.5188, 0.12", "-56.1135, -166.698, -84.6153, 0.12", "-56.1638, -166.855, -84.8873, 0.12", "-56.2233, -167.073, -85.2377, 0.12", "-56.3335, -167.493, -85.8647, 0.72", "-56.3653, -167.752, -86.2243, 0.84", "-56.4051, -167.917, -86.4659, 0.84", "-56.5444, -168.2, -86.7559, 0.48", "-56.9478, -168.966, -87.568, 0.12", "-57.1849, -169.456, -88.0725, 0.12", "-57.4944, -170.304, -89.049, 0.36", "-57.6704, -171.082, -89.9745, 0.12", "-57.7442, -171.444, -90.4566, 0.12", "-57.7916, -171.71, -90.8382, 0.48", "-57.8592, -172.084, -91.379, 0.6", "-58.1268, -173.116, -92.9073, 0.12", "-58.2625, -173.423, -93.4065, 0.12", "-58.4703, -173.941, -94.1911, 0.12", "-58.5574, -174.099, -94.424, 0.12", "-58.7557, -174.387, -94.8246, 0.48", "-59.0181, -174.752, -95.2608, 0.84", "-60.1386, -176.461, -96.9493, 0.36", "-60.3714, -176.869, -97.3135, 0.36", "-60.8541, -177.879, -98.1116, 0.36", "-61.3066, -178.778, -98.7405, 0.6", "-61.6711, -179.479, -99.198, 0.6", "-62.167, -180.4, -99.722, 0.6", "-62.5164, -181.021, -99.9975, 0.6", "-62.9147, -181.722, -100.316, 0.12", "-63.823, -183.357, -101.037, 0.12", "-64.2847, -184.104, -101.338, 0.6", "-64.6374, -184.62, -101.54, 0.6", "-64.8267, -184.888, -101.63, 0.6", "-65.2201, -185.441, -101.807, 0.12", "-65.5133, -185.872, -101.945, 0.12", "-65.6308, -186.038, -102.002, 0.12", "-65.8475, -186.264, -102.071, 0.12", "-66.2914, -186.64, -102.252, 0.12", "-66.693, -186.94, -102.428, 0.12", "-67.3605, -187.346, -102.702, 0.6", "-68.1755, -187.777, -103.173, 0.6", "-68.7302, -188.066, -103.553, 0.6", "-69.7426, -188.628, -104.34, 0.12", "-69.9737, -188.765, -104.527, 0.12", "-70.6902, -189.242, -105.107, 0.48", "-72.0593, -190.266, -106.159, 0.12", "-72.4377, -190.596, -106.468, 0.12", "-72.8836, -191.052, -106.817, 0.12", "-73.5225, -191.818, -107.349, 0.12", "-73.9408, -192.406, -107.722, 0.6", "-74.1498, -192.783, -107.919, 0.6", "-74.5575, -193.65, -108.434, 0.24", "-74.8058, -194.222, -108.87, 0.24", "-75.2674, -195.318, -109.841, 0.24", "-75.4071, -195.691, -110.192, 0.48", "-75.6159, -196.29, -110.818, 0.48", "-76.151, -197.997, -112.73, 0.36", "-76.2341, -198.289, -113.087, 0.36", "-76.3929, -198.746, -113.666, 0.36", "-76.5325, -199.142, -114.134, 0.36", "-76.8437, -200.093, -115.232, 0.48", "-77.0302, -200.671, -115.895, 0.48", "-77.1898, -201.341, -116.513, 0.12", "-77.3053, -202.159, -117.293, 0.12", "-77.3254, -202.727, -117.845, 0.12", "-77.325, -202.947, -118.053, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.12283, -49.7106, -5.81617, 0.48", "-5.83074, -50.6854, -5.67243, 0.48", "-5.59847, -51.4685, -5.56484, 0.6", "-5.25593, -52.5397, -5.44819, 0.6", "-4.99304, -53.3165, -5.38161, 0.6", "-4.7767, -53.9433, -5.34004, 0.36", "-4.60484, -54.3783, -5.29114, 0.36", "-4.50114, -54.6048, -5.24489, 0.36", "-4.21868, -55.1084, -5.15188, 0.6", "-4.08064, -55.3289, -5.12571, 0.72", "-3.8721, -55.6034, -5.07075, 0.72", "-3.10956, -56.4926, -4.833, 0.72", "-2.83708, -56.796, -4.74264, 0.72", "-2.38548, -57.2765, -4.57894, 0.24", "-1.909, -57.7715, -4.40566, 0.24", "-1.31762, -58.3684, -4.22569, 0.48", "-0.860459, -58.8141, -4.10591, 0.6", "-0.380419, -59.2785, -4.01335, 0.6", "0.467228, -60.0711, -3.8333, 0.36", "0.769419, -60.3511, -3.7719, 0.36", "1.35683, -60.908, -3.65873, 0.36", "1.71647, -61.2713, -3.58414, 0.6", "2.04867, -61.624, -3.50241, 0.6", "2.61226, -62.2767, -3.33138, 0.36", "2.98993, -62.7449, -3.19771, 0.36", "3.3682, -63.2207, -3.05869, 0.36", "3.89149, -63.8536, -2.82325, 0.48", "4.19064, -64.1972, -2.6819, 0.48", "4.48517, -64.5218, -2.53528, 0.48", "5.00628, -65.0662, -2.29147, 0.48", "5.61087, -65.6694, -2.00579, 0.48", "6.50265, -66.5717, -1.62332, 0.48", "6.85063, -66.9479, -1.48708, 0.36", "7.00017, -67.1154, -1.43046, 0.36", "7.26107, -67.4332, -1.35171, 0.48", "7.623, -67.9425, -1.26031, 0.36", "8.00358, -68.5369, -1.1774, 0.36", "8.30222, -69.0417, -1.14403, 0.48", "8.74974, -69.7668, -1.09115, 0.36", "9.32134, -70.6295, -1.03246, 0.36", "9.83855, -71.3656, -0.983722, 0.36", "10.3697, -72.0732, -0.946828, 0.36", "10.7635, -72.5595, -0.910274, 0.36", "11.4024, -73.3067, -0.854972, 0.36", "11.9311, -73.9359, -0.820577, 0.48", "12.3895, -74.4947, -0.794126, 0.84", "12.9267, -75.172, -0.790458, 0.48", "13.3165, -75.6746, -0.759214, 0.24", "13.7569, -76.2737, -0.693077, 0.24", "14.2794, -77.0298, -0.598953, 0.24", "14.746, -77.7226, -0.502011, 0.24", "15.1319, -78.2717, -0.394856, 0.24", "15.8561, -79.2827, -0.169556, 0.72", "16.0642, -79.5685, -0.107062, 0.72", "16.5457, -80.2245, 0.0196356, 0.36", "16.9489, -80.7661, 0.0943612, 0.36", "17.7271, -81.8778, 0.155353, 0.24", "18.1727, -82.593, 0.132458, 0.24", "18.4833, -83.1401, 0.0770932, 0.24", "18.8509, -83.8377, 0.00987459, 0.24", "19.1006, -84.3695, -0.0429354, 0.36", "19.3321, -84.919, -0.110723, 0.36", "19.5324, -85.4676, -0.201646, 0.48", "19.7856, -86.1883, -0.289505, 0.48", "19.9382, -86.6383, -0.327108, 0.48", "20.0905, -87.0993, -0.349635, 0.6", "20.232, -87.5483, -0.380368, 0.72", "20.4003, -88.1007, -0.433995, 0.72", "20.6375, -88.8942, -0.53403, 0.24", "20.846, -89.5653, -0.617116, 0.24", "21.0003, -90.0082, -0.665476, 0.48", "21.224, -90.5932, -0.724333, 0.6", "21.5492, -91.3726, -0.79539, 0.36", "21.9532, -92.2535, -0.871918, 0.36", "22.3489, -93.0815, -0.964323, 0.36", "22.6421, -93.6952, -1.04841, 0.36", "22.7985, -94.0176, -1.10225, 0.24", "22.8289, -94.0783, -1.1111, 0.48", "23.1817, -94.7764, -1.20612, 0.6", "23.4875, -95.3647, -1.2939, 0.36", "23.7457, -95.8743, -1.37784, 0.36", "23.8635, -96.107, -1.40881, 0.48", "24.2518, -96.8827, -1.50338, 0.48", "24.4651, -97.2994, -1.54239, 0.36", "24.852, -98.0417, -1.59258, 0.36", "25.2424, -98.7904, -1.63177, 0.36", "25.586, -99.4477, -1.66616, 0.36", "26.0179, -100.302, -1.72092, 0.36", "26.4385, -101.154, -1.80063, 0.36", "26.6031, -101.486, -1.8285, 0.48", "26.8094, -101.907, -1.857, 0.48", "27.0816, -102.423, -1.87942, 0.48", "27.4431, -103.071, -1.90379, 0.48", "27.8177, -103.702, -1.93656, 0.48", "28.2527, -104.434, -1.99672, 0.6", "28.3897, -104.659, -2.02103, 0.6", "28.8146, -105.351, -2.11462, 0.36", "29.3369, -106.181, -2.25571, 0.36", "29.7036, -106.75, -2.35937, 0.36", "30.2289, -107.53, -2.51986, 0.36", "30.7495, -108.285, -2.69735, 0.36", "31.0935, -108.794, -2.83111, 0.36", "31.3659, -109.218, -2.97011, 0.36", "31.5426, -109.492, -3.07046, 0.48", "31.845, -109.965, -3.25707, 0.48", "32.2292, -110.588, -3.51175, 0.48", "32.6311, -111.283, -3.7951, 0.48", "33.0641, -112.073, -4.1121, 0.48", "33.2438, -112.43, -4.24917, 0.48", "33.5655, -113.094, -4.4954, 0.48", "33.7995, -113.601, -4.67475, 0.48", "33.9056, -113.827, -4.75615, 0.6", "34.0185, -114.049, -4.83638, 0.72", "34.2769, -114.556, -5.00038, 0.48", "34.5529, -115.095, -5.18102, 0.48", "34.672, -115.315, -5.25867, 0.48", "35.0263, -115.91, -5.47833, 0.36", "35.3244, -116.38, -5.65727, 0.36", "35.5782, -116.749, -5.80496, 0.36", "35.9605, -117.269, -6.01734, 0.36", "36.2997, -117.703, -6.18006, 0.48", "36.7437, -118.272, -6.369, 0.6", "37.4947, -119.242, -6.65327, 0.48", "37.9866, -119.883, -6.83066, 0.36", "38.6337, -120.728, -7.07195, 0.36", "39.0578, -121.313, -7.23605, 0.6", "39.5022, -121.969, -7.43379, 0.6", "39.9396, -122.654, -7.6517, 0.6", "40.355, -123.345, -7.89901, 0.6", "40.96, -124.401, -8.31614, 0.48", "41.6343, -125.648, -8.84286, 0.48", "41.9943, -126.334, -9.14914, 0.48", "42.5066, -127.319, -9.61595, 0.48", "42.8714, -128.03, -9.96608, 0.24", "43.1848, -128.667, -10.2799, 0.24", "43.6925, -129.739, -10.8082, 0.24", "43.9532, -130.307, -11.0822, 0.24", "44.2451, -130.955, -11.3647, 0.6", "44.3679, -131.237, -11.4704, 0.84", "44.556, -131.664, -11.6, 0.84", "44.8245, -132.278, -11.762, 0.48", "45.2442, -133.245, -11.9724, 0.36", "45.5256, -133.915, -12.0844, 0.36", "45.8462, -134.664, -12.1721, 0.36", "46.1017, -135.23, -12.2351, 0.36", "46.3693, -135.765, -12.2971, 0.36", "46.5843, -136.169, -12.3439, 0.48", "46.9379, -136.814, -12.4379, 0.48", "47.1462, -137.201, -12.5061, 0.36", "47.5304, -137.912, -12.6608, 0.36", "47.8962, -138.55, -12.8097, 0.36", "48.1938, -139.026, -12.9347, 0.36", "48.7885, -139.874, -13.1909, 0.36", "49.1296, -140.331, -13.3572, 0.36", "49.6148, -140.955, -13.6164, 0.36", "50.0603, -141.496, -13.8662, 0.48", "50.5236, -142.016, -14.1334, 0.48", "51.3168, -142.826, -14.5937, 0.48", "51.7186, -143.192, -14.8012, 0.12", "52.1253, -143.544, -14.9872, 0.12", "52.4771, -143.855, -15.1282, 0.24", "52.7751, -144.128, -15.229, 0.24", "53.3842, -144.668, -15.3969, 0.12", "54.0777, -145.236, -15.5546, 0.36", "54.5342, -145.58, -15.6246, 0.6", "54.9073, -145.853, -15.6756, 0.36", "55.2953, -146.142, -15.7447, 0.36", "56.1793, -146.824, -15.9461, 0.36", "56.5397, -147.116, -16.0508, 0.36", "57.121, -147.68, -16.2772, 0.24", "57.428, -148.033, -16.4027, 0.24", "57.8275, -148.611, -16.5954, 0.36", "57.9733, -148.902, -16.7002, 0.36", "58.0859, -149.221, -16.823, 0.36", "58.3522, -150.05, -17.1753, 0.36", "58.5374, -150.581, -17.3823, 0.48", "58.7412, -151.066, -17.5223, 0.48", "59.0229, -151.625, -17.6386, 0.12", "59.4597, -152.443, -17.7812, 0.12", "59.6654, -152.808, -17.8346, 0.48", "60.2784, -153.763, -17.9485, 0.12", "60.7771, -154.448, -18.0159, 0.12", "61.0404, -154.774, -18.0406, 0.6", "61.4872, -155.297, -18.0804, 0.12", "61.7594, -155.607, -18.1545, 0.12", "62.1633, -156.078, -18.35, 0.12", "62.4329, -156.415, -18.5761, 0.12", "62.5757, -156.602, -18.6861, 0.72", "62.8831, -157.05, -18.8971, 0.72", "63.4048, -157.859, -19.1988, 0.48", "63.5646, -158.157, -19.2942, 0.48", "63.8957, -158.878, -19.4914, 0.12", "64.5707, -160.478, -19.8708, 0.12", "64.7106, -160.816, -19.9409, 0.12", "64.8609, -161.208, -20.0025, 0.6", "65.1666, -162.036, -20.0895, 0.12", "65.229, -162.217, -20.115, 0.12", "65.499, -163.05, -20.2669, 0.12", "65.6205, -163.504, -20.3903, 0.12", "65.7296, -163.973, -20.4964, 0.48", "65.8006, -164.316, -20.5496, 0.12", "65.9443, -165.126, -20.6154, 0.12", "66.0727, -165.861, -20.6664, 0.12", "66.1397, -166.279, -20.7102, 0.96", "66.238, -166.896, -20.7983, 0.48", "66.3282, -167.427, -20.892, 0.36", "66.3751, -167.751, -20.9562, 0.36", "66.445, -168.395, -21.089, 0.36", "66.5015, -169.238, -21.26, 0.24", "66.5392, -170.04, -21.4501, 0.24", "66.5432, -170.382, -21.5384, 0.24", "66.5479, -170.644, -21.6127, 0.6", "66.5683, -171.218, -21.7698, 0.72", "66.5804, -171.631, -21.8705, 0.84", "66.631, -172.3, -22.0107, 0.12", "66.6637, -172.65, -22.1036, 0.12", "66.7281, -173.256, -22.2793, 0.12", "66.7865, -173.694, -22.4139, 0.12", "66.8266, -173.915, -22.4865, 0.12", "66.9304, -174.352, -22.6287, 0.6", "67.0755, -174.917, -22.7874, 0.12", "67.2306, -175.575, -22.9589, 0.12", "67.2776, -175.825, -23.031, 0.48", "67.3817, -176.37, -23.2022, 0.48", "67.4913, -176.859, -23.3655, 0.48", "67.719, -177.714, -23.6588, 0.48", "67.8669, -178.192, -23.8206, 0.6", "68.1016, -178.95, -24.1196, 0.12", "68.2492, -179.467, -24.3351, 0.12", "68.3926, -179.996, -24.5664, 0.24", "68.5489, -180.545, -24.8172, 0.24", "68.7502, -181.182, -25.1446, 0.48", "68.936, -181.734, -25.4498, 0.12", "69.0628, -182.137, -25.6652, 0.12", "69.1133, -182.363, -25.7863, 0.6", "69.1524, -182.694, -25.9496, 0.6", "69.1332, -183.418, -26.3626, 0.12", "69.0643, -183.953, -26.6743, 0.12", "69.0048, -184.27, -26.8536, 0.12", "68.9158, -184.619, -27.0548, 0.6", "68.7439, -185.197, -27.366, 0.6", "68.3195, -186.519, -28.0466, 0.12", "68.1133, -187.111, -28.3542, 0.12", "68.0686, -187.258, -28.4307, 0.36", "68.0392, -187.415, -28.5116, 0.12", "67.9818, -188.038, -28.8173, 0.12", "67.9772, -188.621, -29.0687, 0.84", "68.0227, -189.474, -29.3572, 0.12", "68.0577, -190.356, -29.7042, 0.12", "68.0727, -191.263, -30.119, 0.12", "68.0724, -191.596, -30.2815, 0.72", "68.0629, -192.124, -30.5415, 0.96", "68.0551, -192.463, -30.6987, 0.96", "68.0142, -193.616, -31.1948, 0.48", "67.9611, -194.229, -31.4562, 0.12", "67.8601, -194.975, -31.7813, 0.12", "67.7353, -195.718, -32.0814, 0.12", "67.6699, -196.045, -32.1917, 0.12", "67.5375, -196.635, -32.3404, 0.12", "67.4012, -197.132, -32.4381, 0.96", "67.1148, -197.974, -32.618, 0.12", "66.8442, -198.647, -32.795, 0.12", "66.4553, -199.517, -33.0566, 0.12", "66.2829, -199.877, -33.1833, 0.12", "65.8277, -200.837, -33.5442, 0.48", "65.6765, -201.159, -33.6688, 0.12", "65.476, -201.53, -33.891, 0.12", "65.4107, -201.646, -33.9847, 0.36", "65.2318, -201.945, -34.2577, 0.12", "64.8, -202.658, -34.9452, 0.12", "64.4234, -203.278, -35.5575, 1.32", "63.4078, -204.871, -37.2156, 0.84", "63.2634, -205.074, -37.4509, 0.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.66796, -37.3377, -16.0792, 0.36", "-5.66316, -38.335, -17.1021, 0.36", "-5.62799, -38.9211, -17.6849, 0.36", "-5.58094, -39.4403, -18.1358, 0.6", "-5.49675, -40.0912, -18.6389, 0.96", "-5.4223, -40.5215, -18.911, 0.84", "-5.12411, -41.8383, -19.5789, 0.36", "-4.95237, -42.3395, -19.7334, 0.36", "-4.57643, -43.241, -19.9098, 0.36", "-4.34932, -43.7463, -19.954, 0.48", "-3.87618, -44.7803, -19.9591, 0.48", "-3.46996, -45.6314, -19.9237, 0.12", "-3.00613, -46.5497, -19.8435, 0.12", "-2.63929, -47.189, -19.8131, 0.12", "-2.51308, -47.3999, -19.8118, 0.84", "-2.24628, -47.8698, -19.8349, 0.84", "-1.8391, -48.6457, -19.948, 0.36", "-1.56659, -49.2088, -20.0545, 0.12", "-1.00363, -50.3818, -20.3124, 0.12", "-0.821426, -50.7194, -20.3901, 0.48", "-0.633198, -51.0574, -20.4747, 0.48", "-0.33609, -51.5945, -20.6078, 0.36", "-0.210218, -51.8697, -20.6819, 0.36", "-0.00711219, -52.4367, -20.8921, 0.48", "0.159164, -53.1244, -21.3347, 0.36", "0.267564, -53.6592, -21.7419, 0.48", "0.319636, -53.9879, -22.0169, 0.72", "0.378805, -54.59, -22.5772, 0.72", "0.399147, -55.2472, -23.2096, 0.72", "0.413491, -56.5577, -24.5237, 0.12", "0.420794, -56.799, -24.7679, 0.12", "0.428863, -56.8695, -24.8378, 0.48", "0.553586, -57.4803, -25.4262, 0.48", "0.781184, -58.2419, -26.0683, 0.12", "0.968069, -58.7518, -26.4643, 0.12", "1.11521, -59.1159, -26.7105, 0.12", "1.21586, -59.3999, -26.9072, 0.48", "1.38389, -59.9356, -27.2934, 0.84", "1.58448, -60.6424, -27.7966, 0.84", "1.77473, -61.611, -28.4638, 0.12", "1.78357, -61.7013, -28.5253, 0.12", "1.79401, -62.287, -28.9124, 0.12", "1.75253, -62.9912, -29.4554, 0.12", "1.71315, -63.4159, -29.7962, 0.12", "1.65106, -64.1812, -30.3877, 0.12", "1.60992, -64.7948, -30.8707, 0.84", "1.59059, -65.2783, -31.2717, 0.72", "1.57951, -66.7511, -32.5257, 0.24", "1.58371, -67.0208, -32.8089, 0.24", "1.63808, -67.6659, -33.5933, 0.24", "1.76528, -68.2979, -34.4275, 0.6", "1.87251, -68.6824, -34.9415, 0.84", "1.94764, -68.8796, -35.2091, 0.6", "2.6552, -70.4365, -37.171, 0.12", "2.76289, -70.6607, -37.4632, 0.12", "2.91945, -70.974, -37.8774, 0.12", "2.95716, -71.0555, -37.9648, 0.48", "3.0826, -71.3875, -38.2594, 0.48", "3.18317, -71.7553, -38.4853, 0.48", "3.28906, -72.3685, -38.6705, 0.36", "3.34171, -72.7478, -38.7841, 0.36", "3.42611, -73.4089, -38.9721, 0.36", "3.51156, -73.9865, -39.1627, 0.12", "3.60217, -74.5824, -39.3698, 0.12", "3.67044, -75.0265, -39.5288, 0.6", "3.75368, -75.5769, -39.7167, 0.84", "3.8231, -76.004, -39.8613, 0.84", "3.96794, -76.9092, -40.2107, 0.36", "4.03837, -77.4077, -40.4238, 0.36", "4.09344, -77.881, -40.6545, 0.48", "4.1413, -78.275, -40.8562, 0.48", "4.19689, -78.6784, -41.0576, 0.72", "4.33282, -79.5564, -41.4441, 0.72", "4.45805, -80.2405, -41.6978, 0.36", "4.49684, -80.4093, -41.7661, 0.24", "4.61686, -80.8455, -41.941, 0.12", "4.84463, -81.575, -42.1896, 0.12", "5.0469, -82.1815, -42.3283, 0.12", "5.08494, -82.2849, -42.3387, 0.48", "5.36045, -82.971, -42.3983, 0.6", "5.49101, -83.2841, -42.4293, 0.6", "5.79529, -83.9717, -42.4991, 0.12", "6.18598, -84.8164, -42.5803, 0.12", "6.3868, -85.2377, -42.6153, 0.36", "6.64011, -85.7856, -42.6505, 0.12", "6.91481, -86.3868, -42.6924, 0.12", "7.26935, -87.198, -42.7865, 0.12", "7.43647, -87.6068, -42.8522, 0.12", "7.57916, -87.9742, -42.911, 0.48", "7.73061, -88.3906, -42.971, 0.48", "7.90091, -88.8807, -43.0399, 0.12", "8.29322, -90.0898, -43.2422, 0.12", "8.35106, -90.3007, -43.2781, 0.48", "8.43731, -90.6365, -43.3313, 0.48", "8.51417, -90.9748, -43.3839, 0.48", "8.59571, -91.3578, -43.4373, 0.12", "8.70014, -91.9003, -43.4954, 0.12", "8.88832, -93.0025, -43.614, 0.12", "8.96256, -93.492, -43.6605, 0.24", "9.01101, -93.7969, -43.6796, 0.12", "9.12501, -94.4906, -43.6997, 0.12", "9.27451, -95.3653, -43.6958, 0.12", "9.33406, -95.6934, -43.6895, 0.12", "9.45642, -96.3487, -43.6641, 0.12", "9.59208, -97.0176, -43.6263, 0.48", "9.64633, -97.2419, -43.61, 0.48", "9.70077, -97.4569, -43.5945, 0.48", "9.73885, -97.6089, -43.5847, 0.12", "9.82765, -97.9481, -43.5688, 0.12", "9.96931, -98.529, -43.5569, 0.12", "10.0975, -99.2114, -43.5616, 0.12", "10.135, -99.4563, -43.5827, 0.72", "10.1716, -99.7618, -43.6457, 0.84", "10.1975, -100.204, -43.782, 0.24", "10.186, -100.823, -44.0227, 0.24", "10.1622, -101.219, -44.1944, 0.24", "10.1442, -102.058, -44.5551, 0.36", "10.1653, -102.718, -44.8565, 0.12", "10.1949, -103.166, -45.0623, 0.12", "10.2344, -103.7, -45.2993, 0.12", "10.3086, -104.345, -45.5582, 0.12", "10.4416, -105.143, -45.8428, 0.48", "10.5744, -105.747, -46.0078, 0.12", "10.6789, -106.147, -46.1359, 0.12", "10.7922, -106.541, -46.2982, 0.12", "10.9086, -106.94, -46.4816, 0.12", "11.0216, -107.361, -46.7145, 0.6", "11.1137, -107.734, -46.9358, 0.6", "11.3844, -108.79, -47.5526, 0.12", "11.5342, -109.341, -47.9137, 0.12", "11.6735, -109.902, -48.2797, 0.12", "11.8338, -110.597, -48.6929, 0.6", "11.9059, -110.9, -48.8471, 0.6", "11.9829, -111.211, -48.9858, 0.6", "12.1705, -111.942, -49.2351, 0.12", "12.428, -112.87, -49.5086, 0.12", "12.6516, -113.647, -49.7134, 0.12", "12.8589, -114.312, -49.8518, 0.36", "12.9344, -114.524, -49.9029, 0.12", "13.1275, -115.036, -50.0336, 0.12", "13.2672, -115.398, -50.124, 0.48", "13.4908, -116.018, -50.3726, 0.12", "13.5975, -116.485, -50.6416, 0.12", "13.6599, -117.223, -51.1406, 0.12", "13.6488, -117.542, -51.3718, 0.6", "13.6168, -117.741, -51.5115, 0.6", "13.3484, -118.719, -52.2079, 0.12", "13.1103, -119.385, -52.6544, 0.12", "12.9463, -119.779, -52.8941, 0.36", "12.715, -120.279, -53.1599, 0.36", "12.3859, -121.043, -53.5214, 0.36", "12.1128, -121.661, -53.7653, 0.12", "11.8812, -122.149, -53.9151, 0.12", "11.5851, -122.687, -54.0685, 0.48", "11.4146, -122.978, -54.1471, 0.12", "10.9872, -123.645, -54.3092, 0.12", "10.5947, -124.2, -54.424, 0.6", "10.2613, -124.654, -54.4969, 0.12", "9.87572, -125.13, -54.5735, 0.12", "9.29015, -125.79, -54.6784, 0.12", "9.05364, -126.037, -54.7133, 0.12", "8.50188, -126.557, -54.7731, 0.48", "8.20129, -126.836, -54.8, 0.12", "7.68026, -127.278, -54.8262, 0.12", "7.32039, -127.546, -54.8416, 0.48", "6.8647, -127.83, -54.867, 0.48", "6.73327, -127.905, -54.8744, 0.12", "6.33064, -128.115, -54.8954, 0.12", "5.89961, -128.332, -54.9142, 0.48", "5.50945, -128.538, -54.9321, 0.48", "4.98038, -128.822, -54.9542, 0.12", "4.4621, -129.081, -54.9753, 0.12", "4.11363, -129.246, -54.9813, 0.12", "3.98195, -129.307, -54.981, 0.12", "3.6284, -129.46, -54.9733, 0.48", "3.09909, -129.684, -54.9503, 0.48", "2.60496, -129.883, -54.9185, 0.48", "2.03957, -130.092, -54.885, 0.12", "1.67604, -130.215, -54.8663, 0.12", "0.747964, -130.468, -54.8304, 0.12", "0.366795, -130.552, -54.8198, 0.12", "0.158296, -130.593, -54.8253, 0.6", "-0.269992, -130.679, -54.8566, 0.6", "-0.698796, -130.779, -54.9029, 0.24", "-1.8231, -131.092, -55.0402, 0.24", "-2.22832, -131.256, -55.0934, 0.48", "-2.89277, -131.594, -55.1798, 0.12", "-3.46187, -131.962, -55.2979, 0.12", "-3.98589, -132.383, -55.4402, 0.12", "-4.35766, -132.759, -55.5619, 0.12", "-5.01749, -133.624, -55.81, 0.12", "-5.22398, -133.952, -55.8857, 0.48", "-5.79204, -135.083, -56.0685, 0.48", "-5.95229, -135.45, -56.1193, 0.12", "-6.21543, -136.129, -56.1995, 0.12", "-6.56936, -137.156, -56.2979, 0.12", "-6.98174, -138.585, -56.3933, 0.12", "-7.4195, -140.465, -56.5002, 0.12", "-7.4777, -140.817, -56.5122, 0.72", "-7.53632, -141.36, -56.5424, 0.48", "-7.54315, -141.517, -56.5512, 0.12", "-7.50602, -142.461, -56.6043, 0.12", "-7.36038, -143.475, -56.6584, 0.12", "-7.18447, -144.189, -56.688, 0.12", "-7.09362, -144.528, -56.6955, 0.36", "-6.92536, -145.123, -56.6953, 0.12", "-6.74248, -145.773, -56.6819, 0.12", "-6.5457, -146.481, -56.6461, 0.12", "-6.33899, -147.252, -56.5842, 0.12", "-6.22809, -147.928, -57.1214, 0.12", "-6.20066, -148.299, -57.9467, 0.12", "-6.19914, -148.361, -58.1505, 0.12", "-6.20251, -148.444, -58.5718, 0.72", "-6.20739, -148.483, -58.9989, 1.08", "-6.39376, -148.564, -65.8702, 0.84", "-6.46085, -148.436, -68.0119, 0.12", "-6.47229, -148.393, -68.4251, 0.12", "-6.48307, -148.317, -69.066, 0.12", "-6.48836, -148.064, -70.9263, 0.48", "-6.46148, -147.794, -72.6852, 0.6", "-6.382, -147.513, -74.3167, 0.6", "-6.25446, -147.334, -76.8995, 0.12", "-6.22619, -147.348, -77.4698, 0.12", "-6.20946, -147.383, -77.704, 0.12", "-6.18024, -147.452, -77.9036, 0.72", "-6.04233, -147.698, -78.3609, 0.72", "-5.47816, -148.529, -79.4543, 0.12", "-5.37268, -148.647, -79.5867, 0.12", "-4.84912, -149.132, -80.1744, 0.12", "-3.96409, -149.774, -81.2902, 0.12", "-3.77559, -149.865, -81.5312, 0.12", "-3.17962, -150.022, -82.2695, 0.12", "-3.02997, -150.034, -82.4531, 0.72", "-2.77422, -150.045, -82.797, 0.72", "-1.61731, -150.073, -84.7174, 0.12", "-1.38813, -150.086, -85.1324, 0.12", "-1.2864, -150.093, -85.3465, 0.48", "-1.04324, -150.094, -86.0964, 0.12", "-0.901712, -150.076, -86.6445, 0.12", "-0.704513, -150.045, -87.4356, 0.72", "-0.6243, -150.049, -87.7612, 0.84", "-0.343154, -150.072, -89.1377, 1.32", "-0.0764204, -150.031, -90.8268, 0.6", "-0.0423505, -149.992, -91.1584, 0.6" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "26.8154, 2.05516, -6.18296, 0.48", "27.0381, 2.63792, -6.68978, 0.48", "27.2775, 3.31677, -7.33758, 0.12", "27.5871, 4.1151, -8.11812, 0.12", "27.7657, 4.55129, -8.52899, 1.2", "27.8611, 4.77464, -8.74947, 1.2", "28.7119, 6.66802, -10.6566, 0.12", "29.072, 7.32906, -11.384, 0.12", "29.2554, 7.62174, -11.7151, 0.12", "29.4791, 7.92631, -12.0782, 0.12", "30.1321, 8.6988, -13.1615, 0.72", "30.447, 9.02661, -13.643, 0.84", "30.8486, 9.36176, -14.1219, 0.12", "31.004, 9.46324, -14.2971, 0.12", "31.3458, 9.64847, -14.7127, 0.72", "32.9314, 10.339, -16.6375, 0.12", "33.2589, 10.4615, -17.0055, 0.12", "33.7819, 10.6432, -17.586, 0.12", "34.0139, 10.7318, -17.8452, 0.96", "35.1499, 11.2224, -19.0264, 0.12", "35.4139, 11.342, -19.3162, 0.12", "35.8945, 11.5777, -19.8018, 0.6", "36.3366, 11.7986, -20.259, 0.12", "37.095, 12.1965, -21.044, 0.12", "37.8019, 12.5722, -21.7549, 0.72", "39.2406, 13.358, -23.0997, 0.12", "39.8009, 13.667, -23.6281, 0.12", "40.2902, 13.9344, -24.0848, 0.12", "40.5147, 14.0627, -24.2779, 0.6", "41.3096, 14.5135, -24.8837, 0.12", "41.5556, 14.6535, -25.0394, 0.12", "42.0133, 14.9076, -25.2679, 0.6", "42.1889, 14.9944, -25.3843, 0.12", "42.6126, 15.1819, -25.7013, 0.12", "43.2377, 15.3993, -26.1417, 0.6", "43.6232, 15.5048, -26.3842, 0.6", "44.5768, 15.6938, -26.9691, 0.48", "45.206, 15.8005, -27.3524, 0.12", "45.6143, 15.8742, -27.5944, 0.12", "46.4013, 16.0104, -28.0214, 0.12", "46.8184, 16.096, -28.2133, 0.12", "47.317, 16.2269, -28.4749, 0.48", "47.9633, 16.4306, -28.8082, 0.48", "48.1703, 16.4967, -28.9221, 0.48", "48.5419, 16.6184, -29.1531, 0.12", "48.741, 16.6889, -29.2941, 0.12", "49.7692, 17.0104, -30.157, 0.12", "50.3066, 17.1459, -30.6115, 1.44", "50.9436, 17.2672, -31.1373, 0.12", "51.2541, 17.3092, -31.4067, 0.12", "51.5306, 17.3232, -31.7026, 0.24", "52.552, 17.3117, -32.8307, 0.12", "53.1787, 17.2819, -33.495, 0.12", "53.4231, 17.2674, -33.7554, 0.72", "54.2427, 17.2272, -34.59, 0.12", "56.2309, 17.1479, -36.5077, 0.12", "56.82, 17.1368, -37.0399, 0.12", "57.3603, 17.1467, -37.4701, 0.12", "57.7678, 17.174, -37.7684, 0.12", "58.2893, 17.2526, -38.0669, 0.72", "58.5061, 17.3122, -38.1396, 0.72", "59.198, 17.5838, -38.2693, 0.12", "59.9365, 17.922, -38.4385, 0.12", "60.5154, 18.1989, -38.6126, 0.12", "61.353, 18.6121, -38.8954, 0.12", "61.9218, 18.8969, -39.0904, 0.12", "62.6347, 19.2604, -39.3265, 0.48", "62.9025, 19.3943, -39.4469, 0.48", "63.5563, 19.6915, -39.8285, 0.12", "64.0754, 19.9029, -40.1738, 0.12", "64.7111, 20.1335, -40.6496, 0.12", "64.9103, 20.2114, -40.8021, 0.48", "66.4131, 20.8318, -41.912, 0.12", "67.0746, 21.128, -42.5073, 0.12", "67.3569, 21.2718, -42.7685, 0.36", "67.6776, 21.4446, -43.0829, 0.12", "68.2669, 21.7821, -43.6897, 0.12", "68.4157, 21.8715, -43.8378, 0.36", "69.8252, 22.7977, -45.0657, 0.12", "70.7182, 23.4169, -45.9914, 0.12", "70.7182, 23.4169, -45.9914, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "26.8154, 2.05516, -6.18296, 0.36", "27.4921, 2.76311, -6.29357, 0.36", "28.3103, 3.58214, -6.39981, 0.36", "28.8586, 4.09841, -6.45822, 0.96", "29.3977, 4.61659, -6.4712, 1.2", "29.9348, 5.14833, -6.45574, 0.96", "30.3429, 5.57234, -6.43035, 0.72", "30.8024, 6.07886, -6.34268, 0.72", "31.1098, 6.45387, -6.23155, 0.72", "31.6611, 7.18939, -5.94462, 0.36", "31.7602, 7.32646, -5.88038, 0.36", "32.1036, 7.77998, -5.61033, 0.6", "32.3008, 7.99658, -5.44006, 0.6", "33.0647, 8.65317, -4.7084, 0.48", "33.5955, 9.05073, -4.17761, 0.48", "34.0214, 9.373, -3.75245, 0.48", "34.5369, 9.74948, -3.19228, 0.96", "35.1817, 10.1611, -2.47809, 0.72", "35.8027, 10.5071, -1.76348, 0.72", "36.297, 10.7433, -1.20196, 0.48", "37.1333, 11.1806, -0.288776, 0.72", "37.8448, 11.6343, 0.409508, 0.72", "38.3281, 12.0188, 0.834043, 0.72", "39.116, 12.7705, 1.45304, 0.48", "39.5195, 13.2058, 1.71779, 0.36", "40.2061, 13.9882, 2.09346, 0.36", "40.7208, 14.6195, 2.31643, 0.36", "41.2471, 15.3309, 2.47871, 0.84", "41.6624, 15.9057, 2.58649, 0.84", "42.1754, 16.6019, 2.67044, 0.48", "42.6751, 17.2672, 2.75849, 0.48", "42.9986, 17.6829, 2.82332, 0.6", "43.5038, 18.3463, 2.92084, 0.72", "44.0182, 19.04, 3.01784, 0.36", "44.417, 19.5899, 3.10236, 0.36", "44.9346, 20.3285, 3.21752, 0.48", "45.2724, 20.8379, 3.29136, 0.96", "45.7854, 21.6603, 3.40606, 1.08", "46.2577, 22.4598, 3.50347, 0.36", "46.8467, 23.4726, 3.5982, 0.36", "47.4541, 24.4853, 3.68399, 0.48", "47.5911, 24.7088, 3.69911, 0.48", "47.8927, 25.2, 3.72522, 0.12", "48.3789, 26.0206, 3.7605, 0.12", "48.8716, 26.9162, 3.77748, 0.48", "49.1908, 27.5436, 3.78749, 0.36", "49.518, 28.2316, 3.79092, 0.36", "49.8783, 29.0092, 3.78384, 0.48", "50.0328, 29.3418, 3.77607, 0.12", "50.4709, 30.2696, 3.75102, 0.12", "50.6275, 30.5782, 3.75321, 0.12", "51.0286, 31.3395, 3.69421, 0.48", "51.2094, 31.677, 3.65266, 0.24", "51.5344, 32.2911, 3.5533, 0.24", "51.8005, 32.81, 3.45638, 0.48", "52.2232, 33.705, 3.27806, 0.96", "52.9095, 35.2769, 3.00213, 0.96", "53.1167, 35.7856, 2.92793, 0.12", "53.3914, 36.5397, 2.83747, 0.12", "53.5335, 36.9949, 2.8142, 0.24", "53.7795, 37.8799, 2.8272, 0.24", "53.9539, 38.5615, 2.87329, 0.36", "54.1367, 39.293, 2.98308, 0.36", "54.1753, 39.4508, 3.0019, 0.24", "54.3957, 40.4109, 3.15448, 0.24", "54.5941, 41.2857, 3.29735, 0.48", "54.6994, 41.7652, 3.37447, 0.24", "54.8386, 42.3401, 3.45279, 0.24", "55.0844, 43.2985, 3.56927, 0.72", "55.3432, 44.2422, 3.66084, 0.12", "55.7527, 45.6627, 3.75209, 0.12", "55.8594, 46.0276, 3.77806, 0.12", "56.1787, 47.1077, 3.84603, 0.12", "56.3235, 47.5824, 3.86939, 0.96", "56.5072, 48.1949, 3.88886, 0.96", "56.8014, 49.1847, 3.88933, 0.48", "57.0546, 50.0663, 3.89537, 0.36", "57.3918, 51.2388, 3.90325, 0.36", "57.544, 51.7562, 3.90471, 0.36", "57.8033, 52.5603, 3.91707, 0.6", "57.9829, 53.0677, 3.92678, 0.12", "58.2088, 53.6268, 3.93759, 0.12", "58.494, 54.2426, 3.94425, 0.12", "59.0044, 55.1782, 3.96363, 0.12", "59.366, 55.812, 3.97611, 0.48", "59.5822, 56.1818, 3.98123, 0.12", "60.0226, 56.9257, 3.98932, 0.12", "60.2422, 57.2933, 3.99063, 0.12", "61.0463, 58.6882, 3.97708, 0.12", "61.3281, 59.2047, 3.98114, 0.12", "61.6926, 59.8678, 3.99215, 0.12", "61.7736, 60.0162, 3.99862, 0.48", "62.0962, 60.6244, 4.03404, 0.48", "62.3228, 61.0618, 4.06444, 0.12", "62.7597, 61.9105, 4.17236, 0.12", "63.2784, 62.8953, 4.3514, 0.12", "63.6677, 63.695, 4.50137, 0.48", "63.9659, 64.3767, 4.6428, 0.72", "64.1564, 64.8535, 4.76043, 0.72", "64.4224, 65.6199, 4.95298, 0.72", "64.7188, 66.6254, 5.19332, 0.12", "65.1449, 68.3873, 5.60889, 0.12", "65.3267, 69.1702, 5.78315, 0.48", "65.4951, 69.8958, 5.9203, 0.12", "65.7835, 71.0333, 6.13775, 0.12", "65.9478, 71.6237, 6.18403, 0.6", "66.2266, 72.4883, 6.1642, 0.6", "66.4835, 73.1351, 6.07804, 0.48", "66.9072, 74.0356, 5.87573, 0.48", "67.5768, 75.293, 5.52254, 0.36", "68.8369, 77.3568, 4.88673, 0.12", "69.3229, 78.0864, 4.65233, 0.12", "70.101, 79.188, 4.36006, 0.12", "70.5949, 79.8478, 4.23211, 0.12", "70.8097, 80.1137, 4.20501, 0.6", "71.1924, 80.5773, 4.21099, 0.84", "71.5685, 81.0132, 4.31769, 0.6", "72.4066, 81.9222, 4.59521, 0.12", "72.7954, 82.3434, 4.7352, 0.12", "73.0365, 82.6218, 4.82841, 0.72", "73.5028, 83.2329, 5.00719, 0.72", "73.7419, 83.5848, 5.09377, 0.48", "73.8751, 83.8128, 5.1321, 0.12", "74.2397, 84.5173, 5.17283, 0.12", "74.4186, 84.9199, 5.19372, 0.72", "74.6543, 85.4855, 5.17937, 0.96", "74.7516, 85.7314, 5.17163, 0.96", "74.9673, 86.3094, 5.14098, 0.12", "75.2688, 87.1119, 5.07754, 0.12", "75.4463, 87.5709, 5.0153, 0.12", "75.7952, 88.3986, 4.83461, 0.24", "80.4315, 97.1511, 5.93922, 0.24", "85.3619, 105.629, 7.56594, 0.24", "90.7503, 113.921, 8.47966, 0.24", "95.0545, 122.58, 10.8279, 0.24", "98.9031, 130.791, 14.8154, 0.24", "102.692, 139.253, 18.3662, 0.24", "107.207, 146.631, 23.0674, 0.24", "111.853, 153.461, 28.354, 0.24", "114.815, 160.834, 34.1557, 0.24", "118.912, 168.19, 39.2511, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-11.2135, -32.3381, 3.88914, 0.48", "-11.3312, -33.2163, 3.75084, 0.48", "-11.5401, -34.6605, 3.53939, 0.48", "-11.678, -35.5747, 3.41242, 0.36", "-11.8059, -36.3881, 3.30758, 0.36", "-11.9535, -37.3276, 3.19944, 0.36", "-12.0659, -38.0498, 3.12461, 0.6", "-12.1661, -38.681, 3.08584, 0.84", "-12.2724, -39.2502, 3.09516, 1.08", "-12.3917, -39.7969, 3.12589, 1.32", "-12.5144, -40.3369, 3.15362, 1.32", "-12.574, -40.6073, 3.16887, 1.32", "-12.7817, -41.6665, 3.24277, 0.84", "-12.9392, -42.5271, 3.30926, 0.6", "-13.0173, -42.9544, 3.33911, 0.84", "-13.1477, -43.6764, 3.38223, 0.84", "-13.2497, -44.2094, 3.40578, 0.6", "-13.4512, -45.1679, 3.44677, 0.6", "-13.727, -46.4032, 3.4944, 0.72", "-13.9317, -47.243, 3.53442, 0.72", "-14.1491, -48.0557, 3.57846, 0.72", "-14.4123, -48.934, 3.62447, 0.72", "-14.7842, -50.1001, 3.67595, 0.36", "-15.102, -51.0419, 3.73307, 0.36", "-15.2429, -51.4545, 3.76662, 0.36", "-15.3404, -51.7348, 3.80237, 0.72", "-15.4798, -52.0983, 3.8895, 0.96", "-15.7642, -52.8458, 4.15064, 0.96", "-16.0399, -53.5767, 4.45628, 0.84", "-16.3055, -54.3027, 4.78095, 0.6", "-16.5538, -54.9705, 5.12441, 0.48", "-16.9793, -56.1487, 5.75303, 0.48", "-17.1915, -56.7385, 6.0687, 0.6", "-17.4382, -57.4821, 6.4259, 0.84", "-17.6917, -58.3481, 6.76963, 0.84", "-18.0741, -59.8556, 7.26856, 0.72", "-18.264, -60.7777, 7.49818, 0.6", "-18.3429, -61.2645, 7.58382, 0.72", "-18.5224, -62.4798, 7.76711, 0.36", "-18.6473, -63.4247, 7.94944, 0.12", "-18.7161, -63.9613, 8.07441, 0.12", "-18.7644, -64.3704, 8.176, 0.48", "-18.8665, -65.1497, 8.41237, 0.84", "-19.0054, -66.0706, 8.72818, 0.84", "-19.4438, -68.296, 9.63096, 0.48", "-19.6303, -69.1635, 9.99894, 0.36", "-19.7112, -69.5278, 10.1519, 0.36", "-19.8365, -70.032, 10.3852, 0.72", "-19.9815, -70.5724, 10.6457, 0.84", "-20.3048, -71.7778, 11.2139, 0.72", "-20.5496, -72.6033, 11.6242, 0.72", "-20.8005, -73.4269, 12.059, 0.72", "-21.2496, -74.9102, 12.8739, 0.6", "-21.4189, -75.4953, 13.2004, 0.6", "-21.6532, -76.3228, 13.6378, 0.72", "-22.1369, -77.8832, 14.4514, 1.2", "-22.3821, -78.5781, 14.8243, 1.32", "-22.595, -79.1498, 15.1174, 1.32", "-22.8491, -79.8622, 15.4335, 0.48", "-23.2235, -80.9476, 15.8861, 0.48", "-23.6025, -82.1056, 16.3422, 0.96", "-23.8672, -83.0372, 16.6616, 0.72", "-24.0744, -83.7972, 16.9233, 0.48", "-24.2424, -84.4515, 17.152, 0.48", "-24.4726, -85.4645, 17.5015, 0.48", "-24.6118, -86.2755, 17.7642, 0.48", "-24.6961, -86.9302, 17.9372, 0.72", "-24.7797, -87.6135, 18.102, 1.08", "-24.9073, -88.6664, 18.3547, 0.36", "-24.9458, -88.9321, 18.425, 0.36", "-25.0875, -89.8489, 18.6704, 0.48", "-25.2136, -90.6581, 18.8745, 0.6", "-25.3592, -91.4484, 19.0905, 1.08", "-25.5248, -92.2353, 19.3032, 1.2", "-25.7852, -93.3477, 19.5822, 0.72", "-25.9789, -94.1218, 19.7699, 0.72", "-26.1885, -94.9171, 19.9535, 0.48", "-26.5107, -96.0784, 20.1898, 0.36", "-26.8928, -97.3018, 20.419, 0.36", "-27.1681, -98.1216, 20.5518, 0.36", "-27.4749, -99.0203, 20.6674, 0.48", "-27.7403, -99.8004, 20.7658, 0.72", "-28.119, -100.967, 20.9297, 0.72", "-28.4655, -102.097, 21.0877, 0.36", "-28.6815, -102.762, 21.1819, 0.36", "-28.967, -103.568, 21.307, 0.6", "-29.4542, -104.835, 21.5043, 0.6", "-29.7483, -105.589, 21.6158, 0.36", "-30.2363, -106.835, 21.7981, 0.36", "-30.6879, -108.006, 21.9508, 0.36", "-31.1674, -109.248, 22.1097, 0.48", "-31.4528, -109.996, 22.2027, 0.6", "-31.9833, -111.459, 22.37, 0.6", "-32.2337, -112.226, 22.457, 0.48", "-32.5691, -113.437, 22.613, 0.48", "-32.7896, -114.362, 22.7317, 0.48", "-32.9624, -115.175, 22.8249, 0.84", "-33.2547, -116.658, 22.9962, 0.72", "-33.3793, -117.358, 23.0749, 0.36", "-33.5053, -118.176, 23.1629, 0.36", "-33.6594, -119.279, 23.2842, 0.36", "-33.788, -120.238, 23.389, 0.48", "-33.9003, -121.161, 23.4902, 0.6", "-34.0766, -122.658, 23.6511, 0.6", "-34.1879, -123.627, 23.7699, 0.6", "-34.2625, -124.299, 23.8646, 0.6", "-34.4065, -125.816, 24.1146, 0.6", "-34.4623, -126.497, 24.2389, 0.72", "-34.5092, -127.215, 24.3986, 0.96", "-34.5529, -128.628, 24.7641, 0.36", "-34.5484, -129.439, 25.0004, 0.36", "-34.5006, -130.395, 25.2967, 0.72", "-34.3889, -131.598, 25.6779, 0.84", "-34.2457, -133.047, 26.1165, 0.36", "-34.1339, -134.224, 26.4914, 0.36", "-34.0614, -135.061, 26.7597, 0.36", "-34.0103, -135.884, 27.0267, 0.24", "-33.9939, -137.08, 27.3941, 0.24", "-34.0494, -138.339, 27.7469, 0.36", "-34.1402, -139.328, 27.9895, 0.48", "-34.2478, -140.133, 28.1742, 0.36", "-34.3863, -141.061, 28.3764, 0.36", "-34.5291, -142.038, 28.59, 0.36", "-34.6162, -142.755, 28.7365, 0.36", "-34.6609, -143.318, 28.8364, 0.6", "-34.6918, -143.994, 28.9292, 0.36", "-34.7071, -144.543, 29.0116, 0.36", "-34.7142, -145.231, 29.1235, 0.36", "-34.711, -145.642, 29.1929, 0.6", "-34.7117, -146.062, 29.2598, 0.6", "-34.7163, -146.629, 29.3388, 0.48", "-34.7205, -147.187, 29.4077, 0.48", "-34.7209, -147.804, 29.4788, 0.48", "-34.7082, -148.247, 29.5324, 0.72", "-34.6919, -148.928, 29.6804, 0.72", "-34.6801, -149.546, 29.8533, 0.48", "-34.6717, -150.194, 30.0649, 0.36", "-34.6695, -150.86, 30.3041, 0.36", "-34.67, -151.606, 30.588, 0.36", "-34.7157, -153.244, 31.211, 0.24", "-34.7869, -153.897, 31.4338, 0.24", "-34.8697, -154.289, 31.5431, 0.6", "-35.1083, -155.075, 31.6942, 0.72", "-35.2654, -155.488, 31.7342, 0.36", "-35.5522, -156.162, 31.7401, 0.36", "-36.1043, -157.331, 31.6423, 0.36", "-36.4645, -158.031, 31.5689, 0.36", "-36.9035, -158.834, 31.4748, 0.36", "-37.4485, -159.804, 31.3563, 0.36", "-37.9289, -160.66, 31.2533, 0.36", "-38.7562, -162.188, 31.0827, 0.48", "-39.5078, -163.669, 30.9405, 0.48", "-39.8555, -164.356, 30.8743, 0.6", "-40.1846, -165.015, 30.8058, 0.6", "-40.4533, -165.558, 30.7445, 0.36", "-40.9181, -166.587, 30.6371, 0.36", "-41.1621, -167.232, 30.5842, 0.48", "-41.3518, -167.793, 30.5463, 0.48", "-41.4742, -168.146, 30.5222, 0.6", "-41.6504, -168.601, 30.51, 0.6", "-42.033, -169.498, 30.5185, 0.36", "-42.3646, -170.218, 30.545, 0.12", "-42.6877, -170.888, 30.6067, 0.12", "-43.2775, -172.111, 30.7761, 0.12", "-43.6546, -172.872, 30.9086, 0.6", "-43.9131, -173.42, 31.021, 0.72", "-44.3589, -174.472, 31.2632, 0.36", "-44.5917, -175.124, 31.4215, 0.12", "-44.7913, -175.772, 31.5694, 0.12", "-44.7913, -175.772, 31.5694, 0.36", "-44.9902, -176.585, 31.6738, 0.24", "-45.2348, -177.65, 31.7725, 0.24", "-45.384, -178.374, 31.8158, 0.24", "-45.5247, -179.052, 31.8466, 0.36", "-45.7195, -179.895, 31.8871, 0.36", "-45.9857, -180.914, 31.9319, 0.36", "-46.1606, -181.52, 31.954, 0.36", "-46.3658, -182.195, 31.987, 0.36", "-46.5553, -182.827, 32.0264, 0.12", "-46.9425, -184.12, 32.1209, 0.24", "-47.3716, -185.531, 32.237, 0.24", "-47.9498, -187.443, 32.408, 0.24", "-48.1059, -187.959, 32.4553, 0.12", "-48.4752, -189.177, 32.5383, 0.12", "-48.5629, -189.463, 32.5488, 0.36", "-48.8155, -190.269, 32.5684, 0.36", "-49.1934, -191.304, 32.5468, 0.36", "-49.6009, -192.021, 32.4336, 0.72", "-49.9393, -192.41, 32.3002, 0.48", "-50.4439, -192.885, 32.0852, 0.48", "-50.7395, -193.125, 31.9538, 0.12", "-51.6324, -193.707, 31.538, 0.12", "-53.1147, -194.483, 30.8411, 0.12", "-54.2557, -195.025, 30.3205, 0.12", "-58.035, -205.892, 30.8627, 0.12", "-62.5836, -216.438, 31.1658, 0.12", "-68.1757, -226.11, 28.9374, 0.12", "-75.1745, -235.02, 28.2197, 0.12", "-81.8847, -244.195, 28.8954, 0.12", "-88.6457, -253.325, 29.6284, 0.12", "-96.0996, -261.675, 28.027, 0.12", "-103.731, -268.854, 24.0271, 0.12", "-111.167, -275.169, 18.6064, 0.12", "-119.88, -279.803, 13.5322, 0.12", "-128.923, -284.642, 9.26663, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-11.2135, -32.3381, 3.88914, 0.48", "-11.9972, -32.8924, 4.14787, 0.48", "-12.6027, -33.3437, 4.32765, 0.48", "-13.1236, -33.7394, 4.50886, 0.48", "-14.3126, -34.7189, 4.95264, 0.48", "-14.7074, -35.0644, 5.09643, 0.48", "-15.0894, -35.4296, 5.23024, 0.36", "-15.5414, -35.9084, 5.41568, 0.36", "-15.9878, -36.4326, 5.58261, 0.72", "-16.3561, -36.9187, 5.72515, 1.2", "-16.7282, -37.4856, 5.85181, 1.2", "-17.1951, -38.283, 6.0455, 0.48", "-17.5309, -38.9154, 6.19845, 0.36", "-17.7919, -39.4639, 6.32035, 0.36", "-18.1381, -40.2311, 6.45584, 0.84", "-18.4076, -40.8245, 6.54875, 0.84", "-18.8127, -41.7209, 6.65898, 0.36", "-19.0749, -42.2943, 6.70802, 0.72", "-19.3514, -42.8908, 6.73784, 0.84", "-19.8665, -43.9419, 6.76535, 0.12", "-20.3494, -44.8813, 6.7599, 0.12", "-20.9619, -45.9865, 6.75215, 0.12", "-21.3072, -46.5542, 6.74428, 0.6", "-21.538, -46.9242, 6.73779, 0.6", "-21.9328, -47.5676, 6.72699, 0.12", "-22.1914, -48.0061, 6.72824, 0.12", "-22.5221, -48.6141, 6.74542, 0.6", "-22.9544, -49.477, 6.81117, 0.6", "-23.1578, -49.9215, 6.85961, 0.6", "-23.3972, -50.5029, 6.93428, 0.48", "-23.6013, -51.0522, 7.03195, 0.72", "-23.8031, -51.6139, 7.1628, 0.72", "-24.0382, -52.3188, 7.35986, 0.36", "-24.1108, -52.5356, 7.42623, 0.36", "-24.4122, -53.2818, 7.6389, 0.6", "-24.7677, -54.039, 7.82089, 0.36", "-24.9017, -54.2847, 7.87839, 0.24", "-25.1609, -54.7111, 7.97804, 0.24", "-25.452, -55.1643, 8.07317, 0.24", "-25.9724, -55.9584, 8.23223, 0.6", "-26.303, -56.4695, 8.32968, 0.6", "-26.7442, -57.1886, 8.43974, 0.48", "-26.8646, -57.4022, 8.47195, 0.48", "-27.1134, -57.8912, 8.54671, 0.36", "-27.5051, -58.7317, 8.69028, 0.36", "-27.6583, -59.072, 8.75654, 0.48", "-27.9767, -59.7661, 8.88551, 0.48", "-28.2487, -60.3267, 8.98928, 0.72", "-28.4187, -60.6493, 9.05873, 0.84", "-28.8496, -61.4075, 9.25716, 0.72", "-29.206, -62.0083, 9.43036, 0.36", "-29.5475, -62.5442, 9.58609, 0.36", "-29.8945, -63.0295, 9.74625, 0.24", "-30.4444, -63.7377, 9.9892, 0.24", "-30.8404, -64.2329, 10.1533, 0.12", "-31.2172, -64.711, 10.2982, 0.12", "-31.5418, -65.129, 10.426, 0.12", "-31.9234, -65.6114, 10.6085, 0.12", "-32.1799, -65.9346, 10.7662, 0.12", "-32.3921, -66.2061, 10.942, 0.12", "-32.5285, -66.4131, 11.0791, 0.72", "-32.7935, -66.866, 11.3931, 0.96", "-33.1507, -67.5562, 11.8602, 0.84", "-33.4705, -68.2819, 12.3087, 0.72", "-33.7162, -68.9075, 12.6821, 0.36", "-34.0089, -69.7304, 13.1237, 0.24", "-34.1237, -70.0881, 13.2832, 0.84", "-34.2184, -70.4084, 13.3926, 0.84", "-34.4174, -71.1121, 13.5462, 0.72", "-34.6348, -71.8746, 13.6665, 0.48", "-34.8625, -72.6098, 13.7774, 0.24", "-35.1161, -73.3458, 13.8914, 0.24", "-35.3071, -73.8494, 13.9838, 0.12", "-35.8496, -75.1593, 14.2539, 0.12", "-36.2597, -76.0213, 14.4361, 0.12", "-36.4642, -76.4199, 14.5296, 0.48", "-36.8425, -77.1374, 14.7181, 0.6", "-37.3046, -78.0174, 14.9529, 0.48", "-37.6132, -78.5945, 15.0959, 0.36", "-38.0755, -79.4112, 15.2846, 0.48", "-38.5249, -80.1893, 15.4341, 0.24", "-38.8311, -80.7188, 15.5348, 0.24", "-39.3919, -81.7189, 15.729, 0.24", "-39.9124, -82.7203, 15.9122, 0.24", "-40.2096, -83.3268, 16.0178, 0.6", "-40.313, -83.5718, 16.0544, 0.6", "-40.6092, -84.4352, 16.152, 0.24", "-40.8038, -85.1426, 16.2261, 0.24", "-40.9389, -85.8759, 16.2966, 0.48", "-40.9857, -86.6239, 16.318, 0.36", "-40.9786, -87.7473, 16.2848, 0.36", "-40.9438, -88.6425, 16.2167, 0.36", "-40.9323, -88.9186, 16.1804, 0.84", "-40.928, -89.299, 16.1262, 0.84", "-40.9474, -90.6977, 15.9423, 0.24", "-40.9652, -91.0593, 15.9056, 0.24", "-41.0032, -91.3342, 15.879, 0.24", "-41.2274, -92.311, 15.8117, 0.24", "-41.4268, -93.0661, 15.7877, 0.36", "-41.5197, -93.3882, 15.7876, 0.12", "-41.6983, -93.9973, 15.8102, 0.12", "-42.042, -95.337, 15.8699, 0.12", "-42.363, -96.8699, 15.9533, 0.12", "-42.564, -98.0957, 16.0308, 0.12", "-42.6537, -98.7019, 16.0688, 0.48", "-42.7585, -99.4529, 16.1152, 0.48", "-42.8327, -100.11, 16.1623, 0.48", "-42.8979, -100.988, 16.2374, 0.36", "-42.9323, -101.474, 16.2813, 0.36", "-43.0321, -102.265, 16.3434, 0.48", "-43.1106, -102.658, 16.3672, 0.12", "-43.1949, -102.912, 16.3929, 0.12", "-43.354, -103.267, 16.4447, 0.12", "-43.6144, -103.746, 16.5392, 0.6", "-43.8629, -104.186, 16.649, 0.84", "-43.9966, -104.418, 16.7156, 0.84", "-44.5385, -105.318, 16.9571, 0.12", "-44.6635, -105.526, 17.0037, 0.12", "-44.7948, -105.765, 17.049, 0.12", "-44.919, -105.997, 17.0957, 0.12", "-45.2875, -106.691, 17.2245, 0.36", "-45.6226, -107.305, 17.3574, 0.36", "-46.0736, -108.113, 17.5306, 0.36", "-46.3776, -108.623, 17.6572, 0.36", "-46.7687, -109.281, 17.8365, 0.6", "-47.0327, -109.715, 17.9602, 0.6", "-47.5246, -110.49, 18.1796, 0.36", "-47.7151, -110.772, 18.2536, 0.36", "-47.97, -111.13, 18.3468, 0.36", "-48.3936, -111.708, 18.4721, 0.36", "-48.6876, -112.137, 18.5238, 0.36", "-49.1816, -112.874, 18.566, 0.48", "-49.4236, -113.235, 18.5349, 0.48" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "160.816, 78.4399, 155.396, 0.48", "166.711, 81.7285, 161.162, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "160.816, 78.4399, 155.396, 0.36", "165.801, 81.0253, 160.79, 0.48", "170.72, 82.9622, 166.486, 0.48", "175.159, 84.0164, 172.761, 0.48", "180.237, 84.4727, 178.587, 0.48", "185.238, 83.2505, 184.363, 0.48", "191.354, 81.8685, 188.909, 0.48", "197.874, 79.5001, 192.419, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-77.325, -202.947, -118.053, 0.12", "-78.2162, -203.145, -119.136, 0.12", "-78.7078, -203.264, -119.727, 0.12", "-80.4973, -203.705, -121.794, 0.6", "-81.0244, -203.849, -122.461, 0.6", "-81.8709, -204.12, -123.596, 0.36", "-82.6521, -204.392, -124.636, 0.36", "-82.9847, -204.541, -125.089, 0.6", "-83.2316, -204.674, -125.417, 0.6", "-84.9099, -205.815, -127.555, 0.24", "-85.645, -206.368, -128.487, 0.24", "-86.047, -206.693, -129.02, 0.24", "-86.8492, -207.366, -130.113, 0.24", "-87.2224, -207.696, -130.637, 0.24", "-88.0482, -208.455, -131.813, 0.6", "-88.2757, -208.669, -132.115, 0.6", "-89.6862, -209.976, -134.018, 0.12", "-89.9201, -210.194, -134.346, 0.12", "-90.1978, -210.433, -134.717, 0.48", "-90.9065, -210.967, -135.515, 0.12", "-91.269, -211.209, -135.801, 0.12", "-91.6664, -211.446, -136.04, 0.12", "-92.0084, -211.634, -136.159, 0.12", "-92.514, -211.891, -136.357, 0.48", "-93.4284, -212.304, -136.705, 0.6", "-93.9355, -212.517, -136.876, 0.6", "-94.7287, -212.858, -137.149, 0.12", "-95.3311, -213.132, -137.409, 0.12", "-96.0543, -213.492, -137.763, 0.12", "-96.7395, -213.908, -138.123, 0.12", "-97.2145, -214.272, -138.374, 0.6", "-97.6471, -214.648, -138.602, 0.6", "-98.6367, -215.57, -139.172, 0.12", "-98.8983, -215.83, -139.336, 0.12", "-99.4826, -216.446, -139.743, 0.12", "-99.8773, -216.873, -140.038, 0.6", "-100.07, -217.081, -140.189, 0.6", "-101.118, -218.251, -140.998, 0.12", "-101.537, -218.768, -141.302, 0.12", "-102.455, -219.948, -141.963, 0.24", "-102.984, -220.622, -142.344, 0.36", "-103.48, -221.244, -142.679, 0.12", "-104.054, -221.954, -143.012, 0.12", "-104.789, -222.846, -143.323, 0.12", "-105.225, -223.296, -143.507, 0.48", "-105.702, -223.677, -143.676, 0.12", "-106.072, -223.866, -143.797, 0.12", "-106.747, -224.083, -143.981, 0.12", "-107.19, -224.173, -144.094, 0.36", "-108.571, -224.358, -144.421, 0.12", "-109.316, -224.46, -144.581, 0.12", "-110.299, -224.632, -144.755, 0.12", "-110.87, -224.759, -144.844, 0.48", "-111.484, -224.933, -144.919, 0.48", "-112.065, -225.137, -144.949, 0.36", "-112.479, -225.317, -144.891, 0.36", "-113.048, -225.585, -144.753, 0.36", "-113.501, -225.79, -144.603, 0.36", "-113.845, -225.942, -144.47, 0.36", "-114.825, -226.376, -144.049, 0.48", "-116.083, -226.994, -143.474, 0.12", "-116.559, -227.269, -143.261, 0.12", "-117.128, -227.647, -143.024, 0.12", "-117.518, -227.963, -142.879, 0.12", "-117.787, -228.269, -142.804, 0.12", "-118.205, -228.996, -142.741, 0.12", "-118.681, -230.084, -142.748, 0.6", "-118.796, -230.442, -142.753, 0.12", "-118.976, -231.171, -142.769, 0.12", "-119.252, -232.482, -142.802, 0.12", "-119.48, -233.656, -142.837, 0.12", "-119.627, -234.438, -142.861, 0.12", "-119.784, -235.324, -142.881, 0.12", "-119.832, -235.62, -142.886, 0.12", "-119.939, -236.238, -142.894, 0.36", "-120.0, -236.579, -142.903, 0.12", "-120.219, -237.64, -142.943, 0.12", "-120.428, -238.513, -142.976, 0.12", "-120.589, -239.108, -142.997, 0.6", "-120.81, -239.915, -143.028, 0.6", "-120.984, -240.562, -143.055, 0.12", "-121.259, -241.524, -143.101, 0.12", "-121.507, -242.326, -143.149, 0.12", "-121.711, -242.961, -143.186, 0.6", "-121.89, -243.543, -143.218, 0.6", "-122.068, -244.193, -143.25, 0.6", "-122.166, -244.563, -143.264, 0.12", "-122.487, -245.74, -143.309, 0.12", "-122.78, -246.753, -143.383, 0.12", "-123.021, -247.504, -143.454, 0.12", "-123.341, -248.435, -143.554, 0.12", "-123.626, -249.251, -143.649, 0.12", "-123.837, -249.88, -143.723, 0.36", "-124.114, -250.679, -143.886, 0.12", "-124.282, -251.162, -144.014, 0.12", "-124.616, -252.149, -144.312, 0.12", "-124.992, -253.304, -144.652, 0.12", "-125.248, -254.112, -144.892, 0.12", "-125.765, -255.68, -145.58, 0.12", "-125.919, -256.133, -145.818, 0.36", "-126.136, -256.723, -146.187, 0.12", "-126.677, -258.044, -147.333, 0.12", "-126.892, -258.497, -147.8, 0.6", "-127.938, -260.473, -150.009, 0.12", "-128.245, -260.994, -150.641, 0.12", "-128.393, -261.228, -150.945, 0.6", "-129.432, -262.706, -152.993, 0.12", "-129.967, -263.353, -153.924, 0.12", "-130.192, -263.589, -154.188, 0.12", "-130.651, -264.0, -154.482, 0.36", "-131.215, -264.457, -154.77, 0.12", "-131.675, -264.817, -154.903, 0.12", "-132.292, -265.288, -154.951, 0.12", "-133.43, -266.149, -155.034, 0.12", "-134.876, -267.25, -155.125, 0.12", "-135.28, -267.567, -155.141, 0.12", "-136.585, -268.542, -155.187, 0.12", "-136.84, -268.743, -155.195, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-77.325, -202.947, -118.053, 0.12", "-77.3166, -202.991, -118.07, 0.12", "-77.296, -203.121, -118.11, 0.6", "-77.1922, -203.511, -118.206, 0.72", "-76.893, -204.346, -118.461, 0.48", "-76.6857, -204.852, -118.614, 0.48", "-76.4764, -205.36, -118.759, 0.24", "-76.2359, -205.965, -118.946, 0.24", "-75.9167, -206.866, -119.22, 0.24", "-75.5795, -207.833, -119.505, 0.12", "-75.3279, -208.511, -119.692, 0.12", "-75.0312, -209.243, -119.908, 0.12", "-74.7572, -209.848, -120.105, 0.48", "-74.4008, -210.727, -120.393, 0.36", "-74.3046, -211.141, -120.497, 0.12", "-74.2231, -211.662, -120.662, 0.12", "-74.1759, -211.947, -120.771, 0.36", "-74.0875, -212.411, -120.953, 0.12", "-73.8857, -213.344, -121.236, 0.12", "-73.5461, -214.824, -121.62, 0.12", "-73.181, -216.428, -122.013, 0.12", "-72.9326, -217.49, -122.247, 0.12", "-72.7535, -218.149, -122.373, 0.12", "-72.3485, -219.294, -122.567, 0.48", "-72.1329, -219.727, -122.63, 0.48", "-71.7004, -220.414, -122.734, 0.24", "-71.3186, -220.996, -122.804, 0.24", "-70.9978, -221.499, -122.896, 0.24", "-70.508, -222.3, -123.117, 0.12", "-69.9585, -223.275, -123.459, 0.12", "-69.54, -224.08, -123.733, 0.12", "-69.3639, -224.431, -123.857, 0.24", "-69.007, -225.122, -124.137, 0.36", "-68.694, -225.719, -124.39, 0.12", "-68.5196, -226.064, -124.531, 0.12", "-68.28, -226.584, -124.724, 0.12", "-67.9669, -227.314, -124.932, 0.36", "-67.5704, -228.212, -125.141, 0.12", "-67.2873, -228.823, -125.241, 0.12", "-67.0519, -229.316, -125.316, 0.12", "-66.6498, -230.182, -125.446, 0.12", "-66.2673, -231.074, -125.551, 0.12", "-66.1189, -231.428, -125.579, 0.12", "-65.7031, -232.461, -125.619, 0.6", "-65.2979, -233.524, -125.638, 0.12", "-64.616, -235.265, -125.667, 0.12", "-63.6575, -237.651, -125.699, 0.12", "-62.6099, -240.284, -125.722, 0.12", "-62.1923, -241.372, -125.722, 0.12", "-61.8096, -242.435, -125.688, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-49.4236, -113.235, 18.5349, 0.48", "-49.778, -114.552, 18.8066, 0.48", "-50.0922, -115.827, 19.0366, 0.36", "-50.2243, -116.406, 19.1329, 0.12", "-50.4596, -117.374, 19.3504, 0.12", "-50.6821, -118.207, 19.5552, 0.12", "-50.8327, -118.741, 19.6903, 0.6", "-51.0423, -119.44, 19.8311, 0.6", "-51.1531, -119.861, 19.8706, 0.6", "-51.4122, -121.268, 19.9031, 0.12", "-51.4779, -121.995, 19.885, 0.12", "-51.4589, -122.444, 19.8589, 0.12", "-51.0953, -123.73, 19.7647, 0.12", "-49.422, -125.786, 19.7183, 0.12", "-48.5812, -126.344, 19.7828, 0.12", "-47.8103, -126.7, 19.8738, 0.12", "-46.4146, -127.191, 20.1385, 0.12", "-45.102, -127.587, 20.4669, 0.12", "-44.0223, -127.822, 20.7893, 0.12", "-43.165, -127.942, 21.1296, 0.36", "-42.8783, -127.986, 21.244, 0.12", "-41.7511, -128.261, 21.707, 0.12", "-41.0589, -128.549, 22.0074, 0.24", "-36.8917, -139.349, 25.4792, 0.24", "-32.186, -149.856, 29.0764, 0.24", "-27.8209, -160.494, 32.7572, 0.24", "-22.759, -171.03, 35.7136, 0.24", "-18.3384, -181.206, 40.4046, 0.24", "-11.7635, -190.687, 43.608, 0.24", "-3.61845, -198.856, 46.4334, 0.24", "3.69438, -208.289, 46.877, 0.24", "11.0912, -217.544, 48.3649, 0.24" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-49.4236, -113.235, 18.5349, 0.12", "-49.9801, -113.345, 18.2261, 0.12", "-50.2944, -113.455, 18.0746, 0.12", "-50.9834, -113.75, 17.6556, 0.12", "-51.2735, -113.865, 17.4645, 0.12", "-51.9413, -114.129, 17.0244, 0.12", "-53.3694, -114.693, 16.0835, 0.12", "-53.6929, -114.853, 15.8727, 0.12", "-54.555, -115.338, 15.3324, 0.84", "-55.2384, -115.773, 14.9508, 0.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-55.2384, -115.773, 14.9508, 0.12", "-55.6835, -115.634, 14.811, 0.12", "-56.3866, -115.472, 14.5959, 0.12", "-57.3072, -115.309, 14.3183, 0.12", "-58.5096, -115.146, 13.9594, 0.12", "-59.4873, -115.044, 13.6697, 0.12", "-61.2409, -114.84, 13.2382, 0.24", "-61.814, -114.794, 13.1209, 0.12", "-62.3835, -114.771, 13.0288, 0.12", "-63.177, -114.725, 12.9313, 0.12", "-63.53, -114.673, 12.8989, 0.12", "-64.9576, -114.292, 12.7765, 0.24", "-65.7117, -114.02, 12.7074, 0.12", "-66.1486, -113.851, 12.6794, 0.12", "-67.21, -113.444, 12.6171, 0.36", "-68.1142, -113.127, 12.5961, 0.36", "-69.1253, -112.821, 12.5789, 0.36", "-69.5809, -112.717, 12.5643, 0.12", "-70.9214, -112.473, 12.5427, 0.12", "-71.8265, -112.398, 12.5607, 0.12", "-72.9379, -112.48, 12.6213, 1.44", "-73.3797, -112.576, 12.6642, 1.92", "-74.029, -112.803, 12.7488, 1.92", "-74.6192, -113.112, 12.8346, 1.92", "-75.5462, -113.944, 12.9047, 0.12", "-75.9819, -114.667, 12.9176, 0.12", "-76.1629, -115.349, 12.8823, 0.36", "-76.2145, -115.72, 12.8678, 0.12", "-76.2088, -116.512, 12.8397, 0.12", "-75.9307, -118.235, 12.7443, 1.68", "-75.7405, -118.706, 12.6508, 1.92", "-75.5725, -119.001, 12.5655, 1.92", "-84.8519, -120.806, 12.3442, 1.92", "-94.1668, -122.168, 11.5519, 1.92", "-103.603, -122.119, 11.507, 1.92", "-112.936, -123.399, 12.2273, 1.92", "-121.991, -125.703, 13.7793, 1.92", "-130.694, -129.554, 13.8457, 1.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-55.2384, -115.773, 14.9508, 0.48", "-55.7195, -116.155, 14.838, 0.48", "-56.2865, -116.458, 14.7008, 0.48", "-57.1406, -116.837, 14.4924, 0.48", "-57.7347, -117.082, 14.3477, 0.12", "-58.8254, -117.521, 14.0356, 0.12", "-59.9482, -117.932, 13.6848, 0.12", "-61.1889, -118.309, 13.3033, 0.12", "-61.8567, -118.469, 13.0857, 0.12", "-62.4639, -118.573, 12.8768, 0.12", "-63.2756, -118.689, 12.5785, 0.6", "-63.963, -118.776, 12.2936, 0.6", "-72.5177, -122.423, 10.7774, 0.6" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_DBC_b0e6d189ec_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_11
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4499999836411719)
    connect dend_25(0), soma_0(0.4499999836411719)
    connect dend_22(0), soma_0(0.4499999836411719)
    connect dend_11(0), soma_0(0.4499999836411719)
    connect dend_6(0), soma_0(0.4499999836411719)
    connect dend_3(0), soma_0(0.4499999836411719)
    connect dend_0(0), soma_0(0.4499999836411719)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_14(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.36129, -7.58075, 0.00144685, 3.22785 ) }
    soma_0 { pt3dadd( 2.18013, -6.85906, 0.00129054, 6.03886 ) }
    soma_0 { pt3dadd( 1.99896, -6.13737, 0.00113423, 7.42316 ) }
    soma_0 { pt3dadd( 1.81779, -5.41568, 9.77923E-4, 8.36559 ) }
    soma_0 { pt3dadd( 1.63662, -4.69399, 8.21614E-4, 9.26167 ) }
    soma_0 { pt3dadd( 1.45546, -3.9723, 6.65304E-4, 9.90915 ) }
    soma_0 { pt3dadd( 1.27429, -3.25061, 5.08995E-4, 10.4263 ) }
    soma_0 { pt3dadd( 1.09312, -2.52892, 3.52686E-4, 10.8393 ) }
    soma_0 { pt3dadd( 0.911955, -1.80723, 1.96376E-4, 11.2188 ) }
    soma_0 { pt3dadd( 0.730788, -1.08554, 4.00668E-5, 11.4122 ) }
    soma_0 { pt3dadd( 0.54962, -0.363848, -1.16243E-4, 11.4389 ) }
    soma_0 { pt3dadd( 0.368453, 0.357841, -2.72552E-4, 11.3929 ) }
    soma_0 { pt3dadd( 0.187285, 1.07953, -4.28861E-4, 11.2923 ) }
    soma_0 { pt3dadd( 0.00611797, 1.80122, -5.85171E-4, 10.9441 ) }
    soma_0 { pt3dadd( -0.175049, 2.52291, -7.4148E-4, 10.5254 ) }
    soma_0 { pt3dadd( -0.356217, 3.2446, -8.9779E-4, 10.1407 ) }
    soma_0 { pt3dadd( -0.537384, 3.96629, -0.0010541, 9.5776 ) }
    soma_0 { pt3dadd( -0.718552, 4.68798, -0.00121041, 8.87208 ) }
    soma_0 { pt3dadd( -0.899719, 5.40967, -0.00136672, 7.79472 ) }
    soma_0 { pt3dadd( -1.08089, 6.13136, -0.00152303, 6.05918 ) }
    soma_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 3.96403 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.04582, 7.3084, -2.62764, 1.8 ) }
    apic_0 { pt3dadd( 1.02676, 8.51479, -3.11329, 0.96 ) }
    apic_0 { pt3dadd( 1.00664, 9.78815, -3.62591, 0.72 ) }
    apic_0 { pt3dadd( 0.974689, 11.8096, -4.43968, 0.96 ) }
    apic_0 { pt3dadd( 0.953487, 13.1514, -4.97981, 1.32 ) }
    apic_0 { pt3dadd( 0.924644, 14.9765, -5.71457, 1.32 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.0441755, -7.3286, 6.04236, 1.68 ) }
    dend_25 { pt3dadd( -0.0923074, -7.84267, 6.2857, 0.72 ) }
    dend_25 { pt3dadd( -0.185537, -8.8384, 6.75703, 0.96 ) }
    dend_25 { pt3dadd( -0.240791, -9.42854, 7.03638, 1.32 ) }
    dend_25 { pt3dadd( -0.298351, -10.0433, 7.32738, 0.96 ) }
    dend_25 { pt3dadd( -0.32713, -10.3506, 7.47288, 0.96 ) }
    dend_25 { pt3dadd( -0.392844, -11.0525, 7.80511, 1.08 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.07582, 7.6234, 2.85236, 1.68 ) }
    dend_22 { pt3dadd( -0.0110498, 8.22454, 2.95738, 1.68 ) }
    dend_22 { pt3dadd( 0.069548, 9.04938, 3.36272, 1.44 ) }
    dend_22 { pt3dadd( 0.203788, 9.6389, 3.73426, 0.96 ) }
    dend_22 { pt3dadd( 0.321794, 10.1086, 4.06892, 0.84 ) }
    dend_22 { pt3dadd( 0.422843, 10.5365, 4.3773, 0.96 ) }
    dend_22 { pt3dadd( 0.645242, 11.6097, 5.23633, 0.84 ) }
    dend_22 { pt3dadd( 0.781608, 12.1794, 5.75152, 0.72 ) }
    dend_22 { pt3dadd( 0.893288, 12.6178, 6.17815, 0.72 ) }
    dend_22 { pt3dadd( 1.02909, 13.171, 6.70561, 0.84 ) }
    dend_22 { pt3dadd( 1.09254, 13.5063, 6.98798, 0.96 ) }
    dend_22 { pt3dadd( 1.23663, 14.5835, 7.73075, 0.24 ) }
    dend_22 { pt3dadd( 1.28584, 15.0741, 7.97103, 0.24 ) }
    dend_22 { pt3dadd( 1.32286, 15.4733, 8.14149, 0.6 ) }
    dend_22 { pt3dadd( 1.36684, 16.0203, 8.34381, 1.44 ) }
    dend_22 { pt3dadd( 1.41187, 16.7418, 8.56464, 1.56 ) }
    dend_22 { pt3dadd( 1.43037, 17.3524, 8.72483, 1.56 ) }
    dend_22 { pt3dadd( 1.4296, 18.0296, 8.85283, 1.56 ) }
    dend_22 { pt3dadd( 1.38639, 19.2087, 9.07285, 0.6 ) }
    dend_22 { pt3dadd( 1.34144, 19.8505, 9.18444, 0.48 ) }
    dend_22 { pt3dadd( 1.27843, 20.4734, 9.2934, 0.48 ) }
    dend_22 { pt3dadd( 1.23746, 20.8495, 9.35611, 0.96 ) }
    dend_22 { pt3dadd( 1.15393, 21.7087, 9.5084, 0.6 ) }
    dend_22 { pt3dadd( 1.10931, 22.3412, 9.62564, 0.6 ) }
    dend_22 { pt3dadd( 1.08894, 22.9899, 9.74426, 0.96 ) }
    dend_22 { pt3dadd( 1.07629, 24.1324, 9.98577, 0.84 ) }
    dend_22 { pt3dadd( 1.06897, 24.7649, 10.1366, 0.84 ) }
    dend_22 { pt3dadd( 1.02966, 25.7718, 10.3924, 0.72 ) }
    dend_22 { pt3dadd( 0.945109, 26.7583, 10.6544, 0.84 ) }
    dend_22 { pt3dadd( 0.92007, 26.9667, 10.7076, 0.84 ) }
    dend_22 { pt3dadd( 0.834605, 27.5279, 10.8405, 0.72 ) }
    dend_22 { pt3dadd( 0.698914, 28.3715, 11.0099, 0.48 ) }
    dend_22 { pt3dadd( 0.589781, 29.1719, 11.1354, 0.48 ) }
    dend_22 { pt3dadd( 0.52195, 29.8536, 11.2127, 0.6 ) }
    dend_22 { pt3dadd( 0.480024, 30.4901, 11.2879, 0.84 ) }
    dend_22 { pt3dadd( 0.463746, 30.811, 11.3399, 0.84 ) }
    dend_22 { pt3dadd( 0.448241, 31.263, 11.4251, 0.48 ) }
    dend_22 { pt3dadd( 0.416112, 32.2147, 11.6166, 0.48 ) }
    dend_22 { pt3dadd( 0.386373, 33.1353, 11.8397, 0.48 ) }
    dend_22 { pt3dadd( 0.328505, 34.2719, 12.1743, 0.6 ) }
    dend_22 { pt3dadd( 0.25777, 35.119, 12.4519, 1.08 ) }
    dend_22 { pt3dadd( 0.197284, 35.6325, 12.6158, 1.32 ) }
    dend_22 { pt3dadd( 0.125924, 36.0896, 12.7556, 1.32 ) }
    dend_22 { pt3dadd( 0.00812867, 36.7205, 12.9419, 0.84 ) }
    dend_22 { pt3dadd( -0.114459, 37.4378, 13.1138, 0.6 ) }
    dend_22 { pt3dadd( -0.208457, 38.0689, 13.2384, 0.48 ) }
    dend_22 { pt3dadd( -0.301461, 38.7694, 13.3416, 0.6 ) }
    dend_22 { pt3dadd( -0.354397, 39.1962, 13.3993, 0.48 ) }
    dend_22 { pt3dadd( -0.409093, 39.6727, 13.4446, 0.48 ) }
    dend_22 { pt3dadd( -0.469645, 40.1026, 13.4392, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.15581, -7.1291, -6.17764, 1.44 ) }
    dend_11 { pt3dadd( 2.66743, -8.06659, -6.27751, 1.08 ) }
    dend_11 { pt3dadd( 1.94977, -9.25335, -6.40625, 1.44 ) }
    dend_11 { pt3dadd( 1.22152, -10.3952, -6.61606, 1.56 ) }
    dend_11 { pt3dadd( 0.319675, -11.7965, -6.95674, 1.56 ) }
    dend_11 { pt3dadd( -0.840267, -13.6382, -7.46048, 1.2 ) }
    dend_11 { pt3dadd( -1.50228, -14.7348, -7.82549, 0.72 ) }
    dend_11 { pt3dadd( -1.90362, -15.3288, -8.05441, 0.72 ) }
    dend_11 { pt3dadd( -2.86017, -16.627, -8.6603, 1.56 ) }
    dend_11 { pt3dadd( -3.20819, -17.0931, -8.93008, 1.8 ) }
    dend_11 { pt3dadd( -3.53639, -17.5724, -9.28865, 2.16 ) }
    dend_11 { pt3dadd( -3.9984, -18.5598, -10.2241, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.91582, -4.6931, -0.277637, 1.32 ) }
    dend_6 { pt3dadd( 5.45466, -5.21575, -0.91058, 1.2 ) }
    dend_6 { pt3dadd( 6.14402, -5.69806, -1.80847, 0.72 ) }
    dend_6 { pt3dadd( 6.6265, -5.92565, -2.41307, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_6 { pt3dadd( 7.55953, -6.25559, -3.49181, 1.68 ) }
    dend_6 { pt3dadd( 8.23185, -6.4283, -4.22513, 2.04 ) }
    dend_6 { pt3dadd( 9.58731, -6.69696, -5.62013, 1.92 ) }
    dend_6 { pt3dadd( 10.5168, -6.79705, -6.51239, 1.92 ) }
    dend_6 { pt3dadd( 11.5011, -6.87178, -7.3682, 0.96 ) }
    dend_6 { pt3dadd( 12.0977, -6.93352, -7.81965, 0.96 ) }
    dend_6 { pt3dadd( 13.2658, -7.15169, -8.56031, 1.44 ) }
    dend_6 { pt3dadd( 13.9488, -7.37163, -8.93182, 1.92 ) }
    dend_6 { pt3dadd( 14.9427, -7.77369, -9.35593, 1.56 ) }
    dend_6 { pt3dadd( 15.9841, -8.2968, -9.73866, 1.2 ) }
    dend_6 { pt3dadd( 16.9289, -8.88606, -10.0652, 1.2 ) }
    dend_6 { pt3dadd( 17.9309, -9.61801, -10.3957, 1.56 ) }
    dend_6 { pt3dadd( 18.3259, -9.96294, -10.4956, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 13/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.46419, -1.9421, 0.432363, 0.96 ) }
    dend_3 { pt3dadd( -4.94109, -1.77818, 0.993253, 0.6 ) }
    dend_3 { pt3dadd( -5.89172, -1.29194, 1.96614, 0.72 ) }
    dend_3 { pt3dadd( -5.99645, -1.23924, 2.05722, 0.72 ) }
    dend_3 { pt3dadd( -6.97813, -0.889068, 2.85341, 0.72 ) }
    dend_3 { pt3dadd( -7.43241, -0.80113, 3.22104, 0.72 ) }
    dend_3 { pt3dadd( -8.04004, -0.743236, 3.71996, 0.72 ) }
    dend_3 { pt3dadd( -8.52732, -0.73631, 4.16512, 0.72 ) }
    dend_3 { pt3dadd( -9.02422, -0.770136, 4.6069, 0.72 ) }
    dend_3 { pt3dadd( -10.1948, -0.914268, 5.67652, 0.72 ) }
    dend_3 { pt3dadd( -11.3306, -1.11832, 6.70347, 0.84 ) }
    dend_3 { pt3dadd( -12.2377, -1.33706, 7.55455, 1.08 ) }
    dend_3 { pt3dadd( -13.1989, -1.62601, 8.51258, 1.44 ) }
    dend_3 { pt3dadd( -13.7013, -1.78969, 9.05087, 1.68 ) }
    dend_3 { pt3dadd( -14.4323, -2.00778, 9.88242, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.77419, 5.8804, -7.59764, 1.08 ) }
    dend_0 { pt3dadd( -4.01957, 6.45112, -7.72809, 1.08 ) }
    dend_0 { pt3dadd( -4.2821, 7.00075, -7.92337, 0.84 ) }
    dend_0 { pt3dadd( -4.47204, 7.33658, -8.08276, 0.12 ) }
    dend_0 { pt3dadd( -4.71904, 7.70467, -8.27322, 0.12 ) }
    dend_0 { pt3dadd( -5.04314, 8.14077, -8.50295, 0.84 ) }
    dend_0 { pt3dadd( -5.83533, 9.20383, -9.04057, 0.84 ) }
    dend_0 { pt3dadd( -6.31654, 9.84253, -9.36622, 0.84 ) }
    dend_0 { pt3dadd( -6.83903, 10.5559, -9.7045, 0.48 ) }
    dend_0 { pt3dadd( -7.27989, 11.1769, -9.96882, 0.12 ) }
    dend_0 { pt3dadd( -7.53511, 11.5456, -10.1212, 0.12 ) }
    dend_0 { pt3dadd( -7.98876, 12.2245, -10.3848, 0.6 ) }
    dend_0 { pt3dadd( -8.38912, 12.8584, -10.5843, 0.6 ) }
    dend_0 { pt3dadd( -8.83554, 13.6071, -10.8177, 0.72 ) }
    dend_0 { pt3dadd( -9.03538, 13.9588, -10.9257, 1.08 ) }
    dend_0 { pt3dadd( -9.52748, 14.8288, -11.2379, 0.6 ) }
    dend_0 { pt3dadd( -9.88713, 15.4405, -11.4647, 0.36 ) }
    dend_0 { pt3dadd( -10.2112, 15.9888, -11.6784, 0.12 ) }
    dend_0 { pt3dadd( -10.6507, 16.7511, -11.9747, 0.48 ) }
    dend_0 { pt3dadd( -11.02, 17.4348, -12.232, 0.48 ) }
    dend_0 { pt3dadd( -11.6037, 18.6043, -12.6291, 0.48 ) }
    dend_0 { pt3dadd( -12.1094, 19.7112, -12.9806, 0.6 ) }
    dend_0 { pt3dadd( -12.5758, 20.8504, -13.3634, 0.36 ) }
    dend_0 { pt3dadd( -12.7449, 21.3099, -13.523, 0.36 ) }
    dend_0 { pt3dadd( -13.0284, 22.1519, -13.8187, 1.2 ) }
    dend_0 { pt3dadd( -13.235, 22.8034, -14.0506, 1.08 ) }
    dend_0 { pt3dadd( -13.4745, 23.5712, -14.3304, 0.72 ) }
    dend_0 { pt3dadd( -13.6945, 24.2516, -14.5931, 0.24 ) }
    dend_0 { pt3dadd( -13.9755, 25.0542, -14.8868, 0.24 ) }
    dend_0 { pt3dadd( -14.1245, 25.4674, -15.0309, 0.72 ) }
    dend_0 { pt3dadd( -14.4197, 26.2341, -15.2582, 0.84 ) }
    dend_0 { pt3dadd( -14.6883, 26.9163, -15.4438, 0.48 ) }
    dend_0 { pt3dadd( -14.8469, 27.3024, -15.5232, 0.24 ) }
    dend_0 { pt3dadd( -15.0881, 27.8501, -15.6152, 0.12 ) }
    dend_0 { pt3dadd( -15.2482, 28.2055, -15.6765, 0.96 ) }
    dend_0 { pt3dadd( -15.64, 29.0937, -15.803, 1.44 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 0.906991 ) }
    axon_0 { pt3dadd( -4.91421, 21.4016, -0.00167934, 0.906991 ) }
    axon_0 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.906991 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 67/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 0.924644, 14.9765, -5.71457, 0.36 ) }
    apic_4 { pt3dadd( 1.56962, 15.5362, -6.01471, 0.36 ) }
    apic_4 { pt3dadd( 2.33746, 16.148, -6.44294, 0.48 ) }
    apic_4 { pt3dadd( 2.90737, 16.5828, -6.79313, 0.48 ) }
    apic_4 { pt3dadd( 3.53342, 17.0521, -7.17432, 0.48 ) }
    apic_4 { pt3dadd( 4.69197, 17.9148, -7.84078, 0.48 ) }
    apic_4 { pt3dadd( 5.19017, 18.3027, -8.18129, 0.96 ) }
    apic_4 { pt3dadd( 5.58798, 18.6423, -8.52108, 0.96 ) }
    apic_4 { pt3dadd( 6.18453, 19.2405, -9.17191, 0.48 ) }
    apic_4 { pt3dadd( 6.49384, 19.5911, -9.5469, 0.48 ) }
    apic_4 { pt3dadd( 6.78123, 19.9297, -9.94578, 0.48 ) }
    apic_4 { pt3dadd( 7.64171, 21.0225, -11.1967, 0.36 ) }
    apic_4 { pt3dadd( 7.92347, 21.3815, -11.6519, 0.36 ) }
    apic_4 { pt3dadd( 8.28054, 21.8143, -12.2226, 0.84 ) }
    apic_4 { pt3dadd( 8.59571, 22.1625, -12.7083, 0.84 ) }
    apic_4 { pt3dadd( 9.51461, 23.0481, -14.0282, 0.48 ) }
    apic_4 { pt3dadd( 9.71641, 23.2134, -14.2726, 0.48 ) }
    apic_4 { pt3dadd( 10.417, 23.6935, -14.9358, 0.96 ) }
    apic_4 { pt3dadd( 10.8712, 23.9824, -15.3396, 1.32 ) }
    apic_4 { pt3dadd( 11.4623, 24.369, -15.8534, 1.08 ) }
    apic_4 { pt3dadd( 12.2418, 24.9699, -16.5446, 0.12 ) }
    apic_4 { pt3dadd( 12.7308, 25.438, -16.9781, 0.12 ) }
    apic_4 { pt3dadd( 12.876, 25.6021, -17.1333, 0.48 ) }
    apic_4 { pt3dadd( 13.3542, 26.2053, -17.6874, 0.72 ) }
    apic_4 { pt3dadd( 13.6439, 26.6013, -18.0531, 0.12 ) }
    apic_4 { pt3dadd( 14.043, 27.178, -18.5374, 0.12 ) }
    apic_4 { pt3dadd( 14.4353, 27.7688, -18.9737, 0.48 ) }
    apic_4 { pt3dadd( 14.9503, 28.5321, -19.5008, 0.72 ) }
    apic_4 { pt3dadd( 15.3757, 29.1233, -19.8582, 0.12 ) }
    apic_4 { pt3dadd( 15.9245, 29.8134, -20.1907, 0.12 ) }
    apic_4 { pt3dadd( 16.4068, 30.384, -20.4071, 0.96 ) }
    apic_4 { pt3dadd( 16.6871, 30.7045, -20.5019, 1.08 ) }
    apic_4 { pt3dadd( 17.3451, 31.4876, -20.6551, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_4 { pt3dadd( 17.9463, 32.245, -20.7486, 0.6 ) }
    apic_4 { pt3dadd( 18.6064, 33.1255, -20.9184, 0.36 ) }
    apic_4 { pt3dadd( 19.2095, 33.9476, -21.1077, 0.24 ) }
    apic_4 { pt3dadd( 19.5554, 34.4297, -21.2556, 0.84 ) }
    apic_4 { pt3dadd( 19.7682, 34.731, -21.3623, 1.08 ) }
    apic_4 { pt3dadd( 20.1395, 35.2747, -21.5974, 0.6 ) }
    apic_4 { pt3dadd( 21.0919, 36.7057, -22.4253, 0.24 ) }
    apic_4 { pt3dadd( 21.4484, 37.2801, -22.8099, 0.24 ) }
    apic_4 { pt3dadd( 21.7358, 37.7722, -23.1564, 0.72 ) }
    apic_4 { pt3dadd( 22.0247, 38.3017, -23.5241, 1.2 ) }
    apic_4 { pt3dadd( 22.3721, 38.9821, -23.9882, 0.6 ) }
    apic_4 { pt3dadd( 22.8095, 39.86, -24.5294, 0.12 ) }
    apic_4 { pt3dadd( 23.208, 40.665, -24.9545, 0.12 ) }
    apic_4 { pt3dadd( 23.4005, 41.0641, -25.1684, 0.36 ) }
    apic_4 { pt3dadd( 23.541, 41.3595, -25.308, 0.36 ) }
    apic_4 { pt3dadd( 23.8236, 41.9306, -25.5654, 0.12 ) }
    apic_4 { pt3dadd( 24.2759, 42.7803, -25.9774, 0.12 ) }
    apic_4 { pt3dadd( 24.6497, 43.434, -26.3116, 0.84 ) }
    apic_4 { pt3dadd( 24.771, 43.6157, -26.4163, 1.2 ) }
    apic_4 { pt3dadd( 25.2129, 44.2052, -26.7627, 1.2 ) }
    apic_4 { pt3dadd( 25.696, 44.8058, -27.1398, 0.96 ) }
    apic_4 { pt3dadd( 26.4232, 45.6839, -27.6847, 0.36 ) }
    apic_4 { pt3dadd( 26.9464, 46.2993, -28.205, 0.36 ) }
    apic_4 { pt3dadd( 27.347, 46.7433, -28.671, 0.36 ) }
    apic_4 { pt3dadd( 27.6258, 47.0336, -29.0231, 0.36 ) }
    apic_4 { pt3dadd( 28.1877, 47.5878, -29.779, 0.6 ) }
    apic_4 { pt3dadd( 28.413, 47.8029, -30.0803, 0.84 ) }
    apic_4 { pt3dadd( 29.6165, 48.9487, -31.6456, 0.84 ) }
    apic_4 { pt3dadd( 30.0713, 49.3805, -32.2583, 0.12 ) }
    apic_4 { pt3dadd( 30.3321, 49.6468, -32.6019, 0.12 ) }
    apic_4 { pt3dadd( 30.5149, 49.8332, -32.8177, 0.12 ) }
    apic_4 { pt3dadd( 30.7808, 50.0996, -33.0423, 0.6 ) }
    apic_4 { pt3dadd( 31.1113, 50.4358, -33.2385, 0.6 ) }
    apic_4 { pt3dadd( 31.4535, 50.7996, -33.3532, 0.12 ) }
    apic_4 { pt3dadd( 31.8466, 51.2279, -33.4851, 0.12 ) }
    apic_4 { pt3dadd( 32.3341, 51.768, -33.6646, 0.72 ) }
    apic_4 { pt3dadd( 32.8265, 52.3406, -33.8552, 0.96 ) }
    apic_4 { pt3dadd( 33.223, 52.8303, -34.0671, 0.12 ) }
    apic_4 { pt3dadd( 33.801, 53.5195, -34.4118, 0.12 ) }
    apic_4 { pt3dadd( 34.1047, 53.8804, -34.6117, 0.84 ) }
    apic_4 { pt3dadd( 34.4051, 54.2394, -34.8142, 0.96 ) }
    apic_4 { pt3dadd( 34.6954, 54.5981, -35.0024, 0.48 ) }
    apic_4 { pt3dadd( 35.3893, 55.4914, -35.4931, 0.12 ) }
    apic_4 { pt3dadd( 35.9401, 56.2246, -35.9038, 0.12 ) }
    apic_4 { pt3dadd( 36.5128, 57.0544, -36.3428, 0.12 ) }
    apic_4 { pt3dadd( 36.7236, 57.399, -36.512, 0.96 ) }
    apic_4 { pt3dadd( 36.9562, 57.8224, -36.7407, 0.96 ) }
    apic_4 { pt3dadd( 37.2551, 58.4408, -37.0634, 0.24 ) }
    apic_4 { pt3dadd( 37.3979, 58.782, -37.2052, 0.12 ) }
    apic_4 { pt3dadd( 37.677, 59.5638, -37.5034, 0.12 ) }
    apic_4 { pt3dadd( 37.9057, 60.2272, -37.7255, 0.72 ) }
    apic_4 { pt3dadd( 38.3977, 61.6356, -38.1554, 0.12 ) }
    apic_4 { pt3dadd( 38.636, 62.3097, -38.3339, 0.12 ) }
    apic_4 { pt3dadd( 39.2423, 63.9644, -38.7227, 0.12 ) }
    apic_4 { pt3dadd( 39.503, 64.6706, -38.9125, 0.12 ) }
    apic_4 { pt3dadd( 39.7613, 65.3615, -39.1196, 0.12 ) }
    apic_4 { pt3dadd( 39.8742, 65.6757, -39.2144, 0.96 ) }
    apic_4 { pt3dadd( 40.0226, 66.1489, -39.3411, 1.32 ) }
    apic_4 { pt3dadd( 40.184, 66.7646, -39.5549, 1.32 ) }
    apic_4 { pt3dadd( 40.4404, 68.1264, -40.147, 0.12 ) }
    apic_4 { pt3dadd( 40.5544, 68.9264, -40.5049, 0.12 ) }
    apic_4 { pt3dadd( 40.5988, 69.3901, -40.704, 0.12 ) }
    apic_4 { pt3dadd( 40.6379, 70.0716, -40.9841, 0.84 ) }
    apic_4 { pt3dadd( 40.6577, 70.8236, -41.2607, 0.12 ) }
    apic_4 { pt3dadd( 40.6611, 71.6047, -41.5183, 0.12 ) }
    apic_4 { pt3dadd( 40.6612, 72.3159, -41.7243, 0.12 ) }
    apic_4 { pt3dadd( 40.6643, 72.7917, -41.8884, 0.84 ) }
    apic_4 { pt3dadd( 40.6995, 73.411, -42.1173, 0.12 ) }
    apic_4 { pt3dadd( 40.7859, 74.0868, -42.3734, 0.12 ) }
    apic_4 { pt3dadd( 40.9275, 74.793, -42.6234, 0.72 ) }
    apic_4 { pt3dadd( 41.088, 75.3519, -42.8263, 0.72 ) }
    apic_4 { pt3dadd( 41.2954, 75.8937, -43.0451, 0.12 ) }
    apic_4 { pt3dadd( 41.5638, 76.4833, -43.2853, 0.12 ) }
    apic_4 { pt3dadd( 41.7979, 76.9467, -43.4545, 0.24 ) }
    apic_4 { pt3dadd( 42.04, 77.3732, -43.6673, 0.24 ) }
    apic_4 { pt3dadd( 42.2754, 77.7799, -43.9052, 0.24 ) }
    apic_4 { pt3dadd( 42.6252, 78.4103, -44.3078, 0.72 ) }
    apic_4 { pt3dadd( 42.7755, 78.6929, -44.5007, 1.2 ) }
    apic_4 { pt3dadd( 43.0262, 79.1827, -44.8581, 1.2 ) }
    apic_4 { pt3dadd( 43.7464, 80.5863, -45.9338, 0.12 ) }
    apic_4 { pt3dadd( 44.157, 81.3465, -46.5301, 0.12 ) }
    apic_4 { pt3dadd( 44.398, 81.7672, -46.88, 0.48 ) }
    apic_4 { pt3dadd( 44.6362, 82.1415, -47.2057, 0.12 ) }
    apic_4 { pt3dadd( 44.8344, 82.4289, -47.4638, 0.12 ) }
    apic_4 { pt3dadd( 45.1645, 82.8595, -47.8427, 0.6 ) }
    apic_4 { pt3dadd( 45.3414, 83.0595, -48.0407, 0.6 ) }
    apic_4 { pt3dadd( 46.075, 83.7616, -48.9906, 0.12 ) }
    apic_4 { pt3dadd( 46.5096, 84.1602, -49.5928, 0.12 ) }
    apic_4 { pt3dadd( 46.5908, 84.2379, -49.7091, 0.72 ) }
    apic_4 { pt3dadd( 46.8569, 84.5002, -50.09, 0.72 ) }
    apic_4 { pt3dadd( 47.7722, 85.3969, -51.509, 0.6 ) }
    apic_4 { pt3dadd( 48.2449, 85.8669, -52.2448, 0.12 ) }
    apic_4 { pt3dadd( 48.5529, 86.186, -52.7098, 0.12 ) }
    apic_4 { pt3dadd( 48.7882, 86.4474, -53.0994, 0.12 ) }
    apic_4 { pt3dadd( 49.0495, 86.7755, -53.5259, 0.6 ) }
    apic_4 { pt3dadd( 49.8851, 87.8967, -54.7515, 0.12 ) }
    apic_4 { pt3dadd( 50.2315, 88.4439, -55.1605, 0.12 ) }
    apic_4 { pt3dadd( 50.4801, 88.8942, -55.4419, 0.72 ) }
    apic_4 { pt3dadd( 51.0648, 90.0962, -56.1354, 0.12 ) }
    apic_4 { pt3dadd( 51.5345, 91.1804, -56.6909, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_4 { pt3dadd( 51.822, 91.946, -57.0068, 0.12 ) }
    apic_4 { pt3dadd( 52.3725, 93.6256, -57.5443, 0.12 ) }
    apic_4 { pt3dadd( 52.5954, 94.3767, -57.77, 0.84 ) }
    apic_4 { pt3dadd( 52.7952, 95.123, -57.9559, 0.12 ) }
    apic_4 { pt3dadd( 53.1166, 96.4238, -58.1959, 0.12 ) }
    apic_4 { pt3dadd( 53.2701, 97.0994, -58.3199, 0.6 ) }
    apic_4 { pt3dadd( 53.4325, 97.8312, -58.4438, 0.12 ) }
    apic_4 { pt3dadd( 53.5442, 98.257, -58.5062, 0.12 ) }
    apic_4 { pt3dadd( 53.8962, 99.4469, -58.6306, 0.12 ) }
    apic_4 { pt3dadd( 54.1187, 100.127, -58.6886, 0.72 ) }
    apic_4 { pt3dadd( 54.356, 100.825, -58.7464, 0.12 ) }
    apic_4 { pt3dadd( 54.8646, 102.173, -58.876, 0.24 ) }
    apic_4 { pt3dadd( 54.9928, 102.495, -58.9006, 0.24 ) }
    apic_4 { pt3dadd( 55.0954, 102.749, -58.9219, 0.12 ) }
    apic_4 { pt3dadd( 55.5805, 103.903, -59.0198, 0.12 ) }
    apic_4 { pt3dadd( 55.8312, 104.475, -59.0608, 0.12 ) }
    apic_4 { pt3dadd( 56.17, 105.174, -59.0944, 0.12 ) }
    apic_4 { pt3dadd( 56.225, 105.283, -59.0966, 0.72 ) }
    apic_4 { pt3dadd( 56.5134, 105.837, -59.0992, 0.84 ) }
    apic_4 { pt3dadd( 56.8234, 106.413, -59.0909, 0.12 ) }
    apic_4 { pt3dadd( 57.3779, 107.385, -59.0652, 0.12 ) }
    apic_4 { pt3dadd( 57.9511, 108.363, -59.0511, 0.12 ) }
    apic_4 { pt3dadd( 58.197, 108.791, -59.0492, 0.12 ) }
    apic_4 { pt3dadd( 58.3897, 109.127, -59.0497, 0.72 ) }
    apic_4 { pt3dadd( 58.8018, 109.835, -59.055, 0.84 ) }
    apic_4 { pt3dadd( 59.0876, 110.339, -59.0618, 0.12 ) }
    apic_4 { pt3dadd( 59.6939, 111.433, -59.0613, 0.12 ) }
    apic_4 { pt3dadd( 60.2708, 112.491, -59.0736, 0.12 ) }
    apic_4 { pt3dadd( 60.5934, 113.089, -59.0841, 0.12 ) }
    apic_4 { pt3dadd( 60.7629, 113.39, -59.0898, 0.6 ) }
    apic_4 { pt3dadd( 61.1817, 114.083, -59.107, 0.72 ) }
    apic_4 { pt3dadd( 61.4623, 114.526, -59.1172, 0.12 ) }
    apic_4 { pt3dadd( 62.4039, 115.947, -59.1647, 0.12 ) }
    apic_4 { pt3dadd( 62.6794, 116.355, -59.1809, 0.12 ) }
    apic_4 { pt3dadd( 63.2866, 117.259, -59.2167, 0.12 ) }
    apic_4 { pt3dadd( 63.5776, 117.714, -59.2301, 0.84 ) }
    apic_4 { pt3dadd( 63.7781, 118.04, -59.2203, 0.96 ) }
    apic_4 { pt3dadd( 64.0508, 118.512, -59.1808, 0.96 ) }
    apic_4 { pt3dadd( 64.452, 119.219, -59.0778, 0.6 ) }
    apic_4 { pt3dadd( 64.8253, 119.89, -58.9712, 0.6 ) }
    apic_4 { pt3dadd( 65.3634, 120.896, -58.8026, 0.6 ) }
    apic_4 { pt3dadd( 65.8647, 121.825, -58.6381, 0.12 ) }
    apic_4 { pt3dadd( 66.5325, 123.057, -58.4286, 0.12 ) }
    apic_4 { pt3dadd( 67.1811, 124.266, -58.2257, 0.12 ) }
    apic_4 { pt3dadd( 67.3429, 124.568, -58.1768, 0.36 ) }
    apic_4 { pt3dadd( 67.5469, 124.955, -58.122, 0.36 ) }
    apic_4 { pt3dadd( 67.6723, 125.198, -58.0984, 0.12 ) }
    apic_4 { pt3dadd( 68.0734, 125.997, -58.0698, 0.12 ) }
    apic_4 { pt3dadd( 68.1782, 126.219, -58.062, 0.36 ) }
    apic_4 { pt3dadd( 68.3227, 126.543, -58.0513, 0.12 ) }
    apic_4 { pt3dadd( 68.6059, 127.139, -58.0325, 0.12 ) }
    apic_4 { pt3dadd( 69.09, 128.056, -58.0287, 0.12 ) }
    apic_4 { pt3dadd( 69.3991, 128.583, -58.0387, 0.48 ) }
    apic_4 { pt3dadd( 69.7567, 129.122, -58.0565, 0.48 ) }
    apic_4 { pt3dadd( 69.9165, 129.342, -58.0666, 0.12 ) }
    apic_4 { pt3dadd( 70.3935, 129.955, -58.0978, 0.12 ) }
    apic_4 { pt3dadd( 70.8469, 130.49, -58.1247, 0.12 ) }
    apic_4 { pt3dadd( 71.2516, 130.94, -58.1454, 0.6 ) }
    apic_4 { pt3dadd( 71.8276, 131.572, -58.1688, 0.72 ) }
    apic_4 { pt3dadd( 72.2297, 132.013, -58.2168, 0.36 ) }
    apic_4 { pt3dadd( 72.7348, 132.596, -58.3035, 0.36 ) }
    apic_4 { pt3dadd( 73.3716, 133.384, -58.4383, 0.48 ) }
    apic_4 { pt3dadd( 73.686, 133.785, -58.5103, 0.24 ) }
    apic_4 { pt3dadd( 73.9949, 134.189, -58.593, 0.24 ) }
    apic_4 { pt3dadd( 74.8278, 135.289, -58.8398, 0.24 ) }
    apic_4 { pt3dadd( 75.2206, 135.802, -58.9618, 0.24 ) }
    apic_4 { pt3dadd( 75.7453, 136.473, -59.1185, 0.36 ) }
    apic_4 { pt3dadd( 75.9759, 136.772, -59.1897, 0.12 ) }
    apic_4 { pt3dadd( 76.2383, 137.115, -59.2609, 0.12 ) }
    apic_4 { pt3dadd( 76.5651, 137.544, -59.3275, 0.24 ) }
    apic_4 { pt3dadd( 76.7092, 137.739, -59.3467, 0.12 ) }
    apic_4 { pt3dadd( 77.1946, 138.455, -59.4389, 0.12 ) }
    apic_4 { pt3dadd( 77.607, 139.122, -59.5241, 0.6 ) }
    apic_4 { pt3dadd( 77.9579, 139.728, -59.5948, 0.72 ) }
    apic_4 { pt3dadd( 78.1734, 140.111, -59.6358, 0.72 ) }
    apic_4 { pt3dadd( 78.4396, 140.599, -59.681, 0.12 ) }
    apic_4 { pt3dadd( 79.0359, 141.707, -59.7437, 0.12 ) }
    apic_4 { pt3dadd( 79.5953, 142.787, -59.763, 0.12 ) }
    apic_4 { pt3dadd( 79.8752, 143.323, -59.7507, 0.48 ) }
    apic_4 { pt3dadd( 80.0392, 143.627, -59.7383, 0.12 ) }
    apic_4 { pt3dadd( 80.3913, 144.246, -59.7012, 0.12 ) }
    apic_4 { pt3dadd( 80.8418, 144.976, -59.6712, 0.12 ) }
    apic_4 { pt3dadd( 81.3832, 145.797, -59.6762, 0.12 ) }
    apic_4 { pt3dadd( 81.7206, 146.306, -59.6991, 0.12 ) }
    apic_4 { pt3dadd( 82.0547, 146.816, -59.7134, 0.6 ) }
    apic_4 { pt3dadd( 82.3796, 147.332, -59.7257, 0.6 ) }
    apic_4 { pt3dadd( 82.8538, 148.103, -59.7411, 0.12 ) }
    apic_4 { pt3dadd( 83.6795, 149.537, -59.7638, 0.12 ) }
    apic_4 { pt3dadd( 84.3577, 150.842, -59.7576, 0.12 ) }
    apic_4 { pt3dadd( 84.6666, 151.537, -59.7582, 0.72 ) }
    apic_4 { pt3dadd( 84.819, 151.96, -59.7585, 0.72 ) }
    apic_4 { pt3dadd( 84.9392, 152.395, -59.7555, 0.24 ) }
    apic_4 { pt3dadd( 85.1611, 153.502, -59.759, 0.24 ) }
    apic_4 { pt3dadd( 85.2438, 154.24, -59.7677, 0.24 ) }
    apic_4 { pt3dadd( 85.2973, 154.886, -59.7787, 0.48 ) }
    apic_4 { pt3dadd( 85.3636, 155.626, -59.7873, 0.6 ) }
    apic_4 { pt3dadd( 85.4044, 155.973, -59.7768, 0.6 ) }
    apic_4 { pt3dadd( 85.4786, 156.64, -59.7365, 0.6 ) }
    apic_4 { pt3dadd( 85.5971, 158.097, -59.6019, 0.12 ) }
    apic_4 { pt3dadd( 85.6462, 158.986, -59.4682, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_4 { pt3dadd( 85.6628, 159.959, -59.2894, 0.12 ) }
    apic_4 { pt3dadd( 85.661, 160.876, -59.1182, 0.12 ) }
    apic_4 { pt3dadd( 85.6583, 161.048, -59.0874, 0.36 ) }
    apic_4 { pt3dadd( 85.6177, 162.311, -58.8715, 0.36 ) }
    apic_4 { pt3dadd( 85.5789, 163.012, -58.7953, 0.12 ) }
    apic_4 { pt3dadd( 85.487, 164.253, -58.6548, 0.12 ) }
    apic_4 { pt3dadd( 85.4579, 164.621, -58.6141, 0.48 ) }
    apic_4 { pt3dadd( 85.4151, 165.238, -58.5532, 0.48 ) }
    apic_4 { pt3dadd( 85.4114, 165.514, -58.532, 0.12 ) }
    apic_4 { pt3dadd( 85.4459, 166.629, -58.4793, 0.12 ) }
    apic_4 { pt3dadd( 85.4501, 166.743, -58.4798, 0.72 ) }
    apic_4 { pt3dadd( 85.4738, 167.237, -58.4894, 0.12 ) }
    apic_4 { pt3dadd( 85.544, 168.215, -58.5155, 0.12 ) }
    apic_4 { pt3dadd( 85.6629, 169.228, -58.5455, 0.12 ) }
    apic_4 { pt3dadd( 85.8155, 170.078, -58.5795, 0.36 ) }
    apic_4 { pt3dadd( 86.0109, 170.84, -58.6919, 0.12 ) }
    apic_4 { pt3dadd( 86.3777, 172.001, -58.9468, 0.12 ) }
    apic_4 { pt3dadd( 86.8459, 173.234, -59.289, 0.48 ) }
    apic_4 { pt3dadd( 87.2628, 174.125, -59.6188, 0.48 ) }
    apic_4 { pt3dadd( 87.7198, 174.91, -59.9776, 0.84 ) }
    apic_4 { pt3dadd( 88.9616, 176.622, -60.9508, 0.24 ) }
    apic_4 { pt3dadd( 89.5422, 177.277, -61.3942, 0.12 ) }
    apic_4 { pt3dadd( 89.9224, 177.627, -61.682, 0.48 ) }
    apic_4 { pt3dadd( 90.5535, 178.116, -62.1393, 0.36 ) }
    apic_4 { pt3dadd( 91.0473, 178.464, -62.5461, 0.36 ) }
    apic_4 { pt3dadd( 91.6346, 178.838, -62.9956, 0.72 ) }
    apic_4 { pt3dadd( 92.0282, 179.063, -63.2824, 0.96 ) }
    apic_4 { pt3dadd( 92.5401, 179.339, -63.6591, 0.96 ) }
    apic_4 { pt3dadd( 93.2141, 179.701, -64.1241, 1.08 ) }
    apic_4 { pt3dadd( 95.1366, 180.767, -65.3495, 0.12 ) }
    apic_4 { pt3dadd( 96.0483, 181.261, -65.8983, 0.12 ) }
    apic_4 { pt3dadd( 96.8091, 181.656, -66.2896, 0.36 ) }
    apic_4 { pt3dadd( 97.6856, 182.101, -66.7638, 0.12 ) }
    apic_4 { pt3dadd( 98.4863, 182.495, -67.1692, 0.12 ) }
    apic_4 { pt3dadd( 98.7134, 182.601, -67.2566, 0.36 ) }
    apic_4 { pt3dadd( 99.2673, 182.831, -67.3938, 0.12 ) }
    apic_4 { pt3dadd( 99.8659, 183.04, -67.611, 0.12 ) }
    apic_4 { pt3dadd( 101.165, 183.486, -68.1457, 0.36 ) }
    apic_4 { pt3dadd( 101.618, 183.639, -68.3749, 0.6 ) }
    apic_4 { pt3dadd( 102.157, 183.854, -68.642, 1.08 ) }
    apic_4 { pt3dadd( 102.872, 184.174, -68.9606, 0.24 ) }
    apic_4 { pt3dadd( 103.722, 184.573, -69.2867, 0.12 ) }
    apic_4 { pt3dadd( 104.172, 184.789, -69.4431, 0.48 ) }
    apic_4 { pt3dadd( 104.401, 184.91, -69.5045, 0.12 ) }
    apic_4 { pt3dadd( 105.65, 185.675, -69.8822, 0.12 ) }
    apic_4 { pt3dadd( 105.981, 185.93, -69.99, 0.6 ) }
    apic_4 { pt3dadd( 106.236, 186.186, -70.1115, 0.6 ) }
    apic_4 { pt3dadd( 106.767, 186.896, -70.4941, 0.12 ) }
    apic_4 { pt3dadd( 107.069, 187.411, -70.817, 0.12 ) }
    apic_4 { pt3dadd( 107.259, 187.878, -71.1296, 0.12 ) }
    apic_4 { pt3dadd( 107.362, 188.472, -71.5081, 0.48 ) }
    apic_4 { pt3dadd( 107.409, 189.834, -72.4017, 0.12 ) }
    apic_4 { pt3dadd( 107.372, 190.43, -72.8245, 0.12 ) }
    apic_4 { pt3dadd( 107.322, 190.847, -73.0838, 0.36 ) }
    apic_4 { pt3dadd( 107.276, 191.187, -73.2755, 0.12 ) }
    apic_4 { pt3dadd( 107.139, 192.267, -73.8299, 0.12 ) }
    apic_4 { pt3dadd( 106.975, 193.825, -74.5603, 0.72 ) }
    apic_4 { pt3dadd( 106.926, 194.903, -74.933, 0.12 ) }
    apic_4 { pt3dadd( 106.921, 197.015, -75.593, 0.12 ) }
    apic_4 { pt3dadd( 106.937, 197.957, -75.8788, 0.12 ) }
    apic_4 { pt3dadd( 106.942, 198.095, -75.9172, 0.48 ) }
    apic_4 { pt3dadd( 106.963, 198.364, -75.9743, 0.12 ) }
    apic_4 { pt3dadd( 107.287, 201.181, -76.1589, 0.12 ) }
    apic_4 { pt3dadd( 107.306, 201.303, -76.1566, 0.48 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.924644, 14.9765, -5.71457, 1.08 ) }
    apic_1 { pt3dadd( 0.852411, 15.8443, -5.4583, 1.08 ) }
    apic_1 { pt3dadd( 0.769235, 16.8572, -5.1755, 1.08 ) }
    apic_1 { pt3dadd( 0.649256, 18.2716, -4.818, 1.08 ) }
    apic_1 { pt3dadd( 0.560982, 19.3123, -4.55498, 0.84 ) }
    apic_1 { pt3dadd( 0.468808, 20.3989, -4.28034, 0.36 ) }
    apic_1 { pt3dadd( 0.427702, 20.8835, -4.15786, 0.36 ) }
    apic_1 { pt3dadd( 0.385612, 21.3491, -4.03506, 0.36 ) }
    apic_1 { pt3dadd( 0.33062, 22.0142, -3.84156, 0.6 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.392844, -11.0525, 7.80511, 1.32 ) }
    dend_31 { pt3dadd( -0.410998, -11.5664, 7.77533, 1.32 ) }
    dend_31 { pt3dadd( -0.419423, -11.8151, 7.75346, 1.44 ) }
    dend_31 { pt3dadd( -0.439391, -12.4325, 7.72097, 1.32 ) }
    dend_31 { pt3dadd( -0.457092, -13.1921, 7.70202, 1.08 ) }
    dend_31 { pt3dadd( -0.47529, -13.8062, 7.70287, 1.08 ) }
    dend_31 { pt3dadd( -0.50902, -14.4811, 7.71449, 0.84 ) }
    dend_31 { pt3dadd( -0.563147, -15.2181, 7.73772, 0.84 ) }
    dend_31 { pt3dadd( -0.625057, -15.9381, 7.76768, 0.84 ) }
    dend_31 { pt3dadd( -0.723115, -16.8076, 7.81336, 0.96 ) }
    dend_31 { pt3dadd( -0.826793, -17.4521, 7.84344, 0.96 ) }
    dend_31 { pt3dadd( -0.961365, -18.0985, 7.89831, 0.96 ) }
    dend_31 { pt3dadd( -1.09504, -18.6365, 7.95983, 0.96 ) }
    dend_31 { pt3dadd( -1.34969, -19.4912, 8.05881, 0.72 ) }
    dend_31 { pt3dadd( -1.52792, -20.0158, 8.11483, 0.84 ) }
    dend_31 { pt3dadd( -1.87265, -20.9552, 8.21894, 0.84 ) }
    dend_31 { pt3dadd( -2.35672, -22.2421, 8.36559, 0.96 ) }
    dend_31 { pt3dadd( -2.53891, -22.7175, 8.42713, 1.2 ) }
    dend_31 { pt3dadd( -2.70567, -23.1288, 8.48945, 1.68 ) }
    dend_31 { pt3dadd( -2.96846, -23.6826, 8.59589, 1.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 93/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.392844, -11.0525, 7.80511, 0.6 ) }
    dend_26 { pt3dadd( 0.0517465, -11.1998, 8.11379, 0.6 ) }
    dend_26 { pt3dadd( 0.815192, -11.4615, 8.92708, 0.48 ) }
    dend_26 { pt3dadd( 1.19532, -11.5876, 9.36743, 0.48 ) }
    dend_26 { pt3dadd( 2.13084, -11.9065, 10.4715, 0.48 ) }
    dend_26 { pt3dadd( 2.48594, -12.0496, 10.8952, 0.48 ) }
    dend_26 { pt3dadd( 3.00553, -12.2486, 11.5276, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 4.45148, -12.7932, 13.5087, 0.96 ) }
    dend_26 { pt3dadd( 4.66827, -12.8637, 13.8267, 0.36 ) }
    dend_26 { pt3dadd( 4.81007, -12.8851, 14.0629, 0.36 ) }
    dend_26 { pt3dadd( 5.1404, -12.8428, 14.6602, 0.36 ) }
    dend_26 { pt3dadd( 5.62669, -12.6404, 15.5751, 0.48 ) }
    dend_26 { pt3dadd( 6.02957, -12.3731, 16.283, 0.48 ) }
    dend_26 { pt3dadd( 6.25157, -12.2182, 16.6072, 0.48 ) }
    dend_26 { pt3dadd( 6.74805, -11.8946, 17.3206, 0.12 ) }
    dend_26 { pt3dadd( 6.91839, -11.7915, 17.5381, 0.12 ) }
    dend_26 { pt3dadd( 7.27058, -11.5784, 17.9118, 0.48 ) }
    dend_26 { pt3dadd( 7.62175, -11.3978, 18.2048, 0.48 ) }
    dend_26 { pt3dadd( 8.27415, -11.0816, 18.6125, 0.6 ) }
    dend_26 { pt3dadd( 8.70553, -10.8567, 18.8248, 0.12 ) }
    dend_26 { pt3dadd( 9.25111, -10.5459, 19.0247, 0.48 ) }
    dend_26 { pt3dadd( 10.0226, -10.0523, 19.2465, 0.48 ) }
    dend_26 { pt3dadd( 10.3058, -9.84834, 19.3159, 0.48 ) }
    dend_26 { pt3dadd( 10.7144, -9.50735, 19.3854, 0.48 ) }
    dend_26 { pt3dadd( 11.165, -9.06227, 19.4385, 0.48 ) }
    dend_26 { pt3dadd( 11.928, -8.19701, 19.5217, 0.48 ) }
    dend_26 { pt3dadd( 12.609, -7.35004, 19.5839, 0.48 ) }
    dend_26 { pt3dadd( 13.2822, -6.46717, 19.6254, 0.48 ) }
    dend_26 { pt3dadd( 13.7964, -5.73071, 19.6441, 0.12 ) }
    dend_26 { pt3dadd( 14.1697, -5.12704, 19.6453, 0.12 ) }
    dend_26 { pt3dadd( 14.4201, -4.68629, 19.6501, 0.12 ) }
    dend_26 { pt3dadd( 14.7144, -4.11387, 19.658, 0.84 ) }
    dend_26 { pt3dadd( 14.9275, -3.74092, 19.6784, 1.2 ) }
    dend_26 { pt3dadd( 15.1861, -3.42264, 19.7394, 1.44 ) }
    dend_26 { pt3dadd( 15.7753, -2.91605, 19.9224, 0.72 ) }
    dend_26 { pt3dadd( 16.3501, -2.51166, 20.1014, 0.36 ) }
    dend_26 { pt3dadd( 16.7735, -2.23755, 20.2644, 0.48 ) }
    dend_26 { pt3dadd( 17.3212, -1.87277, 20.5068, 0.48 ) }
    dend_26 { pt3dadd( 18.2471, -1.22228, 20.9462, 0.36 ) }
    dend_26 { pt3dadd( 18.8121, -0.802691, 21.2205, 0.36 ) }
    dend_26 { pt3dadd( 19.1429, -0.557428, 21.3852, 0.36 ) }
    dend_26 { pt3dadd( 20.0665, 0.182202, 21.8454, 0.12 ) }
    dend_26 { pt3dadd( 20.5351, 0.627515, 22.111, 1.08 ) }
    dend_26 { pt3dadd( 20.7952, 0.950729, 22.2806, 1.2 ) }
    dend_26 { pt3dadd( 21.0317, 1.36611, 22.4432, 1.08 ) }
    dend_26 { pt3dadd( 27.9104, 4.0733, 25.9592, 1.08 ) }
    dend_26 { pt3dadd( 34.008, 8.33651, 29.5212, 1.08 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.469645, 40.1026, 13.4392, 0.12 ) }
    dend_24 { pt3dadd( 0.314179, 41.5576, 13.1137, 0.12 ) }
    dend_24 { pt3dadd( 1.03476, 43.0113, 12.8243, 0.12 ) }
    dend_24 { pt3dadd( 1.496, 43.9944, 12.6439, 0.12 ) }
    dend_24 { pt3dadd( 2.12449, 45.3932, 12.4115, 0.12 ) }
    dend_24 { pt3dadd( 2.55304, 46.3396, 12.1732, 0.12 ) }
    dend_24 { pt3dadd( 3.18879, 47.7311, 11.7533, 0.12 ) }
    dend_24 { pt3dadd( 3.74121, 48.9469, 11.3669, 0.12 ) }
    dend_24 { pt3dadd( 3.9524, 49.4088, 11.1571, 0.12 ) }
    dend_24 { pt3dadd( 4.41421, 50.4816, 10.5308, 0.96 ) }
    dend_24 { pt3dadd( 5.15525, 52.4477, 9.1702, 0.12 ) }
    dend_24 { pt3dadd( 5.28829, 52.8177, 8.88249, 0.12 ) }
    dend_24 { pt3dadd( 5.40841, 53.123, 8.61083, 0.36 ) }
    dend_24 { pt3dadd( 5.81956, 54.0859, 7.7075, 0.12 ) }
    dend_24 { pt3dadd( 5.93741, 54.3495, 7.47156, 0.12 ) }
    dend_24 { pt3dadd( 6.35644, 55.2858, 6.76628, 0.12 ) }
    dend_24 { pt3dadd( 6.55135, 55.7393, 6.52609, 0.12 ) }
    dend_24 { pt3dadd( 6.87097, 56.4751, 6.17068, 0.12 ) }
    dend_24 { pt3dadd( 7.08769, 56.9735, 5.97438, 0.12 ) }
    dend_24 { pt3dadd( 7.46012, 57.8551, 5.67972, 0.12 ) }
    dend_24 { pt3dadd( 8.00494, 59.2658, 5.0333, 0.12 ) }
    dend_24 { pt3dadd( 8.25184, 59.9832, 4.62929, 0.12 ) }
    dend_24 { pt3dadd( 8.43213, 60.5792, 4.26585, 0.12 ) }
    dend_24 { pt3dadd( 8.80939, 62.0006, 3.31119, 0.12 ) }
    dend_24 { pt3dadd( 8.95109, 62.6202, 2.86477, 1.2 ) }
    dend_24 { pt3dadd( 9.34642, 64.9132, 1.23583, 0.12 ) }
    dend_24 { pt3dadd( 9.49369, 66.176, 0.345081, 0.12 ) }
    dend_24 { pt3dadd( 9.51428, 66.3978, 0.189647, 0.48 ) }
    dend_24 { pt3dadd( 9.53674, 67.1077, -0.410123, 0.12 ) }
    dend_24 { pt3dadd( 9.4996, 67.6199, -0.869054, 0.12 ) }
    dend_24 { pt3dadd( 9.24146, 68.7975, -2.11169, 0.12 ) }
    dend_24 { pt3dadd( 9.06215, 69.3246, -2.70884, 1.2 ) }
    dend_24 { pt3dadd( 8.94504, 69.5487, -3.04633, 1.2 ) }
    dend_24 { pt3dadd( 7.7734, 71.3146, -6.16131, 0.12 ) }
    dend_24 { pt3dadd( 7.26716, 71.9172, -7.35075, 0.12 ) }
    dend_24 { pt3dadd( 5.85516, 73.2866, -10.8295, 0.12 ) }
    dend_24 { pt3dadd( 5.69503, 73.4127, -11.2529, 0.12 ) }
    dend_24 { pt3dadd( 4.95778, 74.0027, -13.5168, 0.6 ) }
    dend_24 { pt3dadd( 4.8583, 74.0893, -13.8657, 0.6 ) }
    dend_24 { pt3dadd( 4.70301, 74.2953, -14.7745, 0.6 ) }
    dend_24 { pt3dadd( 4.9226, 74.7809, -16.9824, 0.12 ) }
    dend_24 { pt3dadd( 5.30104, 75.036, -17.2846, 0.12 ) }
    dend_24 { pt3dadd( 6.67846, 76.2903, -17.9737, 0.12 ) }
    dend_24 { pt3dadd( 7.21451, 76.9582, -18.1375, 0.6 ) }
    dend_24 { pt3dadd( 7.60992, 77.6118, -18.2288, 0.12 ) }
    dend_24 { pt3dadd( 8.06612, 78.4463, -18.2827, 0.12 ) }
    dend_24 { pt3dadd( 8.4598, 79.4656, -18.2388, 0.12 ) }
    dend_24 { pt3dadd( 8.75214, 80.6679, -18.1887, 0.12 ) }
    dend_24 { pt3dadd( 8.81104, 81.793, -18.1503, 0.12 ) }
    dend_24 { pt3dadd( 8.7879, 82.5659, -18.1503, 0.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 90/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.469645, 40.1026, 13.4392, 0.72 ) }
    dend_23 { pt3dadd( -0.755241, 40.7014, 13.4899, 0.72 ) }
    dend_23 { pt3dadd( -1.04775, 41.337, 13.541, 0.84 ) }
    dend_23 { pt3dadd( -1.26088, 41.8056, 13.5771, 1.08 ) }
    dend_23 { pt3dadd( -1.59012, 42.5366, 13.6038, 0.72 ) }
    dend_23 { pt3dadd( -1.94639, 43.3686, 13.6175, 0.48 ) }
    dend_23 { pt3dadd( -2.19094, 43.9846, 13.6197, 0.48 ) }
    dend_23 { pt3dadd( -2.37739, 44.5129, 13.6151, 0.72 ) }
    dend_23 { pt3dadd( -2.52571, 44.9583, 13.6098, 0.96 ) }
    dend_23 { pt3dadd( -2.76344, 45.71, 13.5988, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -2.94814, 46.3156, 13.5943, 0.72 ) }
    dend_23 { pt3dadd( -3.15282, 47.0128, 13.6074, 0.72 ) }
    dend_23 { pt3dadd( -3.42883, 47.8673, 13.6394, 0.72 ) }
    dend_23 { pt3dadd( -3.52847, 48.1515, 13.6718, 0.72 ) }
    dend_23 { pt3dadd( -3.67009, 48.5527, 13.7466, 0.72 ) }
    dend_23 { pt3dadd( -3.98443, 49.4404, 13.9548, 0.6 ) }
    dend_23 { pt3dadd( -4.21305, 50.044, 14.0607, 0.6 ) }
    dend_23 { pt3dadd( -4.60873, 51.0585, 14.2548, 0.48 ) }
    dend_23 { pt3dadd( -5.00665, 52.0824, 14.4478, 0.48 ) }
    dend_23 { pt3dadd( -5.39737, 53.0497, 14.5986, 0.48 ) }
    dend_23 { pt3dadd( -5.88631, 54.2298, 14.7507, 0.6 ) }
    dend_23 { pt3dadd( -6.54242, 55.8411, 14.9494, 0.6 ) }
    dend_23 { pt3dadd( -7.0866, 57.2311, 15.1048, 0.72 ) }
    dend_23 { pt3dadd( -7.50973, 58.3692, 15.2111, 0.6 ) }
    dend_23 { pt3dadd( -7.86276, 59.315, 15.276, 0.12 ) }
    dend_23 { pt3dadd( -8.08471, 59.9016, 15.3236, 0.12 ) }
    dend_23 { pt3dadd( -8.45717, 60.904, 15.421, 0.12 ) }
    dend_23 { pt3dadd( -8.8849, 62.143, 15.5624, 0.24 ) }
    dend_23 { pt3dadd( -9.22578, 63.1756, 15.6254, 0.24 ) }
    dend_23 { pt3dadd( -9.39133, 63.7149, 15.6656, 0.24 ) }
    dend_23 { pt3dadd( -9.50574, 64.1223, 15.7019, 0.6 ) }
    dend_23 { pt3dadd( -9.66587, 64.6543, 15.7326, 0.12 ) }
    dend_23 { pt3dadd( -9.82728, 65.1445, 15.7376, 0.24 ) }
    dend_23 { pt3dadd( -9.99336, 65.6534, 15.7363, 0.24 ) }
    dend_23 { pt3dadd( -10.0397, 65.7945, 15.7349, 0.24 ) }
    dend_23 { pt3dadd( -10.2447, 66.3899, 15.732, 0.36 ) }
    dend_23 { pt3dadd( -10.6146, 67.3977, 15.7592, 0.36 ) }
    dend_23 { pt3dadd( -10.9068, 68.1392, 15.8, 0.36 ) }
    dend_23 { pt3dadd( -11.0603, 68.4667, 15.8322, 0.48 ) }
    dend_23 { pt3dadd( -11.5174, 69.3277, 15.9463, 0.48 ) }
    dend_23 { pt3dadd( -11.9331, 70.0394, 16.0601, 0.48 ) }
    dend_23 { pt3dadd( -12.2667, 70.5678, 16.1693, 0.6 ) }
    dend_23 { pt3dadd( -12.5372, 70.9903, 16.2738, 0.72 ) }
    dend_23 { pt3dadd( -13.0606, 71.87, 16.5048, 0.36 ) }
    dend_23 { pt3dadd( -13.4407, 72.5878, 16.6871, 0.36 ) }
    dend_23 { pt3dadd( -13.4829, 72.681, 16.7081, 0.48 ) }
    dend_23 { pt3dadd( -13.701, 73.2776, 16.8168, 0.36 ) }
    dend_23 { pt3dadd( -13.9221, 74.0827, 16.9183, 0.36 ) }
    dend_23 { pt3dadd( -14.1328, 75.1062, 17.0067, 0.36 ) }
    dend_23 { pt3dadd( -14.2841, 76.0554, 17.0549, 0.36 ) }
    dend_23 { pt3dadd( -14.3833, 76.6878, 17.0783, 0.36 ) }
    dend_23 { pt3dadd( -14.4666, 77.1987, 17.0902, 0.6 ) }
    dend_23 { pt3dadd( -14.6616, 78.3316, 17.099, 0.84 ) }
    dend_23 { pt3dadd( -14.7621, 78.8751, 17.1022, 0.36 ) }
    dend_23 { pt3dadd( -14.9313, 79.7523, 17.1081, 0.36 ) }
    dend_23 { pt3dadd( -15.0938, 80.6287, 17.1144, 0.36 ) }
    dend_23 { pt3dadd( -15.3145, 81.8683, 17.1247, 0.36 ) }
    dend_23 { pt3dadd( -15.4159, 82.4921, 17.1306, 0.48 ) }
    dend_23 { pt3dadd( -15.4599, 82.805, 17.134, 0.48 ) }
    dend_23 { pt3dadd( -15.4941, 83.1365, 17.1379, 0.24 ) }
    dend_23 { pt3dadd( -15.5583, 84.0798, 17.1555, 0.24 ) }
    dend_23 { pt3dadd( -15.5859, 84.7113, 17.1736, 0.6 ) }
    dend_23 { pt3dadd( -15.6128, 85.4469, 17.2004, 0.6 ) }
    dend_23 { pt3dadd( -15.6311, 85.9732, 17.2219, 0.48 ) }
    dend_23 { pt3dadd( -15.6667, 86.9201, 17.2655, 0.48 ) }
    dend_23 { pt3dadd( -15.6873, 87.506, 17.2938, 0.12 ) }
    dend_23 { pt3dadd( -15.7261, 88.6546, 17.3474, 0.12 ) }
    dend_23 { pt3dadd( -15.761, 89.5929, 17.3871, 0.12 ) }
    dend_23 { pt3dadd( -15.7695, 89.8034, 17.3948, 0.72 ) }
    dend_23 { pt3dadd( -15.8009, 90.534, 17.4166, 0.84 ) }
    dend_23 { pt3dadd( -15.8486, 91.4871, 17.4291, 0.36 ) }
    dend_23 { pt3dadd( -15.928, 92.9468, 17.4243, 0.36 ) }
    dend_23 { pt3dadd( -15.9853, 93.8848, 17.416, 0.36 ) }
    dend_23 { pt3dadd( -16.04, 94.6205, 17.4067, 0.36 ) }
    dend_23 { pt3dadd( -16.1074, 95.3539, 17.398, 0.48 ) }
    dend_23 { pt3dadd( -16.2243, 96.4137, 17.3867, 0.96 ) }
    dend_23 { pt3dadd( -16.2636, 96.7273, 17.3844, 0.96 ) }
    dend_23 { pt3dadd( -16.3615, 97.4493, 17.3817, 0.36 ) }
    dend_23 { pt3dadd( -16.4872, 98.3088, 17.3829, 0.36 ) }
    dend_23 { pt3dadd( -16.6932, 99.6626, 17.393, 0.36 ) }
    dend_23 { pt3dadd( -16.8885, 100.907, 17.411, 0.36 ) }
    dend_23 { pt3dadd( -16.9584, 101.322, 17.4209, 0.48 ) }
    dend_23 { pt3dadd( -17.0203, 101.649, 17.4287, 0.36 ) }
    dend_23 { pt3dadd( -17.1554, 102.266, 17.4382, 0.36 ) }
    dend_23 { pt3dadd( -17.3754, 103.184, 17.4458, 0.48 ) }
    dend_23 { pt3dadd( -17.4644, 103.504, 17.4469, 0.36 ) }
    dend_23 { pt3dadd( -17.9137, 105.029, 17.4502, 0.36 ) }
    dend_23 { pt3dadd( -18.3272, 106.388, 17.4517, 0.48 ) }
    dend_23 { pt3dadd( -18.6384, 107.385, 17.4509, 0.96 ) }
    dend_23 { pt3dadd( -18.7734, 107.796, 17.4496, 0.6 ) }
    dend_23 { pt3dadd( -19.1281, 108.809, 17.4429, 0.72 ) }
    dend_23 { pt3dadd( -22.1197, 117.02, 17.5745, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.9984, -18.5598, -10.2241, 1.56 ) }
    dend_19 { pt3dadd( -3.89869, -18.3815, -11.9259, 1.56 ) }
    dend_19 { pt3dadd( -3.4628, -17.602, -19.3653, 1.44 ) }
    dend_19 { pt3dadd( -3.10098, -16.9549, -25.5404, 2.04 ) }
    dend_19 { pt3dadd( -2.97728, -16.7337, -27.6516, 1.32 ) }
    dend_19 { pt3dadd( -2.92643, -16.6427, -28.5196, 1.2 ) }
    dend_19 { pt3dadd( -2.89785, -16.5916, -29.0073, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_11 (entry count 89/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.9984, -18.5598, -10.2241, 0.48 ) }
    dend_14 { pt3dadd( -4.31275, -20.0067, -9.9796, 0.48 ) }
    dend_14 { pt3dadd( -4.44044, -20.5664, -9.85987, 0.48 ) }
    dend_14 { pt3dadd( -4.62807, -21.3786, -9.67809, 0.72 ) }
    dend_14 { pt3dadd( -4.89078, -22.5051, -9.48011, 1.2 ) }
    dend_14 { pt3dadd( -5.18779, -23.8045, -9.25425, 0.6 ) }
    dend_14 { pt3dadd( -5.40099, -24.7771, -9.09292, 0.36 ) }
    dend_14 { pt3dadd( -5.64533, -25.8514, -8.93906, 0.36 ) }
    dend_14 { pt3dadd( -5.8334, -26.7131, -8.82152, 0.48 ) }
    dend_14 { pt3dadd( -6.08787, -28.0315, -8.628, 0.84 ) }
    dend_14 { pt3dadd( -6.2687, -29.2787, -8.45584, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( -6.34511, -30.1261, -8.34729, 0.72 ) }
    dend_14 { pt3dadd( -6.39292, -31.0758, -8.21977, 0.72 ) }
    dend_14 { pt3dadd( -6.41953, -31.7738, -8.13623, 0.72 ) }
    dend_14 { pt3dadd( -6.44205, -32.9822, -7.97776, 0.84 ) }
    dend_14 { pt3dadd( -6.43458, -34.2424, -7.77923, 0.84 ) }
    dend_14 { pt3dadd( -6.41354, -35.1528, -7.63918, 0.48 ) }
    dend_14 { pt3dadd( -6.39008, -35.8735, -7.52705, 0.6 ) }
    dend_14 { pt3dadd( -6.36273, -36.5818, -7.41295, 1.08 ) }
    dend_14 { pt3dadd( -6.34622, -37.1699, -7.31819, 1.32 ) }
    dend_14 { pt3dadd( -6.32835, -38.5734, -7.13073, 0.96 ) }
    dend_14 { pt3dadd( -6.31272, -39.7812, -6.95826, 0.96 ) }
    dend_14 { pt3dadd( -6.28609, -41.2082, -6.76009, 0.72 ) }
    dend_14 { pt3dadd( -6.25333, -42.8587, -6.53602, 0.72 ) }
    dend_14 { pt3dadd( -6.22089, -44.3166, -6.35155, 0.96 ) }
    dend_14 { pt3dadd( -6.18859, -45.7922, -6.1734, 1.2 ) }
    dend_14 { pt3dadd( -6.16977, -46.9877, -6.05248, 0.6 ) }
    dend_14 { pt3dadd( -6.16034, -47.7009, -5.98733, 0.6 ) }
    dend_14 { pt3dadd( -6.14177, -48.8649, -5.87462, 0.6 ) }
    dend_14 { pt3dadd( -6.12283, -49.7106, -5.81617, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.9984, -18.5598, -10.2241, 1.44 ) }
    dend_12 { pt3dadd( -3.64623, -19.2788, -10.5755, 1.44 ) }
    dend_12 { pt3dadd( -3.20517, -20.5709, -11.0916, 0.72 ) }
    dend_12 { pt3dadd( -3.12028, -21.0203, -11.2318, 0.12 ) }
    dend_12 { pt3dadd( -3.10449, -21.3472, -11.3069, 0.24 ) }
    dend_12 { pt3dadd( -3.11582, -21.6091, -11.3504, 0.24 ) }
    dend_12 { pt3dadd( -3.18088, -22.3887, -11.4504, 0.24 ) }
    dend_12 { pt3dadd( -3.28442, -22.97, -11.5135, 0.48 ) }
    dend_12 { pt3dadd( -3.41625, -23.5507, -11.5747, 0.6 ) }
    dend_12 { pt3dadd( -3.58309, -24.2635, -11.6864, 0.36 ) }
    dend_12 { pt3dadd( -3.77498, -25.0549, -11.8371, 0.36 ) }
    dend_12 { pt3dadd( -3.90464, -25.6196, -11.9601, 0.36 ) }
    dend_12 { pt3dadd( -4.04435, -26.3795, -12.162, 0.72 ) }
    dend_12 { pt3dadd( -4.13735, -27.1596, -12.3917, 0.36 ) }
    dend_12 { pt3dadd( -4.16261, -27.7335, -12.578, 0.36 ) }
    dend_12 { pt3dadd( -4.14705, -28.131, -12.7093, 0.6 ) }
    dend_12 { pt3dadd( -4.12439, -28.4651, -12.827, 0.6 ) }
    dend_12 { pt3dadd( -4.08863, -29.1131, -13.0614, 0.36 ) }
    dend_12 { pt3dadd( -4.07532, -29.7597, -13.278, 0.36 ) }
    dend_12 { pt3dadd( -4.08671, -30.35, -13.4888, 0.36 ) }
    dend_12 { pt3dadd( -4.11199, -30.9873, -13.7281, 0.48 ) }
    dend_12 { pt3dadd( -4.18262, -31.8981, -14.0954, 0.6 ) }
    dend_12 { pt3dadd( -4.27475, -32.5235, -14.3507, 0.84 ) }
    dend_12 { pt3dadd( -4.37654, -32.978, -14.5341, 0.84 ) }
    dend_12 { pt3dadd( -4.57347, -33.6578, -14.8024, 0.36 ) }
    dend_12 { pt3dadd( -4.85573, -34.5148, -15.1354, 0.36 ) }
    dend_12 { pt3dadd( -5.07728, -35.1552, -15.3785, 0.48 ) }
    dend_12 { pt3dadd( -5.23766, -35.6863, -15.5549, 0.48 ) }
    dend_12 { pt3dadd( -5.4366, -36.4218, -15.7866, 0.84 ) }
    dend_12 { pt3dadd( -5.66796, -37.3377, -16.0792, 1.32 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 49/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 18.3259, -9.96294, -10.4956, 0.6 ) }
    dend_10 { pt3dadd( 20.0932, -10.9219, -9.40404, 0.6 ) }
    dend_10 { pt3dadd( 20.9493, -11.3415, -9.05578, 0.6 ) }
    dend_10 { pt3dadd( 21.9917, -11.8476, -8.78556, 0.6 ) }
    dend_10 { pt3dadd( 22.6787, -12.1936, -8.67695, 0.6 ) }
    dend_10 { pt3dadd( 23.8399, -12.7798, -8.46035, 0.48 ) }
    dend_10 { pt3dadd( 24.4842, -13.1159, -8.33115, 0.84 ) }
    dend_10 { pt3dadd( 25.2273, -13.5227, -8.27263, 0.84 ) }
    dend_10 { pt3dadd( 26.0409, -13.9855, -8.21906, 0.36 ) }
    dend_10 { pt3dadd( 27.3781, -14.8754, -8.14293, 0.48 ) }
    dend_10 { pt3dadd( 28.4952, -15.7444, -8.0203, 0.96 ) }
    dend_10 { pt3dadd( 28.8124, -16.0442, -7.95945, 1.08 ) }
    dend_10 { pt3dadd( 29.4489, -16.7832, -7.83846, 0.48 ) }
    dend_10 { pt3dadd( 29.6873, -17.1091, -7.78265, 0.48 ) }
    dend_10 { pt3dadd( 30.1714, -17.8631, -7.64744, 0.72 ) }
    dend_10 { pt3dadd( 30.6129, -18.6603, -7.52305, 1.2 ) }
    dend_10 { pt3dadd( 31.2085, -19.8339, -7.37114, 1.32 ) }
    dend_10 { pt3dadd( 31.6528, -20.7091, -7.20858, 0.6 ) }
    dend_10 { pt3dadd( 32.1612, -21.7027, -6.95355, 0.96 ) }
    dend_10 { pt3dadd( 32.5373, -22.4179, -6.74456, 0.96 ) }
    dend_10 { pt3dadd( 32.9483, -23.179, -6.50683, 0.6 ) }
    dend_10 { pt3dadd( 33.3447, -23.9134, -6.26426, 0.6 ) }
    dend_10 { pt3dadd( 33.8796, -24.967, -5.90982, 0.72 ) }
    dend_10 { pt3dadd( 34.1913, -25.6419, -5.69162, 0.84 ) }
    dend_10 { pt3dadd( 34.6294, -26.677, -5.37892, 1.08 ) }
    dend_10 { pt3dadd( 35.0008, -27.641, -5.09339, 1.08 ) }
    dend_10 { pt3dadd( 35.3376, -28.5959, -4.82283, 0.48 ) }
    dend_10 { pt3dadd( 35.7755, -29.9306, -4.49057, 0.48 ) }
    dend_10 { pt3dadd( 36.0213, -30.7682, -4.31603, 0.48 ) }
    dend_10 { pt3dadd( 36.3356, -31.9412, -4.0611, 0.96 ) }
    dend_10 { pt3dadd( 36.6001, -33.0321, -3.79384, 0.96 ) }
    dend_10 { pt3dadd( 36.7978, -33.859, -3.58883, 0.6 ) }
    dend_10 { pt3dadd( 36.9959, -34.6721, -3.39546, 0.48 ) }
    dend_10 { pt3dadd( 37.1655, -35.3622, -3.23373, 0.6 ) }
    dend_10 { pt3dadd( 37.4605, -36.5142, -2.94936, 0.84 ) }
    dend_10 { pt3dadd( 37.7572, -37.6091, -2.68014, 0.6 ) }
    dend_10 { pt3dadd( 38.033, -38.5556, -2.44096, 0.48 ) }
    dend_10 { pt3dadd( 38.2373, -39.237, -2.27398, 0.48 ) }
    dend_10 { pt3dadd( 38.5317, -40.1748, -2.05428, 0.6 ) }
    dend_10 { pt3dadd( 38.8543, -41.0974, -1.86292, 0.96 ) }
    dend_10 { pt3dadd( 39.2696, -42.1968, -1.69199, 1.08 ) }
    dend_10 { pt3dadd( 39.6436, -43.1454, -1.56137, 0.84 ) }
    dend_10 { pt3dadd( 39.9623, -43.9703, -1.45082, 0.6 ) }
    dend_10 { pt3dadd( 40.2252, -44.6437, -1.37489, 0.48 ) }
    dend_10 { pt3dadd( 40.6264, -45.6599, -1.29366, 0.6 ) }
    dend_10 { pt3dadd( 41.028, -46.7136, -1.23949, 0.84 ) }
    dend_10 { pt3dadd( 41.3892, -47.6745, -1.19367, 0.96 ) }
    dend_10 { pt3dadd( 41.7352, -48.6172, -1.14399, 1.08 ) }
    dend_10 { pt3dadd( 42.0135, -49.4167, -1.09215, 0.72 ) }
    dend_10 { pt3dadd( 42.2567, -50.1946, -1.03196, 0.48 ) }
    dend_10 { pt3dadd( 42.502, -51.0421, -0.95165, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_10 { pt3dadd( 42.6558, -51.5876, -0.886621, 0.48 ) }
    dend_10 { pt3dadd( 42.8833, -52.4375, -0.779551, 0.84 ) }
    dend_10 { pt3dadd( 42.9838, -52.8467, -0.723375, 0.96 ) }
    dend_10 { pt3dadd( 43.1654, -53.6927, -0.594074, 0.96 ) }
    dend_10 { pt3dadd( 43.3118, -54.3979, -0.465064, 0.6 ) }
    dend_10 { pt3dadd( 43.4058, -54.8415, -0.381208, 0.48 ) }
    dend_10 { pt3dadd( 43.6098, -55.8146, -0.211587, 0.48 ) }
    dend_10 { pt3dadd( 43.7623, -56.5115, -0.061605, 0.6 ) }
    dend_10 { pt3dadd( 43.9857, -57.4764, 0.176782, 0.84 ) }
    dend_10 { pt3dadd( 44.2164, -58.4789, 0.450885, 0.72 ) }
    dend_10 { pt3dadd( 44.4086, -59.302, 0.69027, 0.48 ) }
    dend_10 { pt3dadd( 44.6778, -60.428, 1.02803, 0.6 ) }
    dend_10 { pt3dadd( 44.9528, -61.4946, 1.34995, 0.48 ) }
    dend_10 { pt3dadd( 45.187, -62.3139, 1.59153, 0.72 ) }
    dend_10 { pt3dadd( 45.4405, -63.1189, 1.81681, 1.08 ) }
    dend_10 { pt3dadd( 45.6862, -63.8402, 2.00014, 0.6 ) }
    dend_10 { pt3dadd( 45.9918, -64.6684, 2.19353, 0.6 ) }
    dend_10 { pt3dadd( 46.3751, -65.6161, 2.4177, 0.6 ) }
    dend_10 { pt3dadd( 46.645, -66.2766, 2.55581, 0.6 ) }
    dend_10 { pt3dadd( 46.9419, -66.9819, 2.71927, 0.84 ) }
    dend_10 { pt3dadd( 47.2156, -67.6374, 2.88314, 0.84 ) }
    dend_10 { pt3dadd( 47.5275, -68.4739, 3.10474, 0.84 ) }
    dend_10 { pt3dadd( 47.8342, -69.4293, 3.33266, 0.48 ) }
    dend_10 { pt3dadd( 47.9832, -69.9803, 3.45065, 0.84 ) }
    dend_10 { pt3dadd( 48.1296, -70.67, 3.5806, 1.2 ) }
    dend_10 { pt3dadd( 48.2724, -71.5227, 3.71653, 1.44 ) }
    dend_10 { pt3dadd( 48.3933, -72.3863, 3.78932, 0.84 ) }
    dend_10 { pt3dadd( 48.4929, -73.3767, 3.76231, 0.48 ) }
    dend_10 { pt3dadd( 48.5133, -73.6991, 3.72771, 0.72 ) }
    dend_10 { pt3dadd( 48.5415, -74.2773, 3.63387, 0.84 ) }
    dend_10 { pt3dadd( 48.5683, -74.8456, 3.52316, 0.84 ) }
    dend_10 { pt3dadd( 48.6141, -75.8203, 3.30138, 0.6 ) }
    dend_10 { pt3dadd( 48.6786, -77.0242, 3.04062, 0.48 ) }
    dend_10 { pt3dadd( 48.7308, -78.04, 2.81248, 0.48 ) }
    dend_10 { pt3dadd( 48.7685, -78.6987, 2.66279, 0.6 ) }
    dend_10 { pt3dadd( 48.8209, -79.406, 2.50547, 0.72 ) }
    dend_10 { pt3dadd( 48.906, -80.2708, 2.33928, 0.72 ) }
    dend_10 { pt3dadd( 49.0531, -81.3945, 2.15312, 0.84 ) }
    dend_10 { pt3dadd( 49.2969, -82.7144, 1.95693, 0.84 ) }
    dend_10 { pt3dadd( 49.4847, -83.5595, 1.85814, 0.84 ) }
    dend_10 { pt3dadd( 49.6287, -84.1459, 1.81779, 0.6 ) }
    dend_10 { pt3dadd( 49.8997, -85.1603, 1.78386, 0.48 ) }
    dend_10 { pt3dadd( 50.1736, -86.1029, 1.79204, 0.48 ) }
    dend_10 { pt3dadd( 50.487, -87.1138, 1.83811, 0.48 ) }
    dend_10 { pt3dadd( 50.7774, -88.0302, 1.92849, 0.48 ) }
    dend_10 { pt3dadd( 50.9528, -88.6011, 1.99039, 0.48 ) }
    dend_10 { pt3dadd( 51.1208, -89.1696, 2.08654, 0.6 ) }
    dend_10 { pt3dadd( 51.4455, -90.3074, 2.34513, 0.6 ) }
    dend_10 { pt3dadd( 51.6391, -90.9896, 2.54071, 0.84 ) }
    dend_10 { pt3dadd( 51.7447, -91.3944, 2.6668, 1.08 ) }
    dend_10 { pt3dadd( 51.9286, -92.0945, 2.8345, 1.08 ) }
    dend_10 { pt3dadd( 52.2393, -93.2293, 2.99556, 0.6 ) }
    dend_10 { pt3dadd( 52.3795, -93.6586, 2.92048, 0.6 ) }
    dend_10 { pt3dadd( 52.5331, -94.002, 2.67453, 0.72 ) }
    dend_10 { pt3dadd( 52.7037, -94.3137, 2.31219, 0.84 ) }
    dend_10 { pt3dadd( 53.2729, -95.1726, 1.11687, 0.84 ) }
    dend_10 { pt3dadd( 53.7689, -95.7555, 0.117883, 1.08 ) }
    dend_10 { pt3dadd( 54.435, -96.3577, -1.13154, 0.72 ) }
    dend_10 { pt3dadd( 54.6814, -96.5263, -1.53556, 0.72 ) }
    dend_10 { pt3dadd( 55.2809, -96.859, -2.36571, 0.6 ) }
    dend_10 { pt3dadd( 55.6792, -97.0555, -2.80299, 0.6 ) }
    dend_10 { pt3dadd( 56.2759, -97.3615, -3.28285, 0.6 ) }
    dend_10 { pt3dadd( 56.7455, -97.6545, -3.5679, 0.6 ) }
    dend_10 { pt3dadd( 57.4193, -98.163, -3.8876, 0.6 ) }
    dend_10 { pt3dadd( 57.8827, -98.6418, -4.1321, 1.08 ) }
    dend_10 { pt3dadd( 58.3113, -99.2461, -4.3577, 1.08 ) }
    dend_10 { pt3dadd( 58.7255, -99.9753, -4.63537, 0.6 ) }
    dend_10 { pt3dadd( 59.0256, -100.566, -4.90609, 0.6 ) }
    dend_10 { pt3dadd( 59.223, -100.921, -5.11858, 0.6 ) }
    dend_10 { pt3dadd( 59.7352, -101.664, -5.76352, 0.6 ) }
    dend_10 { pt3dadd( 59.9923, -101.957, -6.08817, 0.6 ) }
    dend_10 { pt3dadd( 60.5613, -102.474, -6.75073, 0.84 ) }
    dend_10 { pt3dadd( 61.3208, -103.029, -7.52614, 0.84 ) }
    dend_10 { pt3dadd( 62.1556, -103.553, -8.29709, 0.96 ) }
    dend_10 { pt3dadd( 63.1146, -104.091, -9.10682, 0.84 ) }
    dend_10 { pt3dadd( 63.6322, -104.366, -9.48841, 0.6 ) }
    dend_10 { pt3dadd( 64.1633, -104.667, -9.83205, 0.72 ) }
    dend_10 { pt3dadd( 64.6152, -104.952, -10.0698, 0.72 ) }
    dend_10 { pt3dadd( 65.2776, -105.43, -10.3257, 0.48 ) }
    dend_10 { pt3dadd( 65.7839, -105.852, -10.482, 0.48 ) }
    dend_10 { pt3dadd( 66.3641, -106.394, -10.6171, 0.48 ) }
    dend_10 { pt3dadd( 67.0105, -107.067, -10.7726, 0.48 ) }
    dend_10 { pt3dadd( 67.7083, -107.885, -10.9304, 0.36 ) }
    dend_10 { pt3dadd( 68.3412, -108.69, -11.0471, 0.36 ) }
    dend_10 { pt3dadd( 68.761, -109.24, -11.1041, 0.6 ) }
    dend_10 { pt3dadd( 69.4285, -110.128, -11.1752, 0.6 ) }
    dend_10 { pt3dadd( 69.8137, -110.642, -11.21, 0.48 ) }
    dend_10 { pt3dadd( 70.4747, -111.504, -11.2424, 0.48 ) }
    dend_10 { pt3dadd( 71.1727, -112.383, -11.24, 0.48 ) }
    dend_10 { pt3dadd( 71.9641, -113.335, -11.2219, 0.48 ) }
    dend_10 { pt3dadd( 72.4343, -113.876, -11.1988, 0.6 ) }
    dend_10 { pt3dadd( 72.9388, -114.445, -11.1643, 0.6 ) }
    dend_10 { pt3dadd( 73.5614, -115.141, -11.1036, 0.84 ) }
    dend_10 { pt3dadd( 74.0241, -115.687, -11.0476, 0.48 ) }
    dend_10 { pt3dadd( 74.5134, -116.322, -10.9733, 0.48 ) }
    dend_10 { pt3dadd( 74.8041, -116.75, -10.9168, 0.48 ) }
    dend_10 { pt3dadd( 75.2209, -117.391, -10.8664, 0.72 ) }
    dend_10 { pt3dadd( 75.7176, -118.156, -10.8394, 0.84 ) }
    dend_10 { pt3dadd( 76.4324, -119.313, -10.8721, 0.48 ) }
    dend_10 { pt3dadd( 76.8352, -119.976, -10.9177, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( 77.6048, -121.248, -11.0854, 0.48 ) }
    dend_10 { pt3dadd( 78.2115, -122.221, -11.2632, 0.6 ) }
    dend_10 { pt3dadd( 78.5544, -122.743, -11.3873, 0.6 ) }
    dend_10 { pt3dadd( 79.1118, -123.522, -11.6339, 0.48 ) }
    dend_10 { pt3dadd( 79.6449, -124.206, -11.8928, 0.48 ) }
    dend_10 { pt3dadd( 80.2077, -124.895, -12.1649, 0.84 ) }
    dend_10 { pt3dadd( 80.6535, -125.418, -12.3561, 0.84 ) }
    dend_10 { pt3dadd( 80.9066, -125.724, -12.4328, 0.84 ) }
    dend_10 { pt3dadd( 81.5061, -126.484, -12.5919, 0.6 ) }
    dend_10 { pt3dadd( 81.9385, -127.05, -12.6735, 0.48 ) }
    dend_10 { pt3dadd( 82.299, -127.567, -12.725, 0.48 ) }
    dend_10 { pt3dadd( 82.8067, -128.334, -12.791, 0.48 ) }
    dend_10 { pt3dadd( 83.2117, -128.986, -12.8514, 0.48 ) }
    dend_10 { pt3dadd( 83.6802, -129.742, -12.9108, 0.36 ) }
    dend_10 { pt3dadd( 84.1468, -130.471, -12.9358, 0.36 ) }
    dend_10 { pt3dadd( 84.4867, -130.958, -12.9258, 0.6 ) }
    dend_10 { pt3dadd( 85.0748, -131.756, -12.8733, 0.6 ) }
    dend_10 { pt3dadd( 85.57, -132.418, -12.7992, 0.6 ) }
    dend_10 { pt3dadd( 86.503, -133.617, -12.5621, 0.6 ) }
    dend_10 { pt3dadd( 87.4115, -134.728, -12.2566, 0.6 ) }
    dend_10 { pt3dadd( 88.2238, -135.703, -11.9474, 0.36 ) }
    dend_10 { pt3dadd( 88.5277, -136.075, -11.8159, 0.36 ) }
    dend_10 { pt3dadd( 89.2012, -136.978, -11.4765, 0.36 ) }
    dend_10 { pt3dadd( 89.8829, -138.0, -11.1086, 0.84 ) }
    dend_10 { pt3dadd( 90.3843, -138.847, -10.8306, 0.6 ) }
    dend_10 { pt3dadd( 90.9254, -139.835, -10.5641, 0.6 ) }
    dend_10 { pt3dadd( 91.3484, -140.633, -10.369, 0.36 ) }
    dend_10 { pt3dadd( 91.9536, -141.747, -10.1057, 0.36 ) }
    dend_10 { pt3dadd( 92.3592, -142.484, -9.94269, 0.36 ) }
    dend_10 { pt3dadd( 92.8539, -143.389, -9.775, 0.48 ) }
    dend_10 { pt3dadd( 93.713, -144.95, -9.49046, 0.48 ) }
    dend_10 { pt3dadd( 94.1519, -145.754, -9.34594, 0.48 ) }
    dend_10 { pt3dadd( 94.5784, -146.57, -9.22864, 0.72 ) }
    dend_10 { pt3dadd( 94.849, -147.144, -9.16043, 0.72 ) }
    dend_10 { pt3dadd( 95.1353, -147.983, -9.10096, 0.48 ) }
    dend_10 { pt3dadd( 95.3048, -149.06, -9.20849, 0.48 ) }
    dend_10 { pt3dadd( 95.3289, -149.76, -9.38786, 0.48 ) }
    dend_10 { pt3dadd( 95.3139, -150.806, -9.7575, 0.6 ) }
    dend_10 { pt3dadd( 95.2758, -151.645, -10.1392, 0.6 ) }
    dend_10 { pt3dadd( 95.2279, -152.647, -10.6747, 0.48 ) }
    dend_10 { pt3dadd( 95.1544, -154.654, -11.8969, 0.48 ) }
    dend_10 { pt3dadd( 95.1515, -155.328, -12.3394, 0.48 ) }
    dend_10 { pt3dadd( 95.1717, -155.583, -12.5109, 0.48 ) }
    dend_10 { pt3dadd( 95.3683, -156.741, -13.2592, 0.84 ) }
    dend_10 { pt3dadd( 95.5794, -157.601, -13.7783, 0.96 ) }
    dend_10 { pt3dadd( 95.8979, -158.678, -14.3615, 0.96 ) }
    dend_10 { pt3dadd( 96.0022, -159.052, -14.5198, 0.96 ) }
    dend_10 { pt3dadd( 96.2439, -160.124, -14.9555, 0.48 ) }
    dend_10 { pt3dadd( 96.3877, -160.894, -15.2401, 0.84 ) }
    dend_10 { pt3dadd( 96.543, -161.755, -15.5018, 0.48 ) }
    dend_10 { pt3dadd( 96.6888, -162.575, -15.7223, 0.48 ) }
    dend_10 { pt3dadd( 96.8205, -163.312, -15.8959, 0.6 ) }
    dend_10 { pt3dadd( 97.0711, -164.691, -16.228, 0.6 ) }
    dend_10 { pt3dadd( 97.2733, -165.793, -16.4757, 0.36 ) }
    dend_10 { pt3dadd( 97.4367, -166.59, -16.6575, 0.36 ) }
    dend_10 { pt3dadd( 97.548, -167.024, -16.7509, 0.6 ) }
    dend_10 { pt3dadd( 97.6732, -167.407, -16.8267, 0.6 ) }
    dend_10 { pt3dadd( 98.0185, -168.209, -16.9903, 0.24 ) }
    dend_10 { pt3dadd( 98.2549, -168.663, -17.0619, 0.24 ) }
    dend_10 { pt3dadd( 98.4113, -168.942, -17.1033, 0.24 ) }
    dend_10 { pt3dadd( 98.6286, -169.339, -17.1599, 0.48 ) }
    dend_10 { pt3dadd( 99.0208, -170.032, -17.2407, 0.36 ) }
    dend_10 { pt3dadd( 99.3105, -170.516, -17.2749, 0.36 ) }
    dend_10 { pt3dadd( 99.6156, -171.006, -17.2796, 0.36 ) }
    dend_10 { pt3dadd( 99.9924, -171.621, -17.2975, 0.6 ) }
    dend_10 { pt3dadd( 100.361, -172.231, -17.3129, 0.6 ) }
    dend_10 { pt3dadd( 100.686, -172.749, -17.3214, 0.6 ) }
    dend_10 { pt3dadd( 101.188, -173.513, -17.3168, 0.84 ) }
    dend_10 { pt3dadd( 101.69, -174.279, -17.3127, 0.84 ) }
    dend_10 { pt3dadd( 102.189, -175.078, -17.3008, 0.24 ) }
    dend_10 { pt3dadd( 102.485, -175.595, -17.2859, 0.24 ) }
    dend_10 { pt3dadd( 102.691, -175.947, -17.2713, 0.48 ) }
    dend_10 { pt3dadd( 103.13, -176.653, -17.2338, 0.48 ) }
    dend_10 { pt3dadd( 103.658, -177.4, -17.1841, 0.48 ) }
    dend_10 { pt3dadd( 104.224, -178.093, -17.1241, 0.24 ) }
    dend_10 { pt3dadd( 104.527, -178.428, -17.085, 0.24 ) }
    dend_10 { pt3dadd( 105.365, -179.317, -16.9869, 0.24 ) }
    dend_10 { pt3dadd( 105.676, -179.645, -16.9522, 0.6 ) }
    dend_10 { pt3dadd( 106.259, -180.239, -16.8941, 0.6 ) }
    dend_10 { pt3dadd( 106.757, -180.75, -16.8472, 0.6 ) }
    dend_10 { pt3dadd( 107.06, -181.072, -16.8277, 0.6 ) }
    dend_10 { pt3dadd( 107.706, -181.782, -16.8003, 0.36 ) }
    dend_10 { pt3dadd( 108.135, -182.258, -16.7917, 0.36 ) }
    dend_10 { pt3dadd( 108.411, -182.542, -16.7924, 0.72 ) }
    dend_10 { pt3dadd( 109.211, -183.278, -16.8107, 0.72 ) }
    dend_10 { pt3dadd( 109.91, -183.848, -16.8362, 0.72 ) }
    dend_10 { pt3dadd( 110.417, -184.23, -16.8561, 0.48 ) }
    dend_10 { pt3dadd( 111.159, -184.751, -16.8861, 0.48 ) }
    dend_10 { pt3dadd( 112.104, -185.391, -16.919, 0.48 ) }
    dend_10 { pt3dadd( 112.786, -185.846, -16.9273, 0.36 ) }
    dend_10 { pt3dadd( 113.457, -186.284, -16.9174, 0.36 ) }
    dend_10 { pt3dadd( 114.126, -186.751, -16.8778, 0.36 ) }
    dend_10 { pt3dadd( 114.444, -186.995, -16.8522, 0.6 ) }
    dend_10 { pt3dadd( 114.751, -187.254, -16.8204, 0.6 ) }
    dend_10 { pt3dadd( 115.357, -187.812, -16.7449, 0.72 ) }
    dend_10 { pt3dadd( 115.793, -188.217, -16.6891, 0.48 ) }
    dend_10 { pt3dadd( 116.125, -188.52, -16.6489, 0.48 ) }
    dend_10 { pt3dadd( 116.514, -188.854, -16.6191, 0.6 ) }
    dend_10 { pt3dadd( 117.132, -189.371, -16.5925, 0.6 ) }
    dend_10 { pt3dadd( 117.466, -189.655, -16.5858, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 117.941, -190.081, -16.5838, 0.48 ) }
    dend_10 { pt3dadd( 118.234, -190.358, -16.5875, 0.48 ) }
    dend_10 { pt3dadd( 119.003, -191.105, -16.6047, 0.36 ) }
    dend_10 { pt3dadd( 119.424, -191.53, -16.6154, 0.36 ) }
    dend_10 { pt3dadd( 119.954, -192.09, -16.6244, 0.6 ) }
    dend_10 { pt3dadd( 120.598, -192.788, -16.6279, 0.6 ) }
    dend_10 { pt3dadd( 121.09, -193.367, -16.6177, 0.36 ) }
    dend_10 { pt3dadd( 121.466, -193.847, -16.5993, 0.36 ) }
    dend_10 { pt3dadd( 121.818, -194.336, -16.5891, 0.36 ) }
    dend_10 { pt3dadd( 122.456, -195.308, -16.5837, 0.36 ) }
    dend_10 { pt3dadd( 122.767, -195.826, -16.5832, 0.72 ) }
    dend_10 { pt3dadd( 123.18, -196.602, -16.5999, 0.72 ) }
    dend_10 { pt3dadd( 123.569, -197.423, -16.6221, 0.84 ) }
    dend_10 { pt3dadd( 124.173, -198.82, -16.6665, 0.48 ) }
    dend_10 { pt3dadd( 124.608, -199.903, -16.7265, 0.36 ) }
    dend_10 { pt3dadd( 124.859, -200.569, -16.7731, 0.36 ) }
    dend_10 { pt3dadd( 125.232, -201.569, -16.8456, 0.72 ) }
    dend_10 { pt3dadd( 125.561, -202.411, -16.8997, 0.72 ) }
    dend_10 { pt3dadd( 125.979, -203.421, -16.9392, 0.72 ) }
    dend_10 { pt3dadd( 126.384, -204.313, -16.9421, 0.6 ) }
    dend_10 { pt3dadd( 126.731, -204.964, -16.9368, 0.12 ) }
    dend_10 { pt3dadd( 127.159, -205.677, -16.912, 0.12 ) }
    dend_10 { pt3dadd( 127.43, -206.083, -16.8794, 0.48 ) }
    dend_10 { pt3dadd( 127.861, -206.651, -16.8262, 0.6 ) }
    dend_10 { pt3dadd( 128.318, -207.208, -16.7621, 0.48 ) }
    dend_10 { pt3dadd( 128.91, -207.892, -16.6662, 0.36 ) }
    dend_10 { pt3dadd( 129.205, -208.235, -16.6219, 0.36 ) }
    dend_10 { pt3dadd( 129.867, -209.021, -16.5304, 0.36 ) }
    dend_10 { pt3dadd( 130.546, -209.784, -16.3592, 0.36 ) }
    dend_10 { pt3dadd( 131.076, -210.309, -16.1671, 0.36 ) }
    dend_10 { pt3dadd( 131.67, -210.81, -15.902, 0.36 ) }
    dend_10 { pt3dadd( 132.094, -211.121, -15.6849, 0.72 ) }
    dend_10 { pt3dadd( 132.69, -211.523, -15.3495, 1.08 ) }
    dend_10 { pt3dadd( 134.243, -212.507, -14.4024, 0.96 ) }
    dend_10 { pt3dadd( 134.848, -212.889, -14.0459, 0.36 ) }
    dend_10 { pt3dadd( 135.193, -213.109, -13.8636, 0.36 ) }
    dend_10 { pt3dadd( 135.784, -213.524, -13.6143, 0.36 ) }
    dend_10 { pt3dadd( 136.326, -213.968, -13.4724, 0.36 ) }
    dend_10 { pt3dadd( 136.835, -214.468, -13.4464, 0.36 ) }
    dend_10 { pt3dadd( 137.427, -215.073, -13.5228, 0.48 ) }
    dend_10 { pt3dadd( 137.835, -215.476, -13.5804, 0.48 ) }
    dend_10 { pt3dadd( 138.295, -215.874, -13.6421, 0.36 ) }
    dend_10 { pt3dadd( 138.782, -216.225, -13.6753, 0.36 ) }
    dend_10 { pt3dadd( 139.587, -216.727, -13.6834, 0.36 ) }
    dend_10 { pt3dadd( 141.025, -217.533, -13.6114, 0.36 ) }
    dend_10 { pt3dadd( 141.657, -217.852, -13.5443, 0.36 ) }
    dend_10 { pt3dadd( 142.286, -218.158, -13.4627, 0.72 ) }
    dend_10 { pt3dadd( 143.248, -218.639, -13.3086, 0.6 ) }
    dend_10 { pt3dadd( 143.585, -218.828, -13.2466, 0.48 ) }
    dend_10 { pt3dadd( 144.174, -219.203, -13.1255, 0.48 ) }
    dend_10 { pt3dadd( 145.105, -219.84, -12.9404, 0.48 ) }
    dend_10 { pt3dadd( 145.77, -220.296, -12.8025, 0.6 ) }
    dend_10 { pt3dadd( 146.184, -220.586, -12.7243, 0.96 ) }
    dend_10 { pt3dadd( 146.747, -220.99, -12.639, 1.08 ) }
    dend_10 { pt3dadd( 147.221, -221.323, -12.5579, 0.84 ) }
    dend_10 { pt3dadd( 148.054, -221.913, -12.3968, 0.48 ) }
    dend_10 { pt3dadd( 148.713, -222.364, -12.2622, 0.24 ) }
    dend_10 { pt3dadd( 149.566, -222.88, -12.1056, 0.36 ) }
    dend_10 { pt3dadd( 150.06, -223.155, -12.0268, 0.36 ) }
    dend_10 { pt3dadd( 150.448, -223.368, -11.9719, 0.6 ) }
    dend_10 { pt3dadd( 150.977, -223.709, -11.8987, 0.6 ) }
    dend_10 { pt3dadd( 151.315, -223.966, -11.86, 0.36 ) }
    dend_10 { pt3dadd( 151.873, -224.429, -11.828, 0.24 ) }
    dend_10 { pt3dadd( 152.26, -224.767, -11.8028, 0.24 ) }
    dend_10 { pt3dadd( 152.565, -225.05, -11.794, 0.36 ) }
    dend_10 { pt3dadd( 152.959, -225.465, -11.7877, 0.36 ) }
    dend_10 { pt3dadd( 153.358, -225.925, -11.7856, 0.48 ) }
    dend_10 { pt3dadd( 153.842, -226.568, -11.7791, 0.48 ) }
    dend_10 { pt3dadd( 154.347, -227.34, -11.8093, 0.72 ) }
    dend_10 { pt3dadd( 154.697, -227.909, -11.8522, 0.72 ) }
    dend_10 { pt3dadd( 154.917, -228.279, -11.8868, 0.72 ) }
    dend_10 { pt3dadd( 155.27, -228.907, -11.9461, 0.6 ) }
    dend_10 { pt3dadd( 155.525, -229.408, -12.0033, 0.6 ) }
    dend_10 { pt3dadd( 155.943, -230.282, -12.1086, 0.48 ) }
    dend_10 { pt3dadd( 156.304, -231.039, -12.196, 0.36 ) }
    dend_10 { pt3dadd( 156.707, -231.844, -12.2735, 0.36 ) }
    dend_10 { pt3dadd( 157.06, -232.533, -12.3488, 0.36 ) }
    dend_10 { pt3dadd( 157.421, -233.265, -12.4254, 0.48 ) }
    dend_10 { pt3dadd( 157.641, -233.737, -12.4608, 0.48 ) }
    dend_10 { pt3dadd( 157.831, -234.225, -12.4673, 0.6 ) }
    dend_10 { pt3dadd( 157.994, -234.72, -12.466, 0.6 ) }
    dend_10 { pt3dadd( 158.146, -235.251, -12.4762, 0.6 ) }
    dend_10 { pt3dadd( 158.296, -235.831, -12.4869, 0.6 ) }
    dend_10 { pt3dadd( 158.49, -236.685, -12.4801, 0.48 ) }
    dend_10 { pt3dadd( 158.656, -237.555, -12.4918, 0.48 ) }
    dend_10 { pt3dadd( 158.777, -238.271, -12.5059, 0.6 ) }
    dend_10 { pt3dadd( 158.935, -239.206, -12.5419, 0.72 ) }
    dend_10 { pt3dadd( 159.071, -239.921, -12.593, 0.72 ) }
    dend_10 { pt3dadd( 159.345, -241.174, -12.7665, 0.72 ) }
    dend_10 { pt3dadd( 159.57, -242.03, -12.9117, 1.08 ) }
    dend_10 { pt3dadd( 159.771, -242.715, -13.0322, 1.08 ) }
    dend_10 { pt3dadd( 160.032, -243.547, -13.1697, 0.72 ) }
    dend_10 { pt3dadd( 160.428, -244.676, -13.3191, 0.48 ) }
    dend_10 { pt3dadd( 160.968, -246.068, -13.5088, 0.96 ) }
    dend_10 { pt3dadd( 161.576, -247.54, -13.7192, 0.36 ) }
    dend_10 { pt3dadd( 161.816, -248.132, -13.7891, 0.36 ) }
    dend_10 { pt3dadd( 162.04, -248.738, -13.841, 0.72 ) }
    dend_10 { pt3dadd( 162.512, -250.167, -13.891, 0.84 ) }
    dend_10 { pt3dadd( 162.77, -251.065, -13.8799, 0.84 ) }
    dend_10 { pt3dadd( 162.943, -251.776, -13.8465, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_10 { pt3dadd( 163.142, -252.817, -13.7912, 0.48 ) }
    dend_10 { pt3dadd( 163.373, -254.243, -13.739, 0.48 ) }
    dend_10 { pt3dadd( 163.507, -255.283, -13.7056, 0.48 ) }
    dend_10 { pt3dadd( 163.585, -256.007, -13.6798, 0.48 ) }
    dend_10 { pt3dadd( 163.637, -256.593, -13.6674, 0.72 ) }
    dend_10 { pt3dadd( 163.702, -257.333, -13.6726, 0.72 ) }
    dend_10 { pt3dadd( 163.799, -258.495, -13.7405, 0.36 ) }
    dend_10 { pt3dadd( 163.819, -258.902, -13.7936, 0.36 ) }
    dend_10 { pt3dadd( 163.835, -259.492, -13.8903, 0.36 ) }
    dend_10 { pt3dadd( 163.869, -260.426, -14.0463, 0.24 ) }
    dend_10 { pt3dadd( 163.913, -261.717, -14.2369, 0.24 ) }
    dend_10 { pt3dadd( 163.929, -262.028, -14.2738, 0.72 ) }
    dend_10 { pt3dadd( 163.994, -262.878, -14.3197, 0.36 ) }
    dend_10 { pt3dadd( 164.092, -263.746, -14.3377, 0.36 ) }
    dend_10 { pt3dadd( 164.179, -264.346, -14.3392, 0.36 ) }
    dend_10 { pt3dadd( 164.325, -265.121, -14.3107, 0.48 ) }
    dend_10 { pt3dadd( 164.393, -265.428, -14.2999, 0.12 ) }
    dend_10 { pt3dadd( 164.676, -266.411, -14.1745, 0.12 ) }
    dend_10 { pt3dadd( 164.877, -266.95, -14.0559, 0.12 ) }
    dend_10 { pt3dadd( 165.108, -267.475, -13.9165, 0.84 ) }
    dend_10 { pt3dadd( 165.429, -268.101, -13.7398, 0.96 ) }
    dend_10 { pt3dadd( 165.803, -268.748, -13.5627, 0.96 ) }
    dend_10 { pt3dadd( 166.604, -270.032, -13.1215, 0.24 ) }
    dend_10 { pt3dadd( 166.932, -270.539, -12.9246, 0.48 ) }
    dend_10 { pt3dadd( 167.729, -271.708, -12.4423, 0.48 ) }
    dend_10 { pt3dadd( 168.647, -272.99, -11.8926, 0.48 ) }
    dend_10 { pt3dadd( 169.249, -273.807, -11.5572, 0.48 ) }
    dend_10 { pt3dadd( 170.238, -275.147, -11.0582, 0.48 ) }
    dend_10 { pt3dadd( 170.737, -275.834, -10.8431, 0.48 ) }
    dend_10 { pt3dadd( 171.203, -276.451, -10.5989, 0.84 ) }
    dend_10 { pt3dadd( 171.497, -276.825, -10.411, 0.84 ) }
    dend_10 { pt3dadd( 171.846, -277.239, -10.1583, 0.12 ) }
    dend_10 { pt3dadd( 172.339, -277.788, -9.7879, 0.12 ) }
    dend_10 { pt3dadd( 172.428, -277.874, -9.71788, 0.36 ) }
    dend_10 { pt3dadd( 173.376, -278.694, -8.75572, 0.12 ) }
    dend_10 { pt3dadd( 173.605, -278.899, -8.46237, 0.12 ) }
    dend_10 { pt3dadd( 174.05, -279.305, -7.84488, 0.12 ) }
    dend_10 { pt3dadd( 174.05, -279.305, -7.84488, 0.36 ) }
    dend_10 { pt3dadd( 174.647, -279.82, -6.82874, 0.12 ) }
    dend_10 { pt3dadd( 174.852, -280.019, -6.49883, 0.12 ) }
    dend_10 { pt3dadd( 175.042, -280.238, -6.18699, 0.72 ) }
    dend_10 { pt3dadd( 175.299, -280.597, -5.72787, 0.84 ) }
    dend_10 { pt3dadd( 176.093, -281.968, -4.20565, 0.6 ) }
    dend_10 { pt3dadd( 176.277, -282.311, -3.86555, 0.12 ) }
    dend_10 { pt3dadd( 176.569, -282.865, -3.40268, 0.12 ) }
    dend_10 { pt3dadd( 176.942, -283.498, -2.8896, 0.12 ) }
    dend_10 { pt3dadd( 177.336, -284.116, -2.43421, 0.12 ) }
    dend_10 { pt3dadd( 177.623, -284.552, -2.17716, 0.12 ) }
    dend_10 { pt3dadd( 177.623, -284.552, -2.17716, 0.6 ) }
    dend_10 { pt3dadd( 178.114, -285.268, -1.86242, 0.6 ) }
    dend_10 { pt3dadd( 178.654, -286.05, -1.5319, 0.48 ) }
    dend_10 { pt3dadd( 179.047, -286.602, -1.3182, 0.48 ) }
    dend_10 { pt3dadd( 179.581, -287.355, -1.0293, 0.48 ) }
    dend_10 { pt3dadd( 180.03, -288.023, -0.796277, 0.24 ) }
    dend_10 { pt3dadd( 180.48, -288.745, -0.575511, 0.24 ) }
    dend_10 { pt3dadd( 180.702, -289.103, -0.430825, 0.6 ) }
    dend_10 { pt3dadd( 181.01, -289.583, -0.20822, 0.72 ) }
    dend_10 { pt3dadd( 181.417, -290.172, 0.0916752, 0.72 ) }
    dend_10 { pt3dadd( 181.733, -290.589, 0.310672, 0.12 ) }
    dend_10 { pt3dadd( 182.116, -291.048, 0.546039, 0.12 ) }
    dend_10 { pt3dadd( 183.549, -292.59, 1.38005, 0.12 ) }
    dend_10 { pt3dadd( 183.974, -293.01, 1.60917, 0.96 ) }
    dend_10 { pt3dadd( 184.374, -293.385, 1.79963, 0.12 ) }
    dend_10 { pt3dadd( 184.97, -293.903, 2.02721, 0.12 ) }
    dend_10 { pt3dadd( 185.209, -294.099, 2.10103, 0.12 ) }
    dend_10 { pt3dadd( 185.532, -294.345, 2.16733, 0.6 ) }
    dend_10 { pt3dadd( 185.89, -294.613, 2.20794, 0.6 ) }
    dend_10 { pt3dadd( 186.458, -294.99, 2.32967, 0.48 ) }
    dend_10 { pt3dadd( 186.88, -295.249, 2.45321, 0.48 ) }
    dend_10 { pt3dadd( 187.531, -295.623, 2.66218, 0.72 ) }
    dend_10 { pt3dadd( 188.089, -295.931, 2.84153, 0.36 ) }
    dend_10 { pt3dadd( 188.691, -296.255, 3.03312, 0.12 ) }
    dend_10 { pt3dadd( 189.385, -296.617, 3.28734, 0.12 ) }
    dend_10 { pt3dadd( 189.645, -296.75, 3.3918, 0.48 ) }
    dend_10 { pt3dadd( 190.068, -296.984, 3.55466, 0.6 ) }
    dend_10 { pt3dadd( 190.688, -297.371, 3.77115, 0.72 ) }
    dend_10 { pt3dadd( 191.003, -297.587, 3.89344, 0.72 ) }
    dend_10 { pt3dadd( 191.856, -298.181, 4.25338, 0.12 ) }
    dend_10 { pt3dadd( 192.062, -298.327, 4.35358, 0.12 ) }
    dend_10 { pt3dadd( 192.683, -298.749, 4.70018, 0.12 ) }
    dend_10 { pt3dadd( 193.002, -298.956, 4.88998, 0.12 ) }
    dend_10 { pt3dadd( 193.678, -299.382, 5.32716, 0.48 ) }
    dend_10 { pt3dadd( 193.998, -299.575, 5.52837, 0.48 ) }
    dend_10 { pt3dadd( 194.345, -299.774, 5.72007, 0.96 ) }
    dend_10 { pt3dadd( 195.182, -300.206, 6.15591, 0.48 ) }
    dend_10 { pt3dadd( 195.605, -300.401, 6.35723, 0.48 ) }
    dend_10 { pt3dadd( 196.225, -300.659, 6.60251, 0.48 ) }
    dend_10 { pt3dadd( 196.664, -300.803, 6.78323, 0.48 ) }
    dend_10 { pt3dadd( 197.076, -300.873, 7.00008, 0.12 ) }
    dend_10 { pt3dadd( 197.198, -300.87, 7.06687, 0.12 ) }
    dend_10 { pt3dadd( 197.583, -300.809, 7.26848, 0.72 ) }
    dend_10 { pt3dadd( 197.967, -300.72, 7.4621, 0.72 ) }
    dend_10 { pt3dadd( 199.403, -300.37, 8.09459, 0.12 ) }
    dend_10 { pt3dadd( 200.142, -300.195, 8.38551, 0.12 ) }
    dend_10 { pt3dadd( 201.051, -300.008, 8.70839, 0.12 ) }
    dend_10 { pt3dadd( 201.342, -299.956, 8.80603, 0.12 ) }
    dend_10 { pt3dadd( 201.813, -299.869, 8.95624, 0.48 ) }
    dend_10 { pt3dadd( 202.586, -299.73, 9.15826, 0.48 ) }
    dend_10 { pt3dadd( 203.44, -299.585, 9.30734, 0.72 ) }
    dend_10 { pt3dadd( 204.031, -299.486, 9.40345, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 205.337, -299.248, 9.65483, 0.36 ) }
    dend_10 { pt3dadd( 206.157, -299.114, 9.81907, 0.12 ) }
    dend_10 { pt3dadd( 206.883, -299.018, 9.97344, 0.24 ) }
    dend_10 { pt3dadd( 207.561, -298.963, 10.1122, 0.24 ) }
    dend_10 { pt3dadd( 208.177, -298.971, 10.199, 0.24 ) }
    dend_10 { pt3dadd( 208.726, -299.018, 10.2347, 0.72 ) }
    dend_10 { pt3dadd( 209.526, -299.157, 10.1945, 0.72 ) }
    dend_10 { pt3dadd( 210.146, -299.304, 10.08, 0.72 ) }
    dend_10 { pt3dadd( 211.001, -299.529, 9.84144, 0.36 ) }
    dend_10 { pt3dadd( 211.804, -299.7, 9.53386, 0.48 ) }
    dend_10 { pt3dadd( 212.316, -299.761, 9.28369, 0.6 ) }
    dend_10 { pt3dadd( 213.024, -299.778, 8.86611, 0.6 ) }
    dend_10 { pt3dadd( 214.059, -299.711, 8.1168, 0.12 ) }
    dend_10 { pt3dadd( 214.385, -299.67, 7.84718, 0.12 ) }
    dend_10 { pt3dadd( 214.947, -299.593, 7.35194, 0.12 ) }
    dend_10 { pt3dadd( 215.426, -299.543, 6.94985, 0.48 ) }
    dend_10 { pt3dadd( 215.577, -299.546, 6.82469, 0.48 ) }
    dend_10 { pt3dadd( 216.263, -299.694, 6.32307, 0.12 ) }
    dend_10 { pt3dadd( 216.496, -299.813, 6.1517, 0.12 ) }
    dend_10 { pt3dadd( 216.942, -300.087, 5.80834, 0.12 ) }
    dend_10 { pt3dadd( 217.225, -300.278, 5.60266, 0.48 ) }
    dend_10 { pt3dadd( 217.626, -300.519, 5.29887, 0.48 ) }
    dend_10 { pt3dadd( 218.039, -300.685, 4.96185, 0.12 ) }
    dend_10 { pt3dadd( 218.686, -300.798, 4.4206, 0.6 ) }
    dend_10 { pt3dadd( 219.255, -300.822, 3.93554, 0.72 ) }
    dend_10 { pt3dadd( 219.594, -300.799, 3.6563, 0.72 ) }
    dend_10 { pt3dadd( 220.262, -300.726, 3.12751, 0.72 ) }
    dend_10 { pt3dadd( 221.114, -300.614, 2.5233, 0.12 ) }
    dend_10 { pt3dadd( 221.447, -300.565, 2.32039, 0.12 ) }
    dend_10 { pt3dadd( 221.97, -300.494, 2.03819, 0.12 ) }
    dend_10 { pt3dadd( 222.356, -300.448, 1.84146, 0.12 ) }
    dend_10 { pt3dadd( 222.868, -300.381, 1.61237, 0.6 ) }
    dend_10 { pt3dadd( 223.777, -300.263, 1.28761, 0.6 ) }
    dend_10 { pt3dadd( 224.485, -300.141, 1.07439, 0.72 ) }
    dend_10 { pt3dadd( 224.958, -300.036, 0.939276, 0.12 ) }
    dend_10 { pt3dadd( 225.495, -299.888, 0.800123, 0.12 ) }
    dend_10 { pt3dadd( 226.036, -299.737, 0.679546, 0.6 ) }
    dend_10 { pt3dadd( 226.583, -299.597, 0.580298, 0.6 ) }
    dend_10 { pt3dadd( 227.142, -299.503, 0.496976, 0.84 ) }
    dend_10 { pt3dadd( 228.26, -299.448, 0.449038, 0.84 ) }
    dend_10 { pt3dadd( 229.096, -299.502, 0.490869, 0.36 ) }
    dend_10 { pt3dadd( 229.797, -299.634, 0.608635, 0.36 ) }
    dend_10 { pt3dadd( 230.267, -299.773, 0.732365, 0.36 ) }
    dend_10 { pt3dadd( 231.058, -300.082, 0.999525, 0.36 ) }
    dend_10 { pt3dadd( 232.267, -300.67, 1.46944, 0.72 ) }
    dend_10 { pt3dadd( 232.684, -300.907, 1.64206, 0.72 ) }
    dend_10 { pt3dadd( 233.574, -301.434, 1.99716, 0.36 ) }
    dend_10 { pt3dadd( 234.056, -301.715, 2.16579, 0.36 ) }
    dend_10 { pt3dadd( 234.597, -302.013, 2.301, 0.36 ) }
    dend_10 { pt3dadd( 235.009, -302.232, 2.35148, 0.48 ) }
    dend_10 { pt3dadd( 235.485, -302.494, 2.3368, 0.24 ) }
    dend_10 { pt3dadd( 235.846, -302.714, 2.31335, 0.24 ) }
    dend_10 { pt3dadd( 236.311, -303.071, 2.22646, 0.6 ) }
    dend_10 { pt3dadd( 236.902, -303.603, 2.09765, 0.6 ) }
    dend_10 { pt3dadd( 237.225, -303.907, 2.02413, 0.6 ) }
    dend_10 { pt3dadd( 237.883, -304.508, 1.87798, 0.96 ) }
    dend_10 { pt3dadd( 238.356, -304.919, 1.77173, 0.96 ) }
    dend_10 { pt3dadd( 239.303, -305.661, 1.48964, 0.36 ) }
    dend_10 { pt3dadd( 239.716, -305.925, 1.34195, 0.36 ) }
    dend_10 { pt3dadd( 240.322, -306.223, 1.10735, 0.36 ) }
    dend_10 { pt3dadd( 240.763, -306.381, 0.940836, 0.36 ) }
    dend_10 { pt3dadd( 241.169, -306.483, 0.802272, 0.72 ) }
    dend_10 { pt3dadd( 241.934, -306.616, 0.59028, 0.36 ) }
    dend_10 { pt3dadd( 242.54, -306.678, 0.493501, 0.36 ) }
    dend_10 { pt3dadd( 243.156, -306.744, 0.427918, 0.36 ) }
    dend_10 { pt3dadd( 243.724, -306.816, 0.396669, 0.36 ) }
    dend_10 { pt3dadd( 244.468, -306.918, 0.38686, 0.48 ) }
    dend_10 { pt3dadd( 245.172, -307.004, 0.402286, 0.48 ) }
    dend_10 { pt3dadd( 246.043, -307.094, 0.434993, 0.36 ) }
    dend_10 { pt3dadd( 246.664, -307.14, 0.444705, 0.36 ) }
    dend_10 { pt3dadd( 247.383, -307.175, 0.436873, 0.36 ) }
    dend_10 { pt3dadd( 248.078, -307.201, 0.409339, 0.36 ) }
    dend_10 { pt3dadd( 248.493, -307.216, 0.377861, 0.36 ) }
    dend_10 { pt3dadd( 249.147, -307.238, 0.299505, 0.24 ) }
    dend_10 { pt3dadd( 249.558, -307.251, 0.229528, 0.24 ) }
    dend_10 { pt3dadd( 250.106, -307.257, 0.136967, 0.36 ) }
    dend_10 { pt3dadd( 250.534, -307.258, 0.0550753, 0.36 ) }
    dend_10 { pt3dadd( 251.096, -307.257, -0.0575695, 0.12 ) }
    dend_10 { pt3dadd( 251.528, -307.275, -0.139201, 0.72 ) }
    dend_10 { pt3dadd( 252.213, -307.341, -0.237893, 1.2 ) }
    dend_10 { pt3dadd( 252.776, -307.438, -0.302854, 1.2 ) }
    dend_10 { pt3dadd( 253.931, -307.706, -0.4271, 0.36 ) }
    dend_10 { pt3dadd( 254.2, -307.777, -0.454342, 0.36 ) }
    dend_10 { pt3dadd( 255.149, -308.073, -0.538814, 0.36 ) }
    dend_10 { pt3dadd( 255.872, -308.359, -0.587733, 0.84 ) }
    dend_10 { pt3dadd( 256.596, -308.732, -0.613028, 0.48 ) }
    dend_10 { pt3dadd( 257.14, -309.066, -0.613961, 0.36 ) }
    dend_10 { pt3dadd( 257.721, -309.47, -0.577519, 0.24 ) }
    dend_10 { pt3dadd( 258.206, -309.826, -0.536558, 0.24 ) }
    dend_10 { pt3dadd( 258.806, -310.279, -0.477605, 0.24 ) }
    dend_10 { pt3dadd( 259.657, -310.946, -0.410508, 0.24 ) }
    dend_10 { pt3dadd( 260.051, -311.273, -0.373541, 0.6 ) }
    dend_10 { pt3dadd( 260.455, -311.614, -0.332019, 0.48 ) }
    dend_10 { pt3dadd( 260.698, -311.818, -0.310631, 0.36 ) }
    dend_10 { pt3dadd( 261.513, -312.437, -0.27553, 0.36 ) }
    dend_10 { pt3dadd( 262.032, -312.765, -0.282114, 0.12 ) }
    dend_10 { pt3dadd( 262.559, -313.026, -0.319624, 0.12 ) }
    dend_10 { pt3dadd( 263.133, -313.271, -0.383445, 0.12 ) }
    dend_10 { pt3dadd( 263.319, -313.338, -0.398792, 0.48 ) }
    dend_10 { pt3dadd( 263.629, -313.431, -0.405664, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 264.065, -313.553, -0.384656, 0.12 ) }
    dend_10 { pt3dadd( 264.874, -313.804, -0.286963, 0.72 ) }
    dend_10 { pt3dadd( 265.294, -313.929, -0.226188, 0.72 ) }
    dend_10 { pt3dadd( 266.217, -314.208, -0.0812727, 0.24 ) }
    dend_10 { pt3dadd( 266.689, -314.359, 0.0173905, 0.24 ) }
    dend_10 { pt3dadd( 267.082, -314.511, 0.118255, 0.24 ) }
    dend_10 { pt3dadd( 267.462, -314.695, 0.259674, 0.24 ) }
    dend_10 { pt3dadd( 268.079, -315.036, 0.54631, 0.24 ) }
    dend_10 { pt3dadd( 268.312, -315.176, 0.661354, 0.24 ) }
    dend_10 { pt3dadd( 269.275, -315.778, 1.11308, 0.24 ) }
    dend_10 { pt3dadd( 269.774, -316.082, 1.32747, 0.96 ) }
    dend_10 { pt3dadd( 270.748, -316.658, 1.70933, 0.48 ) }
    dend_10 { pt3dadd( 271.37, -317.019, 1.91792, 0.36 ) }
    dend_10 { pt3dadd( 271.852, -317.306, 2.04754, 0.6 ) }
    dend_10 { pt3dadd( 272.565, -317.691, 2.19637, 0.84 ) }
    dend_10 { pt3dadd( 273.148, -317.968, 2.26534, 0.12 ) }
    dend_10 { pt3dadd( 273.411, -318.064, 2.28047, 0.12 ) }
    dend_10 { pt3dadd( 274.263, -318.299, 2.27228, 0.12 ) }
    dend_10 { pt3dadd( 275.051, -318.477, 2.26471, 0.96 ) }
    dend_10 { pt3dadd( 275.978, -318.65, 2.27289, 0.12 ) }
    dend_10 { pt3dadd( 276.475, -318.725, 2.28263, 0.12 ) }
    dend_10 { pt3dadd( 277.218, -318.805, 2.34022, 0.12 ) }
    dend_10 { pt3dadd( 277.528, -318.817, 2.367, 0.12 ) }
    dend_10 { pt3dadd( 277.837, -318.798, 2.39207, 0.12 ) }
    dend_10 { pt3dadd( 278.578, -318.704, 2.44202, 0.48 ) }
    dend_10 { pt3dadd( 279.167, -318.624, 2.4548, 0.48 ) }
    dend_10 { pt3dadd( 280.106, -318.533, 2.47773, 0.12 ) }
    dend_10 { pt3dadd( 280.607, -318.516, 2.49176, 0.12 ) }
    dend_10 { pt3dadd( 281.18, -318.516, 2.49913, 0.12 ) }
    dend_10 { pt3dadd( 281.688, -318.529, 2.48494, 0.36 ) }
    dend_10 { pt3dadd( 282.134, -318.566, 2.44942, 0.12 ) }
    dend_10 { pt3dadd( 282.626, -318.646, 2.38563, 0.12 ) }
    dend_10 { pt3dadd( 282.894, -318.703, 2.33306, 0.12 ) }
    dend_10 { pt3dadd( 283.43, -318.819, 2.23071, 0.6 ) }
    dend_10 { pt3dadd( 283.816, -318.862, 2.15783, 0.12 ) }
    dend_10 { pt3dadd( 284.499, -318.855, 2.03038, 0.12 ) }
    dend_10 { pt3dadd( 285.193, -318.792, 1.90194, 0.12 ) }
    dend_10 { pt3dadd( 285.462, -318.747, 1.84778, 0.36 ) }
    dend_10 { pt3dadd( 285.728, -318.689, 1.7924, 0.24 ) }
    dend_10 { pt3dadd( 286.847, -318.391, 1.52369, 0.24 ) }
    dend_10 { pt3dadd( 287.26, -318.277, 1.42328, 0.48 ) }
    dend_10 { pt3dadd( 287.566, -318.188, 1.34426, 0.12 ) }
    dend_10 { pt3dadd( 288.04, -318.043, 1.21656, 0.12 ) }
    dend_10 { pt3dadd( 288.448, -317.921, 1.10469, 0.36 ) }
    dend_10 { pt3dadd( 288.906, -317.791, 0.977568, 0.12 ) }
    dend_10 { pt3dadd( 291.385, -317.173, 0.286226, 0.12 ) }
    dend_10 { pt3dadd( 291.748, -317.088, 0.188513, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 18.3259, -9.96294, -10.4956, 0.36 ) }
    dend_7 { pt3dadd( 19.2254, -9.66682, -10.3169, 0.36 ) }
    dend_7 { pt3dadd( 19.9649, -9.44739, -10.1437, 0.36 ) }
    dend_7 { pt3dadd( 20.5223, -9.26986, -10.0048, 0.48 ) }
    dend_7 { pt3dadd( 21.1036, -9.05717, -9.85946, 0.48 ) }
    dend_7 { pt3dadd( 21.9985, -8.62164, -9.55832, 0.12 ) }
    dend_7 { pt3dadd( 22.6937, -8.17824, -9.29326, 0.12 ) }
    dend_7 { pt3dadd( 22.9423, -7.95432, -9.16255, 0.48 ) }
    dend_7 { pt3dadd( 23.3381, -7.45605, -8.9257, 0.48 ) }
    dend_7 { pt3dadd( 23.6297, -6.96152, -8.7291, 0.24 ) }
    dend_7 { pt3dadd( 24.2312, -5.70974, -8.28094, 0.36 ) }
    dend_7 { pt3dadd( 24.688, -4.59413, -7.93792, 0.36 ) }
    dend_7 { pt3dadd( 25.0918, -3.45714, -7.6038, 0.6 ) }
    dend_7 { pt3dadd( 25.3983, -2.53174, -7.34227, 1.08 ) }
    dend_7 { pt3dadd( 25.7717, -1.33945, -7.0126, 0.84 ) }
    dend_7 { pt3dadd( 26.0304, -0.486935, -6.78758, 0.48 ) }
    dend_7 { pt3dadd( 26.358, 0.590927, -6.54103, 0.96 ) }
    dend_7 { pt3dadd( 26.5298, 1.17472, -6.39859, 1.08 ) }
    dend_7 { pt3dadd( 26.8154, 2.05516, -6.18296, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -14.4323, -2.00778, 9.88242, 0.48 ) }
    dend_5 { pt3dadd( -14.8689, -1.19769, 9.81845, 0.48 ) }
    dend_5 { pt3dadd( -15.1653, -0.685228, 9.81496, 0.24 ) }
    dend_5 { pt3dadd( -15.5054, -0.18286, 9.83282, 0.24 ) }
    dend_5 { pt3dadd( -15.9291, 0.339534, 9.86605, 0.72 ) }
    dend_5 { pt3dadd( -16.1895, 0.61647, 9.8906, 0.96 ) }
    dend_5 { pt3dadd( -16.8269, 1.19601, 9.95251, 0.48 ) }
    dend_5 { pt3dadd( -17.4148, 1.5785, 10.0307, 0.36 ) }
    dend_5 { pt3dadd( -17.898, 1.80429, 10.0938, 0.36 ) }
    dend_5 { pt3dadd( -18.534, 2.00569, 10.1534, 0.6 ) }
    dend_5 { pt3dadd( -18.8869, 2.08891, 10.1743, 0.36 ) }
    dend_5 { pt3dadd( -19.4029, 2.1872, 10.2081, 0.48 ) }
    dend_5 { pt3dadd( -20.1136, 2.29929, 10.2962, 0.72 ) }
    dend_5 { pt3dadd( -20.7148, 2.38108, 10.388, 1.08 ) }
    dend_5 { pt3dadd( -21.3355, 2.45311, 10.5172, 0.96 ) }
    dend_5 { pt3dadd( -21.8711, 2.48925, 10.6543, 0.96 ) }
    dend_5 { pt3dadd( -22.4264, 2.49631, 10.8364, 0.72 ) }
    dend_5 { pt3dadd( -23.2474, 2.43057, 11.1943, 0.6 ) }
    dend_5 { pt3dadd( -23.8978, 2.23269, 11.5848, 0.36 ) }
    dend_5 { pt3dadd( -24.0792, 2.10637, 11.7526, 0.36 ) }
    dend_5 { pt3dadd( -24.3727, 1.78195, 12.1064, 0.36 ) }
    dend_5 { pt3dadd( -24.7476, 1.29813, 12.6179, 0.48 ) }
    dend_5 { pt3dadd( -24.9819, 0.993261, 12.9446, 0.48 ) }
    dend_5 { pt3dadd( -25.3011, 0.662779, 13.3194, 0.48 ) }
    dend_5 { pt3dadd( -25.7362, 0.445229, 13.7309, 0.48 ) }
    dend_5 { pt3dadd( -26.2278, 0.350318, 14.0968, 0.48 ) }
    dend_5 { pt3dadd( -26.8885, 0.303548, 14.5111, 0.48 ) }
    dend_5 { pt3dadd( -27.2869, 0.292388, 14.6998, 0.24 ) }
    dend_5 { pt3dadd( -27.6555, 0.287686, 14.8417, 0.24 ) }
    dend_5 { pt3dadd( -28.1022, 0.300873, 15.0091, 0.6 ) }
    dend_5 { pt3dadd( -28.5862, 0.325204, 15.1705, 0.6 ) }
    dend_5 { pt3dadd( -29.0602, 0.404, 15.3342, 0.72 ) }
    dend_5 { pt3dadd( -29.6562, 0.624566, 15.52, 0.12 ) }
    dend_5 { pt3dadd( -29.9347, 0.805137, 15.6549, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( -30.4891, 1.24953, 15.9808, 0.12 ) }
    dend_5 { pt3dadd( -30.8497, 1.58462, 16.2145, 0.48 ) }
    dend_5 { pt3dadd( -31.395, 2.13631, 16.6137, 0.6 ) }
    dend_5 { pt3dadd( -31.6739, 2.40866, 16.8272, 0.6 ) }
    dend_5 { pt3dadd( -32.3639, 2.92434, 17.3833, 0.36 ) }
    dend_5 { pt3dadd( -32.7321, 3.05345, 17.683, 0.36 ) }
    dend_5 { pt3dadd( -32.9398, 3.05002, 17.8439, 0.36 ) }
    dend_5 { pt3dadd( -33.187, 3.0043, 18.0357, 0.36 ) }
    dend_5 { pt3dadd( -33.5509, 2.91223, 18.3273, 0.6 ) }
    dend_5 { pt3dadd( -34.1621, 2.78585, 18.814, 0.84 ) }
    dend_5 { pt3dadd( -34.9408, 2.69002, 19.4117, 0.6 ) }
    dend_5 { pt3dadd( -35.4851, 2.66423, 19.854, 0.48 ) }
    dend_5 { pt3dadd( -35.7563, 2.66518, 20.0817, 0.48 ) }
    dend_5 { pt3dadd( -36.1458, 2.68923, 20.4213, 0.36 ) }
    dend_5 { pt3dadd( -36.4747, 2.73525, 20.7203, 0.36 ) }
    dend_5 { pt3dadd( -36.83, 2.81843, 21.0234, 0.48 ) }
    dend_5 { pt3dadd( -37.2585, 2.97877, 21.3122, 0.72 ) }
    dend_5 { pt3dadd( -37.3248, 3.01416, 21.3585, 0.72 ) }
    dend_5 { pt3dadd( -37.7489, 3.28427, 21.6439, 0.72 ) }
    dend_5 { pt3dadd( -38.0269, 3.48812, 21.8413, 0.48 ) }
    dend_5 { pt3dadd( -38.3875, 3.77644, 22.0905, 0.48 ) }
    dend_5 { pt3dadd( -38.7944, 4.12816, 22.3567, 0.6 ) }
    dend_5 { pt3dadd( -39.5695, 4.7536, 22.7984, 0.24 ) }
    dend_5 { pt3dadd( -40.0598, 5.07791, 23.034, 0.24 ) }
    dend_5 { pt3dadd( -40.9268, 5.55017, 23.3858, 0.48 ) }
    dend_5 { pt3dadd( -41.4818, 5.79038, 23.5756, 0.36 ) }
    dend_5 { pt3dadd( -41.7219, 5.87707, 23.6432, 0.36 ) }
    dend_5 { pt3dadd( -42.6402, 6.11464, 23.8467, 0.36 ) }
    dend_5 { pt3dadd( -43.5281, 6.22747, 23.9626, 0.36 ) }
    dend_5 { pt3dadd( -43.8768, 6.22792, 23.9965, 0.36 ) }
    dend_5 { pt3dadd( -44.321, 6.18309, 24.0167, 0.36 ) }
    dend_5 { pt3dadd( -44.9436, 6.07669, 24.0513, 0.36 ) }
    dend_5 { pt3dadd( -45.4582, 5.96907, 24.0843, 0.24 ) }
    dend_5 { pt3dadd( -45.8266, 5.86447, 24.1117, 0.24 ) }
    dend_5 { pt3dadd( -46.2419, 5.686, 24.1406, 0.24 ) }
    dend_5 { pt3dadd( -46.6294, 5.48011, 24.1986, 0.24 ) }
    dend_5 { pt3dadd( -47.0231, 5.26714, 24.2767, 0.24 ) }
    dend_5 { pt3dadd( -47.2716, 5.14699, 24.3443, 0.24 ) }
    dend_5 { pt3dadd( -47.5974, 5.01749, 24.4585, 0.48 ) }
    dend_5 { pt3dadd( -48.4187, 4.70394, 24.7803, 0.36 ) }
    dend_5 { pt3dadd( -49.0602, 4.483, 25.0732, 0.24 ) }
    dend_5 { pt3dadd( -49.5975, 4.34247, 25.3897, 0.24 ) }
    dend_5 { pt3dadd( -50.1739, 4.19202, 25.7762, 0.48 ) }
    dend_5 { pt3dadd( -50.6535, 4.06728, 26.1239, 0.24 ) }
    dend_5 { pt3dadd( -51.0865, 3.948, 26.4542, 0.24 ) }
    dend_5 { pt3dadd( -51.5553, 3.77934, 26.8119, 0.12 ) }
    dend_5 { pt3dadd( -52.5368, 3.22673, 27.4937, 1.68 ) }
    dend_5 { pt3dadd( -53.0691, 2.74971, 27.8553, 0.36 ) }
    dend_5 { pt3dadd( -53.1783, 2.62095, 27.9166, 0.36 ) }
    dend_5 { pt3dadd( -53.4906, 2.22751, 28.0456, 0.24 ) }
    dend_5 { pt3dadd( -53.9969, 1.55782, 28.188, 0.24 ) }
    dend_5 { pt3dadd( -54.201, 1.25499, 28.2141, 0.24 ) }
    dend_5 { pt3dadd( -54.4924, 0.795488, 28.206, 0.24 ) }
    dend_5 { pt3dadd( -54.6999, 0.498769, 28.2059, 0.24 ) }
    dend_5 { pt3dadd( -55.1081, -0.0256618, 28.2081, 0.24 ) }
    dend_5 { pt3dadd( -55.4524, -0.400213, 28.2123, 0.24 ) }
    dend_5 { pt3dadd( -55.9661, -0.889838, 28.2208, 0.24 ) }
    dend_5 { pt3dadd( -56.1704, -1.07171, 28.2248, 0.24 ) }
    dend_5 { pt3dadd( -56.3794, -1.25157, 28.2294, 0.24 ) }
    dend_5 { pt3dadd( -56.776, -1.65799, 28.2396, 0.24 ) }
    dend_5 { pt3dadd( -57.0079, -1.94649, 28.2467, 0.24 ) }
    dend_5 { pt3dadd( -57.5053, -2.40304, 28.2617, 0.24 ) }
    dend_5 { pt3dadd( -64.2695, -2.53552, 31.0034, 0.24 ) }
    dend_5 { pt3dadd( -71.0982, -1.58487, 33.4176, 0.24 ) }
    dend_5 { pt3dadd( -77.6188, -0.454823, 36.5167, 0.24 ) }
    dend_5 { pt3dadd( -84.0554, 0.697843, 39.7796, 0.24 ) }
    dend_5 { pt3dadd( -90.2751, 0.954498, 43.593, 0.24 ) }
    dend_5 { pt3dadd( -96.2966, 1.76571, 47.6464, 0.24 ) }
    dend_5 { pt3dadd( -102.344, 1.57435, 51.7308, 0.24 ) }
    dend_5 { pt3dadd( -107.804, 0.86894, 56.5298, 0.24 ) }
    dend_5 { pt3dadd( -112.408, 0.622771, 62.1897, 0.24 ) }
    dend_5 { pt3dadd( -117.234, -0.966758, 67.4519, 0.24 ) }
    dend_5 { pt3dadd( -122.061, -4.06853, 72.063, 0.24 ) }
    dend_5 { pt3dadd( -126.616, -6.87423, 77.101, 0.24 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.4323, -2.00778, 9.88242, 0.12 ) }
    dend_4 { pt3dadd( -15.4111, -5.58325, 2.69676, 0.12 ) }
    dend_4 { pt3dadd( -15.5577, -6.03831, 1.93216, 0.12 ) }
    dend_4 { pt3dadd( -15.7082, -6.42687, 1.41619, 0.48 ) }
    dend_4 { pt3dadd( -15.8652, -6.75788, 1.1067, 0.48 ) }
    dend_4 { pt3dadd( -16.466, -7.83187, 0.447852, 0.48 ) }
    dend_4 { pt3dadd( -16.9017, -8.50646, 0.153206, 0.12 ) }
    dend_4 { pt3dadd( -17.5945, -9.30546, 0.376699, 0.6 ) }
    dend_4 { pt3dadd( -18.1195, -9.83174, 0.50461, 0.6 ) }
    dend_4 { pt3dadd( -18.8231, -10.4936, 0.63012, 0.6 ) }
    dend_4 { pt3dadd( -19.3777, -11.01, 0.691456, 0.6 ) }
    dend_4 { pt3dadd( -20.0066, -11.6022, 0.704967, 0.24 ) }
    dend_4 { pt3dadd( -20.5004, -12.0658, 0.770263, 0.24 ) }
    dend_4 { pt3dadd( -20.814, -12.3513, 0.841132, 0.24 ) }
    dend_4 { pt3dadd( -21.2193, -12.7012, 0.955279, 0.84 ) }
    dend_4 { pt3dadd( -21.6907, -13.083, 1.10638, 0.96 ) }
    dend_4 { pt3dadd( -22.4271, -13.6508, 1.35286, 0.96 ) }
    dend_4 { pt3dadd( -23.8797, -14.7313, 1.84138, 0.72 ) }
    dend_4 { pt3dadd( -24.6501, -15.2477, 2.07016, 0.6 ) }
    dend_4 { pt3dadd( -25.8921, -15.9859, 2.38772, 0.6 ) }
    dend_4 { pt3dadd( -26.2929, -16.1937, 2.47439, 0.6 ) }
    dend_4 { pt3dadd( -26.9069, -16.4588, 2.57765, 0.36 ) }
    dend_4 { pt3dadd( -27.7263, -16.7472, 2.66586, 0.36 ) }
    dend_4 { pt3dadd( -28.9014, -17.078, 2.69068, 0.36 ) }
    dend_4 { pt3dadd( -29.6455, -17.2372, 2.72436, 0.36 ) }
    dend_4 { pt3dadd( -29.9753, -17.284, 2.74638, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( -30.6354, -17.3625, 2.80603, 1.08 ) }
    dend_4 { pt3dadd( -31.1015, -17.4111, 2.86275, 1.08 ) }
    dend_4 { pt3dadd( -31.7066, -17.4777, 2.95262, 1.08 ) }
    dend_4 { pt3dadd( -32.6459, -17.6256, 3.11051, 0.12 ) }
    dend_4 { pt3dadd( -33.2179, -17.7571, 3.22399, 0.12 ) }
    dend_4 { pt3dadd( -33.6233, -17.8825, 3.30606, 0.12 ) }
    dend_4 { pt3dadd( -34.0235, -18.029, 3.40247, 0.12 ) }
    dend_4 { pt3dadd( -34.586, -18.2447, 3.54082, 0.6 ) }
    dend_4 { pt3dadd( -35.4079, -18.5544, 3.73326, 0.6 ) }
    dend_4 { pt3dadd( -35.9661, -18.7563, 3.85515, 0.72 ) }
    dend_4 { pt3dadd( -37.26, -19.1946, 4.1399, 0.84 ) }
    dend_4 { pt3dadd( -38.3176, -19.5365, 4.36302, 0.48 ) }
    dend_4 { pt3dadd( -39.038, -19.7442, 4.50357, 0.48 ) }
    dend_4 { pt3dadd( -39.9046, -19.9846, 4.66591, 0.48 ) }
    dend_4 { pt3dadd( -40.4971, -20.1492, 4.76683, 0.36 ) }
    dend_4 { pt3dadd( -40.9478, -20.2628, 4.82834, 0.36 ) }
    dend_4 { pt3dadd( -41.7901, -20.4548, 4.94151, 0.36 ) }
    dend_4 { pt3dadd( -42.6993, -20.6391, 5.121, 0.36 ) }
    dend_4 { pt3dadd( -43.8978, -20.8537, 5.44134, 0.36 ) }
    dend_4 { pt3dadd( -44.6726, -20.9714, 5.66767, 0.36 ) }
    dend_4 { pt3dadd( -45.4042, -21.0582, 5.85871, 0.36 ) }
    dend_4 { pt3dadd( -46.1832, -21.1068, 6.04099, 0.36 ) }
    dend_4 { pt3dadd( -47.7763, -21.1096, 6.36582, 0.48 ) }
    dend_4 { pt3dadd( -48.662, -21.0745, 6.4954, 0.72 ) }
    dend_4 { pt3dadd( -49.5009, -20.9976, 6.52993, 0.72 ) }
    dend_4 { pt3dadd( -50.6266, -20.9162, 6.43821, 0.36 ) }
    dend_4 { pt3dadd( -51.2404, -20.9055, 6.322, 0.36 ) }
    dend_4 { pt3dadd( -51.6935, -20.9411, 6.19479, 0.36 ) }
    dend_4 { pt3dadd( -52.242, -21.041, 6.01239, 0.6 ) }
    dend_4 { pt3dadd( -53.2311, -21.333, 5.72351, 0.72 ) }
    dend_4 { pt3dadd( -54.4854, -21.8147, 5.49586, 0.72 ) }
    dend_4 { pt3dadd( -55.3278, -22.1744, 5.46988, 0.36 ) }
    dend_4 { pt3dadd( -56.3449, -22.5433, 5.63378, 0.36 ) }
    dend_4 { pt3dadd( -57.009, -22.7523, 5.88747, 0.36 ) }
    dend_4 { pt3dadd( -57.5632, -22.9078, 6.22868, 0.36 ) }
    dend_4 { pt3dadd( -58.4233, -23.1295, 6.95978, 0.48 ) }
    dend_4 { pt3dadd( -59.4021, -23.3525, 7.90418, 0.48 ) }
    dend_4 { pt3dadd( -61.16, -23.6271, 9.89441, 0.48 ) }
    dend_4 { pt3dadd( -61.8633, -23.6782, 10.7215, 0.48 ) }
    dend_4 { pt3dadd( -62.2941, -23.7142, 11.2157, 0.48 ) }
    dend_4 { pt3dadd( -62.7841, -23.7612, 11.7771, 0.48 ) }
    dend_4 { pt3dadd( -63.573, -23.8985, 12.5991, 0.48 ) }
    dend_4 { pt3dadd( -65.4041, -24.443, 14.3182, 0.48 ) }
    dend_4 { pt3dadd( -65.8903, -24.6425, 14.6773, 0.48 ) }
    dend_4 { pt3dadd( -66.4641, -24.7471, 15.1441, 0.48 ) }
    dend_4 { pt3dadd( -77.8642, -28.4361, 18.6189, 0.48 ) }
    dend_4 { pt3dadd( -89.0729, -31.902, 22.8528, 0.48 ) }
    dend_4 { pt3dadd( -101.0, -34.1001, 25.6516, 0.48 ) }
    dend_4 { pt3dadd( -113.282, -35.7091, 26.795, 0.48 ) }
    dend_4 { pt3dadd( -125.453, -38.3097, 26.6175, 0.48 ) }
    dend_4 { pt3dadd( -137.263, -42.2567, 27.3581, 0.48 ) }
    dend_4 { pt3dadd( -148.417, -47.8052, 28.6421, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.64, 29.0937, -15.803, 0.12 ) }
    dend_2 { pt3dadd( -17.7694, 29.9339, -15.6372, 0.12 ) }
    dend_2 { pt3dadd( -19.4433, 30.4599, -15.7627, 0.12 ) }
    dend_2 { pt3dadd( -19.9052, 30.5954, -15.8139, 0.12 ) }
    dend_2 { pt3dadd( -20.7096, 30.7933, -15.892, 0.6 ) }
    dend_2 { pt3dadd( -21.6508, 31.0009, -15.9701, 0.84 ) }
    dend_2 { pt3dadd( -22.2001, 31.1088, -16.0064, 0.84 ) }
    dend_2 { pt3dadd( -23.5026, 31.2795, -16.238, 0.12 ) }
    dend_2 { pt3dadd( -24.3679, 31.3409, -16.3529, 0.12 ) }
    dend_2 { pt3dadd( -25.3483, 31.3964, -16.5113, 0.12 ) }
    dend_2 { pt3dadd( -25.7477, 31.4458, -16.5895, 0.96 ) }
    dend_2 { pt3dadd( -26.2856, 31.5442, -16.715, 0.96 ) }
    dend_2 { pt3dadd( -27.8099, 31.8633, -17.0848, 0.24 ) }
    dend_2 { pt3dadd( -28.7387, 32.0346, -17.2911, 0.24 ) }
    dend_2 { pt3dadd( -29.1968, 32.091, -17.4343, 0.24 ) }
    dend_2 { pt3dadd( -30.4113, 32.1932, -17.8758, 0.6 ) }
    dend_2 { pt3dadd( -31.0559, 32.2057, -18.1339, 0.24 ) }
    dend_2 { pt3dadd( -31.4357, 32.2059, -18.2884, 0.24 ) }
    dend_2 { pt3dadd( -32.3283, 32.1578, -18.5964, 0.24 ) }
    dend_2 { pt3dadd( -33.3113, 32.0154, -18.947, 0.84 ) }
    dend_2 { pt3dadd( -33.9529, 31.8769, -19.1588, 0.84 ) }
    dend_2 { pt3dadd( -34.9729, 31.6623, -19.4329, 0.24 ) }
    dend_2 { pt3dadd( -35.4479, 31.6249, -19.5162, 0.24 ) }
    dend_2 { pt3dadd( -35.875, 31.6318, -19.5816, 0.24 ) }
    dend_2 { pt3dadd( -36.4417, 31.6754, -19.6425, 0.24 ) }
    dend_2 { pt3dadd( -36.5995, 31.6852, -19.6471, 0.12 ) }
    dend_2 { pt3dadd( -37.4624, 31.733, -19.6512, 0.12 ) }
    dend_2 { pt3dadd( -38.2906, 31.7739, -19.707, 0.48 ) }
    dend_2 { pt3dadd( -39.1307, 31.8104, -19.8204, 0.12 ) }
    dend_2 { pt3dadd( -39.8149, 31.8479, -19.9464, 0.12 ) }
    dend_2 { pt3dadd( -40.4945, 31.9039, -20.0896, 0.48 ) }
    dend_2 { pt3dadd( -40.9747, 31.9489, -20.1899, 0.48 ) }
    dend_2 { pt3dadd( -42.4988, 32.1304, -20.5072, 0.12 ) }
    dend_2 { pt3dadd( -43.4281, 32.277, -20.7286, 0.12 ) }
    dend_2 { pt3dadd( -43.6092, 32.3094, -20.788, 0.12 ) }
    dend_2 { pt3dadd( -44.2746, 32.4446, -21.0996, 0.6 ) }
    dend_2 { pt3dadd( -45.0034, 32.5829, -21.472, 0.6 ) }
    dend_2 { pt3dadd( -45.5437, 32.6702, -21.7446, 0.6 ) }
    dend_2 { pt3dadd( -46.5414, 32.8293, -22.2094, 0.72 ) }
    dend_2 { pt3dadd( -48.0273, 33.0499, -22.9801, 0.36 ) }
    dend_2 { pt3dadd( -48.9289, 33.1933, -23.4488, 0.12 ) }
    dend_2 { pt3dadd( -49.7979, 33.3296, -23.9143, 0.12 ) }
    dend_2 { pt3dadd( -50.1788, 33.3916, -24.1092, 0.72 ) }
    dend_2 { pt3dadd( -50.6773, 33.4713, -24.3599, 0.84 ) }
    dend_2 { pt3dadd( -51.5055, 33.6171, -24.7115, 0.12 ) }
    dend_2 { pt3dadd( -52.3218, 33.7648, -24.9912, 0.12 ) }
    dend_2 { pt3dadd( -53.0677, 33.8926, -25.2294, 0.6 ) }
    dend_2 { pt3dadd( -53.578, 33.9789, -25.4385, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -55.121, 34.2057, -26.0705, 0.12 ) }
    dend_2 { pt3dadd( -55.7545, 34.2811, -26.3153, 0.12 ) }
    dend_2 { pt3dadd( -56.5062, 34.3695, -26.6305, 0.12 ) }
    dend_2 { pt3dadd( -56.8985, 34.4135, -26.8063, 0.48 ) }
    dend_2 { pt3dadd( -58.2839, 34.6081, -27.4024, 0.12 ) }
    dend_2 { pt3dadd( -59.4839, 34.8186, -28.023, 0.12 ) }
    dend_2 { pt3dadd( -59.8474, 34.8964, -28.2143, 1.08 ) }
    dend_2 { pt3dadd( -61.3768, 35.263, -29.0718, 0.12 ) }
    dend_2 { pt3dadd( -61.7385, 35.3581, -29.2898, 0.12 ) }
    dend_2 { pt3dadd( -62.4361, 35.5804, -29.6879, 0.84 ) }
    dend_2 { pt3dadd( -64.2077, 36.2403, -30.5926, 0.12 ) }
    dend_2 { pt3dadd( -65.1231, 36.628, -31.0794, 0.12 ) }
    dend_2 { pt3dadd( -65.596, 36.8526, -31.2966, 0.36 ) }
    dend_2 { pt3dadd( -66.2685, 37.2073, -31.5324, 0.12 ) }
    dend_2 { pt3dadd( -67.4943, 37.9479, -31.9274, 0.12 ) }
    dend_2 { pt3dadd( -67.8814, 38.2205, -32.0837, 0.36 ) }
    dend_2 { pt3dadd( -68.3265, 38.6264, -32.2834, 0.12 ) }
    dend_2 { pt3dadd( -69.1196, 39.5428, -32.7847, 0.12 ) }
    dend_2 { pt3dadd( -69.3419, 39.8324, -32.9381, 0.48 ) }
    dend_2 { pt3dadd( -69.5701, 40.1501, -33.093, 0.48 ) }
    dend_2 { pt3dadd( -70.7783, 41.8004, -34.0838, 0.12 ) }
    dend_2 { pt3dadd( -71.4777, 42.7016, -34.6599, 0.12 ) }
    dend_2 { pt3dadd( -72.0935, 43.4499, -35.1416, 0.12 ) }
    dend_2 { pt3dadd( -72.6602, 44.0794, -35.547, 0.12 ) }
    dend_2 { pt3dadd( -73.2006, 44.623, -35.8548, 0.6 ) }
    dend_2 { pt3dadd( -74.3916, 45.6317, -36.4711, 0.12 ) }
    dend_2 { pt3dadd( -74.7276, 45.8738, -36.6121, 0.12 ) }
    dend_2 { pt3dadd( -75.1275, 46.1128, -36.7856, 0.12 ) }
    dend_2 { pt3dadd( -75.8865, 46.5222, -37.1165, 0.12 ) }
    dend_2 { pt3dadd( -76.5316, 46.8525, -37.3774, 0.48 ) }
    dend_2 { pt3dadd( -78.2957, 47.7076, -37.9407, 0.12 ) }
    dend_2 { pt3dadd( -78.7952, 47.9291, -38.0896, 0.12 ) }
    dend_2 { pt3dadd( -79.8999, 48.3489, -38.4188, 0.6 ) }
    dend_2 { pt3dadd( -80.4053, 48.5132, -38.5525, 0.12 ) }
    dend_2 { pt3dadd( -81.0614, 48.7039, -38.6957, 0.12 ) }
    dend_2 { pt3dadd( -81.867, 48.9262, -38.8121, 0.6 ) }
    dend_2 { pt3dadd( -83.4771, 49.3447, -38.9602, 0.12 ) }
    dend_2 { pt3dadd( -84.9395, 49.6921, -39.1131, 0.12 ) }
    dend_2 { pt3dadd( -85.8816, 49.9006, -39.2143, 0.12 ) }
    dend_2 { pt3dadd( -86.5961, 50.0466, -39.2796, 0.12 ) }
    dend_2 { pt3dadd( -87.5709, 50.2396, -39.3334, 0.12 ) }
    dend_2 { pt3dadd( -89.0083, 50.5333, -39.3414, 0.12 ) }
    dend_2 { pt3dadd( -89.9503, 50.7385, -39.2699, 0.12 ) }
    dend_2 { pt3dadd( -90.5089, 50.865, -39.222, 0.84 ) }
    dend_2 { pt3dadd( -91.279, 51.0569, -39.1442, 1.2 ) }
    dend_2 { pt3dadd( -92.0149, 51.2806, -39.0495, 0.12 ) }
    dend_2 { pt3dadd( -92.6995, 51.5447, -38.9375, 0.12 ) }
    dend_2 { pt3dadd( -93.6889, 52.0105, -38.7497, 0.12 ) }
    dend_2 { pt3dadd( -94.5638, 52.4746, -38.606, 0.48 ) }
    dend_2 { pt3dadd( -94.9844, 52.715, -38.5573, 0.12 ) }
    dend_2 { pt3dadd( -95.9902, 53.3392, -38.4863, 0.12 ) }
    dend_2 { pt3dadd( -96.6756, 53.7583, -38.4606, 0.12 ) }
    dend_2 { pt3dadd( -97.3494, 54.1564, -38.4429, 0.48 ) }
    dend_2 { pt3dadd( -98.0432, 54.5482, -38.4688, 0.48 ) }
    dend_2 { pt3dadd( -98.6232, 54.8552, -38.5118, 0.12 ) }
    dend_2 { pt3dadd( -99.7205, 55.3909, -38.657, 0.12 ) }
    dend_2 { pt3dadd( -100.587, 55.7874, -38.8481, 0.12 ) }
    dend_2 { pt3dadd( -101.196, 56.0597, -39.0126, 0.48 ) }
    dend_2 { pt3dadd( -102.1, 56.4531, -39.2719, 0.12 ) }
    dend_2 { pt3dadd( -103.083, 56.8622, -39.5522, 0.12 ) }
    dend_2 { pt3dadd( -104.439, 57.4378, -39.9205, 0.84 ) }
    dend_2 { pt3dadd( -105.395, 57.8375, -40.2658, 0.12 ) }
    dend_2 { pt3dadd( -105.885, 58.0634, -40.474, 0.12 ) }
    dend_2 { pt3dadd( -106.57, 58.4189, -40.7659, 0.12 ) }
    dend_2 { pt3dadd( -107.348, 58.8654, -41.2075, 0.12 ) }
    dend_2 { pt3dadd( -107.787, 59.1238, -41.495, 0.36 ) }
    dend_2 { pt3dadd( -109.075, 59.9539, -42.4468, 0.12 ) }
    dend_2 { pt3dadd( -109.542, 60.2902, -42.8528, 0.12 ) }
    dend_2 { pt3dadd( -110.017, 60.6747, -43.3967, 0.48 ) }
    dend_2 { pt3dadd( -111.534, 62.1054, -45.765, 0.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.64, 29.0937, -15.803, 0.12 ) }
    dend_1 { pt3dadd( -15.6888, 29.8098, -15.879, 0.12 ) }
    dend_1 { pt3dadd( -15.7842, 30.792, -16.0419, 0.12 ) }
    dend_1 { pt3dadd( -15.8579, 31.446, -16.1597, 0.72 ) }
    dend_1 { pt3dadd( -15.9198, 31.9913, -16.2656, 0.96 ) }
    dend_1 { pt3dadd( -15.9611, 32.3346, -16.3327, 0.96 ) }
    dend_1 { pt3dadd( -16.0883, 33.3218, -16.5866, 0.12 ) }
    dend_1 { pt3dadd( -16.268, 34.5873, -16.9962, 0.12 ) }
    dend_1 { pt3dadd( -16.3286, 35.0155, -17.1463, 0.48 ) }
    dend_1 { pt3dadd( -16.4258, 35.6546, -17.3719, 0.24 ) }
    dend_1 { pt3dadd( -16.5781, 36.5063, -17.6759, 0.24 ) }
    dend_1 { pt3dadd( -16.8113, 37.7726, -18.1077, 0.72 ) }
    dend_1 { pt3dadd( -16.9393, 38.498, -18.3261, 0.96 ) }
    dend_1 { pt3dadd( -17.0929, 39.3417, -18.5837, 0.36 ) }
    dend_1 { pt3dadd( -17.1848, 39.8605, -18.7347, 0.36 ) }
    dend_1 { pt3dadd( -17.3052, 40.5531, -18.9115, 0.12 ) }
    dend_1 { pt3dadd( -17.4265, 41.2232, -19.0499, 0.12 ) }
    dend_1 { pt3dadd( -17.5981, 42.0963, -19.1681, 0.12 ) }
    dend_1 { pt3dadd( -17.6835, 42.4824, -19.2201, 0.6 ) }
    dend_1 { pt3dadd( -17.8437, 43.1773, -19.3162, 0.12 ) }
    dend_1 { pt3dadd( -17.9876, 43.824, -19.3989, 0.12 ) }
    dend_1 { pt3dadd( -18.136, 44.5169, -19.4761, 0.48 ) }
    dend_1 { pt3dadd( -18.2568, 44.9881, -19.5263, 0.96 ) }
    dend_1 { pt3dadd( -18.3908, 45.4645, -19.573, 0.96 ) }
    dend_1 { pt3dadd( -18.5279, 45.9412, -19.6143, 0.12 ) }
    dend_1 { pt3dadd( -18.7638, 46.6786, -19.6662, 0.12 ) }
    dend_1 { pt3dadd( -19.0092, 47.4069, -19.7183, 0.12 ) }
    dend_1 { pt3dadd( -19.1118, 47.7098, -19.7387, 0.6 ) }
    dend_1 { pt3dadd( -19.1676, 47.8561, -19.747, 0.6 ) }
    dend_1 { pt3dadd( -19.306, 48.1434, -19.7572, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_1 { pt3dadd( -19.5366, 48.5428, -19.8308, 0.12 ) }
    dend_1 { pt3dadd( -19.8373, 49.0222, -19.9829, 0.12 ) }
    dend_1 { pt3dadd( -20.1315, 49.4996, -20.1684, 0.72 ) }
    dend_1 { pt3dadd( -20.3221, 49.8144, -20.3124, 0.96 ) }
    dend_1 { pt3dadd( -20.7963, 50.5885, -20.7385, 0.48 ) }
    dend_1 { pt3dadd( -21.5914, 51.8577, -21.5049, 0.12 ) }
    dend_1 { pt3dadd( -21.9066, 52.3392, -21.8173, 0.12 ) }
    dend_1 { pt3dadd( -22.1849, 52.7382, -22.086, 0.12 ) }
    dend_1 { pt3dadd( -22.5059, 53.1818, -22.3794, 0.48 ) }
    dend_1 { pt3dadd( -22.8386, 53.6303, -22.6709, 0.12 ) }
    dend_1 { pt3dadd( -23.316, 54.2481, -23.0106, 0.12 ) }
    dend_1 { pt3dadd( -23.551, 54.5445, -23.1198, 1.08 ) }
    dend_1 { pt3dadd( -23.8334, 54.8854, -23.2319, 1.32 ) }
    dend_1 { pt3dadd( -24.0769, 55.1778, -23.3319, 0.96 ) }
    dend_1 { pt3dadd( -24.6507, 55.888, -23.5591, 0.24 ) }
    dend_1 { pt3dadd( -25.3013, 56.6977, -23.8699, 0.24 ) }
    dend_1 { pt3dadd( -25.7978, 57.2914, -24.1455, 0.24 ) }
    dend_1 { pt3dadd( -26.2825, 57.8508, -24.4286, 0.24 ) }
    dend_1 { pt3dadd( -26.8118, 58.415, -24.7259, 0.96 ) }
    dend_1 { pt3dadd( -27.11, 58.6987, -24.9154, 1.2 ) }
    dend_1 { pt3dadd( -27.9388, 59.4323, -25.4706, 0.36 ) }
    dend_1 { pt3dadd( -28.427, 59.8344, -25.8223, 0.12 ) }
    dend_1 { pt3dadd( -28.6886, 60.0425, -26.0108, 0.72 ) }
    dend_1 { pt3dadd( -29.2385, 60.5023, -26.4126, 0.72 ) }
    dend_1 { pt3dadd( -30.502, 61.6136, -27.2943, 0.24 ) }
    dend_1 { pt3dadd( -30.8126, 61.9027, -27.5096, 0.12 ) }
    dend_1 { pt3dadd( -31.1084, 62.1953, -27.7051, 0.12 ) }
    dend_1 { pt3dadd( -31.3923, 62.5028, -27.8977, 0.24 ) }
    dend_1 { pt3dadd( -32.0945, 63.3278, -28.3477, 0.48 ) }
    dend_1 { pt3dadd( -32.4354, 63.7702, -28.572, 0.12 ) }
    dend_1 { pt3dadd( -32.739, 64.1919, -28.7369, 0.12 ) }
    dend_1 { pt3dadd( -32.8252, 64.3113, -28.7842, 0.72 ) }
    dend_1 { pt3dadd( -33.2133, 64.8572, -28.9896, 0.84 ) }
    dend_1 { pt3dadd( -33.51, 65.2847, -29.1351, 0.84 ) }
    dend_1 { pt3dadd( -34.2576, 66.3332, -29.5596, 0.36 ) }
    dend_1 { pt3dadd( -34.6403, 66.8697, -29.8146, 0.12 ) }
    dend_1 { pt3dadd( -34.9653, 67.327, -30.0573, 0.6 ) }
    dend_1 { pt3dadd( -35.2509, 67.7299, -30.2894, 1.08 ) }
    dend_1 { pt3dadd( -35.4229, 67.9911, -30.4365, 1.08 ) }
    dend_1 { pt3dadd( -36.1768, 69.2096, -31.0665, 0.12 ) }
    dend_1 { pt3dadd( -36.4505, 69.6824, -31.2686, 0.12 ) }
    dend_1 { pt3dadd( -36.6309, 70.0064, -31.407, 0.48 ) }
    dend_1 { pt3dadd( -36.9072, 70.5491, -31.6092, 0.12 ) }
    dend_1 { pt3dadd( -37.4303, 71.6239, -31.9356, 0.12 ) }
    dend_1 { pt3dadd( -37.6011, 71.975, -32.0118, 0.72 ) }
    dend_1 { pt3dadd( -37.8761, 72.553, -32.0842, 0.84 ) }
    dend_1 { pt3dadd( -38.1569, 73.1158, -32.1526, 0.12 ) }
    dend_1 { pt3dadd( -38.5732, 73.9201, -32.2401, 0.12 ) }
    dend_1 { pt3dadd( -38.8317, 74.4033, -32.2828, 0.12 ) }
    dend_1 { pt3dadd( -39.2165, 75.078, -32.3395, 0.6 ) }
    dend_1 { pt3dadd( -39.4669, 75.511, -32.3688, 0.36 ) }
    dend_1 { pt3dadd( -39.7051, 75.9123, -32.3874, 0.6 ) }
    dend_1 { pt3dadd( -40.0343, 76.4615, -32.4284, 0.84 ) }
    dend_1 { pt3dadd( -40.207, 76.7518, -32.4601, 0.84 ) }
    dend_1 { pt3dadd( -40.5946, 77.4397, -32.5474, 0.24 ) }
    dend_1 { pt3dadd( -41.0413, 78.2569, -32.6779, 0.12 ) }
    dend_1 { pt3dadd( -41.3688, 78.8726, -32.7868, 0.48 ) }
    dend_1 { pt3dadd( -41.9146, 79.9417, -32.9953, 0.12 ) }
    dend_1 { pt3dadd( -42.3765, 80.8957, -33.1951, 0.12 ) }
    dend_1 { pt3dadd( -42.619, 81.4264, -33.3103, 0.48 ) }
    dend_1 { pt3dadd( -42.8096, 81.8715, -33.4057, 0.12 ) }
    dend_1 { pt3dadd( -43.0649, 82.5118, -33.5277, 0.12 ) }
    dend_1 { pt3dadd( -43.1428, 82.7166, -33.5605, 0.36 ) }
    dend_1 { pt3dadd( -43.3788, 83.3348, -33.6507, 0.12 ) }
    dend_1 { pt3dadd( -43.5098, 83.6551, -33.7035, 0.12 ) }
    dend_1 { pt3dadd( -43.8787, 84.5138, -33.8365, 0.48 ) }
    dend_1 { pt3dadd( -44.2184, 85.277, -33.9428, 1.2 ) }
    dend_1 { pt3dadd( -44.4831, 85.8363, -34.0211, 0.6 ) }
    dend_1 { pt3dadd( -44.7645, 86.4165, -34.1112, 0.12 ) }
    dend_1 { pt3dadd( -45.2838, 87.4692, -34.2828, 0.12 ) }
    dend_1 { pt3dadd( -45.8676, 88.6428, -34.4779, 0.12 ) }
    dend_1 { pt3dadd( -46.0423, 88.9956, -34.5359, 0.12 ) }
    dend_1 { pt3dadd( -46.2849, 89.4777, -34.6082, 0.6 ) }
    dend_1 { pt3dadd( -46.5894, 90.0866, -34.7058, 0.12 ) }
    dend_1 { pt3dadd( -46.9127, 90.7344, -34.814, 0.12 ) }
    dend_1 { pt3dadd( -47.121, 91.1444, -34.9006, 0.72 ) }
    dend_1 { pt3dadd( -47.3445, 91.57, -35.0087, 0.72 ) }
    dend_1 { pt3dadd( -47.5232, 91.9055, -35.0937, 0.72 ) }
    dend_1 { pt3dadd( -47.9019, 92.6226, -35.3381, 0.12 ) }
    dend_1 { pt3dadd( -48.3033, 93.4169, -35.6381, 0.12 ) }
    dend_1 { pt3dadd( -48.5248, 93.8838, -35.8275, 0.12 ) }
    dend_1 { pt3dadd( -48.9134, 94.7716, -36.1818, 0.48 ) }
    dend_1 { pt3dadd( -49.1965, 95.4603, -36.4605, 0.48 ) }
    dend_1 { pt3dadd( -49.6688, 96.6637, -36.9301, 0.12 ) }
    dend_1 { pt3dadd( -50.0015, 97.5613, -37.2508, 0.12 ) }
    dend_1 { pt3dadd( -50.1873, 98.0878, -37.4559, 0.12 ) }
    dend_1 { pt3dadd( -50.4284, 98.799, -37.7268, 0.12 ) }
    dend_1 { pt3dadd( -50.5443, 99.1526, -37.8474, 0.72 ) }
    dend_1 { pt3dadd( -50.711, 99.655, -38.0086, 0.72 ) }
    dend_1 { pt3dadd( -50.8527, 100.067, -38.1126, 0.48 ) }
    dend_1 { pt3dadd( -51.0931, 100.756, -38.3057, 0.12 ) }
    dend_1 { pt3dadd( -51.3699, 101.556, -38.6162, 0.12 ) }
    dend_1 { pt3dadd( -51.4996, 101.962, -38.7901, 0.36 ) }
    dend_1 { pt3dadd( -51.6176, 102.343, -38.9383, 0.12 ) }
    dend_1 { pt3dadd( -51.7997, 102.948, -39.1431, 0.12 ) }
    dend_1 { pt3dadd( -51.9258, 103.369, -39.2692, 0.48 ) }
    dend_1 { pt3dadd( -52.3824, 104.92, -39.673, 0.24 ) }
    dend_1 { pt3dadd( -52.6599, 105.843, -39.9186, 0.24 ) }
    dend_1 { pt3dadd( -53.0994, 107.313, -40.2921, 0.24 ) }
    dend_1 { pt3dadd( -53.5239, 108.753, -40.6202, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_1 { pt3dadd( -53.6241, 109.082, -40.6894, 0.24 ) }
    dend_1 { pt3dadd( -53.755, 109.505, -40.7631, 0.48 ) }
    dend_1 { pt3dadd( -53.9457, 110.105, -40.8359, 0.12 ) }
    dend_1 { pt3dadd( -54.1795, 110.72, -40.9283, 0.12 ) }
    dend_1 { pt3dadd( -54.3635, 111.132, -40.9955, 0.12 ) }
    dend_1 { pt3dadd( -54.5804, 111.541, -41.0577, 0.48 ) }
    dend_1 { pt3dadd( -54.7485, 111.834, -41.0982, 0.72 ) }
    dend_1 { pt3dadd( -55.1849, 112.543, -41.1795, 0.12 ) }
    dend_1 { pt3dadd( -55.9782, 113.777, -41.2854, 0.12 ) }
    dend_1 { pt3dadd( -56.6359, 114.755, -41.4131, 0.12 ) }
    dend_1 { pt3dadd( -57.0258, 115.332, -41.5045, 0.12 ) }
    dend_1 { pt3dadd( -57.1726, 115.555, -41.5429, 0.84 ) }
    dend_1 { pt3dadd( -57.4665, 116.015, -41.6282, 0.96 ) }
    dend_1 { pt3dadd( -57.9183, 116.759, -41.7661, 0.72 ) }
    dend_1 { pt3dadd( -58.4064, 117.623, -41.9415, 0.12 ) }
    dend_1 { pt3dadd( -59.0202, 118.719, -42.1664, 0.12 ) }
    dend_1 { pt3dadd( -59.3037, 119.221, -42.302, 0.36 ) }
    dend_1 { pt3dadd( -59.7768, 120.06, -42.5578, 0.12 ) }
    dend_1 { pt3dadd( -60.1735, 120.806, -42.8011, 0.12 ) }
    dend_1 { pt3dadd( -60.3807, 121.231, -42.94, 0.12 ) }
    dend_1 { pt3dadd( -60.5633, 121.629, -43.0618, 0.72 ) }
    dend_1 { pt3dadd( -61.1827, 122.959, -43.5048, 0.12 ) }
    dend_1 { pt3dadd( -61.6109, 123.841, -43.8643, 0.12 ) }
    dend_1 { pt3dadd( -61.9725, 124.564, -44.1879, 0.12 ) }
    dend_1 { pt3dadd( -62.1547, 124.931, -44.3589, 0.12 ) }
    dend_1 { pt3dadd( -62.367, 125.376, -44.599, 0.12 ) }
    dend_1 { pt3dadd( -62.6337, 125.972, -44.9405, 0.36 ) }
    dend_1 { pt3dadd( -63.0446, 126.875, -45.4542, 0.12 ) }
    dend_1 { pt3dadd( -63.3817, 127.537, -45.9187, 0.12 ) }
    dend_1 { pt3dadd( -63.5161, 127.774, -46.0995, 0.48 ) }
    dend_1 { pt3dadd( -64.0084, 128.757, -46.7477, 0.24 ) }
    dend_1 { pt3dadd( -64.0436, 128.847, -46.8012, 0.12 ) }
    dend_1 { pt3dadd( -64.1782, 129.258, -47.0354, 0.12 ) }
    dend_1 { pt3dadd( -64.2972, 129.673, -47.2183, 0.12 ) }
    dend_1 { pt3dadd( -64.4163, 130.086, -47.3897, 0.12 ) }
    dend_1 { pt3dadd( -64.7192, 131.191, -47.7902, 0.12 ) }
    dend_1 { pt3dadd( -64.8711, 131.805, -48.0311, 0.36 ) }
    dend_1 { pt3dadd( -64.9853, 132.376, -48.2954, 0.12 ) }
    dend_1 { pt3dadd( -65.2, 133.577, -48.8435, 0.12 ) }
    dend_1 { pt3dadd( -65.2633, 133.938, -48.9889, 0.6 ) }
    dend_1 { pt3dadd( -65.3369, 134.308, -49.1208, 0.6 ) }
    dend_1 { pt3dadd( -65.6785, 135.684, -49.5562, 0.12 ) }
    dend_1 { pt3dadd( -65.8833, 136.383, -49.7952, 0.12 ) }
    dend_1 { pt3dadd( -66.4912, 138.198, -50.453, 0.12 ) }
    dend_1 { pt3dadd( -66.9918, 139.508, -50.9626, 0.12 ) }
    dend_1 { pt3dadd( -67.2181, 140.045, -51.1671, 0.12 ) }
    dend_1 { pt3dadd( -67.4165, 140.443, -51.3099, 0.84 ) }
    dend_1 { pt3dadd( -68.315, 142.02, -51.8923, 0.12 ) }
    dend_1 { pt3dadd( -68.6356, 142.511, -52.1234, 0.12 ) }
    dend_1 { pt3dadd( -69.0077, 143.052, -52.4295, 0.12 ) }
    dend_1 { pt3dadd( -69.3233, 143.517, -52.6858, 0.12 ) }
    dend_1 { pt3dadd( -69.671, 144.063, -52.9331, 0.48 ) }
    dend_1 { pt3dadd( -70.2398, 145.025, -53.2472, 0.12 ) }
    dend_1 { pt3dadd( -70.5848, 145.662, -53.3453, 0.12 ) }
    dend_1 { pt3dadd( -71.0895, 146.633, -53.4527, 0.12 ) }
    dend_1 { pt3dadd( -71.4844, 147.397, -53.5066, 0.12 ) }
    dend_1 { pt3dadd( -71.9092, 148.224, -53.5349, 0.48 ) }
    dend_1 { pt3dadd( -72.1185, 148.643, -53.5347, 0.12 ) }
    dend_1 { pt3dadd( -73.0978, 150.562, -53.4277, 0.12 ) }
    dend_1 { pt3dadd( -73.4977, 151.315, -53.3814, 0.12 ) }
    dend_1 { pt3dadd( -73.9596, 152.133, -53.3265, 0.12 ) }
    dend_1 { pt3dadd( -74.1845, 152.542, -53.3005, 0.6 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.12 ) }
    axon_1 { pt3dadd( -12.2185, 50.4988, -0.00167934, 0.12 ) }
    axon_1 { pt3dadd( -15.8707, 65.0474, -0.00167934, 0.12 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 65/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 0.33062, 22.0142, -3.84156, 0.96 ) }
    apic_3 { pt3dadd( -0.0383134, 22.4271, -4.29123, 0.96 ) }
    apic_3 { pt3dadd( -0.460705, 22.919, -4.70934, 0.96 ) }
    apic_3 { pt3dadd( -0.855756, 23.3889, -4.99381, 0.6 ) }
    apic_3 { pt3dadd( -2.89089, 25.8395, -6.20083, 0.72 ) }
    apic_3 { pt3dadd( -3.32387, 26.3772, -6.42583, 0.12 ) }
    apic_3 { pt3dadd( -3.87562, 27.1059, -6.67524, 0.12 ) }
    apic_3 { pt3dadd( -4.46544, 27.9416, -6.9417, 0.24 ) }
    apic_3 { pt3dadd( -5.2796, 29.1962, -7.25924, 0.6 ) }
    apic_3 { pt3dadd( -5.99749, 30.405, -7.45883, 0.6 ) }
    apic_3 { pt3dadd( -6.34546, 31.0367, -7.51473, 0.12 ) }
    apic_3 { pt3dadd( -6.94854, 32.1602, -7.6765, 0.12 ) }
    apic_3 { pt3dadd( -7.50492, 33.2286, -7.87994, 0.12 ) }
    apic_3 { pt3dadd( -7.9495, 34.0772, -8.10267, 0.48 ) }
    apic_3 { pt3dadd( -8.17326, 34.494, -8.23195, 0.48 ) }
    apic_3 { pt3dadd( -8.84113, 35.5645, -8.65939, 0.12 ) }
    apic_3 { pt3dadd( -9.33948, 36.2357, -8.97937, 0.12 ) }
    apic_3 { pt3dadd( -9.74896, 36.7041, -9.25563, 0.6 ) }
    apic_3 { pt3dadd( -10.4429, 37.4255, -9.69778, 0.12 ) }
    apic_3 { pt3dadd( -10.998, 37.9552, -10.0786, 0.12 ) }
    apic_3 { pt3dadd( -12.2249, 39.097, -10.9182, 0.12 ) }
    apic_3 { pt3dadd( -12.8012, 39.6227, -11.2715, 0.12 ) }
    apic_3 { pt3dadd( -13.293, 40.0522, -11.5573, 0.12 ) }
    apic_3 { pt3dadd( -13.7665, 40.4678, -11.7985, 0.96 ) }
    apic_3 { pt3dadd( -14.8239, 41.4092, -12.2177, 0.12 ) }
    apic_3 { pt3dadd( -15.2305, 41.7687, -12.3851, 0.12 ) }
    apic_3 { pt3dadd( -15.9333, 42.3946, -12.6165, 0.12 ) }
    apic_3 { pt3dadd( -16.4264, 42.8136, -12.7594, 0.96 ) }
    apic_3 { pt3dadd( -16.9998, 43.2851, -12.9061, 1.08 ) }
    apic_3 { pt3dadd( -17.2305, 43.4667, -12.9623, 1.08 ) }
    apic_3 { pt3dadd( -18.8207, 44.7065, -13.3098, 0.24 ) }
    apic_3 { pt3dadd( -19.6615, 45.36, -13.5274, 0.12 ) }
    apic_3 { pt3dadd( -20.5784, 46.0813, -13.7871, 0.12 ) }
    apic_3 { pt3dadd( -21.0395, 46.4468, -13.9114, 0.72 ) }
    apic_3 { pt3dadd( -21.4062, 46.7469, -14.0033, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_3 { pt3dadd( -22.1897, 47.4504, -14.1485, 0.36 ) }
    apic_3 { pt3dadd( -22.5658, 47.8365, -14.1669, 0.12 ) }
    apic_3 { pt3dadd( -22.9391, 48.2594, -14.1856, 0.12 ) }
    apic_3 { pt3dadd( -23.2461, 48.6379, -14.1904, 0.48 ) }
    apic_3 { pt3dadd( -23.5349, 49.0081, -14.1726, 0.12 ) }
    apic_3 { pt3dadd( -24.0813, 49.7199, -14.1431, 0.12 ) }
    apic_3 { pt3dadd( -24.3819, 50.1114, -14.1165, 0.12 ) }
    apic_3 { pt3dadd( -24.8775, 50.7222, -14.0678, 0.84 ) }
    apic_3 { pt3dadd( -25.3066, 51.2341, -14.0059, 0.72 ) }
    apic_3 { pt3dadd( -25.625, 51.5962, -13.9433, 0.12 ) }
    apic_3 { pt3dadd( -25.97, 51.9725, -13.8511, 0.12 ) }
    apic_3 { pt3dadd( -26.4772, 52.5179, -13.6934, 0.12 ) }
    apic_3 { pt3dadd( -26.9894, 53.0913, -13.5145, 0.12 ) }
    apic_3 { pt3dadd( -27.4635, 53.6391, -13.3274, 0.48 ) }
    apic_3 { pt3dadd( -28.0018, 54.2714, -13.093, 0.6 ) }
    apic_3 { pt3dadd( -28.326, 54.6658, -12.9435, 0.24 ) }
    apic_3 { pt3dadd( -28.8009, 55.2377, -12.7709, 0.24 ) }
    apic_3 { pt3dadd( -29.1113, 55.6057, -12.6998, 0.12 ) }
    apic_3 { pt3dadd( -29.4796, 56.0426, -12.6591, 0.12 ) }
    apic_3 { pt3dadd( -29.7953, 56.4002, -12.6547, 0.6 ) }
    apic_3 { pt3dadd( -30.3869, 57.0277, -12.6628, 0.84 ) }
    apic_3 { pt3dadd( -31.3644, 57.9831, -12.6811, 0.12 ) }
    apic_3 { pt3dadd( -31.9187, 58.4904, -12.6833, 0.12 ) }
    apic_3 { pt3dadd( -32.4234, 58.9313, -12.6721, 0.24 ) }
    apic_3 { pt3dadd( -32.7452, 59.2064, -12.6559, 0.12 ) }
    apic_3 { pt3dadd( -33.5659, 59.8949, -12.5772, 0.12 ) }
    apic_3 { pt3dadd( -34.0375, 60.2764, -12.5304, 0.48 ) }
    apic_3 { pt3dadd( -34.5535, 60.7044, -12.4621, 0.12 ) }
    apic_3 { pt3dadd( -34.9865, 61.0708, -12.4268, 0.12 ) }
    apic_3 { pt3dadd( -35.2026, 61.264, -12.4181, 0.48 ) }
    apic_3 { pt3dadd( -35.6675, 61.7507, -12.4111, 0.48 ) }
    apic_3 { pt3dadd( -36.3158, 62.4722, -12.5042, 0.12 ) }
    apic_3 { pt3dadd( -36.7581, 62.9715, -12.6015, 0.12 ) }
    apic_3 { pt3dadd( -37.3109, 63.5907, -12.8005, 0.48 ) }
    apic_3 { pt3dadd( -37.5628, 63.8856, -12.9082, 0.12 ) }
    apic_3 { pt3dadd( -38.3987, 64.9259, -13.2582, 0.12 ) }
    apic_3 { pt3dadd( -39.404, 66.2532, -13.6597, 0.84 ) }
    apic_3 { pt3dadd( -39.7901, 66.7915, -13.7987, 0.84 ) }
    apic_3 { pt3dadd( -40.5864, 67.925, -14.1008, 0.12 ) }
    apic_3 { pt3dadd( -41.3256, 68.9939, -14.4016, 0.12 ) }
    apic_3 { pt3dadd( -42.2283, 70.323, -14.755, 0.12 ) }
    apic_3 { pt3dadd( -42.4924, 70.7233, -14.8461, 0.6 ) }
    apic_3 { pt3dadd( -42.8185, 71.2326, -14.9513, 0.72 ) }
    apic_3 { pt3dadd( -43.2348, 71.8553, -15.1284, 0.12 ) }
    apic_3 { pt3dadd( -43.913, 72.8144, -15.4251, 0.12 ) }
    apic_3 { pt3dadd( -44.3025, 73.3269, -15.6284, 0.12 ) }
    apic_3 { pt3dadd( -44.63, 73.7326, -15.8419, 0.72 ) }
    apic_3 { pt3dadd( -45.4906, 74.7969, -16.3866, 0.72 ) }
    apic_3 { pt3dadd( -46.0779, 75.5273, -16.7395, 0.12 ) }
    apic_3 { pt3dadd( -47.0158, 76.7262, -17.3385, 0.12 ) }
    apic_3 { pt3dadd( -47.2828, 77.093, -17.5146, 0.48 ) }
    apic_3 { pt3dadd( -47.9129, 78.0561, -17.9249, 0.12 ) }
    apic_3 { pt3dadd( -48.8662, 79.6431, -18.4969, 0.12 ) }
    apic_3 { pt3dadd( -49.008, 79.8995, -18.5781, 0.48 ) }
    apic_3 { pt3dadd( -49.5548, 81.0144, -18.8825, 0.12 ) }
    apic_3 { pt3dadd( -50.009, 82.0347, -19.1771, 0.12 ) }
    apic_3 { pt3dadd( -50.5435, 83.348, -19.5289, 0.12 ) }
    apic_3 { pt3dadd( -50.6501, 83.6251, -19.6018, 0.48 ) }
    apic_3 { pt3dadd( -51.0134, 84.6164, -19.8898, 0.12 ) }
    apic_3 { pt3dadd( -51.8889, 86.9323, -20.5837, 0.12 ) }
    apic_3 { pt3dadd( -52.107, 87.5017, -20.7424, 0.6 ) }
    apic_3 { pt3dadd( -52.2475, 87.8723, -20.8478, 0.72 ) }
    apic_3 { pt3dadd( -52.5868, 88.7608, -21.083, 0.12 ) }
    apic_3 { pt3dadd( -52.9281, 89.6673, -21.285, 0.24 ) }
    apic_3 { pt3dadd( -53.194, 90.3679, -21.3934, 0.12 ) }
    apic_3 { pt3dadd( -53.5571, 91.2796, -21.5156, 0.12 ) }
    apic_3 { pt3dadd( -54.193, 92.8728, -21.6603, 0.12 ) }
    apic_3 { pt3dadd( -54.4064, 93.4125, -21.6902, 0.48 ) }
    apic_3 { pt3dadd( -54.4539, 93.5412, -21.6886, 0.12 ) }
    apic_3 { pt3dadd( -54.7067, 94.2233, -21.6661, 0.12 ) }
    apic_3 { pt3dadd( -54.8053, 94.5122, -21.6365, 0.48 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 0.33062, 22.0142, -3.84156, 0.96 ) }
    apic_2 { pt3dadd( 0.269482, 23.082, -3.82348, 0.96 ) }
    apic_2 { pt3dadd( 0.230147, 23.7563, -3.81339, 0.96 ) }
    apic_2 { pt3dadd( 0.153366, 24.8305, -3.79975, 0.6 ) }
    apic_2 { pt3dadd( 0.087561, 25.769, -3.78914, 0.48 ) }
    apic_2 { pt3dadd( -0.0110993, 27.2436, -3.77435, 0.48 ) }
    apic_2 { pt3dadd( -0.128574, 28.9993, -3.75941, 0.48 ) }
    apic_2 { pt3dadd( -0.172994, 29.6596, -3.74582, 0.96 ) }
    apic_2 { pt3dadd( -0.22127, 30.3825, -3.72197, 1.44 ) }
    apic_2 { pt3dadd( -0.276611, 31.1877, -3.68725, 1.08 ) }
    apic_2 { pt3dadd( -0.338198, 32.1268, -3.63984, 0.84 ) }
    apic_2 { pt3dadd( -0.416852, 33.3301, -3.57247, 0.84 ) }
    apic_2 { pt3dadd( -0.454224, 34.1406, -3.52834, 0.36 ) }
    apic_2 { pt3dadd( -0.49705, 35.6142, -3.45899, 0.36 ) }
    apic_2 { pt3dadd( -0.50405, 36.1519, -3.42809, 0.72 ) }
    apic_2 { pt3dadd( -0.507571, 37.2155, -3.36085, 1.32 ) }
    apic_2 { pt3dadd( -0.498, 37.7528, -3.32619, 1.32 ) }
    apic_2 { pt3dadd( -0.455716, 38.8358, -3.26281, 0.6 ) }
    apic_2 { pt3dadd( -0.401504, 39.9075, -3.21441, 0.48 ) }
    apic_2 { pt3dadd( -0.350451, 40.8457, -3.16718, 0.6 ) }
    apic_2 { pt3dadd( -0.324222, 41.3885, -3.13924, 0.96 ) }
    apic_2 { pt3dadd( -0.289194, 42.2043, -3.07884, 0.84 ) }
    apic_2 { pt3dadd( -0.249486, 43.3991, -2.97362, 0.72 ) }
    apic_2 { pt3dadd( -0.230212, 44.3253, -2.88227, 0.72 ) }
    apic_2 { pt3dadd( -0.218582, 45.0084, -2.81792, 1.08 ) }
    apic_2 { pt3dadd( -0.21266, 45.5344, -2.78078, 1.2 ) }
    apic_2 { pt3dadd( -0.212051, 46.8666, -2.66744, 0.6 ) }
    apic_2 { pt3dadd( -0.223171, 47.7937, -2.58262, 0.6 ) }
    apic_2 { pt3dadd( -0.232204, 48.1957, -2.54567, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_2 { pt3dadd( -0.255961, 48.8684, -2.49164, 0.96 ) }
    apic_2 { pt3dadd( -0.290898, 49.5925, -2.45625, 0.84 ) }
    apic_2 { pt3dadd( -0.370071, 50.8837, -2.43203, 0.36 ) }
    apic_2 { pt3dadd( -0.48414, 52.3549, -2.44872, 0.36 ) }
    apic_2 { pt3dadd( -0.555824, 53.1595, -2.44924, 0.72 ) }
    apic_2 { pt3dadd( -0.650163, 54.1097, -2.43438, 1.08 ) }
    apic_2 { pt3dadd( -0.791184, 55.3517, -2.40017, 0.6 ) }
    apic_2 { pt3dadd( -0.919469, 56.4088, -2.3675, 0.48 ) }
    apic_2 { pt3dadd( -1.00893, 57.0888, -2.35282, 0.48 ) }
    apic_2 { pt3dadd( -1.16654, 58.2545, -2.31699, 1.2 ) }
    apic_2 { pt3dadd( -1.31823, 59.3421, -2.27439, 0.48 ) }
    apic_2 { pt3dadd( -1.51517, 60.687, -2.20928, 0.48 ) }
    apic_2 { pt3dadd( -1.61969, 61.3806, -2.15673, 0.12 ) }
    apic_2 { pt3dadd( -1.77882, 62.4383, -2.07074, 0.12 ) }
    apic_2 { pt3dadd( -1.828, 62.8365, -2.02841, 0.12 ) }
    apic_2 { pt3dadd( -1.86221, 63.247, -1.98008, 0.96 ) }
    apic_2 { pt3dadd( -1.89836, 64.0567, -1.86761, 0.96 ) }
    apic_2 { pt3dadd( -1.91817, 65.1293, -1.6991, 0.72 ) }
    apic_2 { pt3dadd( -1.92072, 65.6602, -1.61264, 0.84 ) }
    apic_2 { pt3dadd( -1.91655, 67.0247, -1.37647, 0.48 ) }
    apic_2 { pt3dadd( -1.90284, 68.3476, -1.16187, 0.48 ) }
    apic_2 { pt3dadd( -1.88594, 69.4012, -1.008, 0.48 ) }
    apic_2 { pt3dadd( -1.8706, 70.3457, -0.894165, 1.08 ) }
    apic_2 { pt3dadd( -1.86001, 70.8704, -0.845025, 1.32 ) }
    apic_2 { pt3dadd( -1.82242, 72.4339, -0.720523, 0.36 ) }
    apic_2 { pt3dadd( -1.77289, 74.1744, -0.621199, 0.36 ) }
    apic_2 { pt3dadd( -1.7343, 75.227, -0.567808, 0.48 ) }
    apic_2 { pt3dadd( -1.64945, 76.9511, -0.497703, 0.6 ) }
    apic_2 { pt3dadd( -1.58713, 78.0618, -0.464735, 0.72 ) }
    apic_2 { pt3dadd( -1.54175, 79.0015, -0.451383, 0.72 ) }
    apic_2 { pt3dadd( -1.52113, 79.6948, -0.453041, 0.72 ) }
    apic_2 { pt3dadd( -1.52044, 80.9066, -0.471305, 0.36 ) }
    apic_2 { pt3dadd( -1.56071, 82.516, -0.442993, 0.48 ) }
    apic_2 { pt3dadd( -1.65636, 84.5104, -0.355132, 0.48 ) }
    apic_2 { pt3dadd( -1.73759, 85.607, -0.285492, 0.48 ) }
    apic_2 { pt3dadd( -1.91531, 87.486, -0.13318, 0.96 ) }
    apic_2 { pt3dadd( -2.16857, 89.7733, 0.105941, 0.48 ) }
    apic_2 { pt3dadd( -2.37813, 91.4086, 0.305855, 0.12 ) }
    apic_2 { pt3dadd( -2.47162, 92.0727, 0.39584, 0.12 ) }
    apic_2 { pt3dadd( -2.65969, 93.4056, 0.587208, 0.72 ) }
    apic_2 { pt3dadd( -2.71295, 93.8118, 0.650012, 0.84 ) }
    apic_2 { pt3dadd( -2.81705, 94.6616, 0.775559, 0.48 ) }
    apic_2 { pt3dadd( -2.98843, 96.1268, 0.998077, 0.48 ) }
    apic_2 { pt3dadd( -3.121, 97.445, 1.15312, 0.48 ) }
    apic_2 { pt3dadd( -3.17934, 98.0986, 1.23456, 0.96 ) }
    apic_2 { pt3dadd( -3.25614, 99.1202, 1.36855, 0.36 ) }
    apic_2 { pt3dadd( -3.35716, 100.58, 1.5556, 0.36 ) }
    apic_2 { pt3dadd( -3.44003, 101.859, 1.7107, 0.36 ) }
    apic_2 { pt3dadd( -3.51421, 103.188, 1.87355, 0.36 ) }
    apic_2 { pt3dadd( -3.55273, 103.849, 1.94747, 0.84 ) }
    apic_2 { pt3dadd( -3.57734, 104.25, 1.99006, 0.84 ) }
    apic_2 { pt3dadd( -3.62971, 105.063, 2.05997, 0.36 ) }
    apic_2 { pt3dadd( -3.67499, 105.72, 2.12609, 0.12 ) }
    apic_2 { pt3dadd( -3.72111, 106.391, 2.1568, 0.96 ) }
    apic_2 { pt3dadd( -3.77838, 107.197, 2.1778, 1.32 ) }
    apic_2 { pt3dadd( -3.86327, 108.364, 2.25188, 0.36 ) }
    apic_2 { pt3dadd( -3.95718, 109.697, 2.36623, 0.36 ) }
    apic_2 { pt3dadd( -4.06111, 111.258, 2.52545, 0.6 ) }
    apic_2 { pt3dadd( -4.15296, 112.794, 2.6801, 0.48 ) }
    apic_2 { pt3dadd( -4.21067, 113.853, 2.7813, 0.48 ) }
    apic_2 { pt3dadd( -4.28727, 115.415, 2.91396, 0.84 ) }
    apic_2 { pt3dadd( -4.33151, 116.22, 2.96457, 0.96 ) }
    apic_2 { pt3dadd( -4.35093, 116.488, 2.98057, 0.96 ) }
    apic_2 { pt3dadd( -4.41557, 117.153, 3.03524, 0.36 ) }
    apic_2 { pt3dadd( -4.48916, 117.829, 3.12225, 0.36 ) }
    apic_2 { pt3dadd( -4.55969, 118.498, 3.18347, 0.84 ) }
    apic_2 { pt3dadd( -4.63362, 119.345, 3.22438, 1.32 ) }
    apic_2 { pt3dadd( -4.6729, 119.885, 3.27732, 0.96 ) }
    apic_2 { pt3dadd( -4.72586, 121.012, 3.42747, 0.36 ) }
    apic_2 { pt3dadd( -4.75929, 122.461, 3.66021, 0.36 ) }
    apic_2 { pt3dadd( -4.74811, 123.38, 3.79994, 0.36 ) }
    apic_2 { pt3dadd( -4.70999, 124.179, 3.90833, 0.36 ) }
    apic_2 { pt3dadd( -4.62773, 125.162, 4.02419, 0.72 ) }
    apic_2 { pt3dadd( -4.55345, 125.866, 4.11114, 0.36 ) }
    apic_2 { pt3dadd( -4.42844, 126.928, 4.23114, 0.24 ) }
    apic_2 { pt3dadd( -4.34854, 127.594, 4.31651, 0.84 ) }
    apic_2 { pt3dadd( -4.27402, 128.275, 4.40412, 0.84 ) }
    apic_2 { pt3dadd( -4.22922, 128.83, 4.46464, 0.72 ) }
    apic_2 { pt3dadd( -4.18873, 129.708, 4.58212, 0.12 ) }
    apic_2 { pt3dadd( -4.17281, 130.767, 4.77188, 0.12 ) }
    apic_2 { pt3dadd( -4.17672, 131.542, 4.94664, 0.48 ) }
    apic_2 { pt3dadd( -4.18243, 131.937, 5.02799, 0.24 ) }
    apic_2 { pt3dadd( -4.2219, 133.518, 5.28775, 0.24 ) }
    apic_2 { pt3dadd( -4.25483, 134.604, 5.4396, 0.72 ) }
    apic_2 { pt3dadd( -4.27416, 135.273, 5.51147, 1.08 ) }
    apic_2 { pt3dadd( -4.3119, 136.38, 5.62542, 0.96 ) }
    apic_2 { pt3dadd( -4.36103, 137.562, 5.75667, 0.72 ) }
    apic_2 { pt3dadd( -4.40469, 138.507, 5.86035, 0.6 ) }
    apic_2 { pt3dadd( -4.44537, 139.362, 5.94122, 0.12 ) }
    apic_2 { pt3dadd( -4.49218, 140.164, 6.02438, 0.12 ) }
    apic_2 { pt3dadd( -4.55054, 141.086, 6.19622, 0.12 ) }
    apic_2 { pt3dadd( -4.60258, 141.899, 6.39871, 0.48 ) }
    apic_2 { pt3dadd( -4.62848, 142.272, 6.51263, 0.12 ) }
    apic_2 { pt3dadd( -4.73299, 143.661, 6.9602, 0.12 ) }
    apic_2 { pt3dadd( -4.82586, 144.77, 7.29086, 0.6 ) }
    apic_2 { pt3dadd( -4.93132, 145.848, 7.59477, 0.12 ) }
    apic_2 { pt3dadd( -5.05252, 147.141, 7.88941, 0.12 ) }
    apic_2 { pt3dadd( -5.08965, 147.558, 7.96087, 0.12 ) }
    apic_2 { pt3dadd( -5.15438, 148.342, 8.06917, 0.6 ) }
    apic_2 { pt3dadd( -5.28605, 150.071, 8.24526, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_2 { pt3dadd( -5.34866, 151.037, 8.30321, 1.08 ) }
    apic_2 { pt3dadd( -5.43684, 152.676, 8.36432, 0.48 ) }
    apic_2 { pt3dadd( -5.47566, 153.743, 8.41013, 0.12 ) }
    apic_2 { pt3dadd( -5.51166, 155.526, 8.48979, 0.12 ) }
    apic_2 { pt3dadd( -5.51104, 156.187, 8.51806, 0.12 ) }
    apic_2 { pt3dadd( -5.48709, 157.389, 8.56596, 0.12 ) }
    apic_2 { pt3dadd( -5.45954, 158.24, 8.59093, 0.72 ) }
    apic_2 { pt3dadd( -5.44117, 158.801, 8.60173, 0.12 ) }
    apic_2 { pt3dadd( -5.41237, 159.608, 8.59649, 0.12 ) }
    apic_2 { pt3dadd( -5.35503, 161.216, 8.54455, 0.48 ) }
    apic_2 { pt3dadd( -5.31179, 162.592, 8.47804, 0.6 ) }
    apic_2 { pt3dadd( -5.28881, 163.534, 8.41976, 0.6 ) }
    apic_2 { pt3dadd( -5.27994, 164.207, 8.38524, 0.84 ) }
    apic_2 { pt3dadd( -5.28027, 165.138, 8.36135, 0.6 ) }
    apic_2 { pt3dadd( -5.29862, 166.203, 8.36975, 0.72 ) }
    apic_2 { pt3dadd( -5.3341, 167.047, 8.40221, 0.36 ) }
    apic_2 { pt3dadd( -5.41065, 168.239, 8.51247, 0.48 ) }
    apic_2 { pt3dadd( -5.5439, 169.745, 8.69931, 0.48 ) }
    apic_2 { pt3dadd( -5.67844, 171.266, 8.91683, 0.6 ) }
    apic_2 { pt3dadd( -5.79429, 172.464, 9.10733, 0.48 ) }
    apic_2 { pt3dadd( -5.86579, 173.135, 9.22238, 0.48 ) }
    apic_2 { pt3dadd( -6.01848, 174.536, 9.53555, 0.12 ) }
    apic_2 { pt3dadd( -6.11038, 175.393, 9.75658, 0.12 ) }
    apic_2 { pt3dadd( -6.22874, 176.538, 10.0586, 0.12 ) }
    apic_2 { pt3dadd( -6.2752, 177.004, 10.1794, 0.96 ) }
    apic_2 { pt3dadd( -6.35128, 177.664, 10.3429, 1.08 ) }
    apic_2 { pt3dadd( -6.5755, 179.321, 10.7107, 0.36 ) }
    apic_2 { pt3dadd( -6.67825, 179.973, 10.8337, 0.36 ) }
    apic_2 { pt3dadd( -6.95287, 181.536, 11.1128, 0.36 ) }
    apic_2 { pt3dadd( -7.15531, 182.481, 11.2566, 0.36 ) }
    apic_2 { pt3dadd( -7.38063, 183.465, 11.3661, 0.24 ) }
    apic_2 { pt3dadd( -7.55462, 184.17, 11.4053, 0.24 ) }
    apic_2 { pt3dadd( -7.6943, 184.7, 11.3979, 0.6 ) }
    apic_2 { pt3dadd( -7.8048, 185.087, 11.3913, 0.6 ) }
    apic_2 { pt3dadd( -8.04078, 185.894, 11.4036, 0.36 ) }
    apic_2 { pt3dadd( -8.32535, 186.875, 11.442, 0.36 ) }
    apic_2 { pt3dadd( -8.65064, 188.032, 11.5078, 0.24 ) }
    apic_2 { pt3dadd( -9.10979, 189.747, 11.6327, 0.24 ) }
    apic_2 { pt3dadd( -9.41148, 190.963, 11.7312, 0.24 ) }
    apic_2 { pt3dadd( -9.6211, 191.895, 11.8169, 0.24 ) }
    apic_2 { pt3dadd( -9.69542, 192.3, 11.8582, 0.6 ) }
    apic_2 { pt3dadd( -9.77221, 192.83, 11.9125, 0.6 ) }
    apic_2 { pt3dadd( -9.83597, 193.378, 11.9644, 0.6 ) }
    apic_2 { pt3dadd( -9.92004, 194.437, 12.0442, 0.36 ) }
    apic_2 { pt3dadd( -9.94288, 194.737, 12.0555, 0.12 ) }
    apic_2 { pt3dadd( -10.0496, 195.798, 12.0495, 0.12 ) }
    apic_2 { pt3dadd( -10.1552, 196.631, 12.03, 0.12 ) }
    apic_2 { pt3dadd( -10.2452, 197.178, 12.008, 0.36 ) }
    apic_2 { pt3dadd( -10.3046, 197.472, 11.9932, 0.12 ) }
    apic_2 { pt3dadd( -10.5358, 198.456, 11.9316, 0.12 ) }
    apic_2 { pt3dadd( -10.6584, 198.978, 11.8964, 0.48 ) }
    apic_2 { pt3dadd( -10.7471, 199.41, 11.8663, 0.12 ) }
    apic_2 { pt3dadd( -10.8216, 199.95, 11.8319, 0.12 ) }
    apic_2 { pt3dadd( -10.8844, 201.024, 11.7731, 0.12 ) }
    apic_2 { pt3dadd( -10.9078, 201.878, 11.7299, 0.72 ) }
    apic_2 { pt3dadd( -10.896, 202.553, 11.7014, 0.84 ) }
    apic_2 { pt3dadd( -10.8701, 203.154, 11.685, 0.36 ) }
    apic_2 { pt3dadd( -10.7984, 203.995, 11.6858, 0.36 ) }
    apic_2 { pt3dadd( -10.7058, 204.589, 11.6864, 0.48 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.96846, -23.6826, 8.59589, 0.6 ) }
    dend_33 { pt3dadd( -4.44274, -24.8848, 7.46432, 0.6 ) }
    dend_33 { pt3dadd( -4.99574, -25.3464, 7.03439, 0.48 ) }
    dend_33 { pt3dadd( -5.61903, -25.8861, 6.57159, 0.48 ) }
    dend_33 { pt3dadd( -6.27145, -26.4885, 6.10413, 0.48 ) }
    dend_33 { pt3dadd( -6.73625, -26.9368, 5.80412, 0.48 ) }
    dend_33 { pt3dadd( -7.53086, -27.7374, 5.33851, 0.6 ) }
    dend_33 { pt3dadd( -8.16636, -28.4592, 5.04835, 0.72 ) }
    dend_33 { pt3dadd( -9.04931, -29.4842, 4.63405, 0.84 ) }
    dend_33 { pt3dadd( -9.78381, -30.3715, 4.29967, 0.84 ) }
    dend_33 { pt3dadd( -10.3075, -31.0343, 4.11169, 1.08 ) }
    dend_33 { pt3dadd( -10.7524, -31.6414, 3.98641, 1.32 ) }
    dend_33 { pt3dadd( -11.2135, -32.3381, 3.88914, 1.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.96846, -23.6826, 8.59589, 0.96 ) }
    dend_32 { pt3dadd( -2.98662, -24.7899, 9.19979, 0.96 ) }
    dend_32 { pt3dadd( -2.97589, -25.2742, 9.41924, 0.6 ) }
    dend_32 { pt3dadd( -2.92969, -26.0417, 9.7798, 0.48 ) }
    dend_32 { pt3dadd( -2.87174, -26.7383, 10.0991, 0.12 ) }
    dend_32 { pt3dadd( -2.79609, -27.5051, 10.4534, 0.12 ) }
    dend_32 { pt3dadd( -2.75974, -27.8533, 10.6118, 0.72 ) }
    dend_32 { pt3dadd( -2.69203, -28.6636, 10.9212, 0.72 ) }
    dend_32 { pt3dadd( -2.63114, -29.4882, 11.2761, 0.6 ) }
    dend_32 { pt3dadd( -2.60565, -29.8818, 11.4667, 0.6 ) }
    dend_32 { pt3dadd( -2.58952, -30.4722, 11.7547, 0.36 ) }
    dend_32 { pt3dadd( -2.58605, -30.7469, 11.8975, 0.36 ) }
    dend_32 { pt3dadd( -2.58422, -31.3452, 12.2027, 0.36 ) }
    dend_32 { pt3dadd( -2.57788, -32.425, 12.7633, 0.36 ) }
    dend_32 { pt3dadd( -2.56429, -33.0213, 13.046, 0.6 ) }
    dend_32 { pt3dadd( -2.53185, -33.4998, 13.2784, 0.6 ) }
    dend_32 { pt3dadd( -2.46598, -33.9781, 13.5, 0.72 ) }
    dend_32 { pt3dadd( -2.38931, -34.3619, 13.676, 0.84 ) }
    dend_32 { pt3dadd( -2.20011, -35.1101, 13.9931, 0.6 ) }
    dend_32 { pt3dadd( -2.0793, -35.5953, 14.1785, 0.48 ) }
    dend_32 { pt3dadd( -2.00898, -36.0168, 14.3577, 0.36 ) }
    dend_32 { pt3dadd( -1.98192, -36.5644, 14.6448, 0.36 ) }
    dend_32 { pt3dadd( -1.99455, -36.828, 14.7897, 0.6 ) }
    dend_32 { pt3dadd( -2.0376, -37.237, 15.0101, 0.72 ) }
    dend_32 { pt3dadd( -2.12949, -37.9737, 15.3655, 0.72 ) }
    dend_32 { pt3dadd( -2.17046, -38.5955, 15.7169, 0.48 ) }
    dend_32 { pt3dadd( -2.16946, -39.2, 16.0653, 0.6 ) }
    dend_32 { pt3dadd( -2.14641, -39.6838, 16.3519, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -2.11414, -40.0652, 16.5628, 1.08 ) }
    dend_32 { pt3dadd( -2.03787, -40.6928, 16.8893, 1.32 ) }
    dend_32 { pt3dadd( -1.79709, -42.3241, 17.6367, 0.72 ) }
    dend_32 { pt3dadd( -1.71157, -42.8864, 17.8645, 0.36 ) }
    dend_32 { pt3dadd( -1.54022, -44.1058, 18.3161, 0.48 ) }
    dend_32 { pt3dadd( -1.45415, -44.9104, 18.6052, 0.6 ) }
    dend_32 { pt3dadd( -1.43186, -45.2227, 18.7065, 0.84 ) }
    dend_32 { pt3dadd( -1.40953, -45.9528, 18.9012, 0.84 ) }
    dend_32 { pt3dadd( -1.41638, -46.7943, 19.0503, 0.72 ) }
    dend_32 { pt3dadd( -1.42027, -47.5787, 19.1626, 0.48 ) }
    dend_32 { pt3dadd( -1.39246, -48.4171, 19.2677, 0.36 ) }
    dend_32 { pt3dadd( -1.35995, -48.9422, 19.335, 0.36 ) }
    dend_32 { pt3dadd( -1.30236, -49.5775, 19.4125, 0.6 ) }
    dend_32 { pt3dadd( -1.20758, -50.3152, 19.4942, 0.6 ) }
    dend_32 { pt3dadd( -1.06657, -51.0507, 19.5886, 0.6 ) }
    dend_32 { pt3dadd( -0.865359, -51.8153, 19.69, 0.6 ) }
    dend_32 { pt3dadd( -0.582371, -52.6296, 19.8035, 0.48 ) }
    dend_32 { pt3dadd( -0.324834, -53.2828, 19.9272, 0.48 ) }
    dend_32 { pt3dadd( -0.0804615, -53.8801, 20.0786, 0.6 ) }
    dend_32 { pt3dadd( 0.243026, -54.7037, 20.3466, 0.36 ) }
    dend_32 { pt3dadd( 0.404675, -55.1736, 20.5118, 0.36 ) }
    dend_32 { pt3dadd( 0.680176, -56.0923, 20.8197, 0.36 ) }
    dend_32 { pt3dadd( 0.951061, -57.1287, 21.1654, 0.48 ) }
    dend_32 { pt3dadd( 1.09443, -57.7784, 21.3654, 0.48 ) }
    dend_32 { pt3dadd( 1.24922, -58.6385, 21.5918, 0.48 ) }
    dend_32 { pt3dadd( 1.36174, -59.4914, 21.8118, 0.48 ) }
    dend_32 { pt3dadd( 1.42402, -60.1071, 21.979, 0.72 ) }
    dend_32 { pt3dadd( 1.46514, -60.6239, 22.1444, 0.72 ) }
    dend_32 { pt3dadd( 1.4992, -60.9917, 22.2693, 0.72 ) }
    dend_32 { pt3dadd( 1.57725, -61.5887, 22.4843, 0.84 ) }
    dend_32 { pt3dadd( 1.72279, -62.5935, 22.8914, 0.12 ) }
    dend_32 { pt3dadd( 1.82082, -63.2474, 23.2264, 0.12 ) }
    dend_32 { pt3dadd( 1.94636, -64.0774, 23.7206, 0.48 ) }
    dend_32 { pt3dadd( 1.99996, -64.433, 23.9607, 0.6 ) }
    dend_32 { pt3dadd( 2.07406, -64.9254, 24.3271, 0.6 ) }
    dend_32 { pt3dadd( 1.8609, -73.6545, 26.1537, 0.6 ) }
    dend_32 { pt3dadd( 1.50806, -82.2561, 28.4515, 0.6 ) }
    dend_32 { pt3dadd( -0.101547, -90.2512, 31.92, 0.6 ) }
    dend_32 { pt3dadd( -0.406386, -97.879, 36.3567, 0.6 ) }
    dend_32 { pt3dadd( 0.471221, -106.423, 38.6926, 0.6 ) }
    dend_32 { pt3dadd( 1.54752, -115.228, 39.6581, 0.6 ) }
    dend_32 { pt3dadd( 4.32526, -123.643, 40.2537, 0.6 ) }
    dend_32 { pt3dadd( 7.24677, -131.931, 41.4712, 0.6 ) }
    dend_32 { pt3dadd( 10.6424, -140.085, 42.1336, 0.6 ) }
    dend_32 { pt3dadd( 14.7836, -147.707, 43.6964, 0.6 ) }
    dend_32 { pt3dadd( 17.7576, -155.521, 46.5468, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 34.008, 8.33651, 29.5212, 0.48 ) }
    dend_28 { pt3dadd( 42.2817, 14.2061, 36.4765, 0.48 ) }
    dend_28 { pt3dadd( 49.0803, 21.3591, 43.9387, 0.48 ) }
    dend_28 { pt3dadd( 55.7994, 28.5427, 51.4471, 0.48 ) }
    dend_28 { pt3dadd( 63.7819, 34.7847, 58.451, 0.48 ) }
    dend_28 { pt3dadd( 71.287, 40.253, 66.5011, 0.48 ) }
    dend_28 { pt3dadd( 78.2982, 44.2241, 75.7122, 0.48 ) }
    dend_28 { pt3dadd( 83.856, 48.8255, 85.6337, 0.48 ) }
    dend_28 { pt3dadd( 91.186, 52.2595, 94.7886, 0.48 ) }
    dend_28 { pt3dadd( 97.7903, 54.2412, 104.839, 0.48 ) }
    dend_28 { pt3dadd( 105.028, 57.8988, 113.99, 0.48 ) }
    dend_28 { pt3dadd( 113.508, 61.634, 121.961, 0.48 ) }
    dend_28 { pt3dadd( 122.655, 66.1429, 128.733, 0.48 ) }
    dend_28 { pt3dadd( 130.999, 69.0742, 137.141, 0.48 ) }
    dend_28 { pt3dadd( 139.826, 71.8014, 145.103, 0.48 ) }
    dend_28 { pt3dadd( 149.863, 75.0495, 151.233, 0.48 ) }
    dend_28 { pt3dadd( 160.816, 78.4399, 155.396, 0.48 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 34.008, 8.33651, 29.5212, 0.36 ) }
    dend_27 { pt3dadd( 40.7182, 12.0261, 33.608, 0.48 ) }
    dend_27 { pt3dadd( 47.7681, 16.4594, 36.1332, 0.48 ) }
    dend_27 { pt3dadd( 53.9511, 21.2476, 40.012, 0.48 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -2.89785, -16.5916, -29.0073, 0.48 ) }
    dend_21 { pt3dadd( -5.42758, -16.3785, -32.8993, 0.48 ) }
    dend_21 { pt3dadd( -6.10829, -16.2898, -33.907, 0.48 ) }
    dend_21 { pt3dadd( -6.28652, -16.2689, -34.1355, 0.12 ) }
    dend_21 { pt3dadd( -6.81259, -16.2062, -34.8046, 0.12 ) }
    dend_21 { pt3dadd( -7.65984, -16.1189, -35.8532, 0.72 ) }
    dend_21 { pt3dadd( -8.28043, -16.0629, -36.6422, 0.84 ) }
    dend_21 { pt3dadd( -9.2031, -15.9966, -37.6564, 0.12 ) }
    dend_21 { pt3dadd( -10.3088, -15.9294, -38.9524, 0.12 ) }
    dend_21 { pt3dadd( -11.2592, -15.8738, -40.0602, 0.84 ) }
    dend_21 { pt3dadd( -11.5511, -15.868, -40.3889, 0.84 ) }
    dend_21 { pt3dadd( -12.662, -15.906, -41.584, 0.12 ) }
    dend_21 { pt3dadd( -12.9327, -15.9239, -41.8673, 0.12 ) }
    dend_21 { pt3dadd( -13.3957, -15.9611, -42.278, 0.12 ) }
    dend_21 { pt3dadd( -13.6863, -15.9775, -42.531, 1.08 ) }
    dend_21 { pt3dadd( -14.3187, -16.0036, -42.9884, 0.84 ) }
    dend_21 { pt3dadd( -15.4263, -16.026, -43.7224, 0.12 ) }
    dend_21 { pt3dadd( -16.3033, -16.0121, -44.2843, 0.12 ) }
    dend_21 { pt3dadd( -16.662, -15.9786, -44.6349, 0.48 ) }
    dend_21 { pt3dadd( -17.1721, -15.8886, -45.294, 0.12 ) }
    dend_21 { pt3dadd( -17.6546, -15.7677, -45.9987, 0.12 ) }
    dend_21 { pt3dadd( -17.8784, -15.6743, -46.4397, 0.84 ) }
    dend_21 { pt3dadd( -18.3094, -15.4638, -47.4059, 1.08 ) }
    dend_21 { pt3dadd( -19.3233, -14.9696, -49.934, 0.6 ) }
    dend_21 { pt3dadd( -19.6251, -14.8238, -50.7073, 0.84 ) }
    dend_21 { pt3dadd( -19.8058, -14.7386, -51.1799, 0.84 ) }
    dend_21 { pt3dadd( -20.8629, -14.2877, -53.9095, 0.12 ) }
    dend_21 { pt3dadd( -21.0652, -14.2199, -54.365, 0.12 ) }
    dend_21 { pt3dadd( -21.3613, -14.157, -54.8943, 0.12 ) }
    dend_21 { pt3dadd( -21.5898, -14.1281, -55.2034, 0.48 ) }
    dend_21 { pt3dadd( -22.069, -14.0926, -55.8066, 0.12 ) }
    dend_21 { pt3dadd( -23.2063, -14.055, -57.1114, 0.12 ) }
    dend_21 { pt3dadd( -23.7411, -14.0537, -57.6106, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -24.4667, -14.016, -58.3081, 0.84 ) }
    dend_21 { pt3dadd( -24.7302, -13.9922, -58.5606, 0.84 ) }
    dend_21 { pt3dadd( -25.7514, -13.8967, -59.505, 0.12 ) }
    dend_21 { pt3dadd( -26.1273, -13.8613, -59.8368, 0.12 ) }
    dend_21 { pt3dadd( -26.4984, -13.8232, -60.1509, 0.12 ) }
    dend_21 { pt3dadd( -27.7689, -13.6902, -61.1634, 0.12 ) }
    dend_21 { pt3dadd( -27.9614, -13.6653, -61.311, 0.72 ) }
    dend_21 { pt3dadd( -28.8206, -13.5337, -61.952, 0.72 ) }
    dend_21 { pt3dadd( -29.5798, -13.4005, -62.5118, 0.12 ) }
    dend_21 { pt3dadd( -30.0387, -13.3127, -62.9038, 0.12 ) }
    dend_21 { pt3dadd( -30.659, -13.1887, -63.4773, 0.48 ) }
    dend_21 { pt3dadd( -31.4986, -13.0121, -64.2953, 0.12 ) }
    dend_21 { pt3dadd( -31.754, -12.9542, -64.5509, 0.12 ) }
    dend_21 { pt3dadd( -32.3742, -12.7716, -65.3043, 0.72 ) }
    dend_21 { pt3dadd( -33.1417, -12.5141, -66.342, 0.12 ) }
    dend_21 { pt3dadd( -33.3505, -12.4434, -66.6704, 0.12 ) }
    dend_21 { pt3dadd( -33.4077, -12.4261, -66.7768, 0.6 ) }
    dend_21 { pt3dadd( -33.6432, -12.374, -67.218, 0.6 ) }
    dend_21 { pt3dadd( -34.6877, -12.1891, -69.1202, 0.48 ) }
    dend_21 { pt3dadd( -34.9941, -12.1472, -69.6596, 0.48 ) }
    dend_21 { pt3dadd( -35.8657, -12.0952, -71.1669, 0.72 ) }
    dend_21 { pt3dadd( -36.685, -12.1076, -72.497, 0.12 ) }
    dend_21 { pt3dadd( -36.9846, -12.1386, -72.9462, 0.12 ) }
    dend_21 { pt3dadd( -37.3409, -12.2068, -73.442, 0.48 ) }
    dend_21 { pt3dadd( -38.3369, -12.5166, -74.6052, 0.12 ) }
    dend_21 { pt3dadd( -39.225, -12.8932, -75.6488, 0.12 ) }
    dend_21 { pt3dadd( -39.8277, -13.2189, -76.2986, 0.12 ) }
    dend_21 { pt3dadd( -40.2521, -13.4964, -76.7256, 0.12 ) }
    dend_21 { pt3dadd( -40.6766, -13.8439, -77.2109, 0.6 ) }
    dend_21 { pt3dadd( -41.0451, -14.1876, -77.6945, 0.6 ) }
    dend_21 { pt3dadd( -41.8117, -14.9607, -78.7214, 0.12 ) }
    dend_21 { pt3dadd( -42.0844, -15.2353, -79.1027, 0.12 ) }
    dend_21 { pt3dadd( -42.3903, -15.5242, -79.5535, 0.12 ) }
    dend_21 { pt3dadd( -43.2491, -16.2601, -80.7162, 0.12 ) }
    dend_21 { pt3dadd( -43.9613, -16.8209, -81.7056, 0.12 ) }
    dend_21 { pt3dadd( -44.2593, -17.0307, -82.111, 0.12 ) }
    dend_21 { pt3dadd( -44.5274, -17.1905, -82.4251, 0.12 ) }
    dend_21 { pt3dadd( -44.8918, -17.3842, -82.8344, 0.6 ) }
    dend_21 { pt3dadd( -45.5515, -17.7101, -83.5817, 0.6 ) }
    dend_21 { pt3dadd( -47.1104, -18.4155, -85.0192, 0.12 ) }
    dend_21 { pt3dadd( -47.5014, -18.5976, -85.3585, 0.12 ) }
    dend_21 { pt3dadd( -48.1256, -18.8772, -85.9472, 0.12 ) }
    dend_21 { pt3dadd( -48.5419, -19.0425, -86.3242, 0.36 ) }
    dend_21 { pt3dadd( -49.6441, -19.4109, -87.2437, 0.12 ) }
    dend_21 { pt3dadd( -50.8489, -19.7269, -88.1906, 0.12 ) }
    dend_21 { pt3dadd( -51.815, -19.9734, -88.8155, 0.36 ) }
    dend_21 { pt3dadd( -52.685, -20.1895, -89.3719, 0.12 ) }
    dend_21 { pt3dadd( -53.8088, -20.4494, -90.1084, 0.12 ) }
    dend_21 { pt3dadd( -54.2348, -20.5275, -90.3655, 0.48 ) }
    dend_21 { pt3dadd( -54.9711, -20.6523, -90.8325, 0.12 ) }
    dend_21 { pt3dadd( -55.6726, -20.7781, -91.3497, 0.12 ) }
    dend_21 { pt3dadd( -56.0715, -20.8505, -91.6646, 0.36 ) }
    dend_21 { pt3dadd( -56.7168, -20.9703, -92.337, 0.12 ) }
    dend_21 { pt3dadd( -57.1633, -21.0041, -93.1035, 0.12 ) }
    dend_21 { pt3dadd( -57.6651, -20.9654, -94.2764, 0.6 ) }
    dend_21 { pt3dadd( -57.7443, -20.9339, -94.5355, 0.6 ) }
    dend_21 { pt3dadd( -58.0579, -20.6683, -95.9018, 0.12 ) }
    dend_21 { pt3dadd( -58.3245, -20.1963, -97.717, 0.48 ) }
    dend_21 { pt3dadd( -58.5029, -19.4583, -100.054, 0.12 ) }
    dend_21 { pt3dadd( -58.513, -19.2074, -100.701, 0.12 ) }
    dend_21 { pt3dadd( -58.4749, -18.5889, -102.029, 0.12 ) }
    dend_21 { pt3dadd( -58.4389, -18.3816, -102.496, 0.6 ) }
    dend_21 { pt3dadd( -58.2256, -17.6446, -104.236, 0.48 ) }
    dend_21 { pt3dadd( -57.9922, -17.056, -105.795, 0.24 ) }
    dend_21 { pt3dadd( -57.8862, -16.821, -106.638, 0.24 ) }
    dend_21 { pt3dadd( -57.6694, -16.2878, -109.379, 0.84 ) }
    dend_21 { pt3dadd( -57.6098, -15.8293, -112.48, 0.48 ) }
    dend_21 { pt3dadd( -57.6275, -15.7868, -113.024, 0.48 ) }
    dend_21 { pt3dadd( -57.6791, -15.784, -113.566, 0.6 ) }
    dend_21 { pt3dadd( -58.1022, -15.9567, -116.199, 0.6 ) }
    dend_21 { pt3dadd( -58.7498, -16.2975, -119.442, 0.12 ) }
    dend_21 { pt3dadd( -59.1643, -16.5202, -120.977, 0.12 ) }
    dend_21 { pt3dadd( -59.9312, -16.8303, -123.2, 0.12 ) }
    dend_21 { pt3dadd( -60.2246, -16.9272, -124.023, 0.12 ) }
    dend_21 { pt3dadd( -60.5463, -17.0304, -124.907, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 75/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.89785, -16.5916, -29.0073, 0.12 ) }
    dend_20 { pt3dadd( -3.12223, -16.3804, -29.0212, 0.12 ) }
    dend_20 { pt3dadd( -3.40943, -16.0943, -29.0326, 0.12 ) }
    dend_20 { pt3dadd( -3.84633, -15.5912, -29.2439, 0.12 ) }
    dend_20 { pt3dadd( -4.05562, -15.2904, -29.4078, 0.6 ) }
    dend_20 { pt3dadd( -4.26701, -14.902, -29.6812, 0.84 ) }
    dend_20 { pt3dadd( -4.38896, -14.6494, -29.8832, 0.6 ) }
    dend_20 { pt3dadd( -4.57409, -14.2081, -30.2634, 0.6 ) }
    dend_20 { pt3dadd( -4.98222, -12.9871, -31.5122, 0.12 ) }
    dend_20 { pt3dadd( -5.10868, -12.4973, -32.0808, 0.12 ) }
    dend_20 { pt3dadd( -5.29663, -11.7557, -32.9616, 0.72 ) }
    dend_20 { pt3dadd( -5.43614, -11.2292, -33.5835, 0.72 ) }
    dend_20 { pt3dadd( -5.51415, -10.9679, -33.8824, 0.72 ) }
    dend_20 { pt3dadd( -5.78728, -10.0876, -34.8747, 0.72 ) }
    dend_20 { pt3dadd( -6.06063, -9.33822, -35.6859, 0.12 ) }
    dend_20 { pt3dadd( -6.30535, -8.73015, -36.3695, 0.12 ) }
    dend_20 { pt3dadd( -6.44034, -8.41533, -36.7018, 0.12 ) }
    dend_20 { pt3dadd( -6.58654, -8.07182, -37.0321, 0.72 ) }
    dend_20 { pt3dadd( -6.95243, -7.26196, -37.7711, 0.84 ) }
    dend_20 { pt3dadd( -7.36673, -6.45804, -38.4248, 0.12 ) }
    dend_20 { pt3dadd( -7.52911, -6.16432, -38.6784, 0.12 ) }
    dend_20 { pt3dadd( -7.97338, -5.37085, -39.404, 0.12 ) }
    dend_20 { pt3dadd( -8.31395, -4.78772, -39.9166, 0.12 ) }
    dend_20 { pt3dadd( -8.55067, -4.34967, -40.293, 0.6 ) }
    dend_20 { pt3dadd( -8.7643, -3.94529, -40.6072, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_20 { pt3dadd( -9.17579, -3.12689, -41.2188, 0.12 ) }
    dend_20 { pt3dadd( -9.32624, -2.81, -41.4657, 0.12 ) }
    dend_20 { pt3dadd( -9.55448, -2.3137, -41.8582, 0.12 ) }
    dend_20 { pt3dadd( -10.2103, -0.901918, -42.9713, 0.12 ) }
    dend_20 { pt3dadd( -10.4022, -0.481116, -43.326, 0.12 ) }
    dend_20 { pt3dadd( -10.5104, -0.236681, -43.5378, 0.48 ) }
    dend_20 { pt3dadd( -10.8971, 0.605343, -44.2438, 0.36 ) }
    dend_20 { pt3dadd( -10.9955, 0.804468, -44.4481, 0.36 ) }
    dend_20 { pt3dadd( -11.1746, 1.1315, -44.8009, 0.72 ) }
    dend_20 { pt3dadd( -11.831, 2.2078, -45.9281, 0.12 ) }
    dend_20 { pt3dadd( -12.0239, 2.55533, -46.3379, 0.12 ) }
    dend_20 { pt3dadd( -12.1581, 2.83881, -46.6951, 0.6 ) }
    dend_20 { pt3dadd( -12.6483, 3.96826, -48.1807, 0.12 ) }
    dend_20 { pt3dadd( -12.9666, 4.71551, -49.1776, 0.12 ) }
    dend_20 { pt3dadd( -13.0859, 4.99663, -49.5479, 0.96 ) }
    dend_20 { pt3dadd( -13.5557, 6.06846, -50.8956, 0.96 ) }
    dend_20 { pt3dadd( -13.779, 6.57764, -51.5656, 0.12 ) }
    dend_20 { pt3dadd( -13.8515, 6.74931, -51.7817, 0.12 ) }
    dend_20 { pt3dadd( -13.9831, 7.06379, -52.1285, 0.12 ) }
    dend_20 { pt3dadd( -14.0681, 7.27648, -52.3842, 0.12 ) }
    dend_20 { pt3dadd( -14.3528, 8.02392, -53.115, 0.12 ) }
    dend_20 { pt3dadd( -14.5692, 8.60114, -53.5736, 0.84 ) }
    dend_20 { pt3dadd( -14.7146, 9.03882, -53.8818, 0.96 ) }
    dend_20 { pt3dadd( -14.7809, 9.26086, -54.026, 0.96 ) }
    dend_20 { pt3dadd( -15.1013, 10.4265, -54.8013, 0.12 ) }
    dend_20 { pt3dadd( -15.4179, 11.5533, -55.5078, 0.12 ) }
    dend_20 { pt3dadd( -15.7908, 12.8547, -56.2632, 0.12 ) }
    dend_20 { pt3dadd( -16.0704, 13.858, -56.821, 0.12 ) }
    dend_20 { pt3dadd( -16.1913, 14.3076, -57.0564, 0.72 ) }
    dend_20 { pt3dadd( -16.5354, 15.5816, -57.6746, 0.12 ) }
    dend_20 { pt3dadd( -16.8811, 16.8154, -58.2042, 0.12 ) }
    dend_20 { pt3dadd( -16.9325, 16.9882, -58.2763, 0.48 ) }
    dend_20 { pt3dadd( -16.9716, 17.1128, -58.3195, 0.12 ) }
    dend_20 { pt3dadd( -17.2897, 18.019, -58.6213, 0.12 ) }
    dend_20 { pt3dadd( -17.675, 18.9489, -58.8646, 0.6 ) }
    dend_20 { pt3dadd( -17.8222, 19.2604, -58.9298, 0.12 ) }
    dend_20 { pt3dadd( -18.2802, 20.173, -59.1355, 0.12 ) }
    dend_20 { pt3dadd( -18.5527, 20.7179, -59.2539, 0.36 ) }
    dend_20 { pt3dadd( -18.6703, 20.9543, -59.303, 0.12 ) }
    dend_20 { pt3dadd( -19.3941, 22.4929, -59.5743, 0.12 ) }
    dend_20 { pt3dadd( -19.6071, 22.9822, -59.6382, 0.72 ) }
    dend_20 { pt3dadd( -19.8556, 23.6112, -59.7116, 0.48 ) }
    dend_20 { pt3dadd( -19.9829, 24.0345, -59.7546, 0.12 ) }
    dend_20 { pt3dadd( -20.0127, 24.1623, -59.7738, 0.12 ) }
    dend_20 { pt3dadd( -20.266, 25.5632, -60.0306, 0.12 ) }
    dend_20 { pt3dadd( -20.3119, 25.9063, -60.0993, 0.24 ) }
    dend_20 { pt3dadd( -20.3402, 26.0967, -60.135, 0.12 ) }
    dend_20 { pt3dadd( -20.5561, 27.4083, -60.3898, 0.12 ) }
    dend_20 { pt3dadd( -20.7551, 28.4898, -60.651, 0.48 ) }
    dend_20 { pt3dadd( -20.8119, 28.7831, -60.7293, 0.12 ) }
    dend_20 { pt3dadd( -21.0714, 30.1095, -61.1147, 0.12 ) }
    dend_20 { pt3dadd( -21.2728, 31.153, -61.4175, 0.12 ) }
    dend_20 { pt3dadd( -21.385, 31.71, -61.5887, 0.6 ) }
    dend_20 { pt3dadd( -21.5694, 32.541, -61.8434, 0.12 ) }
    dend_20 { pt3dadd( -21.7874, 33.4956, -62.0956, 0.12 ) }
    dend_20 { pt3dadd( -21.8515, 33.7776, -62.1782, 0.48 ) }
    dend_20 { pt3dadd( -21.9254, 34.1012, -62.2926, 0.48 ) }
    dend_20 { pt3dadd( -22.0445, 34.6143, -62.4908, 0.12 ) }
    dend_20 { pt3dadd( -22.2709, 35.5723, -62.8302, 0.12 ) }
    dend_20 { pt3dadd( -22.3757, 36.037, -62.9372, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.12283, -49.7106, -5.81617, 0.72 ) }
    dend_16 { pt3dadd( -7.01193, -51.268, -5.85751, 0.72 ) }
    dend_16 { pt3dadd( -7.42452, -52.0325, -5.92675, 0.48 ) }
    dend_16 { pt3dadd( -7.99309, -53.1955, -6.01242, 0.48 ) }
    dend_16 { pt3dadd( -8.65597, -54.682, -6.11087, 0.48 ) }
    dend_16 { pt3dadd( -8.95066, -55.3659, -6.15007, 0.6 ) }
    dend_16 { pt3dadd( -9.58305, -56.8525, -6.22388, 0.84 ) }
    dend_16 { pt3dadd( -9.8131, -57.4172, -6.26927, 0.96 ) }
    dend_16 { pt3dadd( -10.3092, -58.6035, -6.34453, 0.48 ) }
    dend_16 { pt3dadd( -10.6135, -59.3029, -6.37493, 0.36 ) }
    dend_16 { pt3dadd( -11.1965, -60.5668, -6.35443, 0.36 ) }
    dend_16 { pt3dadd( -11.6657, -61.5341, -6.28557, 0.72 ) }
    dend_16 { pt3dadd( -12.0613, -62.312, -6.1852, 0.36 ) }
    dend_16 { pt3dadd( -12.407, -62.9647, -6.10679, 0.72 ) }
    dend_16 { pt3dadd( -12.8594, -63.8119, -6.02328, 1.08 ) }
    dend_16 { pt3dadd( -13.3228, -64.7397, -5.9511, 1.08 ) }
    dend_16 { pt3dadd( -13.6503, -65.476, -5.91377, 0.72 ) }
    dend_16 { pt3dadd( -13.9616, -66.2284, -5.89686, 0.72 ) }
    dend_16 { pt3dadd( -14.2115, -66.845, -5.89915, 0.72 ) }
    dend_16 { pt3dadd( -14.5864, -67.7242, -5.92441, 0.72 ) }
    dend_16 { pt3dadd( -15.0954, -68.8765, -5.98734, 0.36 ) }
    dend_16 { pt3dadd( -15.4556, -69.6772, -6.05503, 0.36 ) }
    dend_16 { pt3dadd( -15.8399, -70.5607, -6.12182, 0.48 ) }
    dend_16 { pt3dadd( -16.1919, -71.4617, -6.18059, 0.48 ) }
    dend_16 { pt3dadd( -16.4509, -72.2697, -6.22102, 0.36 ) }
    dend_16 { pt3dadd( -16.6476, -73.0623, -6.27988, 0.48 ) }
    dend_16 { pt3dadd( -16.7802, -73.7729, -6.34052, 0.48 ) }
    dend_16 { pt3dadd( -16.9781, -75.1186, -6.48284, 0.48 ) }
    dend_16 { pt3dadd( -17.1147, -76.3193, -6.64907, 0.48 ) }
    dend_16 { pt3dadd( -17.2356, -77.6566, -6.86347, 0.48 ) }
    dend_16 { pt3dadd( -17.3398, -78.973, -7.0934, 0.36 ) }
    dend_16 { pt3dadd( -17.4298, -79.9752, -7.27661, 0.6 ) }
    dend_16 { pt3dadd( -17.5775, -81.164, -7.49265, 0.72 ) }
    dend_16 { pt3dadd( -17.7122, -81.9694, -7.64825, 0.36 ) }
    dend_16 { pt3dadd( -17.8691, -82.7067, -7.76687, 0.48 ) }
    dend_16 { pt3dadd( -18.0663, -83.436, -7.84522, 0.48 ) }
    dend_16 { pt3dadd( -18.3157, -84.1988, -7.90859, 0.36 ) }
    dend_16 { pt3dadd( -18.7099, -85.2023, -8.07293, 0.36 ) }
    dend_16 { pt3dadd( -19.139, -86.118, -8.31005, 0.48 ) }
    dend_16 { pt3dadd( -19.5524, -86.876, -8.54809, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_16 { pt3dadd( -20.2595, -88.0977, -9.02923, 0.96 ) }
    dend_16 { pt3dadd( -21.0343, -89.4032, -9.62704, 0.96 ) }
    dend_16 { pt3dadd( -21.8395, -90.8365, -10.3392, 0.48 ) }
    dend_16 { pt3dadd( -22.3752, -91.9176, -10.8932, 0.48 ) }
    dend_16 { pt3dadd( -22.7668, -92.7899, -11.3331, 0.6 ) }
    dend_16 { pt3dadd( -23.2642, -94.0048, -11.931, 0.84 ) }
    dend_16 { pt3dadd( -23.552, -94.7751, -12.2559, 0.6 ) }
    dend_16 { pt3dadd( -23.899, -95.7278, -12.5655, 0.72 ) }
    dend_16 { pt3dadd( -24.3621, -96.9865, -12.8645, 0.36 ) }
    dend_16 { pt3dadd( -24.6598, -97.7718, -13.0273, 0.36 ) }
    dend_16 { pt3dadd( -25.0008, -98.6622, -13.1968, 0.48 ) }
    dend_16 { pt3dadd( -25.4492, -99.8393, -13.3931, 0.48 ) }
    dend_16 { pt3dadd( -25.845, -100.931, -13.5855, 0.48 ) }
    dend_16 { pt3dadd( -26.1273, -101.748, -13.7377, 0.6 ) }
    dend_16 { pt3dadd( -26.3816, -102.531, -13.8849, 0.84 ) }
    dend_16 { pt3dadd( -26.6976, -103.669, -14.1058, 0.84 ) }
    dend_16 { pt3dadd( -27.0387, -105.002, -14.3599, 0.84 ) }
    dend_16 { pt3dadd( -27.2865, -105.985, -14.5338, 0.48 ) }
    dend_16 { pt3dadd( -27.5364, -106.89, -14.6691, 0.48 ) }
    dend_16 { pt3dadd( -27.8354, -107.802, -14.8125, 0.6 ) }
    dend_16 { pt3dadd( -28.0859, -108.433, -14.9231, 0.6 ) }
    dend_16 { pt3dadd( -28.4922, -109.302, -15.0989, 0.36 ) }
    dend_16 { pt3dadd( -28.825, -109.962, -15.243, 0.36 ) }
    dend_16 { pt3dadd( -29.0854, -110.523, -15.3669, 0.36 ) }
    dend_16 { pt3dadd( -29.3419, -111.159, -15.5001, 0.6 ) }
    dend_16 { pt3dadd( -29.5822, -111.872, -15.6356, 0.84 ) }
    dend_16 { pt3dadd( -29.8118, -112.634, -15.7573, 0.84 ) }
    dend_16 { pt3dadd( -30.1669, -113.958, -15.968, 0.36 ) }
    dend_16 { pt3dadd( -30.4938, -115.141, -16.1424, 0.36 ) }
    dend_16 { pt3dadd( -30.7224, -115.91, -16.2547, 0.36 ) }
    dend_16 { pt3dadd( -30.8811, -116.358, -16.3178, 0.72 ) }
    dend_16 { pt3dadd( -31.2404, -117.146, -16.4689, 0.96 ) }
    dend_16 { pt3dadd( -31.8579, -118.245, -16.7617, 0.36 ) }
    dend_16 { pt3dadd( -32.2549, -118.846, -16.9643, 0.36 ) }
    dend_16 { pt3dadd( -32.554, -119.288, -17.1305, 0.72 ) }
    dend_16 { pt3dadd( -32.9542, -119.942, -17.3779, 0.72 ) }
    dend_16 { pt3dadd( -33.5753, -121.064, -17.7896, 0.36 ) }
    dend_16 { pt3dadd( -33.7248, -121.348, -17.8865, 0.36 ) }
    dend_16 { pt3dadd( -34.1283, -122.116, -18.1331, 0.48 ) }
    dend_16 { pt3dadd( -34.7161, -123.271, -18.5227, 0.48 ) }
    dend_16 { pt3dadd( -35.155, -124.215, -18.8259, 0.48 ) }
    dend_16 { pt3dadd( -35.4193, -124.856, -19.0534, 0.48 ) }
    dend_16 { pt3dadd( -35.6865, -125.566, -19.3607, 0.48 ) }
    dend_16 { pt3dadd( -35.9447, -126.199, -19.6988, 0.36 ) }
    dend_16 { pt3dadd( -36.2005, -126.727, -20.0373, 0.6 ) }
    dend_16 { pt3dadd( -36.5695, -127.382, -20.5288, 0.72 ) }
    dend_16 { pt3dadd( -37.0009, -128.099, -21.0699, 0.72 ) }
    dend_16 { pt3dadd( -37.4235, -128.827, -21.5974, 0.48 ) }
    dend_16 { pt3dadd( -37.6046, -129.143, -21.8107, 0.36 ) }
    dend_16 { pt3dadd( -37.8641, -129.634, -22.1794, 0.36 ) }
    dend_16 { pt3dadd( -38.0815, -129.998, -22.5209, 0.6 ) }
    dend_16 { pt3dadd( -38.4509, -130.52, -23.0902, 0.6 ) }
    dend_16 { pt3dadd( -38.8854, -131.085, -23.7351, 0.6 ) }
    dend_16 { pt3dadd( -39.1254, -131.384, -24.1038, 0.6 ) }
    dend_16 { pt3dadd( -40.1881, -132.777, -25.8836, 0.72 ) }
    dend_16 { pt3dadd( -40.6793, -133.505, -26.8097, 0.48 ) }
    dend_16 { pt3dadd( -40.911, -133.904, -27.2837, 0.48 ) }
    dend_16 { pt3dadd( -41.0477, -134.171, -27.5769, 0.48 ) }
    dend_16 { pt3dadd( -41.2658, -134.547, -27.9476, 0.72 ) }
    dend_16 { pt3dadd( -41.5483, -134.92, -28.3202, 0.84 ) }
    dend_16 { pt3dadd( -41.9754, -135.409, -28.8134, 0.84 ) }
    dend_16 { pt3dadd( -42.4559, -136.019, -29.4809, 0.48 ) }
    dend_16 { pt3dadd( -42.6872, -136.313, -29.8584, 0.48 ) }
    dend_16 { pt3dadd( -43.2304, -137.008, -30.7587, 0.72 ) }
    dend_16 { pt3dadd( -44.0054, -138.026, -32.0628, 0.72 ) }
    dend_16 { pt3dadd( -44.649, -139.002, -33.2094, 0.36 ) }
    dend_16 { pt3dadd( -44.802, -139.275, -33.5129, 0.36 ) }
    dend_16 { pt3dadd( -45.0832, -139.864, -34.1536, 0.36 ) }
    dend_16 { pt3dadd( -45.4383, -140.689, -35.1217, 0.6 ) }
    dend_16 { pt3dadd( -45.5492, -141.002, -35.5091, 0.84 ) }
    dend_16 { pt3dadd( -45.8736, -141.978, -36.7307, 0.36 ) }
    dend_16 { pt3dadd( -46.0714, -142.608, -37.5653, 0.48 ) }
    dend_16 { pt3dadd( -46.2864, -143.289, -38.6747, 0.96 ) }
    dend_16 { pt3dadd( -46.5683, -144.122, -40.3326, 0.96 ) }
    dend_16 { pt3dadd( -46.8949, -144.817, -42.0299, 0.48 ) }
    dend_16 { pt3dadd( -46.9604, -144.906, -42.3372, 0.48 ) }
    dend_16 { pt3dadd( -47.1428, -145.113, -43.2302, 0.72 ) }
    dend_16 { pt3dadd( -47.5307, -145.639, -45.463, 0.36 ) }
    dend_16 { pt3dadd( -47.6214, -145.816, -46.1805, 0.6 ) }
    dend_16 { pt3dadd( -47.7269, -146.089, -47.1715, 0.72 ) }
    dend_16 { pt3dadd( -48.2459, -147.398, -51.6595, 0.48 ) }
    dend_16 { pt3dadd( -48.3234, -147.59, -52.2446, 0.36 ) }
    dend_16 { pt3dadd( -48.4517, -147.913, -53.107, 0.36 ) }
    dend_16 { pt3dadd( -48.5039, -148.186, -53.6461, 0.36 ) }
    dend_16 { pt3dadd( -48.5454, -148.437, -54.1116, 0.36 ) }
    dend_16 { pt3dadd( -48.5814, -148.731, -54.661, 0.48 ) }
    dend_16 { pt3dadd( -48.6755, -149.04, -55.176, 0.48 ) }
    dend_16 { pt3dadd( -48.7656, -149.457, -56.24, 0.36 ) }
    dend_16 { pt3dadd( -48.7721, -149.601, -56.655, 0.36 ) }
    dend_16 { pt3dadd( -48.6632, -150.079, -58.0245, 0.36 ) }
    dend_16 { pt3dadd( -48.413, -150.603, -59.5943, 0.48 ) }
    dend_16 { pt3dadd( -48.3032, -150.792, -60.157, 0.6 ) }
    dend_16 { pt3dadd( -47.8011, -151.56, -62.2725, 0.36 ) }
    dend_16 { pt3dadd( -47.6214, -151.823, -62.9225, 0.36 ) }
    dend_16 { pt3dadd( -47.405, -152.163, -63.6547, 0.48 ) }
    dend_16 { pt3dadd( -47.1568, -152.791, -64.7197, 0.12 ) }
    dend_16 { pt3dadd( -47.1229, -153.213, -65.3435, 0.12 ) }
    dend_16 { pt3dadd( -47.1367, -153.385, -65.5837, 0.12 ) }
    dend_16 { pt3dadd( -47.1591, -153.477, -65.6979, 0.6 ) }
    dend_16 { pt3dadd( -47.2949, -153.835, -66.1573, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( -47.82, -155.019, -67.5599, 0.6 ) }
    dend_16 { pt3dadd( -48.1941, -155.956, -68.4816, 0.6 ) }
    dend_16 { pt3dadd( -48.2852, -156.158, -68.7133, 0.12 ) }
    dend_16 { pt3dadd( -48.5428, -156.583, -69.2594, 0.12 ) }
    dend_16 { pt3dadd( -48.6916, -156.778, -69.5473, 0.24 ) }
    dend_16 { pt3dadd( -49.036, -157.154, -70.1379, 0.24 ) }
    dend_16 { pt3dadd( -49.3395, -157.441, -70.5767, 0.24 ) }
    dend_16 { pt3dadd( -50.7075, -158.548, -72.245, 0.48 ) }
    dend_16 { pt3dadd( -51.2067, -158.938, -72.8301, 0.48 ) }
    dend_16 { pt3dadd( -51.8251, -159.444, -73.5888, 0.48 ) }
    dend_16 { pt3dadd( -52.1389, -159.722, -74.0091, 0.36 ) }
    dend_16 { pt3dadd( -52.3604, -159.94, -74.3546, 0.12 ) }
    dend_16 { pt3dadd( -53.0418, -160.591, -75.2945, 0.12 ) }
    dend_16 { pt3dadd( -53.3792, -160.951, -75.62, 0.48 ) }
    dend_16 { pt3dadd( -53.8348, -161.497, -76.2062, 0.6 ) }
    dend_16 { pt3dadd( -54.3408, -162.17, -77.0184, 0.6 ) }
    dend_16 { pt3dadd( -54.7838, -162.871, -78.0125, 0.12 ) }
    dend_16 { pt3dadd( -55.1936, -163.805, -79.4753, 0.12 ) }
    dend_16 { pt3dadd( -55.5611, -164.994, -81.5188, 0.12 ) }
    dend_16 { pt3dadd( -56.1135, -166.698, -84.6153, 0.12 ) }
    dend_16 { pt3dadd( -56.1638, -166.855, -84.8873, 0.12 ) }
    dend_16 { pt3dadd( -56.2233, -167.073, -85.2377, 0.12 ) }
    dend_16 { pt3dadd( -56.3335, -167.493, -85.8647, 0.72 ) }
    dend_16 { pt3dadd( -56.3653, -167.752, -86.2243, 0.84 ) }
    dend_16 { pt3dadd( -56.4051, -167.917, -86.4659, 0.84 ) }
    dend_16 { pt3dadd( -56.5444, -168.2, -86.7559, 0.48 ) }
    dend_16 { pt3dadd( -56.9478, -168.966, -87.568, 0.12 ) }
    dend_16 { pt3dadd( -57.1849, -169.456, -88.0725, 0.12 ) }
    dend_16 { pt3dadd( -57.4944, -170.304, -89.049, 0.36 ) }
    dend_16 { pt3dadd( -57.6704, -171.082, -89.9745, 0.12 ) }
    dend_16 { pt3dadd( -57.7442, -171.444, -90.4566, 0.12 ) }
    dend_16 { pt3dadd( -57.7916, -171.71, -90.8382, 0.48 ) }
    dend_16 { pt3dadd( -57.8592, -172.084, -91.379, 0.6 ) }
    dend_16 { pt3dadd( -58.1268, -173.116, -92.9073, 0.12 ) }
    dend_16 { pt3dadd( -58.2625, -173.423, -93.4065, 0.12 ) }
    dend_16 { pt3dadd( -58.4703, -173.941, -94.1911, 0.12 ) }
    dend_16 { pt3dadd( -58.5574, -174.099, -94.424, 0.12 ) }
    dend_16 { pt3dadd( -58.7557, -174.387, -94.8246, 0.48 ) }
    dend_16 { pt3dadd( -59.0181, -174.752, -95.2608, 0.84 ) }
    dend_16 { pt3dadd( -60.1386, -176.461, -96.9493, 0.36 ) }
    dend_16 { pt3dadd( -60.3714, -176.869, -97.3135, 0.36 ) }
    dend_16 { pt3dadd( -60.8541, -177.879, -98.1116, 0.36 ) }
    dend_16 { pt3dadd( -61.3066, -178.778, -98.7405, 0.6 ) }
    dend_16 { pt3dadd( -61.6711, -179.479, -99.198, 0.6 ) }
    dend_16 { pt3dadd( -62.167, -180.4, -99.722, 0.6 ) }
    dend_16 { pt3dadd( -62.5164, -181.021, -99.9975, 0.6 ) }
    dend_16 { pt3dadd( -62.9147, -181.722, -100.316, 0.12 ) }
    dend_16 { pt3dadd( -63.823, -183.357, -101.037, 0.12 ) }
    dend_16 { pt3dadd( -64.2847, -184.104, -101.338, 0.6 ) }
    dend_16 { pt3dadd( -64.6374, -184.62, -101.54, 0.6 ) }
    dend_16 { pt3dadd( -64.8267, -184.888, -101.63, 0.6 ) }
    dend_16 { pt3dadd( -65.2201, -185.441, -101.807, 0.12 ) }
    dend_16 { pt3dadd( -65.5133, -185.872, -101.945, 0.12 ) }
    dend_16 { pt3dadd( -65.6308, -186.038, -102.002, 0.12 ) }
    dend_16 { pt3dadd( -65.8475, -186.264, -102.071, 0.12 ) }
    dend_16 { pt3dadd( -66.2914, -186.64, -102.252, 0.12 ) }
    dend_16 { pt3dadd( -66.693, -186.94, -102.428, 0.12 ) }
    dend_16 { pt3dadd( -67.3605, -187.346, -102.702, 0.6 ) }
    dend_16 { pt3dadd( -68.1755, -187.777, -103.173, 0.6 ) }
    dend_16 { pt3dadd( -68.7302, -188.066, -103.553, 0.6 ) }
    dend_16 { pt3dadd( -69.7426, -188.628, -104.34, 0.12 ) }
    dend_16 { pt3dadd( -69.9737, -188.765, -104.527, 0.12 ) }
    dend_16 { pt3dadd( -70.6902, -189.242, -105.107, 0.48 ) }
    dend_16 { pt3dadd( -72.0593, -190.266, -106.159, 0.12 ) }
    dend_16 { pt3dadd( -72.4377, -190.596, -106.468, 0.12 ) }
    dend_16 { pt3dadd( -72.8836, -191.052, -106.817, 0.12 ) }
    dend_16 { pt3dadd( -73.5225, -191.818, -107.349, 0.12 ) }
    dend_16 { pt3dadd( -73.9408, -192.406, -107.722, 0.6 ) }
    dend_16 { pt3dadd( -74.1498, -192.783, -107.919, 0.6 ) }
    dend_16 { pt3dadd( -74.5575, -193.65, -108.434, 0.24 ) }
    dend_16 { pt3dadd( -74.8058, -194.222, -108.87, 0.24 ) }
    dend_16 { pt3dadd( -75.2674, -195.318, -109.841, 0.24 ) }
    dend_16 { pt3dadd( -75.4071, -195.691, -110.192, 0.48 ) }
    dend_16 { pt3dadd( -75.6159, -196.29, -110.818, 0.48 ) }
    dend_16 { pt3dadd( -76.151, -197.997, -112.73, 0.36 ) }
    dend_16 { pt3dadd( -76.2341, -198.289, -113.087, 0.36 ) }
    dend_16 { pt3dadd( -76.3929, -198.746, -113.666, 0.36 ) }
    dend_16 { pt3dadd( -76.5325, -199.142, -114.134, 0.36 ) }
    dend_16 { pt3dadd( -76.8437, -200.093, -115.232, 0.48 ) }
    dend_16 { pt3dadd( -77.0302, -200.671, -115.895, 0.48 ) }
    dend_16 { pt3dadd( -77.1898, -201.341, -116.513, 0.12 ) }
    dend_16 { pt3dadd( -77.3053, -202.159, -117.293, 0.12 ) }
    dend_16 { pt3dadd( -77.3254, -202.727, -117.845, 0.12 ) }
    dend_16 { pt3dadd( -77.325, -202.947, -118.053, 0.12 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.12283, -49.7106, -5.81617, 0.48 ) }
    dend_15 { pt3dadd( -5.83074, -50.6854, -5.67243, 0.48 ) }
    dend_15 { pt3dadd( -5.59847, -51.4685, -5.56484, 0.6 ) }
    dend_15 { pt3dadd( -5.25593, -52.5397, -5.44819, 0.6 ) }
    dend_15 { pt3dadd( -4.99304, -53.3165, -5.38161, 0.6 ) }
    dend_15 { pt3dadd( -4.7767, -53.9433, -5.34004, 0.36 ) }
    dend_15 { pt3dadd( -4.60484, -54.3783, -5.29114, 0.36 ) }
    dend_15 { pt3dadd( -4.50114, -54.6048, -5.24489, 0.36 ) }
    dend_15 { pt3dadd( -4.21868, -55.1084, -5.15188, 0.6 ) }
    dend_15 { pt3dadd( -4.08064, -55.3289, -5.12571, 0.72 ) }
    dend_15 { pt3dadd( -3.8721, -55.6034, -5.07075, 0.72 ) }
    dend_15 { pt3dadd( -3.10956, -56.4926, -4.833, 0.72 ) }
    dend_15 { pt3dadd( -2.83708, -56.796, -4.74264, 0.72 ) }
    dend_15 { pt3dadd( -2.38548, -57.2765, -4.57894, 0.24 ) }
    dend_15 { pt3dadd( -1.909, -57.7715, -4.40566, 0.24 ) }
    dend_15 { pt3dadd( -1.31762, -58.3684, -4.22569, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( -0.860459, -58.8141, -4.10591, 0.6 ) }
    dend_15 { pt3dadd( -0.380419, -59.2785, -4.01335, 0.6 ) }
    dend_15 { pt3dadd( 0.467228, -60.0711, -3.8333, 0.36 ) }
    dend_15 { pt3dadd( 0.769419, -60.3511, -3.7719, 0.36 ) }
    dend_15 { pt3dadd( 1.35683, -60.908, -3.65873, 0.36 ) }
    dend_15 { pt3dadd( 1.71647, -61.2713, -3.58414, 0.6 ) }
    dend_15 { pt3dadd( 2.04867, -61.624, -3.50241, 0.6 ) }
    dend_15 { pt3dadd( 2.61226, -62.2767, -3.33138, 0.36 ) }
    dend_15 { pt3dadd( 2.98993, -62.7449, -3.19771, 0.36 ) }
    dend_15 { pt3dadd( 3.3682, -63.2207, -3.05869, 0.36 ) }
    dend_15 { pt3dadd( 3.89149, -63.8536, -2.82325, 0.48 ) }
    dend_15 { pt3dadd( 4.19064, -64.1972, -2.6819, 0.48 ) }
    dend_15 { pt3dadd( 4.48517, -64.5218, -2.53528, 0.48 ) }
    dend_15 { pt3dadd( 5.00628, -65.0662, -2.29147, 0.48 ) }
    dend_15 { pt3dadd( 5.61087, -65.6694, -2.00579, 0.48 ) }
    dend_15 { pt3dadd( 6.50265, -66.5717, -1.62332, 0.48 ) }
    dend_15 { pt3dadd( 6.85063, -66.9479, -1.48708, 0.36 ) }
    dend_15 { pt3dadd( 7.00017, -67.1154, -1.43046, 0.36 ) }
    dend_15 { pt3dadd( 7.26107, -67.4332, -1.35171, 0.48 ) }
    dend_15 { pt3dadd( 7.623, -67.9425, -1.26031, 0.36 ) }
    dend_15 { pt3dadd( 8.00358, -68.5369, -1.1774, 0.36 ) }
    dend_15 { pt3dadd( 8.30222, -69.0417, -1.14403, 0.48 ) }
    dend_15 { pt3dadd( 8.74974, -69.7668, -1.09115, 0.36 ) }
    dend_15 { pt3dadd( 9.32134, -70.6295, -1.03246, 0.36 ) }
    dend_15 { pt3dadd( 9.83855, -71.3656, -0.983722, 0.36 ) }
    dend_15 { pt3dadd( 10.3697, -72.0732, -0.946828, 0.36 ) }
    dend_15 { pt3dadd( 10.7635, -72.5595, -0.910274, 0.36 ) }
    dend_15 { pt3dadd( 11.4024, -73.3067, -0.854972, 0.36 ) }
    dend_15 { pt3dadd( 11.9311, -73.9359, -0.820577, 0.48 ) }
    dend_15 { pt3dadd( 12.3895, -74.4947, -0.794126, 0.84 ) }
    dend_15 { pt3dadd( 12.9267, -75.172, -0.790458, 0.48 ) }
    dend_15 { pt3dadd( 13.3165, -75.6746, -0.759214, 0.24 ) }
    dend_15 { pt3dadd( 13.7569, -76.2737, -0.693077, 0.24 ) }
    dend_15 { pt3dadd( 14.2794, -77.0298, -0.598953, 0.24 ) }
    dend_15 { pt3dadd( 14.746, -77.7226, -0.502011, 0.24 ) }
    dend_15 { pt3dadd( 15.1319, -78.2717, -0.394856, 0.24 ) }
    dend_15 { pt3dadd( 15.8561, -79.2827, -0.169556, 0.72 ) }
    dend_15 { pt3dadd( 16.0642, -79.5685, -0.107062, 0.72 ) }
    dend_15 { pt3dadd( 16.5457, -80.2245, 0.0196356, 0.36 ) }
    dend_15 { pt3dadd( 16.9489, -80.7661, 0.0943612, 0.36 ) }
    dend_15 { pt3dadd( 17.7271, -81.8778, 0.155353, 0.24 ) }
    dend_15 { pt3dadd( 18.1727, -82.593, 0.132458, 0.24 ) }
    dend_15 { pt3dadd( 18.4833, -83.1401, 0.0770932, 0.24 ) }
    dend_15 { pt3dadd( 18.8509, -83.8377, 0.00987459, 0.24 ) }
    dend_15 { pt3dadd( 19.1006, -84.3695, -0.0429354, 0.36 ) }
    dend_15 { pt3dadd( 19.3321, -84.919, -0.110723, 0.36 ) }
    dend_15 { pt3dadd( 19.5324, -85.4676, -0.201646, 0.48 ) }
    dend_15 { pt3dadd( 19.7856, -86.1883, -0.289505, 0.48 ) }
    dend_15 { pt3dadd( 19.9382, -86.6383, -0.327108, 0.48 ) }
    dend_15 { pt3dadd( 20.0905, -87.0993, -0.349635, 0.6 ) }
    dend_15 { pt3dadd( 20.232, -87.5483, -0.380368, 0.72 ) }
    dend_15 { pt3dadd( 20.4003, -88.1007, -0.433995, 0.72 ) }
    dend_15 { pt3dadd( 20.6375, -88.8942, -0.53403, 0.24 ) }
    dend_15 { pt3dadd( 20.846, -89.5653, -0.617116, 0.24 ) }
    dend_15 { pt3dadd( 21.0003, -90.0082, -0.665476, 0.48 ) }
    dend_15 { pt3dadd( 21.224, -90.5932, -0.724333, 0.6 ) }
    dend_15 { pt3dadd( 21.5492, -91.3726, -0.79539, 0.36 ) }
    dend_15 { pt3dadd( 21.9532, -92.2535, -0.871918, 0.36 ) }
    dend_15 { pt3dadd( 22.3489, -93.0815, -0.964323, 0.36 ) }
    dend_15 { pt3dadd( 22.6421, -93.6952, -1.04841, 0.36 ) }
    dend_15 { pt3dadd( 22.7985, -94.0176, -1.10225, 0.24 ) }
    dend_15 { pt3dadd( 22.8289, -94.0783, -1.1111, 0.48 ) }
    dend_15 { pt3dadd( 23.1817, -94.7764, -1.20612, 0.6 ) }
    dend_15 { pt3dadd( 23.4875, -95.3647, -1.2939, 0.36 ) }
    dend_15 { pt3dadd( 23.7457, -95.8743, -1.37784, 0.36 ) }
    dend_15 { pt3dadd( 23.8635, -96.107, -1.40881, 0.48 ) }
    dend_15 { pt3dadd( 24.2518, -96.8827, -1.50338, 0.48 ) }
    dend_15 { pt3dadd( 24.4651, -97.2994, -1.54239, 0.36 ) }
    dend_15 { pt3dadd( 24.852, -98.0417, -1.59258, 0.36 ) }
    dend_15 { pt3dadd( 25.2424, -98.7904, -1.63177, 0.36 ) }
    dend_15 { pt3dadd( 25.586, -99.4477, -1.66616, 0.36 ) }
    dend_15 { pt3dadd( 26.0179, -100.302, -1.72092, 0.36 ) }
    dend_15 { pt3dadd( 26.4385, -101.154, -1.80063, 0.36 ) }
    dend_15 { pt3dadd( 26.6031, -101.486, -1.8285, 0.48 ) }
    dend_15 { pt3dadd( 26.8094, -101.907, -1.857, 0.48 ) }
    dend_15 { pt3dadd( 27.0816, -102.423, -1.87942, 0.48 ) }
    dend_15 { pt3dadd( 27.4431, -103.071, -1.90379, 0.48 ) }
    dend_15 { pt3dadd( 27.8177, -103.702, -1.93656, 0.48 ) }
    dend_15 { pt3dadd( 28.2527, -104.434, -1.99672, 0.6 ) }
    dend_15 { pt3dadd( 28.3897, -104.659, -2.02103, 0.6 ) }
    dend_15 { pt3dadd( 28.8146, -105.351, -2.11462, 0.36 ) }
    dend_15 { pt3dadd( 29.3369, -106.181, -2.25571, 0.36 ) }
    dend_15 { pt3dadd( 29.7036, -106.75, -2.35937, 0.36 ) }
    dend_15 { pt3dadd( 30.2289, -107.53, -2.51986, 0.36 ) }
    dend_15 { pt3dadd( 30.7495, -108.285, -2.69735, 0.36 ) }
    dend_15 { pt3dadd( 31.0935, -108.794, -2.83111, 0.36 ) }
    dend_15 { pt3dadd( 31.3659, -109.218, -2.97011, 0.36 ) }
    dend_15 { pt3dadd( 31.5426, -109.492, -3.07046, 0.48 ) }
    dend_15 { pt3dadd( 31.845, -109.965, -3.25707, 0.48 ) }
    dend_15 { pt3dadd( 32.2292, -110.588, -3.51175, 0.48 ) }
    dend_15 { pt3dadd( 32.6311, -111.283, -3.7951, 0.48 ) }
    dend_15 { pt3dadd( 33.0641, -112.073, -4.1121, 0.48 ) }
    dend_15 { pt3dadd( 33.2438, -112.43, -4.24917, 0.48 ) }
    dend_15 { pt3dadd( 33.5655, -113.094, -4.4954, 0.48 ) }
    dend_15 { pt3dadd( 33.7995, -113.601, -4.67475, 0.48 ) }
    dend_15 { pt3dadd( 33.9056, -113.827, -4.75615, 0.6 ) }
    dend_15 { pt3dadd( 34.0185, -114.049, -4.83638, 0.72 ) }
    dend_15 { pt3dadd( 34.2769, -114.556, -5.00038, 0.48 ) }
    dend_15 { pt3dadd( 34.5529, -115.095, -5.18102, 0.48 ) }
    dend_15 { pt3dadd( 34.672, -115.315, -5.25867, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_15 { pt3dadd( 35.0263, -115.91, -5.47833, 0.36 ) }
    dend_15 { pt3dadd( 35.3244, -116.38, -5.65727, 0.36 ) }
    dend_15 { pt3dadd( 35.5782, -116.749, -5.80496, 0.36 ) }
    dend_15 { pt3dadd( 35.9605, -117.269, -6.01734, 0.36 ) }
    dend_15 { pt3dadd( 36.2997, -117.703, -6.18006, 0.48 ) }
    dend_15 { pt3dadd( 36.7437, -118.272, -6.369, 0.6 ) }
    dend_15 { pt3dadd( 37.4947, -119.242, -6.65327, 0.48 ) }
    dend_15 { pt3dadd( 37.9866, -119.883, -6.83066, 0.36 ) }
    dend_15 { pt3dadd( 38.6337, -120.728, -7.07195, 0.36 ) }
    dend_15 { pt3dadd( 39.0578, -121.313, -7.23605, 0.6 ) }
    dend_15 { pt3dadd( 39.5022, -121.969, -7.43379, 0.6 ) }
    dend_15 { pt3dadd( 39.9396, -122.654, -7.6517, 0.6 ) }
    dend_15 { pt3dadd( 40.355, -123.345, -7.89901, 0.6 ) }
    dend_15 { pt3dadd( 40.96, -124.401, -8.31614, 0.48 ) }
    dend_15 { pt3dadd( 41.6343, -125.648, -8.84286, 0.48 ) }
    dend_15 { pt3dadd( 41.9943, -126.334, -9.14914, 0.48 ) }
    dend_15 { pt3dadd( 42.5066, -127.319, -9.61595, 0.48 ) }
    dend_15 { pt3dadd( 42.8714, -128.03, -9.96608, 0.24 ) }
    dend_15 { pt3dadd( 43.1848, -128.667, -10.2799, 0.24 ) }
    dend_15 { pt3dadd( 43.6925, -129.739, -10.8082, 0.24 ) }
    dend_15 { pt3dadd( 43.9532, -130.307, -11.0822, 0.24 ) }
    dend_15 { pt3dadd( 44.2451, -130.955, -11.3647, 0.6 ) }
    dend_15 { pt3dadd( 44.3679, -131.237, -11.4704, 0.84 ) }
    dend_15 { pt3dadd( 44.556, -131.664, -11.6, 0.84 ) }
    dend_15 { pt3dadd( 44.8245, -132.278, -11.762, 0.48 ) }
    dend_15 { pt3dadd( 45.2442, -133.245, -11.9724, 0.36 ) }
    dend_15 { pt3dadd( 45.5256, -133.915, -12.0844, 0.36 ) }
    dend_15 { pt3dadd( 45.8462, -134.664, -12.1721, 0.36 ) }
    dend_15 { pt3dadd( 46.1017, -135.23, -12.2351, 0.36 ) }
    dend_15 { pt3dadd( 46.3693, -135.765, -12.2971, 0.36 ) }
    dend_15 { pt3dadd( 46.5843, -136.169, -12.3439, 0.48 ) }
    dend_15 { pt3dadd( 46.9379, -136.814, -12.4379, 0.48 ) }
    dend_15 { pt3dadd( 47.1462, -137.201, -12.5061, 0.36 ) }
    dend_15 { pt3dadd( 47.5304, -137.912, -12.6608, 0.36 ) }
    dend_15 { pt3dadd( 47.8962, -138.55, -12.8097, 0.36 ) }
    dend_15 { pt3dadd( 48.1938, -139.026, -12.9347, 0.36 ) }
    dend_15 { pt3dadd( 48.7885, -139.874, -13.1909, 0.36 ) }
    dend_15 { pt3dadd( 49.1296, -140.331, -13.3572, 0.36 ) }
    dend_15 { pt3dadd( 49.6148, -140.955, -13.6164, 0.36 ) }
    dend_15 { pt3dadd( 50.0603, -141.496, -13.8662, 0.48 ) }
    dend_15 { pt3dadd( 50.5236, -142.016, -14.1334, 0.48 ) }
    dend_15 { pt3dadd( 51.3168, -142.826, -14.5937, 0.48 ) }
    dend_15 { pt3dadd( 51.7186, -143.192, -14.8012, 0.12 ) }
    dend_15 { pt3dadd( 52.1253, -143.544, -14.9872, 0.12 ) }
    dend_15 { pt3dadd( 52.4771, -143.855, -15.1282, 0.24 ) }
    dend_15 { pt3dadd( 52.7751, -144.128, -15.229, 0.24 ) }
    dend_15 { pt3dadd( 53.3842, -144.668, -15.3969, 0.12 ) }
    dend_15 { pt3dadd( 54.0777, -145.236, -15.5546, 0.36 ) }
    dend_15 { pt3dadd( 54.5342, -145.58, -15.6246, 0.6 ) }
    dend_15 { pt3dadd( 54.9073, -145.853, -15.6756, 0.36 ) }
    dend_15 { pt3dadd( 55.2953, -146.142, -15.7447, 0.36 ) }
    dend_15 { pt3dadd( 56.1793, -146.824, -15.9461, 0.36 ) }
    dend_15 { pt3dadd( 56.5397, -147.116, -16.0508, 0.36 ) }
    dend_15 { pt3dadd( 57.121, -147.68, -16.2772, 0.24 ) }
    dend_15 { pt3dadd( 57.428, -148.033, -16.4027, 0.24 ) }
    dend_15 { pt3dadd( 57.8275, -148.611, -16.5954, 0.36 ) }
    dend_15 { pt3dadd( 57.9733, -148.902, -16.7002, 0.36 ) }
    dend_15 { pt3dadd( 58.0859, -149.221, -16.823, 0.36 ) }
    dend_15 { pt3dadd( 58.3522, -150.05, -17.1753, 0.36 ) }
    dend_15 { pt3dadd( 58.5374, -150.581, -17.3823, 0.48 ) }
    dend_15 { pt3dadd( 58.7412, -151.066, -17.5223, 0.48 ) }
    dend_15 { pt3dadd( 59.0229, -151.625, -17.6386, 0.12 ) }
    dend_15 { pt3dadd( 59.4597, -152.443, -17.7812, 0.12 ) }
    dend_15 { pt3dadd( 59.6654, -152.808, -17.8346, 0.48 ) }
    dend_15 { pt3dadd( 60.2784, -153.763, -17.9485, 0.12 ) }
    dend_15 { pt3dadd( 60.7771, -154.448, -18.0159, 0.12 ) }
    dend_15 { pt3dadd( 61.0404, -154.774, -18.0406, 0.6 ) }
    dend_15 { pt3dadd( 61.4872, -155.297, -18.0804, 0.12 ) }
    dend_15 { pt3dadd( 61.7594, -155.607, -18.1545, 0.12 ) }
    dend_15 { pt3dadd( 62.1633, -156.078, -18.35, 0.12 ) }
    dend_15 { pt3dadd( 62.4329, -156.415, -18.5761, 0.12 ) }
    dend_15 { pt3dadd( 62.5757, -156.602, -18.6861, 0.72 ) }
    dend_15 { pt3dadd( 62.8831, -157.05, -18.8971, 0.72 ) }
    dend_15 { pt3dadd( 63.4048, -157.859, -19.1988, 0.48 ) }
    dend_15 { pt3dadd( 63.5646, -158.157, -19.2942, 0.48 ) }
    dend_15 { pt3dadd( 63.8957, -158.878, -19.4914, 0.12 ) }
    dend_15 { pt3dadd( 64.5707, -160.478, -19.8708, 0.12 ) }
    dend_15 { pt3dadd( 64.7106, -160.816, -19.9409, 0.12 ) }
    dend_15 { pt3dadd( 64.8609, -161.208, -20.0025, 0.6 ) }
    dend_15 { pt3dadd( 65.1666, -162.036, -20.0895, 0.12 ) }
    dend_15 { pt3dadd( 65.229, -162.217, -20.115, 0.12 ) }
    dend_15 { pt3dadd( 65.499, -163.05, -20.2669, 0.12 ) }
    dend_15 { pt3dadd( 65.6205, -163.504, -20.3903, 0.12 ) }
    dend_15 { pt3dadd( 65.7296, -163.973, -20.4964, 0.48 ) }
    dend_15 { pt3dadd( 65.8006, -164.316, -20.5496, 0.12 ) }
    dend_15 { pt3dadd( 65.9443, -165.126, -20.6154, 0.12 ) }
    dend_15 { pt3dadd( 66.0727, -165.861, -20.6664, 0.12 ) }
    dend_15 { pt3dadd( 66.1397, -166.279, -20.7102, 0.96 ) }
    dend_15 { pt3dadd( 66.238, -166.896, -20.7983, 0.48 ) }
    dend_15 { pt3dadd( 66.3282, -167.427, -20.892, 0.36 ) }
    dend_15 { pt3dadd( 66.3751, -167.751, -20.9562, 0.36 ) }
    dend_15 { pt3dadd( 66.445, -168.395, -21.089, 0.36 ) }
    dend_15 { pt3dadd( 66.5015, -169.238, -21.26, 0.24 ) }
    dend_15 { pt3dadd( 66.5392, -170.04, -21.4501, 0.24 ) }
    dend_15 { pt3dadd( 66.5432, -170.382, -21.5384, 0.24 ) }
    dend_15 { pt3dadd( 66.5479, -170.644, -21.6127, 0.6 ) }
    dend_15 { pt3dadd( 66.5683, -171.218, -21.7698, 0.72 ) }
    dend_15 { pt3dadd( 66.5804, -171.631, -21.8705, 0.84 ) }
    dend_15 { pt3dadd( 66.631, -172.3, -22.0107, 0.12 ) }
    dend_15 { pt3dadd( 66.6637, -172.65, -22.1036, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_15 { pt3dadd( 66.7281, -173.256, -22.2793, 0.12 ) }
    dend_15 { pt3dadd( 66.7865, -173.694, -22.4139, 0.12 ) }
    dend_15 { pt3dadd( 66.8266, -173.915, -22.4865, 0.12 ) }
    dend_15 { pt3dadd( 66.9304, -174.352, -22.6287, 0.6 ) }
    dend_15 { pt3dadd( 67.0755, -174.917, -22.7874, 0.12 ) }
    dend_15 { pt3dadd( 67.2306, -175.575, -22.9589, 0.12 ) }
    dend_15 { pt3dadd( 67.2776, -175.825, -23.031, 0.48 ) }
    dend_15 { pt3dadd( 67.3817, -176.37, -23.2022, 0.48 ) }
    dend_15 { pt3dadd( 67.4913, -176.859, -23.3655, 0.48 ) }
    dend_15 { pt3dadd( 67.719, -177.714, -23.6588, 0.48 ) }
    dend_15 { pt3dadd( 67.8669, -178.192, -23.8206, 0.6 ) }
    dend_15 { pt3dadd( 68.1016, -178.95, -24.1196, 0.12 ) }
    dend_15 { pt3dadd( 68.2492, -179.467, -24.3351, 0.12 ) }
    dend_15 { pt3dadd( 68.3926, -179.996, -24.5664, 0.24 ) }
    dend_15 { pt3dadd( 68.5489, -180.545, -24.8172, 0.24 ) }
    dend_15 { pt3dadd( 68.7502, -181.182, -25.1446, 0.48 ) }
    dend_15 { pt3dadd( 68.936, -181.734, -25.4498, 0.12 ) }
    dend_15 { pt3dadd( 69.0628, -182.137, -25.6652, 0.12 ) }
    dend_15 { pt3dadd( 69.1133, -182.363, -25.7863, 0.6 ) }
    dend_15 { pt3dadd( 69.1524, -182.694, -25.9496, 0.6 ) }
    dend_15 { pt3dadd( 69.1332, -183.418, -26.3626, 0.12 ) }
    dend_15 { pt3dadd( 69.0643, -183.953, -26.6743, 0.12 ) }
    dend_15 { pt3dadd( 69.0048, -184.27, -26.8536, 0.12 ) }
    dend_15 { pt3dadd( 68.9158, -184.619, -27.0548, 0.6 ) }
    dend_15 { pt3dadd( 68.7439, -185.197, -27.366, 0.6 ) }
    dend_15 { pt3dadd( 68.3195, -186.519, -28.0466, 0.12 ) }
    dend_15 { pt3dadd( 68.1133, -187.111, -28.3542, 0.12 ) }
    dend_15 { pt3dadd( 68.0686, -187.258, -28.4307, 0.36 ) }
    dend_15 { pt3dadd( 68.0392, -187.415, -28.5116, 0.12 ) }
    dend_15 { pt3dadd( 67.9818, -188.038, -28.8173, 0.12 ) }
    dend_15 { pt3dadd( 67.9772, -188.621, -29.0687, 0.84 ) }
    dend_15 { pt3dadd( 68.0227, -189.474, -29.3572, 0.12 ) }
    dend_15 { pt3dadd( 68.0577, -190.356, -29.7042, 0.12 ) }
    dend_15 { pt3dadd( 68.0727, -191.263, -30.119, 0.12 ) }
    dend_15 { pt3dadd( 68.0724, -191.596, -30.2815, 0.72 ) }
    dend_15 { pt3dadd( 68.0629, -192.124, -30.5415, 0.96 ) }
    dend_15 { pt3dadd( 68.0551, -192.463, -30.6987, 0.96 ) }
    dend_15 { pt3dadd( 68.0142, -193.616, -31.1948, 0.48 ) }
    dend_15 { pt3dadd( 67.9611, -194.229, -31.4562, 0.12 ) }
    dend_15 { pt3dadd( 67.8601, -194.975, -31.7813, 0.12 ) }
    dend_15 { pt3dadd( 67.7353, -195.718, -32.0814, 0.12 ) }
    dend_15 { pt3dadd( 67.6699, -196.045, -32.1917, 0.12 ) }
    dend_15 { pt3dadd( 67.5375, -196.635, -32.3404, 0.12 ) }
    dend_15 { pt3dadd( 67.4012, -197.132, -32.4381, 0.96 ) }
    dend_15 { pt3dadd( 67.1148, -197.974, -32.618, 0.12 ) }
    dend_15 { pt3dadd( 66.8442, -198.647, -32.795, 0.12 ) }
    dend_15 { pt3dadd( 66.4553, -199.517, -33.0566, 0.12 ) }
    dend_15 { pt3dadd( 66.2829, -199.877, -33.1833, 0.12 ) }
    dend_15 { pt3dadd( 65.8277, -200.837, -33.5442, 0.48 ) }
    dend_15 { pt3dadd( 65.6765, -201.159, -33.6688, 0.12 ) }
    dend_15 { pt3dadd( 65.476, -201.53, -33.891, 0.12 ) }
    dend_15 { pt3dadd( 65.4107, -201.646, -33.9847, 0.36 ) }
    dend_15 { pt3dadd( 65.2318, -201.945, -34.2577, 0.12 ) }
    dend_15 { pt3dadd( 64.8, -202.658, -34.9452, 0.12 ) }
    dend_15 { pt3dadd( 64.4234, -203.278, -35.5575, 1.32 ) }
    dend_15 { pt3dadd( 63.4078, -204.871, -37.2156, 0.84 ) }
    dend_15 { pt3dadd( 63.2634, -205.074, -37.4509, 0.84 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.66796, -37.3377, -16.0792, 0.36 ) }
    dend_13 { pt3dadd( -5.66316, -38.335, -17.1021, 0.36 ) }
    dend_13 { pt3dadd( -5.62799, -38.9211, -17.6849, 0.36 ) }
    dend_13 { pt3dadd( -5.58094, -39.4403, -18.1358, 0.6 ) }
    dend_13 { pt3dadd( -5.49675, -40.0912, -18.6389, 0.96 ) }
    dend_13 { pt3dadd( -5.4223, -40.5215, -18.911, 0.84 ) }
    dend_13 { pt3dadd( -5.12411, -41.8383, -19.5789, 0.36 ) }
    dend_13 { pt3dadd( -4.95237, -42.3395, -19.7334, 0.36 ) }
    dend_13 { pt3dadd( -4.57643, -43.241, -19.9098, 0.36 ) }
    dend_13 { pt3dadd( -4.34932, -43.7463, -19.954, 0.48 ) }
    dend_13 { pt3dadd( -3.87618, -44.7803, -19.9591, 0.48 ) }
    dend_13 { pt3dadd( -3.46996, -45.6314, -19.9237, 0.12 ) }
    dend_13 { pt3dadd( -3.00613, -46.5497, -19.8435, 0.12 ) }
    dend_13 { pt3dadd( -2.63929, -47.189, -19.8131, 0.12 ) }
    dend_13 { pt3dadd( -2.51308, -47.3999, -19.8118, 0.84 ) }
    dend_13 { pt3dadd( -2.24628, -47.8698, -19.8349, 0.84 ) }
    dend_13 { pt3dadd( -1.8391, -48.6457, -19.948, 0.36 ) }
    dend_13 { pt3dadd( -1.56659, -49.2088, -20.0545, 0.12 ) }
    dend_13 { pt3dadd( -1.00363, -50.3818, -20.3124, 0.12 ) }
    dend_13 { pt3dadd( -0.821426, -50.7194, -20.3901, 0.48 ) }
    dend_13 { pt3dadd( -0.633198, -51.0574, -20.4747, 0.48 ) }
    dend_13 { pt3dadd( -0.33609, -51.5945, -20.6078, 0.36 ) }
    dend_13 { pt3dadd( -0.210218, -51.8697, -20.6819, 0.36 ) }
    dend_13 { pt3dadd( -0.00711219, -52.4367, -20.8921, 0.48 ) }
    dend_13 { pt3dadd( 0.159164, -53.1244, -21.3347, 0.36 ) }
    dend_13 { pt3dadd( 0.267564, -53.6592, -21.7419, 0.48 ) }
    dend_13 { pt3dadd( 0.319636, -53.9879, -22.0169, 0.72 ) }
    dend_13 { pt3dadd( 0.378805, -54.59, -22.5772, 0.72 ) }
    dend_13 { pt3dadd( 0.399147, -55.2472, -23.2096, 0.72 ) }
    dend_13 { pt3dadd( 0.413491, -56.5577, -24.5237, 0.12 ) }
    dend_13 { pt3dadd( 0.420794, -56.799, -24.7679, 0.12 ) }
    dend_13 { pt3dadd( 0.428863, -56.8695, -24.8378, 0.48 ) }
    dend_13 { pt3dadd( 0.553586, -57.4803, -25.4262, 0.48 ) }
    dend_13 { pt3dadd( 0.781184, -58.2419, -26.0683, 0.12 ) }
    dend_13 { pt3dadd( 0.968069, -58.7518, -26.4643, 0.12 ) }
    dend_13 { pt3dadd( 1.11521, -59.1159, -26.7105, 0.12 ) }
    dend_13 { pt3dadd( 1.21586, -59.3999, -26.9072, 0.48 ) }
    dend_13 { pt3dadd( 1.38389, -59.9356, -27.2934, 0.84 ) }
    dend_13 { pt3dadd( 1.58448, -60.6424, -27.7966, 0.84 ) }
    dend_13 { pt3dadd( 1.77473, -61.611, -28.4638, 0.12 ) }
    dend_13 { pt3dadd( 1.78357, -61.7013, -28.5253, 0.12 ) }
    dend_13 { pt3dadd( 1.79401, -62.287, -28.9124, 0.12 ) }
    dend_13 { pt3dadd( 1.75253, -62.9912, -29.4554, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_13 { pt3dadd( 1.71315, -63.4159, -29.7962, 0.12 ) }
    dend_13 { pt3dadd( 1.65106, -64.1812, -30.3877, 0.12 ) }
    dend_13 { pt3dadd( 1.60992, -64.7948, -30.8707, 0.84 ) }
    dend_13 { pt3dadd( 1.59059, -65.2783, -31.2717, 0.72 ) }
    dend_13 { pt3dadd( 1.57951, -66.7511, -32.5257, 0.24 ) }
    dend_13 { pt3dadd( 1.58371, -67.0208, -32.8089, 0.24 ) }
    dend_13 { pt3dadd( 1.63808, -67.6659, -33.5933, 0.24 ) }
    dend_13 { pt3dadd( 1.76528, -68.2979, -34.4275, 0.6 ) }
    dend_13 { pt3dadd( 1.87251, -68.6824, -34.9415, 0.84 ) }
    dend_13 { pt3dadd( 1.94764, -68.8796, -35.2091, 0.6 ) }
    dend_13 { pt3dadd( 2.6552, -70.4365, -37.171, 0.12 ) }
    dend_13 { pt3dadd( 2.76289, -70.6607, -37.4632, 0.12 ) }
    dend_13 { pt3dadd( 2.91945, -70.974, -37.8774, 0.12 ) }
    dend_13 { pt3dadd( 2.95716, -71.0555, -37.9648, 0.48 ) }
    dend_13 { pt3dadd( 3.0826, -71.3875, -38.2594, 0.48 ) }
    dend_13 { pt3dadd( 3.18317, -71.7553, -38.4853, 0.48 ) }
    dend_13 { pt3dadd( 3.28906, -72.3685, -38.6705, 0.36 ) }
    dend_13 { pt3dadd( 3.34171, -72.7478, -38.7841, 0.36 ) }
    dend_13 { pt3dadd( 3.42611, -73.4089, -38.9721, 0.36 ) }
    dend_13 { pt3dadd( 3.51156, -73.9865, -39.1627, 0.12 ) }
    dend_13 { pt3dadd( 3.60217, -74.5824, -39.3698, 0.12 ) }
    dend_13 { pt3dadd( 3.67044, -75.0265, -39.5288, 0.6 ) }
    dend_13 { pt3dadd( 3.75368, -75.5769, -39.7167, 0.84 ) }
    dend_13 { pt3dadd( 3.8231, -76.004, -39.8613, 0.84 ) }
    dend_13 { pt3dadd( 3.96794, -76.9092, -40.2107, 0.36 ) }
    dend_13 { pt3dadd( 4.03837, -77.4077, -40.4238, 0.36 ) }
    dend_13 { pt3dadd( 4.09344, -77.881, -40.6545, 0.48 ) }
    dend_13 { pt3dadd( 4.1413, -78.275, -40.8562, 0.48 ) }
    dend_13 { pt3dadd( 4.19689, -78.6784, -41.0576, 0.72 ) }
    dend_13 { pt3dadd( 4.33282, -79.5564, -41.4441, 0.72 ) }
    dend_13 { pt3dadd( 4.45805, -80.2405, -41.6978, 0.36 ) }
    dend_13 { pt3dadd( 4.49684, -80.4093, -41.7661, 0.24 ) }
    dend_13 { pt3dadd( 4.61686, -80.8455, -41.941, 0.12 ) }
    dend_13 { pt3dadd( 4.84463, -81.575, -42.1896, 0.12 ) }
    dend_13 { pt3dadd( 5.0469, -82.1815, -42.3283, 0.12 ) }
    dend_13 { pt3dadd( 5.08494, -82.2849, -42.3387, 0.48 ) }
    dend_13 { pt3dadd( 5.36045, -82.971, -42.3983, 0.6 ) }
    dend_13 { pt3dadd( 5.49101, -83.2841, -42.4293, 0.6 ) }
    dend_13 { pt3dadd( 5.79529, -83.9717, -42.4991, 0.12 ) }
    dend_13 { pt3dadd( 6.18598, -84.8164, -42.5803, 0.12 ) }
    dend_13 { pt3dadd( 6.3868, -85.2377, -42.6153, 0.36 ) }
    dend_13 { pt3dadd( 6.64011, -85.7856, -42.6505, 0.12 ) }
    dend_13 { pt3dadd( 6.91481, -86.3868, -42.6924, 0.12 ) }
    dend_13 { pt3dadd( 7.26935, -87.198, -42.7865, 0.12 ) }
    dend_13 { pt3dadd( 7.43647, -87.6068, -42.8522, 0.12 ) }
    dend_13 { pt3dadd( 7.57916, -87.9742, -42.911, 0.48 ) }
    dend_13 { pt3dadd( 7.73061, -88.3906, -42.971, 0.48 ) }
    dend_13 { pt3dadd( 7.90091, -88.8807, -43.0399, 0.12 ) }
    dend_13 { pt3dadd( 8.29322, -90.0898, -43.2422, 0.12 ) }
    dend_13 { pt3dadd( 8.35106, -90.3007, -43.2781, 0.48 ) }
    dend_13 { pt3dadd( 8.43731, -90.6365, -43.3313, 0.48 ) }
    dend_13 { pt3dadd( 8.51417, -90.9748, -43.3839, 0.48 ) }
    dend_13 { pt3dadd( 8.59571, -91.3578, -43.4373, 0.12 ) }
    dend_13 { pt3dadd( 8.70014, -91.9003, -43.4954, 0.12 ) }
    dend_13 { pt3dadd( 8.88832, -93.0025, -43.614, 0.12 ) }
    dend_13 { pt3dadd( 8.96256, -93.492, -43.6605, 0.24 ) }
    dend_13 { pt3dadd( 9.01101, -93.7969, -43.6796, 0.12 ) }
    dend_13 { pt3dadd( 9.12501, -94.4906, -43.6997, 0.12 ) }
    dend_13 { pt3dadd( 9.27451, -95.3653, -43.6958, 0.12 ) }
    dend_13 { pt3dadd( 9.33406, -95.6934, -43.6895, 0.12 ) }
    dend_13 { pt3dadd( 9.45642, -96.3487, -43.6641, 0.12 ) }
    dend_13 { pt3dadd( 9.59208, -97.0176, -43.6263, 0.48 ) }
    dend_13 { pt3dadd( 9.64633, -97.2419, -43.61, 0.48 ) }
    dend_13 { pt3dadd( 9.70077, -97.4569, -43.5945, 0.48 ) }
    dend_13 { pt3dadd( 9.73885, -97.6089, -43.5847, 0.12 ) }
    dend_13 { pt3dadd( 9.82765, -97.9481, -43.5688, 0.12 ) }
    dend_13 { pt3dadd( 9.96931, -98.529, -43.5569, 0.12 ) }
    dend_13 { pt3dadd( 10.0975, -99.2114, -43.5616, 0.12 ) }
    dend_13 { pt3dadd( 10.135, -99.4563, -43.5827, 0.72 ) }
    dend_13 { pt3dadd( 10.1716, -99.7618, -43.6457, 0.84 ) }
    dend_13 { pt3dadd( 10.1975, -100.204, -43.782, 0.24 ) }
    dend_13 { pt3dadd( 10.186, -100.823, -44.0227, 0.24 ) }
    dend_13 { pt3dadd( 10.1622, -101.219, -44.1944, 0.24 ) }
    dend_13 { pt3dadd( 10.1442, -102.058, -44.5551, 0.36 ) }
    dend_13 { pt3dadd( 10.1653, -102.718, -44.8565, 0.12 ) }
    dend_13 { pt3dadd( 10.1949, -103.166, -45.0623, 0.12 ) }
    dend_13 { pt3dadd( 10.2344, -103.7, -45.2993, 0.12 ) }
    dend_13 { pt3dadd( 10.3086, -104.345, -45.5582, 0.12 ) }
    dend_13 { pt3dadd( 10.4416, -105.143, -45.8428, 0.48 ) }
    dend_13 { pt3dadd( 10.5744, -105.747, -46.0078, 0.12 ) }
    dend_13 { pt3dadd( 10.6789, -106.147, -46.1359, 0.12 ) }
    dend_13 { pt3dadd( 10.7922, -106.541, -46.2982, 0.12 ) }
    dend_13 { pt3dadd( 10.9086, -106.94, -46.4816, 0.12 ) }
    dend_13 { pt3dadd( 11.0216, -107.361, -46.7145, 0.6 ) }
    dend_13 { pt3dadd( 11.1137, -107.734, -46.9358, 0.6 ) }
    dend_13 { pt3dadd( 11.3844, -108.79, -47.5526, 0.12 ) }
    dend_13 { pt3dadd( 11.5342, -109.341, -47.9137, 0.12 ) }
    dend_13 { pt3dadd( 11.6735, -109.902, -48.2797, 0.12 ) }
    dend_13 { pt3dadd( 11.8338, -110.597, -48.6929, 0.6 ) }
    dend_13 { pt3dadd( 11.9059, -110.9, -48.8471, 0.6 ) }
    dend_13 { pt3dadd( 11.9829, -111.211, -48.9858, 0.6 ) }
    dend_13 { pt3dadd( 12.1705, -111.942, -49.2351, 0.12 ) }
    dend_13 { pt3dadd( 12.428, -112.87, -49.5086, 0.12 ) }
    dend_13 { pt3dadd( 12.6516, -113.647, -49.7134, 0.12 ) }
    dend_13 { pt3dadd( 12.8589, -114.312, -49.8518, 0.36 ) }
    dend_13 { pt3dadd( 12.9344, -114.524, -49.9029, 0.12 ) }
    dend_13 { pt3dadd( 13.1275, -115.036, -50.0336, 0.12 ) }
    dend_13 { pt3dadd( 13.2672, -115.398, -50.124, 0.48 ) }
    dend_13 { pt3dadd( 13.4908, -116.018, -50.3726, 0.12 ) }
    dend_13 { pt3dadd( 13.5975, -116.485, -50.6416, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_13 { pt3dadd( 13.6599, -117.223, -51.1406, 0.12 ) }
    dend_13 { pt3dadd( 13.6488, -117.542, -51.3718, 0.6 ) }
    dend_13 { pt3dadd( 13.6168, -117.741, -51.5115, 0.6 ) }
    dend_13 { pt3dadd( 13.3484, -118.719, -52.2079, 0.12 ) }
    dend_13 { pt3dadd( 13.1103, -119.385, -52.6544, 0.12 ) }
    dend_13 { pt3dadd( 12.9463, -119.779, -52.8941, 0.36 ) }
    dend_13 { pt3dadd( 12.715, -120.279, -53.1599, 0.36 ) }
    dend_13 { pt3dadd( 12.3859, -121.043, -53.5214, 0.36 ) }
    dend_13 { pt3dadd( 12.1128, -121.661, -53.7653, 0.12 ) }
    dend_13 { pt3dadd( 11.8812, -122.149, -53.9151, 0.12 ) }
    dend_13 { pt3dadd( 11.5851, -122.687, -54.0685, 0.48 ) }
    dend_13 { pt3dadd( 11.4146, -122.978, -54.1471, 0.12 ) }
    dend_13 { pt3dadd( 10.9872, -123.645, -54.3092, 0.12 ) }
    dend_13 { pt3dadd( 10.5947, -124.2, -54.424, 0.6 ) }
    dend_13 { pt3dadd( 10.2613, -124.654, -54.4969, 0.12 ) }
    dend_13 { pt3dadd( 9.87572, -125.13, -54.5735, 0.12 ) }
    dend_13 { pt3dadd( 9.29015, -125.79, -54.6784, 0.12 ) }
    dend_13 { pt3dadd( 9.05364, -126.037, -54.7133, 0.12 ) }
    dend_13 { pt3dadd( 8.50188, -126.557, -54.7731, 0.48 ) }
    dend_13 { pt3dadd( 8.20129, -126.836, -54.8, 0.12 ) }
    dend_13 { pt3dadd( 7.68026, -127.278, -54.8262, 0.12 ) }
    dend_13 { pt3dadd( 7.32039, -127.546, -54.8416, 0.48 ) }
    dend_13 { pt3dadd( 6.8647, -127.83, -54.867, 0.48 ) }
    dend_13 { pt3dadd( 6.73327, -127.905, -54.8744, 0.12 ) }
    dend_13 { pt3dadd( 6.33064, -128.115, -54.8954, 0.12 ) }
    dend_13 { pt3dadd( 5.89961, -128.332, -54.9142, 0.48 ) }
    dend_13 { pt3dadd( 5.50945, -128.538, -54.9321, 0.48 ) }
    dend_13 { pt3dadd( 4.98038, -128.822, -54.9542, 0.12 ) }
    dend_13 { pt3dadd( 4.4621, -129.081, -54.9753, 0.12 ) }
    dend_13 { pt3dadd( 4.11363, -129.246, -54.9813, 0.12 ) }
    dend_13 { pt3dadd( 3.98195, -129.307, -54.981, 0.12 ) }
    dend_13 { pt3dadd( 3.6284, -129.46, -54.9733, 0.48 ) }
    dend_13 { pt3dadd( 3.09909, -129.684, -54.9503, 0.48 ) }
    dend_13 { pt3dadd( 2.60496, -129.883, -54.9185, 0.48 ) }
    dend_13 { pt3dadd( 2.03957, -130.092, -54.885, 0.12 ) }
    dend_13 { pt3dadd( 1.67604, -130.215, -54.8663, 0.12 ) }
    dend_13 { pt3dadd( 0.747964, -130.468, -54.8304, 0.12 ) }
    dend_13 { pt3dadd( 0.366795, -130.552, -54.8198, 0.12 ) }
    dend_13 { pt3dadd( 0.158296, -130.593, -54.8253, 0.6 ) }
    dend_13 { pt3dadd( -0.269992, -130.679, -54.8566, 0.6 ) }
    dend_13 { pt3dadd( -0.698796, -130.779, -54.9029, 0.24 ) }
    dend_13 { pt3dadd( -1.8231, -131.092, -55.0402, 0.24 ) }
    dend_13 { pt3dadd( -2.22832, -131.256, -55.0934, 0.48 ) }
    dend_13 { pt3dadd( -2.89277, -131.594, -55.1798, 0.12 ) }
    dend_13 { pt3dadd( -3.46187, -131.962, -55.2979, 0.12 ) }
    dend_13 { pt3dadd( -3.98589, -132.383, -55.4402, 0.12 ) }
    dend_13 { pt3dadd( -4.35766, -132.759, -55.5619, 0.12 ) }
    dend_13 { pt3dadd( -5.01749, -133.624, -55.81, 0.12 ) }
    dend_13 { pt3dadd( -5.22398, -133.952, -55.8857, 0.48 ) }
    dend_13 { pt3dadd( -5.79204, -135.083, -56.0685, 0.48 ) }
    dend_13 { pt3dadd( -5.95229, -135.45, -56.1193, 0.12 ) }
    dend_13 { pt3dadd( -6.21543, -136.129, -56.1995, 0.12 ) }
    dend_13 { pt3dadd( -6.56936, -137.156, -56.2979, 0.12 ) }
    dend_13 { pt3dadd( -6.98174, -138.585, -56.3933, 0.12 ) }
    dend_13 { pt3dadd( -7.4195, -140.465, -56.5002, 0.12 ) }
    dend_13 { pt3dadd( -7.4777, -140.817, -56.5122, 0.72 ) }
    dend_13 { pt3dadd( -7.53632, -141.36, -56.5424, 0.48 ) }
    dend_13 { pt3dadd( -7.54315, -141.517, -56.5512, 0.12 ) }
    dend_13 { pt3dadd( -7.50602, -142.461, -56.6043, 0.12 ) }
    dend_13 { pt3dadd( -7.36038, -143.475, -56.6584, 0.12 ) }
    dend_13 { pt3dadd( -7.18447, -144.189, -56.688, 0.12 ) }
    dend_13 { pt3dadd( -7.09362, -144.528, -56.6955, 0.36 ) }
    dend_13 { pt3dadd( -6.92536, -145.123, -56.6953, 0.12 ) }
    dend_13 { pt3dadd( -6.74248, -145.773, -56.6819, 0.12 ) }
    dend_13 { pt3dadd( -6.5457, -146.481, -56.6461, 0.12 ) }
    dend_13 { pt3dadd( -6.33899, -147.252, -56.5842, 0.12 ) }
    dend_13 { pt3dadd( -6.22809, -147.928, -57.1214, 0.12 ) }
    dend_13 { pt3dadd( -6.20066, -148.299, -57.9467, 0.12 ) }
    dend_13 { pt3dadd( -6.19914, -148.361, -58.1505, 0.12 ) }
    dend_13 { pt3dadd( -6.20251, -148.444, -58.5718, 0.72 ) }
    dend_13 { pt3dadd( -6.20739, -148.483, -58.9989, 1.08 ) }
    dend_13 { pt3dadd( -6.39376, -148.564, -65.8702, 0.84 ) }
    dend_13 { pt3dadd( -6.46085, -148.436, -68.0119, 0.12 ) }
    dend_13 { pt3dadd( -6.47229, -148.393, -68.4251, 0.12 ) }
    dend_13 { pt3dadd( -6.48307, -148.317, -69.066, 0.12 ) }
    dend_13 { pt3dadd( -6.48836, -148.064, -70.9263, 0.48 ) }
    dend_13 { pt3dadd( -6.46148, -147.794, -72.6852, 0.6 ) }
    dend_13 { pt3dadd( -6.382, -147.513, -74.3167, 0.6 ) }
    dend_13 { pt3dadd( -6.25446, -147.334, -76.8995, 0.12 ) }
    dend_13 { pt3dadd( -6.22619, -147.348, -77.4698, 0.12 ) }
    dend_13 { pt3dadd( -6.20946, -147.383, -77.704, 0.12 ) }
    dend_13 { pt3dadd( -6.18024, -147.452, -77.9036, 0.72 ) }
    dend_13 { pt3dadd( -6.04233, -147.698, -78.3609, 0.72 ) }
    dend_13 { pt3dadd( -5.47816, -148.529, -79.4543, 0.12 ) }
    dend_13 { pt3dadd( -5.37268, -148.647, -79.5867, 0.12 ) }
    dend_13 { pt3dadd( -4.84912, -149.132, -80.1744, 0.12 ) }
    dend_13 { pt3dadd( -3.96409, -149.774, -81.2902, 0.12 ) }
    dend_13 { pt3dadd( -3.77559, -149.865, -81.5312, 0.12 ) }
    dend_13 { pt3dadd( -3.17962, -150.022, -82.2695, 0.12 ) }
    dend_13 { pt3dadd( -3.02997, -150.034, -82.4531, 0.72 ) }
    dend_13 { pt3dadd( -2.77422, -150.045, -82.797, 0.72 ) }
    dend_13 { pt3dadd( -1.61731, -150.073, -84.7174, 0.12 ) }
    dend_13 { pt3dadd( -1.38813, -150.086, -85.1324, 0.12 ) }
    dend_13 { pt3dadd( -1.2864, -150.093, -85.3465, 0.48 ) }
    dend_13 { pt3dadd( -1.04324, -150.094, -86.0964, 0.12 ) }
    dend_13 { pt3dadd( -0.901712, -150.076, -86.6445, 0.12 ) }
    dend_13 { pt3dadd( -0.704513, -150.045, -87.4356, 0.72 ) }
    dend_13 { pt3dadd( -0.6243, -150.049, -87.7612, 0.84 ) }
    dend_13 { pt3dadd( -0.343154, -150.072, -89.1377, 1.32 ) }
    dend_13 { pt3dadd( -0.0764204, -150.031, -90.8268, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( -0.0423505, -149.992, -91.1584, 0.6 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 1/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 26.8154, 2.05516, -6.18296, 0.48 ) }
    dend_9 { pt3dadd( 27.0381, 2.63792, -6.68978, 0.48 ) }
    dend_9 { pt3dadd( 27.2775, 3.31677, -7.33758, 0.12 ) }
    dend_9 { pt3dadd( 27.5871, 4.1151, -8.11812, 0.12 ) }
    dend_9 { pt3dadd( 27.7657, 4.55129, -8.52899, 1.2 ) }
    dend_9 { pt3dadd( 27.8611, 4.77464, -8.74947, 1.2 ) }
    dend_9 { pt3dadd( 28.7119, 6.66802, -10.6566, 0.12 ) }
    dend_9 { pt3dadd( 29.072, 7.32906, -11.384, 0.12 ) }
    dend_9 { pt3dadd( 29.2554, 7.62174, -11.7151, 0.12 ) }
    dend_9 { pt3dadd( 29.4791, 7.92631, -12.0782, 0.12 ) }
    dend_9 { pt3dadd( 30.1321, 8.6988, -13.1615, 0.72 ) }
    dend_9 { pt3dadd( 30.447, 9.02661, -13.643, 0.84 ) }
    dend_9 { pt3dadd( 30.8486, 9.36176, -14.1219, 0.12 ) }
    dend_9 { pt3dadd( 31.004, 9.46324, -14.2971, 0.12 ) }
    dend_9 { pt3dadd( 31.3458, 9.64847, -14.7127, 0.72 ) }
    dend_9 { pt3dadd( 32.9314, 10.339, -16.6375, 0.12 ) }
    dend_9 { pt3dadd( 33.2589, 10.4615, -17.0055, 0.12 ) }
    dend_9 { pt3dadd( 33.7819, 10.6432, -17.586, 0.12 ) }
    dend_9 { pt3dadd( 34.0139, 10.7318, -17.8452, 0.96 ) }
    dend_9 { pt3dadd( 35.1499, 11.2224, -19.0264, 0.12 ) }
    dend_9 { pt3dadd( 35.4139, 11.342, -19.3162, 0.12 ) }
    dend_9 { pt3dadd( 35.8945, 11.5777, -19.8018, 0.6 ) }
    dend_9 { pt3dadd( 36.3366, 11.7986, -20.259, 0.12 ) }
    dend_9 { pt3dadd( 37.095, 12.1965, -21.044, 0.12 ) }
    dend_9 { pt3dadd( 37.8019, 12.5722, -21.7549, 0.72 ) }
    dend_9 { pt3dadd( 39.2406, 13.358, -23.0997, 0.12 ) }
    dend_9 { pt3dadd( 39.8009, 13.667, -23.6281, 0.12 ) }
    dend_9 { pt3dadd( 40.2902, 13.9344, -24.0848, 0.12 ) }
    dend_9 { pt3dadd( 40.5147, 14.0627, -24.2779, 0.6 ) }
    dend_9 { pt3dadd( 41.3096, 14.5135, -24.8837, 0.12 ) }
    dend_9 { pt3dadd( 41.5556, 14.6535, -25.0394, 0.12 ) }
    dend_9 { pt3dadd( 42.0133, 14.9076, -25.2679, 0.6 ) }
    dend_9 { pt3dadd( 42.1889, 14.9944, -25.3843, 0.12 ) }
    dend_9 { pt3dadd( 42.6126, 15.1819, -25.7013, 0.12 ) }
    dend_9 { pt3dadd( 43.2377, 15.3993, -26.1417, 0.6 ) }
    dend_9 { pt3dadd( 43.6232, 15.5048, -26.3842, 0.6 ) }
    dend_9 { pt3dadd( 44.5768, 15.6938, -26.9691, 0.48 ) }
    dend_9 { pt3dadd( 45.206, 15.8005, -27.3524, 0.12 ) }
    dend_9 { pt3dadd( 45.6143, 15.8742, -27.5944, 0.12 ) }
    dend_9 { pt3dadd( 46.4013, 16.0104, -28.0214, 0.12 ) }
    dend_9 { pt3dadd( 46.8184, 16.096, -28.2133, 0.12 ) }
    dend_9 { pt3dadd( 47.317, 16.2269, -28.4749, 0.48 ) }
    dend_9 { pt3dadd( 47.9633, 16.4306, -28.8082, 0.48 ) }
    dend_9 { pt3dadd( 48.1703, 16.4967, -28.9221, 0.48 ) }
    dend_9 { pt3dadd( 48.5419, 16.6184, -29.1531, 0.12 ) }
    dend_9 { pt3dadd( 48.741, 16.6889, -29.2941, 0.12 ) }
    dend_9 { pt3dadd( 49.7692, 17.0104, -30.157, 0.12 ) }
    dend_9 { pt3dadd( 50.3066, 17.1459, -30.6115, 1.44 ) }
    dend_9 { pt3dadd( 50.9436, 17.2672, -31.1373, 0.12 ) }
    dend_9 { pt3dadd( 51.2541, 17.3092, -31.4067, 0.12 ) }
    dend_9 { pt3dadd( 51.5306, 17.3232, -31.7026, 0.24 ) }
    dend_9 { pt3dadd( 52.552, 17.3117, -32.8307, 0.12 ) }
    dend_9 { pt3dadd( 53.1787, 17.2819, -33.495, 0.12 ) }
    dend_9 { pt3dadd( 53.4231, 17.2674, -33.7554, 0.72 ) }
    dend_9 { pt3dadd( 54.2427, 17.2272, -34.59, 0.12 ) }
    dend_9 { pt3dadd( 56.2309, 17.1479, -36.5077, 0.12 ) }
    dend_9 { pt3dadd( 56.82, 17.1368, -37.0399, 0.12 ) }
    dend_9 { pt3dadd( 57.3603, 17.1467, -37.4701, 0.12 ) }
    dend_9 { pt3dadd( 57.7678, 17.174, -37.7684, 0.12 ) }
    dend_9 { pt3dadd( 58.2893, 17.2526, -38.0669, 0.72 ) }
    dend_9 { pt3dadd( 58.5061, 17.3122, -38.1396, 0.72 ) }
    dend_9 { pt3dadd( 59.198, 17.5838, -38.2693, 0.12 ) }
    dend_9 { pt3dadd( 59.9365, 17.922, -38.4385, 0.12 ) }
    dend_9 { pt3dadd( 60.5154, 18.1989, -38.6126, 0.12 ) }
    dend_9 { pt3dadd( 61.353, 18.6121, -38.8954, 0.12 ) }
    dend_9 { pt3dadd( 61.9218, 18.8969, -39.0904, 0.12 ) }
    dend_9 { pt3dadd( 62.6347, 19.2604, -39.3265, 0.48 ) }
    dend_9 { pt3dadd( 62.9025, 19.3943, -39.4469, 0.48 ) }
    dend_9 { pt3dadd( 63.5563, 19.6915, -39.8285, 0.12 ) }
    dend_9 { pt3dadd( 64.0754, 19.9029, -40.1738, 0.12 ) }
    dend_9 { pt3dadd( 64.7111, 20.1335, -40.6496, 0.12 ) }
    dend_9 { pt3dadd( 64.9103, 20.2114, -40.8021, 0.48 ) }
    dend_9 { pt3dadd( 66.4131, 20.8318, -41.912, 0.12 ) }
    dend_9 { pt3dadd( 67.0746, 21.128, -42.5073, 0.12 ) }
    dend_9 { pt3dadd( 67.3569, 21.2718, -42.7685, 0.36 ) }
    dend_9 { pt3dadd( 67.6776, 21.4446, -43.0829, 0.12 ) }
    dend_9 { pt3dadd( 68.2669, 21.7821, -43.6897, 0.12 ) }
    dend_9 { pt3dadd( 68.4157, 21.8715, -43.8378, 0.36 ) }
    dend_9 { pt3dadd( 69.8252, 22.7977, -45.0657, 0.12 ) }
    dend_9 { pt3dadd( 70.7182, 23.4169, -45.9914, 0.12 ) }
    dend_9 { pt3dadd( 70.7182, 23.4169, -45.9914, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 26.8154, 2.05516, -6.18296, 0.36 ) }
    dend_8 { pt3dadd( 27.4921, 2.76311, -6.29357, 0.36 ) }
    dend_8 { pt3dadd( 28.3103, 3.58214, -6.39981, 0.36 ) }
    dend_8 { pt3dadd( 28.8586, 4.09841, -6.45822, 0.96 ) }
    dend_8 { pt3dadd( 29.3977, 4.61659, -6.4712, 1.2 ) }
    dend_8 { pt3dadd( 29.9348, 5.14833, -6.45574, 0.96 ) }
    dend_8 { pt3dadd( 30.3429, 5.57234, -6.43035, 0.72 ) }
    dend_8 { pt3dadd( 30.8024, 6.07886, -6.34268, 0.72 ) }
    dend_8 { pt3dadd( 31.1098, 6.45387, -6.23155, 0.72 ) }
    dend_8 { pt3dadd( 31.6611, 7.18939, -5.94462, 0.36 ) }
    dend_8 { pt3dadd( 31.7602, 7.32646, -5.88038, 0.36 ) }
    dend_8 { pt3dadd( 32.1036, 7.77998, -5.61033, 0.6 ) }
    dend_8 { pt3dadd( 32.3008, 7.99658, -5.44006, 0.6 ) }
    dend_8 { pt3dadd( 33.0647, 8.65317, -4.7084, 0.48 ) }
    dend_8 { pt3dadd( 33.5955, 9.05073, -4.17761, 0.48 ) }
    dend_8 { pt3dadd( 34.0214, 9.373, -3.75245, 0.48 ) }
    dend_8 { pt3dadd( 34.5369, 9.74948, -3.19228, 0.96 ) }
    dend_8 { pt3dadd( 35.1817, 10.1611, -2.47809, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_8 { pt3dadd( 35.8027, 10.5071, -1.76348, 0.72 ) }
    dend_8 { pt3dadd( 36.297, 10.7433, -1.20196, 0.48 ) }
    dend_8 { pt3dadd( 37.1333, 11.1806, -0.288776, 0.72 ) }
    dend_8 { pt3dadd( 37.8448, 11.6343, 0.409508, 0.72 ) }
    dend_8 { pt3dadd( 38.3281, 12.0188, 0.834043, 0.72 ) }
    dend_8 { pt3dadd( 39.116, 12.7705, 1.45304, 0.48 ) }
    dend_8 { pt3dadd( 39.5195, 13.2058, 1.71779, 0.36 ) }
    dend_8 { pt3dadd( 40.2061, 13.9882, 2.09346, 0.36 ) }
    dend_8 { pt3dadd( 40.7208, 14.6195, 2.31643, 0.36 ) }
    dend_8 { pt3dadd( 41.2471, 15.3309, 2.47871, 0.84 ) }
    dend_8 { pt3dadd( 41.6624, 15.9057, 2.58649, 0.84 ) }
    dend_8 { pt3dadd( 42.1754, 16.6019, 2.67044, 0.48 ) }
    dend_8 { pt3dadd( 42.6751, 17.2672, 2.75849, 0.48 ) }
    dend_8 { pt3dadd( 42.9986, 17.6829, 2.82332, 0.6 ) }
    dend_8 { pt3dadd( 43.5038, 18.3463, 2.92084, 0.72 ) }
    dend_8 { pt3dadd( 44.0182, 19.04, 3.01784, 0.36 ) }
    dend_8 { pt3dadd( 44.417, 19.5899, 3.10236, 0.36 ) }
    dend_8 { pt3dadd( 44.9346, 20.3285, 3.21752, 0.48 ) }
    dend_8 { pt3dadd( 45.2724, 20.8379, 3.29136, 0.96 ) }
    dend_8 { pt3dadd( 45.7854, 21.6603, 3.40606, 1.08 ) }
    dend_8 { pt3dadd( 46.2577, 22.4598, 3.50347, 0.36 ) }
    dend_8 { pt3dadd( 46.8467, 23.4726, 3.5982, 0.36 ) }
    dend_8 { pt3dadd( 47.4541, 24.4853, 3.68399, 0.48 ) }
    dend_8 { pt3dadd( 47.5911, 24.7088, 3.69911, 0.48 ) }
    dend_8 { pt3dadd( 47.8927, 25.2, 3.72522, 0.12 ) }
    dend_8 { pt3dadd( 48.3789, 26.0206, 3.7605, 0.12 ) }
    dend_8 { pt3dadd( 48.8716, 26.9162, 3.77748, 0.48 ) }
    dend_8 { pt3dadd( 49.1908, 27.5436, 3.78749, 0.36 ) }
    dend_8 { pt3dadd( 49.518, 28.2316, 3.79092, 0.36 ) }
    dend_8 { pt3dadd( 49.8783, 29.0092, 3.78384, 0.48 ) }
    dend_8 { pt3dadd( 50.0328, 29.3418, 3.77607, 0.12 ) }
    dend_8 { pt3dadd( 50.4709, 30.2696, 3.75102, 0.12 ) }
    dend_8 { pt3dadd( 50.6275, 30.5782, 3.75321, 0.12 ) }
    dend_8 { pt3dadd( 51.0286, 31.3395, 3.69421, 0.48 ) }
    dend_8 { pt3dadd( 51.2094, 31.677, 3.65266, 0.24 ) }
    dend_8 { pt3dadd( 51.5344, 32.2911, 3.5533, 0.24 ) }
    dend_8 { pt3dadd( 51.8005, 32.81, 3.45638, 0.48 ) }
    dend_8 { pt3dadd( 52.2232, 33.705, 3.27806, 0.96 ) }
    dend_8 { pt3dadd( 52.9095, 35.2769, 3.00213, 0.96 ) }
    dend_8 { pt3dadd( 53.1167, 35.7856, 2.92793, 0.12 ) }
    dend_8 { pt3dadd( 53.3914, 36.5397, 2.83747, 0.12 ) }
    dend_8 { pt3dadd( 53.5335, 36.9949, 2.8142, 0.24 ) }
    dend_8 { pt3dadd( 53.7795, 37.8799, 2.8272, 0.24 ) }
    dend_8 { pt3dadd( 53.9539, 38.5615, 2.87329, 0.36 ) }
    dend_8 { pt3dadd( 54.1367, 39.293, 2.98308, 0.36 ) }
    dend_8 { pt3dadd( 54.1753, 39.4508, 3.0019, 0.24 ) }
    dend_8 { pt3dadd( 54.3957, 40.4109, 3.15448, 0.24 ) }
    dend_8 { pt3dadd( 54.5941, 41.2857, 3.29735, 0.48 ) }
    dend_8 { pt3dadd( 54.6994, 41.7652, 3.37447, 0.24 ) }
    dend_8 { pt3dadd( 54.8386, 42.3401, 3.45279, 0.24 ) }
    dend_8 { pt3dadd( 55.0844, 43.2985, 3.56927, 0.72 ) }
    dend_8 { pt3dadd( 55.3432, 44.2422, 3.66084, 0.12 ) }
    dend_8 { pt3dadd( 55.7527, 45.6627, 3.75209, 0.12 ) }
    dend_8 { pt3dadd( 55.8594, 46.0276, 3.77806, 0.12 ) }
    dend_8 { pt3dadd( 56.1787, 47.1077, 3.84603, 0.12 ) }
    dend_8 { pt3dadd( 56.3235, 47.5824, 3.86939, 0.96 ) }
    dend_8 { pt3dadd( 56.5072, 48.1949, 3.88886, 0.96 ) }
    dend_8 { pt3dadd( 56.8014, 49.1847, 3.88933, 0.48 ) }
    dend_8 { pt3dadd( 57.0546, 50.0663, 3.89537, 0.36 ) }
    dend_8 { pt3dadd( 57.3918, 51.2388, 3.90325, 0.36 ) }
    dend_8 { pt3dadd( 57.544, 51.7562, 3.90471, 0.36 ) }
    dend_8 { pt3dadd( 57.8033, 52.5603, 3.91707, 0.6 ) }
    dend_8 { pt3dadd( 57.9829, 53.0677, 3.92678, 0.12 ) }
    dend_8 { pt3dadd( 58.2088, 53.6268, 3.93759, 0.12 ) }
    dend_8 { pt3dadd( 58.494, 54.2426, 3.94425, 0.12 ) }
    dend_8 { pt3dadd( 59.0044, 55.1782, 3.96363, 0.12 ) }
    dend_8 { pt3dadd( 59.366, 55.812, 3.97611, 0.48 ) }
    dend_8 { pt3dadd( 59.5822, 56.1818, 3.98123, 0.12 ) }
    dend_8 { pt3dadd( 60.0226, 56.9257, 3.98932, 0.12 ) }
    dend_8 { pt3dadd( 60.2422, 57.2933, 3.99063, 0.12 ) }
    dend_8 { pt3dadd( 61.0463, 58.6882, 3.97708, 0.12 ) }
    dend_8 { pt3dadd( 61.3281, 59.2047, 3.98114, 0.12 ) }
    dend_8 { pt3dadd( 61.6926, 59.8678, 3.99215, 0.12 ) }
    dend_8 { pt3dadd( 61.7736, 60.0162, 3.99862, 0.48 ) }
    dend_8 { pt3dadd( 62.0962, 60.6244, 4.03404, 0.48 ) }
    dend_8 { pt3dadd( 62.3228, 61.0618, 4.06444, 0.12 ) }
    dend_8 { pt3dadd( 62.7597, 61.9105, 4.17236, 0.12 ) }
    dend_8 { pt3dadd( 63.2784, 62.8953, 4.3514, 0.12 ) }
    dend_8 { pt3dadd( 63.6677, 63.695, 4.50137, 0.48 ) }
    dend_8 { pt3dadd( 63.9659, 64.3767, 4.6428, 0.72 ) }
    dend_8 { pt3dadd( 64.1564, 64.8535, 4.76043, 0.72 ) }
    dend_8 { pt3dadd( 64.4224, 65.6199, 4.95298, 0.72 ) }
    dend_8 { pt3dadd( 64.7188, 66.6254, 5.19332, 0.12 ) }
    dend_8 { pt3dadd( 65.1449, 68.3873, 5.60889, 0.12 ) }
    dend_8 { pt3dadd( 65.3267, 69.1702, 5.78315, 0.48 ) }
    dend_8 { pt3dadd( 65.4951, 69.8958, 5.9203, 0.12 ) }
    dend_8 { pt3dadd( 65.7835, 71.0333, 6.13775, 0.12 ) }
    dend_8 { pt3dadd( 65.9478, 71.6237, 6.18403, 0.6 ) }
    dend_8 { pt3dadd( 66.2266, 72.4883, 6.1642, 0.6 ) }
    dend_8 { pt3dadd( 66.4835, 73.1351, 6.07804, 0.48 ) }
    dend_8 { pt3dadd( 66.9072, 74.0356, 5.87573, 0.48 ) }
    dend_8 { pt3dadd( 67.5768, 75.293, 5.52254, 0.36 ) }
    dend_8 { pt3dadd( 68.8369, 77.3568, 4.88673, 0.12 ) }
    dend_8 { pt3dadd( 69.3229, 78.0864, 4.65233, 0.12 ) }
    dend_8 { pt3dadd( 70.101, 79.188, 4.36006, 0.12 ) }
    dend_8 { pt3dadd( 70.5949, 79.8478, 4.23211, 0.12 ) }
    dend_8 { pt3dadd( 70.8097, 80.1137, 4.20501, 0.6 ) }
    dend_8 { pt3dadd( 71.1924, 80.5773, 4.21099, 0.84 ) }
    dend_8 { pt3dadd( 71.5685, 81.0132, 4.31769, 0.6 ) }
    dend_8 { pt3dadd( 72.4066, 81.9222, 4.59521, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_8 { pt3dadd( 72.7954, 82.3434, 4.7352, 0.12 ) }
    dend_8 { pt3dadd( 73.0365, 82.6218, 4.82841, 0.72 ) }
    dend_8 { pt3dadd( 73.5028, 83.2329, 5.00719, 0.72 ) }
    dend_8 { pt3dadd( 73.7419, 83.5848, 5.09377, 0.48 ) }
    dend_8 { pt3dadd( 73.8751, 83.8128, 5.1321, 0.12 ) }
    dend_8 { pt3dadd( 74.2397, 84.5173, 5.17283, 0.12 ) }
    dend_8 { pt3dadd( 74.4186, 84.9199, 5.19372, 0.72 ) }
    dend_8 { pt3dadd( 74.6543, 85.4855, 5.17937, 0.96 ) }
    dend_8 { pt3dadd( 74.7516, 85.7314, 5.17163, 0.96 ) }
    dend_8 { pt3dadd( 74.9673, 86.3094, 5.14098, 0.12 ) }
    dend_8 { pt3dadd( 75.2688, 87.1119, 5.07754, 0.12 ) }
    dend_8 { pt3dadd( 75.4463, 87.5709, 5.0153, 0.12 ) }
    dend_8 { pt3dadd( 75.7952, 88.3986, 4.83461, 0.24 ) }
    dend_8 { pt3dadd( 80.4315, 97.1511, 5.93922, 0.24 ) }
    dend_8 { pt3dadd( 85.3619, 105.629, 7.56594, 0.24 ) }
    dend_8 { pt3dadd( 90.7503, 113.921, 8.47966, 0.24 ) }
    dend_8 { pt3dadd( 95.0545, 122.58, 10.8279, 0.24 ) }
    dend_8 { pt3dadd( 98.9031, 130.791, 14.8154, 0.24 ) }
    dend_8 { pt3dadd( 102.692, 139.253, 18.3662, 0.24 ) }
    dend_8 { pt3dadd( 107.207, 146.631, 23.0674, 0.24 ) }
    dend_8 { pt3dadd( 111.853, 153.461, 28.354, 0.24 ) }
    dend_8 { pt3dadd( 114.815, 160.834, 34.1557, 0.24 ) }
    dend_8 { pt3dadd( 118.912, 168.19, 39.2511, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -11.2135, -32.3381, 3.88914, 0.48 ) }
    dend_39 { pt3dadd( -11.3312, -33.2163, 3.75084, 0.48 ) }
    dend_39 { pt3dadd( -11.5401, -34.6605, 3.53939, 0.48 ) }
    dend_39 { pt3dadd( -11.678, -35.5747, 3.41242, 0.36 ) }
    dend_39 { pt3dadd( -11.8059, -36.3881, 3.30758, 0.36 ) }
    dend_39 { pt3dadd( -11.9535, -37.3276, 3.19944, 0.36 ) }
    dend_39 { pt3dadd( -12.0659, -38.0498, 3.12461, 0.6 ) }
    dend_39 { pt3dadd( -12.1661, -38.681, 3.08584, 0.84 ) }
    dend_39 { pt3dadd( -12.2724, -39.2502, 3.09516, 1.08 ) }
    dend_39 { pt3dadd( -12.3917, -39.7969, 3.12589, 1.32 ) }
    dend_39 { pt3dadd( -12.5144, -40.3369, 3.15362, 1.32 ) }
    dend_39 { pt3dadd( -12.574, -40.6073, 3.16887, 1.32 ) }
    dend_39 { pt3dadd( -12.7817, -41.6665, 3.24277, 0.84 ) }
    dend_39 { pt3dadd( -12.9392, -42.5271, 3.30926, 0.6 ) }
    dend_39 { pt3dadd( -13.0173, -42.9544, 3.33911, 0.84 ) }
    dend_39 { pt3dadd( -13.1477, -43.6764, 3.38223, 0.84 ) }
    dend_39 { pt3dadd( -13.2497, -44.2094, 3.40578, 0.6 ) }
    dend_39 { pt3dadd( -13.4512, -45.1679, 3.44677, 0.6 ) }
    dend_39 { pt3dadd( -13.727, -46.4032, 3.4944, 0.72 ) }
    dend_39 { pt3dadd( -13.9317, -47.243, 3.53442, 0.72 ) }
    dend_39 { pt3dadd( -14.1491, -48.0557, 3.57846, 0.72 ) }
    dend_39 { pt3dadd( -14.4123, -48.934, 3.62447, 0.72 ) }
    dend_39 { pt3dadd( -14.7842, -50.1001, 3.67595, 0.36 ) }
    dend_39 { pt3dadd( -15.102, -51.0419, 3.73307, 0.36 ) }
    dend_39 { pt3dadd( -15.2429, -51.4545, 3.76662, 0.36 ) }
    dend_39 { pt3dadd( -15.3404, -51.7348, 3.80237, 0.72 ) }
    dend_39 { pt3dadd( -15.4798, -52.0983, 3.8895, 0.96 ) }
    dend_39 { pt3dadd( -15.7642, -52.8458, 4.15064, 0.96 ) }
    dend_39 { pt3dadd( -16.0399, -53.5767, 4.45628, 0.84 ) }
    dend_39 { pt3dadd( -16.3055, -54.3027, 4.78095, 0.6 ) }
    dend_39 { pt3dadd( -16.5538, -54.9705, 5.12441, 0.48 ) }
    dend_39 { pt3dadd( -16.9793, -56.1487, 5.75303, 0.48 ) }
    dend_39 { pt3dadd( -17.1915, -56.7385, 6.0687, 0.6 ) }
    dend_39 { pt3dadd( -17.4382, -57.4821, 6.4259, 0.84 ) }
    dend_39 { pt3dadd( -17.6917, -58.3481, 6.76963, 0.84 ) }
    dend_39 { pt3dadd( -18.0741, -59.8556, 7.26856, 0.72 ) }
    dend_39 { pt3dadd( -18.264, -60.7777, 7.49818, 0.6 ) }
    dend_39 { pt3dadd( -18.3429, -61.2645, 7.58382, 0.72 ) }
    dend_39 { pt3dadd( -18.5224, -62.4798, 7.76711, 0.36 ) }
    dend_39 { pt3dadd( -18.6473, -63.4247, 7.94944, 0.12 ) }
    dend_39 { pt3dadd( -18.7161, -63.9613, 8.07441, 0.12 ) }
    dend_39 { pt3dadd( -18.7644, -64.3704, 8.176, 0.48 ) }
    dend_39 { pt3dadd( -18.8665, -65.1497, 8.41237, 0.84 ) }
    dend_39 { pt3dadd( -19.0054, -66.0706, 8.72818, 0.84 ) }
    dend_39 { pt3dadd( -19.4438, -68.296, 9.63096, 0.48 ) }
    dend_39 { pt3dadd( -19.6303, -69.1635, 9.99894, 0.36 ) }
    dend_39 { pt3dadd( -19.7112, -69.5278, 10.1519, 0.36 ) }
    dend_39 { pt3dadd( -19.8365, -70.032, 10.3852, 0.72 ) }
    dend_39 { pt3dadd( -19.9815, -70.5724, 10.6457, 0.84 ) }
    dend_39 { pt3dadd( -20.3048, -71.7778, 11.2139, 0.72 ) }
    dend_39 { pt3dadd( -20.5496, -72.6033, 11.6242, 0.72 ) }
    dend_39 { pt3dadd( -20.8005, -73.4269, 12.059, 0.72 ) }
    dend_39 { pt3dadd( -21.2496, -74.9102, 12.8739, 0.6 ) }
    dend_39 { pt3dadd( -21.4189, -75.4953, 13.2004, 0.6 ) }
    dend_39 { pt3dadd( -21.6532, -76.3228, 13.6378, 0.72 ) }
    dend_39 { pt3dadd( -22.1369, -77.8832, 14.4514, 1.2 ) }
    dend_39 { pt3dadd( -22.3821, -78.5781, 14.8243, 1.32 ) }
    dend_39 { pt3dadd( -22.595, -79.1498, 15.1174, 1.32 ) }
    dend_39 { pt3dadd( -22.8491, -79.8622, 15.4335, 0.48 ) }
    dend_39 { pt3dadd( -23.2235, -80.9476, 15.8861, 0.48 ) }
    dend_39 { pt3dadd( -23.6025, -82.1056, 16.3422, 0.96 ) }
    dend_39 { pt3dadd( -23.8672, -83.0372, 16.6616, 0.72 ) }
    dend_39 { pt3dadd( -24.0744, -83.7972, 16.9233, 0.48 ) }
    dend_39 { pt3dadd( -24.2424, -84.4515, 17.152, 0.48 ) }
    dend_39 { pt3dadd( -24.4726, -85.4645, 17.5015, 0.48 ) }
    dend_39 { pt3dadd( -24.6118, -86.2755, 17.7642, 0.48 ) }
    dend_39 { pt3dadd( -24.6961, -86.9302, 17.9372, 0.72 ) }
    dend_39 { pt3dadd( -24.7797, -87.6135, 18.102, 1.08 ) }
    dend_39 { pt3dadd( -24.9073, -88.6664, 18.3547, 0.36 ) }
    dend_39 { pt3dadd( -24.9458, -88.9321, 18.425, 0.36 ) }
    dend_39 { pt3dadd( -25.0875, -89.8489, 18.6704, 0.48 ) }
    dend_39 { pt3dadd( -25.2136, -90.6581, 18.8745, 0.6 ) }
    dend_39 { pt3dadd( -25.3592, -91.4484, 19.0905, 1.08 ) }
    dend_39 { pt3dadd( -25.5248, -92.2353, 19.3032, 1.2 ) }
    dend_39 { pt3dadd( -25.7852, -93.3477, 19.5822, 0.72 ) }
    dend_39 { pt3dadd( -25.9789, -94.1218, 19.7699, 0.72 ) }
    dend_39 { pt3dadd( -26.1885, -94.9171, 19.9535, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_39 { pt3dadd( -26.5107, -96.0784, 20.1898, 0.36 ) }
    dend_39 { pt3dadd( -26.8928, -97.3018, 20.419, 0.36 ) }
    dend_39 { pt3dadd( -27.1681, -98.1216, 20.5518, 0.36 ) }
    dend_39 { pt3dadd( -27.4749, -99.0203, 20.6674, 0.48 ) }
    dend_39 { pt3dadd( -27.7403, -99.8004, 20.7658, 0.72 ) }
    dend_39 { pt3dadd( -28.119, -100.967, 20.9297, 0.72 ) }
    dend_39 { pt3dadd( -28.4655, -102.097, 21.0877, 0.36 ) }
    dend_39 { pt3dadd( -28.6815, -102.762, 21.1819, 0.36 ) }
    dend_39 { pt3dadd( -28.967, -103.568, 21.307, 0.6 ) }
    dend_39 { pt3dadd( -29.4542, -104.835, 21.5043, 0.6 ) }
    dend_39 { pt3dadd( -29.7483, -105.589, 21.6158, 0.36 ) }
    dend_39 { pt3dadd( -30.2363, -106.835, 21.7981, 0.36 ) }
    dend_39 { pt3dadd( -30.6879, -108.006, 21.9508, 0.36 ) }
    dend_39 { pt3dadd( -31.1674, -109.248, 22.1097, 0.48 ) }
    dend_39 { pt3dadd( -31.4528, -109.996, 22.2027, 0.6 ) }
    dend_39 { pt3dadd( -31.9833, -111.459, 22.37, 0.6 ) }
    dend_39 { pt3dadd( -32.2337, -112.226, 22.457, 0.48 ) }
    dend_39 { pt3dadd( -32.5691, -113.437, 22.613, 0.48 ) }
    dend_39 { pt3dadd( -32.7896, -114.362, 22.7317, 0.48 ) }
    dend_39 { pt3dadd( -32.9624, -115.175, 22.8249, 0.84 ) }
    dend_39 { pt3dadd( -33.2547, -116.658, 22.9962, 0.72 ) }
    dend_39 { pt3dadd( -33.3793, -117.358, 23.0749, 0.36 ) }
    dend_39 { pt3dadd( -33.5053, -118.176, 23.1629, 0.36 ) }
    dend_39 { pt3dadd( -33.6594, -119.279, 23.2842, 0.36 ) }
    dend_39 { pt3dadd( -33.788, -120.238, 23.389, 0.48 ) }
    dend_39 { pt3dadd( -33.9003, -121.161, 23.4902, 0.6 ) }
    dend_39 { pt3dadd( -34.0766, -122.658, 23.6511, 0.6 ) }
    dend_39 { pt3dadd( -34.1879, -123.627, 23.7699, 0.6 ) }
    dend_39 { pt3dadd( -34.2625, -124.299, 23.8646, 0.6 ) }
    dend_39 { pt3dadd( -34.4065, -125.816, 24.1146, 0.6 ) }
    dend_39 { pt3dadd( -34.4623, -126.497, 24.2389, 0.72 ) }
    dend_39 { pt3dadd( -34.5092, -127.215, 24.3986, 0.96 ) }
    dend_39 { pt3dadd( -34.5529, -128.628, 24.7641, 0.36 ) }
    dend_39 { pt3dadd( -34.5484, -129.439, 25.0004, 0.36 ) }
    dend_39 { pt3dadd( -34.5006, -130.395, 25.2967, 0.72 ) }
    dend_39 { pt3dadd( -34.3889, -131.598, 25.6779, 0.84 ) }
    dend_39 { pt3dadd( -34.2457, -133.047, 26.1165, 0.36 ) }
    dend_39 { pt3dadd( -34.1339, -134.224, 26.4914, 0.36 ) }
    dend_39 { pt3dadd( -34.0614, -135.061, 26.7597, 0.36 ) }
    dend_39 { pt3dadd( -34.0103, -135.884, 27.0267, 0.24 ) }
    dend_39 { pt3dadd( -33.9939, -137.08, 27.3941, 0.24 ) }
    dend_39 { pt3dadd( -34.0494, -138.339, 27.7469, 0.36 ) }
    dend_39 { pt3dadd( -34.1402, -139.328, 27.9895, 0.48 ) }
    dend_39 { pt3dadd( -34.2478, -140.133, 28.1742, 0.36 ) }
    dend_39 { pt3dadd( -34.3863, -141.061, 28.3764, 0.36 ) }
    dend_39 { pt3dadd( -34.5291, -142.038, 28.59, 0.36 ) }
    dend_39 { pt3dadd( -34.6162, -142.755, 28.7365, 0.36 ) }
    dend_39 { pt3dadd( -34.6609, -143.318, 28.8364, 0.6 ) }
    dend_39 { pt3dadd( -34.6918, -143.994, 28.9292, 0.36 ) }
    dend_39 { pt3dadd( -34.7071, -144.543, 29.0116, 0.36 ) }
    dend_39 { pt3dadd( -34.7142, -145.231, 29.1235, 0.36 ) }
    dend_39 { pt3dadd( -34.711, -145.642, 29.1929, 0.6 ) }
    dend_39 { pt3dadd( -34.7117, -146.062, 29.2598, 0.6 ) }
    dend_39 { pt3dadd( -34.7163, -146.629, 29.3388, 0.48 ) }
    dend_39 { pt3dadd( -34.7205, -147.187, 29.4077, 0.48 ) }
    dend_39 { pt3dadd( -34.7209, -147.804, 29.4788, 0.48 ) }
    dend_39 { pt3dadd( -34.7082, -148.247, 29.5324, 0.72 ) }
    dend_39 { pt3dadd( -34.6919, -148.928, 29.6804, 0.72 ) }
    dend_39 { pt3dadd( -34.6801, -149.546, 29.8533, 0.48 ) }
    dend_39 { pt3dadd( -34.6717, -150.194, 30.0649, 0.36 ) }
    dend_39 { pt3dadd( -34.6695, -150.86, 30.3041, 0.36 ) }
    dend_39 { pt3dadd( -34.67, -151.606, 30.588, 0.36 ) }
    dend_39 { pt3dadd( -34.7157, -153.244, 31.211, 0.24 ) }
    dend_39 { pt3dadd( -34.7869, -153.897, 31.4338, 0.24 ) }
    dend_39 { pt3dadd( -34.8697, -154.289, 31.5431, 0.6 ) }
    dend_39 { pt3dadd( -35.1083, -155.075, 31.6942, 0.72 ) }
    dend_39 { pt3dadd( -35.2654, -155.488, 31.7342, 0.36 ) }
    dend_39 { pt3dadd( -35.5522, -156.162, 31.7401, 0.36 ) }
    dend_39 { pt3dadd( -36.1043, -157.331, 31.6423, 0.36 ) }
    dend_39 { pt3dadd( -36.4645, -158.031, 31.5689, 0.36 ) }
    dend_39 { pt3dadd( -36.9035, -158.834, 31.4748, 0.36 ) }
    dend_39 { pt3dadd( -37.4485, -159.804, 31.3563, 0.36 ) }
    dend_39 { pt3dadd( -37.9289, -160.66, 31.2533, 0.36 ) }
    dend_39 { pt3dadd( -38.7562, -162.188, 31.0827, 0.48 ) }
    dend_39 { pt3dadd( -39.5078, -163.669, 30.9405, 0.48 ) }
    dend_39 { pt3dadd( -39.8555, -164.356, 30.8743, 0.6 ) }
    dend_39 { pt3dadd( -40.1846, -165.015, 30.8058, 0.6 ) }
    dend_39 { pt3dadd( -40.4533, -165.558, 30.7445, 0.36 ) }
    dend_39 { pt3dadd( -40.9181, -166.587, 30.6371, 0.36 ) }
    dend_39 { pt3dadd( -41.1621, -167.232, 30.5842, 0.48 ) }
    dend_39 { pt3dadd( -41.3518, -167.793, 30.5463, 0.48 ) }
    dend_39 { pt3dadd( -41.4742, -168.146, 30.5222, 0.6 ) }
    dend_39 { pt3dadd( -41.6504, -168.601, 30.51, 0.6 ) }
    dend_39 { pt3dadd( -42.033, -169.498, 30.5185, 0.36 ) }
    dend_39 { pt3dadd( -42.3646, -170.218, 30.545, 0.12 ) }
    dend_39 { pt3dadd( -42.6877, -170.888, 30.6067, 0.12 ) }
    dend_39 { pt3dadd( -43.2775, -172.111, 30.7761, 0.12 ) }
    dend_39 { pt3dadd( -43.6546, -172.872, 30.9086, 0.6 ) }
    dend_39 { pt3dadd( -43.9131, -173.42, 31.021, 0.72 ) }
    dend_39 { pt3dadd( -44.3589, -174.472, 31.2632, 0.36 ) }
    dend_39 { pt3dadd( -44.5917, -175.124, 31.4215, 0.12 ) }
    dend_39 { pt3dadd( -44.7913, -175.772, 31.5694, 0.12 ) }
    dend_39 { pt3dadd( -44.7913, -175.772, 31.5694, 0.36 ) }
    dend_39 { pt3dadd( -44.9902, -176.585, 31.6738, 0.24 ) }
    dend_39 { pt3dadd( -45.2348, -177.65, 31.7725, 0.24 ) }
    dend_39 { pt3dadd( -45.384, -178.374, 31.8158, 0.24 ) }
    dend_39 { pt3dadd( -45.5247, -179.052, 31.8466, 0.36 ) }
    dend_39 { pt3dadd( -45.7195, -179.895, 31.8871, 0.36 ) }
    dend_39 { pt3dadd( -45.9857, -180.914, 31.9319, 0.36 ) }
    dend_39 { pt3dadd( -46.1606, -181.52, 31.954, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_39 { pt3dadd( -46.3658, -182.195, 31.987, 0.36 ) }
    dend_39 { pt3dadd( -46.5553, -182.827, 32.0264, 0.12 ) }
    dend_39 { pt3dadd( -46.9425, -184.12, 32.1209, 0.24 ) }
    dend_39 { pt3dadd( -47.3716, -185.531, 32.237, 0.24 ) }
    dend_39 { pt3dadd( -47.9498, -187.443, 32.408, 0.24 ) }
    dend_39 { pt3dadd( -48.1059, -187.959, 32.4553, 0.12 ) }
    dend_39 { pt3dadd( -48.4752, -189.177, 32.5383, 0.12 ) }
    dend_39 { pt3dadd( -48.5629, -189.463, 32.5488, 0.36 ) }
    dend_39 { pt3dadd( -48.8155, -190.269, 32.5684, 0.36 ) }
    dend_39 { pt3dadd( -49.1934, -191.304, 32.5468, 0.36 ) }
    dend_39 { pt3dadd( -49.6009, -192.021, 32.4336, 0.72 ) }
    dend_39 { pt3dadd( -49.9393, -192.41, 32.3002, 0.48 ) }
    dend_39 { pt3dadd( -50.4439, -192.885, 32.0852, 0.48 ) }
    dend_39 { pt3dadd( -50.7395, -193.125, 31.9538, 0.12 ) }
    dend_39 { pt3dadd( -51.6324, -193.707, 31.538, 0.12 ) }
    dend_39 { pt3dadd( -53.1147, -194.483, 30.8411, 0.12 ) }
    dend_39 { pt3dadd( -54.2557, -195.025, 30.3205, 0.12 ) }
    dend_39 { pt3dadd( -58.035, -205.892, 30.8627, 0.12 ) }
    dend_39 { pt3dadd( -62.5836, -216.438, 31.1658, 0.12 ) }
    dend_39 { pt3dadd( -68.1757, -226.11, 28.9374, 0.12 ) }
    dend_39 { pt3dadd( -75.1745, -235.02, 28.2197, 0.12 ) }
    dend_39 { pt3dadd( -81.8847, -244.195, 28.8954, 0.12 ) }
    dend_39 { pt3dadd( -88.6457, -253.325, 29.6284, 0.12 ) }
    dend_39 { pt3dadd( -96.0996, -261.675, 28.027, 0.12 ) }
    dend_39 { pt3dadd( -103.731, -268.854, 24.0271, 0.12 ) }
    dend_39 { pt3dadd( -111.167, -275.169, 18.6064, 0.12 ) }
    dend_39 { pt3dadd( -119.88, -279.803, 13.5322, 0.12 ) }
    dend_39 { pt3dadd( -128.923, -284.642, 9.26663, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -11.2135, -32.3381, 3.88914, 0.48 ) }
    dend_34 { pt3dadd( -11.9972, -32.8924, 4.14787, 0.48 ) }
    dend_34 { pt3dadd( -12.6027, -33.3437, 4.32765, 0.48 ) }
    dend_34 { pt3dadd( -13.1236, -33.7394, 4.50886, 0.48 ) }
    dend_34 { pt3dadd( -14.3126, -34.7189, 4.95264, 0.48 ) }
    dend_34 { pt3dadd( -14.7074, -35.0644, 5.09643, 0.48 ) }
    dend_34 { pt3dadd( -15.0894, -35.4296, 5.23024, 0.36 ) }
    dend_34 { pt3dadd( -15.5414, -35.9084, 5.41568, 0.36 ) }
    dend_34 { pt3dadd( -15.9878, -36.4326, 5.58261, 0.72 ) }
    dend_34 { pt3dadd( -16.3561, -36.9187, 5.72515, 1.2 ) }
    dend_34 { pt3dadd( -16.7282, -37.4856, 5.85181, 1.2 ) }
    dend_34 { pt3dadd( -17.1951, -38.283, 6.0455, 0.48 ) }
    dend_34 { pt3dadd( -17.5309, -38.9154, 6.19845, 0.36 ) }
    dend_34 { pt3dadd( -17.7919, -39.4639, 6.32035, 0.36 ) }
    dend_34 { pt3dadd( -18.1381, -40.2311, 6.45584, 0.84 ) }
    dend_34 { pt3dadd( -18.4076, -40.8245, 6.54875, 0.84 ) }
    dend_34 { pt3dadd( -18.8127, -41.7209, 6.65898, 0.36 ) }
    dend_34 { pt3dadd( -19.0749, -42.2943, 6.70802, 0.72 ) }
    dend_34 { pt3dadd( -19.3514, -42.8908, 6.73784, 0.84 ) }
    dend_34 { pt3dadd( -19.8665, -43.9419, 6.76535, 0.12 ) }
    dend_34 { pt3dadd( -20.3494, -44.8813, 6.7599, 0.12 ) }
    dend_34 { pt3dadd( -20.9619, -45.9865, 6.75215, 0.12 ) }
    dend_34 { pt3dadd( -21.3072, -46.5542, 6.74428, 0.6 ) }
    dend_34 { pt3dadd( -21.538, -46.9242, 6.73779, 0.6 ) }
    dend_34 { pt3dadd( -21.9328, -47.5676, 6.72699, 0.12 ) }
    dend_34 { pt3dadd( -22.1914, -48.0061, 6.72824, 0.12 ) }
    dend_34 { pt3dadd( -22.5221, -48.6141, 6.74542, 0.6 ) }
    dend_34 { pt3dadd( -22.9544, -49.477, 6.81117, 0.6 ) }
    dend_34 { pt3dadd( -23.1578, -49.9215, 6.85961, 0.6 ) }
    dend_34 { pt3dadd( -23.3972, -50.5029, 6.93428, 0.48 ) }
    dend_34 { pt3dadd( -23.6013, -51.0522, 7.03195, 0.72 ) }
    dend_34 { pt3dadd( -23.8031, -51.6139, 7.1628, 0.72 ) }
    dend_34 { pt3dadd( -24.0382, -52.3188, 7.35986, 0.36 ) }
    dend_34 { pt3dadd( -24.1108, -52.5356, 7.42623, 0.36 ) }
    dend_34 { pt3dadd( -24.4122, -53.2818, 7.6389, 0.6 ) }
    dend_34 { pt3dadd( -24.7677, -54.039, 7.82089, 0.36 ) }
    dend_34 { pt3dadd( -24.9017, -54.2847, 7.87839, 0.24 ) }
    dend_34 { pt3dadd( -25.1609, -54.7111, 7.97804, 0.24 ) }
    dend_34 { pt3dadd( -25.452, -55.1643, 8.07317, 0.24 ) }
    dend_34 { pt3dadd( -25.9724, -55.9584, 8.23223, 0.6 ) }
    dend_34 { pt3dadd( -26.303, -56.4695, 8.32968, 0.6 ) }
    dend_34 { pt3dadd( -26.7442, -57.1886, 8.43974, 0.48 ) }
    dend_34 { pt3dadd( -26.8646, -57.4022, 8.47195, 0.48 ) }
    dend_34 { pt3dadd( -27.1134, -57.8912, 8.54671, 0.36 ) }
    dend_34 { pt3dadd( -27.5051, -58.7317, 8.69028, 0.36 ) }
    dend_34 { pt3dadd( -27.6583, -59.072, 8.75654, 0.48 ) }
    dend_34 { pt3dadd( -27.9767, -59.7661, 8.88551, 0.48 ) }
    dend_34 { pt3dadd( -28.2487, -60.3267, 8.98928, 0.72 ) }
    dend_34 { pt3dadd( -28.4187, -60.6493, 9.05873, 0.84 ) }
    dend_34 { pt3dadd( -28.8496, -61.4075, 9.25716, 0.72 ) }
    dend_34 { pt3dadd( -29.206, -62.0083, 9.43036, 0.36 ) }
    dend_34 { pt3dadd( -29.5475, -62.5442, 9.58609, 0.36 ) }
    dend_34 { pt3dadd( -29.8945, -63.0295, 9.74625, 0.24 ) }
    dend_34 { pt3dadd( -30.4444, -63.7377, 9.9892, 0.24 ) }
    dend_34 { pt3dadd( -30.8404, -64.2329, 10.1533, 0.12 ) }
    dend_34 { pt3dadd( -31.2172, -64.711, 10.2982, 0.12 ) }
    dend_34 { pt3dadd( -31.5418, -65.129, 10.426, 0.12 ) }
    dend_34 { pt3dadd( -31.9234, -65.6114, 10.6085, 0.12 ) }
    dend_34 { pt3dadd( -32.1799, -65.9346, 10.7662, 0.12 ) }
    dend_34 { pt3dadd( -32.3921, -66.2061, 10.942, 0.12 ) }
    dend_34 { pt3dadd( -32.5285, -66.4131, 11.0791, 0.72 ) }
    dend_34 { pt3dadd( -32.7935, -66.866, 11.3931, 0.96 ) }
    dend_34 { pt3dadd( -33.1507, -67.5562, 11.8602, 0.84 ) }
    dend_34 { pt3dadd( -33.4705, -68.2819, 12.3087, 0.72 ) }
    dend_34 { pt3dadd( -33.7162, -68.9075, 12.6821, 0.36 ) }
    dend_34 { pt3dadd( -34.0089, -69.7304, 13.1237, 0.24 ) }
    dend_34 { pt3dadd( -34.1237, -70.0881, 13.2832, 0.84 ) }
    dend_34 { pt3dadd( -34.2184, -70.4084, 13.3926, 0.84 ) }
    dend_34 { pt3dadd( -34.4174, -71.1121, 13.5462, 0.72 ) }
    dend_34 { pt3dadd( -34.6348, -71.8746, 13.6665, 0.48 ) }
    dend_34 { pt3dadd( -34.8625, -72.6098, 13.7774, 0.24 ) }
    dend_34 { pt3dadd( -35.1161, -73.3458, 13.8914, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_34 { pt3dadd( -35.3071, -73.8494, 13.9838, 0.12 ) }
    dend_34 { pt3dadd( -35.8496, -75.1593, 14.2539, 0.12 ) }
    dend_34 { pt3dadd( -36.2597, -76.0213, 14.4361, 0.12 ) }
    dend_34 { pt3dadd( -36.4642, -76.4199, 14.5296, 0.48 ) }
    dend_34 { pt3dadd( -36.8425, -77.1374, 14.7181, 0.6 ) }
    dend_34 { pt3dadd( -37.3046, -78.0174, 14.9529, 0.48 ) }
    dend_34 { pt3dadd( -37.6132, -78.5945, 15.0959, 0.36 ) }
    dend_34 { pt3dadd( -38.0755, -79.4112, 15.2846, 0.48 ) }
    dend_34 { pt3dadd( -38.5249, -80.1893, 15.4341, 0.24 ) }
    dend_34 { pt3dadd( -38.8311, -80.7188, 15.5348, 0.24 ) }
    dend_34 { pt3dadd( -39.3919, -81.7189, 15.729, 0.24 ) }
    dend_34 { pt3dadd( -39.9124, -82.7203, 15.9122, 0.24 ) }
    dend_34 { pt3dadd( -40.2096, -83.3268, 16.0178, 0.6 ) }
    dend_34 { pt3dadd( -40.313, -83.5718, 16.0544, 0.6 ) }
    dend_34 { pt3dadd( -40.6092, -84.4352, 16.152, 0.24 ) }
    dend_34 { pt3dadd( -40.8038, -85.1426, 16.2261, 0.24 ) }
    dend_34 { pt3dadd( -40.9389, -85.8759, 16.2966, 0.48 ) }
    dend_34 { pt3dadd( -40.9857, -86.6239, 16.318, 0.36 ) }
    dend_34 { pt3dadd( -40.9786, -87.7473, 16.2848, 0.36 ) }
    dend_34 { pt3dadd( -40.9438, -88.6425, 16.2167, 0.36 ) }
    dend_34 { pt3dadd( -40.9323, -88.9186, 16.1804, 0.84 ) }
    dend_34 { pt3dadd( -40.928, -89.299, 16.1262, 0.84 ) }
    dend_34 { pt3dadd( -40.9474, -90.6977, 15.9423, 0.24 ) }
    dend_34 { pt3dadd( -40.9652, -91.0593, 15.9056, 0.24 ) }
    dend_34 { pt3dadd( -41.0032, -91.3342, 15.879, 0.24 ) }
    dend_34 { pt3dadd( -41.2274, -92.311, 15.8117, 0.24 ) }
    dend_34 { pt3dadd( -41.4268, -93.0661, 15.7877, 0.36 ) }
    dend_34 { pt3dadd( -41.5197, -93.3882, 15.7876, 0.12 ) }
    dend_34 { pt3dadd( -41.6983, -93.9973, 15.8102, 0.12 ) }
    dend_34 { pt3dadd( -42.042, -95.337, 15.8699, 0.12 ) }
    dend_34 { pt3dadd( -42.363, -96.8699, 15.9533, 0.12 ) }
    dend_34 { pt3dadd( -42.564, -98.0957, 16.0308, 0.12 ) }
    dend_34 { pt3dadd( -42.6537, -98.7019, 16.0688, 0.48 ) }
    dend_34 { pt3dadd( -42.7585, -99.4529, 16.1152, 0.48 ) }
    dend_34 { pt3dadd( -42.8327, -100.11, 16.1623, 0.48 ) }
    dend_34 { pt3dadd( -42.8979, -100.988, 16.2374, 0.36 ) }
    dend_34 { pt3dadd( -42.9323, -101.474, 16.2813, 0.36 ) }
    dend_34 { pt3dadd( -43.0321, -102.265, 16.3434, 0.48 ) }
    dend_34 { pt3dadd( -43.1106, -102.658, 16.3672, 0.12 ) }
    dend_34 { pt3dadd( -43.1949, -102.912, 16.3929, 0.12 ) }
    dend_34 { pt3dadd( -43.354, -103.267, 16.4447, 0.12 ) }
    dend_34 { pt3dadd( -43.6144, -103.746, 16.5392, 0.6 ) }
    dend_34 { pt3dadd( -43.8629, -104.186, 16.649, 0.84 ) }
    dend_34 { pt3dadd( -43.9966, -104.418, 16.7156, 0.84 ) }
    dend_34 { pt3dadd( -44.5385, -105.318, 16.9571, 0.12 ) }
    dend_34 { pt3dadd( -44.6635, -105.526, 17.0037, 0.12 ) }
    dend_34 { pt3dadd( -44.7948, -105.765, 17.049, 0.12 ) }
    dend_34 { pt3dadd( -44.919, -105.997, 17.0957, 0.12 ) }
    dend_34 { pt3dadd( -45.2875, -106.691, 17.2245, 0.36 ) }
    dend_34 { pt3dadd( -45.6226, -107.305, 17.3574, 0.36 ) }
    dend_34 { pt3dadd( -46.0736, -108.113, 17.5306, 0.36 ) }
    dend_34 { pt3dadd( -46.3776, -108.623, 17.6572, 0.36 ) }
    dend_34 { pt3dadd( -46.7687, -109.281, 17.8365, 0.6 ) }
    dend_34 { pt3dadd( -47.0327, -109.715, 17.9602, 0.6 ) }
    dend_34 { pt3dadd( -47.5246, -110.49, 18.1796, 0.36 ) }
    dend_34 { pt3dadd( -47.7151, -110.772, 18.2536, 0.36 ) }
    dend_34 { pt3dadd( -47.97, -111.13, 18.3468, 0.36 ) }
    dend_34 { pt3dadd( -48.3936, -111.708, 18.4721, 0.36 ) }
    dend_34 { pt3dadd( -48.6876, -112.137, 18.5238, 0.36 ) }
    dend_34 { pt3dadd( -49.1816, -112.874, 18.566, 0.48 ) }
    dend_34 { pt3dadd( -49.4236, -113.235, 18.5349, 0.48 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 160.816, 78.4399, 155.396, 0.48 ) }
    dend_30 { pt3dadd( 166.711, 81.7285, 161.162, 0.48 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 63/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 160.816, 78.4399, 155.396, 0.36 ) }
    dend_29 { pt3dadd( 165.801, 81.0253, 160.79, 0.48 ) }
    dend_29 { pt3dadd( 170.72, 82.9622, 166.486, 0.48 ) }
    dend_29 { pt3dadd( 175.159, 84.0164, 172.761, 0.48 ) }
    dend_29 { pt3dadd( 180.237, 84.4727, 178.587, 0.48 ) }
    dend_29 { pt3dadd( 185.238, 83.2505, 184.363, 0.48 ) }
    dend_29 { pt3dadd( 191.354, 81.8685, 188.909, 0.48 ) }
    dend_29 { pt3dadd( 197.874, 79.5001, 192.419, 0.48 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -77.325, -202.947, -118.053, 0.12 ) }
    dend_18 { pt3dadd( -78.2162, -203.145, -119.136, 0.12 ) }
    dend_18 { pt3dadd( -78.7078, -203.264, -119.727, 0.12 ) }
    dend_18 { pt3dadd( -80.4973, -203.705, -121.794, 0.6 ) }
    dend_18 { pt3dadd( -81.0244, -203.849, -122.461, 0.6 ) }
    dend_18 { pt3dadd( -81.8709, -204.12, -123.596, 0.36 ) }
    dend_18 { pt3dadd( -82.6521, -204.392, -124.636, 0.36 ) }
    dend_18 { pt3dadd( -82.9847, -204.541, -125.089, 0.6 ) }
    dend_18 { pt3dadd( -83.2316, -204.674, -125.417, 0.6 ) }
    dend_18 { pt3dadd( -84.9099, -205.815, -127.555, 0.24 ) }
    dend_18 { pt3dadd( -85.645, -206.368, -128.487, 0.24 ) }
    dend_18 { pt3dadd( -86.047, -206.693, -129.02, 0.24 ) }
    dend_18 { pt3dadd( -86.8492, -207.366, -130.113, 0.24 ) }
    dend_18 { pt3dadd( -87.2224, -207.696, -130.637, 0.24 ) }
    dend_18 { pt3dadd( -88.0482, -208.455, -131.813, 0.6 ) }
    dend_18 { pt3dadd( -88.2757, -208.669, -132.115, 0.6 ) }
    dend_18 { pt3dadd( -89.6862, -209.976, -134.018, 0.12 ) }
    dend_18 { pt3dadd( -89.9201, -210.194, -134.346, 0.12 ) }
    dend_18 { pt3dadd( -90.1978, -210.433, -134.717, 0.48 ) }
    dend_18 { pt3dadd( -90.9065, -210.967, -135.515, 0.12 ) }
    dend_18 { pt3dadd( -91.269, -211.209, -135.801, 0.12 ) }
    dend_18 { pt3dadd( -91.6664, -211.446, -136.04, 0.12 ) }
    dend_18 { pt3dadd( -92.0084, -211.634, -136.159, 0.12 ) }
    dend_18 { pt3dadd( -92.514, -211.891, -136.357, 0.48 ) }
    dend_18 { pt3dadd( -93.4284, -212.304, -136.705, 0.6 ) }
    dend_18 { pt3dadd( -93.9355, -212.517, -136.876, 0.6 ) }
    dend_18 { pt3dadd( -94.7287, -212.858, -137.149, 0.12 ) }
    dend_18 { pt3dadd( -95.3311, -213.132, -137.409, 0.12 ) }
    dend_18 { pt3dadd( -96.0543, -213.492, -137.763, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_18 { pt3dadd( -96.7395, -213.908, -138.123, 0.12 ) }
    dend_18 { pt3dadd( -97.2145, -214.272, -138.374, 0.6 ) }
    dend_18 { pt3dadd( -97.6471, -214.648, -138.602, 0.6 ) }
    dend_18 { pt3dadd( -98.6367, -215.57, -139.172, 0.12 ) }
    dend_18 { pt3dadd( -98.8983, -215.83, -139.336, 0.12 ) }
    dend_18 { pt3dadd( -99.4826, -216.446, -139.743, 0.12 ) }
    dend_18 { pt3dadd( -99.8773, -216.873, -140.038, 0.6 ) }
    dend_18 { pt3dadd( -100.07, -217.081, -140.189, 0.6 ) }
    dend_18 { pt3dadd( -101.118, -218.251, -140.998, 0.12 ) }
    dend_18 { pt3dadd( -101.537, -218.768, -141.302, 0.12 ) }
    dend_18 { pt3dadd( -102.455, -219.948, -141.963, 0.24 ) }
    dend_18 { pt3dadd( -102.984, -220.622, -142.344, 0.36 ) }
    dend_18 { pt3dadd( -103.48, -221.244, -142.679, 0.12 ) }
    dend_18 { pt3dadd( -104.054, -221.954, -143.012, 0.12 ) }
    dend_18 { pt3dadd( -104.789, -222.846, -143.323, 0.12 ) }
    dend_18 { pt3dadd( -105.225, -223.296, -143.507, 0.48 ) }
    dend_18 { pt3dadd( -105.702, -223.677, -143.676, 0.12 ) }
    dend_18 { pt3dadd( -106.072, -223.866, -143.797, 0.12 ) }
    dend_18 { pt3dadd( -106.747, -224.083, -143.981, 0.12 ) }
    dend_18 { pt3dadd( -107.19, -224.173, -144.094, 0.36 ) }
    dend_18 { pt3dadd( -108.571, -224.358, -144.421, 0.12 ) }
    dend_18 { pt3dadd( -109.316, -224.46, -144.581, 0.12 ) }
    dend_18 { pt3dadd( -110.299, -224.632, -144.755, 0.12 ) }
    dend_18 { pt3dadd( -110.87, -224.759, -144.844, 0.48 ) }
    dend_18 { pt3dadd( -111.484, -224.933, -144.919, 0.48 ) }
    dend_18 { pt3dadd( -112.065, -225.137, -144.949, 0.36 ) }
    dend_18 { pt3dadd( -112.479, -225.317, -144.891, 0.36 ) }
    dend_18 { pt3dadd( -113.048, -225.585, -144.753, 0.36 ) }
    dend_18 { pt3dadd( -113.501, -225.79, -144.603, 0.36 ) }
    dend_18 { pt3dadd( -113.845, -225.942, -144.47, 0.36 ) }
    dend_18 { pt3dadd( -114.825, -226.376, -144.049, 0.48 ) }
    dend_18 { pt3dadd( -116.083, -226.994, -143.474, 0.12 ) }
    dend_18 { pt3dadd( -116.559, -227.269, -143.261, 0.12 ) }
    dend_18 { pt3dadd( -117.128, -227.647, -143.024, 0.12 ) }
    dend_18 { pt3dadd( -117.518, -227.963, -142.879, 0.12 ) }
    dend_18 { pt3dadd( -117.787, -228.269, -142.804, 0.12 ) }
    dend_18 { pt3dadd( -118.205, -228.996, -142.741, 0.12 ) }
    dend_18 { pt3dadd( -118.681, -230.084, -142.748, 0.6 ) }
    dend_18 { pt3dadd( -118.796, -230.442, -142.753, 0.12 ) }
    dend_18 { pt3dadd( -118.976, -231.171, -142.769, 0.12 ) }
    dend_18 { pt3dadd( -119.252, -232.482, -142.802, 0.12 ) }
    dend_18 { pt3dadd( -119.48, -233.656, -142.837, 0.12 ) }
    dend_18 { pt3dadd( -119.627, -234.438, -142.861, 0.12 ) }
    dend_18 { pt3dadd( -119.784, -235.324, -142.881, 0.12 ) }
    dend_18 { pt3dadd( -119.832, -235.62, -142.886, 0.12 ) }
    dend_18 { pt3dadd( -119.939, -236.238, -142.894, 0.36 ) }
    dend_18 { pt3dadd( -120.0, -236.579, -142.903, 0.12 ) }
    dend_18 { pt3dadd( -120.219, -237.64, -142.943, 0.12 ) }
    dend_18 { pt3dadd( -120.428, -238.513, -142.976, 0.12 ) }
    dend_18 { pt3dadd( -120.589, -239.108, -142.997, 0.6 ) }
    dend_18 { pt3dadd( -120.81, -239.915, -143.028, 0.6 ) }
    dend_18 { pt3dadd( -120.984, -240.562, -143.055, 0.12 ) }
    dend_18 { pt3dadd( -121.259, -241.524, -143.101, 0.12 ) }
    dend_18 { pt3dadd( -121.507, -242.326, -143.149, 0.12 ) }
    dend_18 { pt3dadd( -121.711, -242.961, -143.186, 0.6 ) }
    dend_18 { pt3dadd( -121.89, -243.543, -143.218, 0.6 ) }
    dend_18 { pt3dadd( -122.068, -244.193, -143.25, 0.6 ) }
    dend_18 { pt3dadd( -122.166, -244.563, -143.264, 0.12 ) }
    dend_18 { pt3dadd( -122.487, -245.74, -143.309, 0.12 ) }
    dend_18 { pt3dadd( -122.78, -246.753, -143.383, 0.12 ) }
    dend_18 { pt3dadd( -123.021, -247.504, -143.454, 0.12 ) }
    dend_18 { pt3dadd( -123.341, -248.435, -143.554, 0.12 ) }
    dend_18 { pt3dadd( -123.626, -249.251, -143.649, 0.12 ) }
    dend_18 { pt3dadd( -123.837, -249.88, -143.723, 0.36 ) }
    dend_18 { pt3dadd( -124.114, -250.679, -143.886, 0.12 ) }
    dend_18 { pt3dadd( -124.282, -251.162, -144.014, 0.12 ) }
    dend_18 { pt3dadd( -124.616, -252.149, -144.312, 0.12 ) }
    dend_18 { pt3dadd( -124.992, -253.304, -144.652, 0.12 ) }
    dend_18 { pt3dadd( -125.248, -254.112, -144.892, 0.12 ) }
    dend_18 { pt3dadd( -125.765, -255.68, -145.58, 0.12 ) }
    dend_18 { pt3dadd( -125.919, -256.133, -145.818, 0.36 ) }
    dend_18 { pt3dadd( -126.136, -256.723, -146.187, 0.12 ) }
    dend_18 { pt3dadd( -126.677, -258.044, -147.333, 0.12 ) }
    dend_18 { pt3dadd( -126.892, -258.497, -147.8, 0.6 ) }
    dend_18 { pt3dadd( -127.938, -260.473, -150.009, 0.12 ) }
    dend_18 { pt3dadd( -128.245, -260.994, -150.641, 0.12 ) }
    dend_18 { pt3dadd( -128.393, -261.228, -150.945, 0.6 ) }
    dend_18 { pt3dadd( -129.432, -262.706, -152.993, 0.12 ) }
    dend_18 { pt3dadd( -129.967, -263.353, -153.924, 0.12 ) }
    dend_18 { pt3dadd( -130.192, -263.589, -154.188, 0.12 ) }
    dend_18 { pt3dadd( -130.651, -264.0, -154.482, 0.36 ) }
    dend_18 { pt3dadd( -131.215, -264.457, -154.77, 0.12 ) }
    dend_18 { pt3dadd( -131.675, -264.817, -154.903, 0.12 ) }
    dend_18 { pt3dadd( -132.292, -265.288, -154.951, 0.12 ) }
    dend_18 { pt3dadd( -133.43, -266.149, -155.034, 0.12 ) }
    dend_18 { pt3dadd( -134.876, -267.25, -155.125, 0.12 ) }
    dend_18 { pt3dadd( -135.28, -267.567, -155.141, 0.12 ) }
    dend_18 { pt3dadd( -136.585, -268.542, -155.187, 0.12 ) }
    dend_18 { pt3dadd( -136.84, -268.743, -155.195, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -77.325, -202.947, -118.053, 0.12 ) }
    dend_17 { pt3dadd( -77.3166, -202.991, -118.07, 0.12 ) }
    dend_17 { pt3dadd( -77.296, -203.121, -118.11, 0.6 ) }
    dend_17 { pt3dadd( -77.1922, -203.511, -118.206, 0.72 ) }
    dend_17 { pt3dadd( -76.893, -204.346, -118.461, 0.48 ) }
    dend_17 { pt3dadd( -76.6857, -204.852, -118.614, 0.48 ) }
    dend_17 { pt3dadd( -76.4764, -205.36, -118.759, 0.24 ) }
    dend_17 { pt3dadd( -76.2359, -205.965, -118.946, 0.24 ) }
    dend_17 { pt3dadd( -75.9167, -206.866, -119.22, 0.24 ) }
    dend_17 { pt3dadd( -75.5795, -207.833, -119.505, 0.12 ) }
    dend_17 { pt3dadd( -75.3279, -208.511, -119.692, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_17 { pt3dadd( -75.0312, -209.243, -119.908, 0.12 ) }
    dend_17 { pt3dadd( -74.7572, -209.848, -120.105, 0.48 ) }
    dend_17 { pt3dadd( -74.4008, -210.727, -120.393, 0.36 ) }
    dend_17 { pt3dadd( -74.3046, -211.141, -120.497, 0.12 ) }
    dend_17 { pt3dadd( -74.2231, -211.662, -120.662, 0.12 ) }
    dend_17 { pt3dadd( -74.1759, -211.947, -120.771, 0.36 ) }
    dend_17 { pt3dadd( -74.0875, -212.411, -120.953, 0.12 ) }
    dend_17 { pt3dadd( -73.8857, -213.344, -121.236, 0.12 ) }
    dend_17 { pt3dadd( -73.5461, -214.824, -121.62, 0.12 ) }
    dend_17 { pt3dadd( -73.181, -216.428, -122.013, 0.12 ) }
    dend_17 { pt3dadd( -72.9326, -217.49, -122.247, 0.12 ) }
    dend_17 { pt3dadd( -72.7535, -218.149, -122.373, 0.12 ) }
    dend_17 { pt3dadd( -72.3485, -219.294, -122.567, 0.48 ) }
    dend_17 { pt3dadd( -72.1329, -219.727, -122.63, 0.48 ) }
    dend_17 { pt3dadd( -71.7004, -220.414, -122.734, 0.24 ) }
    dend_17 { pt3dadd( -71.3186, -220.996, -122.804, 0.24 ) }
    dend_17 { pt3dadd( -70.9978, -221.499, -122.896, 0.24 ) }
    dend_17 { pt3dadd( -70.508, -222.3, -123.117, 0.12 ) }
    dend_17 { pt3dadd( -69.9585, -223.275, -123.459, 0.12 ) }
    dend_17 { pt3dadd( -69.54, -224.08, -123.733, 0.12 ) }
    dend_17 { pt3dadd( -69.3639, -224.431, -123.857, 0.24 ) }
    dend_17 { pt3dadd( -69.007, -225.122, -124.137, 0.36 ) }
    dend_17 { pt3dadd( -68.694, -225.719, -124.39, 0.12 ) }
    dend_17 { pt3dadd( -68.5196, -226.064, -124.531, 0.12 ) }
    dend_17 { pt3dadd( -68.28, -226.584, -124.724, 0.12 ) }
    dend_17 { pt3dadd( -67.9669, -227.314, -124.932, 0.36 ) }
    dend_17 { pt3dadd( -67.5704, -228.212, -125.141, 0.12 ) }
    dend_17 { pt3dadd( -67.2873, -228.823, -125.241, 0.12 ) }
    dend_17 { pt3dadd( -67.0519, -229.316, -125.316, 0.12 ) }
    dend_17 { pt3dadd( -66.6498, -230.182, -125.446, 0.12 ) }
    dend_17 { pt3dadd( -66.2673, -231.074, -125.551, 0.12 ) }
    dend_17 { pt3dadd( -66.1189, -231.428, -125.579, 0.12 ) }
    dend_17 { pt3dadd( -65.7031, -232.461, -125.619, 0.6 ) }
    dend_17 { pt3dadd( -65.2979, -233.524, -125.638, 0.12 ) }
    dend_17 { pt3dadd( -64.616, -235.265, -125.667, 0.12 ) }
    dend_17 { pt3dadd( -63.6575, -237.651, -125.699, 0.12 ) }
    dend_17 { pt3dadd( -62.6099, -240.284, -125.722, 0.12 ) }
    dend_17 { pt3dadd( -62.1923, -241.372, -125.722, 0.12 ) }
    dend_17 { pt3dadd( -61.8096, -242.435, -125.688, 0.48 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 39/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -49.4236, -113.235, 18.5349, 0.48 ) }
    dend_38 { pt3dadd( -49.778, -114.552, 18.8066, 0.48 ) }
    dend_38 { pt3dadd( -50.0922, -115.827, 19.0366, 0.36 ) }
    dend_38 { pt3dadd( -50.2243, -116.406, 19.1329, 0.12 ) }
    dend_38 { pt3dadd( -50.4596, -117.374, 19.3504, 0.12 ) }
    dend_38 { pt3dadd( -50.6821, -118.207, 19.5552, 0.12 ) }
    dend_38 { pt3dadd( -50.8327, -118.741, 19.6903, 0.6 ) }
    dend_38 { pt3dadd( -51.0423, -119.44, 19.8311, 0.6 ) }
    dend_38 { pt3dadd( -51.1531, -119.861, 19.8706, 0.6 ) }
    dend_38 { pt3dadd( -51.4122, -121.268, 19.9031, 0.12 ) }
    dend_38 { pt3dadd( -51.4779, -121.995, 19.885, 0.12 ) }
    dend_38 { pt3dadd( -51.4589, -122.444, 19.8589, 0.12 ) }
    dend_38 { pt3dadd( -51.0953, -123.73, 19.7647, 0.12 ) }
    dend_38 { pt3dadd( -49.422, -125.786, 19.7183, 0.12 ) }
    dend_38 { pt3dadd( -48.5812, -126.344, 19.7828, 0.12 ) }
    dend_38 { pt3dadd( -47.8103, -126.7, 19.8738, 0.12 ) }
    dend_38 { pt3dadd( -46.4146, -127.191, 20.1385, 0.12 ) }
    dend_38 { pt3dadd( -45.102, -127.587, 20.4669, 0.12 ) }
    dend_38 { pt3dadd( -44.0223, -127.822, 20.7893, 0.12 ) }
    dend_38 { pt3dadd( -43.165, -127.942, 21.1296, 0.36 ) }
    dend_38 { pt3dadd( -42.8783, -127.986, 21.244, 0.12 ) }
    dend_38 { pt3dadd( -41.7511, -128.261, 21.707, 0.12 ) }
    dend_38 { pt3dadd( -41.0589, -128.549, 22.0074, 0.24 ) }
    dend_38 { pt3dadd( -36.8917, -139.349, 25.4792, 0.24 ) }
    dend_38 { pt3dadd( -32.186, -149.856, 29.0764, 0.24 ) }
    dend_38 { pt3dadd( -27.8209, -160.494, 32.7572, 0.24 ) }
    dend_38 { pt3dadd( -22.759, -171.03, 35.7136, 0.24 ) }
    dend_38 { pt3dadd( -18.3384, -181.206, 40.4046, 0.24 ) }
    dend_38 { pt3dadd( -11.7635, -190.687, 43.608, 0.24 ) }
    dend_38 { pt3dadd( -3.61845, -198.856, 46.4334, 0.24 ) }
    dend_38 { pt3dadd( 3.69438, -208.289, 46.877, 0.24 ) }
    dend_38 { pt3dadd( 11.0912, -217.544, 48.3649, 0.24 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -49.4236, -113.235, 18.5349, 0.12 ) }
    dend_35 { pt3dadd( -49.9801, -113.345, 18.2261, 0.12 ) }
    dend_35 { pt3dadd( -50.2944, -113.455, 18.0746, 0.12 ) }
    dend_35 { pt3dadd( -50.9834, -113.75, 17.6556, 0.12 ) }
    dend_35 { pt3dadd( -51.2735, -113.865, 17.4645, 0.12 ) }
    dend_35 { pt3dadd( -51.9413, -114.129, 17.0244, 0.12 ) }
    dend_35 { pt3dadd( -53.3694, -114.693, 16.0835, 0.12 ) }
    dend_35 { pt3dadd( -53.6929, -114.853, 15.8727, 0.12 ) }
    dend_35 { pt3dadd( -54.555, -115.338, 15.3324, 0.84 ) }
    dend_35 { pt3dadd( -55.2384, -115.773, 14.9508, 0.84 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -55.2384, -115.773, 14.9508, 0.12 ) }
    dend_37 { pt3dadd( -55.6835, -115.634, 14.811, 0.12 ) }
    dend_37 { pt3dadd( -56.3866, -115.472, 14.5959, 0.12 ) }
    dend_37 { pt3dadd( -57.3072, -115.309, 14.3183, 0.12 ) }
    dend_37 { pt3dadd( -58.5096, -115.146, 13.9594, 0.12 ) }
    dend_37 { pt3dadd( -59.4873, -115.044, 13.6697, 0.12 ) }
    dend_37 { pt3dadd( -61.2409, -114.84, 13.2382, 0.24 ) }
    dend_37 { pt3dadd( -61.814, -114.794, 13.1209, 0.12 ) }
    dend_37 { pt3dadd( -62.3835, -114.771, 13.0288, 0.12 ) }
    dend_37 { pt3dadd( -63.177, -114.725, 12.9313, 0.12 ) }
    dend_37 { pt3dadd( -63.53, -114.673, 12.8989, 0.12 ) }
    dend_37 { pt3dadd( -64.9576, -114.292, 12.7765, 0.24 ) }
    dend_37 { pt3dadd( -65.7117, -114.02, 12.7074, 0.12 ) }
    dend_37 { pt3dadd( -66.1486, -113.851, 12.6794, 0.12 ) }
    dend_37 { pt3dadd( -67.21, -113.444, 12.6171, 0.36 ) }
    dend_37 { pt3dadd( -68.1142, -113.127, 12.5961, 0.36 ) }
    dend_37 { pt3dadd( -69.1253, -112.821, 12.5789, 0.36 ) }
    dend_37 { pt3dadd( -69.5809, -112.717, 12.5643, 0.12 ) }
    dend_37 { pt3dadd( -70.9214, -112.473, 12.5427, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_37 { pt3dadd( -71.8265, -112.398, 12.5607, 0.12 ) }
    dend_37 { pt3dadd( -72.9379, -112.48, 12.6213, 1.44 ) }
    dend_37 { pt3dadd( -73.3797, -112.576, 12.6642, 1.92 ) }
    dend_37 { pt3dadd( -74.029, -112.803, 12.7488, 1.92 ) }
    dend_37 { pt3dadd( -74.6192, -113.112, 12.8346, 1.92 ) }
    dend_37 { pt3dadd( -75.5462, -113.944, 12.9047, 0.12 ) }
    dend_37 { pt3dadd( -75.9819, -114.667, 12.9176, 0.12 ) }
    dend_37 { pt3dadd( -76.1629, -115.349, 12.8823, 0.36 ) }
    dend_37 { pt3dadd( -76.2145, -115.72, 12.8678, 0.12 ) }
    dend_37 { pt3dadd( -76.2088, -116.512, 12.8397, 0.12 ) }
    dend_37 { pt3dadd( -75.9307, -118.235, 12.7443, 1.68 ) }
    dend_37 { pt3dadd( -75.7405, -118.706, 12.6508, 1.92 ) }
    dend_37 { pt3dadd( -75.5725, -119.001, 12.5655, 1.92 ) }
    dend_37 { pt3dadd( -84.8519, -120.806, 12.3442, 1.92 ) }
    dend_37 { pt3dadd( -94.1668, -122.168, 11.5519, 1.92 ) }
    dend_37 { pt3dadd( -103.603, -122.119, 11.507, 1.92 ) }
    dend_37 { pt3dadd( -112.936, -123.399, 12.2273, 1.92 ) }
    dend_37 { pt3dadd( -121.991, -125.703, 13.7793, 1.92 ) }
    dend_37 { pt3dadd( -130.694, -129.554, 13.8457, 1.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -55.2384, -115.773, 14.9508, 0.48 ) }
    dend_36 { pt3dadd( -55.7195, -116.155, 14.838, 0.48 ) }
    dend_36 { pt3dadd( -56.2865, -116.458, 14.7008, 0.48 ) }
    dend_36 { pt3dadd( -57.1406, -116.837, 14.4924, 0.48 ) }
    dend_36 { pt3dadd( -57.7347, -117.082, 14.3477, 0.12 ) }
    dend_36 { pt3dadd( -58.8254, -117.521, 14.0356, 0.12 ) }
    dend_36 { pt3dadd( -59.9482, -117.932, 13.6848, 0.12 ) }
    dend_36 { pt3dadd( -61.1889, -118.309, 13.3033, 0.12 ) }
    dend_36 { pt3dadd( -61.8567, -118.469, 13.0857, 0.12 ) }
    dend_36 { pt3dadd( -62.4639, -118.573, 12.8768, 0.12 ) }
    dend_36 { pt3dadd( -63.2756, -118.689, 12.5785, 0.6 ) }
    dend_36 { pt3dadd( -63.963, -118.776, 12.2936, 0.6 ) }
    dend_36 { pt3dadd( -72.5177, -122.423, 10.7774, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_33 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_19 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_4 nseg = 13
    dend_26 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_10 nseg = 23
    dend_5 nseg = 7
    dend_4 nseg = 7
    dend_2 nseg = 5
    dend_1 nseg = 7
    apic_3 nseg = 5
    apic_2 nseg = 9
    dend_32 nseg = 7
    dend_28 nseg = 9
    dend_21 nseg = 7
    dend_20 nseg = 3
    dend_16 nseg = 11
    dend_15 nseg = 9
    dend_13 nseg = 9
    dend_9 nseg = 3
    dend_8 nseg = 11
    dend_39 nseg = 15
    dend_34 nseg = 5
    dend_29 nseg = 3
    dend_18 nseg = 5
    dend_17 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_DBC_b0e6d189ec_0_0


