// Cell: bIR215_L6_BP_ff30c6d80e_0_0
/*
{
  "id" : "bIR215_L6_BP_ff30c6d80e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.68738, 7.87967, 2.75644, 0.83", "-4.97173, 9.65022, 3.10095, 1.11", "-6.31859, 10.6935, 3.28016, 0.83", "-7.62712, 11.6982, 3.44073, 0.83", "-8.40187, 12.2712, 3.52872, 1.11", "-10.8281, 14.0615, 3.81072, 1.11", "-15.1675, 17.1266, 4.30921, 0.83", "-16.7308, 18.1887, 4.47382, 0.83", "-17.9688, 19.0049, 4.57607, 0.83", "-19.1761, 19.8137, 4.66458, 0.83", "-20.1588, 20.4803, 4.71233, 0.55", "-20.8974, 20.9317, 4.7608, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.94741, 6.38925, -6.32585, 0.55", "8.11974, 7.07549, -7.03429, 0.55", "9.96053, 7.24872, -7.9717, 0.83", "12.8739, 7.43308, -9.71302, 0.55", "14.2803, 7.52207, -10.5536, 1.38", "17.7381, 7.74088, -12.6203, 0.55", "19.2109, 7.66678, -13.6064, 0.83", "26.8292, 6.30792, -19.1472, 0.55", "27.5662, 6.12519, -19.7568, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.680992, -10.2109, 3.13352, 1.11", "-0.723377, -13.9504, 4.47414, 1.11", "-0.740637, -15.4734, 5.02013, 0.83", "-0.763569, -17.4968, 5.7455, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.88532, 9.89664, -1.37542, 1.11", "0.974923, 11.9219, -1.35879, 1.11", "1.11077, 15.2263, -1.21109, 1.38", "1.12148, 15.4103, -1.19952, 1.38", "1.39089, 17.6868, -1.03154, 0.83", "1.77175, 20.0937, -0.723939, 0.83", "2.42972, 22.8105, -0.0446381, 0.83", "2.80527, 23.8405, 0.341604, 0.83", "3.17649, 24.586, 0.697911, 1.11", "4.26366, 26.4014, 1.61873, 0.55", "5.52812, 28.2958, 2.7187, 0.83", "7.18667, 30.2431, 3.96884, 0.55", "8.03333, 31.0514, 4.53599, 0.83", "9.21623, 32.146, 5.42044, 0.55", "10.6808, 33.5383, 6.61771, 0.55", "12.7254, 35.6342, 8.44657, 0.55", "14.9785, 38.0301, 10.4659, 0.55", "16.3978, 39.5851, 11.9742, 0.55", "18.135, 41.5512, 14.1033, 0.55", "18.4957, 41.9455, 14.5863, 0.83", "19.4475, 42.9873, 15.9488, 0.55", "20.2491, 43.7993, 17.0186, 0.83", "22.0945, 46.019, 19.5551, 0.55", "22.7912, 46.8297, 20.2963, 0.83", "23.4448, 47.4267, 20.7993, 0.55", "24.0942, 47.9404, 21.1855, 0.83", "25.5354, 48.8949, 21.8858, 0.83", "27.4426, 50.1945, 22.6387, 0.83", "28.6135, 51.054, 22.9718, 0.55", "29.5064, 51.7982, 23.2308, 0.55", "31.8472, 53.7208, 23.8741, 0.83", "33.3594, 54.9537, 24.2276, 0.55", "35.6555, 56.7596, 24.6694, 0.55", "37.7595, 58.2732, 24.9886, 0.55", "39.6415, 59.555, 25.2227, 0.55", "42.0199, 61.0564, 25.4092, 0.55", "43.4735, 61.7911, 25.4752, 0.55", "44.4653, 62.2035, 25.4006, 0.55", "45.7826, 62.5101, 25.1893, 0.55", "47.7483, 62.6472, 24.7121, 0.55", "48.9738, 62.5769, 24.367, 0.55", "50.7646, 62.4255, 23.9887, 0.55", "54.176, 62.2457, 23.5739, 0.55", "56.853, 62.2283, 23.4395, 0.55", "59.6905, 62.3452, 23.467, 0.55", "61.51, 62.4824, 23.6287, 0.55", "66.2377, 63.2672, 24.3611, 0.55", "69.0351, 63.9471, 25.0058, 0.55", "71.1329, 64.5945, 25.6864, 0.55", "72.4078, 65.2, 26.1498, 0.55", "73.8857, 66.1017, 26.6799, 0.55", "76.3872, 67.8809, 27.3533, 0.55", "76.961, 68.3094, 27.428, 0.55", "78.607, 69.455, 27.5333, 0.55", "80.1197, 70.676, 27.6245, 0.83", "80.9452, 71.3533, 27.6612, 0.55", "82.1815, 72.5164, 27.6669, 0.83", "88.6924, 78.7272, 29.4202, 0.83", "94.3548, 85.8559, 30.4962, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-20.8974, 20.9317, 4.7608, 0.55", "-22.6733, 21.8279, 3.88181, 0.55", "-24.6044, 22.8025, 2.926, 0.55", "-26.9348, 23.9787, 1.77255, 0.55", "-28.859, 24.9498, 0.820107, 0.83", "-30.4716, 25.7636, 0.0219647, 0.55", "-33.4646, 27.2742, -1.45951, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-20.8974, 20.9317, 4.7608, 0.55", "-23.2943, 21.4118, 4.40575, 0.55", "-25.8547, 21.83, 4.2798, 0.55", "-28.7606, 22.2959, 4.2078, 0.55", "-32.9838, 22.906, 4.48865, 0.55", "-36.5275, 23.3016, 4.97002, 0.55", "-40.2505, 23.6516, 5.63062, 0.55", "-43.8648, 23.7284, 6.64458, 0.55", "-46.9888, 23.4791, 7.80274, 0.55", "-50.8983, 22.8784, 9.64686, 0.55", "-52.6073, 22.4828, 10.6771, 0.55", "-54.4564, 22.0324, 11.8673, 0.55", "-57.7141, 21.0029, 13.8098, 0.55", "-59.4381, 20.4734, 14.5754, 0.55", "-61.2437, 19.8647, 15.3644, 0.55", "-63.3832, 19.1782, 16.0887, 0.55", "-65.7056, 18.4831, 16.815, 0.55", "-69.0176, 17.4865, 17.7795, 0.55", "-73.4251, 16.468, 18.6872, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "27.5662, 6.12519, -19.7568, 0.55", "31.9201, 7.21128, -20.6771, 0.55", "34.4246, 7.70662, -21.5676, 0.55", "36.8942, 8.08595, -22.4879, 0.55", "38.5803, 8.27751, -23.1195, 0.55", "41.0435, 8.49919, -24.0264, 0.55", "46.1506, 8.86741, -26.0728, 0.55", "51.9413, 9.26665, -28.7843, 0.55", "54.7447, 9.29311, -30.3034, 0.55", "56.2448, 9.27473, -31.2181, 0.55", "57.8894, 9.26584, -32.288, 0.55", "60.8227, 9.16673, -34.1897, 0.55", "61.8865, 9.06925, -34.9192, 0.55", "66.3901, 8.78702, -38.3538, 0.55", "69.5775, 8.6502, -41.021, 0.55", "71.4129, 8.60997, -42.6059, 0.55", "73.2432, 8.55343, -44.1861, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "27.5662, 6.12519, -19.7568, 0.83", "29.99, 7.29239, -19.6823, 0.83", "31.374, 7.96701, -19.6995, 0.55", "33.412, 9.02578, -19.8822, 0.83", "34.7849, 9.77621, -20.0395, 0.55", "36.6838, 10.8548, -20.2234, 0.83", "38.9734, 12.182, -20.3594, 0.55", "40.118, 12.7641, -20.3946, 0.55", "42.721, 13.743, -20.3481, 0.83", "45.0622, 14.3195, -20.0513, 0.55", "46.3721, 14.6113, -19.7665, 0.83", "48.3461, 15.0619, -19.1344, 0.55", "51.1938, 15.7072, -17.872, 0.55", "55.1322, 16.3822, -15.9525, 0.55", "58.8794, 16.8615, -13.8914, 0.55", "61.846, 17.2036, -12.2115, 0.55", "66.7395, 17.7858, -9.41431, 0.55", "70.3314, 18.2992, -7.27806, 0.55", "72.5194, 18.7712, -5.88716, 0.55", "76.5893, 20.0252, -3.23452, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.763569, -17.4968, 5.7455, 0.83", "-1.31714, -20.6055, 5.6867, 0.83", "-1.85648, -23.6343, 5.62941, 0.83", "-2.45865, -27.016, 5.56544, 0.83", "-2.7731, -28.7818, 5.53204, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.763569, -17.4968, 5.7455, 0.55", "-0.260901, -19.0063, 6.85541, 0.55", "0.161358, -20.8595, 8.28076, 0.55", "0.332489, -23.2981, 10.2164, 0.55", "0.330124, -24.2478, 10.9892, 0.83", "0.0783242, -26.6766, 13.2215, 0.55", "-0.156758, -27.9336, 14.3899, 0.55", "-0.674111, -30.3792, 16.7617, 0.83", "-1.17242, -32.1977, 18.6299, 0.55", "-1.71483, -33.7014, 20.137, 0.55", "-2.80184, -36.551, 22.9348, 0.55", "-3.66376, -38.8223, 25.1383, 0.55", "-4.31998, -40.642, 26.9332, 0.55", "-4.90567, -42.5714, 28.7866, 0.28", "-5.07969, -43.3733, 29.5332, 0.55", "-5.3558, -44.8537, 30.8313, 0.28", "-5.44309, -47.157, 32.5237, 0.55", "-7.61922, -54.8681, 38.4214, 0.55", "-10.0589, -62.0, 44.9149, 0.55", "-12.1869, -67.8548, 52.6721, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-33.4646, 27.2742, -1.45951, 0.55", "-35.2565, 27.282, -0.695924, 0.55", "-36.0166, 27.2331, -0.292105, 0.83", "-36.9134, 27.1174, 0.285462, 0.55", "-37.6045, 27.0198, 0.785621, 0.83", "-39.4159, 26.8262, 2.09018, 0.55", "-40.1025, 26.7627, 2.59073, 0.28", "-41.255, 26.6551, 3.51687, 0.55", "-42.8011, 26.5202, 4.75411, 0.55", "-43.971, 26.4256, 5.64377, 0.55", "-45.5301, 26.3058, 6.78591, 0.28", "-45.9316, 26.2844, 7.03765, 0.55", "-46.7605, 26.2537, 7.53056, 0.28", "-47.3198, 26.2541, 7.81763, 0.55", "-48.4537, 26.2615, 8.30877, 0.28", "-49.1157, 26.2358, 8.55896, 0.55", "-50.2821, 26.1074, 8.99753, 0.28", "-51.0632, 26.0202, 9.26497, 0.55", "-55.9763, 24.8172, 12.8766, 0.55", "-60.5013, 22.997, 16.729, 0.55", "-64.8447, 20.6081, 20.4783, 0.55", "-69.1163, 17.5669, 23.815, 0.55", "-72.7771, 14.6777, 27.9236, 0.55", "-76.8763, 12.0435, 31.7819, 0.55", "-81.0982, 10.3638, 36.0226, 0.55", "-85.2777, 8.21728, 40.0912, 0.55", "-89.3722, 6.44764, 44.4194, 0.55", "-93.1982, 4.56422, 48.9408, 0.55", "-96.4188, 1.97255, 53.5819, 0.55", "-99.7242, -0.0753624, 58.4307, 0.55", "-103.071, -2.6965, 62.9642, 0.55", "-105.722, -5.60721, 67.7738, 0.55", "-107.403, -8.16474, 73.1832, 0.55", "-108.973, -11.767, 77.9984, 0.55", "-109.665, -15.482, 82.9329, 0.55", "-110.702, -18.9637, 87.9761, 0.55", "-112.416, -22.0267, 93.1053, 0.55", "-115.416, -24.1292, 98.1261, 0.55", "-117.869, -26.9063, 103.116, 0.55", "-119.253, -28.7466, 108.889, 0.55", "-121.613, -30.1187, 114.472, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-33.4646, 27.2742, -1.45951, 0.55", "-35.1522, 28.0293, -3.53129, 0.55", "-36.4385, 28.8732, -5.82797, 0.55", "-37.6371, 29.9222, -8.25449, 0.55", "-38.3877, 30.579, -9.77395, 0.55", "-39.7569, 31.7772, -12.5456, 0.83", "-40.7586, 32.6538, -14.5734, 0.55", "-41.8928, 33.8548, -17.5466, 0.83", "-42.3003, 34.6732, -19.2116, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-73.4251, 16.468, 18.6872, 0.28", "-74.8105, 14.3331, 17.5257, 0.28", "-75.4621, 13.4408, 16.9359, 0.28", "-76.3072, 12.1874, 16.0563, 0.55", "-77.0062, 11.0797, 15.2979, 0.28", "-78.0408, 9.38398, 14.1694, 0.55", "-80.9329, 4.36652, 10.9581, 0.28", "-81.865, 2.6414, 9.68215, 0.55", "-83.2686, 0.00856762, 7.61751, 0.28", "-84.0682, -1.54816, 6.30441, 0.55", "-84.6178, -2.61341, 5.36945, 0.28", "-85.2453, -3.83925, 4.30842, 0.55", "-87.1534, -7.97277, 0.902128, 0.28", "-87.7487, -9.20893, -0.181116, 0.55", "-88.769, -11.0334, -2.07675, 0.28", "-89.601, -12.1579, -3.43105, 0.28", "-90.3498, -12.8862, -4.3897, 0.55", "-92.9784, -14.9105, -7.05735, 0.28", "-94.2051, -15.7239, -8.13045, 0.55", "-97.1947, -17.5229, -10.7474, 0.28", "-100.186, -19.0759, -13.1517, 0.28", "-103.437, -20.5007, -15.5929, 0.28", "-104.93, -21.0156, -16.5476, 0.55", "-112.214, -28.0696, -23.6825, 0.55", "-120.531, -35.7545, -28.7316, 0.55", "-128.496, -42.5321, -35.39, 0.55", "-136.538, -48.295, -42.8615, 0.55", "-144.551, -52.9321, -51.1078, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-73.4251, 16.468, 18.6872, 0.55", "-74.3006, 16.3904, 18.7986, 0.55", "-76.7735, 16.1896, 19.4331, 0.55", "-77.7032, 16.0926, 19.7222, 0.55", "-79.889, 15.7998, 20.4388, 0.55", "-83.2493, 15.3762, 21.3766, 0.55", "-84.9957, 15.2084, 21.8304, 0.28", "-87.7124, 14.8855, 22.4862, 0.55", "-89.7288, 14.6009, 22.9026, 0.55", "-90.5802, 14.4752, 23.0805, 0.28", "-95.6874, 13.718, 24.1411, 0.55", "-98.072, 13.2472, 24.496, 0.28", "-101.286, 12.5911, 24.7862, 0.28", "-104.055, 12.0585, 24.8718, 0.55", "-114.902, 11.6772, 27.486, 0.55", "-125.386, 11.0744, 31.2734, 0.55", "-135.265, 9.39633, 36.193, 0.55", "-144.877, 9.6311, 41.8656, 0.55", "-153.108, 9.59582, 49.4064, 0.55", "-159.744, 10.2571, 58.3588, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "73.2432, 8.55343, -44.1861, 0.55", "76.5072, 9.7317, -46.5173, 0.55", "77.528, 10.0878, -47.3287, 0.55", "78.7962, 10.4904, -48.3453, 0.55", "81.0911, 11.2527, -50.3215, 0.55", "83.463, 11.9812, -52.4744, 0.55", "84.6014, 12.2416, -53.5335, 0.83", "85.5221, 12.4228, -54.4966, 0.55", "86.1961, 12.5312, -55.306, 0.83", "87.7625, 12.6166, -57.4567, 0.55", "89.021, 12.5688, -59.2855, 0.55", "90.467, 12.4732, -61.3173, 0.55", "92.0887, 12.4288, -63.5952, 0.55", "93.1693, 12.3839, -65.1621, 0.55", "94.3868, 12.3458, -66.9726, 0.55", "95.4478, 12.383, -68.5997, 0.55", "96.13, 12.5069, -69.6917, 0.55", "96.9729, 12.9114, -71.8213, 0.55", "97.4166, 13.1432, -73.1605, 0.55", "97.7545, 13.4334, -74.9437, 0.55", "98.1672, 13.8729, -77.9759, 0.55", "98.2418, 13.9519, -78.6674, 0.28", "99.2201, 14.8091, -87.1143, 0.28", "99.5804, 15.0605, -89.595, 0.83", "101.03, 15.7691, -98.4667, 0.83", "101.769, 15.9324, -102.654, 0.83", "102.134, 15.9216, -104.379, 0.55", "102.577, 15.8849, -106.073, 0.55", "103.919, 15.6351, -109.287, 0.55", "105.405, 15.3216, -112.151, 0.28", "105.889, 15.0977, -112.403, 0.55", "106.978, 14.5224, -112.528, 0.28", "107.665, 14.1746, -112.487, 0.55", "108.38, 13.7784, -112.386, 0.28", "109.25, 13.3291, -112.209, 0.55", "110.567, 12.7783, -112.056, 0.28", "111.616, 12.3184, -111.979, 0.55", "112.795, 11.9202, -111.956, 0.28", "114.397, 11.4389, -112.062, 0.55", "116.203, 10.9805, -112.269, 0.55", "117.794, 10.6357, -112.547, 0.28", "120.0, 10.2243, -113.042, 0.55", "123.835, 9.76783, -114.25, 0.55", "125.548, 9.72648, -114.948, 0.55", "126.29, 9.76685, -115.311, 0.83", "127.706, 9.9016, -116.123, 0.55", "128.697, 10.0548, -116.73, 0.83", "131.38, 10.5423, -118.366, 0.55", "132.991, 10.7533, -119.444, 0.28", "133.66, 10.7746, -119.842, 0.55", "135.455, 10.5974, -120.798, 0.28", "136.07, 10.4641, -121.114, 0.55", "137.32, 10.0347, -121.601, 0.28", "138.563, 9.38734, -121.921, 0.55", "141.045, 7.76264, -122.165, 0.28", "142.178, 6.91138, -122.171, 0.55", "143.838, 5.50798, -122.122, 0.28", "145.938, 3.71141, -121.977, 0.55", "147.463, 2.42366, -121.837, 0.55", "150.127, 0.260823, -121.515, 0.28", "151.233, -0.536768, -121.458, 0.55", "153.165, -1.71387, -121.535, 0.28", "155.127, -2.68348, -121.692, 0.55", "156.232, -3.03472, -121.883, 0.28", "157.263, -3.19218, -122.082, 0.55", "160.213, -3.3709, -122.844, 0.28", "162.353, -3.35168, -123.367, 0.28", "164.246, -3.20212, -123.799, 0.55", "166.347, -2.94647, -124.353, 0.28", "166.885, -2.85908, -124.465, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "73.2432, 8.55343, -44.1861, 0.55", "73.4375, 7.03853, -46.1333, 0.55", "73.452, 5.73527, -47.6598, 0.28", "73.4637, 4.49513, -48.9331, 0.55", "73.6562, 1.85413, -51.6713, 0.28", "73.6627, 1.69893, -51.8709, 0.55", "73.7264, 0.913067, -53.0025, 0.28", "73.6973, 0.324305, -54.0683, 0.55", "73.6139, -0.245351, -55.2788, 0.28", "73.4628, -0.996359, -56.9839, 0.55", "73.0815, -2.90324, -61.2076, 0.55", "72.7005, -4.6183, -65.1045, 0.55", "72.3729, -5.98476, -68.221, 0.55", "72.009, -7.33654, -71.243, 0.55", "71.9131, -7.69445, -71.9998, 0.28", "71.8286, -8.09787, -72.7591, 0.55", "71.7932, -8.69674, -73.7389, 0.28", "71.8885, -9.84332, -75.3685, 0.55", "72.3262, -12.2424, -78.0539, 0.55", "72.5756, -13.5853, -79.3619, 0.28", "72.7348, -14.912, -80.7537, 0.55", "72.7909, -16.716, -82.7745, 0.28", "72.7186, -18.14, -84.4393, 0.55", "72.4932, -20.2506, -86.9264, 0.28", "72.2807, -22.4684, -89.4171, 0.55", "71.9175, -25.668, -93.0648, 0.28", "71.6759, -27.3642, -95.013, 0.55", "71.3922, -29.0753, -97.0543, 0.28", "71.1216, -30.5356, -98.9679, 0.28", "70.8679, -32.2997, -101.571, 0.55", "70.7916, -33.9779, -103.939, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "76.5893, 20.0252, -3.23452, 0.55", "79.2453, 19.3278, -2.76662, 0.55", "81.1684, 18.7655, -2.62136, 0.55", "85.3674, 17.5107, -2.53425, 0.55", "87.247, 16.9261, -2.67234, 0.55", "89.3011, 16.3452, -2.92546, 0.55", "92.0603, 15.6377, -3.4609, 0.55", "94.9546, 14.8446, -4.31906, 0.55", "96.4668, 14.4284, -4.95152, 0.55", "99.5286, 13.6313, -6.67365, 0.55", "100.94, 13.2817, -7.51228, 0.55", "104.234, 12.4068, -9.57445, 0.55", "106.454, 11.7181, -10.9626, 0.55", "108.089, 11.1914, -11.9069, 0.83", "110.689, 10.244, -13.3961, 0.55", "113.222, 9.17239, -14.7646, 0.83", "115.36, 8.14847, -15.856, 0.55", "117.27, 7.2547, -16.7168, 0.55", "118.365, 6.78984, -17.1362, 0.83", "120.924, 5.69656, -17.9711, 0.28", "122.207, 5.19869, -18.2941, 0.28", "123.435, 4.6421, -18.6838, 0.28", "124.768, 4.0788, -19.107, 0.28", "126.904, 3.22514, -19.826, 0.28", "127.766, 2.88974, -20.0869, 0.55", "129.836, 2.08528, -20.4954, 0.55", "133.563, 0.577043, -21.0381, 0.55", "134.592, 0.125661, -21.1441, 0.55", "135.508, -0.313712, -21.2009, 0.83", "137.512, -1.223, -21.147, 0.55", "139.255, -2.01322, -21.0705, 0.55", "140.904, -2.75351, -20.9894, 0.55", "142.176, -3.34568, -20.9671, 0.55", "144.172, -4.42016, -21.0532, 0.55", "146.491, -5.89, -21.3194, 0.55", "150.029, -8.57889, -22.0585, 0.55", "151.926, -10.353, -22.6383, 0.55", "153.525, -12.1962, -23.2728, 0.28", "153.985, -12.8635, -23.5091, 0.55", "154.949, -14.7007, -24.1406, 0.28", "155.713, -16.733, -24.7955, 0.55", "156.353, -19.2581, -25.4041, 0.55", "156.793, -20.9282, -25.7278, 0.28", "156.958, -21.5223, -25.8147, 0.55", "157.395, -23.0029, -26.012, 0.28", "158.006, -24.9383, -26.2259, 0.55", "159.651, -29.6312, -26.6374, 0.55", "160.52, -32.0054, -26.7993, 0.55", "161.332, -34.1848, -26.9298, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "76.5893, 20.0252, -3.23452, 0.55", "78.3583, 20.2934, -1.73852, 0.55", "78.9279, 20.3736, -1.29089, 0.55", "81.05, 20.5564, 0.292103, 0.55", "83.4197, 20.8129, 2.09119, 0.55", "86.4502, 21.1437, 4.48124, 0.55", "87.2878, 21.2354, 5.1355, 0.55", "88.7877, 21.3384, 6.29953, 0.55", "90.4394, 21.4836, 7.50736, 0.55", "92.3699, 21.6983, 8.81724, 0.55", "94.1904, 21.9279, 10.0559, 0.55", "95.1957, 22.0955, 10.6835, 0.55", "96.3783, 22.3269, 11.4151, 0.55", "97.846, 22.6534, 12.2895, 0.83", "100.269, 23.1551, 13.4666, 0.55", "101.874, 23.415, 14.1743, 0.83", "104.102, 23.6645, 15.089, 0.55", "104.785, 23.7024, 15.3634, 0.55", "106.899, 23.709, 16.1796, 0.55", "110.677, 23.4729, 17.5079, 0.55", "113.439, 23.1372, 18.4305, 0.55", "115.614, 22.7739, 19.222, 0.55", "117.819, 22.2928, 20.1172, 0.55", "118.281, 22.179, 20.309, 0.28", "119.217, 21.9093, 20.6991, 0.83", "123.055, 20.7466, 22.3295, 0.55", "125.744, 19.9307, 23.4158, 0.55", "127.95, 19.3249, 24.3597, 0.55", "129.267, 18.9603, 24.9371, 0.83", "130.305, 18.689, 25.3922, 0.28", "131.247, 18.4435, 25.7957, 0.55", "138.633, 18.4958, 29.8715, 0.55", "146.48, 17.094, 32.6302, 0.55", "154.334, 16.7488, 35.6887, 0.55", "161.135, 15.4645, 40.51, 0.55", "167.334, 13.1316, 45.7343, 0.55", "174.22, 9.33111, 48.7829, 0.55", "181.017, 4.6321, 50.4796, 0.55", "188.681, 1.29653, 51.6158, 0.55", "196.212, -2.10377, 53.3124, 0.55", "204.166, -4.67904, 54.4315, 0.55", "212.044, -6.78014, 56.5933, 0.55", "219.275, -10.2096, 59.259, 0.55", "226.763, -12.1118, 62.6453, 0.55", "233.927, -12.6503, 67.0658, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.7731, -28.7818, 5.53204, 1.38", "-0.808252, -32.1047, 3.68848, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-2.7731, -28.7818, 5.53204, 0.55", "-4.10286, -30.1595, 6.12662, 0.55", "-5.6096, -31.9542, 6.78516, 0.55", "-6.74599, -33.1224, 7.3088, 0.55", "-7.76739, -34.0895, 7.61682, 0.55", "-10.0653, -36.0675, 8.1129, 0.55", "-11.6842, -37.3767, 8.42453, 0.55", "-13.1466, -38.5492, 8.65773, 0.55", "-16.8774, -41.3786, 9.25949, 0.55", "-21.327, -44.636, 10.011, 0.55", "-24.7875, -47.0905, 10.5448, 0.55", "-27.0158, -48.7087, 10.8599, 0.55", "-29.5829, -50.6653, 11.2276, 0.55", "-32.8742, -53.5269, 11.7282, 0.55", "-34.8395, -55.6097, 12.0532, 0.55", "-37.2491, -58.6643, 12.6173, 0.55", "-39.2054, -61.5697, 13.1261, 0.55", "-41.2714, -65.2492, 13.6666, 0.55", "-43.3133, -69.6242, 14.2379, 0.55", "-44.5293, -73.0176, 14.599, 0.55", "-44.9781, -74.7282, 14.8295, 0.55", "-45.7144, -78.7919, 15.4647, 0.55", "-46.2981, -82.6088, 16.1197, 0.55", "-46.5827, -86.4956, 16.9504, 0.55", "-46.7136, -88.7293, 17.5465, 0.55", "-46.9705, -95.6551, 19.5988, 0.55", "-46.9885, -96.1651, 19.7594, 0.55", "-47.0136, -99.3004, 20.7858, 0.55", "-47.2323, -104.881, 22.8523, 0.55", "-47.3633, -106.739, 23.4489, 0.55", "-47.8493, -109.608, 23.9652, 0.55", "-48.1128, -110.663, 23.9228, 0.55", "-49.1601, -114.218, 23.0917, 0.55", "-49.9388, -116.51, 22.0471, 0.55", "-51.4215, -120.131, 19.6495, 0.55", "-53.2249, -124.565, 16.3137, 0.28", "-53.722, -125.655, 15.3427, 0.55", "-54.5372, -127.299, 13.7311, 0.28", "-54.6682, -127.546, 13.4768, 0.55", "-55.3403, -128.903, 12.1984, 0.28", "-55.5493, -129.366, 11.8792, 0.55", "-56.4744, -131.791, 10.682, 0.28", "-56.8139, -132.612, 10.2989, 0.55", "-57.762, -134.992, 9.33145, 0.28", "-58.0561, -135.742, 9.02795, 0.55", "-59.0715, -138.329, 8.0298, 0.28", "-59.5355, -139.519, 7.5621, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.1869, -67.8548, 52.6721, 0.55", "-16.1233, -74.8443, 58.7185, 0.55", "-21.1257, -81.0362, 64.8458, 0.55", "-25.7452, -87.8641, 70.5858, 0.55", "-30.5074, -94.7414, 76.1476, 0.55", "-34.0508, -102.663, 81.207, 0.55", "-37.5967, -110.253, 86.7505, 0.55", "-39.6165, -119.323, 90.5647, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.1869, -67.8548, 52.6721, 0.55", "-12.1483, -76.8752, 62.0641, 0.55", "-10.9482, -87.2483, 69.8448, 0.55", "-11.7327, -98.0371, 77.0949, 0.55", "-12.8557, -109.569, 83.0378, 0.55", "-13.5303, -120.97, 89.2943, 0.55", "-14.3735, -131.889, 96.3404, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-42.3003, 34.6732, -19.2116, 0.83", "-41.9107, 36.6241, -21.3568, 0.83", "-41.1009, 41.3371, -26.1572, 0.55", "-40.7516, 43.3743, -28.054, 0.83", "-40.3719, 45.558, -29.9304, 0.55", "-39.9871, 47.8126, -31.535, 0.55", "-39.787, 48.9493, -32.1926, 0.28", "-39.7046, 49.705, -32.4365, 0.55", "-39.3601, 52.245, -32.7081, 0.28", "-39.1866, 53.3342, -32.7696, 0.55", "-38.6309, 57.1219, -32.8299, 0.28", "-38.2682, 60.1219, -32.7766, 0.55", "-37.9246, 64.7989, -32.5483, 0.28", "-37.7658, 68.9042, -32.2685, 0.28", "-37.8089, 71.196, -32.0671, 0.55", "-38.0257, 73.9041, -31.8265, 0.28", "-38.2138, 75.1919, -31.6933, 0.55", "-38.8206, 78.2083, -31.5172, 0.28", "-39.3583, 80.2084, -31.5057, 0.28", "-39.9281, 82.169, -31.5551, 0.28", "-40.1892, 83.2072, -31.5854, 0.55", "-41.0191, 87.4203, -31.8086, 0.28", "-41.8357, 92.4197, -32.1658, 0.55", "-42.0924, 94.1479, -32.296, 0.55", "-42.3777, 95.8794, -32.3889, 0.55", "-43.1776, 99.5437, -32.6465, 0.55", "-43.8574, 101.937, -32.868, 0.28", "-44.2202, 102.836, -32.9641, 0.55", "-45.3765, 105.256, -33.1715, 0.28", "-46.7142, 107.823, -33.4974, 0.55", "-48.9881, 111.484, -34.1146, 0.28", "-50.1078, 112.998, -34.4238, 0.28", "-51.9449, 115.077, -35.0758, 0.55", "-54.0105, 117.229, -35.8772, 0.28", "-54.3885, 117.562, -36.0211, 0.55", "-55.7548, 118.611, -36.5278, 0.28", "-60.4731, 121.944, -38.1791, 0.55", "-67.048, 125.99, -40.7081, 0.28", "-68.2647, 126.659, -41.246, 0.55", "-71.608, 128.364, -42.7759, 0.28", "-73.0124, 129.06, -43.4557, 0.28", "-74.2342, 129.632, -44.1041, 0.55", "-77.8203, 130.872, -46.2655, 0.28", "-80.3566, 131.493, -47.6853, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-42.3003, 34.6732, -19.2116, 0.55", "-42.6043, 36.3291, -19.3603, 0.55", "-42.8121, 37.3011, -19.3575, 0.28", "-43.1067, 37.9801, -19.1899, 0.55", "-43.7833, 39.5393, -18.8049, 0.28", "-44.2585, 40.6344, -18.5345, 0.55", "-45.1345, 42.6534, -18.036, 0.28", "-45.7242, 43.7199, -17.5789, 0.55", "-47.9557, 46.1671, -15.5785, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-144.551, -52.9321, -51.1078, 0.55", "-151.993, -61.3901, -56.7339, 0.55", "-157.442, -70.9139, -62.9128, 0.55", "-161.384, -79.4599, -71.2792, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-144.551, -52.9321, -51.1078, 0.55", "-150.42, -57.2565, -57.8746, 0.55", "-155.22, -61.2874, -65.5981, 0.55", "-159.61, -65.3927, -73.5234, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-159.744, 10.2571, 58.3588, 0.55", "-168.595, 10.0788, 64.1066, 0.55", "-177.888, 11.3156, 68.9547, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-159.744, 10.2571, 58.3588, 0.55", "-170.735, 8.92458, 63.0045, 0.55", "-181.981, 9.50297, 67.1707, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "70.7916, -33.9779, -103.939, 0.28", "76.7921, -36.1687, -117.041, 0.28", "77.3905, -36.4665, -118.228, 0.55", "78.4006, -36.9693, -120.233, 0.28", "79.2511, -37.3927, -121.921, 0.28", "80.3769, -37.9531, -124.155, 0.55", "81.8614, -38.692, -127.101, 0.55", "83.948, -40.5052, -128.952, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "70.7916, -33.9779, -103.939, 0.55", "71.2284, -34.6331, -105.792, 0.55", "71.3245, -34.8782, -106.617, 0.28", "71.4457, -35.262, -108.048, 0.55", "71.7125, -36.1074, -111.202, 0.28", "71.8974, -36.6933, -113.388, 0.55", "72.2107, -37.686, -117.091, 0.28", "72.5719, -38.727, -121.833, 0.28", "72.6876, -39.1605, -124.038, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "161.332, -34.1848, -26.9298, 0.28", "162.352, -36.1423, -26.8425, 0.28", "163.617, -38.7603, -26.5332, 0.28", "164.408, -40.469, -26.271, 0.55", "164.897, -41.4271, -26.0817, 0.28", "165.156, -41.9434, -25.9755, 0.28", "166.441, -44.486, -25.4864, 0.55", "166.738, -45.0662, -25.3106, 0.28", "167.411, -46.6013, -24.7608, 0.55", "167.984, -47.9246, -24.3321, 0.28", "168.497, -49.0024, -24.0, 0.55", "169.097, -50.2757, -23.6746, 0.55", "170.063, -52.2543, -23.385, 0.55", "170.295, -52.736, -23.3302, 0.55", "171.116, -54.5257, -23.1462, 0.28", "171.428, -55.2507, -23.0899, 0.55", "171.878, -56.1821, -23.0188, 0.28", "172.514, -57.493, -22.974, 0.55", "173.596, -59.5131, -23.1802, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "161.332, -34.1848, -26.9298, 0.55", "159.099, -33.8031, -26.992, 0.55", "157.287, -33.4931, -27.0424, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.808252, -32.1047, 3.68848, 0.83", "-0.718272, -32.3651, 3.63605, 0.83", "0.43424, -34.7, 3.22709, 0.83", "1.41293, -36.7407, 2.74113, 0.55", "2.19371, -38.3687, 2.35343, 0.55", "3.85329, -41.8292, 1.52938, 0.83", "5.86626, -46.0265, 0.529857, 0.55", "6.98427, -48.2292, 0.0341385, 0.83", "9.04073, -51.7577, -0.667835, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-0.808252, -32.1047, 3.68848, 0.55", "-3.47313, -32.7814, 2.05304, 0.55", "-6.33354, -33.5078, 0.297587, 0.55", "-9.71029, -34.3652, -1.77474, 0.55", "-13.8108, -35.4065, -4.29121, 0.55", "-16.1377, -35.9973, -5.71922, 0.55", "-16.6051, -36.116, -6.00609, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.3735, -131.889, 96.3404, 0.55", "-14.4286, -141.049, 103.361, 0.55", "-12.6001, -150.541, 109.668, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.3735, -131.889, 96.3404, 0.55", "-15.1743, -141.151, 101.721, 0.55", "-16.4616, -150.18, 107.397, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-47.9557, 46.1671, -15.5785, 0.28", "-49.9867, 47.1493, -13.958, 0.28", "-50.7724, 47.4965, -13.2681, 0.55", "-53.0377, 48.4913, -11.2241, 0.28", "-54.1393, 49.0161, -10.3074, 0.55", "-57.1187, 50.4647, -7.92165, 0.28", "-60.147, 51.9369, -5.4968, 0.55", "-65.136, 54.1416, -1.50999, 0.28", "-66.1994, 54.6179, -0.658034, 0.55", "-68.5387, 55.809, 1.18246, 0.28", "-69.4586, 56.3202, 1.91932, 0.55", "-78.8667, 58.987, 7.26902, 0.55", "-88.5672, 63.4901, 10.4103, 0.55", "-97.5589, 67.935, 15.2718, 0.55", "-105.3, 73.849, 20.6876, 0.55", "-113.903, 79.4849, 24.9867, 0.55", "-123.397, 83.1133, 29.5616, 0.55", "-132.467, 85.515, 35.5799, 0.55", "-140.759, 86.4959, 42.9637, 0.55", "-149.078, 88.1828, 50.1885, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-47.9557, 46.1671, -15.5785, 0.55", "-51.5605, 44.9584, -13.5511, 0.55", "-53.4324, 44.2633, -12.4954, 0.28", "-54.8253, 43.746, -11.7097, 0.55", "-55.9863, 43.3149, -11.0549, 0.28", "-56.7996, 43.0129, -10.5962, 0.55", "-59.0419, 42.1803, -9.33149, 0.28", "-60.5485, 41.4729, -8.67883, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-161.384, -79.4599, -71.2792, 0.55", "-165.647, -86.6568, -72.4453, 0.55", "-169.975, -93.9058, -72.6568, 0.55", "-173.383, -101.486, -74.1575, 0.55", "-177.816, -108.645, -74.8016, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-161.384, -79.4599, -71.2792, 0.55", "-165.602, -83.9073, -80.4307, 0.55", "-169.013, -86.9369, -90.4561, 0.55", "-173.61, -91.1499, -99.5361, 0.55", "-180.275, -93.4682, -107.993, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-159.61, -65.3927, -73.5234, 0.55", "-163.876, -65.1168, -81.0021, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-159.61, -65.3927, -73.5234, 0.55", "-165.352, -74.4046, -74.3629, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "83.948, -40.5052, -128.952, 0.28", "86.7353, -41.9181, -131.14, 0.28", "88.03, -42.5744, -132.156, 0.55", "90.499, -43.826, -134.094, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "83.948, -40.5052, -128.952, 0.55", "83.2762, -40.8869, -130.772, 0.55", "81.9325, -41.6504, -134.413, 0.28", "81.4948, -41.8991, -135.598, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "72.6876, -39.1605, -124.038, 0.28", "73.0154, -40.5721, -127.392, 0.28", "73.1777, -41.2711, -129.053, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "72.6876, -39.1605, -124.038, 0.55", "70.8573, -39.5915, -123.545, 0.55", "65.7535, -40.7934, -122.171, 0.28", "64.541, -41.0789, -121.844, 0.55", "61.2243, -41.86, -120.951, 0.28", "59.0864, -42.3634, -120.375, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "9.04073, -51.7577, -0.667835, 0.83", "9.04035, -51.9715, -0.700364, 0.83", "9.09677, -54.7723, -1.0628, 0.83", "9.00117, -56.8604, -1.15648, 0.83", "8.8296, -58.8697, -1.00744, 0.83", "8.56517, -61.54, -0.58782, 0.83", "8.20945, -64.6121, 0.0290934, 0.83", "7.87581, -68.046, 0.888637, 0.83", "7.59485, -71.3838, 1.87278, 0.83", "6.96547, -75.4609, 3.06211, 0.83", "6.54677, -77.325, 3.53305, 0.83", "6.20203, -78.7252, 3.80195, 0.83", "5.46886, -81.4067, 4.27776, 0.83", "4.83064, -83.8108, 4.55754, 0.83", "3.58354, -88.9504, 4.51349, 0.83", "2.83167, -91.7588, 4.12034, 0.83", "2.08469, -94.3438, 3.57277, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "9.04073, -51.7577, -0.667835, 0.55", "7.69372, -54.4771, 0.0465625, 0.55", "6.74592, -56.4461, 0.720693, 0.55", "6.22186, -57.7059, 1.26266, 0.55", "5.56779, -59.6827, 2.26222, 0.55", "4.46958, -63.6016, 4.44803, 0.55", "3.74131, -66.5599, 6.4301, 0.55", "3.25847, -68.927, 8.26533, 0.55", "2.78023, -71.3097, 10.3074, 0.55", "2.40796, -73.2824, 12.1089, 0.28", "2.17379, -74.888, 13.8222, 0.55", "1.84339, -77.796, 17.3723, 0.55", "1.62078, -79.566, 19.7783, 0.55", "1.48113, -80.5568, 21.1206, 0.55", "1.2327, -81.721, 22.6658, 0.83", "0.371782, -85.1749, 27.0272, 0.28", "0.0753919, -86.3187, 28.4387, 0.55", "-0.422149, -88.3909, 30.8932, 0.28", "-0.556198, -89.0287, 31.6964, 0.55", "-0.798958, -90.5352, 33.5195, 0.28", "-0.956571, -91.3936, 34.4907, 0.55", "-1.94312, -94.1851, 36.9683, 0.55", "-1.5418, -101.829, 45.84, 0.55", "-0.420676, -109.137, 54.9306, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-16.6051, -36.116, -6.00609, 0.55", "-18.9957, -36.9378, -8.63279, 0.55", "-19.692, -37.1171, -9.38139, 0.55", "-21.4486, -37.5578, -11.1925, 0.55", "-25.2858, -38.3806, -15.0055, 0.28", "-25.858, -38.4844, -15.5381, 0.55", "-28.2703, -38.9701, -17.6563, 0.55", "-31.6075, -39.5913, -20.2383, 0.55", "-32.879, -39.7858, -21.2007, 0.28", "-33.9832, -39.8739, -21.9909, 0.28", "-35.8843, -39.9526, -23.094, 0.55", "-38.1741, -39.9562, -24.538, 0.28", "-40.2478, -39.7909, -25.9415, 0.55", "-41.8255, -39.5279, -27.0127, 0.55", "-42.8896, -39.2607, -27.7973, 0.55", "-45.9775, -38.3447, -30.2194, 0.55", "-49.1843, -37.1428, -32.7335, 0.55", "-50.4956, -36.5646, -33.7468, 0.28", "-51.7441, -36.0397, -34.7318, 0.55", "-54.3176, -35.144, -36.6796, 0.28", "-55.1902, -34.8672, -37.3224, 0.83", "-56.8254, -34.3143, -38.4085, 0.28", "-58.0367, -33.985, -39.0175, 0.55", "-59.8119, -33.5636, -39.8576, 0.28", "-60.5187, -33.3835, -40.1697, 0.55", "-61.8392, -33.0646, -40.6735, 0.55", "-63.7964, -32.3763, -41.3832, 0.55", "-65.0621, -31.8379, -41.7831, 0.28", "-66.0589, -31.2654, -42.0378, 0.55", "-67.2002, -30.4426, -42.3628, 0.28", "-67.3842, -30.2923, -42.4253, 0.55", "-69.0588, -28.9054, -43.3363, 0.28", "-70.2618, -27.891, -44.1476, 0.55", "-71.8115, -26.4686, -45.4837, 0.83", "-73.0725, -25.2854, -46.7568, 0.28", "-73.3969, -24.9874, -47.1237, 0.55", "-75.886, -22.7662, -50.0978, 0.28", "-76.3207, -22.3926, -50.6687, 0.55", "-77.5748, -21.2017, -52.4637, 0.28", "-77.8986, -20.8957, -52.9299, 0.55", "-78.7317, -20.091, -54.057, 0.28", "-79.3229, -19.5067, -54.8104, 0.55", "-80.6593, -18.1694, -56.247, 0.28", "-81.4713, -17.4369, -57.054, 0.55", "-83.2419, -15.985, -58.6489, 0.28", "-83.7779, -15.5841, -59.11, 0.55", "-84.6383, -15.0235, -59.7879, 0.28", "-85.3701, -14.5455, -60.3218, 0.55", "-86.9014, -13.5618, -61.3247, 0.28", "-87.3663, -13.2745, -61.6084, 0.55", "-90.8123, -11.0448, -63.5466, 0.28", "-92.0038, -10.1559, -64.1205, 0.55", "-94.1081, -8.43927, -65.0044, 0.28", "-95.0475, -7.61998, -65.3747, 0.55", "-97.2096, -5.74114, -66.0786, 0.28", "-98.0137, -5.0858, -66.2919, 0.55", "-100.995, -2.97988, -66.8481, 0.28", "-102.279, -2.26728, -67.0453, 0.55", "-104.189, -1.56003, -67.263, 0.55", "-105.382, -1.19594, -67.3578, 0.55", "-107.828, -0.493417, -67.3515, 0.28", "-110.237, 0.191597, -67.1873, 0.28", "-112.241, 0.776095, -66.9918, 0.55", "-114.627, 1.72868, -66.5054, 0.28", "-115.76, 2.36623, -66.1171, 0.55", "-118.314, 4.37116, -64.9565, 0.28", "-119.512, 5.7269, -64.0325, 0.55", "-120.215, 6.77117, -63.2378, 0.28", "-120.952, 7.96874, -62.0744, 0.55", "-121.825, 9.52967, -60.4534, 0.28", "-122.167, 10.0916, -59.8414, 0.55", "-124.1, 12.7097, -56.973, 0.28", "-124.766, 13.5537, -56.0108, 0.55", "-126.361, 15.4749, -53.6526, 0.28", "-127.232, 16.5035, -52.37, 0.55", "-127.95, 17.3472, -51.3175, 0.55", "-128.819, 18.3439, -50.0913, 0.28", "-129.306, 18.8492, -49.5594, 0.55", "-130.957, 20.607, -47.9193, 0.28", "-131.778, 21.6602, -47.054, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-16.6051, -36.116, -6.00609, 0.55", "-16.7266, -36.2935, -7.49652, 0.55", "-16.7825, -36.3162, -9.00117, 0.55", "-16.7399, -36.2306, -10.8789, 0.55", "-16.6238, -36.052, -12.4067, 0.55", "-15.0035, -33.9919, -22.3419, 0.55", "-14.6252, -33.291, -24.5946, 0.55", "-14.09, -32.0285, -27.9452, 0.55", "-13.7128, -31.0611, -30.3218, 0.55", "-13.2842, -30.0014, -32.6197, 0.28", "-12.4528, -28.2062, -36.0958, 0.55", "-10.9509, -25.4166, -41.1664, 0.28", "-10.9241, -25.2453, -41.6549, 0.55", "-11.6158, -24.6225, -44.8937, 0.28", "-12.4628, -24.2995, -46.9907, 0.55", "-13.613, -24.0977, -49.176, 0.55", "-15.7623, -23.9511, -53.0759, 0.55", "-19.9666, -23.7265, -60.7409, 0.55", "-22.706, -23.6456, -65.9374, 0.55", "-23.6056, -23.6406, -67.7554, 0.55", "-29.2224, -23.5332, -79.8369, 0.55", "-30.5988, -23.4669, -83.1696, 0.55", "-31.2307, -23.4443, -85.0968, 0.55", "-32.3265, -23.5457, -89.7171, 0.55", "-34.3728, -24.4151, -100.958, 0.55", "-34.8082, -24.7832, -104.009, 0.28", "-34.9327, -25.0806, -105.764, 0.55", "-35.0793, -25.628, -108.367, 0.28", "-35.0704, -25.9633, -109.439, 0.55", "-34.302, -27.4913, -112.508, 0.28", "-32.8229, -29.5451, -113.947, 0.55", "-31.9056, -30.9861, -114.731, 0.28", "-31.0013, -32.5567, -115.314, 0.55", "-30.1871, -34.2422, -115.733, 0.28", "-29.861, -35.099, -115.925, 0.55", "-29.0795, -37.3316, -116.283, 0.28", "-28.9415, -37.9873, -116.45, 0.55", "-28.2778, -41.7324, -117.572, 0.28", "-28.0515, -43.4563, -118.302, 0.55", "-27.6838, -47.1265, -120.281, 0.28", "-27.5841, -48.4743, -121.167, 0.55", "-27.2604, -52.8994, -124.402, 0.28", "-27.2014, -53.9729, -125.231, 0.55", "-27.1619, -57.3564, -127.906, 0.28", "-27.1575, -58.1487, -128.455, 0.55", "-27.1941, -60.2374, -129.852, 0.28", "-27.2716, -61.4429, -130.768, 0.55", "-27.3661, -62.6245, -131.772, 0.55", "-27.5435, -64.9833, -133.761, 0.28", "-27.6336, -66.4444, -135.214, 0.55", "-27.722, -70.1056, -139.971, 0.28", "-27.7433, -71.2932, -141.891, 0.55", "-27.7227, -72.0503, -143.212, 0.28", "-27.6661, -72.745, -144.55, 0.55", "-27.3795, -74.7028, -148.662, 0.28", "-27.1123, -76.227, -151.734, 0.55", "-26.4509, -79.1455, -156.751, 0.28", "-26.2346, -80.0547, -158.327, 0.55", "-25.6347, -81.7489, -161.209, 0.28", "-25.3811, -82.3112, -162.124, 0.55", "-24.7857, -83.2326, -163.437, 0.28", "-24.1805, -84.0217, -164.521, 0.55", "-22.2763, -86.0239, -167.218, 0.28", "-20.022, -88.1755, -170.273, 0.28", "-18.7753, -89.1909, -171.721, 0.28", "-17.5847, -90.1463, -173.272, 0.55", "-15.8298, -91.4137, -175.553, 0.28", "-15.0281, -91.961, -176.549, 0.83", "-12.9093, -93.4083, -178.992, 0.28", "-12.0468, -94.0609, -180.11, 0.55", "-8.48533, -97.1337, -185.228, 0.28", "-6.87607, -98.6857, -187.97, 0.28", "-5.80528, -99.8019, -190.072, 0.55", "-5.28755, -100.467, -191.402, 0.55", "-4.11401, -102.254, -195.124, 0.28", "-3.1371, -104.057, -198.689, 0.55", "-2.26465, -105.789, -201.931, 0.28", "-1.58373, -107.381, -204.96, 0.55", "-1.00632, -108.672, -207.456, 0.28", "-0.439052, -109.61, -209.439, 0.55", "1.12091, -111.648, -214.096, 0.28", "1.97852, -112.686, -216.393, 0.55", "3.35325, -114.264, -219.758, 0.28", "4.53815, -115.484, -222.472, 0.55", "7.35567, -118.064, -228.844, 0.28", "8.40449, -118.954, -231.569, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.6001, -150.541, 109.668, 0.55", "-11.8456, -158.597, 114.167, 0.55", "-9.37255, -167.021, 117.107, 0.55", "-7.91988, -175.299, 120.991, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.6001, -150.541, 109.668, 0.55", "-12.0624, -156.337, 114.757, 0.55", "-13.0905, -161.583, 120.344, 0.55", "-14.8138, -165.618, 126.711, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.4616, -150.18, 107.397, 0.55", "-16.3015, -157.775, 111.88, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.4616, -150.18, 107.397, 0.55", "-18.0524, -156.776, 111.963, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.08469, -94.3438, 3.57277, 0.83", "2.70308, -97.6165, 3.69096, 0.83", "3.42871, -100.386, 3.90514, 0.83", "4.14999, -103.139, 4.11804, 0.83", "4.83498, -105.754, 4.32023, 0.83", "5.89058, -109.783, 4.6318, 0.83", "6.93857, -113.784, 4.94113, 0.83", "7.97377, -116.451, 5.33706, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.08469, -94.3438, 3.57277, 0.55", "3.12682, -96.405, 2.90708, 0.55", "3.78868, -98.0081, 2.1709, 0.55", "4.17638, -99.1875, 1.55793, 0.55", "4.37338, -100.551, 0.800642, 0.83", "4.41767, -102.089, -0.164346, 0.55", "4.46099, -103.594, -1.10823, 0.83", "4.35422, -105.215, -2.21169, 0.55", "4.24582, -106.155, -2.92472, 0.83", "3.66596, -109.179, -5.36691, 0.55", "2.96806, -111.535, -7.30957, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.420676, -109.137, 54.9306, 0.55", "-0.95347, -115.762, 61.5712, 0.55", "-2.00099, -121.237, 69.1339, 0.55", "-3.01764, -125.748, 77.3122, 0.55", "-4.20969, -129.036, 86.0321, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.420676, -109.137, 54.9306, 0.55", "-0.329725, -115.663, 61.7285, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "7.97377, -116.451, 5.33706, 0.55", "8.29059, -118.434, 5.72572, 0.55", "8.78813, -120.972, 6.21262, 0.55", "9.24853, -123.369, 6.66297, 0.55", "9.54355, -125.07, 6.98054, 0.55", "10.0126, -128.103, 7.54142, 0.55", "11.2537, -136.64, 8.87745, 0.55", "11.6277, -139.545, 9.19638, 0.55", "11.8198, -141.593, 9.34753, 0.55", "11.9117, -143.933, 9.38222, 0.55", "11.8431, -145.737, 9.32604, 0.55", "11.6341, -149.966, 8.98619, 0.55", "11.3991, -153.166, 8.80898, 0.55", "11.3284, -155.273, 8.69112, 0.55", "11.3418, -160.737, 8.58388, 0.55", "11.4577, -164.409, 8.63619, 0.55", "11.8215, -169.149, 8.86151, 0.55", "12.5902, -174.537, 9.3362, 0.55", "13.3752, -178.152, 9.67754, 0.55", "13.915, -180.294, 9.87794, 0.55", "14.3848, -182.265, 10.0862, 0.55", "14.9194, -184.763, 10.2421, 0.55", "15.858, -190.777, 10.4065, 0.55", "16.2075, -193.11, 10.3554, 0.55", "16.5437, -195.703, 10.3331, 0.55", "17.0128, -199.593, 10.3104, 0.55", "17.3051, -202.571, 10.4154, 0.55", "17.4494, -205.384, 10.6139, 0.55", "17.5097, -208.055, 10.8936, 0.55", "17.5681, -210.658, 11.2251, 0.55", "17.603, -212.512, 11.4404, 0.55", "17.5931, -215.545, 11.7089, 0.55", "17.3376, -219.179, 11.886, 0.55", "17.1427, -220.947, 11.8488, 0.55", "16.8934, -222.501, 11.725, 0.55", "16.3793, -225.442, 11.2732, 0.55", "16.0017, -227.304, 10.9666, 0.55", "15.6191, -229.603, 10.6269, 0.55", "15.3843, -231.213, 10.4995, 0.55", "14.8486, -235.396, 10.3348, 0.55", "14.5671, -238.523, 10.4199, 0.55", "14.3795, -243.36, 10.8782, 0.55", "14.5267, -246.491, 11.3198, 0.55", "14.7455, -249.776, 11.8739, 0.28", "14.8531, -251.094, 12.1577, 0.28", "15.3245, -254.294, 13.0525, 0.28", "15.9198, -257.25, 14.057, 0.28", "17.2505, -261.195, 15.3818, 0.28", "19.3004, -270.157, 15.9876, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "7.97377, -116.451, 5.33706, 0.55", "9.75609, -117.328, 4.63877, 0.55", "13.5461, -119.45, 3.46957, 0.55", "16.8775, -121.48, 2.5973, 0.28", "20.5007, -123.76, 1.76198, 0.55", "22.838, -125.188, 1.51271, 0.28", "27.0674, -127.729, 1.38636, 0.55", "29.0464, -129.011, 1.74626, 0.28", "29.8151, -129.47, 1.96954, 0.28", "31.1608, -130.136, 2.35461, 0.55", "36.2966, -132.387, 3.52227, 0.28", "38.4584, -133.28, 3.9459, 0.55", "44.7376, -135.924, 4.64322, 0.28", "48.0667, -137.261, 4.81493, 0.28", "52.1184, -138.982, 4.83406, 0.55", "57.9299, -141.659, 4.43809, 0.28", "58.6809, -142.02, 4.31265, 0.55", "62.265, -143.795, 3.47593, 0.28", "62.5726, -143.961, 3.36868, 0.55", "65.2993, -145.81, 2.53727, 0.28", "66.6296, -146.793, 2.22525, 0.55", "77.6774, -154.18, -0.320322, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.20969, -129.036, 86.0321, 0.55", "-4.16506, -132.176, 94.2737, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.20969, -129.036, 86.0321, 0.55", "-6.48677, -133.889, 91.7205, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_BP_ff30c6d80e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.68738, 7.87967, 2.75644, 0.83 ) }
    dend_43 { pt3dadd( -4.97173, 9.65022, 3.10095, 1.11 ) }
    dend_43 { pt3dadd( -6.31859, 10.6935, 3.28016, 0.83 ) }
    dend_43 { pt3dadd( -7.62712, 11.6982, 3.44073, 0.83 ) }
    dend_43 { pt3dadd( -8.40187, 12.2712, 3.52872, 1.11 ) }
    dend_43 { pt3dadd( -10.8281, 14.0615, 3.81072, 1.11 ) }
    dend_43 { pt3dadd( -15.1675, 17.1266, 4.30921, 0.83 ) }
    dend_43 { pt3dadd( -16.7308, 18.1887, 4.47382, 0.83 ) }
    dend_43 { pt3dadd( -17.9688, 19.0049, 4.57607, 0.83 ) }
    dend_43 { pt3dadd( -19.1761, 19.8137, 4.66458, 0.83 ) }
    dend_43 { pt3dadd( -20.1588, 20.4803, 4.71233, 0.55 ) }
    dend_43 { pt3dadd( -20.8974, 20.9317, 4.7608, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.94741, 6.38925, -6.32585, 0.55 ) }
    dend_28 { pt3dadd( 8.11974, 7.07549, -7.03429, 0.55 ) }
    dend_28 { pt3dadd( 9.96053, 7.24872, -7.9717, 0.83 ) }
    dend_28 { pt3dadd( 12.8739, 7.43308, -9.71302, 0.55 ) }
    dend_28 { pt3dadd( 14.2803, 7.52207, -10.5536, 1.38 ) }
    dend_28 { pt3dadd( 17.7381, 7.74088, -12.6203, 0.55 ) }
    dend_28 { pt3dadd( 19.2109, 7.66678, -13.6064, 0.83 ) }
    dend_28 { pt3dadd( 26.8292, 6.30792, -19.1472, 0.55 ) }
    dend_28 { pt3dadd( 27.5662, 6.12519, -19.7568, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.680992, -10.2109, 3.13352, 1.11 ) }
    dend_1 { pt3dadd( -0.723377, -13.9504, 4.47414, 1.11 ) }
    dend_1 { pt3dadd( -0.740637, -15.4734, 5.02013, 0.83 ) }
    dend_1 { pt3dadd( -0.763569, -17.4968, 5.7455, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.88532, 9.89664, -1.37542, 1.11 ) }
    dend_0 { pt3dadd( 0.974923, 11.9219, -1.35879, 1.11 ) }
    dend_0 { pt3dadd( 1.11077, 15.2263, -1.21109, 1.38 ) }
    dend_0 { pt3dadd( 1.12148, 15.4103, -1.19952, 1.38 ) }
    dend_0 { pt3dadd( 1.39089, 17.6868, -1.03154, 0.83 ) }
    dend_0 { pt3dadd( 1.77175, 20.0937, -0.723939, 0.83 ) }
    dend_0 { pt3dadd( 2.42972, 22.8105, -0.0446381, 0.83 ) }
    dend_0 { pt3dadd( 2.80527, 23.8405, 0.341604, 0.83 ) }
    dend_0 { pt3dadd( 3.17649, 24.586, 0.697911, 1.11 ) }
    dend_0 { pt3dadd( 4.26366, 26.4014, 1.61873, 0.55 ) }
    dend_0 { pt3dadd( 5.52812, 28.2958, 2.7187, 0.83 ) }
    dend_0 { pt3dadd( 7.18667, 30.2431, 3.96884, 0.55 ) }
    dend_0 { pt3dadd( 8.03333, 31.0514, 4.53599, 0.83 ) }
    dend_0 { pt3dadd( 9.21623, 32.146, 5.42044, 0.55 ) }
    dend_0 { pt3dadd( 10.6808, 33.5383, 6.61771, 0.55 ) }
    dend_0 { pt3dadd( 12.7254, 35.6342, 8.44657, 0.55 ) }
    dend_0 { pt3dadd( 14.9785, 38.0301, 10.4659, 0.55 ) }
    dend_0 { pt3dadd( 16.3978, 39.5851, 11.9742, 0.55 ) }
    dend_0 { pt3dadd( 18.135, 41.5512, 14.1033, 0.55 ) }
    dend_0 { pt3dadd( 18.4957, 41.9455, 14.5863, 0.83 ) }
    dend_0 { pt3dadd( 19.4475, 42.9873, 15.9488, 0.55 ) }
    dend_0 { pt3dadd( 20.2491, 43.7993, 17.0186, 0.83 ) }
    dend_0 { pt3dadd( 22.0945, 46.019, 19.5551, 0.55 ) }
    dend_0 { pt3dadd( 22.7912, 46.8297, 20.2963, 0.83 ) }
    dend_0 { pt3dadd( 23.4448, 47.4267, 20.7993, 0.55 ) }
    dend_0 { pt3dadd( 24.0942, 47.9404, 21.1855, 0.83 ) }
    dend_0 { pt3dadd( 25.5354, 48.8949, 21.8858, 0.83 ) }
    dend_0 { pt3dadd( 27.4426, 50.1945, 22.6387, 0.83 ) }
    dend_0 { pt3dadd( 28.6135, 51.054, 22.9718, 0.55 ) }
    dend_0 { pt3dadd( 29.5064, 51.7982, 23.2308, 0.55 ) }
    dend_0 { pt3dadd( 31.8472, 53.7208, 23.8741, 0.83 ) }
    dend_0 { pt3dadd( 33.3594, 54.9537, 24.2276, 0.55 ) }
    dend_0 { pt3dadd( 35.6555, 56.7596, 24.6694, 0.55 ) }
    dend_0 { pt3dadd( 37.7595, 58.2732, 24.9886, 0.55 ) }
    dend_0 { pt3dadd( 39.6415, 59.555, 25.2227, 0.55 ) }
    dend_0 { pt3dadd( 42.0199, 61.0564, 25.4092, 0.55 ) }
    dend_0 { pt3dadd( 43.4735, 61.7911, 25.4752, 0.55 ) }
    dend_0 { pt3dadd( 44.4653, 62.2035, 25.4006, 0.55 ) }
    dend_0 { pt3dadd( 45.7826, 62.5101, 25.1893, 0.55 ) }
    dend_0 { pt3dadd( 47.7483, 62.6472, 24.7121, 0.55 ) }
    dend_0 { pt3dadd( 48.9738, 62.5769, 24.367, 0.55 ) }
    dend_0 { pt3dadd( 50.7646, 62.4255, 23.9887, 0.55 ) }
    dend_0 { pt3dadd( 54.176, 62.2457, 23.5739, 0.55 ) }
    dend_0 { pt3dadd( 56.853, 62.2283, 23.4395, 0.55 ) }
    dend_0 { pt3dadd( 59.6905, 62.3452, 23.467, 0.55 ) }
    dend_0 { pt3dadd( 61.51, 62.4824, 23.6287, 0.55 ) }
    dend_0 { pt3dadd( 66.2377, 63.2672, 24.3611, 0.55 ) }
    dend_0 { pt3dadd( 69.0351, 63.9471, 25.0058, 0.55 ) }
    dend_0 { pt3dadd( 71.1329, 64.5945, 25.6864, 0.55 ) }
    dend_0 { pt3dadd( 72.4078, 65.2, 26.1498, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 73.8857, 66.1017, 26.6799, 0.55 ) }
    dend_0 { pt3dadd( 76.3872, 67.8809, 27.3533, 0.55 ) }
    dend_0 { pt3dadd( 76.961, 68.3094, 27.428, 0.55 ) }
    dend_0 { pt3dadd( 78.607, 69.455, 27.5333, 0.55 ) }
    dend_0 { pt3dadd( 80.1197, 70.676, 27.6245, 0.83 ) }
    dend_0 { pt3dadd( 80.9452, 71.3533, 27.6612, 0.55 ) }
    dend_0 { pt3dadd( 82.1815, 72.5164, 27.6669, 0.83 ) }
    dend_0 { pt3dadd( 88.6924, 78.7272, 29.4202, 0.83 ) }
    dend_0 { pt3dadd( 94.3548, 85.8559, 30.4962, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -20.8974, 20.9317, 4.7608, 0.55 ) }
    dend_55 { pt3dadd( -22.6733, 21.8279, 3.88181, 0.55 ) }
    dend_55 { pt3dadd( -24.6044, 22.8025, 2.926, 0.55 ) }
    dend_55 { pt3dadd( -26.9348, 23.9787, 1.77255, 0.55 ) }
    dend_55 { pt3dadd( -28.859, 24.9498, 0.820107, 0.83 ) }
    dend_55 { pt3dadd( -30.4716, 25.7636, 0.0219647, 0.55 ) }
    dend_55 { pt3dadd( -33.4646, 27.2742, -1.45951, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -20.8974, 20.9317, 4.7608, 0.55 ) }
    dend_44 { pt3dadd( -23.2943, 21.4118, 4.40575, 0.55 ) }
    dend_44 { pt3dadd( -25.8547, 21.83, 4.2798, 0.55 ) }
    dend_44 { pt3dadd( -28.7606, 22.2959, 4.2078, 0.55 ) }
    dend_44 { pt3dadd( -32.9838, 22.906, 4.48865, 0.55 ) }
    dend_44 { pt3dadd( -36.5275, 23.3016, 4.97002, 0.55 ) }
    dend_44 { pt3dadd( -40.2505, 23.6516, 5.63062, 0.55 ) }
    dend_44 { pt3dadd( -43.8648, 23.7284, 6.64458, 0.55 ) }
    dend_44 { pt3dadd( -46.9888, 23.4791, 7.80274, 0.55 ) }
    dend_44 { pt3dadd( -50.8983, 22.8784, 9.64686, 0.55 ) }
    dend_44 { pt3dadd( -52.6073, 22.4828, 10.6771, 0.55 ) }
    dend_44 { pt3dadd( -54.4564, 22.0324, 11.8673, 0.55 ) }
    dend_44 { pt3dadd( -57.7141, 21.0029, 13.8098, 0.55 ) }
    dend_44 { pt3dadd( -59.4381, 20.4734, 14.5754, 0.55 ) }
    dend_44 { pt3dadd( -61.2437, 19.8647, 15.3644, 0.55 ) }
    dend_44 { pt3dadd( -63.3832, 19.1782, 16.0887, 0.55 ) }
    dend_44 { pt3dadd( -65.7056, 18.4831, 16.815, 0.55 ) }
    dend_44 { pt3dadd( -69.0176, 17.4865, 17.7795, 0.55 ) }
    dend_44 { pt3dadd( -73.4251, 16.468, 18.6872, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 27.5662, 6.12519, -19.7568, 0.55 ) }
    dend_34 { pt3dadd( 31.9201, 7.21128, -20.6771, 0.55 ) }
    dend_34 { pt3dadd( 34.4246, 7.70662, -21.5676, 0.55 ) }
    dend_34 { pt3dadd( 36.8942, 8.08595, -22.4879, 0.55 ) }
    dend_34 { pt3dadd( 38.5803, 8.27751, -23.1195, 0.55 ) }
    dend_34 { pt3dadd( 41.0435, 8.49919, -24.0264, 0.55 ) }
    dend_34 { pt3dadd( 46.1506, 8.86741, -26.0728, 0.55 ) }
    dend_34 { pt3dadd( 51.9413, 9.26665, -28.7843, 0.55 ) }
    dend_34 { pt3dadd( 54.7447, 9.29311, -30.3034, 0.55 ) }
    dend_34 { pt3dadd( 56.2448, 9.27473, -31.2181, 0.55 ) }
    dend_34 { pt3dadd( 57.8894, 9.26584, -32.288, 0.55 ) }
    dend_34 { pt3dadd( 60.8227, 9.16673, -34.1897, 0.55 ) }
    dend_34 { pt3dadd( 61.8865, 9.06925, -34.9192, 0.55 ) }
    dend_34 { pt3dadd( 66.3901, 8.78702, -38.3538, 0.55 ) }
    dend_34 { pt3dadd( 69.5775, 8.6502, -41.021, 0.55 ) }
    dend_34 { pt3dadd( 71.4129, 8.60997, -42.6059, 0.55 ) }
    dend_34 { pt3dadd( 73.2432, 8.55343, -44.1861, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 27.5662, 6.12519, -19.7568, 0.83 ) }
    dend_29 { pt3dadd( 29.99, 7.29239, -19.6823, 0.83 ) }
    dend_29 { pt3dadd( 31.374, 7.96701, -19.6995, 0.55 ) }
    dend_29 { pt3dadd( 33.412, 9.02578, -19.8822, 0.83 ) }
    dend_29 { pt3dadd( 34.7849, 9.77621, -20.0395, 0.55 ) }
    dend_29 { pt3dadd( 36.6838, 10.8548, -20.2234, 0.83 ) }
    dend_29 { pt3dadd( 38.9734, 12.182, -20.3594, 0.55 ) }
    dend_29 { pt3dadd( 40.118, 12.7641, -20.3946, 0.55 ) }
    dend_29 { pt3dadd( 42.721, 13.743, -20.3481, 0.83 ) }
    dend_29 { pt3dadd( 45.0622, 14.3195, -20.0513, 0.55 ) }
    dend_29 { pt3dadd( 46.3721, 14.6113, -19.7665, 0.83 ) }
    dend_29 { pt3dadd( 48.3461, 15.0619, -19.1344, 0.55 ) }
    dend_29 { pt3dadd( 51.1938, 15.7072, -17.872, 0.55 ) }
    dend_29 { pt3dadd( 55.1322, 16.3822, -15.9525, 0.55 ) }
    dend_29 { pt3dadd( 58.8794, 16.8615, -13.8914, 0.55 ) }
    dend_29 { pt3dadd( 61.846, 17.2036, -12.2115, 0.55 ) }
    dend_29 { pt3dadd( 66.7395, 17.7858, -9.41431, 0.55 ) }
    dend_29 { pt3dadd( 70.3314, 18.2992, -7.27806, 0.55 ) }
    dend_29 { pt3dadd( 72.5194, 18.7712, -5.88716, 0.55 ) }
    dend_29 { pt3dadd( 76.5893, 20.0252, -3.23452, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.763569, -17.4968, 5.7455, 0.83 ) }
    dend_11 { pt3dadd( -1.31714, -20.6055, 5.6867, 0.83 ) }
    dend_11 { pt3dadd( -1.85648, -23.6343, 5.62941, 0.83 ) }
    dend_11 { pt3dadd( -2.45865, -27.016, 5.56544, 0.83 ) }
    dend_11 { pt3dadd( -2.7731, -28.7818, 5.53204, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.763569, -17.4968, 5.7455, 0.55 ) }
    dend_2 { pt3dadd( -0.260901, -19.0063, 6.85541, 0.55 ) }
    dend_2 { pt3dadd( 0.161358, -20.8595, 8.28076, 0.55 ) }
    dend_2 { pt3dadd( 0.332489, -23.2981, 10.2164, 0.55 ) }
    dend_2 { pt3dadd( 0.330124, -24.2478, 10.9892, 0.83 ) }
    dend_2 { pt3dadd( 0.0783242, -26.6766, 13.2215, 0.55 ) }
    dend_2 { pt3dadd( -0.156758, -27.9336, 14.3899, 0.55 ) }
    dend_2 { pt3dadd( -0.674111, -30.3792, 16.7617, 0.83 ) }
    dend_2 { pt3dadd( -1.17242, -32.1977, 18.6299, 0.55 ) }
    dend_2 { pt3dadd( -1.71483, -33.7014, 20.137, 0.55 ) }
    dend_2 { pt3dadd( -2.80184, -36.551, 22.9348, 0.55 ) }
    dend_2 { pt3dadd( -3.66376, -38.8223, 25.1383, 0.55 ) }
    dend_2 { pt3dadd( -4.31998, -40.642, 26.9332, 0.55 ) }
    dend_2 { pt3dadd( -4.90567, -42.5714, 28.7866, 0.28 ) }
    dend_2 { pt3dadd( -5.07969, -43.3733, 29.5332, 0.55 ) }
    dend_2 { pt3dadd( -5.3558, -44.8537, 30.8313, 0.28 ) }
    dend_2 { pt3dadd( -5.44309, -47.157, 32.5237, 0.55 ) }
    dend_2 { pt3dadd( -7.61922, -54.8681, 38.4214, 0.55 ) }
    dend_2 { pt3dadd( -10.0589, -62.0, 44.9149, 0.55 ) }
    dend_2 { pt3dadd( -12.1869, -67.8548, 52.6721, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -33.4646, 27.2742, -1.45951, 0.55 ) }
    dend_61 { pt3dadd( -35.2565, 27.282, -0.695924, 0.55 ) }
    dend_61 { pt3dadd( -36.0166, 27.2331, -0.292105, 0.83 ) }
    dend_61 { pt3dadd( -36.9134, 27.1174, 0.285462, 0.55 ) }
    dend_61 { pt3dadd( -37.6045, 27.0198, 0.785621, 0.83 ) }
    dend_61 { pt3dadd( -39.4159, 26.8262, 2.09018, 0.55 ) }
    dend_61 { pt3dadd( -40.1025, 26.7627, 2.59073, 0.28 ) }
    dend_61 { pt3dadd( -41.255, 26.6551, 3.51687, 0.55 ) }
    dend_61 { pt3dadd( -42.8011, 26.5202, 4.75411, 0.55 ) }
    dend_61 { pt3dadd( -43.971, 26.4256, 5.64377, 0.55 ) }
    dend_61 { pt3dadd( -45.5301, 26.3058, 6.78591, 0.28 ) }
    dend_61 { pt3dadd( -45.9316, 26.2844, 7.03765, 0.55 ) }
    dend_61 { pt3dadd( -46.7605, 26.2537, 7.53056, 0.28 ) }
    dend_61 { pt3dadd( -47.3198, 26.2541, 7.81763, 0.55 ) }
    dend_61 { pt3dadd( -48.4537, 26.2615, 8.30877, 0.28 ) }
    dend_61 { pt3dadd( -49.1157, 26.2358, 8.55896, 0.55 ) }
    dend_61 { pt3dadd( -50.2821, 26.1074, 8.99753, 0.28 ) }
    dend_61 { pt3dadd( -51.0632, 26.0202, 9.26497, 0.55 ) }
    dend_61 { pt3dadd( -55.9763, 24.8172, 12.8766, 0.55 ) }
    dend_61 { pt3dadd( -60.5013, 22.997, 16.729, 0.55 ) }
    dend_61 { pt3dadd( -64.8447, 20.6081, 20.4783, 0.55 ) }
    dend_61 { pt3dadd( -69.1163, 17.5669, 23.815, 0.55 ) }
    dend_61 { pt3dadd( -72.7771, 14.6777, 27.9236, 0.55 ) }
    dend_61 { pt3dadd( -76.8763, 12.0435, 31.7819, 0.55 ) }
    dend_61 { pt3dadd( -81.0982, 10.3638, 36.0226, 0.55 ) }
    dend_61 { pt3dadd( -85.2777, 8.21728, 40.0912, 0.55 ) }
    dend_61 { pt3dadd( -89.3722, 6.44764, 44.4194, 0.55 ) }
    dend_61 { pt3dadd( -93.1982, 4.56422, 48.9408, 0.55 ) }
    dend_61 { pt3dadd( -96.4188, 1.97255, 53.5819, 0.55 ) }
    dend_61 { pt3dadd( -99.7242, -0.0753624, 58.4307, 0.55 ) }
    dend_61 { pt3dadd( -103.071, -2.6965, 62.9642, 0.55 ) }
    dend_61 { pt3dadd( -105.722, -5.60721, 67.7738, 0.55 ) }
    dend_61 { pt3dadd( -107.403, -8.16474, 73.1832, 0.55 ) }
    dend_61 { pt3dadd( -108.973, -11.767, 77.9984, 0.55 ) }
    dend_61 { pt3dadd( -109.665, -15.482, 82.9329, 0.55 ) }
    dend_61 { pt3dadd( -110.702, -18.9637, 87.9761, 0.55 ) }
    dend_61 { pt3dadd( -112.416, -22.0267, 93.1053, 0.55 ) }
    dend_61 { pt3dadd( -115.416, -24.1292, 98.1261, 0.55 ) }
    dend_61 { pt3dadd( -117.869, -26.9063, 103.116, 0.55 ) }
    dend_61 { pt3dadd( -119.253, -28.7466, 108.889, 0.55 ) }
    dend_61 { pt3dadd( -121.613, -30.1187, 114.472, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -33.4646, 27.2742, -1.45951, 0.55 ) }
    dend_56 { pt3dadd( -35.1522, 28.0293, -3.53129, 0.55 ) }
    dend_56 { pt3dadd( -36.4385, 28.8732, -5.82797, 0.55 ) }
    dend_56 { pt3dadd( -37.6371, 29.9222, -8.25449, 0.55 ) }
    dend_56 { pt3dadd( -38.3877, 30.579, -9.77395, 0.55 ) }
    dend_56 { pt3dadd( -39.7569, 31.7772, -12.5456, 0.83 ) }
    dend_56 { pt3dadd( -40.7586, 32.6538, -14.5734, 0.55 ) }
    dend_56 { pt3dadd( -41.8928, 33.8548, -17.5466, 0.83 ) }
    dend_56 { pt3dadd( -42.3003, 34.6732, -19.2116, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -73.4251, 16.468, 18.6872, 0.28 ) }
    dend_48 { pt3dadd( -74.8105, 14.3331, 17.5257, 0.28 ) }
    dend_48 { pt3dadd( -75.4621, 13.4408, 16.9359, 0.28 ) }
    dend_48 { pt3dadd( -76.3072, 12.1874, 16.0563, 0.55 ) }
    dend_48 { pt3dadd( -77.0062, 11.0797, 15.2979, 0.28 ) }
    dend_48 { pt3dadd( -78.0408, 9.38398, 14.1694, 0.55 ) }
    dend_48 { pt3dadd( -80.9329, 4.36652, 10.9581, 0.28 ) }
    dend_48 { pt3dadd( -81.865, 2.6414, 9.68215, 0.55 ) }
    dend_48 { pt3dadd( -83.2686, 0.00856762, 7.61751, 0.28 ) }
    dend_48 { pt3dadd( -84.0682, -1.54816, 6.30441, 0.55 ) }
    dend_48 { pt3dadd( -84.6178, -2.61341, 5.36945, 0.28 ) }
    dend_48 { pt3dadd( -85.2453, -3.83925, 4.30842, 0.55 ) }
    dend_48 { pt3dadd( -87.1534, -7.97277, 0.902128, 0.28 ) }
    dend_48 { pt3dadd( -87.7487, -9.20893, -0.181116, 0.55 ) }
    dend_48 { pt3dadd( -88.769, -11.0334, -2.07675, 0.28 ) }
    dend_48 { pt3dadd( -89.601, -12.1579, -3.43105, 0.28 ) }
    dend_48 { pt3dadd( -90.3498, -12.8862, -4.3897, 0.55 ) }
    dend_48 { pt3dadd( -92.9784, -14.9105, -7.05735, 0.28 ) }
    dend_48 { pt3dadd( -94.2051, -15.7239, -8.13045, 0.55 ) }
    dend_48 { pt3dadd( -97.1947, -17.5229, -10.7474, 0.28 ) }
    dend_48 { pt3dadd( -100.186, -19.0759, -13.1517, 0.28 ) }
    dend_48 { pt3dadd( -103.437, -20.5007, -15.5929, 0.28 ) }
    dend_48 { pt3dadd( -104.93, -21.0156, -16.5476, 0.55 ) }
    dend_48 { pt3dadd( -112.214, -28.0696, -23.6825, 0.55 ) }
    dend_48 { pt3dadd( -120.531, -35.7545, -28.7316, 0.55 ) }
    dend_48 { pt3dadd( -128.496, -42.5321, -35.39, 0.55 ) }
    dend_48 { pt3dadd( -136.538, -48.295, -42.8615, 0.55 ) }
    dend_48 { pt3dadd( -144.551, -52.9321, -51.1078, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -73.4251, 16.468, 18.6872, 0.55 ) }
    dend_45 { pt3dadd( -74.3006, 16.3904, 18.7986, 0.55 ) }
    dend_45 { pt3dadd( -76.7735, 16.1896, 19.4331, 0.55 ) }
    dend_45 { pt3dadd( -77.7032, 16.0926, 19.7222, 0.55 ) }
    dend_45 { pt3dadd( -79.889, 15.7998, 20.4388, 0.55 ) }
    dend_45 { pt3dadd( -83.2493, 15.3762, 21.3766, 0.55 ) }
    dend_45 { pt3dadd( -84.9957, 15.2084, 21.8304, 0.28 ) }
    dend_45 { pt3dadd( -87.7124, 14.8855, 22.4862, 0.55 ) }
    dend_45 { pt3dadd( -89.7288, 14.6009, 22.9026, 0.55 ) }
    dend_45 { pt3dadd( -90.5802, 14.4752, 23.0805, 0.28 ) }
    dend_45 { pt3dadd( -95.6874, 13.718, 24.1411, 0.55 ) }
    dend_45 { pt3dadd( -98.072, 13.2472, 24.496, 0.28 ) }
    dend_45 { pt3dadd( -101.286, 12.5911, 24.7862, 0.28 ) }
    dend_45 { pt3dadd( -104.055, 12.0585, 24.8718, 0.55 ) }
    dend_45 { pt3dadd( -114.902, 11.6772, 27.486, 0.55 ) }
    dend_45 { pt3dadd( -125.386, 11.0744, 31.2734, 0.55 ) }
    dend_45 { pt3dadd( -135.265, 9.39633, 36.193, 0.55 ) }
    dend_45 { pt3dadd( -144.877, 9.6311, 41.8656, 0.55 ) }
    dend_45 { pt3dadd( -153.108, 9.59582, 49.4064, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -159.744, 10.2571, 58.3588, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 73.2432, 8.55343, -44.1861, 0.55 ) }
    dend_42 { pt3dadd( 76.5072, 9.7317, -46.5173, 0.55 ) }
    dend_42 { pt3dadd( 77.528, 10.0878, -47.3287, 0.55 ) }
    dend_42 { pt3dadd( 78.7962, 10.4904, -48.3453, 0.55 ) }
    dend_42 { pt3dadd( 81.0911, 11.2527, -50.3215, 0.55 ) }
    dend_42 { pt3dadd( 83.463, 11.9812, -52.4744, 0.55 ) }
    dend_42 { pt3dadd( 84.6014, 12.2416, -53.5335, 0.83 ) }
    dend_42 { pt3dadd( 85.5221, 12.4228, -54.4966, 0.55 ) }
    dend_42 { pt3dadd( 86.1961, 12.5312, -55.306, 0.83 ) }
    dend_42 { pt3dadd( 87.7625, 12.6166, -57.4567, 0.55 ) }
    dend_42 { pt3dadd( 89.021, 12.5688, -59.2855, 0.55 ) }
    dend_42 { pt3dadd( 90.467, 12.4732, -61.3173, 0.55 ) }
    dend_42 { pt3dadd( 92.0887, 12.4288, -63.5952, 0.55 ) }
    dend_42 { pt3dadd( 93.1693, 12.3839, -65.1621, 0.55 ) }
    dend_42 { pt3dadd( 94.3868, 12.3458, -66.9726, 0.55 ) }
    dend_42 { pt3dadd( 95.4478, 12.383, -68.5997, 0.55 ) }
    dend_42 { pt3dadd( 96.13, 12.5069, -69.6917, 0.55 ) }
    dend_42 { pt3dadd( 96.9729, 12.9114, -71.8213, 0.55 ) }
    dend_42 { pt3dadd( 97.4166, 13.1432, -73.1605, 0.55 ) }
    dend_42 { pt3dadd( 97.7545, 13.4334, -74.9437, 0.55 ) }
    dend_42 { pt3dadd( 98.1672, 13.8729, -77.9759, 0.55 ) }
    dend_42 { pt3dadd( 98.2418, 13.9519, -78.6674, 0.28 ) }
    dend_42 { pt3dadd( 99.2201, 14.8091, -87.1143, 0.28 ) }
    dend_42 { pt3dadd( 99.5804, 15.0605, -89.595, 0.83 ) }
    dend_42 { pt3dadd( 101.03, 15.7691, -98.4667, 0.83 ) }
    dend_42 { pt3dadd( 101.769, 15.9324, -102.654, 0.83 ) }
    dend_42 { pt3dadd( 102.134, 15.9216, -104.379, 0.55 ) }
    dend_42 { pt3dadd( 102.577, 15.8849, -106.073, 0.55 ) }
    dend_42 { pt3dadd( 103.919, 15.6351, -109.287, 0.55 ) }
    dend_42 { pt3dadd( 105.405, 15.3216, -112.151, 0.28 ) }
    dend_42 { pt3dadd( 105.889, 15.0977, -112.403, 0.55 ) }
    dend_42 { pt3dadd( 106.978, 14.5224, -112.528, 0.28 ) }
    dend_42 { pt3dadd( 107.665, 14.1746, -112.487, 0.55 ) }
    dend_42 { pt3dadd( 108.38, 13.7784, -112.386, 0.28 ) }
    dend_42 { pt3dadd( 109.25, 13.3291, -112.209, 0.55 ) }
    dend_42 { pt3dadd( 110.567, 12.7783, -112.056, 0.28 ) }
    dend_42 { pt3dadd( 111.616, 12.3184, -111.979, 0.55 ) }
    dend_42 { pt3dadd( 112.795, 11.9202, -111.956, 0.28 ) }
    dend_42 { pt3dadd( 114.397, 11.4389, -112.062, 0.55 ) }
    dend_42 { pt3dadd( 116.203, 10.9805, -112.269, 0.55 ) }
    dend_42 { pt3dadd( 117.794, 10.6357, -112.547, 0.28 ) }
    dend_42 { pt3dadd( 120.0, 10.2243, -113.042, 0.55 ) }
    dend_42 { pt3dadd( 123.835, 9.76783, -114.25, 0.55 ) }
    dend_42 { pt3dadd( 125.548, 9.72648, -114.948, 0.55 ) }
    dend_42 { pt3dadd( 126.29, 9.76685, -115.311, 0.83 ) }
    dend_42 { pt3dadd( 127.706, 9.9016, -116.123, 0.55 ) }
    dend_42 { pt3dadd( 128.697, 10.0548, -116.73, 0.83 ) }
    dend_42 { pt3dadd( 131.38, 10.5423, -118.366, 0.55 ) }
    dend_42 { pt3dadd( 132.991, 10.7533, -119.444, 0.28 ) }
    dend_42 { pt3dadd( 133.66, 10.7746, -119.842, 0.55 ) }
    dend_42 { pt3dadd( 135.455, 10.5974, -120.798, 0.28 ) }
    dend_42 { pt3dadd( 136.07, 10.4641, -121.114, 0.55 ) }
    dend_42 { pt3dadd( 137.32, 10.0347, -121.601, 0.28 ) }
    dend_42 { pt3dadd( 138.563, 9.38734, -121.921, 0.55 ) }
    dend_42 { pt3dadd( 141.045, 7.76264, -122.165, 0.28 ) }
    dend_42 { pt3dadd( 142.178, 6.91138, -122.171, 0.55 ) }
    dend_42 { pt3dadd( 143.838, 5.50798, -122.122, 0.28 ) }
    dend_42 { pt3dadd( 145.938, 3.71141, -121.977, 0.55 ) }
    dend_42 { pt3dadd( 147.463, 2.42366, -121.837, 0.55 ) }
    dend_42 { pt3dadd( 150.127, 0.260823, -121.515, 0.28 ) }
    dend_42 { pt3dadd( 151.233, -0.536768, -121.458, 0.55 ) }
    dend_42 { pt3dadd( 153.165, -1.71387, -121.535, 0.28 ) }
    dend_42 { pt3dadd( 155.127, -2.68348, -121.692, 0.55 ) }
    dend_42 { pt3dadd( 156.232, -3.03472, -121.883, 0.28 ) }
    dend_42 { pt3dadd( 157.263, -3.19218, -122.082, 0.55 ) }
    dend_42 { pt3dadd( 160.213, -3.3709, -122.844, 0.28 ) }
    dend_42 { pt3dadd( 162.353, -3.35168, -123.367, 0.28 ) }
    dend_42 { pt3dadd( 164.246, -3.20212, -123.799, 0.55 ) }
    dend_42 { pt3dadd( 166.347, -2.94647, -124.353, 0.28 ) }
    dend_42 { pt3dadd( 166.885, -2.85908, -124.465, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 73.2432, 8.55343, -44.1861, 0.55 ) }
    dend_35 { pt3dadd( 73.4375, 7.03853, -46.1333, 0.55 ) }
    dend_35 { pt3dadd( 73.452, 5.73527, -47.6598, 0.28 ) }
    dend_35 { pt3dadd( 73.4637, 4.49513, -48.9331, 0.55 ) }
    dend_35 { pt3dadd( 73.6562, 1.85413, -51.6713, 0.28 ) }
    dend_35 { pt3dadd( 73.6627, 1.69893, -51.8709, 0.55 ) }
    dend_35 { pt3dadd( 73.7264, 0.913067, -53.0025, 0.28 ) }
    dend_35 { pt3dadd( 73.6973, 0.324305, -54.0683, 0.55 ) }
    dend_35 { pt3dadd( 73.6139, -0.245351, -55.2788, 0.28 ) }
    dend_35 { pt3dadd( 73.4628, -0.996359, -56.9839, 0.55 ) }
    dend_35 { pt3dadd( 73.0815, -2.90324, -61.2076, 0.55 ) }
    dend_35 { pt3dadd( 72.7005, -4.6183, -65.1045, 0.55 ) }
    dend_35 { pt3dadd( 72.3729, -5.98476, -68.221, 0.55 ) }
    dend_35 { pt3dadd( 72.009, -7.33654, -71.243, 0.55 ) }
    dend_35 { pt3dadd( 71.9131, -7.69445, -71.9998, 0.28 ) }
    dend_35 { pt3dadd( 71.8286, -8.09787, -72.7591, 0.55 ) }
    dend_35 { pt3dadd( 71.7932, -8.69674, -73.7389, 0.28 ) }
    dend_35 { pt3dadd( 71.8885, -9.84332, -75.3685, 0.55 ) }
    dend_35 { pt3dadd( 72.3262, -12.2424, -78.0539, 0.55 ) }
    dend_35 { pt3dadd( 72.5756, -13.5853, -79.3619, 0.28 ) }
    dend_35 { pt3dadd( 72.7348, -14.912, -80.7537, 0.55 ) }
    dend_35 { pt3dadd( 72.7909, -16.716, -82.7745, 0.28 ) }
    dend_35 { pt3dadd( 72.7186, -18.14, -84.4393, 0.55 ) }
    dend_35 { pt3dadd( 72.4932, -20.2506, -86.9264, 0.28 ) }
    dend_35 { pt3dadd( 72.2807, -22.4684, -89.4171, 0.55 ) }
    dend_35 { pt3dadd( 71.9175, -25.668, -93.0648, 0.28 ) }
    dend_35 { pt3dadd( 71.6759, -27.3642, -95.013, 0.55 ) }
    dend_35 { pt3dadd( 71.3922, -29.0753, -97.0543, 0.28 ) }
    dend_35 { pt3dadd( 71.1216, -30.5356, -98.9679, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 70.8679, -32.2997, -101.571, 0.55 ) }
    dend_35 { pt3dadd( 70.7916, -33.9779, -103.939, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 76.5893, 20.0252, -3.23452, 0.55 ) }
    dend_31 { pt3dadd( 79.2453, 19.3278, -2.76662, 0.55 ) }
    dend_31 { pt3dadd( 81.1684, 18.7655, -2.62136, 0.55 ) }
    dend_31 { pt3dadd( 85.3674, 17.5107, -2.53425, 0.55 ) }
    dend_31 { pt3dadd( 87.247, 16.9261, -2.67234, 0.55 ) }
    dend_31 { pt3dadd( 89.3011, 16.3452, -2.92546, 0.55 ) }
    dend_31 { pt3dadd( 92.0603, 15.6377, -3.4609, 0.55 ) }
    dend_31 { pt3dadd( 94.9546, 14.8446, -4.31906, 0.55 ) }
    dend_31 { pt3dadd( 96.4668, 14.4284, -4.95152, 0.55 ) }
    dend_31 { pt3dadd( 99.5286, 13.6313, -6.67365, 0.55 ) }
    dend_31 { pt3dadd( 100.94, 13.2817, -7.51228, 0.55 ) }
    dend_31 { pt3dadd( 104.234, 12.4068, -9.57445, 0.55 ) }
    dend_31 { pt3dadd( 106.454, 11.7181, -10.9626, 0.55 ) }
    dend_31 { pt3dadd( 108.089, 11.1914, -11.9069, 0.83 ) }
    dend_31 { pt3dadd( 110.689, 10.244, -13.3961, 0.55 ) }
    dend_31 { pt3dadd( 113.222, 9.17239, -14.7646, 0.83 ) }
    dend_31 { pt3dadd( 115.36, 8.14847, -15.856, 0.55 ) }
    dend_31 { pt3dadd( 117.27, 7.2547, -16.7168, 0.55 ) }
    dend_31 { pt3dadd( 118.365, 6.78984, -17.1362, 0.83 ) }
    dend_31 { pt3dadd( 120.924, 5.69656, -17.9711, 0.28 ) }
    dend_31 { pt3dadd( 122.207, 5.19869, -18.2941, 0.28 ) }
    dend_31 { pt3dadd( 123.435, 4.6421, -18.6838, 0.28 ) }
    dend_31 { pt3dadd( 124.768, 4.0788, -19.107, 0.28 ) }
    dend_31 { pt3dadd( 126.904, 3.22514, -19.826, 0.28 ) }
    dend_31 { pt3dadd( 127.766, 2.88974, -20.0869, 0.55 ) }
    dend_31 { pt3dadd( 129.836, 2.08528, -20.4954, 0.55 ) }
    dend_31 { pt3dadd( 133.563, 0.577043, -21.0381, 0.55 ) }
    dend_31 { pt3dadd( 134.592, 0.125661, -21.1441, 0.55 ) }
    dend_31 { pt3dadd( 135.508, -0.313712, -21.2009, 0.83 ) }
    dend_31 { pt3dadd( 137.512, -1.223, -21.147, 0.55 ) }
    dend_31 { pt3dadd( 139.255, -2.01322, -21.0705, 0.55 ) }
    dend_31 { pt3dadd( 140.904, -2.75351, -20.9894, 0.55 ) }
    dend_31 { pt3dadd( 142.176, -3.34568, -20.9671, 0.55 ) }
    dend_31 { pt3dadd( 144.172, -4.42016, -21.0532, 0.55 ) }
    dend_31 { pt3dadd( 146.491, -5.89, -21.3194, 0.55 ) }
    dend_31 { pt3dadd( 150.029, -8.57889, -22.0585, 0.55 ) }
    dend_31 { pt3dadd( 151.926, -10.353, -22.6383, 0.55 ) }
    dend_31 { pt3dadd( 153.525, -12.1962, -23.2728, 0.28 ) }
    dend_31 { pt3dadd( 153.985, -12.8635, -23.5091, 0.55 ) }
    dend_31 { pt3dadd( 154.949, -14.7007, -24.1406, 0.28 ) }
    dend_31 { pt3dadd( 155.713, -16.733, -24.7955, 0.55 ) }
    dend_31 { pt3dadd( 156.353, -19.2581, -25.4041, 0.55 ) }
    dend_31 { pt3dadd( 156.793, -20.9282, -25.7278, 0.28 ) }
    dend_31 { pt3dadd( 156.958, -21.5223, -25.8147, 0.55 ) }
    dend_31 { pt3dadd( 157.395, -23.0029, -26.012, 0.28 ) }
    dend_31 { pt3dadd( 158.006, -24.9383, -26.2259, 0.55 ) }
    dend_31 { pt3dadd( 159.651, -29.6312, -26.6374, 0.55 ) }
    dend_31 { pt3dadd( 160.52, -32.0054, -26.7993, 0.55 ) }
    dend_31 { pt3dadd( 161.332, -34.1848, -26.9298, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 76.5893, 20.0252, -3.23452, 0.55 ) }
    dend_30 { pt3dadd( 78.3583, 20.2934, -1.73852, 0.55 ) }
    dend_30 { pt3dadd( 78.9279, 20.3736, -1.29089, 0.55 ) }
    dend_30 { pt3dadd( 81.05, 20.5564, 0.292103, 0.55 ) }
    dend_30 { pt3dadd( 83.4197, 20.8129, 2.09119, 0.55 ) }
    dend_30 { pt3dadd( 86.4502, 21.1437, 4.48124, 0.55 ) }
    dend_30 { pt3dadd( 87.2878, 21.2354, 5.1355, 0.55 ) }
    dend_30 { pt3dadd( 88.7877, 21.3384, 6.29953, 0.55 ) }
    dend_30 { pt3dadd( 90.4394, 21.4836, 7.50736, 0.55 ) }
    dend_30 { pt3dadd( 92.3699, 21.6983, 8.81724, 0.55 ) }
    dend_30 { pt3dadd( 94.1904, 21.9279, 10.0559, 0.55 ) }
    dend_30 { pt3dadd( 95.1957, 22.0955, 10.6835, 0.55 ) }
    dend_30 { pt3dadd( 96.3783, 22.3269, 11.4151, 0.55 ) }
    dend_30 { pt3dadd( 97.846, 22.6534, 12.2895, 0.83 ) }
    dend_30 { pt3dadd( 100.269, 23.1551, 13.4666, 0.55 ) }
    dend_30 { pt3dadd( 101.874, 23.415, 14.1743, 0.83 ) }
    dend_30 { pt3dadd( 104.102, 23.6645, 15.089, 0.55 ) }
    dend_30 { pt3dadd( 104.785, 23.7024, 15.3634, 0.55 ) }
    dend_30 { pt3dadd( 106.899, 23.709, 16.1796, 0.55 ) }
    dend_30 { pt3dadd( 110.677, 23.4729, 17.5079, 0.55 ) }
    dend_30 { pt3dadd( 113.439, 23.1372, 18.4305, 0.55 ) }
    dend_30 { pt3dadd( 115.614, 22.7739, 19.222, 0.55 ) }
    dend_30 { pt3dadd( 117.819, 22.2928, 20.1172, 0.55 ) }
    dend_30 { pt3dadd( 118.281, 22.179, 20.309, 0.28 ) }
    dend_30 { pt3dadd( 119.217, 21.9093, 20.6991, 0.83 ) }
    dend_30 { pt3dadd( 123.055, 20.7466, 22.3295, 0.55 ) }
    dend_30 { pt3dadd( 125.744, 19.9307, 23.4158, 0.55 ) }
    dend_30 { pt3dadd( 127.95, 19.3249, 24.3597, 0.55 ) }
    dend_30 { pt3dadd( 129.267, 18.9603, 24.9371, 0.83 ) }
    dend_30 { pt3dadd( 130.305, 18.689, 25.3922, 0.28 ) }
    dend_30 { pt3dadd( 131.247, 18.4435, 25.7957, 0.55 ) }
    dend_30 { pt3dadd( 138.633, 18.4958, 29.8715, 0.55 ) }
    dend_30 { pt3dadd( 146.48, 17.094, 32.6302, 0.55 ) }
    dend_30 { pt3dadd( 154.334, 16.7488, 35.6887, 0.55 ) }
    dend_30 { pt3dadd( 161.135, 15.4645, 40.51, 0.55 ) }
    dend_30 { pt3dadd( 167.334, 13.1316, 45.7343, 0.55 ) }
    dend_30 { pt3dadd( 174.22, 9.33111, 48.7829, 0.55 ) }
    dend_30 { pt3dadd( 181.017, 4.6321, 50.4796, 0.55 ) }
    dend_30 { pt3dadd( 188.681, 1.29653, 51.6158, 0.55 ) }
    dend_30 { pt3dadd( 196.212, -2.10377, 53.3124, 0.55 ) }
    dend_30 { pt3dadd( 204.166, -4.67904, 54.4315, 0.55 ) }
    dend_30 { pt3dadd( 212.044, -6.78014, 56.5933, 0.55 ) }
    dend_30 { pt3dadd( 219.275, -10.2096, 59.259, 0.55 ) }
    dend_30 { pt3dadd( 226.763, -12.1118, 62.6453, 0.55 ) }
    dend_30 { pt3dadd( 233.927, -12.6503, 67.0658, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.7731, -28.7818, 5.53204, 1.38 ) }
    dend_13 { pt3dadd( -0.808252, -32.1047, 3.68848, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -2.7731, -28.7818, 5.53204, 0.55 ) }
    dend_12 { pt3dadd( -4.10286, -30.1595, 6.12662, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.6096, -31.9542, 6.78516, 0.55 ) }
    dend_12 { pt3dadd( -6.74599, -33.1224, 7.3088, 0.55 ) }
    dend_12 { pt3dadd( -7.76739, -34.0895, 7.61682, 0.55 ) }
    dend_12 { pt3dadd( -10.0653, -36.0675, 8.1129, 0.55 ) }
    dend_12 { pt3dadd( -11.6842, -37.3767, 8.42453, 0.55 ) }
    dend_12 { pt3dadd( -13.1466, -38.5492, 8.65773, 0.55 ) }
    dend_12 { pt3dadd( -16.8774, -41.3786, 9.25949, 0.55 ) }
    dend_12 { pt3dadd( -21.327, -44.636, 10.011, 0.55 ) }
    dend_12 { pt3dadd( -24.7875, -47.0905, 10.5448, 0.55 ) }
    dend_12 { pt3dadd( -27.0158, -48.7087, 10.8599, 0.55 ) }
    dend_12 { pt3dadd( -29.5829, -50.6653, 11.2276, 0.55 ) }
    dend_12 { pt3dadd( -32.8742, -53.5269, 11.7282, 0.55 ) }
    dend_12 { pt3dadd( -34.8395, -55.6097, 12.0532, 0.55 ) }
    dend_12 { pt3dadd( -37.2491, -58.6643, 12.6173, 0.55 ) }
    dend_12 { pt3dadd( -39.2054, -61.5697, 13.1261, 0.55 ) }
    dend_12 { pt3dadd( -41.2714, -65.2492, 13.6666, 0.55 ) }
    dend_12 { pt3dadd( -43.3133, -69.6242, 14.2379, 0.55 ) }
    dend_12 { pt3dadd( -44.5293, -73.0176, 14.599, 0.55 ) }
    dend_12 { pt3dadd( -44.9781, -74.7282, 14.8295, 0.55 ) }
    dend_12 { pt3dadd( -45.7144, -78.7919, 15.4647, 0.55 ) }
    dend_12 { pt3dadd( -46.2981, -82.6088, 16.1197, 0.55 ) }
    dend_12 { pt3dadd( -46.5827, -86.4956, 16.9504, 0.55 ) }
    dend_12 { pt3dadd( -46.7136, -88.7293, 17.5465, 0.55 ) }
    dend_12 { pt3dadd( -46.9705, -95.6551, 19.5988, 0.55 ) }
    dend_12 { pt3dadd( -46.9885, -96.1651, 19.7594, 0.55 ) }
    dend_12 { pt3dadd( -47.0136, -99.3004, 20.7858, 0.55 ) }
    dend_12 { pt3dadd( -47.2323, -104.881, 22.8523, 0.55 ) }
    dend_12 { pt3dadd( -47.3633, -106.739, 23.4489, 0.55 ) }
    dend_12 { pt3dadd( -47.8493, -109.608, 23.9652, 0.55 ) }
    dend_12 { pt3dadd( -48.1128, -110.663, 23.9228, 0.55 ) }
    dend_12 { pt3dadd( -49.1601, -114.218, 23.0917, 0.55 ) }
    dend_12 { pt3dadd( -49.9388, -116.51, 22.0471, 0.55 ) }
    dend_12 { pt3dadd( -51.4215, -120.131, 19.6495, 0.55 ) }
    dend_12 { pt3dadd( -53.2249, -124.565, 16.3137, 0.28 ) }
    dend_12 { pt3dadd( -53.722, -125.655, 15.3427, 0.55 ) }
    dend_12 { pt3dadd( -54.5372, -127.299, 13.7311, 0.28 ) }
    dend_12 { pt3dadd( -54.6682, -127.546, 13.4768, 0.55 ) }
    dend_12 { pt3dadd( -55.3403, -128.903, 12.1984, 0.28 ) }
    dend_12 { pt3dadd( -55.5493, -129.366, 11.8792, 0.55 ) }
    dend_12 { pt3dadd( -56.4744, -131.791, 10.682, 0.28 ) }
    dend_12 { pt3dadd( -56.8139, -132.612, 10.2989, 0.55 ) }
    dend_12 { pt3dadd( -57.762, -134.992, 9.33145, 0.28 ) }
    dend_12 { pt3dadd( -58.0561, -135.742, 9.02795, 0.55 ) }
    dend_12 { pt3dadd( -59.0715, -138.329, 8.0298, 0.28 ) }
    dend_12 { pt3dadd( -59.5355, -139.519, 7.5621, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.1869, -67.8548, 52.6721, 0.55 ) }
    dend_10 { pt3dadd( -16.1233, -74.8443, 58.7185, 0.55 ) }
    dend_10 { pt3dadd( -21.1257, -81.0362, 64.8458, 0.55 ) }
    dend_10 { pt3dadd( -25.7452, -87.8641, 70.5858, 0.55 ) }
    dend_10 { pt3dadd( -30.5074, -94.7414, 76.1476, 0.55 ) }
    dend_10 { pt3dadd( -34.0508, -102.663, 81.207, 0.55 ) }
    dend_10 { pt3dadd( -37.5967, -110.253, 86.7505, 0.55 ) }
    dend_10 { pt3dadd( -39.6165, -119.323, 90.5647, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.1869, -67.8548, 52.6721, 0.55 ) }
    dend_3 { pt3dadd( -12.1483, -76.8752, 62.0641, 0.55 ) }
    dend_3 { pt3dadd( -10.9482, -87.2483, 69.8448, 0.55 ) }
    dend_3 { pt3dadd( -11.7327, -98.0371, 77.0949, 0.55 ) }
    dend_3 { pt3dadd( -12.8557, -109.569, 83.0378, 0.55 ) }
    dend_3 { pt3dadd( -13.5303, -120.97, 89.2943, 0.55 ) }
    dend_3 { pt3dadd( -14.3735, -131.889, 96.3404, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -42.3003, 34.6732, -19.2116, 0.83 ) }
    dend_60 { pt3dadd( -41.9107, 36.6241, -21.3568, 0.83 ) }
    dend_60 { pt3dadd( -41.1009, 41.3371, -26.1572, 0.55 ) }
    dend_60 { pt3dadd( -40.7516, 43.3743, -28.054, 0.83 ) }
    dend_60 { pt3dadd( -40.3719, 45.558, -29.9304, 0.55 ) }
    dend_60 { pt3dadd( -39.9871, 47.8126, -31.535, 0.55 ) }
    dend_60 { pt3dadd( -39.787, 48.9493, -32.1926, 0.28 ) }
    dend_60 { pt3dadd( -39.7046, 49.705, -32.4365, 0.55 ) }
    dend_60 { pt3dadd( -39.3601, 52.245, -32.7081, 0.28 ) }
    dend_60 { pt3dadd( -39.1866, 53.3342, -32.7696, 0.55 ) }
    dend_60 { pt3dadd( -38.6309, 57.1219, -32.8299, 0.28 ) }
    dend_60 { pt3dadd( -38.2682, 60.1219, -32.7766, 0.55 ) }
    dend_60 { pt3dadd( -37.9246, 64.7989, -32.5483, 0.28 ) }
    dend_60 { pt3dadd( -37.7658, 68.9042, -32.2685, 0.28 ) }
    dend_60 { pt3dadd( -37.8089, 71.196, -32.0671, 0.55 ) }
    dend_60 { pt3dadd( -38.0257, 73.9041, -31.8265, 0.28 ) }
    dend_60 { pt3dadd( -38.2138, 75.1919, -31.6933, 0.55 ) }
    dend_60 { pt3dadd( -38.8206, 78.2083, -31.5172, 0.28 ) }
    dend_60 { pt3dadd( -39.3583, 80.2084, -31.5057, 0.28 ) }
    dend_60 { pt3dadd( -39.9281, 82.169, -31.5551, 0.28 ) }
    dend_60 { pt3dadd( -40.1892, 83.2072, -31.5854, 0.55 ) }
    dend_60 { pt3dadd( -41.0191, 87.4203, -31.8086, 0.28 ) }
    dend_60 { pt3dadd( -41.8357, 92.4197, -32.1658, 0.55 ) }
    dend_60 { pt3dadd( -42.0924, 94.1479, -32.296, 0.55 ) }
    dend_60 { pt3dadd( -42.3777, 95.8794, -32.3889, 0.55 ) }
    dend_60 { pt3dadd( -43.1776, 99.5437, -32.6465, 0.55 ) }
    dend_60 { pt3dadd( -43.8574, 101.937, -32.868, 0.28 ) }
    dend_60 { pt3dadd( -44.2202, 102.836, -32.9641, 0.55 ) }
    dend_60 { pt3dadd( -45.3765, 105.256, -33.1715, 0.28 ) }
    dend_60 { pt3dadd( -46.7142, 107.823, -33.4974, 0.55 ) }
    dend_60 { pt3dadd( -48.9881, 111.484, -34.1146, 0.28 ) }
    dend_60 { pt3dadd( -50.1078, 112.998, -34.4238, 0.28 ) }
    dend_60 { pt3dadd( -51.9449, 115.077, -35.0758, 0.55 ) }
    dend_60 { pt3dadd( -54.0105, 117.229, -35.8772, 0.28 ) }
    dend_60 { pt3dadd( -54.3885, 117.562, -36.0211, 0.55 ) }
    dend_60 { pt3dadd( -55.7548, 118.611, -36.5278, 0.28 ) }
    dend_60 { pt3dadd( -60.4731, 121.944, -38.1791, 0.55 ) }
    dend_60 { pt3dadd( -67.048, 125.99, -40.7081, 0.28 ) }
    dend_60 { pt3dadd( -68.2647, 126.659, -41.246, 0.55 ) }
    dend_60 { pt3dadd( -71.608, 128.364, -42.7759, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -73.0124, 129.06, -43.4557, 0.28 ) }
    dend_60 { pt3dadd( -74.2342, 129.632, -44.1041, 0.55 ) }
    dend_60 { pt3dadd( -77.8203, 130.872, -46.2655, 0.28 ) }
    dend_60 { pt3dadd( -80.3566, 131.493, -47.6853, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -42.3003, 34.6732, -19.2116, 0.55 ) }
    dend_57 { pt3dadd( -42.6043, 36.3291, -19.3603, 0.55 ) }
    dend_57 { pt3dadd( -42.8121, 37.3011, -19.3575, 0.28 ) }
    dend_57 { pt3dadd( -43.1067, 37.9801, -19.1899, 0.55 ) }
    dend_57 { pt3dadd( -43.7833, 39.5393, -18.8049, 0.28 ) }
    dend_57 { pt3dadd( -44.2585, 40.6344, -18.5345, 0.55 ) }
    dend_57 { pt3dadd( -45.1345, 42.6534, -18.036, 0.28 ) }
    dend_57 { pt3dadd( -45.7242, 43.7199, -17.5789, 0.55 ) }
    dend_57 { pt3dadd( -47.9557, 46.1671, -15.5785, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -144.551, -52.9321, -51.1078, 0.55 ) }
    dend_52 { pt3dadd( -151.993, -61.3901, -56.7339, 0.55 ) }
    dend_52 { pt3dadd( -157.442, -70.9139, -62.9128, 0.55 ) }
    dend_52 { pt3dadd( -161.384, -79.4599, -71.2792, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -144.551, -52.9321, -51.1078, 0.55 ) }
    dend_49 { pt3dadd( -150.42, -57.2565, -57.8746, 0.55 ) }
    dend_49 { pt3dadd( -155.22, -61.2874, -65.5981, 0.55 ) }
    dend_49 { pt3dadd( -159.61, -65.3927, -73.5234, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -159.744, 10.2571, 58.3588, 0.55 ) }
    dend_47 { pt3dadd( -168.595, 10.0788, 64.1066, 0.55 ) }
    dend_47 { pt3dadd( -177.888, 11.3156, 68.9547, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -159.744, 10.2571, 58.3588, 0.55 ) }
    dend_46 { pt3dadd( -170.735, 8.92458, 63.0045, 0.55 ) }
    dend_46 { pt3dadd( -181.981, 9.50297, 67.1707, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 70.7916, -33.9779, -103.939, 0.28 ) }
    dend_39 { pt3dadd( 76.7921, -36.1687, -117.041, 0.28 ) }
    dend_39 { pt3dadd( 77.3905, -36.4665, -118.228, 0.55 ) }
    dend_39 { pt3dadd( 78.4006, -36.9693, -120.233, 0.28 ) }
    dend_39 { pt3dadd( 79.2511, -37.3927, -121.921, 0.28 ) }
    dend_39 { pt3dadd( 80.3769, -37.9531, -124.155, 0.55 ) }
    dend_39 { pt3dadd( 81.8614, -38.692, -127.101, 0.55 ) }
    dend_39 { pt3dadd( 83.948, -40.5052, -128.952, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 70.7916, -33.9779, -103.939, 0.55 ) }
    dend_36 { pt3dadd( 71.2284, -34.6331, -105.792, 0.55 ) }
    dend_36 { pt3dadd( 71.3245, -34.8782, -106.617, 0.28 ) }
    dend_36 { pt3dadd( 71.4457, -35.262, -108.048, 0.55 ) }
    dend_36 { pt3dadd( 71.7125, -36.1074, -111.202, 0.28 ) }
    dend_36 { pt3dadd( 71.8974, -36.6933, -113.388, 0.55 ) }
    dend_36 { pt3dadd( 72.2107, -37.686, -117.091, 0.28 ) }
    dend_36 { pt3dadd( 72.5719, -38.727, -121.833, 0.28 ) }
    dend_36 { pt3dadd( 72.6876, -39.1605, -124.038, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 161.332, -34.1848, -26.9298, 0.28 ) }
    dend_33 { pt3dadd( 162.352, -36.1423, -26.8425, 0.28 ) }
    dend_33 { pt3dadd( 163.617, -38.7603, -26.5332, 0.28 ) }
    dend_33 { pt3dadd( 164.408, -40.469, -26.271, 0.55 ) }
    dend_33 { pt3dadd( 164.897, -41.4271, -26.0817, 0.28 ) }
    dend_33 { pt3dadd( 165.156, -41.9434, -25.9755, 0.28 ) }
    dend_33 { pt3dadd( 166.441, -44.486, -25.4864, 0.55 ) }
    dend_33 { pt3dadd( 166.738, -45.0662, -25.3106, 0.28 ) }
    dend_33 { pt3dadd( 167.411, -46.6013, -24.7608, 0.55 ) }
    dend_33 { pt3dadd( 167.984, -47.9246, -24.3321, 0.28 ) }
    dend_33 { pt3dadd( 168.497, -49.0024, -24.0, 0.55 ) }
    dend_33 { pt3dadd( 169.097, -50.2757, -23.6746, 0.55 ) }
    dend_33 { pt3dadd( 170.063, -52.2543, -23.385, 0.55 ) }
    dend_33 { pt3dadd( 170.295, -52.736, -23.3302, 0.55 ) }
    dend_33 { pt3dadd( 171.116, -54.5257, -23.1462, 0.28 ) }
    dend_33 { pt3dadd( 171.428, -55.2507, -23.0899, 0.55 ) }
    dend_33 { pt3dadd( 171.878, -56.1821, -23.0188, 0.28 ) }
    dend_33 { pt3dadd( 172.514, -57.493, -22.974, 0.55 ) }
    dend_33 { pt3dadd( 173.596, -59.5131, -23.1802, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 161.332, -34.1848, -26.9298, 0.55 ) }
    dend_32 { pt3dadd( 159.099, -33.8031, -26.992, 0.55 ) }
    dend_32 { pt3dadd( 157.287, -33.4931, -27.0424, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.808252, -32.1047, 3.68848, 0.83 ) }
    dend_17 { pt3dadd( -0.718272, -32.3651, 3.63605, 0.83 ) }
    dend_17 { pt3dadd( 0.43424, -34.7, 3.22709, 0.83 ) }
    dend_17 { pt3dadd( 1.41293, -36.7407, 2.74113, 0.55 ) }
    dend_17 { pt3dadd( 2.19371, -38.3687, 2.35343, 0.55 ) }
    dend_17 { pt3dadd( 3.85329, -41.8292, 1.52938, 0.83 ) }
    dend_17 { pt3dadd( 5.86626, -46.0265, 0.529857, 0.55 ) }
    dend_17 { pt3dadd( 6.98427, -48.2292, 0.0341385, 0.83 ) }
    dend_17 { pt3dadd( 9.04073, -51.7577, -0.667835, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -0.808252, -32.1047, 3.68848, 0.55 ) }
    dend_14 { pt3dadd( -3.47313, -32.7814, 2.05304, 0.55 ) }
    dend_14 { pt3dadd( -6.33354, -33.5078, 0.297587, 0.55 ) }
    dend_14 { pt3dadd( -9.71029, -34.3652, -1.77474, 0.55 ) }
    dend_14 { pt3dadd( -13.8108, -35.4065, -4.29121, 0.55 ) }
    dend_14 { pt3dadd( -16.1377, -35.9973, -5.71922, 0.55 ) }
    dend_14 { pt3dadd( -16.6051, -36.116, -6.00609, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.3735, -131.889, 96.3404, 0.55 ) }
    dend_7 { pt3dadd( -14.4286, -141.049, 103.361, 0.55 ) }
    dend_7 { pt3dadd( -12.6001, -150.541, 109.668, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.3735, -131.889, 96.3404, 0.55 ) }
    dend_4 { pt3dadd( -15.1743, -141.151, 101.721, 0.55 ) }
    dend_4 { pt3dadd( -16.4616, -150.18, 107.397, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -47.9557, 46.1671, -15.5785, 0.28 ) }
    dend_59 { pt3dadd( -49.9867, 47.1493, -13.958, 0.28 ) }
    dend_59 { pt3dadd( -50.7724, 47.4965, -13.2681, 0.55 ) }
    dend_59 { pt3dadd( -53.0377, 48.4913, -11.2241, 0.28 ) }
    dend_59 { pt3dadd( -54.1393, 49.0161, -10.3074, 0.55 ) }
    dend_59 { pt3dadd( -57.1187, 50.4647, -7.92165, 0.28 ) }
    dend_59 { pt3dadd( -60.147, 51.9369, -5.4968, 0.55 ) }
    dend_59 { pt3dadd( -65.136, 54.1416, -1.50999, 0.28 ) }
    dend_59 { pt3dadd( -66.1994, 54.6179, -0.658034, 0.55 ) }
    dend_59 { pt3dadd( -68.5387, 55.809, 1.18246, 0.28 ) }
    dend_59 { pt3dadd( -69.4586, 56.3202, 1.91932, 0.55 ) }
    dend_59 { pt3dadd( -78.8667, 58.987, 7.26902, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -88.5672, 63.4901, 10.4103, 0.55 ) }
    dend_59 { pt3dadd( -97.5589, 67.935, 15.2718, 0.55 ) }
    dend_59 { pt3dadd( -105.3, 73.849, 20.6876, 0.55 ) }
    dend_59 { pt3dadd( -113.903, 79.4849, 24.9867, 0.55 ) }
    dend_59 { pt3dadd( -123.397, 83.1133, 29.5616, 0.55 ) }
    dend_59 { pt3dadd( -132.467, 85.515, 35.5799, 0.55 ) }
    dend_59 { pt3dadd( -140.759, 86.4959, 42.9637, 0.55 ) }
    dend_59 { pt3dadd( -149.078, 88.1828, 50.1885, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -47.9557, 46.1671, -15.5785, 0.55 ) }
    dend_58 { pt3dadd( -51.5605, 44.9584, -13.5511, 0.55 ) }
    dend_58 { pt3dadd( -53.4324, 44.2633, -12.4954, 0.28 ) }
    dend_58 { pt3dadd( -54.8253, 43.746, -11.7097, 0.55 ) }
    dend_58 { pt3dadd( -55.9863, 43.3149, -11.0549, 0.28 ) }
    dend_58 { pt3dadd( -56.7996, 43.0129, -10.5962, 0.55 ) }
    dend_58 { pt3dadd( -59.0419, 42.1803, -9.33149, 0.28 ) }
    dend_58 { pt3dadd( -60.5485, 41.4729, -8.67883, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -161.384, -79.4599, -71.2792, 0.55 ) }
    dend_54 { pt3dadd( -165.647, -86.6568, -72.4453, 0.55 ) }
    dend_54 { pt3dadd( -169.975, -93.9058, -72.6568, 0.55 ) }
    dend_54 { pt3dadd( -173.383, -101.486, -74.1575, 0.55 ) }
    dend_54 { pt3dadd( -177.816, -108.645, -74.8016, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -161.384, -79.4599, -71.2792, 0.55 ) }
    dend_53 { pt3dadd( -165.602, -83.9073, -80.4307, 0.55 ) }
    dend_53 { pt3dadd( -169.013, -86.9369, -90.4561, 0.55 ) }
    dend_53 { pt3dadd( -173.61, -91.1499, -99.5361, 0.55 ) }
    dend_53 { pt3dadd( -180.275, -93.4682, -107.993, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -159.61, -65.3927, -73.5234, 0.55 ) }
    dend_51 { pt3dadd( -163.876, -65.1168, -81.0021, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -159.61, -65.3927, -73.5234, 0.55 ) }
    dend_50 { pt3dadd( -165.352, -74.4046, -74.3629, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 83.948, -40.5052, -128.952, 0.28 ) }
    dend_41 { pt3dadd( 86.7353, -41.9181, -131.14, 0.28 ) }
    dend_41 { pt3dadd( 88.03, -42.5744, -132.156, 0.55 ) }
    dend_41 { pt3dadd( 90.499, -43.826, -134.094, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 83.948, -40.5052, -128.952, 0.55 ) }
    dend_40 { pt3dadd( 83.2762, -40.8869, -130.772, 0.55 ) }
    dend_40 { pt3dadd( 81.9325, -41.6504, -134.413, 0.28 ) }
    dend_40 { pt3dadd( 81.4948, -41.8991, -135.598, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 72.6876, -39.1605, -124.038, 0.28 ) }
    dend_38 { pt3dadd( 73.0154, -40.5721, -127.392, 0.28 ) }
    dend_38 { pt3dadd( 73.1777, -41.2711, -129.053, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 72.6876, -39.1605, -124.038, 0.55 ) }
    dend_37 { pt3dadd( 70.8573, -39.5915, -123.545, 0.55 ) }
    dend_37 { pt3dadd( 65.7535, -40.7934, -122.171, 0.28 ) }
    dend_37 { pt3dadd( 64.541, -41.0789, -121.844, 0.55 ) }
    dend_37 { pt3dadd( 61.2243, -41.86, -120.951, 0.28 ) }
    dend_37 { pt3dadd( 59.0864, -42.3634, -120.375, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 9.04073, -51.7577, -0.667835, 0.83 ) }
    dend_23 { pt3dadd( 9.04035, -51.9715, -0.700364, 0.83 ) }
    dend_23 { pt3dadd( 9.09677, -54.7723, -1.0628, 0.83 ) }
    dend_23 { pt3dadd( 9.00117, -56.8604, -1.15648, 0.83 ) }
    dend_23 { pt3dadd( 8.8296, -58.8697, -1.00744, 0.83 ) }
    dend_23 { pt3dadd( 8.56517, -61.54, -0.58782, 0.83 ) }
    dend_23 { pt3dadd( 8.20945, -64.6121, 0.0290934, 0.83 ) }
    dend_23 { pt3dadd( 7.87581, -68.046, 0.888637, 0.83 ) }
    dend_23 { pt3dadd( 7.59485, -71.3838, 1.87278, 0.83 ) }
    dend_23 { pt3dadd( 6.96547, -75.4609, 3.06211, 0.83 ) }
    dend_23 { pt3dadd( 6.54677, -77.325, 3.53305, 0.83 ) }
    dend_23 { pt3dadd( 6.20203, -78.7252, 3.80195, 0.83 ) }
    dend_23 { pt3dadd( 5.46886, -81.4067, 4.27776, 0.83 ) }
    dend_23 { pt3dadd( 4.83064, -83.8108, 4.55754, 0.83 ) }
    dend_23 { pt3dadd( 3.58354, -88.9504, 4.51349, 0.83 ) }
    dend_23 { pt3dadd( 2.83167, -91.7588, 4.12034, 0.83 ) }
    dend_23 { pt3dadd( 2.08469, -94.3438, 3.57277, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 9.04073, -51.7577, -0.667835, 0.55 ) }
    dend_18 { pt3dadd( 7.69372, -54.4771, 0.0465625, 0.55 ) }
    dend_18 { pt3dadd( 6.74592, -56.4461, 0.720693, 0.55 ) }
    dend_18 { pt3dadd( 6.22186, -57.7059, 1.26266, 0.55 ) }
    dend_18 { pt3dadd( 5.56779, -59.6827, 2.26222, 0.55 ) }
    dend_18 { pt3dadd( 4.46958, -63.6016, 4.44803, 0.55 ) }
    dend_18 { pt3dadd( 3.74131, -66.5599, 6.4301, 0.55 ) }
    dend_18 { pt3dadd( 3.25847, -68.927, 8.26533, 0.55 ) }
    dend_18 { pt3dadd( 2.78023, -71.3097, 10.3074, 0.55 ) }
    dend_18 { pt3dadd( 2.40796, -73.2824, 12.1089, 0.28 ) }
    dend_18 { pt3dadd( 2.17379, -74.888, 13.8222, 0.55 ) }
    dend_18 { pt3dadd( 1.84339, -77.796, 17.3723, 0.55 ) }
    dend_18 { pt3dadd( 1.62078, -79.566, 19.7783, 0.55 ) }
    dend_18 { pt3dadd( 1.48113, -80.5568, 21.1206, 0.55 ) }
    dend_18 { pt3dadd( 1.2327, -81.721, 22.6658, 0.83 ) }
    dend_18 { pt3dadd( 0.371782, -85.1749, 27.0272, 0.28 ) }
    dend_18 { pt3dadd( 0.0753919, -86.3187, 28.4387, 0.55 ) }
    dend_18 { pt3dadd( -0.422149, -88.3909, 30.8932, 0.28 ) }
    dend_18 { pt3dadd( -0.556198, -89.0287, 31.6964, 0.55 ) }
    dend_18 { pt3dadd( -0.798958, -90.5352, 33.5195, 0.28 ) }
    dend_18 { pt3dadd( -0.956571, -91.3936, 34.4907, 0.55 ) }
    dend_18 { pt3dadd( -1.94312, -94.1851, 36.9683, 0.55 ) }
    dend_18 { pt3dadd( -1.5418, -101.829, 45.84, 0.55 ) }
    dend_18 { pt3dadd( -0.420676, -109.137, 54.9306, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -16.6051, -36.116, -6.00609, 0.55 ) }
    dend_16 { pt3dadd( -18.9957, -36.9378, -8.63279, 0.55 ) }
    dend_16 { pt3dadd( -19.692, -37.1171, -9.38139, 0.55 ) }
    dend_16 { pt3dadd( -21.4486, -37.5578, -11.1925, 0.55 ) }
    dend_16 { pt3dadd( -25.2858, -38.3806, -15.0055, 0.28 ) }
    dend_16 { pt3dadd( -25.858, -38.4844, -15.5381, 0.55 ) }
    dend_16 { pt3dadd( -28.2703, -38.9701, -17.6563, 0.55 ) }
    dend_16 { pt3dadd( -31.6075, -39.5913, -20.2383, 0.55 ) }
    dend_16 { pt3dadd( -32.879, -39.7858, -21.2007, 0.28 ) }
    dend_16 { pt3dadd( -33.9832, -39.8739, -21.9909, 0.28 ) }
    dend_16 { pt3dadd( -35.8843, -39.9526, -23.094, 0.55 ) }
    dend_16 { pt3dadd( -38.1741, -39.9562, -24.538, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -40.2478, -39.7909, -25.9415, 0.55 ) }
    dend_16 { pt3dadd( -41.8255, -39.5279, -27.0127, 0.55 ) }
    dend_16 { pt3dadd( -42.8896, -39.2607, -27.7973, 0.55 ) }
    dend_16 { pt3dadd( -45.9775, -38.3447, -30.2194, 0.55 ) }
    dend_16 { pt3dadd( -49.1843, -37.1428, -32.7335, 0.55 ) }
    dend_16 { pt3dadd( -50.4956, -36.5646, -33.7468, 0.28 ) }
    dend_16 { pt3dadd( -51.7441, -36.0397, -34.7318, 0.55 ) }
    dend_16 { pt3dadd( -54.3176, -35.144, -36.6796, 0.28 ) }
    dend_16 { pt3dadd( -55.1902, -34.8672, -37.3224, 0.83 ) }
    dend_16 { pt3dadd( -56.8254, -34.3143, -38.4085, 0.28 ) }
    dend_16 { pt3dadd( -58.0367, -33.985, -39.0175, 0.55 ) }
    dend_16 { pt3dadd( -59.8119, -33.5636, -39.8576, 0.28 ) }
    dend_16 { pt3dadd( -60.5187, -33.3835, -40.1697, 0.55 ) }
    dend_16 { pt3dadd( -61.8392, -33.0646, -40.6735, 0.55 ) }
    dend_16 { pt3dadd( -63.7964, -32.3763, -41.3832, 0.55 ) }
    dend_16 { pt3dadd( -65.0621, -31.8379, -41.7831, 0.28 ) }
    dend_16 { pt3dadd( -66.0589, -31.2654, -42.0378, 0.55 ) }
    dend_16 { pt3dadd( -67.2002, -30.4426, -42.3628, 0.28 ) }
    dend_16 { pt3dadd( -67.3842, -30.2923, -42.4253, 0.55 ) }
    dend_16 { pt3dadd( -69.0588, -28.9054, -43.3363, 0.28 ) }
    dend_16 { pt3dadd( -70.2618, -27.891, -44.1476, 0.55 ) }
    dend_16 { pt3dadd( -71.8115, -26.4686, -45.4837, 0.83 ) }
    dend_16 { pt3dadd( -73.0725, -25.2854, -46.7568, 0.28 ) }
    dend_16 { pt3dadd( -73.3969, -24.9874, -47.1237, 0.55 ) }
    dend_16 { pt3dadd( -75.886, -22.7662, -50.0978, 0.28 ) }
    dend_16 { pt3dadd( -76.3207, -22.3926, -50.6687, 0.55 ) }
    dend_16 { pt3dadd( -77.5748, -21.2017, -52.4637, 0.28 ) }
    dend_16 { pt3dadd( -77.8986, -20.8957, -52.9299, 0.55 ) }
    dend_16 { pt3dadd( -78.7317, -20.091, -54.057, 0.28 ) }
    dend_16 { pt3dadd( -79.3229, -19.5067, -54.8104, 0.55 ) }
    dend_16 { pt3dadd( -80.6593, -18.1694, -56.247, 0.28 ) }
    dend_16 { pt3dadd( -81.4713, -17.4369, -57.054, 0.55 ) }
    dend_16 { pt3dadd( -83.2419, -15.985, -58.6489, 0.28 ) }
    dend_16 { pt3dadd( -83.7779, -15.5841, -59.11, 0.55 ) }
    dend_16 { pt3dadd( -84.6383, -15.0235, -59.7879, 0.28 ) }
    dend_16 { pt3dadd( -85.3701, -14.5455, -60.3218, 0.55 ) }
    dend_16 { pt3dadd( -86.9014, -13.5618, -61.3247, 0.28 ) }
    dend_16 { pt3dadd( -87.3663, -13.2745, -61.6084, 0.55 ) }
    dend_16 { pt3dadd( -90.8123, -11.0448, -63.5466, 0.28 ) }
    dend_16 { pt3dadd( -92.0038, -10.1559, -64.1205, 0.55 ) }
    dend_16 { pt3dadd( -94.1081, -8.43927, -65.0044, 0.28 ) }
    dend_16 { pt3dadd( -95.0475, -7.61998, -65.3747, 0.55 ) }
    dend_16 { pt3dadd( -97.2096, -5.74114, -66.0786, 0.28 ) }
    dend_16 { pt3dadd( -98.0137, -5.0858, -66.2919, 0.55 ) }
    dend_16 { pt3dadd( -100.995, -2.97988, -66.8481, 0.28 ) }
    dend_16 { pt3dadd( -102.279, -2.26728, -67.0453, 0.55 ) }
    dend_16 { pt3dadd( -104.189, -1.56003, -67.263, 0.55 ) }
    dend_16 { pt3dadd( -105.382, -1.19594, -67.3578, 0.55 ) }
    dend_16 { pt3dadd( -107.828, -0.493417, -67.3515, 0.28 ) }
    dend_16 { pt3dadd( -110.237, 0.191597, -67.1873, 0.28 ) }
    dend_16 { pt3dadd( -112.241, 0.776095, -66.9918, 0.55 ) }
    dend_16 { pt3dadd( -114.627, 1.72868, -66.5054, 0.28 ) }
    dend_16 { pt3dadd( -115.76, 2.36623, -66.1171, 0.55 ) }
    dend_16 { pt3dadd( -118.314, 4.37116, -64.9565, 0.28 ) }
    dend_16 { pt3dadd( -119.512, 5.7269, -64.0325, 0.55 ) }
    dend_16 { pt3dadd( -120.215, 6.77117, -63.2378, 0.28 ) }
    dend_16 { pt3dadd( -120.952, 7.96874, -62.0744, 0.55 ) }
    dend_16 { pt3dadd( -121.825, 9.52967, -60.4534, 0.28 ) }
    dend_16 { pt3dadd( -122.167, 10.0916, -59.8414, 0.55 ) }
    dend_16 { pt3dadd( -124.1, 12.7097, -56.973, 0.28 ) }
    dend_16 { pt3dadd( -124.766, 13.5537, -56.0108, 0.55 ) }
    dend_16 { pt3dadd( -126.361, 15.4749, -53.6526, 0.28 ) }
    dend_16 { pt3dadd( -127.232, 16.5035, -52.37, 0.55 ) }
    dend_16 { pt3dadd( -127.95, 17.3472, -51.3175, 0.55 ) }
    dend_16 { pt3dadd( -128.819, 18.3439, -50.0913, 0.28 ) }
    dend_16 { pt3dadd( -129.306, 18.8492, -49.5594, 0.55 ) }
    dend_16 { pt3dadd( -130.957, 20.607, -47.9193, 0.28 ) }
    dend_16 { pt3dadd( -131.778, 21.6602, -47.054, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -16.6051, -36.116, -6.00609, 0.55 ) }
    dend_15 { pt3dadd( -16.7266, -36.2935, -7.49652, 0.55 ) }
    dend_15 { pt3dadd( -16.7825, -36.3162, -9.00117, 0.55 ) }
    dend_15 { pt3dadd( -16.7399, -36.2306, -10.8789, 0.55 ) }
    dend_15 { pt3dadd( -16.6238, -36.052, -12.4067, 0.55 ) }
    dend_15 { pt3dadd( -15.0035, -33.9919, -22.3419, 0.55 ) }
    dend_15 { pt3dadd( -14.6252, -33.291, -24.5946, 0.55 ) }
    dend_15 { pt3dadd( -14.09, -32.0285, -27.9452, 0.55 ) }
    dend_15 { pt3dadd( -13.7128, -31.0611, -30.3218, 0.55 ) }
    dend_15 { pt3dadd( -13.2842, -30.0014, -32.6197, 0.28 ) }
    dend_15 { pt3dadd( -12.4528, -28.2062, -36.0958, 0.55 ) }
    dend_15 { pt3dadd( -10.9509, -25.4166, -41.1664, 0.28 ) }
    dend_15 { pt3dadd( -10.9241, -25.2453, -41.6549, 0.55 ) }
    dend_15 { pt3dadd( -11.6158, -24.6225, -44.8937, 0.28 ) }
    dend_15 { pt3dadd( -12.4628, -24.2995, -46.9907, 0.55 ) }
    dend_15 { pt3dadd( -13.613, -24.0977, -49.176, 0.55 ) }
    dend_15 { pt3dadd( -15.7623, -23.9511, -53.0759, 0.55 ) }
    dend_15 { pt3dadd( -19.9666, -23.7265, -60.7409, 0.55 ) }
    dend_15 { pt3dadd( -22.706, -23.6456, -65.9374, 0.55 ) }
    dend_15 { pt3dadd( -23.6056, -23.6406, -67.7554, 0.55 ) }
    dend_15 { pt3dadd( -29.2224, -23.5332, -79.8369, 0.55 ) }
    dend_15 { pt3dadd( -30.5988, -23.4669, -83.1696, 0.55 ) }
    dend_15 { pt3dadd( -31.2307, -23.4443, -85.0968, 0.55 ) }
    dend_15 { pt3dadd( -32.3265, -23.5457, -89.7171, 0.55 ) }
    dend_15 { pt3dadd( -34.3728, -24.4151, -100.958, 0.55 ) }
    dend_15 { pt3dadd( -34.8082, -24.7832, -104.009, 0.28 ) }
    dend_15 { pt3dadd( -34.9327, -25.0806, -105.764, 0.55 ) }
    dend_15 { pt3dadd( -35.0793, -25.628, -108.367, 0.28 ) }
    dend_15 { pt3dadd( -35.0704, -25.9633, -109.439, 0.55 ) }
    dend_15 { pt3dadd( -34.302, -27.4913, -112.508, 0.28 ) }
    dend_15 { pt3dadd( -32.8229, -29.5451, -113.947, 0.55 ) }
    dend_15 { pt3dadd( -31.9056, -30.9861, -114.731, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -31.0013, -32.5567, -115.314, 0.55 ) }
    dend_15 { pt3dadd( -30.1871, -34.2422, -115.733, 0.28 ) }
    dend_15 { pt3dadd( -29.861, -35.099, -115.925, 0.55 ) }
    dend_15 { pt3dadd( -29.0795, -37.3316, -116.283, 0.28 ) }
    dend_15 { pt3dadd( -28.9415, -37.9873, -116.45, 0.55 ) }
    dend_15 { pt3dadd( -28.2778, -41.7324, -117.572, 0.28 ) }
    dend_15 { pt3dadd( -28.0515, -43.4563, -118.302, 0.55 ) }
    dend_15 { pt3dadd( -27.6838, -47.1265, -120.281, 0.28 ) }
    dend_15 { pt3dadd( -27.5841, -48.4743, -121.167, 0.55 ) }
    dend_15 { pt3dadd( -27.2604, -52.8994, -124.402, 0.28 ) }
    dend_15 { pt3dadd( -27.2014, -53.9729, -125.231, 0.55 ) }
    dend_15 { pt3dadd( -27.1619, -57.3564, -127.906, 0.28 ) }
    dend_15 { pt3dadd( -27.1575, -58.1487, -128.455, 0.55 ) }
    dend_15 { pt3dadd( -27.1941, -60.2374, -129.852, 0.28 ) }
    dend_15 { pt3dadd( -27.2716, -61.4429, -130.768, 0.55 ) }
    dend_15 { pt3dadd( -27.3661, -62.6245, -131.772, 0.55 ) }
    dend_15 { pt3dadd( -27.5435, -64.9833, -133.761, 0.28 ) }
    dend_15 { pt3dadd( -27.6336, -66.4444, -135.214, 0.55 ) }
    dend_15 { pt3dadd( -27.722, -70.1056, -139.971, 0.28 ) }
    dend_15 { pt3dadd( -27.7433, -71.2932, -141.891, 0.55 ) }
    dend_15 { pt3dadd( -27.7227, -72.0503, -143.212, 0.28 ) }
    dend_15 { pt3dadd( -27.6661, -72.745, -144.55, 0.55 ) }
    dend_15 { pt3dadd( -27.3795, -74.7028, -148.662, 0.28 ) }
    dend_15 { pt3dadd( -27.1123, -76.227, -151.734, 0.55 ) }
    dend_15 { pt3dadd( -26.4509, -79.1455, -156.751, 0.28 ) }
    dend_15 { pt3dadd( -26.2346, -80.0547, -158.327, 0.55 ) }
    dend_15 { pt3dadd( -25.6347, -81.7489, -161.209, 0.28 ) }
    dend_15 { pt3dadd( -25.3811, -82.3112, -162.124, 0.55 ) }
    dend_15 { pt3dadd( -24.7857, -83.2326, -163.437, 0.28 ) }
    dend_15 { pt3dadd( -24.1805, -84.0217, -164.521, 0.55 ) }
    dend_15 { pt3dadd( -22.2763, -86.0239, -167.218, 0.28 ) }
    dend_15 { pt3dadd( -20.022, -88.1755, -170.273, 0.28 ) }
    dend_15 { pt3dadd( -18.7753, -89.1909, -171.721, 0.28 ) }
    dend_15 { pt3dadd( -17.5847, -90.1463, -173.272, 0.55 ) }
    dend_15 { pt3dadd( -15.8298, -91.4137, -175.553, 0.28 ) }
    dend_15 { pt3dadd( -15.0281, -91.961, -176.549, 0.83 ) }
    dend_15 { pt3dadd( -12.9093, -93.4083, -178.992, 0.28 ) }
    dend_15 { pt3dadd( -12.0468, -94.0609, -180.11, 0.55 ) }
    dend_15 { pt3dadd( -8.48533, -97.1337, -185.228, 0.28 ) }
    dend_15 { pt3dadd( -6.87607, -98.6857, -187.97, 0.28 ) }
    dend_15 { pt3dadd( -5.80528, -99.8019, -190.072, 0.55 ) }
    dend_15 { pt3dadd( -5.28755, -100.467, -191.402, 0.55 ) }
    dend_15 { pt3dadd( -4.11401, -102.254, -195.124, 0.28 ) }
    dend_15 { pt3dadd( -3.1371, -104.057, -198.689, 0.55 ) }
    dend_15 { pt3dadd( -2.26465, -105.789, -201.931, 0.28 ) }
    dend_15 { pt3dadd( -1.58373, -107.381, -204.96, 0.55 ) }
    dend_15 { pt3dadd( -1.00632, -108.672, -207.456, 0.28 ) }
    dend_15 { pt3dadd( -0.439052, -109.61, -209.439, 0.55 ) }
    dend_15 { pt3dadd( 1.12091, -111.648, -214.096, 0.28 ) }
    dend_15 { pt3dadd( 1.97852, -112.686, -216.393, 0.55 ) }
    dend_15 { pt3dadd( 3.35325, -114.264, -219.758, 0.28 ) }
    dend_15 { pt3dadd( 4.53815, -115.484, -222.472, 0.55 ) }
    dend_15 { pt3dadd( 7.35567, -118.064, -228.844, 0.28 ) }
    dend_15 { pt3dadd( 8.40449, -118.954, -231.569, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.6001, -150.541, 109.668, 0.55 ) }
    dend_9 { pt3dadd( -11.8456, -158.597, 114.167, 0.55 ) }
    dend_9 { pt3dadd( -9.37255, -167.021, 117.107, 0.55 ) }
    dend_9 { pt3dadd( -7.91988, -175.299, 120.991, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.6001, -150.541, 109.668, 0.55 ) }
    dend_8 { pt3dadd( -12.0624, -156.337, 114.757, 0.55 ) }
    dend_8 { pt3dadd( -13.0905, -161.583, 120.344, 0.55 ) }
    dend_8 { pt3dadd( -14.8138, -165.618, 126.711, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.4616, -150.18, 107.397, 0.55 ) }
    dend_6 { pt3dadd( -16.3015, -157.775, 111.88, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.4616, -150.18, 107.397, 0.55 ) }
    dend_5 { pt3dadd( -18.0524, -156.776, 111.963, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.08469, -94.3438, 3.57277, 0.83 ) }
    dend_25 { pt3dadd( 2.70308, -97.6165, 3.69096, 0.83 ) }
    dend_25 { pt3dadd( 3.42871, -100.386, 3.90514, 0.83 ) }
    dend_25 { pt3dadd( 4.14999, -103.139, 4.11804, 0.83 ) }
    dend_25 { pt3dadd( 4.83498, -105.754, 4.32023, 0.83 ) }
    dend_25 { pt3dadd( 5.89058, -109.783, 4.6318, 0.83 ) }
    dend_25 { pt3dadd( 6.93857, -113.784, 4.94113, 0.83 ) }
    dend_25 { pt3dadd( 7.97377, -116.451, 5.33706, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.08469, -94.3438, 3.57277, 0.55 ) }
    dend_24 { pt3dadd( 3.12682, -96.405, 2.90708, 0.55 ) }
    dend_24 { pt3dadd( 3.78868, -98.0081, 2.1709, 0.55 ) }
    dend_24 { pt3dadd( 4.17638, -99.1875, 1.55793, 0.55 ) }
    dend_24 { pt3dadd( 4.37338, -100.551, 0.800642, 0.83 ) }
    dend_24 { pt3dadd( 4.41767, -102.089, -0.164346, 0.55 ) }
    dend_24 { pt3dadd( 4.46099, -103.594, -1.10823, 0.83 ) }
    dend_24 { pt3dadd( 4.35422, -105.215, -2.21169, 0.55 ) }
    dend_24 { pt3dadd( 4.24582, -106.155, -2.92472, 0.83 ) }
    dend_24 { pt3dadd( 3.66596, -109.179, -5.36691, 0.55 ) }
    dend_24 { pt3dadd( 2.96806, -111.535, -7.30957, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.420676, -109.137, 54.9306, 0.55 ) }
    dend_20 { pt3dadd( -0.95347, -115.762, 61.5712, 0.55 ) }
    dend_20 { pt3dadd( -2.00099, -121.237, 69.1339, 0.55 ) }
    dend_20 { pt3dadd( -3.01764, -125.748, 77.3122, 0.55 ) }
    dend_20 { pt3dadd( -4.20969, -129.036, 86.0321, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.420676, -109.137, 54.9306, 0.55 ) }
    dend_19 { pt3dadd( -0.329725, -115.663, 61.7285, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 7.97377, -116.451, 5.33706, 0.55 ) }
    dend_27 { pt3dadd( 8.29059, -118.434, 5.72572, 0.55 ) }
    dend_27 { pt3dadd( 8.78813, -120.972, 6.21262, 0.55 ) }
    dend_27 { pt3dadd( 9.24853, -123.369, 6.66297, 0.55 ) }
    dend_27 { pt3dadd( 9.54355, -125.07, 6.98054, 0.55 ) }
    dend_27 { pt3dadd( 10.0126, -128.103, 7.54142, 0.55 ) }
    dend_27 { pt3dadd( 11.2537, -136.64, 8.87745, 0.55 ) }
    dend_27 { pt3dadd( 11.6277, -139.545, 9.19638, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 11.8198, -141.593, 9.34753, 0.55 ) }
    dend_27 { pt3dadd( 11.9117, -143.933, 9.38222, 0.55 ) }
    dend_27 { pt3dadd( 11.8431, -145.737, 9.32604, 0.55 ) }
    dend_27 { pt3dadd( 11.6341, -149.966, 8.98619, 0.55 ) }
    dend_27 { pt3dadd( 11.3991, -153.166, 8.80898, 0.55 ) }
    dend_27 { pt3dadd( 11.3284, -155.273, 8.69112, 0.55 ) }
    dend_27 { pt3dadd( 11.3418, -160.737, 8.58388, 0.55 ) }
    dend_27 { pt3dadd( 11.4577, -164.409, 8.63619, 0.55 ) }
    dend_27 { pt3dadd( 11.8215, -169.149, 8.86151, 0.55 ) }
    dend_27 { pt3dadd( 12.5902, -174.537, 9.3362, 0.55 ) }
    dend_27 { pt3dadd( 13.3752, -178.152, 9.67754, 0.55 ) }
    dend_27 { pt3dadd( 13.915, -180.294, 9.87794, 0.55 ) }
    dend_27 { pt3dadd( 14.3848, -182.265, 10.0862, 0.55 ) }
    dend_27 { pt3dadd( 14.9194, -184.763, 10.2421, 0.55 ) }
    dend_27 { pt3dadd( 15.858, -190.777, 10.4065, 0.55 ) }
    dend_27 { pt3dadd( 16.2075, -193.11, 10.3554, 0.55 ) }
    dend_27 { pt3dadd( 16.5437, -195.703, 10.3331, 0.55 ) }
    dend_27 { pt3dadd( 17.0128, -199.593, 10.3104, 0.55 ) }
    dend_27 { pt3dadd( 17.3051, -202.571, 10.4154, 0.55 ) }
    dend_27 { pt3dadd( 17.4494, -205.384, 10.6139, 0.55 ) }
    dend_27 { pt3dadd( 17.5097, -208.055, 10.8936, 0.55 ) }
    dend_27 { pt3dadd( 17.5681, -210.658, 11.2251, 0.55 ) }
    dend_27 { pt3dadd( 17.603, -212.512, 11.4404, 0.55 ) }
    dend_27 { pt3dadd( 17.5931, -215.545, 11.7089, 0.55 ) }
    dend_27 { pt3dadd( 17.3376, -219.179, 11.886, 0.55 ) }
    dend_27 { pt3dadd( 17.1427, -220.947, 11.8488, 0.55 ) }
    dend_27 { pt3dadd( 16.8934, -222.501, 11.725, 0.55 ) }
    dend_27 { pt3dadd( 16.3793, -225.442, 11.2732, 0.55 ) }
    dend_27 { pt3dadd( 16.0017, -227.304, 10.9666, 0.55 ) }
    dend_27 { pt3dadd( 15.6191, -229.603, 10.6269, 0.55 ) }
    dend_27 { pt3dadd( 15.3843, -231.213, 10.4995, 0.55 ) }
    dend_27 { pt3dadd( 14.8486, -235.396, 10.3348, 0.55 ) }
    dend_27 { pt3dadd( 14.5671, -238.523, 10.4199, 0.55 ) }
    dend_27 { pt3dadd( 14.3795, -243.36, 10.8782, 0.55 ) }
    dend_27 { pt3dadd( 14.5267, -246.491, 11.3198, 0.55 ) }
    dend_27 { pt3dadd( 14.7455, -249.776, 11.8739, 0.28 ) }
    dend_27 { pt3dadd( 14.8531, -251.094, 12.1577, 0.28 ) }
    dend_27 { pt3dadd( 15.3245, -254.294, 13.0525, 0.28 ) }
    dend_27 { pt3dadd( 15.9198, -257.25, 14.057, 0.28 ) }
    dend_27 { pt3dadd( 17.2505, -261.195, 15.3818, 0.28 ) }
    dend_27 { pt3dadd( 19.3004, -270.157, 15.9876, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 7.97377, -116.451, 5.33706, 0.55 ) }
    dend_26 { pt3dadd( 9.75609, -117.328, 4.63877, 0.55 ) }
    dend_26 { pt3dadd( 13.5461, -119.45, 3.46957, 0.55 ) }
    dend_26 { pt3dadd( 16.8775, -121.48, 2.5973, 0.28 ) }
    dend_26 { pt3dadd( 20.5007, -123.76, 1.76198, 0.55 ) }
    dend_26 { pt3dadd( 22.838, -125.188, 1.51271, 0.28 ) }
    dend_26 { pt3dadd( 27.0674, -127.729, 1.38636, 0.55 ) }
    dend_26 { pt3dadd( 29.0464, -129.011, 1.74626, 0.28 ) }
    dend_26 { pt3dadd( 29.8151, -129.47, 1.96954, 0.28 ) }
    dend_26 { pt3dadd( 31.1608, -130.136, 2.35461, 0.55 ) }
    dend_26 { pt3dadd( 36.2966, -132.387, 3.52227, 0.28 ) }
    dend_26 { pt3dadd( 38.4584, -133.28, 3.9459, 0.55 ) }
    dend_26 { pt3dadd( 44.7376, -135.924, 4.64322, 0.28 ) }
    dend_26 { pt3dadd( 48.0667, -137.261, 4.81493, 0.28 ) }
    dend_26 { pt3dadd( 52.1184, -138.982, 4.83406, 0.55 ) }
    dend_26 { pt3dadd( 57.9299, -141.659, 4.43809, 0.28 ) }
    dend_26 { pt3dadd( 58.6809, -142.02, 4.31265, 0.55 ) }
    dend_26 { pt3dadd( 62.265, -143.795, 3.47593, 0.28 ) }
    dend_26 { pt3dadd( 62.5726, -143.961, 3.36868, 0.55 ) }
    dend_26 { pt3dadd( 65.2993, -145.81, 2.53727, 0.28 ) }
    dend_26 { pt3dadd( 66.6296, -146.793, 2.22525, 0.55 ) }
    dend_26 { pt3dadd( 77.6774, -154.18, -0.320322, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.20969, -129.036, 86.0321, 0.55 ) }
    dend_22 { pt3dadd( -4.16506, -132.176, 94.2737, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.20969, -129.036, 86.0321, 0.55 ) }
    dend_21 { pt3dadd( -6.48677, -133.889, 91.7205, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 9
    dend_48 nseg = 7
    dend_45 nseg = 5
    dend_42 nseg = 7
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 7
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 7
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 15
    dend_27 nseg = 7
    dend_26 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_BP_ff30c6d80e_0_0


