// Cell: cNAC187_L6_NBC_4225ab5b52_0_0
/*
{
  "id" : "cNAC187_L6_NBC_4225ab5b52_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.79996, 1.63899, 0.0, 2.31456", "-7.07575, 1.4414, 0.0, 3.87478", "-6.35154, 1.2438, 0.0, 5.48504", "-5.62733, 1.04621, 0.0, 6.75924", "-4.90312, 0.848615, 0.0, 7.77214", "-4.17891, 0.65102, 0.0, 8.39732", "-3.4547, 0.453425, 0.0, 9.01032", "-2.73049, 0.255831, 0.0, 9.61582", "-2.00628, 0.0582363, 0.0, 9.97495", "-1.28207, -0.139358, 0.0, 10.1182", "-0.557856, -0.336953, 0.0, 10.2615", "0.166353, -0.534547, 0.0, 10.4039", "0.890563, -0.732142, 0.0, 10.3605", "1.61477, -0.929737, 0.0, 10.3021", "2.33898, -1.12733, 0.0, 10.2398", "3.06319, -1.32493, 0.0, 10.0638", "3.7874, -1.52252, 0.0, 9.71016", "4.51161, -1.72011, 0.0, 8.98989", "5.23582, -1.91771, 0.0, 7.92103", "5.96003, -2.1153, 0.0, 6.49304", "6.68424, -2.3129, 0.0, 3.64119" ]
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "2.72858, -5.60222, 7.36, 1.36", "2.72858, -5.60222, 7.36, 1.36", "3.09135, -7.71831, 7.08779, 1.14", "3.58242, -10.5829, 6.7193, 0.91", "4.21896, -14.2959, 6.24167, 0.91", "4.60355, -16.5393, 5.95308, 0.91", "5.19542, -19.9918, 5.50896, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.14142, -3.24473, -3.98, 0.68", "-1.14142, -3.24473, -3.98, 0.68", "-2.06277, -4.05273, -5.55948, 0.68", "-2.93156, -4.70965, -7.05775, 0.68", "-3.56953, -5.17683, -8.14006, 0.68", "-4.30827, -5.69649, -9.38966, 0.68", "-5.15262, -6.22721, -10.7476, 0.68", "-5.99895, -6.72157, -12.1173, 0.68", "-6.76803, -7.10437, -13.3773, 0.68", "-7.60426, -7.46748, -14.7106, 0.68", "-8.55213, -7.85319, -16.1541, 0.68", "-9.66267, -8.26877, -17.7538, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "4.57856, -4.08522, 2.8, 0.68", "4.57856, -4.08522, 2.8, 0.68", "6.55037, -6.84731, 3.2861, 0.68", "7.64294, -8.45182, 3.59492, 0.68", "9.60468, -11.3441, 4.19516, 0.68", "11.2912, -13.7239, 4.67915, 0.68", "13.0858, -16.1962, 5.13984, 0.68", "14.428, -17.9779, 5.44821, 0.68", "16.4726, -20.58, 5.90164, 0.45", "18.3927, -23.0569, 6.35317, 0.68", "21.2305, -26.7205, 7.15486, 0.68", "23.2923, -29.3218, 7.82706, 0.68", "24.7409, -31.1633, 8.39059, 0.68", "26.0364, -32.7817, 8.9604, 0.68", "27.3498, -34.4454, 9.59261, 0.68", "29.015, -36.6044, 10.4729, 0.68", "30.4689, -38.4591, 11.3531, 0.68", "32.1639, -40.5427, 12.4893, 0.45", "33.3706, -41.9944, 13.3307, 0.45", "35.491, -44.4705, 14.7428, 0.45", "37.2803, -46.4278, 15.8773, 0.45", "38.6239, -47.8431, 16.7404, 0.45", "39.82, -49.053, 17.5601, 0.45", "41.339, -50.5892, 18.7721, 0.45", "42.9415, -52.3714, 20.308, 0.45", "44.0714, -53.6958, 21.598, 0.45", "44.8917, -54.8058, 22.6504, 0.45", "45.7857, -56.1021, 23.7717, 0.45", "46.7833, -57.6251, 25.0061, 0.45", "48.0472, -59.6635, 26.6243, 0.45", "48.9779, -61.2909, 27.897, 0.45", "49.8629, -62.9053, 29.1821, 0.23", "50.8397, -64.6174, 30.5167, 0.23", "51.9776, -66.4925, 31.9493, 0.23", "52.7213, -67.6819, 32.8291, 0.23", "53.4792, -68.9643, 33.8185, 0.23", "54.7159, -71.298, 35.6028, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "6.16864, 1.51128, -0.84, 2.27", "6.16864, 1.51128, -0.84, 2.27", "7.57844, 2.2858, -1.70584, 1.82", "9.48515, 3.33331, -2.87686, 1.36", "10.9272, 4.12553, -3.7625, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "3.79865, -4.68997, 5.46, 0.91", "3.79865, -4.68997, 5.46, 0.91", "5.0027, -6.06528, 6.16617, 0.91", "6.38133, -7.55888, 7.01167, 0.68", "7.78094, -8.93323, 7.9289, 0.68", "8.84762, -9.91312, 8.68513, 0.91", "10.0036, -10.8623, 9.57526, 0.91", "11.191, -11.5768, 10.5223, 0.68", "12.6684, -12.1057, 11.7334, 0.68", "13.8724, -12.4041, 12.7614, 0.68", "14.5332, -12.5565, 13.3348, 0.68", "15.8904, -12.8641, 14.5018, 0.68", "17.976, -13.3529, 16.1532, 0.45", "19.4808, -13.7344, 17.2287, 0.45", "21.0633, -14.174, 18.198, 0.45", "22.6365, -14.6886, 19.0883, 0.45", "24.3881, -15.344, 20.0019, 0.45", "25.719, -15.936, 20.6419, 0.45", "27.5796, -16.8649, 21.5079, 0.68", "29.7615, -17.9407, 22.4143, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "0.288636, -4.61823, 6.82, 0.91", "0.288636, -4.61823, 6.82, 0.91", "-1.02057, -6.60813, 7.87044, 0.91", "-2.35762, -8.48266, 8.93512, 0.91", "-3.54784, -10.1514, 9.88288, 0.91", "-4.56036, -11.5709, 10.6891, 0.91", "-5.63381, -13.0759, 11.5439, 0.91", "-6.60398, -14.3867, 12.3569, 0.91", "-7.54462, -15.5364, 13.2442, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.31134, 0.681023, 6.86, 0.91", "-6.31134, 0.681023, 6.86, 0.91", "-7.19611, 0.681023, 7.19998, 0.91", "-9.15283, 0.681023, 7.95185, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.99139, 1.57278, -3.54, 0.91", "-6.99139, 1.57278, -3.54, 0.91", "-8.27092, 1.76552, -3.88009, 0.91", "-9.82959, 1.91485, -4.31765, 0.91", "-12.0161, 2.08119, -5.009, 0.91", "-13.1449, 2.14928, -5.40451, 0.91", "-14.8715, 2.21935, -6.04997, 0.91", "-16.4882, 2.22958, -6.69815, 0.91", "-18.0606, 2.20004, -7.34808, 0.91", "-19.8669, 2.12629, -8.11712, 0.68", "-22.0219, 1.98963, -9.05654, 0.91", "-23.6204, 1.88255, -9.76956, 0.91", "-25.4048, 1.79092, -10.6043, 0.91", "-28.056, 1.69138, -11.821, 0.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.04144, 4.21728, 5.18, 0.91", "-4.04144, 4.21728, 5.18, 0.91", "-4.97909, 6.52825, 6.42977, 0.91", "-5.5141, 8.44799, 7.35907, 0.68", "-5.8074, 10.2501, 8.13442, 0.68", "-5.92455, 11.5891, 8.67719, 0.68", "-5.9882, 13.4026, 9.37813, 0.68", "-5.8998, 15.068, 10.0086, 0.68", "-5.59583, 17.3664, 10.9168, 0.68", "-5.28432, 19.5823, 11.8056, 0.68", "-5.04425, 21.131, 12.4707, 0.68", "-4.83245, 22.524, 13.1511, 0.68", "-4.60559, 24.0506, 13.9838, 0.68", "-4.41948, 25.4947, 14.8839, 0.45", "-4.21877, 27.2676, 16.2117, 0.45", "-4.16222, 28.8515, 17.6136, 0.45", "-4.16964, 30.1338, 18.8525, 0.45", "-4.18836, 31.1977, 19.9065, 0.68", "-4.19994, 32.2893, 20.9498, 0.45", "-4.20295, 33.5199, 22.0556, 0.45", "-4.2958, 34.4201, 22.8673, 0.45", "-4.67368, 35.7248, 24.0209, 0.45", "-5.08, 36.8359, 25.0323, 0.45", "-5.50018, 38.1804, 26.2281, 0.45", "-5.76756, 39.3839, 27.1908, 0.45", "-6.10086, 40.9487, 28.3538, 0.45", "-6.41778, 42.149, 29.2834, 0.45", "-6.82552, 43.1832, 30.1798, 0.45", "-7.52799, 44.5988, 31.481, 0.45", "-8.06782, 45.6206, 32.436, 0.45", "-8.5561, 46.7069, 33.4259, 0.45", "-8.81334, 47.5189, 34.1277, 0.45", "-9.26349, 49.296, 35.5717, 0.45", "-9.5745, 50.6911, 36.6234, 0.45", "-9.71681, 51.5908, 37.3257, 0.45", "-9.62915, 52.8547, 38.2541, 0.45", "-9.28748, 54.2292, 39.2056, 0.45", "-8.74627, 55.7347, 40.233, 0.45", "-8.19443, 57.0651, 41.0997, 0.45", "-7.4136, 58.7188, 42.173, 0.45", "-6.16932, 61.3219, 43.8917, 0.23", "-5.70409, 62.2327, 44.514, 0.23", "-5.01859, 63.5262, 45.3857, 0.23", "-4.26041, 64.8879, 46.2491, 0.23", "-3.44769, 66.3004, 47.0708, 0.23", "-2.64431, 67.66, 47.8133, 0.23", "-1.55614, 69.567, 48.8619, 0.23", "-0.280931, 71.6618, 49.9797, 0.23", "0.988797, 73.5798, 50.9875, 0.23", "2.22134, 75.3102, 51.9353, 0.23", "3.17465, 76.7359, 52.6682, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999995616860894,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.68424, -2.3129, 0.0, 0.767569", "21.1553, -6.2612, 0.0, 0.767569", "35.6263, -10.2095, 0.0, 0.767569" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "5.19542, -19.9918, 5.50896, 0.68", "6.32799, -20.9871, 5.52597, 0.68", "8.30252, -22.7653, 5.46388, 0.68", "10.2086, -24.5365, 5.37177, 0.68", "11.9406, -26.1651, 5.29131, 0.68", "14.0822, -28.3084, 5.1949, 0.68", "15.9776, -30.3722, 5.10777, 0.68", "17.6352, -32.3693, 4.99542, 0.68", "18.6135, -33.6527, 4.89774, 0.68", "20.3761, -36.1102, 4.67907, 0.68", "21.985, -38.4386, 4.4567, 0.68", "23.2949, -40.4844, 4.26685, 0.68", "24.6437, -42.7521, 4.11676, 0.45", "25.7691, -44.8058, 3.97578, 0.45", "26.8328, -46.8812, 3.73345, 0.45", "27.748, -48.6978, 3.39736, 0.45", "29.0484, -51.1005, 2.74913, 0.45", "30.0889, -52.9906, 2.10608, 0.45", "31.1194, -54.8936, 1.32852, 0.68", "32.1867, -56.7696, 0.455244, 0.68", "33.4264, -58.8207, -0.582667, 0.68", "34.7463, -60.7787, -1.64566, 0.45", "36.1723, -62.6342, -2.69452, 0.45", "37.1694, -63.8862, -3.35986, 0.45", "38.9445, -66.0099, -4.32336, 0.45", "39.7855, -66.9782, -4.67277, 0.45", "40.9717, -68.2711, -5.06055, 0.45", "42.4884, -69.7867, -5.47957, 0.45", "44.594, -71.6393, -6.05247, 0.45", "46.5665, -73.1994, -6.644, 0.45", "48.585, -74.7165, -7.38197, 0.45", "49.8941, -75.5951, -7.91984, 0.45", "51.441, -76.5191, -8.6018, 0.45", "53.4997, -77.6756, -9.57028, 0.45", "55.7882, -78.9431, -10.7416, 0.45", "58.0711, -80.309, -11.9736, 0.45", "59.5918, -81.233, -12.8513, 0.45", "61.0977, -82.177, -13.735, 0.45", "61.9897, -82.7612, -14.2584, 0.45", "63.297, -83.6505, -14.9891, 0.45", "64.8992, -84.8287, -15.8758, 0.45", "66.5631, -86.0711, -16.8188, 0.23", "68.1417, -87.3241, -17.7439, 0.23", "69.4668, -88.3942, -18.5629, 0.23", "70.9353, -89.6684, -19.5854, 0.23", "72.6252, -91.3306, -20.8648, 0.23", "74.4024, -93.3353, -22.2585, 0.23", "74.7723, -93.7799, -22.5307, 0.23", "75.6108, -94.8306, -23.1084, 0.23", "77.1048, -96.8187, -24.1024, 0.23", "78.318, -98.548, -24.9064, 0.23", "80.1166, -101.164, -26.0512, 0.23", "81.6197, -103.48, -27.0265, 0.23", "82.8801, -105.543, -27.9227, 0.23", "84.3083, -108.097, -29.0262, 0.23", "85.4191, -110.125, -29.9058, 0.23", "85.8996, -111.079, -30.324, 0.23", "86.4391, -112.351, -30.8401, 0.23", "87.2502, -114.378, -31.5659, 0.23", "87.8573, -115.829, -32.0306, 0.23", "88.8746, -118.173, -32.6507, 0.23", "89.9776, -120.565, -33.1459, 0.23", "91.1984, -123.072, -33.523, 0.23", "92.2616, -125.131, -33.7377, 0.23", "92.8376, -126.158, -33.8088, 0.23", "94.0184, -128.096, -33.9129, 0.23", "95.5522, -130.614, -34.0359, 0.23", "96.9706, -132.756, -34.1471, 0.23", "98.0958, -134.305, -34.2481, 0.23", "98.9997, -135.528, -34.3421, 0.23", "99.9657, -136.856, -34.464, 0.23", "100.977, -138.303, -34.6458, 0.23", "103.186, -141.852, -35.2302, 0.23", "104.717, -144.701, -35.7378, 0.23", "105.65, -146.719, -36.1438, 0.23", "106.426, -148.633, -36.5653, 0.23", "107.338, -151.151, -37.165, 0.23", "108.324, -154.058, -37.87, 0.23", "109.937, -159.525, -39.2213, 0.23", "110.637, -162.168, -39.8805, 0.23", "111.217, -164.37, -40.4534, 0.23", "111.644, -165.899, -40.8617, 0.23", "120.08, -174.336, -42.6258, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.19542, -19.9918, 5.50896, 0.45", "4.85894, -21.5647, 3.76709, 0.45", "4.6709, -23.0234, 2.03724, 0.45", "4.57044, -23.7411, 1.17961, 0.45", "4.39012, -25.1574, -0.425983, 0.45", "4.32238, -26.3058, -1.73302, 0.45", "4.33864, -27.4026, -2.97436, 0.45", "4.50261, -28.4301, -4.13377, 0.45", "4.81533, -29.4335, -5.24065, 0.45", "5.28566, -30.5203, -6.37266, 0.45", "6.17977, -32.2876, -8.04471, 0.45", "6.88425, -33.6707, -9.23894, 0.45", "7.52449, -35.119, -10.408, 0.45", "8.14, -36.4122, -11.51, 0.45", "8.93492, -37.9852, -12.9674, 0.45", "9.32386, -38.8305, -13.8513, 0.45", "9.76145, -39.991, -15.0937, 0.45", "10.2349, -41.4047, -16.8315, 0.23", "10.7587, -43.1617, -19.2407, 0.23", "11.1575, -44.4664, -21.1556, 0.23", "11.6166, -45.9408, -23.4847, 0.23", "11.875, -46.7421, -24.7992, 0.23", "12.3542, -48.4619, -27.6018, 0.23", "12.6734, -49.8295, -29.7722, 0.23", "12.918, -51.3124, -31.9332, 0.23", "13.1806, -52.9905, -34.3414, 0.23", "13.3451, -54.0414, -35.8108, 0.23", "13.5732, -55.813, -38.2988, 0.23", "13.6375, -56.7537, -39.4801, 0.23", "13.6423, -57.9258, -40.9416, 0.23", "14.6538, -66.1424, -47.624, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.66267, -8.26877, -17.7538, 0.45", "-10.9314, -8.74057, -18.9441, 0.45", "-12.041, -9.10503, -19.9831, 0.45", "-12.9777, -9.41548, -20.8801, 0.45", "-13.937, -9.73492, -21.7288, 0.45", "-15.0686, -10.1352, -22.7271, 0.45", "-16.0649, -10.4723, -23.6106, 0.45", "-17.2484, -10.8447, -24.7446, 0.45", "-18.3971, -11.1756, -25.89, 0.45", "-20.0125, -11.6598, -27.5247, 0.45", "-20.9235, -11.9494, -28.4724, 0.45", "-22.0998, -12.3713, -29.7638, 0.45", "-23.004, -12.7286, -30.8583, 0.45", "-23.7196, -13.0186, -31.7995, 0.45", "-24.4821, -13.3272, -32.8843, 0.45", "-25.1597, -13.6224, -33.9982, 0.45", "-25.8482, -13.9434, -35.1356, 0.45", "-26.5889, -14.412, -36.4308, 0.45", "-33.6688, -16.2469, -44.1148, 0.45", "-40.1627, -16.3667, -52.4939, 0.45", "-45.7143, -15.8471, -61.5114, 0.45" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-9.66267, -8.26877, -17.7538, 0.45", "-9.34193, -9.1635, -18.8509, 0.45", "-9.11984, -9.89383, -19.7708, 0.45", "-8.82046, -11.14, -21.2793, 0.45", "-8.55539, -12.1642, -22.588, 0.45", "-8.37547, -12.8131, -23.5004, 0.45", "-8.13774, -13.5215, -24.5744, 0.45", "-7.79866, -14.2904, -25.9579, 0.45", "-7.64116, -14.6086, -26.5611, 0.45", "-7.29646, -15.402, -27.8925, 0.45", "-7.0286, -16.2321, -29.0568, 0.45", "-6.78525, -17.2815, -30.2768, 0.45", "-6.63071, -18.1667, -31.0559, 0.45", "-6.48531, -18.8924, -31.6598, 0.45", "-6.12807, -20.3029, -32.9447, 0.45", "-5.76739, -21.5786, -34.1249, 0.45", "-5.30625, -22.7997, -35.3408, 0.45", "-4.72923, -23.8517, -36.6767, 0.45", "-3.82934, -25.016, -38.7529, 0.45", "-2.96775, -25.8043, -40.7097, 0.23", "-2.63648, -26.0241, -41.4715, 0.23", "-2.04687, -26.3125, -42.9475, 0.23", "-1.32331, -26.6479, -44.7851, 0.23", "-0.464013, -27.047, -47.0707, 0.23", "-0.121174, -27.2719, -48.0538, 0.23", "0.498316, -27.8142, -50.0617, 0.23", "0.895057, -28.2252, -51.4976, 0.23", "1.50672, -28.8871, -53.9623, 0.23", "3.04237, -33.4051, -62.3377, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.9272, 4.12553, -3.7625, 1.36", "11.0038, 4.14409, -3.78399, 1.36", "12.3882, 4.47926, -4.17194, 1.82" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.9272, 4.12553, -3.7625, 0.45", "10.0725, 4.37488, -4.69203, 0.45", "9.16792, 4.63673, -5.55347, 0.45", "7.95627, 5.02872, -6.68898, 0.45", "7.02438, 5.41156, -7.58826, 0.45", "6.17433, 5.79015, -8.43421, 0.45", "5.29546, 6.22303, -9.3927, 0.45", "4.52636, 6.64103, -10.4094, 0.45", "4.10319, 6.96567, -11.1766, 0.45", "3.66505, 7.45899, -12.3732, 0.45", "3.25904, 8.0761, -13.9675, 0.45", "2.92589, 8.73888, -15.838, 0.45", "2.56434, 9.5325, -18.3354, 0.45", "2.2813, 10.1719, -20.6023, 0.45", "1.98985, 10.6821, -22.7046, 0.45", "1.61263, 11.1851, -25.0974, 0.45", "1.17234, 11.6681, -27.4241, 0.45", "0.803877, 11.9569, -28.8608, 0.45", "0.427109, 12.1657, -29.8825, 0.45", "-0.397484, 12.5335, -31.6451, 0.45", "-1.17442, 12.8715, -33.075, 0.45", "-1.88007, 13.1704, -34.263, 0.45", "-2.61239, 13.4601, -35.494, 0.45", "-3.47881, 13.82, -36.936, 0.45", "-4.01972, 14.055, -37.8536, 0.45", "-5.02266, 14.5201, -39.7654, 0.23", "-5.76832, 14.932, -41.3304, 0.23", "-7.07553, 15.7925, -44.3932, 0.23", "-7.71231, 16.2386, -45.9631, 0.23", "-8.42768, 16.7782, -47.836, 0.23", "-9.45423, 17.6006, -50.5693, 0.23", "-10.1999, 18.236, -52.5366, 0.23", "-11.1099, 19.1417, -55.0223, 0.23", "-11.8405, 20.0448, -57.1728, 0.23", "-15.6056, 24.0622, -66.0699, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "29.7615, -17.9407, 22.4143, 0.45", "30.2871, -18.5015, 23.2017, 0.45", "31.187, -19.1868, 24.4685, 0.45", "32.2283, -19.8088, 25.8343, 0.45", "32.7861, -20.1431, 26.5264, 0.45", "33.5241, -20.5978, 27.4699, 0.45", "34.4391, -21.174, 28.7148, 0.45", "35.5648, -21.8326, 30.3407, 0.45", "36.2289, -22.2019, 31.3141, 0.45", "36.9509, -22.5787, 32.4241, 0.45", "37.6156, -22.8963, 33.4956, 0.45", "38.3261, -23.2027, 34.6287, 0.45", "39.1234, -23.5823, 35.8772, 0.45", "40.0154, -23.9764, 37.1745, 0.45", "40.85, -24.2352, 38.2785, 0.45", "41.8166, -24.4628, 39.4261, 0.45", "42.9353, -24.7288, 40.5755, 0.45", "44.2638, -25.0301, 41.7276, 0.45", "45.8909, -25.2668, 42.918, 0.45", "47.4621, -25.3554, 44.0007, 0.23", "48.9261, -25.4141, 44.962, 0.23", "50.3882, -25.4612, 45.8542, 0.23", "52.4031, -25.4585, 47.0386, 0.23", "55.6707, -25.3229, 48.918, 0.23", "58.3006, -25.1655, 50.3864, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "29.7615, -17.9407, 22.4143, 0.45", "31.6161, -18.9936, 22.7143, 0.45", "32.558, -19.4191, 22.904, 0.45", "34.4901, -20.27, 23.2813, 0.23", "36.0202, -20.8904, 23.5635, 0.23", "37.4163, -21.3609, 23.8076, 0.68", "39.2457, -21.9236, 24.1247, 0.45", "41.4148, -22.4395, 24.5086, 0.45", "44.004, -22.9009, 24.9772, 0.45", "45.653, -23.1234, 25.2779, 0.45", "47.749, -23.3315, 25.6824, 0.45", "50.2517, -23.5507, 26.1699, 0.45", "52.4008, -23.7005, 26.5719, 0.45", "53.6735, -23.7749, 26.8201, 0.45", "54.9043, -23.7744, 27.1045, 0.45", "56.1769, -23.8102, 27.4384, 0.45" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.54462, -15.5364, 13.2442, 0.45", "-7.68239, -15.2853, 14.0226, 0.45", "-8.01286, -15.0556, 15.5605, 0.45", "-8.27766, -15.1118, 16.6328, 0.45", "-8.58283, -15.3862, 17.6921, 0.45", "-8.72743, -15.5274, 18.1265, 0.45", "-8.94364, -15.7637, 18.8409, 0.45", "-9.25286, -16.2713, 20.0686, 0.45", "-9.47263, -16.733, 20.9619, 0.45", "-9.7071, -17.4011, 22.0647, 0.45", "-9.74192, -17.6899, 22.5397, 0.45", "-9.72288, -18.2262, 23.4377, 0.45", "-9.65527, -18.8402, 24.5141, 0.45", "-9.56245, -19.6132, 25.8573, 0.45", "-9.42958, -20.277, 26.9578, 0.45", "-9.18805, -21.0236, 28.2721, 0.45", "-8.91586, -21.6907, 29.4662, 0.45", "-8.62364, -22.2808, 30.5526, 0.45", "-8.2962, -22.8388, 31.6711, 0.45", "-7.96316, -23.3477, 32.8923, 0.45", "-7.67827, -23.8825, 34.3214, 0.45", "-7.54429, -24.2343, 35.1685, 0.45", "-7.46771, -24.5566, 35.9175, 0.45", "-7.51918, -25.0389, 36.9797, 0.45", "-7.82752, -25.6245, 38.1433, 0.45", "-8.14712, -26.0849, 38.8885, 0.45", "-8.69103, -26.8372, 39.8979, 0.45", "-9.56522, -27.8162, 41.2301, 0.45", "-10.3578, -28.5981, 42.3072, 0.45", "-10.9096, -29.1841, 43.0596, 0.45", "-11.5525, -29.9154, 43.9779, 0.45", "-12.0805, -30.5047, 44.7327, 0.45", "-13.0105, -31.4768, 45.9637, 0.45", "-13.5484, -32.1426, 46.7159, 0.45", "-14.3226, -33.3873, 47.9483, 0.45", "-14.9834, -34.5432, 49.0605, 0.45", "-15.243, -35.0191, 49.5428, 0.45", "-15.6463, -35.9682, 50.5428, 0.45", "-15.8725, -37.0449, 51.6518, 0.45", "-15.8297, -38.1465, 52.8696, 0.45", "-15.6303, -38.8162, 53.6711, 0.45", "-15.1727, -39.5177, 54.4311, 0.45", "-14.4476, -40.1521, 55.0859, 0.45", "-12.919, -41.0417, 55.9568, 0.45", "-11.2244, -41.7316, 56.633, 0.45", "-9.35011, -42.2586, 57.1668, 0.23", "-6.75951, -42.9515, 57.7796, 0.23", "-3.68805, -43.7487, 58.3553, 0.23", "-1.50239, -44.2303, 58.6577, 0.23", "-0.0486871, -44.4194, 58.7702, 0.23", "1.72677, -44.5185, 58.8033, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.54462, -15.5364, 13.2442, 0.68", "-8.75223, -16.1725, 13.7939, 0.68", "-11.1286, -17.3868, 14.821, 0.45", "-13.2319, -18.5306, 15.6897, 0.45", "-15.0454, -19.5722, 16.4423, 0.68", "-16.6806, -20.5971, 17.137, 0.68", "-17.5658, -21.1788, 17.5155, 0.68", "-19.2469, -22.3363, 18.2116, 0.45", "-21.6212, -24.0412, 19.1342, 0.45", "-22.9968, -25.0853, 19.6205, 0.45", "-24.6396, -26.3683, 20.1405, 0.45", "-26.2793, -27.6408, 20.6088, 0.45", "-27.6726, -28.7593, 20.9928, 0.45", "-29.303, -30.1051, 21.448, 0.68", "-30.7319, -31.2678, 21.8103, 0.68", "-33.2232, -33.2729, 22.4359, 0.68", "-35.5369, -35.1445, 23.0668, 0.45", "-37.6929, -36.986, 23.7117, 0.45", "-39.2547, -38.3733, 24.2186, 0.45", "-40.5942, -39.5905, 24.669, 0.45", "-42.6106, -41.4058, 25.3555, 0.45", "-44.1719, -42.7981, 25.8625, 0.45", "-46.1326, -44.4844, 26.4748, 0.45", "-46.9816, -45.1935, 26.7338, 0.45", "-48.5157, -46.5036, 27.1865, 0.45", "-49.744, -47.5399, 27.5275, 0.45", "-51.1512, -48.6634, 27.8456, 0.45", "-52.463, -49.641, 28.0993, 0.45", "-54.304, -50.8761, 28.4016, 0.45", "-56.0054, -51.9657, 28.6358, 0.45", "-57.8349, -53.0972, 28.8399, 0.45", "-59.1189, -53.8364, 28.9474, 0.45", "-61.0916, -54.9776, 29.0924, 0.45", "-63.4532, -56.3853, 29.2668, 0.45", "-65.4008, -57.5589, 29.4726, 0.45", "-66.924, -58.5141, 29.7068, 0.45", "-68.9057, -59.8722, 30.1161, 0.45", "-71.3987, -61.6823, 30.7788, 0.45", "-73.4022, -63.2552, 31.4455, 0.45", "-75.2488, -64.8412, 32.1809, 0.45", "-77.5585, -66.9326, 33.2444, 0.45", "-79.406, -68.599, 34.1946, 0.45", "-80.5721, -69.6577, 34.8447, 0.45", "-82.702, -71.5241, 36.058, 0.45", "-84.4125, -72.9384, 37.0037, 0.45", "-85.8535, -74.1104, 37.7716, 0.45", "-88.6932, -76.4406, 39.22, 0.45", "-90.1192, -77.6308, 39.8871, 0.45", "-90.9533, -78.325, 40.2473, 0.45", "-92.4191, -79.615, 40.8239, 0.45", "-93.7718, -80.9604, 41.2776, 0.45", "-95.1238, -82.4639, 41.594, 0.45", "-96.4472, -84.0603, 41.7782, 0.45", "-97.8182, -85.7246, 41.889, 0.45", "-99.6708, -88.1076, 41.9312, 0.45", "-101.517, -90.6404, 41.861, 0.45", "-105.346, -95.9128, 41.5317, 0.45", "-106.869, -98.025, 41.3721, 0.45", "-108.523, -100.362, 41.2067, 0.45", "-110.701, -103.522, 41.0269, 0.45", "-113.005, -106.814, 40.9285, 0.45", "-114.9, -109.527, 40.9663, 0.45", "-116.307, -111.567, 41.1194, 0.45", "-117.983, -113.843, 41.4667, 0.45", "-120.345, -116.924, 42.0895, 0.45", "-121.112, -117.839, 42.3416, 0.45", "-122.974, -119.933, 43.0554, 0.45", "-124.635, -121.759, 43.7355, 0.45", "-127.006, -124.242, 44.6352, 0.45" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.15283, 0.681023, 7.95185, 0.45", "-8.834, 0.221868, 8.77646, 0.45", "-8.52751, -0.153608, 9.74641, 0.45", "-8.38188, -0.202502, 10.2012, 0.45", "-7.96801, -0.117615, 11.1227, 0.45", "-7.5577, 0.0471587, 11.9389, 0.45", "-7.1895, 0.231634, 12.7068, 0.45", "-6.74421, 0.521304, 13.6591, 0.45", "-6.32092, 0.870842, 14.7263, 0.45", "-5.79359, 1.38626, 16.1882, 0.45", "-5.56624, 1.60984, 16.7868, 0.45", "-5.3509, 1.78603, 17.2871, 0.45", "-5.01282, 2.01604, 18.0077, 0.45", "-4.83238, 2.11011, 18.4881, 0.45", "-4.67495, 2.20068, 19.3439, 0.45", "-4.61821, 2.34428, 20.3588, 0.45", "-4.54727, 2.51233, 21.3348, 0.45", "-4.50636, 2.63756, 21.9748, 0.45", "-4.39754, 2.98891, 23.3675, 0.45", "-4.21987, 3.4997, 25.0649, 0.45", "-4.07837, 3.91465, 26.2547, 0.45", "-3.82889, 4.44915, 27.54, 0.45", "-3.50984, 5.06411, 28.9854, 0.45", "-3.10921, 5.71259, 30.4597, 0.23", "-2.62282, 6.4077, 31.8271, 0.23", "-2.14765, 6.99928, 32.8682, 0.23", "-1.18328, 8.12527, 34.7959, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-9.15283, 0.681023, 7.95185, 0.68", "-10.3487, 0.358079, 8.17407, 0.68", "-12.3822, -0.155715, 8.65703, 0.45", "-13.8801, -0.480126, 9.04405, 0.45", "-15.8654, -0.838505, 9.65134, 0.45", "-17.3172, -1.10392, 10.1728, 0.45", "-19.2215, -1.54936, 10.9478, 0.45", "-20.1407, -1.79726, 11.4023, 0.45", "-21.6569, -2.27934, 12.3039, 0.45", "-22.9152, -2.76614, 13.1208, 0.45", "-23.9748, -3.30428, 13.8585, 0.45", "-25.5142, -4.22815, 15.0444, 0.45", "-26.0837, -4.62312, 15.5503, 0.68", "-27.1673, -5.50292, 16.6305, 0.68", "-28.3475, -6.54693, 17.9634, 0.68", "-29.7482, -7.71053, 19.5621, 0.45", "-30.9523, -8.54247, 21.0212, 0.45", "-32.2428, -9.28111, 22.7015, 0.45", "-33.1265, -9.81022, 24.0315, 0.45", "-33.6325, -10.136, 24.9189, 0.45", "-34.2866, -10.5719, 26.2702, 0.45", "-34.9832, -10.9686, 27.8215, 0.45", "-35.4065, -11.1628, 28.7966, 0.45", "-36.0539, -11.5259, 30.457, 0.45", "-36.6147, -11.856, 31.8053, 0.45", "-36.9262, -12.0559, 32.4445, 0.45", "-37.6482, -12.5512, 33.7732, 0.45", "-38.5831, -13.0899, 35.1319, 0.45", "-39.7657, -13.5815, 36.5504, 0.45", "-41.3142, -13.9907, 38.1189, 0.45", "-42.8449, -14.2406, 39.4638, 0.45", "-43.8602, -14.3662, 40.25, 0.45", "-45.1952, -14.506, 41.1188, 0.45", "-46.3027, -14.6152, 41.7721, 0.45", "-48.0726, -14.7665, 42.7965, 0.45", "-50.0602, -14.913, 43.9483, 0.23", "-51.1545, -14.9994, 44.5572, 0.23", "-53.6008, -15.1427, 45.8475, 0.23", "-55.2987, -15.2052, 46.7828, 0.23", "-56.9087, -15.2862, 47.6536, 0.23", "-58.3815, -15.3874, 48.4129, 0.23", "-60.3751, -15.5043, 49.456, 0.23", "-62.468, -15.4942, 50.5617, 0.23", "-64.5512, -15.2404, 51.7405, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.056, 1.69138, -11.821, 0.68", "-28.6663, 1.804, -12.5473, 0.68", "-29.2477, 1.99456, -13.2347, 0.68", "-29.9748, 2.23564, -14.0499, 0.68", "-31.2451, 2.57346, -15.2447, 0.68", "-32.6922, 2.94746, -16.4847, 0.68", "-34.3587, 3.45747, -17.7659, 0.68", "-35.6635, 3.90841, -18.6797, 0.68", "-37.1291, 4.47448, -19.6177, 0.68", "-39.0841, 5.25544, -20.8053, 0.68", "-40.4608, 5.79832, -21.5833, 0.68", "-43.0861, 6.73069, -22.9667, 0.45", "-45.0546, 7.40614, -24.0672, 0.45", "-46.5163, 7.89452, -24.9782, 0.45", "-48.1795, 8.44752, -26.1558, 0.45", "-49.5393, 8.87006, -27.2632, 0.45", "-50.5297, 9.09779, -28.1444, 0.45", "-52.4493, 9.3726, -30.0063, 0.45", "-54.0473, 9.54229, -31.5808, 0.45", "-55.6235, 9.68251, -33.0311, 0.45", "-56.6137, 9.76871, -33.9492, 0.45", "-57.966, 9.86779, -35.2267, 0.45", "-58.7307, 9.89908, -35.8987, 0.45", "-59.7524, 9.90643, -36.6102, 0.45", "-62.4006, 9.93076, -38.1488, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-28.056, 1.69138, -11.821, 0.68", "-29.5683, 0.965552, -11.676, 0.68", "-31.2147, 0.13721, -11.579, 0.68", "-32.3936, -0.478658, -11.5322, 0.45", "-33.6688, -1.14795, -11.4967, 0.45", "-34.8214, -1.75143, -11.4687, 0.45", "-36.0082, -2.36173, -11.4453, 0.45", "-37.4385, -3.10518, -11.4342, 0.45", "-38.4296, -3.63865, -11.4299, 0.45", "-39.4477, -4.19686, -11.4289, 0.45", "-41.0526, -5.11145, -11.4096, 0.45", "-42.2053, -5.79055, -11.3946, 0.45", "-43.3458, -6.48018, -11.3942, 0.45", "-44.7899, -7.36339, -11.4142, 0.45", "-46.0701, -8.15917, -11.4628, 0.45", "-46.7968, -8.62319, -11.5045, 0.45", "-47.7665, -9.25257, -11.5803, 0.45", "-48.3654, -9.63148, -11.6347, 0.45", "-49.5714, -10.3703, -11.7694, 0.45", "-50.6981, -11.0774, -11.9053, 0.45", "-52.0119, -11.873, -12.0644, 0.45", "-53.0105, -12.3993, -12.174, 0.45", "-54.2324, -12.9499, -12.2867, 0.45", "-55.4669, -13.4655, -12.3994, 0.45", "-56.2707, -13.7838, -12.4768, 0.45", "-57.4709, -14.2344, -12.5986, 0.45", "-59.154, -14.8257, -12.7629, 0.45", "-60.4, -15.2594, -12.8706, 0.45", "-61.3962, -15.6348, -12.9387, 0.45", "-62.6878, -16.1712, -13.0045, 0.45", "-63.3449, -16.4698, -13.0271, 0.45", "-64.5965, -17.1372, -13.0814, 0.45", "-66.1947, -18.1074, -13.2129, 0.45", "-67.5004, -18.9376, -13.3731, 0.45", "-69.0425, -19.9161, -13.6101, 0.45", "-71.1151, -21.2388, -13.9986, 0.23", "-72.7856, -22.2732, -14.3226, 0.23", "-74.7227, -23.4114, -14.7172, 0.23", "-76.3022, -24.2958, -15.0351, 0.23", "-78.0297, -25.1876, -15.3906, 0.23", "-79.9877, -26.1142, -15.7927, 0.23", "-82.598, -27.265, -16.3099, 0.23", "-84.4035, -27.9677, -16.6346, 0.23", "-86.242, -28.6033, -16.9341, 0.23", "-87.7026, -29.0797, -17.1721, 0.23", "-89.4978, -29.6348, -17.4969, 0.23", "-90.7147, -29.9832, -17.7594, 0.23", "-91.8046, -30.2725, -18.064, 0.23", "-92.6377, -30.4664, -18.3347, 0.23", "-93.7523, -30.7077, -18.7561, 0.23", "-94.5657, -30.9017, -19.0795, 0.23", "-95.5529, -31.1437, -19.4899, 0.23", "-96.5344, -31.3834, -19.8867, 0.23", "-97.1129, -31.5495, -20.1091, 0.23", "-98.2387, -31.9166, -20.5107, 0.23", "-99.2957, -32.2844, -20.8343, 0.23", "-101.033, -32.9864, -21.3015, 0.23", "-102.019, -33.4258, -21.5428, 0.23", "-103.35, -34.0686, -21.8337, 0.23", "-104.335, -34.5688, -22.038, 0.23", "-105.364, -35.0875, -22.2436, 0.23", "-106.515, -35.6356, -22.4683, 0.23", "-108.324, -36.4772, -22.8128, 0.23", "-109.468, -36.9806, -23.0317, 0.23", "-110.544, -37.4112, -23.2158, 0.23", "-111.546, -37.7934, -23.3757, 0.23", "-114.093, -38.7196, -23.7838, 0.23", "-115.08, -39.0636, -23.929, 0.23", "-116.753, -39.6609, -24.1791, 0.23", "-117.621, -39.969, -24.3172, 0.23", "-118.163, -40.1683, -24.4009, 0.23", "-119.437, -40.6911, -24.585, 0.23", "-120.445, -41.1571, -24.7272, 0.23", "-121.431, -41.6298, -24.8633, 0.23", "-122.064, -41.9472, -24.9561, 0.23", "-123.314, -42.6046, -25.1501, 0.23", "-124.291, -43.1399, -25.275, 0.23", "-125.112, -43.5897, -25.3519, 0.23", "-125.753, -43.9278, -25.4038, 0.23", "-127.491, -44.8425, -25.5111, 0.23", "-128.365, -45.3108, -25.5524, 0.23", "-129.976, -46.173, -25.6007, 0.23", "-131.609, -47.0452, -25.6158, 0.23", "-132.793, -47.6474, -25.5988, 0.23", "-133.675, -48.0854, -25.5736, 0.23", "-135.314, -48.858, -25.4544, 0.23", "-137.108, -49.6376, -25.2608, 0.23", "-138.524, -50.2001, -25.0471, 0.23", "-140.177, -50.8179, -24.7298, 0.23", "-142.267, -51.5568, -24.235, 0.23", "-144.245, -52.2262, -23.6883, 0.23", "-145.305, -52.5992, -23.3666, 0.23", "-146.893, -53.2135, -22.8459, 0.23", "-147.955, -53.6693, -22.4918, 0.23", "-149.528, -54.413, -21.9728, 0.23", "-151.226, -55.2702, -21.4348, 0.23", "-154.181, -56.8663, -20.6815, 0.23", "-156.013, -57.9083, -20.3094, 0.23", "-157.948, -59.0716, -20.03, 0.23", "-159.292, -59.905, -19.9116, 0.23", "-160.991, -60.9608, -19.8631, 0.23", "-162.87, -62.1393, -19.9183, 0.23", "-163.763, -62.6918, -20.0036, 0.23", "-165.348, -63.7276, -20.2503, 0.23", "-166.286, -64.3998, -20.4521, 0.23", "-166.994, -64.9702, -20.633, 0.23", "-167.95, -65.8526, -20.8823, 0.23", "-168.574, -66.4994, -21.0215, 0.23", "-169.879, -67.9038, -21.2971, 0.23", "-171.063, -69.2481, -21.5436, 0.23", "-171.8, -70.1646, -21.6937, 0.23", "-173.462, -72.4361, -22.0526, 0.23", "-174.415, -73.8389, -22.2681, 0.23", "-175.213, -75.0664, -22.4622, 0.23", "-176.09, -76.4729, -22.6998, 0.23", "-177.029, -78.0897, -22.982, 0.23", "-177.802, -79.4384, -23.2496, 0.23", "-178.467, -80.5998, -23.5063, 0.23", "-179.37, -82.0818, -23.8694, 0.23", "-180.184, -83.3058, -24.2166, 0.23", "-180.661, -83.9305, -24.4229, 0.23", "-181.884, -85.2892, -24.9274, 0.23", "-183.359, -86.7656, -25.4917, 0.23", "-184.248, -87.5996, -25.7922, 0.23", "-185.822, -88.9889, -26.2108, 0.23", "-187.073, -90.0855, -26.4757, 0.23", "-187.942, -90.9068, -26.6278, 0.23", "-188.891, -91.9152, -26.7636, 0.23", "-189.959, -93.22, -26.8968, 0.23", "-191.971, -95.9724, -27.0853, 0.23", "-192.965, -97.452, -27.1549, 0.23", "-193.811, -98.8606, -27.2067, 0.23", "-194.596, -100.407, -27.2476, 0.23", "-195.292, -102.057, -27.2935, 0.23", "-195.809, -103.629, -27.3439, 0.23", "-196.119, -104.991, -27.3806, 0.23", "-196.438, -106.564, -27.4121, 0.23", "-196.89, -109.056, -27.4349, 0.23", "-197.069, -110.313, -27.4225, 0.23", "-197.2, -111.69, -27.3717, 0.23", "-197.209, -112.415, -27.3426, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.6263, -10.2095, 0.0, 0.45", "50.0974, -14.1578, 0.0, 0.45", "64.5684, -18.1061, 0.0, 0.45" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "12.3882, 4.47926, -4.17194, 0.68", "13.8029, 8.39345, -3.55953, 0.68", "14.5293, 10.403, -3.24511, 0.68", "15.307, 12.5546, -2.90847, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "12.3882, 4.47926, -4.17194, 0.68", "13.7733, 4.03503, -3.91941, 0.68", "15.5608, 3.51072, -3.63546, 0.68", "17.7377, 2.97266, -3.31831, 0.68", "19.7597, 2.47122, -3.00892, 0.68", "21.8109, 1.94539, -2.65051, 0.68", "23.9633, 1.34949, -2.23475, 0.68", "26.4898, 0.640648, -1.75225, 0.68", "28.7481, -0.0137544, -1.32161, 0.68", "31.2969, -0.751634, -0.839771, 0.68", "33.7022, -1.40649, -0.339038, 0.68", "35.3113, -1.80937, 0.073551, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-62.4006, 9.93076, -38.1488, 0.45", "-63.4278, 10.2996, -38.5061, 0.45", "-64.2985, 10.6128, -38.8091, 0.45", "-65.2988, 10.9915, -39.1696, 0.45", "-66.8805, 11.6399, -39.7657, 0.45", "-68.3843, 12.2669, -40.3258, 0.45", "-69.4732, 12.7117, -40.7203, 0.45", "-70.6649, 13.1977, -41.1585, 0.45", "-71.5169, 13.5715, -41.4532, 0.45", "-72.8132, 14.1696, -41.8907, 0.45", "-74.0126, 14.7103, -42.2793, 0.45", "-74.8092, 15.0337, -42.5114, 0.45", "-76.1227, 15.4848, -42.8467, 0.45", "-77.5933, 15.9741, -43.2111, 0.45", "-78.8952, 16.3794, -43.4854, 0.45", "-79.9914, 16.7062, -43.7184, 0.45", "-81.0363, 17.0124, -43.9412, 0.45", "-83.1205, 17.6224, -44.354, 0.45", "-85.0137, 18.1762, -44.7458, 0.45", "-86.346, 18.5737, -45.0678, 0.45", "-87.6385, 18.9712, -45.4328, 0.45", "-90.1629, 19.7114, -46.1216, 0.45", "-92.3629, 20.3088, -46.7214, 0.23", "-94.4891, 20.8382, -47.2964, 0.23", "-96.243, 21.1954, -47.7535, 0.23", "-97.4086, 21.4082, -48.0773, 0.23", "-99.8186, 21.8318, -48.7165, 0.23", "-101.619, 22.0969, -49.2108, 0.23", "-103.215, 22.2667, -49.625, 0.23", "-104.773, 22.4254, -49.977, 0.23", "-106.901, 22.6744, -50.4164, 0.23", "-108.408, 22.8833, -50.7668, 0.23", "-109.82, 23.0855, -51.1992, 0.23", "-111.707, 23.2932, -51.8389, 0.23", "-112.52, 23.3612, -52.1278, 0.23", "-113.786, 23.4152, -52.6132, 0.23", "-115.518, 23.4217, -53.3291, 0.23", "-117.629, 23.3957, -54.3613, 0.23", "-119.635, 23.4177, -55.5462, 0.23", "-121.475, 23.4455, -56.8193, 0.23", "-123.249, 23.4432, -58.0897, 0.23", "-124.52, 23.4389, -59.0483, 0.23", "-127.368, 23.4532, -61.3002, 0.23", "-129.789, 23.5405, -63.3645, 0.23", "-131.575, 23.6693, -65.0552, 0.23", "-140.526, 25.5042, -68.3251, 0.23" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-62.4006, 9.93076, -38.1488, 0.23", "-63.5894, 9.11749, -38.5178, 0.23", "-64.8786, 8.26452, -38.9171, 0.23", "-66.501, 7.24084, -39.4564, 0.23", "-67.8923, 6.36737, -39.9414, 0.23", "-68.8458, 5.76948, -40.2941, 0.23", "-70.0651, 5.00385, -40.7755, 0.23", "-71.4169, 4.18236, -41.3505, 0.23", "-72.4433, 3.56537, -41.8628, 0.23", "-73.3836, 3.04624, -42.3849, 0.23", "-74.2973, 2.59306, -42.9149, 0.23", "-75.2304, 2.13844, -43.4822, 0.23", "-76.2875, 1.6194, -44.1297, 0.23", "-77.3754, 1.07797, -44.7815, 0.23", "-78.3855, 0.57563, -45.3614, 0.23", "-79.9105, -0.121763, -46.1248, 0.23", "-81.3588, -0.723328, -46.7765, 0.23", "-83.4042, -1.42271, -47.5771, 0.23", "-84.5341, -1.72381, -47.9558, 0.23", "-85.5892, -1.98758, -48.2686, 0.23", "-87.2772, -2.36324, -48.742, 0.23", "-88.2941, -2.49268, -48.9747, 0.23", "-89.947, -2.4233, -49.2168, 0.23", "-91.1776, -2.0804, -49.3116, 0.23", "-99.9093, -3.8975, -51.0909, 0.23", "-108.348, -5.04437, -54.2688, 0.23", "-116.574, -4.93218, -58.1283, 0.23", "-125.388, -6.408, -59.803, 0.23", "-134.381, -6.63675, -61.0851, 0.23" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-197.209, -112.415, -27.3426, 0.23", "-197.913, -114.92, -26.5161, 0.23", "-198.373, -116.558, -25.9756, 0.23", "-199.061, -119.005, -25.168, 0.23", "-199.928, -122.092, -24.1495, 0.23", "-200.912, -131.938, -21.535, 0.23" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-197.209, -112.415, -27.3426, 0.23", "-196.717, -115.14, -27.228, 0.23", "-196.241, -117.743, -27.1585, 0.23", "-196.003, -119.153, -27.1306, 0.23", "-195.654, -121.1, -27.0971, 0.23", "-195.35, -122.726, -27.0958, 0.23", "-194.883, -125.575, -27.1683, 0.23", "-194.671, -127.158, -27.2719, 0.23", "-194.462, -129.112, -27.4968, 0.23", "-194.332, -131.942, -27.9829, 0.23", "-194.297, -133.392, -28.2793, 0.23", "-194.33, -136.037, -28.907, 0.23", "-194.386, -137.163, -29.2261, 0.23", "-194.549, -138.629, -29.71, 0.23", "-194.985, -140.892, -30.6516, 0.23", "-193.022, -150.465, -30.589, 0.23" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.307, 12.5546, -2.90847, 0.45", "16.113, 13.7487, -2.75008, 0.45", "16.9056, 14.9228, -2.59434, 0.45", "17.8372, 16.3029, -2.41128, 0.45", "18.4769, 17.2506, -2.28557, 0.45", "19.3597, 18.5584, -2.1121, 0.45" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.307, 12.5546, -2.90847, 0.45", "14.6135, 13.3532, -2.27838, 0.45", "13.6065, 14.4004, -1.34159, 0.45", "12.7463, 15.259, -0.536788, 0.45", "11.69, 16.3759, 0.504596, 0.45", "11.0228, 17.1225, 1.22237, 0.45", "10.3924, 17.8697, 1.97259, 0.45", "10.0008, 18.3282, 2.49403, 0.45", "9.50635, 18.9261, 3.21052, 0.45", "8.88501, 19.7531, 4.19941, 0.45", "8.35423, 20.5155, 5.13506, 0.45", "7.77942, 21.4833, 6.31217, 0.45", "7.51243, 22.011, 6.88313, 0.45", "7.16901, 22.842, 7.65411, 0.45", "6.89633, 23.7262, 8.3623, 0.45", "6.7093, 24.6414, 8.94825, 0.45", "6.57478, 25.8403, 9.51852, 0.45", "6.47498, 27.9037, 10.2735, 0.45", "6.45101, 30.2863, 10.9653, 0.45", "6.46468, 32.2526, 11.4018, 0.45", "6.50914, 34.262, 11.7157, 0.45", "6.609, 36.2836, 11.9479, 0.45", "6.78049, 38.1992, 12.1175, 0.45", "7.02935, 40.1455, 12.2602, 0.45", "7.39917, 42.4237, 12.3974, 0.45", "7.9268, 45.1836, 12.5512, 0.45", "8.4461, 47.6691, 12.7119, 0.45", "9.19811, 50.7858, 12.9083, 0.45", "9.91772, 53.4887, 13.0648, 0.45", "10.6712, 56.1924, 13.2178, 0.45", "11.1629, 57.8935, 13.306, 0.45", "11.843, 60.3096, 13.3995, 0.45", "12.4001, 62.525, 13.4556, 0.45", "12.8618, 64.6882, 13.4854, 0.45", "13.1121, 66.12, 13.4899, 0.45", "13.3734, 67.9091, 13.4909, 0.45", "13.6387, 69.9316, 13.4759, 0.45", "14.0118, 72.9752, 13.4261, 0.45", "14.3054, 75.5265, 13.3616, 0.45", "14.5284, 77.3277, 13.3001, 0.45", "14.8333, 79.6556, 13.2395, 0.45", "15.1993, 82.2186, 13.1941, 0.23", "15.5033, 84.237, 13.1587, 0.23", "15.8015, 85.9584, 13.1075, 0.23", "15.9964, 87.0578, 13.0621, 0.23", "16.485, 89.7449, 12.9346, 0.23", "16.8593, 92.1058, 12.8125, 0.23", "17.1669, 94.5053, 12.724, 0.23", "17.3436, 96.7101, 12.6812, 0.23", "17.3679, 98.2955, 12.6767, 0.23", "17.3464, 99.7273, 12.69, 0.23", "17.3019, 100.802, 12.7272, 0.23", "17.1626, 102.535, 12.8577, 0.23", "17.0428, 103.566, 12.9808, 0.23", "16.5679, 106.306, 13.3967, 0.23", "16.1373, 108.256, 13.7117, 0.23", "15.5905, 110.06, 14.0323, 0.23", "14.7388, 112.264, 14.4632, 0.23", "13.8612, 114.108, 14.8619, 0.23", "12.2377, 116.966, 15.5493, 0.23", "11.3881, 118.221, 15.8878, 0.23", "9.69104, 120.421, 16.5213, 0.23", "8.35566, 122.114, 17.0257, 0.23", "7.32537, 123.446, 17.4154, 0.45", "5.57413, 125.809, 18.0364, 0.23", "4.78656, 126.921, 18.2904, 0.23", "3.58988, 128.72, 18.6332, 0.23", "1.78748, 131.624, 19.0269, 0.23", "0.878017, 133.102, 19.1875, 0.23", "-0.056554, 134.478, 19.3184, 0.23", "-1.42698, 136.258, 19.4873, 0.23", "-2.43367, 137.444, 19.5805, 0.23", "-3.4353, 138.485, 19.6549, 0.23", "-5.76978, 140.524, 19.7911, 0.23", "-7.86364, 142.187, 19.9153, 0.23", "-9.15192, 143.157, 19.9854, 0.23", "-10.2659, 143.986, 20.0034, 0.23", "-11.7414, 145.167, 19.9499, 0.23", "-12.2916, 145.67, 19.8688, 0.23", "-12.6697, 146.114, 19.7573, 0.23", "-13.2465, 147.072, 19.5473, 0.23", "-14.0017, 148.661, 19.3142, 0.23", "-14.7266, 150.584, 19.1567, 0.23", "-15.2968, 152.526, 19.0878, 0.23", "-15.9626, 155.169, 19.0881, 0.23", "-16.5693, 157.694, 19.1822, 0.23", "-17.2074, 160.441, 19.3377, 0.23", "-17.7202, 162.874, 19.5438, 0.23", "-18.2222, 165.83, 19.8545, 0.23", "-18.4274, 167.494, 20.0694, 0.23", "-18.5818, 170.023, 20.3853, 0.23", "-21.604, 178.587, 23.1974, 0.23" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "35.3113, -1.80937, 0.073551, 0.45", "36.1347, -3.07883, -1.21536, 0.45", "37.1291, -4.47156, -2.48878, 0.45", "38.1909, -5.62337, -3.58117, 0.45", "39.112, -6.46715, -4.41344, 0.45", "39.5554, -6.81741, -4.78571, 0.45", "40.3605, -7.45825, -5.48993, 0.45", "41.5577, -8.28753, -6.51339, 0.45", "43.1996, -9.30348, -8.02179, 0.45", "44.3808, -9.96016, -9.29946, 0.45", "45.6828, -10.5921, -10.8643, 0.45", "46.8523, -11.1261, -12.3433, 0.45", "48.375, -11.7911, -14.2668, 0.45", "50.0662, -12.5387, -16.3802, 0.45", "52.8893, -13.8174, -19.7491, 0.23", "54.4439, -14.5, -21.4315, 0.23", "56.7713, -15.4481, -23.6386, 0.23", "59.2548, -16.3266, -25.6307, 0.23", "59.9684, -16.5699, -26.1151, 0.23", "62.2215, -17.3317, -27.4963, 0.23", "65.1564, -18.3836, -29.1951, 0.23", "68.491, -19.568, -31.0974, 0.23", "70.246, -20.1623, -32.1109, 0.23", "73.4887, -21.2031, -34.0417, 0.23", "76.3138, -22.0948, -35.7886, 0.23", "79.1129, -23.0147, -37.5796, 0.23", "86.5512, -29.3009, -45.0059, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "35.3113, -1.80937, 0.073551, 0.45", "37.8911, -3.04017, 0.388956, 0.45", "39.0498, -3.64182, 0.539521, 0.45", "41.2444, -4.77882, 0.831294, 0.68", "43.4975, -5.93552, 1.12632, 0.45", "45.7739, -7.12033, 1.3564, 0.45", "47.7431, -8.10727, 1.51234, 0.45", "49.8375, -9.14864, 1.61495, 0.45", "51.8955, -10.1478, 1.71893, 0.45", "53.2651, -10.8146, 1.7966, 0.45", "55.3371, -11.8536, 1.86721, 0.45", "58.6756, -13.4431, 1.89371, 0.45" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "19.3597, 18.5584, -2.1121, 0.45", "19.6709, 20.1248, -2.03543, 0.45", "20.3072, 23.0722, -1.7638, 0.45", "20.8884, 25.2953, -1.4461, 0.45", "21.5863, 27.8027, -1.01129, 0.45", "22.3454, 30.262, -0.549218, 0.45", "22.948, 32.1354, -0.171449, 0.45", "23.8289, 34.6197, 0.428186, 0.45", "24.7767, 37.2574, 1.15104, 0.45", "25.5654, 39.6362, 1.8541, 0.45", "26.2676, 42.15, 2.67977, 0.45", "26.8977, 45.1867, 3.82487, 0.45", "27.1156, 46.7835, 4.50576, 0.45", "27.2305, 49.1917, 5.68608, 0.45", "27.0908, 51.1469, 6.81367, 0.45", "26.7917, 52.6998, 7.90805, 0.45", "26.3201, 54.2234, 9.17931, 0.45", "25.8606, 55.414, 10.3304, 0.45", "25.3267, 56.6552, 11.6969, 0.45", "24.778, 57.855, 13.2208, 0.45", "24.4072, 58.6686, 14.2982, 0.45", "23.9558, 59.5174, 15.4444, 0.45", "23.5694, 60.2269, 16.3575, 0.45", "23.0907, 61.1157, 17.448, 0.45", "22.5031, 62.2327, 18.7788, 0.45", "21.8707, 63.4296, 20.1862, 0.45", "21.3312, 64.3968, 21.2633, 0.45", "20.7172, 65.4715, 22.4323, 0.45", "20.0894, 66.6543, 23.687, 0.45", "19.5563, 67.7841, 24.8447, 0.45", "19.0944, 68.9133, 26.0197, 0.45", "18.7457, 69.8291, 27.055, 0.45", "18.1357, 71.415, 28.9262, 0.23", "17.6749, 72.5356, 30.304, 0.23", "17.0316, 74.1144, 32.2104, 0.23", "16.5215, 75.4691, 33.7766, 0.23", "15.9539, 77.0145, 35.5313, 0.23", "15.6248, 77.8905, 36.5111, 0.23", "15.2308, 78.8455, 37.5007, 0.23", "14.7551, 79.9976, 38.5974, 0.23", "14.3249, 81.1418, 39.5738, 0.23", "13.9939, 82.2165, 40.3771, 0.23", "13.765, 83.2285, 41.046, 0.23", "13.5608, 84.5934, 41.9705, 0.23", "13.5045, 85.5321, 42.643, 0.23", "13.5622, 87.2351, 43.8682, 0.23", "13.7713, 88.6767, 44.9012, 0.23", "14.1212, 90.0457, 45.9042, 0.23", "14.8319, 92.0978, 47.5094, 0.23", "15.591, 94.0268, 49.0695, 0.23", "16.2507, 95.5196, 50.3008, 0.23", "16.9671, 96.937, 51.5155, 0.23", "17.7621, 98.3587, 52.7787, 0.23", "18.685, 99.7579, 54.0445, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "19.3597, 18.5584, -2.1121, 0.45", "20.4701, 18.0445, -1.98511, 0.45", "22.2135, 17.1926, -1.81826, 0.45", "23.6278, 16.513, -1.67172, 0.45", "25.124, 15.8337, -1.51174, 0.45", "26.5027, 15.2885, -1.38155, 0.45", "27.531, 14.9105, -1.29799, 0.45", "29.0762, 14.3934, -1.22185, 0.45", "30.481, 13.9722, -1.18217, 0.45", "31.9508, 13.5881, -1.17869, 0.45", "33.9582, 13.087, -1.2216, 0.45", "35.1319, 12.7941, -1.27338, 0.45", "36.0399, 12.5534, -1.34012, 0.45", "36.5682, 12.4104, -1.38377, 0.45", "37.8792, 12.0181, -1.50529, 0.45", "39.5727, 11.4602, -1.64081, 0.45", "41.5428, 10.7503, -1.769, 0.45", "43.991, 9.85349, -1.9116, 0.45", "45.5708, 9.23953, -2.00288, 0.45", "47.3413, 8.51294, -2.09678, 0.45", "48.8527, 7.85832, -2.15888, 0.45", "49.5208, 7.55957, -2.17694, 0.45", "50.7554, 6.96933, -2.21869, 0.45", "52.0558, 6.32961, -2.24037, 0.45", "53.4478, 5.64286, -2.24014, 0.45", "54.4836, 5.15211, -2.22751, 0.45", "55.8756, 4.52781, -2.19796, 0.45", "57.7859, 3.73698, -2.12275, 0.23", "59.2394, 3.19603, -2.05348, 0.23", "61.0366, 2.53927, -1.9758, 0.23", "61.927, 2.21457, -1.94574, 0.23", "63.4447, 1.67015, -1.96711, 0.23", "64.716, 1.21966, -2.05454, 0.23", "66.2636, 0.695665, -2.26989, 0.23", "67.8607, 0.207869, -2.6616, 0.23", "68.9387, -0.0945033, -3.0408, 0.23", "70.7809, -0.546412, -3.81874, 0.45", "72.1071, -0.814152, -4.47524, 0.45", "73.258, -1.01848, -5.09018, 0.45", "75.2113, -1.37754, -6.17974, 0.23", "76.378, -1.57635, -6.82646, 0.23", "77.6494, -1.81679, -7.50589, 0.23", "78.8575, -2.07483, -8.071, 0.23", "80.4003, -2.45512, -8.71104, 0.23", "82.3916, -3.01338, -9.41845, 0.23", "83.2251, -3.28453, -9.68262, 0.23", "84.2231, -3.64275, -10.0028, 0.23", "86.073, -4.34294, -10.631, 0.23", "88.0524, -5.08536, -11.3159, 0.23", "90.2653, -5.88859, -12.1143, 0.23", "92.4021, -6.607, -12.953, 0.23", "94.6438, -7.34218, -13.9787, 0.23", "95.4664, -7.61359, -14.376, 0.23", "96.8802, -8.06868, -15.1075, 0.23", "98.5709, -8.58111, -16.048, 0.23", "101.023, -9.25694, -17.5128, 0.23", "103.652, -9.86277, -19.1538, 0.23", "110.276, -13.2287, -22.3841, 0.23", "117.608, -15.9553, -24.427, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "58.6756, -13.4431, 1.89371, 0.45", "60.8343, -12.716, 2.06474, 0.45", "62.826, -12.0385, 2.1399, 0.45", "66.267, -10.8373, 2.20368, 0.23", "67.4479, -10.4458, 2.22142, 0.23", "68.9729, -9.94216, 2.24826, 0.23", "70.7859, -9.39317, 2.2898, 0.23", "72.3709, -8.94273, 2.33039, 0.23", "73.9907, -8.50916, 2.3878, 0.23", "75.9785, -7.99833, 2.48523, 0.23", "78.3052, -7.38706, 2.64246, 0.23", "81.8031, -6.42781, 2.93621, 0.23", "84.4565, -5.68824, 3.22702, 0.23", "87.0951, -4.96446, 3.605, 0.23", "88.8379, -4.47875, 3.88297, 0.23", "91.7465, -3.61094, 4.41718, 0.23", "93.2552, -3.16265, 4.73306, 0.23", "94.9951, -2.64919, 5.14282, 0.23", "97.7934, -1.95792, 5.84683, 0.23", "98.8337, -1.73009, 6.1118, 0.23", "100.168, -1.47487, 6.44346, 0.23", "102.988, -1.09962, 7.13601, 0.23", "104.211, -0.973978, 7.43584, 0.23", "106.574, -0.75919, 7.98667, 0.23", "109.033, -0.581892, 8.53384, 0.23", "110.361, -0.53181, 8.82541, 0.23", "112.671, -0.459504, 9.3447, 0.23", "113.834, -0.422691, 9.6281, 0.23", "115.669, -0.362948, 10.0888, 0.23", "117.433, -0.293044, 10.5299, 0.23", "118.895, -0.211751, 10.8325, 0.23", "121.02, -0.00791188, 11.1918, 0.23", "123.978, 0.332834, 11.5902, 0.23", "125.562, 0.51299, 11.7721, 0.23", "128.079, 0.812158, 12.028, 0.23", "131.588, 1.26826, 12.3364, 0.23", "132.952, 1.45781, 12.4298, 0.23", "135.983, 1.86845, 12.57, 0.23", "138.661, 2.27763, 12.6507, 0.23", "141.39, 2.68331, 12.7407, 0.23", "150.787, 5.86459, 12.1409, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "58.6756, -13.4431, 1.89371, 0.45", "60.5105, -14.8026, 2.30258, 0.45", "62.4333, -16.1193, 2.67046, 0.45", "65.0714, -17.8864, 3.13378, 0.45", "68.8904, -20.3911, 3.64481, 0.45", "71.4286, -22.1386, 3.89689, 0.23", "73.5769, -23.6589, 4.07078, 0.23", "75.2703, -24.8624, 4.17774, 0.45", "76.6696, -25.9337, 4.28603, 0.45", "78.2444, -27.2114, 4.46245, 0.45", "81.1305, -29.7178, 4.93162, 0.45", "83.6786, -31.9766, 5.44909, 0.45", "86.067, -34.0545, 5.97752, 0.45", "87.5542, -35.3833, 6.33699, 0.45", "91.326, -38.7903, 7.32202, 0.45", "94.7664, -41.9616, 8.30965, 0.45", "97.2254, -44.2857, 9.0534, 0.45", "98.8615, -45.9459, 9.56867, 0.45", "101.115, -48.3898, 10.2783, 0.23", "103.832, -51.6229, 11.1583, 0.23", "104.71, -52.8332, 11.4751, 0.23", "105.939, -54.7922, 11.9779, 0.23", "107.238, -57.1532, 12.5982, 0.23", "107.998, -58.7592, 13.0229, 0.23", "108.698, -60.4081, 13.4235, 0.23", "109.308, -62.0033, 13.7507, 0.23", "110.075, -64.0257, 14.1123, 0.23", "110.794, -65.9734, 14.4046, 0.23", "111.22, -67.2243, 14.5997, 0.23", "111.653, -68.6455, 14.8661, 0.23", "112.161, -70.6065, 15.3149, 0.23", "112.599, -72.4493, 15.7564, 0.23", "113.088, -74.4602, 16.2767, 0.23", "113.417, -75.7353, 16.6407, 0.23", "114.221, -78.7609, 17.5743, 0.23", "114.983, -82.1963, 18.7054, 0.23", "122.958, -90.9976, 20.964, 0.23", "130.879, -99.783, 23.4588, 0.23", "139.582, -107.963, 25.1847, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_34", "dend_31", "dend_30", "dend_17", "dend_14", "dend_11", "dend_8", "dend_1", "dend_0", "dend_36", "dend_35", "dend_33", "dend_32", "dend_19", "dend_18", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_5", "dend_2", "dend_25", "dend_20", "dend_7", "dend_6", "dend_4", "dend_3", "dend_27", "dend_26", "dend_24", "dend_21", "dend_29", "dend_28", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_34", "dend_31", "dend_30", "dend_17", "dend_14", "dend_11", "dend_8", "dend_1", "dend_0", "dend_36", "dend_35", "dend_33", "dend_32", "dend_19", "dend_18", "dend_16", "dend_15", "dend_13", "dend_12", "dend_10", "dend_9", "dend_5", "dend_2", "dend_25", "dend_20", "dend_7", "dend_6", "dend_4", "dend_3", "dend_27", "dend_26", "dend_24", "dend_21", "dend_29", "dend_28", "dend_23", "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_NBC_4225ab5b52_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_31, dend_30, dend_17, dend_14, dend_11, dend_8, dend_1, dend_0, dend_36, dend_35, dend_33, dend_32, dend_19, dend_18, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_5, dend_2, dend_25, dend_20, dend_7, dend_6, dend_4, dend_3, dend_27, dend_26, dend_24, dend_21, dend_29, dend_28, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_31, dend_30, dend_17, dend_14, dend_11, dend_8, dend_1, dend_0, dend_36, dend_35, dend_33, dend_32, dend_19, dend_18, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_5, dend_2, dend_25, dend_20, dend_7, dend_6, dend_4, dend_3, dend_27, dend_26, dend_24, dend_21, dend_29, dend_28, dend_23, dend_22]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_34(0), soma_0(0.44999995616860894)
    connect dend_31(0), soma_0(0.44999995616860894)
    connect dend_30(0), soma_0(0.44999995616860894)
    connect dend_17(0), soma_0(0.44999995616860894)
    connect dend_14(0), soma_0(0.44999995616860894)
    connect dend_11(0), soma_0(0.44999995616860894)
    connect dend_8(0), soma_0(0.44999995616860894)
    connect dend_1(0), soma_0(0.44999995616860894)
    connect dend_0(0), soma_0(0.44999995616860894)
    connect axon_0(0), soma_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.79996, 1.63899, 0.0, 2.31456 ) }
    soma_0 { pt3dadd( -7.07575, 1.4414, 0.0, 3.87478 ) }
    soma_0 { pt3dadd( -6.35154, 1.2438, 0.0, 5.48504 ) }
    soma_0 { pt3dadd( -5.62733, 1.04621, 0.0, 6.75924 ) }
    soma_0 { pt3dadd( -4.90312, 0.848615, 0.0, 7.77214 ) }
    soma_0 { pt3dadd( -4.17891, 0.65102, 0.0, 8.39732 ) }
    soma_0 { pt3dadd( -3.4547, 0.453425, 0.0, 9.01032 ) }
    soma_0 { pt3dadd( -2.73049, 0.255831, 0.0, 9.61582 ) }
    soma_0 { pt3dadd( -2.00628, 0.0582363, 0.0, 9.97495 ) }
    soma_0 { pt3dadd( -1.28207, -0.139358, 0.0, 10.1182 ) }
    soma_0 { pt3dadd( -0.557856, -0.336953, 0.0, 10.2615 ) }
    soma_0 { pt3dadd( 0.166353, -0.534547, 0.0, 10.4039 ) }
    soma_0 { pt3dadd( 0.890563, -0.732142, 0.0, 10.3605 ) }
    soma_0 { pt3dadd( 1.61477, -0.929737, 0.0, 10.3021 ) }
    soma_0 { pt3dadd( 2.33898, -1.12733, 0.0, 10.2398 ) }
    soma_0 { pt3dadd( 3.06319, -1.32493, 0.0, 10.0638 ) }
    soma_0 { pt3dadd( 3.7874, -1.52252, 0.0, 9.71016 ) }
    soma_0 { pt3dadd( 4.51161, -1.72011, 0.0, 8.98989 ) }
    soma_0 { pt3dadd( 5.23582, -1.91771, 0.0, 7.92103 ) }
    soma_0 { pt3dadd( 5.96003, -2.1153, 0.0, 6.49304 ) }
    soma_0 { pt3dadd( 6.68424, -2.3129, 0.0, 3.64119 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 21/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 2.72858, -5.60222, 7.36, 1.36 ) }
    dend_34 { pt3dadd( 2.72858, -5.60222, 7.36, 1.36 ) }
    dend_34 { pt3dadd( 3.09135, -7.71831, 7.08779, 1.14 ) }
    dend_34 { pt3dadd( 3.58242, -10.5829, 6.7193, 0.91 ) }
    dend_34 { pt3dadd( 4.21896, -14.2959, 6.24167, 0.91 ) }
    dend_34 { pt3dadd( 4.60355, -16.5393, 5.95308, 0.91 ) }
    dend_34 { pt3dadd( 5.19542, -19.9918, 5.50896, 0.91 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.14142, -3.24473, -3.98, 0.68 ) }
    dend_31 { pt3dadd( -1.14142, -3.24473, -3.98, 0.68 ) }
    dend_31 { pt3dadd( -2.06277, -4.05273, -5.55948, 0.68 ) }
    dend_31 { pt3dadd( -2.93156, -4.70965, -7.05775, 0.68 ) }
    dend_31 { pt3dadd( -3.56953, -5.17683, -8.14006, 0.68 ) }
    dend_31 { pt3dadd( -4.30827, -5.69649, -9.38966, 0.68 ) }
    dend_31 { pt3dadd( -5.15262, -6.22721, -10.7476, 0.68 ) }
    dend_31 { pt3dadd( -5.99895, -6.72157, -12.1173, 0.68 ) }
    dend_31 { pt3dadd( -6.76803, -7.10437, -13.3773, 0.68 ) }
    dend_31 { pt3dadd( -7.60426, -7.46748, -14.7106, 0.68 ) }
    dend_31 { pt3dadd( -8.55213, -7.85319, -16.1541, 0.68 ) }
    dend_31 { pt3dadd( -9.66267, -8.26877, -17.7538, 0.68 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 40/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 4.57856, -4.08522, 2.8, 0.68 ) }
    dend_30 { pt3dadd( 4.57856, -4.08522, 2.8, 0.68 ) }
    dend_30 { pt3dadd( 6.55037, -6.84731, 3.2861, 0.68 ) }
    dend_30 { pt3dadd( 7.64294, -8.45182, 3.59492, 0.68 ) }
    dend_30 { pt3dadd( 9.60468, -11.3441, 4.19516, 0.68 ) }
    dend_30 { pt3dadd( 11.2912, -13.7239, 4.67915, 0.68 ) }
    dend_30 { pt3dadd( 13.0858, -16.1962, 5.13984, 0.68 ) }
    dend_30 { pt3dadd( 14.428, -17.9779, 5.44821, 0.68 ) }
    dend_30 { pt3dadd( 16.4726, -20.58, 5.90164, 0.45 ) }
    dend_30 { pt3dadd( 18.3927, -23.0569, 6.35317, 0.68 ) }
    dend_30 { pt3dadd( 21.2305, -26.7205, 7.15486, 0.68 ) }
    dend_30 { pt3dadd( 23.2923, -29.3218, 7.82706, 0.68 ) }
    dend_30 { pt3dadd( 24.7409, -31.1633, 8.39059, 0.68 ) }
    dend_30 { pt3dadd( 26.0364, -32.7817, 8.9604, 0.68 ) }
    dend_30 { pt3dadd( 27.3498, -34.4454, 9.59261, 0.68 ) }
    dend_30 { pt3dadd( 29.015, -36.6044, 10.4729, 0.68 ) }
    dend_30 { pt3dadd( 30.4689, -38.4591, 11.3531, 0.68 ) }
    dend_30 { pt3dadd( 32.1639, -40.5427, 12.4893, 0.45 ) }
    dend_30 { pt3dadd( 33.3706, -41.9944, 13.3307, 0.45 ) }
    dend_30 { pt3dadd( 35.491, -44.4705, 14.7428, 0.45 ) }
    dend_30 { pt3dadd( 37.2803, -46.4278, 15.8773, 0.45 ) }
    dend_30 { pt3dadd( 38.6239, -47.8431, 16.7404, 0.45 ) }
    dend_30 { pt3dadd( 39.82, -49.053, 17.5601, 0.45 ) }
    dend_30 { pt3dadd( 41.339, -50.5892, 18.7721, 0.45 ) }
    dend_30 { pt3dadd( 42.9415, -52.3714, 20.308, 0.45 ) }
    dend_30 { pt3dadd( 44.0714, -53.6958, 21.598, 0.45 ) }
    dend_30 { pt3dadd( 44.8917, -54.8058, 22.6504, 0.45 ) }
    dend_30 { pt3dadd( 45.7857, -56.1021, 23.7717, 0.45 ) }
    dend_30 { pt3dadd( 46.7833, -57.6251, 25.0061, 0.45 ) }
    dend_30 { pt3dadd( 48.0472, -59.6635, 26.6243, 0.45 ) }
    dend_30 { pt3dadd( 48.9779, -61.2909, 27.897, 0.45 ) }
    dend_30 { pt3dadd( 49.8629, -62.9053, 29.1821, 0.23 ) }
    dend_30 { pt3dadd( 50.8397, -64.6174, 30.5167, 0.23 ) }
    dend_30 { pt3dadd( 51.9776, -66.4925, 31.9493, 0.23 ) }
    dend_30 { pt3dadd( 52.7213, -67.6819, 32.8291, 0.23 ) }
    dend_30 { pt3dadd( 53.4792, -68.9643, 33.8185, 0.23 ) }
    dend_30 { pt3dadd( 54.7159, -71.298, 35.6028, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 6.16864, 1.51128, -0.84, 2.27 ) }
    dend_17 { pt3dadd( 6.16864, 1.51128, -0.84, 2.27 ) }
    dend_17 { pt3dadd( 7.57844, 2.2858, -1.70584, 1.82 ) }
    dend_17 { pt3dadd( 9.48515, 3.33331, -2.87686, 1.36 ) }
    dend_17 { pt3dadd( 10.9272, 4.12553, -3.7625, 1.36 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 82/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 3.79865, -4.68997, 5.46, 0.91 ) }
    dend_14 { pt3dadd( 3.79865, -4.68997, 5.46, 0.91 ) }
    dend_14 { pt3dadd( 5.0027, -6.06528, 6.16617, 0.91 ) }
    dend_14 { pt3dadd( 6.38133, -7.55888, 7.01167, 0.68 ) }
    dend_14 { pt3dadd( 7.78094, -8.93323, 7.9289, 0.68 ) }
    dend_14 { pt3dadd( 8.84762, -9.91312, 8.68513, 0.91 ) }
    dend_14 { pt3dadd( 10.0036, -10.8623, 9.57526, 0.91 ) }
    dend_14 { pt3dadd( 11.191, -11.5768, 10.5223, 0.68 ) }
    dend_14 { pt3dadd( 12.6684, -12.1057, 11.7334, 0.68 ) }
    dend_14 { pt3dadd( 13.8724, -12.4041, 12.7614, 0.68 ) }
    dend_14 { pt3dadd( 14.5332, -12.5565, 13.3348, 0.68 ) }
    dend_14 { pt3dadd( 15.8904, -12.8641, 14.5018, 0.68 ) }
    dend_14 { pt3dadd( 17.976, -13.3529, 16.1532, 0.45 ) }
    dend_14 { pt3dadd( 19.4808, -13.7344, 17.2287, 0.45 ) }
    dend_14 { pt3dadd( 21.0633, -14.174, 18.198, 0.45 ) }
    dend_14 { pt3dadd( 22.6365, -14.6886, 19.0883, 0.45 ) }
    dend_14 { pt3dadd( 24.3881, -15.344, 20.0019, 0.45 ) }
    dend_14 { pt3dadd( 25.719, -15.936, 20.6419, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_14 { pt3dadd( 27.5796, -16.8649, 21.5079, 0.68 ) }
    dend_14 { pt3dadd( 29.7615, -17.9407, 22.4143, 0.68 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 0.288636, -4.61823, 6.82, 0.91 ) }
    dend_11 { pt3dadd( 0.288636, -4.61823, 6.82, 0.91 ) }
    dend_11 { pt3dadd( -1.02057, -6.60813, 7.87044, 0.91 ) }
    dend_11 { pt3dadd( -2.35762, -8.48266, 8.93512, 0.91 ) }
    dend_11 { pt3dadd( -3.54784, -10.1514, 9.88288, 0.91 ) }
    dend_11 { pt3dadd( -4.56036, -11.5709, 10.6891, 0.91 ) }
    dend_11 { pt3dadd( -5.63381, -13.0759, 11.5439, 0.91 ) }
    dend_11 { pt3dadd( -6.60398, -14.3867, 12.3569, 0.91 ) }
    dend_11 { pt3dadd( -7.54462, -15.5364, 13.2442, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 11/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.31134, 0.681023, 6.86, 0.91 ) }
    dend_8 { pt3dadd( -6.31134, 0.681023, 6.86, 0.91 ) }
    dend_8 { pt3dadd( -7.19611, 0.681023, 7.19998, 0.91 ) }
    dend_8 { pt3dadd( -9.15283, 0.681023, 7.95185, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 15/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.99139, 1.57278, -3.54, 0.91 ) }
    dend_1 { pt3dadd( -6.99139, 1.57278, -3.54, 0.91 ) }
    dend_1 { pt3dadd( -8.27092, 1.76552, -3.88009, 0.91 ) }
    dend_1 { pt3dadd( -9.82959, 1.91485, -4.31765, 0.91 ) }
    dend_1 { pt3dadd( -12.0161, 2.08119, -5.009, 0.91 ) }
    dend_1 { pt3dadd( -13.1449, 2.14928, -5.40451, 0.91 ) }
    dend_1 { pt3dadd( -14.8715, 2.21935, -6.04997, 0.91 ) }
    dend_1 { pt3dadd( -16.4882, 2.22958, -6.69815, 0.91 ) }
    dend_1 { pt3dadd( -18.0606, 2.20004, -7.34808, 0.91 ) }
    dend_1 { pt3dadd( -19.8669, 2.12629, -8.11712, 0.68 ) }
    dend_1 { pt3dadd( -22.0219, 1.98963, -9.05654, 0.91 ) }
    dend_1 { pt3dadd( -23.6204, 1.88255, -9.76956, 0.91 ) }
    dend_1 { pt3dadd( -25.4048, 1.79092, -10.6043, 0.91 ) }
    dend_1 { pt3dadd( -28.056, 1.69138, -11.821, 0.91 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 29/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.04144, 4.21728, 5.18, 0.91 ) }
    dend_0 { pt3dadd( -4.04144, 4.21728, 5.18, 0.91 ) }
    dend_0 { pt3dadd( -4.97909, 6.52825, 6.42977, 0.91 ) }
    dend_0 { pt3dadd( -5.5141, 8.44799, 7.35907, 0.68 ) }
    dend_0 { pt3dadd( -5.8074, 10.2501, 8.13442, 0.68 ) }
    dend_0 { pt3dadd( -5.92455, 11.5891, 8.67719, 0.68 ) }
    dend_0 { pt3dadd( -5.9882, 13.4026, 9.37813, 0.68 ) }
    dend_0 { pt3dadd( -5.8998, 15.068, 10.0086, 0.68 ) }
    dend_0 { pt3dadd( -5.59583, 17.3664, 10.9168, 0.68 ) }
    dend_0 { pt3dadd( -5.28432, 19.5823, 11.8056, 0.68 ) }
    dend_0 { pt3dadd( -5.04425, 21.131, 12.4707, 0.68 ) }
    dend_0 { pt3dadd( -4.83245, 22.524, 13.1511, 0.68 ) }
    dend_0 { pt3dadd( -4.60559, 24.0506, 13.9838, 0.68 ) }
    dend_0 { pt3dadd( -4.41948, 25.4947, 14.8839, 0.45 ) }
    dend_0 { pt3dadd( -4.21877, 27.2676, 16.2117, 0.45 ) }
    dend_0 { pt3dadd( -4.16222, 28.8515, 17.6136, 0.45 ) }
    dend_0 { pt3dadd( -4.16964, 30.1338, 18.8525, 0.45 ) }
    dend_0 { pt3dadd( -4.18836, 31.1977, 19.9065, 0.68 ) }
    dend_0 { pt3dadd( -4.19994, 32.2893, 20.9498, 0.45 ) }
    dend_0 { pt3dadd( -4.20295, 33.5199, 22.0556, 0.45 ) }
    dend_0 { pt3dadd( -4.2958, 34.4201, 22.8673, 0.45 ) }
    dend_0 { pt3dadd( -4.67368, 35.7248, 24.0209, 0.45 ) }
    dend_0 { pt3dadd( -5.08, 36.8359, 25.0323, 0.45 ) }
    dend_0 { pt3dadd( -5.50018, 38.1804, 26.2281, 0.45 ) }
    dend_0 { pt3dadd( -5.76756, 39.3839, 27.1908, 0.45 ) }
    dend_0 { pt3dadd( -6.10086, 40.9487, 28.3538, 0.45 ) }
    dend_0 { pt3dadd( -6.41778, 42.149, 29.2834, 0.45 ) }
    dend_0 { pt3dadd( -6.82552, 43.1832, 30.1798, 0.45 ) }
    dend_0 { pt3dadd( -7.52799, 44.5988, 31.481, 0.45 ) }
    dend_0 { pt3dadd( -8.06782, 45.6206, 32.436, 0.45 ) }
    dend_0 { pt3dadd( -8.5561, 46.7069, 33.4259, 0.45 ) }
    dend_0 { pt3dadd( -8.81334, 47.5189, 34.1277, 0.45 ) }
    dend_0 { pt3dadd( -9.26349, 49.296, 35.5717, 0.45 ) }
    dend_0 { pt3dadd( -9.5745, 50.6911, 36.6234, 0.45 ) }
    dend_0 { pt3dadd( -9.71681, 51.5908, 37.3257, 0.45 ) }
    dend_0 { pt3dadd( -9.62915, 52.8547, 38.2541, 0.45 ) }
    dend_0 { pt3dadd( -9.28748, 54.2292, 39.2056, 0.45 ) }
    dend_0 { pt3dadd( -8.74627, 55.7347, 40.233, 0.45 ) }
    dend_0 { pt3dadd( -8.19443, 57.0651, 41.0997, 0.45 ) }
    dend_0 { pt3dadd( -7.4136, 58.7188, 42.173, 0.45 ) }
    dend_0 { pt3dadd( -6.16932, 61.3219, 43.8917, 0.23 ) }
    dend_0 { pt3dadd( -5.70409, 62.2327, 44.514, 0.23 ) }
    dend_0 { pt3dadd( -5.01859, 63.5262, 45.3857, 0.23 ) }
    dend_0 { pt3dadd( -4.26041, 64.8879, 46.2491, 0.23 ) }
    dend_0 { pt3dadd( -3.44769, 66.3004, 47.0708, 0.23 ) }
    dend_0 { pt3dadd( -2.64431, 67.66, 47.8133, 0.23 ) }
    dend_0 { pt3dadd( -1.55614, 69.567, 48.8619, 0.23 ) }
    dend_0 { pt3dadd( -0.280931, 71.6618, 49.9797, 0.23 ) }
    dend_0 { pt3dadd( 0.988797, 73.5798, 50.9875, 0.23 ) }
    dend_0 { pt3dadd( 2.22134, 75.3102, 51.9353, 0.23 ) }
    dend_0 { pt3dadd( 3.17465, 76.7359, 52.6682, 0.23 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 80/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.68424, -2.3129, 0.0, 0.767569 ) }
    axon_0 { pt3dadd( 21.1553, -6.2612, 0.0, 0.767569 ) }
    axon_0 { pt3dadd( 35.6263, -10.2095, 0.0, 0.767569 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 83/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 5.19542, -19.9918, 5.50896, 0.68 ) }
    dend_36 { pt3dadd( 6.32799, -20.9871, 5.52597, 0.68 ) }
    dend_36 { pt3dadd( 8.30252, -22.7653, 5.46388, 0.68 ) }
    dend_36 { pt3dadd( 10.2086, -24.5365, 5.37177, 0.68 ) }
    dend_36 { pt3dadd( 11.9406, -26.1651, 5.29131, 0.68 ) }
    dend_36 { pt3dadd( 14.0822, -28.3084, 5.1949, 0.68 ) }
    dend_36 { pt3dadd( 15.9776, -30.3722, 5.10777, 0.68 ) }
    dend_36 { pt3dadd( 17.6352, -32.3693, 4.99542, 0.68 ) }
    dend_36 { pt3dadd( 18.6135, -33.6527, 4.89774, 0.68 ) }
    dend_36 { pt3dadd( 20.3761, -36.1102, 4.67907, 0.68 ) }
    dend_36 { pt3dadd( 21.985, -38.4386, 4.4567, 0.68 ) }
    dend_36 { pt3dadd( 23.2949, -40.4844, 4.26685, 0.68 ) }
    dend_36 { pt3dadd( 24.6437, -42.7521, 4.11676, 0.45 ) }
    dend_36 { pt3dadd( 25.7691, -44.8058, 3.97578, 0.45 ) }
    dend_36 { pt3dadd( 26.8328, -46.8812, 3.73345, 0.45 ) }
    dend_36 { pt3dadd( 27.748, -48.6978, 3.39736, 0.45 ) }
    dend_36 { pt3dadd( 29.0484, -51.1005, 2.74913, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 30.0889, -52.9906, 2.10608, 0.45 ) }
    dend_36 { pt3dadd( 31.1194, -54.8936, 1.32852, 0.68 ) }
    dend_36 { pt3dadd( 32.1867, -56.7696, 0.455244, 0.68 ) }
    dend_36 { pt3dadd( 33.4264, -58.8207, -0.582667, 0.68 ) }
    dend_36 { pt3dadd( 34.7463, -60.7787, -1.64566, 0.45 ) }
    dend_36 { pt3dadd( 36.1723, -62.6342, -2.69452, 0.45 ) }
    dend_36 { pt3dadd( 37.1694, -63.8862, -3.35986, 0.45 ) }
    dend_36 { pt3dadd( 38.9445, -66.0099, -4.32336, 0.45 ) }
    dend_36 { pt3dadd( 39.7855, -66.9782, -4.67277, 0.45 ) }
    dend_36 { pt3dadd( 40.9717, -68.2711, -5.06055, 0.45 ) }
    dend_36 { pt3dadd( 42.4884, -69.7867, -5.47957, 0.45 ) }
    dend_36 { pt3dadd( 44.594, -71.6393, -6.05247, 0.45 ) }
    dend_36 { pt3dadd( 46.5665, -73.1994, -6.644, 0.45 ) }
    dend_36 { pt3dadd( 48.585, -74.7165, -7.38197, 0.45 ) }
    dend_36 { pt3dadd( 49.8941, -75.5951, -7.91984, 0.45 ) }
    dend_36 { pt3dadd( 51.441, -76.5191, -8.6018, 0.45 ) }
    dend_36 { pt3dadd( 53.4997, -77.6756, -9.57028, 0.45 ) }
    dend_36 { pt3dadd( 55.7882, -78.9431, -10.7416, 0.45 ) }
    dend_36 { pt3dadd( 58.0711, -80.309, -11.9736, 0.45 ) }
    dend_36 { pt3dadd( 59.5918, -81.233, -12.8513, 0.45 ) }
    dend_36 { pt3dadd( 61.0977, -82.177, -13.735, 0.45 ) }
    dend_36 { pt3dadd( 61.9897, -82.7612, -14.2584, 0.45 ) }
    dend_36 { pt3dadd( 63.297, -83.6505, -14.9891, 0.45 ) }
    dend_36 { pt3dadd( 64.8992, -84.8287, -15.8758, 0.45 ) }
    dend_36 { pt3dadd( 66.5631, -86.0711, -16.8188, 0.23 ) }
    dend_36 { pt3dadd( 68.1417, -87.3241, -17.7439, 0.23 ) }
    dend_36 { pt3dadd( 69.4668, -88.3942, -18.5629, 0.23 ) }
    dend_36 { pt3dadd( 70.9353, -89.6684, -19.5854, 0.23 ) }
    dend_36 { pt3dadd( 72.6252, -91.3306, -20.8648, 0.23 ) }
    dend_36 { pt3dadd( 74.4024, -93.3353, -22.2585, 0.23 ) }
    dend_36 { pt3dadd( 74.7723, -93.7799, -22.5307, 0.23 ) }
    dend_36 { pt3dadd( 75.6108, -94.8306, -23.1084, 0.23 ) }
    dend_36 { pt3dadd( 77.1048, -96.8187, -24.1024, 0.23 ) }
    dend_36 { pt3dadd( 78.318, -98.548, -24.9064, 0.23 ) }
    dend_36 { pt3dadd( 80.1166, -101.164, -26.0512, 0.23 ) }
    dend_36 { pt3dadd( 81.6197, -103.48, -27.0265, 0.23 ) }
    dend_36 { pt3dadd( 82.8801, -105.543, -27.9227, 0.23 ) }
    dend_36 { pt3dadd( 84.3083, -108.097, -29.0262, 0.23 ) }
    dend_36 { pt3dadd( 85.4191, -110.125, -29.9058, 0.23 ) }
    dend_36 { pt3dadd( 85.8996, -111.079, -30.324, 0.23 ) }
    dend_36 { pt3dadd( 86.4391, -112.351, -30.8401, 0.23 ) }
    dend_36 { pt3dadd( 87.2502, -114.378, -31.5659, 0.23 ) }
    dend_36 { pt3dadd( 87.8573, -115.829, -32.0306, 0.23 ) }
    dend_36 { pt3dadd( 88.8746, -118.173, -32.6507, 0.23 ) }
    dend_36 { pt3dadd( 89.9776, -120.565, -33.1459, 0.23 ) }
    dend_36 { pt3dadd( 91.1984, -123.072, -33.523, 0.23 ) }
    dend_36 { pt3dadd( 92.2616, -125.131, -33.7377, 0.23 ) }
    dend_36 { pt3dadd( 92.8376, -126.158, -33.8088, 0.23 ) }
    dend_36 { pt3dadd( 94.0184, -128.096, -33.9129, 0.23 ) }
    dend_36 { pt3dadd( 95.5522, -130.614, -34.0359, 0.23 ) }
    dend_36 { pt3dadd( 96.9706, -132.756, -34.1471, 0.23 ) }
    dend_36 { pt3dadd( 98.0958, -134.305, -34.2481, 0.23 ) }
    dend_36 { pt3dadd( 98.9997, -135.528, -34.3421, 0.23 ) }
    dend_36 { pt3dadd( 99.9657, -136.856, -34.464, 0.23 ) }
    dend_36 { pt3dadd( 100.977, -138.303, -34.6458, 0.23 ) }
    dend_36 { pt3dadd( 103.186, -141.852, -35.2302, 0.23 ) }
    dend_36 { pt3dadd( 104.717, -144.701, -35.7378, 0.23 ) }
    dend_36 { pt3dadd( 105.65, -146.719, -36.1438, 0.23 ) }
    dend_36 { pt3dadd( 106.426, -148.633, -36.5653, 0.23 ) }
    dend_36 { pt3dadd( 107.338, -151.151, -37.165, 0.23 ) }
    dend_36 { pt3dadd( 108.324, -154.058, -37.87, 0.23 ) }
    dend_36 { pt3dadd( 109.937, -159.525, -39.2213, 0.23 ) }
    dend_36 { pt3dadd( 110.637, -162.168, -39.8805, 0.23 ) }
    dend_36 { pt3dadd( 111.217, -164.37, -40.4534, 0.23 ) }
    dend_36 { pt3dadd( 111.644, -165.899, -40.8617, 0.23 ) }
    dend_36 { pt3dadd( 120.08, -174.336, -42.6258, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 66/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.19542, -19.9918, 5.50896, 0.45 ) }
    dend_35 { pt3dadd( 4.85894, -21.5647, 3.76709, 0.45 ) }
    dend_35 { pt3dadd( 4.6709, -23.0234, 2.03724, 0.45 ) }
    dend_35 { pt3dadd( 4.57044, -23.7411, 1.17961, 0.45 ) }
    dend_35 { pt3dadd( 4.39012, -25.1574, -0.425983, 0.45 ) }
    dend_35 { pt3dadd( 4.32238, -26.3058, -1.73302, 0.45 ) }
    dend_35 { pt3dadd( 4.33864, -27.4026, -2.97436, 0.45 ) }
    dend_35 { pt3dadd( 4.50261, -28.4301, -4.13377, 0.45 ) }
    dend_35 { pt3dadd( 4.81533, -29.4335, -5.24065, 0.45 ) }
    dend_35 { pt3dadd( 5.28566, -30.5203, -6.37266, 0.45 ) }
    dend_35 { pt3dadd( 6.17977, -32.2876, -8.04471, 0.45 ) }
    dend_35 { pt3dadd( 6.88425, -33.6707, -9.23894, 0.45 ) }
    dend_35 { pt3dadd( 7.52449, -35.119, -10.408, 0.45 ) }
    dend_35 { pt3dadd( 8.14, -36.4122, -11.51, 0.45 ) }
    dend_35 { pt3dadd( 8.93492, -37.9852, -12.9674, 0.45 ) }
    dend_35 { pt3dadd( 9.32386, -38.8305, -13.8513, 0.45 ) }
    dend_35 { pt3dadd( 9.76145, -39.991, -15.0937, 0.45 ) }
    dend_35 { pt3dadd( 10.2349, -41.4047, -16.8315, 0.23 ) }
    dend_35 { pt3dadd( 10.7587, -43.1617, -19.2407, 0.23 ) }
    dend_35 { pt3dadd( 11.1575, -44.4664, -21.1556, 0.23 ) }
    dend_35 { pt3dadd( 11.6166, -45.9408, -23.4847, 0.23 ) }
    dend_35 { pt3dadd( 11.875, -46.7421, -24.7992, 0.23 ) }
    dend_35 { pt3dadd( 12.3542, -48.4619, -27.6018, 0.23 ) }
    dend_35 { pt3dadd( 12.6734, -49.8295, -29.7722, 0.23 ) }
    dend_35 { pt3dadd( 12.918, -51.3124, -31.9332, 0.23 ) }
    dend_35 { pt3dadd( 13.1806, -52.9905, -34.3414, 0.23 ) }
    dend_35 { pt3dadd( 13.3451, -54.0414, -35.8108, 0.23 ) }
    dend_35 { pt3dadd( 13.5732, -55.813, -38.2988, 0.23 ) }
    dend_35 { pt3dadd( 13.6375, -56.7537, -39.4801, 0.23 ) }
    dend_35 { pt3dadd( 13.6423, -57.9258, -40.9416, 0.23 ) }
    dend_35 { pt3dadd( 14.6538, -66.1424, -47.624, 0.23 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.66267, -8.26877, -17.7538, 0.45 ) }
    dend_33 { pt3dadd( -10.9314, -8.74057, -18.9441, 0.45 ) }
    dend_33 { pt3dadd( -12.041, -9.10503, -19.9831, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_33 { pt3dadd( -12.9777, -9.41548, -20.8801, 0.45 ) }
    dend_33 { pt3dadd( -13.937, -9.73492, -21.7288, 0.45 ) }
    dend_33 { pt3dadd( -15.0686, -10.1352, -22.7271, 0.45 ) }
    dend_33 { pt3dadd( -16.0649, -10.4723, -23.6106, 0.45 ) }
    dend_33 { pt3dadd( -17.2484, -10.8447, -24.7446, 0.45 ) }
    dend_33 { pt3dadd( -18.3971, -11.1756, -25.89, 0.45 ) }
    dend_33 { pt3dadd( -20.0125, -11.6598, -27.5247, 0.45 ) }
    dend_33 { pt3dadd( -20.9235, -11.9494, -28.4724, 0.45 ) }
    dend_33 { pt3dadd( -22.0998, -12.3713, -29.7638, 0.45 ) }
    dend_33 { pt3dadd( -23.004, -12.7286, -30.8583, 0.45 ) }
    dend_33 { pt3dadd( -23.7196, -13.0186, -31.7995, 0.45 ) }
    dend_33 { pt3dadd( -24.4821, -13.3272, -32.8843, 0.45 ) }
    dend_33 { pt3dadd( -25.1597, -13.6224, -33.9982, 0.45 ) }
    dend_33 { pt3dadd( -25.8482, -13.9434, -35.1356, 0.45 ) }
    dend_33 { pt3dadd( -26.5889, -14.412, -36.4308, 0.45 ) }
    dend_33 { pt3dadd( -33.6688, -16.2469, -44.1148, 0.45 ) }
    dend_33 { pt3dadd( -40.1627, -16.3667, -52.4939, 0.45 ) }
    dend_33 { pt3dadd( -45.7143, -15.8471, -61.5114, 0.45 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 18/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -9.66267, -8.26877, -17.7538, 0.45 ) }
    dend_32 { pt3dadd( -9.34193, -9.1635, -18.8509, 0.45 ) }
    dend_32 { pt3dadd( -9.11984, -9.89383, -19.7708, 0.45 ) }
    dend_32 { pt3dadd( -8.82046, -11.14, -21.2793, 0.45 ) }
    dend_32 { pt3dadd( -8.55539, -12.1642, -22.588, 0.45 ) }
    dend_32 { pt3dadd( -8.37547, -12.8131, -23.5004, 0.45 ) }
    dend_32 { pt3dadd( -8.13774, -13.5215, -24.5744, 0.45 ) }
    dend_32 { pt3dadd( -7.79866, -14.2904, -25.9579, 0.45 ) }
    dend_32 { pt3dadd( -7.64116, -14.6086, -26.5611, 0.45 ) }
    dend_32 { pt3dadd( -7.29646, -15.402, -27.8925, 0.45 ) }
    dend_32 { pt3dadd( -7.0286, -16.2321, -29.0568, 0.45 ) }
    dend_32 { pt3dadd( -6.78525, -17.2815, -30.2768, 0.45 ) }
    dend_32 { pt3dadd( -6.63071, -18.1667, -31.0559, 0.45 ) }
    dend_32 { pt3dadd( -6.48531, -18.8924, -31.6598, 0.45 ) }
    dend_32 { pt3dadd( -6.12807, -20.3029, -32.9447, 0.45 ) }
    dend_32 { pt3dadd( -5.76739, -21.5786, -34.1249, 0.45 ) }
    dend_32 { pt3dadd( -5.30625, -22.7997, -35.3408, 0.45 ) }
    dend_32 { pt3dadd( -4.72923, -23.8517, -36.6767, 0.45 ) }
    dend_32 { pt3dadd( -3.82934, -25.016, -38.7529, 0.45 ) }
    dend_32 { pt3dadd( -2.96775, -25.8043, -40.7097, 0.23 ) }
    dend_32 { pt3dadd( -2.63648, -26.0241, -41.4715, 0.23 ) }
    dend_32 { pt3dadd( -2.04687, -26.3125, -42.9475, 0.23 ) }
    dend_32 { pt3dadd( -1.32331, -26.6479, -44.7851, 0.23 ) }
    dend_32 { pt3dadd( -0.464013, -27.047, -47.0707, 0.23 ) }
    dend_32 { pt3dadd( -0.121174, -27.2719, -48.0538, 0.23 ) }
    dend_32 { pt3dadd( 0.498316, -27.8142, -50.0617, 0.23 ) }
    dend_32 { pt3dadd( 0.895057, -28.2252, -51.4976, 0.23 ) }
    dend_32 { pt3dadd( 1.50672, -28.8871, -53.9623, 0.23 ) }
    dend_32 { pt3dadd( 3.04237, -33.4051, -62.3377, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.9272, 4.12553, -3.7625, 1.36 ) }
    dend_19 { pt3dadd( 11.0038, 4.14409, -3.78399, 1.36 ) }
    dend_19 { pt3dadd( 12.3882, 4.47926, -4.17194, 1.82 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 50/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.9272, 4.12553, -3.7625, 0.45 ) }
    dend_18 { pt3dadd( 10.0725, 4.37488, -4.69203, 0.45 ) }
    dend_18 { pt3dadd( 9.16792, 4.63673, -5.55347, 0.45 ) }
    dend_18 { pt3dadd( 7.95627, 5.02872, -6.68898, 0.45 ) }
    dend_18 { pt3dadd( 7.02438, 5.41156, -7.58826, 0.45 ) }
    dend_18 { pt3dadd( 6.17433, 5.79015, -8.43421, 0.45 ) }
    dend_18 { pt3dadd( 5.29546, 6.22303, -9.3927, 0.45 ) }
    dend_18 { pt3dadd( 4.52636, 6.64103, -10.4094, 0.45 ) }
    dend_18 { pt3dadd( 4.10319, 6.96567, -11.1766, 0.45 ) }
    dend_18 { pt3dadd( 3.66505, 7.45899, -12.3732, 0.45 ) }
    dend_18 { pt3dadd( 3.25904, 8.0761, -13.9675, 0.45 ) }
    dend_18 { pt3dadd( 2.92589, 8.73888, -15.838, 0.45 ) }
    dend_18 { pt3dadd( 2.56434, 9.5325, -18.3354, 0.45 ) }
    dend_18 { pt3dadd( 2.2813, 10.1719, -20.6023, 0.45 ) }
    dend_18 { pt3dadd( 1.98985, 10.6821, -22.7046, 0.45 ) }
    dend_18 { pt3dadd( 1.61263, 11.1851, -25.0974, 0.45 ) }
    dend_18 { pt3dadd( 1.17234, 11.6681, -27.4241, 0.45 ) }
    dend_18 { pt3dadd( 0.803877, 11.9569, -28.8608, 0.45 ) }
    dend_18 { pt3dadd( 0.427109, 12.1657, -29.8825, 0.45 ) }
    dend_18 { pt3dadd( -0.397484, 12.5335, -31.6451, 0.45 ) }
    dend_18 { pt3dadd( -1.17442, 12.8715, -33.075, 0.45 ) }
    dend_18 { pt3dadd( -1.88007, 13.1704, -34.263, 0.45 ) }
    dend_18 { pt3dadd( -2.61239, 13.4601, -35.494, 0.45 ) }
    dend_18 { pt3dadd( -3.47881, 13.82, -36.936, 0.45 ) }
    dend_18 { pt3dadd( -4.01972, 14.055, -37.8536, 0.45 ) }
    dend_18 { pt3dadd( -5.02266, 14.5201, -39.7654, 0.23 ) }
    dend_18 { pt3dadd( -5.76832, 14.932, -41.3304, 0.23 ) }
    dend_18 { pt3dadd( -7.07553, 15.7925, -44.3932, 0.23 ) }
    dend_18 { pt3dadd( -7.71231, 16.2386, -45.9631, 0.23 ) }
    dend_18 { pt3dadd( -8.42768, 16.7782, -47.836, 0.23 ) }
    dend_18 { pt3dadd( -9.45423, 17.6006, -50.5693, 0.23 ) }
    dend_18 { pt3dadd( -10.1999, 18.236, -52.5366, 0.23 ) }
    dend_18 { pt3dadd( -11.1099, 19.1417, -55.0223, 0.23 ) }
    dend_18 { pt3dadd( -11.8405, 20.0448, -57.1728, 0.23 ) }
    dend_18 { pt3dadd( -15.6056, 24.0622, -66.0699, 0.23 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 85/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 29.7615, -17.9407, 22.4143, 0.45 ) }
    dend_16 { pt3dadd( 30.2871, -18.5015, 23.2017, 0.45 ) }
    dend_16 { pt3dadd( 31.187, -19.1868, 24.4685, 0.45 ) }
    dend_16 { pt3dadd( 32.2283, -19.8088, 25.8343, 0.45 ) }
    dend_16 { pt3dadd( 32.7861, -20.1431, 26.5264, 0.45 ) }
    dend_16 { pt3dadd( 33.5241, -20.5978, 27.4699, 0.45 ) }
    dend_16 { pt3dadd( 34.4391, -21.174, 28.7148, 0.45 ) }
    dend_16 { pt3dadd( 35.5648, -21.8326, 30.3407, 0.45 ) }
    dend_16 { pt3dadd( 36.2289, -22.2019, 31.3141, 0.45 ) }
    dend_16 { pt3dadd( 36.9509, -22.5787, 32.4241, 0.45 ) }
    dend_16 { pt3dadd( 37.6156, -22.8963, 33.4956, 0.45 ) }
    dend_16 { pt3dadd( 38.3261, -23.2027, 34.6287, 0.45 ) }
    dend_16 { pt3dadd( 39.1234, -23.5823, 35.8772, 0.45 ) }
    dend_16 { pt3dadd( 40.0154, -23.9764, 37.1745, 0.45 ) }
    dend_16 { pt3dadd( 40.85, -24.2352, 38.2785, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( 41.8166, -24.4628, 39.4261, 0.45 ) }
    dend_16 { pt3dadd( 42.9353, -24.7288, 40.5755, 0.45 ) }
    dend_16 { pt3dadd( 44.2638, -25.0301, 41.7276, 0.45 ) }
    dend_16 { pt3dadd( 45.8909, -25.2668, 42.918, 0.45 ) }
    dend_16 { pt3dadd( 47.4621, -25.3554, 44.0007, 0.23 ) }
    dend_16 { pt3dadd( 48.9261, -25.4141, 44.962, 0.23 ) }
    dend_16 { pt3dadd( 50.3882, -25.4612, 45.8542, 0.23 ) }
    dend_16 { pt3dadd( 52.4031, -25.4585, 47.0386, 0.23 ) }
    dend_16 { pt3dadd( 55.6707, -25.3229, 48.918, 0.23 ) }
    dend_16 { pt3dadd( 58.3006, -25.1655, 50.3864, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 10/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 29.7615, -17.9407, 22.4143, 0.45 ) }
    dend_15 { pt3dadd( 31.6161, -18.9936, 22.7143, 0.45 ) }
    dend_15 { pt3dadd( 32.558, -19.4191, 22.904, 0.45 ) }
    dend_15 { pt3dadd( 34.4901, -20.27, 23.2813, 0.23 ) }
    dend_15 { pt3dadd( 36.0202, -20.8904, 23.5635, 0.23 ) }
    dend_15 { pt3dadd( 37.4163, -21.3609, 23.8076, 0.68 ) }
    dend_15 { pt3dadd( 39.2457, -21.9236, 24.1247, 0.45 ) }
    dend_15 { pt3dadd( 41.4148, -22.4395, 24.5086, 0.45 ) }
    dend_15 { pt3dadd( 44.004, -22.9009, 24.9772, 0.45 ) }
    dend_15 { pt3dadd( 45.653, -23.1234, 25.2779, 0.45 ) }
    dend_15 { pt3dadd( 47.749, -23.3315, 25.6824, 0.45 ) }
    dend_15 { pt3dadd( 50.2517, -23.5507, 26.1699, 0.45 ) }
    dend_15 { pt3dadd( 52.4008, -23.7005, 26.5719, 0.45 ) }
    dend_15 { pt3dadd( 53.6735, -23.7749, 26.8201, 0.45 ) }
    dend_15 { pt3dadd( 54.9043, -23.7744, 27.1045, 0.45 ) }
    dend_15 { pt3dadd( 56.1769, -23.8102, 27.4384, 0.45 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 26/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.54462, -15.5364, 13.2442, 0.45 ) }
    dend_13 { pt3dadd( -7.68239, -15.2853, 14.0226, 0.45 ) }
    dend_13 { pt3dadd( -8.01286, -15.0556, 15.5605, 0.45 ) }
    dend_13 { pt3dadd( -8.27766, -15.1118, 16.6328, 0.45 ) }
    dend_13 { pt3dadd( -8.58283, -15.3862, 17.6921, 0.45 ) }
    dend_13 { pt3dadd( -8.72743, -15.5274, 18.1265, 0.45 ) }
    dend_13 { pt3dadd( -8.94364, -15.7637, 18.8409, 0.45 ) }
    dend_13 { pt3dadd( -9.25286, -16.2713, 20.0686, 0.45 ) }
    dend_13 { pt3dadd( -9.47263, -16.733, 20.9619, 0.45 ) }
    dend_13 { pt3dadd( -9.7071, -17.4011, 22.0647, 0.45 ) }
    dend_13 { pt3dadd( -9.74192, -17.6899, 22.5397, 0.45 ) }
    dend_13 { pt3dadd( -9.72288, -18.2262, 23.4377, 0.45 ) }
    dend_13 { pt3dadd( -9.65527, -18.8402, 24.5141, 0.45 ) }
    dend_13 { pt3dadd( -9.56245, -19.6132, 25.8573, 0.45 ) }
    dend_13 { pt3dadd( -9.42958, -20.277, 26.9578, 0.45 ) }
    dend_13 { pt3dadd( -9.18805, -21.0236, 28.2721, 0.45 ) }
    dend_13 { pt3dadd( -8.91586, -21.6907, 29.4662, 0.45 ) }
    dend_13 { pt3dadd( -8.62364, -22.2808, 30.5526, 0.45 ) }
    dend_13 { pt3dadd( -8.2962, -22.8388, 31.6711, 0.45 ) }
    dend_13 { pt3dadd( -7.96316, -23.3477, 32.8923, 0.45 ) }
    dend_13 { pt3dadd( -7.67827, -23.8825, 34.3214, 0.45 ) }
    dend_13 { pt3dadd( -7.54429, -24.2343, 35.1685, 0.45 ) }
    dend_13 { pt3dadd( -7.46771, -24.5566, 35.9175, 0.45 ) }
    dend_13 { pt3dadd( -7.51918, -25.0389, 36.9797, 0.45 ) }
    dend_13 { pt3dadd( -7.82752, -25.6245, 38.1433, 0.45 ) }
    dend_13 { pt3dadd( -8.14712, -26.0849, 38.8885, 0.45 ) }
    dend_13 { pt3dadd( -8.69103, -26.8372, 39.8979, 0.45 ) }
    dend_13 { pt3dadd( -9.56522, -27.8162, 41.2301, 0.45 ) }
    dend_13 { pt3dadd( -10.3578, -28.5981, 42.3072, 0.45 ) }
    dend_13 { pt3dadd( -10.9096, -29.1841, 43.0596, 0.45 ) }
    dend_13 { pt3dadd( -11.5525, -29.9154, 43.9779, 0.45 ) }
    dend_13 { pt3dadd( -12.0805, -30.5047, 44.7327, 0.45 ) }
    dend_13 { pt3dadd( -13.0105, -31.4768, 45.9637, 0.45 ) }
    dend_13 { pt3dadd( -13.5484, -32.1426, 46.7159, 0.45 ) }
    dend_13 { pt3dadd( -14.3226, -33.3873, 47.9483, 0.45 ) }
    dend_13 { pt3dadd( -14.9834, -34.5432, 49.0605, 0.45 ) }
    dend_13 { pt3dadd( -15.243, -35.0191, 49.5428, 0.45 ) }
    dend_13 { pt3dadd( -15.6463, -35.9682, 50.5428, 0.45 ) }
    dend_13 { pt3dadd( -15.8725, -37.0449, 51.6518, 0.45 ) }
    dend_13 { pt3dadd( -15.8297, -38.1465, 52.8696, 0.45 ) }
    dend_13 { pt3dadd( -15.6303, -38.8162, 53.6711, 0.45 ) }
    dend_13 { pt3dadd( -15.1727, -39.5177, 54.4311, 0.45 ) }
    dend_13 { pt3dadd( -14.4476, -40.1521, 55.0859, 0.45 ) }
    dend_13 { pt3dadd( -12.919, -41.0417, 55.9568, 0.45 ) }
    dend_13 { pt3dadd( -11.2244, -41.7316, 56.633, 0.45 ) }
    dend_13 { pt3dadd( -9.35011, -42.2586, 57.1668, 0.23 ) }
    dend_13 { pt3dadd( -6.75951, -42.9515, 57.7796, 0.23 ) }
    dend_13 { pt3dadd( -3.68805, -43.7487, 58.3553, 0.23 ) }
    dend_13 { pt3dadd( -1.50239, -44.2303, 58.6577, 0.23 ) }
    dend_13 { pt3dadd( -0.0486871, -44.4194, 58.7702, 0.23 ) }
    dend_13 { pt3dadd( 1.72677, -44.5185, 58.8033, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 77/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.54462, -15.5364, 13.2442, 0.68 ) }
    dend_12 { pt3dadd( -8.75223, -16.1725, 13.7939, 0.68 ) }
    dend_12 { pt3dadd( -11.1286, -17.3868, 14.821, 0.45 ) }
    dend_12 { pt3dadd( -13.2319, -18.5306, 15.6897, 0.45 ) }
    dend_12 { pt3dadd( -15.0454, -19.5722, 16.4423, 0.68 ) }
    dend_12 { pt3dadd( -16.6806, -20.5971, 17.137, 0.68 ) }
    dend_12 { pt3dadd( -17.5658, -21.1788, 17.5155, 0.68 ) }
    dend_12 { pt3dadd( -19.2469, -22.3363, 18.2116, 0.45 ) }
    dend_12 { pt3dadd( -21.6212, -24.0412, 19.1342, 0.45 ) }
    dend_12 { pt3dadd( -22.9968, -25.0853, 19.6205, 0.45 ) }
    dend_12 { pt3dadd( -24.6396, -26.3683, 20.1405, 0.45 ) }
    dend_12 { pt3dadd( -26.2793, -27.6408, 20.6088, 0.45 ) }
    dend_12 { pt3dadd( -27.6726, -28.7593, 20.9928, 0.45 ) }
    dend_12 { pt3dadd( -29.303, -30.1051, 21.448, 0.68 ) }
    dend_12 { pt3dadd( -30.7319, -31.2678, 21.8103, 0.68 ) }
    dend_12 { pt3dadd( -33.2232, -33.2729, 22.4359, 0.68 ) }
    dend_12 { pt3dadd( -35.5369, -35.1445, 23.0668, 0.45 ) }
    dend_12 { pt3dadd( -37.6929, -36.986, 23.7117, 0.45 ) }
    dend_12 { pt3dadd( -39.2547, -38.3733, 24.2186, 0.45 ) }
    dend_12 { pt3dadd( -40.5942, -39.5905, 24.669, 0.45 ) }
    dend_12 { pt3dadd( -42.6106, -41.4058, 25.3555, 0.45 ) }
    dend_12 { pt3dadd( -44.1719, -42.7981, 25.8625, 0.45 ) }
    dend_12 { pt3dadd( -46.1326, -44.4844, 26.4748, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -46.9816, -45.1935, 26.7338, 0.45 ) }
    dend_12 { pt3dadd( -48.5157, -46.5036, 27.1865, 0.45 ) }
    dend_12 { pt3dadd( -49.744, -47.5399, 27.5275, 0.45 ) }
    dend_12 { pt3dadd( -51.1512, -48.6634, 27.8456, 0.45 ) }
    dend_12 { pt3dadd( -52.463, -49.641, 28.0993, 0.45 ) }
    dend_12 { pt3dadd( -54.304, -50.8761, 28.4016, 0.45 ) }
    dend_12 { pt3dadd( -56.0054, -51.9657, 28.6358, 0.45 ) }
    dend_12 { pt3dadd( -57.8349, -53.0972, 28.8399, 0.45 ) }
    dend_12 { pt3dadd( -59.1189, -53.8364, 28.9474, 0.45 ) }
    dend_12 { pt3dadd( -61.0916, -54.9776, 29.0924, 0.45 ) }
    dend_12 { pt3dadd( -63.4532, -56.3853, 29.2668, 0.45 ) }
    dend_12 { pt3dadd( -65.4008, -57.5589, 29.4726, 0.45 ) }
    dend_12 { pt3dadd( -66.924, -58.5141, 29.7068, 0.45 ) }
    dend_12 { pt3dadd( -68.9057, -59.8722, 30.1161, 0.45 ) }
    dend_12 { pt3dadd( -71.3987, -61.6823, 30.7788, 0.45 ) }
    dend_12 { pt3dadd( -73.4022, -63.2552, 31.4455, 0.45 ) }
    dend_12 { pt3dadd( -75.2488, -64.8412, 32.1809, 0.45 ) }
    dend_12 { pt3dadd( -77.5585, -66.9326, 33.2444, 0.45 ) }
    dend_12 { pt3dadd( -79.406, -68.599, 34.1946, 0.45 ) }
    dend_12 { pt3dadd( -80.5721, -69.6577, 34.8447, 0.45 ) }
    dend_12 { pt3dadd( -82.702, -71.5241, 36.058, 0.45 ) }
    dend_12 { pt3dadd( -84.4125, -72.9384, 37.0037, 0.45 ) }
    dend_12 { pt3dadd( -85.8535, -74.1104, 37.7716, 0.45 ) }
    dend_12 { pt3dadd( -88.6932, -76.4406, 39.22, 0.45 ) }
    dend_12 { pt3dadd( -90.1192, -77.6308, 39.8871, 0.45 ) }
    dend_12 { pt3dadd( -90.9533, -78.325, 40.2473, 0.45 ) }
    dend_12 { pt3dadd( -92.4191, -79.615, 40.8239, 0.45 ) }
    dend_12 { pt3dadd( -93.7718, -80.9604, 41.2776, 0.45 ) }
    dend_12 { pt3dadd( -95.1238, -82.4639, 41.594, 0.45 ) }
    dend_12 { pt3dadd( -96.4472, -84.0603, 41.7782, 0.45 ) }
    dend_12 { pt3dadd( -97.8182, -85.7246, 41.889, 0.45 ) }
    dend_12 { pt3dadd( -99.6708, -88.1076, 41.9312, 0.45 ) }
    dend_12 { pt3dadd( -101.517, -90.6404, 41.861, 0.45 ) }
    dend_12 { pt3dadd( -105.346, -95.9128, 41.5317, 0.45 ) }
    dend_12 { pt3dadd( -106.869, -98.025, 41.3721, 0.45 ) }
    dend_12 { pt3dadd( -108.523, -100.362, 41.2067, 0.45 ) }
    dend_12 { pt3dadd( -110.701, -103.522, 41.0269, 0.45 ) }
    dend_12 { pt3dadd( -113.005, -106.814, 40.9285, 0.45 ) }
    dend_12 { pt3dadd( -114.9, -109.527, 40.9663, 0.45 ) }
    dend_12 { pt3dadd( -116.307, -111.567, 41.1194, 0.45 ) }
    dend_12 { pt3dadd( -117.983, -113.843, 41.4667, 0.45 ) }
    dend_12 { pt3dadd( -120.345, -116.924, 42.0895, 0.45 ) }
    dend_12 { pt3dadd( -121.112, -117.839, 42.3416, 0.45 ) }
    dend_12 { pt3dadd( -122.974, -119.933, 43.0554, 0.45 ) }
    dend_12 { pt3dadd( -124.635, -121.759, 43.7355, 0.45 ) }
    dend_12 { pt3dadd( -127.006, -124.242, 44.6352, 0.45 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 46/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.15283, 0.681023, 7.95185, 0.45 ) }
    dend_10 { pt3dadd( -8.834, 0.221868, 8.77646, 0.45 ) }
    dend_10 { pt3dadd( -8.52751, -0.153608, 9.74641, 0.45 ) }
    dend_10 { pt3dadd( -8.38188, -0.202502, 10.2012, 0.45 ) }
    dend_10 { pt3dadd( -7.96801, -0.117615, 11.1227, 0.45 ) }
    dend_10 { pt3dadd( -7.5577, 0.0471587, 11.9389, 0.45 ) }
    dend_10 { pt3dadd( -7.1895, 0.231634, 12.7068, 0.45 ) }
    dend_10 { pt3dadd( -6.74421, 0.521304, 13.6591, 0.45 ) }
    dend_10 { pt3dadd( -6.32092, 0.870842, 14.7263, 0.45 ) }
    dend_10 { pt3dadd( -5.79359, 1.38626, 16.1882, 0.45 ) }
    dend_10 { pt3dadd( -5.56624, 1.60984, 16.7868, 0.45 ) }
    dend_10 { pt3dadd( -5.3509, 1.78603, 17.2871, 0.45 ) }
    dend_10 { pt3dadd( -5.01282, 2.01604, 18.0077, 0.45 ) }
    dend_10 { pt3dadd( -4.83238, 2.11011, 18.4881, 0.45 ) }
    dend_10 { pt3dadd( -4.67495, 2.20068, 19.3439, 0.45 ) }
    dend_10 { pt3dadd( -4.61821, 2.34428, 20.3588, 0.45 ) }
    dend_10 { pt3dadd( -4.54727, 2.51233, 21.3348, 0.45 ) }
    dend_10 { pt3dadd( -4.50636, 2.63756, 21.9748, 0.45 ) }
    dend_10 { pt3dadd( -4.39754, 2.98891, 23.3675, 0.45 ) }
    dend_10 { pt3dadd( -4.21987, 3.4997, 25.0649, 0.45 ) }
    dend_10 { pt3dadd( -4.07837, 3.91465, 26.2547, 0.45 ) }
    dend_10 { pt3dadd( -3.82889, 4.44915, 27.54, 0.45 ) }
    dend_10 { pt3dadd( -3.50984, 5.06411, 28.9854, 0.45 ) }
    dend_10 { pt3dadd( -3.10921, 5.71259, 30.4597, 0.23 ) }
    dend_10 { pt3dadd( -2.62282, 6.4077, 31.8271, 0.23 ) }
    dend_10 { pt3dadd( -2.14765, 6.99928, 32.8682, 0.23 ) }
    dend_10 { pt3dadd( -1.18328, 8.12527, 34.7959, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 73/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -9.15283, 0.681023, 7.95185, 0.68 ) }
    dend_9 { pt3dadd( -10.3487, 0.358079, 8.17407, 0.68 ) }
    dend_9 { pt3dadd( -12.3822, -0.155715, 8.65703, 0.45 ) }
    dend_9 { pt3dadd( -13.8801, -0.480126, 9.04405, 0.45 ) }
    dend_9 { pt3dadd( -15.8654, -0.838505, 9.65134, 0.45 ) }
    dend_9 { pt3dadd( -17.3172, -1.10392, 10.1728, 0.45 ) }
    dend_9 { pt3dadd( -19.2215, -1.54936, 10.9478, 0.45 ) }
    dend_9 { pt3dadd( -20.1407, -1.79726, 11.4023, 0.45 ) }
    dend_9 { pt3dadd( -21.6569, -2.27934, 12.3039, 0.45 ) }
    dend_9 { pt3dadd( -22.9152, -2.76614, 13.1208, 0.45 ) }
    dend_9 { pt3dadd( -23.9748, -3.30428, 13.8585, 0.45 ) }
    dend_9 { pt3dadd( -25.5142, -4.22815, 15.0444, 0.45 ) }
    dend_9 { pt3dadd( -26.0837, -4.62312, 15.5503, 0.68 ) }
    dend_9 { pt3dadd( -27.1673, -5.50292, 16.6305, 0.68 ) }
    dend_9 { pt3dadd( -28.3475, -6.54693, 17.9634, 0.68 ) }
    dend_9 { pt3dadd( -29.7482, -7.71053, 19.5621, 0.45 ) }
    dend_9 { pt3dadd( -30.9523, -8.54247, 21.0212, 0.45 ) }
    dend_9 { pt3dadd( -32.2428, -9.28111, 22.7015, 0.45 ) }
    dend_9 { pt3dadd( -33.1265, -9.81022, 24.0315, 0.45 ) }
    dend_9 { pt3dadd( -33.6325, -10.136, 24.9189, 0.45 ) }
    dend_9 { pt3dadd( -34.2866, -10.5719, 26.2702, 0.45 ) }
    dend_9 { pt3dadd( -34.9832, -10.9686, 27.8215, 0.45 ) }
    dend_9 { pt3dadd( -35.4065, -11.1628, 28.7966, 0.45 ) }
    dend_9 { pt3dadd( -36.0539, -11.5259, 30.457, 0.45 ) }
    dend_9 { pt3dadd( -36.6147, -11.856, 31.8053, 0.45 ) }
    dend_9 { pt3dadd( -36.9262, -12.0559, 32.4445, 0.45 ) }
    dend_9 { pt3dadd( -37.6482, -12.5512, 33.7732, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( -38.5831, -13.0899, 35.1319, 0.45 ) }
    dend_9 { pt3dadd( -39.7657, -13.5815, 36.5504, 0.45 ) }
    dend_9 { pt3dadd( -41.3142, -13.9907, 38.1189, 0.45 ) }
    dend_9 { pt3dadd( -42.8449, -14.2406, 39.4638, 0.45 ) }
    dend_9 { pt3dadd( -43.8602, -14.3662, 40.25, 0.45 ) }
    dend_9 { pt3dadd( -45.1952, -14.506, 41.1188, 0.45 ) }
    dend_9 { pt3dadd( -46.3027, -14.6152, 41.7721, 0.45 ) }
    dend_9 { pt3dadd( -48.0726, -14.7665, 42.7965, 0.45 ) }
    dend_9 { pt3dadd( -50.0602, -14.913, 43.9483, 0.23 ) }
    dend_9 { pt3dadd( -51.1545, -14.9994, 44.5572, 0.23 ) }
    dend_9 { pt3dadd( -53.6008, -15.1427, 45.8475, 0.23 ) }
    dend_9 { pt3dadd( -55.2987, -15.2052, 46.7828, 0.23 ) }
    dend_9 { pt3dadd( -56.9087, -15.2862, 47.6536, 0.23 ) }
    dend_9 { pt3dadd( -58.3815, -15.3874, 48.4129, 0.23 ) }
    dend_9 { pt3dadd( -60.3751, -15.5043, 49.456, 0.23 ) }
    dend_9 { pt3dadd( -62.468, -15.4942, 50.5617, 0.23 ) }
    dend_9 { pt3dadd( -64.5512, -15.2404, 51.7405, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 17/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.056, 1.69138, -11.821, 0.68 ) }
    dend_5 { pt3dadd( -28.6663, 1.804, -12.5473, 0.68 ) }
    dend_5 { pt3dadd( -29.2477, 1.99456, -13.2347, 0.68 ) }
    dend_5 { pt3dadd( -29.9748, 2.23564, -14.0499, 0.68 ) }
    dend_5 { pt3dadd( -31.2451, 2.57346, -15.2447, 0.68 ) }
    dend_5 { pt3dadd( -32.6922, 2.94746, -16.4847, 0.68 ) }
    dend_5 { pt3dadd( -34.3587, 3.45747, -17.7659, 0.68 ) }
    dend_5 { pt3dadd( -35.6635, 3.90841, -18.6797, 0.68 ) }
    dend_5 { pt3dadd( -37.1291, 4.47448, -19.6177, 0.68 ) }
    dend_5 { pt3dadd( -39.0841, 5.25544, -20.8053, 0.68 ) }
    dend_5 { pt3dadd( -40.4608, 5.79832, -21.5833, 0.68 ) }
    dend_5 { pt3dadd( -43.0861, 6.73069, -22.9667, 0.45 ) }
    dend_5 { pt3dadd( -45.0546, 7.40614, -24.0672, 0.45 ) }
    dend_5 { pt3dadd( -46.5163, 7.89452, -24.9782, 0.45 ) }
    dend_5 { pt3dadd( -48.1795, 8.44752, -26.1558, 0.45 ) }
    dend_5 { pt3dadd( -49.5393, 8.87006, -27.2632, 0.45 ) }
    dend_5 { pt3dadd( -50.5297, 9.09779, -28.1444, 0.45 ) }
    dend_5 { pt3dadd( -52.4493, 9.3726, -30.0063, 0.45 ) }
    dend_5 { pt3dadd( -54.0473, 9.54229, -31.5808, 0.45 ) }
    dend_5 { pt3dadd( -55.6235, 9.68251, -33.0311, 0.45 ) }
    dend_5 { pt3dadd( -56.6137, 9.76871, -33.9492, 0.45 ) }
    dend_5 { pt3dadd( -57.966, 9.86779, -35.2267, 0.45 ) }
    dend_5 { pt3dadd( -58.7307, 9.89908, -35.8987, 0.45 ) }
    dend_5 { pt3dadd( -59.7524, 9.90643, -36.6102, 0.45 ) }
    dend_5 { pt3dadd( -62.4006, 9.93076, -38.1488, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 42/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -28.056, 1.69138, -11.821, 0.68 ) }
    dend_2 { pt3dadd( -29.5683, 0.965552, -11.676, 0.68 ) }
    dend_2 { pt3dadd( -31.2147, 0.13721, -11.579, 0.68 ) }
    dend_2 { pt3dadd( -32.3936, -0.478658, -11.5322, 0.45 ) }
    dend_2 { pt3dadd( -33.6688, -1.14795, -11.4967, 0.45 ) }
    dend_2 { pt3dadd( -34.8214, -1.75143, -11.4687, 0.45 ) }
    dend_2 { pt3dadd( -36.0082, -2.36173, -11.4453, 0.45 ) }
    dend_2 { pt3dadd( -37.4385, -3.10518, -11.4342, 0.45 ) }
    dend_2 { pt3dadd( -38.4296, -3.63865, -11.4299, 0.45 ) }
    dend_2 { pt3dadd( -39.4477, -4.19686, -11.4289, 0.45 ) }
    dend_2 { pt3dadd( -41.0526, -5.11145, -11.4096, 0.45 ) }
    dend_2 { pt3dadd( -42.2053, -5.79055, -11.3946, 0.45 ) }
    dend_2 { pt3dadd( -43.3458, -6.48018, -11.3942, 0.45 ) }
    dend_2 { pt3dadd( -44.7899, -7.36339, -11.4142, 0.45 ) }
    dend_2 { pt3dadd( -46.0701, -8.15917, -11.4628, 0.45 ) }
    dend_2 { pt3dadd( -46.7968, -8.62319, -11.5045, 0.45 ) }
    dend_2 { pt3dadd( -47.7665, -9.25257, -11.5803, 0.45 ) }
    dend_2 { pt3dadd( -48.3654, -9.63148, -11.6347, 0.45 ) }
    dend_2 { pt3dadd( -49.5714, -10.3703, -11.7694, 0.45 ) }
    dend_2 { pt3dadd( -50.6981, -11.0774, -11.9053, 0.45 ) }
    dend_2 { pt3dadd( -52.0119, -11.873, -12.0644, 0.45 ) }
    dend_2 { pt3dadd( -53.0105, -12.3993, -12.174, 0.45 ) }
    dend_2 { pt3dadd( -54.2324, -12.9499, -12.2867, 0.45 ) }
    dend_2 { pt3dadd( -55.4669, -13.4655, -12.3994, 0.45 ) }
    dend_2 { pt3dadd( -56.2707, -13.7838, -12.4768, 0.45 ) }
    dend_2 { pt3dadd( -57.4709, -14.2344, -12.5986, 0.45 ) }
    dend_2 { pt3dadd( -59.154, -14.8257, -12.7629, 0.45 ) }
    dend_2 { pt3dadd( -60.4, -15.2594, -12.8706, 0.45 ) }
    dend_2 { pt3dadd( -61.3962, -15.6348, -12.9387, 0.45 ) }
    dend_2 { pt3dadd( -62.6878, -16.1712, -13.0045, 0.45 ) }
    dend_2 { pt3dadd( -63.3449, -16.4698, -13.0271, 0.45 ) }
    dend_2 { pt3dadd( -64.5965, -17.1372, -13.0814, 0.45 ) }
    dend_2 { pt3dadd( -66.1947, -18.1074, -13.2129, 0.45 ) }
    dend_2 { pt3dadd( -67.5004, -18.9376, -13.3731, 0.45 ) }
    dend_2 { pt3dadd( -69.0425, -19.9161, -13.6101, 0.45 ) }
    dend_2 { pt3dadd( -71.1151, -21.2388, -13.9986, 0.23 ) }
    dend_2 { pt3dadd( -72.7856, -22.2732, -14.3226, 0.23 ) }
    dend_2 { pt3dadd( -74.7227, -23.4114, -14.7172, 0.23 ) }
    dend_2 { pt3dadd( -76.3022, -24.2958, -15.0351, 0.23 ) }
    dend_2 { pt3dadd( -78.0297, -25.1876, -15.3906, 0.23 ) }
    dend_2 { pt3dadd( -79.9877, -26.1142, -15.7927, 0.23 ) }
    dend_2 { pt3dadd( -82.598, -27.265, -16.3099, 0.23 ) }
    dend_2 { pt3dadd( -84.4035, -27.9677, -16.6346, 0.23 ) }
    dend_2 { pt3dadd( -86.242, -28.6033, -16.9341, 0.23 ) }
    dend_2 { pt3dadd( -87.7026, -29.0797, -17.1721, 0.23 ) }
    dend_2 { pt3dadd( -89.4978, -29.6348, -17.4969, 0.23 ) }
    dend_2 { pt3dadd( -90.7147, -29.9832, -17.7594, 0.23 ) }
    dend_2 { pt3dadd( -91.8046, -30.2725, -18.064, 0.23 ) }
    dend_2 { pt3dadd( -92.6377, -30.4664, -18.3347, 0.23 ) }
    dend_2 { pt3dadd( -93.7523, -30.7077, -18.7561, 0.23 ) }
    dend_2 { pt3dadd( -94.5657, -30.9017, -19.0795, 0.23 ) }
    dend_2 { pt3dadd( -95.5529, -31.1437, -19.4899, 0.23 ) }
    dend_2 { pt3dadd( -96.5344, -31.3834, -19.8867, 0.23 ) }
    dend_2 { pt3dadd( -97.1129, -31.5495, -20.1091, 0.23 ) }
    dend_2 { pt3dadd( -98.2387, -31.9166, -20.5107, 0.23 ) }
    dend_2 { pt3dadd( -99.2957, -32.2844, -20.8343, 0.23 ) }
    dend_2 { pt3dadd( -101.033, -32.9864, -21.3015, 0.23 ) }
    dend_2 { pt3dadd( -102.019, -33.4258, -21.5428, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( -103.35, -34.0686, -21.8337, 0.23 ) }
    dend_2 { pt3dadd( -104.335, -34.5688, -22.038, 0.23 ) }
    dend_2 { pt3dadd( -105.364, -35.0875, -22.2436, 0.23 ) }
    dend_2 { pt3dadd( -106.515, -35.6356, -22.4683, 0.23 ) }
    dend_2 { pt3dadd( -108.324, -36.4772, -22.8128, 0.23 ) }
    dend_2 { pt3dadd( -109.468, -36.9806, -23.0317, 0.23 ) }
    dend_2 { pt3dadd( -110.544, -37.4112, -23.2158, 0.23 ) }
    dend_2 { pt3dadd( -111.546, -37.7934, -23.3757, 0.23 ) }
    dend_2 { pt3dadd( -114.093, -38.7196, -23.7838, 0.23 ) }
    dend_2 { pt3dadd( -115.08, -39.0636, -23.929, 0.23 ) }
    dend_2 { pt3dadd( -116.753, -39.6609, -24.1791, 0.23 ) }
    dend_2 { pt3dadd( -117.621, -39.969, -24.3172, 0.23 ) }
    dend_2 { pt3dadd( -118.163, -40.1683, -24.4009, 0.23 ) }
    dend_2 { pt3dadd( -119.437, -40.6911, -24.585, 0.23 ) }
    dend_2 { pt3dadd( -120.445, -41.1571, -24.7272, 0.23 ) }
    dend_2 { pt3dadd( -121.431, -41.6298, -24.8633, 0.23 ) }
    dend_2 { pt3dadd( -122.064, -41.9472, -24.9561, 0.23 ) }
    dend_2 { pt3dadd( -123.314, -42.6046, -25.1501, 0.23 ) }
    dend_2 { pt3dadd( -124.291, -43.1399, -25.275, 0.23 ) }
    dend_2 { pt3dadd( -125.112, -43.5897, -25.3519, 0.23 ) }
    dend_2 { pt3dadd( -125.753, -43.9278, -25.4038, 0.23 ) }
    dend_2 { pt3dadd( -127.491, -44.8425, -25.5111, 0.23 ) }
    dend_2 { pt3dadd( -128.365, -45.3108, -25.5524, 0.23 ) }
    dend_2 { pt3dadd( -129.976, -46.173, -25.6007, 0.23 ) }
    dend_2 { pt3dadd( -131.609, -47.0452, -25.6158, 0.23 ) }
    dend_2 { pt3dadd( -132.793, -47.6474, -25.5988, 0.23 ) }
    dend_2 { pt3dadd( -133.675, -48.0854, -25.5736, 0.23 ) }
    dend_2 { pt3dadd( -135.314, -48.858, -25.4544, 0.23 ) }
    dend_2 { pt3dadd( -137.108, -49.6376, -25.2608, 0.23 ) }
    dend_2 { pt3dadd( -138.524, -50.2001, -25.0471, 0.23 ) }
    dend_2 { pt3dadd( -140.177, -50.8179, -24.7298, 0.23 ) }
    dend_2 { pt3dadd( -142.267, -51.5568, -24.235, 0.23 ) }
    dend_2 { pt3dadd( -144.245, -52.2262, -23.6883, 0.23 ) }
    dend_2 { pt3dadd( -145.305, -52.5992, -23.3666, 0.23 ) }
    dend_2 { pt3dadd( -146.893, -53.2135, -22.8459, 0.23 ) }
    dend_2 { pt3dadd( -147.955, -53.6693, -22.4918, 0.23 ) }
    dend_2 { pt3dadd( -149.528, -54.413, -21.9728, 0.23 ) }
    dend_2 { pt3dadd( -151.226, -55.2702, -21.4348, 0.23 ) }
    dend_2 { pt3dadd( -154.181, -56.8663, -20.6815, 0.23 ) }
    dend_2 { pt3dadd( -156.013, -57.9083, -20.3094, 0.23 ) }
    dend_2 { pt3dadd( -157.948, -59.0716, -20.03, 0.23 ) }
    dend_2 { pt3dadd( -159.292, -59.905, -19.9116, 0.23 ) }
    dend_2 { pt3dadd( -160.991, -60.9608, -19.8631, 0.23 ) }
    dend_2 { pt3dadd( -162.87, -62.1393, -19.9183, 0.23 ) }
    dend_2 { pt3dadd( -163.763, -62.6918, -20.0036, 0.23 ) }
    dend_2 { pt3dadd( -165.348, -63.7276, -20.2503, 0.23 ) }
    dend_2 { pt3dadd( -166.286, -64.3998, -20.4521, 0.23 ) }
    dend_2 { pt3dadd( -166.994, -64.9702, -20.633, 0.23 ) }
    dend_2 { pt3dadd( -167.95, -65.8526, -20.8823, 0.23 ) }
    dend_2 { pt3dadd( -168.574, -66.4994, -21.0215, 0.23 ) }
    dend_2 { pt3dadd( -169.879, -67.9038, -21.2971, 0.23 ) }
    dend_2 { pt3dadd( -171.063, -69.2481, -21.5436, 0.23 ) }
    dend_2 { pt3dadd( -171.8, -70.1646, -21.6937, 0.23 ) }
    dend_2 { pt3dadd( -173.462, -72.4361, -22.0526, 0.23 ) }
    dend_2 { pt3dadd( -174.415, -73.8389, -22.2681, 0.23 ) }
    dend_2 { pt3dadd( -175.213, -75.0664, -22.4622, 0.23 ) }
    dend_2 { pt3dadd( -176.09, -76.4729, -22.6998, 0.23 ) }
    dend_2 { pt3dadd( -177.029, -78.0897, -22.982, 0.23 ) }
    dend_2 { pt3dadd( -177.802, -79.4384, -23.2496, 0.23 ) }
    dend_2 { pt3dadd( -178.467, -80.5998, -23.5063, 0.23 ) }
    dend_2 { pt3dadd( -179.37, -82.0818, -23.8694, 0.23 ) }
    dend_2 { pt3dadd( -180.184, -83.3058, -24.2166, 0.23 ) }
    dend_2 { pt3dadd( -180.661, -83.9305, -24.4229, 0.23 ) }
    dend_2 { pt3dadd( -181.884, -85.2892, -24.9274, 0.23 ) }
    dend_2 { pt3dadd( -183.359, -86.7656, -25.4917, 0.23 ) }
    dend_2 { pt3dadd( -184.248, -87.5996, -25.7922, 0.23 ) }
    dend_2 { pt3dadd( -185.822, -88.9889, -26.2108, 0.23 ) }
    dend_2 { pt3dadd( -187.073, -90.0855, -26.4757, 0.23 ) }
    dend_2 { pt3dadd( -187.942, -90.9068, -26.6278, 0.23 ) }
    dend_2 { pt3dadd( -188.891, -91.9152, -26.7636, 0.23 ) }
    dend_2 { pt3dadd( -189.959, -93.22, -26.8968, 0.23 ) }
    dend_2 { pt3dadd( -191.971, -95.9724, -27.0853, 0.23 ) }
    dend_2 { pt3dadd( -192.965, -97.452, -27.1549, 0.23 ) }
    dend_2 { pt3dadd( -193.811, -98.8606, -27.2067, 0.23 ) }
    dend_2 { pt3dadd( -194.596, -100.407, -27.2476, 0.23 ) }
    dend_2 { pt3dadd( -195.292, -102.057, -27.2935, 0.23 ) }
    dend_2 { pt3dadd( -195.809, -103.629, -27.3439, 0.23 ) }
    dend_2 { pt3dadd( -196.119, -104.991, -27.3806, 0.23 ) }
    dend_2 { pt3dadd( -196.438, -106.564, -27.4121, 0.23 ) }
    dend_2 { pt3dadd( -196.89, -109.056, -27.4349, 0.23 ) }
    dend_2 { pt3dadd( -197.069, -110.313, -27.4225, 0.23 ) }
    dend_2 { pt3dadd( -197.2, -111.69, -27.3717, 0.23 ) }
    dend_2 { pt3dadd( -197.209, -112.415, -27.3426, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 83/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.6263, -10.2095, 0.0, 0.45 ) }
    axon_1 { pt3dadd( 50.0974, -14.1578, 0.0, 0.45 ) }
    axon_1 { pt3dadd( 64.5684, -18.1061, 0.0, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 86/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 12.3882, 4.47926, -4.17194, 0.68 ) }
    dend_25 { pt3dadd( 13.8029, 8.39345, -3.55953, 0.68 ) }
    dend_25 { pt3dadd( 14.5293, 10.403, -3.24511, 0.68 ) }
    dend_25 { pt3dadd( 15.307, 12.5546, -2.90847, 0.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 12.3882, 4.47926, -4.17194, 0.68 ) }
    dend_20 { pt3dadd( 13.7733, 4.03503, -3.91941, 0.68 ) }
    dend_20 { pt3dadd( 15.5608, 3.51072, -3.63546, 0.68 ) }
    dend_20 { pt3dadd( 17.7377, 2.97266, -3.31831, 0.68 ) }
    dend_20 { pt3dadd( 19.7597, 2.47122, -3.00892, 0.68 ) }
    dend_20 { pt3dadd( 21.8109, 1.94539, -2.65051, 0.68 ) }
    dend_20 { pt3dadd( 23.9633, 1.34949, -2.23475, 0.68 ) }
    dend_20 { pt3dadd( 26.4898, 0.640648, -1.75225, 0.68 ) }
    dend_20 { pt3dadd( 28.7481, -0.0137544, -1.32161, 0.68 ) }
    dend_20 { pt3dadd( 31.2969, -0.751634, -0.839771, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_20 { pt3dadd( 33.7022, -1.40649, -0.339038, 0.68 ) }
    dend_20 { pt3dadd( 35.3113, -1.80937, 0.073551, 0.68 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 2/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -62.4006, 9.93076, -38.1488, 0.45 ) }
    dend_7 { pt3dadd( -63.4278, 10.2996, -38.5061, 0.45 ) }
    dend_7 { pt3dadd( -64.2985, 10.6128, -38.8091, 0.45 ) }
    dend_7 { pt3dadd( -65.2988, 10.9915, -39.1696, 0.45 ) }
    dend_7 { pt3dadd( -66.8805, 11.6399, -39.7657, 0.45 ) }
    dend_7 { pt3dadd( -68.3843, 12.2669, -40.3258, 0.45 ) }
    dend_7 { pt3dadd( -69.4732, 12.7117, -40.7203, 0.45 ) }
    dend_7 { pt3dadd( -70.6649, 13.1977, -41.1585, 0.45 ) }
    dend_7 { pt3dadd( -71.5169, 13.5715, -41.4532, 0.45 ) }
    dend_7 { pt3dadd( -72.8132, 14.1696, -41.8907, 0.45 ) }
    dend_7 { pt3dadd( -74.0126, 14.7103, -42.2793, 0.45 ) }
    dend_7 { pt3dadd( -74.8092, 15.0337, -42.5114, 0.45 ) }
    dend_7 { pt3dadd( -76.1227, 15.4848, -42.8467, 0.45 ) }
    dend_7 { pt3dadd( -77.5933, 15.9741, -43.2111, 0.45 ) }
    dend_7 { pt3dadd( -78.8952, 16.3794, -43.4854, 0.45 ) }
    dend_7 { pt3dadd( -79.9914, 16.7062, -43.7184, 0.45 ) }
    dend_7 { pt3dadd( -81.0363, 17.0124, -43.9412, 0.45 ) }
    dend_7 { pt3dadd( -83.1205, 17.6224, -44.354, 0.45 ) }
    dend_7 { pt3dadd( -85.0137, 18.1762, -44.7458, 0.45 ) }
    dend_7 { pt3dadd( -86.346, 18.5737, -45.0678, 0.45 ) }
    dend_7 { pt3dadd( -87.6385, 18.9712, -45.4328, 0.45 ) }
    dend_7 { pt3dadd( -90.1629, 19.7114, -46.1216, 0.45 ) }
    dend_7 { pt3dadd( -92.3629, 20.3088, -46.7214, 0.23 ) }
    dend_7 { pt3dadd( -94.4891, 20.8382, -47.2964, 0.23 ) }
    dend_7 { pt3dadd( -96.243, 21.1954, -47.7535, 0.23 ) }
    dend_7 { pt3dadd( -97.4086, 21.4082, -48.0773, 0.23 ) }
    dend_7 { pt3dadd( -99.8186, 21.8318, -48.7165, 0.23 ) }
    dend_7 { pt3dadd( -101.619, 22.0969, -49.2108, 0.23 ) }
    dend_7 { pt3dadd( -103.215, 22.2667, -49.625, 0.23 ) }
    dend_7 { pt3dadd( -104.773, 22.4254, -49.977, 0.23 ) }
    dend_7 { pt3dadd( -106.901, 22.6744, -50.4164, 0.23 ) }
    dend_7 { pt3dadd( -108.408, 22.8833, -50.7668, 0.23 ) }
    dend_7 { pt3dadd( -109.82, 23.0855, -51.1992, 0.23 ) }
    dend_7 { pt3dadd( -111.707, 23.2932, -51.8389, 0.23 ) }
    dend_7 { pt3dadd( -112.52, 23.3612, -52.1278, 0.23 ) }
    dend_7 { pt3dadd( -113.786, 23.4152, -52.6132, 0.23 ) }
    dend_7 { pt3dadd( -115.518, 23.4217, -53.3291, 0.23 ) }
    dend_7 { pt3dadd( -117.629, 23.3957, -54.3613, 0.23 ) }
    dend_7 { pt3dadd( -119.635, 23.4177, -55.5462, 0.23 ) }
    dend_7 { pt3dadd( -121.475, 23.4455, -56.8193, 0.23 ) }
    dend_7 { pt3dadd( -123.249, 23.4432, -58.0897, 0.23 ) }
    dend_7 { pt3dadd( -124.52, 23.4389, -59.0483, 0.23 ) }
    dend_7 { pt3dadd( -127.368, 23.4532, -61.3002, 0.23 ) }
    dend_7 { pt3dadd( -129.789, 23.5405, -63.3645, 0.23 ) }
    dend_7 { pt3dadd( -131.575, 23.6693, -65.0552, 0.23 ) }
    dend_7 { pt3dadd( -140.526, 25.5042, -68.3251, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -62.4006, 9.93076, -38.1488, 0.23 ) }
    dend_6 { pt3dadd( -63.5894, 9.11749, -38.5178, 0.23 ) }
    dend_6 { pt3dadd( -64.8786, 8.26452, -38.9171, 0.23 ) }
    dend_6 { pt3dadd( -66.501, 7.24084, -39.4564, 0.23 ) }
    dend_6 { pt3dadd( -67.8923, 6.36737, -39.9414, 0.23 ) }
    dend_6 { pt3dadd( -68.8458, 5.76948, -40.2941, 0.23 ) }
    dend_6 { pt3dadd( -70.0651, 5.00385, -40.7755, 0.23 ) }
    dend_6 { pt3dadd( -71.4169, 4.18236, -41.3505, 0.23 ) }
    dend_6 { pt3dadd( -72.4433, 3.56537, -41.8628, 0.23 ) }
    dend_6 { pt3dadd( -73.3836, 3.04624, -42.3849, 0.23 ) }
    dend_6 { pt3dadd( -74.2973, 2.59306, -42.9149, 0.23 ) }
    dend_6 { pt3dadd( -75.2304, 2.13844, -43.4822, 0.23 ) }
    dend_6 { pt3dadd( -76.2875, 1.6194, -44.1297, 0.23 ) }
    dend_6 { pt3dadd( -77.3754, 1.07797, -44.7815, 0.23 ) }
    dend_6 { pt3dadd( -78.3855, 0.57563, -45.3614, 0.23 ) }
    dend_6 { pt3dadd( -79.9105, -0.121763, -46.1248, 0.23 ) }
    dend_6 { pt3dadd( -81.3588, -0.723328, -46.7765, 0.23 ) }
    dend_6 { pt3dadd( -83.4042, -1.42271, -47.5771, 0.23 ) }
    dend_6 { pt3dadd( -84.5341, -1.72381, -47.9558, 0.23 ) }
    dend_6 { pt3dadd( -85.5892, -1.98758, -48.2686, 0.23 ) }
    dend_6 { pt3dadd( -87.2772, -2.36324, -48.742, 0.23 ) }
    dend_6 { pt3dadd( -88.2941, -2.49268, -48.9747, 0.23 ) }
    dend_6 { pt3dadd( -89.947, -2.4233, -49.2168, 0.23 ) }
    dend_6 { pt3dadd( -91.1776, -2.0804, -49.3116, 0.23 ) }
    dend_6 { pt3dadd( -99.9093, -3.8975, -51.0909, 0.23 ) }
    dend_6 { pt3dadd( -108.348, -5.04437, -54.2688, 0.23 ) }
    dend_6 { pt3dadd( -116.574, -4.93218, -58.1283, 0.23 ) }
    dend_6 { pt3dadd( -125.388, -6.408, -59.803, 0.23 ) }
    dend_6 { pt3dadd( -134.381, -6.63675, -61.0851, 0.23 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 77/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -197.209, -112.415, -27.3426, 0.23 ) }
    dend_4 { pt3dadd( -197.913, -114.92, -26.5161, 0.23 ) }
    dend_4 { pt3dadd( -198.373, -116.558, -25.9756, 0.23 ) }
    dend_4 { pt3dadd( -199.061, -119.005, -25.168, 0.23 ) }
    dend_4 { pt3dadd( -199.928, -122.092, -24.1495, 0.23 ) }
    dend_4 { pt3dadd( -200.912, -131.938, -21.535, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -197.209, -112.415, -27.3426, 0.23 ) }
    dend_3 { pt3dadd( -196.717, -115.14, -27.228, 0.23 ) }
    dend_3 { pt3dadd( -196.241, -117.743, -27.1585, 0.23 ) }
    dend_3 { pt3dadd( -196.003, -119.153, -27.1306, 0.23 ) }
    dend_3 { pt3dadd( -195.654, -121.1, -27.0971, 0.23 ) }
    dend_3 { pt3dadd( -195.35, -122.726, -27.0958, 0.23 ) }
    dend_3 { pt3dadd( -194.883, -125.575, -27.1683, 0.23 ) }
    dend_3 { pt3dadd( -194.671, -127.158, -27.2719, 0.23 ) }
    dend_3 { pt3dadd( -194.462, -129.112, -27.4968, 0.23 ) }
    dend_3 { pt3dadd( -194.332, -131.942, -27.9829, 0.23 ) }
    dend_3 { pt3dadd( -194.297, -133.392, -28.2793, 0.23 ) }
    dend_3 { pt3dadd( -194.33, -136.037, -28.907, 0.23 ) }
    dend_3 { pt3dadd( -194.386, -137.163, -29.2261, 0.23 ) }
    dend_3 { pt3dadd( -194.549, -138.629, -29.71, 0.23 ) }
    dend_3 { pt3dadd( -194.985, -140.892, -30.6516, 0.23 ) }
    dend_3 { pt3dadd( -193.022, -150.465, -30.589, 0.23 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.307, 12.5546, -2.90847, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( 16.113, 13.7487, -2.75008, 0.45 ) }
    dend_27 { pt3dadd( 16.9056, 14.9228, -2.59434, 0.45 ) }
    dend_27 { pt3dadd( 17.8372, 16.3029, -2.41128, 0.45 ) }
    dend_27 { pt3dadd( 18.4769, 17.2506, -2.28557, 0.45 ) }
    dend_27 { pt3dadd( 19.3597, 18.5584, -2.1121, 0.45 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 5/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.307, 12.5546, -2.90847, 0.45 ) }
    dend_26 { pt3dadd( 14.6135, 13.3532, -2.27838, 0.45 ) }
    dend_26 { pt3dadd( 13.6065, 14.4004, -1.34159, 0.45 ) }
    dend_26 { pt3dadd( 12.7463, 15.259, -0.536788, 0.45 ) }
    dend_26 { pt3dadd( 11.69, 16.3759, 0.504596, 0.45 ) }
    dend_26 { pt3dadd( 11.0228, 17.1225, 1.22237, 0.45 ) }
    dend_26 { pt3dadd( 10.3924, 17.8697, 1.97259, 0.45 ) }
    dend_26 { pt3dadd( 10.0008, 18.3282, 2.49403, 0.45 ) }
    dend_26 { pt3dadd( 9.50635, 18.9261, 3.21052, 0.45 ) }
    dend_26 { pt3dadd( 8.88501, 19.7531, 4.19941, 0.45 ) }
    dend_26 { pt3dadd( 8.35423, 20.5155, 5.13506, 0.45 ) }
    dend_26 { pt3dadd( 7.77942, 21.4833, 6.31217, 0.45 ) }
    dend_26 { pt3dadd( 7.51243, 22.011, 6.88313, 0.45 ) }
    dend_26 { pt3dadd( 7.16901, 22.842, 7.65411, 0.45 ) }
    dend_26 { pt3dadd( 6.89633, 23.7262, 8.3623, 0.45 ) }
    dend_26 { pt3dadd( 6.7093, 24.6414, 8.94825, 0.45 ) }
    dend_26 { pt3dadd( 6.57478, 25.8403, 9.51852, 0.45 ) }
    dend_26 { pt3dadd( 6.47498, 27.9037, 10.2735, 0.45 ) }
    dend_26 { pt3dadd( 6.45101, 30.2863, 10.9653, 0.45 ) }
    dend_26 { pt3dadd( 6.46468, 32.2526, 11.4018, 0.45 ) }
    dend_26 { pt3dadd( 6.50914, 34.262, 11.7157, 0.45 ) }
    dend_26 { pt3dadd( 6.609, 36.2836, 11.9479, 0.45 ) }
    dend_26 { pt3dadd( 6.78049, 38.1992, 12.1175, 0.45 ) }
    dend_26 { pt3dadd( 7.02935, 40.1455, 12.2602, 0.45 ) }
    dend_26 { pt3dadd( 7.39917, 42.4237, 12.3974, 0.45 ) }
    dend_26 { pt3dadd( 7.9268, 45.1836, 12.5512, 0.45 ) }
    dend_26 { pt3dadd( 8.4461, 47.6691, 12.7119, 0.45 ) }
    dend_26 { pt3dadd( 9.19811, 50.7858, 12.9083, 0.45 ) }
    dend_26 { pt3dadd( 9.91772, 53.4887, 13.0648, 0.45 ) }
    dend_26 { pt3dadd( 10.6712, 56.1924, 13.2178, 0.45 ) }
    dend_26 { pt3dadd( 11.1629, 57.8935, 13.306, 0.45 ) }
    dend_26 { pt3dadd( 11.843, 60.3096, 13.3995, 0.45 ) }
    dend_26 { pt3dadd( 12.4001, 62.525, 13.4556, 0.45 ) }
    dend_26 { pt3dadd( 12.8618, 64.6882, 13.4854, 0.45 ) }
    dend_26 { pt3dadd( 13.1121, 66.12, 13.4899, 0.45 ) }
    dend_26 { pt3dadd( 13.3734, 67.9091, 13.4909, 0.45 ) }
    dend_26 { pt3dadd( 13.6387, 69.9316, 13.4759, 0.45 ) }
    dend_26 { pt3dadd( 14.0118, 72.9752, 13.4261, 0.45 ) }
    dend_26 { pt3dadd( 14.3054, 75.5265, 13.3616, 0.45 ) }
    dend_26 { pt3dadd( 14.5284, 77.3277, 13.3001, 0.45 ) }
    dend_26 { pt3dadd( 14.8333, 79.6556, 13.2395, 0.45 ) }
    dend_26 { pt3dadd( 15.1993, 82.2186, 13.1941, 0.23 ) }
    dend_26 { pt3dadd( 15.5033, 84.237, 13.1587, 0.23 ) }
    dend_26 { pt3dadd( 15.8015, 85.9584, 13.1075, 0.23 ) }
    dend_26 { pt3dadd( 15.9964, 87.0578, 13.0621, 0.23 ) }
    dend_26 { pt3dadd( 16.485, 89.7449, 12.9346, 0.23 ) }
    dend_26 { pt3dadd( 16.8593, 92.1058, 12.8125, 0.23 ) }
    dend_26 { pt3dadd( 17.1669, 94.5053, 12.724, 0.23 ) }
    dend_26 { pt3dadd( 17.3436, 96.7101, 12.6812, 0.23 ) }
    dend_26 { pt3dadd( 17.3679, 98.2955, 12.6767, 0.23 ) }
    dend_26 { pt3dadd( 17.3464, 99.7273, 12.69, 0.23 ) }
    dend_26 { pt3dadd( 17.3019, 100.802, 12.7272, 0.23 ) }
    dend_26 { pt3dadd( 17.1626, 102.535, 12.8577, 0.23 ) }
    dend_26 { pt3dadd( 17.0428, 103.566, 12.9808, 0.23 ) }
    dend_26 { pt3dadd( 16.5679, 106.306, 13.3967, 0.23 ) }
    dend_26 { pt3dadd( 16.1373, 108.256, 13.7117, 0.23 ) }
    dend_26 { pt3dadd( 15.5905, 110.06, 14.0323, 0.23 ) }
    dend_26 { pt3dadd( 14.7388, 112.264, 14.4632, 0.23 ) }
    dend_26 { pt3dadd( 13.8612, 114.108, 14.8619, 0.23 ) }
    dend_26 { pt3dadd( 12.2377, 116.966, 15.5493, 0.23 ) }
    dend_26 { pt3dadd( 11.3881, 118.221, 15.8878, 0.23 ) }
    dend_26 { pt3dadd( 9.69104, 120.421, 16.5213, 0.23 ) }
    dend_26 { pt3dadd( 8.35566, 122.114, 17.0257, 0.23 ) }
    dend_26 { pt3dadd( 7.32537, 123.446, 17.4154, 0.45 ) }
    dend_26 { pt3dadd( 5.57413, 125.809, 18.0364, 0.23 ) }
    dend_26 { pt3dadd( 4.78656, 126.921, 18.2904, 0.23 ) }
    dend_26 { pt3dadd( 3.58988, 128.72, 18.6332, 0.23 ) }
    dend_26 { pt3dadd( 1.78748, 131.624, 19.0269, 0.23 ) }
    dend_26 { pt3dadd( 0.878017, 133.102, 19.1875, 0.23 ) }
    dend_26 { pt3dadd( -0.056554, 134.478, 19.3184, 0.23 ) }
    dend_26 { pt3dadd( -1.42698, 136.258, 19.4873, 0.23 ) }
    dend_26 { pt3dadd( -2.43367, 137.444, 19.5805, 0.23 ) }
    dend_26 { pt3dadd( -3.4353, 138.485, 19.6549, 0.23 ) }
    dend_26 { pt3dadd( -5.76978, 140.524, 19.7911, 0.23 ) }
    dend_26 { pt3dadd( -7.86364, 142.187, 19.9153, 0.23 ) }
    dend_26 { pt3dadd( -9.15192, 143.157, 19.9854, 0.23 ) }
    dend_26 { pt3dadd( -10.2659, 143.986, 20.0034, 0.23 ) }
    dend_26 { pt3dadd( -11.7414, 145.167, 19.9499, 0.23 ) }
    dend_26 { pt3dadd( -12.2916, 145.67, 19.8688, 0.23 ) }
    dend_26 { pt3dadd( -12.6697, 146.114, 19.7573, 0.23 ) }
    dend_26 { pt3dadd( -13.2465, 147.072, 19.5473, 0.23 ) }
    dend_26 { pt3dadd( -14.0017, 148.661, 19.3142, 0.23 ) }
    dend_26 { pt3dadd( -14.7266, 150.584, 19.1567, 0.23 ) }
    dend_26 { pt3dadd( -15.2968, 152.526, 19.0878, 0.23 ) }
    dend_26 { pt3dadd( -15.9626, 155.169, 19.0881, 0.23 ) }
    dend_26 { pt3dadd( -16.5693, 157.694, 19.1822, 0.23 ) }
    dend_26 { pt3dadd( -17.2074, 160.441, 19.3377, 0.23 ) }
    dend_26 { pt3dadd( -17.7202, 162.874, 19.5438, 0.23 ) }
    dend_26 { pt3dadd( -18.2222, 165.83, 19.8545, 0.23 ) }
    dend_26 { pt3dadd( -18.4274, 167.494, 20.0694, 0.23 ) }
    dend_26 { pt3dadd( -18.5818, 170.023, 20.3853, 0.23 ) }
    dend_26 { pt3dadd( -21.604, 178.587, 23.1974, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 97/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 35.3113, -1.80937, 0.073551, 0.45 ) }
    dend_24 { pt3dadd( 36.1347, -3.07883, -1.21536, 0.45 ) }
    dend_24 { pt3dadd( 37.1291, -4.47156, -2.48878, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_24 { pt3dadd( 38.1909, -5.62337, -3.58117, 0.45 ) }
    dend_24 { pt3dadd( 39.112, -6.46715, -4.41344, 0.45 ) }
    dend_24 { pt3dadd( 39.5554, -6.81741, -4.78571, 0.45 ) }
    dend_24 { pt3dadd( 40.3605, -7.45825, -5.48993, 0.45 ) }
    dend_24 { pt3dadd( 41.5577, -8.28753, -6.51339, 0.45 ) }
    dend_24 { pt3dadd( 43.1996, -9.30348, -8.02179, 0.45 ) }
    dend_24 { pt3dadd( 44.3808, -9.96016, -9.29946, 0.45 ) }
    dend_24 { pt3dadd( 45.6828, -10.5921, -10.8643, 0.45 ) }
    dend_24 { pt3dadd( 46.8523, -11.1261, -12.3433, 0.45 ) }
    dend_24 { pt3dadd( 48.375, -11.7911, -14.2668, 0.45 ) }
    dend_24 { pt3dadd( 50.0662, -12.5387, -16.3802, 0.45 ) }
    dend_24 { pt3dadd( 52.8893, -13.8174, -19.7491, 0.23 ) }
    dend_24 { pt3dadd( 54.4439, -14.5, -21.4315, 0.23 ) }
    dend_24 { pt3dadd( 56.7713, -15.4481, -23.6386, 0.23 ) }
    dend_24 { pt3dadd( 59.2548, -16.3266, -25.6307, 0.23 ) }
    dend_24 { pt3dadd( 59.9684, -16.5699, -26.1151, 0.23 ) }
    dend_24 { pt3dadd( 62.2215, -17.3317, -27.4963, 0.23 ) }
    dend_24 { pt3dadd( 65.1564, -18.3836, -29.1951, 0.23 ) }
    dend_24 { pt3dadd( 68.491, -19.568, -31.0974, 0.23 ) }
    dend_24 { pt3dadd( 70.246, -20.1623, -32.1109, 0.23 ) }
    dend_24 { pt3dadd( 73.4887, -21.2031, -34.0417, 0.23 ) }
    dend_24 { pt3dadd( 76.3138, -22.0948, -35.7886, 0.23 ) }
    dend_24 { pt3dadd( 79.1129, -23.0147, -37.5796, 0.23 ) }
    dend_24 { pt3dadd( 86.5512, -29.3009, -45.0059, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 24/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 35.3113, -1.80937, 0.073551, 0.45 ) }
    dend_21 { pt3dadd( 37.8911, -3.04017, 0.388956, 0.45 ) }
    dend_21 { pt3dadd( 39.0498, -3.64182, 0.539521, 0.45 ) }
    dend_21 { pt3dadd( 41.2444, -4.77882, 0.831294, 0.68 ) }
    dend_21 { pt3dadd( 43.4975, -5.93552, 1.12632, 0.45 ) }
    dend_21 { pt3dadd( 45.7739, -7.12033, 1.3564, 0.45 ) }
    dend_21 { pt3dadd( 47.7431, -8.10727, 1.51234, 0.45 ) }
    dend_21 { pt3dadd( 49.8375, -9.14864, 1.61495, 0.45 ) }
    dend_21 { pt3dadd( 51.8955, -10.1478, 1.71893, 0.45 ) }
    dend_21 { pt3dadd( 53.2651, -10.8146, 1.7966, 0.45 ) }
    dend_21 { pt3dadd( 55.3371, -11.8536, 1.86721, 0.45 ) }
    dend_21 { pt3dadd( 58.6756, -13.4431, 1.89371, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 36/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 19.3597, 18.5584, -2.1121, 0.45 ) }
    dend_29 { pt3dadd( 19.6709, 20.1248, -2.03543, 0.45 ) }
    dend_29 { pt3dadd( 20.3072, 23.0722, -1.7638, 0.45 ) }
    dend_29 { pt3dadd( 20.8884, 25.2953, -1.4461, 0.45 ) }
    dend_29 { pt3dadd( 21.5863, 27.8027, -1.01129, 0.45 ) }
    dend_29 { pt3dadd( 22.3454, 30.262, -0.549218, 0.45 ) }
    dend_29 { pt3dadd( 22.948, 32.1354, -0.171449, 0.45 ) }
    dend_29 { pt3dadd( 23.8289, 34.6197, 0.428186, 0.45 ) }
    dend_29 { pt3dadd( 24.7767, 37.2574, 1.15104, 0.45 ) }
    dend_29 { pt3dadd( 25.5654, 39.6362, 1.8541, 0.45 ) }
    dend_29 { pt3dadd( 26.2676, 42.15, 2.67977, 0.45 ) }
    dend_29 { pt3dadd( 26.8977, 45.1867, 3.82487, 0.45 ) }
    dend_29 { pt3dadd( 27.1156, 46.7835, 4.50576, 0.45 ) }
    dend_29 { pt3dadd( 27.2305, 49.1917, 5.68608, 0.45 ) }
    dend_29 { pt3dadd( 27.0908, 51.1469, 6.81367, 0.45 ) }
    dend_29 { pt3dadd( 26.7917, 52.6998, 7.90805, 0.45 ) }
    dend_29 { pt3dadd( 26.3201, 54.2234, 9.17931, 0.45 ) }
    dend_29 { pt3dadd( 25.8606, 55.414, 10.3304, 0.45 ) }
    dend_29 { pt3dadd( 25.3267, 56.6552, 11.6969, 0.45 ) }
    dend_29 { pt3dadd( 24.778, 57.855, 13.2208, 0.45 ) }
    dend_29 { pt3dadd( 24.4072, 58.6686, 14.2982, 0.45 ) }
    dend_29 { pt3dadd( 23.9558, 59.5174, 15.4444, 0.45 ) }
    dend_29 { pt3dadd( 23.5694, 60.2269, 16.3575, 0.45 ) }
    dend_29 { pt3dadd( 23.0907, 61.1157, 17.448, 0.45 ) }
    dend_29 { pt3dadd( 22.5031, 62.2327, 18.7788, 0.45 ) }
    dend_29 { pt3dadd( 21.8707, 63.4296, 20.1862, 0.45 ) }
    dend_29 { pt3dadd( 21.3312, 64.3968, 21.2633, 0.45 ) }
    dend_29 { pt3dadd( 20.7172, 65.4715, 22.4323, 0.45 ) }
    dend_29 { pt3dadd( 20.0894, 66.6543, 23.687, 0.45 ) }
    dend_29 { pt3dadd( 19.5563, 67.7841, 24.8447, 0.45 ) }
    dend_29 { pt3dadd( 19.0944, 68.9133, 26.0197, 0.45 ) }
    dend_29 { pt3dadd( 18.7457, 69.8291, 27.055, 0.45 ) }
    dend_29 { pt3dadd( 18.1357, 71.415, 28.9262, 0.23 ) }
    dend_29 { pt3dadd( 17.6749, 72.5356, 30.304, 0.23 ) }
    dend_29 { pt3dadd( 17.0316, 74.1144, 32.2104, 0.23 ) }
    dend_29 { pt3dadd( 16.5215, 75.4691, 33.7766, 0.23 ) }
    dend_29 { pt3dadd( 15.9539, 77.0145, 35.5313, 0.23 ) }
    dend_29 { pt3dadd( 15.6248, 77.8905, 36.5111, 0.23 ) }
    dend_29 { pt3dadd( 15.2308, 78.8455, 37.5007, 0.23 ) }
    dend_29 { pt3dadd( 14.7551, 79.9976, 38.5974, 0.23 ) }
    dend_29 { pt3dadd( 14.3249, 81.1418, 39.5738, 0.23 ) }
    dend_29 { pt3dadd( 13.9939, 82.2165, 40.3771, 0.23 ) }
    dend_29 { pt3dadd( 13.765, 83.2285, 41.046, 0.23 ) }
    dend_29 { pt3dadd( 13.5608, 84.5934, 41.9705, 0.23 ) }
    dend_29 { pt3dadd( 13.5045, 85.5321, 42.643, 0.23 ) }
    dend_29 { pt3dadd( 13.5622, 87.2351, 43.8682, 0.23 ) }
    dend_29 { pt3dadd( 13.7713, 88.6767, 44.9012, 0.23 ) }
    dend_29 { pt3dadd( 14.1212, 90.0457, 45.9042, 0.23 ) }
    dend_29 { pt3dadd( 14.8319, 92.0978, 47.5094, 0.23 ) }
    dend_29 { pt3dadd( 15.591, 94.0268, 49.0695, 0.23 ) }
    dend_29 { pt3dadd( 16.2507, 95.5196, 50.3008, 0.23 ) }
    dend_29 { pt3dadd( 16.9671, 96.937, 51.5155, 0.23 ) }
    dend_29 { pt3dadd( 17.7621, 98.3587, 52.7787, 0.23 ) }
    dend_29 { pt3dadd( 18.685, 99.7579, 54.0445, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 90/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 19.3597, 18.5584, -2.1121, 0.45 ) }
    dend_28 { pt3dadd( 20.4701, 18.0445, -1.98511, 0.45 ) }
    dend_28 { pt3dadd( 22.2135, 17.1926, -1.81826, 0.45 ) }
    dend_28 { pt3dadd( 23.6278, 16.513, -1.67172, 0.45 ) }
    dend_28 { pt3dadd( 25.124, 15.8337, -1.51174, 0.45 ) }
    dend_28 { pt3dadd( 26.5027, 15.2885, -1.38155, 0.45 ) }
    dend_28 { pt3dadd( 27.531, 14.9105, -1.29799, 0.45 ) }
    dend_28 { pt3dadd( 29.0762, 14.3934, -1.22185, 0.45 ) }
    dend_28 { pt3dadd( 30.481, 13.9722, -1.18217, 0.45 ) }
    dend_28 { pt3dadd( 31.9508, 13.5881, -1.17869, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( 33.9582, 13.087, -1.2216, 0.45 ) }
    dend_28 { pt3dadd( 35.1319, 12.7941, -1.27338, 0.45 ) }
    dend_28 { pt3dadd( 36.0399, 12.5534, -1.34012, 0.45 ) }
    dend_28 { pt3dadd( 36.5682, 12.4104, -1.38377, 0.45 ) }
    dend_28 { pt3dadd( 37.8792, 12.0181, -1.50529, 0.45 ) }
    dend_28 { pt3dadd( 39.5727, 11.4602, -1.64081, 0.45 ) }
    dend_28 { pt3dadd( 41.5428, 10.7503, -1.769, 0.45 ) }
    dend_28 { pt3dadd( 43.991, 9.85349, -1.9116, 0.45 ) }
    dend_28 { pt3dadd( 45.5708, 9.23953, -2.00288, 0.45 ) }
    dend_28 { pt3dadd( 47.3413, 8.51294, -2.09678, 0.45 ) }
    dend_28 { pt3dadd( 48.8527, 7.85832, -2.15888, 0.45 ) }
    dend_28 { pt3dadd( 49.5208, 7.55957, -2.17694, 0.45 ) }
    dend_28 { pt3dadd( 50.7554, 6.96933, -2.21869, 0.45 ) }
    dend_28 { pt3dadd( 52.0558, 6.32961, -2.24037, 0.45 ) }
    dend_28 { pt3dadd( 53.4478, 5.64286, -2.24014, 0.45 ) }
    dend_28 { pt3dadd( 54.4836, 5.15211, -2.22751, 0.45 ) }
    dend_28 { pt3dadd( 55.8756, 4.52781, -2.19796, 0.45 ) }
    dend_28 { pt3dadd( 57.7859, 3.73698, -2.12275, 0.23 ) }
    dend_28 { pt3dadd( 59.2394, 3.19603, -2.05348, 0.23 ) }
    dend_28 { pt3dadd( 61.0366, 2.53927, -1.9758, 0.23 ) }
    dend_28 { pt3dadd( 61.927, 2.21457, -1.94574, 0.23 ) }
    dend_28 { pt3dadd( 63.4447, 1.67015, -1.96711, 0.23 ) }
    dend_28 { pt3dadd( 64.716, 1.21966, -2.05454, 0.23 ) }
    dend_28 { pt3dadd( 66.2636, 0.695665, -2.26989, 0.23 ) }
    dend_28 { pt3dadd( 67.8607, 0.207869, -2.6616, 0.23 ) }
    dend_28 { pt3dadd( 68.9387, -0.0945033, -3.0408, 0.23 ) }
    dend_28 { pt3dadd( 70.7809, -0.546412, -3.81874, 0.45 ) }
    dend_28 { pt3dadd( 72.1071, -0.814152, -4.47524, 0.45 ) }
    dend_28 { pt3dadd( 73.258, -1.01848, -5.09018, 0.45 ) }
    dend_28 { pt3dadd( 75.2113, -1.37754, -6.17974, 0.23 ) }
    dend_28 { pt3dadd( 76.378, -1.57635, -6.82646, 0.23 ) }
    dend_28 { pt3dadd( 77.6494, -1.81679, -7.50589, 0.23 ) }
    dend_28 { pt3dadd( 78.8575, -2.07483, -8.071, 0.23 ) }
    dend_28 { pt3dadd( 80.4003, -2.45512, -8.71104, 0.23 ) }
    dend_28 { pt3dadd( 82.3916, -3.01338, -9.41845, 0.23 ) }
    dend_28 { pt3dadd( 83.2251, -3.28453, -9.68262, 0.23 ) }
    dend_28 { pt3dadd( 84.2231, -3.64275, -10.0028, 0.23 ) }
    dend_28 { pt3dadd( 86.073, -4.34294, -10.631, 0.23 ) }
    dend_28 { pt3dadd( 88.0524, -5.08536, -11.3159, 0.23 ) }
    dend_28 { pt3dadd( 90.2653, -5.88859, -12.1143, 0.23 ) }
    dend_28 { pt3dadd( 92.4021, -6.607, -12.953, 0.23 ) }
    dend_28 { pt3dadd( 94.6438, -7.34218, -13.9787, 0.23 ) }
    dend_28 { pt3dadd( 95.4664, -7.61359, -14.376, 0.23 ) }
    dend_28 { pt3dadd( 96.8802, -8.06868, -15.1075, 0.23 ) }
    dend_28 { pt3dadd( 98.5709, -8.58111, -16.048, 0.23 ) }
    dend_28 { pt3dadd( 101.023, -9.25694, -17.5128, 0.23 ) }
    dend_28 { pt3dadd( 103.652, -9.86277, -19.1538, 0.23 ) }
    dend_28 { pt3dadd( 110.276, -13.2287, -22.3841, 0.23 ) }
    dend_28 { pt3dadd( 117.608, -15.9553, -24.427, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 49/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 58.6756, -13.4431, 1.89371, 0.45 ) }
    dend_23 { pt3dadd( 60.8343, -12.716, 2.06474, 0.45 ) }
    dend_23 { pt3dadd( 62.826, -12.0385, 2.1399, 0.45 ) }
    dend_23 { pt3dadd( 66.267, -10.8373, 2.20368, 0.23 ) }
    dend_23 { pt3dadd( 67.4479, -10.4458, 2.22142, 0.23 ) }
    dend_23 { pt3dadd( 68.9729, -9.94216, 2.24826, 0.23 ) }
    dend_23 { pt3dadd( 70.7859, -9.39317, 2.2898, 0.23 ) }
    dend_23 { pt3dadd( 72.3709, -8.94273, 2.33039, 0.23 ) }
    dend_23 { pt3dadd( 73.9907, -8.50916, 2.3878, 0.23 ) }
    dend_23 { pt3dadd( 75.9785, -7.99833, 2.48523, 0.23 ) }
    dend_23 { pt3dadd( 78.3052, -7.38706, 2.64246, 0.23 ) }
    dend_23 { pt3dadd( 81.8031, -6.42781, 2.93621, 0.23 ) }
    dend_23 { pt3dadd( 84.4565, -5.68824, 3.22702, 0.23 ) }
    dend_23 { pt3dadd( 87.0951, -4.96446, 3.605, 0.23 ) }
    dend_23 { pt3dadd( 88.8379, -4.47875, 3.88297, 0.23 ) }
    dend_23 { pt3dadd( 91.7465, -3.61094, 4.41718, 0.23 ) }
    dend_23 { pt3dadd( 93.2552, -3.16265, 4.73306, 0.23 ) }
    dend_23 { pt3dadd( 94.9951, -2.64919, 5.14282, 0.23 ) }
    dend_23 { pt3dadd( 97.7934, -1.95792, 5.84683, 0.23 ) }
    dend_23 { pt3dadd( 98.8337, -1.73009, 6.1118, 0.23 ) }
    dend_23 { pt3dadd( 100.168, -1.47487, 6.44346, 0.23 ) }
    dend_23 { pt3dadd( 102.988, -1.09962, 7.13601, 0.23 ) }
    dend_23 { pt3dadd( 104.211, -0.973978, 7.43584, 0.23 ) }
    dend_23 { pt3dadd( 106.574, -0.75919, 7.98667, 0.23 ) }
    dend_23 { pt3dadd( 109.033, -0.581892, 8.53384, 0.23 ) }
    dend_23 { pt3dadd( 110.361, -0.53181, 8.82541, 0.23 ) }
    dend_23 { pt3dadd( 112.671, -0.459504, 9.3447, 0.23 ) }
    dend_23 { pt3dadd( 113.834, -0.422691, 9.6281, 0.23 ) }
    dend_23 { pt3dadd( 115.669, -0.362948, 10.0888, 0.23 ) }
    dend_23 { pt3dadd( 117.433, -0.293044, 10.5299, 0.23 ) }
    dend_23 { pt3dadd( 118.895, -0.211751, 10.8325, 0.23 ) }
    dend_23 { pt3dadd( 121.02, -0.00791188, 11.1918, 0.23 ) }
    dend_23 { pt3dadd( 123.978, 0.332834, 11.5902, 0.23 ) }
    dend_23 { pt3dadd( 125.562, 0.51299, 11.7721, 0.23 ) }
    dend_23 { pt3dadd( 128.079, 0.812158, 12.028, 0.23 ) }
    dend_23 { pt3dadd( 131.588, 1.26826, 12.3364, 0.23 ) }
    dend_23 { pt3dadd( 132.952, 1.45781, 12.4298, 0.23 ) }
    dend_23 { pt3dadd( 135.983, 1.86845, 12.57, 0.23 ) }
    dend_23 { pt3dadd( 138.661, 2.27763, 12.6507, 0.23 ) }
    dend_23 { pt3dadd( 141.39, 2.68331, 12.7407, 0.23 ) }
    dend_23 { pt3dadd( 150.787, 5.86459, 12.1409, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 58.6756, -13.4431, 1.89371, 0.45 ) }
    dend_22 { pt3dadd( 60.5105, -14.8026, 2.30258, 0.45 ) }
    dend_22 { pt3dadd( 62.4333, -16.1193, 2.67046, 0.45 ) }
    dend_22 { pt3dadd( 65.0714, -17.8864, 3.13378, 0.45 ) }
    dend_22 { pt3dadd( 68.8904, -20.3911, 3.64481, 0.45 ) }
    dend_22 { pt3dadd( 71.4286, -22.1386, 3.89689, 0.23 ) }
    dend_22 { pt3dadd( 73.5769, -23.6589, 4.07078, 0.23 ) }
    dend_22 { pt3dadd( 75.2703, -24.8624, 4.17774, 0.45 ) }
    dend_22 { pt3dadd( 76.6696, -25.9337, 4.28603, 0.45 ) }
    dend_22 { pt3dadd( 78.2444, -27.2114, 4.46245, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 81.1305, -29.7178, 4.93162, 0.45 ) }
    dend_22 { pt3dadd( 83.6786, -31.9766, 5.44909, 0.45 ) }
    dend_22 { pt3dadd( 86.067, -34.0545, 5.97752, 0.45 ) }
    dend_22 { pt3dadd( 87.5542, -35.3833, 6.33699, 0.45 ) }
    dend_22 { pt3dadd( 91.326, -38.7903, 7.32202, 0.45 ) }
    dend_22 { pt3dadd( 94.7664, -41.9616, 8.30965, 0.45 ) }
    dend_22 { pt3dadd( 97.2254, -44.2857, 9.0534, 0.45 ) }
    dend_22 { pt3dadd( 98.8615, -45.9459, 9.56867, 0.45 ) }
    dend_22 { pt3dadd( 101.115, -48.3898, 10.2783, 0.23 ) }
    dend_22 { pt3dadd( 103.832, -51.6229, 11.1583, 0.23 ) }
    dend_22 { pt3dadd( 104.71, -52.8332, 11.4751, 0.23 ) }
    dend_22 { pt3dadd( 105.939, -54.7922, 11.9779, 0.23 ) }
    dend_22 { pt3dadd( 107.238, -57.1532, 12.5982, 0.23 ) }
    dend_22 { pt3dadd( 107.998, -58.7592, 13.0229, 0.23 ) }
    dend_22 { pt3dadd( 108.698, -60.4081, 13.4235, 0.23 ) }
    dend_22 { pt3dadd( 109.308, -62.0033, 13.7507, 0.23 ) }
    dend_22 { pt3dadd( 110.075, -64.0257, 14.1123, 0.23 ) }
    dend_22 { pt3dadd( 110.794, -65.9734, 14.4046, 0.23 ) }
    dend_22 { pt3dadd( 111.22, -67.2243, 14.5997, 0.23 ) }
    dend_22 { pt3dadd( 111.653, -68.6455, 14.8661, 0.23 ) }
    dend_22 { pt3dadd( 112.161, -70.6065, 15.3149, 0.23 ) }
    dend_22 { pt3dadd( 112.599, -72.4493, 15.7564, 0.23 ) }
    dend_22 { pt3dadd( 113.088, -74.4602, 16.2767, 0.23 ) }
    dend_22 { pt3dadd( 113.417, -75.7353, 16.6407, 0.23 ) }
    dend_22 { pt3dadd( 114.221, -78.7609, 17.5743, 0.23 ) }
    dend_22 { pt3dadd( 114.983, -82.1963, 18.7054, 0.23 ) }
    dend_22 { pt3dadd( 122.958, -90.9976, 20.964, 0.23 ) }
    dend_22 { pt3dadd( 130.879, -99.783, 23.4588, 0.23 ) }
    dend_22 { pt3dadd( 139.582, -107.963, 25.1847, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_34, dend_31, dend_30, dend_17, dend_14, dend_11, dend_8, dend_1, dend_0, dend_36, dend_35, dend_33, dend_32, dend_19, dend_18, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_5, dend_2, dend_25, dend_20, dend_7, dend_6, dend_4, dend_3, dend_27, dend_26, dend_24, dend_21, dend_29, dend_28, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_34, dend_31, dend_30, dend_17, dend_14, dend_11, dend_8, dend_1, dend_0, dend_36, dend_35, dend_33, dend_32, dend_19, dend_18, dend_16, dend_15, dend_13, dend_12, dend_10, dend_9, dend_5, dend_2, dend_25, dend_20, dend_7, dend_6, dend_4, dend_3, dend_27, dend_26, dend_24, dend_21, dend_29, dend_28, dend_23, dend_22]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_32 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_18 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_16 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_9 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_7 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_6 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_26 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_23 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_22 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_8 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_17 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_19 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_34 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_25 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_31 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_27 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_20 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_14 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_15 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_4 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_30 nseg = 5
    dend_0 nseg = 5
    dend_36 nseg = 11
    dend_35 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 9
    dend_9 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 11
    dend_7 nseg = 5
    dend_6 nseg = 3
    dend_26 nseg = 9
    dend_24 nseg = 3
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_23 nseg = 5
    dend_22 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_NBC_4225ab5b52_0_0


