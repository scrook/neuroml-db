// Cell: cNAC187_L1_NGCSA_569d800dfe_0_0
/*
{
  "id" : "cNAC187_L1_NGCSA_569d800dfe_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-9.93047, -1.53273, 0.0, 4.00547", "-8.97778, -1.44626, 0.0, 7.37327", "-8.02509, -1.35979, 0.0, 10.2912", "-7.07241, -1.27333, 0.0, 11.7364", "-6.11972, -1.18686, 0.0, 13.0826", "-5.16703, -1.10039, 0.0, 13.6589", "-4.21434, -1.01392, 0.0, 14.2164", "-3.26165, -0.92745, 0.0, 14.7252", "-2.30896, -0.840981, 0.0, 15.0986", "-1.35627, -0.754512, 0.0, 15.2979", "-0.403583, -0.668043, 0.0, 15.2738", "0.549106, -0.581574, 0.0, 15.1915", "1.5018, -0.495105, 0.0, 14.7866", "2.45448, -0.408636, 0.0, 14.161", "3.40717, -0.322167, 0.0, 13.4403", "4.35986, -0.235698, 0.0, 12.2605", "5.31255, -0.149229, 0.0, 10.8788", "6.26524, -0.0627605, 0.0, 9.65526", "7.21793, 0.0237084, 0.0, 7.93246", "8.17062, 0.110177, 0.0, 6.00108", "9.12331, 0.196646, 0.0, 3.53051" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.73477, -0.561055, 1.28, 5.47", "8.73477, -0.561055, 1.28, 5.47", "9.94311, -0.474041, 1.99736, 5.01", "11.7097, -0.346825, 3.04614, 4.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998391137357
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "4.75479, 3.13444, -10.5, 1.37", "5.17397, 4.80859, -11.2459, 1.37", "5.48689, 6.55003, -11.9425, 1.59", "5.67869, 8.29716, -12.5566, 1.37", "5.7351, 10.1158, -13.1682, 1.14", "5.6778, 11.6602, -13.6537, 1.14", "5.57941, 12.9688, -14.1008, 1.37", "5.45621, 13.7698, -14.3669, 1.59", "5.1547, 15.0716, -14.7385, 2.05", "4.63262, 16.8051, -15.1719, 1.37", "4.15526, 18.0574, -15.5013, 1.59", "3.33681, 19.9453, -16.1322, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998391137357
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "2.86478, -6.98305, -5.95, 1.59", "3.35944, -7.90244, -7.19195, 1.59", "4.04337, -9.17362, -8.90913, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998391137357
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "6.32474, 4.18894, -2.82, 0.68", "6.32474, 4.18894, -2.82, 0.68", "6.79295, 4.89193, -3.18355, 0.68", "7.85284, 6.66469, -3.81207, 0.68", "8.73887, 8.30496, -4.10774, 0.68", "9.26331, 9.33864, -4.09836, 0.68", "9.84643, 10.488, -4.08792, 0.68", "10.4617, 11.8074, -3.97895, 0.91", "10.946, 13.077, -3.66872, 1.37", "11.2552, 14.2197, -3.05078, 2.05", "11.5819, 15.6641, -1.85275, 1.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998391137357
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-9.28525, -2.45155, -1.48, 1.14", "-9.9874, -2.8483, -1.08411, 1.14", "-11.6854, -4.02007, -0.0309467, 0.91", "-13.1807, -5.22043, 0.917916, 0.91", "-14.1948, -6.11023, 1.56747, 0.91", "-15.149, -6.94754, 2.1787, 1.37", "-16.5929, -8.21451, 3.10359, 1.59", "-17.584, -9.21551, 3.79054, 1.59", "-18.2546, -10.1019, 4.29739, 2.28", "-18.4164, -10.3758, 4.42708, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998391137357
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.12331, 0.196646, 0.0, 0.943291", "24.0619, 1.55252, 0.0, 0.943291", "39.0005, 2.90839, 0.0, 0.943291" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "11.7097, -0.346825, 3.04614, 3.42", "13.1934, -0.789535, 2.63086, 3.42", "14.5612, -1.19767, 2.24802, 2.96" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "11.7097, -0.346825, 3.04614, 1.82", "12.676, 0.360423, 4.54339, 1.82", "13.5538, 0.919105, 5.84527, 1.37", "14.2891, 1.3025, 6.8757, 1.37", "15.146, 1.61332, 8.00613, 1.37", "15.7496, 1.74825, 8.77356, 1.59", "16.6208, 1.85425, 9.85155, 1.37", "17.7291, 1.76544, 11.0961, 1.37", "19.0409, 1.50346, 12.3547, 1.37", "20.5275, 1.13383, 13.5179, 1.37", "22.0227, 0.703342, 14.621, 1.37", "23.0076, 0.381021, 15.2998, 1.37", "24.4958, -0.195337, 16.2433, 0.91", "26.0676, -0.849641, 17.0909, 1.37", "27.9871, -1.65129, 17.926, 1.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.33681, 19.9453, -16.1322, 1.37", "2.40814, 20.5242, -18.153, 1.37", "1.56854, 20.8946, -19.683, 1.37", "0.853393, 21.1695, -20.8245, 1.37", "-0.103758, 21.5271, -22.2543, 1.37", "-1.09089, 21.8837, -23.692, 1.14", "-2.24285, 22.2743, -25.3994, 1.14", "-3.04206, 22.4884, -26.4659, 1.14", "-4.07857, 22.7247, -27.7114, 0.91", "-5.09541, 22.9744, -28.8934, 1.14", "-6.26726, 23.3686, -30.2393, 1.37", "-7.31782, 23.8449, -31.4697, 1.37", "-8.56725, 24.5075, -32.9906, 1.14", "-9.7122, 25.16, -34.3584, 1.14", "-10.6086, 25.6983, -35.4116, 1.14", "-11.7977, 26.4889, -36.6995, 1.14", "-12.2033, 26.819, -37.0849, 1.14" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.33681, 19.9453, -16.1322, 0.68", "3.79837, 20.8385, -17.0632, 0.68", "4.39737, 21.9629, -18.2314, 0.68", "4.83235, 22.6774, -19.0293, 0.91", "5.33764, 23.4242, -19.9504, 0.91", "5.83205, 24.1689, -20.9676, 0.91", "6.28676, 24.8985, -22.0801, 0.91", "6.49253, 25.2757, -22.7365, 0.91", "6.85795, 26.116, -24.2644, 1.14", "7.09822, 26.96, -25.8843, 0.91", "7.20817, 27.9286, -27.7659, 0.91", "7.18941, 28.688, -29.146, 0.91", "7.13704, 29.2354, -30.0647, 0.91", "7.05836, 30.0694, -31.4377, 0.68", "6.97299, 31.0102, -32.8831, 0.68", "6.94578, 31.5942, -33.7299, 0.68", "6.98062, 32.5972, -35.0596, 0.91", "7.12029, 33.8541, -36.6609, 0.68", "7.32002, 34.8899, -38.0217, 0.68", "7.39782, 35.1554, -38.383, 0.68", "7.69593, 36.0341, -39.5359, 0.68", "8.05522, 36.935, -40.8897, 0.68" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "4.04337, -9.17362, -8.90913, 0.68", "4.1543, -8.76267, -9.68411, 0.68", "4.29698, -8.2782, -10.4783, 0.68", "4.77403, -7.05926, -12.1114, 0.68", "5.13901, -6.27351, -13.0198, 0.68", "5.48265, -5.5363, -13.7471, 0.68", "5.87074, -4.64322, -14.4453, 1.14", "6.26161, -3.63006, -15.0409, 1.14", "6.8035, -2.19977, -15.6114, 0.91", "7.4994, -0.379038, -16.1038, 1.14", "8.11473, 1.30608, -16.4873, 0.91", "8.72905, 3.28915, -16.9642, 0.91", "8.97289, 4.40124, -17.3371, 0.91", "9.01063, 5.88733, -18.2032, 0.68", "8.65248, 7.00405, -19.3842, 0.91", "8.26016, 7.52124, -20.351, 0.91", "7.44377, 8.237, -22.3996, 0.68", "6.53079, 8.80567, -24.7678, 0.68", "5.77945, 9.09142, -26.7603, 0.68", "5.26164, 9.18833, -28.3295, 0.68", "4.74149, 9.15157, -30.3951, 0.68", "4.47246, 9.05391, -31.9612, 0.68", "4.32059, 8.95409, -33.6418, 0.68", "4.24694, 8.8616, -35.7411, 0.68", "4.19858, 8.8205, -38.5191, 0.68", "4.16644, 8.88394, -41.5572, 0.68", "4.04982, 9.01144, -43.6916, 0.68", "3.89334, 9.19801, -45.5011, 0.68", "3.73104, 9.47753, -47.1961, 0.68", "3.38529, 10.0735, -49.6582, 0.68", "2.90228, 10.7156, -51.4498, 0.68", "2.29524, 12.1276, -53.1475, 0.68", "2.30811, 11.5421, -52.953, 0.68", "1.79173, 9.38392, -53.0139, 0.68", "1.18241, 7.80694, -53.3168, 0.68", "0.557151, 6.46482, -53.79, 0.68", "-0.87512, 4.36938, -55.0362, 0.68", "-2.28339, 3.23744, -56.4118, 0.68", "-3.34254, 2.7371, -57.6672, 0.68", "-4.6779, 2.18362, -59.645, 0.68", "-5.48312, 1.85717, -61.1177, 0.68", "-6.15039, 1.52878, -62.642, 0.91", "-6.9665, 1.03578, -64.8408, 0.91", "-7.93569, 0.325337, -67.5981, 0.68", "-8.75624, -0.434471, -70.1644, 0.68", "-9.16587, -0.922935, -71.5419, 0.68", "-9.57501, -1.45178, -72.8851, 0.68", "-9.9283, -1.90294, -73.9945, 0.68", "-10.5858, -2.6072, -75.7362, 0.68", "-11.1834, -3.11256, -77.0811, 0.68", "-12.322, -3.91934, -79.4009, 0.68", "-13.1903, -4.52162, -81.1316, 0.68", "-14.2017, -5.24195, -83.1677, 0.68", "-14.912, -5.79357, -84.6461, 0.68", "-15.9452, -6.69899, -86.8625, 0.68", "-16.7442, -7.43645, -88.5504, 0.68", "-17.693, -8.28193, -90.4209, 0.68", "-18.36, -8.87531, -91.7015, 0.68" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "4.04337, -9.17362, -8.90913, 1.37", "5.583, -10.4601, -10.2723, 1.37", "6.40054, -11.072, -11.0112, 1.37", "7.35677, -11.7061, -11.9424, 1.37", "8.35964, -12.202, -12.9537, 1.37", "9.20113, -12.4914, -13.8267, 1.59", "10.6209, -12.8249, -15.26, 1.37", "11.6803, -12.8566, -16.3319, 1.59", "12.8797, -12.6803, -17.4254, 1.59", "14.6891, -12.1256, -18.7943, 1.14", "15.9538, -11.5434, -19.5996, 1.14", "17.1449, -10.7859, -20.2383, 1.14", "18.2123, -9.93143, -20.7273, 1.14", "19.5709, -8.73035, -21.2959, 1.14", "21.1969, -7.2998, -21.8981, 1.14", "22.1817, -6.46335, -22.2379, 1.14", "23.4645, -5.35839, -22.6639, 0.91", "24.9238, -4.03092, -23.1972, 0.91", "25.9525, -3.12892, -23.6456, 0.91", "26.8938, -2.34925, -24.1784, 0.91", "27.2798, -2.07506, -24.4974, 0.91" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "11.5819, 15.6641, -1.85275, 0.68", "12.6579, 17.019, -1.58874, 0.68", "13.4041, 17.9587, -1.40564, 1.14", "14.4155, 19.2323, -1.15749, 1.14", "15.1844, 20.2005, -0.968837, 0.91", "16.6893, 22.0955, -0.599591, 1.37", "18.0918, 23.8617, -0.255453, 0.68" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.5819, 15.6641, -1.85275, 0.23", "11.7315, 15.2992, -0.500455, 0.23", "11.9111, 14.8387, 1.53117, 0.23", "12.0174, 14.4782, 3.62768, 0.23", "12.1241, 14.1968, 5.92819, 0.91", "12.2477, 14.0184, 7.74227, 0.91", "12.3234, 13.9596, 8.62576, 0.91", "12.3917, 13.9346, 9.68987, 0.91", "12.5864, 14.044, 10.8271, 0.91", "13.0685, 14.3258, 11.7237, 0.91", "13.7233, 14.6504, 12.2296, 0.91", "14.4469, 14.7888, 12.3326, 0.91", "15.1118, 14.7669, 12.2167, 0.46", "17.0441, 14.628, 11.7677, 0.46", "18.3392, 14.481, 11.3921, 0.46", "20.2679, 14.167, 10.6791, 0.46", "21.5854, 13.8842, 10.1162, 0.23", "23.7572, 13.2538, 9.06789, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-18.4164, -10.3758, 4.42708, 0.91", "-20.4453, -11.1662, 3.44904, 0.91", "-22.451, -11.7263, 2.69132, 0.91", "-24.0421, -12.0187, 2.26508, 0.91", "-25.5244, -12.1721, 2.07037, 1.14", "-26.424, -12.2016, 2.03725, 1.37", "-27.8956, -12.25, 1.98306, 1.82", "-29.6756, -12.1582, 2.13862, 1.14", "-31.5099, -11.9012, 2.46978, 1.14", "-33.6749, -11.4642, 3.02152, 1.14", "-34.9499, -11.1595, 3.43907, 1.82" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-18.4164, -10.3758, 4.42708, 1.59", "-18.2784, -10.7838, 5.362, 1.59", "-18.1901, -11.401, 7.05309, 1.14", "-18.1624, -11.8702, 8.62106, 1.14", "-18.1266, -12.3726, 10.6905, 1.14", "-18.1099, -12.8452, 12.8111, 1.14", "-18.087, -13.4195, 15.2804, 1.14", "-18.0823, -13.875, 17.3566, 1.14", "-18.0615, -14.2049, 18.7646, 1.14", "-18.0065, -14.6238, 20.3051, 1.14", "-17.9524, -15.0838, 21.7127, 1.14", "-17.8652, -15.5025, 22.8385, 1.14", "-17.6698, -16.024, 23.9566, 1.14", "-17.228, -17.1084, 25.6916, 1.14", "-16.9054, -18.0631, 26.9235, 1.14", "-16.8051, -18.4031, 27.2982, 1.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.0005, 2.90839, 0.0, 0.349594", "53.9391, 4.26426, 0.0, 0.349594", "68.8777, 5.62013, 0.0, 0.349594" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "14.5612, -1.19767, 2.24802, 2.73", "16.0238, -1.45116, 2.84584, 2.73", "17.8491, -1.76751, 3.59192, 3.19" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.5612, -1.19767, 2.24802, 1.37", "15.4495, -0.296298, 1.05559, 1.37", "16.4668, 0.925254, -0.552165, 1.37", "17.3257, 2.11149, -2.12955, 1.37", "18.1149, 3.36578, -3.78551, 1.37", "18.7459, 4.52504, -5.31185, 1.37", "19.3774, 5.82788, -7.00792, 1.37", "19.8339, 6.9375, -8.4607, 1.59", "20.2459, 8.09952, -9.94445, 1.59", "20.6317, 9.24856, -11.3637, 1.59", "21.0438, 10.483, -12.8154, 1.37", "21.5864, 11.9132, -14.3816, 1.37", "22.1969, 13.271, -15.807, 1.37", "22.5184, 13.9253, -16.4574, 1.59", "23.1212, 15.0486, -17.5157, 1.82", "23.7897, 16.1725, -18.5246, 1.82", "24.6412, 17.4964, -19.6217, 1.37", "25.4408, 18.7669, -20.5874, 1.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "27.9871, -1.65129, 17.926, 0.91", "29.0028, -0.62121, 16.1803, 0.91", "30.0484, 0.214813, 14.8209, 0.91", "31.5141, 1.25679, 13.2211, 0.91", "32.7317, 2.03838, 12.0862, 0.91", "33.8696, 2.70665, 11.178, 0.91", "35.1956, 3.44887, 10.2248, 0.68", "36.2878, 4.00183, 9.60069, 0.91", "37.4019, 4.49754, 9.07497, 0.68", "38.4266, 4.90439, 8.67255, 0.68", "40.5763, 5.79815, 7.88725, 0.91", "41.1506, 6.0634, 7.66763, 0.91", "43.0002, 7.04645, 6.81963, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "27.9871, -1.65129, 17.926, 1.14", "28.7397, -1.96557, 18.7941, 1.14", "29.4847, -2.33938, 19.8766, 0.91", "30.2298, -2.75669, 21.3246, 0.91", "30.7884, -3.07415, 22.7882, 0.91", "31.3253, -3.37935, 24.1953, 0.91", "31.7503, -3.62086, 25.3087, 0.91", "32.0129, -3.79096, 26.2651, 0.91", "32.1643, -3.97153, 27.6407, 0.91", "32.0607, -4.13659, 29.0255, 0.91" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-12.2033, 26.819, -37.0849, 0.68", "-13.5741, 28.3618, -37.9014, 0.68", "-15.0533, 30.0019, -38.8416, 0.68", "-16.2729, 31.2231, -39.6053, 0.91", "-17.6548, 32.4838, -40.5156, 1.14", "-18.723, 33.3696, -41.2726, 1.14", "-19.8666, 34.2527, -42.1541, 1.14", "-21.463, 35.3875, -43.6186, 0.91", "-22.7093, 36.153, -45.0965, 0.91", "-23.7946, 36.7377, -46.7183, 0.91", "-24.5818, 37.0499, -48.1152, 0.91", "-25.1082, 37.1865, -49.1646, 0.91", "-25.6164, 37.2458, -50.2584, 0.91", "-26.4088, 37.1976, -51.9372, 0.91", "-27.5527, 37.0081, -53.8718, 0.91", "-29.3819, 36.5746, -55.9446, 0.91", "-31.3708, 36.0384, -57.1799, 0.91", "-33.7162, 35.277, -57.7825, 0.91", "-36.0039, 34.4335, -57.8304, 0.68", "-38.8784, 33.2519, -57.548, 0.68", "-40.8191, 32.3236, -57.0804, 0.68", "-42.6836, 31.384, -56.292, 0.68", "-44.4331, 30.5073, -55.2851, 0.68", "-45.4095, 30.0464, -54.5993, 0.68" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-12.2033, 26.819, -37.0849, 0.91", "-11.6041, 27.1073, -37.3749, 0.91", "-9.7924, 27.9969, -38.1013, 0.91", "-8.3319, 28.7477, -38.5964, 0.91", "-7.18961, 29.3349, -38.9836, 0.91", "-6.20409, 29.8415, -39.3176, 0.68", "-4.85092, 30.5371, -39.7763, 0.68", "-4.02248, 30.9307, -40.0074, 0.91", "-2.97495, 31.4237, -40.1349, 0.46" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.2798, -2.07506, -24.4974, 0.68", "28.3752, -2.65059, -27.0622, 0.68", "29.2571, -2.90872, -29.1568, 0.68", "29.9168, -2.95179, -30.5628, 0.68", "30.4568, -2.95961, -31.5288, 0.68", "31.188, -2.99118, -32.6786, 0.68", "31.8059, -3.04838, -33.6049, 0.68", "33.1216, -3.22129, -35.5143, 0.68", "34.4824, -3.47211, -37.3382, 0.68", "36.156, -3.78346, -39.4153, 0.68", "36.9745, -3.96435, -40.3297, 0.68", "38.0678, -4.26806, -41.4566, 0.68", "39.1574, -4.6374, -42.4965, 0.68", "40.3272, -5.10729, -43.5773, 0.68", "41.7818, -5.76386, -44.863, 0.68", "43.2801, -6.44043, -46.1191, 0.68", "45.944, -7.48369, -48.0732, 0.68", "47.0391, -7.87165, -48.7285, 0.68", "48.1773, -8.24744, -49.3258, 0.68", "49.8715, -8.81859, -50.1926, 0.68", "51.0488, -9.25639, -50.6552, 0.68", "53.4011, -10.2103, -51.3422, 0.68", "55.8281, -11.2958, -51.7311, 0.68", "57.141, -11.953, -51.8394, 0.68", "58.9471, -12.9769, -51.7776, 0.68", "62.2686, -15.3044, -51.3497, 0.68", "63.6318, -16.4642, -51.1245, 1.14", "64.9682, -17.8347, -50.8654, 1.14", "66.7211, -19.8084, -50.487, 0.91", "68.0881, -21.4077, -50.2185, 0.91", "69.5881, -23.1862, -50.1179, 0.91", "70.6661, -24.474, -50.2883, 0.91", "71.6963, -25.7634, -50.6079, 0.91", "72.3769, -26.6878, -50.9406, 0.91", "73.2156, -27.8653, -51.4958, 0.68", "74.4867, -29.5615, -52.4781, 0.68", "74.997, -30.1286, -52.907, 0.68", "75.9795, -31.0667, -53.7176, 0.68", "76.964, -31.8267, -54.5184, 0.68", "77.4876, -32.1681, -54.8947, 0.68", "78.1675, -32.5579, -55.2977, 0.91", "80.117, -33.5665, -56.141, 0.91", "81.2041, -34.0415, -56.5444, 0.68", "82.3276, -34.4494, -56.885, 0.68", "84.3103, -35.057, -57.6111, 0.68", "85.1077, -35.265, -57.9272, 0.68", "85.9792, -35.4783, -58.2845, 0.68", "87.895, -36.0093, -58.9452, 1.14", "90.0442, -36.6788, -59.7209, 0.68", "92.1331, -37.3724, -60.4484, 0.68", "93.3852, -37.8033, -60.8846, 0.68", "95.9227, -38.7882, -61.8437, 0.46", "98.1206, -39.7899, -62.8128, 0.68", "100.053, -40.8622, -63.7315, 0.68", "101.967, -42.1439, -64.6887, 0.68", "103.309, -43.1597, -65.2737, 1.14", "105.345, -44.9296, -66.0708, 0.91", "106.851, -46.4223, -66.6174, 0.68", "107.625, -47.2201, -66.9465, 0.68", "108.526, -48.2899, -67.2251, 0.46", "109.965, -50.6752, -67.2945, 0.46", "110.831, -52.6542, -66.4822, 0.91", "111.128, -53.5652, -65.662, 0.91" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "27.2798, -2.07506, -24.4974, 0.68", "26.9263, -3.00206, -24.798, 0.68", "26.4689, -4.41985, -25.1724, 0.91", "26.2941, -5.09304, -25.3231, 0.68", "25.8307, -7.26672, -25.701, 0.68", "25.7055, -7.95629, -25.8453, 0.91", "25.3331, -10.118, -26.3942, 0.91", "25.1712, -11.5038, -26.8484, 0.91", "25.122, -12.2686, -27.1559, 0.46", "25.0473, -14.1948, -28.0124, 0.46", "25.0305, -16.0367, -28.8727, 0.91", "25.0033, -17.3871, -29.561, 0.91", "24.9333, -18.7542, -30.3227, 1.14", "24.8852, -19.6825, -30.9539, 0.91", "24.8488, -20.2385, -31.3815, 0.91" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-34.9499, -11.1595, 3.43907, 0.91", "-35.8359, -10.4586, 2.49946, 0.91", "-37.6003, -9.03627, 0.567164, 0.91", "-38.6475, -8.08532, -0.576838, 1.14", "-39.3032, -7.43888, -1.2745, 1.14", "-40.0667, -6.67473, -2.02329, 0.91", "-40.8824, -5.87973, -2.73738, 0.91", "-41.87, -4.87972, -3.52291, 1.14", "-42.7874, -3.8893, -4.08817, 1.37", "-44.1214, -2.52685, -4.57836, 1.14", "-45.0416, -1.63453, -4.85172, 1.14", "-46.0726, -0.664044, -5.03706, 0.91", "-46.9139, 0.112713, -5.09206, 1.37", "-47.8424, 0.96314, -5.06667, 1.37", "-49.0989, 1.9751, -4.93485, 1.14" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-34.9499, -11.1595, 3.43907, 1.37", "-35.7405, -12.0303, 3.43471, 1.37", "-37.2793, -13.4264, 3.56607, 0.91", "-38.384, -14.123, 3.69723, 0.91", "-39.2975, -14.4426, 3.81194, 0.91", "-40.3642, -14.6065, 3.97167, 0.91", "-41.4857, -14.6787, 4.13624, 0.91", "-43.1703, -14.6447, 4.37914, 0.91", "-44.9999, -14.5435, 4.62765, 1.14", "-46.8107, -14.3442, 4.87028, 0.91", "-48.839, -14.0364, 5.13563, 1.14", "-50.7986, -13.6769, 5.38085, 0.91", "-51.7136, -13.513, 5.48253, 0.91", "-53.1845, -13.3638, 5.58325, 0.91" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.8051, -18.4031, 27.2982, 0.68", "-16.9026, -19.4881, 27.8973, 0.68", "-17.0271, -20.8994, 28.7735, 0.68", "-17.116, -22.168, 29.6641, 0.68", "-17.21, -23.3598, 30.5007, 0.68", "-17.334, -24.7609, 31.4445, 0.91", "-17.4368, -25.8797, 32.1574, 0.91", "-17.5731, -27.4703, 33.1704, 0.68", "-17.7294, -28.7855, 33.9325, 0.68", "-17.9317, -29.834, 34.5382, 0.91", "-18.1159, -30.7129, 35.0851, 0.68", "-18.2523, -31.489, 35.5901, 1.14", "-18.3246, -31.9079, 35.9057, 1.37", "-18.6045, -33.4342, 37.3217, 0.68", "-18.9195, -34.8225, 39.084, 0.46", "-19.1749, -35.8056, 40.7384, 0.46", "-19.3515, -36.3669, 41.8806, 0.46", "-19.4993, -36.8253, 42.899, 0.46", "-19.6918, -37.4041, 44.2482, 0.46", "-19.9047, -37.9788, 45.5531, 0.46", "-20.2763, -38.705, 46.8713, 0.46", "-20.4558, -38.993, 47.2718, 1.14", "-20.8566, -39.6927, 48.1096, 1.37", "-21.2253, -40.4489, 48.9324, 0.91", "-21.5964, -41.4574, 49.8963, 0.91", "-22.0029, -42.7447, 51.0043, 0.91", "-22.5206, -44.2973, 52.3141, 0.91", "-22.9725, -45.6026, 53.4107, 0.91", "-23.2101, -46.24, 53.9145, 0.91", "-23.7503, -47.8082, 55.0251, 0.68", "-24.2551, -49.326, 56.0011, 0.91", "-24.8293, -51.0564, 56.9862, 0.46", "-25.1276, -51.9341, 57.447, 0.46", "-25.6307, -53.2477, 58.1099, 0.91", "-26.2019, -54.6012, 58.8057, 0.68", "-26.811, -55.8656, 59.5208, 0.68", "-27.5501, -57.5418, 60.4424, 1.14" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.8051, -18.4031, 27.2982, 0.91", "-16.2879, -19.092, 27.2529, 0.91", "-15.2191, -20.4241, 27.3464, 0.91", "-14.172, -21.6905, 27.626, 0.91", "-13.0573, -23.0362, 28.1509, 0.68", "-11.991, -24.4187, 28.8773, 0.68", "-11.2733, -25.4481, 29.5196, 1.14", "-10.6092, -26.592, 30.4417, 1.14", "-10.1992, -27.4486, 31.288, 0.91", "-9.7537, -28.5264, 32.4978, 0.68", "-9.36987, -29.5427, 33.7579, 0.68", "-9.11055, -30.2875, 34.6962, 0.68", "-8.66267, -31.4862, 36.1583, 0.68", "-8.37027, -32.1821, 37.0318, 0.68", "-7.96486, -33.0109, 38.108, 0.91", "-7.53196, -33.8344, 39.1861, 0.91", "-6.99694, -34.8496, 40.4278, 0.91", "-6.45534, -36.0184, 41.6376, 1.14", "-5.9884, -37.2495, 42.754, 0.91", "-5.81163, -37.8523, 43.267, 0.68", "-5.55993, -38.9608, 44.123, 0.68", "-5.26972, -40.4415, 45.1608, 0.68", "-4.92158, -41.9695, 46.2077, 0.68", "-4.51266, -43.3883, 47.169, 0.68", "-4.02963, -44.7525, 48.0228, 0.91", "-3.51739, -45.924, 48.719, 1.37", "-2.82763, -47.2848, 49.5774, 0.91", "-2.02192, -48.7038, 50.5037, 0.91", "-1.20732, -50.0962, 51.359, 1.14", "-0.403578, -51.6446, 52.1053, 0.68", "0.139439, -52.8411, 52.6088, 1.14", "0.626465, -54.1002, 53.1189, 0.68", "1.06776, -55.5371, 53.6655, 0.23", "1.14379, -55.8614, 53.7841, 0.23", "1.55224, -57.9118, 54.5077, 0.68", "1.80882, -59.4387, 55.0006, 0.23", "1.90054, -59.9282, 55.1032, 0.46", "2.10034, -60.8866, 55.2633, 0.46", "2.39832, -62.2378, 55.4699, 0.46", "2.64638, -63.2504, 55.6188, 0.46", "3.2255, -65.3548, 55.9407, 0.68", "3.86302, -67.4644, 56.242, 0.68", "4.42591, -69.2552, 56.5435, 1.14", "4.60408, -69.7729, 56.6403, 1.37", "4.92866, -70.6262, 56.8539, 0.91", "5.51777, -71.9852, 57.295, 0.68", "6.23583, -73.4086, 57.8209, 0.68", "7.04538, -74.9465, 58.4, 0.23", "7.67459, -76.0345, 58.71, 0.91", "8.546, -77.4189, 59.0626, 0.23", "9.09105, -78.1965, 59.2297, 0.23", "9.60813, -78.8492, 59.3043, 0.68", "10.1877, -79.4914, 59.3161, 0.23", "11.493, -80.7209, 59.3594, 0.23", "11.9238, -81.1203, 59.3811, 0.68", "12.5688, -81.705, 59.4101, 1.14", "13.7908, -82.7466, 59.5125, 0.68", "14.8038, -83.5515, 59.6814, 0.68", "16.7959, -85.0651, 60.1436, 0.46", "17.8749, -85.8976, 60.4651, 0.46", "18.3135, -86.2374, 60.598, 0.46", "19.4057, -87.1005, 60.948, 0.46", "20.2838, -87.7936, 61.2421, 0.46", "21.6815, -88.8813, 61.6985, 0.46", "22.3425, -89.3786, 61.8834, 1.14", "22.8231, -89.7046, 62.0344, 1.14", "25.1266, -91.1619, 62.8606, 0.23", "25.8653, -91.6178, 63.1867, 0.68", "27.0309, -92.3067, 63.8308, 0.23", "28.0316, -92.8715, 64.5005, 0.68", "29.744, -93.8115, 65.8384, 0.23", "30.6097, -94.2919, 66.6264, 1.37", "32.0408, -95.1223, 68.0947, 0.68", "33.332, -95.8971, 69.4983, 0.68", "34.8049, -96.8087, 71.2127, 0.46", "36.3226, -97.7977, 73.1327, 0.46", "37.3072, -98.503, 74.4686, 0.46", "38.6384, -99.4925, 76.2675, 0.46" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "17.8491, -1.76751, 3.59192, 2.28", "18.4001, -2.56411, 4.96653, 2.28", "19.0046, -3.47517, 6.48188, 1.82", "19.6893, -4.54692, 8.1464, 1.59", "20.2262, -5.38735, 9.45167, 1.59", "20.6186, -6.00161, 10.4057, 2.05", "21.2299, -6.9585, 11.8918, 2.28", "21.8404, -7.90394, 13.3573, 2.05", "22.4124, -8.79588, 14.6846, 1.82" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "17.8491, -1.76751, 3.59192, 2.96", "19.395, -1.00576, 1.59938, 2.96", "19.8522, -0.781441, 0.959191, 2.73", "20.7169, -0.377224, -0.354151, 1.59", "21.8437, 0.195909, -2.16246, 1.14", "22.9446, 0.79727, -3.91313, 1.14", "23.912, 1.3679, -5.38436, 1.14", "24.7622, 1.97713, -6.69038, 1.14", "25.6134, 2.69014, -7.97629, 1.14", "26.344, 3.45055, -9.14026, 0.91", "26.9495, 4.2122, -10.203, 0.91", "27.5175, 4.99797, -11.3036, 0.91", "28.2006, 5.88079, -12.7366, 0.91", "28.8472, 6.67865, -14.2331, 0.91", "29.6166, 7.59588, -16.4212, 0.91", "30.2428, 8.27661, -18.4735, 0.91", "30.7216, 8.74796, -20.414, 0.91", "31.2356, 9.1102, -22.9279, 0.91", "31.4419, 9.14251, -24.0359, 0.91", "31.8088, 8.9791, -25.849, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "25.4408, 18.7669, -20.5874, 1.14", "25.6081, 18.8979, -21.1328, 1.14", "26.4439, 19.1689, -23.6037, 0.91", "27.0472, 19.2025, -25.5359, 0.91", "27.614, 19.1505, -27.8446, 0.91", "27.8839, 19.0496, -29.5981, 0.68", "28.0392, 18.9262, -31.5449, 0.68", "28.0694, 18.7406, -33.4795, 0.68", "27.9944, 18.5694, -35.0357, 0.68", "27.6967, 18.421, -36.8146, 0.91", "27.194, 18.3825, -38.6384, 0.91", "26.9452, 18.4979, -39.5943, 0.91", "26.8937, 18.8379, -40.6275, 0.91", "27.2854, 19.514, -41.9339, 0.91", "27.9162, 20.2403, -43.0595, 0.68", "28.3876, 20.6955, -43.7362, 0.68", "29.2071, 21.383, -44.8086, 0.68", "30.0345, 22.0831, -45.9671, 0.68", "30.3664, 22.4048, -46.5297, 0.91", "31.033, 23.333, -48.1584, 0.91", "31.5155, 24.3686, -49.8929, 0.91", "31.8336, 25.5116, -51.6604, 0.91", "31.9399, 26.4356, -52.9937, 0.91", "31.917, 27.4938, -54.5518, 0.91", "31.8097, 28.5454, -56.1937, 0.91", "31.7132, 29.0089, -56.9175, 0.91", "31.4172, 29.7671, -58.1146, 0.91", "30.8309, 30.7945, -59.877, 0.91", "30.2202, 31.6029, -61.5557, 0.91", "29.809, 32.0604, -62.6043, 0.91", "29.3296, 32.5307, -63.7868, 0.91", "28.7006, 33.0497, -65.2488, 0.91", "27.7096, 33.7179, -67.4241, 0.91", "26.9268, 34.1995, -69.0238, 0.91", "26.3868, 34.5561, -70.0861, 0.68", "26.2233, 34.6596, -70.3964, 0.68" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "25.4408, 18.7669, -20.5874, 1.14", "26.8194, 19.1225, -21.8416, 1.14", "28.1713, 19.4712, -23.0715, 1.14" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "24.8488, -20.2385, -31.3815, 0.91", "23.7115, -19.186, -33.8965, 0.91", "22.9068, -18.2134, -35.9906, 0.91", "22.395, -17.3767, -37.7181, 0.91", "22.1714, -16.9088, -38.6456, 1.14", "21.9395, -16.3415, -39.7056, 1.14", "21.6455, -15.6384, -40.9011, 0.68", "21.1307, -14.104, -43.0498, 0.68", "20.7513, -12.8986, -44.5602, 0.68", "20.6397, -12.5396, -45.0481, 0.68", "20.4688, -12.0735, -45.7958, 0.68", "19.9417, -10.8265, -48.1736, 0.68", "19.648, -10.2049, -49.5052, 0.68", "19.4623, -9.85913, -50.3104, 0.91", "18.7086, -8.70492, -53.2768, 0.91", "18.0621, -7.69915, -55.9183, 0.91", "17.4565, -6.74471, -58.5481, 0.91", "17.022, -5.99697, -60.5687, 0.91", "16.4431, -4.97517, -63.0219, 0.91", "16.0439, -4.19893, -64.7634, 0.91", "15.6111, -3.27874, -66.6101, 0.46", "15.187, -2.09728, -68.8423, 0.46", "14.6854, -0.1862, -72.3917, 0.68", "14.5345, 0.845238, -74.3092, 0.46", "14.5204, 2.19009, -76.9257, 0.46", "14.6507, 2.88109, -78.3586, 0.46", "15.1576, 4.25006, -81.3201, 0.46", "15.7823, 5.21484, -83.3965, 0.46", "16.3117, 5.76768, -84.6074, 0.46", "17.3425, 6.58882, -86.3917, 0.46", "18.7963, 7.67465, -88.6341, 0.46", "19.9452, 8.46254, -90.2169, 0.46", "21.7233, 9.61018, -92.3294, 0.46", "22.8264, 10.293, -93.4973, 0.46", "24.6559, 11.4306, -95.3121, 0.46" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "24.8488, -20.2385, -31.3815, 0.68", "25.2454, -21.7284, -30.461, 0.68", "25.6761, -23.8892, -29.1782, 0.68", "25.9049, -25.464, -28.3258, 1.14", "26.0125, -26.7121, -27.718, 1.14", "26.0796, -28.9408, -26.8254, 0.68", "26.052, -30.2577, -26.3269, 0.68", "25.9304, -31.7006, -25.8058, 0.23", "25.755, -32.7621, -25.4971, 0.23", "25.4884, -34.0617, -25.171, 0.91", "25.0153, -35.8153, -24.7713, 0.68", "24.3891, -37.8712, -24.4501, 0.68", "23.9761, -39.5595, -24.2457, 0.68", "23.6662, -41.2678, -24.1394, 1.14", "23.5654, -42.1177, -24.1345, 0.68", "23.5237, -43.8573, -24.3825, 0.68", "23.5333, -45.0307, -24.7099, 0.68", "23.473, -46.74, -25.4457, 0.91", "23.1541, -48.5414, -26.4933, 0.91", "22.9499, -49.23, -26.9244, 0.68", "22.2718, -51.0524, -28.1354, 0.68", "21.7686, -52.3307, -29.0298, 0.91", "21.1637, -53.7477, -30.0698, 0.46", "19.9267, -56.4639, -32.388, 0.68", "19.3744, -57.6317, -33.5994, 0.46", "18.745, -58.9107, -35.0126, 0.46", "18.1348, -60.1462, -36.4887, 0.46", "17.5472, -61.524, -38.3309, 0.91", "16.8558, -63.57, -41.4106, 0.91", "16.418, -65.5121, -44.7191, 0.91" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-49.0989, 1.9751, -4.93485, 0.91", "-50.6874, 2.86199, -4.62161, 0.91", "-52.3434, 3.87714, -4.4506, 0.91", "-52.9486, 4.25556, -4.42312, 0.91", "-54.8474, 5.38063, -4.40108, 1.14", "-56.1868, 6.10136, -4.46726, 1.14", "-58.3151, 7.1223, -4.6226, 1.14", "-59.8703, 7.8457, -4.80314, 1.14", "-61.5295, 8.55843, -5.0594, 1.14", "-63.7893, 9.5046, -5.44884, 1.14", "-66.7307, 10.6767, -6.03772, 0.68", "-68.8849, 11.4723, -6.47226, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-49.0989, 1.9751, -4.93485, 0.68", "-49.0559, 2.44428, -7.0078, 0.68", "-49.0039, 3.01134, -9.51324, 0.68", "-48.9468, 3.63397, -12.2642, 0.68" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-53.1845, -13.3638, 5.58325, 0.91", "-53.5036, -14.4631, 5.22538, 0.91", "-53.9534, -15.9095, 4.89102, 0.46", "-54.2815, -16.8603, 4.69192, 0.46", "-54.9083, -18.5272, 4.38312, 0.68", "-55.4842, -20.0374, 4.06271, 0.68", "-56.2171, -21.9059, 3.6024, 0.68", "-57.0111, -23.7834, 3.05864, 0.91", "-57.3778, -24.5198, 2.81931, 0.91", "-58.0696, -25.6471, 2.40146, 0.91", "-59.0063, -26.7877, 1.94947, 0.91", "-59.8843, -27.6232, 1.62464, 0.91", "-60.5804, -28.1427, 1.40328, 0.91", "-61.7268, -28.8277, 1.05947, 0.68", "-62.5477, -29.224, 0.884238, 0.68", "-63.8029, -29.7066, 0.666953, 0.91", "-65.5061, -30.3098, 0.458965, 0.91", "-66.7968, -30.7763, 0.324399, 0.68", "-68.4441, -31.4946, 0.151247, 1.14", "-68.896, -31.7306, 0.0731796, 0.46", "-69.8877, -32.3028, -0.115032, 0.46", "-70.7694, -32.8782, -0.382291, 0.46", "-71.297, -33.2638, -0.666192, 0.68", "-72.419, -34.0865, -1.76342, 0.46", "-73.5609, -34.813, -3.2214, 0.46", "-74.1851, -35.0418, -4.18216, 0.46", "-74.8629, -35.0658, -5.36881, 0.46", "-75.5997, -34.8886, -6.86357, 0.46", "-76.267, -34.5306, -8.44855, 0.46", "-76.7087, -34.1564, -9.68459, 1.14", "-77.3913, -33.522, -11.7897, 1.14", "-77.9909, -32.9559, -13.7203, 0.68", "-78.6625, -32.3055, -15.8953, 0.68", "-79.1873, -31.7028, -17.8013, 0.68", "-79.7849, -30.7975, -20.3841, 0.68", "-80.3958, -29.5868, -23.6196, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-53.1845, -13.3638, 5.58325, 0.68", "-54.439, -12.2059, 5.1677, 0.68", "-55.4396, -11.341, 4.7284, 0.68", "-56.2069, -10.6529, 4.2208, 0.68", "-56.9822, -9.92366, 3.43702, 0.68", "-57.7444, -9.16303, 2.4123, 0.68", "-58.3413, -8.5358, 1.40533, 0.91", "-58.9064, -7.76371, -1.16303E-4, 0.91", "-59.3939, -6.94498, -1.61203, 0.91", "-60.0418, -5.90249, -3.76244, 0.91", "-60.5805, -5.1046, -5.46017, 0.91", "-61.1656, -4.20513, -7.30822, 0.91", "-61.68, -3.34381, -9.00667, 0.91", "-62.1484, -2.52563, -10.4856, 0.91", "-62.8345, -1.46029, -12.2462, 0.68", "-63.5309, -0.420631, -13.8354, 0.68", "-64.2002, 0.526428, -15.2153, 0.68", "-64.8311, 1.35672, -16.3747, 0.68", "-65.8872, 2.60214, -18.1748, 0.68", "-66.5267, 3.38027, -19.377, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "22.4124, -8.79588, 14.6846, 0.68", "24.8951, -9.05012, 16.9155, 0.68", "26.6042, -9.1893, 18.361, 0.91", "28.636, -9.38239, 20.0614, 0.91", "30.0194, -9.57011, 21.2748, 1.14", "30.6675, -9.68972, 21.8746, 1.59", "31.9898, -9.99472, 23.1494, 1.14", "33.3265, -10.5041, 24.4888, 0.91", "34.0598, -11.0089, 25.3787, 0.91", "34.8204, -11.8523, 26.4773, 0.91", "35.3368, -12.6707, 27.363, 1.37", "35.7651, -13.5191, 28.2273, 1.37", "36.2868, -15.0556, 29.5817, 1.14", "36.6519, -16.6502, 30.7859, 1.14", "36.8205, -17.5237, 31.3739, 1.14", "36.9615, -18.3017, 31.8175, 1.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "22.4124, -8.79588, 14.6846, 1.37", "23.1644, -10.3139, 14.1592, 1.37", "23.7844, -11.5657, 13.7259, 1.37", "24.8807, -13.7789, 12.96, 1.82", "24.9993, -14.0184, 12.8771, 2.05" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "31.8088, 8.9791, -25.849, 0.68", "32.1917, 9.22638, -26.8767, 0.68", "32.9288, 9.51981, -28.6556, 0.68", "33.8324, 9.8893, -30.8306, 0.68", "34.936, 10.3849, -33.2586, 0.68", "36.0065, 10.8298, -35.3208, 0.91", "37.0271, 11.1734, -37.0383, 0.68", "38.0441, 11.3702, -38.5255, 0.68", "39.1636, 11.4556, -39.9912, 0.68", "40.5155, 11.4528, -41.5551, 0.68", "42.2521, 11.4003, -43.3647, 0.68", "43.7983, 11.391, -44.8853, 1.14", "45.4068, 11.4058, -46.362, 0.91", "47.0863, 11.3672, -47.8178, 1.14", "48.4695, 11.3001, -49.067, 0.68", "49.4365, 11.2211, -49.9775, 0.68", "50.3856, 11.1273, -50.9259, 0.68", "51.5, 10.9722, -52.0511, 0.68", "53.5213, 10.564, -53.9895, 0.68", "55.8985, 9.82387, -56.1956, 0.68", "56.9851, 9.37791, -57.1427, 0.68", "58.9819, 8.39207, -58.7163, 0.68", "60.3012, 7.64254, -59.6682, 0.68", "61.804, 6.69872, -60.6142, 0.68", "63.3944, 5.64946, -61.5105, 0.68", "64.6338, 4.86456, -62.1536, 0.68", "66.0131, 4.08056, -62.9871, 0.68", "68.0479, 3.01985, -64.4358, 0.68", "69.1966, 2.4843, -65.4082, 0.68", "70.9073, 1.83832, -67.077, 0.68", "71.8877, 1.55588, -68.1766, 0.68", "73.3137, 1.20356, -70.0644, 0.68", "74.5783, 0.980012, -71.8905, 0.68", "75.1592, 0.923061, -72.825, 0.68", "76.5434, 0.89522, -75.2696, 0.68", "77.8041, 0.980224, -77.5373, 0.68", "78.5531, 1.10637, -79.0816, 0.68", "79.3413, 1.34939, -80.8913, 0.68", "80.3798, 1.85164, -83.7468, 0.68", "81.5874, 2.5426, -87.4045, 0.68", "82.2783, 3.01541, -89.7566, 0.68", "83.2947, 3.83454, -93.4683, 0.68", "84.1836, 4.62547, -96.9154, 0.68", "85.1511, 5.64112, -101.168, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "31.8088, 8.9791, -25.849, 0.68", "33.4313, 9.64146, -25.8095, 0.68", "35.1669, 10.3466, -25.7924, 0.68", "36.0436, 10.7037, -25.8321, 0.68", "37.3989, 11.2833, -25.9427, 0.68", "38.6368, 11.8319, -26.1411, 0.68", "39.6249, 12.2803, -26.3993, 0.68", "40.5763, 12.7426, -26.8103, 0.68", "41.372, 13.0764, -27.2999, 0.68", "42.4757, 13.4624, -28.0651, 0.91", "43.9237, 13.9467, -29.222, 0.68", "45.1613, 14.3772, -30.3785, 0.68", "46.4813, 14.8314, -31.7631, 0.68", "47.6184, 15.1609, -33.0682, 0.68", "48.3443, 15.2951, -33.9643, 1.14", "49.3173, 15.3591, -35.2236, 0.91", "50.5181, 15.348, -36.9581, 0.91", "51.2481, 15.3209, -38.1973, 0.91", "51.8659, 15.3035, -39.3287, 1.14", "53.1413, 15.3182, -41.6347, 0.68", "53.9474, 15.3659, -42.9754, 0.68", "55.7315, 15.605, -45.676, 0.68", "56.8951, 15.8737, -47.2974, 0.68", "57.8724, 16.1574, -48.5381, 0.91", "59.0488, 16.5589, -49.8735, 0.91", "60.1659, 16.9647, -50.9663, 0.68", "61.8889, 17.572, -52.3181, 0.68", "62.7186, 17.874, -52.7783, 0.68", "63.9438, 18.3687, -53.3645, 0.68", "65.6887, 19.1355, -54.331, 0.91", "67.4605, 19.9918, -55.4445, 1.14", "69.4793, 21.096, -56.914, 0.91", "71.6209, 22.4536, -58.5996, 0.91", "72.3415, 22.982, -59.2426, 0.91", "74.1492, 24.4453, -61.026, 0.91", "75.0109, 25.1476, -61.9651, 0.91", "76.5245, 26.2336, -63.7916, 0.91", "76.9558, 26.4413, -64.3401, 0.91", "77.8926, 26.6215, -65.2789, 0.91", "78.8202, 26.7125, -65.8352, 0.91", "80.0423, 26.8574, -66.1327, 0.91", "81.8059, 27.0171, -66.4436, 0.91", "83.4679, 27.1135, -66.722, 0.91", "85.8816, 27.2579, -66.9963, 0.91", "88.4157, 27.5454, -67.1089, 0.91", "91.7853, 28.1075, -67.085, 0.68", "94.7872, 28.761, -66.9128, 0.68", "97.0851, 29.3455, -66.5814, 0.91", "100.094, 30.0554, -65.8578, 0.68", "102.51, 30.4823, -65.1142, 0.68", "103.892, 30.599, -64.5597, 0.68", "105.555, 30.632, -63.6282, 0.91", "108.172, 30.6307, -61.7963, 0.68", "110.432, 30.4735, -60.0897, 0.68", "111.578, 30.248, -59.2129, 0.91", "113.559, 29.5681, -57.5851, 0.91", "115.363, 28.8427, -55.9578, 0.68", "116.834, 28.128, -54.4953, 0.68", "118.045, 27.4118, -53.1991, 0.68", "119.586, 26.3604, -51.3008, 0.46", "120.485, 25.7416, -50.1348, 0.91" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "28.1713, 19.4712, -23.0715, 1.14", "28.7786, 19.9711, -23.4941, 1.14", "30.1502, 21.0953, -24.6854, 0.91", "30.9014, 21.6125, -25.3971, 0.91", "32.1375, 22.3242, -26.6457, 0.91", "33.3231, 22.9542, -27.9012, 1.14", "34.557, 23.6076, -29.2086, 0.91", "35.671, 24.2262, -30.5409, 0.91", "36.9656, 24.9996, -32.2842, 0.91", "38.0644, 25.7184, -33.8909, 0.91", "38.8424, 26.1616, -35.011, 0.91", "39.4304, 26.4586, -35.8569, 0.91", "40.1677, 26.8832, -36.9476, 0.91", "40.4504, 27.1373, -37.3856, 0.91", "40.7511, 27.899, -38.1455, 1.37" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "28.1713, 19.4712, -23.0715, 0.68", "28.6526, 18.9741, -23.2803, 0.68", "30.7892, 16.8435, -23.3767, 0.68", "32.0596, 15.6719, -23.0521, 0.68", "33.9072, 14.076, -22.3579, 0.68", "35.4899, 12.6268, -21.8602, 0.68", "36.6288, 11.506, -21.6441, 0.68", "37.779, 10.2624, -21.3941, 0.68", "38.3757, 9.4672, -21.2708, 0.68", "39.1482, 8.23101, -21.2825, 0.91", "40.2472, 6.49576, -21.5746, 0.91", "41.2048, 5.02838, -21.7783, 0.91", "41.7769, 4.18283, -21.6672, 0.91", "42.6714, 3.02035, -20.5254, 0.91", "43.4378, 2.20943, -19.2065, 0.68", "44.225, 1.41757, -17.5952, 0.68", "45.264, 0.465016, -15.4264, 0.68", "46.2131, -0.399815, -13.4902, 0.68", "47.0761, -1.2089, -11.7175, 0.68", "47.8904, -1.95205, -10.2034, 0.46", "48.768, -2.736, -8.76047, 0.68", "49.6575, -3.56313, -7.40169, 0.68", "50.95, -4.79472, -5.58767, 0.68", "52.0168, -5.8259, -4.19023, 0.68", "53.7709, -7.47087, -2.00578, 0.68", "54.9308, -8.5238, -0.526393, 0.68", "56.187, -9.58248, 0.968228, 0.68" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-48.9468, 3.63397, -12.2642, 0.68", "-49.4071, 3.94141, -13.3805, 0.68", "-50.469, 4.65068, -15.9558, 0.68", "-51.342, 5.23378, -18.073, 0.68", "-52.3943, 5.93665, -20.6251, 0.68", "-52.7037, 6.1433, -21.3754, 0.46" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-48.9468, 3.63397, -12.2642, 0.46", "-48.9788, 4.05159, -13.7207, 0.46", "-49.0181, 4.54313, -16.5034, 0.46", "-49.0578, 4.77671, -19.0512, 0.46", "-49.0855, 4.94003, -20.8326, 0.46", "-49.1074, 5.06872, -22.2362, 0.46", "-49.134, 5.22492, -23.9399, 0.46", "-49.3736, 5.34446, -27.0116, 0.46", "-49.594, 5.22288, -29.0476, 0.46" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "36.9615, -18.3017, 31.8175, 0.68", "37.8082, -18.0646, 32.1601, 0.68", "40.076, -17.4297, 33.0778, 0.46", "41.3602, -17.0701, 33.5975, 0.46", "42.338, -16.7963, 33.9931, 0.46", "43.0101, -16.6081, 34.2651, 0.46" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "36.9615, -18.3017, 31.8175, 0.68", "38.2093, -18.2674, 30.4563, 0.68", "39.6823, -18.2268, 28.8494, 0.68", "41.1743, -18.1858, 27.2218, 0.46", "42.8088, -18.1408, 25.4388, 0.46", "44.5836, -18.0919, 23.5027, 0.46", "45.9553, -18.0542, 22.0063, 0.46" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "24.9993, -14.0184, 12.8771, 1.14", "25.5869, -15.1556, 11.0402, 1.14", "26.1221, -16.4921, 9.0271, 1.14", "26.3536, -17.6741, 7.4125, 1.14", "26.3692, -18.5759, 6.27611, 1.37", "26.4007, -20.385, 3.99663, 0.91", "26.4223, -21.6308, 2.42675, 0.91", "26.3875, -22.0722, 1.85493, 1.14", "26.0589, -23.6057, 0.190226, 1.14", "25.6726, -24.6578, -0.782714, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "24.9993, -14.0184, 12.8771, 1.37", "25.3751, -15.1902, 14.301, 1.37", "25.8271, -16.9796, 15.4128, 1.37", "26.3707, -19.0794, 15.9773, 1.37", "26.728, -20.4149, 16.2755, 1.37", "27.234, -22.1983, 16.6543, 1.14", "27.9842, -24.6073, 17.2282, 1.14", "28.664, -26.8361, 17.643, 1.14", "29.3587, -28.9647, 18.0453, 1.14", "29.9357, -30.5546, 18.5095, 0.91", "30.1892, -31.1064, 18.8022, 1.14", "30.8071, -32.0779, 19.7147, 1.37", "31.5928, -33.0712, 21.0291, 1.14", "32.3794, -33.9516, 22.4203, 0.91", "33.2757, -34.8963, 24.0343, 0.91", "33.9633, -35.5842, 25.2216, 0.91", "34.9524, -36.5688, 26.8984, 0.91", "35.9096, -37.5292, 28.3671, 0.91", "36.8594, -38.4935, 29.6867, 0.91", "37.6557, -39.3693, 30.7644, 0.91", "38.9316, -40.8899, 32.4753, 0.91", "39.7372, -41.9872, 33.5947, 0.91", "40.8015, -43.7078, 35.2059, 1.14", "41.4094, -44.8914, 36.2421, 1.14", "41.9588, -46.1892, 37.3412, 1.14", "42.4556, -47.66, 38.5355, 1.14", "42.8135, -49.0261, 39.6572, 1.37", "43.1349, -50.4696, 40.9724, 0.91", "43.4238, -51.8991, 42.4718, 0.91", "43.7055, -53.0109, 43.7369, 0.91", "44.0572, -54.0419, 45.0043, 1.14", "44.4588, -55.0685, 46.365, 0.91", "44.7978, -55.8058, 47.4346, 1.14", "45.2347, -56.6787, 48.7417, 1.14", "45.6916, -57.665, 50.1433, 1.14", "46.0464, -58.5642, 51.3188, 0.91", "46.4188, -59.6382, 52.6936, 1.14", "46.6955, -60.5575, 53.749, 1.14", "46.9791, -61.8197, 55.0699, 0.91", "47.2505, -63.4169, 56.6496, 0.91", "47.4561, -64.8851, 58.0143, 1.14", "47.6933, -66.3402, 59.3048, 1.14", "47.901, -67.3476, 60.1881, 0.91", "48.2359, -68.7876, 61.4918, 0.68", "48.4497, -69.7969, 62.4708, 0.68", "48.6013, -70.572, 63.2596, 1.14", "48.818, -71.8439, 64.583, 0.91", "49.053, -73.1375, 65.9762, 0.91", "49.3301, -74.4626, 67.4834, 0.91", "49.7666, -76.3839, 69.6577, 0.46", "49.9174, -77.1581, 70.5228, 0.46", "50.0881, -78.2869, 71.8315, 0.46", "50.2037, -79.1629, 72.8344, 0.91", "50.3408, -80.3091, 74.0857, 0.91", "50.4418, -81.277, 75.1482, 0.91", "50.5487, -82.2806, 76.2315, 0.23", "50.7181, -84.3, 78.395, 0.23", "50.7711, -84.9999, 79.1323, 0.23", "50.8313, -85.9138, 80.068, 0.46", "50.9504, -87.3389, 81.4248, 0.68", "51.0556, -88.2392, 82.2639, 1.37", "51.2094, -89.3548, 83.2389, 0.46", "51.3638, -90.4379, 84.0729, 0.46", "51.4472, -91.1085, 84.5957, 0.91", "51.611, -92.3809, 85.6176, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "40.7511, 27.899, -38.1455, 0.91", "41.3969, 28.9826, -38.98, 0.91", "42.5671, 30.842, -40.2432, 0.91", "43.6726, 32.5735, -41.3692, 0.68", "44.6468, 33.9799, -42.1177, 0.68", "45.6453, 35.2777, -42.57, 0.68", "46.5357, 36.3824, -42.7554, 0.68", "47.5818, 37.5384, -42.5639, 0.68", "48.3989, 38.3652, -42.2079, 0.68", "50.2013, 40.1478, -40.9528, 0.68", "51.888, 41.9059, -39.2992, 0.68", "52.8615, 42.9431, -38.0664, 0.68", "53.8982, 43.9873, -36.5041, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "40.7511, 27.899, -38.1455, 0.68", "41.6054, 29.4608, -40.1357, 0.68", "42.2264, 30.596, -41.5823, 0.68", "42.7222, 31.5024, -42.7373, 0.68", "43.2737, 32.5105, -44.022, 0.68", "43.9387, 33.726, -45.571, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "25.6726, -24.6578, -0.782714, 0.46", "24.8335, -25.0675, -2.88341, 0.46", "24.3278, -25.1921, -4.60356, 0.68", "23.8465, -25.1696, -6.76615, 0.68", "23.4978, -25.0152, -9.06715, 0.68", "23.2861, -24.7237, -11.8152, 0.68", "23.2292, -24.4285, -14.3994, 0.68", "23.3031, -24.0176, -16.687, 0.68", "23.396, -23.7163, -18.2528, 0.68", "23.5513, -23.4749, -19.808, 0.68", "23.6973, -23.3797, -21.3762, 0.68", "23.7876, -23.4791, -23.3231, 0.68", "23.7687, -23.6252, -24.0378, 0.68", "23.5804, -24.4251, -26.3374, 0.68", "23.3636, -25.2995, -28.3944, 0.68", "23.2521, -25.9831, -29.8531, 0.68", "23.2731, -26.5083, -30.97, 0.68", "23.5293, -27.0865, -32.4572, 0.68", "23.8768, -27.4857, -33.9631, 0.68", "24.2095, -27.6934, -35.2343, 0.68", "24.6985, -27.8723, -36.8479, 0.68", "25.2583, -28.0082, -38.4662, 0.68", "26.0096, -28.1942, -40.4816, 0.91", "27.0787, -28.5104, -43.1638, 0.91", "27.9207, -28.8257, -45.2565, 0.91", "28.5957, -29.2609, -46.9272, 0.68", "28.9658, -30.1377, -48.5228, 0.68", "28.9374, -31.7231, -50.4476, 0.68", "28.5665, -32.9165, -51.8993, 0.68", "28.1287, -33.7211, -53.2156, 0.68", "27.8713, -34.0326, -54.0589, 0.68", "27.1361, -34.8229, -56.8086, 0.91", "26.6941, -35.1765, -58.8225, 0.91", "26.344, -35.3396, -60.954, 0.91", "26.1694, -35.3137, -63.466, 0.91", "26.3862, -34.9424, -67.0155, 0.91", "26.6082, -34.7075, -68.1378, 0.91", "27.3778, -33.9554, -70.2402, 0.68", "27.9795, -33.4231, -71.3366, 0.68", "28.9173, -32.5601, -72.629, 0.68", "30.6051, -30.7789, -74.6773, 0.68", "31.1787, -30.1245, -75.3458, 0.68", "32.1919, -28.9053, -76.6109, 0.68", "32.9282, -27.9957, -77.5867, 0.68", "34.2984, -26.2451, -79.5047, 0.68", "35.8647, -24.0757, -81.9997, 0.46", "36.5672, -23.0336, -83.2616, 0.46", "37.9212, -21.0876, -85.6407, 0.46", "38.4511, -20.3709, -86.5629, 0.46" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "25.6726, -24.6578, -0.782714, 0.91", "24.5087, -26.0333, -0.706848, 0.91", "22.6015, -28.1171, -0.444321, 0.91", "21.8542, -28.8541, -0.297792, 0.91", "20.5802, -29.9819, -0.0216539, 0.68", "19.5122, -30.8869, 0.179063, 0.68", "18.2248, -31.9689, 0.394363, 0.68", "17.5227, -32.5697, 0.521488, 0.68", "16.5832, -33.3782, 0.703977, 0.46", "15.7736, -34.1707, 0.807708, 0.91", "14.6403, -35.6866, 0.803204, 1.14", "14.2065, -36.6198, 0.720076, 0.46", "13.8343, -37.8268, 0.569723, 0.46", "13.5536, -38.8899, 0.44678, 0.68", "13.2588, -39.9635, 0.32317, 0.68", "12.722, -41.5787, 0.156561, 0.46", "12.0373, -43.0539, 0.0665803, 0.68", "10.6982, -45.1045, 0.0696944, 0.46", "9.98728, -45.9967, 0.121349, 0.46", "8.93193, -47.2507, 0.245448, 0.46", "8.00632, -48.3528, 0.321308, 0.91", "6.80372, -49.8873, 0.39369, 0.68", "5.44091, -51.9969, 0.473471, 0.46", "4.88581, -53.2884, 0.510246, 0.68", "4.31831, -55.4628, 0.549798, 0.68", "4.11292, -57.1158, 0.56242, 0.68", "4.10936, -58.0362, 0.556426, 0.23", "4.2154, -59.095, 0.454521, 0.23", "4.35898, -60.1247, 0.289714, 0.23", "4.37415, -60.4705, 0.232897, 0.23", "4.27733, -61.1619, 0.18923, 0.46", "3.83016, -62.7232, 0.296103, 0.68", "3.23647, -64.2248, 0.475902, 0.68", "2.53629, -65.7915, 0.701195, 1.14", "1.96695, -67.0354, 0.889699, 0.23", "1.01349, -69.1489, 1.28834, 0.23", "0.565784, -70.1606, 1.48437, 0.23", "-0.05328, -71.5484, 1.82371, 0.68", "-0.570217, -72.8134, 2.16784, 0.23", "-0.863971, -73.6739, 2.3996, 0.68", "-1.19839, -74.6581, 2.66535, 0.23", "-1.64326, -75.9803, 3.06071, 0.68", "-2.17327, -77.7077, 3.70202, 0.23", "-2.49464, -78.838, 4.23619, 0.91", "-3.17767, -81.237, 5.47277, 0.23", "-3.30908, -81.7036, 5.73036, 0.46", "-3.88681, -83.9583, 7.02004, 0.23", "-4.28635, -85.6816, 8.12174, 0.23", "-4.54442, -87.0208, 8.98535, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "51.611, -92.3809, 85.6176, 0.23", "51.4959, -93.8876, 86.4783, 0.23", "51.4707, -94.8141, 86.9912, 0.68", "51.5097, -96.5594, 88.0349, 0.68", "51.5354, -97.0517, 88.3795, 0.68", "51.6627, -98.8563, 89.6737, 0.23", "51.7171, -99.6234, 90.2398, 0.23", "51.791, -100.474, 90.9544, 0.46", "51.9107, -101.821, 92.1612, 0.46", "52.0502, -103.147, 93.4069, 0.46", "52.1824, -104.003, 94.2424, 0.91", "52.4559, -105.49, 95.7643, 0.68", "52.6262, -106.614, 96.9711, 0.68", "52.8256, -108.238, 98.776, 0.68", "52.9095, -109.373, 100.049, 0.23", "52.9122, -110.377, 101.217, 0.46", "52.8696, -111.064, 102.118, 0.46", "52.7798, -111.821, 103.181, 0.23", "52.6486, -112.51, 104.209, 0.23", "52.3798, -113.379, 105.631, 0.68", "52.049, -114.424, 107.33, 0.91", "51.8508, -115.199, 108.607, 0.91", "51.7228, -115.828, 109.645, 0.68", "51.6081, -116.626, 111.015, 0.68", "51.5623, -117.206, 112.039, 0.68", "51.6157, -117.983, 113.389, 0.91", "51.8185, -119.054, 115.172, 0.91" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "51.611, -92.3809, 85.6176, 0.91", "52.7067, -91.9674, 85.6176, 0.91", "54.2722, -91.3766, 85.6176, 0.91", "55.8499, -90.7813, 85.6176, 1.14" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_23", "dend_16", "dend_13", "dend_0", "dend_32", "dend_29", "dend_25", "dend_24", "dend_22", "dend_17", "dend_15", "dend_14", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_27", "dend_26", "dend_21", "dend_18", "dend_8", "dend_5", "dend_3", "dend_2", "dend_44", "dend_41", "dend_39", "dend_34", "dend_20", "dend_19", "dend_12", "dend_9", "dend_7", "dend_6", "dend_52", "dend_45", "dend_43", "dend_42", "dend_36", "dend_35", "dend_11", "dend_10", "dend_54", "dend_53", "dend_49", "dend_46", "dend_38", "dend_37", "dend_51", "dend_50", "dend_48", "dend_47" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_23", "dend_16", "dend_13", "dend_0", "dend_32", "dend_29", "dend_25", "dend_24", "dend_22", "dend_17", "dend_15", "dend_14", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_27", "dend_26", "dend_21", "dend_18", "dend_8", "dend_5", "dend_3", "dend_2", "dend_44", "dend_41", "dend_39", "dend_34", "dend_20", "dend_19", "dend_12", "dend_9", "dend_7", "dend_6", "dend_52", "dend_45", "dend_43", "dend_42", "dend_36", "dend_35", "dend_11", "dend_10", "dend_54", "dend_53", "dend_49", "dend_46", "dend_38", "dend_37", "dend_51", "dend_50", "dend_48", "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCSA_569d800dfe_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_23, dend_16, dend_13, dend_0, dend_32, dend_29, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_27, dend_26, dend_21, dend_18, dend_8, dend_5, dend_3, dend_2, dend_44, dend_41, dend_39, dend_34, dend_20, dend_19, dend_12, dend_9, dend_7, dend_6, dend_52, dend_45, dend_43, dend_42, dend_36, dend_35, dend_11, dend_10, dend_54, dend_53, dend_49, dend_46, dend_38, dend_37, dend_51, dend_50, dend_48, dend_47]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_23, dend_16, dend_13, dend_0, dend_32, dend_29, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_27, dend_26, dend_21, dend_18, dend_8, dend_5, dend_3, dend_2, dend_44, dend_41, dend_39, dend_34, dend_20, dend_19, dend_12, dend_9, dend_7, dend_6, dend_52, dend_45, dend_43, dend_42, dend_36, dend_35, dend_11, dend_10, dend_54, dend_53, dend_49, dend_46, dend_38, dend_37, dend_51, dend_50, dend_48, dend_47]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_58
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.4999998391137357)
    connect dend_23(0), soma_0(0.4999998391137357)
    connect dend_16(0), soma_0(0.4999998391137357)
    connect dend_13(0), soma_0(0.4999998391137357)
    connect dend_0(0), soma_0(0.4999998391137357)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -9.93047, -1.53273, 0.0, 4.00547 ) }
    soma_0 { pt3dadd( -8.97778, -1.44626, 0.0, 7.37327 ) }
    soma_0 { pt3dadd( -8.02509, -1.35979, 0.0, 10.2912 ) }
    soma_0 { pt3dadd( -7.07241, -1.27333, 0.0, 11.7364 ) }
    soma_0 { pt3dadd( -6.11972, -1.18686, 0.0, 13.0826 ) }
    soma_0 { pt3dadd( -5.16703, -1.10039, 0.0, 13.6589 ) }
    soma_0 { pt3dadd( -4.21434, -1.01392, 0.0, 14.2164 ) }
    soma_0 { pt3dadd( -3.26165, -0.92745, 0.0, 14.7252 ) }
    soma_0 { pt3dadd( -2.30896, -0.840981, 0.0, 15.0986 ) }
    soma_0 { pt3dadd( -1.35627, -0.754512, 0.0, 15.2979 ) }
    soma_0 { pt3dadd( -0.403583, -0.668043, 0.0, 15.2738 ) }
    soma_0 { pt3dadd( 0.549106, -0.581574, 0.0, 15.1915 ) }
    soma_0 { pt3dadd( 1.5018, -0.495105, 0.0, 14.7866 ) }
    soma_0 { pt3dadd( 2.45448, -0.408636, 0.0, 14.161 ) }
    soma_0 { pt3dadd( 3.40717, -0.322167, 0.0, 13.4403 ) }
    soma_0 { pt3dadd( 4.35986, -0.235698, 0.0, 12.2605 ) }
    soma_0 { pt3dadd( 5.31255, -0.149229, 0.0, 10.8788 ) }
    soma_0 { pt3dadd( 6.26524, -0.0627605, 0.0, 9.65526 ) }
    soma_0 { pt3dadd( 7.21793, 0.0237084, 0.0, 7.93246 ) }
    soma_0 { pt3dadd( 8.17062, 0.110177, 0.0, 6.00108 ) }
    soma_0 { pt3dadd( 9.12331, 0.196646, 0.0, 3.53051 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.73477, -0.561055, 1.28, 5.47 ) }
    dend_28 { pt3dadd( 8.73477, -0.561055, 1.28, 5.47 ) }
    dend_28 { pt3dadd( 9.94311, -0.474041, 1.99736, 5.01 ) }
    dend_28 { pt3dadd( 11.7097, -0.346825, 3.04614, 4.33 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 25/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 4.75479, 3.13444, -10.5, 1.37 ) }
    dend_23 { pt3dadd( 5.17397, 4.80859, -11.2459, 1.37 ) }
    dend_23 { pt3dadd( 5.48689, 6.55003, -11.9425, 1.59 ) }
    dend_23 { pt3dadd( 5.67869, 8.29716, -12.5566, 1.37 ) }
    dend_23 { pt3dadd( 5.7351, 10.1158, -13.1682, 1.14 ) }
    dend_23 { pt3dadd( 5.6778, 11.6602, -13.6537, 1.14 ) }
    dend_23 { pt3dadd( 5.57941, 12.9688, -14.1008, 1.37 ) }
    dend_23 { pt3dadd( 5.45621, 13.7698, -14.3669, 1.59 ) }
    dend_23 { pt3dadd( 5.1547, 15.0716, -14.7385, 2.05 ) }
    dend_23 { pt3dadd( 4.63262, 16.8051, -15.1719, 1.37 ) }
    dend_23 { pt3dadd( 4.15526, 18.0574, -15.5013, 1.59 ) }
    dend_23 { pt3dadd( 3.33681, 19.9453, -16.1322, 1.59 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 2.86478, -6.98305, -5.95, 1.59 ) }
    dend_16 { pt3dadd( 3.35944, -7.90244, -7.19195, 1.59 ) }
    dend_16 { pt3dadd( 4.04337, -9.17362, -8.90913, 1.59 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 40/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 6.32474, 4.18894, -2.82, 0.68 ) }
    dend_13 { pt3dadd( 6.32474, 4.18894, -2.82, 0.68 ) }
    dend_13 { pt3dadd( 6.79295, 4.89193, -3.18355, 0.68 ) }
    dend_13 { pt3dadd( 7.85284, 6.66469, -3.81207, 0.68 ) }
    dend_13 { pt3dadd( 8.73887, 8.30496, -4.10774, 0.68 ) }
    dend_13 { pt3dadd( 9.26331, 9.33864, -4.09836, 0.68 ) }
    dend_13 { pt3dadd( 9.84643, 10.488, -4.08792, 0.68 ) }
    dend_13 { pt3dadd( 10.4617, 11.8074, -3.97895, 0.91 ) }
    dend_13 { pt3dadd( 10.946, 13.077, -3.66872, 1.37 ) }
    dend_13 { pt3dadd( 11.2552, 14.2197, -3.05078, 2.05 ) }
    dend_13 { pt3dadd( 11.5819, 15.6641, -1.85275, 1.37 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 51/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -9.28525, -2.45155, -1.48, 1.14 ) }
    dend_0 { pt3dadd( -9.9874, -2.8483, -1.08411, 1.14 ) }
    dend_0 { pt3dadd( -11.6854, -4.02007, -0.0309467, 0.91 ) }
    dend_0 { pt3dadd( -13.1807, -5.22043, 0.917916, 0.91 ) }
    dend_0 { pt3dadd( -14.1948, -6.11023, 1.56747, 0.91 ) }
    dend_0 { pt3dadd( -15.149, -6.94754, 2.1787, 1.37 ) }
    dend_0 { pt3dadd( -16.5929, -8.21451, 3.10359, 1.59 ) }
    dend_0 { pt3dadd( -17.584, -9.21551, 3.79054, 1.59 ) }
    dend_0 { pt3dadd( -18.2546, -10.1019, 4.29739, 2.28 ) }
    dend_0 { pt3dadd( -18.4164, -10.3758, 4.42708, 2.28 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.12331, 0.196646, 0.0, 0.943291 ) }
    axon_0 { pt3dadd( 24.0619, 1.55252, 0.0, 0.943291 ) }
    axon_0 { pt3dadd( 39.0005, 2.90839, 0.0, 0.943291 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 11.7097, -0.346825, 3.04614, 3.42 ) }
    dend_32 { pt3dadd( 13.1934, -0.789535, 2.63086, 3.42 ) }
    dend_32 { pt3dadd( 14.5612, -1.19767, 2.24802, 2.96 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 67/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 11.7097, -0.346825, 3.04614, 1.82 ) }
    dend_29 { pt3dadd( 12.676, 0.360423, 4.54339, 1.82 ) }
    dend_29 { pt3dadd( 13.5538, 0.919105, 5.84527, 1.37 ) }
    dend_29 { pt3dadd( 14.2891, 1.3025, 6.8757, 1.37 ) }
    dend_29 { pt3dadd( 15.146, 1.61332, 8.00613, 1.37 ) }
    dend_29 { pt3dadd( 15.7496, 1.74825, 8.77356, 1.59 ) }
    dend_29 { pt3dadd( 16.6208, 1.85425, 9.85155, 1.37 ) }
    dend_29 { pt3dadd( 17.7291, 1.76544, 11.0961, 1.37 ) }
    dend_29 { pt3dadd( 19.0409, 1.50346, 12.3547, 1.37 ) }
    dend_29 { pt3dadd( 20.5275, 1.13383, 13.5179, 1.37 ) }
    dend_29 { pt3dadd( 22.0227, 0.703342, 14.621, 1.37 ) }
    dend_29 { pt3dadd( 23.0076, 0.381021, 15.2998, 1.37 ) }
    dend_29 { pt3dadd( 24.4958, -0.195337, 16.2433, 0.91 ) }
    dend_29 { pt3dadd( 26.0676, -0.849641, 17.0909, 1.37 ) }
    dend_29 { pt3dadd( 27.9871, -1.65129, 17.926, 1.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 82/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.33681, 19.9453, -16.1322, 1.37 ) }
    dend_25 { pt3dadd( 2.40814, 20.5242, -18.153, 1.37 ) }
    dend_25 { pt3dadd( 1.56854, 20.8946, -19.683, 1.37 ) }
    dend_25 { pt3dadd( 0.853393, 21.1695, -20.8245, 1.37 ) }
    dend_25 { pt3dadd( -0.103758, 21.5271, -22.2543, 1.37 ) }
    dend_25 { pt3dadd( -1.09089, 21.8837, -23.692, 1.14 ) }
    dend_25 { pt3dadd( -2.24285, 22.2743, -25.3994, 1.14 ) }
    dend_25 { pt3dadd( -3.04206, 22.4884, -26.4659, 1.14 ) }
    dend_25 { pt3dadd( -4.07857, 22.7247, -27.7114, 0.91 ) }
    dend_25 { pt3dadd( -5.09541, 22.9744, -28.8934, 1.14 ) }
    dend_25 { pt3dadd( -6.26726, 23.3686, -30.2393, 1.37 ) }
    dend_25 { pt3dadd( -7.31782, 23.8449, -31.4697, 1.37 ) }
    dend_25 { pt3dadd( -8.56725, 24.5075, -32.9906, 1.14 ) }
    dend_25 { pt3dadd( -9.7122, 25.16, -34.3584, 1.14 ) }
    dend_25 { pt3dadd( -10.6086, 25.6983, -35.4116, 1.14 ) }
    dend_25 { pt3dadd( -11.7977, 26.4889, -36.6995, 1.14 ) }
    dend_25 { pt3dadd( -12.2033, 26.819, -37.0849, 1.14 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 99/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.33681, 19.9453, -16.1322, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_24 { pt3dadd( 3.79837, 20.8385, -17.0632, 0.68 ) }
    dend_24 { pt3dadd( 4.39737, 21.9629, -18.2314, 0.68 ) }
    dend_24 { pt3dadd( 4.83235, 22.6774, -19.0293, 0.91 ) }
    dend_24 { pt3dadd( 5.33764, 23.4242, -19.9504, 0.91 ) }
    dend_24 { pt3dadd( 5.83205, 24.1689, -20.9676, 0.91 ) }
    dend_24 { pt3dadd( 6.28676, 24.8985, -22.0801, 0.91 ) }
    dend_24 { pt3dadd( 6.49253, 25.2757, -22.7365, 0.91 ) }
    dend_24 { pt3dadd( 6.85795, 26.116, -24.2644, 1.14 ) }
    dend_24 { pt3dadd( 7.09822, 26.96, -25.8843, 0.91 ) }
    dend_24 { pt3dadd( 7.20817, 27.9286, -27.7659, 0.91 ) }
    dend_24 { pt3dadd( 7.18941, 28.688, -29.146, 0.91 ) }
    dend_24 { pt3dadd( 7.13704, 29.2354, -30.0647, 0.91 ) }
    dend_24 { pt3dadd( 7.05836, 30.0694, -31.4377, 0.68 ) }
    dend_24 { pt3dadd( 6.97299, 31.0102, -32.8831, 0.68 ) }
    dend_24 { pt3dadd( 6.94578, 31.5942, -33.7299, 0.68 ) }
    dend_24 { pt3dadd( 6.98062, 32.5972, -35.0596, 0.91 ) }
    dend_24 { pt3dadd( 7.12029, 33.8541, -36.6609, 0.68 ) }
    dend_24 { pt3dadd( 7.32002, 34.8899, -38.0217, 0.68 ) }
    dend_24 { pt3dadd( 7.39782, 35.1554, -38.383, 0.68 ) }
    dend_24 { pt3dadd( 7.69593, 36.0341, -39.5359, 0.68 ) }
    dend_24 { pt3dadd( 8.05522, 36.935, -40.8897, 0.68 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 4.04337, -9.17362, -8.90913, 0.68 ) }
    dend_22 { pt3dadd( 4.1543, -8.76267, -9.68411, 0.68 ) }
    dend_22 { pt3dadd( 4.29698, -8.2782, -10.4783, 0.68 ) }
    dend_22 { pt3dadd( 4.77403, -7.05926, -12.1114, 0.68 ) }
    dend_22 { pt3dadd( 5.13901, -6.27351, -13.0198, 0.68 ) }
    dend_22 { pt3dadd( 5.48265, -5.5363, -13.7471, 0.68 ) }
    dend_22 { pt3dadd( 5.87074, -4.64322, -14.4453, 1.14 ) }
    dend_22 { pt3dadd( 6.26161, -3.63006, -15.0409, 1.14 ) }
    dend_22 { pt3dadd( 6.8035, -2.19977, -15.6114, 0.91 ) }
    dend_22 { pt3dadd( 7.4994, -0.379038, -16.1038, 1.14 ) }
    dend_22 { pt3dadd( 8.11473, 1.30608, -16.4873, 0.91 ) }
    dend_22 { pt3dadd( 8.72905, 3.28915, -16.9642, 0.91 ) }
    dend_22 { pt3dadd( 8.97289, 4.40124, -17.3371, 0.91 ) }
    dend_22 { pt3dadd( 9.01063, 5.88733, -18.2032, 0.68 ) }
    dend_22 { pt3dadd( 8.65248, 7.00405, -19.3842, 0.91 ) }
    dend_22 { pt3dadd( 8.26016, 7.52124, -20.351, 0.91 ) }
    dend_22 { pt3dadd( 7.44377, 8.237, -22.3996, 0.68 ) }
    dend_22 { pt3dadd( 6.53079, 8.80567, -24.7678, 0.68 ) }
    dend_22 { pt3dadd( 5.77945, 9.09142, -26.7603, 0.68 ) }
    dend_22 { pt3dadd( 5.26164, 9.18833, -28.3295, 0.68 ) }
    dend_22 { pt3dadd( 4.74149, 9.15157, -30.3951, 0.68 ) }
    dend_22 { pt3dadd( 4.47246, 9.05391, -31.9612, 0.68 ) }
    dend_22 { pt3dadd( 4.32059, 8.95409, -33.6418, 0.68 ) }
    dend_22 { pt3dadd( 4.24694, 8.8616, -35.7411, 0.68 ) }
    dend_22 { pt3dadd( 4.19858, 8.8205, -38.5191, 0.68 ) }
    dend_22 { pt3dadd( 4.16644, 8.88394, -41.5572, 0.68 ) }
    dend_22 { pt3dadd( 4.04982, 9.01144, -43.6916, 0.68 ) }
    dend_22 { pt3dadd( 3.89334, 9.19801, -45.5011, 0.68 ) }
    dend_22 { pt3dadd( 3.73104, 9.47753, -47.1961, 0.68 ) }
    dend_22 { pt3dadd( 3.38529, 10.0735, -49.6582, 0.68 ) }
    dend_22 { pt3dadd( 2.90228, 10.7156, -51.4498, 0.68 ) }
    dend_22 { pt3dadd( 2.29524, 12.1276, -53.1475, 0.68 ) }
    dend_22 { pt3dadd( 2.30811, 11.5421, -52.953, 0.68 ) }
    dend_22 { pt3dadd( 1.79173, 9.38392, -53.0139, 0.68 ) }
    dend_22 { pt3dadd( 1.18241, 7.80694, -53.3168, 0.68 ) }
    dend_22 { pt3dadd( 0.557151, 6.46482, -53.79, 0.68 ) }
    dend_22 { pt3dadd( -0.87512, 4.36938, -55.0362, 0.68 ) }
    dend_22 { pt3dadd( -2.28339, 3.23744, -56.4118, 0.68 ) }
    dend_22 { pt3dadd( -3.34254, 2.7371, -57.6672, 0.68 ) }
    dend_22 { pt3dadd( -4.6779, 2.18362, -59.645, 0.68 ) }
    dend_22 { pt3dadd( -5.48312, 1.85717, -61.1177, 0.68 ) }
    dend_22 { pt3dadd( -6.15039, 1.52878, -62.642, 0.91 ) }
    dend_22 { pt3dadd( -6.9665, 1.03578, -64.8408, 0.91 ) }
    dend_22 { pt3dadd( -7.93569, 0.325337, -67.5981, 0.68 ) }
    dend_22 { pt3dadd( -8.75624, -0.434471, -70.1644, 0.68 ) }
    dend_22 { pt3dadd( -9.16587, -0.922935, -71.5419, 0.68 ) }
    dend_22 { pt3dadd( -9.57501, -1.45178, -72.8851, 0.68 ) }
    dend_22 { pt3dadd( -9.9283, -1.90294, -73.9945, 0.68 ) }
    dend_22 { pt3dadd( -10.5858, -2.6072, -75.7362, 0.68 ) }
    dend_22 { pt3dadd( -11.1834, -3.11256, -77.0811, 0.68 ) }
    dend_22 { pt3dadd( -12.322, -3.91934, -79.4009, 0.68 ) }
    dend_22 { pt3dadd( -13.1903, -4.52162, -81.1316, 0.68 ) }
    dend_22 { pt3dadd( -14.2017, -5.24195, -83.1677, 0.68 ) }
    dend_22 { pt3dadd( -14.912, -5.79357, -84.6461, 0.68 ) }
    dend_22 { pt3dadd( -15.9452, -6.69899, -86.8625, 0.68 ) }
    dend_22 { pt3dadd( -16.7442, -7.43645, -88.5504, 0.68 ) }
    dend_22 { pt3dadd( -17.693, -8.28193, -90.4209, 0.68 ) }
    dend_22 { pt3dadd( -18.36, -8.87531, -91.7015, 0.68 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 79/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 4.04337, -9.17362, -8.90913, 1.37 ) }
    dend_17 { pt3dadd( 5.583, -10.4601, -10.2723, 1.37 ) }
    dend_17 { pt3dadd( 6.40054, -11.072, -11.0112, 1.37 ) }
    dend_17 { pt3dadd( 7.35677, -11.7061, -11.9424, 1.37 ) }
    dend_17 { pt3dadd( 8.35964, -12.202, -12.9537, 1.37 ) }
    dend_17 { pt3dadd( 9.20113, -12.4914, -13.8267, 1.59 ) }
    dend_17 { pt3dadd( 10.6209, -12.8249, -15.26, 1.37 ) }
    dend_17 { pt3dadd( 11.6803, -12.8566, -16.3319, 1.59 ) }
    dend_17 { pt3dadd( 12.8797, -12.6803, -17.4254, 1.59 ) }
    dend_17 { pt3dadd( 14.6891, -12.1256, -18.7943, 1.14 ) }
    dend_17 { pt3dadd( 15.9538, -11.5434, -19.5996, 1.14 ) }
    dend_17 { pt3dadd( 17.1449, -10.7859, -20.2383, 1.14 ) }
    dend_17 { pt3dadd( 18.2123, -9.93143, -20.7273, 1.14 ) }
    dend_17 { pt3dadd( 19.5709, -8.73035, -21.2959, 1.14 ) }
    dend_17 { pt3dadd( 21.1969, -7.2998, -21.8981, 1.14 ) }
    dend_17 { pt3dadd( 22.1817, -6.46335, -22.2379, 1.14 ) }
    dend_17 { pt3dadd( 23.4645, -5.35839, -22.6639, 0.91 ) }
    dend_17 { pt3dadd( 24.9238, -4.03092, -23.1972, 0.91 ) }
    dend_17 { pt3dadd( 25.9525, -3.12892, -23.6456, 0.91 ) }
    dend_17 { pt3dadd( 26.8938, -2.34925, -24.1784, 0.91 ) }
    dend_17 { pt3dadd( 27.2798, -2.07506, -24.4974, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 0/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 11.5819, 15.6641, -1.85275, 0.68 ) }
    dend_15 { pt3dadd( 12.6579, 17.019, -1.58874, 0.68 ) }
    dend_15 { pt3dadd( 13.4041, 17.9587, -1.40564, 1.14 ) }
    dend_15 { pt3dadd( 14.4155, 19.2323, -1.15749, 1.14 ) }
    dend_15 { pt3dadd( 15.1844, 20.2005, -0.968837, 0.91 ) }
    dend_15 { pt3dadd( 16.6893, 22.0955, -0.599591, 1.37 ) }
    dend_15 { pt3dadd( 18.0918, 23.8617, -0.255453, 0.68 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 7/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.5819, 15.6641, -1.85275, 0.23 ) }
    dend_14 { pt3dadd( 11.7315, 15.2992, -0.500455, 0.23 ) }
    dend_14 { pt3dadd( 11.9111, 14.8387, 1.53117, 0.23 ) }
    dend_14 { pt3dadd( 12.0174, 14.4782, 3.62768, 0.23 ) }
    dend_14 { pt3dadd( 12.1241, 14.1968, 5.92819, 0.91 ) }
    dend_14 { pt3dadd( 12.2477, 14.0184, 7.74227, 0.91 ) }
    dend_14 { pt3dadd( 12.3234, 13.9596, 8.62576, 0.91 ) }
    dend_14 { pt3dadd( 12.3917, 13.9346, 9.68987, 0.91 ) }
    dend_14 { pt3dadd( 12.5864, 14.044, 10.8271, 0.91 ) }
    dend_14 { pt3dadd( 13.0685, 14.3258, 11.7237, 0.91 ) }
    dend_14 { pt3dadd( 13.7233, 14.6504, 12.2296, 0.91 ) }
    dend_14 { pt3dadd( 14.4469, 14.7888, 12.3326, 0.91 ) }
    dend_14 { pt3dadd( 15.1118, 14.7669, 12.2167, 0.46 ) }
    dend_14 { pt3dadd( 17.0441, 14.628, 11.7677, 0.46 ) }
    dend_14 { pt3dadd( 18.3392, 14.481, 11.3921, 0.46 ) }
    dend_14 { pt3dadd( 20.2679, 14.167, 10.6791, 0.46 ) }
    dend_14 { pt3dadd( 21.5854, 13.8842, 10.1162, 0.23 ) }
    dend_14 { pt3dadd( 23.7572, 13.2538, 9.06789, 0.23 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -18.4164, -10.3758, 4.42708, 0.91 ) }
    dend_4 { pt3dadd( -20.4453, -11.1662, 3.44904, 0.91 ) }
    dend_4 { pt3dadd( -22.451, -11.7263, 2.69132, 0.91 ) }
    dend_4 { pt3dadd( -24.0421, -12.0187, 2.26508, 0.91 ) }
    dend_4 { pt3dadd( -25.5244, -12.1721, 2.07037, 1.14 ) }
    dend_4 { pt3dadd( -26.424, -12.2016, 2.03725, 1.37 ) }
    dend_4 { pt3dadd( -27.8956, -12.25, 1.98306, 1.82 ) }
    dend_4 { pt3dadd( -29.6756, -12.1582, 2.13862, 1.14 ) }
    dend_4 { pt3dadd( -31.5099, -11.9012, 2.46978, 1.14 ) }
    dend_4 { pt3dadd( -33.6749, -11.4642, 3.02152, 1.14 ) }
    dend_4 { pt3dadd( -34.9499, -11.1595, 3.43907, 1.82 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 36/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -18.4164, -10.3758, 4.42708, 1.59 ) }
    dend_1 { pt3dadd( -18.2784, -10.7838, 5.362, 1.59 ) }
    dend_1 { pt3dadd( -18.1901, -11.401, 7.05309, 1.14 ) }
    dend_1 { pt3dadd( -18.1624, -11.8702, 8.62106, 1.14 ) }
    dend_1 { pt3dadd( -18.1266, -12.3726, 10.6905, 1.14 ) }
    dend_1 { pt3dadd( -18.1099, -12.8452, 12.8111, 1.14 ) }
    dend_1 { pt3dadd( -18.087, -13.4195, 15.2804, 1.14 ) }
    dend_1 { pt3dadd( -18.0823, -13.875, 17.3566, 1.14 ) }
    dend_1 { pt3dadd( -18.0615, -14.2049, 18.7646, 1.14 ) }
    dend_1 { pt3dadd( -18.0065, -14.6238, 20.3051, 1.14 ) }
    dend_1 { pt3dadd( -17.9524, -15.0838, 21.7127, 1.14 ) }
    dend_1 { pt3dadd( -17.8652, -15.5025, 22.8385, 1.14 ) }
    dend_1 { pt3dadd( -17.6698, -16.024, 23.9566, 1.14 ) }
    dend_1 { pt3dadd( -17.228, -17.1084, 25.6916, 1.14 ) }
    dend_1 { pt3dadd( -16.9054, -18.0631, 26.9235, 1.14 ) }
    dend_1 { pt3dadd( -16.8051, -18.4031, 27.2982, 1.14 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 52/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.0005, 2.90839, 0.0, 0.349594 ) }
    axon_1 { pt3dadd( 53.9391, 4.26426, 0.0, 0.349594 ) }
    axon_1 { pt3dadd( 68.8777, 5.62013, 0.0, 0.349594 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 14.5612, -1.19767, 2.24802, 2.73 ) }
    dend_40 { pt3dadd( 16.0238, -1.45116, 2.84584, 2.73 ) }
    dend_40 { pt3dadd( 17.8491, -1.76751, 3.59192, 3.19 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.5612, -1.19767, 2.24802, 1.37 ) }
    dend_33 { pt3dadd( 15.4495, -0.296298, 1.05559, 1.37 ) }
    dend_33 { pt3dadd( 16.4668, 0.925254, -0.552165, 1.37 ) }
    dend_33 { pt3dadd( 17.3257, 2.11149, -2.12955, 1.37 ) }
    dend_33 { pt3dadd( 18.1149, 3.36578, -3.78551, 1.37 ) }
    dend_33 { pt3dadd( 18.7459, 4.52504, -5.31185, 1.37 ) }
    dend_33 { pt3dadd( 19.3774, 5.82788, -7.00792, 1.37 ) }
    dend_33 { pt3dadd( 19.8339, 6.9375, -8.4607, 1.59 ) }
    dend_33 { pt3dadd( 20.2459, 8.09952, -9.94445, 1.59 ) }
    dend_33 { pt3dadd( 20.6317, 9.24856, -11.3637, 1.59 ) }
    dend_33 { pt3dadd( 21.0438, 10.483, -12.8154, 1.37 ) }
    dend_33 { pt3dadd( 21.5864, 11.9132, -14.3816, 1.37 ) }
    dend_33 { pt3dadd( 22.1969, 13.271, -15.807, 1.37 ) }
    dend_33 { pt3dadd( 22.5184, 13.9253, -16.4574, 1.59 ) }
    dend_33 { pt3dadd( 23.1212, 15.0486, -17.5157, 1.82 ) }
    dend_33 { pt3dadd( 23.7897, 16.1725, -18.5246, 1.82 ) }
    dend_33 { pt3dadd( 24.6412, 17.4964, -19.6217, 1.37 ) }
    dend_33 { pt3dadd( 25.4408, 18.7669, -20.5874, 1.59 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 27.9871, -1.65129, 17.926, 0.91 ) }
    dend_31 { pt3dadd( 29.0028, -0.62121, 16.1803, 0.91 ) }
    dend_31 { pt3dadd( 30.0484, 0.214813, 14.8209, 0.91 ) }
    dend_31 { pt3dadd( 31.5141, 1.25679, 13.2211, 0.91 ) }
    dend_31 { pt3dadd( 32.7317, 2.03838, 12.0862, 0.91 ) }
    dend_31 { pt3dadd( 33.8696, 2.70665, 11.178, 0.91 ) }
    dend_31 { pt3dadd( 35.1956, 3.44887, 10.2248, 0.68 ) }
    dend_31 { pt3dadd( 36.2878, 4.00183, 9.60069, 0.91 ) }
    dend_31 { pt3dadd( 37.4019, 4.49754, 9.07497, 0.68 ) }
    dend_31 { pt3dadd( 38.4266, 4.90439, 8.67255, 0.68 ) }
    dend_31 { pt3dadd( 40.5763, 5.79815, 7.88725, 0.91 ) }
    dend_31 { pt3dadd( 41.1506, 6.0634, 7.66763, 0.91 ) }
    dend_31 { pt3dadd( 43.0002, 7.04645, 6.81963, 0.68 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 27.9871, -1.65129, 17.926, 1.14 ) }
    dend_30 { pt3dadd( 28.7397, -1.96557, 18.7941, 1.14 ) }
    dend_30 { pt3dadd( 29.4847, -2.33938, 19.8766, 0.91 ) }
    dend_30 { pt3dadd( 30.2298, -2.75669, 21.3246, 0.91 ) }
    dend_30 { pt3dadd( 30.7884, -3.07415, 22.7882, 0.91 ) }
    dend_30 { pt3dadd( 31.3253, -3.37935, 24.1953, 0.91 ) }
    dend_30 { pt3dadd( 31.7503, -3.62086, 25.3087, 0.91 ) }
    dend_30 { pt3dadd( 32.0129, -3.79096, 26.2651, 0.91 ) }
    dend_30 { pt3dadd( 32.1643, -3.97153, 27.6407, 0.91 ) }
    dend_30 { pt3dadd( 32.0607, -4.13659, 29.0255, 0.91 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 99/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -12.2033, 26.819, -37.0849, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_27 { pt3dadd( -13.5741, 28.3618, -37.9014, 0.68 ) }
    dend_27 { pt3dadd( -15.0533, 30.0019, -38.8416, 0.68 ) }
    dend_27 { pt3dadd( -16.2729, 31.2231, -39.6053, 0.91 ) }
    dend_27 { pt3dadd( -17.6548, 32.4838, -40.5156, 1.14 ) }
    dend_27 { pt3dadd( -18.723, 33.3696, -41.2726, 1.14 ) }
    dend_27 { pt3dadd( -19.8666, 34.2527, -42.1541, 1.14 ) }
    dend_27 { pt3dadd( -21.463, 35.3875, -43.6186, 0.91 ) }
    dend_27 { pt3dadd( -22.7093, 36.153, -45.0965, 0.91 ) }
    dend_27 { pt3dadd( -23.7946, 36.7377, -46.7183, 0.91 ) }
    dend_27 { pt3dadd( -24.5818, 37.0499, -48.1152, 0.91 ) }
    dend_27 { pt3dadd( -25.1082, 37.1865, -49.1646, 0.91 ) }
    dend_27 { pt3dadd( -25.6164, 37.2458, -50.2584, 0.91 ) }
    dend_27 { pt3dadd( -26.4088, 37.1976, -51.9372, 0.91 ) }
    dend_27 { pt3dadd( -27.5527, 37.0081, -53.8718, 0.91 ) }
    dend_27 { pt3dadd( -29.3819, 36.5746, -55.9446, 0.91 ) }
    dend_27 { pt3dadd( -31.3708, 36.0384, -57.1799, 0.91 ) }
    dend_27 { pt3dadd( -33.7162, 35.277, -57.7825, 0.91 ) }
    dend_27 { pt3dadd( -36.0039, 34.4335, -57.8304, 0.68 ) }
    dend_27 { pt3dadd( -38.8784, 33.2519, -57.548, 0.68 ) }
    dend_27 { pt3dadd( -40.8191, 32.3236, -57.0804, 0.68 ) }
    dend_27 { pt3dadd( -42.6836, 31.384, -56.292, 0.68 ) }
    dend_27 { pt3dadd( -44.4331, 30.5073, -55.2851, 0.68 ) }
    dend_27 { pt3dadd( -45.4095, 30.0464, -54.5993, 0.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 23/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -12.2033, 26.819, -37.0849, 0.91 ) }
    dend_26 { pt3dadd( -11.6041, 27.1073, -37.3749, 0.91 ) }
    dend_26 { pt3dadd( -9.7924, 27.9969, -38.1013, 0.91 ) }
    dend_26 { pt3dadd( -8.3319, 28.7477, -38.5964, 0.91 ) }
    dend_26 { pt3dadd( -7.18961, 29.3349, -38.9836, 0.91 ) }
    dend_26 { pt3dadd( -6.20409, 29.8415, -39.3176, 0.68 ) }
    dend_26 { pt3dadd( -4.85092, 30.5371, -39.7763, 0.68 ) }
    dend_26 { pt3dadd( -4.02248, 30.9307, -40.0074, 0.91 ) }
    dend_26 { pt3dadd( -2.97495, 31.4237, -40.1349, 0.46 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 32/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.2798, -2.07506, -24.4974, 0.68 ) }
    dend_21 { pt3dadd( 28.3752, -2.65059, -27.0622, 0.68 ) }
    dend_21 { pt3dadd( 29.2571, -2.90872, -29.1568, 0.68 ) }
    dend_21 { pt3dadd( 29.9168, -2.95179, -30.5628, 0.68 ) }
    dend_21 { pt3dadd( 30.4568, -2.95961, -31.5288, 0.68 ) }
    dend_21 { pt3dadd( 31.188, -2.99118, -32.6786, 0.68 ) }
    dend_21 { pt3dadd( 31.8059, -3.04838, -33.6049, 0.68 ) }
    dend_21 { pt3dadd( 33.1216, -3.22129, -35.5143, 0.68 ) }
    dend_21 { pt3dadd( 34.4824, -3.47211, -37.3382, 0.68 ) }
    dend_21 { pt3dadd( 36.156, -3.78346, -39.4153, 0.68 ) }
    dend_21 { pt3dadd( 36.9745, -3.96435, -40.3297, 0.68 ) }
    dend_21 { pt3dadd( 38.0678, -4.26806, -41.4566, 0.68 ) }
    dend_21 { pt3dadd( 39.1574, -4.6374, -42.4965, 0.68 ) }
    dend_21 { pt3dadd( 40.3272, -5.10729, -43.5773, 0.68 ) }
    dend_21 { pt3dadd( 41.7818, -5.76386, -44.863, 0.68 ) }
    dend_21 { pt3dadd( 43.2801, -6.44043, -46.1191, 0.68 ) }
    dend_21 { pt3dadd( 45.944, -7.48369, -48.0732, 0.68 ) }
    dend_21 { pt3dadd( 47.0391, -7.87165, -48.7285, 0.68 ) }
    dend_21 { pt3dadd( 48.1773, -8.24744, -49.3258, 0.68 ) }
    dend_21 { pt3dadd( 49.8715, -8.81859, -50.1926, 0.68 ) }
    dend_21 { pt3dadd( 51.0488, -9.25639, -50.6552, 0.68 ) }
    dend_21 { pt3dadd( 53.4011, -10.2103, -51.3422, 0.68 ) }
    dend_21 { pt3dadd( 55.8281, -11.2958, -51.7311, 0.68 ) }
    dend_21 { pt3dadd( 57.141, -11.953, -51.8394, 0.68 ) }
    dend_21 { pt3dadd( 58.9471, -12.9769, -51.7776, 0.68 ) }
    dend_21 { pt3dadd( 62.2686, -15.3044, -51.3497, 0.68 ) }
    dend_21 { pt3dadd( 63.6318, -16.4642, -51.1245, 1.14 ) }
    dend_21 { pt3dadd( 64.9682, -17.8347, -50.8654, 1.14 ) }
    dend_21 { pt3dadd( 66.7211, -19.8084, -50.487, 0.91 ) }
    dend_21 { pt3dadd( 68.0881, -21.4077, -50.2185, 0.91 ) }
    dend_21 { pt3dadd( 69.5881, -23.1862, -50.1179, 0.91 ) }
    dend_21 { pt3dadd( 70.6661, -24.474, -50.2883, 0.91 ) }
    dend_21 { pt3dadd( 71.6963, -25.7634, -50.6079, 0.91 ) }
    dend_21 { pt3dadd( 72.3769, -26.6878, -50.9406, 0.91 ) }
    dend_21 { pt3dadd( 73.2156, -27.8653, -51.4958, 0.68 ) }
    dend_21 { pt3dadd( 74.4867, -29.5615, -52.4781, 0.68 ) }
    dend_21 { pt3dadd( 74.997, -30.1286, -52.907, 0.68 ) }
    dend_21 { pt3dadd( 75.9795, -31.0667, -53.7176, 0.68 ) }
    dend_21 { pt3dadd( 76.964, -31.8267, -54.5184, 0.68 ) }
    dend_21 { pt3dadd( 77.4876, -32.1681, -54.8947, 0.68 ) }
    dend_21 { pt3dadd( 78.1675, -32.5579, -55.2977, 0.91 ) }
    dend_21 { pt3dadd( 80.117, -33.5665, -56.141, 0.91 ) }
    dend_21 { pt3dadd( 81.2041, -34.0415, -56.5444, 0.68 ) }
    dend_21 { pt3dadd( 82.3276, -34.4494, -56.885, 0.68 ) }
    dend_21 { pt3dadd( 84.3103, -35.057, -57.6111, 0.68 ) }
    dend_21 { pt3dadd( 85.1077, -35.265, -57.9272, 0.68 ) }
    dend_21 { pt3dadd( 85.9792, -35.4783, -58.2845, 0.68 ) }
    dend_21 { pt3dadd( 87.895, -36.0093, -58.9452, 1.14 ) }
    dend_21 { pt3dadd( 90.0442, -36.6788, -59.7209, 0.68 ) }
    dend_21 { pt3dadd( 92.1331, -37.3724, -60.4484, 0.68 ) }
    dend_21 { pt3dadd( 93.3852, -37.8033, -60.8846, 0.68 ) }
    dend_21 { pt3dadd( 95.9227, -38.7882, -61.8437, 0.46 ) }
    dend_21 { pt3dadd( 98.1206, -39.7899, -62.8128, 0.68 ) }
    dend_21 { pt3dadd( 100.053, -40.8622, -63.7315, 0.68 ) }
    dend_21 { pt3dadd( 101.967, -42.1439, -64.6887, 0.68 ) }
    dend_21 { pt3dadd( 103.309, -43.1597, -65.2737, 1.14 ) }
    dend_21 { pt3dadd( 105.345, -44.9296, -66.0708, 0.91 ) }
    dend_21 { pt3dadd( 106.851, -46.4223, -66.6174, 0.68 ) }
    dend_21 { pt3dadd( 107.625, -47.2201, -66.9465, 0.68 ) }
    dend_21 { pt3dadd( 108.526, -48.2899, -67.2251, 0.46 ) }
    dend_21 { pt3dadd( 109.965, -50.6752, -67.2945, 0.46 ) }
    dend_21 { pt3dadd( 110.831, -52.6542, -66.4822, 0.91 ) }
    dend_21 { pt3dadd( 111.128, -53.5652, -65.662, 0.91 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 27.2798, -2.07506, -24.4974, 0.68 ) }
    dend_18 { pt3dadd( 26.9263, -3.00206, -24.798, 0.68 ) }
    dend_18 { pt3dadd( 26.4689, -4.41985, -25.1724, 0.91 ) }
    dend_18 { pt3dadd( 26.2941, -5.09304, -25.3231, 0.68 ) }
    dend_18 { pt3dadd( 25.8307, -7.26672, -25.701, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_18 { pt3dadd( 25.7055, -7.95629, -25.8453, 0.91 ) }
    dend_18 { pt3dadd( 25.3331, -10.118, -26.3942, 0.91 ) }
    dend_18 { pt3dadd( 25.1712, -11.5038, -26.8484, 0.91 ) }
    dend_18 { pt3dadd( 25.122, -12.2686, -27.1559, 0.46 ) }
    dend_18 { pt3dadd( 25.0473, -14.1948, -28.0124, 0.46 ) }
    dend_18 { pt3dadd( 25.0305, -16.0367, -28.8727, 0.91 ) }
    dend_18 { pt3dadd( 25.0033, -17.3871, -29.561, 0.91 ) }
    dend_18 { pt3dadd( 24.9333, -18.7542, -30.3227, 1.14 ) }
    dend_18 { pt3dadd( 24.8852, -19.6825, -30.9539, 0.91 ) }
    dend_18 { pt3dadd( 24.8488, -20.2385, -31.3815, 0.91 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 10/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -34.9499, -11.1595, 3.43907, 0.91 ) }
    dend_8 { pt3dadd( -35.8359, -10.4586, 2.49946, 0.91 ) }
    dend_8 { pt3dadd( -37.6003, -9.03627, 0.567164, 0.91 ) }
    dend_8 { pt3dadd( -38.6475, -8.08532, -0.576838, 1.14 ) }
    dend_8 { pt3dadd( -39.3032, -7.43888, -1.2745, 1.14 ) }
    dend_8 { pt3dadd( -40.0667, -6.67473, -2.02329, 0.91 ) }
    dend_8 { pt3dadd( -40.8824, -5.87973, -2.73738, 0.91 ) }
    dend_8 { pt3dadd( -41.87, -4.87972, -3.52291, 1.14 ) }
    dend_8 { pt3dadd( -42.7874, -3.8893, -4.08817, 1.37 ) }
    dend_8 { pt3dadd( -44.1214, -2.52685, -4.57836, 1.14 ) }
    dend_8 { pt3dadd( -45.0416, -1.63453, -4.85172, 1.14 ) }
    dend_8 { pt3dadd( -46.0726, -0.664044, -5.03706, 0.91 ) }
    dend_8 { pt3dadd( -46.9139, 0.112713, -5.09206, 1.37 ) }
    dend_8 { pt3dadd( -47.8424, 0.96314, -5.06667, 1.37 ) }
    dend_8 { pt3dadd( -49.0989, 1.9751, -4.93485, 1.14 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 25/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -34.9499, -11.1595, 3.43907, 1.37 ) }
    dend_5 { pt3dadd( -35.7405, -12.0303, 3.43471, 1.37 ) }
    dend_5 { pt3dadd( -37.2793, -13.4264, 3.56607, 0.91 ) }
    dend_5 { pt3dadd( -38.384, -14.123, 3.69723, 0.91 ) }
    dend_5 { pt3dadd( -39.2975, -14.4426, 3.81194, 0.91 ) }
    dend_5 { pt3dadd( -40.3642, -14.6065, 3.97167, 0.91 ) }
    dend_5 { pt3dadd( -41.4857, -14.6787, 4.13624, 0.91 ) }
    dend_5 { pt3dadd( -43.1703, -14.6447, 4.37914, 0.91 ) }
    dend_5 { pt3dadd( -44.9999, -14.5435, 4.62765, 1.14 ) }
    dend_5 { pt3dadd( -46.8107, -14.3442, 4.87028, 0.91 ) }
    dend_5 { pt3dadd( -48.839, -14.0364, 5.13563, 1.14 ) }
    dend_5 { pt3dadd( -50.7986, -13.6769, 5.38085, 0.91 ) }
    dend_5 { pt3dadd( -51.7136, -13.513, 5.48253, 0.91 ) }
    dend_5 { pt3dadd( -53.1845, -13.3638, 5.58325, 0.91 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 39/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.8051, -18.4031, 27.2982, 0.68 ) }
    dend_3 { pt3dadd( -16.9026, -19.4881, 27.8973, 0.68 ) }
    dend_3 { pt3dadd( -17.0271, -20.8994, 28.7735, 0.68 ) }
    dend_3 { pt3dadd( -17.116, -22.168, 29.6641, 0.68 ) }
    dend_3 { pt3dadd( -17.21, -23.3598, 30.5007, 0.68 ) }
    dend_3 { pt3dadd( -17.334, -24.7609, 31.4445, 0.91 ) }
    dend_3 { pt3dadd( -17.4368, -25.8797, 32.1574, 0.91 ) }
    dend_3 { pt3dadd( -17.5731, -27.4703, 33.1704, 0.68 ) }
    dend_3 { pt3dadd( -17.7294, -28.7855, 33.9325, 0.68 ) }
    dend_3 { pt3dadd( -17.9317, -29.834, 34.5382, 0.91 ) }
    dend_3 { pt3dadd( -18.1159, -30.7129, 35.0851, 0.68 ) }
    dend_3 { pt3dadd( -18.2523, -31.489, 35.5901, 1.14 ) }
    dend_3 { pt3dadd( -18.3246, -31.9079, 35.9057, 1.37 ) }
    dend_3 { pt3dadd( -18.6045, -33.4342, 37.3217, 0.68 ) }
    dend_3 { pt3dadd( -18.9195, -34.8225, 39.084, 0.46 ) }
    dend_3 { pt3dadd( -19.1749, -35.8056, 40.7384, 0.46 ) }
    dend_3 { pt3dadd( -19.3515, -36.3669, 41.8806, 0.46 ) }
    dend_3 { pt3dadd( -19.4993, -36.8253, 42.899, 0.46 ) }
    dend_3 { pt3dadd( -19.6918, -37.4041, 44.2482, 0.46 ) }
    dend_3 { pt3dadd( -19.9047, -37.9788, 45.5531, 0.46 ) }
    dend_3 { pt3dadd( -20.2763, -38.705, 46.8713, 0.46 ) }
    dend_3 { pt3dadd( -20.4558, -38.993, 47.2718, 1.14 ) }
    dend_3 { pt3dadd( -20.8566, -39.6927, 48.1096, 1.37 ) }
    dend_3 { pt3dadd( -21.2253, -40.4489, 48.9324, 0.91 ) }
    dend_3 { pt3dadd( -21.5964, -41.4574, 49.8963, 0.91 ) }
    dend_3 { pt3dadd( -22.0029, -42.7447, 51.0043, 0.91 ) }
    dend_3 { pt3dadd( -22.5206, -44.2973, 52.3141, 0.91 ) }
    dend_3 { pt3dadd( -22.9725, -45.6026, 53.4107, 0.91 ) }
    dend_3 { pt3dadd( -23.2101, -46.24, 53.9145, 0.91 ) }
    dend_3 { pt3dadd( -23.7503, -47.8082, 55.0251, 0.68 ) }
    dend_3 { pt3dadd( -24.2551, -49.326, 56.0011, 0.91 ) }
    dend_3 { pt3dadd( -24.8293, -51.0564, 56.9862, 0.46 ) }
    dend_3 { pt3dadd( -25.1276, -51.9341, 57.447, 0.46 ) }
    dend_3 { pt3dadd( -25.6307, -53.2477, 58.1099, 0.91 ) }
    dend_3 { pt3dadd( -26.2019, -54.6012, 58.8057, 0.68 ) }
    dend_3 { pt3dadd( -26.811, -55.8656, 59.5208, 0.68 ) }
    dend_3 { pt3dadd( -27.5501, -57.5418, 60.4424, 1.14 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.8051, -18.4031, 27.2982, 0.91 ) }
    dend_2 { pt3dadd( -16.2879, -19.092, 27.2529, 0.91 ) }
    dend_2 { pt3dadd( -15.2191, -20.4241, 27.3464, 0.91 ) }
    dend_2 { pt3dadd( -14.172, -21.6905, 27.626, 0.91 ) }
    dend_2 { pt3dadd( -13.0573, -23.0362, 28.1509, 0.68 ) }
    dend_2 { pt3dadd( -11.991, -24.4187, 28.8773, 0.68 ) }
    dend_2 { pt3dadd( -11.2733, -25.4481, 29.5196, 1.14 ) }
    dend_2 { pt3dadd( -10.6092, -26.592, 30.4417, 1.14 ) }
    dend_2 { pt3dadd( -10.1992, -27.4486, 31.288, 0.91 ) }
    dend_2 { pt3dadd( -9.7537, -28.5264, 32.4978, 0.68 ) }
    dend_2 { pt3dadd( -9.36987, -29.5427, 33.7579, 0.68 ) }
    dend_2 { pt3dadd( -9.11055, -30.2875, 34.6962, 0.68 ) }
    dend_2 { pt3dadd( -8.66267, -31.4862, 36.1583, 0.68 ) }
    dend_2 { pt3dadd( -8.37027, -32.1821, 37.0318, 0.68 ) }
    dend_2 { pt3dadd( -7.96486, -33.0109, 38.108, 0.91 ) }
    dend_2 { pt3dadd( -7.53196, -33.8344, 39.1861, 0.91 ) }
    dend_2 { pt3dadd( -6.99694, -34.8496, 40.4278, 0.91 ) }
    dend_2 { pt3dadd( -6.45534, -36.0184, 41.6376, 1.14 ) }
    dend_2 { pt3dadd( -5.9884, -37.2495, 42.754, 0.91 ) }
    dend_2 { pt3dadd( -5.81163, -37.8523, 43.267, 0.68 ) }
    dend_2 { pt3dadd( -5.55993, -38.9608, 44.123, 0.68 ) }
    dend_2 { pt3dadd( -5.26972, -40.4415, 45.1608, 0.68 ) }
    dend_2 { pt3dadd( -4.92158, -41.9695, 46.2077, 0.68 ) }
    dend_2 { pt3dadd( -4.51266, -43.3883, 47.169, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( -4.02963, -44.7525, 48.0228, 0.91 ) }
    dend_2 { pt3dadd( -3.51739, -45.924, 48.719, 1.37 ) }
    dend_2 { pt3dadd( -2.82763, -47.2848, 49.5774, 0.91 ) }
    dend_2 { pt3dadd( -2.02192, -48.7038, 50.5037, 0.91 ) }
    dend_2 { pt3dadd( -1.20732, -50.0962, 51.359, 1.14 ) }
    dend_2 { pt3dadd( -0.403578, -51.6446, 52.1053, 0.68 ) }
    dend_2 { pt3dadd( 0.139439, -52.8411, 52.6088, 1.14 ) }
    dend_2 { pt3dadd( 0.626465, -54.1002, 53.1189, 0.68 ) }
    dend_2 { pt3dadd( 1.06776, -55.5371, 53.6655, 0.23 ) }
    dend_2 { pt3dadd( 1.14379, -55.8614, 53.7841, 0.23 ) }
    dend_2 { pt3dadd( 1.55224, -57.9118, 54.5077, 0.68 ) }
    dend_2 { pt3dadd( 1.80882, -59.4387, 55.0006, 0.23 ) }
    dend_2 { pt3dadd( 1.90054, -59.9282, 55.1032, 0.46 ) }
    dend_2 { pt3dadd( 2.10034, -60.8866, 55.2633, 0.46 ) }
    dend_2 { pt3dadd( 2.39832, -62.2378, 55.4699, 0.46 ) }
    dend_2 { pt3dadd( 2.64638, -63.2504, 55.6188, 0.46 ) }
    dend_2 { pt3dadd( 3.2255, -65.3548, 55.9407, 0.68 ) }
    dend_2 { pt3dadd( 3.86302, -67.4644, 56.242, 0.68 ) }
    dend_2 { pt3dadd( 4.42591, -69.2552, 56.5435, 1.14 ) }
    dend_2 { pt3dadd( 4.60408, -69.7729, 56.6403, 1.37 ) }
    dend_2 { pt3dadd( 4.92866, -70.6262, 56.8539, 0.91 ) }
    dend_2 { pt3dadd( 5.51777, -71.9852, 57.295, 0.68 ) }
    dend_2 { pt3dadd( 6.23583, -73.4086, 57.8209, 0.68 ) }
    dend_2 { pt3dadd( 7.04538, -74.9465, 58.4, 0.23 ) }
    dend_2 { pt3dadd( 7.67459, -76.0345, 58.71, 0.91 ) }
    dend_2 { pt3dadd( 8.546, -77.4189, 59.0626, 0.23 ) }
    dend_2 { pt3dadd( 9.09105, -78.1965, 59.2297, 0.23 ) }
    dend_2 { pt3dadd( 9.60813, -78.8492, 59.3043, 0.68 ) }
    dend_2 { pt3dadd( 10.1877, -79.4914, 59.3161, 0.23 ) }
    dend_2 { pt3dadd( 11.493, -80.7209, 59.3594, 0.23 ) }
    dend_2 { pt3dadd( 11.9238, -81.1203, 59.3811, 0.68 ) }
    dend_2 { pt3dadd( 12.5688, -81.705, 59.4101, 1.14 ) }
    dend_2 { pt3dadd( 13.7908, -82.7466, 59.5125, 0.68 ) }
    dend_2 { pt3dadd( 14.8038, -83.5515, 59.6814, 0.68 ) }
    dend_2 { pt3dadd( 16.7959, -85.0651, 60.1436, 0.46 ) }
    dend_2 { pt3dadd( 17.8749, -85.8976, 60.4651, 0.46 ) }
    dend_2 { pt3dadd( 18.3135, -86.2374, 60.598, 0.46 ) }
    dend_2 { pt3dadd( 19.4057, -87.1005, 60.948, 0.46 ) }
    dend_2 { pt3dadd( 20.2838, -87.7936, 61.2421, 0.46 ) }
    dend_2 { pt3dadd( 21.6815, -88.8813, 61.6985, 0.46 ) }
    dend_2 { pt3dadd( 22.3425, -89.3786, 61.8834, 1.14 ) }
    dend_2 { pt3dadd( 22.8231, -89.7046, 62.0344, 1.14 ) }
    dend_2 { pt3dadd( 25.1266, -91.1619, 62.8606, 0.23 ) }
    dend_2 { pt3dadd( 25.8653, -91.6178, 63.1867, 0.68 ) }
    dend_2 { pt3dadd( 27.0309, -92.3067, 63.8308, 0.23 ) }
    dend_2 { pt3dadd( 28.0316, -92.8715, 64.5005, 0.68 ) }
    dend_2 { pt3dadd( 29.744, -93.8115, 65.8384, 0.23 ) }
    dend_2 { pt3dadd( 30.6097, -94.2919, 66.6264, 1.37 ) }
    dend_2 { pt3dadd( 32.0408, -95.1223, 68.0947, 0.68 ) }
    dend_2 { pt3dadd( 33.332, -95.8971, 69.4983, 0.68 ) }
    dend_2 { pt3dadd( 34.8049, -96.8087, 71.2127, 0.46 ) }
    dend_2 { pt3dadd( 36.3226, -97.7977, 73.1327, 0.46 ) }
    dend_2 { pt3dadd( 37.3072, -98.503, 74.4686, 0.46 ) }
    dend_2 { pt3dadd( 38.6384, -99.4925, 76.2675, 0.46 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 17.8491, -1.76751, 3.59192, 2.28 ) }
    dend_44 { pt3dadd( 18.4001, -2.56411, 4.96653, 2.28 ) }
    dend_44 { pt3dadd( 19.0046, -3.47517, 6.48188, 1.82 ) }
    dend_44 { pt3dadd( 19.6893, -4.54692, 8.1464, 1.59 ) }
    dend_44 { pt3dadd( 20.2262, -5.38735, 9.45167, 1.59 ) }
    dend_44 { pt3dadd( 20.6186, -6.00161, 10.4057, 2.05 ) }
    dend_44 { pt3dadd( 21.2299, -6.9585, 11.8918, 2.28 ) }
    dend_44 { pt3dadd( 21.8404, -7.90394, 13.3573, 2.05 ) }
    dend_44 { pt3dadd( 22.4124, -8.79588, 14.6846, 1.82 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 17.8491, -1.76751, 3.59192, 2.96 ) }
    dend_41 { pt3dadd( 19.395, -1.00576, 1.59938, 2.96 ) }
    dend_41 { pt3dadd( 19.8522, -0.781441, 0.959191, 2.73 ) }
    dend_41 { pt3dadd( 20.7169, -0.377224, -0.354151, 1.59 ) }
    dend_41 { pt3dadd( 21.8437, 0.195909, -2.16246, 1.14 ) }
    dend_41 { pt3dadd( 22.9446, 0.79727, -3.91313, 1.14 ) }
    dend_41 { pt3dadd( 23.912, 1.3679, -5.38436, 1.14 ) }
    dend_41 { pt3dadd( 24.7622, 1.97713, -6.69038, 1.14 ) }
    dend_41 { pt3dadd( 25.6134, 2.69014, -7.97629, 1.14 ) }
    dend_41 { pt3dadd( 26.344, 3.45055, -9.14026, 0.91 ) }
    dend_41 { pt3dadd( 26.9495, 4.2122, -10.203, 0.91 ) }
    dend_41 { pt3dadd( 27.5175, 4.99797, -11.3036, 0.91 ) }
    dend_41 { pt3dadd( 28.2006, 5.88079, -12.7366, 0.91 ) }
    dend_41 { pt3dadd( 28.8472, 6.67865, -14.2331, 0.91 ) }
    dend_41 { pt3dadd( 29.6166, 7.59588, -16.4212, 0.91 ) }
    dend_41 { pt3dadd( 30.2428, 8.27661, -18.4735, 0.91 ) }
    dend_41 { pt3dadd( 30.7216, 8.74796, -20.414, 0.91 ) }
    dend_41 { pt3dadd( 31.2356, 9.1102, -22.9279, 0.91 ) }
    dend_41 { pt3dadd( 31.4419, 9.14251, -24.0359, 0.91 ) }
    dend_41 { pt3dadd( 31.8088, 8.9791, -25.849, 0.91 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 83/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 25.4408, 18.7669, -20.5874, 1.14 ) }
    dend_39 { pt3dadd( 25.6081, 18.8979, -21.1328, 1.14 ) }
    dend_39 { pt3dadd( 26.4439, 19.1689, -23.6037, 0.91 ) }
    dend_39 { pt3dadd( 27.0472, 19.2025, -25.5359, 0.91 ) }
    dend_39 { pt3dadd( 27.614, 19.1505, -27.8446, 0.91 ) }
    dend_39 { pt3dadd( 27.8839, 19.0496, -29.5981, 0.68 ) }
    dend_39 { pt3dadd( 28.0392, 18.9262, -31.5449, 0.68 ) }
    dend_39 { pt3dadd( 28.0694, 18.7406, -33.4795, 0.68 ) }
    dend_39 { pt3dadd( 27.9944, 18.5694, -35.0357, 0.68 ) }
    dend_39 { pt3dadd( 27.6967, 18.421, -36.8146, 0.91 ) }
    dend_39 { pt3dadd( 27.194, 18.3825, -38.6384, 0.91 ) }
    dend_39 { pt3dadd( 26.9452, 18.4979, -39.5943, 0.91 ) }
    dend_39 { pt3dadd( 26.8937, 18.8379, -40.6275, 0.91 ) }
    dend_39 { pt3dadd( 27.2854, 19.514, -41.9339, 0.91 ) }
    dend_39 { pt3dadd( 27.9162, 20.2403, -43.0595, 0.68 ) }
    dend_39 { pt3dadd( 28.3876, 20.6955, -43.7362, 0.68 ) }
    dend_39 { pt3dadd( 29.2071, 21.383, -44.8086, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_39 { pt3dadd( 30.0345, 22.0831, -45.9671, 0.68 ) }
    dend_39 { pt3dadd( 30.3664, 22.4048, -46.5297, 0.91 ) }
    dend_39 { pt3dadd( 31.033, 23.333, -48.1584, 0.91 ) }
    dend_39 { pt3dadd( 31.5155, 24.3686, -49.8929, 0.91 ) }
    dend_39 { pt3dadd( 31.8336, 25.5116, -51.6604, 0.91 ) }
    dend_39 { pt3dadd( 31.9399, 26.4356, -52.9937, 0.91 ) }
    dend_39 { pt3dadd( 31.917, 27.4938, -54.5518, 0.91 ) }
    dend_39 { pt3dadd( 31.8097, 28.5454, -56.1937, 0.91 ) }
    dend_39 { pt3dadd( 31.7132, 29.0089, -56.9175, 0.91 ) }
    dend_39 { pt3dadd( 31.4172, 29.7671, -58.1146, 0.91 ) }
    dend_39 { pt3dadd( 30.8309, 30.7945, -59.877, 0.91 ) }
    dend_39 { pt3dadd( 30.2202, 31.6029, -61.5557, 0.91 ) }
    dend_39 { pt3dadd( 29.809, 32.0604, -62.6043, 0.91 ) }
    dend_39 { pt3dadd( 29.3296, 32.5307, -63.7868, 0.91 ) }
    dend_39 { pt3dadd( 28.7006, 33.0497, -65.2488, 0.91 ) }
    dend_39 { pt3dadd( 27.7096, 33.7179, -67.4241, 0.91 ) }
    dend_39 { pt3dadd( 26.9268, 34.1995, -69.0238, 0.91 ) }
    dend_39 { pt3dadd( 26.3868, 34.5561, -70.0861, 0.68 ) }
    dend_39 { pt3dadd( 26.2233, 34.6596, -70.3964, 0.68 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 19/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 25.4408, 18.7669, -20.5874, 1.14 ) }
    dend_34 { pt3dadd( 26.8194, 19.1225, -21.8416, 1.14 ) }
    dend_34 { pt3dadd( 28.1713, 19.4712, -23.0715, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 24.8488, -20.2385, -31.3815, 0.91 ) }
    dend_20 { pt3dadd( 23.7115, -19.186, -33.8965, 0.91 ) }
    dend_20 { pt3dadd( 22.9068, -18.2134, -35.9906, 0.91 ) }
    dend_20 { pt3dadd( 22.395, -17.3767, -37.7181, 0.91 ) }
    dend_20 { pt3dadd( 22.1714, -16.9088, -38.6456, 1.14 ) }
    dend_20 { pt3dadd( 21.9395, -16.3415, -39.7056, 1.14 ) }
    dend_20 { pt3dadd( 21.6455, -15.6384, -40.9011, 0.68 ) }
    dend_20 { pt3dadd( 21.1307, -14.104, -43.0498, 0.68 ) }
    dend_20 { pt3dadd( 20.7513, -12.8986, -44.5602, 0.68 ) }
    dend_20 { pt3dadd( 20.6397, -12.5396, -45.0481, 0.68 ) }
    dend_20 { pt3dadd( 20.4688, -12.0735, -45.7958, 0.68 ) }
    dend_20 { pt3dadd( 19.9417, -10.8265, -48.1736, 0.68 ) }
    dend_20 { pt3dadd( 19.648, -10.2049, -49.5052, 0.68 ) }
    dend_20 { pt3dadd( 19.4623, -9.85913, -50.3104, 0.91 ) }
    dend_20 { pt3dadd( 18.7086, -8.70492, -53.2768, 0.91 ) }
    dend_20 { pt3dadd( 18.0621, -7.69915, -55.9183, 0.91 ) }
    dend_20 { pt3dadd( 17.4565, -6.74471, -58.5481, 0.91 ) }
    dend_20 { pt3dadd( 17.022, -5.99697, -60.5687, 0.91 ) }
    dend_20 { pt3dadd( 16.4431, -4.97517, -63.0219, 0.91 ) }
    dend_20 { pt3dadd( 16.0439, -4.19893, -64.7634, 0.91 ) }
    dend_20 { pt3dadd( 15.6111, -3.27874, -66.6101, 0.46 ) }
    dend_20 { pt3dadd( 15.187, -2.09728, -68.8423, 0.46 ) }
    dend_20 { pt3dadd( 14.6854, -0.1862, -72.3917, 0.68 ) }
    dend_20 { pt3dadd( 14.5345, 0.845238, -74.3092, 0.46 ) }
    dend_20 { pt3dadd( 14.5204, 2.19009, -76.9257, 0.46 ) }
    dend_20 { pt3dadd( 14.6507, 2.88109, -78.3586, 0.46 ) }
    dend_20 { pt3dadd( 15.1576, 4.25006, -81.3201, 0.46 ) }
    dend_20 { pt3dadd( 15.7823, 5.21484, -83.3965, 0.46 ) }
    dend_20 { pt3dadd( 16.3117, 5.76768, -84.6074, 0.46 ) }
    dend_20 { pt3dadd( 17.3425, 6.58882, -86.3917, 0.46 ) }
    dend_20 { pt3dadd( 18.7963, 7.67465, -88.6341, 0.46 ) }
    dend_20 { pt3dadd( 19.9452, 8.46254, -90.2169, 0.46 ) }
    dend_20 { pt3dadd( 21.7233, 9.61018, -92.3294, 0.46 ) }
    dend_20 { pt3dadd( 22.8264, 10.293, -93.4973, 0.46 ) }
    dend_20 { pt3dadd( 24.6559, 11.4306, -95.3121, 0.46 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 57/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 24.8488, -20.2385, -31.3815, 0.68 ) }
    dend_19 { pt3dadd( 25.2454, -21.7284, -30.461, 0.68 ) }
    dend_19 { pt3dadd( 25.6761, -23.8892, -29.1782, 0.68 ) }
    dend_19 { pt3dadd( 25.9049, -25.464, -28.3258, 1.14 ) }
    dend_19 { pt3dadd( 26.0125, -26.7121, -27.718, 1.14 ) }
    dend_19 { pt3dadd( 26.0796, -28.9408, -26.8254, 0.68 ) }
    dend_19 { pt3dadd( 26.052, -30.2577, -26.3269, 0.68 ) }
    dend_19 { pt3dadd( 25.9304, -31.7006, -25.8058, 0.23 ) }
    dend_19 { pt3dadd( 25.755, -32.7621, -25.4971, 0.23 ) }
    dend_19 { pt3dadd( 25.4884, -34.0617, -25.171, 0.91 ) }
    dend_19 { pt3dadd( 25.0153, -35.8153, -24.7713, 0.68 ) }
    dend_19 { pt3dadd( 24.3891, -37.8712, -24.4501, 0.68 ) }
    dend_19 { pt3dadd( 23.9761, -39.5595, -24.2457, 0.68 ) }
    dend_19 { pt3dadd( 23.6662, -41.2678, -24.1394, 1.14 ) }
    dend_19 { pt3dadd( 23.5654, -42.1177, -24.1345, 0.68 ) }
    dend_19 { pt3dadd( 23.5237, -43.8573, -24.3825, 0.68 ) }
    dend_19 { pt3dadd( 23.5333, -45.0307, -24.7099, 0.68 ) }
    dend_19 { pt3dadd( 23.473, -46.74, -25.4457, 0.91 ) }
    dend_19 { pt3dadd( 23.1541, -48.5414, -26.4933, 0.91 ) }
    dend_19 { pt3dadd( 22.9499, -49.23, -26.9244, 0.68 ) }
    dend_19 { pt3dadd( 22.2718, -51.0524, -28.1354, 0.68 ) }
    dend_19 { pt3dadd( 21.7686, -52.3307, -29.0298, 0.91 ) }
    dend_19 { pt3dadd( 21.1637, -53.7477, -30.0698, 0.46 ) }
    dend_19 { pt3dadd( 19.9267, -56.4639, -32.388, 0.68 ) }
    dend_19 { pt3dadd( 19.3744, -57.6317, -33.5994, 0.46 ) }
    dend_19 { pt3dadd( 18.745, -58.9107, -35.0126, 0.46 ) }
    dend_19 { pt3dadd( 18.1348, -60.1462, -36.4887, 0.46 ) }
    dend_19 { pt3dadd( 17.5472, -61.524, -38.3309, 0.91 ) }
    dend_19 { pt3dadd( 16.8558, -63.57, -41.4106, 0.91 ) }
    dend_19 { pt3dadd( 16.418, -65.5121, -44.7191, 0.91 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 87/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -49.0989, 1.9751, -4.93485, 0.91 ) }
    dend_12 { pt3dadd( -50.6874, 2.86199, -4.62161, 0.91 ) }
    dend_12 { pt3dadd( -52.3434, 3.87714, -4.4506, 0.91 ) }
    dend_12 { pt3dadd( -52.9486, 4.25556, -4.42312, 0.91 ) }
    dend_12 { pt3dadd( -54.8474, 5.38063, -4.40108, 1.14 ) }
    dend_12 { pt3dadd( -56.1868, 6.10136, -4.46726, 1.14 ) }
    dend_12 { pt3dadd( -58.3151, 7.1223, -4.6226, 1.14 ) }
    dend_12 { pt3dadd( -59.8703, 7.8457, -4.80314, 1.14 ) }
    dend_12 { pt3dadd( -61.5295, 8.55843, -5.0594, 1.14 ) }
    dend_12 { pt3dadd( -63.7893, 9.5046, -5.44884, 1.14 ) }
    dend_12 { pt3dadd( -66.7307, 10.6767, -6.03772, 0.68 ) }
    dend_12 { pt3dadd( -68.8849, 11.4723, -6.47226, 0.68 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 99/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -49.0989, 1.9751, -4.93485, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_9 { pt3dadd( -49.0559, 2.44428, -7.0078, 0.68 ) }
    dend_9 { pt3dadd( -49.0039, 3.01134, -9.51324, 0.68 ) }
    dend_9 { pt3dadd( -48.9468, 3.63397, -12.2642, 0.68 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -53.1845, -13.3638, 5.58325, 0.91 ) }
    dend_7 { pt3dadd( -53.5036, -14.4631, 5.22538, 0.91 ) }
    dend_7 { pt3dadd( -53.9534, -15.9095, 4.89102, 0.46 ) }
    dend_7 { pt3dadd( -54.2815, -16.8603, 4.69192, 0.46 ) }
    dend_7 { pt3dadd( -54.9083, -18.5272, 4.38312, 0.68 ) }
    dend_7 { pt3dadd( -55.4842, -20.0374, 4.06271, 0.68 ) }
    dend_7 { pt3dadd( -56.2171, -21.9059, 3.6024, 0.68 ) }
    dend_7 { pt3dadd( -57.0111, -23.7834, 3.05864, 0.91 ) }
    dend_7 { pt3dadd( -57.3778, -24.5198, 2.81931, 0.91 ) }
    dend_7 { pt3dadd( -58.0696, -25.6471, 2.40146, 0.91 ) }
    dend_7 { pt3dadd( -59.0063, -26.7877, 1.94947, 0.91 ) }
    dend_7 { pt3dadd( -59.8843, -27.6232, 1.62464, 0.91 ) }
    dend_7 { pt3dadd( -60.5804, -28.1427, 1.40328, 0.91 ) }
    dend_7 { pt3dadd( -61.7268, -28.8277, 1.05947, 0.68 ) }
    dend_7 { pt3dadd( -62.5477, -29.224, 0.884238, 0.68 ) }
    dend_7 { pt3dadd( -63.8029, -29.7066, 0.666953, 0.91 ) }
    dend_7 { pt3dadd( -65.5061, -30.3098, 0.458965, 0.91 ) }
    dend_7 { pt3dadd( -66.7968, -30.7763, 0.324399, 0.68 ) }
    dend_7 { pt3dadd( -68.4441, -31.4946, 0.151247, 1.14 ) }
    dend_7 { pt3dadd( -68.896, -31.7306, 0.0731796, 0.46 ) }
    dend_7 { pt3dadd( -69.8877, -32.3028, -0.115032, 0.46 ) }
    dend_7 { pt3dadd( -70.7694, -32.8782, -0.382291, 0.46 ) }
    dend_7 { pt3dadd( -71.297, -33.2638, -0.666192, 0.68 ) }
    dend_7 { pt3dadd( -72.419, -34.0865, -1.76342, 0.46 ) }
    dend_7 { pt3dadd( -73.5609, -34.813, -3.2214, 0.46 ) }
    dend_7 { pt3dadd( -74.1851, -35.0418, -4.18216, 0.46 ) }
    dend_7 { pt3dadd( -74.8629, -35.0658, -5.36881, 0.46 ) }
    dend_7 { pt3dadd( -75.5997, -34.8886, -6.86357, 0.46 ) }
    dend_7 { pt3dadd( -76.267, -34.5306, -8.44855, 0.46 ) }
    dend_7 { pt3dadd( -76.7087, -34.1564, -9.68459, 1.14 ) }
    dend_7 { pt3dadd( -77.3913, -33.522, -11.7897, 1.14 ) }
    dend_7 { pt3dadd( -77.9909, -32.9559, -13.7203, 0.68 ) }
    dend_7 { pt3dadd( -78.6625, -32.3055, -15.8953, 0.68 ) }
    dend_7 { pt3dadd( -79.1873, -31.7028, -17.8013, 0.68 ) }
    dend_7 { pt3dadd( -79.7849, -30.7975, -20.3841, 0.68 ) }
    dend_7 { pt3dadd( -80.3958, -29.5868, -23.6196, 0.68 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 39/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -53.1845, -13.3638, 5.58325, 0.68 ) }
    dend_6 { pt3dadd( -54.439, -12.2059, 5.1677, 0.68 ) }
    dend_6 { pt3dadd( -55.4396, -11.341, 4.7284, 0.68 ) }
    dend_6 { pt3dadd( -56.2069, -10.6529, 4.2208, 0.68 ) }
    dend_6 { pt3dadd( -56.9822, -9.92366, 3.43702, 0.68 ) }
    dend_6 { pt3dadd( -57.7444, -9.16303, 2.4123, 0.68 ) }
    dend_6 { pt3dadd( -58.3413, -8.5358, 1.40533, 0.91 ) }
    dend_6 { pt3dadd( -58.9064, -7.76371, -1.16303E-4, 0.91 ) }
    dend_6 { pt3dadd( -59.3939, -6.94498, -1.61203, 0.91 ) }
    dend_6 { pt3dadd( -60.0418, -5.90249, -3.76244, 0.91 ) }
    dend_6 { pt3dadd( -60.5805, -5.1046, -5.46017, 0.91 ) }
    dend_6 { pt3dadd( -61.1656, -4.20513, -7.30822, 0.91 ) }
    dend_6 { pt3dadd( -61.68, -3.34381, -9.00667, 0.91 ) }
    dend_6 { pt3dadd( -62.1484, -2.52563, -10.4856, 0.91 ) }
    dend_6 { pt3dadd( -62.8345, -1.46029, -12.2462, 0.68 ) }
    dend_6 { pt3dadd( -63.5309, -0.420631, -13.8354, 0.68 ) }
    dend_6 { pt3dadd( -64.2002, 0.526428, -15.2153, 0.68 ) }
    dend_6 { pt3dadd( -64.8311, 1.35672, -16.3747, 0.68 ) }
    dend_6 { pt3dadd( -65.8872, 2.60214, -18.1748, 0.68 ) }
    dend_6 { pt3dadd( -66.5267, 3.38027, -19.377, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 59/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 22.4124, -8.79588, 14.6846, 0.68 ) }
    dend_52 { pt3dadd( 24.8951, -9.05012, 16.9155, 0.68 ) }
    dend_52 { pt3dadd( 26.6042, -9.1893, 18.361, 0.91 ) }
    dend_52 { pt3dadd( 28.636, -9.38239, 20.0614, 0.91 ) }
    dend_52 { pt3dadd( 30.0194, -9.57011, 21.2748, 1.14 ) }
    dend_52 { pt3dadd( 30.6675, -9.68972, 21.8746, 1.59 ) }
    dend_52 { pt3dadd( 31.9898, -9.99472, 23.1494, 1.14 ) }
    dend_52 { pt3dadd( 33.3265, -10.5041, 24.4888, 0.91 ) }
    dend_52 { pt3dadd( 34.0598, -11.0089, 25.3787, 0.91 ) }
    dend_52 { pt3dadd( 34.8204, -11.8523, 26.4773, 0.91 ) }
    dend_52 { pt3dadd( 35.3368, -12.6707, 27.363, 1.37 ) }
    dend_52 { pt3dadd( 35.7651, -13.5191, 28.2273, 1.37 ) }
    dend_52 { pt3dadd( 36.2868, -15.0556, 29.5817, 1.14 ) }
    dend_52 { pt3dadd( 36.6519, -16.6502, 30.7859, 1.14 ) }
    dend_52 { pt3dadd( 36.8205, -17.5237, 31.3739, 1.14 ) }
    dend_52 { pt3dadd( 36.9615, -18.3017, 31.8175, 1.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 75/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 22.4124, -8.79588, 14.6846, 1.37 ) }
    dend_45 { pt3dadd( 23.1644, -10.3139, 14.1592, 1.37 ) }
    dend_45 { pt3dadd( 23.7844, -11.5657, 13.7259, 1.37 ) }
    dend_45 { pt3dadd( 24.8807, -13.7789, 12.96, 1.82 ) }
    dend_45 { pt3dadd( 24.9993, -14.0184, 12.8771, 2.05 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 80/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 31.8088, 8.9791, -25.849, 0.68 ) }
    dend_43 { pt3dadd( 32.1917, 9.22638, -26.8767, 0.68 ) }
    dend_43 { pt3dadd( 32.9288, 9.51981, -28.6556, 0.68 ) }
    dend_43 { pt3dadd( 33.8324, 9.8893, -30.8306, 0.68 ) }
    dend_43 { pt3dadd( 34.936, 10.3849, -33.2586, 0.68 ) }
    dend_43 { pt3dadd( 36.0065, 10.8298, -35.3208, 0.91 ) }
    dend_43 { pt3dadd( 37.0271, 11.1734, -37.0383, 0.68 ) }
    dend_43 { pt3dadd( 38.0441, 11.3702, -38.5255, 0.68 ) }
    dend_43 { pt3dadd( 39.1636, 11.4556, -39.9912, 0.68 ) }
    dend_43 { pt3dadd( 40.5155, 11.4528, -41.5551, 0.68 ) }
    dend_43 { pt3dadd( 42.2521, 11.4003, -43.3647, 0.68 ) }
    dend_43 { pt3dadd( 43.7983, 11.391, -44.8853, 1.14 ) }
    dend_43 { pt3dadd( 45.4068, 11.4058, -46.362, 0.91 ) }
    dend_43 { pt3dadd( 47.0863, 11.3672, -47.8178, 1.14 ) }
    dend_43 { pt3dadd( 48.4695, 11.3001, -49.067, 0.68 ) }
    dend_43 { pt3dadd( 49.4365, 11.2211, -49.9775, 0.68 ) }
    dend_43 { pt3dadd( 50.3856, 11.1273, -50.9259, 0.68 ) }
    dend_43 { pt3dadd( 51.5, 10.9722, -52.0511, 0.68 ) }
    dend_43 { pt3dadd( 53.5213, 10.564, -53.9895, 0.68 ) }
    dend_43 { pt3dadd( 55.8985, 9.82387, -56.1956, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_43 { pt3dadd( 56.9851, 9.37791, -57.1427, 0.68 ) }
    dend_43 { pt3dadd( 58.9819, 8.39207, -58.7163, 0.68 ) }
    dend_43 { pt3dadd( 60.3012, 7.64254, -59.6682, 0.68 ) }
    dend_43 { pt3dadd( 61.804, 6.69872, -60.6142, 0.68 ) }
    dend_43 { pt3dadd( 63.3944, 5.64946, -61.5105, 0.68 ) }
    dend_43 { pt3dadd( 64.6338, 4.86456, -62.1536, 0.68 ) }
    dend_43 { pt3dadd( 66.0131, 4.08056, -62.9871, 0.68 ) }
    dend_43 { pt3dadd( 68.0479, 3.01985, -64.4358, 0.68 ) }
    dend_43 { pt3dadd( 69.1966, 2.4843, -65.4082, 0.68 ) }
    dend_43 { pt3dadd( 70.9073, 1.83832, -67.077, 0.68 ) }
    dend_43 { pt3dadd( 71.8877, 1.55588, -68.1766, 0.68 ) }
    dend_43 { pt3dadd( 73.3137, 1.20356, -70.0644, 0.68 ) }
    dend_43 { pt3dadd( 74.5783, 0.980012, -71.8905, 0.68 ) }
    dend_43 { pt3dadd( 75.1592, 0.923061, -72.825, 0.68 ) }
    dend_43 { pt3dadd( 76.5434, 0.89522, -75.2696, 0.68 ) }
    dend_43 { pt3dadd( 77.8041, 0.980224, -77.5373, 0.68 ) }
    dend_43 { pt3dadd( 78.5531, 1.10637, -79.0816, 0.68 ) }
    dend_43 { pt3dadd( 79.3413, 1.34939, -80.8913, 0.68 ) }
    dend_43 { pt3dadd( 80.3798, 1.85164, -83.7468, 0.68 ) }
    dend_43 { pt3dadd( 81.5874, 2.5426, -87.4045, 0.68 ) }
    dend_43 { pt3dadd( 82.2783, 3.01541, -89.7566, 0.68 ) }
    dend_43 { pt3dadd( 83.2947, 3.83454, -93.4683, 0.68 ) }
    dend_43 { pt3dadd( 84.1836, 4.62547, -96.9154, 0.68 ) }
    dend_43 { pt3dadd( 85.1511, 5.64112, -101.168, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 24/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 31.8088, 8.9791, -25.849, 0.68 ) }
    dend_42 { pt3dadd( 33.4313, 9.64146, -25.8095, 0.68 ) }
    dend_42 { pt3dadd( 35.1669, 10.3466, -25.7924, 0.68 ) }
    dend_42 { pt3dadd( 36.0436, 10.7037, -25.8321, 0.68 ) }
    dend_42 { pt3dadd( 37.3989, 11.2833, -25.9427, 0.68 ) }
    dend_42 { pt3dadd( 38.6368, 11.8319, -26.1411, 0.68 ) }
    dend_42 { pt3dadd( 39.6249, 12.2803, -26.3993, 0.68 ) }
    dend_42 { pt3dadd( 40.5763, 12.7426, -26.8103, 0.68 ) }
    dend_42 { pt3dadd( 41.372, 13.0764, -27.2999, 0.68 ) }
    dend_42 { pt3dadd( 42.4757, 13.4624, -28.0651, 0.91 ) }
    dend_42 { pt3dadd( 43.9237, 13.9467, -29.222, 0.68 ) }
    dend_42 { pt3dadd( 45.1613, 14.3772, -30.3785, 0.68 ) }
    dend_42 { pt3dadd( 46.4813, 14.8314, -31.7631, 0.68 ) }
    dend_42 { pt3dadd( 47.6184, 15.1609, -33.0682, 0.68 ) }
    dend_42 { pt3dadd( 48.3443, 15.2951, -33.9643, 1.14 ) }
    dend_42 { pt3dadd( 49.3173, 15.3591, -35.2236, 0.91 ) }
    dend_42 { pt3dadd( 50.5181, 15.348, -36.9581, 0.91 ) }
    dend_42 { pt3dadd( 51.2481, 15.3209, -38.1973, 0.91 ) }
    dend_42 { pt3dadd( 51.8659, 15.3035, -39.3287, 1.14 ) }
    dend_42 { pt3dadd( 53.1413, 15.3182, -41.6347, 0.68 ) }
    dend_42 { pt3dadd( 53.9474, 15.3659, -42.9754, 0.68 ) }
    dend_42 { pt3dadd( 55.7315, 15.605, -45.676, 0.68 ) }
    dend_42 { pt3dadd( 56.8951, 15.8737, -47.2974, 0.68 ) }
    dend_42 { pt3dadd( 57.8724, 16.1574, -48.5381, 0.91 ) }
    dend_42 { pt3dadd( 59.0488, 16.5589, -49.8735, 0.91 ) }
    dend_42 { pt3dadd( 60.1659, 16.9647, -50.9663, 0.68 ) }
    dend_42 { pt3dadd( 61.8889, 17.572, -52.3181, 0.68 ) }
    dend_42 { pt3dadd( 62.7186, 17.874, -52.7783, 0.68 ) }
    dend_42 { pt3dadd( 63.9438, 18.3687, -53.3645, 0.68 ) }
    dend_42 { pt3dadd( 65.6887, 19.1355, -54.331, 0.91 ) }
    dend_42 { pt3dadd( 67.4605, 19.9918, -55.4445, 1.14 ) }
    dend_42 { pt3dadd( 69.4793, 21.096, -56.914, 0.91 ) }
    dend_42 { pt3dadd( 71.6209, 22.4536, -58.5996, 0.91 ) }
    dend_42 { pt3dadd( 72.3415, 22.982, -59.2426, 0.91 ) }
    dend_42 { pt3dadd( 74.1492, 24.4453, -61.026, 0.91 ) }
    dend_42 { pt3dadd( 75.0109, 25.1476, -61.9651, 0.91 ) }
    dend_42 { pt3dadd( 76.5245, 26.2336, -63.7916, 0.91 ) }
    dend_42 { pt3dadd( 76.9558, 26.4413, -64.3401, 0.91 ) }
    dend_42 { pt3dadd( 77.8926, 26.6215, -65.2789, 0.91 ) }
    dend_42 { pt3dadd( 78.8202, 26.7125, -65.8352, 0.91 ) }
    dend_42 { pt3dadd( 80.0423, 26.8574, -66.1327, 0.91 ) }
    dend_42 { pt3dadd( 81.8059, 27.0171, -66.4436, 0.91 ) }
    dend_42 { pt3dadd( 83.4679, 27.1135, -66.722, 0.91 ) }
    dend_42 { pt3dadd( 85.8816, 27.2579, -66.9963, 0.91 ) }
    dend_42 { pt3dadd( 88.4157, 27.5454, -67.1089, 0.91 ) }
    dend_42 { pt3dadd( 91.7853, 28.1075, -67.085, 0.68 ) }
    dend_42 { pt3dadd( 94.7872, 28.761, -66.9128, 0.68 ) }
    dend_42 { pt3dadd( 97.0851, 29.3455, -66.5814, 0.91 ) }
    dend_42 { pt3dadd( 100.094, 30.0554, -65.8578, 0.68 ) }
    dend_42 { pt3dadd( 102.51, 30.4823, -65.1142, 0.68 ) }
    dend_42 { pt3dadd( 103.892, 30.599, -64.5597, 0.68 ) }
    dend_42 { pt3dadd( 105.555, 30.632, -63.6282, 0.91 ) }
    dend_42 { pt3dadd( 108.172, 30.6307, -61.7963, 0.68 ) }
    dend_42 { pt3dadd( 110.432, 30.4735, -60.0897, 0.68 ) }
    dend_42 { pt3dadd( 111.578, 30.248, -59.2129, 0.91 ) }
    dend_42 { pt3dadd( 113.559, 29.5681, -57.5851, 0.91 ) }
    dend_42 { pt3dadd( 115.363, 28.8427, -55.9578, 0.68 ) }
    dend_42 { pt3dadd( 116.834, 28.128, -54.4953, 0.68 ) }
    dend_42 { pt3dadd( 118.045, 27.4118, -53.1991, 0.68 ) }
    dend_42 { pt3dadd( 119.586, 26.3604, -51.3008, 0.46 ) }
    dend_42 { pt3dadd( 120.485, 25.7416, -50.1348, 0.91 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 28.1713, 19.4712, -23.0715, 1.14 ) }
    dend_36 { pt3dadd( 28.7786, 19.9711, -23.4941, 1.14 ) }
    dend_36 { pt3dadd( 30.1502, 21.0953, -24.6854, 0.91 ) }
    dend_36 { pt3dadd( 30.9014, 21.6125, -25.3971, 0.91 ) }
    dend_36 { pt3dadd( 32.1375, 22.3242, -26.6457, 0.91 ) }
    dend_36 { pt3dadd( 33.3231, 22.9542, -27.9012, 1.14 ) }
    dend_36 { pt3dadd( 34.557, 23.6076, -29.2086, 0.91 ) }
    dend_36 { pt3dadd( 35.671, 24.2262, -30.5409, 0.91 ) }
    dend_36 { pt3dadd( 36.9656, 24.9996, -32.2842, 0.91 ) }
    dend_36 { pt3dadd( 38.0644, 25.7184, -33.8909, 0.91 ) }
    dend_36 { pt3dadd( 38.8424, 26.1616, -35.011, 0.91 ) }
    dend_36 { pt3dadd( 39.4304, 26.4586, -35.8569, 0.91 ) }
    dend_36 { pt3dadd( 40.1677, 26.8832, -36.9476, 0.91 ) }
    dend_36 { pt3dadd( 40.4504, 27.1373, -37.3856, 0.91 ) }
    dend_36 { pt3dadd( 40.7511, 27.899, -38.1455, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 0/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 28.1713, 19.4712, -23.0715, 0.68 ) }
    dend_35 { pt3dadd( 28.6526, 18.9741, -23.2803, 0.68 ) }
    dend_35 { pt3dadd( 30.7892, 16.8435, -23.3767, 0.68 ) }
    dend_35 { pt3dadd( 32.0596, 15.6719, -23.0521, 0.68 ) }
    dend_35 { pt3dadd( 33.9072, 14.076, -22.3579, 0.68 ) }
    dend_35 { pt3dadd( 35.4899, 12.6268, -21.8602, 0.68 ) }
    dend_35 { pt3dadd( 36.6288, 11.506, -21.6441, 0.68 ) }
    dend_35 { pt3dadd( 37.779, 10.2624, -21.3941, 0.68 ) }
    dend_35 { pt3dadd( 38.3757, 9.4672, -21.2708, 0.68 ) }
    dend_35 { pt3dadd( 39.1482, 8.23101, -21.2825, 0.91 ) }
    dend_35 { pt3dadd( 40.2472, 6.49576, -21.5746, 0.91 ) }
    dend_35 { pt3dadd( 41.2048, 5.02838, -21.7783, 0.91 ) }
    dend_35 { pt3dadd( 41.7769, 4.18283, -21.6672, 0.91 ) }
    dend_35 { pt3dadd( 42.6714, 3.02035, -20.5254, 0.91 ) }
    dend_35 { pt3dadd( 43.4378, 2.20943, -19.2065, 0.68 ) }
    dend_35 { pt3dadd( 44.225, 1.41757, -17.5952, 0.68 ) }
    dend_35 { pt3dadd( 45.264, 0.465016, -15.4264, 0.68 ) }
    dend_35 { pt3dadd( 46.2131, -0.399815, -13.4902, 0.68 ) }
    dend_35 { pt3dadd( 47.0761, -1.2089, -11.7175, 0.68 ) }
    dend_35 { pt3dadd( 47.8904, -1.95205, -10.2034, 0.46 ) }
    dend_35 { pt3dadd( 48.768, -2.736, -8.76047, 0.68 ) }
    dend_35 { pt3dadd( 49.6575, -3.56313, -7.40169, 0.68 ) }
    dend_35 { pt3dadd( 50.95, -4.79472, -5.58767, 0.68 ) }
    dend_35 { pt3dadd( 52.0168, -5.8259, -4.19023, 0.68 ) }
    dend_35 { pt3dadd( 53.7709, -7.47087, -2.00578, 0.68 ) }
    dend_35 { pt3dadd( 54.9308, -8.5238, -0.526393, 0.68 ) }
    dend_35 { pt3dadd( 56.187, -9.58248, 0.968228, 0.68 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 27/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -48.9468, 3.63397, -12.2642, 0.68 ) }
    dend_11 { pt3dadd( -49.4071, 3.94141, -13.3805, 0.68 ) }
    dend_11 { pt3dadd( -50.469, 4.65068, -15.9558, 0.68 ) }
    dend_11 { pt3dadd( -51.342, 5.23378, -18.073, 0.68 ) }
    dend_11 { pt3dadd( -52.3943, 5.93665, -20.6251, 0.68 ) }
    dend_11 { pt3dadd( -52.7037, 6.1433, -21.3754, 0.46 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -48.9468, 3.63397, -12.2642, 0.46 ) }
    dend_10 { pt3dadd( -48.9788, 4.05159, -13.7207, 0.46 ) }
    dend_10 { pt3dadd( -49.0181, 4.54313, -16.5034, 0.46 ) }
    dend_10 { pt3dadd( -49.0578, 4.77671, -19.0512, 0.46 ) }
    dend_10 { pt3dadd( -49.0855, 4.94003, -20.8326, 0.46 ) }
    dend_10 { pt3dadd( -49.1074, 5.06872, -22.2362, 0.46 ) }
    dend_10 { pt3dadd( -49.134, 5.22492, -23.9399, 0.46 ) }
    dend_10 { pt3dadd( -49.3736, 5.34446, -27.0116, 0.46 ) }
    dend_10 { pt3dadd( -49.594, 5.22288, -29.0476, 0.46 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 36.9615, -18.3017, 31.8175, 0.68 ) }
    dend_54 { pt3dadd( 37.8082, -18.0646, 32.1601, 0.68 ) }
    dend_54 { pt3dadd( 40.076, -17.4297, 33.0778, 0.46 ) }
    dend_54 { pt3dadd( 41.3602, -17.0701, 33.5975, 0.46 ) }
    dend_54 { pt3dadd( 42.338, -16.7963, 33.9931, 0.46 ) }
    dend_54 { pt3dadd( 43.0101, -16.6081, 34.2651, 0.46 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 36.9615, -18.3017, 31.8175, 0.68 ) }
    dend_53 { pt3dadd( 38.2093, -18.2674, 30.4563, 0.68 ) }
    dend_53 { pt3dadd( 39.6823, -18.2268, 28.8494, 0.68 ) }
    dend_53 { pt3dadd( 41.1743, -18.1858, 27.2218, 0.46 ) }
    dend_53 { pt3dadd( 42.8088, -18.1408, 25.4388, 0.46 ) }
    dend_53 { pt3dadd( 44.5836, -18.0919, 23.5027, 0.46 ) }
    dend_53 { pt3dadd( 45.9553, -18.0542, 22.0063, 0.46 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 55/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 24.9993, -14.0184, 12.8771, 1.14 ) }
    dend_49 { pt3dadd( 25.5869, -15.1556, 11.0402, 1.14 ) }
    dend_49 { pt3dadd( 26.1221, -16.4921, 9.0271, 1.14 ) }
    dend_49 { pt3dadd( 26.3536, -17.6741, 7.4125, 1.14 ) }
    dend_49 { pt3dadd( 26.3692, -18.5759, 6.27611, 1.37 ) }
    dend_49 { pt3dadd( 26.4007, -20.385, 3.99663, 0.91 ) }
    dend_49 { pt3dadd( 26.4223, -21.6308, 2.42675, 0.91 ) }
    dend_49 { pt3dadd( 26.3875, -22.0722, 1.85493, 1.14 ) }
    dend_49 { pt3dadd( 26.0589, -23.6057, 0.190226, 1.14 ) }
    dend_49 { pt3dadd( 25.6726, -24.6578, -0.782714, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 65/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 24.9993, -14.0184, 12.8771, 1.37 ) }
    dend_46 { pt3dadd( 25.3751, -15.1902, 14.301, 1.37 ) }
    dend_46 { pt3dadd( 25.8271, -16.9796, 15.4128, 1.37 ) }
    dend_46 { pt3dadd( 26.3707, -19.0794, 15.9773, 1.37 ) }
    dend_46 { pt3dadd( 26.728, -20.4149, 16.2755, 1.37 ) }
    dend_46 { pt3dadd( 27.234, -22.1983, 16.6543, 1.14 ) }
    dend_46 { pt3dadd( 27.9842, -24.6073, 17.2282, 1.14 ) }
    dend_46 { pt3dadd( 28.664, -26.8361, 17.643, 1.14 ) }
    dend_46 { pt3dadd( 29.3587, -28.9647, 18.0453, 1.14 ) }
    dend_46 { pt3dadd( 29.9357, -30.5546, 18.5095, 0.91 ) }
    dend_46 { pt3dadd( 30.1892, -31.1064, 18.8022, 1.14 ) }
    dend_46 { pt3dadd( 30.8071, -32.0779, 19.7147, 1.37 ) }
    dend_46 { pt3dadd( 31.5928, -33.0712, 21.0291, 1.14 ) }
    dend_46 { pt3dadd( 32.3794, -33.9516, 22.4203, 0.91 ) }
    dend_46 { pt3dadd( 33.2757, -34.8963, 24.0343, 0.91 ) }
    dend_46 { pt3dadd( 33.9633, -35.5842, 25.2216, 0.91 ) }
    dend_46 { pt3dadd( 34.9524, -36.5688, 26.8984, 0.91 ) }
    dend_46 { pt3dadd( 35.9096, -37.5292, 28.3671, 0.91 ) }
    dend_46 { pt3dadd( 36.8594, -38.4935, 29.6867, 0.91 ) }
    dend_46 { pt3dadd( 37.6557, -39.3693, 30.7644, 0.91 ) }
    dend_46 { pt3dadd( 38.9316, -40.8899, 32.4753, 0.91 ) }
    dend_46 { pt3dadd( 39.7372, -41.9872, 33.5947, 0.91 ) }
    dend_46 { pt3dadd( 40.8015, -43.7078, 35.2059, 1.14 ) }
    dend_46 { pt3dadd( 41.4094, -44.8914, 36.2421, 1.14 ) }
    dend_46 { pt3dadd( 41.9588, -46.1892, 37.3412, 1.14 ) }
    dend_46 { pt3dadd( 42.4556, -47.66, 38.5355, 1.14 ) }
    dend_46 { pt3dadd( 42.8135, -49.0261, 39.6572, 1.37 ) }
    dend_46 { pt3dadd( 43.1349, -50.4696, 40.9724, 0.91 ) }
    dend_46 { pt3dadd( 43.4238, -51.8991, 42.4718, 0.91 ) }
    dend_46 { pt3dadd( 43.7055, -53.0109, 43.7369, 0.91 ) }
    dend_46 { pt3dadd( 44.0572, -54.0419, 45.0043, 1.14 ) }
    dend_46 { pt3dadd( 44.4588, -55.0685, 46.365, 0.91 ) }
    dend_46 { pt3dadd( 44.7978, -55.8058, 47.4346, 1.14 ) }
    dend_46 { pt3dadd( 45.2347, -56.6787, 48.7417, 1.14 ) }
    dend_46 { pt3dadd( 45.6916, -57.665, 50.1433, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_46 { pt3dadd( 46.0464, -58.5642, 51.3188, 0.91 ) }
    dend_46 { pt3dadd( 46.4188, -59.6382, 52.6936, 1.14 ) }
    dend_46 { pt3dadd( 46.6955, -60.5575, 53.749, 1.14 ) }
    dend_46 { pt3dadd( 46.9791, -61.8197, 55.0699, 0.91 ) }
    dend_46 { pt3dadd( 47.2505, -63.4169, 56.6496, 0.91 ) }
    dend_46 { pt3dadd( 47.4561, -64.8851, 58.0143, 1.14 ) }
    dend_46 { pt3dadd( 47.6933, -66.3402, 59.3048, 1.14 ) }
    dend_46 { pt3dadd( 47.901, -67.3476, 60.1881, 0.91 ) }
    dend_46 { pt3dadd( 48.2359, -68.7876, 61.4918, 0.68 ) }
    dend_46 { pt3dadd( 48.4497, -69.7969, 62.4708, 0.68 ) }
    dend_46 { pt3dadd( 48.6013, -70.572, 63.2596, 1.14 ) }
    dend_46 { pt3dadd( 48.818, -71.8439, 64.583, 0.91 ) }
    dend_46 { pt3dadd( 49.053, -73.1375, 65.9762, 0.91 ) }
    dend_46 { pt3dadd( 49.3301, -74.4626, 67.4834, 0.91 ) }
    dend_46 { pt3dadd( 49.7666, -76.3839, 69.6577, 0.46 ) }
    dend_46 { pt3dadd( 49.9174, -77.1581, 70.5228, 0.46 ) }
    dend_46 { pt3dadd( 50.0881, -78.2869, 71.8315, 0.46 ) }
    dend_46 { pt3dadd( 50.2037, -79.1629, 72.8344, 0.91 ) }
    dend_46 { pt3dadd( 50.3408, -80.3091, 74.0857, 0.91 ) }
    dend_46 { pt3dadd( 50.4418, -81.277, 75.1482, 0.91 ) }
    dend_46 { pt3dadd( 50.5487, -82.2806, 76.2315, 0.23 ) }
    dend_46 { pt3dadd( 50.7181, -84.3, 78.395, 0.23 ) }
    dend_46 { pt3dadd( 50.7711, -84.9999, 79.1323, 0.23 ) }
    dend_46 { pt3dadd( 50.8313, -85.9138, 80.068, 0.46 ) }
    dend_46 { pt3dadd( 50.9504, -87.3389, 81.4248, 0.68 ) }
    dend_46 { pt3dadd( 51.0556, -88.2392, 82.2639, 1.37 ) }
    dend_46 { pt3dadd( 51.2094, -89.3548, 83.2389, 0.46 ) }
    dend_46 { pt3dadd( 51.3638, -90.4379, 84.0729, 0.46 ) }
    dend_46 { pt3dadd( 51.4472, -91.1085, 84.5957, 0.91 ) }
    dend_46 { pt3dadd( 51.611, -92.3809, 85.6176, 0.91 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 30/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 40.7511, 27.899, -38.1455, 0.91 ) }
    dend_38 { pt3dadd( 41.3969, 28.9826, -38.98, 0.91 ) }
    dend_38 { pt3dadd( 42.5671, 30.842, -40.2432, 0.91 ) }
    dend_38 { pt3dadd( 43.6726, 32.5735, -41.3692, 0.68 ) }
    dend_38 { pt3dadd( 44.6468, 33.9799, -42.1177, 0.68 ) }
    dend_38 { pt3dadd( 45.6453, 35.2777, -42.57, 0.68 ) }
    dend_38 { pt3dadd( 46.5357, 36.3824, -42.7554, 0.68 ) }
    dend_38 { pt3dadd( 47.5818, 37.5384, -42.5639, 0.68 ) }
    dend_38 { pt3dadd( 48.3989, 38.3652, -42.2079, 0.68 ) }
    dend_38 { pt3dadd( 50.2013, 40.1478, -40.9528, 0.68 ) }
    dend_38 { pt3dadd( 51.888, 41.9059, -39.2992, 0.68 ) }
    dend_38 { pt3dadd( 52.8615, 42.9431, -38.0664, 0.68 ) }
    dend_38 { pt3dadd( 53.8982, 43.9873, -36.5041, 0.68 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 40.7511, 27.899, -38.1455, 0.68 ) }
    dend_37 { pt3dadd( 41.6054, 29.4608, -40.1357, 0.68 ) }
    dend_37 { pt3dadd( 42.2264, 30.596, -41.5823, 0.68 ) }
    dend_37 { pt3dadd( 42.7222, 31.5024, -42.7373, 0.68 ) }
    dend_37 { pt3dadd( 43.2737, 32.5105, -44.022, 0.68 ) }
    dend_37 { pt3dadd( 43.9387, 33.726, -45.571, 0.68 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 25.6726, -24.6578, -0.782714, 0.46 ) }
    dend_51 { pt3dadd( 24.8335, -25.0675, -2.88341, 0.46 ) }
    dend_51 { pt3dadd( 24.3278, -25.1921, -4.60356, 0.68 ) }
    dend_51 { pt3dadd( 23.8465, -25.1696, -6.76615, 0.68 ) }
    dend_51 { pt3dadd( 23.4978, -25.0152, -9.06715, 0.68 ) }
    dend_51 { pt3dadd( 23.2861, -24.7237, -11.8152, 0.68 ) }
    dend_51 { pt3dadd( 23.2292, -24.4285, -14.3994, 0.68 ) }
    dend_51 { pt3dadd( 23.3031, -24.0176, -16.687, 0.68 ) }
    dend_51 { pt3dadd( 23.396, -23.7163, -18.2528, 0.68 ) }
    dend_51 { pt3dadd( 23.5513, -23.4749, -19.808, 0.68 ) }
    dend_51 { pt3dadd( 23.6973, -23.3797, -21.3762, 0.68 ) }
    dend_51 { pt3dadd( 23.7876, -23.4791, -23.3231, 0.68 ) }
    dend_51 { pt3dadd( 23.7687, -23.6252, -24.0378, 0.68 ) }
    dend_51 { pt3dadd( 23.5804, -24.4251, -26.3374, 0.68 ) }
    dend_51 { pt3dadd( 23.3636, -25.2995, -28.3944, 0.68 ) }
    dend_51 { pt3dadd( 23.2521, -25.9831, -29.8531, 0.68 ) }
    dend_51 { pt3dadd( 23.2731, -26.5083, -30.97, 0.68 ) }
    dend_51 { pt3dadd( 23.5293, -27.0865, -32.4572, 0.68 ) }
    dend_51 { pt3dadd( 23.8768, -27.4857, -33.9631, 0.68 ) }
    dend_51 { pt3dadd( 24.2095, -27.6934, -35.2343, 0.68 ) }
    dend_51 { pt3dadd( 24.6985, -27.8723, -36.8479, 0.68 ) }
    dend_51 { pt3dadd( 25.2583, -28.0082, -38.4662, 0.68 ) }
    dend_51 { pt3dadd( 26.0096, -28.1942, -40.4816, 0.91 ) }
    dend_51 { pt3dadd( 27.0787, -28.5104, -43.1638, 0.91 ) }
    dend_51 { pt3dadd( 27.9207, -28.8257, -45.2565, 0.91 ) }
    dend_51 { pt3dadd( 28.5957, -29.2609, -46.9272, 0.68 ) }
    dend_51 { pt3dadd( 28.9658, -30.1377, -48.5228, 0.68 ) }
    dend_51 { pt3dadd( 28.9374, -31.7231, -50.4476, 0.68 ) }
    dend_51 { pt3dadd( 28.5665, -32.9165, -51.8993, 0.68 ) }
    dend_51 { pt3dadd( 28.1287, -33.7211, -53.2156, 0.68 ) }
    dend_51 { pt3dadd( 27.8713, -34.0326, -54.0589, 0.68 ) }
    dend_51 { pt3dadd( 27.1361, -34.8229, -56.8086, 0.91 ) }
    dend_51 { pt3dadd( 26.6941, -35.1765, -58.8225, 0.91 ) }
    dend_51 { pt3dadd( 26.344, -35.3396, -60.954, 0.91 ) }
    dend_51 { pt3dadd( 26.1694, -35.3137, -63.466, 0.91 ) }
    dend_51 { pt3dadd( 26.3862, -34.9424, -67.0155, 0.91 ) }
    dend_51 { pt3dadd( 26.6082, -34.7075, -68.1378, 0.91 ) }
    dend_51 { pt3dadd( 27.3778, -33.9554, -70.2402, 0.68 ) }
    dend_51 { pt3dadd( 27.9795, -33.4231, -71.3366, 0.68 ) }
    dend_51 { pt3dadd( 28.9173, -32.5601, -72.629, 0.68 ) }
    dend_51 { pt3dadd( 30.6051, -30.7789, -74.6773, 0.68 ) }
    dend_51 { pt3dadd( 31.1787, -30.1245, -75.3458, 0.68 ) }
    dend_51 { pt3dadd( 32.1919, -28.9053, -76.6109, 0.68 ) }
    dend_51 { pt3dadd( 32.9282, -27.9957, -77.5867, 0.68 ) }
    dend_51 { pt3dadd( 34.2984, -26.2451, -79.5047, 0.68 ) }
    dend_51 { pt3dadd( 35.8647, -24.0757, -81.9997, 0.46 ) }
    dend_51 { pt3dadd( 36.5672, -23.0336, -83.2616, 0.46 ) }
    dend_51 { pt3dadd( 37.9212, -21.0876, -85.6407, 0.46 ) }
    dend_51 { pt3dadd( 38.4511, -20.3709, -86.5629, 0.46 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 98/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 25.6726, -24.6578, -0.782714, 0.91 ) }
    dend_50 { pt3dadd( 24.5087, -26.0333, -0.706848, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_50 { pt3dadd( 22.6015, -28.1171, -0.444321, 0.91 ) }
    dend_50 { pt3dadd( 21.8542, -28.8541, -0.297792, 0.91 ) }
    dend_50 { pt3dadd( 20.5802, -29.9819, -0.0216539, 0.68 ) }
    dend_50 { pt3dadd( 19.5122, -30.8869, 0.179063, 0.68 ) }
    dend_50 { pt3dadd( 18.2248, -31.9689, 0.394363, 0.68 ) }
    dend_50 { pt3dadd( 17.5227, -32.5697, 0.521488, 0.68 ) }
    dend_50 { pt3dadd( 16.5832, -33.3782, 0.703977, 0.46 ) }
    dend_50 { pt3dadd( 15.7736, -34.1707, 0.807708, 0.91 ) }
    dend_50 { pt3dadd( 14.6403, -35.6866, 0.803204, 1.14 ) }
    dend_50 { pt3dadd( 14.2065, -36.6198, 0.720076, 0.46 ) }
    dend_50 { pt3dadd( 13.8343, -37.8268, 0.569723, 0.46 ) }
    dend_50 { pt3dadd( 13.5536, -38.8899, 0.44678, 0.68 ) }
    dend_50 { pt3dadd( 13.2588, -39.9635, 0.32317, 0.68 ) }
    dend_50 { pt3dadd( 12.722, -41.5787, 0.156561, 0.46 ) }
    dend_50 { pt3dadd( 12.0373, -43.0539, 0.0665803, 0.68 ) }
    dend_50 { pt3dadd( 10.6982, -45.1045, 0.0696944, 0.46 ) }
    dend_50 { pt3dadd( 9.98728, -45.9967, 0.121349, 0.46 ) }
    dend_50 { pt3dadd( 8.93193, -47.2507, 0.245448, 0.46 ) }
    dend_50 { pt3dadd( 8.00632, -48.3528, 0.321308, 0.91 ) }
    dend_50 { pt3dadd( 6.80372, -49.8873, 0.39369, 0.68 ) }
    dend_50 { pt3dadd( 5.44091, -51.9969, 0.473471, 0.46 ) }
    dend_50 { pt3dadd( 4.88581, -53.2884, 0.510246, 0.68 ) }
    dend_50 { pt3dadd( 4.31831, -55.4628, 0.549798, 0.68 ) }
    dend_50 { pt3dadd( 4.11292, -57.1158, 0.56242, 0.68 ) }
    dend_50 { pt3dadd( 4.10936, -58.0362, 0.556426, 0.23 ) }
    dend_50 { pt3dadd( 4.2154, -59.095, 0.454521, 0.23 ) }
    dend_50 { pt3dadd( 4.35898, -60.1247, 0.289714, 0.23 ) }
    dend_50 { pt3dadd( 4.37415, -60.4705, 0.232897, 0.23 ) }
    dend_50 { pt3dadd( 4.27733, -61.1619, 0.18923, 0.46 ) }
    dend_50 { pt3dadd( 3.83016, -62.7232, 0.296103, 0.68 ) }
    dend_50 { pt3dadd( 3.23647, -64.2248, 0.475902, 0.68 ) }
    dend_50 { pt3dadd( 2.53629, -65.7915, 0.701195, 1.14 ) }
    dend_50 { pt3dadd( 1.96695, -67.0354, 0.889699, 0.23 ) }
    dend_50 { pt3dadd( 1.01349, -69.1489, 1.28834, 0.23 ) }
    dend_50 { pt3dadd( 0.565784, -70.1606, 1.48437, 0.23 ) }
    dend_50 { pt3dadd( -0.05328, -71.5484, 1.82371, 0.68 ) }
    dend_50 { pt3dadd( -0.570217, -72.8134, 2.16784, 0.23 ) }
    dend_50 { pt3dadd( -0.863971, -73.6739, 2.3996, 0.68 ) }
    dend_50 { pt3dadd( -1.19839, -74.6581, 2.66535, 0.23 ) }
    dend_50 { pt3dadd( -1.64326, -75.9803, 3.06071, 0.68 ) }
    dend_50 { pt3dadd( -2.17327, -77.7077, 3.70202, 0.23 ) }
    dend_50 { pt3dadd( -2.49464, -78.838, 4.23619, 0.91 ) }
    dend_50 { pt3dadd( -3.17767, -81.237, 5.47277, 0.23 ) }
    dend_50 { pt3dadd( -3.30908, -81.7036, 5.73036, 0.46 ) }
    dend_50 { pt3dadd( -3.88681, -83.9583, 7.02004, 0.23 ) }
    dend_50 { pt3dadd( -4.28635, -85.6816, 8.12174, 0.23 ) }
    dend_50 { pt3dadd( -4.54442, -87.0208, 8.98535, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 47/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 51.611, -92.3809, 85.6176, 0.23 ) }
    dend_48 { pt3dadd( 51.4959, -93.8876, 86.4783, 0.23 ) }
    dend_48 { pt3dadd( 51.4707, -94.8141, 86.9912, 0.68 ) }
    dend_48 { pt3dadd( 51.5097, -96.5594, 88.0349, 0.68 ) }
    dend_48 { pt3dadd( 51.5354, -97.0517, 88.3795, 0.68 ) }
    dend_48 { pt3dadd( 51.6627, -98.8563, 89.6737, 0.23 ) }
    dend_48 { pt3dadd( 51.7171, -99.6234, 90.2398, 0.23 ) }
    dend_48 { pt3dadd( 51.791, -100.474, 90.9544, 0.46 ) }
    dend_48 { pt3dadd( 51.9107, -101.821, 92.1612, 0.46 ) }
    dend_48 { pt3dadd( 52.0502, -103.147, 93.4069, 0.46 ) }
    dend_48 { pt3dadd( 52.1824, -104.003, 94.2424, 0.91 ) }
    dend_48 { pt3dadd( 52.4559, -105.49, 95.7643, 0.68 ) }
    dend_48 { pt3dadd( 52.6262, -106.614, 96.9711, 0.68 ) }
    dend_48 { pt3dadd( 52.8256, -108.238, 98.776, 0.68 ) }
    dend_48 { pt3dadd( 52.9095, -109.373, 100.049, 0.23 ) }
    dend_48 { pt3dadd( 52.9122, -110.377, 101.217, 0.46 ) }
    dend_48 { pt3dadd( 52.8696, -111.064, 102.118, 0.46 ) }
    dend_48 { pt3dadd( 52.7798, -111.821, 103.181, 0.23 ) }
    dend_48 { pt3dadd( 52.6486, -112.51, 104.209, 0.23 ) }
    dend_48 { pt3dadd( 52.3798, -113.379, 105.631, 0.68 ) }
    dend_48 { pt3dadd( 52.049, -114.424, 107.33, 0.91 ) }
    dend_48 { pt3dadd( 51.8508, -115.199, 108.607, 0.91 ) }
    dend_48 { pt3dadd( 51.7228, -115.828, 109.645, 0.68 ) }
    dend_48 { pt3dadd( 51.6081, -116.626, 111.015, 0.68 ) }
    dend_48 { pt3dadd( 51.5623, -117.206, 112.039, 0.68 ) }
    dend_48 { pt3dadd( 51.6157, -117.983, 113.389, 0.91 ) }
    dend_48 { pt3dadd( 51.8185, -119.054, 115.172, 0.91 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 74/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 51.611, -92.3809, 85.6176, 0.91 ) }
    dend_47 { pt3dadd( 52.7067, -91.9674, 85.6176, 0.91 ) }
    dend_47 { pt3dadd( 54.2722, -91.3766, 85.6176, 0.91 ) }
    dend_47 { pt3dadd( 55.8499, -90.7813, 85.6176, 1.14 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_23, dend_16, dend_13, dend_0, dend_32, dend_29, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_27, dend_26, dend_21, dend_18, dend_8, dend_5, dend_3, dend_2, dend_44, dend_41, dend_39, dend_34, dend_20, dend_19, dend_12, dend_9, dend_7, dend_6, dend_52, dend_45, dend_43, dend_42, dend_36, dend_35, dend_11, dend_10, dend_54, dend_53, dend_49, dend_46, dend_38, dend_37, dend_51, dend_50, dend_48, dend_47]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_23, dend_16, dend_13, dend_0, dend_32, dend_29, dend_25, dend_24, dend_22, dend_17, dend_15, dend_14, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_27, dend_26, dend_21, dend_18, dend_8, dend_5, dend_3, dend_2, dend_44, dend_41, dend_39, dend_34, dend_20, dend_19, dend_12, dend_9, dend_7, dend_6, dend_52, dend_45, dend_43, dend_42, dend_36, dend_35, dend_11, dend_10, dend_54, dend_53, dend_49, dend_46, dend_38, dend_37, dend_51, dend_50, dend_48, dend_47]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_22 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_21 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_39 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_7 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_43 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_42 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_50 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_48 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_16 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_40 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_13 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_23 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_44 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_29 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_45 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_17 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_33 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_14 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_30 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_49 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_24 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_52 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_5 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_26 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_18 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_54 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_53 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_37 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_10 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_38 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_47 OneSecGrp_SectionRef_58.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 5
    dend_27 nseg = 3
    dend_21 nseg = 5
    dend_3 nseg = 3
    dend_2 nseg = 5
    dend_39 nseg = 3
    dend_20 nseg = 3
    dend_19 nseg = 3
    dend_7 nseg = 3
    dend_43 nseg = 5
    dend_42 nseg = 5
    dend_35 nseg = 3
    dend_46 nseg = 5
    dend_51 nseg = 5
    dend_50 nseg = 3
    dend_48 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCSA_569d800dfe_0_0


