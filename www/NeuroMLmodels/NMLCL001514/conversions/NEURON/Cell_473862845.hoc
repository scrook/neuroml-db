// Cell: Cell_473862845
/*
{
  "id" : "Cell_473862845",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "372.723, 429.7, 13.599, 13.94", "379.693, 429.7, 13.599, 13.94", "386.663, 429.7, 13.599, 13.94" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "379.693, 429.7, 13.599, 1.0", "385.534, 443.516, 13.599, 1.0", "391.376, 457.332, 13.599, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999795
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "376.238, 423.386, 17.7083, 0.305", "377.114, 422.971, 18.349, 0.356", "378.182, 422.629, 18.8972, 0.5084", "379.251, 422.288, 19.4457, 0.7626", "380.319, 421.946, 19.994, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999795
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "375.264, 434.519, 15.1287, 0.2288", "374.846, 435.584, 15.127, 0.2288", "374.429, 436.649, 15.1256, 0.2288", "374.011, 437.714, 15.1239, 0.2288", "373.593, 438.779, 15.1225, 0.2542", "373.175, 439.844, 15.1211, 0.2796", "372.758, 440.909, 15.1194, 0.305", "372.34, 441.974, 15.118, 0.3304", "371.872, 443.016, 15.1231, 0.3814", "371.357, 444.038, 15.1348, 0.4322", "370.72, 444.976, 15.2774, 0.4068", "369.981, 445.843, 15.5319, 0.3304", "369.242, 446.709, 15.7864, 0.2542", "368.503, 447.576, 16.0406, 0.2542", "367.764, 448.443, 16.2952, 0.2796", "367.074, 449.348, 16.4674, 0.305", "366.471, 450.321, 16.4959, 0.2796", "365.868, 451.293, 16.5245, 0.2542", "365.243, 452.25, 16.5376, 0.2542", "364.559, 453.166, 16.5124, 0.2796", "363.873, 454.082, 16.4872, 0.3304", "363.204, 455.008, 16.5256, 0.3304", "362.616, 455.975, 16.9092, 0.3304", "362.028, 456.944, 17.2925, 0.2796", "361.44, 457.914, 17.6761, 0.2542", "360.665, 458.715, 17.8458, 0.2288", "359.731, 459.375, 17.8312, 0.2288", "358.795, 460.034, 17.8167, 0.2288", "357.86, 460.693, 17.8018, 0.2288", "356.888, 461.289, 17.794, 0.2288", "355.863, 461.797, 17.7957, 0.2542", "354.918, 462.392, 17.7965, 0.2796", "354.336, 463.376, 17.7948, 0.305", "353.753, 464.361, 17.7934, 0.305", "353.171, 465.346, 17.7918, 0.3814", "352.788, 466.408, 17.8114, 0.4576", "352.276, 467.274, 17.8268, 0.5084", "351.178, 467.592, 17.7996, 0.4068", "350.17, 468.054, 17.7764, 0.3304", "349.41, 468.91, 17.7621, 0.2796", "348.65, 469.764, 17.7481, 0.3304", "347.889, 470.619, 17.7341, 0.3304", "347.099, 471.437, 17.724, 0.356", "346.097, 471.987, 17.7433, 0.356", "345.095, 472.538, 17.7626, 0.3814", "344.091, 473.089, 17.782, 0.356", "343.089, 473.64, 17.8013, 0.3304", "342.03, 474.058, 17.81, 0.3304", "340.938, 474.402, 17.8128, 0.4068", "339.847, 474.746, 17.8158, 0.483", "338.748, 475.056, 17.8206, 0.5592", "337.633, 475.319, 17.8276, 0.5848", "336.548, 475.334, 17.8217, 0.5848", "335.517, 474.839, 17.7895, 0.5084", "334.486, 474.342, 17.7573, 0.3814", "333.351, 474.277, 17.7797, 0.305", "332.207, 474.246, 17.8069, 0.305", "331.076, 474.127, 17.8016, 0.3814", "329.967, 473.846, 17.7377, 0.4068", "328.863, 473.659, 17.5862, 0.4068", "327.779, 473.935, 17.0064, 0.3814", "326.693, 474.211, 16.4265, 0.3814", "325.601, 474.275, 16.0434, 0.356", "324.492, 473.99, 15.9886, 0.305", "323.357, 473.955, 15.9751, 0.2542", "322.213, 473.988, 15.9729, 0.2796", "321.072, 474.014, 15.9376, 0.3814", "319.968, 473.924, 15.2362, 0.5338", "318.864, 473.832, 14.5345, 0.6102", "317.761, 473.742, 13.8331, 0.6102", "316.687, 473.911, 13.4464, 0.5084", "315.65, 474.395, 13.44, 0.483", "314.614, 474.879, 13.4333, 0.5084", "314.097, 475.73, 14.8036, 0.5848", "313.522, 476.55, 15.9981, 0.5338", "312.552, 477.157, 16.0093, 0.4068", "311.582, 477.764, 16.0208, 0.2796", "310.612, 478.371, 16.0322, 0.2796", "309.649, 478.985, 16.044, 0.3304", "308.891, 479.842, 16.0572, 0.3814", "307.841, 480.097, 15.6918, 0.3814", "306.718, 480.2, 15.2306, 0.3814", "305.594, 480.306, 14.7731, 0.3814", "304.529, 480.726, 14.7476, 0.3304", "303.465, 481.145, 14.7218, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999795,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "376.677, 435.807, 19.4631, 0.4576", "375.609, 436.192, 19.154, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999795
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "386.678, 428.991, 15.223, 0.5848", "387.735, 428.572, 15.12, 0.7626", "388.879, 428.542, 15.1192, 0.8898", "390.023, 428.543, 15.1147, 0.8898", "391.167, 428.549, 15.0844, 0.8644", "392.305, 428.596, 14.9033, 0.8898", "393.401, 428.806, 14.3833, 0.8898", "394.501, 428.994, 14.9444, 0.839", "395.576, 428.968, 15.8962, 0.661", "396.609, 428.838, 16.8496, 0.5592", "397.626, 428.429, 16.1241, 0.5338", "398.475, 427.901, 14.8436, 0.6102", "399.19, 427.061, 14.0991, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999795
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "377.674, 422.486, 11.8664, 0.9152", "377.224, 421.437, 11.7611, 1.0932", "376.958, 420.325, 11.7614, 1.1694", "377.014, 419.182, 11.7698, 1.144" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999999999999795
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "391.376, 457.332, 13.599, 1.0", "397.217, 471.148, 13.599, 1.0", "403.058, 484.964, 13.599, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "380.319, 421.946, 19.994, 1.144", "379.799, 421.723, 19.899, 0.8898", "378.928, 421.18, 19.88, 0.788", "378.142, 420.43, 19.88, 0.6864", "377.102, 419.98, 19.88, 0.6864", "376.446, 419.062, 19.88, 0.7372", "375.861, 418.09, 19.88, 0.8136", "375.319, 417.091, 19.88, 0.7372", "375.118, 415.973, 19.88, 0.661", "375.118, 414.829, 19.88, 0.6102", "375.03, 413.696, 19.88, 0.6864", "374.49, 412.693, 19.88, 0.661", "374.093, 411.633, 19.88, 0.5338", "374.088, 410.49, 19.88, 0.356", "374.023, 409.362, 19.88, 0.2542", "373.503, 408.993, 21.56, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "380.319, 421.946, 19.994, 1.144", "380.157, 422.048, 20.6368, 0.9152", "379.587, 422.406, 22.8998, 0.5848", "380.059, 423.064, 23.5234, 0.4068", "380.984, 423.535, 23.8689, 0.4068", "382.055, 423.44, 24.8217, 0.6102", "383.12, 423.607, 25.307, 0.7372", "384.17, 424.053, 25.3915, 0.7372", "385.184, 424.537, 25.9185, 0.5848", "386.197, 425.021, 26.4454, 0.4576", "387.211, 425.506, 26.9721, 0.4068", "388.27, 425.934, 26.9976, 0.5084", "389.333, 426.36, 26.9962, 0.661", "390.395, 426.785, 26.9948, 0.9152" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "375.609, 436.192, 19.154, 0.4576", "374.661, 436.693, 17.2735, 0.483", "374.159, 437.5, 15.7864, 0.5592", "373.788, 438.527, 15.0058, 0.6102", "373.491, 439.571, 14.1204, 0.6356", "372.807, 440.354, 13.004, 0.5592", "371.809, 440.861, 12.4942, 0.5848", "370.705, 440.996, 11.8675, 0.6102", "369.621, 441.346, 12.0576, 0.6864", "368.559, 441.646, 12.7901, 0.6356", "367.63, 442.309, 12.8794, 0.5848", "366.596, 442.799, 12.8825, 0.5592", "365.502, 443.133, 12.896, 0.6102", "364.359, 443.175, 12.9805, 0.6864" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "375.609, 436.192, 19.154, 0.4576", "375.589, 437.24, 19.5163, 0.483", "375.66, 438.368, 19.1215, 0.4576", "375.963, 439.456, 18.7076, 0.4576", "376.024, 440.585, 19.0795, 0.483", "375.984, 441.704, 18.517, 0.5338", "375.722, 442.817, 18.5007, 0.661", "375.623, 443.956, 18.6306, 0.9152" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "399.19, 427.061, 14.0991, 0.6864", "399.161, 426.601, 16.4209, 0.5592", "399.519, 425.617, 16.6729, 0.5084", "400.432, 425.062, 17.6781, 0.5084", "400.411, 423.971, 17.8016, 0.4576", "400.593, 422.948, 18.1653, 0.4576", "401.311, 422.168, 19.1565, 0.3814", "402.186, 421.888, 20.8236, 0.356", "402.618, 421.063, 21.7896, 0.2796", "402.831, 419.968, 22.4067, 0.305", "403.476, 419.156, 22.643, 0.356", "404.452, 418.559, 22.5896, 0.483", "405.378, 418.031, 23.1344, 0.5084", "406.206, 417.634, 24.803, 0.5338", "407.177, 417.318, 25.6525, 0.483", "408.297, 417.082, 25.6584, 0.483", "409.369, 416.71, 25.6617, 0.4068", "410.389, 416.194, 25.6626, 0.3304", "410.329, 415.37, 26.931, 0.2542", "410.017, 414.475, 28.4959, 0.2288", "410.074, 413.658, 29.6117, 0.2288", "411.034, 413.035, 29.6346, 0.2796", "411.993, 412.413, 29.6579, 0.3304", "412.96, 411.837, 29.8222, 0.3814", "413.979, 411.572, 30.9184, 0.3304", "414.997, 411.307, 32.0146, 0.305", "416.017, 411.042, 33.1106, 0.2796", "416.811, 411.731, 33.9035, 0.305", "417.646, 412.341, 34.5181, 0.2796", "418.773, 412.145, 34.4453, 0.305", "419.319, 411.4, 34.4126, 0.3814", "419.452, 410.264, 34.4078, 0.483", "419.895, 409.32, 35.4178, 0.483", "420.39, 408.409, 36.6013, 0.3814", "420.971, 407.663, 37.7014, 0.2796", "422.065, 407.889, 38.3088, 0.2288", "423.159, 408.115, 38.9161, 0.2288", "424.252, 408.342, 39.5237, 0.2288", "425.346, 408.568, 40.131, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "399.19, 427.061, 14.0991, 0.6864", "400.225, 426.635, 14.2635, 0.9152" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "377.014, 419.182, 11.7698, 1.144", "377.307, 419.154, 11.1754, 0.839", "378.186, 419.07, 9.3934, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "377.014, 419.182, 11.7698, 1.144", "377.422, 418.096, 11.8412, 0.966", "378.101, 417.204, 12.3959, 0.9406", "377.907, 416.119, 12.8542, 0.8898", "377.817, 414.98, 12.88, 0.8644", "377.559, 413.866, 12.88, 0.8644", "377.4, 412.733, 12.8803, 0.8898", "377.328, 411.592, 12.8817, 0.9152", "376.972, 410.506, 12.8895, 0.9406", "376.512, 409.459, 12.9343, 0.966", "376.077, 408.409, 13.2392, 0.9914", "375.381, 407.559, 14.0059, 0.966", "374.797, 406.581, 14.2694, 0.9152" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "373.503, 408.993, 21.56, 0.2288", "373.11, 408.907, 22.9788, 0.4068", "372.473, 408.767, 25.2787, 0.3814", "371.798, 409.268, 26.1442, 0.356", "371.042, 409.832, 26.3144, 0.305", "370.098, 409.29, 27.1782, 0.356", "369.188, 409.066, 27.8569, 0.4576", "368.392, 409.886, 27.928, 0.5338", "367.496, 409.824, 28.9005, 0.5592", "366.563, 409.433, 30.21, 0.483", "365.664, 409.001, 31.4896, 0.4576", "365.192, 408.024, 32.3823, 0.4068", "364.722, 407.048, 33.2749, 0.4322", "364.252, 406.071, 34.1676, 0.4068", "363.781, 405.094, 35.0599, 0.3814", "363.282, 404.119, 35.7896, 0.305", "362.671, 403.152, 35.8823, 0.2542", "362.059, 402.187, 35.975, 0.2288", "361.448, 401.22, 36.0679, 0.2542", "360.836, 400.254, 36.1606, 0.2796", "360.374, 399.227, 36.2295, 0.3814", "360.14, 398.107, 36.2614, 0.4322", "359.47, 397.224, 36.5806, 0.483", "358.697, 396.396, 36.9676, 0.3814", "357.923, 395.568, 37.3542, 0.305", "357.15, 394.74, 37.7409, 0.2288", "356.377, 393.911, 38.1276, 0.2542", "355.603, 393.083, 38.5143, 0.2796", "354.83, 392.256, 38.901, 0.305", "354.349, 391.22, 38.906, 0.2796", "353.879, 390.177, 38.8965, 0.305", "353.409, 389.134, 38.887, 0.3304", "352.94, 388.091, 38.8774, 0.3814", "352.47, 387.047, 38.8679, 0.3814", "352.001, 386.004, 38.8584, 0.3814", "351.281, 385.136, 38.8629, 0.3814", "350.521, 384.305, 39.0334, 0.3304", "350.003, 383.352, 39.9266, 0.305", "349.485, 382.399, 40.8198, 0.2796", "348.968, 381.446, 41.7133, 0.305", "347.93, 381.143, 41.883, 0.2796", "346.802, 380.951, 41.9283, 0.2542", "345.674, 380.759, 41.974, 0.2288", "344.747, 380.115, 41.9866, 0.2288", "343.846, 379.41, 41.995, 0.2288", "343.704, 378.563, 41.9815, 0.2288", "343.772, 377.623, 42.7364, 0.2288", "343.389, 376.72, 44.1784, 0.2288", "343.005, 375.818, 45.6204, 0.2288", "342.622, 374.915, 47.0627, 0.2542", "341.908, 374.174, 47.6641, 0.305", "340.949, 373.552, 47.6384, 0.3814", "339.989, 372.929, 47.6129, 0.4576" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "373.503, 408.993, 21.56, 0.2288", "373.319, 408.588, 21.56, 0.3814", "372.498, 407.898, 21.56, 0.3304", "372.068, 406.875, 21.56, 0.2796", "371.242, 406.107, 21.56, 0.2288", "370.567, 405.4, 21.56, 0.2542", "369.938, 404.451, 21.56, 0.2796", "369.366, 403.483, 21.56, 0.356", "368.354, 403.054, 21.56, 0.4576", "367.211, 403.022, 21.56, 0.5848", "366.756, 402.097, 21.56, 0.6102", "366.466, 400.994, 21.56, 0.5592", "365.976, 399.992, 21.744, 0.5084", "365.288, 399.137, 22.3854, 0.5848", "364.343, 398.517, 22.4, 0.6356", "363.396, 397.881, 22.4, 0.661", "362.426, 397.277, 22.4, 0.5338", "361.38, 396.82, 22.4, 0.5084", "360.352, 396.343, 22.4, 0.4322", "359.364, 395.809, 22.4, 0.4322", "358.347, 395.344, 22.4, 0.3304", "357.554, 394.621, 22.4, 0.2796", "356.649, 394.165, 22.4, 0.2796", "355.959, 393.258, 22.4, 0.3814", "355.419, 392.252, 22.4, 0.5084", "354.624, 391.446, 22.4, 0.5592", "353.925, 390.547, 22.4, 0.5338", "353.151, 389.723, 22.4, 0.5084", "352.909, 388.62, 22.4, 0.5084", "351.889, 388.325, 22.4, 0.5338", "350.933, 387.701, 22.4, 0.483", "350.228, 386.802, 22.4, 0.4322", "349.356, 386.065, 22.4, 0.3814", "348.692, 385.134, 22.4, 0.4068", "348.044, 384.225, 22.4, 0.4322", "347.318, 383.425, 22.4, 0.483", "346.802, 382.415, 22.4, 0.5084", "345.856, 381.809, 22.4, 0.5084", "344.832, 381.41, 22.4, 0.483", "343.706, 381.248, 22.4, 0.4322", "342.762, 380.629, 22.4, 0.4576", "341.987, 379.803, 22.4, 0.4322", "341.195, 378.991, 22.4, 0.4322", "340.536, 378.066, 22.4, 0.3304", "340.284, 376.955, 22.4, 0.2796", "340.108, 375.851, 22.2776, 0.2288", "339.608, 374.833, 22.12, 0.2288", "338.909, 373.975, 22.12, 0.2542", "338.123, 373.174, 22.12, 0.3304", "337.626, 372.147, 22.12, 0.4576", "337.03, 371.18, 22.12, 0.5848", "336.786, 370.074, 22.12, 0.6356", "335.939, 369.388, 22.3793, 0.5848", "335.6, 368.302, 22.4, 0.4576", "335.246, 367.215, 22.4, 0.3304", "334.988, 366.104, 22.4, 0.2796", "334.362, 365.171, 22.4, 0.2796", "333.898, 364.136, 22.4, 0.305", "333.525, 363.059, 22.4, 0.2796", "333.253, 361.967, 22.4, 0.2542", "333.247, 360.823, 22.4, 0.2288", "333.247, 359.679, 22.4, 0.2288", "333.16, 358.566, 22.5714, 0.2288", "332.711, 357.577, 23.4514, 0.2288", "332.261, 356.588, 24.3312, 0.2288", "331.819, 355.559, 24.64, 0.2288", "331.531, 354.545, 24.64, 0.2288", "331.531, 353.401, 24.64, 0.2288", "331.833, 352.378, 24.64, 0.2288", "331.989, 351.266, 24.64, 0.2288", "331.989, 350.122, 24.64, 0.2288", "331.989, 348.978, 24.64, 0.2288", "331.989, 347.834, 24.64, 0.2288", "331.989, 346.69, 24.64, 0.2288", "331.989, 345.546, 24.64, 0.2542", "331.682, 344.464, 24.64, 0.2796", "331.23, 343.429, 24.64, 0.305", "330.742, 342.406, 24.64, 0.2796", "330.684, 341.264, 24.64, 0.2542", "330.286, 340.204, 24.64, 0.2288", "329.967, 339.109, 24.64, 0.2288", "329.625, 338.017, 24.64, 0.2288", "329.488, 336.883, 24.64, 0.2288", "329.471, 335.74, 24.64, 0.2288", "329.203, 334.659, 24.64, 0.2288", "328.933, 333.56, 24.64, 0.2288", "328.636, 332.456, 24.64, 0.2288", "328.098, 331.483, 24.64, 0.2288", "327.358, 330.734, 24.64, 0.2288", "326.966, 329.662, 24.64, 0.2288", "326.591, 328.581, 24.64, 0.2288", "326.336, 327.476, 24.64, 0.2288", "325.694, 326.599, 24.64, 0.2288", "325.419, 325.499, 24.64, 0.2288", "324.833, 324.517, 24.64, 0.2542", "324.014, 323.731, 24.64, 0.2796", "323.137, 323.039, 24.64, 0.305", "322.556, 322.072, 24.64, 0.2796", "321.848, 321.217, 24.64, 0.2796", "321.335, 320.199, 24.64, 0.356", "320.982, 319.125, 24.64, 0.4576", "320.301, 318.215, 24.64, 0.5084", "319.5, 317.442, 24.64, 0.4068", "319.176, 316.43, 24.64, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "390.395, 426.785, 26.9948, 0.9152", "391.543, 426.635, 27.4613, 0.661", "392.683, 426.728, 27.4112, 0.5084", "393.823, 426.821, 27.361, 0.4322", "394.963, 426.914, 27.3109, 0.3304", "396.103, 427.007, 27.2608, 0.2796", "397.243, 427.1, 27.2107, 0.2288", "398.383, 427.194, 27.1608, 0.2288", "399.523, 427.286, 27.1107, 0.2288", "400.663, 427.379, 27.0606, 0.2288", "401.766, 427.12, 27.041, 0.2542", "402.862, 426.792, 27.0276, 0.2796", "403.958, 426.463, 27.0141, 0.3304", "405.053, 426.133, 27.0004, 0.3304", "406.182, 425.961, 26.9878, 0.356", "407.317, 425.819, 26.9752, 0.3814", "408.43, 425.59, 26.9872, 0.483", "409.491, 425.165, 27.0564, 0.5848", "410.579, 424.816, 27.0875, 0.6102", "411.682, 424.514, 27.0942, 0.5338", "412.808, 424.349, 27.1606, 0.3814", "413.948, 424.287, 27.2726, 0.356", "415.09, 424.225, 27.3848, 0.3814", "416.232, 424.163, 27.4968, 0.4576", "417.129, 424.746, 27.4781, 0.3814", "417.941, 425.551, 27.414, 0.305", "418.842, 426.178, 27.3717, 0.2542", "419.974, 426.348, 27.3848, 0.2796", "421.105, 426.517, 27.3986, 0.356", "422.237, 426.688, 27.412, 0.4068", "423.367, 426.857, 27.4254, 0.483", "424.437, 427.132, 27.4341, 0.4576", "425.133, 428.039, 27.4145, 0.4322", "426.1, 428.475, 27.4022, 0.356", "427.047, 428.891, 27.4053, 0.3814", "427.594, 429.896, 27.431, 0.4068", "428.229, 430.838, 27.4492, 0.4576", "428.999, 431.685, 27.456, 0.4068", "429.768, 432.531, 27.4624, 0.3304", "430.571, 433.336, 27.4694, 0.2542", "431.574, 433.886, 27.4806, 0.2288", "432.577, 434.435, 27.4915, 0.2288", "433.574, 434.996, 27.4957, 0.2288", "434.536, 435.616, 27.4663, 0.2288", "435.497, 436.235, 27.4372, 0.2542", "436.459, 436.855, 27.4081, 0.2796", "437.523, 437.204, 27.3969, 0.356", "438.653, 437.379, 27.3974, 0.3814", "439.783, 437.554, 27.3977, 0.4322", "440.915, 437.73, 27.3983, 0.4068", "442.039, 437.806, 27.4106, 0.4068", "443.14, 437.495, 27.4697, 0.356", "444.24, 437.184, 27.529, 0.356", "445.22, 437.739, 27.4921, 0.3814", "446.193, 438.34, 27.4498, 0.4322", "447.259, 438.706, 27.1502, 0.4576", "448.353, 439.004, 26.7761, 0.4576", "449.447, 439.303, 26.402, 0.4576", "450.526, 439.637, 25.9896, 0.4322", "451.561, 440.075, 25.4632, 0.4068", "452.595, 440.513, 24.9368, 0.3814", "453.629, 440.953, 24.4101, 0.3814", "454.741, 440.98, 24.7772, 0.3814", "455.865, 440.941, 25.2921, 0.4576" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "390.395, 426.785, 26.9948, 0.9152", "390.484, 427.03, 27.1681, 0.5338", "390.861, 428.068, 27.9023, 0.356", "391.239, 429.105, 28.6364, 0.305", "391.163, 430.222, 28.7574, 0.3814", "391.227, 431.333, 28.7602, 0.5084", "391.607, 432.411, 28.761, 0.5338", "391.487, 433.515, 28.814, 0.4576", "391.812, 434.58, 29.2421, 0.356", "392.196, 435.64, 29.7072, 0.356", "392.582, 436.7, 30.172, 0.4068", "392.687, 437.76, 30.4772, 0.4322", "392.252, 438.818, 30.4752, 0.356", "392.405, 439.579, 30.4954, 0.2796", "393.515, 439.853, 30.5519, 0.2288", "394.625, 440.129, 30.6085, 0.2288" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "364.359, 443.175, 12.9805, 0.6864", "364.192, 444.364, 11.6544, 0.5084", "363.968, 445.431, 11.5396, 0.483", "363.046, 446.077, 11.594, 0.4068", "362.551, 447.073, 10.9441, 0.3814", "362.055, 448.069, 10.2945, 0.3814", "361.559, 449.066, 9.6446, 0.4322", "361.28, 450.153, 9.4223, 0.4322", "361.107, 451.283, 9.4119, 0.3814", "360.941, 452.413, 9.3817, 0.3814", "361.124, 453.467, 8.3927, 0.4322", "361.039, 454.502, 7.7232, 0.5338", "360.521, 455.516, 7.628, 0.5338", "360.271, 456.632, 7.6502, 0.4576", "360.02, 457.748, 7.672, 0.3304", "359.745, 458.852, 7.6936, 0.2796", "358.992, 459.713, 7.7109, 0.305", "358.884, 460.745, 7.6759, 0.3814", "359.112, 461.866, 7.6138, 0.4068", "359.304, 462.988, 7.7935, 0.3814", "359.358, 464.092, 8.0461, 0.356", "358.792, 465.086, 8.0346, 0.3814", "358.298, 466.106, 8.0276, 0.4576", "358.111, 467.235, 8.0385, 0.483", "357.954, 468.364, 8.0486, 0.483", "358.085, 469.5, 8.0503, 0.483", "358.215, 470.637, 8.0522, 0.483", "358.344, 471.773, 8.0542, 0.5084", "357.89, 472.748, 7.436, 0.4576", "357.315, 473.687, 6.6884, 0.4576", "357.427, 474.723, 6.4044, 0.4068", "357.818, 475.798, 6.3084, 0.4576" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "364.359, 443.175, 12.9805, 0.6864", "363.443, 443.132, 13.1082, 0.6102", "362.347, 442.866, 12.7739, 0.6356", "361.293, 442.515, 12.1142, 0.6356", "360.263, 442.042, 11.7972, 0.6356", "359.229, 441.554, 11.7594, 0.6102", "358.145, 441.192, 11.7566, 0.6102", "357.061, 440.83, 11.7387, 0.6102", "356.009, 440.382, 11.6357, 0.5848", "355.021, 439.851, 11.1152, 0.5338", "354.087, 439.2, 10.9418, 0.4322", "353.197, 438.483, 11.0009, 0.356", "352.406, 437.773, 10.0176, 0.305", "351.563, 437.082, 10.7072, 0.305", "350.51, 436.74, 11.375, 0.305", "349.419, 436.427, 11.1194, 0.356", "348.361, 436.066, 11.6981, 0.4576", "347.338, 435.557, 11.8126, 0.5848", "346.36, 434.975, 12.1069, 0.661", "345.554, 434.218, 12.8243, 0.6356", "344.742, 433.414, 12.8808, 0.5338", "343.915, 432.623, 12.8834, 0.3814", "343.03, 431.899, 12.8957, 0.3304", "341.97, 431.47, 12.9867, 0.356", "341.06, 430.826, 13.606, 0.483", "340.144, 430.157, 13.9395, 0.5084", "339.152, 429.605, 13.6562, 0.5084", "338.271, 429.049, 12.514, 0.4322", "337.252, 428.625, 11.814, 0.4068", "336.273, 428.034, 11.7953, 0.4068", "335.237, 427.564, 11.9876, 0.4576", "334.236, 427.122, 12.7607, 0.5338", "333.156, 426.746, 12.88, 0.5848", "332.065, 426.4, 12.88, 0.5848", "330.973, 426.069, 12.88, 0.5338", "329.981, 425.506, 12.8806, 0.4576", "329.112, 424.765, 12.8825, 0.3814", "328.131, 424.283, 12.8951, 0.3814", "327.032, 424.593, 12.9844, 0.4068", "325.961, 424.659, 13.3857, 0.5084", "325.005, 424.107, 14.0398, 0.5338", "323.969, 423.647, 14.338, 0.5848", "322.975, 423.135, 14.891, 0.5338", "322.043, 422.49, 15.0436, 0.5084", "321.26, 421.664, 15.0562, 0.4322", "320.225, 421.493, 15.2337, 0.483", "319.168, 421.113, 15.598, 0.5338", "318.17, 420.611, 15.762, 0.661", "317.101, 420.316, 15.3073, 0.6864", "315.967, 420.222, 15.0814, 0.7626", "314.863, 419.976, 14.8666, 0.7626", "313.82, 419.557, 14.3685, 0.788", "312.844, 419.003, 14.007, 0.7372", "311.945, 418.297, 13.9387, 0.7372", "310.996, 417.68, 13.8138, 0.7372", "309.958, 417.221, 13.9328, 0.8136", "308.951, 416.733, 14.495, 0.8136", "307.993, 416.171, 15.1631, 0.8136", "307.005, 415.678, 15.8326, 0.7372", "305.965, 415.249, 16.2148, 0.7626", "304.9, 414.84, 16.2842, 0.8136", "303.82, 414.483, 16.5318, 0.8136", "302.746, 414.114, 16.613, 0.6864", "301.667, 413.745, 16.3741, 0.483", "300.589, 413.376, 16.135, 0.4068", "299.487, 413.099, 16.0101, 0.4322", "298.354, 412.944, 16.0317, 0.5338", "297.22, 412.793, 16.053, 0.5848", "296.095, 412.993, 16.0588, 0.6102", "294.968, 413.194, 16.0647, 0.5592", "293.841, 413.39, 16.0602, 0.483", "292.713, 413.581, 16.0507, 0.4322", "291.585, 413.773, 16.0412, 0.483", "290.457, 413.966, 16.0317, 0.5848", "289.474, 414.503, 16.0454, 0.6864", "288.545, 415.171, 16.0678, 0.7118", "287.583, 415.766, 16.0815, 0.6864", "286.469, 416.026, 16.0563, 0.5848", "285.356, 416.287, 16.0311, 0.5084", "284.237, 416.239, 16.0132, 0.483", "283.115, 416.014, 15.9998, 0.483", "282.007, 416.085, 16.0157, 0.5592", "280.913, 416.417, 16.0574, 0.6356", "279.792, 416.598, 16.088, 0.8136", "278.65, 416.653, 16.109, 0.8644", "277.659, 417.172, 16.1132, 0.839", "276.652, 417.663, 16.1081, 0.661", "275.522, 417.838, 16.0916, 0.5592", "274.391, 418.012, 16.0751, 0.483", "273.268, 418.149, 16.1039, 0.483", "272.299, 417.643, 16.9274, 0.3814", "271.331, 417.138, 17.7512, 0.3814", "270.36, 416.632, 18.5749, 0.4322", "269.368, 416.124, 19.0515, 0.5592", "268.345, 415.613, 19.059, 0.5338", "267.323, 415.099, 19.0666, 0.4068", "266.408, 414.413, 19.0658, 0.305", "265.493, 413.727, 19.0649, 0.2796", "265.062, 412.796, 19.08, 0.356", "265.06, 411.652, 19.1089, 0.3814", "264.739, 410.743, 19.1349, 0.4068", "263.648, 410.396, 19.1545, 0.3304", "262.686, 409.855, 19.1377, 0.2796", "261.931, 408.995, 19.0616, 0.2796", "261.483, 407.996, 19.0355, 0.3814", "261.331, 406.862, 19.0576, 0.5338", "261.179, 405.729, 19.0798, 0.6864" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "375.623, 443.956, 18.6306, 0.9152", "375.094, 444.402, 18.811, 0.5338", "374.174, 445.045, 19.3494, 0.356", "373.253, 445.688, 19.8881, 0.2542", "372.464, 446.393, 20.3616, 0.2288", "372.568, 447.533, 20.3879, 0.2288", "372.428, 448.593, 20.4064, 0.2796", "371.68, 449.459, 20.4047, 0.3814", "370.932, 450.324, 20.403, 0.483", "370.161, 451.132, 20.9292, 0.5338", "369.384, 451.92, 21.637, 0.483", "368.606, 452.707, 22.3446, 0.4576", "367.828, 453.495, 23.0524, 0.4322", "367.772, 454.635, 23.0376, 0.4576", "367.72, 455.778, 23.0174, 0.4322", "367.67, 456.921, 22.9972, 0.356", "367.87, 458.019, 23.0045, 0.2796", "368.314, 459.073, 23.0378, 0.2288", "367.689, 460.002, 23.0208, 0.2288", "367.012, 460.926, 23.0017, 0.2288", "366.336, 461.849, 22.9824, 0.2796", "366.337, 462.985, 22.9981, 0.3304", "366.361, 464.128, 23.0149, 0.4068", "366.387, 465.272, 23.0317, 0.4322", "366.392, 466.413, 23.1045, 0.4576", "366.295, 467.544, 23.4758, 0.4322", "366.198, 468.673, 23.8468, 0.356", "366.101, 469.803, 24.2178, 0.305", "365.659, 470.835, 24.3303, 0.305", "365.335, 471.862, 24.3516, 0.3814", "365.636, 472.966, 24.3603, 0.4322", "365.752, 474.078, 24.376, 0.4576", "365.552, 475.205, 24.4037, 0.4322", "365.35, 476.331, 24.4314, 0.3814", "364.51, 477.051, 24.411, 0.3304", "363.577, 477.711, 24.3835, 0.305", "363.515, 478.849, 24.3838, 0.305", "363.457, 479.988, 24.3846, 0.2796", "362.69, 480.837, 24.4138, 0.2542", "361.978, 481.722, 24.4345, 0.2288", "361.485, 482.754, 24.4219, 0.2288", "360.99, 483.786, 24.4096, 0.2542", "360.489, 484.81, 24.519, 0.305", "359.969, 485.81, 25.0001, 0.356", "359.448, 486.81, 25.4811, 0.356", "358.928, 487.809, 25.9622, 0.305", "359.031, 488.883, 26.1066, 0.2542", "359.349, 489.982, 26.1352, 0.2288", "359.492, 491.09, 26.3469, 0.2288", "359.381, 492.211, 26.8288, 0.2288", "359.269, 493.333, 27.3106, 0.2288", "359.156, 494.454, 27.7925, 0.2542", "359.044, 495.575, 28.2744, 0.2796", "358.916, 496.696, 28.6992, 0.305", "358.67, 497.813, 28.7112, 0.2796", "358.424, 498.93, 28.7232, 0.2542", "358.178, 500.048, 28.7353, 0.2288", "357.932, 501.165, 28.7473, 0.2288", "357.839, 502.28, 29.269, 0.2288", "357.772, 503.394, 29.8816, 0.2288", "357.705, 504.509, 30.494, 0.2288", "357.638, 505.623, 31.1066, 0.2288", "357.384, 506.704, 31.4241, 0.2288", "356.92, 507.75, 31.407, 0.2288", "356.456, 508.795, 31.3902, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "375.623, 443.956, 18.6306, 0.9152", "375.679, 444.143, 18.8166, 0.7626", "375.915, 445.172, 19.8475, 0.6102", "375.825, 446.23, 20.8065, 0.5084", "375.549, 447.31, 21.3956, 0.4322", "375.313, 448.369, 22.16, 0.4322", "374.899, 449.377, 22.7772, 0.483", "374.947, 450.496, 22.757, 0.6102", "375.321, 451.564, 22.3583, 0.661", "375.735, 452.604, 22.4022, 0.5848", "375.952, 453.639, 23.0051, 0.4322", "375.941, 454.771, 23.0588, 0.3814", "376.044, 455.91, 23.0731, 0.4068", "376.036, 457.053, 23.0807, 0.4576", "376.004, 458.197, 23.0871, 0.4068", "375.971, 459.34, 23.0933, 0.356", "376.05, 460.444, 23.7692, 0.305", "376.138, 461.544, 24.5073, 0.305", "375.98, 462.636, 24.8441, 0.3304", "375.619, 463.721, 24.8492, 0.3304", "375.257, 464.807, 24.8542, 0.3304", "374.915, 465.873, 25.2106, 0.2796", "374.606, 466.911, 26.1162, 0.2542", "374.297, 467.949, 27.0214, 0.2288", "374.065, 468.987, 27.8368, 0.2288", "374.509, 470.042, 27.8673, 0.2288", "374.662, 471.114, 27.895, 0.2542", "374.349, 472.214, 27.9188, 0.2796", "374.034, 473.314, 27.9423, 0.305", "373.721, 474.413, 27.9661, 0.305", "374.129, 475.388, 27.9115, 0.305", "374.523, 476.376, 27.8589, 0.3304", "374.271, 477.466, 27.8746, 0.3304", "373.127, 477.467, 27.8986, 0.356", "372.272, 477.862, 27.921, 0.3304", "371.927, 478.953, 27.9401, 0.3304", "371.642, 479.991, 28.5552, 0.2796", "371.437, 480.964, 29.941, 0.2796", "371.234, 481.938, 31.3267, 0.2796", "371.354, 482.865, 32.2722, 0.305", "372.131, 483.705, 32.3263, 0.2796", "372.56, 484.574, 33.5289, 0.2542", "372.861, 485.454, 35.159, 0.2288", "373.082, 486.435, 36.1906, 0.2542", "373.177, 487.574, 36.2583, 0.2796", "373.54, 488.574, 36.4652, 0.305", "374.385, 489.322, 36.9236, 0.2796", "374.976, 490.265, 37.1613, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "425.346, 408.568, 40.131, 0.2288", "425.608, 408.57, 39.8972, 0.356", "426.682, 408.581, 38.9365, 0.356", "427.778, 408.56, 38.8128, 0.305", "428.892, 408.514, 39.4338, 0.2542", "430.007, 408.467, 40.0548, 0.2288", "431.121, 408.421, 40.6762, 0.2288", "432.235, 408.374, 41.2972, 0.2288", "433.351, 408.327, 41.9182, 0.2288", "434.465, 408.281, 42.5393, 0.2288", "435.579, 408.234, 43.1606, 0.2288", "436.656, 408.233, 43.9603, 0.2288", "437.55, 408.452, 45.6218, 0.2288", "438.445, 408.67, 47.283, 0.2288", "439.34, 408.887, 48.9446, 0.2288", "440.225, 409.205, 50.3062, 0.2288", "441.069, 409.978, 50.2967, 0.2288", "441.914, 410.75, 50.2872, 0.2796", "442.961, 410.984, 50.3154, 0.3304", "444.096, 410.992, 50.4554, 0.4322", "445.166, 411.208, 51.2926, 0.4322", "446.236, 411.425, 52.1301, 0.4322", "447.306, 411.641, 52.9673, 0.3304", "448.376, 411.857, 53.8048, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "425.346, 408.568, 40.131, 0.2288", "425.889, 408.326, 39.8723, 0.5084", "426.917, 407.865, 39.3828, 0.5338", "427.945, 407.405, 38.8931, 0.4576", "428.94, 406.906, 38.4392, 0.3304", "429.534, 405.928, 38.4247, 0.2542", "430.129, 404.95, 38.4098, 0.2288", "430.723, 403.973, 38.3953, 0.2542", "431.317, 402.995, 38.3804, 0.2796", "431.881, 402.004, 38.3242, 0.305", "432.271, 400.934, 38.0338, 0.2796", "432.661, 399.866, 37.7434, 0.2542", "433.287, 398.951, 37.6037, 0.2288", "434.126, 398.173, 37.5992, 0.2288", "434.965, 397.395, 37.5945, 0.2288", "435.746, 396.585, 37.5897, 0.2288", "435.988, 395.466, 37.5813, 0.2288", "436.229, 394.348, 37.5726, 0.2288", "436.471, 393.229, 37.5642, 0.2288", "436.69, 392.107, 37.5595, 0.2288", "436.841, 390.973, 37.5659, 0.2288", "436.992, 389.84, 37.5724, 0.2796", "437.143, 388.705, 37.5788, 0.3814", "437.294, 387.571, 37.5855, 0.483", "437.682, 386.506, 37.5665, 0.5338", "438.16, 385.467, 37.5379, 0.483", "438.638, 384.429, 37.5091, 0.4322", "439.424, 383.6, 37.5595, 0.3304", "440.223, 382.781, 37.6132, 0.2796", "439.773, 381.866, 36.9768, 0.2288", "439.171, 380.939, 36.2561, 0.2288", "438.568, 380.012, 35.5351, 0.2288", "437.635, 379.402, 35.3998, 0.2288", "436.625, 378.865, 35.399, 0.2796", "435.673, 378.281, 35.3993, 0.356", "435.359, 377.181, 35.4077, 0.4322", "434.649, 376.421, 35.3704, 0.4322", "433.61, 375.941, 35.2954, 0.4068", "432.618, 375.374, 35.3895, 0.4576" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "400.225, 426.635, 14.2635, 0.9152", "401.639, 427.03, 14.1498, 0.7372", "402.309, 427.786, 13.1244, 0.7372", "402.864, 428.653, 11.9031, 0.7372", "403.311, 429.637, 11.2, 0.7626", "404.007, 430.525, 11.2, 0.7118", "404.29, 431.609, 11.2, 0.6356", "404.29, 432.754, 11.2, 0.5084", "404.55, 433.851, 11.2, 0.4322", "405.197, 434.791, 11.2, 0.356", "405.927, 435.667, 11.2, 0.3304", "406.231, 436.755, 11.2, 0.305", "406.384, 437.861, 11.2, 0.2796", "406.692, 438.948, 11.2, 0.305", "406.692, 440.092, 11.2, 0.3304", "406.71, 441.234, 11.2, 0.3814", "407.0, 442.336, 11.2, 0.3304", "407.035, 443.475, 11.2, 0.2796", "407.035, 444.619, 11.2, 0.2796", "407.035, 445.754, 10.92, 0.4068", "407.177, 446.882, 10.92, 0.5592", "407.874, 447.715, 10.36, 0.6356", "408.003, 448.828, 10.36, 0.6102", "408.462, 449.817, 9.8725, 0.5338", "408.894, 450.863, 9.8, 0.4576", "408.98, 451.991, 9.8, 0.3814", "408.98, 453.135, 9.8, 0.3304", "408.98, 454.279, 9.8, 0.356", "408.98, 455.423, 9.8, 0.4068", "408.98, 456.567, 9.8, 0.4576", "409.386, 457.624, 9.8, 0.4068", "409.83, 458.678, 9.8, 0.3304", "410.23, 459.723, 9.8, 0.2542", "410.384, 460.85, 9.8, 0.2288", "411.214, 461.387, 9.8, 0.2288", "411.84, 462.202, 9.8, 0.2542", "411.846, 463.335, 9.5124, 0.2796", "412.461, 464.24, 8.8914, 0.356", "413.094, 465.163, 8.68, 0.4322", "413.738, 466.099, 8.68, 0.5848", "414.144, 467.163, 8.68, 0.7118", "414.865, 468.045, 8.68, 0.7626", "415.43, 469.032, 8.68, 0.6864", "415.73, 470.071, 8.68, 0.5084", "415.844, 471.206, 8.68, 0.3814", "415.925, 472.344, 8.68, 0.3304", "415.958, 473.486, 8.68, 0.4068", "415.958, 474.63, 8.68, 0.5084", "416.321, 475.616, 8.68, 0.5592", "417.153, 476.325, 8.68, 0.5084", "418.288, 476.401, 8.68, 0.4322", "418.531, 477.499, 8.68, 0.4068", "418.905, 478.571, 8.68, 0.4322", "419.603, 479.402, 8.68, 0.483", "420.053, 480.425, 8.68, 0.5338", "420.778, 481.219, 8.68, 0.6356", "421.302, 482.233, 8.68, 0.661", "421.773, 483.263, 8.9208, 0.6102", "422.134, 484.344, 8.96, 0.483", "422.727, 485.29, 8.96, 0.4322", "423.365, 486.229, 8.96, 0.4068", "423.762, 487.281, 8.96, 0.4322", "424.332, 488.27, 8.96, 0.4068", "425.034, 489.151, 8.8855, 0.4576", "425.847, 489.855, 8.68, 0.4322", "426.619, 490.582, 8.104, 0.4322", "426.712, 491.691, 7.84, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "400.225, 426.635, 14.2635, 0.9152", "401.364, 425.991, 14.9906, 0.6864", "402.191, 425.228, 14.5183, 0.6864", "402.889, 424.392, 13.68, 0.7626", "403.467, 423.447, 13.0057, 0.8644", "404.021, 422.491, 12.5602, 0.8898", "404.404, 421.564, 11.76, 0.6864" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "378.186, 419.07, 9.3934, 0.6864", "378.745, 419.805, 9.3859, 0.6102", "378.978, 420.793, 9.3926, 0.7372", "378.695, 421.883, 9.4167, 0.788", "378.972, 422.994, 9.4203, 0.788", "379.525, 423.977, 9.4486, 0.6864", "380.182, 424.914, 9.4861, 0.6864" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "378.186, 419.07, 9.3934, 0.6864", "377.948, 418.519, 8.3838, 0.5848", "377.592, 417.657, 6.8191, 0.5592", "378.63, 417.174, 6.8508, 0.5338", "379.697, 416.782, 6.8734, 0.4576", "380.815, 416.535, 6.8813, 0.4576", "381.931, 416.288, 6.8891, 0.483", "383.049, 416.042, 6.8972, 0.483", "384.074, 415.621, 6.8844, 0.4322", "384.908, 414.838, 6.8286, 0.4322", "385.941, 414.351, 6.7995, 0.5338", "386.981, 413.874, 6.7712, 0.6356", "387.81, 413.15, 6.7642, 0.6864", "388.446, 412.199, 6.7768, 0.661", "389.082, 411.249, 6.7894, 0.6102", "389.651, 410.265, 6.8023, 0.5084", "390.019, 409.181, 6.816, 0.4068", "390.4, 408.103, 6.8219, 0.305", "390.832, 407.043, 6.795, 0.2542", "391.263, 405.984, 6.7679, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "374.797, 406.581, 14.2694, 0.9152", "375.829, 406.288, 14.7084, 0.4576", "376.691, 405.904, 15.0704, 0.305", "377.211, 404.959, 15.9984, 0.2288", "377.733, 404.014, 16.9263, 0.2288", "378.292, 403.174, 17.7887, 0.2796", "379.305, 403.514, 17.8338, 0.3304", "380.099, 402.69, 17.8144, 0.4068", "380.892, 401.867, 17.7954, 0.4322", "381.685, 401.043, 17.7761, 0.5084", "382.479, 400.218, 17.7568, 0.5338", "383.259, 399.39, 17.7744, 0.5848", "383.645, 398.409, 18.8692, 0.5848", "384.03, 397.43, 19.9643, 0.6102", "384.416, 396.45, 21.0591, 0.5338", "384.791, 395.467, 22.1337, 0.4068", "384.685, 394.329, 22.1687, 0.3304", "384.577, 393.189, 22.2034, 0.3304", "385.393, 392.533, 22.1906, 0.4576", "386.389, 391.971, 22.1682, 0.483", "387.386, 391.409, 22.1458, 0.5592", "388.356, 390.803, 22.1497, 0.483", "389.318, 390.185, 22.16, 0.4576", "390.281, 389.569, 22.1704, 0.3304", "390.918, 388.672, 22.1687, 0.2796", "391.38, 387.625, 22.1606, 0.2288", "391.841, 386.577, 22.1522, 0.2288", "392.301, 385.53, 22.1441, 0.2542", "393.235, 384.895, 22.349, 0.2796", "394.199, 384.287, 22.5683, 0.305", "395.164, 383.678, 22.7872, 0.2796", "396.128, 383.069, 23.0062, 0.2796", "397.093, 382.461, 23.2252, 0.305", "398.058, 381.852, 23.4444, 0.356", "397.429, 381.093, 23.4489, 0.356", "397.293, 380.215, 23.469, 0.305", "397.887, 379.238, 23.5351, 0.2542", "398.595, 378.395, 23.6919, 0.2288", "399.629, 377.938, 24.108, 0.2288", "400.664, 377.48, 24.5244, 0.2288", "401.698, 377.023, 24.9404, 0.2288", "402.733, 376.566, 25.3565, 0.2288", "403.775, 376.117, 25.6942, 0.2288", "404.842, 375.707, 25.7079, 0.2288", "405.909, 375.295, 25.7219, 0.2288", "406.977, 374.884, 25.7359, 0.2288", "408.073, 374.583, 25.739, 0.2288", "409.208, 374.447, 25.7258, 0.2288", "410.163, 374.913, 25.6992, 0.2288", "410.694, 375.853, 25.6371, 0.2288", "411.314, 376.256, 25.9011, 0.2288", "412.363, 375.884, 26.5446, 0.2288", "413.413, 375.512, 27.1883, 0.2288", "414.462, 375.142, 27.832, 0.2288", "415.6, 375.161, 27.876, 0.2288", "416.744, 375.202, 27.8858, 0.2288", "417.887, 375.245, 27.8956, 0.2796", "419.03, 375.276, 27.9084, 0.3814", "420.174, 375.276, 27.9297, 0.483", "420.714, 374.503, 28.6493, 0.483", "421.061, 373.483, 29.5924, 0.3814", "421.292, 372.555, 30.4699, 0.305", "420.159, 372.714, 30.5679, 0.2796", "420.316, 373.208, 30.5192, 0.305", "421.432, 373.281, 30.9501, 0.305", "422.559, 373.32, 31.4126, 0.3304", "423.687, 373.359, 31.8749, 0.4576" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "374.797, 406.581, 14.2694, 0.9152", "374.508, 405.635, 14.9562, 0.8644", "374.134, 404.558, 15.1018, 0.9152", "373.675, 403.51, 15.0662, 0.9914", "373.047, 402.56, 14.8742, 0.9406", "372.524, 401.585, 14.1831, 0.8644", "372.16, 400.505, 14.0538, 0.7626", "372.45, 399.417, 14.2559, 0.8644", "372.381, 398.341, 15.1416, 1.144" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "394.625, 440.129, 30.6085, 0.2288", "394.441, 440.369, 31.0316, 0.305", "393.912, 440.995, 32.7454, 0.2796", "393.6, 441.139, 35.4161, 0.2542", "393.288, 441.283, 38.0867, 0.2288", "392.975, 441.427, 40.7574, 0.2288", "392.664, 441.571, 43.4277, 0.2288", "392.352, 441.716, 46.0984, 0.2288", "392.521, 442.459, 47.3738, 0.2288", "392.93, 443.5, 47.9528, 0.2288", "393.339, 444.542, 48.5318, 0.2288", "393.748, 445.585, 49.1109, 0.2288", "394.157, 446.626, 49.6899, 0.2288", "394.567, 447.668, 50.2692, 0.2288", "394.975, 448.71, 50.8483, 0.2288", "395.385, 449.751, 51.4273, 0.2288", "395.793, 450.793, 52.0064, 0.2288", "396.203, 451.835, 52.5854, 0.2288", "396.437, 452.896, 53.4388, 0.2288", "396.643, 453.96, 54.3376, 0.2288", "396.849, 455.023, 55.2367, 0.2288", "397.055, 456.086, 56.1358, 0.2288", "397.261, 457.15, 57.0346, 0.2288", "397.467, 458.214, 57.9337, 0.2288", "397.463, 459.18, 59.239, 0.2288", "397.223, 460.034, 61.0036, 0.2288", "396.983, 460.89, 62.7682, 0.2288", "396.741, 461.745, 64.5327, 0.2288", "396.501, 462.6, 66.2973, 0.2288", "396.396, 463.553, 67.7216, 0.2288", "396.435, 464.61, 68.7856, 0.2288", "396.473, 465.669, 69.8499, 0.2288", "396.51, 466.726, 70.9139, 0.2288", "396.548, 467.783, 71.9782, 0.2288", "396.587, 468.841, 73.0422, 0.2288", "396.625, 469.898, 74.1065, 0.2288", "396.02, 470.771, 74.8012, 0.2288", "395.277, 471.604, 75.4166, 0.2288", "394.534, 472.436, 76.0323, 0.2288", "393.791, 473.269, 76.648, 0.2288", "393.049, 474.102, 77.2638, 0.2288", "392.306, 474.935, 77.8795, 0.2288", "391.563, 475.768, 78.4949, 0.2288", "390.758, 476.44, 79.5712, 0.2288", "389.939, 477.074, 80.7607, 0.2288", "389.12, 477.708, 81.9501, 0.2288", "388.301, 478.342, 83.1396, 0.2288", "387.482, 478.976, 84.329, 0.2288", "386.663, 479.608, 85.5184, 0.2288", "385.844, 480.242, 86.7079, 0.2288", "385.023, 480.876, 87.8973, 0.2288", "384.1, 481.274, 88.7099, 0.2288", "382.96, 481.185, 88.7446, 0.2288", "381.819, 481.095, 88.7793, 0.2288", "380.679, 481.006, 88.814, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "394.625, 440.129, 30.6085, 0.2288", "394.48, 441.273, 31.456, 0.3814", "394.342, 442.36, 32.2613, 0.3304", "394.544, 443.412, 32.6785, 0.305", "395.057, 444.434, 32.7376, 0.2796", "395.509, 445.474, 32.9213, 0.305", "395.776, 446.563, 33.4692, 0.3304", "396.043, 447.653, 34.0172, 0.356", "396.465, 448.577, 34.4708, 0.4322", "397.415, 448.887, 34.491, 0.4576", "397.336, 450.028, 34.5108, 0.483", "397.343, 451.146, 34.6167, 0.4068", "397.89, 452.115, 35.2713, 0.3304", "398.438, 453.082, 35.926, 0.2542", "398.986, 454.05, 36.5809, 0.2288", "399.358, 455.063, 37.0717, 0.2288", "399.226, 456.199, 37.0905, 0.2288", "399.613, 457.059, 37.119, 0.2288", "400.629, 457.584, 37.1602, 0.2288", "401.314, 458.418, 37.807, 0.2288", "401.903, 459.339, 38.6263, 0.2288", "402.4, 460.306, 39.2882, 0.2288", "402.56, 461.438, 39.3848, 0.2288", "402.719, 462.569, 39.4817, 0.2288", "402.879, 463.702, 39.5783, 0.2288", "403.039, 464.835, 39.6749, 0.2288", "403.198, 465.966, 39.7715, 0.2288", "403.358, 467.099, 39.8684, 0.2288", "403.517, 468.23, 39.965, 0.2288", "403.678, 469.363, 40.0616, 0.2288", "403.837, 470.495, 40.1582, 0.2288", "403.997, 471.627, 40.255, 0.2288", "404.947, 472.224, 40.2461, 0.2288", "405.434, 473.112, 40.2413, 0.2288", "405.517, 474.252, 40.2441, 0.2288", "405.983, 475.253, 40.805, 0.2288", "406.515, 476.229, 41.4638, 0.2288", "407.047, 477.205, 42.1229, 0.2288", "407.565, 478.187, 42.756, 0.2288", "407.728, 479.32, 42.7596, 0.2288", "407.892, 480.453, 42.7636, 0.2288", "408.056, 481.584, 42.7675, 0.2288", "408.219, 482.716, 42.7714, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "404.404, 421.564, 11.76, 0.6864", "404.261, 420.64, 13.4148, 0.3814", "404.514, 419.524, 13.3795, 0.2796", "404.983, 418.507, 13.3832, 0.2288", "405.655, 417.582, 13.4238, 0.2288", "406.463, 416.795, 13.708, 0.2288", "407.337, 416.075, 14.1134, 0.2542", "408.211, 415.355, 14.5188, 0.305", "409.124, 414.675, 14.6496, 0.4068", "410.059, 414.014, 14.6448, 0.5084", "410.992, 413.353, 14.6404, 0.5848", "411.753, 412.512, 14.7011, 0.5848", "412.452, 411.61, 14.8389, 0.5592", "413.086, 410.687, 15.4157, 0.5338", "413.72, 409.764, 15.9925, 0.5338", "414.353, 408.842, 16.5693, 0.5338", "414.987, 407.918, 17.1461, 0.5338", "415.181, 406.84, 17.3356, 0.5592", "415.191, 405.696, 17.3634, 0.5848", "415.201, 404.552, 17.3911, 0.5848", "415.269, 403.412, 17.3956, 0.5084", "415.424, 402.278, 17.3645, 0.3814", "415.581, 401.146, 17.3334, 0.2796", "415.801, 400.03, 17.309, 0.2796", "416.259, 398.983, 17.3096, 0.3304", "416.546, 397.892, 17.4278, 0.3814", "416.653, 396.758, 17.6688, 0.3814", "416.759, 395.623, 17.9099, 0.4322", "416.866, 394.488, 18.151, 0.5338", "416.821, 393.356, 18.2498, 0.6356", "416.638, 392.227, 18.2188, 0.6864", "416.455, 391.098, 18.1877, 0.6356", "416.41, 389.958, 18.1726, 0.5592", "416.91, 388.936, 18.2302, 0.4576", "417.438, 387.921, 18.2916, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "404.404, 421.564, 11.76, 0.6864", "404.667, 421.461, 11.76, 0.3814", "405.804, 421.344, 11.76, 0.2796", "406.692, 420.904, 11.76, 0.2542", "407.226, 420.017, 11.76, 0.2796", "408.181, 419.498, 11.76, 0.305", "409.232, 419.094, 11.76, 0.2796", "410.146, 418.41, 11.76, 0.2796", "411.268, 418.224, 11.76, 0.305", "412.318, 417.845, 11.76, 0.356", "413.277, 417.277, 11.76, 0.356", "414.172, 416.612, 11.5405, 0.356", "414.915, 415.758, 11.48, 0.356", "415.827, 415.25, 10.8954, 0.3814", "416.662, 414.929, 9.6096, 0.356", "417.754, 414.705, 9.52, 0.3304", "418.79, 414.232, 9.52, 0.305", "419.812, 413.745, 9.52, 0.2796", "420.507, 412.849, 9.52, 0.2542", "421.385, 412.119, 9.52, 0.2288", "422.32, 411.464, 9.52, 0.2542", "423.088, 410.718, 10.08, 0.305", "423.86, 409.88, 10.1153, 0.356", "424.86, 409.438, 10.6593, 0.356", "425.672, 408.852, 11.2946, 0.3304", "426.712, 408.431, 11.48, 0.356", "427.608, 407.742, 11.7404, 0.4068", "428.642, 407.313, 11.76, 0.4576", "429.564, 406.661, 11.76, 0.4068", "430.28, 405.826, 11.76, 0.3814", "430.802, 404.815, 11.76, 0.3304", "431.559, 403.964, 11.76, 0.3304", "432.536, 403.381, 11.76, 0.2796", "433.59, 403.009, 11.76, 0.2542", "434.591, 402.532, 11.76, 0.2288", "435.626, 402.086, 11.76, 0.2288", "436.547, 401.438, 11.76, 0.2796", "437.327, 400.768, 11.76, 0.356", "438.272, 400.286, 11.2, 0.4322", "439.416, 400.286, 11.2, 0.4068", "440.56, 400.286, 11.2, 0.356", "441.704, 400.286, 11.2, 0.305", "442.744, 399.966, 11.2, 0.305", "443.798, 399.615, 11.2, 0.2796", "444.555, 398.859, 11.2, 0.2542", "445.211, 398.193, 11.2, 0.2288", "445.995, 397.394, 11.2, 0.2288", "447.02, 396.991, 11.2, 0.2288", "447.341, 395.982, 11.2, 0.2288", "447.957, 395.053, 11.2, 0.2542", "448.74, 394.234, 11.2, 0.2796", "449.585, 393.471, 11.2, 0.3304", "450.221, 392.525, 11.2, 0.3304", "451.1, 391.859, 11.7992, 0.3304", "452.038, 391.226, 12.04, 0.2796", "453.015, 390.637, 12.04, 0.2796", "453.748, 389.788, 12.04, 0.2796", "454.741, 389.23, 12.04, 0.305", "455.624, 388.504, 12.04, 0.305", "456.449, 387.72, 12.04, 0.305", "456.949, 386.691, 11.9988, 0.305", "457.583, 385.763, 11.76, 0.2796", "458.501, 385.104, 11.76, 0.2542", "459.096, 384.251, 11.48, 0.2542", "459.998, 383.677, 11.48, 0.2796", "460.593, 382.879, 11.48, 0.3304", "461.039, 381.853, 11.48, 0.3304", "462.03, 381.333, 11.48, 0.3304", "463.081, 380.93, 11.48, 0.2796", "464.037, 380.338, 11.275, 0.2796", "465.06, 379.836, 11.2, 0.2796", "466.071, 379.35, 11.2, 0.305", "467.129, 379.125, 11.2918, 0.2796", "468.099, 378.657, 11.48, 0.2542", "469.217, 378.466, 11.48, 0.2288", "470.284, 378.162, 11.48, 0.2288", "471.214, 377.52, 11.76, 0.2288", "472.348, 377.406, 11.76, 0.2288", "473.492, 377.406, 11.76, 0.2288", "474.547, 377.038, 11.76, 0.2288", "475.566, 376.527, 11.76, 0.2288", "476.538, 375.93, 11.76, 0.2288", "477.466, 375.263, 11.76, 0.2288", "478.279, 374.527, 11.76, 0.2288", "479.019, 373.713, 11.76, 0.2288", "479.573, 372.727, 11.76, 0.2288", "480.144, 371.774, 11.76, 0.2288", "480.589, 370.794, 11.2266, 0.2542", "480.86, 369.705, 11.1812, 0.2796", "481.552, 368.883, 10.5283, 0.305", "482.501, 368.294, 10.08, 0.2796", "483.573, 367.952, 10.08, 0.2542", "484.651, 367.685, 10.08, 0.2288", "485.763, 367.682, 9.6564, 0.2288", "486.314, 366.986, 8.96, 0.2288", "486.774, 365.988, 8.96, 0.2288", "487.106, 364.895, 8.9586, 0.2288", "487.433, 363.833, 8.7041, 0.2288", "488.314, 363.174, 8.4006, 0.2288", "489.21, 362.596, 8.12, 0.2288", "490.0, 361.788, 8.12, 0.2288", "490.308, 360.765, 7.59, 0.2542", "490.318, 359.623, 7.56, 0.305", "490.09, 358.53, 7.56, 0.4576" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "372.381, 398.341, 15.1416, 1.144", "372.504, 397.763, 14.7272, 0.7372", "373.056, 396.816, 14.4416, 0.5338", "373.56, 395.83, 14.8644, 0.4068", "373.358, 394.794, 14.5925, 0.4068", "373.012, 393.725, 14.0882, 0.483", "373.19, 392.629, 13.9476, 0.5592", "373.395, 391.516, 13.6049, 0.6102", "373.874, 390.526, 12.9534, 0.5338", "374.613, 389.696, 12.3494, 0.4576", "375.393, 388.898, 11.7188, 0.4068", "376.15, 388.083, 11.0653, 0.4576", "377.145, 387.584, 10.5795, 0.5084", "378.189, 387.126, 10.4068, 0.5338", "379.04, 386.372, 10.4944, 0.5084", "380.081, 386.025, 9.861, 0.5084", "381.105, 386.174, 8.7116, 0.5084", "381.895, 385.643, 7.2391, 0.5848", "382.571, 384.739, 7.11, 0.6102", "383.272, 384.001, 7.6611, 0.5848", "384.072, 383.779, 6.1267, 0.4576", "385.187, 383.987, 6.0698, 0.3304", "386.319, 384.012, 6.1116, 0.305", "387.134, 383.263, 6.2451, 0.3814", "387.501, 382.181, 6.1457, 0.6864" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "372.381, 398.341, 15.1416, 1.144", "371.844, 397.545, 15.7693, 0.9152", "371.17, 396.648, 16.3008, 0.8898", "370.518, 395.737, 16.8692, 0.8644", "369.892, 394.799, 17.3289, 0.839", "369.478, 393.733, 17.3743, 0.6864" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "369.478, 393.733, 17.3743, 0.6864", "369.375, 394.556, 18.7995, 0.6102", "368.742, 395.489, 19.2693, 0.5338", "368.107, 396.421, 19.733, 0.483", "367.472, 397.353, 20.1964, 0.483", "366.946, 398.323, 20.5862, 0.483", "366.946, 399.466, 20.6158, 0.4576", "366.945, 400.611, 20.6452, 0.356", "366.905, 401.75, 20.8653, 0.2796", "366.854, 402.887, 21.1341, 0.2288", "366.804, 404.024, 21.4029, 0.2288", "366.733, 405.164, 21.5502, 0.2542", "366.636, 406.303, 21.548, 0.3304", "366.559, 407.441, 21.5452, 0.4576", "366.784, 408.564, 21.532, 0.5338", "367.008, 409.685, 21.5188, 0.5084", "367.72, 410.558, 21.9842, 0.4576", "368.439, 411.427, 22.4557, 0.483", "369.054, 412.347, 22.8354, 0.6102", "369.263, 413.473, 22.8502, 0.6864", "369.076, 414.392, 23.1244, 0.661", "368.106, 414.906, 23.9145, 0.5848", "367.543, 415.767, 24.617, 0.483", "367.216, 416.831, 25.2686, 0.5084", "366.89, 417.894, 25.9204, 0.5084", "366.563, 418.958, 26.5723, 0.5592", "366.516, 420.046, 27.3126, 0.4576", "366.582, 421.143, 28.0888, 0.356", "366.649, 422.24, 28.8649, 0.2796", "366.714, 423.337, 29.6411, 0.305", "367.058, 424.386, 30.1759, 0.356", "367.535, 425.411, 30.5945, 0.356", "368.012, 426.437, 31.0134, 0.3304", "368.323, 427.515, 31.4404, 0.305", "368.522, 428.627, 31.8727, 0.305", "368.723, 429.74, 32.3053, 0.2796", "368.922, 430.852, 32.7376, 0.2542", "369.126, 431.931, 33.4446, 0.2288", "369.338, 432.959, 34.5528, 0.2542", "369.549, 433.989, 35.6614, 0.3304", "369.902, 434.975, 36.4708, 0.4576", "370.647, 435.843, 36.4524, 0.6864" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "369.478, 393.733, 17.3743, 0.6864", "369.098, 392.838, 17.4387, 0.8644", "368.806, 391.75, 17.8819, 0.9152", "368.983, 390.654, 18.4167, 0.9152", "369.133, 389.523, 18.4604, 0.8136", "369.057, 388.385, 18.3512, 0.788", "368.727, 387.323, 17.7461, 0.8136", "368.397, 386.237, 17.4082, 0.8898", "367.826, 385.251, 17.4745, 0.8898", "367.391, 384.222, 18.0407, 0.839", "367.135, 383.118, 18.4206, 0.788", "366.858, 382.01, 18.4859, 0.7626", "366.532, 380.913, 18.5192, 0.788", "366.126, 379.848, 18.7174, 0.839", "365.573, 378.904, 19.486, 0.8644", "365.077, 377.88, 19.6322, 0.839", "364.315, 377.034, 19.7775, 0.7626", "363.421, 376.601, 18.4808, 0.6864" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "363.421, 376.601, 18.4808, 0.6864", "363.503, 376.27, 19.843, 0.4576", "363.824, 375.773, 21.9078, 0.3304", "364.928, 375.65, 22.5728, 0.2542", "366.033, 375.526, 23.2378, 0.2288", "366.591, 374.901, 24.3785, 0.2796", "366.645, 373.759, 24.4037, 0.3814", "367.34, 372.949, 24.4096, 0.483", "368.244, 372.248, 24.4096, 0.5084", "369.156, 371.573, 24.4899, 0.4322", "370.156, 371.173, 25.4374, 0.4068", "371.155, 370.773, 26.385, 0.3814", "372.155, 370.372, 27.3325, 0.4068", "373.247, 370.478, 27.8785, 0.3304", "374.358, 370.675, 28.3508, 0.2796", "375.468, 370.873, 28.8235, 0.2288", "376.469, 370.333, 28.7938, 0.2288", "377.466, 369.774, 28.7507, 0.2288", "378.529, 369.441, 28.8579, 0.2288", "379.665, 369.363, 29.1346, 0.2542", "380.8, 369.287, 29.4115, 0.305", "381.936, 369.21, 29.6884, 0.3814", "383.072, 369.133, 29.965, 0.4576", "383.77, 369.793, 30.0905, 0.5084", "384.338, 370.729, 30.1305, 0.5338", "385.37, 370.934, 30.1356, 0.483", "386.138, 370.085, 30.1291, 0.4068", "386.943, 369.539, 30.2753, 0.3304", "387.885, 370.12, 30.9893, 0.305", "388.827, 370.699, 31.7033, 0.305", "389.792, 371.221, 32.4013, 0.2796", "390.899, 371.374, 32.9974, 0.2542", "392.005, 371.529, 33.5933, 0.2288", "393.113, 371.682, 34.1891, 0.2288", "394.22, 371.836, 34.7852, 0.2288", "395.207, 372.351, 34.9171, 0.2288", "396.181, 372.89, 34.8846, 0.2288", "397.324, 372.835, 34.8715, 0.2288", "397.767, 373.589, 35.4794, 0.2288", "397.929, 374.666, 36.3359, 0.2288", "398.255, 375.587, 37.0521, 0.2288", "399.39, 375.733, 37.0776, 0.2288", "400.409, 376.137, 37.4973, 0.2288", "401.345, 376.728, 38.2077, 0.2288", "402.281, 377.32, 38.918, 0.2288", "403.215, 377.911, 39.6284, 0.2288", "403.864, 378.775, 40.3598, 0.2288", "404.42, 379.729, 41.0984, 0.2288", "404.976, 380.682, 41.837, 0.2288", "405.532, 381.635, 42.5754, 0.2288", "406.088, 382.589, 43.314, 0.2288", "406.643, 383.542, 44.0524, 0.2288", "407.425, 384.128, 44.5206, 0.2288", "408.569, 384.125, 44.5572, 0.2288", "409.713, 384.124, 44.5942, 0.2796", "410.857, 384.123, 44.6312, 0.3304", "411.775, 384.262, 46.1364, 0.3814", "412.655, 384.423, 47.8806, 0.3304", "413.535, 384.584, 49.625, 0.2796", "414.415, 384.744, 51.3691, 0.2288", "415.285, 384.94, 53.0958, 0.2288", "416.005, 385.582, 54.598, 0.2288", "416.727, 386.224, 56.1002, 0.2288", "417.448, 386.865, 57.6022, 0.2288", "417.791, 387.667, 58.5889, 0.2288", "417.655, 388.719, 58.6292, 0.2288", "418.393, 389.593, 58.6004, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "363.421, 376.601, 18.4808, 0.6864", "362.658, 375.97, 18.4842, 0.6102", "361.813, 375.2, 18.5035, 0.5592", "361.601, 374.11, 18.6497, 0.5338", "362.117, 373.165, 19.4499, 0.5592", "362.327, 372.056, 19.8282, 0.6102", "362.203, 370.927, 19.6008, 0.661", "361.806, 369.854, 19.6048, 0.661", "361.327, 368.815, 19.6274, 0.5592", "360.969, 367.733, 19.7686, 0.483", "360.954, 366.613, 20.3221, 0.4068", "361.044, 365.554, 21.3511, 0.4322", "361.236, 364.456, 21.8389, 0.4576", "360.868, 363.373, 21.8327, 0.5338", "360.419, 362.321, 21.7941, 0.6102", "360.002, 361.265, 21.5555, 0.6356", "359.418, 360.335, 20.8051, 0.661", "358.78, 359.387, 20.7262, 0.6356", "358.164, 358.424, 20.7519, 0.5848", "357.669, 357.397, 20.907, 0.4576", "357.31, 356.341, 21.4687, 0.356", "357.201, 355.214, 21.8089, 0.3304", "356.978, 354.097, 21.6387, 0.4068", "356.809, 352.989, 21.1792, 0.483", "356.788, 351.857, 21.4729, 0.5592", "356.664, 350.773, 22.2631, 0.5848", "356.239, 349.753, 22.8844, 0.5848", "355.599, 348.807, 22.9533, 0.5338", "354.896, 347.904, 22.9272, 0.4576", "354.263, 346.956, 22.7954, 0.4576", "353.744, 345.978, 22.3734, 0.483", "353.718, 344.869, 21.8898, 0.5338", "353.918, 343.75, 22.034, 0.5338", "353.844, 342.646, 22.5319, 0.5338", "353.407, 341.609, 22.9494, 0.5592", "352.903, 340.581, 22.9762, 0.5338", "352.449, 339.535, 23.0552, 0.5338", "352.117, 338.456, 23.4186, 0.5084", "351.814, 337.386, 24.0072, 0.5338", "351.462, 336.301, 24.1898, 0.5084", "351.048, 335.256, 24.6047, 0.4576", "350.525, 334.28, 25.1812, 0.4576", "349.962, 333.285, 25.207, 0.5084", "349.549, 332.228, 25.2468, 0.6102", "349.287, 331.125, 25.5027, 0.6356", "349.0, 330.041, 26.0324, 0.5848", "348.772, 328.93, 26.3147, 0.4576", "348.628, 327.806, 26.2816, 0.356", "348.854, 326.717, 25.9986, 0.305", "349.42, 325.757, 25.4341, 0.356", "349.728, 324.768, 25.0998, 0.4068", "349.13, 323.905, 24.7327, 0.4576", "348.213, 323.272, 24.8374, 0.4576", "347.308, 322.598, 25.1488, 0.4576", "346.461, 321.833, 25.0519, 0.5338", "345.763, 320.969, 24.5367, 0.6102", "345.426, 319.931, 24.2416, 0.7372", "345.374, 318.797, 24.5241, 0.7626", "345.374, 317.674, 24.348, 0.839", "345.372, 316.541, 24.094, 0.839", "345.37, 315.397, 24.0971, 0.8898", "345.348, 314.254, 24.1968, 0.8898", "345.21, 313.147, 24.6991, 0.9406", "344.914, 312.067, 25.2008, 0.9914", "344.489, 311.03, 25.7219, 1.0168", "343.96, 310.037, 26.1909, 1.0424", "343.289, 309.118, 26.35, 1.0168", "342.53, 308.264, 26.4426, 0.9914", "341.862, 307.369, 26.9276, 0.8898", "341.418, 306.387, 27.804, 0.7626", "341.268, 305.29, 28.0473, 0.6356", "341.252, 304.163, 27.6167, 0.5084", "341.231, 303.026, 27.4403, 0.4322", "341.108, 301.891, 27.4411, 0.4322", "340.618, 300.883, 27.4453, 0.5338", "339.978, 299.935, 27.4663, 0.6356", "339.265, 299.044, 27.5545, 0.6864", "338.662, 298.102, 28.0249, 0.7118", "338.296, 297.041, 28.4612, 0.7372", "337.823, 296.008, 28.5597, 0.7372", "337.56, 294.908, 28.5592, 0.661", "337.519, 293.768, 28.5541, 0.5848", "337.565, 292.625, 28.5214, 0.5338", "337.516, 291.49, 28.2596, 0.5848", "337.218, 290.396, 28.3293, 0.6864", "336.882, 289.395, 29.3244, 0.7626", "336.558, 288.321, 29.6576, 0.788", "336.27, 287.215, 29.6901, 0.7372", "336.138, 286.08, 29.7503, 0.7118", "335.775, 285.015, 30.119, 0.6864", "335.16, 284.083, 30.6594, 0.6864", "334.393, 283.241, 30.8246, 0.7118", "333.618, 282.401, 30.94, 0.6864", "332.998, 281.471, 31.479, 0.6356", "332.627, 280.405, 31.8466, 0.5592", "332.565, 279.27, 31.7509, 0.5592", "332.565, 278.129, 31.5476, 0.5592", "332.587, 277.089, 32.6287, 0.5848", "332.739, 275.966, 32.6973, 0.5848", "332.279, 274.98, 31.9738, 0.661", "331.362, 274.297, 31.9203, 0.661", "330.471, 273.58, 31.9211, 0.6864", "329.622, 272.814, 31.9256, 0.6864", "329.185, 271.757, 31.9547, 0.7626", "328.692, 270.728, 32.1177, 0.8136", "328.14, 269.762, 32.7642, 0.8136", "327.461, 268.849, 33.0366, 0.788", "326.992, 267.807, 33.0198, 0.7118", "326.745, 266.706, 32.8714, 0.661", "327.03, 265.744, 32.1664, 0.5848", "326.669, 264.836, 33.32, 0.5592", "326.323, 263.75, 33.32, 0.5338", "326.054, 262.644, 33.32, 0.5592", "325.828, 261.524, 33.32, 0.5592", "325.521, 260.427, 33.32, 0.5084", "325.468, 259.289, 33.32, 0.3814", "325.461, 258.145, 33.32, 0.3304", "325.335, 257.011, 33.32, 0.3814", "324.764, 256.034, 33.32, 0.5084", "324.117, 255.117, 33.6672, 0.5592", "323.356, 254.287, 33.9578, 0.5592", "322.895, 253.266, 34.16, 0.5338", "322.531, 252.25, 34.1844, 0.5592", "322.42, 251.127, 34.44, 0.5338", "322.304, 249.994, 34.44, 0.483", "322.046, 248.882, 34.44, 0.3814", "321.795, 247.773, 34.44, 0.3304", "321.557, 246.704, 34.72, 0.3304", "321.201, 245.681, 34.8594, 0.3304", "320.192, 245.263, 35.0, 0.3304", "320.091, 244.152, 35.0, 0.305", "320.091, 243.008, 35.0, 0.3304", "320.091, 242.077, 36.094, 0.4068", "320.091, 241.025, 36.96, 0.5084", "320.017, 239.885, 36.96, 0.5592", "319.574, 238.832, 36.96, 0.5338", "319.129, 237.778, 36.96, 0.4322", "318.913, 236.659, 36.96, 0.3814", "318.698, 235.544, 37.214, 0.356", "318.496, 234.418, 37.24, 0.3814", "318.136, 233.353, 37.6762, 0.4068", "317.8, 232.392, 38.36, 0.4322", "317.565, 231.28, 38.36, 0.5084", "317.001, 230.307, 38.64, 0.5848", "316.42, 229.331, 38.6882, 0.661", "316.164, 228.231, 39.0494, 0.6356", "315.831, 227.147, 39.2, 0.5338", "315.744, 226.01, 39.2, 0.4322", "315.744, 224.866, 39.2, 0.3814", "315.744, 223.722, 39.2, 0.356", "315.858, 222.588, 39.2, 0.305", "315.858, 221.444, 39.2, 0.2796", "315.817, 220.306, 39.2, 0.305", "315.086, 219.52, 39.3271, 0.4068", "314.769, 218.44, 39.5648, 0.5592", "314.581, 217.326, 39.776, 0.661", "314.027, 216.399, 40.04, 0.7372", "313.708, 215.312, 40.04, 0.6864", "313.5, 214.23, 40.04, 0.7626", "312.726, 213.538, 40.5784, 0.8136", "312.655, 212.472, 40.88, 0.9152", "312.31, 211.402, 40.88, 0.9152", "311.916, 210.329, 40.88, 0.9152", "311.623, 209.225, 40.88, 0.9152", "311.511, 208.09, 40.88, 0.8644", "311.511, 206.946, 40.88, 0.839", "311.504, 205.818, 41.1384, 0.839", "311.209, 204.831, 42.194, 0.9152", "310.659, 203.846, 42.5536, 0.9152", "310.367, 202.75, 42.56, 0.839", "310.138, 201.636, 42.56, 0.7626", "310.138, 200.492, 42.56, 0.788", "310.061, 199.358, 42.56, 0.9406", "309.795, 198.27, 42.56, 1.0678", "309.243, 197.494, 43.4039, 1.0678", "308.882, 196.508, 43.9566, 0.966", "308.473, 195.442, 43.96, 0.8136", "308.183, 194.345, 43.96, 0.788", "307.755, 193.287, 43.96, 0.8136", "307.394, 192.208, 43.96, 0.9406", "306.966, 191.16, 43.96, 1.0424", "306.592, 190.133, 43.68, 1.144" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "306.592, 190.133, 43.68, 1.144", "306.366, 189.793, 44.3268, 0.8898", "305.815, 188.975, 45.64, 0.8136", "305.266, 187.976, 45.64, 0.6864", "304.876, 186.915, 45.8102, 0.6356", "304.876, 185.792, 46.2, 0.5592", "304.876, 184.648, 46.2, 0.5592", "304.876, 183.522, 46.5032, 0.5338", "304.876, 182.387, 46.76, 0.5338", "304.774, 181.254, 46.76, 0.6102", "303.883, 180.729, 46.76, 0.6356", "303.194, 179.896, 46.76, 0.6356", "303.046, 178.775, 46.8222, 0.5084", "303.046, 177.75, 47.8352, 0.4322", "303.046, 176.607, 47.88, 0.4322", "303.016, 175.464, 47.88, 0.5338", "302.58, 174.42, 47.88, 0.6102", "302.474, 173.297, 47.88, 0.6102", "302.474, 172.153, 47.88, 0.5084", "302.474, 171.009, 47.88, 0.483", "302.474, 169.865, 47.88, 0.4576", "302.474, 168.749, 48.1978, 0.5084", "302.388, 167.755, 49.28, 0.4576", "302.0, 166.68, 49.28, 0.4576", "301.721, 165.575, 49.28, 0.4576", "301.315, 164.532, 49.369, 0.5848", "300.811, 163.57, 50.0231, 0.7118", "300.496, 162.475, 50.12, 0.7626", "300.22, 161.368, 50.12, 0.7118", "299.89, 160.272, 50.12, 0.5848", "299.728, 159.145, 50.12, 0.5084", "299.728, 158.001, 50.12, 0.4322", "299.728, 156.857, 50.12, 0.4576", "299.702, 155.714, 50.12, 0.483", "298.928, 154.914, 50.12, 0.5084", "298.366, 154.013, 50.391, 0.4576", "297.837, 153.15, 50.96, 0.4068", "297.669, 152.047, 51.317, 0.4322", "297.491, 150.954, 51.7776, 0.4576", "296.982, 149.951, 51.8, 0.5338", "296.747, 148.966, 52.36, 0.5848", "296.43, 147.872, 52.36, 0.6864", "296.125, 146.777, 52.36, 0.661", "295.684, 145.732, 52.36, 0.5592", "295.607, 144.594, 52.36, 0.4322", "294.96, 143.682, 52.36, 0.3814", "294.586, 142.649, 52.36, 0.356", "294.675, 141.51, 52.36, 0.3304", "294.809, 140.381, 52.36, 0.305", "294.809, 139.24, 52.4009, 0.305", "294.809, 138.104, 52.64, 0.3304", "294.809, 136.98, 53.0068, 0.3814", "294.407, 135.987, 53.2, 0.4322", "294.008, 135.009, 53.2, 0.4322", "294.008, 133.865, 53.2, 0.4068", "293.98, 132.722, 53.2, 0.4068", "293.602, 131.657, 53.2, 0.4322", "293.06, 130.661, 53.2, 0.4576", "292.521, 129.69, 53.2, 0.483", "292.521, 128.732, 54.2158, 0.5084", "292.514, 127.609, 54.6, 0.5848", "291.913, 126.674, 54.6, 0.6356", "291.362, 125.742, 55.3353, 0.6864", "290.535, 125.005, 55.72, 0.6102", "289.914, 124.046, 55.72, 0.483", "289.49, 122.986, 55.72, 0.3304", "289.147, 121.899, 55.72, 0.2542", "288.402, 121.202, 56.2288, 0.2796", "288.393, 120.061, 56.28, 0.3304", "288.14, 118.95, 56.28, 0.3814", "287.928, 117.831, 56.28, 0.356", "287.689, 116.722, 56.2979, 0.3304", "287.373, 115.662, 56.8445, 0.3304", "287.373, 114.543, 57.2393, 0.3304", "287.373, 113.42, 57.68, 0.3814", "287.373, 112.284, 57.9365, 0.4322", "287.253, 111.168, 57.96, 0.5084", "286.843, 110.101, 57.96, 0.5084", "286.164, 109.222, 57.96, 0.483", "285.657, 108.297, 57.96, 0.483", "285.47, 107.323, 58.6121, 0.483", "285.224, 106.584, 60.2938, 0.4322", "284.187, 106.392, 60.48, 0.3814", "283.606, 105.512, 60.48, 0.356", "283.018, 104.728, 60.48, 0.4322", "282.275, 103.959, 60.48, 0.483", "281.169, 103.68, 60.48, 0.6102", "280.181, 103.15, 60.48, 0.6864", "279.309, 102.422, 60.48, 0.7626", "278.553, 101.585, 60.48, 0.7118", "278.148, 100.602, 60.7552, 0.661", "278.106, 99.485, 61.04, 0.5592", "278.106, 98.341, 61.04, 0.483", "277.992, 97.2065, 61.04, 0.3814", "277.992, 96.0625, 61.04, 0.356", "278.003, 94.9186, 61.04, 0.3814", "278.32, 94.0585, 62.169, 0.4068", "278.543, 93.1255, 63.56, 0.4322", "278.869, 92.0315, 63.56, 0.4576", "279.12, 90.9263, 63.5782, 0.5592", "279.182, 89.8488, 64.3353, 0.6356", "279.25, 88.7618, 64.96, 0.6356", "279.437, 87.6563, 64.96, 0.5338", "279.92, 86.6342, 65.24, 0.3814", "279.937, 85.5539, 65.8, 0.3304", "279.937, 84.4099, 65.8, 0.3814", "279.937, 83.2659, 65.8, 0.5338", "279.965, 82.1226, 65.8, 0.6356", "280.154, 81.0454, 66.4675, 0.661", "280.166, 79.919, 66.7142, 0.6356", "280.166, 78.7906, 67.1703, 0.6356", "280.166, 77.6504, 67.3268, 0.661", "280.166, 76.5122, 67.4982, 0.6356", "280.258, 75.465, 68.32, 0.5338", "280.795, 74.4777, 68.32, 0.4068", "281.375, 73.4959, 68.32, 0.356", "281.775, 72.4711, 68.3262, 0.356", "281.996, 71.6154, 69.8068, 0.4068", "281.996, 70.5948, 71.0542, 0.4322", "282.034, 69.4789, 71.4, 0.4576" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "306.592, 190.133, 43.68, 1.144", "306.592, 190.018, 43.12, 0.9152" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "282.034, 69.4789, 71.4, 0.4576", "281.78, 69.5583, 72.2156, 0.4322", "281.299, 69.1381, 73.36, 0.3814", "280.824, 68.1238, 73.36, 0.3304", "280.576, 67.0226, 73.36, 0.3304", "279.907, 66.0963, 73.36, 0.4068", "279.365, 65.1778, 73.7195, 0.5084", "279.029, 64.4174, 75.1654, 0.5592", "278.127, 64.0423, 75.88, 0.5592", "277.454, 63.1378, 75.88, 0.5084", "276.489, 62.6214, 76.1001, 0.483", "275.805, 61.9017, 77.2929, 0.4322", "274.953, 61.5491, 78.12, 0.4068", "273.822, 61.4613, 78.12, 0.3814", "273.008, 60.7387, 78.4899, 0.4068", "272.152, 60.1111, 79.24, 0.483", "271.229, 59.5451, 79.9484, 0.6356", "270.247, 59.0102, 80.36, 0.7118", "269.626, 58.4702, 82.2091, 0.661", "268.9, 57.8189, 82.88, 0.4576", "267.788, 57.6576, 82.88, 0.305", "266.708, 57.3682, 83.1547, 0.2288", "265.605, 57.3144, 83.6948, 0.2288", "264.575, 57.2752, 84.7787, 0.2288", "263.495, 57.0126, 85.0296, 0.2288", "262.975, 56.4167, 86.994, 0.2288", "261.939, 56.2461, 87.64, 0.2288", "260.8, 56.1718, 87.64, 0.2288", "259.913, 55.717, 88.436, 0.2288", "259.222, 55.0717, 89.9186, 0.2288", "258.692, 54.5775, 91.4508, 0.2288", "258.02, 53.949, 92.9662, 0.2288", "257.105, 53.6021, 94.3331, 0.2288", "256.051, 53.1864, 94.36, 0.2288", "254.948, 52.9135, 94.5596, 0.2288", "253.88, 52.624, 94.8293, 0.2288", "252.738, 52.624, 94.92, 0.2288", "251.853, 52.624, 95.9171, 0.2288", "250.723, 52.624, 96.2693, 0.2288", "249.972, 52.9172, 97.6738, 0.2288", "249.105, 52.9512, 99.2748, 0.2288", "248.217, 52.7384, 100.814, 0.2288", "247.242, 52.7384, 102.278, 0.2288", "246.28, 52.7384, 103.6, 0.2288", "245.152, 52.6021, 103.6, 0.2288", "244.244, 52.052, 103.6, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "282.034, 69.4789, 71.4, 0.4576", "282.607, 68.3617, 71.68, 0.3304", "283.11, 67.3464, 71.68, 0.3304", "283.291, 66.2233, 71.68, 0.356", "283.672, 65.1547, 71.68, 0.356", "284.0, 64.0852, 71.68, 0.3304", "284.818, 63.3167, 71.8917, 0.3814", "285.168, 62.3131, 72.8426, 0.5084", "285.228, 61.1975, 73.08, 0.6356", "285.451, 60.076, 73.08, 0.6356", "285.661, 58.9604, 73.08, 0.5338", "286.206, 57.9582, 73.1399, 0.4068", "286.734, 56.9836, 73.64, 0.305", "287.527, 56.2394, 74.1978, 0.2796", "287.83, 55.293, 75.04, 0.305", "287.867, 54.1606, 75.32, 0.356", "288.159, 53.3181, 76.678, 0.3814", "288.288, 52.7384, 78.7954, 0.356", "288.389, 52.2825, 81.2258, 0.3304", "289.312, 52.052, 82.077, 0.2796", "290.375, 52.052, 82.7868, 0.2542", "290.711, 51.8499, 85.1869, 0.2288", "291.483, 51.6188, 86.52, 0.2288", "292.342, 51.2515, 87.2312, 0.2288", "293.412, 51.1368, 87.9477, 0.2288", "293.984, 51.0224, 89.8724, 0.2288", "294.919, 50.6692, 90.6822, 0.2288", "295.773, 50.4435, 92.2093, 0.2288", "296.418, 50.1964, 93.9935, 0.2288", "297.418, 50.1072, 94.64, 0.2288", "298.475, 49.8321, 94.92, 0.2288", "299.528, 49.5352, 95.4232, 0.2288", "300.51, 49.5352, 96.8514, 0.2288", "301.642, 49.5352, 97.16, 0.2288", "302.786, 49.5352, 97.1902, 0.2288", "303.316, 48.9184, 98.0, 0.2542", "304.174, 48.6866, 99.3709, 0.2796", "304.954, 48.0435, 99.96, 0.305", "305.781, 47.3246, 99.96, 0.2796", "306.733, 46.7133, 99.96, 0.2796", "307.793, 46.3686, 99.96, 0.305", "308.397, 45.5068, 100.421, 0.356", "309.247, 45.4168, 101.914, 0.356", "309.865, 45.4168, 103.857, 0.3304", "310.674, 45.4168, 105.0, 0.356", "311.613, 45.6082, 105.69, 0.4068", "312.248, 45.76, 107.883, 0.4322", "313.263, 45.7643, 108.92, 0.356", "313.573, 46.6572, 109.48, 0.2796", "314.714, 46.6752, 109.48, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_84",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_85",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_16", "dend_9", "dend_0", "apic_0", "dend_23", "dend_18", "dend_13", "dend_10", "dend_6", "dend_1", "apic_14", "apic_1", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "apic_16", "apic_15", "apic_13", "apic_2", "dend_21", "dend_20", "dend_4", "dend_3", "apic_12", "apic_3", "apic_11", "apic_4", "apic_10", "apic_5", "apic_7", "apic_6", "apic_9", "apic_8" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_16", "dend_9", "dend_0", "dend_23", "dend_18", "dend_13", "dend_10", "dend_6", "dend_1", "dend_25", "dend_24", "dend_22", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_21", "dend_20", "dend_4", "dend_3" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_14", "apic_1", "apic_16", "apic_15", "apic_13", "apic_2", "apic_12", "apic_3", "apic_11", "apic_4", "apic_10", "apic_5", "apic_7", "apic_6", "apic_9", "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4121",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "apic_14", "apic_14", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.3600001"
  }, {
    "group" : "dend",
    "value" : "2.3600001"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "128.36"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0011054972",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.15772033",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0014158948",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.019994257",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.723796E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0025558325",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.18445243",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "8.757104E-5",
    "erev" : "-87.2848"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.4000196E-4",
    "erev" : "-87.2848"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.1871108E-5",
    "erev" : "-87.2848"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "5.772549E-4",
    "erev" : "-87.2848"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.7554835E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0030550049",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473862845

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_14, id: apic_14, parent: apic_0
create apic_14
public apic_14
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_1
create apic_13
public apic_13
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_12, id: apic_12, parent: apic_2
create apic_12
public apic_12
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_11, id: apic_11, parent: apic_3
create apic_11
public apic_11
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_10, id: apic_10, parent: apic_4
create apic_10
public apic_10
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_84, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_84
// Group: {name=ModelViewParmSubset_85, groups=[], sections=[dend_17, dend_16, dend_9, dend_0, apic_0, dend_23, dend_18, dend_13, dend_10, dend_6, dend_1, apic_14, apic_1, dend_25, dend_24, dend_22, dend_19, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_2, apic_16, apic_15, apic_13, apic_2, dend_21, dend_20, dend_4, dend_3, apic_12, apic_3, apic_11, apic_4, apic_10, apic_5, apic_7, apic_6, apic_9, apic_8]}
objref ModelViewParmSubset_85
// Group: {name=dend, groups=[], sections=[dend_17, dend_16, dend_9, dend_0, dend_23, dend_18, dend_13, dend_10, dend_6, dend_1, dend_25, dend_24, dend_22, dend_19, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_2, dend_21, dend_20, dend_4, dend_3]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_16, apic_15, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_10, apic_5, apic_7, apic_6, apic_9, apic_8]}
objref apic
// Group: {name=OneSecGrp_SectionRef_4121, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_4121
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49999999999999795)
    connect dend_17(0), soma_0(0.49999999999999795)
    connect dend_16(0), soma_0(0.49999999999999795)
    connect dend_9(0), soma_0(0.49999999999999795)
    connect dend_0(0), soma_0(0.49999999999999795)
    connect apic_0(0), soma_0(0.49999999999999795)
    connect axon_1(0), axon_0(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_14(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_12(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_11(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_10(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 372.723, 429.7, 13.599, 13.94 ) }
    soma_0 { pt3dadd( 379.693, 429.7, 13.599, 13.94 ) }
    soma_0 { pt3dadd( 386.663, 429.7, 13.599, 13.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 379.693, 429.7, 13.599, 1.0 ) }
    axon_0 { pt3dadd( 385.534, 443.516, 13.599, 1.0 ) }
    axon_0 { pt3dadd( 391.376, 457.332, 13.599, 1.0 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 376.238, 423.386, 17.7083, 0.305 ) }
    dend_17 { pt3dadd( 377.114, 422.971, 18.349, 0.356 ) }
    dend_17 { pt3dadd( 378.182, 422.629, 18.8972, 0.5084 ) }
    dend_17 { pt3dadd( 379.251, 422.288, 19.4457, 0.7626 ) }
    dend_17 { pt3dadd( 380.319, 421.946, 19.994, 1.144 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 11/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 375.264, 434.519, 15.1287, 0.2288 ) }
    dend_16 { pt3dadd( 374.846, 435.584, 15.127, 0.2288 ) }
    dend_16 { pt3dadd( 374.429, 436.649, 15.1256, 0.2288 ) }
    dend_16 { pt3dadd( 374.011, 437.714, 15.1239, 0.2288 ) }
    dend_16 { pt3dadd( 373.593, 438.779, 15.1225, 0.2542 ) }
    dend_16 { pt3dadd( 373.175, 439.844, 15.1211, 0.2796 ) }
    dend_16 { pt3dadd( 372.758, 440.909, 15.1194, 0.305 ) }
    dend_16 { pt3dadd( 372.34, 441.974, 15.118, 0.3304 ) }
    dend_16 { pt3dadd( 371.872, 443.016, 15.1231, 0.3814 ) }
    dend_16 { pt3dadd( 371.357, 444.038, 15.1348, 0.4322 ) }
    dend_16 { pt3dadd( 370.72, 444.976, 15.2774, 0.4068 ) }
    dend_16 { pt3dadd( 369.981, 445.843, 15.5319, 0.3304 ) }
    dend_16 { pt3dadd( 369.242, 446.709, 15.7864, 0.2542 ) }
    dend_16 { pt3dadd( 368.503, 447.576, 16.0406, 0.2542 ) }
    dend_16 { pt3dadd( 367.764, 448.443, 16.2952, 0.2796 ) }
    dend_16 { pt3dadd( 367.074, 449.348, 16.4674, 0.305 ) }
    dend_16 { pt3dadd( 366.471, 450.321, 16.4959, 0.2796 ) }
    dend_16 { pt3dadd( 365.868, 451.293, 16.5245, 0.2542 ) }
    dend_16 { pt3dadd( 365.243, 452.25, 16.5376, 0.2542 ) }
    dend_16 { pt3dadd( 364.559, 453.166, 16.5124, 0.2796 ) }
    dend_16 { pt3dadd( 363.873, 454.082, 16.4872, 0.3304 ) }
    dend_16 { pt3dadd( 363.204, 455.008, 16.5256, 0.3304 ) }
    dend_16 { pt3dadd( 362.616, 455.975, 16.9092, 0.3304 ) }
    dend_16 { pt3dadd( 362.028, 456.944, 17.2925, 0.2796 ) }
    dend_16 { pt3dadd( 361.44, 457.914, 17.6761, 0.2542 ) }
    dend_16 { pt3dadd( 360.665, 458.715, 17.8458, 0.2288 ) }
    dend_16 { pt3dadd( 359.731, 459.375, 17.8312, 0.2288 ) }
    dend_16 { pt3dadd( 358.795, 460.034, 17.8167, 0.2288 ) }
    dend_16 { pt3dadd( 357.86, 460.693, 17.8018, 0.2288 ) }
    dend_16 { pt3dadd( 356.888, 461.289, 17.794, 0.2288 ) }
    dend_16 { pt3dadd( 355.863, 461.797, 17.7957, 0.2542 ) }
    dend_16 { pt3dadd( 354.918, 462.392, 17.7965, 0.2796 ) }
    dend_16 { pt3dadd( 354.336, 463.376, 17.7948, 0.305 ) }
    dend_16 { pt3dadd( 353.753, 464.361, 17.7934, 0.305 ) }
    dend_16 { pt3dadd( 353.171, 465.346, 17.7918, 0.3814 ) }
    dend_16 { pt3dadd( 352.788, 466.408, 17.8114, 0.4576 ) }
    dend_16 { pt3dadd( 352.276, 467.274, 17.8268, 0.5084 ) }
    dend_16 { pt3dadd( 351.178, 467.592, 17.7996, 0.4068 ) }
    dend_16 { pt3dadd( 350.17, 468.054, 17.7764, 0.3304 ) }
    dend_16 { pt3dadd( 349.41, 468.91, 17.7621, 0.2796 ) }
    dend_16 { pt3dadd( 348.65, 469.764, 17.7481, 0.3304 ) }
    dend_16 { pt3dadd( 347.889, 470.619, 17.7341, 0.3304 ) }
    dend_16 { pt3dadd( 347.099, 471.437, 17.724, 0.356 ) }
    dend_16 { pt3dadd( 346.097, 471.987, 17.7433, 0.356 ) }
    dend_16 { pt3dadd( 345.095, 472.538, 17.7626, 0.3814 ) }
    dend_16 { pt3dadd( 344.091, 473.089, 17.782, 0.356 ) }
    dend_16 { pt3dadd( 343.089, 473.64, 17.8013, 0.3304 ) }
    dend_16 { pt3dadd( 342.03, 474.058, 17.81, 0.3304 ) }
    dend_16 { pt3dadd( 340.938, 474.402, 17.8128, 0.4068 ) }
    dend_16 { pt3dadd( 339.847, 474.746, 17.8158, 0.483 ) }
    dend_16 { pt3dadd( 338.748, 475.056, 17.8206, 0.5592 ) }
    dend_16 { pt3dadd( 337.633, 475.319, 17.8276, 0.5848 ) }
    dend_16 { pt3dadd( 336.548, 475.334, 17.8217, 0.5848 ) }
    dend_16 { pt3dadd( 335.517, 474.839, 17.7895, 0.5084 ) }
    dend_16 { pt3dadd( 334.486, 474.342, 17.7573, 0.3814 ) }
    dend_16 { pt3dadd( 333.351, 474.277, 17.7797, 0.305 ) }
    dend_16 { pt3dadd( 332.207, 474.246, 17.8069, 0.305 ) }
    dend_16 { pt3dadd( 331.076, 474.127, 17.8016, 0.3814 ) }
    dend_16 { pt3dadd( 329.967, 473.846, 17.7377, 0.4068 ) }
    dend_16 { pt3dadd( 328.863, 473.659, 17.5862, 0.4068 ) }
    dend_16 { pt3dadd( 327.779, 473.935, 17.0064, 0.3814 ) }
    dend_16 { pt3dadd( 326.693, 474.211, 16.4265, 0.3814 ) }
    dend_16 { pt3dadd( 325.601, 474.275, 16.0434, 0.356 ) }
    dend_16 { pt3dadd( 324.492, 473.99, 15.9886, 0.305 ) }
    dend_16 { pt3dadd( 323.357, 473.955, 15.9751, 0.2542 ) }
    dend_16 { pt3dadd( 322.213, 473.988, 15.9729, 0.2796 ) }
    dend_16 { pt3dadd( 321.072, 474.014, 15.9376, 0.3814 ) }
    dend_16 { pt3dadd( 319.968, 473.924, 15.2362, 0.5338 ) }
    dend_16 { pt3dadd( 318.864, 473.832, 14.5345, 0.6102 ) }
    dend_16 { pt3dadd( 317.761, 473.742, 13.8331, 0.6102 ) }
    dend_16 { pt3dadd( 316.687, 473.911, 13.4464, 0.5084 ) }
    dend_16 { pt3dadd( 315.65, 474.395, 13.44, 0.483 ) }
    dend_16 { pt3dadd( 314.614, 474.879, 13.4333, 0.5084 ) }
    dend_16 { pt3dadd( 314.097, 475.73, 14.8036, 0.5848 ) }
    dend_16 { pt3dadd( 313.522, 476.55, 15.9981, 0.5338 ) }
    dend_16 { pt3dadd( 312.552, 477.157, 16.0093, 0.4068 ) }
    dend_16 { pt3dadd( 311.582, 477.764, 16.0208, 0.2796 ) }
    dend_16 { pt3dadd( 310.612, 478.371, 16.0322, 0.2796 ) }
    dend_16 { pt3dadd( 309.649, 478.985, 16.044, 0.3304 ) }
    dend_16 { pt3dadd( 308.891, 479.842, 16.0572, 0.3814 ) }
    dend_16 { pt3dadd( 307.841, 480.097, 15.6918, 0.3814 ) }
    dend_16 { pt3dadd( 306.718, 480.2, 15.2306, 0.3814 ) }
    dend_16 { pt3dadd( 305.594, 480.306, 14.7731, 0.3814 ) }
    dend_16 { pt3dadd( 304.529, 480.726, 14.7476, 0.3304 ) }
    dend_16 { pt3dadd( 303.465, 481.145, 14.7218, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 96/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 376.677, 435.807, 19.4631, 0.4576 ) }
    dend_9 { pt3dadd( 375.609, 436.192, 19.154, 0.4576 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 386.678, 428.991, 15.223, 0.5848 ) }
    dend_0 { pt3dadd( 387.735, 428.572, 15.12, 0.7626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 388.879, 428.542, 15.1192, 0.8898 ) }
    dend_0 { pt3dadd( 390.023, 428.543, 15.1147, 0.8898 ) }
    dend_0 { pt3dadd( 391.167, 428.549, 15.0844, 0.8644 ) }
    dend_0 { pt3dadd( 392.305, 428.596, 14.9033, 0.8898 ) }
    dend_0 { pt3dadd( 393.401, 428.806, 14.3833, 0.8898 ) }
    dend_0 { pt3dadd( 394.501, 428.994, 14.9444, 0.839 ) }
    dend_0 { pt3dadd( 395.576, 428.968, 15.8962, 0.661 ) }
    dend_0 { pt3dadd( 396.609, 428.838, 16.8496, 0.5592 ) }
    dend_0 { pt3dadd( 397.626, 428.429, 16.1241, 0.5338 ) }
    dend_0 { pt3dadd( 398.475, 427.901, 14.8436, 0.6102 ) }
    dend_0 { pt3dadd( 399.19, 427.061, 14.0991, 0.6864 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 11/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 377.674, 422.486, 11.8664, 0.9152 ) }
    apic_0 { pt3dadd( 377.224, 421.437, 11.7611, 1.0932 ) }
    apic_0 { pt3dadd( 376.958, 420.325, 11.7614, 1.1694 ) }
    apic_0 { pt3dadd( 377.014, 419.182, 11.7698, 1.144 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 15/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 391.376, 457.332, 13.599, 1.0 ) }
    axon_1 { pt3dadd( 397.217, 471.148, 13.599, 1.0 ) }
    axon_1 { pt3dadd( 403.058, 484.964, 13.599, 1.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 18/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 380.319, 421.946, 19.994, 1.144 ) }
    dend_23 { pt3dadd( 379.799, 421.723, 19.899, 0.8898 ) }
    dend_23 { pt3dadd( 378.928, 421.18, 19.88, 0.788 ) }
    dend_23 { pt3dadd( 378.142, 420.43, 19.88, 0.6864 ) }
    dend_23 { pt3dadd( 377.102, 419.98, 19.88, 0.6864 ) }
    dend_23 { pt3dadd( 376.446, 419.062, 19.88, 0.7372 ) }
    dend_23 { pt3dadd( 375.861, 418.09, 19.88, 0.8136 ) }
    dend_23 { pt3dadd( 375.319, 417.091, 19.88, 0.7372 ) }
    dend_23 { pt3dadd( 375.118, 415.973, 19.88, 0.661 ) }
    dend_23 { pt3dadd( 375.118, 414.829, 19.88, 0.6102 ) }
    dend_23 { pt3dadd( 375.03, 413.696, 19.88, 0.6864 ) }
    dend_23 { pt3dadd( 374.49, 412.693, 19.88, 0.661 ) }
    dend_23 { pt3dadd( 374.093, 411.633, 19.88, 0.5338 ) }
    dend_23 { pt3dadd( 374.088, 410.49, 19.88, 0.356 ) }
    dend_23 { pt3dadd( 374.023, 409.362, 19.88, 0.2542 ) }
    dend_23 { pt3dadd( 373.503, 408.993, 21.56, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 34/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 380.319, 421.946, 19.994, 1.144 ) }
    dend_18 { pt3dadd( 380.157, 422.048, 20.6368, 0.9152 ) }
    dend_18 { pt3dadd( 379.587, 422.406, 22.8998, 0.5848 ) }
    dend_18 { pt3dadd( 380.059, 423.064, 23.5234, 0.4068 ) }
    dend_18 { pt3dadd( 380.984, 423.535, 23.8689, 0.4068 ) }
    dend_18 { pt3dadd( 382.055, 423.44, 24.8217, 0.6102 ) }
    dend_18 { pt3dadd( 383.12, 423.607, 25.307, 0.7372 ) }
    dend_18 { pt3dadd( 384.17, 424.053, 25.3915, 0.7372 ) }
    dend_18 { pt3dadd( 385.184, 424.537, 25.9185, 0.5848 ) }
    dend_18 { pt3dadd( 386.197, 425.021, 26.4454, 0.4576 ) }
    dend_18 { pt3dadd( 387.211, 425.506, 26.9721, 0.4068 ) }
    dend_18 { pt3dadd( 388.27, 425.934, 26.9976, 0.5084 ) }
    dend_18 { pt3dadd( 389.333, 426.36, 26.9962, 0.661 ) }
    dend_18 { pt3dadd( 390.395, 426.785, 26.9948, 0.9152 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 375.609, 436.192, 19.154, 0.4576 ) }
    dend_13 { pt3dadd( 374.661, 436.693, 17.2735, 0.483 ) }
    dend_13 { pt3dadd( 374.159, 437.5, 15.7864, 0.5592 ) }
    dend_13 { pt3dadd( 373.788, 438.527, 15.0058, 0.6102 ) }
    dend_13 { pt3dadd( 373.491, 439.571, 14.1204, 0.6356 ) }
    dend_13 { pt3dadd( 372.807, 440.354, 13.004, 0.5592 ) }
    dend_13 { pt3dadd( 371.809, 440.861, 12.4942, 0.5848 ) }
    dend_13 { pt3dadd( 370.705, 440.996, 11.8675, 0.6102 ) }
    dend_13 { pt3dadd( 369.621, 441.346, 12.0576, 0.6864 ) }
    dend_13 { pt3dadd( 368.559, 441.646, 12.7901, 0.6356 ) }
    dend_13 { pt3dadd( 367.63, 442.309, 12.8794, 0.5848 ) }
    dend_13 { pt3dadd( 366.596, 442.799, 12.8825, 0.5592 ) }
    dend_13 { pt3dadd( 365.502, 443.133, 12.896, 0.6102 ) }
    dend_13 { pt3dadd( 364.359, 443.175, 12.9805, 0.6864 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 62/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 375.609, 436.192, 19.154, 0.4576 ) }
    dend_10 { pt3dadd( 375.589, 437.24, 19.5163, 0.483 ) }
    dend_10 { pt3dadd( 375.66, 438.368, 19.1215, 0.4576 ) }
    dend_10 { pt3dadd( 375.963, 439.456, 18.7076, 0.4576 ) }
    dend_10 { pt3dadd( 376.024, 440.585, 19.0795, 0.483 ) }
    dend_10 { pt3dadd( 375.984, 441.704, 18.517, 0.5338 ) }
    dend_10 { pt3dadd( 375.722, 442.817, 18.5007, 0.661 ) }
    dend_10 { pt3dadd( 375.623, 443.956, 18.6306, 0.9152 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 70/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 399.19, 427.061, 14.0991, 0.6864 ) }
    dend_6 { pt3dadd( 399.161, 426.601, 16.4209, 0.5592 ) }
    dend_6 { pt3dadd( 399.519, 425.617, 16.6729, 0.5084 ) }
    dend_6 { pt3dadd( 400.432, 425.062, 17.6781, 0.5084 ) }
    dend_6 { pt3dadd( 400.411, 423.971, 17.8016, 0.4576 ) }
    dend_6 { pt3dadd( 400.593, 422.948, 18.1653, 0.4576 ) }
    dend_6 { pt3dadd( 401.311, 422.168, 19.1565, 0.3814 ) }
    dend_6 { pt3dadd( 402.186, 421.888, 20.8236, 0.356 ) }
    dend_6 { pt3dadd( 402.618, 421.063, 21.7896, 0.2796 ) }
    dend_6 { pt3dadd( 402.831, 419.968, 22.4067, 0.305 ) }
    dend_6 { pt3dadd( 403.476, 419.156, 22.643, 0.356 ) }
    dend_6 { pt3dadd( 404.452, 418.559, 22.5896, 0.483 ) }
    dend_6 { pt3dadd( 405.378, 418.031, 23.1344, 0.5084 ) }
    dend_6 { pt3dadd( 406.206, 417.634, 24.803, 0.5338 ) }
    dend_6 { pt3dadd( 407.177, 417.318, 25.6525, 0.483 ) }
    dend_6 { pt3dadd( 408.297, 417.082, 25.6584, 0.483 ) }
    dend_6 { pt3dadd( 409.369, 416.71, 25.6617, 0.4068 ) }
    dend_6 { pt3dadd( 410.389, 416.194, 25.6626, 0.3304 ) }
    dend_6 { pt3dadd( 410.329, 415.37, 26.931, 0.2542 ) }
    dend_6 { pt3dadd( 410.017, 414.475, 28.4959, 0.2288 ) }
    dend_6 { pt3dadd( 410.074, 413.658, 29.6117, 0.2288 ) }
    dend_6 { pt3dadd( 411.034, 413.035, 29.6346, 0.2796 ) }
    dend_6 { pt3dadd( 411.993, 412.413, 29.6579, 0.3304 ) }
    dend_6 { pt3dadd( 412.96, 411.837, 29.8222, 0.3814 ) }
    dend_6 { pt3dadd( 413.979, 411.572, 30.9184, 0.3304 ) }
    dend_6 { pt3dadd( 414.997, 411.307, 32.0146, 0.305 ) }
    dend_6 { pt3dadd( 416.017, 411.042, 33.1106, 0.2796 ) }
    dend_6 { pt3dadd( 416.811, 411.731, 33.9035, 0.305 ) }
    dend_6 { pt3dadd( 417.646, 412.341, 34.5181, 0.2796 ) }
    dend_6 { pt3dadd( 418.773, 412.145, 34.4453, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 419.319, 411.4, 34.4126, 0.3814 ) }
    dend_6 { pt3dadd( 419.452, 410.264, 34.4078, 0.483 ) }
    dend_6 { pt3dadd( 419.895, 409.32, 35.4178, 0.483 ) }
    dend_6 { pt3dadd( 420.39, 408.409, 36.6013, 0.3814 ) }
    dend_6 { pt3dadd( 420.971, 407.663, 37.7014, 0.2796 ) }
    dend_6 { pt3dadd( 422.065, 407.889, 38.3088, 0.2288 ) }
    dend_6 { pt3dadd( 423.159, 408.115, 38.9161, 0.2288 ) }
    dend_6 { pt3dadd( 424.252, 408.342, 39.5237, 0.2288 ) }
    dend_6 { pt3dadd( 425.346, 408.568, 40.131, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 9/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 399.19, 427.061, 14.0991, 0.6864 ) }
    dend_1 { pt3dadd( 400.225, 426.635, 14.2635, 0.9152 ) }
    // Section: apic_14, id: apic_14, parent: apic_0 (entry count 11/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 377.014, 419.182, 11.7698, 1.144 ) }
    apic_14 { pt3dadd( 377.307, 419.154, 11.1754, 0.839 ) }
    apic_14 { pt3dadd( 378.186, 419.07, 9.3934, 0.6864 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 14/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 377.014, 419.182, 11.7698, 1.144 ) }
    apic_1 { pt3dadd( 377.422, 418.096, 11.8412, 0.966 ) }
    apic_1 { pt3dadd( 378.101, 417.204, 12.3959, 0.9406 ) }
    apic_1 { pt3dadd( 377.907, 416.119, 12.8542, 0.8898 ) }
    apic_1 { pt3dadd( 377.817, 414.98, 12.88, 0.8644 ) }
    apic_1 { pt3dadd( 377.559, 413.866, 12.88, 0.8644 ) }
    apic_1 { pt3dadd( 377.4, 412.733, 12.8803, 0.8898 ) }
    apic_1 { pt3dadd( 377.328, 411.592, 12.8817, 0.9152 ) }
    apic_1 { pt3dadd( 376.972, 410.506, 12.8895, 0.9406 ) }
    apic_1 { pt3dadd( 376.512, 409.459, 12.9343, 0.966 ) }
    apic_1 { pt3dadd( 376.077, 408.409, 13.2392, 0.9914 ) }
    apic_1 { pt3dadd( 375.381, 407.559, 14.0059, 0.966 ) }
    apic_1 { pt3dadd( 374.797, 406.581, 14.2694, 0.9152 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 373.503, 408.993, 21.56, 0.2288 ) }
    dend_25 { pt3dadd( 373.11, 408.907, 22.9788, 0.4068 ) }
    dend_25 { pt3dadd( 372.473, 408.767, 25.2787, 0.3814 ) }
    dend_25 { pt3dadd( 371.798, 409.268, 26.1442, 0.356 ) }
    dend_25 { pt3dadd( 371.042, 409.832, 26.3144, 0.305 ) }
    dend_25 { pt3dadd( 370.098, 409.29, 27.1782, 0.356 ) }
    dend_25 { pt3dadd( 369.188, 409.066, 27.8569, 0.4576 ) }
    dend_25 { pt3dadd( 368.392, 409.886, 27.928, 0.5338 ) }
    dend_25 { pt3dadd( 367.496, 409.824, 28.9005, 0.5592 ) }
    dend_25 { pt3dadd( 366.563, 409.433, 30.21, 0.483 ) }
    dend_25 { pt3dadd( 365.664, 409.001, 31.4896, 0.4576 ) }
    dend_25 { pt3dadd( 365.192, 408.024, 32.3823, 0.4068 ) }
    dend_25 { pt3dadd( 364.722, 407.048, 33.2749, 0.4322 ) }
    dend_25 { pt3dadd( 364.252, 406.071, 34.1676, 0.4068 ) }
    dend_25 { pt3dadd( 363.781, 405.094, 35.0599, 0.3814 ) }
    dend_25 { pt3dadd( 363.282, 404.119, 35.7896, 0.305 ) }
    dend_25 { pt3dadd( 362.671, 403.152, 35.8823, 0.2542 ) }
    dend_25 { pt3dadd( 362.059, 402.187, 35.975, 0.2288 ) }
    dend_25 { pt3dadd( 361.448, 401.22, 36.0679, 0.2542 ) }
    dend_25 { pt3dadd( 360.836, 400.254, 36.1606, 0.2796 ) }
    dend_25 { pt3dadd( 360.374, 399.227, 36.2295, 0.3814 ) }
    dend_25 { pt3dadd( 360.14, 398.107, 36.2614, 0.4322 ) }
    dend_25 { pt3dadd( 359.47, 397.224, 36.5806, 0.483 ) }
    dend_25 { pt3dadd( 358.697, 396.396, 36.9676, 0.3814 ) }
    dend_25 { pt3dadd( 357.923, 395.568, 37.3542, 0.305 ) }
    dend_25 { pt3dadd( 357.15, 394.74, 37.7409, 0.2288 ) }
    dend_25 { pt3dadd( 356.377, 393.911, 38.1276, 0.2542 ) }
    dend_25 { pt3dadd( 355.603, 393.083, 38.5143, 0.2796 ) }
    dend_25 { pt3dadd( 354.83, 392.256, 38.901, 0.305 ) }
    dend_25 { pt3dadd( 354.349, 391.22, 38.906, 0.2796 ) }
    dend_25 { pt3dadd( 353.879, 390.177, 38.8965, 0.305 ) }
    dend_25 { pt3dadd( 353.409, 389.134, 38.887, 0.3304 ) }
    dend_25 { pt3dadd( 352.94, 388.091, 38.8774, 0.3814 ) }
    dend_25 { pt3dadd( 352.47, 387.047, 38.8679, 0.3814 ) }
    dend_25 { pt3dadd( 352.001, 386.004, 38.8584, 0.3814 ) }
    dend_25 { pt3dadd( 351.281, 385.136, 38.8629, 0.3814 ) }
    dend_25 { pt3dadd( 350.521, 384.305, 39.0334, 0.3304 ) }
    dend_25 { pt3dadd( 350.003, 383.352, 39.9266, 0.305 ) }
    dend_25 { pt3dadd( 349.485, 382.399, 40.8198, 0.2796 ) }
    dend_25 { pt3dadd( 348.968, 381.446, 41.7133, 0.305 ) }
    dend_25 { pt3dadd( 347.93, 381.143, 41.883, 0.2796 ) }
    dend_25 { pt3dadd( 346.802, 380.951, 41.9283, 0.2542 ) }
    dend_25 { pt3dadd( 345.674, 380.759, 41.974, 0.2288 ) }
    dend_25 { pt3dadd( 344.747, 380.115, 41.9866, 0.2288 ) }
    dend_25 { pt3dadd( 343.846, 379.41, 41.995, 0.2288 ) }
    dend_25 { pt3dadd( 343.704, 378.563, 41.9815, 0.2288 ) }
    dend_25 { pt3dadd( 343.772, 377.623, 42.7364, 0.2288 ) }
    dend_25 { pt3dadd( 343.389, 376.72, 44.1784, 0.2288 ) }
    dend_25 { pt3dadd( 343.005, 375.818, 45.6204, 0.2288 ) }
    dend_25 { pt3dadd( 342.622, 374.915, 47.0627, 0.2542 ) }
    dend_25 { pt3dadd( 341.908, 374.174, 47.6641, 0.305 ) }
    dend_25 { pt3dadd( 340.949, 373.552, 47.6384, 0.3814 ) }
    dend_25 { pt3dadd( 339.989, 372.929, 47.6129, 0.4576 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 80/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 373.503, 408.993, 21.56, 0.2288 ) }
    dend_24 { pt3dadd( 373.319, 408.588, 21.56, 0.3814 ) }
    dend_24 { pt3dadd( 372.498, 407.898, 21.56, 0.3304 ) }
    dend_24 { pt3dadd( 372.068, 406.875, 21.56, 0.2796 ) }
    dend_24 { pt3dadd( 371.242, 406.107, 21.56, 0.2288 ) }
    dend_24 { pt3dadd( 370.567, 405.4, 21.56, 0.2542 ) }
    dend_24 { pt3dadd( 369.938, 404.451, 21.56, 0.2796 ) }
    dend_24 { pt3dadd( 369.366, 403.483, 21.56, 0.356 ) }
    dend_24 { pt3dadd( 368.354, 403.054, 21.56, 0.4576 ) }
    dend_24 { pt3dadd( 367.211, 403.022, 21.56, 0.5848 ) }
    dend_24 { pt3dadd( 366.756, 402.097, 21.56, 0.6102 ) }
    dend_24 { pt3dadd( 366.466, 400.994, 21.56, 0.5592 ) }
    dend_24 { pt3dadd( 365.976, 399.992, 21.744, 0.5084 ) }
    dend_24 { pt3dadd( 365.288, 399.137, 22.3854, 0.5848 ) }
    dend_24 { pt3dadd( 364.343, 398.517, 22.4, 0.6356 ) }
    dend_24 { pt3dadd( 363.396, 397.881, 22.4, 0.661 ) }
    dend_24 { pt3dadd( 362.426, 397.277, 22.4, 0.5338 ) }
    dend_24 { pt3dadd( 361.38, 396.82, 22.4, 0.5084 ) }
    dend_24 { pt3dadd( 360.352, 396.343, 22.4, 0.4322 ) }
    dend_24 { pt3dadd( 359.364, 395.809, 22.4, 0.4322 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_24 { pt3dadd( 358.347, 395.344, 22.4, 0.3304 ) }
    dend_24 { pt3dadd( 357.554, 394.621, 22.4, 0.2796 ) }
    dend_24 { pt3dadd( 356.649, 394.165, 22.4, 0.2796 ) }
    dend_24 { pt3dadd( 355.959, 393.258, 22.4, 0.3814 ) }
    dend_24 { pt3dadd( 355.419, 392.252, 22.4, 0.5084 ) }
    dend_24 { pt3dadd( 354.624, 391.446, 22.4, 0.5592 ) }
    dend_24 { pt3dadd( 353.925, 390.547, 22.4, 0.5338 ) }
    dend_24 { pt3dadd( 353.151, 389.723, 22.4, 0.5084 ) }
    dend_24 { pt3dadd( 352.909, 388.62, 22.4, 0.5084 ) }
    dend_24 { pt3dadd( 351.889, 388.325, 22.4, 0.5338 ) }
    dend_24 { pt3dadd( 350.933, 387.701, 22.4, 0.483 ) }
    dend_24 { pt3dadd( 350.228, 386.802, 22.4, 0.4322 ) }
    dend_24 { pt3dadd( 349.356, 386.065, 22.4, 0.3814 ) }
    dend_24 { pt3dadd( 348.692, 385.134, 22.4, 0.4068 ) }
    dend_24 { pt3dadd( 348.044, 384.225, 22.4, 0.4322 ) }
    dend_24 { pt3dadd( 347.318, 383.425, 22.4, 0.483 ) }
    dend_24 { pt3dadd( 346.802, 382.415, 22.4, 0.5084 ) }
    dend_24 { pt3dadd( 345.856, 381.809, 22.4, 0.5084 ) }
    dend_24 { pt3dadd( 344.832, 381.41, 22.4, 0.483 ) }
    dend_24 { pt3dadd( 343.706, 381.248, 22.4, 0.4322 ) }
    dend_24 { pt3dadd( 342.762, 380.629, 22.4, 0.4576 ) }
    dend_24 { pt3dadd( 341.987, 379.803, 22.4, 0.4322 ) }
    dend_24 { pt3dadd( 341.195, 378.991, 22.4, 0.4322 ) }
    dend_24 { pt3dadd( 340.536, 378.066, 22.4, 0.3304 ) }
    dend_24 { pt3dadd( 340.284, 376.955, 22.4, 0.2796 ) }
    dend_24 { pt3dadd( 340.108, 375.851, 22.2776, 0.2288 ) }
    dend_24 { pt3dadd( 339.608, 374.833, 22.12, 0.2288 ) }
    dend_24 { pt3dadd( 338.909, 373.975, 22.12, 0.2542 ) }
    dend_24 { pt3dadd( 338.123, 373.174, 22.12, 0.3304 ) }
    dend_24 { pt3dadd( 337.626, 372.147, 22.12, 0.4576 ) }
    dend_24 { pt3dadd( 337.03, 371.18, 22.12, 0.5848 ) }
    dend_24 { pt3dadd( 336.786, 370.074, 22.12, 0.6356 ) }
    dend_24 { pt3dadd( 335.939, 369.388, 22.3793, 0.5848 ) }
    dend_24 { pt3dadd( 335.6, 368.302, 22.4, 0.4576 ) }
    dend_24 { pt3dadd( 335.246, 367.215, 22.4, 0.3304 ) }
    dend_24 { pt3dadd( 334.988, 366.104, 22.4, 0.2796 ) }
    dend_24 { pt3dadd( 334.362, 365.171, 22.4, 0.2796 ) }
    dend_24 { pt3dadd( 333.898, 364.136, 22.4, 0.305 ) }
    dend_24 { pt3dadd( 333.525, 363.059, 22.4, 0.2796 ) }
    dend_24 { pt3dadd( 333.253, 361.967, 22.4, 0.2542 ) }
    dend_24 { pt3dadd( 333.247, 360.823, 22.4, 0.2288 ) }
    dend_24 { pt3dadd( 333.247, 359.679, 22.4, 0.2288 ) }
    dend_24 { pt3dadd( 333.16, 358.566, 22.5714, 0.2288 ) }
    dend_24 { pt3dadd( 332.711, 357.577, 23.4514, 0.2288 ) }
    dend_24 { pt3dadd( 332.261, 356.588, 24.3312, 0.2288 ) }
    dend_24 { pt3dadd( 331.819, 355.559, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.531, 354.545, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.531, 353.401, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.833, 352.378, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.989, 351.266, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.989, 350.122, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.989, 348.978, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.989, 347.834, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.989, 346.69, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 331.989, 345.546, 24.64, 0.2542 ) }
    dend_24 { pt3dadd( 331.682, 344.464, 24.64, 0.2796 ) }
    dend_24 { pt3dadd( 331.23, 343.429, 24.64, 0.305 ) }
    dend_24 { pt3dadd( 330.742, 342.406, 24.64, 0.2796 ) }
    dend_24 { pt3dadd( 330.684, 341.264, 24.64, 0.2542 ) }
    dend_24 { pt3dadd( 330.286, 340.204, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 329.967, 339.109, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 329.625, 338.017, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 329.488, 336.883, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 329.471, 335.74, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 329.203, 334.659, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 328.933, 333.56, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 328.636, 332.456, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 328.098, 331.483, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 327.358, 330.734, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 326.966, 329.662, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 326.591, 328.581, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 326.336, 327.476, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 325.694, 326.599, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 325.419, 325.499, 24.64, 0.2288 ) }
    dend_24 { pt3dadd( 324.833, 324.517, 24.64, 0.2542 ) }
    dend_24 { pt3dadd( 324.014, 323.731, 24.64, 0.2796 ) }
    dend_24 { pt3dadd( 323.137, 323.039, 24.64, 0.305 ) }
    dend_24 { pt3dadd( 322.556, 322.072, 24.64, 0.2796 ) }
    dend_24 { pt3dadd( 321.848, 321.217, 24.64, 0.2796 ) }
    dend_24 { pt3dadd( 321.335, 320.199, 24.64, 0.356 ) }
    dend_24 { pt3dadd( 320.982, 319.125, 24.64, 0.4576 ) }
    dend_24 { pt3dadd( 320.301, 318.215, 24.64, 0.5084 ) }
    dend_24 { pt3dadd( 319.5, 317.442, 24.64, 0.4068 ) }
    dend_24 { pt3dadd( 319.176, 316.43, 24.64, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 390.395, 426.785, 26.9948, 0.9152 ) }
    dend_22 { pt3dadd( 391.543, 426.635, 27.4613, 0.661 ) }
    dend_22 { pt3dadd( 392.683, 426.728, 27.4112, 0.5084 ) }
    dend_22 { pt3dadd( 393.823, 426.821, 27.361, 0.4322 ) }
    dend_22 { pt3dadd( 394.963, 426.914, 27.3109, 0.3304 ) }
    dend_22 { pt3dadd( 396.103, 427.007, 27.2608, 0.2796 ) }
    dend_22 { pt3dadd( 397.243, 427.1, 27.2107, 0.2288 ) }
    dend_22 { pt3dadd( 398.383, 427.194, 27.1608, 0.2288 ) }
    dend_22 { pt3dadd( 399.523, 427.286, 27.1107, 0.2288 ) }
    dend_22 { pt3dadd( 400.663, 427.379, 27.0606, 0.2288 ) }
    dend_22 { pt3dadd( 401.766, 427.12, 27.041, 0.2542 ) }
    dend_22 { pt3dadd( 402.862, 426.792, 27.0276, 0.2796 ) }
    dend_22 { pt3dadd( 403.958, 426.463, 27.0141, 0.3304 ) }
    dend_22 { pt3dadd( 405.053, 426.133, 27.0004, 0.3304 ) }
    dend_22 { pt3dadd( 406.182, 425.961, 26.9878, 0.356 ) }
    dend_22 { pt3dadd( 407.317, 425.819, 26.9752, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_22 { pt3dadd( 408.43, 425.59, 26.9872, 0.483 ) }
    dend_22 { pt3dadd( 409.491, 425.165, 27.0564, 0.5848 ) }
    dend_22 { pt3dadd( 410.579, 424.816, 27.0875, 0.6102 ) }
    dend_22 { pt3dadd( 411.682, 424.514, 27.0942, 0.5338 ) }
    dend_22 { pt3dadd( 412.808, 424.349, 27.1606, 0.3814 ) }
    dend_22 { pt3dadd( 413.948, 424.287, 27.2726, 0.356 ) }
    dend_22 { pt3dadd( 415.09, 424.225, 27.3848, 0.3814 ) }
    dend_22 { pt3dadd( 416.232, 424.163, 27.4968, 0.4576 ) }
    dend_22 { pt3dadd( 417.129, 424.746, 27.4781, 0.3814 ) }
    dend_22 { pt3dadd( 417.941, 425.551, 27.414, 0.305 ) }
    dend_22 { pt3dadd( 418.842, 426.178, 27.3717, 0.2542 ) }
    dend_22 { pt3dadd( 419.974, 426.348, 27.3848, 0.2796 ) }
    dend_22 { pt3dadd( 421.105, 426.517, 27.3986, 0.356 ) }
    dend_22 { pt3dadd( 422.237, 426.688, 27.412, 0.4068 ) }
    dend_22 { pt3dadd( 423.367, 426.857, 27.4254, 0.483 ) }
    dend_22 { pt3dadd( 424.437, 427.132, 27.4341, 0.4576 ) }
    dend_22 { pt3dadd( 425.133, 428.039, 27.4145, 0.4322 ) }
    dend_22 { pt3dadd( 426.1, 428.475, 27.4022, 0.356 ) }
    dend_22 { pt3dadd( 427.047, 428.891, 27.4053, 0.3814 ) }
    dend_22 { pt3dadd( 427.594, 429.896, 27.431, 0.4068 ) }
    dend_22 { pt3dadd( 428.229, 430.838, 27.4492, 0.4576 ) }
    dend_22 { pt3dadd( 428.999, 431.685, 27.456, 0.4068 ) }
    dend_22 { pt3dadd( 429.768, 432.531, 27.4624, 0.3304 ) }
    dend_22 { pt3dadd( 430.571, 433.336, 27.4694, 0.2542 ) }
    dend_22 { pt3dadd( 431.574, 433.886, 27.4806, 0.2288 ) }
    dend_22 { pt3dadd( 432.577, 434.435, 27.4915, 0.2288 ) }
    dend_22 { pt3dadd( 433.574, 434.996, 27.4957, 0.2288 ) }
    dend_22 { pt3dadd( 434.536, 435.616, 27.4663, 0.2288 ) }
    dend_22 { pt3dadd( 435.497, 436.235, 27.4372, 0.2542 ) }
    dend_22 { pt3dadd( 436.459, 436.855, 27.4081, 0.2796 ) }
    dend_22 { pt3dadd( 437.523, 437.204, 27.3969, 0.356 ) }
    dend_22 { pt3dadd( 438.653, 437.379, 27.3974, 0.3814 ) }
    dend_22 { pt3dadd( 439.783, 437.554, 27.3977, 0.4322 ) }
    dend_22 { pt3dadd( 440.915, 437.73, 27.3983, 0.4068 ) }
    dend_22 { pt3dadd( 442.039, 437.806, 27.4106, 0.4068 ) }
    dend_22 { pt3dadd( 443.14, 437.495, 27.4697, 0.356 ) }
    dend_22 { pt3dadd( 444.24, 437.184, 27.529, 0.356 ) }
    dend_22 { pt3dadd( 445.22, 437.739, 27.4921, 0.3814 ) }
    dend_22 { pt3dadd( 446.193, 438.34, 27.4498, 0.4322 ) }
    dend_22 { pt3dadd( 447.259, 438.706, 27.1502, 0.4576 ) }
    dend_22 { pt3dadd( 448.353, 439.004, 26.7761, 0.4576 ) }
    dend_22 { pt3dadd( 449.447, 439.303, 26.402, 0.4576 ) }
    dend_22 { pt3dadd( 450.526, 439.637, 25.9896, 0.4322 ) }
    dend_22 { pt3dadd( 451.561, 440.075, 25.4632, 0.4068 ) }
    dend_22 { pt3dadd( 452.595, 440.513, 24.9368, 0.3814 ) }
    dend_22 { pt3dadd( 453.629, 440.953, 24.4101, 0.3814 ) }
    dend_22 { pt3dadd( 454.741, 440.98, 24.7772, 0.3814 ) }
    dend_22 { pt3dadd( 455.865, 440.941, 25.2921, 0.4576 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 48/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 390.395, 426.785, 26.9948, 0.9152 ) }
    dend_19 { pt3dadd( 390.484, 427.03, 27.1681, 0.5338 ) }
    dend_19 { pt3dadd( 390.861, 428.068, 27.9023, 0.356 ) }
    dend_19 { pt3dadd( 391.239, 429.105, 28.6364, 0.305 ) }
    dend_19 { pt3dadd( 391.163, 430.222, 28.7574, 0.3814 ) }
    dend_19 { pt3dadd( 391.227, 431.333, 28.7602, 0.5084 ) }
    dend_19 { pt3dadd( 391.607, 432.411, 28.761, 0.5338 ) }
    dend_19 { pt3dadd( 391.487, 433.515, 28.814, 0.4576 ) }
    dend_19 { pt3dadd( 391.812, 434.58, 29.2421, 0.356 ) }
    dend_19 { pt3dadd( 392.196, 435.64, 29.7072, 0.356 ) }
    dend_19 { pt3dadd( 392.582, 436.7, 30.172, 0.4068 ) }
    dend_19 { pt3dadd( 392.687, 437.76, 30.4772, 0.4322 ) }
    dend_19 { pt3dadd( 392.252, 438.818, 30.4752, 0.356 ) }
    dend_19 { pt3dadd( 392.405, 439.579, 30.4954, 0.2796 ) }
    dend_19 { pt3dadd( 393.515, 439.853, 30.5519, 0.2288 ) }
    dend_19 { pt3dadd( 394.625, 440.129, 30.6085, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 64/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 364.359, 443.175, 12.9805, 0.6864 ) }
    dend_15 { pt3dadd( 364.192, 444.364, 11.6544, 0.5084 ) }
    dend_15 { pt3dadd( 363.968, 445.431, 11.5396, 0.483 ) }
    dend_15 { pt3dadd( 363.046, 446.077, 11.594, 0.4068 ) }
    dend_15 { pt3dadd( 362.551, 447.073, 10.9441, 0.3814 ) }
    dend_15 { pt3dadd( 362.055, 448.069, 10.2945, 0.3814 ) }
    dend_15 { pt3dadd( 361.559, 449.066, 9.6446, 0.4322 ) }
    dend_15 { pt3dadd( 361.28, 450.153, 9.4223, 0.4322 ) }
    dend_15 { pt3dadd( 361.107, 451.283, 9.4119, 0.3814 ) }
    dend_15 { pt3dadd( 360.941, 452.413, 9.3817, 0.3814 ) }
    dend_15 { pt3dadd( 361.124, 453.467, 8.3927, 0.4322 ) }
    dend_15 { pt3dadd( 361.039, 454.502, 7.7232, 0.5338 ) }
    dend_15 { pt3dadd( 360.521, 455.516, 7.628, 0.5338 ) }
    dend_15 { pt3dadd( 360.271, 456.632, 7.6502, 0.4576 ) }
    dend_15 { pt3dadd( 360.02, 457.748, 7.672, 0.3304 ) }
    dend_15 { pt3dadd( 359.745, 458.852, 7.6936, 0.2796 ) }
    dend_15 { pt3dadd( 358.992, 459.713, 7.7109, 0.305 ) }
    dend_15 { pt3dadd( 358.884, 460.745, 7.6759, 0.3814 ) }
    dend_15 { pt3dadd( 359.112, 461.866, 7.6138, 0.4068 ) }
    dend_15 { pt3dadd( 359.304, 462.988, 7.7935, 0.3814 ) }
    dend_15 { pt3dadd( 359.358, 464.092, 8.0461, 0.356 ) }
    dend_15 { pt3dadd( 358.792, 465.086, 8.0346, 0.3814 ) }
    dend_15 { pt3dadd( 358.298, 466.106, 8.0276, 0.4576 ) }
    dend_15 { pt3dadd( 358.111, 467.235, 8.0385, 0.483 ) }
    dend_15 { pt3dadd( 357.954, 468.364, 8.0486, 0.483 ) }
    dend_15 { pt3dadd( 358.085, 469.5, 8.0503, 0.483 ) }
    dend_15 { pt3dadd( 358.215, 470.637, 8.0522, 0.483 ) }
    dend_15 { pt3dadd( 358.344, 471.773, 8.0542, 0.5084 ) }
    dend_15 { pt3dadd( 357.89, 472.748, 7.436, 0.4576 ) }
    dend_15 { pt3dadd( 357.315, 473.687, 6.6884, 0.4576 ) }
    dend_15 { pt3dadd( 357.427, 474.723, 6.4044, 0.4068 ) }
    dend_15 { pt3dadd( 357.818, 475.798, 6.3084, 0.4576 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 364.359, 443.175, 12.9805, 0.6864 ) }
    dend_14 { pt3dadd( 363.443, 443.132, 13.1082, 0.6102 ) }
    dend_14 { pt3dadd( 362.347, 442.866, 12.7739, 0.6356 ) }
    dend_14 { pt3dadd( 361.293, 442.515, 12.1142, 0.6356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( 360.263, 442.042, 11.7972, 0.6356 ) }
    dend_14 { pt3dadd( 359.229, 441.554, 11.7594, 0.6102 ) }
    dend_14 { pt3dadd( 358.145, 441.192, 11.7566, 0.6102 ) }
    dend_14 { pt3dadd( 357.061, 440.83, 11.7387, 0.6102 ) }
    dend_14 { pt3dadd( 356.009, 440.382, 11.6357, 0.5848 ) }
    dend_14 { pt3dadd( 355.021, 439.851, 11.1152, 0.5338 ) }
    dend_14 { pt3dadd( 354.087, 439.2, 10.9418, 0.4322 ) }
    dend_14 { pt3dadd( 353.197, 438.483, 11.0009, 0.356 ) }
    dend_14 { pt3dadd( 352.406, 437.773, 10.0176, 0.305 ) }
    dend_14 { pt3dadd( 351.563, 437.082, 10.7072, 0.305 ) }
    dend_14 { pt3dadd( 350.51, 436.74, 11.375, 0.305 ) }
    dend_14 { pt3dadd( 349.419, 436.427, 11.1194, 0.356 ) }
    dend_14 { pt3dadd( 348.361, 436.066, 11.6981, 0.4576 ) }
    dend_14 { pt3dadd( 347.338, 435.557, 11.8126, 0.5848 ) }
    dend_14 { pt3dadd( 346.36, 434.975, 12.1069, 0.661 ) }
    dend_14 { pt3dadd( 345.554, 434.218, 12.8243, 0.6356 ) }
    dend_14 { pt3dadd( 344.742, 433.414, 12.8808, 0.5338 ) }
    dend_14 { pt3dadd( 343.915, 432.623, 12.8834, 0.3814 ) }
    dend_14 { pt3dadd( 343.03, 431.899, 12.8957, 0.3304 ) }
    dend_14 { pt3dadd( 341.97, 431.47, 12.9867, 0.356 ) }
    dend_14 { pt3dadd( 341.06, 430.826, 13.606, 0.483 ) }
    dend_14 { pt3dadd( 340.144, 430.157, 13.9395, 0.5084 ) }
    dend_14 { pt3dadd( 339.152, 429.605, 13.6562, 0.5084 ) }
    dend_14 { pt3dadd( 338.271, 429.049, 12.514, 0.4322 ) }
    dend_14 { pt3dadd( 337.252, 428.625, 11.814, 0.4068 ) }
    dend_14 { pt3dadd( 336.273, 428.034, 11.7953, 0.4068 ) }
    dend_14 { pt3dadd( 335.237, 427.564, 11.9876, 0.4576 ) }
    dend_14 { pt3dadd( 334.236, 427.122, 12.7607, 0.5338 ) }
    dend_14 { pt3dadd( 333.156, 426.746, 12.88, 0.5848 ) }
    dend_14 { pt3dadd( 332.065, 426.4, 12.88, 0.5848 ) }
    dend_14 { pt3dadd( 330.973, 426.069, 12.88, 0.5338 ) }
    dend_14 { pt3dadd( 329.981, 425.506, 12.8806, 0.4576 ) }
    dend_14 { pt3dadd( 329.112, 424.765, 12.8825, 0.3814 ) }
    dend_14 { pt3dadd( 328.131, 424.283, 12.8951, 0.3814 ) }
    dend_14 { pt3dadd( 327.032, 424.593, 12.9844, 0.4068 ) }
    dend_14 { pt3dadd( 325.961, 424.659, 13.3857, 0.5084 ) }
    dend_14 { pt3dadd( 325.005, 424.107, 14.0398, 0.5338 ) }
    dend_14 { pt3dadd( 323.969, 423.647, 14.338, 0.5848 ) }
    dend_14 { pt3dadd( 322.975, 423.135, 14.891, 0.5338 ) }
    dend_14 { pt3dadd( 322.043, 422.49, 15.0436, 0.5084 ) }
    dend_14 { pt3dadd( 321.26, 421.664, 15.0562, 0.4322 ) }
    dend_14 { pt3dadd( 320.225, 421.493, 15.2337, 0.483 ) }
    dend_14 { pt3dadd( 319.168, 421.113, 15.598, 0.5338 ) }
    dend_14 { pt3dadd( 318.17, 420.611, 15.762, 0.661 ) }
    dend_14 { pt3dadd( 317.101, 420.316, 15.3073, 0.6864 ) }
    dend_14 { pt3dadd( 315.967, 420.222, 15.0814, 0.7626 ) }
    dend_14 { pt3dadd( 314.863, 419.976, 14.8666, 0.7626 ) }
    dend_14 { pt3dadd( 313.82, 419.557, 14.3685, 0.788 ) }
    dend_14 { pt3dadd( 312.844, 419.003, 14.007, 0.7372 ) }
    dend_14 { pt3dadd( 311.945, 418.297, 13.9387, 0.7372 ) }
    dend_14 { pt3dadd( 310.996, 417.68, 13.8138, 0.7372 ) }
    dend_14 { pt3dadd( 309.958, 417.221, 13.9328, 0.8136 ) }
    dend_14 { pt3dadd( 308.951, 416.733, 14.495, 0.8136 ) }
    dend_14 { pt3dadd( 307.993, 416.171, 15.1631, 0.8136 ) }
    dend_14 { pt3dadd( 307.005, 415.678, 15.8326, 0.7372 ) }
    dend_14 { pt3dadd( 305.965, 415.249, 16.2148, 0.7626 ) }
    dend_14 { pt3dadd( 304.9, 414.84, 16.2842, 0.8136 ) }
    dend_14 { pt3dadd( 303.82, 414.483, 16.5318, 0.8136 ) }
    dend_14 { pt3dadd( 302.746, 414.114, 16.613, 0.6864 ) }
    dend_14 { pt3dadd( 301.667, 413.745, 16.3741, 0.483 ) }
    dend_14 { pt3dadd( 300.589, 413.376, 16.135, 0.4068 ) }
    dend_14 { pt3dadd( 299.487, 413.099, 16.0101, 0.4322 ) }
    dend_14 { pt3dadd( 298.354, 412.944, 16.0317, 0.5338 ) }
    dend_14 { pt3dadd( 297.22, 412.793, 16.053, 0.5848 ) }
    dend_14 { pt3dadd( 296.095, 412.993, 16.0588, 0.6102 ) }
    dend_14 { pt3dadd( 294.968, 413.194, 16.0647, 0.5592 ) }
    dend_14 { pt3dadd( 293.841, 413.39, 16.0602, 0.483 ) }
    dend_14 { pt3dadd( 292.713, 413.581, 16.0507, 0.4322 ) }
    dend_14 { pt3dadd( 291.585, 413.773, 16.0412, 0.483 ) }
    dend_14 { pt3dadd( 290.457, 413.966, 16.0317, 0.5848 ) }
    dend_14 { pt3dadd( 289.474, 414.503, 16.0454, 0.6864 ) }
    dend_14 { pt3dadd( 288.545, 415.171, 16.0678, 0.7118 ) }
    dend_14 { pt3dadd( 287.583, 415.766, 16.0815, 0.6864 ) }
    dend_14 { pt3dadd( 286.469, 416.026, 16.0563, 0.5848 ) }
    dend_14 { pt3dadd( 285.356, 416.287, 16.0311, 0.5084 ) }
    dend_14 { pt3dadd( 284.237, 416.239, 16.0132, 0.483 ) }
    dend_14 { pt3dadd( 283.115, 416.014, 15.9998, 0.483 ) }
    dend_14 { pt3dadd( 282.007, 416.085, 16.0157, 0.5592 ) }
    dend_14 { pt3dadd( 280.913, 416.417, 16.0574, 0.6356 ) }
    dend_14 { pt3dadd( 279.792, 416.598, 16.088, 0.8136 ) }
    dend_14 { pt3dadd( 278.65, 416.653, 16.109, 0.8644 ) }
    dend_14 { pt3dadd( 277.659, 417.172, 16.1132, 0.839 ) }
    dend_14 { pt3dadd( 276.652, 417.663, 16.1081, 0.661 ) }
    dend_14 { pt3dadd( 275.522, 417.838, 16.0916, 0.5592 ) }
    dend_14 { pt3dadd( 274.391, 418.012, 16.0751, 0.483 ) }
    dend_14 { pt3dadd( 273.268, 418.149, 16.1039, 0.483 ) }
    dend_14 { pt3dadd( 272.299, 417.643, 16.9274, 0.3814 ) }
    dend_14 { pt3dadd( 271.331, 417.138, 17.7512, 0.3814 ) }
    dend_14 { pt3dadd( 270.36, 416.632, 18.5749, 0.4322 ) }
    dend_14 { pt3dadd( 269.368, 416.124, 19.0515, 0.5592 ) }
    dend_14 { pt3dadd( 268.345, 415.613, 19.059, 0.5338 ) }
    dend_14 { pt3dadd( 267.323, 415.099, 19.0666, 0.4068 ) }
    dend_14 { pt3dadd( 266.408, 414.413, 19.0658, 0.305 ) }
    dend_14 { pt3dadd( 265.493, 413.727, 19.0649, 0.2796 ) }
    dend_14 { pt3dadd( 265.062, 412.796, 19.08, 0.356 ) }
    dend_14 { pt3dadd( 265.06, 411.652, 19.1089, 0.3814 ) }
    dend_14 { pt3dadd( 264.739, 410.743, 19.1349, 0.4068 ) }
    dend_14 { pt3dadd( 263.648, 410.396, 19.1545, 0.3304 ) }
    dend_14 { pt3dadd( 262.686, 409.855, 19.1377, 0.2796 ) }
    dend_14 { pt3dadd( 261.931, 408.995, 19.0616, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_14 { pt3dadd( 261.483, 407.996, 19.0355, 0.3814 ) }
    dend_14 { pt3dadd( 261.331, 406.862, 19.0576, 0.5338 ) }
    dend_14 { pt3dadd( 261.179, 405.729, 19.0798, 0.6864 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 3/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 375.623, 443.956, 18.6306, 0.9152 ) }
    dend_12 { pt3dadd( 375.094, 444.402, 18.811, 0.5338 ) }
    dend_12 { pt3dadd( 374.174, 445.045, 19.3494, 0.356 ) }
    dend_12 { pt3dadd( 373.253, 445.688, 19.8881, 0.2542 ) }
    dend_12 { pt3dadd( 372.464, 446.393, 20.3616, 0.2288 ) }
    dend_12 { pt3dadd( 372.568, 447.533, 20.3879, 0.2288 ) }
    dend_12 { pt3dadd( 372.428, 448.593, 20.4064, 0.2796 ) }
    dend_12 { pt3dadd( 371.68, 449.459, 20.4047, 0.3814 ) }
    dend_12 { pt3dadd( 370.932, 450.324, 20.403, 0.483 ) }
    dend_12 { pt3dadd( 370.161, 451.132, 20.9292, 0.5338 ) }
    dend_12 { pt3dadd( 369.384, 451.92, 21.637, 0.483 ) }
    dend_12 { pt3dadd( 368.606, 452.707, 22.3446, 0.4576 ) }
    dend_12 { pt3dadd( 367.828, 453.495, 23.0524, 0.4322 ) }
    dend_12 { pt3dadd( 367.772, 454.635, 23.0376, 0.4576 ) }
    dend_12 { pt3dadd( 367.72, 455.778, 23.0174, 0.4322 ) }
    dend_12 { pt3dadd( 367.67, 456.921, 22.9972, 0.356 ) }
    dend_12 { pt3dadd( 367.87, 458.019, 23.0045, 0.2796 ) }
    dend_12 { pt3dadd( 368.314, 459.073, 23.0378, 0.2288 ) }
    dend_12 { pt3dadd( 367.689, 460.002, 23.0208, 0.2288 ) }
    dend_12 { pt3dadd( 367.012, 460.926, 23.0017, 0.2288 ) }
    dend_12 { pt3dadd( 366.336, 461.849, 22.9824, 0.2796 ) }
    dend_12 { pt3dadd( 366.337, 462.985, 22.9981, 0.3304 ) }
    dend_12 { pt3dadd( 366.361, 464.128, 23.0149, 0.4068 ) }
    dend_12 { pt3dadd( 366.387, 465.272, 23.0317, 0.4322 ) }
    dend_12 { pt3dadd( 366.392, 466.413, 23.1045, 0.4576 ) }
    dend_12 { pt3dadd( 366.295, 467.544, 23.4758, 0.4322 ) }
    dend_12 { pt3dadd( 366.198, 468.673, 23.8468, 0.356 ) }
    dend_12 { pt3dadd( 366.101, 469.803, 24.2178, 0.305 ) }
    dend_12 { pt3dadd( 365.659, 470.835, 24.3303, 0.305 ) }
    dend_12 { pt3dadd( 365.335, 471.862, 24.3516, 0.3814 ) }
    dend_12 { pt3dadd( 365.636, 472.966, 24.3603, 0.4322 ) }
    dend_12 { pt3dadd( 365.752, 474.078, 24.376, 0.4576 ) }
    dend_12 { pt3dadd( 365.552, 475.205, 24.4037, 0.4322 ) }
    dend_12 { pt3dadd( 365.35, 476.331, 24.4314, 0.3814 ) }
    dend_12 { pt3dadd( 364.51, 477.051, 24.411, 0.3304 ) }
    dend_12 { pt3dadd( 363.577, 477.711, 24.3835, 0.305 ) }
    dend_12 { pt3dadd( 363.515, 478.849, 24.3838, 0.305 ) }
    dend_12 { pt3dadd( 363.457, 479.988, 24.3846, 0.2796 ) }
    dend_12 { pt3dadd( 362.69, 480.837, 24.4138, 0.2542 ) }
    dend_12 { pt3dadd( 361.978, 481.722, 24.4345, 0.2288 ) }
    dend_12 { pt3dadd( 361.485, 482.754, 24.4219, 0.2288 ) }
    dend_12 { pt3dadd( 360.99, 483.786, 24.4096, 0.2542 ) }
    dend_12 { pt3dadd( 360.489, 484.81, 24.519, 0.305 ) }
    dend_12 { pt3dadd( 359.969, 485.81, 25.0001, 0.356 ) }
    dend_12 { pt3dadd( 359.448, 486.81, 25.4811, 0.356 ) }
    dend_12 { pt3dadd( 358.928, 487.809, 25.9622, 0.305 ) }
    dend_12 { pt3dadd( 359.031, 488.883, 26.1066, 0.2542 ) }
    dend_12 { pt3dadd( 359.349, 489.982, 26.1352, 0.2288 ) }
    dend_12 { pt3dadd( 359.492, 491.09, 26.3469, 0.2288 ) }
    dend_12 { pt3dadd( 359.381, 492.211, 26.8288, 0.2288 ) }
    dend_12 { pt3dadd( 359.269, 493.333, 27.3106, 0.2288 ) }
    dend_12 { pt3dadd( 359.156, 494.454, 27.7925, 0.2542 ) }
    dend_12 { pt3dadd( 359.044, 495.575, 28.2744, 0.2796 ) }
    dend_12 { pt3dadd( 358.916, 496.696, 28.6992, 0.305 ) }
    dend_12 { pt3dadd( 358.67, 497.813, 28.7112, 0.2796 ) }
    dend_12 { pt3dadd( 358.424, 498.93, 28.7232, 0.2542 ) }
    dend_12 { pt3dadd( 358.178, 500.048, 28.7353, 0.2288 ) }
    dend_12 { pt3dadd( 357.932, 501.165, 28.7473, 0.2288 ) }
    dend_12 { pt3dadd( 357.839, 502.28, 29.269, 0.2288 ) }
    dend_12 { pt3dadd( 357.772, 503.394, 29.8816, 0.2288 ) }
    dend_12 { pt3dadd( 357.705, 504.509, 30.494, 0.2288 ) }
    dend_12 { pt3dadd( 357.638, 505.623, 31.1066, 0.2288 ) }
    dend_12 { pt3dadd( 357.384, 506.704, 31.4241, 0.2288 ) }
    dend_12 { pt3dadd( 356.92, 507.75, 31.407, 0.2288 ) }
    dend_12 { pt3dadd( 356.456, 508.795, 31.3902, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 68/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 375.623, 443.956, 18.6306, 0.9152 ) }
    dend_11 { pt3dadd( 375.679, 444.143, 18.8166, 0.7626 ) }
    dend_11 { pt3dadd( 375.915, 445.172, 19.8475, 0.6102 ) }
    dend_11 { pt3dadd( 375.825, 446.23, 20.8065, 0.5084 ) }
    dend_11 { pt3dadd( 375.549, 447.31, 21.3956, 0.4322 ) }
    dend_11 { pt3dadd( 375.313, 448.369, 22.16, 0.4322 ) }
    dend_11 { pt3dadd( 374.899, 449.377, 22.7772, 0.483 ) }
    dend_11 { pt3dadd( 374.947, 450.496, 22.757, 0.6102 ) }
    dend_11 { pt3dadd( 375.321, 451.564, 22.3583, 0.661 ) }
    dend_11 { pt3dadd( 375.735, 452.604, 22.4022, 0.5848 ) }
    dend_11 { pt3dadd( 375.952, 453.639, 23.0051, 0.4322 ) }
    dend_11 { pt3dadd( 375.941, 454.771, 23.0588, 0.3814 ) }
    dend_11 { pt3dadd( 376.044, 455.91, 23.0731, 0.4068 ) }
    dend_11 { pt3dadd( 376.036, 457.053, 23.0807, 0.4576 ) }
    dend_11 { pt3dadd( 376.004, 458.197, 23.0871, 0.4068 ) }
    dend_11 { pt3dadd( 375.971, 459.34, 23.0933, 0.356 ) }
    dend_11 { pt3dadd( 376.05, 460.444, 23.7692, 0.305 ) }
    dend_11 { pt3dadd( 376.138, 461.544, 24.5073, 0.305 ) }
    dend_11 { pt3dadd( 375.98, 462.636, 24.8441, 0.3304 ) }
    dend_11 { pt3dadd( 375.619, 463.721, 24.8492, 0.3304 ) }
    dend_11 { pt3dadd( 375.257, 464.807, 24.8542, 0.3304 ) }
    dend_11 { pt3dadd( 374.915, 465.873, 25.2106, 0.2796 ) }
    dend_11 { pt3dadd( 374.606, 466.911, 26.1162, 0.2542 ) }
    dend_11 { pt3dadd( 374.297, 467.949, 27.0214, 0.2288 ) }
    dend_11 { pt3dadd( 374.065, 468.987, 27.8368, 0.2288 ) }
    dend_11 { pt3dadd( 374.509, 470.042, 27.8673, 0.2288 ) }
    dend_11 { pt3dadd( 374.662, 471.114, 27.895, 0.2542 ) }
    dend_11 { pt3dadd( 374.349, 472.214, 27.9188, 0.2796 ) }
    dend_11 { pt3dadd( 374.034, 473.314, 27.9423, 0.305 ) }
    dend_11 { pt3dadd( 373.721, 474.413, 27.9661, 0.305 ) }
    dend_11 { pt3dadd( 374.129, 475.388, 27.9115, 0.305 ) }
    dend_11 { pt3dadd( 374.523, 476.376, 27.8589, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 374.271, 477.466, 27.8746, 0.3304 ) }
    dend_11 { pt3dadd( 373.127, 477.467, 27.8986, 0.356 ) }
    dend_11 { pt3dadd( 372.272, 477.862, 27.921, 0.3304 ) }
    dend_11 { pt3dadd( 371.927, 478.953, 27.9401, 0.3304 ) }
    dend_11 { pt3dadd( 371.642, 479.991, 28.5552, 0.2796 ) }
    dend_11 { pt3dadd( 371.437, 480.964, 29.941, 0.2796 ) }
    dend_11 { pt3dadd( 371.234, 481.938, 31.3267, 0.2796 ) }
    dend_11 { pt3dadd( 371.354, 482.865, 32.2722, 0.305 ) }
    dend_11 { pt3dadd( 372.131, 483.705, 32.3263, 0.2796 ) }
    dend_11 { pt3dadd( 372.56, 484.574, 33.5289, 0.2542 ) }
    dend_11 { pt3dadd( 372.861, 485.454, 35.159, 0.2288 ) }
    dend_11 { pt3dadd( 373.082, 486.435, 36.1906, 0.2542 ) }
    dend_11 { pt3dadd( 373.177, 487.574, 36.2583, 0.2796 ) }
    dend_11 { pt3dadd( 373.54, 488.574, 36.4652, 0.305 ) }
    dend_11 { pt3dadd( 374.385, 489.322, 36.9236, 0.2796 ) }
    dend_11 { pt3dadd( 374.976, 490.265, 37.1613, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 16/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 425.346, 408.568, 40.131, 0.2288 ) }
    dend_8 { pt3dadd( 425.608, 408.57, 39.8972, 0.356 ) }
    dend_8 { pt3dadd( 426.682, 408.581, 38.9365, 0.356 ) }
    dend_8 { pt3dadd( 427.778, 408.56, 38.8128, 0.305 ) }
    dend_8 { pt3dadd( 428.892, 408.514, 39.4338, 0.2542 ) }
    dend_8 { pt3dadd( 430.007, 408.467, 40.0548, 0.2288 ) }
    dend_8 { pt3dadd( 431.121, 408.421, 40.6762, 0.2288 ) }
    dend_8 { pt3dadd( 432.235, 408.374, 41.2972, 0.2288 ) }
    dend_8 { pt3dadd( 433.351, 408.327, 41.9182, 0.2288 ) }
    dend_8 { pt3dadd( 434.465, 408.281, 42.5393, 0.2288 ) }
    dend_8 { pt3dadd( 435.579, 408.234, 43.1606, 0.2288 ) }
    dend_8 { pt3dadd( 436.656, 408.233, 43.9603, 0.2288 ) }
    dend_8 { pt3dadd( 437.55, 408.452, 45.6218, 0.2288 ) }
    dend_8 { pt3dadd( 438.445, 408.67, 47.283, 0.2288 ) }
    dend_8 { pt3dadd( 439.34, 408.887, 48.9446, 0.2288 ) }
    dend_8 { pt3dadd( 440.225, 409.205, 50.3062, 0.2288 ) }
    dend_8 { pt3dadd( 441.069, 409.978, 50.2967, 0.2288 ) }
    dend_8 { pt3dadd( 441.914, 410.75, 50.2872, 0.2796 ) }
    dend_8 { pt3dadd( 442.961, 410.984, 50.3154, 0.3304 ) }
    dend_8 { pt3dadd( 444.096, 410.992, 50.4554, 0.4322 ) }
    dend_8 { pt3dadd( 445.166, 411.208, 51.2926, 0.4322 ) }
    dend_8 { pt3dadd( 446.236, 411.425, 52.1301, 0.4322 ) }
    dend_8 { pt3dadd( 447.306, 411.641, 52.9673, 0.3304 ) }
    dend_8 { pt3dadd( 448.376, 411.857, 53.8048, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 40/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 425.346, 408.568, 40.131, 0.2288 ) }
    dend_7 { pt3dadd( 425.889, 408.326, 39.8723, 0.5084 ) }
    dend_7 { pt3dadd( 426.917, 407.865, 39.3828, 0.5338 ) }
    dend_7 { pt3dadd( 427.945, 407.405, 38.8931, 0.4576 ) }
    dend_7 { pt3dadd( 428.94, 406.906, 38.4392, 0.3304 ) }
    dend_7 { pt3dadd( 429.534, 405.928, 38.4247, 0.2542 ) }
    dend_7 { pt3dadd( 430.129, 404.95, 38.4098, 0.2288 ) }
    dend_7 { pt3dadd( 430.723, 403.973, 38.3953, 0.2542 ) }
    dend_7 { pt3dadd( 431.317, 402.995, 38.3804, 0.2796 ) }
    dend_7 { pt3dadd( 431.881, 402.004, 38.3242, 0.305 ) }
    dend_7 { pt3dadd( 432.271, 400.934, 38.0338, 0.2796 ) }
    dend_7 { pt3dadd( 432.661, 399.866, 37.7434, 0.2542 ) }
    dend_7 { pt3dadd( 433.287, 398.951, 37.6037, 0.2288 ) }
    dend_7 { pt3dadd( 434.126, 398.173, 37.5992, 0.2288 ) }
    dend_7 { pt3dadd( 434.965, 397.395, 37.5945, 0.2288 ) }
    dend_7 { pt3dadd( 435.746, 396.585, 37.5897, 0.2288 ) }
    dend_7 { pt3dadd( 435.988, 395.466, 37.5813, 0.2288 ) }
    dend_7 { pt3dadd( 436.229, 394.348, 37.5726, 0.2288 ) }
    dend_7 { pt3dadd( 436.471, 393.229, 37.5642, 0.2288 ) }
    dend_7 { pt3dadd( 436.69, 392.107, 37.5595, 0.2288 ) }
    dend_7 { pt3dadd( 436.841, 390.973, 37.5659, 0.2288 ) }
    dend_7 { pt3dadd( 436.992, 389.84, 37.5724, 0.2796 ) }
    dend_7 { pt3dadd( 437.143, 388.705, 37.5788, 0.3814 ) }
    dend_7 { pt3dadd( 437.294, 387.571, 37.5855, 0.483 ) }
    dend_7 { pt3dadd( 437.682, 386.506, 37.5665, 0.5338 ) }
    dend_7 { pt3dadd( 438.16, 385.467, 37.5379, 0.483 ) }
    dend_7 { pt3dadd( 438.638, 384.429, 37.5091, 0.4322 ) }
    dend_7 { pt3dadd( 439.424, 383.6, 37.5595, 0.3304 ) }
    dend_7 { pt3dadd( 440.223, 382.781, 37.6132, 0.2796 ) }
    dend_7 { pt3dadd( 439.773, 381.866, 36.9768, 0.2288 ) }
    dend_7 { pt3dadd( 439.171, 380.939, 36.2561, 0.2288 ) }
    dend_7 { pt3dadd( 438.568, 380.012, 35.5351, 0.2288 ) }
    dend_7 { pt3dadd( 437.635, 379.402, 35.3998, 0.2288 ) }
    dend_7 { pt3dadd( 436.625, 378.865, 35.399, 0.2796 ) }
    dend_7 { pt3dadd( 435.673, 378.281, 35.3993, 0.356 ) }
    dend_7 { pt3dadd( 435.359, 377.181, 35.4077, 0.4322 ) }
    dend_7 { pt3dadd( 434.649, 376.421, 35.3704, 0.4322 ) }
    dend_7 { pt3dadd( 433.61, 375.941, 35.2954, 0.4068 ) }
    dend_7 { pt3dadd( 432.618, 375.374, 35.3895, 0.4576 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 79/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 400.225, 426.635, 14.2635, 0.9152 ) }
    dend_5 { pt3dadd( 401.639, 427.03, 14.1498, 0.7372 ) }
    dend_5 { pt3dadd( 402.309, 427.786, 13.1244, 0.7372 ) }
    dend_5 { pt3dadd( 402.864, 428.653, 11.9031, 0.7372 ) }
    dend_5 { pt3dadd( 403.311, 429.637, 11.2, 0.7626 ) }
    dend_5 { pt3dadd( 404.007, 430.525, 11.2, 0.7118 ) }
    dend_5 { pt3dadd( 404.29, 431.609, 11.2, 0.6356 ) }
    dend_5 { pt3dadd( 404.29, 432.754, 11.2, 0.5084 ) }
    dend_5 { pt3dadd( 404.55, 433.851, 11.2, 0.4322 ) }
    dend_5 { pt3dadd( 405.197, 434.791, 11.2, 0.356 ) }
    dend_5 { pt3dadd( 405.927, 435.667, 11.2, 0.3304 ) }
    dend_5 { pt3dadd( 406.231, 436.755, 11.2, 0.305 ) }
    dend_5 { pt3dadd( 406.384, 437.861, 11.2, 0.2796 ) }
    dend_5 { pt3dadd( 406.692, 438.948, 11.2, 0.305 ) }
    dend_5 { pt3dadd( 406.692, 440.092, 11.2, 0.3304 ) }
    dend_5 { pt3dadd( 406.71, 441.234, 11.2, 0.3814 ) }
    dend_5 { pt3dadd( 407.0, 442.336, 11.2, 0.3304 ) }
    dend_5 { pt3dadd( 407.035, 443.475, 11.2, 0.2796 ) }
    dend_5 { pt3dadd( 407.035, 444.619, 11.2, 0.2796 ) }
    dend_5 { pt3dadd( 407.035, 445.754, 10.92, 0.4068 ) }
    dend_5 { pt3dadd( 407.177, 446.882, 10.92, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_5 { pt3dadd( 407.874, 447.715, 10.36, 0.6356 ) }
    dend_5 { pt3dadd( 408.003, 448.828, 10.36, 0.6102 ) }
    dend_5 { pt3dadd( 408.462, 449.817, 9.8725, 0.5338 ) }
    dend_5 { pt3dadd( 408.894, 450.863, 9.8, 0.4576 ) }
    dend_5 { pt3dadd( 408.98, 451.991, 9.8, 0.3814 ) }
    dend_5 { pt3dadd( 408.98, 453.135, 9.8, 0.3304 ) }
    dend_5 { pt3dadd( 408.98, 454.279, 9.8, 0.356 ) }
    dend_5 { pt3dadd( 408.98, 455.423, 9.8, 0.4068 ) }
    dend_5 { pt3dadd( 408.98, 456.567, 9.8, 0.4576 ) }
    dend_5 { pt3dadd( 409.386, 457.624, 9.8, 0.4068 ) }
    dend_5 { pt3dadd( 409.83, 458.678, 9.8, 0.3304 ) }
    dend_5 { pt3dadd( 410.23, 459.723, 9.8, 0.2542 ) }
    dend_5 { pt3dadd( 410.384, 460.85, 9.8, 0.2288 ) }
    dend_5 { pt3dadd( 411.214, 461.387, 9.8, 0.2288 ) }
    dend_5 { pt3dadd( 411.84, 462.202, 9.8, 0.2542 ) }
    dend_5 { pt3dadd( 411.846, 463.335, 9.5124, 0.2796 ) }
    dend_5 { pt3dadd( 412.461, 464.24, 8.8914, 0.356 ) }
    dend_5 { pt3dadd( 413.094, 465.163, 8.68, 0.4322 ) }
    dend_5 { pt3dadd( 413.738, 466.099, 8.68, 0.5848 ) }
    dend_5 { pt3dadd( 414.144, 467.163, 8.68, 0.7118 ) }
    dend_5 { pt3dadd( 414.865, 468.045, 8.68, 0.7626 ) }
    dend_5 { pt3dadd( 415.43, 469.032, 8.68, 0.6864 ) }
    dend_5 { pt3dadd( 415.73, 470.071, 8.68, 0.5084 ) }
    dend_5 { pt3dadd( 415.844, 471.206, 8.68, 0.3814 ) }
    dend_5 { pt3dadd( 415.925, 472.344, 8.68, 0.3304 ) }
    dend_5 { pt3dadd( 415.958, 473.486, 8.68, 0.4068 ) }
    dend_5 { pt3dadd( 415.958, 474.63, 8.68, 0.5084 ) }
    dend_5 { pt3dadd( 416.321, 475.616, 8.68, 0.5592 ) }
    dend_5 { pt3dadd( 417.153, 476.325, 8.68, 0.5084 ) }
    dend_5 { pt3dadd( 418.288, 476.401, 8.68, 0.4322 ) }
    dend_5 { pt3dadd( 418.531, 477.499, 8.68, 0.4068 ) }
    dend_5 { pt3dadd( 418.905, 478.571, 8.68, 0.4322 ) }
    dend_5 { pt3dadd( 419.603, 479.402, 8.68, 0.483 ) }
    dend_5 { pt3dadd( 420.053, 480.425, 8.68, 0.5338 ) }
    dend_5 { pt3dadd( 420.778, 481.219, 8.68, 0.6356 ) }
    dend_5 { pt3dadd( 421.302, 482.233, 8.68, 0.661 ) }
    dend_5 { pt3dadd( 421.773, 483.263, 8.9208, 0.6102 ) }
    dend_5 { pt3dadd( 422.134, 484.344, 8.96, 0.483 ) }
    dend_5 { pt3dadd( 422.727, 485.29, 8.96, 0.4322 ) }
    dend_5 { pt3dadd( 423.365, 486.229, 8.96, 0.4068 ) }
    dend_5 { pt3dadd( 423.762, 487.281, 8.96, 0.4322 ) }
    dend_5 { pt3dadd( 424.332, 488.27, 8.96, 0.4068 ) }
    dend_5 { pt3dadd( 425.034, 489.151, 8.8855, 0.4576 ) }
    dend_5 { pt3dadd( 425.847, 489.855, 8.68, 0.4322 ) }
    dend_5 { pt3dadd( 426.619, 490.582, 8.104, 0.4322 ) }
    dend_5 { pt3dadd( 426.712, 491.691, 7.84, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 46/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 400.225, 426.635, 14.2635, 0.9152 ) }
    dend_2 { pt3dadd( 401.364, 425.991, 14.9906, 0.6864 ) }
    dend_2 { pt3dadd( 402.191, 425.228, 14.5183, 0.6864 ) }
    dend_2 { pt3dadd( 402.889, 424.392, 13.68, 0.7626 ) }
    dend_2 { pt3dadd( 403.467, 423.447, 13.0057, 0.8644 ) }
    dend_2 { pt3dadd( 404.021, 422.491, 12.5602, 0.8898 ) }
    dend_2 { pt3dadd( 404.404, 421.564, 11.76, 0.6864 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 53/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 378.186, 419.07, 9.3934, 0.6864 ) }
    apic_16 { pt3dadd( 378.745, 419.805, 9.3859, 0.6102 ) }
    apic_16 { pt3dadd( 378.978, 420.793, 9.3926, 0.7372 ) }
    apic_16 { pt3dadd( 378.695, 421.883, 9.4167, 0.788 ) }
    apic_16 { pt3dadd( 378.972, 422.994, 9.4203, 0.788 ) }
    apic_16 { pt3dadd( 379.525, 423.977, 9.4486, 0.6864 ) }
    apic_16 { pt3dadd( 380.182, 424.914, 9.4861, 0.6864 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 60/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 378.186, 419.07, 9.3934, 0.6864 ) }
    apic_15 { pt3dadd( 377.948, 418.519, 8.3838, 0.5848 ) }
    apic_15 { pt3dadd( 377.592, 417.657, 6.8191, 0.5592 ) }
    apic_15 { pt3dadd( 378.63, 417.174, 6.8508, 0.5338 ) }
    apic_15 { pt3dadd( 379.697, 416.782, 6.8734, 0.4576 ) }
    apic_15 { pt3dadd( 380.815, 416.535, 6.8813, 0.4576 ) }
    apic_15 { pt3dadd( 381.931, 416.288, 6.8891, 0.483 ) }
    apic_15 { pt3dadd( 383.049, 416.042, 6.8972, 0.483 ) }
    apic_15 { pt3dadd( 384.074, 415.621, 6.8844, 0.4322 ) }
    apic_15 { pt3dadd( 384.908, 414.838, 6.8286, 0.4322 ) }
    apic_15 { pt3dadd( 385.941, 414.351, 6.7995, 0.5338 ) }
    apic_15 { pt3dadd( 386.981, 413.874, 6.7712, 0.6356 ) }
    apic_15 { pt3dadd( 387.81, 413.15, 6.7642, 0.6864 ) }
    apic_15 { pt3dadd( 388.446, 412.199, 6.7768, 0.661 ) }
    apic_15 { pt3dadd( 389.082, 411.249, 6.7894, 0.6102 ) }
    apic_15 { pt3dadd( 389.651, 410.265, 6.8023, 0.5084 ) }
    apic_15 { pt3dadd( 390.019, 409.181, 6.816, 0.4068 ) }
    apic_15 { pt3dadd( 390.4, 408.103, 6.8219, 0.305 ) }
    apic_15 { pt3dadd( 390.832, 407.043, 6.795, 0.2542 ) }
    apic_15 { pt3dadd( 391.263, 405.984, 6.7679, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_1 (entry count 80/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 374.797, 406.581, 14.2694, 0.9152 ) }
    apic_13 { pt3dadd( 375.829, 406.288, 14.7084, 0.4576 ) }
    apic_13 { pt3dadd( 376.691, 405.904, 15.0704, 0.305 ) }
    apic_13 { pt3dadd( 377.211, 404.959, 15.9984, 0.2288 ) }
    apic_13 { pt3dadd( 377.733, 404.014, 16.9263, 0.2288 ) }
    apic_13 { pt3dadd( 378.292, 403.174, 17.7887, 0.2796 ) }
    apic_13 { pt3dadd( 379.305, 403.514, 17.8338, 0.3304 ) }
    apic_13 { pt3dadd( 380.099, 402.69, 17.8144, 0.4068 ) }
    apic_13 { pt3dadd( 380.892, 401.867, 17.7954, 0.4322 ) }
    apic_13 { pt3dadd( 381.685, 401.043, 17.7761, 0.5084 ) }
    apic_13 { pt3dadd( 382.479, 400.218, 17.7568, 0.5338 ) }
    apic_13 { pt3dadd( 383.259, 399.39, 17.7744, 0.5848 ) }
    apic_13 { pt3dadd( 383.645, 398.409, 18.8692, 0.5848 ) }
    apic_13 { pt3dadd( 384.03, 397.43, 19.9643, 0.6102 ) }
    apic_13 { pt3dadd( 384.416, 396.45, 21.0591, 0.5338 ) }
    apic_13 { pt3dadd( 384.791, 395.467, 22.1337, 0.4068 ) }
    apic_13 { pt3dadd( 384.685, 394.329, 22.1687, 0.3304 ) }
    apic_13 { pt3dadd( 384.577, 393.189, 22.2034, 0.3304 ) }
    apic_13 { pt3dadd( 385.393, 392.533, 22.1906, 0.4576 ) }
    apic_13 { pt3dadd( 386.389, 391.971, 22.1682, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_13 { pt3dadd( 387.386, 391.409, 22.1458, 0.5592 ) }
    apic_13 { pt3dadd( 388.356, 390.803, 22.1497, 0.483 ) }
    apic_13 { pt3dadd( 389.318, 390.185, 22.16, 0.4576 ) }
    apic_13 { pt3dadd( 390.281, 389.569, 22.1704, 0.3304 ) }
    apic_13 { pt3dadd( 390.918, 388.672, 22.1687, 0.2796 ) }
    apic_13 { pt3dadd( 391.38, 387.625, 22.1606, 0.2288 ) }
    apic_13 { pt3dadd( 391.841, 386.577, 22.1522, 0.2288 ) }
    apic_13 { pt3dadd( 392.301, 385.53, 22.1441, 0.2542 ) }
    apic_13 { pt3dadd( 393.235, 384.895, 22.349, 0.2796 ) }
    apic_13 { pt3dadd( 394.199, 384.287, 22.5683, 0.305 ) }
    apic_13 { pt3dadd( 395.164, 383.678, 22.7872, 0.2796 ) }
    apic_13 { pt3dadd( 396.128, 383.069, 23.0062, 0.2796 ) }
    apic_13 { pt3dadd( 397.093, 382.461, 23.2252, 0.305 ) }
    apic_13 { pt3dadd( 398.058, 381.852, 23.4444, 0.356 ) }
    apic_13 { pt3dadd( 397.429, 381.093, 23.4489, 0.356 ) }
    apic_13 { pt3dadd( 397.293, 380.215, 23.469, 0.305 ) }
    apic_13 { pt3dadd( 397.887, 379.238, 23.5351, 0.2542 ) }
    apic_13 { pt3dadd( 398.595, 378.395, 23.6919, 0.2288 ) }
    apic_13 { pt3dadd( 399.629, 377.938, 24.108, 0.2288 ) }
    apic_13 { pt3dadd( 400.664, 377.48, 24.5244, 0.2288 ) }
    apic_13 { pt3dadd( 401.698, 377.023, 24.9404, 0.2288 ) }
    apic_13 { pt3dadd( 402.733, 376.566, 25.3565, 0.2288 ) }
    apic_13 { pt3dadd( 403.775, 376.117, 25.6942, 0.2288 ) }
    apic_13 { pt3dadd( 404.842, 375.707, 25.7079, 0.2288 ) }
    apic_13 { pt3dadd( 405.909, 375.295, 25.7219, 0.2288 ) }
    apic_13 { pt3dadd( 406.977, 374.884, 25.7359, 0.2288 ) }
    apic_13 { pt3dadd( 408.073, 374.583, 25.739, 0.2288 ) }
    apic_13 { pt3dadd( 409.208, 374.447, 25.7258, 0.2288 ) }
    apic_13 { pt3dadd( 410.163, 374.913, 25.6992, 0.2288 ) }
    apic_13 { pt3dadd( 410.694, 375.853, 25.6371, 0.2288 ) }
    apic_13 { pt3dadd( 411.314, 376.256, 25.9011, 0.2288 ) }
    apic_13 { pt3dadd( 412.363, 375.884, 26.5446, 0.2288 ) }
    apic_13 { pt3dadd( 413.413, 375.512, 27.1883, 0.2288 ) }
    apic_13 { pt3dadd( 414.462, 375.142, 27.832, 0.2288 ) }
    apic_13 { pt3dadd( 415.6, 375.161, 27.876, 0.2288 ) }
    apic_13 { pt3dadd( 416.744, 375.202, 27.8858, 0.2288 ) }
    apic_13 { pt3dadd( 417.887, 375.245, 27.8956, 0.2796 ) }
    apic_13 { pt3dadd( 419.03, 375.276, 27.9084, 0.3814 ) }
    apic_13 { pt3dadd( 420.174, 375.276, 27.9297, 0.483 ) }
    apic_13 { pt3dadd( 420.714, 374.503, 28.6493, 0.483 ) }
    apic_13 { pt3dadd( 421.061, 373.483, 29.5924, 0.3814 ) }
    apic_13 { pt3dadd( 421.292, 372.555, 30.4699, 0.305 ) }
    apic_13 { pt3dadd( 420.159, 372.714, 30.5679, 0.2796 ) }
    apic_13 { pt3dadd( 420.316, 373.208, 30.5192, 0.305 ) }
    apic_13 { pt3dadd( 421.432, 373.281, 30.9501, 0.305 ) }
    apic_13 { pt3dadd( 422.559, 373.32, 31.4126, 0.3304 ) }
    apic_13 { pt3dadd( 423.687, 373.359, 31.8749, 0.4576 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 47/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 374.797, 406.581, 14.2694, 0.9152 ) }
    apic_2 { pt3dadd( 374.508, 405.635, 14.9562, 0.8644 ) }
    apic_2 { pt3dadd( 374.134, 404.558, 15.1018, 0.9152 ) }
    apic_2 { pt3dadd( 373.675, 403.51, 15.0662, 0.9914 ) }
    apic_2 { pt3dadd( 373.047, 402.56, 14.8742, 0.9406 ) }
    apic_2 { pt3dadd( 372.524, 401.585, 14.1831, 0.8644 ) }
    apic_2 { pt3dadd( 372.16, 400.505, 14.0538, 0.7626 ) }
    apic_2 { pt3dadd( 372.45, 399.417, 14.2559, 0.8644 ) }
    apic_2 { pt3dadd( 372.381, 398.341, 15.1416, 1.144 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 394.625, 440.129, 30.6085, 0.2288 ) }
    dend_21 { pt3dadd( 394.441, 440.369, 31.0316, 0.305 ) }
    dend_21 { pt3dadd( 393.912, 440.995, 32.7454, 0.2796 ) }
    dend_21 { pt3dadd( 393.6, 441.139, 35.4161, 0.2542 ) }
    dend_21 { pt3dadd( 393.288, 441.283, 38.0867, 0.2288 ) }
    dend_21 { pt3dadd( 392.975, 441.427, 40.7574, 0.2288 ) }
    dend_21 { pt3dadd( 392.664, 441.571, 43.4277, 0.2288 ) }
    dend_21 { pt3dadd( 392.352, 441.716, 46.0984, 0.2288 ) }
    dend_21 { pt3dadd( 392.521, 442.459, 47.3738, 0.2288 ) }
    dend_21 { pt3dadd( 392.93, 443.5, 47.9528, 0.2288 ) }
    dend_21 { pt3dadd( 393.339, 444.542, 48.5318, 0.2288 ) }
    dend_21 { pt3dadd( 393.748, 445.585, 49.1109, 0.2288 ) }
    dend_21 { pt3dadd( 394.157, 446.626, 49.6899, 0.2288 ) }
    dend_21 { pt3dadd( 394.567, 447.668, 50.2692, 0.2288 ) }
    dend_21 { pt3dadd( 394.975, 448.71, 50.8483, 0.2288 ) }
    dend_21 { pt3dadd( 395.385, 449.751, 51.4273, 0.2288 ) }
    dend_21 { pt3dadd( 395.793, 450.793, 52.0064, 0.2288 ) }
    dend_21 { pt3dadd( 396.203, 451.835, 52.5854, 0.2288 ) }
    dend_21 { pt3dadd( 396.437, 452.896, 53.4388, 0.2288 ) }
    dend_21 { pt3dadd( 396.643, 453.96, 54.3376, 0.2288 ) }
    dend_21 { pt3dadd( 396.849, 455.023, 55.2367, 0.2288 ) }
    dend_21 { pt3dadd( 397.055, 456.086, 56.1358, 0.2288 ) }
    dend_21 { pt3dadd( 397.261, 457.15, 57.0346, 0.2288 ) }
    dend_21 { pt3dadd( 397.467, 458.214, 57.9337, 0.2288 ) }
    dend_21 { pt3dadd( 397.463, 459.18, 59.239, 0.2288 ) }
    dend_21 { pt3dadd( 397.223, 460.034, 61.0036, 0.2288 ) }
    dend_21 { pt3dadd( 396.983, 460.89, 62.7682, 0.2288 ) }
    dend_21 { pt3dadd( 396.741, 461.745, 64.5327, 0.2288 ) }
    dend_21 { pt3dadd( 396.501, 462.6, 66.2973, 0.2288 ) }
    dend_21 { pt3dadd( 396.396, 463.553, 67.7216, 0.2288 ) }
    dend_21 { pt3dadd( 396.435, 464.61, 68.7856, 0.2288 ) }
    dend_21 { pt3dadd( 396.473, 465.669, 69.8499, 0.2288 ) }
    dend_21 { pt3dadd( 396.51, 466.726, 70.9139, 0.2288 ) }
    dend_21 { pt3dadd( 396.548, 467.783, 71.9782, 0.2288 ) }
    dend_21 { pt3dadd( 396.587, 468.841, 73.0422, 0.2288 ) }
    dend_21 { pt3dadd( 396.625, 469.898, 74.1065, 0.2288 ) }
    dend_21 { pt3dadd( 396.02, 470.771, 74.8012, 0.2288 ) }
    dend_21 { pt3dadd( 395.277, 471.604, 75.4166, 0.2288 ) }
    dend_21 { pt3dadd( 394.534, 472.436, 76.0323, 0.2288 ) }
    dend_21 { pt3dadd( 393.791, 473.269, 76.648, 0.2288 ) }
    dend_21 { pt3dadd( 393.049, 474.102, 77.2638, 0.2288 ) }
    dend_21 { pt3dadd( 392.306, 474.935, 77.8795, 0.2288 ) }
    dend_21 { pt3dadd( 391.563, 475.768, 78.4949, 0.2288 ) }
    dend_21 { pt3dadd( 390.758, 476.44, 79.5712, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 389.939, 477.074, 80.7607, 0.2288 ) }
    dend_21 { pt3dadd( 389.12, 477.708, 81.9501, 0.2288 ) }
    dend_21 { pt3dadd( 388.301, 478.342, 83.1396, 0.2288 ) }
    dend_21 { pt3dadd( 387.482, 478.976, 84.329, 0.2288 ) }
    dend_21 { pt3dadd( 386.663, 479.608, 85.5184, 0.2288 ) }
    dend_21 { pt3dadd( 385.844, 480.242, 86.7079, 0.2288 ) }
    dend_21 { pt3dadd( 385.023, 480.876, 87.8973, 0.2288 ) }
    dend_21 { pt3dadd( 384.1, 481.274, 88.7099, 0.2288 ) }
    dend_21 { pt3dadd( 382.96, 481.185, 88.7446, 0.2288 ) }
    dend_21 { pt3dadd( 381.819, 481.095, 88.7793, 0.2288 ) }
    dend_21 { pt3dadd( 380.679, 481.006, 88.814, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 394.625, 440.129, 30.6085, 0.2288 ) }
    dend_20 { pt3dadd( 394.48, 441.273, 31.456, 0.3814 ) }
    dend_20 { pt3dadd( 394.342, 442.36, 32.2613, 0.3304 ) }
    dend_20 { pt3dadd( 394.544, 443.412, 32.6785, 0.305 ) }
    dend_20 { pt3dadd( 395.057, 444.434, 32.7376, 0.2796 ) }
    dend_20 { pt3dadd( 395.509, 445.474, 32.9213, 0.305 ) }
    dend_20 { pt3dadd( 395.776, 446.563, 33.4692, 0.3304 ) }
    dend_20 { pt3dadd( 396.043, 447.653, 34.0172, 0.356 ) }
    dend_20 { pt3dadd( 396.465, 448.577, 34.4708, 0.4322 ) }
    dend_20 { pt3dadd( 397.415, 448.887, 34.491, 0.4576 ) }
    dend_20 { pt3dadd( 397.336, 450.028, 34.5108, 0.483 ) }
    dend_20 { pt3dadd( 397.343, 451.146, 34.6167, 0.4068 ) }
    dend_20 { pt3dadd( 397.89, 452.115, 35.2713, 0.3304 ) }
    dend_20 { pt3dadd( 398.438, 453.082, 35.926, 0.2542 ) }
    dend_20 { pt3dadd( 398.986, 454.05, 36.5809, 0.2288 ) }
    dend_20 { pt3dadd( 399.358, 455.063, 37.0717, 0.2288 ) }
    dend_20 { pt3dadd( 399.226, 456.199, 37.0905, 0.2288 ) }
    dend_20 { pt3dadd( 399.613, 457.059, 37.119, 0.2288 ) }
    dend_20 { pt3dadd( 400.629, 457.584, 37.1602, 0.2288 ) }
    dend_20 { pt3dadd( 401.314, 458.418, 37.807, 0.2288 ) }
    dend_20 { pt3dadd( 401.903, 459.339, 38.6263, 0.2288 ) }
    dend_20 { pt3dadd( 402.4, 460.306, 39.2882, 0.2288 ) }
    dend_20 { pt3dadd( 402.56, 461.438, 39.3848, 0.2288 ) }
    dend_20 { pt3dadd( 402.719, 462.569, 39.4817, 0.2288 ) }
    dend_20 { pt3dadd( 402.879, 463.702, 39.5783, 0.2288 ) }
    dend_20 { pt3dadd( 403.039, 464.835, 39.6749, 0.2288 ) }
    dend_20 { pt3dadd( 403.198, 465.966, 39.7715, 0.2288 ) }
    dend_20 { pt3dadd( 403.358, 467.099, 39.8684, 0.2288 ) }
    dend_20 { pt3dadd( 403.517, 468.23, 39.965, 0.2288 ) }
    dend_20 { pt3dadd( 403.678, 469.363, 40.0616, 0.2288 ) }
    dend_20 { pt3dadd( 403.837, 470.495, 40.1582, 0.2288 ) }
    dend_20 { pt3dadd( 403.997, 471.627, 40.255, 0.2288 ) }
    dend_20 { pt3dadd( 404.947, 472.224, 40.2461, 0.2288 ) }
    dend_20 { pt3dadd( 405.434, 473.112, 40.2413, 0.2288 ) }
    dend_20 { pt3dadd( 405.517, 474.252, 40.2441, 0.2288 ) }
    dend_20 { pt3dadd( 405.983, 475.253, 40.805, 0.2288 ) }
    dend_20 { pt3dadd( 406.515, 476.229, 41.4638, 0.2288 ) }
    dend_20 { pt3dadd( 407.047, 477.205, 42.1229, 0.2288 ) }
    dend_20 { pt3dadd( 407.565, 478.187, 42.756, 0.2288 ) }
    dend_20 { pt3dadd( 407.728, 479.32, 42.7596, 0.2288 ) }
    dend_20 { pt3dadd( 407.892, 480.453, 42.7636, 0.2288 ) }
    dend_20 { pt3dadd( 408.056, 481.584, 42.7675, 0.2288 ) }
    dend_20 { pt3dadd( 408.219, 482.716, 42.7714, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 404.404, 421.564, 11.76, 0.6864 ) }
    dend_4 { pt3dadd( 404.261, 420.64, 13.4148, 0.3814 ) }
    dend_4 { pt3dadd( 404.514, 419.524, 13.3795, 0.2796 ) }
    dend_4 { pt3dadd( 404.983, 418.507, 13.3832, 0.2288 ) }
    dend_4 { pt3dadd( 405.655, 417.582, 13.4238, 0.2288 ) }
    dend_4 { pt3dadd( 406.463, 416.795, 13.708, 0.2288 ) }
    dend_4 { pt3dadd( 407.337, 416.075, 14.1134, 0.2542 ) }
    dend_4 { pt3dadd( 408.211, 415.355, 14.5188, 0.305 ) }
    dend_4 { pt3dadd( 409.124, 414.675, 14.6496, 0.4068 ) }
    dend_4 { pt3dadd( 410.059, 414.014, 14.6448, 0.5084 ) }
    dend_4 { pt3dadd( 410.992, 413.353, 14.6404, 0.5848 ) }
    dend_4 { pt3dadd( 411.753, 412.512, 14.7011, 0.5848 ) }
    dend_4 { pt3dadd( 412.452, 411.61, 14.8389, 0.5592 ) }
    dend_4 { pt3dadd( 413.086, 410.687, 15.4157, 0.5338 ) }
    dend_4 { pt3dadd( 413.72, 409.764, 15.9925, 0.5338 ) }
    dend_4 { pt3dadd( 414.353, 408.842, 16.5693, 0.5338 ) }
    dend_4 { pt3dadd( 414.987, 407.918, 17.1461, 0.5338 ) }
    dend_4 { pt3dadd( 415.181, 406.84, 17.3356, 0.5592 ) }
    dend_4 { pt3dadd( 415.191, 405.696, 17.3634, 0.5848 ) }
    dend_4 { pt3dadd( 415.201, 404.552, 17.3911, 0.5848 ) }
    dend_4 { pt3dadd( 415.269, 403.412, 17.3956, 0.5084 ) }
    dend_4 { pt3dadd( 415.424, 402.278, 17.3645, 0.3814 ) }
    dend_4 { pt3dadd( 415.581, 401.146, 17.3334, 0.2796 ) }
    dend_4 { pt3dadd( 415.801, 400.03, 17.309, 0.2796 ) }
    dend_4 { pt3dadd( 416.259, 398.983, 17.3096, 0.3304 ) }
    dend_4 { pt3dadd( 416.546, 397.892, 17.4278, 0.3814 ) }
    dend_4 { pt3dadd( 416.653, 396.758, 17.6688, 0.3814 ) }
    dend_4 { pt3dadd( 416.759, 395.623, 17.9099, 0.4322 ) }
    dend_4 { pt3dadd( 416.866, 394.488, 18.151, 0.5338 ) }
    dend_4 { pt3dadd( 416.821, 393.356, 18.2498, 0.6356 ) }
    dend_4 { pt3dadd( 416.638, 392.227, 18.2188, 0.6864 ) }
    dend_4 { pt3dadd( 416.455, 391.098, 18.1877, 0.6356 ) }
    dend_4 { pt3dadd( 416.41, 389.958, 18.1726, 0.5592 ) }
    dend_4 { pt3dadd( 416.91, 388.936, 18.2302, 0.4576 ) }
    dend_4 { pt3dadd( 417.438, 387.921, 18.2916, 0.4576 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 404.404, 421.564, 11.76, 0.6864 ) }
    dend_3 { pt3dadd( 404.667, 421.461, 11.76, 0.3814 ) }
    dend_3 { pt3dadd( 405.804, 421.344, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 406.692, 420.904, 11.76, 0.2542 ) }
    dend_3 { pt3dadd( 407.226, 420.017, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 408.181, 419.498, 11.76, 0.305 ) }
    dend_3 { pt3dadd( 409.232, 419.094, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 410.146, 418.41, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 411.268, 418.224, 11.76, 0.305 ) }
    dend_3 { pt3dadd( 412.318, 417.845, 11.76, 0.356 ) }
    dend_3 { pt3dadd( 413.277, 417.277, 11.76, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_3 { pt3dadd( 414.172, 416.612, 11.5405, 0.356 ) }
    dend_3 { pt3dadd( 414.915, 415.758, 11.48, 0.356 ) }
    dend_3 { pt3dadd( 415.827, 415.25, 10.8954, 0.3814 ) }
    dend_3 { pt3dadd( 416.662, 414.929, 9.6096, 0.356 ) }
    dend_3 { pt3dadd( 417.754, 414.705, 9.52, 0.3304 ) }
    dend_3 { pt3dadd( 418.79, 414.232, 9.52, 0.305 ) }
    dend_3 { pt3dadd( 419.812, 413.745, 9.52, 0.2796 ) }
    dend_3 { pt3dadd( 420.507, 412.849, 9.52, 0.2542 ) }
    dend_3 { pt3dadd( 421.385, 412.119, 9.52, 0.2288 ) }
    dend_3 { pt3dadd( 422.32, 411.464, 9.52, 0.2542 ) }
    dend_3 { pt3dadd( 423.088, 410.718, 10.08, 0.305 ) }
    dend_3 { pt3dadd( 423.86, 409.88, 10.1153, 0.356 ) }
    dend_3 { pt3dadd( 424.86, 409.438, 10.6593, 0.356 ) }
    dend_3 { pt3dadd( 425.672, 408.852, 11.2946, 0.3304 ) }
    dend_3 { pt3dadd( 426.712, 408.431, 11.48, 0.356 ) }
    dend_3 { pt3dadd( 427.608, 407.742, 11.7404, 0.4068 ) }
    dend_3 { pt3dadd( 428.642, 407.313, 11.76, 0.4576 ) }
    dend_3 { pt3dadd( 429.564, 406.661, 11.76, 0.4068 ) }
    dend_3 { pt3dadd( 430.28, 405.826, 11.76, 0.3814 ) }
    dend_3 { pt3dadd( 430.802, 404.815, 11.76, 0.3304 ) }
    dend_3 { pt3dadd( 431.559, 403.964, 11.76, 0.3304 ) }
    dend_3 { pt3dadd( 432.536, 403.381, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 433.59, 403.009, 11.76, 0.2542 ) }
    dend_3 { pt3dadd( 434.591, 402.532, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 435.626, 402.086, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 436.547, 401.438, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 437.327, 400.768, 11.76, 0.356 ) }
    dend_3 { pt3dadd( 438.272, 400.286, 11.2, 0.4322 ) }
    dend_3 { pt3dadd( 439.416, 400.286, 11.2, 0.4068 ) }
    dend_3 { pt3dadd( 440.56, 400.286, 11.2, 0.356 ) }
    dend_3 { pt3dadd( 441.704, 400.286, 11.2, 0.305 ) }
    dend_3 { pt3dadd( 442.744, 399.966, 11.2, 0.305 ) }
    dend_3 { pt3dadd( 443.798, 399.615, 11.2, 0.2796 ) }
    dend_3 { pt3dadd( 444.555, 398.859, 11.2, 0.2542 ) }
    dend_3 { pt3dadd( 445.211, 398.193, 11.2, 0.2288 ) }
    dend_3 { pt3dadd( 445.995, 397.394, 11.2, 0.2288 ) }
    dend_3 { pt3dadd( 447.02, 396.991, 11.2, 0.2288 ) }
    dend_3 { pt3dadd( 447.341, 395.982, 11.2, 0.2288 ) }
    dend_3 { pt3dadd( 447.957, 395.053, 11.2, 0.2542 ) }
    dend_3 { pt3dadd( 448.74, 394.234, 11.2, 0.2796 ) }
    dend_3 { pt3dadd( 449.585, 393.471, 11.2, 0.3304 ) }
    dend_3 { pt3dadd( 450.221, 392.525, 11.2, 0.3304 ) }
    dend_3 { pt3dadd( 451.1, 391.859, 11.7992, 0.3304 ) }
    dend_3 { pt3dadd( 452.038, 391.226, 12.04, 0.2796 ) }
    dend_3 { pt3dadd( 453.015, 390.637, 12.04, 0.2796 ) }
    dend_3 { pt3dadd( 453.748, 389.788, 12.04, 0.2796 ) }
    dend_3 { pt3dadd( 454.741, 389.23, 12.04, 0.305 ) }
    dend_3 { pt3dadd( 455.624, 388.504, 12.04, 0.305 ) }
    dend_3 { pt3dadd( 456.449, 387.72, 12.04, 0.305 ) }
    dend_3 { pt3dadd( 456.949, 386.691, 11.9988, 0.305 ) }
    dend_3 { pt3dadd( 457.583, 385.763, 11.76, 0.2796 ) }
    dend_3 { pt3dadd( 458.501, 385.104, 11.76, 0.2542 ) }
    dend_3 { pt3dadd( 459.096, 384.251, 11.48, 0.2542 ) }
    dend_3 { pt3dadd( 459.998, 383.677, 11.48, 0.2796 ) }
    dend_3 { pt3dadd( 460.593, 382.879, 11.48, 0.3304 ) }
    dend_3 { pt3dadd( 461.039, 381.853, 11.48, 0.3304 ) }
    dend_3 { pt3dadd( 462.03, 381.333, 11.48, 0.3304 ) }
    dend_3 { pt3dadd( 463.081, 380.93, 11.48, 0.2796 ) }
    dend_3 { pt3dadd( 464.037, 380.338, 11.275, 0.2796 ) }
    dend_3 { pt3dadd( 465.06, 379.836, 11.2, 0.2796 ) }
    dend_3 { pt3dadd( 466.071, 379.35, 11.2, 0.305 ) }
    dend_3 { pt3dadd( 467.129, 379.125, 11.2918, 0.2796 ) }
    dend_3 { pt3dadd( 468.099, 378.657, 11.48, 0.2542 ) }
    dend_3 { pt3dadd( 469.217, 378.466, 11.48, 0.2288 ) }
    dend_3 { pt3dadd( 470.284, 378.162, 11.48, 0.2288 ) }
    dend_3 { pt3dadd( 471.214, 377.52, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 472.348, 377.406, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 473.492, 377.406, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 474.547, 377.038, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 475.566, 376.527, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 476.538, 375.93, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 477.466, 375.263, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 478.279, 374.527, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 479.019, 373.713, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 479.573, 372.727, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 480.144, 371.774, 11.76, 0.2288 ) }
    dend_3 { pt3dadd( 480.589, 370.794, 11.2266, 0.2542 ) }
    dend_3 { pt3dadd( 480.86, 369.705, 11.1812, 0.2796 ) }
    dend_3 { pt3dadd( 481.552, 368.883, 10.5283, 0.305 ) }
    dend_3 { pt3dadd( 482.501, 368.294, 10.08, 0.2796 ) }
    dend_3 { pt3dadd( 483.573, 367.952, 10.08, 0.2542 ) }
    dend_3 { pt3dadd( 484.651, 367.685, 10.08, 0.2288 ) }
    dend_3 { pt3dadd( 485.763, 367.682, 9.6564, 0.2288 ) }
    dend_3 { pt3dadd( 486.314, 366.986, 8.96, 0.2288 ) }
    dend_3 { pt3dadd( 486.774, 365.988, 8.96, 0.2288 ) }
    dend_3 { pt3dadd( 487.106, 364.895, 8.9586, 0.2288 ) }
    dend_3 { pt3dadd( 487.433, 363.833, 8.7041, 0.2288 ) }
    dend_3 { pt3dadd( 488.314, 363.174, 8.4006, 0.2288 ) }
    dend_3 { pt3dadd( 489.21, 362.596, 8.12, 0.2288 ) }
    dend_3 { pt3dadd( 490.0, 361.788, 8.12, 0.2288 ) }
    dend_3 { pt3dadd( 490.308, 360.765, 7.59, 0.2542 ) }
    dend_3 { pt3dadd( 490.318, 359.623, 7.56, 0.305 ) }
    dend_3 { pt3dadd( 490.09, 358.53, 7.56, 0.4576 ) }
    // Section: apic_12, id: apic_12, parent: apic_2 (entry count 93/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 372.381, 398.341, 15.1416, 1.144 ) }
    apic_12 { pt3dadd( 372.504, 397.763, 14.7272, 0.7372 ) }
    apic_12 { pt3dadd( 373.056, 396.816, 14.4416, 0.5338 ) }
    apic_12 { pt3dadd( 373.56, 395.83, 14.8644, 0.4068 ) }
    apic_12 { pt3dadd( 373.358, 394.794, 14.5925, 0.4068 ) }
    apic_12 { pt3dadd( 373.012, 393.725, 14.0882, 0.483 ) }
    apic_12 { pt3dadd( 373.19, 392.629, 13.9476, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_12 { pt3dadd( 373.395, 391.516, 13.6049, 0.6102 ) }
    apic_12 { pt3dadd( 373.874, 390.526, 12.9534, 0.5338 ) }
    apic_12 { pt3dadd( 374.613, 389.696, 12.3494, 0.4576 ) }
    apic_12 { pt3dadd( 375.393, 388.898, 11.7188, 0.4068 ) }
    apic_12 { pt3dadd( 376.15, 388.083, 11.0653, 0.4576 ) }
    apic_12 { pt3dadd( 377.145, 387.584, 10.5795, 0.5084 ) }
    apic_12 { pt3dadd( 378.189, 387.126, 10.4068, 0.5338 ) }
    apic_12 { pt3dadd( 379.04, 386.372, 10.4944, 0.5084 ) }
    apic_12 { pt3dadd( 380.081, 386.025, 9.861, 0.5084 ) }
    apic_12 { pt3dadd( 381.105, 386.174, 8.7116, 0.5084 ) }
    apic_12 { pt3dadd( 381.895, 385.643, 7.2391, 0.5848 ) }
    apic_12 { pt3dadd( 382.571, 384.739, 7.11, 0.6102 ) }
    apic_12 { pt3dadd( 383.272, 384.001, 7.6611, 0.5848 ) }
    apic_12 { pt3dadd( 384.072, 383.779, 6.1267, 0.4576 ) }
    apic_12 { pt3dadd( 385.187, 383.987, 6.0698, 0.3304 ) }
    apic_12 { pt3dadd( 386.319, 384.012, 6.1116, 0.305 ) }
    apic_12 { pt3dadd( 387.134, 383.263, 6.2451, 0.3814 ) }
    apic_12 { pt3dadd( 387.501, 382.181, 6.1457, 0.6864 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 18/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 372.381, 398.341, 15.1416, 1.144 ) }
    apic_3 { pt3dadd( 371.844, 397.545, 15.7693, 0.9152 ) }
    apic_3 { pt3dadd( 371.17, 396.648, 16.3008, 0.8898 ) }
    apic_3 { pt3dadd( 370.518, 395.737, 16.8692, 0.8644 ) }
    apic_3 { pt3dadd( 369.892, 394.799, 17.3289, 0.839 ) }
    apic_3 { pt3dadd( 369.478, 393.733, 17.3743, 0.6864 ) }
    // Section: apic_11, id: apic_11, parent: apic_3 (entry count 24/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 369.478, 393.733, 17.3743, 0.6864 ) }
    apic_11 { pt3dadd( 369.375, 394.556, 18.7995, 0.6102 ) }
    apic_11 { pt3dadd( 368.742, 395.489, 19.2693, 0.5338 ) }
    apic_11 { pt3dadd( 368.107, 396.421, 19.733, 0.483 ) }
    apic_11 { pt3dadd( 367.472, 397.353, 20.1964, 0.483 ) }
    apic_11 { pt3dadd( 366.946, 398.323, 20.5862, 0.483 ) }
    apic_11 { pt3dadd( 366.946, 399.466, 20.6158, 0.4576 ) }
    apic_11 { pt3dadd( 366.945, 400.611, 20.6452, 0.356 ) }
    apic_11 { pt3dadd( 366.905, 401.75, 20.8653, 0.2796 ) }
    apic_11 { pt3dadd( 366.854, 402.887, 21.1341, 0.2288 ) }
    apic_11 { pt3dadd( 366.804, 404.024, 21.4029, 0.2288 ) }
    apic_11 { pt3dadd( 366.733, 405.164, 21.5502, 0.2542 ) }
    apic_11 { pt3dadd( 366.636, 406.303, 21.548, 0.3304 ) }
    apic_11 { pt3dadd( 366.559, 407.441, 21.5452, 0.4576 ) }
    apic_11 { pt3dadd( 366.784, 408.564, 21.532, 0.5338 ) }
    apic_11 { pt3dadd( 367.008, 409.685, 21.5188, 0.5084 ) }
    apic_11 { pt3dadd( 367.72, 410.558, 21.9842, 0.4576 ) }
    apic_11 { pt3dadd( 368.439, 411.427, 22.4557, 0.483 ) }
    apic_11 { pt3dadd( 369.054, 412.347, 22.8354, 0.6102 ) }
    apic_11 { pt3dadd( 369.263, 413.473, 22.8502, 0.6864 ) }
    apic_11 { pt3dadd( 369.076, 414.392, 23.1244, 0.661 ) }
    apic_11 { pt3dadd( 368.106, 414.906, 23.9145, 0.5848 ) }
    apic_11 { pt3dadd( 367.543, 415.767, 24.617, 0.483 ) }
    apic_11 { pt3dadd( 367.216, 416.831, 25.2686, 0.5084 ) }
    apic_11 { pt3dadd( 366.89, 417.894, 25.9204, 0.5084 ) }
    apic_11 { pt3dadd( 366.563, 418.958, 26.5723, 0.5592 ) }
    apic_11 { pt3dadd( 366.516, 420.046, 27.3126, 0.4576 ) }
    apic_11 { pt3dadd( 366.582, 421.143, 28.0888, 0.356 ) }
    apic_11 { pt3dadd( 366.649, 422.24, 28.8649, 0.2796 ) }
    apic_11 { pt3dadd( 366.714, 423.337, 29.6411, 0.305 ) }
    apic_11 { pt3dadd( 367.058, 424.386, 30.1759, 0.356 ) }
    apic_11 { pt3dadd( 367.535, 425.411, 30.5945, 0.356 ) }
    apic_11 { pt3dadd( 368.012, 426.437, 31.0134, 0.3304 ) }
    apic_11 { pt3dadd( 368.323, 427.515, 31.4404, 0.305 ) }
    apic_11 { pt3dadd( 368.522, 428.627, 31.8727, 0.305 ) }
    apic_11 { pt3dadd( 368.723, 429.74, 32.3053, 0.2796 ) }
    apic_11 { pt3dadd( 368.922, 430.852, 32.7376, 0.2542 ) }
    apic_11 { pt3dadd( 369.126, 431.931, 33.4446, 0.2288 ) }
    apic_11 { pt3dadd( 369.338, 432.959, 34.5528, 0.2542 ) }
    apic_11 { pt3dadd( 369.549, 433.989, 35.6614, 0.3304 ) }
    apic_11 { pt3dadd( 369.902, 434.975, 36.4708, 0.4576 ) }
    apic_11 { pt3dadd( 370.647, 435.843, 36.4524, 0.6864 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 66/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 369.478, 393.733, 17.3743, 0.6864 ) }
    apic_4 { pt3dadd( 369.098, 392.838, 17.4387, 0.8644 ) }
    apic_4 { pt3dadd( 368.806, 391.75, 17.8819, 0.9152 ) }
    apic_4 { pt3dadd( 368.983, 390.654, 18.4167, 0.9152 ) }
    apic_4 { pt3dadd( 369.133, 389.523, 18.4604, 0.8136 ) }
    apic_4 { pt3dadd( 369.057, 388.385, 18.3512, 0.788 ) }
    apic_4 { pt3dadd( 368.727, 387.323, 17.7461, 0.8136 ) }
    apic_4 { pt3dadd( 368.397, 386.237, 17.4082, 0.8898 ) }
    apic_4 { pt3dadd( 367.826, 385.251, 17.4745, 0.8898 ) }
    apic_4 { pt3dadd( 367.391, 384.222, 18.0407, 0.839 ) }
    apic_4 { pt3dadd( 367.135, 383.118, 18.4206, 0.788 ) }
    apic_4 { pt3dadd( 366.858, 382.01, 18.4859, 0.7626 ) }
    apic_4 { pt3dadd( 366.532, 380.913, 18.5192, 0.788 ) }
    apic_4 { pt3dadd( 366.126, 379.848, 18.7174, 0.839 ) }
    apic_4 { pt3dadd( 365.573, 378.904, 19.486, 0.8644 ) }
    apic_4 { pt3dadd( 365.077, 377.88, 19.6322, 0.839 ) }
    apic_4 { pt3dadd( 364.315, 377.034, 19.7775, 0.7626 ) }
    apic_4 { pt3dadd( 363.421, 376.601, 18.4808, 0.6864 ) }
    // Section: apic_10, id: apic_10, parent: apic_4 (entry count 84/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 363.421, 376.601, 18.4808, 0.6864 ) }
    apic_10 { pt3dadd( 363.503, 376.27, 19.843, 0.4576 ) }
    apic_10 { pt3dadd( 363.824, 375.773, 21.9078, 0.3304 ) }
    apic_10 { pt3dadd( 364.928, 375.65, 22.5728, 0.2542 ) }
    apic_10 { pt3dadd( 366.033, 375.526, 23.2378, 0.2288 ) }
    apic_10 { pt3dadd( 366.591, 374.901, 24.3785, 0.2796 ) }
    apic_10 { pt3dadd( 366.645, 373.759, 24.4037, 0.3814 ) }
    apic_10 { pt3dadd( 367.34, 372.949, 24.4096, 0.483 ) }
    apic_10 { pt3dadd( 368.244, 372.248, 24.4096, 0.5084 ) }
    apic_10 { pt3dadd( 369.156, 371.573, 24.4899, 0.4322 ) }
    apic_10 { pt3dadd( 370.156, 371.173, 25.4374, 0.4068 ) }
    apic_10 { pt3dadd( 371.155, 370.773, 26.385, 0.3814 ) }
    apic_10 { pt3dadd( 372.155, 370.372, 27.3325, 0.4068 ) }
    apic_10 { pt3dadd( 373.247, 370.478, 27.8785, 0.3304 ) }
    apic_10 { pt3dadd( 374.358, 370.675, 28.3508, 0.2796 ) }
    apic_10 { pt3dadd( 375.468, 370.873, 28.8235, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_10 { pt3dadd( 376.469, 370.333, 28.7938, 0.2288 ) }
    apic_10 { pt3dadd( 377.466, 369.774, 28.7507, 0.2288 ) }
    apic_10 { pt3dadd( 378.529, 369.441, 28.8579, 0.2288 ) }
    apic_10 { pt3dadd( 379.665, 369.363, 29.1346, 0.2542 ) }
    apic_10 { pt3dadd( 380.8, 369.287, 29.4115, 0.305 ) }
    apic_10 { pt3dadd( 381.936, 369.21, 29.6884, 0.3814 ) }
    apic_10 { pt3dadd( 383.072, 369.133, 29.965, 0.4576 ) }
    apic_10 { pt3dadd( 383.77, 369.793, 30.0905, 0.5084 ) }
    apic_10 { pt3dadd( 384.338, 370.729, 30.1305, 0.5338 ) }
    apic_10 { pt3dadd( 385.37, 370.934, 30.1356, 0.483 ) }
    apic_10 { pt3dadd( 386.138, 370.085, 30.1291, 0.4068 ) }
    apic_10 { pt3dadd( 386.943, 369.539, 30.2753, 0.3304 ) }
    apic_10 { pt3dadd( 387.885, 370.12, 30.9893, 0.305 ) }
    apic_10 { pt3dadd( 388.827, 370.699, 31.7033, 0.305 ) }
    apic_10 { pt3dadd( 389.792, 371.221, 32.4013, 0.2796 ) }
    apic_10 { pt3dadd( 390.899, 371.374, 32.9974, 0.2542 ) }
    apic_10 { pt3dadd( 392.005, 371.529, 33.5933, 0.2288 ) }
    apic_10 { pt3dadd( 393.113, 371.682, 34.1891, 0.2288 ) }
    apic_10 { pt3dadd( 394.22, 371.836, 34.7852, 0.2288 ) }
    apic_10 { pt3dadd( 395.207, 372.351, 34.9171, 0.2288 ) }
    apic_10 { pt3dadd( 396.181, 372.89, 34.8846, 0.2288 ) }
    apic_10 { pt3dadd( 397.324, 372.835, 34.8715, 0.2288 ) }
    apic_10 { pt3dadd( 397.767, 373.589, 35.4794, 0.2288 ) }
    apic_10 { pt3dadd( 397.929, 374.666, 36.3359, 0.2288 ) }
    apic_10 { pt3dadd( 398.255, 375.587, 37.0521, 0.2288 ) }
    apic_10 { pt3dadd( 399.39, 375.733, 37.0776, 0.2288 ) }
    apic_10 { pt3dadd( 400.409, 376.137, 37.4973, 0.2288 ) }
    apic_10 { pt3dadd( 401.345, 376.728, 38.2077, 0.2288 ) }
    apic_10 { pt3dadd( 402.281, 377.32, 38.918, 0.2288 ) }
    apic_10 { pt3dadd( 403.215, 377.911, 39.6284, 0.2288 ) }
    apic_10 { pt3dadd( 403.864, 378.775, 40.3598, 0.2288 ) }
    apic_10 { pt3dadd( 404.42, 379.729, 41.0984, 0.2288 ) }
    apic_10 { pt3dadd( 404.976, 380.682, 41.837, 0.2288 ) }
    apic_10 { pt3dadd( 405.532, 381.635, 42.5754, 0.2288 ) }
    apic_10 { pt3dadd( 406.088, 382.589, 43.314, 0.2288 ) }
    apic_10 { pt3dadd( 406.643, 383.542, 44.0524, 0.2288 ) }
    apic_10 { pt3dadd( 407.425, 384.128, 44.5206, 0.2288 ) }
    apic_10 { pt3dadd( 408.569, 384.125, 44.5572, 0.2288 ) }
    apic_10 { pt3dadd( 409.713, 384.124, 44.5942, 0.2796 ) }
    apic_10 { pt3dadd( 410.857, 384.123, 44.6312, 0.3304 ) }
    apic_10 { pt3dadd( 411.775, 384.262, 46.1364, 0.3814 ) }
    apic_10 { pt3dadd( 412.655, 384.423, 47.8806, 0.3304 ) }
    apic_10 { pt3dadd( 413.535, 384.584, 49.625, 0.2796 ) }
    apic_10 { pt3dadd( 414.415, 384.744, 51.3691, 0.2288 ) }
    apic_10 { pt3dadd( 415.285, 384.94, 53.0958, 0.2288 ) }
    apic_10 { pt3dadd( 416.005, 385.582, 54.598, 0.2288 ) }
    apic_10 { pt3dadd( 416.727, 386.224, 56.1002, 0.2288 ) }
    apic_10 { pt3dadd( 417.448, 386.865, 57.6022, 0.2288 ) }
    apic_10 { pt3dadd( 417.791, 387.667, 58.5889, 0.2288 ) }
    apic_10 { pt3dadd( 417.655, 388.719, 58.6292, 0.2288 ) }
    apic_10 { pt3dadd( 418.393, 389.593, 58.6004, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 51/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 363.421, 376.601, 18.4808, 0.6864 ) }
    apic_5 { pt3dadd( 362.658, 375.97, 18.4842, 0.6102 ) }
    apic_5 { pt3dadd( 361.813, 375.2, 18.5035, 0.5592 ) }
    apic_5 { pt3dadd( 361.601, 374.11, 18.6497, 0.5338 ) }
    apic_5 { pt3dadd( 362.117, 373.165, 19.4499, 0.5592 ) }
    apic_5 { pt3dadd( 362.327, 372.056, 19.8282, 0.6102 ) }
    apic_5 { pt3dadd( 362.203, 370.927, 19.6008, 0.661 ) }
    apic_5 { pt3dadd( 361.806, 369.854, 19.6048, 0.661 ) }
    apic_5 { pt3dadd( 361.327, 368.815, 19.6274, 0.5592 ) }
    apic_5 { pt3dadd( 360.969, 367.733, 19.7686, 0.483 ) }
    apic_5 { pt3dadd( 360.954, 366.613, 20.3221, 0.4068 ) }
    apic_5 { pt3dadd( 361.044, 365.554, 21.3511, 0.4322 ) }
    apic_5 { pt3dadd( 361.236, 364.456, 21.8389, 0.4576 ) }
    apic_5 { pt3dadd( 360.868, 363.373, 21.8327, 0.5338 ) }
    apic_5 { pt3dadd( 360.419, 362.321, 21.7941, 0.6102 ) }
    apic_5 { pt3dadd( 360.002, 361.265, 21.5555, 0.6356 ) }
    apic_5 { pt3dadd( 359.418, 360.335, 20.8051, 0.661 ) }
    apic_5 { pt3dadd( 358.78, 359.387, 20.7262, 0.6356 ) }
    apic_5 { pt3dadd( 358.164, 358.424, 20.7519, 0.5848 ) }
    apic_5 { pt3dadd( 357.669, 357.397, 20.907, 0.4576 ) }
    apic_5 { pt3dadd( 357.31, 356.341, 21.4687, 0.356 ) }
    apic_5 { pt3dadd( 357.201, 355.214, 21.8089, 0.3304 ) }
    apic_5 { pt3dadd( 356.978, 354.097, 21.6387, 0.4068 ) }
    apic_5 { pt3dadd( 356.809, 352.989, 21.1792, 0.483 ) }
    apic_5 { pt3dadd( 356.788, 351.857, 21.4729, 0.5592 ) }
    apic_5 { pt3dadd( 356.664, 350.773, 22.2631, 0.5848 ) }
    apic_5 { pt3dadd( 356.239, 349.753, 22.8844, 0.5848 ) }
    apic_5 { pt3dadd( 355.599, 348.807, 22.9533, 0.5338 ) }
    apic_5 { pt3dadd( 354.896, 347.904, 22.9272, 0.4576 ) }
    apic_5 { pt3dadd( 354.263, 346.956, 22.7954, 0.4576 ) }
    apic_5 { pt3dadd( 353.744, 345.978, 22.3734, 0.483 ) }
    apic_5 { pt3dadd( 353.718, 344.869, 21.8898, 0.5338 ) }
    apic_5 { pt3dadd( 353.918, 343.75, 22.034, 0.5338 ) }
    apic_5 { pt3dadd( 353.844, 342.646, 22.5319, 0.5338 ) }
    apic_5 { pt3dadd( 353.407, 341.609, 22.9494, 0.5592 ) }
    apic_5 { pt3dadd( 352.903, 340.581, 22.9762, 0.5338 ) }
    apic_5 { pt3dadd( 352.449, 339.535, 23.0552, 0.5338 ) }
    apic_5 { pt3dadd( 352.117, 338.456, 23.4186, 0.5084 ) }
    apic_5 { pt3dadd( 351.814, 337.386, 24.0072, 0.5338 ) }
    apic_5 { pt3dadd( 351.462, 336.301, 24.1898, 0.5084 ) }
    apic_5 { pt3dadd( 351.048, 335.256, 24.6047, 0.4576 ) }
    apic_5 { pt3dadd( 350.525, 334.28, 25.1812, 0.4576 ) }
    apic_5 { pt3dadd( 349.962, 333.285, 25.207, 0.5084 ) }
    apic_5 { pt3dadd( 349.549, 332.228, 25.2468, 0.6102 ) }
    apic_5 { pt3dadd( 349.287, 331.125, 25.5027, 0.6356 ) }
    apic_5 { pt3dadd( 349.0, 330.041, 26.0324, 0.5848 ) }
    apic_5 { pt3dadd( 348.772, 328.93, 26.3147, 0.4576 ) }
    apic_5 { pt3dadd( 348.628, 327.806, 26.2816, 0.356 ) }
    apic_5 { pt3dadd( 348.854, 326.717, 25.9986, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_5 { pt3dadd( 349.42, 325.757, 25.4341, 0.356 ) }
    apic_5 { pt3dadd( 349.728, 324.768, 25.0998, 0.4068 ) }
    apic_5 { pt3dadd( 349.13, 323.905, 24.7327, 0.4576 ) }
    apic_5 { pt3dadd( 348.213, 323.272, 24.8374, 0.4576 ) }
    apic_5 { pt3dadd( 347.308, 322.598, 25.1488, 0.4576 ) }
    apic_5 { pt3dadd( 346.461, 321.833, 25.0519, 0.5338 ) }
    apic_5 { pt3dadd( 345.763, 320.969, 24.5367, 0.6102 ) }
    apic_5 { pt3dadd( 345.426, 319.931, 24.2416, 0.7372 ) }
    apic_5 { pt3dadd( 345.374, 318.797, 24.5241, 0.7626 ) }
    apic_5 { pt3dadd( 345.374, 317.674, 24.348, 0.839 ) }
    apic_5 { pt3dadd( 345.372, 316.541, 24.094, 0.839 ) }
    apic_5 { pt3dadd( 345.37, 315.397, 24.0971, 0.8898 ) }
    apic_5 { pt3dadd( 345.348, 314.254, 24.1968, 0.8898 ) }
    apic_5 { pt3dadd( 345.21, 313.147, 24.6991, 0.9406 ) }
    apic_5 { pt3dadd( 344.914, 312.067, 25.2008, 0.9914 ) }
    apic_5 { pt3dadd( 344.489, 311.03, 25.7219, 1.0168 ) }
    apic_5 { pt3dadd( 343.96, 310.037, 26.1909, 1.0424 ) }
    apic_5 { pt3dadd( 343.289, 309.118, 26.35, 1.0168 ) }
    apic_5 { pt3dadd( 342.53, 308.264, 26.4426, 0.9914 ) }
    apic_5 { pt3dadd( 341.862, 307.369, 26.9276, 0.8898 ) }
    apic_5 { pt3dadd( 341.418, 306.387, 27.804, 0.7626 ) }
    apic_5 { pt3dadd( 341.268, 305.29, 28.0473, 0.6356 ) }
    apic_5 { pt3dadd( 341.252, 304.163, 27.6167, 0.5084 ) }
    apic_5 { pt3dadd( 341.231, 303.026, 27.4403, 0.4322 ) }
    apic_5 { pt3dadd( 341.108, 301.891, 27.4411, 0.4322 ) }
    apic_5 { pt3dadd( 340.618, 300.883, 27.4453, 0.5338 ) }
    apic_5 { pt3dadd( 339.978, 299.935, 27.4663, 0.6356 ) }
    apic_5 { pt3dadd( 339.265, 299.044, 27.5545, 0.6864 ) }
    apic_5 { pt3dadd( 338.662, 298.102, 28.0249, 0.7118 ) }
    apic_5 { pt3dadd( 338.296, 297.041, 28.4612, 0.7372 ) }
    apic_5 { pt3dadd( 337.823, 296.008, 28.5597, 0.7372 ) }
    apic_5 { pt3dadd( 337.56, 294.908, 28.5592, 0.661 ) }
    apic_5 { pt3dadd( 337.519, 293.768, 28.5541, 0.5848 ) }
    apic_5 { pt3dadd( 337.565, 292.625, 28.5214, 0.5338 ) }
    apic_5 { pt3dadd( 337.516, 291.49, 28.2596, 0.5848 ) }
    apic_5 { pt3dadd( 337.218, 290.396, 28.3293, 0.6864 ) }
    apic_5 { pt3dadd( 336.882, 289.395, 29.3244, 0.7626 ) }
    apic_5 { pt3dadd( 336.558, 288.321, 29.6576, 0.788 ) }
    apic_5 { pt3dadd( 336.27, 287.215, 29.6901, 0.7372 ) }
    apic_5 { pt3dadd( 336.138, 286.08, 29.7503, 0.7118 ) }
    apic_5 { pt3dadd( 335.775, 285.015, 30.119, 0.6864 ) }
    apic_5 { pt3dadd( 335.16, 284.083, 30.6594, 0.6864 ) }
    apic_5 { pt3dadd( 334.393, 283.241, 30.8246, 0.7118 ) }
    apic_5 { pt3dadd( 333.618, 282.401, 30.94, 0.6864 ) }
    apic_5 { pt3dadd( 332.998, 281.471, 31.479, 0.6356 ) }
    apic_5 { pt3dadd( 332.627, 280.405, 31.8466, 0.5592 ) }
    apic_5 { pt3dadd( 332.565, 279.27, 31.7509, 0.5592 ) }
    apic_5 { pt3dadd( 332.565, 278.129, 31.5476, 0.5592 ) }
    apic_5 { pt3dadd( 332.587, 277.089, 32.6287, 0.5848 ) }
    apic_5 { pt3dadd( 332.739, 275.966, 32.6973, 0.5848 ) }
    apic_5 { pt3dadd( 332.279, 274.98, 31.9738, 0.661 ) }
    apic_5 { pt3dadd( 331.362, 274.297, 31.9203, 0.661 ) }
    apic_5 { pt3dadd( 330.471, 273.58, 31.9211, 0.6864 ) }
    apic_5 { pt3dadd( 329.622, 272.814, 31.9256, 0.6864 ) }
    apic_5 { pt3dadd( 329.185, 271.757, 31.9547, 0.7626 ) }
    apic_5 { pt3dadd( 328.692, 270.728, 32.1177, 0.8136 ) }
    apic_5 { pt3dadd( 328.14, 269.762, 32.7642, 0.8136 ) }
    apic_5 { pt3dadd( 327.461, 268.849, 33.0366, 0.788 ) }
    apic_5 { pt3dadd( 326.992, 267.807, 33.0198, 0.7118 ) }
    apic_5 { pt3dadd( 326.745, 266.706, 32.8714, 0.661 ) }
    apic_5 { pt3dadd( 327.03, 265.744, 32.1664, 0.5848 ) }
    apic_5 { pt3dadd( 326.669, 264.836, 33.32, 0.5592 ) }
    apic_5 { pt3dadd( 326.323, 263.75, 33.32, 0.5338 ) }
    apic_5 { pt3dadd( 326.054, 262.644, 33.32, 0.5592 ) }
    apic_5 { pt3dadd( 325.828, 261.524, 33.32, 0.5592 ) }
    apic_5 { pt3dadd( 325.521, 260.427, 33.32, 0.5084 ) }
    apic_5 { pt3dadd( 325.468, 259.289, 33.32, 0.3814 ) }
    apic_5 { pt3dadd( 325.461, 258.145, 33.32, 0.3304 ) }
    apic_5 { pt3dadd( 325.335, 257.011, 33.32, 0.3814 ) }
    apic_5 { pt3dadd( 324.764, 256.034, 33.32, 0.5084 ) }
    apic_5 { pt3dadd( 324.117, 255.117, 33.6672, 0.5592 ) }
    apic_5 { pt3dadd( 323.356, 254.287, 33.9578, 0.5592 ) }
    apic_5 { pt3dadd( 322.895, 253.266, 34.16, 0.5338 ) }
    apic_5 { pt3dadd( 322.531, 252.25, 34.1844, 0.5592 ) }
    apic_5 { pt3dadd( 322.42, 251.127, 34.44, 0.5338 ) }
    apic_5 { pt3dadd( 322.304, 249.994, 34.44, 0.483 ) }
    apic_5 { pt3dadd( 322.046, 248.882, 34.44, 0.3814 ) }
    apic_5 { pt3dadd( 321.795, 247.773, 34.44, 0.3304 ) }
    apic_5 { pt3dadd( 321.557, 246.704, 34.72, 0.3304 ) }
    apic_5 { pt3dadd( 321.201, 245.681, 34.8594, 0.3304 ) }
    apic_5 { pt3dadd( 320.192, 245.263, 35.0, 0.3304 ) }
    apic_5 { pt3dadd( 320.091, 244.152, 35.0, 0.305 ) }
    apic_5 { pt3dadd( 320.091, 243.008, 35.0, 0.3304 ) }
    apic_5 { pt3dadd( 320.091, 242.077, 36.094, 0.4068 ) }
    apic_5 { pt3dadd( 320.091, 241.025, 36.96, 0.5084 ) }
    apic_5 { pt3dadd( 320.017, 239.885, 36.96, 0.5592 ) }
    apic_5 { pt3dadd( 319.574, 238.832, 36.96, 0.5338 ) }
    apic_5 { pt3dadd( 319.129, 237.778, 36.96, 0.4322 ) }
    apic_5 { pt3dadd( 318.913, 236.659, 36.96, 0.3814 ) }
    apic_5 { pt3dadd( 318.698, 235.544, 37.214, 0.356 ) }
    apic_5 { pt3dadd( 318.496, 234.418, 37.24, 0.3814 ) }
    apic_5 { pt3dadd( 318.136, 233.353, 37.6762, 0.4068 ) }
    apic_5 { pt3dadd( 317.8, 232.392, 38.36, 0.4322 ) }
    apic_5 { pt3dadd( 317.565, 231.28, 38.36, 0.5084 ) }
    apic_5 { pt3dadd( 317.001, 230.307, 38.64, 0.5848 ) }
    apic_5 { pt3dadd( 316.42, 229.331, 38.6882, 0.661 ) }
    apic_5 { pt3dadd( 316.164, 228.231, 39.0494, 0.6356 ) }
    apic_5 { pt3dadd( 315.831, 227.147, 39.2, 0.5338 ) }
    apic_5 { pt3dadd( 315.744, 226.01, 39.2, 0.4322 ) }
    apic_5 { pt3dadd( 315.744, 224.866, 39.2, 0.3814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_5 { pt3dadd( 315.744, 223.722, 39.2, 0.356 ) }
    apic_5 { pt3dadd( 315.858, 222.588, 39.2, 0.305 ) }
    apic_5 { pt3dadd( 315.858, 221.444, 39.2, 0.2796 ) }
    apic_5 { pt3dadd( 315.817, 220.306, 39.2, 0.305 ) }
    apic_5 { pt3dadd( 315.086, 219.52, 39.3271, 0.4068 ) }
    apic_5 { pt3dadd( 314.769, 218.44, 39.5648, 0.5592 ) }
    apic_5 { pt3dadd( 314.581, 217.326, 39.776, 0.661 ) }
    apic_5 { pt3dadd( 314.027, 216.399, 40.04, 0.7372 ) }
    apic_5 { pt3dadd( 313.708, 215.312, 40.04, 0.6864 ) }
    apic_5 { pt3dadd( 313.5, 214.23, 40.04, 0.7626 ) }
    apic_5 { pt3dadd( 312.726, 213.538, 40.5784, 0.8136 ) }
    apic_5 { pt3dadd( 312.655, 212.472, 40.88, 0.9152 ) }
    apic_5 { pt3dadd( 312.31, 211.402, 40.88, 0.9152 ) }
    apic_5 { pt3dadd( 311.916, 210.329, 40.88, 0.9152 ) }
    apic_5 { pt3dadd( 311.623, 209.225, 40.88, 0.9152 ) }
    apic_5 { pt3dadd( 311.511, 208.09, 40.88, 0.8644 ) }
    apic_5 { pt3dadd( 311.511, 206.946, 40.88, 0.839 ) }
    apic_5 { pt3dadd( 311.504, 205.818, 41.1384, 0.839 ) }
    apic_5 { pt3dadd( 311.209, 204.831, 42.194, 0.9152 ) }
    apic_5 { pt3dadd( 310.659, 203.846, 42.5536, 0.9152 ) }
    apic_5 { pt3dadd( 310.367, 202.75, 42.56, 0.839 ) }
    apic_5 { pt3dadd( 310.138, 201.636, 42.56, 0.7626 ) }
    apic_5 { pt3dadd( 310.138, 200.492, 42.56, 0.788 ) }
    apic_5 { pt3dadd( 310.061, 199.358, 42.56, 0.9406 ) }
    apic_5 { pt3dadd( 309.795, 198.27, 42.56, 1.0678 ) }
    apic_5 { pt3dadd( 309.243, 197.494, 43.4039, 1.0678 ) }
    apic_5 { pt3dadd( 308.882, 196.508, 43.9566, 0.966 ) }
    apic_5 { pt3dadd( 308.473, 195.442, 43.96, 0.8136 ) }
    apic_5 { pt3dadd( 308.183, 194.345, 43.96, 0.788 ) }
    apic_5 { pt3dadd( 307.755, 193.287, 43.96, 0.8136 ) }
    apic_5 { pt3dadd( 307.394, 192.208, 43.96, 0.9406 ) }
    apic_5 { pt3dadd( 306.966, 191.16, 43.96, 1.0424 ) }
    apic_5 { pt3dadd( 306.592, 190.133, 43.68, 1.144 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 33/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 306.592, 190.133, 43.68, 1.144 ) }
    apic_7 { pt3dadd( 306.366, 189.793, 44.3268, 0.8898 ) }
    apic_7 { pt3dadd( 305.815, 188.975, 45.64, 0.8136 ) }
    apic_7 { pt3dadd( 305.266, 187.976, 45.64, 0.6864 ) }
    apic_7 { pt3dadd( 304.876, 186.915, 45.8102, 0.6356 ) }
    apic_7 { pt3dadd( 304.876, 185.792, 46.2, 0.5592 ) }
    apic_7 { pt3dadd( 304.876, 184.648, 46.2, 0.5592 ) }
    apic_7 { pt3dadd( 304.876, 183.522, 46.5032, 0.5338 ) }
    apic_7 { pt3dadd( 304.876, 182.387, 46.76, 0.5338 ) }
    apic_7 { pt3dadd( 304.774, 181.254, 46.76, 0.6102 ) }
    apic_7 { pt3dadd( 303.883, 180.729, 46.76, 0.6356 ) }
    apic_7 { pt3dadd( 303.194, 179.896, 46.76, 0.6356 ) }
    apic_7 { pt3dadd( 303.046, 178.775, 46.8222, 0.5084 ) }
    apic_7 { pt3dadd( 303.046, 177.75, 47.8352, 0.4322 ) }
    apic_7 { pt3dadd( 303.046, 176.607, 47.88, 0.4322 ) }
    apic_7 { pt3dadd( 303.016, 175.464, 47.88, 0.5338 ) }
    apic_7 { pt3dadd( 302.58, 174.42, 47.88, 0.6102 ) }
    apic_7 { pt3dadd( 302.474, 173.297, 47.88, 0.6102 ) }
    apic_7 { pt3dadd( 302.474, 172.153, 47.88, 0.5084 ) }
    apic_7 { pt3dadd( 302.474, 171.009, 47.88, 0.483 ) }
    apic_7 { pt3dadd( 302.474, 169.865, 47.88, 0.4576 ) }
    apic_7 { pt3dadd( 302.474, 168.749, 48.1978, 0.5084 ) }
    apic_7 { pt3dadd( 302.388, 167.755, 49.28, 0.4576 ) }
    apic_7 { pt3dadd( 302.0, 166.68, 49.28, 0.4576 ) }
    apic_7 { pt3dadd( 301.721, 165.575, 49.28, 0.4576 ) }
    apic_7 { pt3dadd( 301.315, 164.532, 49.369, 0.5848 ) }
    apic_7 { pt3dadd( 300.811, 163.57, 50.0231, 0.7118 ) }
    apic_7 { pt3dadd( 300.496, 162.475, 50.12, 0.7626 ) }
    apic_7 { pt3dadd( 300.22, 161.368, 50.12, 0.7118 ) }
    apic_7 { pt3dadd( 299.89, 160.272, 50.12, 0.5848 ) }
    apic_7 { pt3dadd( 299.728, 159.145, 50.12, 0.5084 ) }
    apic_7 { pt3dadd( 299.728, 158.001, 50.12, 0.4322 ) }
    apic_7 { pt3dadd( 299.728, 156.857, 50.12, 0.4576 ) }
    apic_7 { pt3dadd( 299.702, 155.714, 50.12, 0.483 ) }
    apic_7 { pt3dadd( 298.928, 154.914, 50.12, 0.5084 ) }
    apic_7 { pt3dadd( 298.366, 154.013, 50.391, 0.4576 ) }
    apic_7 { pt3dadd( 297.837, 153.15, 50.96, 0.4068 ) }
    apic_7 { pt3dadd( 297.669, 152.047, 51.317, 0.4322 ) }
    apic_7 { pt3dadd( 297.491, 150.954, 51.7776, 0.4576 ) }
    apic_7 { pt3dadd( 296.982, 149.951, 51.8, 0.5338 ) }
    apic_7 { pt3dadd( 296.747, 148.966, 52.36, 0.5848 ) }
    apic_7 { pt3dadd( 296.43, 147.872, 52.36, 0.6864 ) }
    apic_7 { pt3dadd( 296.125, 146.777, 52.36, 0.661 ) }
    apic_7 { pt3dadd( 295.684, 145.732, 52.36, 0.5592 ) }
    apic_7 { pt3dadd( 295.607, 144.594, 52.36, 0.4322 ) }
    apic_7 { pt3dadd( 294.96, 143.682, 52.36, 0.3814 ) }
    apic_7 { pt3dadd( 294.586, 142.649, 52.36, 0.356 ) }
    apic_7 { pt3dadd( 294.675, 141.51, 52.36, 0.3304 ) }
    apic_7 { pt3dadd( 294.809, 140.381, 52.36, 0.305 ) }
    apic_7 { pt3dadd( 294.809, 139.24, 52.4009, 0.305 ) }
    apic_7 { pt3dadd( 294.809, 138.104, 52.64, 0.3304 ) }
    apic_7 { pt3dadd( 294.809, 136.98, 53.0068, 0.3814 ) }
    apic_7 { pt3dadd( 294.407, 135.987, 53.2, 0.4322 ) }
    apic_7 { pt3dadd( 294.008, 135.009, 53.2, 0.4322 ) }
    apic_7 { pt3dadd( 294.008, 133.865, 53.2, 0.4068 ) }
    apic_7 { pt3dadd( 293.98, 132.722, 53.2, 0.4068 ) }
    apic_7 { pt3dadd( 293.602, 131.657, 53.2, 0.4322 ) }
    apic_7 { pt3dadd( 293.06, 130.661, 53.2, 0.4576 ) }
    apic_7 { pt3dadd( 292.521, 129.69, 53.2, 0.483 ) }
    apic_7 { pt3dadd( 292.521, 128.732, 54.2158, 0.5084 ) }
    apic_7 { pt3dadd( 292.514, 127.609, 54.6, 0.5848 ) }
    apic_7 { pt3dadd( 291.913, 126.674, 54.6, 0.6356 ) }
    apic_7 { pt3dadd( 291.362, 125.742, 55.3353, 0.6864 ) }
    apic_7 { pt3dadd( 290.535, 125.005, 55.72, 0.6102 ) }
    apic_7 { pt3dadd( 289.914, 124.046, 55.72, 0.483 ) }
    apic_7 { pt3dadd( 289.49, 122.986, 55.72, 0.3304 ) }
    apic_7 { pt3dadd( 289.147, 121.899, 55.72, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_7 { pt3dadd( 288.402, 121.202, 56.2288, 0.2796 ) }
    apic_7 { pt3dadd( 288.393, 120.061, 56.28, 0.3304 ) }
    apic_7 { pt3dadd( 288.14, 118.95, 56.28, 0.3814 ) }
    apic_7 { pt3dadd( 287.928, 117.831, 56.28, 0.356 ) }
    apic_7 { pt3dadd( 287.689, 116.722, 56.2979, 0.3304 ) }
    apic_7 { pt3dadd( 287.373, 115.662, 56.8445, 0.3304 ) }
    apic_7 { pt3dadd( 287.373, 114.543, 57.2393, 0.3304 ) }
    apic_7 { pt3dadd( 287.373, 113.42, 57.68, 0.3814 ) }
    apic_7 { pt3dadd( 287.373, 112.284, 57.9365, 0.4322 ) }
    apic_7 { pt3dadd( 287.253, 111.168, 57.96, 0.5084 ) }
    apic_7 { pt3dadd( 286.843, 110.101, 57.96, 0.5084 ) }
    apic_7 { pt3dadd( 286.164, 109.222, 57.96, 0.483 ) }
    apic_7 { pt3dadd( 285.657, 108.297, 57.96, 0.483 ) }
    apic_7 { pt3dadd( 285.47, 107.323, 58.6121, 0.483 ) }
    apic_7 { pt3dadd( 285.224, 106.584, 60.2938, 0.4322 ) }
    apic_7 { pt3dadd( 284.187, 106.392, 60.48, 0.3814 ) }
    apic_7 { pt3dadd( 283.606, 105.512, 60.48, 0.356 ) }
    apic_7 { pt3dadd( 283.018, 104.728, 60.48, 0.4322 ) }
    apic_7 { pt3dadd( 282.275, 103.959, 60.48, 0.483 ) }
    apic_7 { pt3dadd( 281.169, 103.68, 60.48, 0.6102 ) }
    apic_7 { pt3dadd( 280.181, 103.15, 60.48, 0.6864 ) }
    apic_7 { pt3dadd( 279.309, 102.422, 60.48, 0.7626 ) }
    apic_7 { pt3dadd( 278.553, 101.585, 60.48, 0.7118 ) }
    apic_7 { pt3dadd( 278.148, 100.602, 60.7552, 0.661 ) }
    apic_7 { pt3dadd( 278.106, 99.485, 61.04, 0.5592 ) }
    apic_7 { pt3dadd( 278.106, 98.341, 61.04, 0.483 ) }
    apic_7 { pt3dadd( 277.992, 97.2065, 61.04, 0.3814 ) }
    apic_7 { pt3dadd( 277.992, 96.0625, 61.04, 0.356 ) }
    apic_7 { pt3dadd( 278.003, 94.9186, 61.04, 0.3814 ) }
    apic_7 { pt3dadd( 278.32, 94.0585, 62.169, 0.4068 ) }
    apic_7 { pt3dadd( 278.543, 93.1255, 63.56, 0.4322 ) }
    apic_7 { pt3dadd( 278.869, 92.0315, 63.56, 0.4576 ) }
    apic_7 { pt3dadd( 279.12, 90.9263, 63.5782, 0.5592 ) }
    apic_7 { pt3dadd( 279.182, 89.8488, 64.3353, 0.6356 ) }
    apic_7 { pt3dadd( 279.25, 88.7618, 64.96, 0.6356 ) }
    apic_7 { pt3dadd( 279.437, 87.6563, 64.96, 0.5338 ) }
    apic_7 { pt3dadd( 279.92, 86.6342, 65.24, 0.3814 ) }
    apic_7 { pt3dadd( 279.937, 85.5539, 65.8, 0.3304 ) }
    apic_7 { pt3dadd( 279.937, 84.4099, 65.8, 0.3814 ) }
    apic_7 { pt3dadd( 279.937, 83.2659, 65.8, 0.5338 ) }
    apic_7 { pt3dadd( 279.965, 82.1226, 65.8, 0.6356 ) }
    apic_7 { pt3dadd( 280.154, 81.0454, 66.4675, 0.661 ) }
    apic_7 { pt3dadd( 280.166, 79.919, 66.7142, 0.6356 ) }
    apic_7 { pt3dadd( 280.166, 78.7906, 67.1703, 0.6356 ) }
    apic_7 { pt3dadd( 280.166, 77.6504, 67.3268, 0.661 ) }
    apic_7 { pt3dadd( 280.166, 76.5122, 67.4982, 0.6356 ) }
    apic_7 { pt3dadd( 280.258, 75.465, 68.32, 0.5338 ) }
    apic_7 { pt3dadd( 280.795, 74.4777, 68.32, 0.4068 ) }
    apic_7 { pt3dadd( 281.375, 73.4959, 68.32, 0.356 ) }
    apic_7 { pt3dadd( 281.775, 72.4711, 68.3262, 0.356 ) }
    apic_7 { pt3dadd( 281.996, 71.6154, 69.8068, 0.4068 ) }
    apic_7 { pt3dadd( 281.996, 70.5948, 71.0542, 0.4322 ) }
    apic_7 { pt3dadd( 282.034, 69.4789, 71.4, 0.4576 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 53/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 306.592, 190.133, 43.68, 1.144 ) }
    apic_6 { pt3dadd( 306.592, 190.018, 43.12, 0.9152 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 55/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 282.034, 69.4789, 71.4, 0.4576 ) }
    apic_9 { pt3dadd( 281.78, 69.5583, 72.2156, 0.4322 ) }
    apic_9 { pt3dadd( 281.299, 69.1381, 73.36, 0.3814 ) }
    apic_9 { pt3dadd( 280.824, 68.1238, 73.36, 0.3304 ) }
    apic_9 { pt3dadd( 280.576, 67.0226, 73.36, 0.3304 ) }
    apic_9 { pt3dadd( 279.907, 66.0963, 73.36, 0.4068 ) }
    apic_9 { pt3dadd( 279.365, 65.1778, 73.7195, 0.5084 ) }
    apic_9 { pt3dadd( 279.029, 64.4174, 75.1654, 0.5592 ) }
    apic_9 { pt3dadd( 278.127, 64.0423, 75.88, 0.5592 ) }
    apic_9 { pt3dadd( 277.454, 63.1378, 75.88, 0.5084 ) }
    apic_9 { pt3dadd( 276.489, 62.6214, 76.1001, 0.483 ) }
    apic_9 { pt3dadd( 275.805, 61.9017, 77.2929, 0.4322 ) }
    apic_9 { pt3dadd( 274.953, 61.5491, 78.12, 0.4068 ) }
    apic_9 { pt3dadd( 273.822, 61.4613, 78.12, 0.3814 ) }
    apic_9 { pt3dadd( 273.008, 60.7387, 78.4899, 0.4068 ) }
    apic_9 { pt3dadd( 272.152, 60.1111, 79.24, 0.483 ) }
    apic_9 { pt3dadd( 271.229, 59.5451, 79.9484, 0.6356 ) }
    apic_9 { pt3dadd( 270.247, 59.0102, 80.36, 0.7118 ) }
    apic_9 { pt3dadd( 269.626, 58.4702, 82.2091, 0.661 ) }
    apic_9 { pt3dadd( 268.9, 57.8189, 82.88, 0.4576 ) }
    apic_9 { pt3dadd( 267.788, 57.6576, 82.88, 0.305 ) }
    apic_9 { pt3dadd( 266.708, 57.3682, 83.1547, 0.2288 ) }
    apic_9 { pt3dadd( 265.605, 57.3144, 83.6948, 0.2288 ) }
    apic_9 { pt3dadd( 264.575, 57.2752, 84.7787, 0.2288 ) }
    apic_9 { pt3dadd( 263.495, 57.0126, 85.0296, 0.2288 ) }
    apic_9 { pt3dadd( 262.975, 56.4167, 86.994, 0.2288 ) }
    apic_9 { pt3dadd( 261.939, 56.2461, 87.64, 0.2288 ) }
    apic_9 { pt3dadd( 260.8, 56.1718, 87.64, 0.2288 ) }
    apic_9 { pt3dadd( 259.913, 55.717, 88.436, 0.2288 ) }
    apic_9 { pt3dadd( 259.222, 55.0717, 89.9186, 0.2288 ) }
    apic_9 { pt3dadd( 258.692, 54.5775, 91.4508, 0.2288 ) }
    apic_9 { pt3dadd( 258.02, 53.949, 92.9662, 0.2288 ) }
    apic_9 { pt3dadd( 257.105, 53.6021, 94.3331, 0.2288 ) }
    apic_9 { pt3dadd( 256.051, 53.1864, 94.36, 0.2288 ) }
    apic_9 { pt3dadd( 254.948, 52.9135, 94.5596, 0.2288 ) }
    apic_9 { pt3dadd( 253.88, 52.624, 94.8293, 0.2288 ) }
    apic_9 { pt3dadd( 252.738, 52.624, 94.92, 0.2288 ) }
    apic_9 { pt3dadd( 251.853, 52.624, 95.9171, 0.2288 ) }
    apic_9 { pt3dadd( 250.723, 52.624, 96.2693, 0.2288 ) }
    apic_9 { pt3dadd( 249.972, 52.9172, 97.6738, 0.2288 ) }
    apic_9 { pt3dadd( 249.105, 52.9512, 99.2748, 0.2288 ) }
    apic_9 { pt3dadd( 248.217, 52.7384, 100.814, 0.2288 ) }
    apic_9 { pt3dadd( 247.242, 52.7384, 102.278, 0.2288 ) }
    apic_9 { pt3dadd( 246.28, 52.7384, 103.6, 0.2288 ) }
    apic_9 { pt3dadd( 245.152, 52.6021, 103.6, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_9 { pt3dadd( 244.244, 52.052, 103.6, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 1/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 282.034, 69.4789, 71.4, 0.4576 ) }
    apic_8 { pt3dadd( 282.607, 68.3617, 71.68, 0.3304 ) }
    apic_8 { pt3dadd( 283.11, 67.3464, 71.68, 0.3304 ) }
    apic_8 { pt3dadd( 283.291, 66.2233, 71.68, 0.356 ) }
    apic_8 { pt3dadd( 283.672, 65.1547, 71.68, 0.356 ) }
    apic_8 { pt3dadd( 284.0, 64.0852, 71.68, 0.3304 ) }
    apic_8 { pt3dadd( 284.818, 63.3167, 71.8917, 0.3814 ) }
    apic_8 { pt3dadd( 285.168, 62.3131, 72.8426, 0.5084 ) }
    apic_8 { pt3dadd( 285.228, 61.1975, 73.08, 0.6356 ) }
    apic_8 { pt3dadd( 285.451, 60.076, 73.08, 0.6356 ) }
    apic_8 { pt3dadd( 285.661, 58.9604, 73.08, 0.5338 ) }
    apic_8 { pt3dadd( 286.206, 57.9582, 73.1399, 0.4068 ) }
    apic_8 { pt3dadd( 286.734, 56.9836, 73.64, 0.305 ) }
    apic_8 { pt3dadd( 287.527, 56.2394, 74.1978, 0.2796 ) }
    apic_8 { pt3dadd( 287.83, 55.293, 75.04, 0.305 ) }
    apic_8 { pt3dadd( 287.867, 54.1606, 75.32, 0.356 ) }
    apic_8 { pt3dadd( 288.159, 53.3181, 76.678, 0.3814 ) }
    apic_8 { pt3dadd( 288.288, 52.7384, 78.7954, 0.356 ) }
    apic_8 { pt3dadd( 288.389, 52.2825, 81.2258, 0.3304 ) }
    apic_8 { pt3dadd( 289.312, 52.052, 82.077, 0.2796 ) }
    apic_8 { pt3dadd( 290.375, 52.052, 82.7868, 0.2542 ) }
    apic_8 { pt3dadd( 290.711, 51.8499, 85.1869, 0.2288 ) }
    apic_8 { pt3dadd( 291.483, 51.6188, 86.52, 0.2288 ) }
    apic_8 { pt3dadd( 292.342, 51.2515, 87.2312, 0.2288 ) }
    apic_8 { pt3dadd( 293.412, 51.1368, 87.9477, 0.2288 ) }
    apic_8 { pt3dadd( 293.984, 51.0224, 89.8724, 0.2288 ) }
    apic_8 { pt3dadd( 294.919, 50.6692, 90.6822, 0.2288 ) }
    apic_8 { pt3dadd( 295.773, 50.4435, 92.2093, 0.2288 ) }
    apic_8 { pt3dadd( 296.418, 50.1964, 93.9935, 0.2288 ) }
    apic_8 { pt3dadd( 297.418, 50.1072, 94.64, 0.2288 ) }
    apic_8 { pt3dadd( 298.475, 49.8321, 94.92, 0.2288 ) }
    apic_8 { pt3dadd( 299.528, 49.5352, 95.4232, 0.2288 ) }
    apic_8 { pt3dadd( 300.51, 49.5352, 96.8514, 0.2288 ) }
    apic_8 { pt3dadd( 301.642, 49.5352, 97.16, 0.2288 ) }
    apic_8 { pt3dadd( 302.786, 49.5352, 97.1902, 0.2288 ) }
    apic_8 { pt3dadd( 303.316, 48.9184, 98.0, 0.2542 ) }
    apic_8 { pt3dadd( 304.174, 48.6866, 99.3709, 0.2796 ) }
    apic_8 { pt3dadd( 304.954, 48.0435, 99.96, 0.305 ) }
    apic_8 { pt3dadd( 305.781, 47.3246, 99.96, 0.2796 ) }
    apic_8 { pt3dadd( 306.733, 46.7133, 99.96, 0.2796 ) }
    apic_8 { pt3dadd( 307.793, 46.3686, 99.96, 0.305 ) }
    apic_8 { pt3dadd( 308.397, 45.5068, 100.421, 0.356 ) }
    apic_8 { pt3dadd( 309.247, 45.4168, 101.914, 0.356 ) }
    apic_8 { pt3dadd( 309.865, 45.4168, 103.857, 0.3304 ) }
    apic_8 { pt3dadd( 310.674, 45.4168, 105.0, 0.356 ) }
    apic_8 { pt3dadd( 311.613, 45.6082, 105.69, 0.4068 ) }
    apic_8 { pt3dadd( 312.248, 45.76, 107.883, 0.4322 ) }
    apic_8 { pt3dadd( 313.263, 45.7643, 108.92, 0.356 ) }
    apic_8 { pt3dadd( 313.573, 46.6572, 109.48, 0.2796 ) }
    apic_8 { pt3dadd( 314.714, 46.6752, 109.48, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_84, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_84 = new SectionList()
    soma_0 ModelViewParmSubset_84.append()
    axon_0 ModelViewParmSubset_84.append()
    axon_1 ModelViewParmSubset_84.append()

    // Group: {name=ModelViewParmSubset_85, groups=[], sections=[dend_17, dend_16, dend_9, dend_0, apic_0, dend_23, dend_18, dend_13, dend_10, dend_6, dend_1, apic_14, apic_1, dend_25, dend_24, dend_22, dend_19, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_2, apic_16, apic_15, apic_13, apic_2, dend_21, dend_20, dend_4, dend_3, apic_12, apic_3, apic_11, apic_4, apic_10, apic_5, apic_7, apic_6, apic_9, apic_8]}
    ModelViewParmSubset_85 = new SectionList()
    dend_17 ModelViewParmSubset_85.append()
    dend_16 ModelViewParmSubset_85.append()
    dend_9 ModelViewParmSubset_85.append()
    dend_0 ModelViewParmSubset_85.append()
    apic_0 ModelViewParmSubset_85.append()
    dend_23 ModelViewParmSubset_85.append()
    dend_18 ModelViewParmSubset_85.append()
    dend_13 ModelViewParmSubset_85.append()
    dend_10 ModelViewParmSubset_85.append()
    dend_6 ModelViewParmSubset_85.append()
    dend_1 ModelViewParmSubset_85.append()
    apic_14 ModelViewParmSubset_85.append()
    apic_1 ModelViewParmSubset_85.append()
    dend_25 ModelViewParmSubset_85.append()
    dend_24 ModelViewParmSubset_85.append()
    dend_22 ModelViewParmSubset_85.append()
    dend_19 ModelViewParmSubset_85.append()
    dend_15 ModelViewParmSubset_85.append()
    dend_14 ModelViewParmSubset_85.append()
    dend_12 ModelViewParmSubset_85.append()
    dend_11 ModelViewParmSubset_85.append()
    dend_8 ModelViewParmSubset_85.append()
    dend_7 ModelViewParmSubset_85.append()
    dend_5 ModelViewParmSubset_85.append()
    dend_2 ModelViewParmSubset_85.append()
    apic_16 ModelViewParmSubset_85.append()
    apic_15 ModelViewParmSubset_85.append()
    apic_13 ModelViewParmSubset_85.append()
    apic_2 ModelViewParmSubset_85.append()
    dend_21 ModelViewParmSubset_85.append()
    dend_20 ModelViewParmSubset_85.append()
    dend_4 ModelViewParmSubset_85.append()
    dend_3 ModelViewParmSubset_85.append()
    apic_12 ModelViewParmSubset_85.append()
    apic_3 ModelViewParmSubset_85.append()
    apic_11 ModelViewParmSubset_85.append()
    apic_4 ModelViewParmSubset_85.append()
    apic_10 ModelViewParmSubset_85.append()
    apic_5 ModelViewParmSubset_85.append()
    apic_7 ModelViewParmSubset_85.append()
    apic_6 ModelViewParmSubset_85.append()
    apic_9 ModelViewParmSubset_85.append()
    apic_8 ModelViewParmSubset_85.append()

    // Group: {name=dend, groups=[], sections=[dend_17, dend_16, dend_9, dend_0, dend_23, dend_18, dend_13, dend_10, dend_6, dend_1, dend_25, dend_24, dend_22, dend_19, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_2, dend_21, dend_20, dend_4, dend_3]}
    dend = new SectionList()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_23 dend.append()
    dend_18 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_19 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_16, apic_15, apic_13, apic_2, apic_12, apic_3, apic_11, apic_4, apic_10, apic_5, apic_7, apic_6, apic_9, apic_8]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_14 apic.append()
    apic_1 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_13 apic.append()
    apic_2 apic.append()
    apic_12 apic.append()
    apic_3 apic.append()
    apic_11 apic.append()
    apic_4 apic.append()
    apic_10 apic.append()
    apic_5 apic.append()
    apic_7 apic.append()
    apic_6 apic.append()
    apic_9 apic.append()
    apic_8 apic.append()

    // Group: {name=OneSecGrp_SectionRef_4121, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_4121 = new SectionList()
    soma_0 OneSecGrp_SectionRef_4121.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.3600001  // units: uF/cm2
    forsec dend cm = 2.3600001  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 128.36  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0011054972  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 0.0  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.15772033  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0014158948  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.019994257  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.723796E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0025558325  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.18445243  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 8.757104E-5  // units: S cm-2
        e_pas_nml2 = -87.2848  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.4000196E-4  // units: S cm-2
        e_pas_nml2 = -87.2848  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.1871108E-5  // units: S cm-2
        e_pas_nml2 = -87.2848  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 5.772549E-4  // units: S cm-2
        e_pas_nml2 = -87.2848  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.7554835E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0030550049  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_16 nseg = 5
    dend_6 nseg = 3
    dend_25 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 3
    dend_14 nseg = 7
    dend_12 nseg = 3
    dend_11 nseg = 3
    dend_7 nseg = 3
    dend_5 nseg = 3
    apic_13 nseg = 3
    dend_21 nseg = 5
    dend_20 nseg = 3
    dend_4 nseg = 3
    dend_3 nseg = 5
    apic_11 nseg = 3
    apic_10 nseg = 5
    apic_5 nseg = 11
    apic_7 nseg = 7
    apic_9 nseg = 3
    apic_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473862845


