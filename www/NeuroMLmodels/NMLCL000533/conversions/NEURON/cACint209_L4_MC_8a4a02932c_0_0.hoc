// Cell: cACint209_L4_MC_8a4a02932c_0_0
/*
{
  "id" : "cACint209_L4_MC_8a4a02932c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.35512, -10.2289, -0.269721, 3.06496", "-2.12496, -8.98391, -0.225103, 5.44778", "-1.89479, -7.73896, -0.180484, 6.5021", "-1.66463, -6.49402, -0.135866, 7.66253", "-1.43446, -5.24908, -0.0912478, 8.82188", "-1.20429, -4.00413, -0.0466295, 9.9779", "-0.97413, -2.75919, -0.00201125, 11.1324", "-0.743965, -1.51425, 0.042607, 11.8769", "-0.513799, -0.269302, 0.0872253, 12.1627", "-0.283634, 0.975641, 0.131844, 12.3026", "-0.0534692, 2.22058, 0.176462, 12.4334", "0.176696, 3.46553, 0.22108, 12.0678", "0.406861, 4.71047, 0.265698, 10.8106", "0.637026, 5.95542, 0.310317, 9.52599", "0.867191, 7.20036, 0.354935, 8.17517", "1.09736, 8.4453, 0.399553, 6.80245", "1.32752, 9.69025, 0.444171, 5.68876", "1.55769, 10.9352, 0.48879, 4.78356", "1.78785, 12.1801, 0.533408, 3.86104", "2.01802, 13.4251, 0.578026, 2.8145", "2.24818, 14.67, 0.622644, 1.80491" ]
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "2.07366, 15.118, -2.40619, 2.77", "2.33493, 17.2414, -1.61076, 2.77", "2.90401, 21.8667, 0.121827, 2.77", "3.29937, 25.08, 1.32551, 1.94", "3.65456, 27.9668, 2.4069, 1.66", "4.54968, 35.2419, 5.1321, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000140454124027
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.896337, -9.70199, 5.09381, 1.38", "-1.11893, -11.8032, 5.10336, 1.38", "-1.37393, -14.7666, 5.12442, 1.38", "-1.58729, -17.6495, 5.14993, 1.66", "-1.83384, -20.981, 5.17941, 1.66", "-2.066, -24.118, 5.20718, 1.66", "-2.22925, -26.3238, 5.2267, 1.38", "-2.38937, -28.6166, 5.20462, 1.94", "-2.42282, -28.9827, 5.18499, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000140454124027
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.59634, -8.982, -3.65619, 1.94", "-6.51653, -10.8274, -3.65543, 1.38", "-9.76303, -13.9473, -3.65414, 1.66", "-13.3482, -17.3928, -3.65271, 1.66", "-16.1999, -20.1333, -3.65158, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000140454124027
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.24818, 14.67, 0.622644, 0.55", "4.97516, 29.42, 0.622644, 0.55", "7.70214, 44.1701, 0.622644, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "4.54968, 35.2419, 5.1321, 0.83", "7.07396, 36.5644, 4.00292, 0.83", "10.9153, 38.3226, 3.83997, 0.83", "14.7334, 39.7767, 3.98699, 0.83", "17.0512, 40.4722, 4.27139, 0.55", "18.149, 40.726, 4.45401, 0.55", "21.2481, 41.4269, 5.26622, 0.83", "27.6176, 42.322, 7.90169, 0.83", "30.4759, 42.6028, 9.57179, 0.83", "32.7256, 42.6635, 11.166, 0.83", "33.9058, 42.6748, 12.1089, 0.83", "37.2952, 42.5292, 14.8162, 0.83", "39.3649, 42.3953, 16.4374, 1.11" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.54968, 35.2419, 5.1321, 0.83", "3.67968, 38.2119, 7.8021, 0.83" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-2.42282, -28.9827, 5.18499, 1.11", "-1.35843, -31.5817, 6.36734, 1.11", "-0.202223, -34.4665, 7.37566, 1.11", "1.32867, -37.868, 8.10565, 1.38", "2.46968, -40.4033, 8.64973, 1.11", "3.44961, -42.5806, 9.11699, 0.83", "4.81783, -45.6207, 9.76941, 1.38", "6.83499, -50.1618, 10.5859, 1.38", "8.82064, -54.2064, 10.8788, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.42282, -28.9827, 5.18499, 0.55", "-2.929, -32.0288, 5.44175, 0.55", "-3.15309, -33.4742, 5.54135, 0.55", "-3.7279, -35.9352, 5.67858, 0.83", "-4.3428, -37.8358, 5.81135, 0.55", "-5.38548, -40.4475, 6.07129, 0.83", "-6.54816, -42.9522, 6.38409, 0.55", "-7.72121, -45.1113, 6.70331, 0.55", "-10.0928, -48.6773, 7.37547, 0.83", "-12.0659, -51.3052, 8.01829, 0.55", "-13.28, -52.8494, 8.50662, 0.83", "-14.5778, -54.3351, 9.1302, 0.55", "-15.894, -55.7853, 9.91339, 0.83", "-16.9591, -57.2845, 10.8824, 0.55", "-17.5907, -59.0806, 12.1719, 0.83", "-17.6571, -60.7267, 13.3656, 0.55", "-17.5737, -62.7867, 14.7712, 0.55", "-17.4735, -64.8517, 16.0894, 0.55", "-17.408, -67.7898, 17.8181, 0.83", "-17.4566, -69.9069, 18.8843, 1.11", "-17.8423, -72.7584, 19.3809, 0.55", "-18.3551, -75.5334, 18.9319, 0.83", "-18.889, -78.2244, 18.0037, 0.83", "-19.7607, -81.841, 16.3001, 0.83", "-20.4504, -84.4995, 14.9503, 0.83", "-23.8587, -97.936, 8.87078, 0.55", "-24.3826, -100.214, 8.0085, 0.55", "-24.9314, -102.983, 7.3375, 0.55", "-25.316, -105.179, 7.22546, 0.55", "-25.9477, -108.998, 7.78818, 0.83", "-26.6994, -113.583, 9.3479, 0.83", "-27.2707, -116.824, 10.9724, 0.83", "-27.8976, -119.928, 12.4838, 0.83", "-28.6135, -123.738, 14.2434, 0.83", "-28.8159, -124.857, 14.759, 0.55", "-29.3413, -127.83, 16.0482, 0.83", "-29.8649, -131.137, 17.4262, 0.55", "-30.2419, -133.968, 18.6305, 0.55", "-30.3857, -136.329, 19.6625, 0.83", "-30.4411, -137.89, 20.3666, 0.55", "-30.4241, -139.481, 21.1108, 0.55", "-30.3002, -140.817, 21.7609, 0.55", "-30.1404, -141.803, 22.2204, 0.83", "-29.7284, -145.272, 24.1676, 0.55", "-29.5812, -147.146, 25.2858, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-16.1999, -20.1333, -3.65158, 1.94", "-15.7899, -21.4633, -2.01158, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-16.1999, -20.1333, -3.65158, 1.11", "-19.2523, -18.6719, -5.03582, 1.11", "-20.5312, -18.0946, -5.53027, 1.11", "-21.8318, -17.5244, -5.95048, 1.11", "-23.8546, -16.7558, -6.67239, 1.11", "-27.7057, -15.5017, -8.0927, 1.11", "-31.5229, -14.5081, -10.0145, 1.11", "-33.0878, -14.1868, -11.2754, 0.83", "-35.1023, -13.8551, -13.263, 1.11", "-37.221, -13.6616, -15.5319, 0.83", "-37.9387, -13.6663, -16.4596, 0.83", "-41.6804, -14.1884, -22.9882, 1.11", "-45.4898, -15.246, -31.2122, 0.55", "-46.1758, -15.4746, -32.9168, 0.55", "-46.95, -15.7754, -35.0803, 0.83", "-48.2299, -16.2426, -38.8998, 1.11", "-49.6852, -16.8701, -43.8734, 1.11", "-50.0565, -17.2827, -45.8737, 0.83", "-50.1264, -17.8731, -47.7683, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "7.70214, 44.1701, 0.622644, 0.55", "10.4291, 58.9201, 0.622644, 0.55", "13.1561, 73.6702, 0.622644, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "39.3649, 42.3953, 16.4374, 0.55", "40.9984, 40.2696, 15.1325, 0.55", "42.5286, 38.2786, 13.9102, 0.83", "43.7141, 36.7359, 12.9631, 0.83" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "39.3649, 42.3953, 16.4374, 0.55", "39.9009, 44.482, 20.1224, 0.55", "40.1673, 45.733, 22.3026, 0.83", "40.413, 46.8217, 23.9667, 0.55", "40.9428, 48.8178, 26.5335, 0.83", "41.3853, 50.3045, 28.1279, 0.83", "41.636, 51.1021, 28.9686, 0.28", "42.0863, 52.523, 30.3328, 0.55", "42.5902, 54.3401, 32.0566, 0.28", "42.9898, 55.8987, 33.5026, 1.11", "43.3857, 57.3035, 34.7772, 0.55", "44.637, 61.1527, 38.453, 0.28", "45.1721, 62.3282, 39.6492, 0.83", "46.0498, 64.0466, 41.428, 0.28", "46.5924, 65.0667, 42.6181, 0.55", "47.3491, 66.2386, 44.0785, 0.28", "48.3184, 67.5188, 45.6348, 0.55", "49.9358, 69.2923, 47.5318, 0.55", "50.7775, 70.1864, 48.5495, 0.55", "52.9412, 72.4596, 51.1041, 1.11", "54.7626, 74.6849, 53.8517, 0.83", "54.9847, 75.0096, 54.2723, 0.83", "55.926, 76.8366, 56.6494, 0.83", "56.6454, 78.657, 59.0299, 0.28", "57.0833, 79.7947, 60.4612, 0.83", "58.0181, 83.0186, 63.9893, 0.28", "58.1394, 84.3133, 65.3159, 0.55", "58.1369, 85.1475, 66.1155, 0.28", "58.024, 86.0901, 66.9294, 0.83", "57.9021, 87.335, 67.8876, 0.28", "57.8452, 87.8191, 68.2728, 0.55", "57.7185, 89.8546, 69.5249, 0.28", "57.686, 91.0386, 70.3014, 0.83", "57.5875, 92.7586, 71.5118, 0.28", "57.4415, 94.3194, 72.6489, 0.83", "57.2156, 96.277, 74.1748, 0.28", "57.1194, 98.2155, 75.6728, 0.83" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "3.67968, 38.2119, 7.8021, 0.83", "5.00808, 38.7113, 7.8436, 0.83", "6.18804, 39.4358, 8.70985, 0.55", "7.44241, 40.4874, 9.85226, 0.83", "8.47381, 41.3521, 10.7916, 0.55", "9.02114, 41.811, 11.2901, 0.55", "10.7403, 43.2523, 12.8558, 0.55", "14.2913, 46.2788, 16.5504, 0.83", "14.9126, 46.9832, 17.4479, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.67968, 38.2119, 7.8021, 0.55", "1.44869, 40.64, 4.37116, 0.55", "-0.399446, 42.3614, 2.4667, 0.55", "-1.66768, 43.6212, 1.23737, 0.55", "-2.88198, 44.9284, 0.289039, 0.55", "-4.33179, 46.4891, -0.843228, 0.28", "-5.03668, 47.2479, -1.39373, 0.55", "-7.31669, 49.8886, -2.68018, 0.55", "-9.69919, 52.5509, -3.75126, 0.55", "-12.3326, 55.2295, -4.86935, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "8.82064, -54.2064, 10.8788, 0.83", "9.00491, -55.8532, 11.1868, 0.83", "9.29094, -58.4095, 11.665, 0.83", "9.57825, -60.9772, 12.1454, 0.83", "9.93303, -64.1479, 12.7385, 1.11", "10.2308, -66.8092, 13.2364, 1.11", "10.6973, -70.9786, 14.0163, 1.11" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "8.82064, -54.2064, 10.8788, 0.55", "11.2904, -53.5206, 10.956, 0.55", "12.2388, -53.2194, 10.9794, 0.55", "14.0756, -52.5353, 11.063, 0.55", "16.4234, -51.5381, 11.2295, 0.55", "19.2269, -50.3316, 11.4597, 0.55", "23.6765, -48.3596, 11.8516, 0.55", "25.3683, -47.6095, 12.0363, 0.55", "26.8791, -46.9811, 12.2257, 0.55", "29.8083, -45.882, 12.6414, 0.83", "32.1683, -45.1463, 13.017, 0.55", "34.3244, -44.6151, 13.3517, 0.83", "36.8185, -44.329, 13.6636, 0.28", "37.9516, -44.3114, 13.7992, 0.55", "39.437, -44.4122, 13.925, 0.28", "42.1831, -44.7477, 14.0889, 0.55", "45.4872, -45.3354, 14.0996, 0.55", "49.2739, -46.081, 13.9677, 0.55", "49.985, -46.2067, 13.9196, 0.55", "51.3241, -46.4162, 13.8113, 0.83", "53.2851, -46.7891, 13.5377, 0.83", "56.3847, -47.4412, 12.831, 0.55", "58.2036, -47.9587, 12.269, 0.55", "59.2925, -48.2581, 11.9799, 0.28", "60.6116, -48.63, 11.7661, 0.28", "64.0173, -49.627, 11.6247, 0.55", "65.467, -50.1063, 11.6255, 0.55", "67.469, -50.7649, 11.7633, 0.55", "69.8511, -51.7267, 11.9112, 0.55", "71.5962, -52.4717, 12.0942, 0.28", "73.4257, -53.242, 12.4854, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-15.7899, -21.4633, -2.01158, 1.38", "-15.2784, -24.9926, -1.61937, 1.38", "-14.7486, -28.6483, -1.21312, 1.38" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-15.7899, -21.4633, -2.01158, 0.83", "-20.4619, -23.4645, -1.0348, 0.83", "-21.4291, -23.9189, -0.747633, 0.83", "-23.4088, -24.8925, -0.143163, 0.55", "-27.3832, -26.6235, 1.07185, 0.83", "-29.2226, -27.2535, 2.2618, 0.55", "-31.2549, -27.9055, 3.79758, 1.38", "-33.2811, -28.5542, 5.5451, 0.55", "-34.4608, -28.8633, 6.87729, 0.83", "-36.2551, -29.1504, 9.24747, 0.83", "-41.1926, -29.9359, 16.7682, 0.55", "-42.3257, -30.181, 18.5754, 1.11", "-43.7344, -30.5544, 20.5809, 1.11", "-46.4718, -31.4134, 24.2287, 0.55", "-47.3905, -31.875, 25.4086, 0.55", "-49.0447, -33.2677, 27.311, 0.83", "-50.6983, -34.8446, 28.7788, 0.83", "-52.0734, -36.2274, 30.194, 1.11", "-53.5454, -37.7972, 31.6877, 0.55", "-54.1891, -38.4593, 32.2974, 0.55", "-56.5484, -40.6822, 34.6589, 1.11", "-58.4983, -42.2317, 36.5985, 0.83", "-59.6833, -43.1428, 37.721, 0.83", "-60.9541, -44.038, 38.9841, 0.83", "-63.1296, -45.1967, 40.9749, 0.83", "-64.6843, -45.9849, 42.2581, 0.83", "-66.3731, -46.7773, 43.6541, 0.83", "-69.6435, -48.1151, 46.4465, 0.83", "-72.5869, -49.131, 48.9741, 0.55", "-76.5922, -50.5619, 52.3411, 0.83", "-79.7486, -51.7152, 54.7825, 0.83", "-83.4039, -52.6945, 57.4508, 0.83", "-85.2379, -53.0183, 58.7625, 0.83", "-87.3673, -53.1213, 60.1595, 0.83", "-90.8182, -53.2155, 62.1777, 0.83", "-93.25, -53.1813, 63.5452, 0.83", "-96.6933, -52.7167, 65.4174, 0.83", "-99.8203, -52.4525, 66.7044, 0.55", "-101.818, -52.2679, 67.6898, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-50.1264, -17.8731, -47.7683, 0.83", "-51.0229, -19.5382, -48.4106, 0.83", "-52.4161, -21.5694, -49.6202, 0.83", "-53.101, -22.517, -50.2873, 0.55", "-54.0626, -23.8286, -51.3271, 0.83", "-55.2931, -25.5578, -52.9143, 0.55", "-56.6105, -27.1614, -54.4143, 0.55", "-58.0035, -28.6325, -55.9705, 0.55", "-59.8879, -30.462, -58.035, 1.11", "-61.5956, -32.0256, -59.8569, 0.55", "-64.2223, -34.4825, -62.5689, 1.38", "-66.5952, -36.8187, -65.1252, 0.55", "-68.3408, -38.5585, -66.9865, 0.28", "-68.7105, -38.8937, -67.3475, 0.83", "-69.6402, -39.6845, -68.2699, 0.28", "-71.3672, -41.1856, -70.0365, 0.83", "-73.7908, -43.6761, -73.0412, 0.55", "-75.6047, -45.8958, -75.8529, 1.38", "-76.8106, -47.4354, -77.9395, 0.55", "-78.0075, -49.0465, -80.1879, 0.55", "-79.5486, -51.1535, -83.1835, 0.83", "-81.221, -53.535, -86.7334, 0.28", "-82.1305, -55.1177, -88.9647, 0.83", "-83.1093, -57.4042, -92.3658, 0.28", "-83.4702, -58.3797, -93.8858, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-50.1264, -17.8731, -47.7683, 0.83", "-52.7996, -16.0288, -50.3935, 0.83", "-54.1944, -15.0591, -51.5808, 0.55", "-56.0085, -13.7108, -53.1395, 0.83", "-58.5656, -11.7665, -55.2692, 0.28", "-59.3519, -11.1714, -55.9045, 0.83", "-60.6, -10.2295, -56.8878, 0.28", "-61.3211, -9.66509, -57.4117, 0.55", "-64.1083, -7.76098, -59.506, 0.28", "-64.8277, -7.32327, -60.041, 0.55", "-66.583, -6.35344, -61.2789, 0.28", "-66.8715, -6.21124, -61.4923, 1.11", "-69.3651, -5.03837, -63.2709, 0.55", "-70.6541, -4.45387, -64.1019, 0.55", "-72.2392, -3.74756, -64.9905, 0.28", "-74.6608, -2.64998, -66.2402, 0.28", "-76.3726, -1.78316, -66.9556, 0.55", "-78.6735, -0.488131, -67.7199, 0.28", "-80.0992, 0.391348, -68.1199, 0.55", "-81.665, 1.3917, -68.5217, 0.28", "-83.8644, 2.73355, -69.0008, 0.55", "-86.4401, 4.27119, -69.361, 0.28", "-87.6509, 4.96027, -69.5737, 0.55", "-89.8869, 6.08549, -70.0349, 0.28", "-91.516, 6.88898, -70.4412, 1.11", "-93.4448, 7.82004, -71.0145, 0.28", "-95.0189, 8.59112, -71.5926, 0.55", "-98.0, 9.90616, -72.8189, 0.28", "-98.9193, 10.304, -73.3451, 0.83", "-100.261, 10.8842, -74.5176, 0.28", "-101.189, 11.2791, -75.7119, 0.55", "-102.229, 11.6674, -77.2986, 0.28", "-102.778, 11.7745, -78.2529, 0.55", "-105.506, 12.1231, -82.8904, 0.28", "-107.631, 12.2869, -86.4956, 0.55", "-109.19, 12.3191, -89.1689, 0.28", "-109.755, 12.3036, -90.2041, 0.55", "-112.917, 12.0897, -96.3658, 0.28", "-114.005, 12.001, -98.4781, 0.28", "-114.64, 11.9234, -99.5323, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "43.7141, 36.7359, 12.9631, 0.55", "44.719, 37.199, 12.1266, 0.55", "45.7902, 37.8786, 11.3373, 0.55", "46.4394, 38.2151, 10.8443, 0.28", "47.7021, 38.7433, 9.94563, 0.55", "50.7885, 39.9959, 7.52876, 0.55", "52.1815, 40.5416, 6.42634, 0.55", "53.4814, 40.9765, 5.18154, 0.55", "55.3624, 41.4743, 3.2697, 0.55", "56.9571, 41.7504, 1.55452, 0.55", "58.7425, 41.977, -0.395052, 0.28", "59.2989, 42.0686, -0.997167, 0.55", "62.1323, 42.4227, -4.18967, 0.28", "63.2691, 42.5284, -5.51634, 0.83", "65.6057, 42.8927, -8.12353, 0.28", "66.6217, 43.0288, -9.20418, 0.55", "67.9688, 43.1668, -10.4227, 0.28", "69.4822, 43.2009, -11.8276, 0.55", "70.6181, 43.2471, -12.8817, 0.28", "72.4545, 43.2562, -14.7148, 0.55", "75.1249, 43.3126, -17.2116, 0.28", "75.9091, 43.3601, -18.0186, 0.55", "79.4797, 43.8932, -22.3762, 1.11", "80.9907, 44.3954, -24.4163, 0.55", "81.6402, 44.7298, -25.6197, 0.55", "82.3801, 45.2356, -27.3425, 0.28", "83.5182, 46.3357, -30.3093, 0.55", "84.7925, 47.8856, -33.9849, 0.28", "85.4171, 48.8209, -35.98, 0.83", "87.4364, 51.9736, -43.3327, 0.28", "87.6068, 52.2788, -44.0776, 0.83", "87.9982, 53.0249, -46.0927, 0.28", "88.2209, 53.4191, -47.2084, 0.55" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "43.7141, 36.7359, 12.9631, 0.55", "46.0868, 35.2086, 14.9667, 0.55", "47.445, 34.4553, 15.9859, 0.55", "48.4394, 33.881, 16.6895, 1.11", "49.2979, 33.3334, 17.3018, 0.55", "50.1604, 32.7894, 17.8483, 0.55", "53.0255, 30.9152, 19.3483, 0.83", "54.1751, 30.2065, 19.7745, 0.83", "56.701, 28.6912, 20.6393, 0.55", "58.0571, 27.9281, 21.0707, 0.83", "60.5992, 26.5702, 21.8855, 0.55", "63.3975, 25.0781, 22.7459, 0.55", "64.509, 24.5124, 23.0127, 0.28", "65.8525, 23.8256, 23.4258, 0.83", "67.8348, 22.9095, 24.1418, 0.28", "68.8705, 22.4334, 24.596, 0.55", "69.499, 22.0616, 24.9797, 0.55", "70.4635, 21.4693, 25.4877, 0.55", "72.1192, 20.5126, 26.3019, 0.28", "73.1102, 19.9566, 26.8035, 0.55", "73.9598, 19.483, 27.2615, 0.55", "75.0419, 18.9111, 27.9695, 0.55", "77.3294, 17.7557, 30.1308, 0.55", "80.1685, 16.1053, 33.5951, 0.55", "81.5666, 15.2404, 35.6381, 0.28", "82.0607, 14.9237, 36.4401, 0.28", "82.9055, 14.3387, 37.8674, 0.55", "84.5422, 13.0152, 40.8015, 0.55", "85.3072, 12.3033, 42.168, 0.83", "86.1454, 11.4607, 43.3304, 0.55", "87.1598, 10.5704, 44.3362, 0.55", "88.78, 9.37183, 45.4431, 0.28", "90.158, 8.37014, 46.1201, 0.55", "91.6578, 7.31665, 46.6123, 0.55", "92.8708, 6.4951, 46.9056, 0.55", "94.8019, 5.25499, 47.2544, 0.55", "96.9958, 3.86446, 47.6714, 0.28", "98.1915, 3.14905, 47.8224, 0.28", "98.9058, 2.72285, 47.8841, 0.28", "100.4, 1.81471, 48.1425, 0.28", "102.162, 0.834323, 48.6533, 0.55", "103.63, -0.00133169, 49.4188, 0.28", "104.947, -0.788569, 50.2458, 0.55", "106.889, -1.91625, 51.4592, 0.55", "108.735, -2.92908, 52.6129, 0.28", "109.871, -3.50653, 53.3228, 0.55", "112.782, -4.9196, 54.9957, 0.28", "113.729, -5.36266, 55.536, 0.28", "115.046, -5.98998, 56.2588, 0.55", "116.745, -6.78063, 57.0817, 0.55", "118.162, -7.40649, 57.6088, 0.55", "119.471, -7.96347, 58.0435, 0.55", "122.006, -9.0016, 58.798, 0.55", "124.579, -9.97679, 59.5724, 0.55", "125.736, -10.4372, 59.9046, 0.55", "127.477, -11.1535, 60.3762, 0.83", "128.748, -11.6719, 60.6518, 0.28", "131.429, -12.7045, 61.2908, 0.55", "133.138, -13.2528, 61.583, 0.55", "135.379, -13.8919, 61.9182, 0.55", "136.917, -14.3661, 62.1285, 0.83", "138.784, -14.9279, 62.3568, 0.28", "141.937, -15.6597, 62.6087, 0.55", "145.062, -16.1351, 62.7155, 0.28", "146.429, -16.3558, 62.8163, 0.55" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "14.9126, 46.9832, 17.4479, 0.55", "15.3555, 46.7021, 19.047, 0.55", "15.9759, 46.5649, 22.5997, 0.55", "16.3021, 46.8874, 25.2934, 0.55", "17.0317, 47.9457, 29.4305, 0.55", "17.9655, 48.8388, 32.9806, 0.55", "19.1486, 49.5443, 36.4055, 0.55", "20.293, 49.8283, 38.9161, 0.55", "21.4215, 50.0526, 40.9994, 0.55", "22.8271, 50.4223, 43.3295, 0.55", "24.8997, 51.1416, 46.71, 0.55", "26.7403, 51.5684, 49.0723, 0.55", "28.0676, 51.3375, 50.4954, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "14.9126, 46.9832, 17.4479, 0.28", "15.2464, 49.1004, 18.6818, 0.28", "15.63, 50.8571, 19.8079, 0.55", "16.7605, 55.3513, 22.6594, 0.28", "17.1166, 56.4823, 23.3948, 0.55", "17.6265, 58.0742, 24.4089, 0.28", "18.6495, 61.3394, 26.4816, 0.55", "19.0125, 62.4067, 27.1492, 0.28", "19.4518, 63.5727, 27.9568, 0.55", "20.2661, 65.2919, 29.1015, 0.28", "20.8723, 66.4421, 29.8402, 0.55", "21.7781, 68.1067, 30.8462, 0.28", "21.8984, 68.3314, 30.9483, 0.55", "22.9951, 70.3228, 31.7178, 0.28", "24.4175, 73.001, 32.4357, 0.55", "25.6383, 75.4172, 32.923, 0.28", "26.5026, 76.9926, 33.186, 0.55", "27.7998, 79.3198, 33.4067, 0.28", "28.4967, 80.6451, 33.4579, 0.55", "29.715, 83.2497, 33.1818, 0.28", "30.3503, 85.5037, 32.6114, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-12.3326, 55.2295, -4.86935, 0.55", "-14.7666, 55.3351, -4.32798, 0.55", "-17.036, 55.5192, -3.70194, 0.55", "-19.0884, 55.6126, -2.88478, 0.55", "-21.8806, 55.7452, -1.67263, 0.55", "-24.6494, 55.9249, -0.699458, 0.55", "-28.5076, 56.2479, 0.406818, 0.55", "-30.8215, 56.5146, 0.97511, 0.28", "-36.439, 57.534, 1.84868, 0.55", "-38.567, 58.0378, 1.98993, 0.28", "-42.9531, 59.6061, 1.95408, 0.83", "-44.8944, 60.4344, 1.69574, 0.55", "-46.7145, 61.2114, 1.43509, 0.55", "-50.2679, 62.8635, 1.11005, 0.55", "-51.53, 63.4577, 1.05176, 0.55", "-53.6417, 64.2268, 1.35353, 0.55", "-58.3045, 65.3726, 2.98473, 0.55", "-65.2842, 66.2533, 6.29753, 0.55", "-67.6183, 66.1569, 7.72531, 0.55", "-69.1617, 65.7903, 8.86841, 0.55", "-71.2697, 64.9934, 10.5112, 0.28", "-71.8782, 64.6673, 11.0581, 0.28", "-72.5139, 64.2026, 11.7269, 0.55", "-73.9156, 63.0356, 12.9869, 0.28", "-75.2254, 61.8873, 14.2736, 0.55", "-76.6839, 60.7399, 15.7564, 0.55", "-78.7811, 59.1774, 17.7723, 0.28", "-79.6708, 58.4767, 18.6239, 0.55", "-80.3953, 57.8341, 19.3183, 0.28", "-81.0913, 57.1723, 19.9323, 0.55", "-82.2457, 55.9725, 20.8498, 0.28", "-83.2975, 54.7154, 21.5245, 0.55", "-84.3761, 53.3576, 21.8104, 0.28", "-85.5887, 51.7474, 21.8445, 0.55", "-86.762, 50.1441, 21.6516, 0.55", "-87.3743, 49.2315, 21.5222, 0.55", "-88.5942, 47.433, 21.3185, 0.55", "-91.0531, 43.7106, 21.0103, 0.28", "-92.2017, 42.0395, 20.8588, 0.55", "-93.0523, 40.8927, 20.8738, 0.28", "-95.1057, 37.8439, 21.3988, 0.55", "-97.1201, 34.6638, 22.2052, 0.55", "-98.66, 32.1458, 22.9989, 0.55", "-99.3893, 30.8867, 23.5084, 0.55", "-101.29, 27.358, 24.974, 0.83", "-103.134, 23.9629, 26.4437, 0.83", "-104.428, 21.5044, 27.3629, 0.83", "-105.137, 19.9751, 27.9242, 0.55", "-105.742, 18.6927, 28.4123, 0.55", "-106.75, 16.4632, 29.0639, 0.83", "-108.242, 13.0568, 29.6478, 0.55", "-109.474, 10.4644, 30.2625, 0.83", "-110.485, 8.19443, 31.05, 0.55", "-111.415, 5.97086, 31.9071, 0.55", "-112.49, 3.33135, 32.8958, 0.83", "-112.963, 2.11102, 33.4311, 0.83", "-114.645, -2.39202, 35.7348, 0.55", "-115.244, -3.85393, 36.5482, 0.28", "-115.801, -5.24108, 37.3426, 0.83", "-116.292, -6.54205, 38.1769, 0.28", "-117.632, -9.80189, 40.6456, 0.55", "-118.324, -11.2926, 41.756, 0.28", "-119.289, -13.3065, 42.8707, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-12.3326, 55.2295, -4.86935, 0.55", "-11.3323, 56.5813, -6.90868, 0.55", "-10.4402, 58.1284, -9.28711, 0.55", "-9.44927, 60.085, -12.1282, 0.28", "-8.65774, 61.6755, -14.3833, 0.55", "-8.04198, 62.9599, -16.1615, 0.55", "-7.57566, 63.9704, -17.4346, 0.55", "-6.34185, 67.196, -20.8835, 0.28", "-5.92717, 68.3462, -21.9825, 0.55", "-5.23982, 70.2866, -23.7242, 0.28", "-4.87648, 71.4986, -24.7248, 0.55", "-4.36983, 73.4353, -26.3855, 0.83", "-3.84777, 75.1341, -28.2092, 0.55", "-3.09165, 76.9144, -30.6445, 0.28", "-2.83933, 77.3618, -31.5821, 0.55", "-2.58486, 77.7516, -32.5796, 0.28", "-1.88469, 78.7656, -35.374, 0.55", "-0.578638, 80.6797, -40.8818, 0.28", "0.0658923, 81.7196, -43.7873, 0.55", "1.41438, 84.5043, -50.3738, 0.28", "1.56787, 84.953, -51.3036, 0.55", "1.77355, 85.8357, -52.9214, 0.28", "1.87866, 86.604, -54.0202, 0.55", "1.76731, 88.0081, -55.4727, 0.55", "1.51579, 89.4052, -56.6705, 0.55", "0.642024, 93.5371, -59.838, 0.28", "0.449018, 94.7799, -60.9104, 0.55", "0.271279, 96.3767, -62.4465, 0.28", "0.233537, 96.8312, -62.9161, 0.55", "0.0707148, 99.0619, -65.2895, 0.28", "-0.0660459, 100.498, -66.713, 0.55", "-0.131345, 101.328, -67.4422, 0.55", "-0.240883, 102.566, -68.7341, 0.28", "-0.460401, 104.509, -70.8257, 0.28", "-0.568841, 105.432, -71.7503, 0.83", "-0.808022, 107.102, -73.3513, 0.28", "-1.1299, 108.971, -75.1321, 0.55", "-1.75038, 112.685, -78.7848, 0.28", "-1.84908, 113.907, -80.0273, 0.55", "-1.87508, 115.358, -81.5645, 0.28", "-1.77291, 116.723, -83.1109, 0.55", "-1.50485, 118.378, -85.0501, 0.28", "-0.807605, 121.519, -88.4345, 0.55", "-0.195269, 123.399, -90.378, 0.28", "0.227637, 124.5, -91.5066, 0.55", "0.849187, 126.067, -93.1551, 0.55", "1.34131, 127.274, -94.3263, 0.28", "1.87267, 128.464, -95.4038, 0.28", "2.7456, 130.598, -97.099, 0.55", "3.25701, 132.1, -98.2156, 0.55", "4.90297, 137.378, -101.817, 0.28", "5.43326, 139.336, -103.068, 0.28", "5.90229, 140.909, -104.152, 0.55", "6.20861, 141.826, -104.773, 0.28", "6.6604, 143.261, -105.656, 0.55", "7.02614, 144.366, -106.29, 0.28", "7.33381, 145.382, -106.711, 0.55", "7.99194, 148.789, -108.347, 0.28", "8.10786, 149.89, -108.894, 0.55", "8.30205, 152.767, -110.034, 0.28", "8.31803, 153.951, -110.394, 0.28", "8.3064, 155.316, -110.697, 0.55", "8.20106, 157.962, -111.0, 0.28", "8.08829, 159.729, -110.915, 0.55", "7.8919, 162.678, -110.574, 0.28", "7.7956, 163.8, -110.403, 0.55", "7.58652, 166.095, -110.173, 0.28", "7.46662, 167.11, -110.273, 0.55", "6.98948, 169.659, -111.254, 0.28", "6.85802, 170.311, -111.76, 0.55", "6.31166, 172.709, -114.241, 0.28", "6.02653, 174.044, -115.865, 0.55", "5.31457, 177.03, -119.816, 0.28", "4.97341, 178.518, -121.954, 0.55", "4.59552, 180.151, -124.534, 0.28", "4.48774, 180.678, -125.371, 0.55", "4.32262, 181.925, -127.206, 0.28", "4.15826, 183.039, -128.862, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "10.6973, -70.9786, 14.0163, 0.55", "10.169, -72.9737, 13.6101, 0.55", "9.99366, -74.2979, 13.2751, 0.83", "9.94692, -76.0782, 12.7336, 0.55", "10.0549, -77.5894, 12.1771, 0.55", "10.362, -79.8968, 10.9599, 0.55", "10.664, -82.4013, 9.51103, 0.83", "10.9036, -84.1237, 8.22421, 0.83", "11.0186, -85.0598, 7.46139, 0.28", "11.1425, -86.4521, 6.24298, 0.83", "11.2997, -88.9346, 4.03988, 0.28", "11.292, -90.9052, 2.51735, 0.83", "10.8947, -94.5308, -0.0109077, 0.55", "10.7774, -95.2688, -0.477108, 0.55", "10.4563, -96.9636, -1.41034, 0.55", "10.0758, -98.828, -2.29205, 0.55", "9.49573, -102.38, -3.79683, 0.83", "9.28563, -105.493, -5.121, 0.28", "9.34059, -107.226, -5.77302, 0.55", "9.62686, -109.004, -6.52769, 0.28", "10.0858, -110.757, -7.29468, 0.83", "10.7691, -112.675, -8.32684, 0.28", "11.5148, -114.396, -9.41626, 0.55", "12.3447, -116.373, -10.719, 0.55", "13.2709, -118.515, -12.2642, 0.55", "14.022, -120.17, -13.5744, 0.83", "15.3772, -123.298, -15.9985, 0.28", "15.7665, -124.428, -16.9469, 0.83", "16.1604, -126.274, -18.6397, 0.28", "16.2367, -126.835, -19.18, 0.55", "16.5002, -130.141, -22.2312, 0.28", "16.6324, -132.316, -24.1243, 0.83", "16.6986, -135.762, -26.6542, 0.28", "16.7746, -138.205, -28.4696, 0.55", "16.824, -139.021, -29.049, 0.55", "16.8741, -140.126, -29.844, 1.11", "16.9684, -142.107, -31.265, 0.28", "17.1579, -144.096, -32.7855, 0.83", "17.6014, -146.312, -34.1236, 0.28", "17.9143, -147.452, -34.8884, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.6973, -70.9786, 14.0163, 0.55", "10.9971, -75.5675, 14.7549, 0.55", "11.3116, -80.3809, 15.5295, 0.55", "11.4653, -82.7334, 15.9081, 0.83", "11.6817, -86.0465, 16.4413, 1.38" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "73.4257, -53.242, 12.4854, 0.55", "75.6317, -54.2518, 11.5108, 0.55", "76.8879, -54.8558, 10.8704, 0.28", "78.7445, -55.7884, 9.88908, 0.83", "80.2959, -56.4212, 9.0874, 0.83", "81.6391, -56.8195, 8.32385, 0.28", "82.6133, -57.0273, 7.72127, 0.83", "83.9119, -57.1693, 6.67592, 0.28", "84.481, -57.2446, 6.15531, 0.55", "86.2661, -57.4267, 4.26372, 0.55", "88.0615, -57.5499, 2.2262, 0.55", "89.3411, -57.6185, 0.83768, 1.11", "92.4593, -57.8214, -2.16134, 0.28", "93.501, -57.8844, -3.07503, 0.83", "95.6197, -58.0516, -4.73129, 0.55", "97.1262, -58.2117, -5.75446, 0.83", "98.8964, -58.3025, -6.73437, 0.55", "101.361, -58.3095, -8.01915, 0.55", "102.707, -58.2531, -8.62808, 0.55", "104.462, -58.0912, -9.59625, 0.55", "105.313, -58.0027, -10.1378, 0.55", "106.241, -57.8266, -10.9051, 0.83", "108.869, -57.11, -13.4081, 0.55", "110.39, -56.5901, -15.0421, 0.83", "113.147, -55.5701, -18.026, 0.28", "114.618, -54.9617, -19.6896, 0.55", "116.542, -54.0856, -21.8586, 0.28", "117.731, -53.5426, -23.1731, 0.55", "119.047, -52.9551, -24.4697, 0.28", "120.031, -52.6105, -25.3865, 0.55", "123.375, -51.8404, -28.213, 0.28", "125.274, -51.5802, -29.7037, 0.55", "128.095, -51.4792, -31.8368, 0.28", "130.831, -51.5089, -33.8284, 0.55", "134.134, -51.719, -36.0806, 0.28", "135.176, -51.8115, -36.7565, 0.83", "136.916, -52.0311, -37.7602, 0.83", "139.656, -52.4232, -39.1374, 0.28", "142.503, -52.7486, -40.3893, 0.83", "144.751, -52.9448, -41.4517, 0.28", "146.734, -53.0999, -42.2678, 0.55", "147.65, -53.1844, -42.6627, 0.55", "149.983, -53.5012, -43.7627, 0.28", "150.513, -53.6248, -44.0524, 0.55", "153.288, -54.7076, -46.0145, 0.28", "154.199, -55.1379, -46.7325, 0.55", "156.708, -56.6562, -48.9688, 0.28", "157.28, -57.0492, -49.5559, 0.55", "158.859, -58.2838, -51.3519, 0.28", "159.657, -58.9672, -52.2468, 0.55", "160.905, -60.0299, -53.5022, 0.28", "161.531, -60.4902, -54.1409, 0.55", "163.202, -61.5564, -55.9266, 0.28", "163.587, -61.743, -56.3816, 0.55", "164.275, -61.9689, -57.2158, 0.28", "165.575, -62.3239, -58.9015, 0.55", "167.108, -62.6684, -60.9999, 0.28", "167.977, -62.7988, -62.1644, 0.83", "169.876, -62.9608, -64.7303, 0.55", "171.358, -63.0251, -66.8432, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "73.4257, -53.242, 12.4854, 0.28", "74.6477, -53.8834, 13.111, 0.28", "75.5765, -54.3567, 13.6486, 0.55", "76.7918, -54.9425, 14.2926, 0.28", "77.3045, -55.1882, 14.5565, 0.55", "79.9625, -56.4683, 15.8153, 0.28", "81.0018, -56.9367, 16.3277, 0.55", "83.4249, -58.0325, 17.5655, 0.28", "84.6494, -58.5576, 18.2276, 0.55", "85.9157, -59.0741, 18.9433, 0.28", "86.5851, -59.3402, 19.2966, 0.55", "89.9347, -60.5984, 20.6948, 0.28", "90.4708, -60.7832, 20.9463, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.7486, -28.6483, -1.21312, 1.94", "-15.3217, -29.9017, -1.36139, 1.94", "-17.1716, -33.9139, -1.75237, 1.38", "-18.775, -37.1087, -2.06818, 0.83", "-20.4611, -40.2894, -2.41023, 0.83", "-21.3628, -42.0226, -2.60227, 0.55", "-22.4031, -44.2457, -2.83927, 1.11", "-23.6428, -47.3548, -3.13946, 0.55", "-25.4049, -52.3804, -3.53667, 1.38", "-25.774, -53.7907, -3.57302, 0.55", "-26.0111, -55.0085, -3.58315, 0.55", "-26.4082, -58.4867, -3.41732, 0.83", "-26.6439, -61.2285, -3.1458, 0.83", "-27.0457, -65.1452, -2.62226, 0.83", "-27.215, -67.6993, -2.18049, 0.55", "-27.4904, -70.959, -1.55153, 0.55", "-27.9628, -74.1707, -0.876875, 0.83", "-28.528, -76.5498, -0.290466, 1.11", "-29.3449, -79.2492, 0.482293, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.7486, -28.6483, -1.21312, 0.55", "-14.5713, -30.3362, -4.08868, 0.55", "-14.6219, -30.8633, -5.13523, 1.11", "-14.8921, -32.1813, -7.72757, 0.55", "-15.0268, -32.808, -8.99016, 0.55", "-15.5788, -34.7354, -12.9243, 0.83", "-16.2058, -36.6167, -16.9233, 0.28", "-16.6137, -37.8394, -19.9126, 0.83", "-16.7944, -38.3451, -21.2669, 0.28", "-17.1176, -39.5422, -24.4638, 0.83", "-17.3387, -40.9522, -28.1534, 0.28", "-17.4492, -43.0229, -33.3523, 0.83", "-17.3716, -46.066, -40.8371, 0.28", "-17.1444, -47.7866, -45.0442, 0.55", "-16.801, -49.668, -49.682, 1.11", "-16.4001, -51.5008, -54.1129, 0.28", "-16.3476, -51.7133, -54.6219, 0.28", "-16.1958, -52.3735, -56.2721, 0.83", "-15.8141, -54.4026, -61.4809, 0.55", "-15.727, -55.2125, -63.9605, 0.28", "-15.7241, -56.1932, -67.4088, 0.83", "-15.7744, -56.7602, -69.3458, 0.83", "-15.9768, -59.3785, -78.0396, 0.28", "-15.9784, -59.8505, -79.613, 0.83", "-15.7992, -62.6554, -88.6009, 0.55", "-15.7003, -63.2382, -90.2719, 0.55", "-15.4151, -64.542, -93.6974, 0.83", "-15.0541, -66.0821, -97.3998, 0.55", "-14.8378, -67.1952, -99.8462, 0.83", "-14.5083, -68.6774, -103.057, 0.83", "-14.189, -69.6957, -105.1, 0.83", "-13.8944, -70.7676, -107.454, 0.55", "-13.6804, -71.5518, -109.313, 0.83", "-13.0929, -74.024, -115.285, 0.83", "-12.9812, -74.4827, -116.424, 0.28", "-12.8325, -74.9658, -117.686, 0.55", "-12.5235, -75.8363, -120.007, 0.28", "-12.2275, -76.6465, -121.935, 0.55", "-11.9318, -77.4521, -123.648, 0.28", "-11.6164, -78.6861, -125.965, 0.55", "-11.4769, -79.6259, -127.611, 0.28", "-11.4547, -80.6173, -129.197, 0.55", "-11.5129, -81.8594, -130.9, 0.55", "-11.8179, -83.7061, -133.239, 0.83", "-11.8998, -83.9546, -133.539, 0.83", "-12.2468, -84.769, -134.605, 0.83", "-12.9106, -86.3469, -136.67, 0.28", "-13.2726, -87.3441, -137.996, 0.55", "-13.6451, -88.9234, -140.28, 0.28", "-13.7976, -89.8105, -141.703, 0.28", "-13.9711, -91.5663, -144.717, 0.55", "-13.9881, -92.3361, -145.998, 0.55", "-13.788, -93.901, -148.412, 1.11", "-13.4331, -95.8831, -151.382, 0.28", "-13.1007, -97.6943, -153.89, 0.83", "-12.9779, -98.3742, -154.785, 0.28", "-12.6951, -99.8318, -156.616, 0.55", "-12.254, -102.529, -159.872, 0.55", "-12.0768, -104.825, -162.481, 0.28", "-12.0423, -106.37, -164.125, 0.55", "-12.1345, -107.83, -165.624, 0.28", "-12.4186, -109.526, -167.594, 0.28", "-12.6651, -110.585, -168.994, 0.83", "-13.4254, -112.668, -171.84, 0.83", "-13.8262, -113.746, -173.52, 0.55", "-14.2171, -114.71, -175.158, 0.83", "-15.4879, -117.196, -179.652, 0.28", "-16.1317, -118.234, -181.667, 0.28", "-17.2206, -119.824, -185.164, 0.55", "-18.5159, -121.49, -189.03, 0.28", "-19.3045, -122.295, -190.969, 0.55", "-19.8191, -122.732, -192.055, 0.28", "-20.3149, -123.023, -192.876, 0.55", "-22.2943, -124.05, -195.775, 0.28", "-23.2546, -124.534, -197.155, 0.55", "-24.2705, -125.136, -198.594, 0.55", "-26.3787, -126.604, -201.873, 0.83", "-28.5711, -128.577, -205.688, 0.28", "-29.1469, -129.295, -206.869, 0.55", "-29.4334, -129.78, -207.546, 0.55", "-30.3714, -131.901, -210.181, 0.28", "-30.5818, -132.468, -210.761, 0.28", "-30.9513, -133.626, -211.483, 0.55", "-31.8154, -136.06, -212.327, 0.28", "-32.164, -136.947, -212.612, 0.55", "-32.6416, -138.015, -212.884, 0.28", "-33.5112, -139.762, -213.062, 0.28", "-34.531, -141.565, -213.12, 0.28", "-35.949, -143.507, -213.03, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-83.4702, -58.3797, -93.8858, 0.55", "-85.1795, -59.6161, -95.018, 0.55", "-86.956, -61.064, -96.3695, 0.28", "-87.628, -61.6059, -96.8778, 0.55", "-89.0968, -62.8835, -97.9489, 0.55", "-90.0447, -63.8444, -98.7407, 1.11", "-92.4965, -66.5759, -100.933, 0.55", "-93.3681, -67.6379, -101.807, 1.11", "-94.2754, -68.8056, -102.701, 0.83", "-96.0214, -70.9115, -104.475, 0.55", "-97.8481, -72.9459, -106.338, 0.83", "-98.7913, -73.7729, -107.144, 0.28", "-100.162, -74.7379, -108.125, 0.55", "-101.908, -75.7504, -109.349, 0.55", "-104.094, -76.6997, -110.83, 0.55", "-106.027, -77.2086, -112.046, 0.83", "-109.901, -77.6875, -114.37, 0.55", "-110.664, -77.694, -114.83, 0.28", "-111.72, -77.6515, -115.474, 0.55", "-113.127, -77.4815, -116.358, 0.28", "-113.599, -77.4121, -116.639, 0.55", "-115.553, -76.7398, -117.91, 0.28", "-117.727, -75.2232, -119.685, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-83.4702, -58.3797, -93.8858, 0.28", "-82.8209, -60.9825, -95.5097, 0.28", "-81.8182, -64.5191, -97.5152, 1.11", "-81.0254, -66.981, -98.7574, 0.28", "-80.8694, -67.4378, -99.0095, 0.83", "-80.1682, -69.3097, -100.051, 0.28", "-79.0792, -71.9276, -101.59, 1.11", "-78.7292, -72.7494, -102.094, 0.83", "-78.0578, -74.3053, -102.857, 0.55", "-76.9113, -77.3817, -104.422, 1.11", "-76.3815, -78.8765, -105.203, 1.11", "-75.4056, -81.9626, -107.018, 0.28", "-75.0569, -83.381, -107.952, 0.55", "-74.5739, -85.7805, -109.69, 1.11", "-73.7701, -89.6759, -112.69, 0.55", "-73.4366, -91.2583, -113.871, 0.55", "-72.9085, -93.8367, -115.891, 0.83", "-72.504, -95.7273, -117.393, 0.83", "-72.0319, -97.6131, -118.962, 0.83", "-71.0829, -100.946, -121.726, 1.11", "-70.6514, -102.503, -122.801, 0.28", "-70.3031, -103.69, -123.543, 0.28", "-69.6883, -105.495, -124.456, 0.83", "-68.9717, -107.343, -125.23, 0.28", "-68.4534, -108.582, -125.603, 0.55", "-67.5674, -110.563, -126.121, 0.55", "-66.7589, -112.295, -126.595, 0.28", "-66.1829, -113.621, -126.954, 0.55", "-65.4668, -115.282, -127.357, 0.28", "-64.5054, -117.585, -127.898, 0.55", "-62.8019, -121.526, -129.091, 0.83", "-61.406, -124.601, -130.287, 0.83", "-60.4298, -126.636, -131.229, 0.55", "-59.2447, -128.91, -132.467, 0.83", "-57.909, -131.273, -133.974, 0.83", "-56.3502, -133.668, -135.727, 0.55", "-54.7089, -135.824, -137.489, 0.83", "-53.3677, -137.355, -138.913, 0.55", "-52.4604, -138.296, -139.891, 0.28", "-51.8571, -138.927, -140.624, 0.55", "-50.0475, -140.833, -142.746, 0.55", "-48.6562, -142.589, -144.223, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "28.0676, 51.3375, 50.4954, 0.55", "26.0776, 51.6875, 47.8454, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "28.0676, 51.3375, 50.4954, 0.55", "27.6541, 49.1891, 50.0431, 0.55", "27.3878, 48.4168, 49.8234, 0.55", "26.3548, 45.9929, 49.0191, 0.55", "25.7755, 45.1883, 48.2609, 0.28", "25.4416, 44.6384, 47.3021, 0.55", "24.8804, 43.4392, 44.996, 0.28", "24.7026, 42.9091, 43.7281, 0.55", "24.5364, 42.3794, 42.4363, 0.55", "24.0929, 40.2776, 37.2068, 0.55", "24.0975, 38.3672, 33.0796, 0.28", "24.133, 37.8204, 32.1195, 0.55", "24.2517, 37.1247, 31.1826, 0.55", "24.518, 35.1967, 28.99, 0.83", "24.5589, 34.1883, 28.0405, 0.55", "24.4706, 32.7974, 26.9897, 0.55", "24.1953, 30.8396, 25.6646, 0.55", "23.6974, 27.8078, 23.481, 0.83", "23.2893, 25.6733, 21.8596, 0.55", "23.0408, 24.3201, 20.7708, 0.55", "22.6231, 22.6832, 19.3438, 0.83", "21.9554, 20.4083, 17.1384, 0.83" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-119.289, -13.3065, 42.8707, 0.55", "-121.024, -14.818, 44.148, 0.55", "-122.14, -16.0406, 45.2008, 0.55", "-123.413, -17.7568, 46.7866, 0.83", "-124.762, -19.931, 48.7499, 0.28", "-125.216, -20.856, 49.6766, 0.55", "-125.633, -21.9137, 50.7609, 0.55", "-125.965, -23.8079, 52.8182, 0.55", "-126.12, -25.8496, 55.1264, 0.28", "-126.095, -26.6161, 55.9683, 0.55", "-125.668, -28.8216, 58.254, 0.55", "-125.415, -29.6616, 59.2262, 0.55", "-125.064, -30.4825, 60.2747, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-119.289, -13.3065, 42.8707, 0.55", "-120.165, -15.5266, 43.7342, 0.55", "-121.636, -18.6294, 44.5369, 0.28", "-121.892, -19.1194, 44.5669, 0.55", "-122.765, -20.7438, 44.4889, 0.28", "-123.433, -22.1478, 44.3414, 0.28", "-123.871, -23.1494, 44.1756, 0.83", "-124.861, -25.4881, 43.4555, 0.55", "-125.723, -27.6868, 42.6177, 0.28", "-125.998, -28.4653, 42.3108, 0.55", "-126.681, -30.4987, 41.5168, 0.28", "-127.178, -31.9172, 40.9509, 0.55", "-127.64, -33.361, 40.381, 0.28", "-128.036, -34.8647, 39.9612, 0.55", "-128.574, -37.0176, 39.5561, 0.28", "-129.078, -38.9195, 39.2001, 0.28", "-129.802, -41.4146, 38.7536, 0.55", "-130.121, -42.6035, 38.5813, 0.83", "-131.023, -46.4415, 38.073, 0.28", "-131.34, -48.0929, 37.951, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "17.9143, -147.452, -34.8884, 0.83", "18.5927, -148.96, -36.248, 0.83", "19.7994, -151.608, -38.5924, 0.28", "20.3162, -152.823, -39.6458, 0.83", "21.8681, -156.509, -42.852, 0.28", "22.362, -157.681, -43.859, 0.55", "22.7186, -158.589, -44.6204, 0.55", "23.2707, -160.297, -46.0316, 0.28", "23.4692, -160.965, -46.5566, 0.55", "23.814, -162.468, -47.7294, 0.28", "23.9052, -162.965, -48.0814, 0.83", "24.2208, -165.379, -49.8787, 0.28", "24.3006, -166.261, -50.5412, 0.55", "24.5418, -168.813, -52.4305, 0.28", "24.696, -170.334, -53.5698, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "17.9143, -147.452, -34.8884, 0.28", "18.3146, -150.242, -35.7158, 0.28", "18.5131, -152.261, -36.2935, 0.28", "18.7265, -154.791, -36.9257, 0.55", "18.9503, -157.692, -37.5899, 0.28", "19.0568, -159.029, -37.9372, 0.55", "19.3237, -162.279, -38.8171, 0.28", "19.4291, -163.626, -39.2871, 0.55", "19.5334, -165.029, -39.9126, 0.28", "19.56, -165.277, -40.0185, 0.55", "19.8159, -167.932, -41.0141, 0.28", "19.9572, -169.45, -41.6665, 0.83", "20.5427, -173.42, -43.5703, 0.28", "20.8231, -175.018, -44.3766, 0.55", "21.3281, -177.975, -45.9457, 0.28", "21.4601, -178.743, -46.3355, 0.55", "21.959, -181.629, -47.5812, 0.28", "22.1803, -182.741, -48.0851, 0.55" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "11.6817, -86.0465, 16.4413, 0.83", "17.1617, -87.2465, 16.4413, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "11.6817, -86.0465, 16.4413, 0.83", "10.3278, -88.4988, 17.0492, 0.83", "9.34975, -90.4916, 17.5484, 0.55", "8.9809, -91.3872, 17.805, 0.55", "8.60868, -92.4226, 18.1083, 0.55", "7.89571, -94.776, 18.8125, 0.55", "7.37144, -96.6442, 19.3805, 0.55", "6.72559, -99.4918, 20.2141, 0.55", "6.31078, -101.654, 20.7714, 0.55", "6.11846, -102.728, 20.9832, 0.55", "5.71617, -105.315, 21.326, 0.55", "5.48993, -106.979, 21.5231, 0.55", "5.00392, -110.469, 21.8211, 0.83", "4.44318, -113.807, 21.9844, 0.55", "3.81009, -117.13, 22.056, 0.55", "3.20709, -120.022, 22.1297, 0.55", "2.29665, -124.049, 22.2924, 0.55", "1.7567, -126.151, 22.423, 0.55", "1.14272, -128.28, 22.6666, 0.55", "0.190096, -131.472, 23.2169, 0.55", "-0.722726, -134.481, 23.877, 0.55", "-1.42846, -136.478, 24.3657, 1.11", "-2.86789, -140.04, 25.2232, 0.83", "-3.58562, -141.64, 25.7493, 0.55", "-4.3197, -143.111, 26.3995, 0.83", "-5.169, -144.41, 27.1987, 0.83", "-6.63668, -146.191, 28.4906, 0.55", "-8.56719, -148.081, 30.0849, 0.83", "-10.7807, -149.742, 31.6993, 0.55", "-12.9426, -150.959, 32.9944, 0.28", "-15.6665, -152.245, 34.4222, 0.83", "-18.4303, -153.358, 35.6644, 0.55", "-19.8073, -153.838, 36.2325, 0.55", "-22.8604, -154.673, 37.2612, 0.83", "-25.7391, -155.373, 37.9081, 0.55", "-28.5935, -156.069, 38.3031, 0.55", "-31.8671, -156.731, 38.5928, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "171.358, -63.0251, -66.8432, 0.55", "172.7, -63.7782, -68.0063, 0.55", "174.664, -64.726, -69.449, 0.28", "175.921, -65.3229, -70.4345, 0.83", "176.75, -65.6971, -71.1243, 0.83", "178.657, -66.5534, -72.719, 0.55", "179.11, -66.7372, -73.1072, 0.55", "180.972, -67.266, -74.6794, 0.55", "182.841, -67.6691, -76.2172, 0.83", "184.21, -67.8726, -77.3174, 0.28", "184.818, -67.9388, -77.8157, 0.55", "186.794, -68.0684, -79.3283, 0.28", "189.615, -68.3119, -81.4837, 0.55", "191.862, -68.5504, -83.1683, 0.28", "192.869, -68.6484, -83.8809, 0.83", "195.636, -68.9403, -85.8138, 0.28", "197.458, -69.1594, -87.0955, 0.83", "200.559, -69.702, -89.2369, 0.28", "202.207, -70.0999, -90.4181, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "171.358, -63.0251, -66.8432, 0.28", "171.887, -64.7174, -66.5759, 0.28", "172.357, -66.2226, -66.3381, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-29.3449, -79.2492, 0.482293, 0.55", "-29.7646, -83.0859, 0.23679, 0.55", "-30.1422, -86.2784, 0.0336248, 0.55", "-30.3865, -88.2193, -0.112337, 0.83", "-30.7668, -90.8567, -0.351265, 0.55", "-30.9604, -92.4447, -0.606317, 0.83", "-31.21, -94.1605, -0.992346, 0.28", "-31.4058, -95.4629, -1.42733, 0.55", "-31.7234, -97.6143, -2.28208, 0.28", "-32.1331, -100.331, -3.54066, 0.83", "-32.5654, -103.755, -5.24334, 0.28", "-33.0354, -108.11, -7.48557, 0.83", "-33.25, -110.546, -8.8233, 0.28", "-33.3293, -112.069, -9.71458, 0.55", "-33.3742, -114.288, -11.0654, 0.28", "-33.3373, -116.418, -12.3809, 0.55", "-33.2435, -117.959, -13.2522, 0.55", "-32.8416, -120.798, -14.8764, 0.28", "-32.7338, -121.618, -15.2824, 0.55", "-32.6406, -122.657, -15.7628, 0.28", "-32.6295, -123.169, -15.971, 0.83", "-32.7297, -125.264, -16.897, 0.28", "-32.9391, -126.758, -17.4718, 0.83", "-33.4387, -129.019, -18.2696, 0.28", "-33.8369, -130.838, -18.9575, 0.55", "-34.259, -132.726, -19.7386, 0.28", "-34.6308, -134.368, -20.4254, 0.55", "-34.9904, -136.079, -21.1818, 0.28", "-35.1178, -137.16, -21.6561, 0.55", "-35.1931, -138.288, -22.1843, 0.28", "-35.2138, -139.042, -22.5195, 0.55", "-35.1802, -140.512, -23.2117, 0.28", "-35.1073, -141.685, -23.6974, 0.55", "-34.9534, -142.953, -24.4413, 0.28", "-34.7591, -144.647, -25.4855, 0.55", "-34.6356, -145.709, -26.2244, 0.83", "-34.4163, -147.297, -27.3098, 0.28", "-34.1344, -149.203, -28.659, 0.55", "-33.2451, -154.053, -32.2489, 0.28", "-32.9577, -155.466, -33.2436, 0.28", "-32.3293, -157.746, -34.98, 0.83", "-31.2077, -160.916, -37.5947, 0.28", "-30.8284, -161.831, -38.4192, 0.83", "-29.9438, -163.643, -40.1277, 0.83", "-28.6844, -165.762, -41.981, 0.28", "-26.3292, -168.997, -45.0507, 0.55", "-24.8572, -170.622, -46.568, 0.28", "-23.7762, -171.683, -47.5149, 0.55", "-22.2474, -173.152, -48.6146, 0.28", "-21.8553, -173.56, -48.8695, 0.28", "-20.4557, -175.017, -49.6583, 0.55", "-18.4858, -177.184, -50.2852, 0.28", "-17.3154, -178.458, -50.5428, 0.55", "-16.4982, -179.241, -50.6929, 0.55", "-15.1938, -180.436, -50.8946, 0.55", "-14.2133, -181.408, -51.0144, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-29.3449, -79.2492, 0.482293, 1.11", "-29.5917, -79.5743, 0.792799, 1.11", "-32.24, -83.0625, 4.12468, 1.11", "-33.1846, -84.3067, 5.31315, 0.55", "-34.578, -86.1421, 7.06622, 0.55", "-36.156, -88.2205, 9.05152, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-117.727, -75.2232, -119.685, 0.28", "-118.795, -74.9566, -121.181, 0.28", "-120.076, -74.6367, -122.977, 0.55", "-122.92, -73.9271, -126.96, 0.28", "-125.105, -73.3816, -130.022, 0.55", "-126.11, -73.1308, -131.43, 0.28", "-127.52, -72.7789, -133.404, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-117.727, -75.2232, -119.685, 0.55", "-119.273, -74.2979, -123.199, 0.55", "-121.067, -73.2248, -127.275, 0.55", "-121.857, -72.7524, -129.069, 0.28", "-122.625, -72.2928, -130.814, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-48.6562, -142.589, -144.223, 0.83", "-48.0936, -143.824, -146.619, 0.83", "-46.9573, -146.319, -151.459, 0.55", "-46.0028, -148.415, -155.523, 0.83", "-45.5899, -149.321, -157.282, 0.55", "-44.8889, -150.86, -160.267, 0.28", "-44.3952, -151.944, -162.37, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-48.6562, -142.589, -144.223, 0.55", "-45.7833, -143.249, -144.866, 0.55", "-43.6599, -143.736, -145.341, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "26.0776, 51.6875, 47.8454, 0.83", "27.7076, 52.1375, 47.8454, 0.83" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "26.0776, 51.6875, 47.8454, 0.83", "24.2859, 52.5916, 49.5985, 0.83", "22.2635, 53.6452, 51.5075, 0.83", "19.1122, 55.2573, 54.3386, 0.55", "16.8582, 56.4222, 56.2245, 0.28", "15.8535, 56.9635, 57.0105, 0.55", "13.8893, 58.0667, 58.485, 0.28", "13.2093, 58.4558, 58.8797, 0.28", "12.5424, 58.8574, 59.1812, 0.55", "11.3144, 59.7474, 59.5947, 0.55", "10.3296, 60.4601, 59.7934, 0.83", "9.70868, 60.9397, 59.8355, 0.55", "8.63752, 61.805, 59.8591, 0.55", "7.72786, 62.5569, 59.8933, 0.83", "5.09484, 64.8058, 60.0388, 0.55", "2.6182, 67.0877, 60.1599, 0.28", "1.47419, 68.2253, 60.2063, 0.83", "-0.170391, 69.9378, 60.3312, 0.28", "-1.27559, 71.1066, 60.4634, 0.28", "-1.84684, 71.7195, 60.5908, 0.55", "-3.70503, 73.8033, 61.2611, 0.28", "-4.66476, 74.824, 61.7801, 0.55", "-5.82204, 76.172, 62.5208, 0.28", "-7.08622, 77.6455, 63.3379, 0.28", "-8.34316, 79.072, 64.2501, 0.28", "-9.1216, 79.9264, 64.8763, 0.55", "-10.3307, 81.1332, 66.0191, 0.28", "-12.2031, 83.148, 67.9715, 0.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-125.064, -30.4825, 60.2747, 0.55", "-124.458, -30.9044, 59.8426, 0.55", "-123.647, -31.4701, 59.263, 0.55", "-122.063, -32.5743, 58.1319, 0.28", "-121.082, -33.258, 57.4315, 0.83", "-119.938, -34.0552, 56.6149, 0.28", "-118.373, -35.1465, 55.497, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-125.064, -30.4825, 60.2747, 0.28", "-124.569, -32.7922, 61.8409, 0.28", "-123.983, -34.7951, 62.9866, 0.55", "-123.609, -35.9967, 63.5582, 0.28", "-123.18, -37.3716, 64.2123, 0.55", "-122.729, -38.8194, 64.901, 0.28", "-122.078, -40.9095, 65.8953, 0.55", "-121.543, -42.1539, 66.2695, 0.28", "-121.004, -43.1216, 66.4903, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-131.34, -48.0929, 37.951, 0.28", "-133.823, -49.7734, 37.9103, 0.28", "-135.785, -51.1019, 37.8781, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-131.34, -48.0929, 37.951, 0.28", "-132.345, -51.7487, 38.4391, 0.28", "-133.049, -54.0919, 38.8308, 0.28", "-133.626, -55.9298, 39.2009, 0.83", "-134.353, -58.1792, 39.6801, 0.28", "-134.726, -59.3267, 39.9534, 0.83", "-135.662, -62.2324, 40.6551, 0.28", "-135.789, -62.5989, 40.7456, 1.11", "-136.587, -64.8443, 41.4135, 0.28", "-137.002, -65.9474, 41.8014, 0.83", "-137.663, -67.739, 42.5349, 0.28", "-138.329, -69.8654, 43.334, 0.83" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "17.1617, -87.2465, 16.4413, 0.55", "17.4088, -88.6385, 16.4413, 0.55", "17.8025, -91.8499, 16.4413, 0.55", "18.0718, -94.0702, 16.4456, 0.55", "18.3534, -96.8211, 16.4533, 0.55", "18.6915, -101.025, 16.4667, 0.55", "18.9409, -103.392, 16.5091, 0.55", "19.1365, -104.999, 16.5419, 0.55", "19.5886, -108.474, 16.6035, 0.55", "19.7621, -109.848, 16.5665, 0.55", "20.0212, -112.379, 16.4213, 0.55", "20.3703, -116.221, 16.0645, 0.83", "20.7221, -119.015, 15.7477, 0.83", "21.3491, -123.128, 15.1959, 0.55", "22.0382, -127.38, 14.5577, 0.83", "22.8917, -132.369, 13.9381, 0.83", "23.2863, -134.806, 13.6884, 0.55", "23.7306, -137.996, 13.4732, 0.83", "24.0881, -140.409, 13.4616, 0.55", "24.5346, -142.853, 13.6817, 0.55", "25.1727, -146.333, 14.4156, 0.28", "25.4236, -147.728, 14.865, 0.83", "25.6864, -149.683, 15.6033, 0.83", "25.7819, -150.743, 16.0143, 0.83", "25.8313, -152.663, 16.7326, 0.55", "25.817, -155.501, 17.6479, 0.55", "25.8209, -159.966, 18.8133, 0.83", "25.7554, -162.184, 19.3301, 0.28", "25.6982, -163.543, 19.6067, 0.55", "25.5382, -166.389, 20.1111, 0.55", "25.3711, -168.595, 20.3968, 0.83", "25.2349, -171.488, 20.6646, 0.28", "25.0298, -175.958, 20.8733, 0.83", "24.8602, -179.375, 21.0712, 0.55", "24.824, -181.737, 21.2229, 0.55", "24.947, -184.416, 21.4092, 0.55", "25.1115, -186.364, 21.6183, 0.55", "25.3273, -187.899, 21.8308, 0.55", "25.7065, -189.708, 22.1794, 0.83", "26.0487, -191.2, 22.68, 0.83", "26.4067, -192.445, 23.2356, 0.28", "27.6119, -196.356, 25.0528, 0.83", "28.2157, -198.229, 25.8117, 0.83", "28.986, -200.374, 26.5048, 0.83", "30.5024, -204.58, 27.9185, 0.83", "30.945, -205.925, 28.4072, 0.83", "31.7609, -208.467, 29.3238, 0.55", "32.5252, -210.723, 30.0933, 0.83", "33.0189, -212.065, 30.5771, 0.83", "35.2875, -217.018, 32.2184, 0.83", "35.3624, -217.188, 32.239, 0.83" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "17.1617, -87.2465, 16.4413, 0.55", "18.5021, -86.4114, 17.2153, 0.55", "20.4786, -85.18, 18.3567, 0.28", "21.8909, -84.3002, 19.1722, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-31.8671, -156.731, 38.5928, 0.28", "-34.9333, -157.443, 39.9215, 0.28", "-39.4933, -158.405, 42.0139, 0.55", "-41.9442, -158.937, 43.1452, 0.28", "-45.4048, -159.73, 44.7351, 0.55", "-50.5172, -160.926, 47.0217, 0.28", "-53.1205, -161.544, 48.1658, 0.28", "-54.3145, -161.895, 48.7578, 0.83", "-56.0358, -162.429, 49.6024, 0.28", "-56.719, -162.674, 49.912, 0.55", "-58.1756, -163.166, 50.5354, 0.28", "-58.1756, -163.166, 50.5354, 0.55", "-59.9263, -163.673, 50.9773, 0.28", "-62.1202, -164.464, 51.2815, 0.55", "-63.0399, -164.848, 51.3158, 0.28", "-63.7843, -165.219, 51.2465, 0.55", "-65.7831, -166.368, 50.925, 0.28", "-67.4082, -167.431, 50.7522, 0.55", "-69.9414, -169.312, 50.3609, 0.28", "-71.8319, -170.901, 49.9569, 0.83", "-73.6723, -172.558, 49.6186, 0.28", "-74.6569, -173.472, 49.4861, 0.28", "-76.943, -175.69, 49.4423, 0.55", "-78.6018, -177.262, 49.7149, 0.28", "-79.5546, -178.129, 50.0475, 0.83", "-81.1611, -179.605, 50.5904, 0.28", "-81.9407, -180.39, 50.8619, 0.55", "-83.5781, -182.248, 51.4069, 0.28", "-84.0904, -182.892, 51.5703, 0.55", "-85.1479, -184.302, 52.0254, 0.28", "-86.7974, -186.687, 52.7291, 0.55", "-87.7506, -188.014, 53.0651, 0.83", "-89.037, -189.726, 53.5367, 0.28", "-89.3719, -190.15, 53.652, 0.55", "-90.9386, -192.123, 54.1512, 0.28", "-92.4107, -193.97, 54.582, 0.83", "-94.6628, -196.85, 55.3028, 0.55", "-96.1171, -198.843, 55.7308, 0.28", "-96.9097, -200.162, 55.9677, 0.83", "-97.5606, -201.721, 56.2482, 0.28", "-97.7455, -203.545, 56.5438, 0.55", "-97.5083, -204.996, 56.7829, 0.55", "-96.4936, -207.791, 57.2279, 0.55", "-95.4614, -210.046, 57.5999, 0.55", "-94.3337, -212.18, 58.0318, 0.55", "-92.6888, -214.996, 58.7544, 0.55", "-91.9543, -216.161, 59.0805, 0.28", "-91.3468, -217.195, 59.3847, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-31.8671, -156.731, 38.5928, 0.28", "-32.437, -158.667, 38.5945, 0.28", "-33.2449, -161.411, 38.5969, 0.55", "-34.3972, -165.325, 38.6003, 0.28", "-34.4768, -165.595, 38.6005, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "202.207, -70.0999, -90.4181, 0.28", "204.603, -70.965, -90.2084, 0.28", "205.83, -71.4078, -90.1011, 0.83", "209.034, -72.5646, -89.8208, 0.28", "209.774, -72.8316, -89.7561, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "202.207, -70.0999, -90.4181, 0.28", "203.43, -70.5214, -92.0145, 0.28", "203.759, -70.6349, -92.4443, 0.55", "205.369, -71.1897, -94.5457, 0.28", "206.996, -71.7503, -96.6691, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-36.156, -88.2205, 9.05152, 1.38", "-37.4854, -92.3775, 8.56441, 1.38", "-38.6127, -94.7304, 8.2101, 0.55", "-39.0645, -95.4814, 8.06978, 0.55", "-40.8674, -98.264, 7.49102, 1.11", "-41.8898, -99.8818, 7.24043, 0.55", "-43.2282, -102.043, 6.99095, 0.55", "-45.4675, -105.413, 6.65637, 1.11", "-46.3684, -106.622, 6.68372, 0.55", "-47.6583, -108.174, 6.99031, 0.55", "-49.8216, -110.447, 7.84917, 0.55", "-51.4026, -112.066, 8.5965, 0.55", "-52.4672, -113.127, 9.19955, 0.55", "-55.6572, -116.086, 11.2417, 0.83", "-59.2729, -119.111, 13.587, 0.55", "-60.81, -120.349, 14.575, 0.55", "-63.2321, -122.103, 16.0774, 0.55", "-64.7909, -123.236, 17.0745, 0.55", "-66.5574, -124.711, 18.2382, 0.83", "-67.6969, -125.837, 18.9494, 0.55", "-69.9628, -127.974, 20.377, 0.55", "-71.8575, -129.846, 21.6618, 0.28", "-73.1391, -131.194, 22.665, 0.28", "-74.8298, -133.088, 24.0283, 0.83", "-77.0275, -135.44, 25.7908, 0.83", "-78.0205, -136.333, 26.4851, 0.55", "-80.4432, -138.203, 27.921, 0.83", "-82.7001, -140.179, 29.2967, 0.55", "-83.0703, -140.491, 29.5645, 0.55", "-83.9804, -141.254, 30.2812, 0.55", "-86.6326, -143.927, 32.6951, 0.83", "-88.0599, -145.688, 34.0022, 0.55", "-90.315, -148.782, 35.7806, 0.83", "-92.4859, -151.872, 37.5149, 0.55", "-93.1738, -152.917, 38.0966, 0.55", "-94.1578, -154.552, 38.9932, 0.83", "-96.3761, -158.579, 41.2291, 0.83", "-97.6866, -160.885, 42.402, 0.83", "-101.25, -166.247, 44.4074, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-36.156, -88.2205, 9.05152, 0.55", "-39.6914, -85.5834, 7.24026, 0.55", "-43.0643, -83.1987, 5.99222, 0.28", "-43.8928, -82.7144, 5.70676, 0.55", "-45.3723, -81.9775, 5.25286, 0.28", "-46.5949, -81.4072, 4.92589, 0.55", "-48.4368, -80.5949, 4.45406, 0.28", "-50.1132, -79.9301, 4.00922, 0.28", "-52.3173, -79.1191, 3.52599, 0.55", "-53.9164, -78.5329, 3.12564, 0.55", "-56.1868, -77.7147, 2.29003, 0.55", "-57.2855, -77.3352, 1.77521, 0.28", "-57.7899, -77.1713, 1.45355, 0.55", "-60.5686, -76.2509, -0.617442, 0.28", "-62.2586, -75.7097, -2.18075, 0.83", "-65.1283, -74.8994, -5.14102, 0.28", "-65.8893, -74.7065, -5.98331, 0.55", "-68.3476, -74.1196, -8.8106, 0.28", "-69.0741, -73.9677, -9.67808, 0.83", "-73.1614, -73.3578, -14.7732, 0.28", "-73.8342, -73.2582, -15.691, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-127.52, -72.7789, -133.404, 0.28", "-128.646, -72.3396, -135.567, 0.28", "-128.979, -71.7637, -137.116, 0.83", "-129.51, -70.8468, -139.581, 0.55", "-130.002, -69.9981, -141.863, 0.55", "-130.405, -69.3029, -143.733, 1.11", "-131.633, -67.182, -149.436, 0.28", "-131.695, -66.2313, -151.306, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-127.52, -72.7789, -133.404, 0.55", "-128.35, -70.089, -137.294, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "27.7076, 52.1375, 47.8454, 0.55", "28.3928, 52.0652, 48.7113, 0.55", "29.8324, 51.8241, 50.7129, 0.55", "32.3779, 51.3977, 54.2521, 0.55", "33.7388, 51.1697, 56.1443, 0.55", "35.201, 50.9248, 58.1774, 0.28", "37.2682, 50.5785, 61.0518, 0.55", "38.8999, 50.375, 63.5778, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "27.7076, 52.1375, 47.8454, 0.55", "28.5599, 54.9697, 49.9023, 0.55", "29.0571, 56.1027, 50.8643, 0.28", "30.3028, 58.0562, 52.9167, 0.55", "31.213, 59.091, 54.1847, 0.83", "32.4737, 60.4004, 55.8447, 0.55", "33.4018, 61.389, 57.1291, 0.83", "34.9699, 63.0182, 59.2164, 0.83", "36.4743, 64.4268, 60.7514, 0.83", "38.0076, 65.9018, 62.1913, 0.55", "39.447, 67.7492, 63.6292, 0.83", "40.6599, 69.4803, 64.8503, 0.28", "42.1736, 71.9862, 66.3563, 0.55", "43.2479, 74.5042, 67.4801, 0.55", "44.5282, 78.6743, 68.9409, 0.28", "45.1936, 81.8183, 69.8688, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "35.3624, -217.188, 32.239, 0.28", "36.8984, -217.51, 32.3147, 0.28", "38.5511, -218.118, 32.168, 0.55", "40.0052, -218.729, 31.826, 0.55", "42.5959, -219.806, 31.1299, 0.83", "44.2095, -220.348, 30.7244, 0.55", "45.5369, -220.721, 30.4084, 0.55", "48.4099, -221.487, 29.6965, 0.55", "50.5909, -221.957, 29.099, 0.83", "53.7017, -222.536, 28.3675, 0.55", "56.7271, -222.84, 27.7914, 0.55", "58.3823, -222.875, 27.5675, 0.28", "59.2377, -222.842, 27.4865, 0.83", "60.9965, -222.647, 27.479, 0.28", "63.9889, -222.095, 27.9197, 0.55", "65.4532, -221.659, 28.3651, 0.55", "66.9316, -221.174, 28.9402, 0.55", "68.1857, -220.713, 29.5261, 0.28", "69.3833, -220.22, 30.1825, 0.55", "73.2972, -218.337, 32.7835, 0.28", "74.6053, -217.554, 33.7521, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "35.3624, -217.188, 32.239, 0.83", "35.9349, -222.416, 32.9738, 0.83", "36.4883, -227.47, 33.6842, 0.28", "36.6746, -229.172, 33.9234, 0.55", "36.9148, -231.365, 34.2316, 0.55", "37.1331, -233.359, 34.512, 0.55", "37.403, -235.824, 34.8584, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-101.25, -166.247, 44.4074, 0.83", "-103.315, -168.463, 42.5707, 0.83", "-105.104, -170.51, 40.7935, 0.83", "-106.788, -172.436, 39.1207, 0.55", "-108.775, -174.71, 37.1463, 0.83", "-109.554, -175.601, 36.3727, 0.83", "-112.19, -178.618, 33.7531, 0.83", "-113.346, -179.922, 32.3377, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-101.25, -166.247, 44.4074, 0.28", "-103.763, -165.495, 44.8592, 0.28", "-105.614, -165.04, 45.2946, 0.55", "-107.201, -164.66, 45.7065, 0.28", "-110.925, -163.768, 46.6729, 0.55", "-114.763, -162.849, 47.6687, 0.83", "-116.088, -162.532, 48.0124, 0.55", "-118.649, -161.868, 48.6591, 0.28", "-120.145, -161.566, 49.0784, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "37.403, -235.824, 34.8584, 0.28", "37.6397, -237.316, 34.7959, 0.28", "37.7941, -238.305, 34.7707, 0.55", "38.1024, -240.303, 34.7326, 0.28", "38.7702, -244.264, 34.506, 0.28", "39.2778, -247.403, 34.2423, 0.83", "39.6757, -249.872, 34.0375, 0.83", "40.0735, -252.13, 33.8369, 0.28", "40.1771, -252.672, 33.7991, 0.55", "40.6611, -254.598, 33.659, 0.28", "40.9356, -255.382, 33.6355, 0.55", "41.6536, -257.038, 33.4576, 0.28", "42.0842, -257.8, 33.4106, 0.55", "43.0668, -259.458, 33.4046, 0.28", "43.8262, -260.769, 33.4892, 0.55", "45.0555, -262.929, 33.8189, 0.28", "45.5114, -263.803, 33.9427, 0.55", "46.4015, -265.756, 34.1622, 0.55", "47.0061, -267.392, 34.4885, 0.55", "47.3269, -268.407, 34.7625, 0.55", "47.6499, -269.596, 35.2022, 0.28", "48.0225, -271.156, 35.8465, 0.55", "48.2573, -272.077, 36.1613, 0.55", "48.9186, -274.635, 36.8804, 0.28", "49.2624, -275.94, 37.1972, 0.55", "49.6725, -277.663, 37.4549, 0.28", "49.8065, -278.266, 37.521, 0.83", "50.5939, -281.889, 37.8085, 0.28", "50.8835, -283.085, 37.8804, 0.83", "51.3988, -284.876, 37.9201, 0.28", "51.9433, -286.503, 38.0133, 0.83", "52.6948, -288.325, 38.1662, 0.28", "53.0655, -289.066, 38.2689, 0.55", "54.6404, -291.732, 38.7961, 0.28", "55.6371, -293.278, 39.0798, 0.55", "56.4949, -294.544, 39.2326, 0.28", "57.4752, -295.99, 39.3525, 0.83", "58.4874, -297.445, 39.2454, 0.28", "59.5382, -298.936, 38.9195, 0.55", "60.1715, -299.871, 38.54, 0.28", "61.2112, -301.553, 37.7841, 0.28", "61.8675, -302.654, 37.2548, 0.28", "63.0797, -304.653, 36.3889, 0.55", "63.6097, -305.489, 36.0531, 0.28", "64.949, -307.499, 35.4701, 0.55", "66.2166, -309.357, 35.1745, 0.28", "66.7334, -310.07, 35.154, 0.55", "68.0468, -311.907, 35.2191, 0.28", "69.0876, -313.297, 35.3796, 0.55", "70.2876, -314.792, 35.5467, 0.28", "71.4159, -316.16, 35.6444, 0.55", "72.9602, -317.981, 35.6409, 0.55", "74.0318, -319.357, 35.5764, 0.55", "75.0311, -320.697, 35.4578, 0.55", "76.3866, -322.678, 35.281, 0.55", "77.1222, -323.859, 35.1342, 0.55", "77.7904, -325.093, 34.9139, 0.55", "78.4803, -326.584, 34.5576, 0.55", "79.7049, -329.781, 33.6458, 0.55", "80.2146, -331.468, 33.1236, 0.28", "80.6906, -333.807, 32.3161, 0.55", "81.001, -335.906, 31.5653, 0.28", "81.0918, -337.161, 31.0906, 0.55", "81.0962, -339.539, 30.1233, 0.28", "81.0106, -340.334, 29.7791, 0.83", "80.7572, -343.297, 28.6735, 0.55", "80.6228, -344.649, 28.2843, 0.55", "80.5802, -345.253, 28.1691, 0.28", "80.5585, -345.876, 28.0789, 0.55", "80.5724, -348.753, 27.9716, 0.28", "80.6936, -351.706, 27.9744, 0.55", "80.9006, -353.922, 28.1211, 0.55", "81.0126, -354.923, 28.2008, 0.55", "81.3906, -357.442, 28.4389, 1.11", "82.0374, -360.84, 28.8528, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "37.403, -235.824, 34.8584, 0.55", "37.3708, -239.198, 38.1539, 0.55", "36.9439, -240.543, 39.8921, 0.55", "36.003, -242.461, 42.5225, 0.55", "34.9797, -244.475, 45.3786, 0.55", "34.624, -245.19, 46.3274, 0.55", "33.9033, -246.516, 48.2418, 0.55", "32.678, -248.197, 50.7473, 0.55", "32.113, -248.873, 51.857, 0.55", "30.4995, -250.741, 55.3272, 0.55", "29.3608, -251.91, 57.5611, 0.55", "28.2615, -253.302, 60.132, 0.28", "27.951, -253.88, 61.066, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-113.346, -179.922, 32.3377, 0.83", "-114.126, -183.062, 32.3377, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-113.346, -179.922, 32.3377, 0.28", "-118.59, -180.419, 40.0567, 0.28", "-120.68, -180.571, 42.8171, 0.55", "-123.722, -180.802, 46.3114, 0.55", "-125.32, -181.043, 48.1889, 0.55", "-126.095, -181.167, 49.061, 0.55", "-127.446, -181.423, 50.5124, 0.55", "-129.32, -181.77, 52.0769, 0.55", "-130.533, -182.014, 53.2159, 0.83", "-133.26, -182.813, 55.3641, 0.83", "-134.374, -183.286, 56.4415, 0.28", "-135.517, -183.832, 57.6672, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "82.0374, -360.84, 28.8528, 0.83", "83.3406, -362.255, 29.2284, 0.83", "84.9885, -364.039, 29.6378, 0.28", "86.2031, -365.418, 29.8955, 2.77", "88.1816, -367.646, 30.2435, 0.55", "88.8318, -368.386, 30.3754, 0.55", "89.4426, -369.104, 30.5082, 0.28", "89.8671, -369.555, 30.5274, 0.55", "90.6465, -370.35, 30.4051, 0.28", "91.5038, -371.214, 30.1818, 0.55", "93.2974, -372.932, 29.4765, 0.28", "93.8496, -373.465, 29.1741, 0.83", "96.1556, -375.762, 27.7835, 0.55", "97.0984, -376.623, 27.2432, 0.55", "97.662, -377.096, 26.8721, 0.55", "98.6252, -377.934, 26.1623, 0.83", "99.9496, -379.297, 25.1515, 0.28", "100.716, -380.394, 24.4123, 0.83", "101.897, -383.334, 23.1135, 0.83", "102.577, -386.306, 22.044, 0.28", "102.758, -387.341, 21.6957, 0.83", "103.094, -390.212, 20.8354, 0.28", "103.347, -394.181, 19.7649, 0.28", "103.077, -397.904, 18.7348, 0.28", "102.737, -399.247, 18.4434, 0.28" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "82.0374, -360.84, 28.8528, 0.83", "79.5918, -361.317, 30.7488, 0.83", "78.3639, -361.556, 31.7008, 0.28", "77.0956, -361.803, 32.6841, 0.28", "76.3139, -361.955, 33.2902, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-114.126, -183.062, 32.3377, 0.55", "-116.147, -184.895, 32.3871, 0.55", "-117.477, -186.033, 32.4514, 0.55", "-119.024, -187.296, 32.5615, 0.55", "-120.515, -188.539, 32.8274, 0.83", "-123.054, -190.686, 33.4118, 0.55", "-125.662, -193.098, 34.083, 0.55", "-127.093, -194.431, 34.4911, 0.83", "-129.441, -196.569, 35.1688, 0.55", "-131.6, -198.773, 35.7955, 0.28", "-132.544, -199.747, 36.0865, 0.55", "-135.057, -202.203, 36.8742, 0.55", "-137.405, -204.458, 37.5761, 0.55", "-138.403, -205.538, 37.8431, 0.55", "-141.087, -208.506, 38.3262, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-114.126, -183.062, 32.3377, 0.83", "-112.811, -180.6, 31.8259, 0.83", "-112.086, -179.243, 31.5436, 0.28", "-111.053, -177.308, 31.1414, 0.83", "-110.253, -175.808, 30.8296, 0.28", "-109.727, -174.824, 30.625, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-141.087, -208.506, 38.3262, 0.28", "-142.744, -210.605, 39.7353, 0.28", "-142.945, -210.904, 39.9055, 0.83", "-143.861, -212.208, 40.5789, 0.28", "-145.354, -214.467, 41.842, 0.83", "-147.52, -217.849, 43.7703, 0.55", "-148.935, -220.039, 45.0211, 0.55", "-150.707, -222.949, 46.6736, 0.55", "-151.998, -225.066, 47.8571, 0.83", "-154.007, -228.553, 49.7192, 0.55", "-154.442, -229.38, 50.1529, 0.28", "-154.783, -230.359, 50.626, 0.55", "-155.109, -231.907, 51.3932, 0.28", "-155.358, -233.43, 52.1467, 0.83", "-155.384, -236.068, 53.318, 0.28", "-155.297, -236.906, 53.5628, 0.55", "-155.058, -238.117, 53.9091, 0.28", "-154.745, -239.14, 54.1887, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-141.087, -208.506, 38.3262, 0.28", "-140.089, -210.449, 39.5408, 0.28", "-138.999, -212.571, 40.8669, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_56", "dend_29", "dend_0", "dend_76", "dend_57", "dend_31", "dend_30", "dend_12", "dend_1", "dend_78", "dend_77", "dend_67", "dend_58", "dend_39", "dend_32", "dend_14", "dend_13", "dend_3", "dend_2", "dend_80", "dend_79", "dend_69", "dend_68", "dend_60", "dend_59", "dend_53", "dend_40", "dend_34", "dend_33", "dend_16", "dend_15", "dend_7", "dend_4", "dend_71", "dend_70", "dend_64", "dend_61", "dend_55", "dend_54", "dend_44", "dend_41", "dend_36", "dend_35", "dend_28", "dend_17", "dend_9", "dend_8", "dend_6", "dend_5", "dend_73", "dend_72", "dend_66", "dend_65", "dend_63", "dend_62", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_19", "dend_18", "dend_11", "dend_10", "dend_75", "dend_74", "dend_52", "dend_47", "dend_21", "dend_20", "dend_49", "dend_48", "dend_23", "dend_22", "dend_51", "dend_50", "dend_25", "dend_24", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_56", "dend_29", "dend_0", "dend_76", "dend_57", "dend_31", "dend_30", "dend_12", "dend_1", "dend_78", "dend_77", "dend_67", "dend_58", "dend_39", "dend_32", "dend_14", "dend_13", "dend_3", "dend_2", "dend_80", "dend_79", "dend_69", "dend_68", "dend_60", "dend_59", "dend_53", "dend_40", "dend_34", "dend_33", "dend_16", "dend_15", "dend_7", "dend_4", "dend_71", "dend_70", "dend_64", "dend_61", "dend_55", "dend_54", "dend_44", "dend_41", "dend_36", "dend_35", "dend_28", "dend_17", "dend_9", "dend_8", "dend_6", "dend_5", "dend_73", "dend_72", "dend_66", "dend_65", "dend_63", "dend_62", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_19", "dend_18", "dend_11", "dend_10", "dend_75", "dend_74", "dend_52", "dend_47", "dend_21", "dend_20", "dend_49", "dend_48", "dend_23", "dend_22", "dend_51", "dend_50", "dend_25", "dend_24", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_56", "dend_29", "dend_0", "axon_0", "dend_76", "dend_57", "dend_31", "dend_30", "dend_12", "dend_1", "axon_1", "dend_78", "dend_77", "dend_67", "dend_58", "dend_39", "dend_32", "dend_14", "dend_13", "dend_3", "dend_2", "dend_80", "dend_79", "dend_69", "dend_68", "dend_60", "dend_59", "dend_53", "dend_40", "dend_34", "dend_33", "dend_16", "dend_15", "dend_7", "dend_4", "dend_71", "dend_70", "dend_64", "dend_61", "dend_55", "dend_54", "dend_44", "dend_41", "dend_36", "dend_35", "dend_28", "dend_17", "dend_9", "dend_8", "dend_6", "dend_5", "dend_73", "dend_72", "dend_66", "dend_65", "dend_63", "dend_62", "dend_46", "dend_45", "dend_43", "dend_42", "dend_38", "dend_37", "dend_19", "dend_18", "dend_11", "dend_10", "dend_75", "dend_74", "dend_52", "dend_47", "dend_21", "dend_20", "dend_49", "dend_48", "dend_23", "dend_22", "dend_51", "dend_50", "dend_25", "dend_24", "dend_27", "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_57", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_40", "dend_40", "dend_40", "dend_40", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_MC_8a4a02932c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_76, id: dend_76, parent: dend_56
create dend_76
public dend_76
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_67, id: dend_67, parent: dend_57
create dend_67
public dend_67
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_39, id: dend_39, parent: dend_31
create dend_39
public dend_39
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_53, id: dend_53, parent: dend_39
create dend_53
public dend_53
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_16
create dend_28
public dend_28
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_29, dend_0, dend_76, dend_57, dend_31, dend_30, dend_12, dend_1, dend_78, dend_77, dend_67, dend_58, dend_39, dend_32, dend_14, dend_13, dend_3, dend_2, dend_80, dend_79, dend_69, dend_68, dend_60, dend_59, dend_53, dend_40, dend_34, dend_33, dend_16, dend_15, dend_7, dend_4, dend_71, dend_70, dend_64, dend_61, dend_55, dend_54, dend_44, dend_41, dend_36, dend_35, dend_28, dend_17, dend_9, dend_8, dend_6, dend_5, dend_73, dend_72, dend_66, dend_65, dend_63, dend_62, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_19, dend_18, dend_11, dend_10, dend_75, dend_74, dend_52, dend_47, dend_21, dend_20, dend_49, dend_48, dend_23, dend_22, dend_51, dend_50, dend_25, dend_24, dend_27, dend_26]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_56, dend_29, dend_0, dend_76, dend_57, dend_31, dend_30, dend_12, dend_1, dend_78, dend_77, dend_67, dend_58, dend_39, dend_32, dend_14, dend_13, dend_3, dend_2, dend_80, dend_79, dend_69, dend_68, dend_60, dend_59, dend_53, dend_40, dend_34, dend_33, dend_16, dend_15, dend_7, dend_4, dend_71, dend_70, dend_64, dend_61, dend_55, dend_54, dend_44, dend_41, dend_36, dend_35, dend_28, dend_17, dend_9, dend_8, dend_6, dend_5, dend_73, dend_72, dend_66, dend_65, dend_63, dend_62, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_19, dend_18, dend_11, dend_10, dend_75, dend_74, dend_52, dend_47, dend_21, dend_20, dend_49, dend_48, dend_23, dend_22, dend_51, dend_50, dend_25, dend_24, dend_27, dend_26]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_56, dend_29, dend_0, axon_0, dend_76, dend_57, dend_31, dend_30, dend_12, dend_1, axon_1, dend_78, dend_77, dend_67, dend_58, dend_39, dend_32, dend_14, dend_13, dend_3, dend_2, dend_80, dend_79, dend_69, dend_68, dend_60, dend_59, dend_53, dend_40, dend_34, dend_33, dend_16, dend_15, dend_7, dend_4, dend_71, dend_70, dend_64, dend_61, dend_55, dend_54, dend_44, dend_41, dend_36, dend_35, dend_28, dend_17, dend_9, dend_8, dend_6, dend_5, dend_73, dend_72, dend_66, dend_65, dend_63, dend_62, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_19, dend_18, dend_11, dend_10, dend_75, dend_74, dend_52, dend_47, dend_21, dend_20, dend_49, dend_48, dend_23, dend_22, dend_51, dend_50, dend_25, dend_24, dend_27, dend_26]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_57, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_56(0), soma_0(0.45000140454124027)
    connect dend_29(0), soma_0(0.45000140454124027)
    connect dend_0(0), soma_0(0.45000140454124027)
    connect axon_0(0), soma_0(1.0)
    connect dend_76(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_67(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_39(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_53(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_28(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.35512, -10.2289, -0.269721, 3.06496 ) }
    soma_0 { pt3dadd( -2.12496, -8.98391, -0.225103, 5.44778 ) }
    soma_0 { pt3dadd( -1.89479, -7.73896, -0.180484, 6.5021 ) }
    soma_0 { pt3dadd( -1.66463, -6.49402, -0.135866, 7.66253 ) }
    soma_0 { pt3dadd( -1.43446, -5.24908, -0.0912478, 8.82188 ) }
    soma_0 { pt3dadd( -1.20429, -4.00413, -0.0466295, 9.9779 ) }
    soma_0 { pt3dadd( -0.97413, -2.75919, -0.00201125, 11.1324 ) }
    soma_0 { pt3dadd( -0.743965, -1.51425, 0.042607, 11.8769 ) }
    soma_0 { pt3dadd( -0.513799, -0.269302, 0.0872253, 12.1627 ) }
    soma_0 { pt3dadd( -0.283634, 0.975641, 0.131844, 12.3026 ) }
    soma_0 { pt3dadd( -0.0534692, 2.22058, 0.176462, 12.4334 ) }
    soma_0 { pt3dadd( 0.176696, 3.46553, 0.22108, 12.0678 ) }
    soma_0 { pt3dadd( 0.406861, 4.71047, 0.265698, 10.8106 ) }
    soma_0 { pt3dadd( 0.637026, 5.95542, 0.310317, 9.52599 ) }
    soma_0 { pt3dadd( 0.867191, 7.20036, 0.354935, 8.17517 ) }
    soma_0 { pt3dadd( 1.09736, 8.4453, 0.399553, 6.80245 ) }
    soma_0 { pt3dadd( 1.32752, 9.69025, 0.444171, 5.68876 ) }
    soma_0 { pt3dadd( 1.55769, 10.9352, 0.48879, 4.78356 ) }
    soma_0 { pt3dadd( 1.78785, 12.1801, 0.533408, 3.86104 ) }
    soma_0 { pt3dadd( 2.01802, 13.4251, 0.578026, 2.8145 ) }
    soma_0 { pt3dadd( 2.24818, 14.67, 0.622644, 1.80491 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 21/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 2.07366, 15.118, -2.40619, 2.77 ) }
    dend_56 { pt3dadd( 2.33493, 17.2414, -1.61076, 2.77 ) }
    dend_56 { pt3dadd( 2.90401, 21.8667, 0.121827, 2.77 ) }
    dend_56 { pt3dadd( 3.29937, 25.08, 1.32551, 1.94 ) }
    dend_56 { pt3dadd( 3.65456, 27.9668, 2.4069, 1.66 ) }
    dend_56 { pt3dadd( 4.54968, 35.2419, 5.1321, 1.66 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 27/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.896337, -9.70199, 5.09381, 1.38 ) }
    dend_29 { pt3dadd( -1.11893, -11.8032, 5.10336, 1.38 ) }
    dend_29 { pt3dadd( -1.37393, -14.7666, 5.12442, 1.38 ) }
    dend_29 { pt3dadd( -1.58729, -17.6495, 5.14993, 1.66 ) }
    dend_29 { pt3dadd( -1.83384, -20.981, 5.17941, 1.66 ) }
    dend_29 { pt3dadd( -2.066, -24.118, 5.20718, 1.66 ) }
    dend_29 { pt3dadd( -2.22925, -26.3238, 5.2267, 1.38 ) }
    dend_29 { pt3dadd( -2.38937, -28.6166, 5.20462, 1.94 ) }
    dend_29 { pt3dadd( -2.42282, -28.9827, 5.18499, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 36/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.59634, -8.982, -3.65619, 1.94 ) }
    dend_0 { pt3dadd( -6.51653, -10.8274, -3.65543, 1.38 ) }
    dend_0 { pt3dadd( -9.76303, -13.9473, -3.65414, 1.66 ) }
    dend_0 { pt3dadd( -13.3482, -17.3928, -3.65271, 1.66 ) }
    dend_0 { pt3dadd( -16.1999, -20.1333, -3.65158, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 41/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.24818, 14.67, 0.622644, 0.55 ) }
    axon_0 { pt3dadd( 4.97516, 29.42, 0.622644, 0.55 ) }
    axon_0 { pt3dadd( 7.70214, 44.1701, 0.622644, 0.55 ) }
    // Section: dend_76, id: dend_76, parent: dend_56 (entry count 44/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 4.54968, 35.2419, 5.1321, 0.83 ) }
    dend_76 { pt3dadd( 7.07396, 36.5644, 4.00292, 0.83 ) }
    dend_76 { pt3dadd( 10.9153, 38.3226, 3.83997, 0.83 ) }
    dend_76 { pt3dadd( 14.7334, 39.7767, 3.98699, 0.83 ) }
    dend_76 { pt3dadd( 17.0512, 40.4722, 4.27139, 0.55 ) }
    dend_76 { pt3dadd( 18.149, 40.726, 4.45401, 0.55 ) }
    dend_76 { pt3dadd( 21.2481, 41.4269, 5.26622, 0.83 ) }
    dend_76 { pt3dadd( 27.6176, 42.322, 7.90169, 0.83 ) }
    dend_76 { pt3dadd( 30.4759, 42.6028, 9.57179, 0.83 ) }
    dend_76 { pt3dadd( 32.7256, 42.6635, 11.166, 0.83 ) }
    dend_76 { pt3dadd( 33.9058, 42.6748, 12.1089, 0.83 ) }
    dend_76 { pt3dadd( 37.2952, 42.5292, 14.8162, 0.83 ) }
    dend_76 { pt3dadd( 39.3649, 42.3953, 16.4374, 1.11 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.54968, 35.2419, 5.1321, 0.83 ) }
    dend_57 { pt3dadd( 3.67968, 38.2119, 7.8021, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 59/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -2.42282, -28.9827, 5.18499, 1.11 ) }
    dend_31 { pt3dadd( -1.35843, -31.5817, 6.36734, 1.11 ) }
    dend_31 { pt3dadd( -0.202223, -34.4665, 7.37566, 1.11 ) }
    dend_31 { pt3dadd( 1.32867, -37.868, 8.10565, 1.38 ) }
    dend_31 { pt3dadd( 2.46968, -40.4033, 8.64973, 1.11 ) }
    dend_31 { pt3dadd( 3.44961, -42.5806, 9.11699, 0.83 ) }
    dend_31 { pt3dadd( 4.81783, -45.6207, 9.76941, 1.38 ) }
    dend_31 { pt3dadd( 6.83499, -50.1618, 10.5859, 1.38 ) }
    dend_31 { pt3dadd( 8.82064, -54.2064, 10.8788, 1.66 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 68/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.42282, -28.9827, 5.18499, 0.55 ) }
    dend_30 { pt3dadd( -2.929, -32.0288, 5.44175, 0.55 ) }
    dend_30 { pt3dadd( -3.15309, -33.4742, 5.54135, 0.55 ) }
    dend_30 { pt3dadd( -3.7279, -35.9352, 5.67858, 0.83 ) }
    dend_30 { pt3dadd( -4.3428, -37.8358, 5.81135, 0.55 ) }
    dend_30 { pt3dadd( -5.38548, -40.4475, 6.07129, 0.83 ) }
    dend_30 { pt3dadd( -6.54816, -42.9522, 6.38409, 0.55 ) }
    dend_30 { pt3dadd( -7.72121, -45.1113, 6.70331, 0.55 ) }
    dend_30 { pt3dadd( -10.0928, -48.6773, 7.37547, 0.83 ) }
    dend_30 { pt3dadd( -12.0659, -51.3052, 8.01829, 0.55 ) }
    dend_30 { pt3dadd( -13.28, -52.8494, 8.50662, 0.83 ) }
    dend_30 { pt3dadd( -14.5778, -54.3351, 9.1302, 0.55 ) }
    dend_30 { pt3dadd( -15.894, -55.7853, 9.91339, 0.83 ) }
    dend_30 { pt3dadd( -16.9591, -57.2845, 10.8824, 0.55 ) }
    dend_30 { pt3dadd( -17.5907, -59.0806, 12.1719, 0.83 ) }
    dend_30 { pt3dadd( -17.6571, -60.7267, 13.3656, 0.55 ) }
    dend_30 { pt3dadd( -17.5737, -62.7867, 14.7712, 0.55 ) }
    dend_30 { pt3dadd( -17.4735, -64.8517, 16.0894, 0.55 ) }
    dend_30 { pt3dadd( -17.408, -67.7898, 17.8181, 0.83 ) }
    dend_30 { pt3dadd( -17.4566, -69.9069, 18.8843, 1.11 ) }
    dend_30 { pt3dadd( -17.8423, -72.7584, 19.3809, 0.55 ) }
    dend_30 { pt3dadd( -18.3551, -75.5334, 18.9319, 0.83 ) }
    dend_30 { pt3dadd( -18.889, -78.2244, 18.0037, 0.83 ) }
    dend_30 { pt3dadd( -19.7607, -81.841, 16.3001, 0.83 ) }
    dend_30 { pt3dadd( -20.4504, -84.4995, 14.9503, 0.83 ) }
    dend_30 { pt3dadd( -23.8587, -97.936, 8.87078, 0.55 ) }
    dend_30 { pt3dadd( -24.3826, -100.214, 8.0085, 0.55 ) }
    dend_30 { pt3dadd( -24.9314, -102.983, 7.3375, 0.55 ) }
    dend_30 { pt3dadd( -25.316, -105.179, 7.22546, 0.55 ) }
    dend_30 { pt3dadd( -25.9477, -108.998, 7.78818, 0.83 ) }
    dend_30 { pt3dadd( -26.6994, -113.583, 9.3479, 0.83 ) }
    dend_30 { pt3dadd( -27.2707, -116.824, 10.9724, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_30 { pt3dadd( -27.8976, -119.928, 12.4838, 0.83 ) }
    dend_30 { pt3dadd( -28.6135, -123.738, 14.2434, 0.83 ) }
    dend_30 { pt3dadd( -28.8159, -124.857, 14.759, 0.55 ) }
    dend_30 { pt3dadd( -29.3413, -127.83, 16.0482, 0.83 ) }
    dend_30 { pt3dadd( -29.8649, -131.137, 17.4262, 0.55 ) }
    dend_30 { pt3dadd( -30.2419, -133.968, 18.6305, 0.55 ) }
    dend_30 { pt3dadd( -30.3857, -136.329, 19.6625, 0.83 ) }
    dend_30 { pt3dadd( -30.4411, -137.89, 20.3666, 0.55 ) }
    dend_30 { pt3dadd( -30.4241, -139.481, 21.1108, 0.55 ) }
    dend_30 { pt3dadd( -30.3002, -140.817, 21.7609, 0.55 ) }
    dend_30 { pt3dadd( -30.1404, -141.803, 22.2204, 0.83 ) }
    dend_30 { pt3dadd( -29.7284, -145.272, 24.1676, 0.55 ) }
    dend_30 { pt3dadd( -29.5812, -147.146, 25.2858, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 13/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -16.1999, -20.1333, -3.65158, 1.94 ) }
    dend_12 { pt3dadd( -15.7899, -21.4633, -2.01158, 1.94 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 15/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -16.1999, -20.1333, -3.65158, 1.11 ) }
    dend_1 { pt3dadd( -19.2523, -18.6719, -5.03582, 1.11 ) }
    dend_1 { pt3dadd( -20.5312, -18.0946, -5.53027, 1.11 ) }
    dend_1 { pt3dadd( -21.8318, -17.5244, -5.95048, 1.11 ) }
    dend_1 { pt3dadd( -23.8546, -16.7558, -6.67239, 1.11 ) }
    dend_1 { pt3dadd( -27.7057, -15.5017, -8.0927, 1.11 ) }
    dend_1 { pt3dadd( -31.5229, -14.5081, -10.0145, 1.11 ) }
    dend_1 { pt3dadd( -33.0878, -14.1868, -11.2754, 0.83 ) }
    dend_1 { pt3dadd( -35.1023, -13.8551, -13.263, 1.11 ) }
    dend_1 { pt3dadd( -37.221, -13.6616, -15.5319, 0.83 ) }
    dend_1 { pt3dadd( -37.9387, -13.6663, -16.4596, 0.83 ) }
    dend_1 { pt3dadd( -41.6804, -14.1884, -22.9882, 1.11 ) }
    dend_1 { pt3dadd( -45.4898, -15.246, -31.2122, 0.55 ) }
    dend_1 { pt3dadd( -46.1758, -15.4746, -32.9168, 0.55 ) }
    dend_1 { pt3dadd( -46.95, -15.7754, -35.0803, 0.83 ) }
    dend_1 { pt3dadd( -48.2299, -16.2426, -38.8998, 1.11 ) }
    dend_1 { pt3dadd( -49.6852, -16.8701, -43.8734, 1.11 ) }
    dend_1 { pt3dadd( -50.0565, -17.2827, -45.8737, 0.83 ) }
    dend_1 { pt3dadd( -50.1264, -17.8731, -47.7683, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 34/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 7.70214, 44.1701, 0.622644, 0.55 ) }
    axon_1 { pt3dadd( 10.4291, 58.9201, 0.622644, 0.55 ) }
    axon_1 { pt3dadd( 13.1561, 73.6702, 0.622644, 0.55 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 37/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 39.3649, 42.3953, 16.4374, 0.55 ) }
    dend_78 { pt3dadd( 40.9984, 40.2696, 15.1325, 0.55 ) }
    dend_78 { pt3dadd( 42.5286, 38.2786, 13.9102, 0.83 ) }
    dend_78 { pt3dadd( 43.7141, 36.7359, 12.9631, 0.83 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 41/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 39.3649, 42.3953, 16.4374, 0.55 ) }
    dend_77 { pt3dadd( 39.9009, 44.482, 20.1224, 0.55 ) }
    dend_77 { pt3dadd( 40.1673, 45.733, 22.3026, 0.83 ) }
    dend_77 { pt3dadd( 40.413, 46.8217, 23.9667, 0.55 ) }
    dend_77 { pt3dadd( 40.9428, 48.8178, 26.5335, 0.83 ) }
    dend_77 { pt3dadd( 41.3853, 50.3045, 28.1279, 0.83 ) }
    dend_77 { pt3dadd( 41.636, 51.1021, 28.9686, 0.28 ) }
    dend_77 { pt3dadd( 42.0863, 52.523, 30.3328, 0.55 ) }
    dend_77 { pt3dadd( 42.5902, 54.3401, 32.0566, 0.28 ) }
    dend_77 { pt3dadd( 42.9898, 55.8987, 33.5026, 1.11 ) }
    dend_77 { pt3dadd( 43.3857, 57.3035, 34.7772, 0.55 ) }
    dend_77 { pt3dadd( 44.637, 61.1527, 38.453, 0.28 ) }
    dend_77 { pt3dadd( 45.1721, 62.3282, 39.6492, 0.83 ) }
    dend_77 { pt3dadd( 46.0498, 64.0466, 41.428, 0.28 ) }
    dend_77 { pt3dadd( 46.5924, 65.0667, 42.6181, 0.55 ) }
    dend_77 { pt3dadd( 47.3491, 66.2386, 44.0785, 0.28 ) }
    dend_77 { pt3dadd( 48.3184, 67.5188, 45.6348, 0.55 ) }
    dend_77 { pt3dadd( 49.9358, 69.2923, 47.5318, 0.55 ) }
    dend_77 { pt3dadd( 50.7775, 70.1864, 48.5495, 0.55 ) }
    dend_77 { pt3dadd( 52.9412, 72.4596, 51.1041, 1.11 ) }
    dend_77 { pt3dadd( 54.7626, 74.6849, 53.8517, 0.83 ) }
    dend_77 { pt3dadd( 54.9847, 75.0096, 54.2723, 0.83 ) }
    dend_77 { pt3dadd( 55.926, 76.8366, 56.6494, 0.83 ) }
    dend_77 { pt3dadd( 56.6454, 78.657, 59.0299, 0.28 ) }
    dend_77 { pt3dadd( 57.0833, 79.7947, 60.4612, 0.83 ) }
    dend_77 { pt3dadd( 58.0181, 83.0186, 63.9893, 0.28 ) }
    dend_77 { pt3dadd( 58.1394, 84.3133, 65.3159, 0.55 ) }
    dend_77 { pt3dadd( 58.1369, 85.1475, 66.1155, 0.28 ) }
    dend_77 { pt3dadd( 58.024, 86.0901, 66.9294, 0.83 ) }
    dend_77 { pt3dadd( 57.9021, 87.335, 67.8876, 0.28 ) }
    dend_77 { pt3dadd( 57.8452, 87.8191, 68.2728, 0.55 ) }
    dend_77 { pt3dadd( 57.7185, 89.8546, 69.5249, 0.28 ) }
    dend_77 { pt3dadd( 57.686, 91.0386, 70.3014, 0.83 ) }
    dend_77 { pt3dadd( 57.5875, 92.7586, 71.5118, 0.28 ) }
    dend_77 { pt3dadd( 57.4415, 94.3194, 72.6489, 0.83 ) }
    dend_77 { pt3dadd( 57.2156, 96.277, 74.1748, 0.28 ) }
    dend_77 { pt3dadd( 57.1194, 98.2155, 75.6728, 0.83 ) }
    // Section: dend_67, id: dend_67, parent: dend_57 (entry count 78/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 3.67968, 38.2119, 7.8021, 0.83 ) }
    dend_67 { pt3dadd( 5.00808, 38.7113, 7.8436, 0.83 ) }
    dend_67 { pt3dadd( 6.18804, 39.4358, 8.70985, 0.55 ) }
    dend_67 { pt3dadd( 7.44241, 40.4874, 9.85226, 0.83 ) }
    dend_67 { pt3dadd( 8.47381, 41.3521, 10.7916, 0.55 ) }
    dend_67 { pt3dadd( 9.02114, 41.811, 11.2901, 0.55 ) }
    dend_67 { pt3dadd( 10.7403, 43.2523, 12.8558, 0.55 ) }
    dend_67 { pt3dadd( 14.2913, 46.2788, 16.5504, 0.83 ) }
    dend_67 { pt3dadd( 14.9126, 46.9832, 17.4479, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 87/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.67968, 38.2119, 7.8021, 0.55 ) }
    dend_58 { pt3dadd( 1.44869, 40.64, 4.37116, 0.55 ) }
    dend_58 { pt3dadd( -0.399446, 42.3614, 2.4667, 0.55 ) }
    dend_58 { pt3dadd( -1.66768, 43.6212, 1.23737, 0.55 ) }
    dend_58 { pt3dadd( -2.88198, 44.9284, 0.289039, 0.55 ) }
    dend_58 { pt3dadd( -4.33179, 46.4891, -0.843228, 0.28 ) }
    dend_58 { pt3dadd( -5.03668, 47.2479, -1.39373, 0.55 ) }
    dend_58 { pt3dadd( -7.31669, 49.8886, -2.68018, 0.55 ) }
    dend_58 { pt3dadd( -9.69919, 52.5509, -3.75126, 0.55 ) }
    dend_58 { pt3dadd( -12.3326, 55.2295, -4.86935, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_31 (entry count 97/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 8.82064, -54.2064, 10.8788, 0.83 ) }
    dend_39 { pt3dadd( 9.00491, -55.8532, 11.1868, 0.83 ) }
    dend_39 { pt3dadd( 9.29094, -58.4095, 11.665, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( 9.57825, -60.9772, 12.1454, 0.83 ) }
    dend_39 { pt3dadd( 9.93303, -64.1479, 12.7385, 1.11 ) }
    dend_39 { pt3dadd( 10.2308, -66.8092, 13.2364, 1.11 ) }
    dend_39 { pt3dadd( 10.6973, -70.9786, 14.0163, 1.11 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 4/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 8.82064, -54.2064, 10.8788, 0.55 ) }
    dend_32 { pt3dadd( 11.2904, -53.5206, 10.956, 0.55 ) }
    dend_32 { pt3dadd( 12.2388, -53.2194, 10.9794, 0.55 ) }
    dend_32 { pt3dadd( 14.0756, -52.5353, 11.063, 0.55 ) }
    dend_32 { pt3dadd( 16.4234, -51.5381, 11.2295, 0.55 ) }
    dend_32 { pt3dadd( 19.2269, -50.3316, 11.4597, 0.55 ) }
    dend_32 { pt3dadd( 23.6765, -48.3596, 11.8516, 0.55 ) }
    dend_32 { pt3dadd( 25.3683, -47.6095, 12.0363, 0.55 ) }
    dend_32 { pt3dadd( 26.8791, -46.9811, 12.2257, 0.55 ) }
    dend_32 { pt3dadd( 29.8083, -45.882, 12.6414, 0.83 ) }
    dend_32 { pt3dadd( 32.1683, -45.1463, 13.017, 0.55 ) }
    dend_32 { pt3dadd( 34.3244, -44.6151, 13.3517, 0.83 ) }
    dend_32 { pt3dadd( 36.8185, -44.329, 13.6636, 0.28 ) }
    dend_32 { pt3dadd( 37.9516, -44.3114, 13.7992, 0.55 ) }
    dend_32 { pt3dadd( 39.437, -44.4122, 13.925, 0.28 ) }
    dend_32 { pt3dadd( 42.1831, -44.7477, 14.0889, 0.55 ) }
    dend_32 { pt3dadd( 45.4872, -45.3354, 14.0996, 0.55 ) }
    dend_32 { pt3dadd( 49.2739, -46.081, 13.9677, 0.55 ) }
    dend_32 { pt3dadd( 49.985, -46.2067, 13.9196, 0.55 ) }
    dend_32 { pt3dadd( 51.3241, -46.4162, 13.8113, 0.83 ) }
    dend_32 { pt3dadd( 53.2851, -46.7891, 13.5377, 0.83 ) }
    dend_32 { pt3dadd( 56.3847, -47.4412, 12.831, 0.55 ) }
    dend_32 { pt3dadd( 58.2036, -47.9587, 12.269, 0.55 ) }
    dend_32 { pt3dadd( 59.2925, -48.2581, 11.9799, 0.28 ) }
    dend_32 { pt3dadd( 60.6116, -48.63, 11.7661, 0.28 ) }
    dend_32 { pt3dadd( 64.0173, -49.627, 11.6247, 0.55 ) }
    dend_32 { pt3dadd( 65.467, -50.1063, 11.6255, 0.55 ) }
    dend_32 { pt3dadd( 67.469, -50.7649, 11.7633, 0.55 ) }
    dend_32 { pt3dadd( 69.8511, -51.7267, 11.9112, 0.55 ) }
    dend_32 { pt3dadd( 71.5962, -52.4717, 12.0942, 0.28 ) }
    dend_32 { pt3dadd( 73.4257, -53.242, 12.4854, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -15.7899, -21.4633, -2.01158, 1.38 ) }
    dend_14 { pt3dadd( -15.2784, -24.9926, -1.61937, 1.38 ) }
    dend_14 { pt3dadd( -14.7486, -28.6483, -1.21312, 1.38 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 38/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -15.7899, -21.4633, -2.01158, 0.83 ) }
    dend_13 { pt3dadd( -20.4619, -23.4645, -1.0348, 0.83 ) }
    dend_13 { pt3dadd( -21.4291, -23.9189, -0.747633, 0.83 ) }
    dend_13 { pt3dadd( -23.4088, -24.8925, -0.143163, 0.55 ) }
    dend_13 { pt3dadd( -27.3832, -26.6235, 1.07185, 0.83 ) }
    dend_13 { pt3dadd( -29.2226, -27.2535, 2.2618, 0.55 ) }
    dend_13 { pt3dadd( -31.2549, -27.9055, 3.79758, 1.38 ) }
    dend_13 { pt3dadd( -33.2811, -28.5542, 5.5451, 0.55 ) }
    dend_13 { pt3dadd( -34.4608, -28.8633, 6.87729, 0.83 ) }
    dend_13 { pt3dadd( -36.2551, -29.1504, 9.24747, 0.83 ) }
    dend_13 { pt3dadd( -41.1926, -29.9359, 16.7682, 0.55 ) }
    dend_13 { pt3dadd( -42.3257, -30.181, 18.5754, 1.11 ) }
    dend_13 { pt3dadd( -43.7344, -30.5544, 20.5809, 1.11 ) }
    dend_13 { pt3dadd( -46.4718, -31.4134, 24.2287, 0.55 ) }
    dend_13 { pt3dadd( -47.3905, -31.875, 25.4086, 0.55 ) }
    dend_13 { pt3dadd( -49.0447, -33.2677, 27.311, 0.83 ) }
    dend_13 { pt3dadd( -50.6983, -34.8446, 28.7788, 0.83 ) }
    dend_13 { pt3dadd( -52.0734, -36.2274, 30.194, 1.11 ) }
    dend_13 { pt3dadd( -53.5454, -37.7972, 31.6877, 0.55 ) }
    dend_13 { pt3dadd( -54.1891, -38.4593, 32.2974, 0.55 ) }
    dend_13 { pt3dadd( -56.5484, -40.6822, 34.6589, 1.11 ) }
    dend_13 { pt3dadd( -58.4983, -42.2317, 36.5985, 0.83 ) }
    dend_13 { pt3dadd( -59.6833, -43.1428, 37.721, 0.83 ) }
    dend_13 { pt3dadd( -60.9541, -44.038, 38.9841, 0.83 ) }
    dend_13 { pt3dadd( -63.1296, -45.1967, 40.9749, 0.83 ) }
    dend_13 { pt3dadd( -64.6843, -45.9849, 42.2581, 0.83 ) }
    dend_13 { pt3dadd( -66.3731, -46.7773, 43.6541, 0.83 ) }
    dend_13 { pt3dadd( -69.6435, -48.1151, 46.4465, 0.83 ) }
    dend_13 { pt3dadd( -72.5869, -49.131, 48.9741, 0.55 ) }
    dend_13 { pt3dadd( -76.5922, -50.5619, 52.3411, 0.83 ) }
    dend_13 { pt3dadd( -79.7486, -51.7152, 54.7825, 0.83 ) }
    dend_13 { pt3dadd( -83.4039, -52.6945, 57.4508, 0.83 ) }
    dend_13 { pt3dadd( -85.2379, -53.0183, 58.7625, 0.83 ) }
    dend_13 { pt3dadd( -87.3673, -53.1213, 60.1595, 0.83 ) }
    dend_13 { pt3dadd( -90.8182, -53.2155, 62.1777, 0.83 ) }
    dend_13 { pt3dadd( -93.25, -53.1813, 63.5452, 0.83 ) }
    dend_13 { pt3dadd( -96.6933, -52.7167, 65.4174, 0.83 ) }
    dend_13 { pt3dadd( -99.8203, -52.4525, 66.7044, 0.55 ) }
    dend_13 { pt3dadd( -101.818, -52.2679, 67.6898, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -50.1264, -17.8731, -47.7683, 0.83 ) }
    dend_3 { pt3dadd( -51.0229, -19.5382, -48.4106, 0.83 ) }
    dend_3 { pt3dadd( -52.4161, -21.5694, -49.6202, 0.83 ) }
    dend_3 { pt3dadd( -53.101, -22.517, -50.2873, 0.55 ) }
    dend_3 { pt3dadd( -54.0626, -23.8286, -51.3271, 0.83 ) }
    dend_3 { pt3dadd( -55.2931, -25.5578, -52.9143, 0.55 ) }
    dend_3 { pt3dadd( -56.6105, -27.1614, -54.4143, 0.55 ) }
    dend_3 { pt3dadd( -58.0035, -28.6325, -55.9705, 0.55 ) }
    dend_3 { pt3dadd( -59.8879, -30.462, -58.035, 1.11 ) }
    dend_3 { pt3dadd( -61.5956, -32.0256, -59.8569, 0.55 ) }
    dend_3 { pt3dadd( -64.2223, -34.4825, -62.5689, 1.38 ) }
    dend_3 { pt3dadd( -66.5952, -36.8187, -65.1252, 0.55 ) }
    dend_3 { pt3dadd( -68.3408, -38.5585, -66.9865, 0.28 ) }
    dend_3 { pt3dadd( -68.7105, -38.8937, -67.3475, 0.83 ) }
    dend_3 { pt3dadd( -69.6402, -39.6845, -68.2699, 0.28 ) }
    dend_3 { pt3dadd( -71.3672, -41.1856, -70.0365, 0.83 ) }
    dend_3 { pt3dadd( -73.7908, -43.6761, -73.0412, 0.55 ) }
    dend_3 { pt3dadd( -75.6047, -45.8958, -75.8529, 1.38 ) }
    dend_3 { pt3dadd( -76.8106, -47.4354, -77.9395, 0.55 ) }
    dend_3 { pt3dadd( -78.0075, -49.0465, -80.1879, 0.55 ) }
    dend_3 { pt3dadd( -79.5486, -51.1535, -83.1835, 0.83 ) }
    dend_3 { pt3dadd( -81.221, -53.535, -86.7334, 0.28 ) }
    dend_3 { pt3dadd( -82.1305, -55.1177, -88.9647, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_3 { pt3dadd( -83.1093, -57.4042, -92.3658, 0.28 ) }
    dend_3 { pt3dadd( -83.4702, -58.3797, -93.8858, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -50.1264, -17.8731, -47.7683, 0.83 ) }
    dend_2 { pt3dadd( -52.7996, -16.0288, -50.3935, 0.83 ) }
    dend_2 { pt3dadd( -54.1944, -15.0591, -51.5808, 0.55 ) }
    dend_2 { pt3dadd( -56.0085, -13.7108, -53.1395, 0.83 ) }
    dend_2 { pt3dadd( -58.5656, -11.7665, -55.2692, 0.28 ) }
    dend_2 { pt3dadd( -59.3519, -11.1714, -55.9045, 0.83 ) }
    dend_2 { pt3dadd( -60.6, -10.2295, -56.8878, 0.28 ) }
    dend_2 { pt3dadd( -61.3211, -9.66509, -57.4117, 0.55 ) }
    dend_2 { pt3dadd( -64.1083, -7.76098, -59.506, 0.28 ) }
    dend_2 { pt3dadd( -64.8277, -7.32327, -60.041, 0.55 ) }
    dend_2 { pt3dadd( -66.583, -6.35344, -61.2789, 0.28 ) }
    dend_2 { pt3dadd( -66.8715, -6.21124, -61.4923, 1.11 ) }
    dend_2 { pt3dadd( -69.3651, -5.03837, -63.2709, 0.55 ) }
    dend_2 { pt3dadd( -70.6541, -4.45387, -64.1019, 0.55 ) }
    dend_2 { pt3dadd( -72.2392, -3.74756, -64.9905, 0.28 ) }
    dend_2 { pt3dadd( -74.6608, -2.64998, -66.2402, 0.28 ) }
    dend_2 { pt3dadd( -76.3726, -1.78316, -66.9556, 0.55 ) }
    dend_2 { pt3dadd( -78.6735, -0.488131, -67.7199, 0.28 ) }
    dend_2 { pt3dadd( -80.0992, 0.391348, -68.1199, 0.55 ) }
    dend_2 { pt3dadd( -81.665, 1.3917, -68.5217, 0.28 ) }
    dend_2 { pt3dadd( -83.8644, 2.73355, -69.0008, 0.55 ) }
    dend_2 { pt3dadd( -86.4401, 4.27119, -69.361, 0.28 ) }
    dend_2 { pt3dadd( -87.6509, 4.96027, -69.5737, 0.55 ) }
    dend_2 { pt3dadd( -89.8869, 6.08549, -70.0349, 0.28 ) }
    dend_2 { pt3dadd( -91.516, 6.88898, -70.4412, 1.11 ) }
    dend_2 { pt3dadd( -93.4448, 7.82004, -71.0145, 0.28 ) }
    dend_2 { pt3dadd( -95.0189, 8.59112, -71.5926, 0.55 ) }
    dend_2 { pt3dadd( -98.0, 9.90616, -72.8189, 0.28 ) }
    dend_2 { pt3dadd( -98.9193, 10.304, -73.3451, 0.83 ) }
    dend_2 { pt3dadd( -100.261, 10.8842, -74.5176, 0.28 ) }
    dend_2 { pt3dadd( -101.189, 11.2791, -75.7119, 0.55 ) }
    dend_2 { pt3dadd( -102.229, 11.6674, -77.2986, 0.28 ) }
    dend_2 { pt3dadd( -102.778, 11.7745, -78.2529, 0.55 ) }
    dend_2 { pt3dadd( -105.506, 12.1231, -82.8904, 0.28 ) }
    dend_2 { pt3dadd( -107.631, 12.2869, -86.4956, 0.55 ) }
    dend_2 { pt3dadd( -109.19, 12.3191, -89.1689, 0.28 ) }
    dend_2 { pt3dadd( -109.755, 12.3036, -90.2041, 0.55 ) }
    dend_2 { pt3dadd( -112.917, 12.0897, -96.3658, 0.28 ) }
    dend_2 { pt3dadd( -114.005, 12.001, -98.4781, 0.28 ) }
    dend_2 { pt3dadd( -114.64, 11.9234, -99.5323, 0.55 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 42/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 43.7141, 36.7359, 12.9631, 0.55 ) }
    dend_80 { pt3dadd( 44.719, 37.199, 12.1266, 0.55 ) }
    dend_80 { pt3dadd( 45.7902, 37.8786, 11.3373, 0.55 ) }
    dend_80 { pt3dadd( 46.4394, 38.2151, 10.8443, 0.28 ) }
    dend_80 { pt3dadd( 47.7021, 38.7433, 9.94563, 0.55 ) }
    dend_80 { pt3dadd( 50.7885, 39.9959, 7.52876, 0.55 ) }
    dend_80 { pt3dadd( 52.1815, 40.5416, 6.42634, 0.55 ) }
    dend_80 { pt3dadd( 53.4814, 40.9765, 5.18154, 0.55 ) }
    dend_80 { pt3dadd( 55.3624, 41.4743, 3.2697, 0.55 ) }
    dend_80 { pt3dadd( 56.9571, 41.7504, 1.55452, 0.55 ) }
    dend_80 { pt3dadd( 58.7425, 41.977, -0.395052, 0.28 ) }
    dend_80 { pt3dadd( 59.2989, 42.0686, -0.997167, 0.55 ) }
    dend_80 { pt3dadd( 62.1323, 42.4227, -4.18967, 0.28 ) }
    dend_80 { pt3dadd( 63.2691, 42.5284, -5.51634, 0.83 ) }
    dend_80 { pt3dadd( 65.6057, 42.8927, -8.12353, 0.28 ) }
    dend_80 { pt3dadd( 66.6217, 43.0288, -9.20418, 0.55 ) }
    dend_80 { pt3dadd( 67.9688, 43.1668, -10.4227, 0.28 ) }
    dend_80 { pt3dadd( 69.4822, 43.2009, -11.8276, 0.55 ) }
    dend_80 { pt3dadd( 70.6181, 43.2471, -12.8817, 0.28 ) }
    dend_80 { pt3dadd( 72.4545, 43.2562, -14.7148, 0.55 ) }
    dend_80 { pt3dadd( 75.1249, 43.3126, -17.2116, 0.28 ) }
    dend_80 { pt3dadd( 75.9091, 43.3601, -18.0186, 0.55 ) }
    dend_80 { pt3dadd( 79.4797, 43.8932, -22.3762, 1.11 ) }
    dend_80 { pt3dadd( 80.9907, 44.3954, -24.4163, 0.55 ) }
    dend_80 { pt3dadd( 81.6402, 44.7298, -25.6197, 0.55 ) }
    dend_80 { pt3dadd( 82.3801, 45.2356, -27.3425, 0.28 ) }
    dend_80 { pt3dadd( 83.5182, 46.3357, -30.3093, 0.55 ) }
    dend_80 { pt3dadd( 84.7925, 47.8856, -33.9849, 0.28 ) }
    dend_80 { pt3dadd( 85.4171, 48.8209, -35.98, 0.83 ) }
    dend_80 { pt3dadd( 87.4364, 51.9736, -43.3327, 0.28 ) }
    dend_80 { pt3dadd( 87.6068, 52.2788, -44.0776, 0.83 ) }
    dend_80 { pt3dadd( 87.9982, 53.0249, -46.0927, 0.28 ) }
    dend_80 { pt3dadd( 88.2209, 53.4191, -47.2084, 0.55 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 75/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 43.7141, 36.7359, 12.9631, 0.55 ) }
    dend_79 { pt3dadd( 46.0868, 35.2086, 14.9667, 0.55 ) }
    dend_79 { pt3dadd( 47.445, 34.4553, 15.9859, 0.55 ) }
    dend_79 { pt3dadd( 48.4394, 33.881, 16.6895, 1.11 ) }
    dend_79 { pt3dadd( 49.2979, 33.3334, 17.3018, 0.55 ) }
    dend_79 { pt3dadd( 50.1604, 32.7894, 17.8483, 0.55 ) }
    dend_79 { pt3dadd( 53.0255, 30.9152, 19.3483, 0.83 ) }
    dend_79 { pt3dadd( 54.1751, 30.2065, 19.7745, 0.83 ) }
    dend_79 { pt3dadd( 56.701, 28.6912, 20.6393, 0.55 ) }
    dend_79 { pt3dadd( 58.0571, 27.9281, 21.0707, 0.83 ) }
    dend_79 { pt3dadd( 60.5992, 26.5702, 21.8855, 0.55 ) }
    dend_79 { pt3dadd( 63.3975, 25.0781, 22.7459, 0.55 ) }
    dend_79 { pt3dadd( 64.509, 24.5124, 23.0127, 0.28 ) }
    dend_79 { pt3dadd( 65.8525, 23.8256, 23.4258, 0.83 ) }
    dend_79 { pt3dadd( 67.8348, 22.9095, 24.1418, 0.28 ) }
    dend_79 { pt3dadd( 68.8705, 22.4334, 24.596, 0.55 ) }
    dend_79 { pt3dadd( 69.499, 22.0616, 24.9797, 0.55 ) }
    dend_79 { pt3dadd( 70.4635, 21.4693, 25.4877, 0.55 ) }
    dend_79 { pt3dadd( 72.1192, 20.5126, 26.3019, 0.28 ) }
    dend_79 { pt3dadd( 73.1102, 19.9566, 26.8035, 0.55 ) }
    dend_79 { pt3dadd( 73.9598, 19.483, 27.2615, 0.55 ) }
    dend_79 { pt3dadd( 75.0419, 18.9111, 27.9695, 0.55 ) }
    dend_79 { pt3dadd( 77.3294, 17.7557, 30.1308, 0.55 ) }
    dend_79 { pt3dadd( 80.1685, 16.1053, 33.5951, 0.55 ) }
    dend_79 { pt3dadd( 81.5666, 15.2404, 35.6381, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_79 { pt3dadd( 82.0607, 14.9237, 36.4401, 0.28 ) }
    dend_79 { pt3dadd( 82.9055, 14.3387, 37.8674, 0.55 ) }
    dend_79 { pt3dadd( 84.5422, 13.0152, 40.8015, 0.55 ) }
    dend_79 { pt3dadd( 85.3072, 12.3033, 42.168, 0.83 ) }
    dend_79 { pt3dadd( 86.1454, 11.4607, 43.3304, 0.55 ) }
    dend_79 { pt3dadd( 87.1598, 10.5704, 44.3362, 0.55 ) }
    dend_79 { pt3dadd( 88.78, 9.37183, 45.4431, 0.28 ) }
    dend_79 { pt3dadd( 90.158, 8.37014, 46.1201, 0.55 ) }
    dend_79 { pt3dadd( 91.6578, 7.31665, 46.6123, 0.55 ) }
    dend_79 { pt3dadd( 92.8708, 6.4951, 46.9056, 0.55 ) }
    dend_79 { pt3dadd( 94.8019, 5.25499, 47.2544, 0.55 ) }
    dend_79 { pt3dadd( 96.9958, 3.86446, 47.6714, 0.28 ) }
    dend_79 { pt3dadd( 98.1915, 3.14905, 47.8224, 0.28 ) }
    dend_79 { pt3dadd( 98.9058, 2.72285, 47.8841, 0.28 ) }
    dend_79 { pt3dadd( 100.4, 1.81471, 48.1425, 0.28 ) }
    dend_79 { pt3dadd( 102.162, 0.834323, 48.6533, 0.55 ) }
    dend_79 { pt3dadd( 103.63, -0.00133169, 49.4188, 0.28 ) }
    dend_79 { pt3dadd( 104.947, -0.788569, 50.2458, 0.55 ) }
    dend_79 { pt3dadd( 106.889, -1.91625, 51.4592, 0.55 ) }
    dend_79 { pt3dadd( 108.735, -2.92908, 52.6129, 0.28 ) }
    dend_79 { pt3dadd( 109.871, -3.50653, 53.3228, 0.55 ) }
    dend_79 { pt3dadd( 112.782, -4.9196, 54.9957, 0.28 ) }
    dend_79 { pt3dadd( 113.729, -5.36266, 55.536, 0.28 ) }
    dend_79 { pt3dadd( 115.046, -5.98998, 56.2588, 0.55 ) }
    dend_79 { pt3dadd( 116.745, -6.78063, 57.0817, 0.55 ) }
    dend_79 { pt3dadd( 118.162, -7.40649, 57.6088, 0.55 ) }
    dend_79 { pt3dadd( 119.471, -7.96347, 58.0435, 0.55 ) }
    dend_79 { pt3dadd( 122.006, -9.0016, 58.798, 0.55 ) }
    dend_79 { pt3dadd( 124.579, -9.97679, 59.5724, 0.55 ) }
    dend_79 { pt3dadd( 125.736, -10.4372, 59.9046, 0.55 ) }
    dend_79 { pt3dadd( 127.477, -11.1535, 60.3762, 0.83 ) }
    dend_79 { pt3dadd( 128.748, -11.6719, 60.6518, 0.28 ) }
    dend_79 { pt3dadd( 131.429, -12.7045, 61.2908, 0.55 ) }
    dend_79 { pt3dadd( 133.138, -13.2528, 61.583, 0.55 ) }
    dend_79 { pt3dadd( 135.379, -13.8919, 61.9182, 0.55 ) }
    dend_79 { pt3dadd( 136.917, -14.3661, 62.1285, 0.83 ) }
    dend_79 { pt3dadd( 138.784, -14.9279, 62.3568, 0.28 ) }
    dend_79 { pt3dadd( 141.937, -15.6597, 62.6087, 0.55 ) }
    dend_79 { pt3dadd( 145.062, -16.1351, 62.7155, 0.28 ) }
    dend_79 { pt3dadd( 146.429, -16.3558, 62.8163, 0.55 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 40/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 14.9126, 46.9832, 17.4479, 0.55 ) }
    dend_69 { pt3dadd( 15.3555, 46.7021, 19.047, 0.55 ) }
    dend_69 { pt3dadd( 15.9759, 46.5649, 22.5997, 0.55 ) }
    dend_69 { pt3dadd( 16.3021, 46.8874, 25.2934, 0.55 ) }
    dend_69 { pt3dadd( 17.0317, 47.9457, 29.4305, 0.55 ) }
    dend_69 { pt3dadd( 17.9655, 48.8388, 32.9806, 0.55 ) }
    dend_69 { pt3dadd( 19.1486, 49.5443, 36.4055, 0.55 ) }
    dend_69 { pt3dadd( 20.293, 49.8283, 38.9161, 0.55 ) }
    dend_69 { pt3dadd( 21.4215, 50.0526, 40.9994, 0.55 ) }
    dend_69 { pt3dadd( 22.8271, 50.4223, 43.3295, 0.55 ) }
    dend_69 { pt3dadd( 24.8997, 51.1416, 46.71, 0.55 ) }
    dend_69 { pt3dadd( 26.7403, 51.5684, 49.0723, 0.55 ) }
    dend_69 { pt3dadd( 28.0676, 51.3375, 50.4954, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 53/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 14.9126, 46.9832, 17.4479, 0.28 ) }
    dend_68 { pt3dadd( 15.2464, 49.1004, 18.6818, 0.28 ) }
    dend_68 { pt3dadd( 15.63, 50.8571, 19.8079, 0.55 ) }
    dend_68 { pt3dadd( 16.7605, 55.3513, 22.6594, 0.28 ) }
    dend_68 { pt3dadd( 17.1166, 56.4823, 23.3948, 0.55 ) }
    dend_68 { pt3dadd( 17.6265, 58.0742, 24.4089, 0.28 ) }
    dend_68 { pt3dadd( 18.6495, 61.3394, 26.4816, 0.55 ) }
    dend_68 { pt3dadd( 19.0125, 62.4067, 27.1492, 0.28 ) }
    dend_68 { pt3dadd( 19.4518, 63.5727, 27.9568, 0.55 ) }
    dend_68 { pt3dadd( 20.2661, 65.2919, 29.1015, 0.28 ) }
    dend_68 { pt3dadd( 20.8723, 66.4421, 29.8402, 0.55 ) }
    dend_68 { pt3dadd( 21.7781, 68.1067, 30.8462, 0.28 ) }
    dend_68 { pt3dadd( 21.8984, 68.3314, 30.9483, 0.55 ) }
    dend_68 { pt3dadd( 22.9951, 70.3228, 31.7178, 0.28 ) }
    dend_68 { pt3dadd( 24.4175, 73.001, 32.4357, 0.55 ) }
    dend_68 { pt3dadd( 25.6383, 75.4172, 32.923, 0.28 ) }
    dend_68 { pt3dadd( 26.5026, 76.9926, 33.186, 0.55 ) }
    dend_68 { pt3dadd( 27.7998, 79.3198, 33.4067, 0.28 ) }
    dend_68 { pt3dadd( 28.4967, 80.6451, 33.4579, 0.55 ) }
    dend_68 { pt3dadd( 29.715, 83.2497, 33.1818, 0.28 ) }
    dend_68 { pt3dadd( 30.3503, 85.5037, 32.6114, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 74/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -12.3326, 55.2295, -4.86935, 0.55 ) }
    dend_60 { pt3dadd( -14.7666, 55.3351, -4.32798, 0.55 ) }
    dend_60 { pt3dadd( -17.036, 55.5192, -3.70194, 0.55 ) }
    dend_60 { pt3dadd( -19.0884, 55.6126, -2.88478, 0.55 ) }
    dend_60 { pt3dadd( -21.8806, 55.7452, -1.67263, 0.55 ) }
    dend_60 { pt3dadd( -24.6494, 55.9249, -0.699458, 0.55 ) }
    dend_60 { pt3dadd( -28.5076, 56.2479, 0.406818, 0.55 ) }
    dend_60 { pt3dadd( -30.8215, 56.5146, 0.97511, 0.28 ) }
    dend_60 { pt3dadd( -36.439, 57.534, 1.84868, 0.55 ) }
    dend_60 { pt3dadd( -38.567, 58.0378, 1.98993, 0.28 ) }
    dend_60 { pt3dadd( -42.9531, 59.6061, 1.95408, 0.83 ) }
    dend_60 { pt3dadd( -44.8944, 60.4344, 1.69574, 0.55 ) }
    dend_60 { pt3dadd( -46.7145, 61.2114, 1.43509, 0.55 ) }
    dend_60 { pt3dadd( -50.2679, 62.8635, 1.11005, 0.55 ) }
    dend_60 { pt3dadd( -51.53, 63.4577, 1.05176, 0.55 ) }
    dend_60 { pt3dadd( -53.6417, 64.2268, 1.35353, 0.55 ) }
    dend_60 { pt3dadd( -58.3045, 65.3726, 2.98473, 0.55 ) }
    dend_60 { pt3dadd( -65.2842, 66.2533, 6.29753, 0.55 ) }
    dend_60 { pt3dadd( -67.6183, 66.1569, 7.72531, 0.55 ) }
    dend_60 { pt3dadd( -69.1617, 65.7903, 8.86841, 0.55 ) }
    dend_60 { pt3dadd( -71.2697, 64.9934, 10.5112, 0.28 ) }
    dend_60 { pt3dadd( -71.8782, 64.6673, 11.0581, 0.28 ) }
    dend_60 { pt3dadd( -72.5139, 64.2026, 11.7269, 0.55 ) }
    dend_60 { pt3dadd( -73.9156, 63.0356, 12.9869, 0.28 ) }
    dend_60 { pt3dadd( -75.2254, 61.8873, 14.2736, 0.55 ) }
    dend_60 { pt3dadd( -76.6839, 60.7399, 15.7564, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( -78.7811, 59.1774, 17.7723, 0.28 ) }
    dend_60 { pt3dadd( -79.6708, 58.4767, 18.6239, 0.55 ) }
    dend_60 { pt3dadd( -80.3953, 57.8341, 19.3183, 0.28 ) }
    dend_60 { pt3dadd( -81.0913, 57.1723, 19.9323, 0.55 ) }
    dend_60 { pt3dadd( -82.2457, 55.9725, 20.8498, 0.28 ) }
    dend_60 { pt3dadd( -83.2975, 54.7154, 21.5245, 0.55 ) }
    dend_60 { pt3dadd( -84.3761, 53.3576, 21.8104, 0.28 ) }
    dend_60 { pt3dadd( -85.5887, 51.7474, 21.8445, 0.55 ) }
    dend_60 { pt3dadd( -86.762, 50.1441, 21.6516, 0.55 ) }
    dend_60 { pt3dadd( -87.3743, 49.2315, 21.5222, 0.55 ) }
    dend_60 { pt3dadd( -88.5942, 47.433, 21.3185, 0.55 ) }
    dend_60 { pt3dadd( -91.0531, 43.7106, 21.0103, 0.28 ) }
    dend_60 { pt3dadd( -92.2017, 42.0395, 20.8588, 0.55 ) }
    dend_60 { pt3dadd( -93.0523, 40.8927, 20.8738, 0.28 ) }
    dend_60 { pt3dadd( -95.1057, 37.8439, 21.3988, 0.55 ) }
    dend_60 { pt3dadd( -97.1201, 34.6638, 22.2052, 0.55 ) }
    dend_60 { pt3dadd( -98.66, 32.1458, 22.9989, 0.55 ) }
    dend_60 { pt3dadd( -99.3893, 30.8867, 23.5084, 0.55 ) }
    dend_60 { pt3dadd( -101.29, 27.358, 24.974, 0.83 ) }
    dend_60 { pt3dadd( -103.134, 23.9629, 26.4437, 0.83 ) }
    dend_60 { pt3dadd( -104.428, 21.5044, 27.3629, 0.83 ) }
    dend_60 { pt3dadd( -105.137, 19.9751, 27.9242, 0.55 ) }
    dend_60 { pt3dadd( -105.742, 18.6927, 28.4123, 0.55 ) }
    dend_60 { pt3dadd( -106.75, 16.4632, 29.0639, 0.83 ) }
    dend_60 { pt3dadd( -108.242, 13.0568, 29.6478, 0.55 ) }
    dend_60 { pt3dadd( -109.474, 10.4644, 30.2625, 0.83 ) }
    dend_60 { pt3dadd( -110.485, 8.19443, 31.05, 0.55 ) }
    dend_60 { pt3dadd( -111.415, 5.97086, 31.9071, 0.55 ) }
    dend_60 { pt3dadd( -112.49, 3.33135, 32.8958, 0.83 ) }
    dend_60 { pt3dadd( -112.963, 2.11102, 33.4311, 0.83 ) }
    dend_60 { pt3dadd( -114.645, -2.39202, 35.7348, 0.55 ) }
    dend_60 { pt3dadd( -115.244, -3.85393, 36.5482, 0.28 ) }
    dend_60 { pt3dadd( -115.801, -5.24108, 37.3426, 0.83 ) }
    dend_60 { pt3dadd( -116.292, -6.54205, 38.1769, 0.28 ) }
    dend_60 { pt3dadd( -117.632, -9.80189, 40.6456, 0.55 ) }
    dend_60 { pt3dadd( -118.324, -11.2926, 41.756, 0.28 ) }
    dend_60 { pt3dadd( -119.289, -13.3065, 42.8707, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 37/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -12.3326, 55.2295, -4.86935, 0.55 ) }
    dend_59 { pt3dadd( -11.3323, 56.5813, -6.90868, 0.55 ) }
    dend_59 { pt3dadd( -10.4402, 58.1284, -9.28711, 0.55 ) }
    dend_59 { pt3dadd( -9.44927, 60.085, -12.1282, 0.28 ) }
    dend_59 { pt3dadd( -8.65774, 61.6755, -14.3833, 0.55 ) }
    dend_59 { pt3dadd( -8.04198, 62.9599, -16.1615, 0.55 ) }
    dend_59 { pt3dadd( -7.57566, 63.9704, -17.4346, 0.55 ) }
    dend_59 { pt3dadd( -6.34185, 67.196, -20.8835, 0.28 ) }
    dend_59 { pt3dadd( -5.92717, 68.3462, -21.9825, 0.55 ) }
    dend_59 { pt3dadd( -5.23982, 70.2866, -23.7242, 0.28 ) }
    dend_59 { pt3dadd( -4.87648, 71.4986, -24.7248, 0.55 ) }
    dend_59 { pt3dadd( -4.36983, 73.4353, -26.3855, 0.83 ) }
    dend_59 { pt3dadd( -3.84777, 75.1341, -28.2092, 0.55 ) }
    dend_59 { pt3dadd( -3.09165, 76.9144, -30.6445, 0.28 ) }
    dend_59 { pt3dadd( -2.83933, 77.3618, -31.5821, 0.55 ) }
    dend_59 { pt3dadd( -2.58486, 77.7516, -32.5796, 0.28 ) }
    dend_59 { pt3dadd( -1.88469, 78.7656, -35.374, 0.55 ) }
    dend_59 { pt3dadd( -0.578638, 80.6797, -40.8818, 0.28 ) }
    dend_59 { pt3dadd( 0.0658923, 81.7196, -43.7873, 0.55 ) }
    dend_59 { pt3dadd( 1.41438, 84.5043, -50.3738, 0.28 ) }
    dend_59 { pt3dadd( 1.56787, 84.953, -51.3036, 0.55 ) }
    dend_59 { pt3dadd( 1.77355, 85.8357, -52.9214, 0.28 ) }
    dend_59 { pt3dadd( 1.87866, 86.604, -54.0202, 0.55 ) }
    dend_59 { pt3dadd( 1.76731, 88.0081, -55.4727, 0.55 ) }
    dend_59 { pt3dadd( 1.51579, 89.4052, -56.6705, 0.55 ) }
    dend_59 { pt3dadd( 0.642024, 93.5371, -59.838, 0.28 ) }
    dend_59 { pt3dadd( 0.449018, 94.7799, -60.9104, 0.55 ) }
    dend_59 { pt3dadd( 0.271279, 96.3767, -62.4465, 0.28 ) }
    dend_59 { pt3dadd( 0.233537, 96.8312, -62.9161, 0.55 ) }
    dend_59 { pt3dadd( 0.0707148, 99.0619, -65.2895, 0.28 ) }
    dend_59 { pt3dadd( -0.0660459, 100.498, -66.713, 0.55 ) }
    dend_59 { pt3dadd( -0.131345, 101.328, -67.4422, 0.55 ) }
    dend_59 { pt3dadd( -0.240883, 102.566, -68.7341, 0.28 ) }
    dend_59 { pt3dadd( -0.460401, 104.509, -70.8257, 0.28 ) }
    dend_59 { pt3dadd( -0.568841, 105.432, -71.7503, 0.83 ) }
    dend_59 { pt3dadd( -0.808022, 107.102, -73.3513, 0.28 ) }
    dend_59 { pt3dadd( -1.1299, 108.971, -75.1321, 0.55 ) }
    dend_59 { pt3dadd( -1.75038, 112.685, -78.7848, 0.28 ) }
    dend_59 { pt3dadd( -1.84908, 113.907, -80.0273, 0.55 ) }
    dend_59 { pt3dadd( -1.87508, 115.358, -81.5645, 0.28 ) }
    dend_59 { pt3dadd( -1.77291, 116.723, -83.1109, 0.55 ) }
    dend_59 { pt3dadd( -1.50485, 118.378, -85.0501, 0.28 ) }
    dend_59 { pt3dadd( -0.807605, 121.519, -88.4345, 0.55 ) }
    dend_59 { pt3dadd( -0.195269, 123.399, -90.378, 0.28 ) }
    dend_59 { pt3dadd( 0.227637, 124.5, -91.5066, 0.55 ) }
    dend_59 { pt3dadd( 0.849187, 126.067, -93.1551, 0.55 ) }
    dend_59 { pt3dadd( 1.34131, 127.274, -94.3263, 0.28 ) }
    dend_59 { pt3dadd( 1.87267, 128.464, -95.4038, 0.28 ) }
    dend_59 { pt3dadd( 2.7456, 130.598, -97.099, 0.55 ) }
    dend_59 { pt3dadd( 3.25701, 132.1, -98.2156, 0.55 ) }
    dend_59 { pt3dadd( 4.90297, 137.378, -101.817, 0.28 ) }
    dend_59 { pt3dadd( 5.43326, 139.336, -103.068, 0.28 ) }
    dend_59 { pt3dadd( 5.90229, 140.909, -104.152, 0.55 ) }
    dend_59 { pt3dadd( 6.20861, 141.826, -104.773, 0.28 ) }
    dend_59 { pt3dadd( 6.6604, 143.261, -105.656, 0.55 ) }
    dend_59 { pt3dadd( 7.02614, 144.366, -106.29, 0.28 ) }
    dend_59 { pt3dadd( 7.33381, 145.382, -106.711, 0.55 ) }
    dend_59 { pt3dadd( 7.99194, 148.789, -108.347, 0.28 ) }
    dend_59 { pt3dadd( 8.10786, 149.89, -108.894, 0.55 ) }
    dend_59 { pt3dadd( 8.30205, 152.767, -110.034, 0.28 ) }
    dend_59 { pt3dadd( 8.31803, 153.951, -110.394, 0.28 ) }
    dend_59 { pt3dadd( 8.3064, 155.316, -110.697, 0.55 ) }
    dend_59 { pt3dadd( 8.20106, 157.962, -111.0, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_59 { pt3dadd( 8.08829, 159.729, -110.915, 0.55 ) }
    dend_59 { pt3dadd( 7.8919, 162.678, -110.574, 0.28 ) }
    dend_59 { pt3dadd( 7.7956, 163.8, -110.403, 0.55 ) }
    dend_59 { pt3dadd( 7.58652, 166.095, -110.173, 0.28 ) }
    dend_59 { pt3dadd( 7.46662, 167.11, -110.273, 0.55 ) }
    dend_59 { pt3dadd( 6.98948, 169.659, -111.254, 0.28 ) }
    dend_59 { pt3dadd( 6.85802, 170.311, -111.76, 0.55 ) }
    dend_59 { pt3dadd( 6.31166, 172.709, -114.241, 0.28 ) }
    dend_59 { pt3dadd( 6.02653, 174.044, -115.865, 0.55 ) }
    dend_59 { pt3dadd( 5.31457, 177.03, -119.816, 0.28 ) }
    dend_59 { pt3dadd( 4.97341, 178.518, -121.954, 0.55 ) }
    dend_59 { pt3dadd( 4.59552, 180.151, -124.534, 0.28 ) }
    dend_59 { pt3dadd( 4.48774, 180.678, -125.371, 0.55 ) }
    dend_59 { pt3dadd( 4.32262, 181.925, -127.206, 0.28 ) }
    dend_59 { pt3dadd( 4.15826, 183.039, -128.862, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_39 (entry count 15/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 10.6973, -70.9786, 14.0163, 0.55 ) }
    dend_53 { pt3dadd( 10.169, -72.9737, 13.6101, 0.55 ) }
    dend_53 { pt3dadd( 9.99366, -74.2979, 13.2751, 0.83 ) }
    dend_53 { pt3dadd( 9.94692, -76.0782, 12.7336, 0.55 ) }
    dend_53 { pt3dadd( 10.0549, -77.5894, 12.1771, 0.55 ) }
    dend_53 { pt3dadd( 10.362, -79.8968, 10.9599, 0.55 ) }
    dend_53 { pt3dadd( 10.664, -82.4013, 9.51103, 0.83 ) }
    dend_53 { pt3dadd( 10.9036, -84.1237, 8.22421, 0.83 ) }
    dend_53 { pt3dadd( 11.0186, -85.0598, 7.46139, 0.28 ) }
    dend_53 { pt3dadd( 11.1425, -86.4521, 6.24298, 0.83 ) }
    dend_53 { pt3dadd( 11.2997, -88.9346, 4.03988, 0.28 ) }
    dend_53 { pt3dadd( 11.292, -90.9052, 2.51735, 0.83 ) }
    dend_53 { pt3dadd( 10.8947, -94.5308, -0.0109077, 0.55 ) }
    dend_53 { pt3dadd( 10.7774, -95.2688, -0.477108, 0.55 ) }
    dend_53 { pt3dadd( 10.4563, -96.9636, -1.41034, 0.55 ) }
    dend_53 { pt3dadd( 10.0758, -98.828, -2.29205, 0.55 ) }
    dend_53 { pt3dadd( 9.49573, -102.38, -3.79683, 0.83 ) }
    dend_53 { pt3dadd( 9.28563, -105.493, -5.121, 0.28 ) }
    dend_53 { pt3dadd( 9.34059, -107.226, -5.77302, 0.55 ) }
    dend_53 { pt3dadd( 9.62686, -109.004, -6.52769, 0.28 ) }
    dend_53 { pt3dadd( 10.0858, -110.757, -7.29468, 0.83 ) }
    dend_53 { pt3dadd( 10.7691, -112.675, -8.32684, 0.28 ) }
    dend_53 { pt3dadd( 11.5148, -114.396, -9.41626, 0.55 ) }
    dend_53 { pt3dadd( 12.3447, -116.373, -10.719, 0.55 ) }
    dend_53 { pt3dadd( 13.2709, -118.515, -12.2642, 0.55 ) }
    dend_53 { pt3dadd( 14.022, -120.17, -13.5744, 0.83 ) }
    dend_53 { pt3dadd( 15.3772, -123.298, -15.9985, 0.28 ) }
    dend_53 { pt3dadd( 15.7665, -124.428, -16.9469, 0.83 ) }
    dend_53 { pt3dadd( 16.1604, -126.274, -18.6397, 0.28 ) }
    dend_53 { pt3dadd( 16.2367, -126.835, -19.18, 0.55 ) }
    dend_53 { pt3dadd( 16.5002, -130.141, -22.2312, 0.28 ) }
    dend_53 { pt3dadd( 16.6324, -132.316, -24.1243, 0.83 ) }
    dend_53 { pt3dadd( 16.6986, -135.762, -26.6542, 0.28 ) }
    dend_53 { pt3dadd( 16.7746, -138.205, -28.4696, 0.55 ) }
    dend_53 { pt3dadd( 16.824, -139.021, -29.049, 0.55 ) }
    dend_53 { pt3dadd( 16.8741, -140.126, -29.844, 1.11 ) }
    dend_53 { pt3dadd( 16.9684, -142.107, -31.265, 0.28 ) }
    dend_53 { pt3dadd( 17.1579, -144.096, -32.7855, 0.83 ) }
    dend_53 { pt3dadd( 17.6014, -146.312, -34.1236, 0.28 ) }
    dend_53 { pt3dadd( 17.9143, -147.452, -34.8884, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.6973, -70.9786, 14.0163, 0.55 ) }
    dend_40 { pt3dadd( 10.9971, -75.5675, 14.7549, 0.55 ) }
    dend_40 { pt3dadd( 11.3116, -80.3809, 15.5295, 0.55 ) }
    dend_40 { pt3dadd( 11.4653, -82.7334, 15.9081, 0.83 ) }
    dend_40 { pt3dadd( 11.6817, -86.0465, 16.4413, 1.38 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 73.4257, -53.242, 12.4854, 0.55 ) }
    dend_34 { pt3dadd( 75.6317, -54.2518, 11.5108, 0.55 ) }
    dend_34 { pt3dadd( 76.8879, -54.8558, 10.8704, 0.28 ) }
    dend_34 { pt3dadd( 78.7445, -55.7884, 9.88908, 0.83 ) }
    dend_34 { pt3dadd( 80.2959, -56.4212, 9.0874, 0.83 ) }
    dend_34 { pt3dadd( 81.6391, -56.8195, 8.32385, 0.28 ) }
    dend_34 { pt3dadd( 82.6133, -57.0273, 7.72127, 0.83 ) }
    dend_34 { pt3dadd( 83.9119, -57.1693, 6.67592, 0.28 ) }
    dend_34 { pt3dadd( 84.481, -57.2446, 6.15531, 0.55 ) }
    dend_34 { pt3dadd( 86.2661, -57.4267, 4.26372, 0.55 ) }
    dend_34 { pt3dadd( 88.0615, -57.5499, 2.2262, 0.55 ) }
    dend_34 { pt3dadd( 89.3411, -57.6185, 0.83768, 1.11 ) }
    dend_34 { pt3dadd( 92.4593, -57.8214, -2.16134, 0.28 ) }
    dend_34 { pt3dadd( 93.501, -57.8844, -3.07503, 0.83 ) }
    dend_34 { pt3dadd( 95.6197, -58.0516, -4.73129, 0.55 ) }
    dend_34 { pt3dadd( 97.1262, -58.2117, -5.75446, 0.83 ) }
    dend_34 { pt3dadd( 98.8964, -58.3025, -6.73437, 0.55 ) }
    dend_34 { pt3dadd( 101.361, -58.3095, -8.01915, 0.55 ) }
    dend_34 { pt3dadd( 102.707, -58.2531, -8.62808, 0.55 ) }
    dend_34 { pt3dadd( 104.462, -58.0912, -9.59625, 0.55 ) }
    dend_34 { pt3dadd( 105.313, -58.0027, -10.1378, 0.55 ) }
    dend_34 { pt3dadd( 106.241, -57.8266, -10.9051, 0.83 ) }
    dend_34 { pt3dadd( 108.869, -57.11, -13.4081, 0.55 ) }
    dend_34 { pt3dadd( 110.39, -56.5901, -15.0421, 0.83 ) }
    dend_34 { pt3dadd( 113.147, -55.5701, -18.026, 0.28 ) }
    dend_34 { pt3dadd( 114.618, -54.9617, -19.6896, 0.55 ) }
    dend_34 { pt3dadd( 116.542, -54.0856, -21.8586, 0.28 ) }
    dend_34 { pt3dadd( 117.731, -53.5426, -23.1731, 0.55 ) }
    dend_34 { pt3dadd( 119.047, -52.9551, -24.4697, 0.28 ) }
    dend_34 { pt3dadd( 120.031, -52.6105, -25.3865, 0.55 ) }
    dend_34 { pt3dadd( 123.375, -51.8404, -28.213, 0.28 ) }
    dend_34 { pt3dadd( 125.274, -51.5802, -29.7037, 0.55 ) }
    dend_34 { pt3dadd( 128.095, -51.4792, -31.8368, 0.28 ) }
    dend_34 { pt3dadd( 130.831, -51.5089, -33.8284, 0.55 ) }
    dend_34 { pt3dadd( 134.134, -51.719, -36.0806, 0.28 ) }
    dend_34 { pt3dadd( 135.176, -51.8115, -36.7565, 0.83 ) }
    dend_34 { pt3dadd( 136.916, -52.0311, -37.7602, 0.83 ) }
    dend_34 { pt3dadd( 139.656, -52.4232, -39.1374, 0.28 ) }
    dend_34 { pt3dadd( 142.503, -52.7486, -40.3893, 0.83 ) }
    dend_34 { pt3dadd( 144.751, -52.9448, -41.4517, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_34 { pt3dadd( 146.734, -53.0999, -42.2678, 0.55 ) }
    dend_34 { pt3dadd( 147.65, -53.1844, -42.6627, 0.55 ) }
    dend_34 { pt3dadd( 149.983, -53.5012, -43.7627, 0.28 ) }
    dend_34 { pt3dadd( 150.513, -53.6248, -44.0524, 0.55 ) }
    dend_34 { pt3dadd( 153.288, -54.7076, -46.0145, 0.28 ) }
    dend_34 { pt3dadd( 154.199, -55.1379, -46.7325, 0.55 ) }
    dend_34 { pt3dadd( 156.708, -56.6562, -48.9688, 0.28 ) }
    dend_34 { pt3dadd( 157.28, -57.0492, -49.5559, 0.55 ) }
    dend_34 { pt3dadd( 158.859, -58.2838, -51.3519, 0.28 ) }
    dend_34 { pt3dadd( 159.657, -58.9672, -52.2468, 0.55 ) }
    dend_34 { pt3dadd( 160.905, -60.0299, -53.5022, 0.28 ) }
    dend_34 { pt3dadd( 161.531, -60.4902, -54.1409, 0.55 ) }
    dend_34 { pt3dadd( 163.202, -61.5564, -55.9266, 0.28 ) }
    dend_34 { pt3dadd( 163.587, -61.743, -56.3816, 0.55 ) }
    dend_34 { pt3dadd( 164.275, -61.9689, -57.2158, 0.28 ) }
    dend_34 { pt3dadd( 165.575, -62.3239, -58.9015, 0.55 ) }
    dend_34 { pt3dadd( 167.108, -62.6684, -60.9999, 0.28 ) }
    dend_34 { pt3dadd( 167.977, -62.7988, -62.1644, 0.83 ) }
    dend_34 { pt3dadd( 169.876, -62.9608, -64.7303, 0.55 ) }
    dend_34 { pt3dadd( 171.358, -63.0251, -66.8432, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 20/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 73.4257, -53.242, 12.4854, 0.28 ) }
    dend_33 { pt3dadd( 74.6477, -53.8834, 13.111, 0.28 ) }
    dend_33 { pt3dadd( 75.5765, -54.3567, 13.6486, 0.55 ) }
    dend_33 { pt3dadd( 76.7918, -54.9425, 14.2926, 0.28 ) }
    dend_33 { pt3dadd( 77.3045, -55.1882, 14.5565, 0.55 ) }
    dend_33 { pt3dadd( 79.9625, -56.4683, 15.8153, 0.28 ) }
    dend_33 { pt3dadd( 81.0018, -56.9367, 16.3277, 0.55 ) }
    dend_33 { pt3dadd( 83.4249, -58.0325, 17.5655, 0.28 ) }
    dend_33 { pt3dadd( 84.6494, -58.5576, 18.2276, 0.55 ) }
    dend_33 { pt3dadd( 85.9157, -59.0741, 18.9433, 0.28 ) }
    dend_33 { pt3dadd( 86.5851, -59.3402, 19.2966, 0.55 ) }
    dend_33 { pt3dadd( 89.9347, -60.5984, 20.6948, 0.28 ) }
    dend_33 { pt3dadd( 90.4708, -60.7832, 20.9463, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 33/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.7486, -28.6483, -1.21312, 1.94 ) }
    dend_16 { pt3dadd( -15.3217, -29.9017, -1.36139, 1.94 ) }
    dend_16 { pt3dadd( -17.1716, -33.9139, -1.75237, 1.38 ) }
    dend_16 { pt3dadd( -18.775, -37.1087, -2.06818, 0.83 ) }
    dend_16 { pt3dadd( -20.4611, -40.2894, -2.41023, 0.83 ) }
    dend_16 { pt3dadd( -21.3628, -42.0226, -2.60227, 0.55 ) }
    dend_16 { pt3dadd( -22.4031, -44.2457, -2.83927, 1.11 ) }
    dend_16 { pt3dadd( -23.6428, -47.3548, -3.13946, 0.55 ) }
    dend_16 { pt3dadd( -25.4049, -52.3804, -3.53667, 1.38 ) }
    dend_16 { pt3dadd( -25.774, -53.7907, -3.57302, 0.55 ) }
    dend_16 { pt3dadd( -26.0111, -55.0085, -3.58315, 0.55 ) }
    dend_16 { pt3dadd( -26.4082, -58.4867, -3.41732, 0.83 ) }
    dend_16 { pt3dadd( -26.6439, -61.2285, -3.1458, 0.83 ) }
    dend_16 { pt3dadd( -27.0457, -65.1452, -2.62226, 0.83 ) }
    dend_16 { pt3dadd( -27.215, -67.6993, -2.18049, 0.55 ) }
    dend_16 { pt3dadd( -27.4904, -70.959, -1.55153, 0.55 ) }
    dend_16 { pt3dadd( -27.9628, -74.1707, -0.876875, 0.83 ) }
    dend_16 { pt3dadd( -28.528, -76.5498, -0.290466, 1.11 ) }
    dend_16 { pt3dadd( -29.3449, -79.2492, 0.482293, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 52/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.7486, -28.6483, -1.21312, 0.55 ) }
    dend_15 { pt3dadd( -14.5713, -30.3362, -4.08868, 0.55 ) }
    dend_15 { pt3dadd( -14.6219, -30.8633, -5.13523, 1.11 ) }
    dend_15 { pt3dadd( -14.8921, -32.1813, -7.72757, 0.55 ) }
    dend_15 { pt3dadd( -15.0268, -32.808, -8.99016, 0.55 ) }
    dend_15 { pt3dadd( -15.5788, -34.7354, -12.9243, 0.83 ) }
    dend_15 { pt3dadd( -16.2058, -36.6167, -16.9233, 0.28 ) }
    dend_15 { pt3dadd( -16.6137, -37.8394, -19.9126, 0.83 ) }
    dend_15 { pt3dadd( -16.7944, -38.3451, -21.2669, 0.28 ) }
    dend_15 { pt3dadd( -17.1176, -39.5422, -24.4638, 0.83 ) }
    dend_15 { pt3dadd( -17.3387, -40.9522, -28.1534, 0.28 ) }
    dend_15 { pt3dadd( -17.4492, -43.0229, -33.3523, 0.83 ) }
    dend_15 { pt3dadd( -17.3716, -46.066, -40.8371, 0.28 ) }
    dend_15 { pt3dadd( -17.1444, -47.7866, -45.0442, 0.55 ) }
    dend_15 { pt3dadd( -16.801, -49.668, -49.682, 1.11 ) }
    dend_15 { pt3dadd( -16.4001, -51.5008, -54.1129, 0.28 ) }
    dend_15 { pt3dadd( -16.3476, -51.7133, -54.6219, 0.28 ) }
    dend_15 { pt3dadd( -16.1958, -52.3735, -56.2721, 0.83 ) }
    dend_15 { pt3dadd( -15.8141, -54.4026, -61.4809, 0.55 ) }
    dend_15 { pt3dadd( -15.727, -55.2125, -63.9605, 0.28 ) }
    dend_15 { pt3dadd( -15.7241, -56.1932, -67.4088, 0.83 ) }
    dend_15 { pt3dadd( -15.7744, -56.7602, -69.3458, 0.83 ) }
    dend_15 { pt3dadd( -15.9768, -59.3785, -78.0396, 0.28 ) }
    dend_15 { pt3dadd( -15.9784, -59.8505, -79.613, 0.83 ) }
    dend_15 { pt3dadd( -15.7992, -62.6554, -88.6009, 0.55 ) }
    dend_15 { pt3dadd( -15.7003, -63.2382, -90.2719, 0.55 ) }
    dend_15 { pt3dadd( -15.4151, -64.542, -93.6974, 0.83 ) }
    dend_15 { pt3dadd( -15.0541, -66.0821, -97.3998, 0.55 ) }
    dend_15 { pt3dadd( -14.8378, -67.1952, -99.8462, 0.83 ) }
    dend_15 { pt3dadd( -14.5083, -68.6774, -103.057, 0.83 ) }
    dend_15 { pt3dadd( -14.189, -69.6957, -105.1, 0.83 ) }
    dend_15 { pt3dadd( -13.8944, -70.7676, -107.454, 0.55 ) }
    dend_15 { pt3dadd( -13.6804, -71.5518, -109.313, 0.83 ) }
    dend_15 { pt3dadd( -13.0929, -74.024, -115.285, 0.83 ) }
    dend_15 { pt3dadd( -12.9812, -74.4827, -116.424, 0.28 ) }
    dend_15 { pt3dadd( -12.8325, -74.9658, -117.686, 0.55 ) }
    dend_15 { pt3dadd( -12.5235, -75.8363, -120.007, 0.28 ) }
    dend_15 { pt3dadd( -12.2275, -76.6465, -121.935, 0.55 ) }
    dend_15 { pt3dadd( -11.9318, -77.4521, -123.648, 0.28 ) }
    dend_15 { pt3dadd( -11.6164, -78.6861, -125.965, 0.55 ) }
    dend_15 { pt3dadd( -11.4769, -79.6259, -127.611, 0.28 ) }
    dend_15 { pt3dadd( -11.4547, -80.6173, -129.197, 0.55 ) }
    dend_15 { pt3dadd( -11.5129, -81.8594, -130.9, 0.55 ) }
    dend_15 { pt3dadd( -11.8179, -83.7061, -133.239, 0.83 ) }
    dend_15 { pt3dadd( -11.8998, -83.9546, -133.539, 0.83 ) }
    dend_15 { pt3dadd( -12.2468, -84.769, -134.605, 0.83 ) }
    dend_15 { pt3dadd( -12.9106, -86.3469, -136.67, 0.28 ) }
    dend_15 { pt3dadd( -13.2726, -87.3441, -137.996, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( -13.6451, -88.9234, -140.28, 0.28 ) }
    dend_15 { pt3dadd( -13.7976, -89.8105, -141.703, 0.28 ) }
    dend_15 { pt3dadd( -13.9711, -91.5663, -144.717, 0.55 ) }
    dend_15 { pt3dadd( -13.9881, -92.3361, -145.998, 0.55 ) }
    dend_15 { pt3dadd( -13.788, -93.901, -148.412, 1.11 ) }
    dend_15 { pt3dadd( -13.4331, -95.8831, -151.382, 0.28 ) }
    dend_15 { pt3dadd( -13.1007, -97.6943, -153.89, 0.83 ) }
    dend_15 { pt3dadd( -12.9779, -98.3742, -154.785, 0.28 ) }
    dend_15 { pt3dadd( -12.6951, -99.8318, -156.616, 0.55 ) }
    dend_15 { pt3dadd( -12.254, -102.529, -159.872, 0.55 ) }
    dend_15 { pt3dadd( -12.0768, -104.825, -162.481, 0.28 ) }
    dend_15 { pt3dadd( -12.0423, -106.37, -164.125, 0.55 ) }
    dend_15 { pt3dadd( -12.1345, -107.83, -165.624, 0.28 ) }
    dend_15 { pt3dadd( -12.4186, -109.526, -167.594, 0.28 ) }
    dend_15 { pt3dadd( -12.6651, -110.585, -168.994, 0.83 ) }
    dend_15 { pt3dadd( -13.4254, -112.668, -171.84, 0.83 ) }
    dend_15 { pt3dadd( -13.8262, -113.746, -173.52, 0.55 ) }
    dend_15 { pt3dadd( -14.2171, -114.71, -175.158, 0.83 ) }
    dend_15 { pt3dadd( -15.4879, -117.196, -179.652, 0.28 ) }
    dend_15 { pt3dadd( -16.1317, -118.234, -181.667, 0.28 ) }
    dend_15 { pt3dadd( -17.2206, -119.824, -185.164, 0.55 ) }
    dend_15 { pt3dadd( -18.5159, -121.49, -189.03, 0.28 ) }
    dend_15 { pt3dadd( -19.3045, -122.295, -190.969, 0.55 ) }
    dend_15 { pt3dadd( -19.8191, -122.732, -192.055, 0.28 ) }
    dend_15 { pt3dadd( -20.3149, -123.023, -192.876, 0.55 ) }
    dend_15 { pt3dadd( -22.2943, -124.05, -195.775, 0.28 ) }
    dend_15 { pt3dadd( -23.2546, -124.534, -197.155, 0.55 ) }
    dend_15 { pt3dadd( -24.2705, -125.136, -198.594, 0.55 ) }
    dend_15 { pt3dadd( -26.3787, -126.604, -201.873, 0.83 ) }
    dend_15 { pt3dadd( -28.5711, -128.577, -205.688, 0.28 ) }
    dend_15 { pt3dadd( -29.1469, -129.295, -206.869, 0.55 ) }
    dend_15 { pt3dadd( -29.4334, -129.78, -207.546, 0.55 ) }
    dend_15 { pt3dadd( -30.3714, -131.901, -210.181, 0.28 ) }
    dend_15 { pt3dadd( -30.5818, -132.468, -210.761, 0.28 ) }
    dend_15 { pt3dadd( -30.9513, -133.626, -211.483, 0.55 ) }
    dend_15 { pt3dadd( -31.8154, -136.06, -212.327, 0.28 ) }
    dend_15 { pt3dadd( -32.164, -136.947, -212.612, 0.55 ) }
    dend_15 { pt3dadd( -32.6416, -138.015, -212.884, 0.28 ) }
    dend_15 { pt3dadd( -33.5112, -139.762, -213.062, 0.28 ) }
    dend_15 { pt3dadd( -34.531, -141.565, -213.12, 0.28 ) }
    dend_15 { pt3dadd( -35.949, -143.507, -213.03, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 41/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -83.4702, -58.3797, -93.8858, 0.55 ) }
    dend_7 { pt3dadd( -85.1795, -59.6161, -95.018, 0.55 ) }
    dend_7 { pt3dadd( -86.956, -61.064, -96.3695, 0.28 ) }
    dend_7 { pt3dadd( -87.628, -61.6059, -96.8778, 0.55 ) }
    dend_7 { pt3dadd( -89.0968, -62.8835, -97.9489, 0.55 ) }
    dend_7 { pt3dadd( -90.0447, -63.8444, -98.7407, 1.11 ) }
    dend_7 { pt3dadd( -92.4965, -66.5759, -100.933, 0.55 ) }
    dend_7 { pt3dadd( -93.3681, -67.6379, -101.807, 1.11 ) }
    dend_7 { pt3dadd( -94.2754, -68.8056, -102.701, 0.83 ) }
    dend_7 { pt3dadd( -96.0214, -70.9115, -104.475, 0.55 ) }
    dend_7 { pt3dadd( -97.8481, -72.9459, -106.338, 0.83 ) }
    dend_7 { pt3dadd( -98.7913, -73.7729, -107.144, 0.28 ) }
    dend_7 { pt3dadd( -100.162, -74.7379, -108.125, 0.55 ) }
    dend_7 { pt3dadd( -101.908, -75.7504, -109.349, 0.55 ) }
    dend_7 { pt3dadd( -104.094, -76.6997, -110.83, 0.55 ) }
    dend_7 { pt3dadd( -106.027, -77.2086, -112.046, 0.83 ) }
    dend_7 { pt3dadd( -109.901, -77.6875, -114.37, 0.55 ) }
    dend_7 { pt3dadd( -110.664, -77.694, -114.83, 0.28 ) }
    dend_7 { pt3dadd( -111.72, -77.6515, -115.474, 0.55 ) }
    dend_7 { pt3dadd( -113.127, -77.4815, -116.358, 0.28 ) }
    dend_7 { pt3dadd( -113.599, -77.4121, -116.639, 0.55 ) }
    dend_7 { pt3dadd( -115.553, -76.7398, -117.91, 0.28 ) }
    dend_7 { pt3dadd( -117.727, -75.2232, -119.685, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 64/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -83.4702, -58.3797, -93.8858, 0.28 ) }
    dend_4 { pt3dadd( -82.8209, -60.9825, -95.5097, 0.28 ) }
    dend_4 { pt3dadd( -81.8182, -64.5191, -97.5152, 1.11 ) }
    dend_4 { pt3dadd( -81.0254, -66.981, -98.7574, 0.28 ) }
    dend_4 { pt3dadd( -80.8694, -67.4378, -99.0095, 0.83 ) }
    dend_4 { pt3dadd( -80.1682, -69.3097, -100.051, 0.28 ) }
    dend_4 { pt3dadd( -79.0792, -71.9276, -101.59, 1.11 ) }
    dend_4 { pt3dadd( -78.7292, -72.7494, -102.094, 0.83 ) }
    dend_4 { pt3dadd( -78.0578, -74.3053, -102.857, 0.55 ) }
    dend_4 { pt3dadd( -76.9113, -77.3817, -104.422, 1.11 ) }
    dend_4 { pt3dadd( -76.3815, -78.8765, -105.203, 1.11 ) }
    dend_4 { pt3dadd( -75.4056, -81.9626, -107.018, 0.28 ) }
    dend_4 { pt3dadd( -75.0569, -83.381, -107.952, 0.55 ) }
    dend_4 { pt3dadd( -74.5739, -85.7805, -109.69, 1.11 ) }
    dend_4 { pt3dadd( -73.7701, -89.6759, -112.69, 0.55 ) }
    dend_4 { pt3dadd( -73.4366, -91.2583, -113.871, 0.55 ) }
    dend_4 { pt3dadd( -72.9085, -93.8367, -115.891, 0.83 ) }
    dend_4 { pt3dadd( -72.504, -95.7273, -117.393, 0.83 ) }
    dend_4 { pt3dadd( -72.0319, -97.6131, -118.962, 0.83 ) }
    dend_4 { pt3dadd( -71.0829, -100.946, -121.726, 1.11 ) }
    dend_4 { pt3dadd( -70.6514, -102.503, -122.801, 0.28 ) }
    dend_4 { pt3dadd( -70.3031, -103.69, -123.543, 0.28 ) }
    dend_4 { pt3dadd( -69.6883, -105.495, -124.456, 0.83 ) }
    dend_4 { pt3dadd( -68.9717, -107.343, -125.23, 0.28 ) }
    dend_4 { pt3dadd( -68.4534, -108.582, -125.603, 0.55 ) }
    dend_4 { pt3dadd( -67.5674, -110.563, -126.121, 0.55 ) }
    dend_4 { pt3dadd( -66.7589, -112.295, -126.595, 0.28 ) }
    dend_4 { pt3dadd( -66.1829, -113.621, -126.954, 0.55 ) }
    dend_4 { pt3dadd( -65.4668, -115.282, -127.357, 0.28 ) }
    dend_4 { pt3dadd( -64.5054, -117.585, -127.898, 0.55 ) }
    dend_4 { pt3dadd( -62.8019, -121.526, -129.091, 0.83 ) }
    dend_4 { pt3dadd( -61.406, -124.601, -130.287, 0.83 ) }
    dend_4 { pt3dadd( -60.4298, -126.636, -131.229, 0.55 ) }
    dend_4 { pt3dadd( -59.2447, -128.91, -132.467, 0.83 ) }
    dend_4 { pt3dadd( -57.909, -131.273, -133.974, 0.83 ) }
    dend_4 { pt3dadd( -56.3502, -133.668, -135.727, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -54.7089, -135.824, -137.489, 0.83 ) }
    dend_4 { pt3dadd( -53.3677, -137.355, -138.913, 0.55 ) }
    dend_4 { pt3dadd( -52.4604, -138.296, -139.891, 0.28 ) }
    dend_4 { pt3dadd( -51.8571, -138.927, -140.624, 0.55 ) }
    dend_4 { pt3dadd( -50.0475, -140.833, -142.746, 0.55 ) }
    dend_4 { pt3dadd( -48.6562, -142.589, -144.223, 0.55 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 6/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 28.0676, 51.3375, 50.4954, 0.55 ) }
    dend_71 { pt3dadd( 26.0776, 51.6875, 47.8454, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 8/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 28.0676, 51.3375, 50.4954, 0.55 ) }
    dend_70 { pt3dadd( 27.6541, 49.1891, 50.0431, 0.55 ) }
    dend_70 { pt3dadd( 27.3878, 48.4168, 49.8234, 0.55 ) }
    dend_70 { pt3dadd( 26.3548, 45.9929, 49.0191, 0.55 ) }
    dend_70 { pt3dadd( 25.7755, 45.1883, 48.2609, 0.28 ) }
    dend_70 { pt3dadd( 25.4416, 44.6384, 47.3021, 0.55 ) }
    dend_70 { pt3dadd( 24.8804, 43.4392, 44.996, 0.28 ) }
    dend_70 { pt3dadd( 24.7026, 42.9091, 43.7281, 0.55 ) }
    dend_70 { pt3dadd( 24.5364, 42.3794, 42.4363, 0.55 ) }
    dend_70 { pt3dadd( 24.0929, 40.2776, 37.2068, 0.55 ) }
    dend_70 { pt3dadd( 24.0975, 38.3672, 33.0796, 0.28 ) }
    dend_70 { pt3dadd( 24.133, 37.8204, 32.1195, 0.55 ) }
    dend_70 { pt3dadd( 24.2517, 37.1247, 31.1826, 0.55 ) }
    dend_70 { pt3dadd( 24.518, 35.1967, 28.99, 0.83 ) }
    dend_70 { pt3dadd( 24.5589, 34.1883, 28.0405, 0.55 ) }
    dend_70 { pt3dadd( 24.4706, 32.7974, 26.9897, 0.55 ) }
    dend_70 { pt3dadd( 24.1953, 30.8396, 25.6646, 0.55 ) }
    dend_70 { pt3dadd( 23.6974, 27.8078, 23.481, 0.83 ) }
    dend_70 { pt3dadd( 23.2893, 25.6733, 21.8596, 0.55 ) }
    dend_70 { pt3dadd( 23.0408, 24.3201, 20.7708, 0.55 ) }
    dend_70 { pt3dadd( 22.6231, 22.6832, 19.3438, 0.83 ) }
    dend_70 { pt3dadd( 21.9554, 20.4083, 17.1384, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 30/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -119.289, -13.3065, 42.8707, 0.55 ) }
    dend_64 { pt3dadd( -121.024, -14.818, 44.148, 0.55 ) }
    dend_64 { pt3dadd( -122.14, -16.0406, 45.2008, 0.55 ) }
    dend_64 { pt3dadd( -123.413, -17.7568, 46.7866, 0.83 ) }
    dend_64 { pt3dadd( -124.762, -19.931, 48.7499, 0.28 ) }
    dend_64 { pt3dadd( -125.216, -20.856, 49.6766, 0.55 ) }
    dend_64 { pt3dadd( -125.633, -21.9137, 50.7609, 0.55 ) }
    dend_64 { pt3dadd( -125.965, -23.8079, 52.8182, 0.55 ) }
    dend_64 { pt3dadd( -126.12, -25.8496, 55.1264, 0.28 ) }
    dend_64 { pt3dadd( -126.095, -26.6161, 55.9683, 0.55 ) }
    dend_64 { pt3dadd( -125.668, -28.8216, 58.254, 0.55 ) }
    dend_64 { pt3dadd( -125.415, -29.6616, 59.2262, 0.55 ) }
    dend_64 { pt3dadd( -125.064, -30.4825, 60.2747, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 43/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -119.289, -13.3065, 42.8707, 0.55 ) }
    dend_61 { pt3dadd( -120.165, -15.5266, 43.7342, 0.55 ) }
    dend_61 { pt3dadd( -121.636, -18.6294, 44.5369, 0.28 ) }
    dend_61 { pt3dadd( -121.892, -19.1194, 44.5669, 0.55 ) }
    dend_61 { pt3dadd( -122.765, -20.7438, 44.4889, 0.28 ) }
    dend_61 { pt3dadd( -123.433, -22.1478, 44.3414, 0.28 ) }
    dend_61 { pt3dadd( -123.871, -23.1494, 44.1756, 0.83 ) }
    dend_61 { pt3dadd( -124.861, -25.4881, 43.4555, 0.55 ) }
    dend_61 { pt3dadd( -125.723, -27.6868, 42.6177, 0.28 ) }
    dend_61 { pt3dadd( -125.998, -28.4653, 42.3108, 0.55 ) }
    dend_61 { pt3dadd( -126.681, -30.4987, 41.5168, 0.28 ) }
    dend_61 { pt3dadd( -127.178, -31.9172, 40.9509, 0.55 ) }
    dend_61 { pt3dadd( -127.64, -33.361, 40.381, 0.28 ) }
    dend_61 { pt3dadd( -128.036, -34.8647, 39.9612, 0.55 ) }
    dend_61 { pt3dadd( -128.574, -37.0176, 39.5561, 0.28 ) }
    dend_61 { pt3dadd( -129.078, -38.9195, 39.2001, 0.28 ) }
    dend_61 { pt3dadd( -129.802, -41.4146, 38.7536, 0.55 ) }
    dend_61 { pt3dadd( -130.121, -42.6035, 38.5813, 0.83 ) }
    dend_61 { pt3dadd( -131.023, -46.4415, 38.073, 0.28 ) }
    dend_61 { pt3dadd( -131.34, -48.0929, 37.951, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 63/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 17.9143, -147.452, -34.8884, 0.83 ) }
    dend_55 { pt3dadd( 18.5927, -148.96, -36.248, 0.83 ) }
    dend_55 { pt3dadd( 19.7994, -151.608, -38.5924, 0.28 ) }
    dend_55 { pt3dadd( 20.3162, -152.823, -39.6458, 0.83 ) }
    dend_55 { pt3dadd( 21.8681, -156.509, -42.852, 0.28 ) }
    dend_55 { pt3dadd( 22.362, -157.681, -43.859, 0.55 ) }
    dend_55 { pt3dadd( 22.7186, -158.589, -44.6204, 0.55 ) }
    dend_55 { pt3dadd( 23.2707, -160.297, -46.0316, 0.28 ) }
    dend_55 { pt3dadd( 23.4692, -160.965, -46.5566, 0.55 ) }
    dend_55 { pt3dadd( 23.814, -162.468, -47.7294, 0.28 ) }
    dend_55 { pt3dadd( 23.9052, -162.965, -48.0814, 0.83 ) }
    dend_55 { pt3dadd( 24.2208, -165.379, -49.8787, 0.28 ) }
    dend_55 { pt3dadd( 24.3006, -166.261, -50.5412, 0.55 ) }
    dend_55 { pt3dadd( 24.5418, -168.813, -52.4305, 0.28 ) }
    dend_55 { pt3dadd( 24.696, -170.334, -53.5698, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 78/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 17.9143, -147.452, -34.8884, 0.28 ) }
    dend_54 { pt3dadd( 18.3146, -150.242, -35.7158, 0.28 ) }
    dend_54 { pt3dadd( 18.5131, -152.261, -36.2935, 0.28 ) }
    dend_54 { pt3dadd( 18.7265, -154.791, -36.9257, 0.55 ) }
    dend_54 { pt3dadd( 18.9503, -157.692, -37.5899, 0.28 ) }
    dend_54 { pt3dadd( 19.0568, -159.029, -37.9372, 0.55 ) }
    dend_54 { pt3dadd( 19.3237, -162.279, -38.8171, 0.28 ) }
    dend_54 { pt3dadd( 19.4291, -163.626, -39.2871, 0.55 ) }
    dend_54 { pt3dadd( 19.5334, -165.029, -39.9126, 0.28 ) }
    dend_54 { pt3dadd( 19.56, -165.277, -40.0185, 0.55 ) }
    dend_54 { pt3dadd( 19.8159, -167.932, -41.0141, 0.28 ) }
    dend_54 { pt3dadd( 19.9572, -169.45, -41.6665, 0.83 ) }
    dend_54 { pt3dadd( 20.5427, -173.42, -43.5703, 0.28 ) }
    dend_54 { pt3dadd( 20.8231, -175.018, -44.3766, 0.55 ) }
    dend_54 { pt3dadd( 21.3281, -177.975, -45.9457, 0.28 ) }
    dend_54 { pt3dadd( 21.4601, -178.743, -46.3355, 0.55 ) }
    dend_54 { pt3dadd( 21.959, -181.629, -47.5812, 0.28 ) }
    dend_54 { pt3dadd( 22.1803, -182.741, -48.0851, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 96/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 11.6817, -86.0465, 16.4413, 0.83 ) }
    dend_44 { pt3dadd( 17.1617, -87.2465, 16.4413, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 98/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 11.6817, -86.0465, 16.4413, 0.83 ) }
    dend_41 { pt3dadd( 10.3278, -88.4988, 17.0492, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( 9.34975, -90.4916, 17.5484, 0.55 ) }
    dend_41 { pt3dadd( 8.9809, -91.3872, 17.805, 0.55 ) }
    dend_41 { pt3dadd( 8.60868, -92.4226, 18.1083, 0.55 ) }
    dend_41 { pt3dadd( 7.89571, -94.776, 18.8125, 0.55 ) }
    dend_41 { pt3dadd( 7.37144, -96.6442, 19.3805, 0.55 ) }
    dend_41 { pt3dadd( 6.72559, -99.4918, 20.2141, 0.55 ) }
    dend_41 { pt3dadd( 6.31078, -101.654, 20.7714, 0.55 ) }
    dend_41 { pt3dadd( 6.11846, -102.728, 20.9832, 0.55 ) }
    dend_41 { pt3dadd( 5.71617, -105.315, 21.326, 0.55 ) }
    dend_41 { pt3dadd( 5.48993, -106.979, 21.5231, 0.55 ) }
    dend_41 { pt3dadd( 5.00392, -110.469, 21.8211, 0.83 ) }
    dend_41 { pt3dadd( 4.44318, -113.807, 21.9844, 0.55 ) }
    dend_41 { pt3dadd( 3.81009, -117.13, 22.056, 0.55 ) }
    dend_41 { pt3dadd( 3.20709, -120.022, 22.1297, 0.55 ) }
    dend_41 { pt3dadd( 2.29665, -124.049, 22.2924, 0.55 ) }
    dend_41 { pt3dadd( 1.7567, -126.151, 22.423, 0.55 ) }
    dend_41 { pt3dadd( 1.14272, -128.28, 22.6666, 0.55 ) }
    dend_41 { pt3dadd( 0.190096, -131.472, 23.2169, 0.55 ) }
    dend_41 { pt3dadd( -0.722726, -134.481, 23.877, 0.55 ) }
    dend_41 { pt3dadd( -1.42846, -136.478, 24.3657, 1.11 ) }
    dend_41 { pt3dadd( -2.86789, -140.04, 25.2232, 0.83 ) }
    dend_41 { pt3dadd( -3.58562, -141.64, 25.7493, 0.55 ) }
    dend_41 { pt3dadd( -4.3197, -143.111, 26.3995, 0.83 ) }
    dend_41 { pt3dadd( -5.169, -144.41, 27.1987, 0.83 ) }
    dend_41 { pt3dadd( -6.63668, -146.191, 28.4906, 0.55 ) }
    dend_41 { pt3dadd( -8.56719, -148.081, 30.0849, 0.83 ) }
    dend_41 { pt3dadd( -10.7807, -149.742, 31.6993, 0.55 ) }
    dend_41 { pt3dadd( -12.9426, -150.959, 32.9944, 0.28 ) }
    dend_41 { pt3dadd( -15.6665, -152.245, 34.4222, 0.83 ) }
    dend_41 { pt3dadd( -18.4303, -153.358, 35.6644, 0.55 ) }
    dend_41 { pt3dadd( -19.8073, -153.838, 36.2325, 0.55 ) }
    dend_41 { pt3dadd( -22.8604, -154.673, 37.2612, 0.83 ) }
    dend_41 { pt3dadd( -25.7391, -155.373, 37.9081, 0.55 ) }
    dend_41 { pt3dadd( -28.5935, -156.069, 38.3031, 0.55 ) }
    dend_41 { pt3dadd( -31.8671, -156.731, 38.5928, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 171.358, -63.0251, -66.8432, 0.55 ) }
    dend_36 { pt3dadd( 172.7, -63.7782, -68.0063, 0.55 ) }
    dend_36 { pt3dadd( 174.664, -64.726, -69.449, 0.28 ) }
    dend_36 { pt3dadd( 175.921, -65.3229, -70.4345, 0.83 ) }
    dend_36 { pt3dadd( 176.75, -65.6971, -71.1243, 0.83 ) }
    dend_36 { pt3dadd( 178.657, -66.5534, -72.719, 0.55 ) }
    dend_36 { pt3dadd( 179.11, -66.7372, -73.1072, 0.55 ) }
    dend_36 { pt3dadd( 180.972, -67.266, -74.6794, 0.55 ) }
    dend_36 { pt3dadd( 182.841, -67.6691, -76.2172, 0.83 ) }
    dend_36 { pt3dadd( 184.21, -67.8726, -77.3174, 0.28 ) }
    dend_36 { pt3dadd( 184.818, -67.9388, -77.8157, 0.55 ) }
    dend_36 { pt3dadd( 186.794, -68.0684, -79.3283, 0.28 ) }
    dend_36 { pt3dadd( 189.615, -68.3119, -81.4837, 0.55 ) }
    dend_36 { pt3dadd( 191.862, -68.5504, -83.1683, 0.28 ) }
    dend_36 { pt3dadd( 192.869, -68.6484, -83.8809, 0.83 ) }
    dend_36 { pt3dadd( 195.636, -68.9403, -85.8138, 0.28 ) }
    dend_36 { pt3dadd( 197.458, -69.1594, -87.0955, 0.83 ) }
    dend_36 { pt3dadd( 200.559, -69.702, -89.2369, 0.28 ) }
    dend_36 { pt3dadd( 202.207, -70.0999, -90.4181, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 54/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 171.358, -63.0251, -66.8432, 0.28 ) }
    dend_35 { pt3dadd( 171.887, -64.7174, -66.5759, 0.28 ) }
    dend_35 { pt3dadd( 172.357, -66.2226, -66.3381, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_16 (entry count 57/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -29.3449, -79.2492, 0.482293, 0.55 ) }
    dend_28 { pt3dadd( -29.7646, -83.0859, 0.23679, 0.55 ) }
    dend_28 { pt3dadd( -30.1422, -86.2784, 0.0336248, 0.55 ) }
    dend_28 { pt3dadd( -30.3865, -88.2193, -0.112337, 0.83 ) }
    dend_28 { pt3dadd( -30.7668, -90.8567, -0.351265, 0.55 ) }
    dend_28 { pt3dadd( -30.9604, -92.4447, -0.606317, 0.83 ) }
    dend_28 { pt3dadd( -31.21, -94.1605, -0.992346, 0.28 ) }
    dend_28 { pt3dadd( -31.4058, -95.4629, -1.42733, 0.55 ) }
    dend_28 { pt3dadd( -31.7234, -97.6143, -2.28208, 0.28 ) }
    dend_28 { pt3dadd( -32.1331, -100.331, -3.54066, 0.83 ) }
    dend_28 { pt3dadd( -32.5654, -103.755, -5.24334, 0.28 ) }
    dend_28 { pt3dadd( -33.0354, -108.11, -7.48557, 0.83 ) }
    dend_28 { pt3dadd( -33.25, -110.546, -8.8233, 0.28 ) }
    dend_28 { pt3dadd( -33.3293, -112.069, -9.71458, 0.55 ) }
    dend_28 { pt3dadd( -33.3742, -114.288, -11.0654, 0.28 ) }
    dend_28 { pt3dadd( -33.3373, -116.418, -12.3809, 0.55 ) }
    dend_28 { pt3dadd( -33.2435, -117.959, -13.2522, 0.55 ) }
    dend_28 { pt3dadd( -32.8416, -120.798, -14.8764, 0.28 ) }
    dend_28 { pt3dadd( -32.7338, -121.618, -15.2824, 0.55 ) }
    dend_28 { pt3dadd( -32.6406, -122.657, -15.7628, 0.28 ) }
    dend_28 { pt3dadd( -32.6295, -123.169, -15.971, 0.83 ) }
    dend_28 { pt3dadd( -32.7297, -125.264, -16.897, 0.28 ) }
    dend_28 { pt3dadd( -32.9391, -126.758, -17.4718, 0.83 ) }
    dend_28 { pt3dadd( -33.4387, -129.019, -18.2696, 0.28 ) }
    dend_28 { pt3dadd( -33.8369, -130.838, -18.9575, 0.55 ) }
    dend_28 { pt3dadd( -34.259, -132.726, -19.7386, 0.28 ) }
    dend_28 { pt3dadd( -34.6308, -134.368, -20.4254, 0.55 ) }
    dend_28 { pt3dadd( -34.9904, -136.079, -21.1818, 0.28 ) }
    dend_28 { pt3dadd( -35.1178, -137.16, -21.6561, 0.55 ) }
    dend_28 { pt3dadd( -35.1931, -138.288, -22.1843, 0.28 ) }
    dend_28 { pt3dadd( -35.2138, -139.042, -22.5195, 0.55 ) }
    dend_28 { pt3dadd( -35.1802, -140.512, -23.2117, 0.28 ) }
    dend_28 { pt3dadd( -35.1073, -141.685, -23.6974, 0.55 ) }
    dend_28 { pt3dadd( -34.9534, -142.953, -24.4413, 0.28 ) }
    dend_28 { pt3dadd( -34.7591, -144.647, -25.4855, 0.55 ) }
    dend_28 { pt3dadd( -34.6356, -145.709, -26.2244, 0.83 ) }
    dend_28 { pt3dadd( -34.4163, -147.297, -27.3098, 0.28 ) }
    dend_28 { pt3dadd( -34.1344, -149.203, -28.659, 0.55 ) }
    dend_28 { pt3dadd( -33.2451, -154.053, -32.2489, 0.28 ) }
    dend_28 { pt3dadd( -32.9577, -155.466, -33.2436, 0.28 ) }
    dend_28 { pt3dadd( -32.3293, -157.746, -34.98, 0.83 ) }
    dend_28 { pt3dadd( -31.2077, -160.916, -37.5947, 0.28 ) }
    dend_28 { pt3dadd( -30.8284, -161.831, -38.4192, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -29.9438, -163.643, -40.1277, 0.83 ) }
    dend_28 { pt3dadd( -28.6844, -165.762, -41.981, 0.28 ) }
    dend_28 { pt3dadd( -26.3292, -168.997, -45.0507, 0.55 ) }
    dend_28 { pt3dadd( -24.8572, -170.622, -46.568, 0.28 ) }
    dend_28 { pt3dadd( -23.7762, -171.683, -47.5149, 0.55 ) }
    dend_28 { pt3dadd( -22.2474, -173.152, -48.6146, 0.28 ) }
    dend_28 { pt3dadd( -21.8553, -173.56, -48.8695, 0.28 ) }
    dend_28 { pt3dadd( -20.4557, -175.017, -49.6583, 0.55 ) }
    dend_28 { pt3dadd( -18.4858, -177.184, -50.2852, 0.28 ) }
    dend_28 { pt3dadd( -17.3154, -178.458, -50.5428, 0.55 ) }
    dend_28 { pt3dadd( -16.4982, -179.241, -50.6929, 0.55 ) }
    dend_28 { pt3dadd( -15.1938, -180.436, -50.8946, 0.55 ) }
    dend_28 { pt3dadd( -14.2133, -181.408, -51.0144, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 13/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -29.3449, -79.2492, 0.482293, 1.11 ) }
    dend_17 { pt3dadd( -29.5917, -79.5743, 0.792799, 1.11 ) }
    dend_17 { pt3dadd( -32.24, -83.0625, 4.12468, 1.11 ) }
    dend_17 { pt3dadd( -33.1846, -84.3067, 5.31315, 0.55 ) }
    dend_17 { pt3dadd( -34.578, -86.1421, 7.06622, 0.55 ) }
    dend_17 { pt3dadd( -36.156, -88.2205, 9.05152, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 19/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -117.727, -75.2232, -119.685, 0.28 ) }
    dend_9 { pt3dadd( -118.795, -74.9566, -121.181, 0.28 ) }
    dend_9 { pt3dadd( -120.076, -74.6367, -122.977, 0.55 ) }
    dend_9 { pt3dadd( -122.92, -73.9271, -126.96, 0.28 ) }
    dend_9 { pt3dadd( -125.105, -73.3816, -130.022, 0.55 ) }
    dend_9 { pt3dadd( -126.11, -73.1308, -131.43, 0.28 ) }
    dend_9 { pt3dadd( -127.52, -72.7789, -133.404, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -117.727, -75.2232, -119.685, 0.55 ) }
    dend_8 { pt3dadd( -119.273, -74.2979, -123.199, 0.55 ) }
    dend_8 { pt3dadd( -121.067, -73.2248, -127.275, 0.55 ) }
    dend_8 { pt3dadd( -121.857, -72.7524, -129.069, 0.28 ) }
    dend_8 { pt3dadd( -122.625, -72.2928, -130.814, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -48.6562, -142.589, -144.223, 0.83 ) }
    dend_6 { pt3dadd( -48.0936, -143.824, -146.619, 0.83 ) }
    dend_6 { pt3dadd( -46.9573, -146.319, -151.459, 0.55 ) }
    dend_6 { pt3dadd( -46.0028, -148.415, -155.523, 0.83 ) }
    dend_6 { pt3dadd( -45.5899, -149.321, -157.282, 0.55 ) }
    dend_6 { pt3dadd( -44.8889, -150.86, -160.267, 0.28 ) }
    dend_6 { pt3dadd( -44.3952, -151.944, -162.37, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 38/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -48.6562, -142.589, -144.223, 0.55 ) }
    dend_5 { pt3dadd( -45.7833, -143.249, -144.866, 0.55 ) }
    dend_5 { pt3dadd( -43.6599, -143.736, -145.341, 0.55 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 41/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 26.0776, 51.6875, 47.8454, 0.83 ) }
    dend_73 { pt3dadd( 27.7076, 52.1375, 47.8454, 0.83 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 43/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 26.0776, 51.6875, 47.8454, 0.83 ) }
    dend_72 { pt3dadd( 24.2859, 52.5916, 49.5985, 0.83 ) }
    dend_72 { pt3dadd( 22.2635, 53.6452, 51.5075, 0.83 ) }
    dend_72 { pt3dadd( 19.1122, 55.2573, 54.3386, 0.55 ) }
    dend_72 { pt3dadd( 16.8582, 56.4222, 56.2245, 0.28 ) }
    dend_72 { pt3dadd( 15.8535, 56.9635, 57.0105, 0.55 ) }
    dend_72 { pt3dadd( 13.8893, 58.0667, 58.485, 0.28 ) }
    dend_72 { pt3dadd( 13.2093, 58.4558, 58.8797, 0.28 ) }
    dend_72 { pt3dadd( 12.5424, 58.8574, 59.1812, 0.55 ) }
    dend_72 { pt3dadd( 11.3144, 59.7474, 59.5947, 0.55 ) }
    dend_72 { pt3dadd( 10.3296, 60.4601, 59.7934, 0.83 ) }
    dend_72 { pt3dadd( 9.70868, 60.9397, 59.8355, 0.55 ) }
    dend_72 { pt3dadd( 8.63752, 61.805, 59.8591, 0.55 ) }
    dend_72 { pt3dadd( 7.72786, 62.5569, 59.8933, 0.83 ) }
    dend_72 { pt3dadd( 5.09484, 64.8058, 60.0388, 0.55 ) }
    dend_72 { pt3dadd( 2.6182, 67.0877, 60.1599, 0.28 ) }
    dend_72 { pt3dadd( 1.47419, 68.2253, 60.2063, 0.83 ) }
    dend_72 { pt3dadd( -0.170391, 69.9378, 60.3312, 0.28 ) }
    dend_72 { pt3dadd( -1.27559, 71.1066, 60.4634, 0.28 ) }
    dend_72 { pt3dadd( -1.84684, 71.7195, 60.5908, 0.55 ) }
    dend_72 { pt3dadd( -3.70503, 73.8033, 61.2611, 0.28 ) }
    dend_72 { pt3dadd( -4.66476, 74.824, 61.7801, 0.55 ) }
    dend_72 { pt3dadd( -5.82204, 76.172, 62.5208, 0.28 ) }
    dend_72 { pt3dadd( -7.08622, 77.6455, 63.3379, 0.28 ) }
    dend_72 { pt3dadd( -8.34316, 79.072, 64.2501, 0.28 ) }
    dend_72 { pt3dadd( -9.1216, 79.9264, 64.8763, 0.55 ) }
    dend_72 { pt3dadd( -10.3307, 81.1332, 66.0191, 0.28 ) }
    dend_72 { pt3dadd( -12.2031, 83.148, 67.9715, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 71/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -125.064, -30.4825, 60.2747, 0.55 ) }
    dend_66 { pt3dadd( -124.458, -30.9044, 59.8426, 0.55 ) }
    dend_66 { pt3dadd( -123.647, -31.4701, 59.263, 0.55 ) }
    dend_66 { pt3dadd( -122.063, -32.5743, 58.1319, 0.28 ) }
    dend_66 { pt3dadd( -121.082, -33.258, 57.4315, 0.83 ) }
    dend_66 { pt3dadd( -119.938, -34.0552, 56.6149, 0.28 ) }
    dend_66 { pt3dadd( -118.373, -35.1465, 55.497, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 78/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -125.064, -30.4825, 60.2747, 0.28 ) }
    dend_65 { pt3dadd( -124.569, -32.7922, 61.8409, 0.28 ) }
    dend_65 { pt3dadd( -123.983, -34.7951, 62.9866, 0.55 ) }
    dend_65 { pt3dadd( -123.609, -35.9967, 63.5582, 0.28 ) }
    dend_65 { pt3dadd( -123.18, -37.3716, 64.2123, 0.55 ) }
    dend_65 { pt3dadd( -122.729, -38.8194, 64.901, 0.28 ) }
    dend_65 { pt3dadd( -122.078, -40.9095, 65.8953, 0.55 ) }
    dend_65 { pt3dadd( -121.543, -42.1539, 66.2695, 0.28 ) }
    dend_65 { pt3dadd( -121.004, -43.1216, 66.4903, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 87/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -131.34, -48.0929, 37.951, 0.28 ) }
    dend_63 { pt3dadd( -133.823, -49.7734, 37.9103, 0.28 ) }
    dend_63 { pt3dadd( -135.785, -51.1019, 37.8781, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 90/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -131.34, -48.0929, 37.951, 0.28 ) }
    dend_62 { pt3dadd( -132.345, -51.7487, 38.4391, 0.28 ) }
    dend_62 { pt3dadd( -133.049, -54.0919, 38.8308, 0.28 ) }
    dend_62 { pt3dadd( -133.626, -55.9298, 39.2009, 0.83 ) }
    dend_62 { pt3dadd( -134.353, -58.1792, 39.6801, 0.28 ) }
    dend_62 { pt3dadd( -134.726, -59.3267, 39.9534, 0.83 ) }
    dend_62 { pt3dadd( -135.662, -62.2324, 40.6551, 0.28 ) }
    dend_62 { pt3dadd( -135.789, -62.5989, 40.7456, 1.11 ) }
    dend_62 { pt3dadd( -136.587, -64.8443, 41.4135, 0.28 ) }
    dend_62 { pt3dadd( -137.002, -65.9474, 41.8014, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_62 { pt3dadd( -137.663, -67.739, 42.5349, 0.28 ) }
    dend_62 { pt3dadd( -138.329, -69.8654, 43.334, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 2/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 17.1617, -87.2465, 16.4413, 0.55 ) }
    dend_46 { pt3dadd( 17.4088, -88.6385, 16.4413, 0.55 ) }
    dend_46 { pt3dadd( 17.8025, -91.8499, 16.4413, 0.55 ) }
    dend_46 { pt3dadd( 18.0718, -94.0702, 16.4456, 0.55 ) }
    dend_46 { pt3dadd( 18.3534, -96.8211, 16.4533, 0.55 ) }
    dend_46 { pt3dadd( 18.6915, -101.025, 16.4667, 0.55 ) }
    dend_46 { pt3dadd( 18.9409, -103.392, 16.5091, 0.55 ) }
    dend_46 { pt3dadd( 19.1365, -104.999, 16.5419, 0.55 ) }
    dend_46 { pt3dadd( 19.5886, -108.474, 16.6035, 0.55 ) }
    dend_46 { pt3dadd( 19.7621, -109.848, 16.5665, 0.55 ) }
    dend_46 { pt3dadd( 20.0212, -112.379, 16.4213, 0.55 ) }
    dend_46 { pt3dadd( 20.3703, -116.221, 16.0645, 0.83 ) }
    dend_46 { pt3dadd( 20.7221, -119.015, 15.7477, 0.83 ) }
    dend_46 { pt3dadd( 21.3491, -123.128, 15.1959, 0.55 ) }
    dend_46 { pt3dadd( 22.0382, -127.38, 14.5577, 0.83 ) }
    dend_46 { pt3dadd( 22.8917, -132.369, 13.9381, 0.83 ) }
    dend_46 { pt3dadd( 23.2863, -134.806, 13.6884, 0.55 ) }
    dend_46 { pt3dadd( 23.7306, -137.996, 13.4732, 0.83 ) }
    dend_46 { pt3dadd( 24.0881, -140.409, 13.4616, 0.55 ) }
    dend_46 { pt3dadd( 24.5346, -142.853, 13.6817, 0.55 ) }
    dend_46 { pt3dadd( 25.1727, -146.333, 14.4156, 0.28 ) }
    dend_46 { pt3dadd( 25.4236, -147.728, 14.865, 0.83 ) }
    dend_46 { pt3dadd( 25.6864, -149.683, 15.6033, 0.83 ) }
    dend_46 { pt3dadd( 25.7819, -150.743, 16.0143, 0.83 ) }
    dend_46 { pt3dadd( 25.8313, -152.663, 16.7326, 0.55 ) }
    dend_46 { pt3dadd( 25.817, -155.501, 17.6479, 0.55 ) }
    dend_46 { pt3dadd( 25.8209, -159.966, 18.8133, 0.83 ) }
    dend_46 { pt3dadd( 25.7554, -162.184, 19.3301, 0.28 ) }
    dend_46 { pt3dadd( 25.6982, -163.543, 19.6067, 0.55 ) }
    dend_46 { pt3dadd( 25.5382, -166.389, 20.1111, 0.55 ) }
    dend_46 { pt3dadd( 25.3711, -168.595, 20.3968, 0.83 ) }
    dend_46 { pt3dadd( 25.2349, -171.488, 20.6646, 0.28 ) }
    dend_46 { pt3dadd( 25.0298, -175.958, 20.8733, 0.83 ) }
    dend_46 { pt3dadd( 24.8602, -179.375, 21.0712, 0.55 ) }
    dend_46 { pt3dadd( 24.824, -181.737, 21.2229, 0.55 ) }
    dend_46 { pt3dadd( 24.947, -184.416, 21.4092, 0.55 ) }
    dend_46 { pt3dadd( 25.1115, -186.364, 21.6183, 0.55 ) }
    dend_46 { pt3dadd( 25.3273, -187.899, 21.8308, 0.55 ) }
    dend_46 { pt3dadd( 25.7065, -189.708, 22.1794, 0.83 ) }
    dend_46 { pt3dadd( 26.0487, -191.2, 22.68, 0.83 ) }
    dend_46 { pt3dadd( 26.4067, -192.445, 23.2356, 0.28 ) }
    dend_46 { pt3dadd( 27.6119, -196.356, 25.0528, 0.83 ) }
    dend_46 { pt3dadd( 28.2157, -198.229, 25.8117, 0.83 ) }
    dend_46 { pt3dadd( 28.986, -200.374, 26.5048, 0.83 ) }
    dend_46 { pt3dadd( 30.5024, -204.58, 27.9185, 0.83 ) }
    dend_46 { pt3dadd( 30.945, -205.925, 28.4072, 0.83 ) }
    dend_46 { pt3dadd( 31.7609, -208.467, 29.3238, 0.55 ) }
    dend_46 { pt3dadd( 32.5252, -210.723, 30.0933, 0.83 ) }
    dend_46 { pt3dadd( 33.0189, -212.065, 30.5771, 0.83 ) }
    dend_46 { pt3dadd( 35.2875, -217.018, 32.2184, 0.83 ) }
    dend_46 { pt3dadd( 35.3624, -217.188, 32.239, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 53/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 17.1617, -87.2465, 16.4413, 0.55 ) }
    dend_45 { pt3dadd( 18.5021, -86.4114, 17.2153, 0.55 ) }
    dend_45 { pt3dadd( 20.4786, -85.18, 18.3567, 0.28 ) }
    dend_45 { pt3dadd( 21.8909, -84.3002, 19.1722, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 57/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -31.8671, -156.731, 38.5928, 0.28 ) }
    dend_43 { pt3dadd( -34.9333, -157.443, 39.9215, 0.28 ) }
    dend_43 { pt3dadd( -39.4933, -158.405, 42.0139, 0.55 ) }
    dend_43 { pt3dadd( -41.9442, -158.937, 43.1452, 0.28 ) }
    dend_43 { pt3dadd( -45.4048, -159.73, 44.7351, 0.55 ) }
    dend_43 { pt3dadd( -50.5172, -160.926, 47.0217, 0.28 ) }
    dend_43 { pt3dadd( -53.1205, -161.544, 48.1658, 0.28 ) }
    dend_43 { pt3dadd( -54.3145, -161.895, 48.7578, 0.83 ) }
    dend_43 { pt3dadd( -56.0358, -162.429, 49.6024, 0.28 ) }
    dend_43 { pt3dadd( -56.719, -162.674, 49.912, 0.55 ) }
    dend_43 { pt3dadd( -58.1756, -163.166, 50.5354, 0.28 ) }
    dend_43 { pt3dadd( -58.1756, -163.166, 50.5354, 0.55 ) }
    dend_43 { pt3dadd( -59.9263, -163.673, 50.9773, 0.28 ) }
    dend_43 { pt3dadd( -62.1202, -164.464, 51.2815, 0.55 ) }
    dend_43 { pt3dadd( -63.0399, -164.848, 51.3158, 0.28 ) }
    dend_43 { pt3dadd( -63.7843, -165.219, 51.2465, 0.55 ) }
    dend_43 { pt3dadd( -65.7831, -166.368, 50.925, 0.28 ) }
    dend_43 { pt3dadd( -67.4082, -167.431, 50.7522, 0.55 ) }
    dend_43 { pt3dadd( -69.9414, -169.312, 50.3609, 0.28 ) }
    dend_43 { pt3dadd( -71.8319, -170.901, 49.9569, 0.83 ) }
    dend_43 { pt3dadd( -73.6723, -172.558, 49.6186, 0.28 ) }
    dend_43 { pt3dadd( -74.6569, -173.472, 49.4861, 0.28 ) }
    dend_43 { pt3dadd( -76.943, -175.69, 49.4423, 0.55 ) }
    dend_43 { pt3dadd( -78.6018, -177.262, 49.7149, 0.28 ) }
    dend_43 { pt3dadd( -79.5546, -178.129, 50.0475, 0.83 ) }
    dend_43 { pt3dadd( -81.1611, -179.605, 50.5904, 0.28 ) }
    dend_43 { pt3dadd( -81.9407, -180.39, 50.8619, 0.55 ) }
    dend_43 { pt3dadd( -83.5781, -182.248, 51.4069, 0.28 ) }
    dend_43 { pt3dadd( -84.0904, -182.892, 51.5703, 0.55 ) }
    dend_43 { pt3dadd( -85.1479, -184.302, 52.0254, 0.28 ) }
    dend_43 { pt3dadd( -86.7974, -186.687, 52.7291, 0.55 ) }
    dend_43 { pt3dadd( -87.7506, -188.014, 53.0651, 0.83 ) }
    dend_43 { pt3dadd( -89.037, -189.726, 53.5367, 0.28 ) }
    dend_43 { pt3dadd( -89.3719, -190.15, 53.652, 0.55 ) }
    dend_43 { pt3dadd( -90.9386, -192.123, 54.1512, 0.28 ) }
    dend_43 { pt3dadd( -92.4107, -193.97, 54.582, 0.83 ) }
    dend_43 { pt3dadd( -94.6628, -196.85, 55.3028, 0.55 ) }
    dend_43 { pt3dadd( -96.1171, -198.843, 55.7308, 0.28 ) }
    dend_43 { pt3dadd( -96.9097, -200.162, 55.9677, 0.83 ) }
    dend_43 { pt3dadd( -97.5606, -201.721, 56.2482, 0.28 ) }
    dend_43 { pt3dadd( -97.7455, -203.545, 56.5438, 0.55 ) }
    dend_43 { pt3dadd( -97.5083, -204.996, 56.7829, 0.55 ) }
    dend_43 { pt3dadd( -96.4936, -207.791, 57.2279, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_43 { pt3dadd( -95.4614, -210.046, 57.5999, 0.55 ) }
    dend_43 { pt3dadd( -94.3337, -212.18, 58.0318, 0.55 ) }
    dend_43 { pt3dadd( -92.6888, -214.996, 58.7544, 0.55 ) }
    dend_43 { pt3dadd( -91.9543, -216.161, 59.0805, 0.28 ) }
    dend_43 { pt3dadd( -91.3468, -217.195, 59.3847, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 5/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -31.8671, -156.731, 38.5928, 0.28 ) }
    dend_42 { pt3dadd( -32.437, -158.667, 38.5945, 0.28 ) }
    dend_42 { pt3dadd( -33.2449, -161.411, 38.5969, 0.55 ) }
    dend_42 { pt3dadd( -34.3972, -165.325, 38.6003, 0.28 ) }
    dend_42 { pt3dadd( -34.4768, -165.595, 38.6005, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 10/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 202.207, -70.0999, -90.4181, 0.28 ) }
    dend_38 { pt3dadd( 204.603, -70.965, -90.2084, 0.28 ) }
    dend_38 { pt3dadd( 205.83, -71.4078, -90.1011, 0.83 ) }
    dend_38 { pt3dadd( 209.034, -72.5646, -89.8208, 0.28 ) }
    dend_38 { pt3dadd( 209.774, -72.8316, -89.7561, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 15/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 202.207, -70.0999, -90.4181, 0.28 ) }
    dend_37 { pt3dadd( 203.43, -70.5214, -92.0145, 0.28 ) }
    dend_37 { pt3dadd( 203.759, -70.6349, -92.4443, 0.55 ) }
    dend_37 { pt3dadd( 205.369, -71.1897, -94.5457, 0.28 ) }
    dend_37 { pt3dadd( 206.996, -71.7503, -96.6691, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 20/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -36.156, -88.2205, 9.05152, 1.38 ) }
    dend_19 { pt3dadd( -37.4854, -92.3775, 8.56441, 1.38 ) }
    dend_19 { pt3dadd( -38.6127, -94.7304, 8.2101, 0.55 ) }
    dend_19 { pt3dadd( -39.0645, -95.4814, 8.06978, 0.55 ) }
    dend_19 { pt3dadd( -40.8674, -98.264, 7.49102, 1.11 ) }
    dend_19 { pt3dadd( -41.8898, -99.8818, 7.24043, 0.55 ) }
    dend_19 { pt3dadd( -43.2282, -102.043, 6.99095, 0.55 ) }
    dend_19 { pt3dadd( -45.4675, -105.413, 6.65637, 1.11 ) }
    dend_19 { pt3dadd( -46.3684, -106.622, 6.68372, 0.55 ) }
    dend_19 { pt3dadd( -47.6583, -108.174, 6.99031, 0.55 ) }
    dend_19 { pt3dadd( -49.8216, -110.447, 7.84917, 0.55 ) }
    dend_19 { pt3dadd( -51.4026, -112.066, 8.5965, 0.55 ) }
    dend_19 { pt3dadd( -52.4672, -113.127, 9.19955, 0.55 ) }
    dend_19 { pt3dadd( -55.6572, -116.086, 11.2417, 0.83 ) }
    dend_19 { pt3dadd( -59.2729, -119.111, 13.587, 0.55 ) }
    dend_19 { pt3dadd( -60.81, -120.349, 14.575, 0.55 ) }
    dend_19 { pt3dadd( -63.2321, -122.103, 16.0774, 0.55 ) }
    dend_19 { pt3dadd( -64.7909, -123.236, 17.0745, 0.55 ) }
    dend_19 { pt3dadd( -66.5574, -124.711, 18.2382, 0.83 ) }
    dend_19 { pt3dadd( -67.6969, -125.837, 18.9494, 0.55 ) }
    dend_19 { pt3dadd( -69.9628, -127.974, 20.377, 0.55 ) }
    dend_19 { pt3dadd( -71.8575, -129.846, 21.6618, 0.28 ) }
    dend_19 { pt3dadd( -73.1391, -131.194, 22.665, 0.28 ) }
    dend_19 { pt3dadd( -74.8298, -133.088, 24.0283, 0.83 ) }
    dend_19 { pt3dadd( -77.0275, -135.44, 25.7908, 0.83 ) }
    dend_19 { pt3dadd( -78.0205, -136.333, 26.4851, 0.55 ) }
    dend_19 { pt3dadd( -80.4432, -138.203, 27.921, 0.83 ) }
    dend_19 { pt3dadd( -82.7001, -140.179, 29.2967, 0.55 ) }
    dend_19 { pt3dadd( -83.0703, -140.491, 29.5645, 0.55 ) }
    dend_19 { pt3dadd( -83.9804, -141.254, 30.2812, 0.55 ) }
    dend_19 { pt3dadd( -86.6326, -143.927, 32.6951, 0.83 ) }
    dend_19 { pt3dadd( -88.0599, -145.688, 34.0022, 0.55 ) }
    dend_19 { pt3dadd( -90.315, -148.782, 35.7806, 0.83 ) }
    dend_19 { pt3dadd( -92.4859, -151.872, 37.5149, 0.55 ) }
    dend_19 { pt3dadd( -93.1738, -152.917, 38.0966, 0.55 ) }
    dend_19 { pt3dadd( -94.1578, -154.552, 38.9932, 0.83 ) }
    dend_19 { pt3dadd( -96.3761, -158.579, 41.2291, 0.83 ) }
    dend_19 { pt3dadd( -97.6866, -160.885, 42.402, 0.83 ) }
    dend_19 { pt3dadd( -101.25, -166.247, 44.4074, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 59/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -36.156, -88.2205, 9.05152, 0.55 ) }
    dend_18 { pt3dadd( -39.6914, -85.5834, 7.24026, 0.55 ) }
    dend_18 { pt3dadd( -43.0643, -83.1987, 5.99222, 0.28 ) }
    dend_18 { pt3dadd( -43.8928, -82.7144, 5.70676, 0.55 ) }
    dend_18 { pt3dadd( -45.3723, -81.9775, 5.25286, 0.28 ) }
    dend_18 { pt3dadd( -46.5949, -81.4072, 4.92589, 0.55 ) }
    dend_18 { pt3dadd( -48.4368, -80.5949, 4.45406, 0.28 ) }
    dend_18 { pt3dadd( -50.1132, -79.9301, 4.00922, 0.28 ) }
    dend_18 { pt3dadd( -52.3173, -79.1191, 3.52599, 0.55 ) }
    dend_18 { pt3dadd( -53.9164, -78.5329, 3.12564, 0.55 ) }
    dend_18 { pt3dadd( -56.1868, -77.7147, 2.29003, 0.55 ) }
    dend_18 { pt3dadd( -57.2855, -77.3352, 1.77521, 0.28 ) }
    dend_18 { pt3dadd( -57.7899, -77.1713, 1.45355, 0.55 ) }
    dend_18 { pt3dadd( -60.5686, -76.2509, -0.617442, 0.28 ) }
    dend_18 { pt3dadd( -62.2586, -75.7097, -2.18075, 0.83 ) }
    dend_18 { pt3dadd( -65.1283, -74.8994, -5.14102, 0.28 ) }
    dend_18 { pt3dadd( -65.8893, -74.7065, -5.98331, 0.55 ) }
    dend_18 { pt3dadd( -68.3476, -74.1196, -8.8106, 0.28 ) }
    dend_18 { pt3dadd( -69.0741, -73.9677, -9.67808, 0.83 ) }
    dend_18 { pt3dadd( -73.1614, -73.3578, -14.7732, 0.28 ) }
    dend_18 { pt3dadd( -73.8342, -73.2582, -15.691, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 80/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -127.52, -72.7789, -133.404, 0.28 ) }
    dend_11 { pt3dadd( -128.646, -72.3396, -135.567, 0.28 ) }
    dend_11 { pt3dadd( -128.979, -71.7637, -137.116, 0.83 ) }
    dend_11 { pt3dadd( -129.51, -70.8468, -139.581, 0.55 ) }
    dend_11 { pt3dadd( -130.002, -69.9981, -141.863, 0.55 ) }
    dend_11 { pt3dadd( -130.405, -69.3029, -143.733, 1.11 ) }
    dend_11 { pt3dadd( -131.633, -67.182, -149.436, 0.28 ) }
    dend_11 { pt3dadd( -131.695, -66.2313, -151.306, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 88/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -127.52, -72.7789, -133.404, 0.55 ) }
    dend_10 { pt3dadd( -128.35, -70.089, -137.294, 0.55 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 90/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 27.7076, 52.1375, 47.8454, 0.55 ) }
    dend_75 { pt3dadd( 28.3928, 52.0652, 48.7113, 0.55 ) }
    dend_75 { pt3dadd( 29.8324, 51.8241, 50.7129, 0.55 ) }
    dend_75 { pt3dadd( 32.3779, 51.3977, 54.2521, 0.55 ) }
    dend_75 { pt3dadd( 33.7388, 51.1697, 56.1443, 0.55 ) }
    dend_75 { pt3dadd( 35.201, 50.9248, 58.1774, 0.28 ) }
    dend_75 { pt3dadd( 37.2682, 50.5785, 61.0518, 0.55 ) }
    dend_75 { pt3dadd( 38.8999, 50.375, 63.5778, 0.55 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 98/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 27.7076, 52.1375, 47.8454, 0.55 ) }
    dend_74 { pt3dadd( 28.5599, 54.9697, 49.9023, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_74 { pt3dadd( 29.0571, 56.1027, 50.8643, 0.28 ) }
    dend_74 { pt3dadd( 30.3028, 58.0562, 52.9167, 0.55 ) }
    dend_74 { pt3dadd( 31.213, 59.091, 54.1847, 0.83 ) }
    dend_74 { pt3dadd( 32.4737, 60.4004, 55.8447, 0.55 ) }
    dend_74 { pt3dadd( 33.4018, 61.389, 57.1291, 0.83 ) }
    dend_74 { pt3dadd( 34.9699, 63.0182, 59.2164, 0.83 ) }
    dend_74 { pt3dadd( 36.4743, 64.4268, 60.7514, 0.83 ) }
    dend_74 { pt3dadd( 38.0076, 65.9018, 62.1913, 0.55 ) }
    dend_74 { pt3dadd( 39.447, 67.7492, 63.6292, 0.83 ) }
    dend_74 { pt3dadd( 40.6599, 69.4803, 64.8503, 0.28 ) }
    dend_74 { pt3dadd( 42.1736, 71.9862, 66.3563, 0.55 ) }
    dend_74 { pt3dadd( 43.2479, 74.5042, 67.4801, 0.55 ) }
    dend_74 { pt3dadd( 44.5282, 78.6743, 68.9409, 0.28 ) }
    dend_74 { pt3dadd( 45.1936, 81.8183, 69.8688, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 14/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 35.3624, -217.188, 32.239, 0.28 ) }
    dend_52 { pt3dadd( 36.8984, -217.51, 32.3147, 0.28 ) }
    dend_52 { pt3dadd( 38.5511, -218.118, 32.168, 0.55 ) }
    dend_52 { pt3dadd( 40.0052, -218.729, 31.826, 0.55 ) }
    dend_52 { pt3dadd( 42.5959, -219.806, 31.1299, 0.83 ) }
    dend_52 { pt3dadd( 44.2095, -220.348, 30.7244, 0.55 ) }
    dend_52 { pt3dadd( 45.5369, -220.721, 30.4084, 0.55 ) }
    dend_52 { pt3dadd( 48.4099, -221.487, 29.6965, 0.55 ) }
    dend_52 { pt3dadd( 50.5909, -221.957, 29.099, 0.83 ) }
    dend_52 { pt3dadd( 53.7017, -222.536, 28.3675, 0.55 ) }
    dend_52 { pt3dadd( 56.7271, -222.84, 27.7914, 0.55 ) }
    dend_52 { pt3dadd( 58.3823, -222.875, 27.5675, 0.28 ) }
    dend_52 { pt3dadd( 59.2377, -222.842, 27.4865, 0.83 ) }
    dend_52 { pt3dadd( 60.9965, -222.647, 27.479, 0.28 ) }
    dend_52 { pt3dadd( 63.9889, -222.095, 27.9197, 0.55 ) }
    dend_52 { pt3dadd( 65.4532, -221.659, 28.3651, 0.55 ) }
    dend_52 { pt3dadd( 66.9316, -221.174, 28.9402, 0.55 ) }
    dend_52 { pt3dadd( 68.1857, -220.713, 29.5261, 0.28 ) }
    dend_52 { pt3dadd( 69.3833, -220.22, 30.1825, 0.55 ) }
    dend_52 { pt3dadd( 73.2972, -218.337, 32.7835, 0.28 ) }
    dend_52 { pt3dadd( 74.6053, -217.554, 33.7521, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 35/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 35.3624, -217.188, 32.239, 0.83 ) }
    dend_47 { pt3dadd( 35.9349, -222.416, 32.9738, 0.83 ) }
    dend_47 { pt3dadd( 36.4883, -227.47, 33.6842, 0.28 ) }
    dend_47 { pt3dadd( 36.6746, -229.172, 33.9234, 0.55 ) }
    dend_47 { pt3dadd( 36.9148, -231.365, 34.2316, 0.55 ) }
    dend_47 { pt3dadd( 37.1331, -233.359, 34.512, 0.55 ) }
    dend_47 { pt3dadd( 37.403, -235.824, 34.8584, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -101.25, -166.247, 44.4074, 0.83 ) }
    dend_21 { pt3dadd( -103.315, -168.463, 42.5707, 0.83 ) }
    dend_21 { pt3dadd( -105.104, -170.51, 40.7935, 0.83 ) }
    dend_21 { pt3dadd( -106.788, -172.436, 39.1207, 0.55 ) }
    dend_21 { pt3dadd( -108.775, -174.71, 37.1463, 0.83 ) }
    dend_21 { pt3dadd( -109.554, -175.601, 36.3727, 0.83 ) }
    dend_21 { pt3dadd( -112.19, -178.618, 33.7531, 0.83 ) }
    dend_21 { pt3dadd( -113.346, -179.922, 32.3377, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 50/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -101.25, -166.247, 44.4074, 0.28 ) }
    dend_20 { pt3dadd( -103.763, -165.495, 44.8592, 0.28 ) }
    dend_20 { pt3dadd( -105.614, -165.04, 45.2946, 0.55 ) }
    dend_20 { pt3dadd( -107.201, -164.66, 45.7065, 0.28 ) }
    dend_20 { pt3dadd( -110.925, -163.768, 46.6729, 0.55 ) }
    dend_20 { pt3dadd( -114.763, -162.849, 47.6687, 0.83 ) }
    dend_20 { pt3dadd( -116.088, -162.532, 48.0124, 0.55 ) }
    dend_20 { pt3dadd( -118.649, -161.868, 48.6591, 0.28 ) }
    dend_20 { pt3dadd( -120.145, -161.566, 49.0784, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 59/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 37.403, -235.824, 34.8584, 0.28 ) }
    dend_49 { pt3dadd( 37.6397, -237.316, 34.7959, 0.28 ) }
    dend_49 { pt3dadd( 37.7941, -238.305, 34.7707, 0.55 ) }
    dend_49 { pt3dadd( 38.1024, -240.303, 34.7326, 0.28 ) }
    dend_49 { pt3dadd( 38.7702, -244.264, 34.506, 0.28 ) }
    dend_49 { pt3dadd( 39.2778, -247.403, 34.2423, 0.83 ) }
    dend_49 { pt3dadd( 39.6757, -249.872, 34.0375, 0.83 ) }
    dend_49 { pt3dadd( 40.0735, -252.13, 33.8369, 0.28 ) }
    dend_49 { pt3dadd( 40.1771, -252.672, 33.7991, 0.55 ) }
    dend_49 { pt3dadd( 40.6611, -254.598, 33.659, 0.28 ) }
    dend_49 { pt3dadd( 40.9356, -255.382, 33.6355, 0.55 ) }
    dend_49 { pt3dadd( 41.6536, -257.038, 33.4576, 0.28 ) }
    dend_49 { pt3dadd( 42.0842, -257.8, 33.4106, 0.55 ) }
    dend_49 { pt3dadd( 43.0668, -259.458, 33.4046, 0.28 ) }
    dend_49 { pt3dadd( 43.8262, -260.769, 33.4892, 0.55 ) }
    dend_49 { pt3dadd( 45.0555, -262.929, 33.8189, 0.28 ) }
    dend_49 { pt3dadd( 45.5114, -263.803, 33.9427, 0.55 ) }
    dend_49 { pt3dadd( 46.4015, -265.756, 34.1622, 0.55 ) }
    dend_49 { pt3dadd( 47.0061, -267.392, 34.4885, 0.55 ) }
    dend_49 { pt3dadd( 47.3269, -268.407, 34.7625, 0.55 ) }
    dend_49 { pt3dadd( 47.6499, -269.596, 35.2022, 0.28 ) }
    dend_49 { pt3dadd( 48.0225, -271.156, 35.8465, 0.55 ) }
    dend_49 { pt3dadd( 48.2573, -272.077, 36.1613, 0.55 ) }
    dend_49 { pt3dadd( 48.9186, -274.635, 36.8804, 0.28 ) }
    dend_49 { pt3dadd( 49.2624, -275.94, 37.1972, 0.55 ) }
    dend_49 { pt3dadd( 49.6725, -277.663, 37.4549, 0.28 ) }
    dend_49 { pt3dadd( 49.8065, -278.266, 37.521, 0.83 ) }
    dend_49 { pt3dadd( 50.5939, -281.889, 37.8085, 0.28 ) }
    dend_49 { pt3dadd( 50.8835, -283.085, 37.8804, 0.83 ) }
    dend_49 { pt3dadd( 51.3988, -284.876, 37.9201, 0.28 ) }
    dend_49 { pt3dadd( 51.9433, -286.503, 38.0133, 0.83 ) }
    dend_49 { pt3dadd( 52.6948, -288.325, 38.1662, 0.28 ) }
    dend_49 { pt3dadd( 53.0655, -289.066, 38.2689, 0.55 ) }
    dend_49 { pt3dadd( 54.6404, -291.732, 38.7961, 0.28 ) }
    dend_49 { pt3dadd( 55.6371, -293.278, 39.0798, 0.55 ) }
    dend_49 { pt3dadd( 56.4949, -294.544, 39.2326, 0.28 ) }
    dend_49 { pt3dadd( 57.4752, -295.99, 39.3525, 0.83 ) }
    dend_49 { pt3dadd( 58.4874, -297.445, 39.2454, 0.28 ) }
    dend_49 { pt3dadd( 59.5382, -298.936, 38.9195, 0.55 ) }
    dend_49 { pt3dadd( 60.1715, -299.871, 38.54, 0.28 ) }
    dend_49 { pt3dadd( 61.2112, -301.553, 37.7841, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_49 { pt3dadd( 61.8675, -302.654, 37.2548, 0.28 ) }
    dend_49 { pt3dadd( 63.0797, -304.653, 36.3889, 0.55 ) }
    dend_49 { pt3dadd( 63.6097, -305.489, 36.0531, 0.28 ) }
    dend_49 { pt3dadd( 64.949, -307.499, 35.4701, 0.55 ) }
    dend_49 { pt3dadd( 66.2166, -309.357, 35.1745, 0.28 ) }
    dend_49 { pt3dadd( 66.7334, -310.07, 35.154, 0.55 ) }
    dend_49 { pt3dadd( 68.0468, -311.907, 35.2191, 0.28 ) }
    dend_49 { pt3dadd( 69.0876, -313.297, 35.3796, 0.55 ) }
    dend_49 { pt3dadd( 70.2876, -314.792, 35.5467, 0.28 ) }
    dend_49 { pt3dadd( 71.4159, -316.16, 35.6444, 0.55 ) }
    dend_49 { pt3dadd( 72.9602, -317.981, 35.6409, 0.55 ) }
    dend_49 { pt3dadd( 74.0318, -319.357, 35.5764, 0.55 ) }
    dend_49 { pt3dadd( 75.0311, -320.697, 35.4578, 0.55 ) }
    dend_49 { pt3dadd( 76.3866, -322.678, 35.281, 0.55 ) }
    dend_49 { pt3dadd( 77.1222, -323.859, 35.1342, 0.55 ) }
    dend_49 { pt3dadd( 77.7904, -325.093, 34.9139, 0.55 ) }
    dend_49 { pt3dadd( 78.4803, -326.584, 34.5576, 0.55 ) }
    dend_49 { pt3dadd( 79.7049, -329.781, 33.6458, 0.55 ) }
    dend_49 { pt3dadd( 80.2146, -331.468, 33.1236, 0.28 ) }
    dend_49 { pt3dadd( 80.6906, -333.807, 32.3161, 0.55 ) }
    dend_49 { pt3dadd( 81.001, -335.906, 31.5653, 0.28 ) }
    dend_49 { pt3dadd( 81.0918, -337.161, 31.0906, 0.55 ) }
    dend_49 { pt3dadd( 81.0962, -339.539, 30.1233, 0.28 ) }
    dend_49 { pt3dadd( 81.0106, -340.334, 29.7791, 0.83 ) }
    dend_49 { pt3dadd( 80.7572, -343.297, 28.6735, 0.55 ) }
    dend_49 { pt3dadd( 80.6228, -344.649, 28.2843, 0.55 ) }
    dend_49 { pt3dadd( 80.5802, -345.253, 28.1691, 0.28 ) }
    dend_49 { pt3dadd( 80.5585, -345.876, 28.0789, 0.55 ) }
    dend_49 { pt3dadd( 80.5724, -348.753, 27.9716, 0.28 ) }
    dend_49 { pt3dadd( 80.6936, -351.706, 27.9744, 0.55 ) }
    dend_49 { pt3dadd( 80.9006, -353.922, 28.1211, 0.55 ) }
    dend_49 { pt3dadd( 81.0126, -354.923, 28.2008, 0.55 ) }
    dend_49 { pt3dadd( 81.3906, -357.442, 28.4389, 1.11 ) }
    dend_49 { pt3dadd( 82.0374, -360.84, 28.8528, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 34/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 37.403, -235.824, 34.8584, 0.55 ) }
    dend_48 { pt3dadd( 37.3708, -239.198, 38.1539, 0.55 ) }
    dend_48 { pt3dadd( 36.9439, -240.543, 39.8921, 0.55 ) }
    dend_48 { pt3dadd( 36.003, -242.461, 42.5225, 0.55 ) }
    dend_48 { pt3dadd( 34.9797, -244.475, 45.3786, 0.55 ) }
    dend_48 { pt3dadd( 34.624, -245.19, 46.3274, 0.55 ) }
    dend_48 { pt3dadd( 33.9033, -246.516, 48.2418, 0.55 ) }
    dend_48 { pt3dadd( 32.678, -248.197, 50.7473, 0.55 ) }
    dend_48 { pt3dadd( 32.113, -248.873, 51.857, 0.55 ) }
    dend_48 { pt3dadd( 30.4995, -250.741, 55.3272, 0.55 ) }
    dend_48 { pt3dadd( 29.3608, -251.91, 57.5611, 0.55 ) }
    dend_48 { pt3dadd( 28.2615, -253.302, 60.132, 0.28 ) }
    dend_48 { pt3dadd( 27.951, -253.88, 61.066, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -113.346, -179.922, 32.3377, 0.83 ) }
    dend_23 { pt3dadd( -114.126, -183.062, 32.3377, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 49/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -113.346, -179.922, 32.3377, 0.28 ) }
    dend_22 { pt3dadd( -118.59, -180.419, 40.0567, 0.28 ) }
    dend_22 { pt3dadd( -120.68, -180.571, 42.8171, 0.55 ) }
    dend_22 { pt3dadd( -123.722, -180.802, 46.3114, 0.55 ) }
    dend_22 { pt3dadd( -125.32, -181.043, 48.1889, 0.55 ) }
    dend_22 { pt3dadd( -126.095, -181.167, 49.061, 0.55 ) }
    dend_22 { pt3dadd( -127.446, -181.423, 50.5124, 0.55 ) }
    dend_22 { pt3dadd( -129.32, -181.77, 52.0769, 0.55 ) }
    dend_22 { pt3dadd( -130.533, -182.014, 53.2159, 0.83 ) }
    dend_22 { pt3dadd( -133.26, -182.813, 55.3641, 0.83 ) }
    dend_22 { pt3dadd( -134.374, -183.286, 56.4415, 0.28 ) }
    dend_22 { pt3dadd( -135.517, -183.832, 57.6672, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 61/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 82.0374, -360.84, 28.8528, 0.83 ) }
    dend_51 { pt3dadd( 83.3406, -362.255, 29.2284, 0.83 ) }
    dend_51 { pt3dadd( 84.9885, -364.039, 29.6378, 0.28 ) }
    dend_51 { pt3dadd( 86.2031, -365.418, 29.8955, 2.77 ) }
    dend_51 { pt3dadd( 88.1816, -367.646, 30.2435, 0.55 ) }
    dend_51 { pt3dadd( 88.8318, -368.386, 30.3754, 0.55 ) }
    dend_51 { pt3dadd( 89.4426, -369.104, 30.5082, 0.28 ) }
    dend_51 { pt3dadd( 89.8671, -369.555, 30.5274, 0.55 ) }
    dend_51 { pt3dadd( 90.6465, -370.35, 30.4051, 0.28 ) }
    dend_51 { pt3dadd( 91.5038, -371.214, 30.1818, 0.55 ) }
    dend_51 { pt3dadd( 93.2974, -372.932, 29.4765, 0.28 ) }
    dend_51 { pt3dadd( 93.8496, -373.465, 29.1741, 0.83 ) }
    dend_51 { pt3dadd( 96.1556, -375.762, 27.7835, 0.55 ) }
    dend_51 { pt3dadd( 97.0984, -376.623, 27.2432, 0.55 ) }
    dend_51 { pt3dadd( 97.662, -377.096, 26.8721, 0.55 ) }
    dend_51 { pt3dadd( 98.6252, -377.934, 26.1623, 0.83 ) }
    dend_51 { pt3dadd( 99.9496, -379.297, 25.1515, 0.28 ) }
    dend_51 { pt3dadd( 100.716, -380.394, 24.4123, 0.83 ) }
    dend_51 { pt3dadd( 101.897, -383.334, 23.1135, 0.83 ) }
    dend_51 { pt3dadd( 102.577, -386.306, 22.044, 0.28 ) }
    dend_51 { pt3dadd( 102.758, -387.341, 21.6957, 0.83 ) }
    dend_51 { pt3dadd( 103.094, -390.212, 20.8354, 0.28 ) }
    dend_51 { pt3dadd( 103.347, -394.181, 19.7649, 0.28 ) }
    dend_51 { pt3dadd( 103.077, -397.904, 18.7348, 0.28 ) }
    dend_51 { pt3dadd( 102.737, -399.247, 18.4434, 0.28 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 86/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 82.0374, -360.84, 28.8528, 0.83 ) }
    dend_50 { pt3dadd( 79.5918, -361.317, 30.7488, 0.83 ) }
    dend_50 { pt3dadd( 78.3639, -361.556, 31.7008, 0.28 ) }
    dend_50 { pt3dadd( 77.0956, -361.803, 32.6841, 0.28 ) }
    dend_50 { pt3dadd( 76.3139, -361.955, 33.2902, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 91/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -114.126, -183.062, 32.3377, 0.55 ) }
    dend_25 { pt3dadd( -116.147, -184.895, 32.3871, 0.55 ) }
    dend_25 { pt3dadd( -117.477, -186.033, 32.4514, 0.55 ) }
    dend_25 { pt3dadd( -119.024, -187.296, 32.5615, 0.55 ) }
    dend_25 { pt3dadd( -120.515, -188.539, 32.8274, 0.83 ) }
    dend_25 { pt3dadd( -123.054, -190.686, 33.4118, 0.55 ) }
    dend_25 { pt3dadd( -125.662, -193.098, 34.083, 0.55 ) }
    dend_25 { pt3dadd( -127.093, -194.431, 34.4911, 0.83 ) }
    dend_25 { pt3dadd( -129.441, -196.569, 35.1688, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_25 { pt3dadd( -131.6, -198.773, 35.7955, 0.28 ) }
    dend_25 { pt3dadd( -132.544, -199.747, 36.0865, 0.55 ) }
    dend_25 { pt3dadd( -135.057, -202.203, 36.8742, 0.55 ) }
    dend_25 { pt3dadd( -137.405, -204.458, 37.5761, 0.55 ) }
    dend_25 { pt3dadd( -138.403, -205.538, 37.8431, 0.55 ) }
    dend_25 { pt3dadd( -141.087, -208.506, 38.3262, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -114.126, -183.062, 32.3377, 0.83 ) }
    dend_24 { pt3dadd( -112.811, -180.6, 31.8259, 0.83 ) }
    dend_24 { pt3dadd( -112.086, -179.243, 31.5436, 0.28 ) }
    dend_24 { pt3dadd( -111.053, -177.308, 31.1414, 0.83 ) }
    dend_24 { pt3dadd( -110.253, -175.808, 30.8296, 0.28 ) }
    dend_24 { pt3dadd( -109.727, -174.824, 30.625, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 12/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -141.087, -208.506, 38.3262, 0.28 ) }
    dend_27 { pt3dadd( -142.744, -210.605, 39.7353, 0.28 ) }
    dend_27 { pt3dadd( -142.945, -210.904, 39.9055, 0.83 ) }
    dend_27 { pt3dadd( -143.861, -212.208, 40.5789, 0.28 ) }
    dend_27 { pt3dadd( -145.354, -214.467, 41.842, 0.83 ) }
    dend_27 { pt3dadd( -147.52, -217.849, 43.7703, 0.55 ) }
    dend_27 { pt3dadd( -148.935, -220.039, 45.0211, 0.55 ) }
    dend_27 { pt3dadd( -150.707, -222.949, 46.6736, 0.55 ) }
    dend_27 { pt3dadd( -151.998, -225.066, 47.8571, 0.83 ) }
    dend_27 { pt3dadd( -154.007, -228.553, 49.7192, 0.55 ) }
    dend_27 { pt3dadd( -154.442, -229.38, 50.1529, 0.28 ) }
    dend_27 { pt3dadd( -154.783, -230.359, 50.626, 0.55 ) }
    dend_27 { pt3dadd( -155.109, -231.907, 51.3932, 0.28 ) }
    dend_27 { pt3dadd( -155.358, -233.43, 52.1467, 0.83 ) }
    dend_27 { pt3dadd( -155.384, -236.068, 53.318, 0.28 ) }
    dend_27 { pt3dadd( -155.297, -236.906, 53.5628, 0.55 ) }
    dend_27 { pt3dadd( -155.058, -238.117, 53.9091, 0.28 ) }
    dend_27 { pt3dadd( -154.745, -239.14, 54.1887, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -141.087, -208.506, 38.3262, 0.28 ) }
    dend_26 { pt3dadd( -140.089, -210.449, 39.5408, 0.28 ) }
    dend_26 { pt3dadd( -138.999, -212.571, 40.8669, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_29, dend_0, dend_76, dend_57, dend_31, dend_30, dend_12, dend_1, dend_78, dend_77, dend_67, dend_58, dend_39, dend_32, dend_14, dend_13, dend_3, dend_2, dend_80, dend_79, dend_69, dend_68, dend_60, dend_59, dend_53, dend_40, dend_34, dend_33, dend_16, dend_15, dend_7, dend_4, dend_71, dend_70, dend_64, dend_61, dend_55, dend_54, dend_44, dend_41, dend_36, dend_35, dend_28, dend_17, dend_9, dend_8, dend_6, dend_5, dend_73, dend_72, dend_66, dend_65, dend_63, dend_62, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_19, dend_18, dend_11, dend_10, dend_75, dend_74, dend_52, dend_47, dend_21, dend_20, dend_49, dend_48, dend_23, dend_22, dend_51, dend_50, dend_25, dend_24, dend_27, dend_26]}
    ModelViewParmSubset_2 = new SectionList()
    dend_56 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_56, dend_29, dend_0, dend_76, dend_57, dend_31, dend_30, dend_12, dend_1, dend_78, dend_77, dend_67, dend_58, dend_39, dend_32, dend_14, dend_13, dend_3, dend_2, dend_80, dend_79, dend_69, dend_68, dend_60, dend_59, dend_53, dend_40, dend_34, dend_33, dend_16, dend_15, dend_7, dend_4, dend_71, dend_70, dend_64, dend_61, dend_55, dend_54, dend_44, dend_41, dend_36, dend_35, dend_28, dend_17, dend_9, dend_8, dend_6, dend_5, dend_73, dend_72, dend_66, dend_65, dend_63, dend_62, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_19, dend_18, dend_11, dend_10, dend_75, dend_74, dend_52, dend_47, dend_21, dend_20, dend_49, dend_48, dend_23, dend_22, dend_51, dend_50, dend_25, dend_24, dend_27, dend_26]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_39 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_56, dend_29, dend_0, axon_0, dend_76, dend_57, dend_31, dend_30, dend_12, dend_1, axon_1, dend_78, dend_77, dend_67, dend_58, dend_39, dend_32, dend_14, dend_13, dend_3, dend_2, dend_80, dend_79, dend_69, dend_68, dend_60, dend_59, dend_53, dend_40, dend_34, dend_33, dend_16, dend_15, dend_7, dend_4, dend_71, dend_70, dend_64, dend_61, dend_55, dend_54, dend_44, dend_41, dend_36, dend_35, dend_28, dend_17, dend_9, dend_8, dend_6, dend_5, dend_73, dend_72, dend_66, dend_65, dend_63, dend_62, dend_46, dend_45, dend_43, dend_42, dend_38, dend_37, dend_19, dend_18, dend_11, dend_10, dend_75, dend_74, dend_52, dend_47, dend_21, dend_20, dend_49, dend_48, dend_23, dend_22, dend_51, dend_50, dend_25, dend_24, dend_27, dend_26]}
    ModelViewParmSubset_5 = new SectionList()
    dend_56 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_30 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_77 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_32 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_80 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_79 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_68 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_60 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_59 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_53 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_34 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_16 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_15 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_7 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_70 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_28 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_72 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_74 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_52 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_49 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_51 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_12 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_29 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_56 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_57 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_67 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_58 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_76 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_39 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_78 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_69 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_71 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_75 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_33 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_55 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_8 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_10 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_20 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_21 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_23 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_11 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_24 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_47 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_61 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_65 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_22 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_63 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_26 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_48 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_62 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_27 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_50 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_57, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_40, dend_40, dend_40, dend_40, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_17, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_57 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_20 all.append()
    dend_20 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_30 nseg = 7
    dend_1 nseg = 3
    dend_77 nseg = 5
    dend_32 nseg = 3
    dend_13 nseg = 5
    dend_3 nseg = 3
    dend_2 nseg = 5
    dend_80 nseg = 3
    dend_79 nseg = 7
    dend_68 nseg = 3
    dend_60 nseg = 9
    dend_59 nseg = 9
    dend_53 nseg = 5
    dend_34 nseg = 7
    dend_16 nseg = 3
    dend_15 nseg = 13
    dend_7 nseg = 3
    dend_4 nseg = 5
    dend_70 nseg = 3
    dend_41 nseg = 5
    dend_28 nseg = 7
    dend_72 nseg = 3
    dend_46 nseg = 7
    dend_43 nseg = 5
    dend_19 nseg = 5
    dend_18 nseg = 3
    dend_74 nseg = 3
    dend_52 nseg = 3
    dend_49 nseg = 7
    dend_51 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_MC_8a4a02932c_0_0


