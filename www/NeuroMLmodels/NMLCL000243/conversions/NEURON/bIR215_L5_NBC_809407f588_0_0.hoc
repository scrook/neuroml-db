// Cell: bIR215_L5_NBC_809407f588_0_0
/*
{
  "id" : "bIR215_L5_NBC_809407f588_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.02864, -8.95645, 0.0, 3.19243", "0.862269, -8.03576, 0.0, 5.44292", "0.695902, -7.11508, 0.0, 7.15224", "0.529535, -6.1944, 0.0, 9.22848", "0.363167, -5.27371, 0.0, 10.1568", "0.1968, -4.35303, 0.0, 10.228", "0.0304325, -3.43235, 0.0, 10.4278", "-0.135935, -2.51166, 0.0, 10.5372", "-0.302302, -1.59098, 0.0, 10.6261", "-0.468669, -0.670298, 0.0, 10.9078", "-0.635037, 0.250385, 0.0, 11.3454", "-0.801404, 1.17107, 0.0, 11.7831", "-0.967771, 2.09175, 0.0, 12.1088", "-1.13414, 3.01243, 0.0, 11.7546", "-1.30051, 3.93312, 0.0, 11.2789", "-1.46687, 4.8538, 0.0, 10.5376", "-1.63324, 5.77448, 0.0, 9.41766", "-1.79961, 6.69517, 0.0, 7.67825", "-1.96598, 7.61585, 0.0, 5.72147", "-2.13234, 8.53653, 0.0, 3.87406", "-2.29871, 9.45721, 0.0, 2.1959" ]
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.55142, -9.96816, -8.14, 3.62", "-1.55142, -9.96816, -8.14, 3.62", "-1.34914, -13.0719, -8.14, 3.62", "-1.17553, -15.7357, -8.14, 3.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.23859, 4.18709, -3.81, 1.24", "6.71157, 4.3533, -3.44781, 1.24", "10.6706, 4.70307, -2.38115, 1.24", "14.4071, 5.03321, -1.37441, 1.24", "18.1341, 5.36249, -0.370234, 1.24", "25.7934, 6.0392, 1.6934, 1.24", "31.6942, 6.56053, 3.28327, 1.24", "34.1677, 6.69507, 4.03543, 1.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.49141, 4.92509, -1.31, 0.68", "-8.45969, 4.87409, -1.64759, 0.68", "-10.205, 4.85536, -2.18109, 0.68", "-13.0171, 5.12983, -3.01092, 0.68", "-15.0327, 5.52904, -3.55101, 0.68", "-16.2847, 5.89609, -3.8393, 0.68", "-18.4287, 6.59873, -4.26983, 0.68", "-20.6378, 7.47788, -4.68961, 0.68", "-23.4919, 8.84828, -5.1581, 0.68", "-25.4797, 10.0092, -5.45015, 0.68", "-28.3106, 11.8988, -5.9431, 0.68", "-30.8259, 13.7927, -6.51343, 0.68", "-32.4703, 15.2028, -6.98619, 0.68", "-33.9924, 16.6892, -7.49078, 0.68", "-35.0629, 17.806, -7.8669, 0.68", "-37.0881, 19.8769, -8.59225, 0.68", "-38.5624, 21.4292, -9.19054, 0.68", "-39.2455, 22.1548, -9.45488, 0.68", "-41.6691, 24.6865, -10.4375, 0.68", "-43.5803, 26.6858, -11.2686, 0.68", "-46.306, 29.3981, -12.3918, 0.68", "-48.186, 31.1601, -13.0409, 0.57", "-49.8, 32.5737, -13.5592, 0.57", "-51.7222, 34.212, -14.242, 0.57", "-52.1409, 34.5577, -14.461, 0.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.06859, -4.99691, -2.56, 1.47", "6.10768, -5.68709, -2.41919, 1.47", "8.81228, -7.4835, -2.0527, 1.47", "12.0908, -9.66107, -1.60844, 1.47", "14.1637, -11.038, -1.32753, 2.6", "14.4811, -11.2488, -1.28452, 2.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000027720458424
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.29871, 9.45721, 0.0, 2.31666", "-4.96601, 24.2182, 0.0, 2.31666", "-7.63332, 38.9791, 0.0, 2.31666" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.17553, -15.7357, -8.14, 0.12", "-0.472462, -15.7947, -8.21387, 0.12", "0.493942, -15.9325, -8.31528, 0.12", "0.99821, -16.0063, -8.3681, 0.45", "1.46543, -16.0671, -8.35999, 0.45", "3.2408, -16.2711, -8.3397, 0.45", "3.49199, -16.3022, -8.33797, 1.36", "4.37221, -16.422, -8.3302, 1.02", "5.5798, -16.5873, -8.3023, 0.45", "7.4514, -16.8374, -8.03794, 0.45", "9.11964, -17.0276, -7.53062, 0.45", "9.60649, -17.0629, -7.35472, 1.7", "10.541, -17.1098, -6.70493, 0.68", "11.8227, -17.1732, -5.54958, 0.57", "13.8097, -17.2769, -3.54845, 0.57", "15.2543, -17.3481, -1.93573, 0.57", "16.3922, -17.3934, -0.485144, 0.57", "20.5383, -17.4872, 5.31634, 0.45", "20.8735, -17.494, 5.8588, 0.45" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.17553, -15.7357, -8.14, 2.26", "-1.44325, -17.9804, -8.0874, 2.26", "-1.70687, -20.1908, -8.0356, 2.26", "-2.09122, -23.4133, -7.96008, 2.94" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "34.1677, 6.69507, 4.03543, 0.45", "38.304, 6.73534, 2.91383, 0.45", "40.295, 6.73331, 3.04958, 0.45", "41.337, 6.80384, 3.35545, 0.45", "42.6879, 7.03383, 3.9488, 0.45", "45.3303, 7.79874, 5.51442, 0.79", "48.3636, 8.96138, 7.55346, 0.79", "51.2328, 10.3543, 9.78852, 0.79", "53.3196, 11.5961, 11.5659, 0.79", "54.9349, 12.7975, 13.0606, 0.79", "57.216, 15.0834, 15.5317, 0.79", "59.2243, 17.7363, 17.9392, 0.79", "60.118, 19.1175, 18.9595, 0.68", "60.8868, 20.3903, 19.7375, 0.68", "62.5228, 23.0548, 21.1946, 0.68", "65.9606, 28.6011, 24.2522, 0.68", "67.063, 30.4285, 25.2307, 0.68", "68.916, 33.4236, 26.8205, 0.68", "69.9798, 34.9575, 27.6444, 0.68", "71.0034, 36.18, 28.3574, 0.57", "73.7594, 38.7396, 29.9701, 0.57", "75.2136, 39.5948, 30.8468, 0.57", "77.6078, 39.9689, 33.6757, 0.57", "78.394, 39.5191, 35.654, 0.57", "79.377, 38.4724, 39.0272, 0.57", "79.6775, 38.036, 40.2542, 0.57", "80.775, 35.7344, 45.7715, 0.57", "81.8769, 32.6947, 52.6571, 0.57", "82.5047, 30.149, 58.2459, 0.57", "82.7528, 28.779, 61.3853, 0.57", "82.8091, 28.4424, 62.2762, 0.57", "82.9074, 27.8754, 63.8623, 0.57" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "34.1677, 6.69507, 4.03543, 0.79", "35.3129, 10.2603, 3.41468, 0.79", "36.0016, 12.8756, 3.08911, 0.79", "36.357, 14.2744, 2.96905, 0.79", "37.5121, 17.5184, 2.76223, 0.79", "38.8355, 20.4041, 2.63287, 0.79", "40.0254, 22.7275, 2.58188, 0.79", "41.9069, 25.9675, 2.65796, 0.79", "43.3291, 28.2843, 2.70553, 0.79", "46.1658, 32.7507, 2.57239, 0.79", "48.0254, 35.5169, 2.10299, 0.79", "50.0549, 38.1125, 0.8562, 1.02", "51.3643, 39.6456, -0.131384, 1.02", "52.6005, 41.0045, -1.34558, 1.02", "54.1946, 42.8546, -3.56836, 1.02", "56.345, 45.8185, -8.32603, 1.02", "58.5543, 48.7168, -14.663, 1.02" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "14.4811, -11.2488, -1.28452, 0.68", "15.8501, -13.4957, -1.81811, 0.68", "16.3321, -14.2053, -1.89489, 0.68", "18.987, -17.9641, -2.09541, 0.68", "23.1419, -23.7938, -2.26748, 0.68", "25.8389, -27.5688, -2.53651, 0.68", "27.5158, -29.8956, -2.77544, 0.68", "32.607, -36.7108, -2.86098, 0.68", "34.9393, -39.7423, -2.66897, 0.68", "35.6607, -40.6383, -2.54616, 0.68", "39.559, -45.3027, -1.60807, 0.68", "42.3406, -48.2851, -0.896621, 0.68", "49.551, -55.7068, 0.909418, 0.68", "52.9737, -59.1343, 1.70585, 0.68", "55.0188, -61.0837, 2.18646, 0.68", "57.8499, -63.6969, 2.84654, 0.68", "64.4205, -69.7821, 4.25141, 0.68", "67.0311, -72.3207, 4.51249, 0.68", "68.2205, -73.5632, 4.4773, 0.68", "71.3305, -76.9566, 4.27337, 0.68", "73.2261, -79.151, 4.08974, 0.68", "77.0239, -83.967, 3.48614, 0.68", "79.4223, -87.665, 2.97225, 0.68", "81.0683, -90.344, 2.55271, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "14.4811, -11.2488, -1.28452, 1.24", "19.6728, -13.0782, -0.176096, 1.24", "22.3284, -14.0139, 0.390882, 1.24", "26.5832, -15.5132, 1.29927, 1.24", "30.8892, -17.0305, 2.21862, 1.24", "42.306, -21.0534, 4.65612, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.63332, 38.9791, 0.0, 0.57", "-10.3006, 53.74, 0.0, 0.57", "-12.9679, 68.501, 0.0, 0.57" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "20.8735, -17.494, 5.8588, 0.45", "22.0817, -20.0664, 9.30502, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "20.8735, -17.494, 5.8588, 0.45", "25.4473, -15.5258, 5.36753, 0.45", "27.6288, -14.7204, 5.38431, 0.45", "30.6388, -13.7141, 5.57485, 0.45", "33.9551, -12.9351, 5.89187, 0.45", "35.7156, -12.8303, 6.10974, 0.45", "40.5197, -13.1058, 6.74431, 0.45", "40.9188, -13.1875, 6.83539, 0.45", "41.0939, -13.2495, 6.88027, 2.6", "44.4828, -14.9214, 7.76596, 0.57", "48.6461, -17.4786, 8.83529, 0.57", "49.8587, -18.2515, 9.09839, 0.57", "49.9649, -18.3151, 9.11493, 2.38", "53.5224, -20.1223, 9.64104, 0.34", "54.8758, -20.626, 9.82442, 0.34", "57.8934, -21.215, 10.1727, 0.45", "60.7234, -21.2007, 10.6658, 0.45", "63.6866, -20.8603, 11.5193, 0.45", "66.3864, -20.3361, 12.6559, 0.45", "69.2873, -19.5676, 14.3067, 0.45", "71.8629, -18.8009, 16.0028, 0.45", "77.4853, -17.0019, 20.0543, 0.45", "81.7671, -15.7209, 23.469, 0.45", "85.9405, -14.6511, 26.9988, 0.45", "89.9447, -13.8644, 30.3953, 0.45", "91.1417, -13.7143, 31.3864, 2.38", "93.2748, -13.5599, 32.9942, 0.45", "97.6136, -13.3386, 35.6531, 0.45", "99.4833, -13.2436, 36.6146, 0.45", "102.285, -13.0323, 37.864, 0.45", "108.082, -12.4346, 40.4606, 0.45", "112.212, -11.9158, 42.3228, 0.45", "116.5, -11.4539, 44.2351, 0.45", "119.169, -11.2972, 45.3712, 0.45", "121.765, -11.2641, 46.4276, 0.45", "126.775, -11.4644, 48.3264, 0.45", "130.876, -11.8517, 49.6539, 0.45", "136.116, -12.5773, 51.272, 0.45", "141.396, -13.5828, 52.8361, 0.45", "144.53, -14.2878, 53.7213, 0.45", "146.119, -14.7455, 54.143, 0.45", "146.978, -15.0423, 54.3033, 0.45" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.09122, -23.4133, -7.96008, 0.12", "-2.97999, -22.7419, -7.45535, 0.12", "-3.13962, -22.651, -7.31093, 0.12", "-3.58864, -22.4473, -6.84995, 0.45", "-4.21572, -22.4781, -5.67089, 0.79", "-4.93154, -22.7542, -3.78016, 0.45", "-5.3174, -23.0245, -2.56232, 0.45", "-5.9528, -23.7689, -0.00578284, 0.45", "-6.03472, -23.9352, 0.404173, 0.45", "-6.61016, -25.9719, 4.78175, 0.45", "-6.79474, -27.0553, 6.87391, 0.45", "-6.90595, -27.9298, 8.45767, 0.45", "-6.93112, -28.1438, 8.85992, 0.45", "-7.10641, -29.2942, 11.0642, 0.45", "-7.58203, -31.51, 15.3665, 0.45", "-7.80047, -32.1104, 16.4901, 0.45", "-7.99902, -32.5396, 17.2698, 0.45", "-8.43797, -33.363, 18.7961, 0.45", "-8.58254, -33.6526, 19.3542, 0.45", "-9.45386, -35.4135, 22.7776, 0.45", "-9.77015, -36.3419, 24.2736, 0.45", "-10.0429, -37.4861, 26.0322, 0.45", "-10.0884, -37.8773, 26.6562, 0.45", "-10.2062, -39.7809, 29.5307, 0.45", "-10.2067, -40.0304, 29.9017, 0.45", "-10.0985, -41.49, 32.2183, 0.45", "-10.0594, -41.8362, 32.7628, 0.45", "-9.90921, -43.5196, 35.2368, 2.38", "-9.82572, -44.9036, 37.2755, 0.68", "-9.78948, -45.4727, 38.0924, 0.68", "-9.60365, -47.8694, 41.9024, 0.68", "-9.52034, -48.8513, 43.5994, 0.45", "-9.5003, -49.312, 44.3859, 0.45", "-9.5363, -50.3897, 46.4409, 0.45", "-9.57741, -50.9152, 47.5758, 0.45", "-9.92691, -52.6395, 51.4191, 0.45", "-10.2138, -53.5494, 53.6357, 0.45", "-10.5478, -54.3569, 55.8326, 0.45", "-11.6283, -56.5984, 62.0147, 0.91", "-11.6546, -56.6537, 62.1583, 3.05", "-11.9732, -57.3596, 63.8873, 0.45", "-12.5898, -59.2682, 68.013, 0.45", "-12.7345, -59.9224, 69.3782, 0.45", "-12.8675, -60.8853, 71.3442, 2.15", "-13.2013, -64.4969, 77.5521, 0.57", "-13.2293, -64.949, 78.3423, 0.57", "-13.3095, -67.3338, 82.5383, 0.57", "-13.3882, -68.9209, 85.1541, 0.57", "-13.4019, -69.1126, 85.4814, 1.7", "-13.4851, -69.8975, 86.8488, 0.45", "-14.0296, -73.6353, 93.0128, 0.45", "-14.3122, -75.2131, 95.6287, 0.45", "-14.5558, -76.3234, 97.4019, 0.45", "-15.0535, -78.493, 100.76, 0.45", "-15.3386, -79.774, 102.738, 0.45", "-15.5596, -80.7164, 104.2, 0.45", "-16.1492, -83.0201, 107.108, 0.45", "-16.2357, -83.372, 107.564, 0.45" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.09122, -23.4133, -7.96008, 1.7", "-1.04236, -25.8031, -6.78837, 1.7", "-0.735576, -26.5964, -6.48129, 1.58", "0.122168, -29.0318, -5.77294, 1.36", "0.829831, -31.041, -5.18854, 1.24", "1.8492, -33.9352, -4.34672, 1.24", "2.45527, -35.656, -3.84621, 2.83", "3.25105, -38.0803, -3.35349, 3.62", "3.83139, -39.9243, -3.06856, 2.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "58.5543, 48.7168, -14.663, 0.57", "58.4197, 46.8482, -16.1883, 0.57", "58.2426, 44.3904, -18.1944, 0.57", "58.1418, 42.9901, -19.3374, 0.57", "58.0029, 41.0616, -20.9114, 0.57", "57.8218, 38.5481, -22.9631, 0.57", "57.5121, 34.2489, -26.4722, 0.57" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "58.5543, 48.7168, -14.663, 1.02", "59.324, 50.9411, -16.1288, 1.02", "61.05, 55.9291, -19.4157, 1.02", "62.0256, 58.7483, -21.2735, 0.79" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "81.0683, -90.344, 2.55271, 0.45", "84.5611, -95.7713, 1.41228, 0.45", "85.2798, -96.8965, 1.20651, 0.45", "86.3516, -98.6224, 0.979381, 0.45", "88.9632, -102.789, 0.544179, 0.45", "90.0057, -104.4, 0.297249, 0.45", "90.9786, -105.816, 0.0465952, 0.45", "92.8229, -108.255, -0.379092, 0.45", "96.1977, -112.403, -1.18039, 0.45", "98.1122, -114.399, -1.57594, 0.45", "101.835, -117.586, -2.42269, 0.45", "104.615, -119.479, -2.92473, 0.45", "105.872, -120.213, -2.94664, 0.45", "108.162, -121.464, -2.75401, 0.45", "112.911, -124.098, -2.04628, 0.45", "116.063, -126.005, -1.63804, 0.45", "120.817, -129.091, -1.04942, 0.45", "130.869, -136.224, -0.11187, 0.45", "135.328, -139.706, 0.181769, 0.45", "138.555, -142.576, 0.267885, 0.45", "144.609, -148.97, 0.0407632, 0.45", "145.758, -150.401, -0.0839644, 0.45", "147.939, -153.838, -0.7704, 0.45", "149.028, -156.176, -1.44259, 0.45", "150.659, -160.684, -2.60509, 0.45", "151.704, -164.294, -3.34729, 0.45", "152.956, -169.172, -4.14198, 0.45", "154.093, -174.08, -4.94406, 0.45", "155.157, -179.253, -5.81325, 0.45", "155.599, -181.479, -6.18466, 0.45", "156.31, -185.055, -6.73244, 0.45", "157.787, -191.717, -7.62492, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "81.0683, -90.344, 2.55271, 0.57", "80.9595, -90.8533, 2.78169, 0.57", "80.3847, -93.3737, 4.77619, 0.57", "79.5979, -96.466, 7.45318, 0.57", "79.0504, -98.1841, 9.22505, 0.57", "78.939, -98.4857, 9.545, 0.57", "78.2745, -100.001, 11.2451, 0.57", "77.2227, -101.92, 13.6355, 0.57", "76.6646, -102.716, 14.7521, 0.57", "75.5559, -104.124, 17.1873, 0.45", "74.9801, -104.817, 18.358, 0.45", "74.1818, -105.772, 19.9086, 0.45", "73.4109, -106.751, 21.4177, 0.45", "72.5195, -107.863, 23.1108, 0.45", "70.7987, -110.268, 26.8166, 0.45", "70.4551, -110.845, 27.6648, 0.45", "70.0054, -111.725, 28.9407, 0.45", "69.0068, -114.01, 32.0638, 0.45", "68.6658, -114.871, 33.1408, 0.45", "67.395, -118.138, 36.6389, 0.45", "67.0013, -119.23, 37.6758, 0.45", "66.9229, -119.48, 37.8983, 0.45", "66.7677, -120.135, 38.4855, 0.45", "66.3955, -121.932, 40.1034, 0.45", "66.1377, -123.41, 41.4664, 0.45", "65.697, -126.375, 44.3742, 0.45", "65.4481, -128.397, 46.6721, 0.45", "65.0225, -132.056, 51.1233, 0.45", "64.7654, -134.073, 53.6931, 0.45", "64.6426, -134.91, 54.8489, 0.45", "64.1494, -137.697, 58.7004, 0.45", "63.4986, -140.208, 61.994, 0.45", "63.0611, -141.53, 63.7134, 0.45", "62.5761, -142.782, 65.2246, 0.45", "61.6919, -145.152, 67.7711, 0.45", "60.9301, -147.206, 69.7852, 0.45", "60.2206, -148.952, 71.3821, 0.45", "59.6074, -150.328, 72.8467, 0.45", "58.0723, -153.194, 76.5946, 0.45", "56.911, -154.784, 79.0768, 0.45", "55.7149, -155.892, 81.1308, 0.45", "54.1828, -156.769, 83.1553, 0.45", "50.1041, -158.235, 87.4491, 0.45", "48.098, -158.67, 89.2517, 0.45", "45.4534, -159.022, 91.1758, 0.45", "43.6623, -159.222, 92.3786, 0.45", "40.2144, -159.704, 94.5615, 0.45", "37.5133, -160.236, 96.1754, 0.45", "33.3483, -161.277, 99.0758, 0.45", "30.4319, -162.145, 101.571, 0.45", "28.5337, -162.795, 103.309, 0.45", "24.2111, -164.44, 107.404, 0.45", "22.7103, -165.058, 108.878, 0.45", "16.26, -167.843, 115.116, 0.45", "14.5, -168.635, 116.807, 0.45", "9.89048, -170.775, 121.562, 0.45", "8.58107, -171.4, 122.904, 0.45", "6.32364, -172.58, 125.195, 0.45" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "42.306, -21.0534, 4.65612, 0.45", "44.3543, -25.1516, 4.62758, 0.45", "44.6861, -25.7881, 4.59967, 1.02", "48.2307, -32.1764, 4.18257, 0.79", "50.4689, -36.0348, 3.76904, 0.79", "51.7825, -38.1612, 3.46791, 0.68", "52.0702, -38.5961, 3.39633, 0.68", "53.8676, -41.0389, 2.84875, 0.68", "55.1167, -42.6335, 2.41412, 0.68", "57.7751, -45.7315, 1.41076, 0.68", "60.4717, -48.8924, 0.322246, 0.68", "63.0663, -51.9362, -0.775837, 0.68", "65.529, -54.7803, -1.81535, 0.68", "68.6207, -58.3357, -3.14488, 0.68", "72.5428, -62.6215, -4.98347, 0.68", "75.0567, -65.1729, -6.30333, 0.68", "76.5672, -66.6095, -7.16692, 0.68", "78.4972, -68.3471, -8.28905, 0.68", "81.7428, -71.0812, -10.1226, 0.68", "85.992, -74.4672, -12.4608, 0.68", "90.8796, -78.1803, -14.9902, 0.68", "93.4548, -80.0777, -16.1797, 0.68", "95.9737, -81.9437, -17.2329, 0.68", "97.5777, -83.1586, -17.8307, 0.68", "99.0047, -84.2492, -18.2522, 0.68", "100.921, -85.9723, -18.6758, 0.68", "102.45, -87.4468, -19.048, 0.68", "104.523, -89.6936, -19.8618, 0.68", "105.127, -90.4204, -20.2422, 0.68", "106.634, -92.445, -21.4755, 0.68", "108.441, -94.9953, -23.3027, 0.68", "109.862, -97.1341, -25.0158, 0.68", "111.207, -99.2618, -26.8196, 0.68", "113.256, -102.678, -29.789, 0.68", "114.201, -104.316, -31.1776, 0.68", "115.48, -106.582, -32.9736, 0.68", "116.53, -108.354, -34.2623, 0.68", "117.87, -110.599, -35.633, 0.68", "118.901, -112.27, -36.5842, 0.68", "119.387, -113.048, -36.9813, 0.68", "120.857, -115.33, -38.0697, 0.45", "122.935, -118.628, -39.5676, 0.45", "125.345, -122.436, -41.3233, 0.45", "127.278, -125.418, -42.8601, 0.45", "128.643, -127.5, -44.0207, 0.45", "130.247, -129.917, -45.4346, 0.45", "132.997, -133.894, -47.9159, 0.45", "134.453, -135.99, -49.2742, 0.45", "136.944, -139.572, -51.6932, 0.45", "139.245, -142.799, -53.905, 0.45", "140.665, -144.741, -55.3033, 0.45", "141.851, -146.27, -56.4682, 0.45" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "42.306, -21.0534, 4.65612, 0.68", "44.0699, -20.5759, 8.3331, 0.68", "46.29, -19.6598, 12.55, 0.68", "48.0608, -18.7757, 15.1794, 0.68", "49.3515, -18.0759, 16.7212, 0.68", "50.2677, -17.5216, 17.5489, 0.68", "52.6366, -16.0013, 18.9828, 0.68", "54.3375, -14.8397, 19.5344, 0.68", "57.4628, -12.7039, 20.044, 0.57", "60.0036, -10.9903, 20.2446, 0.57", "63.7247, -8.36641, 20.463, 0.57", "68.0177, -5.26155, 20.6961, 0.57", "70.4112, -3.4719, 20.8315, 0.57", "71.537, -2.5542, 20.8887, 0.57", "74.994, 0.517031, 21.222, 0.57", "79.5003, 4.70919, 21.8386, 0.57", "82.9435, 8.02827, 22.5289, 0.57", "84.2042, 9.34082, 22.8213, 0.57", "87.06, 12.5174, 23.4437, 0.57", "89.7165, 15.5524, 24.0059, 0.57", "90.8637, 16.9305, 24.2714, 0.57" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "22.0817, -20.0664, 9.30502, 0.45", "21.0036, -28.5052, 9.16977, 0.45", "20.6713, -31.1797, 9.02251, 0.45", "20.2179, -34.7015, 9.095, 0.45", "19.7229, -38.331, 9.42909, 0.45", "19.3219, -41.0628, 9.79452, 0.45", "18.5854, -46.2932, 10.601, 0.45", "18.3583, -48.2847, 10.9492, 0.45", "17.7439, -54.3365, 12.2596, 0.45", "17.4213, -57.4781, 13.2353, 0.45", "17.1145, -59.9967, 14.2748, 0.45", "16.8831, -61.2881, 14.8766, 0.45", "16.5042, -62.8282, 15.6312, 0.45", "15.9152, -64.6606, 16.3397, 0.45", "14.3458, -69.5977, 17.5022, 0.45", "14.0304, -70.6643, 17.6492, 0.45", "13.2227, -73.9576, 17.8439, 0.45", "12.8205, -75.7879, 17.4777, 0.45", "12.4838, -78.133, 16.413, 0.45", "12.4164, -82.1552, 13.6859, 0.45", "12.7296, -84.7043, 11.4953, 0.45", "13.1598, -86.8981, 9.41471, 0.45", "15.0536, -93.0611, 2.75755, 0.45", "15.4894, -94.19, 1.37655, 1.02", "15.9752, -95.2728, -0.219494, 0.57", "16.4224, -96.4522, -2.53205, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "22.0817, -20.0664, 9.30502, 0.45", "23.8357, -20.4111, 9.26419, 0.45", "25.6417, -20.766, 9.22216, 0.45", "28.1519, -21.2594, 9.16374, 0.45", "30.276, -21.6768, 9.11431, 0.45", "31.3779, -21.8934, 9.08866, 0.45" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.83139, -39.9243, -3.06856, 0.45", "3.99226, -41.8129, -1.37909, 0.45", "4.07917, -42.6821, -0.671345, 0.79", "4.92502, -51.1412, 6.21643, 1.24", "5.29009, -54.7922, 9.18926, 1.24", "5.59848, -57.8762, 11.7005, 1.24", "5.95314, -61.4231, 14.5885, 1.24", "6.08693, -62.7107, 15.6553, 2.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.83139, -39.9243, -3.06856, 0.91", "6.29489, -41.6455, -2.96111, 0.91", "7.65194, -42.5936, -2.90192, 0.91", "9.99956, -44.2339, -2.79952, 0.91", "11.6215, -45.3671, -2.72878, 0.91", "14.1565, -47.1383, -2.61821, 0.79", "14.6737, -47.4996, -2.59566, 0.79" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "57.5121, 34.2489, -26.4722, 0.57", "57.8368, 32.2281, -27.553, 0.57", "58.6363, 27.7749, -29.1594, 0.57", "59.441, 23.0095, -31.0301, 0.45", "60.557, 16.2297, -33.8738, 0.45", "61.7616, 8.72106, -36.9326, 0.45", "62.0911, 6.667, -37.7693, 0.45", "63.6506, -3.2339, -41.6721, 0.45", "64.8058, -11.1753, -44.6386, 0.45", "65.3661, -14.9266, -45.9786, 0.45", "66.032, -19.0957, -47.503, 0.45" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "57.5121, 34.2489, -26.4722, 0.57", "54.4983, 34.7648, -28.1126, 0.57", "52.5711, 34.2693, -28.7037, 0.68", "50.9119, 33.6374, -29.3004, 0.68", "49.2517, 33.0051, -29.8975, 0.68", "46.6211, 32.0033, -30.8436, 0.68", "44.104, 31.0447, -31.7489, 0.68", "41.1208, 30.1613, -32.7654, 0.68", "38.0937, 29.4117, -33.6278, 0.57" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "62.0256, 58.7483, -21.2735, 0.68", "62.4096, 60.1676, -19.6919, 0.68", "62.7367, 61.3766, -18.3447, 0.68", "63.2836, 63.3979, -16.0922, 0.68", "64.3882, 67.4808, -11.5426, 0.68", "65.0064, 69.7658, -8.99637, 0.68", "65.8361, 72.8325, -5.57912, 0.68" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "62.0256, 58.7483, -21.2735, 0.79", "63.1031, 59.7032, -21.0205, 0.79", "64.8174, 61.2224, -20.618, 0.79", "65.9278, 62.2065, -20.3573, 0.79", "67.1663, 63.3041, -20.0666, 0.79", "67.8695, 63.9272, -19.9015, 0.79" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "141.851, -146.27, -56.4682, 0.57", "143.012, -148.578, -57.1221, 0.57", "144.769, -152.065, -58.0044, 0.57", "145.642, -153.746, -58.4163, 0.57", "147.944, -158.046, -59.4596, 0.57", "150.185, -162.19, -60.4239, 0.57", "151.993, -165.531, -61.2015, 0.57", "153.041, -167.471, -61.5632, 0.57", "153.983, -169.223, -61.8429, 0.57", "154.888, -170.853, -62.0971, 0.57", "156.033, -172.68, -62.4223, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "141.851, -146.27, -56.4682, 0.34", "143.58, -148.225, -56.213, 0.34", "144.764, -149.795, -55.9358, 0.34", "145.268, -150.496, -55.819, 0.34", "147.629, -153.644, -55.5733, 0.34", "149.57, -156.173, -55.5468, 0.57", "152.204, -159.598, -55.603, 0.57", "153.959, -161.964, -55.7181, 0.57", "155.563, -164.03, -55.951, 0.57", "158.831, -168.067, -56.6452, 0.57", "160.744, -170.3, -57.161, 0.57", "162.715, -172.384, -57.8128, 0.57", "165.424, -174.931, -58.8065, 0.57", "169.4, -178.446, -60.3127, 0.57", "172.743, -181.343, -61.5562, 0.57", "174.89, -183.225, -62.2526, 0.57", "178.608, -186.433, -63.3473, 0.57", "179.682, -187.34, -63.6298, 0.57", "182.019, -189.315, -64.1068, 0.57", "183.708, -190.815, -64.2732, 0.57", "186.866, -193.605, -64.2616, 0.57", "187.827, -194.482, -64.1523, 0.57", "189.288, -196.071, -63.6222, 0.57", "190.281, -197.188, -63.1432, 0.57", "191.246, -198.325, -62.5404, 0.57", "191.9, -199.105, -62.1, 0.57", "193.454, -200.998, -61.0022, 0.57", "196.631, -205.171, -58.523, 0.57", "197.458, -206.35, -57.799, 0.57", "199.004, -208.693, -56.3377, 0.57", "200.545, -211.201, -54.8525, 0.57" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "90.8637, 16.9305, 24.2714, 0.45", "93.9933, 20.2594, 22.2747, 0.45", "95.5787, 21.9544, 21.2719, 0.45", "97.799, 24.637, 19.8052, 0.45", "98.3679, 25.3372, 19.4819, 0.45", "98.6417, 25.6683, 19.3515, 0.45", "101.16, 28.6923, 18.425, 0.45", "101.464, 29.0193, 18.3745, 0.45", "103.324, 31.0477, 18.0644, 0.45", "104.686, 32.6589, 18.0333, 0.45", "105.422, 33.5667, 18.0516, 0.45", "107.147, 35.643, 18.2433, 0.45", "108.619, 37.1873, 18.7297, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "90.8637, 16.9305, 24.2714, 0.45", "92.7579, 17.2686, 25.0111, 0.45", "93.9766, 17.486, 25.4871, 0.45" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "31.3779, -21.8934, 9.08866, 0.45", "29.9967, -26.9262, 10.843, 0.45", "28.4564, -32.7684, 12.8149, 0.45", "27.5832, -36.0162, 13.9485, 0.45", "26.6044, -39.53, 15.119, 0.45", "25.4584, -43.6436, 16.385, 0.45", "25.0415, -45.217, 16.809, 0.45", "24.5387, -47.1919, 17.1959, 0.45", "23.5363, -52.0818, 18.0124, 0.45", "23.01, -55.8042, 18.3608, 0.45", "22.7149, -59.0418, 18.4371, 0.45", "22.5611, -61.694, 18.4203, 0.45", "22.5216, -64.131, 18.5104, 0.45", "22.6827, -67.9893, 18.8378, 0.45", "22.9648, -70.4766, 19.4502, 0.45", "23.3374, -72.741, 20.3499, 0.45", "23.9674, -75.9826, 21.7966, 0.45", "24.7152, -79.2866, 23.4103, 0.45", "25.2027, -81.0836, 24.3106, 0.45", "27.0718, -87.266, 26.7975, 0.45", "28.4552, -91.3369, 28.0895, 0.45", "29.811, -94.9486, 28.8376, 0.45", "31.0598, -98.2905, 28.9936, 0.45", "32.2532, -101.432, 28.952, 0.45", "34.4368, -107.534, 28.6728, 0.45", "35.3275, -110.281, 28.4547, 0.45", "35.9287, -112.437, 28.6874, 0.45", "37.1599, -117.377, 29.518, 0.45", "38.0358, -121.518, 30.3499, 0.45", "38.867, -126.13, 31.6768, 0.45", "39.2367, -128.506, 32.7157, 0.45", "40.3596, -137.528, 36.8774, 0.79" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "31.3779, -21.8934, 9.08866, 0.45", "34.1755, -23.5146, 9.35751, 0.45", "35.8061, -24.7729, 9.43512, 0.45", "38.4514, -27.0942, 9.46381, 0.45", "40.8006, -29.3299, 9.43837, 0.45", "44.2457, -32.8234, 9.32496, 0.45", "48.5901, -37.501, 9.10672, 0.45", "53.5901, -43.6415, 8.77102, 0.45", "57.3229, -48.6703, 8.09218, 0.45", "59.3082, -51.5066, 7.6634, 0.45", "62.9118, -56.9227, 6.75704, 0.45", "65.254, -60.5429, 6.02535, 0.45", "67.6456, -64.4324, 5.10498, 0.45", "72.2964, -72.9021, 2.60114, 0.45" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.08693, -62.7107, 15.6553, 0.12", "5.51944, -63.5558, 15.26, 0.12", "4.66991, -65.6003, 14.3251, 0.57", "4.14436, -67.3989, 13.6496, 0.57", "3.78951, -68.9982, 13.2582, 0.57", "2.5501, -74.0838, 11.8536, 0.57", "1.62717, -77.1299, 10.7676, 0.57", "1.07081, -78.8488, 10.0577, 0.91", "0.423671, -80.4258, 9.05083, 0.91", "-0.602125, -82.3898, 7.39513, 0.91", "-2.72197, -84.9183, 4.17079, 0.68", "-4.71305, -86.1191, 1.29273, 0.68", "-5.74693, -86.5656, -0.175622, 0.68", "-9.24679, -87.7976, -5.33618, 0.68", "-10.0912, -88.0275, -6.62172, 0.68", "-12.0761, -88.4198, -9.77724, 0.68", "-15.4434, -88.8866, -15.3068, 0.68", "-16.7318, -89.0395, -17.5383, 0.68", "-19.1812, -89.458, -22.0242, 0.68" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.08693, -62.7107, 15.6553, 0.79", "6.81106, -65.5047, 15.5334, 0.79", "7.78687, -69.2698, 15.3692, 0.79", "8.23745, -71.0083, 15.2934, 0.79", "8.58502, -72.3493, 15.2349, 0.79", "8.74766, -72.9769, 15.2075, 0.79" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.08693, -62.7107, 15.6553, 0.57", "7.25049, -63.0806, 18.0762, 0.57" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.6737, -47.4996, -2.59566, 1.13", "15.3068, -48.9324, -1.84245, 1.13", "16.326, -51.1345, -0.83951, 0.91", "16.9388, -52.4625, -0.347504, 0.91", "17.954, -54.6888, 0.359055, 0.91", "19.0174, -57.1322, 1.03036, 0.91", "19.9172, -59.33, 1.62255, 0.91", "20.4771, -60.8474, 1.96847, 0.91", "21.2962, -63.3493, 2.52553, 0.91", "21.6028, -64.3993, 2.76426, 1.92", "21.9807, -65.8084, 3.06386, 1.36", "22.5081, -67.8907, 3.54849, 1.02", "23.0968, -70.3596, 4.23674, 1.02", "23.6115, -72.4711, 4.88563, 1.02", "23.8343, -73.3356, 5.1625, 1.02", "24.105, -74.3053, 5.47367, 0.68", "24.594, -75.848, 5.88428, 0.68", "24.8955, -76.6674, 6.02129, 1.02", "25.2011, -77.3591, 6.06219, 2.15", "25.7984, -78.501, 6.00745, 1.47", "26.84, -80.2863, 5.84434, 1.13", "27.5605, -81.5068, 5.71658, 0.79", "28.0497, -82.3071, 5.61544, 0.57", "29.0219, -83.771, 5.42754, 0.57", "29.8955, -84.9905, 5.26768, 0.57", "30.649, -85.9889, 5.1278, 0.57", "31.3387, -86.9368, 4.99062, 0.57", "31.7797, -87.6412, 4.87638, 0.57", "32.4888, -88.9439, 4.61198, 0.57", "32.8847, -89.7147, 4.5277, 0.57", "33.4565, -90.9034, 4.46107, 2.83", "34.2103, -92.4587, 4.47539, 1.92", "35.3126, -94.6549, 4.5351, 1.02", "35.9155, -95.8978, 4.60781, 0.68", "37.4226, -98.9779, 4.83309, 0.68", "37.9827, -100.044, 4.90884, 0.68", "39.0016, -101.814, 5.08878, 0.68", "39.6097, -102.787, 5.20064, 0.68", "40.4116, -103.952, 5.30396, 0.68", "41.5325, -105.487, 5.34347, 0.68", "42.8502, -107.139, 5.2615, 0.68", "44.7308, -109.303, 5.15783, 0.68", "45.9218, -110.625, 5.09361, 0.68", "47.3693, -112.208, 4.97795, 0.57", "48.3946, -113.339, 4.85352, 0.57", "49.3314, -114.467, 4.6255, 0.57", "50.2456, -115.668, 4.2194, 0.57", "51.138, -116.934, 3.56544, 0.57", "52.2642, -118.592, 2.59166, 0.57", "52.7409, -119.33, 2.10156, 1.47", "53.9664, -121.228, 0.73239, 0.68", "54.7107, -122.359, -0.109417, 0.68", "55.7526, -123.824, -1.22017, 0.68", "57.2927, -125.807, -2.70427, 0.68", "58.7971, -127.596, -3.92953, 0.68", "59.5072, -128.379, -4.44206, 0.68", "59.9798, -128.892, -4.61467, 0.68", "60.776, -129.92, -4.55798, 0.57", "61.1347, -130.468, -4.39462, 0.57", "61.6285, -131.306, -4.04112, 0.57", "62.4589, -132.823, -3.4178, 0.57", "65.1633, -138.142, -1.48698, 0.68", "66.6944, -141.322, -0.559417, 0.68", "67.3773, -142.831, -0.25016, 0.68", "67.815, -143.872, -0.165242, 0.68", "68.9199, -146.674, -0.59238, 0.68", "69.2452, -147.505, -0.951236, 0.68", "69.8361, -148.951, -2.03588, 2.04", "70.3778, -150.19, -3.16293, 0.79", "70.9769, -151.465, -4.34916, 0.79", "72.1574, -153.863, -6.37819, 0.79", "72.8569, -155.195, -7.28851, 0.79", "73.5379, -156.45, -7.95394, 0.79", "74.3338, -157.916, -8.45095, 0.79", "75.1157, -159.272, -8.70853, 0.68", "76.2152, -161.096, -8.79216, 0.68", "77.2421, -162.753, -8.65564, 0.68", "78.2154, -164.257, -8.21703, 0.68", "78.9492, -165.353, -7.76419, 0.68", "79.7306, -166.478, -7.14681, 0.68", "80.196, -167.117, -6.76334, 1.58", "80.9016, -168.024, -6.24762, 1.58", "83.8659, -171.744, -4.26721, 0.68", "84.9412, -173.04, -3.60612, 0.68", "86.9283, -175.343, -2.50196, 0.68", "88.7333, -177.421, -1.50264, 0.68", "90.314, -179.201, -0.686153, 0.68", "91.5686, -180.591, -0.0582927, 0.68", "92.9949, -182.111, 0.526534, 0.68", "93.9967, -183.108, 1.04452, 0.68", "95.8888, -184.854, 2.05749, 0.68", "96.5509, -185.409, 2.37122, 0.68", "98.3538, -186.785, 3.03863, 2.38", "99.2698, -187.455, 3.24297, 1.92", "101.965, -189.339, 3.55144, 0.57", "102.998, -190.052, 3.52264, 0.57", "106.565, -192.487, 3.0085, 0.57", "109.042, -194.187, 2.56615, 0.57", "110.606, -195.254, 2.21509, 0.57", "112.582, -196.597, 1.78174, 0.57", "114.458, -197.848, 1.37534, 0.57", "115.735, -198.711, 1.23091, 0.57", "116.758, -199.408, 1.27341, 2.15", "117.608, -199.97, 1.34665, 1.13", "118.915, -200.836, 1.50961, 0.57", "120.133, -201.701, 1.49594, 0.57", "120.655, -202.083, 1.44101, 0.57", "121.296, -202.618, 1.34196, 0.57", "122.114, -203.36, 1.18133, 0.57", "122.316, -203.572, 1.14208, 2.38", "124.275, -205.828, 0.765599, 0.45", "125.538, -207.376, 0.540371, 0.45", "126.935, -209.129, 0.319749, 0.45", "127.906, -210.375, 0.232437, 0.45", "129.642, -212.674, 0.277691, 0.45", "130.103, -213.31, 0.335948, 0.45", "132.066, -216.224, 0.895054, 0.45", "133.437, -218.474, 1.39216, 0.45", "134.566, -220.592, 1.82432, 0.45", "135.46, -222.593, 2.27519, 0.45", "135.812, -223.55, 2.50585, 0.45", "136.279, -225.103, 2.82874, 0.45", "136.76, -227.156, 3.13357, 0.45", "137.24, -229.262, 3.10688, 0.45", "137.385, -229.791, 3.01264, 1.24", "137.858, -231.087, 2.64678, 0.57", "138.614, -232.647, 2.1438, 0.57", "139.835, -234.633, 1.45119, 0.57", "141.127, -236.437, 0.852207, 1.36", "142.271, -237.871, 0.538383, 0.57", "143.633, -239.437, 0.305629, 0.57", "145.487, -241.43, 0.146198, 0.57", "146.945, -242.916, 0.225938, 0.57", "148.04, -243.979, 0.403108, 0.57", "150.393, -246.297, 0.887212, 0.57", "152.56, -248.562, 1.30922, 0.57", "153.447, -249.605, 1.49758, 0.57", "154.947, -251.627, 1.74701, 2.38", "155.371, -252.278, 1.7812, 1.58", "157.133, -255.299, 1.89187, 0.68", "158.087, -257.174, 1.89896, 0.68", "159.158, -259.523, 2.07039, 0.79", "160.128, -261.732, 2.27122, 0.57", "161.016, -263.862, 2.47144, 0.57", "162.3, -267.055, 2.87793, 0.57", "163.242, -269.47, 3.27567, 0.57", "164.126, -271.778, 3.61803, 0.57", "164.555, -272.893, 3.75012, 0.57", "165.242, -274.697, 3.94708, 0.57", "166.234, -277.382, 4.09821, 0.57", "166.868, -279.064, 4.01297, 0.57", "167.629, -281.032, 3.70518, 0.57", "168.164, -282.391, 3.33907, 0.57", "168.509, -283.226, 3.06588, 0.57", "169.196, -284.767, 2.54373, 0.57", "170.436, -287.33, 1.67258, 0.57", "171.502, -289.334, 1.10166, 1.13", "172.171, -290.489, 0.848396, 2.38", "172.416, -290.89, 0.779388, 2.38", "174.117, -293.522, 0.483096, 0.79", "175.075, -295.002, 0.275033, 0.79", "176.168, -296.792, 0.0390579, 0.57", "177.018, -298.261, -0.200528, 0.57", "177.742, -299.639, -0.471427, 0.57", "178.336, -300.857, -0.768907, 0.57", "179.781, -303.911, -1.70766, 0.57", "180.01, -304.425, -1.85157, 2.94", "181.052, -306.77, -2.51165, 0.68", "182.079, -309.018, -3.06153, 0.68", "182.951, -310.78, -3.41789, 0.68", "183.71, -312.205, -3.65446, 0.68", "184.993, -314.442, -3.92998, 0.68", "186.209, -316.547, -4.22551, 0.68", "187.101, -318.076, -4.46596, 0.68", "187.947, -319.522, -4.72885, 0.68", "189.547, -322.273, -5.19748, 0.68", "190.313, -323.569, -5.4018, 0.68", "191.124, -324.896, -5.58908, 0.68", "193.236, -328.449, -5.80269, 0.68", "193.709, -329.263, -5.8146, 0.68", "195.267, -332.169, -5.67391, 0.57", "195.651, -332.946, -5.59697, 0.57", "195.902, -333.51, -5.52485, 2.49", "197.479, -337.261, -4.8979, 0.68", "197.894, -338.335, -4.66655, 0.68", "199.376, -342.112, -3.80531, 0.68", "199.863, -343.3, -3.54384, 0.68", "200.929, -345.676, -3.06956, 0.68", "202.115, -348.059, -2.65403, 0.68", "203.331, -350.187, -2.37571, 0.68", "204.493, -351.977, -2.10305, 0.68", "206.399, -354.517, -1.69459, 0.68", "207.17, -355.47, -1.49871, 0.68", "207.75, -356.171, -1.30844, 2.72", "208.611, -357.258, -0.98441, 1.92", "210.153, -359.446, -0.246133, 0.91", "211.0, -360.897, 0.351464, 0.91", "211.719, -362.409, 1.09133, 0.68", "212.429, -364.097, 2.03166, 0.68", "213.119, -365.841, 3.1364, 0.68", "213.978, -368.086, 4.67198, 0.68", "214.575, -369.664, 5.91842, 0.68", "215.428, -371.835, 7.8714, 0.68", "216.149, -373.46, 9.62028, 0.68", "217.202, -375.572, 12.1369, 0.68", "217.717, -376.491, 13.4026, 0.68", "218.963, -378.482, 16.1864, 0.68", "219.771, -379.671, 17.791, 0.68", "221.87, -382.629, 21.5611, 0.68", "222.686, -383.785, 22.9218, 0.68", "224.66, -386.568, 25.8928, 0.68", "226.051, -388.543, 27.7858, 0.68", "226.521, -389.206, 28.3082, 0.68", "226.928, -389.792, 28.7163, 0.68", "228.089, -391.617, 29.7715, 0.68", "228.553, -392.371, 30.2474, 0.68", "229.746, -394.414, 31.465, 0.45", "230.37, -395.503, 32.3489, 0.45", "230.634, -395.987, 32.767, 0.45", "231.037, -396.733, 33.4313, 0.45" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.6737, -47.4996, -2.59566, 0.79", "15.8436, -45.9924, -3.28418, 0.79", "16.8652, -44.6762, -3.8854, 0.57", "17.3324, -44.0742, -4.16042, 0.34", "17.864, -43.3893, -4.47328, 0.34", "18.0897, -43.0986, -4.60608, 0.34" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "66.032, -19.0957, -47.503, 0.45", "66.5139, -21.4003, -48.7705, 0.45", "67.0972, -24.2386, -50.5582, 0.45", "68.2679, -30.0867, -54.4788, 0.45", "68.9634, -33.8741, -57.6949, 0.45", "69.4474, -37.5519, -61.0902, 0.45", "69.5258, -38.6085, -62.0727, 0.45", "69.6211, -42.2877, -65.5404, 0.45", "69.5824, -47.0524, -70.05, 0.45", "69.2839, -53.8926, -76.3379, 0.45", "68.9795, -57.8703, -79.9439, 0.45", "68.2733, -63.5307, -84.8994, 0.45", "67.3299, -68.9722, -89.3508, 0.45", "66.4268, -72.7983, -92.1989, 0.45", "64.6861, -78.1382, -95.8106, 0.45", "63.316, -81.3312, -97.6477, 0.45", "61.9027, -84.1798, -99.3246, 0.45", "59.7469, -87.4685, -101.293, 0.45", "57.7021, -89.7401, -102.644, 0.45", "54.5607, -92.4557, -104.194, 0.45", "50.3545, -95.4039, -105.718, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "66.032, -19.0957, -47.503, 0.45", "69.2258, -25.4801, -48.9415, 0.45", "70.6635, -28.3539, -49.589, 0.45", "72.6389, -32.3028, -50.4788, 0.45", "73.6722, -34.3682, -50.9441, 0.45", "75.8958, -38.8131, -51.9456, 0.45" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "40.3596, -137.528, 36.8774, 0.57", "39.2455, -138.759, 37.9586, 0.57", "38.4019, -139.782, 38.8343, 0.57", "37.7207, -140.643, 39.5382, 0.57", "37.3155, -141.222, 39.9555, 0.57", "36.6965, -142.25, 40.6232, 0.57", "35.9653, -143.789, 41.6206, 0.57", "35.6102, -144.792, 42.2629, 0.57", "35.3884, -145.545, 42.6776, 0.57", "35.0955, -146.853, 43.5822, 0.57", "34.7178, -148.661, 44.915, 0.57", "34.2602, -150.731, 46.6964, 0.57", "34.0726, -151.371, 47.3368, 0.57", "33.5026, -152.721, 49.1557, 0.57", "31.8047, -155.075, 53.8919, 0.57", "31.1652, -155.45, 55.2534, 0.57", "30.0952, -155.575, 56.9305, 0.57", "28.9319, -155.489, 58.3675, 0.57", "27.4568, -155.33, 60.1873, 0.57", "26.184, -155.188, 61.583, 0.57", "24.6495, -155.114, 63.0973, 0.57", "23.3599, -155.19, 64.4989, 0.57", "21.765, -155.513, 66.3078, 0.57", "19.3943, -156.463, 69.1994, 0.57", "18.3347, -157.234, 70.8257, 0.57", "17.3898, -158.242, 72.6915, 0.57", "16.9363, -158.9, 73.9096, 0.57", "16.7221, -159.276, 74.6667, 0.57", "16.4293, -159.803, 75.746, 0.57", "15.3035, -161.535, 79.6431, 0.57", "15.0603, -161.877, 80.4547, 0.57", "14.7029, -162.327, 81.5511, 0.57", "13.5368, -163.681, 85.0098, 0.57", "13.0116, -164.262, 86.3955, 0.57", "11.3663, -165.968, 90.1934, 0.57", "10.9958, -166.344, 90.9569, 0.57", "9.52279, -167.838, 93.8269, 0.57", "9.09847, -168.266, 94.604, 0.57", "8.09884, -169.224, 96.233, 0.57", "7.57271, -169.719, 97.018, 0.57", "5.20624, -171.966, 100.162, 0.57", "4.07799, -173.039, 101.551, 0.57", "2.57168, -174.429, 103.063, 0.57", "0.512572, -176.319, 104.849, 0.57", "-1.9631, -178.575, 106.726, 0.57", "-2.69072, -179.235, 107.14, 0.57", "-4.02078, -180.434, 107.614, 0.57", "-6.6725, -182.646, 107.68, 0.57", "-8.24997, -183.869, 107.293, 0.57", "-10.0735, -185.256, 106.582, 0.57", "-12.096, -186.766, 105.638, 0.57", "-13.7388, -187.973, 104.79, 0.57", "-20.1709, -192.678, 101.023, 0.57", "-20.2822, -192.76, 100.95, 2.26", "-22.2891, -194.135, 99.2972, 0.68", "-23.0967, -194.653, 98.4479, 0.68" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "40.3596, -137.528, 36.8774, 0.57", "41.6922, -141.241, 43.4934, 0.57", "42.6762, -143.888, 48.0011, 0.57", "42.9203, -144.462, 48.8686, 0.57", "43.634, -146.072, 51.0783, 0.57", "45.0242, -149.18, 55.3605, 0.57", "48.4914, -156.438, 65.2751, 0.57", "49.2656, -157.863, 67.0633, 0.57", "50.9624, -160.782, 70.4306, 0.57", "51.6637, -161.895, 71.6106, 0.57", "54.5827, -166.282, 76.1236, 0.57", "55.6419, -167.862, 77.4001, 0.57", "57.3381, -170.332, 78.6539, 0.57", "59.0365, -172.622, 79.9769, 0.57", "61.3907, -175.792, 81.9485, 0.57" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "72.2964, -72.9021, 2.60114, 0.34", "72.0391, -73.725, 2.0701, 0.34", "71.902, -74.371, 1.62396, 0.34", "71.764, -75.0748, 1.15237, 0.45", "71.5337, -76.2853, 0.375759, 0.45", "71.3221, -77.4144, -0.371936, 0.45", "71.1356, -78.4406, -1.042, 0.45", "70.9407, -79.7535, -2.01544, 0.45", "70.8861, -80.2936, -2.42262, 0.45", "70.8569, -80.681, -2.71376, 0.45", "70.7927, -81.714, -3.45607, 0.45", "70.754, -82.4245, -3.91907, 0.45", "70.6491, -84.3651, -5.11292, 0.45", "70.6, -85.1701, -5.61104, 0.45", "70.5796, -85.6816, -5.92256, 0.45", "70.534, -86.7365, -6.51345, 0.45", "70.4946, -87.8581, -7.16799, 0.45", "70.4589, -88.5201, -7.61954, 0.45", "70.3645, -89.6498, -8.47537, 0.45", "70.3096, -90.1831, -8.92402, 0.45", "70.2241, -90.8968, -9.62818, 0.45", "69.9858, -92.5356, -11.4216, 0.45", "69.8803, -93.2488, -12.3289, 0.45", "69.8081, -93.7911, -13.0424, 0.45", "69.7346, -94.4566, -13.9076, 0.45", "69.6014, -95.7876, -15.6257, 0.23", "69.5743, -96.1134, -16.0453, 0.23", "69.48, -97.3174, -17.4089, 0.23", "69.4649, -97.7922, -17.924, 0.23", "69.4568, -98.8821, -19.1515, 0.45", "69.4619, -99.2345, -19.564, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "72.2964, -72.9021, 2.60114, 0.45", "74.0924, -75.1689, 2.43402, 0.45", "75.8353, -77.4109, 2.23333, 0.45", "77.219, -79.2587, 2.04569, 0.45", "78.97, -81.705, 1.91219, 0.45", "81.8406, -85.7385, 1.7806, 0.45", "83.7657, -88.4433, 1.69236, 0.45", "84.8588, -90.0561, 1.60318, 0.45", "86.6233, -92.8199, 1.44764, 0.45", "88.4065, -95.7352, 1.27472, 0.45", "89.9903, -98.335, 1.28113, 0.45" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-19.1812, -89.458, -22.0242, 0.57", "-21.763, -89.8946, -25.3223, 0.57", "-22.1319, -89.9569, -25.7935, 0.57", "-22.9324, -90.0923, -26.816, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-19.1812, -89.458, -22.0242, 0.68", "-19.6781, -90.8257, -22.5367, 0.68", "-20.7116, -92.7608, -23.5512, 0.68", "-21.2884, -93.7008, -24.0509, 0.68", "-21.7916, -94.4208, -24.4119, 0.68", "-23.0866, -95.9695, -25.3202, 0.68", "-23.7037, -96.6626, -25.7341, 0.68", "-25.7399, -98.7686, -27.051, 0.68", "-26.4258, -99.5188, -27.4715, 0.68", "-27.2755, -100.471, -27.9212, 0.68", "-28.9943, -102.442, -28.7358, 0.68", "-30.2879, -103.952, -29.211, 0.68", "-32.3583, -106.453, -29.8643, 0.68", "-34.0864, -108.612, -30.3088, 0.68", "-35.9346, -110.956, -30.7254, 0.68", "-37.3853, -112.846, -31.0149, 0.68", "-39.054, -115.046, -31.2267, 0.68", "-40.5838, -116.926, -31.3812, 0.57", "-41.9576, -118.463, -31.4519, 0.57", "-43.6788, -120.305, -31.5818, 0.57" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "8.74766, -72.9769, 15.2075, 0.45", "5.25795, -74.6519, 18.6057, 0.45", "3.6367, -75.1972, 20.2539, 0.45", "-0.184328, -76.1447, 23.7052, 0.45", "-1.2176, -76.3373, 24.6711, 0.45", "-2.6702, -76.488, 26.0055, 0.45", "-3.53688, -76.5779, 27.3039, 0.45", "-4.3346, -76.6257, 29.0944, 0.45", "-5.00235, -76.5593, 31.009, 0.45", "-5.78117, -76.3113, 32.9485, 0.45", "-6.34982, -76.0538, 34.287, 0.45", "-9.87063, -74.3623, 42.6045, 0.45", "-10.6491, -74.0594, 44.3281, 0.45", "-12.2644, -73.5875, 47.5538, 0.45", "-14.8512, -72.9798, 52.2452, 0.45", "-15.8824, -72.8901, 53.823, 0.45", "-18.9372, -73.3477, 57.8295, 0.45", "-20.3931, -73.901, 59.1928, 0.45", "-21.2199, -74.4395, 59.9622, 0.34", "-22.1078, -75.2814, 60.7547, 0.34", "-24.5632, -77.9264, 62.5064, 0.34", "-26.8395, -80.3472, 63.6781, 0.34", "-28.5592, -82.0685, 64.267, 0.34", "-30.6199, -83.992, 64.9939, 0.34", "-34.1035, -87.0926, 66.2917, 0.34", "-38.664, -90.8717, 68.0483, 0.34", "-40.272, -92.0061, 68.6347, 0.34", "-41.4081, -92.6824, 69.1724, 0.34", "-44.5795, -94.397, 71.0495, 0.34", "-46.6339, -95.5265, 72.6646, 0.34", "-48.1252, -96.3959, 74.266, 0.34", "-49.6718, -97.3961, 76.3714, 0.34", "-51.6214, -98.7622, 78.9185, 0.34", "-54.0153, -100.592, 81.9999, 0.34", "-56.6885, -102.778, 85.2377, 0.34", "-59.3545, -105.067, 88.3238, 0.34", "-61.0444, -106.635, 90.1463, 0.34", "-63.5431, -109.218, 92.6723, 0.34", "-64.9778, -110.734, 93.9103, 0.34", "-65.9911, -111.788, 94.6586, 0.34", "-69.1138, -114.868, 96.3896, 0.34", "-70.9643, -116.762, 97.3098, 0.34", "-73.4045, -119.271, 98.5582, 0.34", "-74.3357, -120.201, 99.0905, 0.34", "-76.6571, -122.345, 100.264, 0.34", "-77.9114, -123.461, 100.85, 0.34", "-80.3627, -125.575, 101.867, 0.34", "-81.8184, -126.794, 102.39, 0.34", "-83.451, -128.095, 102.878, 0.34", "-86.3937, -130.382, 103.687, 0.34", "-88.853, -132.183, 104.308, 0.34", "-91.4479, -133.888, 104.896, 0.34", "-93.9303, -135.303, 105.435, 0.34", "-95.8271, -136.301, 105.934, 0.34", "-97.6902, -137.21, 106.448, 0.34", "-99.4935, -137.981, 106.985, 0.34", "-101.0, -138.478, 107.48, 0.34", "-103.801, -139.074, 108.535, 0.34", "-105.776, -139.292, 109.421, 0.34" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.74766, -72.9769, 15.2075, 2.72", "13.9435, -77.5961, 19.1507, 2.72", "16.2238, -79.6049, 20.7461, 1.47", "18.0658, -81.401, 21.9537, 1.13", "23.7877, -87.3197, 25.5721, 1.13", "24.7856, -88.5298, 26.2043, 3.39", "26.4684, -91.0102, 27.3177, 1.81", "28.7181, -96.2997, 28.754, 0.68", "29.5566, -99.2654, 29.3674, 0.68", "29.6927, -100.874, 29.5968, 0.68", "29.3337, -105.666, 29.9954, 0.68", "28.9311, -108.925, 30.3491, 0.68", "28.39, -111.771, 30.6904, 0.68", "27.6227, -114.966, 30.9932, 0.68", "26.8135, -118.657, 31.4509, 0.68", "26.3151, -120.952, 31.7161, 0.68", "25.7573, -123.921, 32.0705, 0.68", "25.2706, -126.564, 32.3316, 0.68", "24.3209, -132.274, 32.9102, 0.68", "24.1961, -133.593, 33.0897, 3.51", "24.1086, -136.679, 33.5777, 1.7", "24.1913, -139.048, 34.1464, 0.79", "24.4258, -141.792, 35.0337, 0.79", "25.0947, -146.848, 36.9734, 0.68", "25.8888, -151.586, 38.9551, 0.79", "26.132, -153.01, 39.5253, 0.45", "27.5329, -157.037, 41.6901, 0.45", "28.2521, -158.507, 42.5905, 0.45", "28.9186, -159.584, 43.2975, 0.68", "30.8059, -162.101, 45.0873, 0.68", "31.8505, -163.402, 45.9986, 0.68", "38.7816, -171.732, 51.8195, 2.38", "40.0104, -173.116, 52.8248, 1.47", "40.6749, -173.872, 53.3798, 0.79", "43.1923, -176.774, 55.4617, 0.79", "44.9714, -178.939, 56.9111, 0.79", "46.0889, -180.543, 57.8026, 2.15", "48.5683, -185.586, 59.5694, 0.79", "49.9888, -188.621, 60.4644, 0.68", "50.8627, -190.817, 60.8948, 0.68", "51.5207, -192.846, 61.0658, 0.68", "51.7273, -193.658, 61.0872, 0.68", "52.0693, -196.144, 60.942, 0.68", "52.1182, -198.827, 60.601, 0.68", "51.8483, -203.577, 60.1679, 0.68", "51.719, -204.489, 60.1362, 2.6", "51.4093, -206.042, 60.164, 2.26", "50.0908, -211.138, 60.6015, 0.45", "49.5817, -212.735, 60.8643, 0.45", "48.6919, -215.11, 61.3541, 0.45", "47.3088, -218.527, 62.1654, 0.45", "46.0075, -221.752, 63.0426, 0.45", "44.5984, -225.337, 64.1486, 0.45", "43.1453, -229.13, 65.4551, 0.45", "41.7077, -232.831, 66.6873, 2.38", "41.3653, -233.724, 66.9691, 3.51", "39.7044, -238.065, 68.3509, 0.57", "38.9614, -239.991, 68.9574, 1.24" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.25049, -63.0806, 18.0762, 0.45", "7.76857, -62.5665, 16.9677, 0.45", "8.14316, -62.2693, 16.3597, 0.45", "8.74061, -61.908, 15.5146, 0.45", "10.4755, -61.1244, 13.426, 0.45", "12.084, -60.4757, 11.6037, 0.45", "13.6421, -59.8492, 9.868, 0.45", "15.1979, -59.1656, 7.77839, 0.45", "16.5625, -58.5446, 5.90901, 0.45", "17.6328, -58.0689, 4.47257, 0.45", "19.6719, -57.2045, 1.82811, 0.45", "21.075, -56.5913, 0.00342369, 0.45", "23.6781, -55.2518, -3.70403, 0.45", "24.4951, -54.7376, -5.26595, 0.45", "24.5739, -54.6727, -5.4449, 0.45", "24.6834, -54.5565, -5.78066, 0.45", "25.1329, -54.1296, -7.18846, 0.45", "26.1455, -53.4972, -10.4212, 0.45", "26.76, -53.2827, -12.0685, 0.45", "27.0889, -53.2049, -12.9277, 0.45", "27.8839, -53.1095, -14.9703, 0.45", "28.4028, -53.1152, -16.2368, 0.45", "29.6905, -53.2012, -19.2425, 0.45", "30.6009, -53.2083, -20.9615, 0.45", "30.9736, -53.2086, -21.6001, 0.45", "31.4054, -53.1785, -22.2766, 0.45", "31.9086, -53.0654, -22.946, 0.45", "32.6401, -52.7381, -23.8007, 0.45", "33.9878, -51.8919, -24.8903, 0.45", "34.5871, -51.4925, -25.4359, 0.45", "36.3105, -50.3167, -27.0938, 0.45", "37.1009, -49.7659, -27.9189, 0.45", "37.7877, -49.3173, -28.6534, 0.45", "39.1048, -48.5561, -30.0464, 0.45", "42.2881, -47.0255, -33.2455, 0.45", "42.6748, -46.8558, -33.6363, 0.45", "43.8737, -46.4244, -34.8934, 0.45", "44.699, -46.1799, -35.8019, 0.45", "45.0778, -46.0908, -36.2302, 0.45", "46.4462, -45.8193, -37.7497, 0.45", "47.6866, -45.5865, -38.3597, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-23.0967, -194.653, 98.4479, 0.57", "-24.4463, -196.124, 98.9858, 0.57", "-28.3651, -199.853, 100.391, 0.57", "-31.6983, -202.713, 101.503, 0.45", "-34.6633, -205.046, 102.819, 0.45", "-36.9521, -206.755, 103.939, 0.45", "-38.964, -208.217, 105.041, 0.45", "-41.2637, -209.769, 106.335, 0.45", "-43.7132, -211.166, 107.81, 0.45", "-50.2218, -214.506, 112.08, 0.45", "-51.4148, -215.116, 112.954, 0.45", "-53.5265, -216.318, 114.698, 0.45" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-23.0967, -194.653, 98.4479, 0.57", "-23.5378, -200.771, 100.356, 0.57", "-23.6988, -202.857, 101.039, 0.57", "-23.8897, -205.48, 101.862, 0.57", "-24.1543, -209.021, 102.93, 0.57", "-24.3006, -211.451, 103.729, 0.57", "-24.3504, -212.679, 104.127, 0.57", "-24.3552, -212.901, 104.215, 2.04", "-24.6424, -216.003, 105.045, 0.57", "-24.8537, -217.073, 105.245, 0.57", "-25.3744, -218.618, 105.413, 1.92", "-26.9364, -222.506, 106.26, 0.68", "-27.6873, -224.207, 106.737, 0.68", "-29.8404, -228.661, 108.028, 0.57", "-31.2173, -231.677, 109.361, 0.57", "-32.9723, -236.014, 111.729, 0.57", "-35.0505, -242.604, 115.666, 0.57", "-35.2651, -243.611, 116.33, 0.57", "-35.4922, -245.784, 117.732, 0.45", "-35.3546, -254.306, 123.568, 0.45", "-35.2598, -255.703, 124.5, 0.45", "-34.9514, -259.965, 127.188, 0.45", "-34.8404, -263.214, 128.86, 0.45", "-34.8284, -265.874, 130.42, 0.45", "-35.2052, -271.141, 133.644, 0.45", "-35.6237, -273.25, 134.944, 0.45", "-36.0816, -275.034, 136.257, 0.45", "-36.2776, -275.658, 136.801, 0.45", "-37.861, -280.298, 141.345, 0.11", "-38.7799, -282.859, 144.067, 0.23", "-40.1635, -286.671, 147.902, 0.23", "-40.6852, -288.302, 149.666, 0.23" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "89.9903, -98.335, 1.28113, 0.34", "91.7714, -100.671, 0.99474, 0.34", "93.9154, -103.483, 0.650003, 0.34", "96.02, -106.243, 0.311625, 0.34", "97.5325, -108.227, 0.0684195, 0.34", "98.3487, -109.297, -0.0628109, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "89.9903, -98.335, 1.28113, 0.45", "92.4618, -96.7872, -0.170114, 0.45", "94.2803, -95.6192, -1.36573, 0.45", "97.0357, -93.8882, -3.19775, 0.45", "98.9492, -92.6508, -4.42601, 0.45", "102.781, -90.1584, -6.83149, 0.45", "105.389, -88.5509, -8.39312, 0.45", "107.434, -87.3993, -9.49826, 0.45", "110.227, -85.9175, -11.019, 0.45", "113.431, -84.2244, -12.8699, 0.45", "113.816, -84.011, -13.1225, 1.58", "116.692, -82.3567, -15.0561, 0.34", "118.972, -81.092, -16.7742, 0.34", "122.665, -79.0302, -20.0153, 0.34", "124.671, -77.9268, -22.0548, 0.34", "126.776, -77.1703, -24.2916, 0.34", "128.094, -76.855, -25.8063, 0.34", "129.608, -76.7498, -27.4947, 0.34", "132.024, -77.1198, -29.9966, 0.34", "133.994, -77.7126, -31.6859, 0.34", "139.592, -79.8169, -35.9132, 0.34", "142.577, -81.0737, -38.1652, 0.34", "145.688, -82.4701, -40.5244, 0.34", "150.505, -84.781, -44.0547, 0.34", "153.426, -86.338, -46.1402, 0.34", "156.552, -88.1069, -48.4063, 0.34", "159.697, -89.8641, -50.4788, 0.34", "162.897, -91.5381, -52.3402, 0.34", "164.406, -92.1927, -53.1003, 0.34", "166.294, -92.8969, -53.787, 0.34", "168.524, -93.7019, -54.4336, 0.34", "170.292, -94.2787, -54.8299, 0.34", "172.374, -94.8732, -55.2027, 0.34", "179.631, -96.8046, -56.5233, 0.34", "183.049, -97.6147, -57.1661, 0.34", "186.486, -98.3948, -57.8275, 0.34", "189.661, -99.1347, -58.4556, 0.34", "194.89, -100.405, -59.6196, 0.34", "198.986, -101.392, -60.5704, 0.34", "201.541, -101.959, -61.2151, 0.34" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-105.776, -139.292, 109.421, 0.34", "-106.6, -139.861, 110.144, 0.34", "-108.352, -141.265, 111.324, 0.34", "-109.065, -141.885, 111.696, 2.04", "-109.774, -142.528, 112.022, 1.13", "-110.892, -143.664, 112.531, 0.79", "-111.683, -144.488, 112.727, 0.57", "-113.129, -145.974, 112.851, 0.57", "-116.242, -149.11, 112.798, 0.57", "-117.664, -150.468, 112.871, 0.57", "-119.931, -152.532, 113.122, 0.57", "-124.019, -156.081, 113.791, 0.57", "-126.346, -157.923, 114.215, 0.57", "-127.458, -158.726, 114.438, 0.57", "-132.035, -161.815, 115.498, 0.57", "-133.374, -162.687, 115.857, 0.57", "-134.592, -163.512, 116.29, 0.57", "-136.445, -164.908, 117.118, 0.57", "-138.281, -166.458, 118.025, 0.57", "-139.476, -167.561, 118.669, 0.57", "-140.893, -169.072, 119.467, 0.57", "-144.319, -172.993, 121.633, 0.57", "-146.083, -175.068, 122.825, 0.57", "-148.397, -177.861, 124.451, 0.57", "-150.199, -180.043, 125.719, 0.57", "-152.071, -182.226, 126.982, 0.57", "-153.338, -183.723, 127.846, 0.57", "-154.603, -185.201, 128.631, 0.57", "-156.173, -187.036, 129.618, 0.57", "-157.088, -188.072, 130.112, 0.57", "-158.137, -189.208, 130.661, 0.57", "-160.25, -191.434, 131.796, 0.57", "-162.262, -193.586, 132.744, 0.57", "-163.71, -195.138, 133.321, 0.57", "-165.546, -197.079, 133.921, 0.57", "-167.069, -198.704, 134.311, 0.57", "-168.114, -199.818, 134.504, 0.57", "-170.183, -201.91, 134.487, 0.57", "-171.777, -203.488, 134.302, 0.57", "-173.676, -205.252, 133.735, 0.57", "-175.369, -206.752, 132.904, 0.57", "-177.221, -208.3, 131.775, 0.57", "-180.251, -210.604, 129.62, 0.57", "-181.41, -211.426, 128.809, 0.57", "-185.49, -214.125, 126.025, 0.57", "-188.462, -215.997, 124.012, 0.57", "-189.439, -216.632, 123.386, 0.57", "-192.063, -218.534, 121.953, 0.57", "-194.766, -221.101, 121.276, 0.57", "-196.309, -222.99, 121.333, 0.57", "-196.8, -223.748, 121.553, 0.57", "-197.854, -225.536, 122.227, 0.57", "-198.461, -226.58, 122.611, 0.57", "-200.329, -230.083, 123.667, 0.57", "-201.588, -232.476, 123.958, 0.57", "-202.233, -233.67, 123.88, 0.45", "-202.831, -234.79, 123.664, 0.45", "-203.732, -236.615, 122.957, 0.45", "-204.748, -239.069, 121.428, 0.45", "-205.402, -241.008, 119.81, 0.45", "-206.262, -244.036, 117.037, 0.45", "-206.663, -245.625, 115.555, 0.45", "-207.138, -247.994, 113.516, 0.45", "-207.557, -250.661, 111.483, 0.45", "-207.91, -252.679, 110.249, 0.45", "-208.054, -253.49, 109.888, 0.45", "-208.355, -254.937, 109.501, 0.45", "-209.139, -257.883, 108.999, 0.45", "-209.777, -259.901, 108.911, 0.45", "-210.778, -262.607, 109.036, 0.45", "-211.775, -265.025, 109.457, 0.45", "-212.83, -267.351, 110.076, 0.45", "-213.565, -268.785, 110.658, 0.45", "-214.085, -269.718, 111.24, 0.45", "-214.605, -270.685, 112.09, 0.45", "-216.186, -274.088, 115.312, 0.45", "-216.494, -274.794, 115.978, 0.45", "-216.91, -276.07, 117.378, 0.45", "-217.512, -278.539, 120.071, 0.45", "-217.893, -280.845, 122.474, 0.45", "-218.19, -283.898, 125.341, 0.45", "-218.299, -285.56, 126.614, 0.45", "-219.078, -293.785, 132.114, 0.45", "-219.335, -295.973, 133.325, 0.45", "-219.795, -298.867, 134.273, 0.45", "-220.58, -302.965, 134.912, 0.45", "-221.841, -309.211, 135.168, 0.45", "-222.896, -314.363, 134.847, 0.45", "-223.897, -318.965, 133.999, 0.45", "-226.072, -329.483, 131.664, 0.45", "-226.381, -331.041, 131.24, 0.45", "-227.013, -334.892, 130.044, 0.45", "-227.301, -337.377, 129.0, 0.45", "-227.528, -340.843, 127.41, 0.45", "-227.641, -343.496, 126.199, 0.45", "-227.717, -344.925, 125.733, 0.45", "-227.92, -346.944, 125.098, 0.45", "-229.034, -354.445, 123.198, 0.45", "-229.699, -358.447, 122.85, 0.45", "-229.979, -360.041, 122.986, 0.45", "-231.069, -365.712, 124.033, 0.45", "-231.624, -368.455, 124.774, 0.45", "-232.666, -372.719, 126.191, 0.45", "-233.933, -377.594, 128.477, 0.45", "-234.519, -379.757, 129.331, 0.45", "-235.159, -382.79, 130.154, 0.45", "-235.242, -384.127, 130.259, 0.45", "-234.913, -388.775, 129.824, 0.45", "-234.107, -394.151, 128.465, 0.45", "-232.212, -402.381, 125.261, 0.45", "-230.322, -407.762, 122.821, 0.45", "-228.782, -410.82, 121.288, 0.45", "-228.43, -411.369, 120.973, 0.45" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-105.776, -139.292, 109.421, 0.34", "-102.97, -138.422, 110.461, 0.34", "-100.96, -137.799, 111.207, 0.34", "-93.1685, -135.382, 114.097, 0.34", "-91.0196, -134.716, 114.894, 0.34" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "38.9614, -239.991, 68.9574, 0.57", "37.9425, -241.487, 71.214, 0.57", "35.7618, -244.297, 74.2298, 0.57", "34.4584, -246.03, 75.6806, 0.57", "32.3817, -248.602, 77.1497, 0.57", "30.3471, -251.215, 78.3708, 0.57", "26.6491, -256.01, 80.4514, 0.57", "24.5205, -258.785, 81.438, 0.57", "22.0327, -262.011, 82.4252, 0.57", "17.5692, -267.859, 84.2336, 0.57", "12.5711, -274.285, 86.3008, 0.57", "9.33646, -278.55, 87.8726, 0.57", "8.26966, -280.004, 88.5094, 2.15", "7.34698, -281.263, 89.1521, 1.36", "5.60482, -283.777, 90.8158, 0.68", "4.83133, -285.069, 91.9752, 0.68", "4.08223, -286.472, 93.5368, 0.57", "3.74815, -287.239, 94.5266, 0.57", "2.96896, -289.25, 97.239, 0.57", "2.14193, -291.433, 100.306, 0.57", "1.59195, -292.895, 102.328, 0.57", "0.794873, -294.827, 104.659, 0.57", "-0.21644, -296.759, 106.614, 0.57", "-0.679352, -297.556, 107.296, 0.57", "-1.47309, -298.813, 108.17, 0.57", "-2.63963, -300.559, 109.234, 0.57", "-6.20294, -305.701, 112.244, 0.57", "-8.58857, -308.961, 113.965, 0.57", "-10.6519, -311.726, 115.354, 0.57", "-13.2705, -315.079, 117.087, 0.57", "-16.5915, -319.299, 119.45, 0.57", "-20.8434, -324.424, 122.694, 0.57", "-22.6283, -326.404, 124.02, 1.7", "-24.2487, -328.127, 125.222, 1.7", "-25.9322, -329.743, 126.298, 0.68", "-29.1224, -332.535, 128.164, 0.68", "-31.1574, -334.294, 129.257, 0.68", "-34.3473, -337.168, 130.962, 0.68", "-35.2296, -338.011, 131.408, 1.7", "-36.6646, -339.524, 132.029, 1.7", "-37.6309, -340.656, 132.397, 1.7", "-38.7569, -342.14, 132.782, 0.68", "-41.3024, -346.003, 133.712, 0.68", "-43.6378, -349.954, 134.707, 0.68", "-45.3751, -353.274, 135.609, 0.68", "-46.1304, -354.912, 136.069, 0.68", "-47.7265, -358.849, 137.22, 0.68", "-49.0555, -362.581, 138.395, 0.68", "-49.5941, -364.479, 139.057, 0.68", "-50.6153, -369.067, 140.887, 0.68", "-50.8705, -370.415, 141.442, 0.68", "-51.1483, -372.055, 142.127, 1.02", "-51.424, -373.754, 142.813, 0.45", "-51.8098, -376.42, 143.719, 0.45", "-51.9446, -377.238, 143.926, 0.45", "-52.4058, -379.696, 144.448, 0.45", "-52.9435, -382.598, 145.08, 0.45", "-53.53, -385.913, 145.785, 0.45", "-54.1845, -389.739, 146.571, 0.45", "-54.7233, -393.179, 147.291, 0.45", "-55.5752, -398.54, 148.427, 0.45", "-55.808, -400.176, 148.756, 0.45", "-56.0552, -402.203, 149.134, 1.47", "-56.1364, -402.902, 149.263, 1.47", "-56.6218, -406.284, 149.792, 0.68", "-57.2496, -410.336, 150.352, 0.57", "-57.7511, -413.988, 150.873, 0.57", "-58.1366, -417.413, 151.517, 0.57", "-58.2333, -418.387, 151.735, 0.57", "-58.4014, -421.391, 152.598, 0.57", "-58.2991, -424.712, 153.945, 0.57", "-57.9314, -427.587, 155.301, 1.7", "-57.1324, -432.169, 157.534, 0.68", "-56.6371, -434.458, 158.635, 0.68", "-55.6536, -438.707, 160.584, 0.68", "-54.315, -444.942, 163.257, 0.68", "-53.6371, -449.276, 164.912, 0.68", "-53.5024, -450.921, 165.465, 2.15", "-53.4852, -451.933, 165.765, 2.15", "-53.7086, -455.324, 166.566, 0.68", "-54.2694, -459.23, 167.409, 0.68", "-54.6906, -461.73, 167.997, 0.68", "-55.2416, -465.131, 169.01, 0.68", "-55.8287, -468.765, 170.075, 0.68", "-56.3538, -472.329, 171.055, 0.68", "-57.0127, -477.894, 172.42, 0.68", "-57.3178, -481.547, 173.18, 0.68", "-57.5527, -484.338, 173.641, 0.68", "-57.9466, -488.559, 174.131, 0.68", "-58.1183, -490.244, 174.245, 0.68", "-58.593, -494.538, 174.319, 0.68", "-58.9527, -497.295, 174.197, 0.68", "-59.4246, -500.751, 174.033, 0.68", "-59.8606, -504.068, 174.018, 0.68", "-60.2041, -506.742, 174.19, 0.68", "-60.471, -508.454, 174.341, 0.68", "-60.7522, -510.331, 174.635, 0.68", "-60.8381, -511.013, 174.782, 0.68", "-61.1746, -514.186, 175.605, 0.68", "-61.4504, -517.842, 176.649, 0.68", "-61.5632, -520.492, 177.399, 0.68", "-61.6536, -524.197, 178.395, 0.68", "-61.6168, -527.739, 179.355, 0.68", "-61.5497, -528.685, 179.645, 0.68", "-61.2877, -531.045, 180.395, 0.57", "-61.0371, -533.168, 181.064, 0.57", "-60.5578, -537.121, 182.302, 0.57", "-59.9729, -540.823, 183.519, 0.57", "-59.2359, -544.874, 185.033, 0.57", "-58.5041, -548.933, 186.58, 0.57", "-57.9881, -552.661, 187.91, 0.57", "-57.7568, -555.277, 188.693, 1.47", "-57.5043, -560.597, 190.037, 0.45", "-57.5435, -563.189, 190.545, 0.45", "-57.8093, -568.662, 191.282, 0.45", "-57.9048, -573.154, 191.802, 0.45", "-57.9336, -578.353, 192.24, 0.45", "-57.5653, -582.551, 192.317, 0.45", "-59.7585, -581.388, 191.456, 0.45", "-63.4234, -577.676, 190.209, 0.45" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "38.9614, -239.991, 68.9574, 0.57", "38.5897, -241.438, 69.5617, 0.57", "38.3406, -242.4, 69.9632, 0.57", "38.0004, -243.754, 70.5074, 0.57", "37.4864, -245.8, 71.3297, 0.57", "36.8721, -248.244, 72.3121, 0.57", "36.4914, -249.76, 72.9212, 2.15", "36.1357, -251.09, 73.4643, 2.72", "35.8841, -252.133, 73.8816, 2.15" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "98.3487, -109.297, -0.0628109, 0.45", "102.322, -109.29, -0.568586, 0.45", "103.274, -109.288, -0.613282, 0.45", "105.023, -109.189, -0.607076, 0.45", "107.332, -109.019, -0.554557, 0.45", "109.444, -108.872, -0.49611, 0.45", "112.202, -108.625, -0.417452, 0.45", "113.164, -108.51, -0.331324, 0.45", "115.871, -108.032, -0.154887, 0.45", "117.962, -107.52, -0.0717287, 0.45", "119.592, -106.98, -0.0675106, 0.45", "121.833, -105.961, -0.268461, 0.45", "123.277, -105.135, -0.526184, 0.45", "124.833, -104.134, -0.872486, 0.45", "126.406, -103.038, -1.38282, 0.45", "128.129, -101.717, -2.1325, 0.45", "130.531, -99.7467, -3.30202, 0.45", "131.501, -98.9342, -3.8404, 0.45", "132.527, -98.0778, -4.46479, 0.45", "135.035, -96.0882, -6.0917, 0.45", "136.104, -95.307, -6.90617, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "98.3487, -109.297, -0.0628109, 0.34", "98.1902, -113.901, -0.829257, 0.34", "98.0024, -115.687, -1.15334, 0.34", "97.5748, -118.684, -1.69931, 0.34", "96.7152, -124.159, -2.70418, 0.34", "95.6896, -129.146, -3.77642, 0.34", "94.4247, -134.309, -4.87988, 0.34", "92.5492, -139.55, -5.87097, 0.34", "92.2389, -140.22, -5.98216, 0.34", "92.0145, -140.591, -6.04441, 1.58", "89.0346, -144.68, -6.49593, 0.45", "87.612, -146.504, -6.76291, 0.45", "83.9679, -151.133, -7.6569, 0.45", "82.7645, -152.759, -8.00335, 0.45", "79.8019, -157.159, -9.01684, 0.45", "78.8335, -158.757, -9.36043, 0.45", "76.4687, -163.333, -10.2551, 0.45", "75.4539, -165.563, -10.7893, 0.45", "73.8117, -169.97, -11.8039, 0.45", "72.8579, -172.776, -12.3903, 0.45", "71.7214, -176.531, -13.008, 0.45", "70.0563, -182.247, -14.0235, 0.45", "68.9108, -186.315, -14.6524, 0.45", "67.495, -191.561, -15.4579, 0.45", "66.3279, -195.824, -15.9935, 0.45", "65.3089, -199.523, -16.4857, 0.45", "64.0954, -203.772, -17.0662, 0.45", "62.9325, -207.629, -17.4863, 0.45", "62.1266, -209.967, -17.6315, 0.45", "60.6109, -213.694, -18.0655, 0.45", "60.0417, -215.039, -18.2311, 0.45", "58.3525, -218.807, -18.7162, 0.45", "57.3407, -221.027, -18.955, 0.45", "55.8822, -224.188, -19.3553, 0.45", "53.0778, -230.134, -20.6072, 0.45", "51.461, -233.69, -21.5557, 0.45", "50.5789, -235.749, -22.1416, 0.45", "49.9385, -237.523, -22.6404, 0.45", "49.4577, -238.989, -23.1022, 0.45", "47.5701, -245.217, -24.9925, 0.45", "46.7227, -248.113, -25.765, 0.45", "46.2245, -249.838, -26.2759, 0.45", "45.3832, -252.885, -27.14, 0.45", "43.9095, -257.799, -29.0427, 0.45", "43.2113, -260.111, -29.9951, 0.45", "42.7326, -261.797, -30.6274, 0.45", "42.1851, -263.712, -31.332, 0.45", "41.0618, -267.585, -32.7844, 0.45", "38.8437, -276.758, -35.2344, 0.45", "38.2245, -280.503, -35.5198, 0.45", "37.7737, -284.552, -35.2013, 0.45", "37.4272, -288.975, -33.8733, 0.45", "37.2996, -290.843, -32.9125, 0.45", "36.5468, -301.635, -25.0088, 0.45", "36.2975, -304.686, -22.2486, 0.45", "36.2281, -305.214, -21.7341, 0.45", "35.6008, -308.308, -18.7431, 0.45", "34.9732, -310.75, -16.6325, 0.45", "34.0313, -313.598, -14.8305, 0.45", "33.7757, -314.208, -14.6418, 0.45", "32.906, -316.259, -14.3205, 0.45", "31.5477, -319.62, -14.1223, 0.45", "30.5497, -322.251, -14.1751, 0.45", "29.1149, -326.256, -14.3959, 0.45", "27.6788, -330.542, -14.7123, 0.45", "25.5631, -337.993, -15.166, 0.45", "25.0052, -340.233, -15.2794, 0.45", "24.4822, -342.484, -15.3823, 0.45", "23.9141, -345.1, -15.454, 0.45", "23.4151, -348.003, -15.3802, 0.45", "22.7608, -353.995, -15.0454, 0.45", "22.7569, -355.483, -14.7788, 0.45" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "35.8841, -252.133, 73.8816, 0.45", "34.8228, -254.21, 74.9281, 0.45", "34.0065, -255.875, 75.7566, 0.45", "33.265, -257.416, 76.5208, 0.45", "32.1865, -259.823, 77.6667, 0.45", "31.5593, -261.223, 78.3591, 0.45", "30.6593, -263.346, 79.4687, 0.45", "29.8241, -265.626, 80.6585, 0.45", "29.6121, -266.223, 80.9803, 1.47", "28.8743, -268.351, 82.2314, 0.45", "28.4418, -269.707, 83.0594, 0.45", "28.1045, -271.09, 83.9551, 0.45", "27.9306, -272.126, 84.622, 0.45", "27.7112, -274.413, 86.0643, 0.45", "27.6008, -276.055, 87.0793, 0.79", "27.5324, -277.627, 88.0127, 0.79", "27.5157, -280.638, 89.7237, 0.45", "27.5123, -282.929, 90.9992, 0.45", "27.5928, -285.826, 92.5612, 0.45", "27.6893, -286.803, 93.099, 0.45", "27.8088, -287.744, 93.615, 1.92", "28.1923, -289.486, 94.6497, 1.47", "28.6042, -290.984, 95.5428, 0.57", "29.0751, -292.416, 96.4, 0.57", "30.0681, -294.843, 97.9262, 0.57", "30.8729, -296.741, 99.0732, 0.57", "32.5445, -300.904, 101.509, 0.57", "32.8643, -301.816, 101.993, 0.57", "33.3815, -303.695, 102.898, 0.57", "33.8911, -307.032, 104.273, 0.57", "33.9435, -308.929, 104.888, 0.57", "33.7365, -310.769, 105.276, 0.57", "33.313, -313.133, 105.676, 0.57", "32.7969, -316.444, 106.361, 0.57", "32.3007, -319.873, 107.178, 0.57", "31.847, -322.956, 107.913, 0.57", "31.1547, -328.072, 109.228, 0.57", "30.4738, -331.873, 110.233, 0.57", "29.6708, -335.347, 111.229, 0.23", "29.1795, -337.336, 111.865, 0.23", "28.6139, -339.451, 112.622, 0.23", "27.8621, -342.088, 113.605, 0.23", "26.8198, -345.554, 114.965, 0.23", "26.1698, -346.881, 115.356, 0.23", "25.1648, -348.568, 115.855, 1.7", "24.0396, -350.382, 116.592, 0.68", "23.0285, -351.915, 117.44, 0.45", "22.5395, -352.705, 118.053, 0.45", "20.9204, -355.393, 121.218, 0.45", "19.7059, -356.981, 123.883, 0.45", "18.8612, -357.841, 125.776, 0.45", "18.3742, -358.334, 127.095, 0.45", "17.8666, -358.868, 128.365, 0.45", "16.9756, -360.159, 130.414, 0.45", "16.848, -360.397, 130.686, 0.45", "16.4542, -361.044, 131.214, 1.92", "15.4087, -362.883, 132.376, 0.57", "14.2134, -365.235, 133.631, 0.57", "13.0591, -367.504, 134.589, 0.45", "12.43, -368.789, 135.05, 0.45", "11.1965, -371.367, 135.974, 0.45", "10.3337, -373.283, 136.653, 0.57", "9.83064, -374.442, 137.049, 0.57", "8.63853, -377.326, 138.023, 0.57", "6.97079, -381.16, 139.311, 0.57", "6.21369, -382.901, 139.882, 0.57", "4.53904, -386.766, 141.127, 0.57" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "35.8841, -252.133, 73.8816, 0.45", "36.3204, -254.41, 73.6673, 0.45", "36.5111, -255.403, 73.5547, 0.45", "37.392, -258.847, 73.2953, 0.45", "38.289, -262.082, 73.1547, 0.45", "38.9631, -264.726, 73.0493, 0.45", "38.9857, -264.824, 73.0427, 1.81", "39.2605, -266.08, 72.9361, 1.7", "39.9329, -269.291, 72.6779, 0.68", "40.3045, -271.129, 72.4841, 0.68", "40.8655, -273.467, 72.2334, 0.68", "41.5738, -276.257, 71.9022, 0.68", "41.9897, -277.918, 71.6373, 0.68", "42.5508, -280.152, 71.1706, 0.68", "43.1096, -282.364, 70.5769, 0.68", "43.8435, -284.934, 69.823, 0.68", "44.7028, -287.671, 68.9713, 0.68", "45.7274, -290.949, 67.8737, 0.68", "46.2359, -293.068, 67.0598, 0.68", "46.6222, -295.261, 66.1309, 0.68", "46.7984, -296.808, 65.4382, 0.68", "46.8905, -298.746, 64.5733, 0.68", "46.9484, -302.601, 62.9048, 0.68", "46.9709, -306.553, 61.2593, 0.57", "46.9794, -308.208, 60.5959, 0.57", "47.0057, -310.427, 59.7381, 0.57", "47.0175, -313.047, 58.6792, 0.57", "47.0447, -315.983, 57.4649, 0.57", "47.1503, -319.387, 56.0508, 0.57", "47.3333, -321.25, 55.2703, 0.57", "47.4806, -322.647, 54.6674, 0.57", "47.9805, -325.731, 53.3728, 0.57", "48.1406, -326.46, 53.0546, 0.57", "48.5457, -327.947, 52.4327, 0.57", "49.392, -330.188, 51.6634, 0.57", "49.6777, -330.845, 51.4542, 2.6", "50.7469, -333.148, 50.7798, 2.04", "51.9907, -336.201, 49.8109, 0.57", "52.3904, -337.476, 49.3201, 0.57", "53.526, -340.251, 48.4955, 0.57", "54.424, -342.259, 48.015, 0.57", "55.6213, -344.646, 47.5632, 0.57", "57.5828, -348.435, 46.9713, 0.57", "59.2189, -351.463, 46.6741, 0.57", "63.2963, -359.947, 45.6713, 0.57", "65.3299, -364.883, 45.0169, 0.57", "66.4032, -367.708, 44.6744, 0.57", "67.1971, -370.142, 44.3474, 0.57", "67.5846, -371.61, 44.1378, 0.57", "68.1641, -377.947, 42.6903, 0.57", "67.9312, -380.694, 41.7042, 0.57", "67.7669, -381.893, 41.2465, 0.57", "67.4407, -384.018, 40.4019, 0.45", "67.337, -385.017, 40.0156, 0.45", "67.3973, -387.021, 39.3246, 0.45", "67.8293, -389.123, 38.8194, 0.45", "68.0678, -390.104, 38.5869, 0.45", "68.3564, -391.215, 38.3429, 0.45", "68.6171, -392.243, 38.1267, 0.45", "69.2186, -394.709, 37.5874, 0.45", "69.6441, -396.433, 37.2421, 0.45", "70.1363, -398.523, 36.8492, 0.45", "70.747, -401.121, 36.3271, 0.45", "71.2297, -403.346, 35.8745, 0.45", "71.3989, -404.198, 35.7148, 0.45", "71.79, -406.412, 35.2922, 0.45", "72.4645, -410.2, 34.5921, 0.45", "73.0131, -413.247, 34.0481, 0.45", "73.596, -416.426, 33.5228, 0.45", "74.1493, -419.291, 33.0914, 0.45" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "136.104, -95.307, -6.90617, 0.45", "136.544, -96.3988, -9.4326, 0.45", "137.005, -97.4344, -11.3766, 0.45", "137.651, -98.6828, -13.4535, 0.45", "138.182, -99.8397, -15.3203, 0.45", "140.189, -105.333, -23.9811, 0.45", "141.288, -108.793, -29.3003, 0.45", "141.745, -110.912, -32.7619, 0.45", "141.864, -111.826, -34.2223, 0.45", "142.162, -115.035, -38.9354, 0.45", "142.402, -117.308, -41.9601, 0.45", "142.457, -117.679, -42.338, 0.45", "143.034, -120.808, -45.2592, 0.45", "143.496, -123.004, -47.3459, 0.45", "144.105, -125.14, -49.0032, 0.45", "144.974, -127.199, -50.3463, 0.34", "146.06, -129.321, -51.6056, 0.34", "146.787, -130.63, -52.3262, 0.34", "147.39, -131.615, -52.804, 0.34", "149.474, -134.738, -54.3154, 0.34", "152.03, -138.763, -56.264, 0.34", "152.778, -139.991, -56.7486, 0.34", "153.292, -140.919, -57.2269, 0.34", "154.244, -142.77, -58.3135, 0.34", "154.749, -143.798, -58.9619, 0.34", "155.721, -145.863, -60.3756, 0.34", "156.574, -147.744, -61.4938, 0.34", "158.771, -152.726, -64.8419, 0.34", "159.703, -154.854, -66.4396, 0.34", "159.932, -155.391, -66.8866, 0.34" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "136.104, -95.307, -6.90617, 0.45", "138.01, -95.7305, -7.17095, 0.45", "139.525, -96.2567, -7.53919, 0.45", "141.34, -97.016, -8.03004, 0.45", "143.691, -98.3028, -9.06788, 0.45", "145.288, -99.3816, -9.90552, 0.45", "147.592, -101.123, -11.1753, 0.45", "149.85, -103.216, -12.5552, 0.34", "150.793, -104.213, -13.1436, 0.34", "154.063, -107.985, -15.3824, 0.34", "156.017, -110.306, -16.7922, 0.34", "157.421, -111.961, -17.7422, 0.34", "158.743, -113.534, -18.5476, 0.34", "160.562, -115.613, -19.4147, 0.34", "162.584, -117.92, -20.2108, 0.34", "164.185, -119.691, -20.6007, 0.34", "165.716, -121.374, -20.9442, 0.34", "167.101, -122.958, -21.1574, 0.34", "168.196, -124.215, -21.1753, 0.34", "169.315, -125.53, -20.9812, 0.34", "170.515, -126.953, -20.7133, 0.34", "172.016, -128.684, -20.4192, 0.34", "174.817, -131.782, -19.998, 0.45", "177.17, -134.197, -19.6887, 0.45", "179.401, -136.336, -19.344, 0.45", "182.11, -138.83, -18.922, 0.45", "183.442, -139.969, -18.7856, 0.45", "184.996, -141.242, -18.7131, 0.45", "185.863, -141.936, -18.7577, 0.45", "189.586, -144.933, -19.2002, 0.45", "192.097, -146.985, -19.5515, 0.45", "194.52, -149.058, -19.7987, 0.45", "195.544, -149.954, -19.9207, 0.45", "198.972, -152.911, -20.2939, 0.45", "200.566, -154.316, -20.4199, 0.45", "202.724, -156.256, -20.4666, 0.45", "204.048, -157.439, -20.3478, 0.45", "204.977, -158.282, -20.214, 0.45", "207.34, -160.425, -19.8494, 0.45", "209.748, -162.658, -19.4076, 0.45", "211.83, -164.681, -19.2144, 0.45", "214.027, -166.919, -19.2379, 0.45", "215.626, -168.604, -19.5154, 0.45", "217.264, -170.423, -20.0415, 0.45", "218.469, -171.822, -20.6074, 0.45", "220.826, -174.613, -21.9175, 0.45", "222.116, -176.186, -22.6658, 0.45", "224.329, -178.925, -23.8754, 0.45", "226.415, -181.443, -24.8723, 0.45", "227.742, -182.986, -25.4521, 0.45", "228.944, -184.36, -26.0394, 0.45", "230.58, -186.233, -26.8174, 0.45", "231.528, -187.274, -27.3222, 0.45", "232.023, -187.823, -27.6094, 0.45", "233.225, -189.139, -28.3809, 0.45", "236.346, -192.428, -30.5316, 0.45", "237.569, -193.686, -31.4354, 0.45", "239.266, -195.414, -32.7719, 0.45", "240.657, -196.824, -33.8677, 0.45", "241.184, -197.379, -34.2839, 0.79" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "241.184, -197.379, -34.2839, 0.45", "240.515, -200.333, -35.0671, 0.45", "240.218, -202.221, -35.5006, 0.45", "240.049, -203.831, -36.0167, 0.45", "240.012, -204.628, -36.4433, 0.45", "240.088, -205.903, -37.2401, 0.45", "240.243, -206.989, -37.9211, 0.45", "240.716, -208.558, -38.9442, 0.45", "241.684, -211.152, -40.6725, 0.45", "243.019, -214.521, -42.9275, 0.45", "243.708, -216.399, -44.0386, 0.45", "244.607, -219.022, -45.3831, 0.45", "245.058, -220.635, -46.0649, 0.45", "245.588, -222.864, -46.6304, 0.45", "246.191, -226.021, -46.5582, 0.45", "246.704, -229.576, -45.989, 0.45", "246.9, -231.702, -45.4243, 0.45", "247.036, -233.855, -44.4135, 0.45", "247.269, -237.946, -41.9551, 0.45", "247.595, -243.386, -38.1487, 0.45", "247.702, -245.055, -36.9232, 0.45", "247.909, -247.539, -35.1146, 0.45", "248.369, -253.177, -30.7769, 0.45", "248.505, -254.803, -29.4972, 0.45", "248.615, -256.72, -28.134, 0.45", "248.752, -259.778, -26.2636, 0.45", "248.852, -261.254, -25.3344, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "241.184, -197.379, -34.2839, 0.45", "242.942, -198.64, -34.1691, 0.45", "246.183, -200.811, -34.1017, 0.45", "249.623, -202.808, -34.1886, 0.45", "252.665, -204.493, -34.261, 0.45", "255.973, -206.325, -34.3384, 0.45", "257.715, -207.36, -34.5022, 0.45", "261.469, -209.729, -35.3061, 0.45", "265.184, -212.21, -36.5519, 0.45", "269.157, -215.086, -38.3394, 0.45", "270.458, -216.072, -38.9975, 0.45", "275.681, -220.11, -41.7574, 0.45", "279.641, -223.275, -43.8085, 0.45", "281.919, -225.055, -44.8988, 0.45", "286.917, -228.666, -47.0256, 0.45", "289.223, -230.155, -47.7371, 0.45", "293.716, -232.802, -48.5424, 0.45", "299.721, -235.976, -48.8717, 0.45", "306.697, -239.556, -48.5061, 0.45", "311.931, -242.175, -47.6834, 0.45", "318.483, -245.151, -46.114, 0.45", "321.882, -246.583, -45.148, 0.45", "324.171, -247.404, -44.4409, 0.45", "330.109, -248.891, -42.8617, 0.45", "335.532, -249.846, -41.7452, 0.45", "342.455, -250.657, -40.8825, 0.45", "347.053, -250.925, -40.7806, 0.45", "354.323, -250.954, -41.1094, 0.45", "364.489, -250.325, -42.0472, 0.45", "367.159, -249.92, -42.4441, 0.45", "369.606, -249.351, -42.9189, 0.45", "373.542, -247.827, -43.6984, 0.45", "375.761, -246.341, -44.1374, 0.45", "378.191, -243.046, -44.6524, 0.45", "379.156, -240.688, -44.8632, 0.45", "379.966, -238.361, -45.0716, 0.45", "381.603, -233.376, -45.5567, 0.45", "382.606, -230.485, -45.8787, 0.45", "384.654, -225.75, -46.5719, 0.45", "386.71, -222.264, -46.9596, 0.45", "389.22, -219.017, -47.0859, 0.45", "391.24, -216.826, -47.0905, 0.45", "393.367, -215.069, -46.9382, 0.45", "396.218, -213.355, -46.5575, 0.45", "404.945, -210.546, -43.884, 0.45", "406.205, -210.391, -43.2356, 0.45" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "248.852, -261.254, -25.3344, 0.45", "249.045, -263.045, -25.5663, 0.45", "249.309, -264.584, -25.7507, 0.45", "249.655, -266.204, -25.9039, 0.45", "249.986, -267.673, -26.0463, 0.45", "250.571, -270.169, -26.1074, 0.45", "250.846, -271.36, -26.0151, 0.45", "251.236, -273.042, -25.6962, 0.45", "251.615, -274.65, -25.3142, 0.45", "252.208, -276.964, -24.6653, 0.45", "253.128, -280.309, -23.6712, 0.45", "254.14, -283.622, -22.7001, 0.45", "255.04, -286.513, -21.9358, 0.45", "255.621, -288.235, -21.5522, 0.45", "256.606, -290.903, -21.1419, 0.45", "257.295, -292.612, -21.0022, 0.45", "258.168, -294.738, -21.0945, 0.45", "259.037, -296.738, -21.3294, 0.45", "259.956, -298.807, -21.6326, 0.45", "260.757, -300.746, -21.8826, 0.45", "261.52, -302.802, -22.2365, 0.45", "262.446, -305.467, -22.6991, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "248.852, -261.254, -25.3344, 0.45", "251.208, -258.94, -24.8021, 0.45", "252.368, -257.799, -24.5399, 0.45", "253.678, -256.513, -24.244, 0.45" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "262.446, -305.467, -22.6991, 0.45", "260.434, -311.905, -21.0692, 0.45", "258.119, -319.643, -19.6163, 0.45", "256.838, -324.177, -18.9762, 0.45", "256.113, -326.987, -18.6808, 0.45", "255.963, -327.619, -18.6381, 0.45", "254.438, -334.351, -18.2727, 0.45", "254.187, -335.993, -18.4207, 0.45", "254.025, -337.542, -18.6878, 0.45", "253.795, -339.153, -18.9388, 0.45", "253.425, -341.339, -19.3922, 0.45", "252.838, -345.076, -20.3935, 0.45", "252.364, -348.398, -21.3769, 0.45", "251.73, -352.491, -22.3381, 0.45", "251.291, -354.836, -22.706, 0.45", "250.708, -357.629, -23.0749, 0.45", "249.819, -361.607, -23.5495, 0.45", "248.827, -365.518, -23.1552, 0.45", "247.789, -369.158, -22.1966, 0.45", "246.906, -372.2, -21.1314, 0.45", "246.05, -375.025, -19.9002, 0.45", "245.051, -378.055, -18.4735, 0.45", "240.857, -390.372, -12.9981, 0.45", "239.868, -393.458, -11.8486, 0.45", "239.286, -395.53, -11.2711, 0.45", "237.684, -402.042, -10.0767, 0.45", "236.998, -405.402, -9.72319, 0.45", "236.45, -409.466, -9.99569, 0.45", "236.252, -412.326, -10.9289, 0.45", "236.183, -415.587, -12.1445, 0.45", "236.283, -418.56, -13.5276, 0.45", "236.575, -420.723, -14.9395, 0.45", "236.793, -421.807, -15.6279, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "262.446, -305.467, -22.6991, 0.45", "262.858, -307.168, -22.5275, 0.45", "263.681, -310.618, -22.2885, 0.45", "264.432, -314.542, -22.0921, 0.45", "264.571, -316.061, -21.9554, 0.45", "264.61, -318.388, -21.6206, 0.45", "264.539, -320.798, -21.1565, 0.45", "264.37, -322.426, -20.7044, 0.45", "264.035, -324.682, -19.9053, 0.45", "263.014, -330.179, -17.4436, 0.45", "262.316, -333.784, -15.7009, 0.45", "261.952, -335.918, -14.6308, 0.45", "261.471, -339.266, -12.8484, 0.45", "261.403, -340.096, -12.4014, 0.45", "261.467, -341.978, -11.2845, 0.45", "261.818, -343.88, -10.2283, 0.45", "262.513, -346.514, -8.86874, 0.45", "262.846, -347.524, -8.40736, 0.45", "263.933, -350.522, -7.27814, 0.45", "265.852, -355.319, -5.5269, 0.45", "266.974, -357.973, -4.51688, 0.45", "268.613, -361.69, -3.06365, 0.45", "269.675, -364.19, -2.09389, 0.45", "271.82, -369.207, -0.120155, 0.45", "272.492, -370.741, 0.482288, 0.45", "273.991, -374.201, 1.7592, 0.45", "274.507, -375.538, 2.3316, 0.45", "275.79, -378.984, 3.87843, 0.45", "276.901, -382.333, 5.46368, 0.45", "277.328, -383.936, 6.41111, 0.45", "277.745, -385.902, 7.75886, 0.45", "278.455, -389.763, 10.3089, 0.45", "278.745, -391.649, 11.5103, 0.45", "279.043, -393.653, 12.7461, 0.45", "280.283, -401.888, 17.5437, 0.45", "281.26, -407.604, 20.6505, 0.45", "282.163, -412.325, 23.0502, 0.45", "282.471, -413.733, 23.665, 0.45", "282.781, -415.24, 24.347, 0.45", "283.17, -417.125, 25.243, 0.45", "283.598, -419.119, 26.304, 0.45", "283.97, -421.065, 27.5995, 0.45", "284.1, -421.818, 28.1894, 0.45", "285.19, -428.729, 33.9428, 0.45", "285.668, -431.989, 36.6748, 0.45", "286.603, -437.197, 40.9624, 0.45", "286.752, -438.055, 41.6749, 0.45", "286.933, -438.897, 42.3499, 0.45", "287.308, -440.358, 43.4317, 0.45", "288.365, -443.74, 45.5649, 0.45", "289.402, -447.085, 47.5546, 0.45", "291.989, -455.705, 52.4708, 0.45", "293.043, -459.407, 54.6087, 0.45", "293.552, -461.176, 55.6523, 0.45", "294.009, -463.135, 57.1915, 0.45", "294.505, -465.68, 59.8099, 0.45", "294.921, -468.671, 63.5484, 0.45", "295.041, -469.821, 65.1446, 0.45", "295.05, -470.845, 66.6214, 0.45", "294.778, -479.847, 79.3919, 0.45", "294.68, -482.357, 82.8088, 0.45", "294.596, -485.214, 86.4198, 0.45", "294.495, -486.906, 88.5729, 0.45", "294.214, -490.933, 93.5571, 0.45", "294.057, -492.968, 95.8682, 0.45", "293.959, -495.121, 97.8986, 0.45", "293.741, -499.061, 101.645, 0.45", "293.219, -512.841, 115.714, 0.45" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_23", "dend_12", "dend_11", "dend_0", "dend_45", "dend_24", "dend_22", "dend_13", "dend_8", "dend_1", "dend_47", "dend_46", "dend_44", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_5", "dend_2", "dend_69", "dend_48", "dend_29", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_64", "dend_49", "dend_41", "dend_32", "dend_30", "dend_28", "dend_27", "dend_21", "dend_20", "dend_66", "dend_65", "dend_63", "dend_50", "dend_43", "dend_42", "dend_38", "dend_33", "dend_31", "dend_68", "dend_67", "dend_52", "dend_51", "dend_40", "dend_39", "dend_37", "dend_34", "dend_54", "dend_53", "dend_36", "dend_35", "dend_62", "dend_55", "dend_57", "dend_56", "dend_59", "dend_58", "dend_61", "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_NBC_809407f588_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_23
create dend_45
public dend_45
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_24
create dend_44
public dend_44
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_69, id: dend_69, parent: dend_47
create dend_69
public dend_69
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_64, id: dend_64, parent: dend_48
create dend_64
public dend_64
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_29
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_29
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_49
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_62, id: dend_62, parent: dend_54
create dend_62
public dend_62
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_23(0), soma_0(0.45000027720458424)
    connect dend_12(0), soma_0(0.45000027720458424)
    connect dend_11(0), soma_0(0.45000027720458424)
    connect dend_0(0), soma_0(0.45000027720458424)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_69(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_64(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_29(1.0)
    connect dend_32(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_62(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.02864, -8.95645, 0.0, 3.19243 ) }
    soma_0 { pt3dadd( 0.862269, -8.03576, 0.0, 5.44292 ) }
    soma_0 { pt3dadd( 0.695902, -7.11508, 0.0, 7.15224 ) }
    soma_0 { pt3dadd( 0.529535, -6.1944, 0.0, 9.22848 ) }
    soma_0 { pt3dadd( 0.363167, -5.27371, 0.0, 10.1568 ) }
    soma_0 { pt3dadd( 0.1968, -4.35303, 0.0, 10.228 ) }
    soma_0 { pt3dadd( 0.0304325, -3.43235, 0.0, 10.4278 ) }
    soma_0 { pt3dadd( -0.135935, -2.51166, 0.0, 10.5372 ) }
    soma_0 { pt3dadd( -0.302302, -1.59098, 0.0, 10.6261 ) }
    soma_0 { pt3dadd( -0.468669, -0.670298, 0.0, 10.9078 ) }
    soma_0 { pt3dadd( -0.635037, 0.250385, 0.0, 11.3454 ) }
    soma_0 { pt3dadd( -0.801404, 1.17107, 0.0, 11.7831 ) }
    soma_0 { pt3dadd( -0.967771, 2.09175, 0.0, 12.1088 ) }
    soma_0 { pt3dadd( -1.13414, 3.01243, 0.0, 11.7546 ) }
    soma_0 { pt3dadd( -1.30051, 3.93312, 0.0, 11.2789 ) }
    soma_0 { pt3dadd( -1.46687, 4.8538, 0.0, 10.5376 ) }
    soma_0 { pt3dadd( -1.63324, 5.77448, 0.0, 9.41766 ) }
    soma_0 { pt3dadd( -1.79961, 6.69517, 0.0, 7.67825 ) }
    soma_0 { pt3dadd( -1.96598, 7.61585, 0.0, 5.72147 ) }
    soma_0 { pt3dadd( -2.13234, 8.53653, 0.0, 3.87406 ) }
    soma_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.1959 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.55142, -9.96816, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.55142, -9.96816, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.34914, -13.0719, -8.14, 3.62 ) }
    dend_23 { pt3dadd( -1.17553, -15.7357, -8.14, 3.62 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.23859, 4.18709, -3.81, 1.24 ) }
    dend_12 { pt3dadd( 6.71157, 4.3533, -3.44781, 1.24 ) }
    dend_12 { pt3dadd( 10.6706, 4.70307, -2.38115, 1.24 ) }
    dend_12 { pt3dadd( 14.4071, 5.03321, -1.37441, 1.24 ) }
    dend_12 { pt3dadd( 18.1341, 5.36249, -0.370234, 1.24 ) }
    dend_12 { pt3dadd( 25.7934, 6.0392, 1.6934, 1.24 ) }
    dend_12 { pt3dadd( 31.6942, 6.56053, 3.28327, 1.24 ) }
    dend_12 { pt3dadd( 34.1677, 6.69507, 4.03543, 1.24 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.49141, 4.92509, -1.31, 0.68 ) }
    dend_11 { pt3dadd( -8.45969, 4.87409, -1.64759, 0.68 ) }
    dend_11 { pt3dadd( -10.205, 4.85536, -2.18109, 0.68 ) }
    dend_11 { pt3dadd( -13.0171, 5.12983, -3.01092, 0.68 ) }
    dend_11 { pt3dadd( -15.0327, 5.52904, -3.55101, 0.68 ) }
    dend_11 { pt3dadd( -16.2847, 5.89609, -3.8393, 0.68 ) }
    dend_11 { pt3dadd( -18.4287, 6.59873, -4.26983, 0.68 ) }
    dend_11 { pt3dadd( -20.6378, 7.47788, -4.68961, 0.68 ) }
    dend_11 { pt3dadd( -23.4919, 8.84828, -5.1581, 0.68 ) }
    dend_11 { pt3dadd( -25.4797, 10.0092, -5.45015, 0.68 ) }
    dend_11 { pt3dadd( -28.3106, 11.8988, -5.9431, 0.68 ) }
    dend_11 { pt3dadd( -30.8259, 13.7927, -6.51343, 0.68 ) }
    dend_11 { pt3dadd( -32.4703, 15.2028, -6.98619, 0.68 ) }
    dend_11 { pt3dadd( -33.9924, 16.6892, -7.49078, 0.68 ) }
    dend_11 { pt3dadd( -35.0629, 17.806, -7.8669, 0.68 ) }
    dend_11 { pt3dadd( -37.0881, 19.8769, -8.59225, 0.68 ) }
    dend_11 { pt3dadd( -38.5624, 21.4292, -9.19054, 0.68 ) }
    dend_11 { pt3dadd( -39.2455, 22.1548, -9.45488, 0.68 ) }
    dend_11 { pt3dadd( -41.6691, 24.6865, -10.4375, 0.68 ) }
    dend_11 { pt3dadd( -43.5803, 26.6858, -11.2686, 0.68 ) }
    dend_11 { pt3dadd( -46.306, 29.3981, -12.3918, 0.68 ) }
    dend_11 { pt3dadd( -48.186, 31.1601, -13.0409, 0.57 ) }
    dend_11 { pt3dadd( -49.8, 32.5737, -13.5592, 0.57 ) }
    dend_11 { pt3dadd( -51.7222, 34.212, -14.242, 0.57 ) }
    dend_11 { pt3dadd( -52.1409, 34.5577, -14.461, 0.57 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 58/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.06859, -4.99691, -2.56, 1.47 ) }
    dend_0 { pt3dadd( 6.10768, -5.68709, -2.41919, 1.47 ) }
    dend_0 { pt3dadd( 8.81228, -7.4835, -2.0527, 1.47 ) }
    dend_0 { pt3dadd( 12.0908, -9.66107, -1.60844, 1.47 ) }
    dend_0 { pt3dadd( 14.1637, -11.038, -1.32753, 2.6 ) }
    dend_0 { pt3dadd( 14.4811, -11.2488, -1.28452, 2.26 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.29871, 9.45721, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -4.96601, 24.2182, 0.0, 2.31666 ) }
    axon_0 { pt3dadd( -7.63332, 38.9791, 0.0, 2.31666 ) }
    // Section: dend_45, id: dend_45, parent: dend_23 (entry count 67/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.17553, -15.7357, -8.14, 0.12 ) }
    dend_45 { pt3dadd( -0.472462, -15.7947, -8.21387, 0.12 ) }
    dend_45 { pt3dadd( 0.493942, -15.9325, -8.31528, 0.12 ) }
    dend_45 { pt3dadd( 0.99821, -16.0063, -8.3681, 0.45 ) }
    dend_45 { pt3dadd( 1.46543, -16.0671, -8.35999, 0.45 ) }
    dend_45 { pt3dadd( 3.2408, -16.2711, -8.3397, 0.45 ) }
    dend_45 { pt3dadd( 3.49199, -16.3022, -8.33797, 1.36 ) }
    dend_45 { pt3dadd( 4.37221, -16.422, -8.3302, 1.02 ) }
    dend_45 { pt3dadd( 5.5798, -16.5873, -8.3023, 0.45 ) }
    dend_45 { pt3dadd( 7.4514, -16.8374, -8.03794, 0.45 ) }
    dend_45 { pt3dadd( 9.11964, -17.0276, -7.53062, 0.45 ) }
    dend_45 { pt3dadd( 9.60649, -17.0629, -7.35472, 1.7 ) }
    dend_45 { pt3dadd( 10.541, -17.1098, -6.70493, 0.68 ) }
    dend_45 { pt3dadd( 11.8227, -17.1732, -5.54958, 0.57 ) }
    dend_45 { pt3dadd( 13.8097, -17.2769, -3.54845, 0.57 ) }
    dend_45 { pt3dadd( 15.2543, -17.3481, -1.93573, 0.57 ) }
    dend_45 { pt3dadd( 16.3922, -17.3934, -0.485144, 0.57 ) }
    dend_45 { pt3dadd( 20.5383, -17.4872, 5.31634, 0.45 ) }
    dend_45 { pt3dadd( 20.8735, -17.494, 5.8588, 0.45 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.17553, -15.7357, -8.14, 2.26 ) }
    dend_24 { pt3dadd( -1.44325, -17.9804, -8.0874, 2.26 ) }
    dend_24 { pt3dadd( -1.70687, -20.1908, -8.0356, 2.26 ) }
    dend_24 { pt3dadd( -2.09122, -23.4133, -7.96008, 2.94 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 90/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 34.1677, 6.69507, 4.03543, 0.45 ) }
    dend_22 { pt3dadd( 38.304, 6.73534, 2.91383, 0.45 ) }
    dend_22 { pt3dadd( 40.295, 6.73331, 3.04958, 0.45 ) }
    dend_22 { pt3dadd( 41.337, 6.80384, 3.35545, 0.45 ) }
    dend_22 { pt3dadd( 42.6879, 7.03383, 3.9488, 0.45 ) }
    dend_22 { pt3dadd( 45.3303, 7.79874, 5.51442, 0.79 ) }
    dend_22 { pt3dadd( 48.3636, 8.96138, 7.55346, 0.79 ) }
    dend_22 { pt3dadd( 51.2328, 10.3543, 9.78852, 0.79 ) }
    dend_22 { pt3dadd( 53.3196, 11.5961, 11.5659, 0.79 ) }
    dend_22 { pt3dadd( 54.9349, 12.7975, 13.0606, 0.79 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( 57.216, 15.0834, 15.5317, 0.79 ) }
    dend_22 { pt3dadd( 59.2243, 17.7363, 17.9392, 0.79 ) }
    dend_22 { pt3dadd( 60.118, 19.1175, 18.9595, 0.68 ) }
    dend_22 { pt3dadd( 60.8868, 20.3903, 19.7375, 0.68 ) }
    dend_22 { pt3dadd( 62.5228, 23.0548, 21.1946, 0.68 ) }
    dend_22 { pt3dadd( 65.9606, 28.6011, 24.2522, 0.68 ) }
    dend_22 { pt3dadd( 67.063, 30.4285, 25.2307, 0.68 ) }
    dend_22 { pt3dadd( 68.916, 33.4236, 26.8205, 0.68 ) }
    dend_22 { pt3dadd( 69.9798, 34.9575, 27.6444, 0.68 ) }
    dend_22 { pt3dadd( 71.0034, 36.18, 28.3574, 0.57 ) }
    dend_22 { pt3dadd( 73.7594, 38.7396, 29.9701, 0.57 ) }
    dend_22 { pt3dadd( 75.2136, 39.5948, 30.8468, 0.57 ) }
    dend_22 { pt3dadd( 77.6078, 39.9689, 33.6757, 0.57 ) }
    dend_22 { pt3dadd( 78.394, 39.5191, 35.654, 0.57 ) }
    dend_22 { pt3dadd( 79.377, 38.4724, 39.0272, 0.57 ) }
    dend_22 { pt3dadd( 79.6775, 38.036, 40.2542, 0.57 ) }
    dend_22 { pt3dadd( 80.775, 35.7344, 45.7715, 0.57 ) }
    dend_22 { pt3dadd( 81.8769, 32.6947, 52.6571, 0.57 ) }
    dend_22 { pt3dadd( 82.5047, 30.149, 58.2459, 0.57 ) }
    dend_22 { pt3dadd( 82.7528, 28.779, 61.3853, 0.57 ) }
    dend_22 { pt3dadd( 82.8091, 28.4424, 62.2762, 0.57 ) }
    dend_22 { pt3dadd( 82.9074, 27.8754, 63.8623, 0.57 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 22/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 34.1677, 6.69507, 4.03543, 0.79 ) }
    dend_13 { pt3dadd( 35.3129, 10.2603, 3.41468, 0.79 ) }
    dend_13 { pt3dadd( 36.0016, 12.8756, 3.08911, 0.79 ) }
    dend_13 { pt3dadd( 36.357, 14.2744, 2.96905, 0.79 ) }
    dend_13 { pt3dadd( 37.5121, 17.5184, 2.76223, 0.79 ) }
    dend_13 { pt3dadd( 38.8355, 20.4041, 2.63287, 0.79 ) }
    dend_13 { pt3dadd( 40.0254, 22.7275, 2.58188, 0.79 ) }
    dend_13 { pt3dadd( 41.9069, 25.9675, 2.65796, 0.79 ) }
    dend_13 { pt3dadd( 43.3291, 28.2843, 2.70553, 0.79 ) }
    dend_13 { pt3dadd( 46.1658, 32.7507, 2.57239, 0.79 ) }
    dend_13 { pt3dadd( 48.0254, 35.5169, 2.10299, 0.79 ) }
    dend_13 { pt3dadd( 50.0549, 38.1125, 0.8562, 1.02 ) }
    dend_13 { pt3dadd( 51.3643, 39.6456, -0.131384, 1.02 ) }
    dend_13 { pt3dadd( 52.6005, 41.0045, -1.34558, 1.02 ) }
    dend_13 { pt3dadd( 54.1946, 42.8546, -3.56836, 1.02 ) }
    dend_13 { pt3dadd( 56.345, 45.8185, -8.32603, 1.02 ) }
    dend_13 { pt3dadd( 58.5543, 48.7168, -14.663, 1.02 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 39/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 14.4811, -11.2488, -1.28452, 0.68 ) }
    dend_8 { pt3dadd( 15.8501, -13.4957, -1.81811, 0.68 ) }
    dend_8 { pt3dadd( 16.3321, -14.2053, -1.89489, 0.68 ) }
    dend_8 { pt3dadd( 18.987, -17.9641, -2.09541, 0.68 ) }
    dend_8 { pt3dadd( 23.1419, -23.7938, -2.26748, 0.68 ) }
    dend_8 { pt3dadd( 25.8389, -27.5688, -2.53651, 0.68 ) }
    dend_8 { pt3dadd( 27.5158, -29.8956, -2.77544, 0.68 ) }
    dend_8 { pt3dadd( 32.607, -36.7108, -2.86098, 0.68 ) }
    dend_8 { pt3dadd( 34.9393, -39.7423, -2.66897, 0.68 ) }
    dend_8 { pt3dadd( 35.6607, -40.6383, -2.54616, 0.68 ) }
    dend_8 { pt3dadd( 39.559, -45.3027, -1.60807, 0.68 ) }
    dend_8 { pt3dadd( 42.3406, -48.2851, -0.896621, 0.68 ) }
    dend_8 { pt3dadd( 49.551, -55.7068, 0.909418, 0.68 ) }
    dend_8 { pt3dadd( 52.9737, -59.1343, 1.70585, 0.68 ) }
    dend_8 { pt3dadd( 55.0188, -61.0837, 2.18646, 0.68 ) }
    dend_8 { pt3dadd( 57.8499, -63.6969, 2.84654, 0.68 ) }
    dend_8 { pt3dadd( 64.4205, -69.7821, 4.25141, 0.68 ) }
    dend_8 { pt3dadd( 67.0311, -72.3207, 4.51249, 0.68 ) }
    dend_8 { pt3dadd( 68.2205, -73.5632, 4.4773, 0.68 ) }
    dend_8 { pt3dadd( 71.3305, -76.9566, 4.27337, 0.68 ) }
    dend_8 { pt3dadd( 73.2261, -79.151, 4.08974, 0.68 ) }
    dend_8 { pt3dadd( 77.0239, -83.967, 3.48614, 0.68 ) }
    dend_8 { pt3dadd( 79.4223, -87.665, 2.97225, 0.68 ) }
    dend_8 { pt3dadd( 81.0683, -90.344, 2.55271, 0.68 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 14.4811, -11.2488, -1.28452, 1.24 ) }
    dend_1 { pt3dadd( 19.6728, -13.0782, -0.176096, 1.24 ) }
    dend_1 { pt3dadd( 22.3284, -14.0139, 0.390882, 1.24 ) }
    dend_1 { pt3dadd( 26.5832, -15.5132, 1.29927, 1.24 ) }
    dend_1 { pt3dadd( 30.8892, -17.0305, 2.21862, 1.24 ) }
    dend_1 { pt3dadd( 42.306, -21.0534, 4.65612, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.63332, 38.9791, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -10.3006, 53.74, 0.0, 0.57 ) }
    axon_1 { pt3dadd( -12.9679, 68.501, 0.0, 0.57 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 72/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 20.8735, -17.494, 5.8588, 0.45 ) }
    dend_47 { pt3dadd( 22.0817, -20.0664, 9.30502, 0.45 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 74/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 20.8735, -17.494, 5.8588, 0.45 ) }
    dend_46 { pt3dadd( 25.4473, -15.5258, 5.36753, 0.45 ) }
    dend_46 { pt3dadd( 27.6288, -14.7204, 5.38431, 0.45 ) }
    dend_46 { pt3dadd( 30.6388, -13.7141, 5.57485, 0.45 ) }
    dend_46 { pt3dadd( 33.9551, -12.9351, 5.89187, 0.45 ) }
    dend_46 { pt3dadd( 35.7156, -12.8303, 6.10974, 0.45 ) }
    dend_46 { pt3dadd( 40.5197, -13.1058, 6.74431, 0.45 ) }
    dend_46 { pt3dadd( 40.9188, -13.1875, 6.83539, 0.45 ) }
    dend_46 { pt3dadd( 41.0939, -13.2495, 6.88027, 2.6 ) }
    dend_46 { pt3dadd( 44.4828, -14.9214, 7.76596, 0.57 ) }
    dend_46 { pt3dadd( 48.6461, -17.4786, 8.83529, 0.57 ) }
    dend_46 { pt3dadd( 49.8587, -18.2515, 9.09839, 0.57 ) }
    dend_46 { pt3dadd( 49.9649, -18.3151, 9.11493, 2.38 ) }
    dend_46 { pt3dadd( 53.5224, -20.1223, 9.64104, 0.34 ) }
    dend_46 { pt3dadd( 54.8758, -20.626, 9.82442, 0.34 ) }
    dend_46 { pt3dadd( 57.8934, -21.215, 10.1727, 0.45 ) }
    dend_46 { pt3dadd( 60.7234, -21.2007, 10.6658, 0.45 ) }
    dend_46 { pt3dadd( 63.6866, -20.8603, 11.5193, 0.45 ) }
    dend_46 { pt3dadd( 66.3864, -20.3361, 12.6559, 0.45 ) }
    dend_46 { pt3dadd( 69.2873, -19.5676, 14.3067, 0.45 ) }
    dend_46 { pt3dadd( 71.8629, -18.8009, 16.0028, 0.45 ) }
    dend_46 { pt3dadd( 77.4853, -17.0019, 20.0543, 0.45 ) }
    dend_46 { pt3dadd( 81.7671, -15.7209, 23.469, 0.45 ) }
    dend_46 { pt3dadd( 85.9405, -14.6511, 26.9988, 0.45 ) }
    dend_46 { pt3dadd( 89.9447, -13.8644, 30.3953, 0.45 ) }
    dend_46 { pt3dadd( 91.1417, -13.7143, 31.3864, 2.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_46 { pt3dadd( 93.2748, -13.5599, 32.9942, 0.45 ) }
    dend_46 { pt3dadd( 97.6136, -13.3386, 35.6531, 0.45 ) }
    dend_46 { pt3dadd( 99.4833, -13.2436, 36.6146, 0.45 ) }
    dend_46 { pt3dadd( 102.285, -13.0323, 37.864, 0.45 ) }
    dend_46 { pt3dadd( 108.082, -12.4346, 40.4606, 0.45 ) }
    dend_46 { pt3dadd( 112.212, -11.9158, 42.3228, 0.45 ) }
    dend_46 { pt3dadd( 116.5, -11.4539, 44.2351, 0.45 ) }
    dend_46 { pt3dadd( 119.169, -11.2972, 45.3712, 0.45 ) }
    dend_46 { pt3dadd( 121.765, -11.2641, 46.4276, 0.45 ) }
    dend_46 { pt3dadd( 126.775, -11.4644, 48.3264, 0.45 ) }
    dend_46 { pt3dadd( 130.876, -11.8517, 49.6539, 0.45 ) }
    dend_46 { pt3dadd( 136.116, -12.5773, 51.272, 0.45 ) }
    dend_46 { pt3dadd( 141.396, -13.5828, 52.8361, 0.45 ) }
    dend_46 { pt3dadd( 144.53, -14.2878, 53.7213, 0.45 ) }
    dend_46 { pt3dadd( 146.119, -14.7455, 54.143, 0.45 ) }
    dend_46 { pt3dadd( 146.978, -15.0423, 54.3033, 0.45 ) }
    // Section: dend_44, id: dend_44, parent: dend_24 (entry count 16/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.09122, -23.4133, -7.96008, 0.12 ) }
    dend_44 { pt3dadd( -2.97999, -22.7419, -7.45535, 0.12 ) }
    dend_44 { pt3dadd( -3.13962, -22.651, -7.31093, 0.12 ) }
    dend_44 { pt3dadd( -3.58864, -22.4473, -6.84995, 0.45 ) }
    dend_44 { pt3dadd( -4.21572, -22.4781, -5.67089, 0.79 ) }
    dend_44 { pt3dadd( -4.93154, -22.7542, -3.78016, 0.45 ) }
    dend_44 { pt3dadd( -5.3174, -23.0245, -2.56232, 0.45 ) }
    dend_44 { pt3dadd( -5.9528, -23.7689, -0.00578284, 0.45 ) }
    dend_44 { pt3dadd( -6.03472, -23.9352, 0.404173, 0.45 ) }
    dend_44 { pt3dadd( -6.61016, -25.9719, 4.78175, 0.45 ) }
    dend_44 { pt3dadd( -6.79474, -27.0553, 6.87391, 0.45 ) }
    dend_44 { pt3dadd( -6.90595, -27.9298, 8.45767, 0.45 ) }
    dend_44 { pt3dadd( -6.93112, -28.1438, 8.85992, 0.45 ) }
    dend_44 { pt3dadd( -7.10641, -29.2942, 11.0642, 0.45 ) }
    dend_44 { pt3dadd( -7.58203, -31.51, 15.3665, 0.45 ) }
    dend_44 { pt3dadd( -7.80047, -32.1104, 16.4901, 0.45 ) }
    dend_44 { pt3dadd( -7.99902, -32.5396, 17.2698, 0.45 ) }
    dend_44 { pt3dadd( -8.43797, -33.363, 18.7961, 0.45 ) }
    dend_44 { pt3dadd( -8.58254, -33.6526, 19.3542, 0.45 ) }
    dend_44 { pt3dadd( -9.45386, -35.4135, 22.7776, 0.45 ) }
    dend_44 { pt3dadd( -9.77015, -36.3419, 24.2736, 0.45 ) }
    dend_44 { pt3dadd( -10.0429, -37.4861, 26.0322, 0.45 ) }
    dend_44 { pt3dadd( -10.0884, -37.8773, 26.6562, 0.45 ) }
    dend_44 { pt3dadd( -10.2062, -39.7809, 29.5307, 0.45 ) }
    dend_44 { pt3dadd( -10.2067, -40.0304, 29.9017, 0.45 ) }
    dend_44 { pt3dadd( -10.0985, -41.49, 32.2183, 0.45 ) }
    dend_44 { pt3dadd( -10.0594, -41.8362, 32.7628, 0.45 ) }
    dend_44 { pt3dadd( -9.90921, -43.5196, 35.2368, 2.38 ) }
    dend_44 { pt3dadd( -9.82572, -44.9036, 37.2755, 0.68 ) }
    dend_44 { pt3dadd( -9.78948, -45.4727, 38.0924, 0.68 ) }
    dend_44 { pt3dadd( -9.60365, -47.8694, 41.9024, 0.68 ) }
    dend_44 { pt3dadd( -9.52034, -48.8513, 43.5994, 0.45 ) }
    dend_44 { pt3dadd( -9.5003, -49.312, 44.3859, 0.45 ) }
    dend_44 { pt3dadd( -9.5363, -50.3897, 46.4409, 0.45 ) }
    dend_44 { pt3dadd( -9.57741, -50.9152, 47.5758, 0.45 ) }
    dend_44 { pt3dadd( -9.92691, -52.6395, 51.4191, 0.45 ) }
    dend_44 { pt3dadd( -10.2138, -53.5494, 53.6357, 0.45 ) }
    dend_44 { pt3dadd( -10.5478, -54.3569, 55.8326, 0.45 ) }
    dend_44 { pt3dadd( -11.6283, -56.5984, 62.0147, 0.91 ) }
    dend_44 { pt3dadd( -11.6546, -56.6537, 62.1583, 3.05 ) }
    dend_44 { pt3dadd( -11.9732, -57.3596, 63.8873, 0.45 ) }
    dend_44 { pt3dadd( -12.5898, -59.2682, 68.013, 0.45 ) }
    dend_44 { pt3dadd( -12.7345, -59.9224, 69.3782, 0.45 ) }
    dend_44 { pt3dadd( -12.8675, -60.8853, 71.3442, 2.15 ) }
    dend_44 { pt3dadd( -13.2013, -64.4969, 77.5521, 0.57 ) }
    dend_44 { pt3dadd( -13.2293, -64.949, 78.3423, 0.57 ) }
    dend_44 { pt3dadd( -13.3095, -67.3338, 82.5383, 0.57 ) }
    dend_44 { pt3dadd( -13.3882, -68.9209, 85.1541, 0.57 ) }
    dend_44 { pt3dadd( -13.4019, -69.1126, 85.4814, 1.7 ) }
    dend_44 { pt3dadd( -13.4851, -69.8975, 86.8488, 0.45 ) }
    dend_44 { pt3dadd( -14.0296, -73.6353, 93.0128, 0.45 ) }
    dend_44 { pt3dadd( -14.3122, -75.2131, 95.6287, 0.45 ) }
    dend_44 { pt3dadd( -14.5558, -76.3234, 97.4019, 0.45 ) }
    dend_44 { pt3dadd( -15.0535, -78.493, 100.76, 0.45 ) }
    dend_44 { pt3dadd( -15.3386, -79.774, 102.738, 0.45 ) }
    dend_44 { pt3dadd( -15.5596, -80.7164, 104.2, 0.45 ) }
    dend_44 { pt3dadd( -16.1492, -83.0201, 107.108, 0.45 ) }
    dend_44 { pt3dadd( -16.2357, -83.372, 107.564, 0.45 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.09122, -23.4133, -7.96008, 1.7 ) }
    dend_25 { pt3dadd( -1.04236, -25.8031, -6.78837, 1.7 ) }
    dend_25 { pt3dadd( -0.735576, -26.5964, -6.48129, 1.58 ) }
    dend_25 { pt3dadd( 0.122168, -29.0318, -5.77294, 1.36 ) }
    dend_25 { pt3dadd( 0.829831, -31.041, -5.18854, 1.24 ) }
    dend_25 { pt3dadd( 1.8492, -33.9352, -4.34672, 1.24 ) }
    dend_25 { pt3dadd( 2.45527, -35.656, -3.84621, 2.83 ) }
    dend_25 { pt3dadd( 3.25105, -38.0803, -3.35349, 3.62 ) }
    dend_25 { pt3dadd( 3.83139, -39.9243, -3.06856, 2.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 83/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 58.5543, 48.7168, -14.663, 0.57 ) }
    dend_17 { pt3dadd( 58.4197, 46.8482, -16.1883, 0.57 ) }
    dend_17 { pt3dadd( 58.2426, 44.3904, -18.1944, 0.57 ) }
    dend_17 { pt3dadd( 58.1418, 42.9901, -19.3374, 0.57 ) }
    dend_17 { pt3dadd( 58.0029, 41.0616, -20.9114, 0.57 ) }
    dend_17 { pt3dadd( 57.8218, 38.5481, -22.9631, 0.57 ) }
    dend_17 { pt3dadd( 57.5121, 34.2489, -26.4722, 0.57 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 90/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 58.5543, 48.7168, -14.663, 1.02 ) }
    dend_14 { pt3dadd( 59.324, 50.9411, -16.1288, 1.02 ) }
    dend_14 { pt3dadd( 61.05, 55.9291, -19.4157, 1.02 ) }
    dend_14 { pt3dadd( 62.0256, 58.7483, -21.2735, 0.79 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 94/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 81.0683, -90.344, 2.55271, 0.45 ) }
    dend_10 { pt3dadd( 84.5611, -95.7713, 1.41228, 0.45 ) }
    dend_10 { pt3dadd( 85.2798, -96.8965, 1.20651, 0.45 ) }
    dend_10 { pt3dadd( 86.3516, -98.6224, 0.979381, 0.45 ) }
    dend_10 { pt3dadd( 88.9632, -102.789, 0.544179, 0.45 ) }
    dend_10 { pt3dadd( 90.0057, -104.4, 0.297249, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( 90.9786, -105.816, 0.0465952, 0.45 ) }
    dend_10 { pt3dadd( 92.8229, -108.255, -0.379092, 0.45 ) }
    dend_10 { pt3dadd( 96.1977, -112.403, -1.18039, 0.45 ) }
    dend_10 { pt3dadd( 98.1122, -114.399, -1.57594, 0.45 ) }
    dend_10 { pt3dadd( 101.835, -117.586, -2.42269, 0.45 ) }
    dend_10 { pt3dadd( 104.615, -119.479, -2.92473, 0.45 ) }
    dend_10 { pt3dadd( 105.872, -120.213, -2.94664, 0.45 ) }
    dend_10 { pt3dadd( 108.162, -121.464, -2.75401, 0.45 ) }
    dend_10 { pt3dadd( 112.911, -124.098, -2.04628, 0.45 ) }
    dend_10 { pt3dadd( 116.063, -126.005, -1.63804, 0.45 ) }
    dend_10 { pt3dadd( 120.817, -129.091, -1.04942, 0.45 ) }
    dend_10 { pt3dadd( 130.869, -136.224, -0.11187, 0.45 ) }
    dend_10 { pt3dadd( 135.328, -139.706, 0.181769, 0.45 ) }
    dend_10 { pt3dadd( 138.555, -142.576, 0.267885, 0.45 ) }
    dend_10 { pt3dadd( 144.609, -148.97, 0.0407632, 0.45 ) }
    dend_10 { pt3dadd( 145.758, -150.401, -0.0839644, 0.45 ) }
    dend_10 { pt3dadd( 147.939, -153.838, -0.7704, 0.45 ) }
    dend_10 { pt3dadd( 149.028, -156.176, -1.44259, 0.45 ) }
    dend_10 { pt3dadd( 150.659, -160.684, -2.60509, 0.45 ) }
    dend_10 { pt3dadd( 151.704, -164.294, -3.34729, 0.45 ) }
    dend_10 { pt3dadd( 152.956, -169.172, -4.14198, 0.45 ) }
    dend_10 { pt3dadd( 154.093, -174.08, -4.94406, 0.45 ) }
    dend_10 { pt3dadd( 155.157, -179.253, -5.81325, 0.45 ) }
    dend_10 { pt3dadd( 155.599, -181.479, -6.18466, 0.45 ) }
    dend_10 { pt3dadd( 156.31, -185.055, -6.73244, 0.45 ) }
    dend_10 { pt3dadd( 157.787, -191.717, -7.62492, 0.45 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 81.0683, -90.344, 2.55271, 0.57 ) }
    dend_9 { pt3dadd( 80.9595, -90.8533, 2.78169, 0.57 ) }
    dend_9 { pt3dadd( 80.3847, -93.3737, 4.77619, 0.57 ) }
    dend_9 { pt3dadd( 79.5979, -96.466, 7.45318, 0.57 ) }
    dend_9 { pt3dadd( 79.0504, -98.1841, 9.22505, 0.57 ) }
    dend_9 { pt3dadd( 78.939, -98.4857, 9.545, 0.57 ) }
    dend_9 { pt3dadd( 78.2745, -100.001, 11.2451, 0.57 ) }
    dend_9 { pt3dadd( 77.2227, -101.92, 13.6355, 0.57 ) }
    dend_9 { pt3dadd( 76.6646, -102.716, 14.7521, 0.57 ) }
    dend_9 { pt3dadd( 75.5559, -104.124, 17.1873, 0.45 ) }
    dend_9 { pt3dadd( 74.9801, -104.817, 18.358, 0.45 ) }
    dend_9 { pt3dadd( 74.1818, -105.772, 19.9086, 0.45 ) }
    dend_9 { pt3dadd( 73.4109, -106.751, 21.4177, 0.45 ) }
    dend_9 { pt3dadd( 72.5195, -107.863, 23.1108, 0.45 ) }
    dend_9 { pt3dadd( 70.7987, -110.268, 26.8166, 0.45 ) }
    dend_9 { pt3dadd( 70.4551, -110.845, 27.6648, 0.45 ) }
    dend_9 { pt3dadd( 70.0054, -111.725, 28.9407, 0.45 ) }
    dend_9 { pt3dadd( 69.0068, -114.01, 32.0638, 0.45 ) }
    dend_9 { pt3dadd( 68.6658, -114.871, 33.1408, 0.45 ) }
    dend_9 { pt3dadd( 67.395, -118.138, 36.6389, 0.45 ) }
    dend_9 { pt3dadd( 67.0013, -119.23, 37.6758, 0.45 ) }
    dend_9 { pt3dadd( 66.9229, -119.48, 37.8983, 0.45 ) }
    dend_9 { pt3dadd( 66.7677, -120.135, 38.4855, 0.45 ) }
    dend_9 { pt3dadd( 66.3955, -121.932, 40.1034, 0.45 ) }
    dend_9 { pt3dadd( 66.1377, -123.41, 41.4664, 0.45 ) }
    dend_9 { pt3dadd( 65.697, -126.375, 44.3742, 0.45 ) }
    dend_9 { pt3dadd( 65.4481, -128.397, 46.6721, 0.45 ) }
    dend_9 { pt3dadd( 65.0225, -132.056, 51.1233, 0.45 ) }
    dend_9 { pt3dadd( 64.7654, -134.073, 53.6931, 0.45 ) }
    dend_9 { pt3dadd( 64.6426, -134.91, 54.8489, 0.45 ) }
    dend_9 { pt3dadd( 64.1494, -137.697, 58.7004, 0.45 ) }
    dend_9 { pt3dadd( 63.4986, -140.208, 61.994, 0.45 ) }
    dend_9 { pt3dadd( 63.0611, -141.53, 63.7134, 0.45 ) }
    dend_9 { pt3dadd( 62.5761, -142.782, 65.2246, 0.45 ) }
    dend_9 { pt3dadd( 61.6919, -145.152, 67.7711, 0.45 ) }
    dend_9 { pt3dadd( 60.9301, -147.206, 69.7852, 0.45 ) }
    dend_9 { pt3dadd( 60.2206, -148.952, 71.3821, 0.45 ) }
    dend_9 { pt3dadd( 59.6074, -150.328, 72.8467, 0.45 ) }
    dend_9 { pt3dadd( 58.0723, -153.194, 76.5946, 0.45 ) }
    dend_9 { pt3dadd( 56.911, -154.784, 79.0768, 0.45 ) }
    dend_9 { pt3dadd( 55.7149, -155.892, 81.1308, 0.45 ) }
    dend_9 { pt3dadd( 54.1828, -156.769, 83.1553, 0.45 ) }
    dend_9 { pt3dadd( 50.1041, -158.235, 87.4491, 0.45 ) }
    dend_9 { pt3dadd( 48.098, -158.67, 89.2517, 0.45 ) }
    dend_9 { pt3dadd( 45.4534, -159.022, 91.1758, 0.45 ) }
    dend_9 { pt3dadd( 43.6623, -159.222, 92.3786, 0.45 ) }
    dend_9 { pt3dadd( 40.2144, -159.704, 94.5615, 0.45 ) }
    dend_9 { pt3dadd( 37.5133, -160.236, 96.1754, 0.45 ) }
    dend_9 { pt3dadd( 33.3483, -161.277, 99.0758, 0.45 ) }
    dend_9 { pt3dadd( 30.4319, -162.145, 101.571, 0.45 ) }
    dend_9 { pt3dadd( 28.5337, -162.795, 103.309, 0.45 ) }
    dend_9 { pt3dadd( 24.2111, -164.44, 107.404, 0.45 ) }
    dend_9 { pt3dadd( 22.7103, -165.058, 108.878, 0.45 ) }
    dend_9 { pt3dadd( 16.26, -167.843, 115.116, 0.45 ) }
    dend_9 { pt3dadd( 14.5, -168.635, 116.807, 0.45 ) }
    dend_9 { pt3dadd( 9.89048, -170.775, 121.562, 0.45 ) }
    dend_9 { pt3dadd( 8.58107, -171.4, 122.904, 0.45 ) }
    dend_9 { pt3dadd( 6.32364, -172.58, 125.195, 0.45 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 42.306, -21.0534, 4.65612, 0.45 ) }
    dend_5 { pt3dadd( 44.3543, -25.1516, 4.62758, 0.45 ) }
    dend_5 { pt3dadd( 44.6861, -25.7881, 4.59967, 1.02 ) }
    dend_5 { pt3dadd( 48.2307, -32.1764, 4.18257, 0.79 ) }
    dend_5 { pt3dadd( 50.4689, -36.0348, 3.76904, 0.79 ) }
    dend_5 { pt3dadd( 51.7825, -38.1612, 3.46791, 0.68 ) }
    dend_5 { pt3dadd( 52.0702, -38.5961, 3.39633, 0.68 ) }
    dend_5 { pt3dadd( 53.8676, -41.0389, 2.84875, 0.68 ) }
    dend_5 { pt3dadd( 55.1167, -42.6335, 2.41412, 0.68 ) }
    dend_5 { pt3dadd( 57.7751, -45.7315, 1.41076, 0.68 ) }
    dend_5 { pt3dadd( 60.4717, -48.8924, 0.322246, 0.68 ) }
    dend_5 { pt3dadd( 63.0663, -51.9362, -0.775837, 0.68 ) }
    dend_5 { pt3dadd( 65.529, -54.7803, -1.81535, 0.68 ) }
    dend_5 { pt3dadd( 68.6207, -58.3357, -3.14488, 0.68 ) }
    dend_5 { pt3dadd( 72.5428, -62.6215, -4.98347, 0.68 ) }
    dend_5 { pt3dadd( 75.0567, -65.1729, -6.30333, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( 76.5672, -66.6095, -7.16692, 0.68 ) }
    dend_5 { pt3dadd( 78.4972, -68.3471, -8.28905, 0.68 ) }
    dend_5 { pt3dadd( 81.7428, -71.0812, -10.1226, 0.68 ) }
    dend_5 { pt3dadd( 85.992, -74.4672, -12.4608, 0.68 ) }
    dend_5 { pt3dadd( 90.8796, -78.1803, -14.9902, 0.68 ) }
    dend_5 { pt3dadd( 93.4548, -80.0777, -16.1797, 0.68 ) }
    dend_5 { pt3dadd( 95.9737, -81.9437, -17.2329, 0.68 ) }
    dend_5 { pt3dadd( 97.5777, -83.1586, -17.8307, 0.68 ) }
    dend_5 { pt3dadd( 99.0047, -84.2492, -18.2522, 0.68 ) }
    dend_5 { pt3dadd( 100.921, -85.9723, -18.6758, 0.68 ) }
    dend_5 { pt3dadd( 102.45, -87.4468, -19.048, 0.68 ) }
    dend_5 { pt3dadd( 104.523, -89.6936, -19.8618, 0.68 ) }
    dend_5 { pt3dadd( 105.127, -90.4204, -20.2422, 0.68 ) }
    dend_5 { pt3dadd( 106.634, -92.445, -21.4755, 0.68 ) }
    dend_5 { pt3dadd( 108.441, -94.9953, -23.3027, 0.68 ) }
    dend_5 { pt3dadd( 109.862, -97.1341, -25.0158, 0.68 ) }
    dend_5 { pt3dadd( 111.207, -99.2618, -26.8196, 0.68 ) }
    dend_5 { pt3dadd( 113.256, -102.678, -29.789, 0.68 ) }
    dend_5 { pt3dadd( 114.201, -104.316, -31.1776, 0.68 ) }
    dend_5 { pt3dadd( 115.48, -106.582, -32.9736, 0.68 ) }
    dend_5 { pt3dadd( 116.53, -108.354, -34.2623, 0.68 ) }
    dend_5 { pt3dadd( 117.87, -110.599, -35.633, 0.68 ) }
    dend_5 { pt3dadd( 118.901, -112.27, -36.5842, 0.68 ) }
    dend_5 { pt3dadd( 119.387, -113.048, -36.9813, 0.68 ) }
    dend_5 { pt3dadd( 120.857, -115.33, -38.0697, 0.45 ) }
    dend_5 { pt3dadd( 122.935, -118.628, -39.5676, 0.45 ) }
    dend_5 { pt3dadd( 125.345, -122.436, -41.3233, 0.45 ) }
    dend_5 { pt3dadd( 127.278, -125.418, -42.8601, 0.45 ) }
    dend_5 { pt3dadd( 128.643, -127.5, -44.0207, 0.45 ) }
    dend_5 { pt3dadd( 130.247, -129.917, -45.4346, 0.45 ) }
    dend_5 { pt3dadd( 132.997, -133.894, -47.9159, 0.45 ) }
    dend_5 { pt3dadd( 134.453, -135.99, -49.2742, 0.45 ) }
    dend_5 { pt3dadd( 136.944, -139.572, -51.6932, 0.45 ) }
    dend_5 { pt3dadd( 139.245, -142.799, -53.905, 0.45 ) }
    dend_5 { pt3dadd( 140.665, -144.741, -55.3033, 0.45 ) }
    dend_5 { pt3dadd( 141.851, -146.27, -56.4682, 0.45 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 42.306, -21.0534, 4.65612, 0.68 ) }
    dend_2 { pt3dadd( 44.0699, -20.5759, 8.3331, 0.68 ) }
    dend_2 { pt3dadd( 46.29, -19.6598, 12.55, 0.68 ) }
    dend_2 { pt3dadd( 48.0608, -18.7757, 15.1794, 0.68 ) }
    dend_2 { pt3dadd( 49.3515, -18.0759, 16.7212, 0.68 ) }
    dend_2 { pt3dadd( 50.2677, -17.5216, 17.5489, 0.68 ) }
    dend_2 { pt3dadd( 52.6366, -16.0013, 18.9828, 0.68 ) }
    dend_2 { pt3dadd( 54.3375, -14.8397, 19.5344, 0.68 ) }
    dend_2 { pt3dadd( 57.4628, -12.7039, 20.044, 0.57 ) }
    dend_2 { pt3dadd( 60.0036, -10.9903, 20.2446, 0.57 ) }
    dend_2 { pt3dadd( 63.7247, -8.36641, 20.463, 0.57 ) }
    dend_2 { pt3dadd( 68.0177, -5.26155, 20.6961, 0.57 ) }
    dend_2 { pt3dadd( 70.4112, -3.4719, 20.8315, 0.57 ) }
    dend_2 { pt3dadd( 71.537, -2.5542, 20.8887, 0.57 ) }
    dend_2 { pt3dadd( 74.994, 0.517031, 21.222, 0.57 ) }
    dend_2 { pt3dadd( 79.5003, 4.70919, 21.8386, 0.57 ) }
    dend_2 { pt3dadd( 82.9435, 8.02827, 22.5289, 0.57 ) }
    dend_2 { pt3dadd( 84.2042, 9.34082, 22.8213, 0.57 ) }
    dend_2 { pt3dadd( 87.06, 12.5174, 23.4437, 0.57 ) }
    dend_2 { pt3dadd( 89.7165, 15.5524, 24.0059, 0.57 ) }
    dend_2 { pt3dadd( 90.8637, 16.9305, 24.2714, 0.57 ) }
    // Section: dend_69, id: dend_69, parent: dend_47 (entry count 57/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 22.0817, -20.0664, 9.30502, 0.45 ) }
    dend_69 { pt3dadd( 21.0036, -28.5052, 9.16977, 0.45 ) }
    dend_69 { pt3dadd( 20.6713, -31.1797, 9.02251, 0.45 ) }
    dend_69 { pt3dadd( 20.2179, -34.7015, 9.095, 0.45 ) }
    dend_69 { pt3dadd( 19.7229, -38.331, 9.42909, 0.45 ) }
    dend_69 { pt3dadd( 19.3219, -41.0628, 9.79452, 0.45 ) }
    dend_69 { pt3dadd( 18.5854, -46.2932, 10.601, 0.45 ) }
    dend_69 { pt3dadd( 18.3583, -48.2847, 10.9492, 0.45 ) }
    dend_69 { pt3dadd( 17.7439, -54.3365, 12.2596, 0.45 ) }
    dend_69 { pt3dadd( 17.4213, -57.4781, 13.2353, 0.45 ) }
    dend_69 { pt3dadd( 17.1145, -59.9967, 14.2748, 0.45 ) }
    dend_69 { pt3dadd( 16.8831, -61.2881, 14.8766, 0.45 ) }
    dend_69 { pt3dadd( 16.5042, -62.8282, 15.6312, 0.45 ) }
    dend_69 { pt3dadd( 15.9152, -64.6606, 16.3397, 0.45 ) }
    dend_69 { pt3dadd( 14.3458, -69.5977, 17.5022, 0.45 ) }
    dend_69 { pt3dadd( 14.0304, -70.6643, 17.6492, 0.45 ) }
    dend_69 { pt3dadd( 13.2227, -73.9576, 17.8439, 0.45 ) }
    dend_69 { pt3dadd( 12.8205, -75.7879, 17.4777, 0.45 ) }
    dend_69 { pt3dadd( 12.4838, -78.133, 16.413, 0.45 ) }
    dend_69 { pt3dadd( 12.4164, -82.1552, 13.6859, 0.45 ) }
    dend_69 { pt3dadd( 12.7296, -84.7043, 11.4953, 0.45 ) }
    dend_69 { pt3dadd( 13.1598, -86.8981, 9.41471, 0.45 ) }
    dend_69 { pt3dadd( 15.0536, -93.0611, 2.75755, 0.45 ) }
    dend_69 { pt3dadd( 15.4894, -94.19, 1.37655, 1.02 ) }
    dend_69 { pt3dadd( 15.9752, -95.2728, -0.219494, 0.57 ) }
    dend_69 { pt3dadd( 16.4224, -96.4522, -2.53205, 0.45 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 83/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 22.0817, -20.0664, 9.30502, 0.45 ) }
    dend_48 { pt3dadd( 23.8357, -20.4111, 9.26419, 0.45 ) }
    dend_48 { pt3dadd( 25.6417, -20.766, 9.22216, 0.45 ) }
    dend_48 { pt3dadd( 28.1519, -21.2594, 9.16374, 0.45 ) }
    dend_48 { pt3dadd( 30.276, -21.6768, 9.11431, 0.45 ) }
    dend_48 { pt3dadd( 31.3779, -21.8934, 9.08866, 0.45 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.83139, -39.9243, -3.06856, 0.45 ) }
    dend_29 { pt3dadd( 3.99226, -41.8129, -1.37909, 0.45 ) }
    dend_29 { pt3dadd( 4.07917, -42.6821, -0.671345, 0.79 ) }
    dend_29 { pt3dadd( 4.92502, -51.1412, 6.21643, 1.24 ) }
    dend_29 { pt3dadd( 5.29009, -54.7922, 9.18926, 1.24 ) }
    dend_29 { pt3dadd( 5.59848, -57.8762, 11.7005, 1.24 ) }
    dend_29 { pt3dadd( 5.95314, -61.4231, 14.5885, 1.24 ) }
    dend_29 { pt3dadd( 6.08693, -62.7107, 15.6553, 2.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 97/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.83139, -39.9243, -3.06856, 0.91 ) }
    dend_26 { pt3dadd( 6.29489, -41.6455, -2.96111, 0.91 ) }
    dend_26 { pt3dadd( 7.65194, -42.5936, -2.90192, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 9.99956, -44.2339, -2.79952, 0.91 ) }
    dend_26 { pt3dadd( 11.6215, -45.3671, -2.72878, 0.91 ) }
    dend_26 { pt3dadd( 14.1565, -47.1383, -2.61821, 0.79 ) }
    dend_26 { pt3dadd( 14.6737, -47.4996, -2.59566, 0.79 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 4/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 57.5121, 34.2489, -26.4722, 0.57 ) }
    dend_19 { pt3dadd( 57.8368, 32.2281, -27.553, 0.57 ) }
    dend_19 { pt3dadd( 58.6363, 27.7749, -29.1594, 0.57 ) }
    dend_19 { pt3dadd( 59.441, 23.0095, -31.0301, 0.45 ) }
    dend_19 { pt3dadd( 60.557, 16.2297, -33.8738, 0.45 ) }
    dend_19 { pt3dadd( 61.7616, 8.72106, -36.9326, 0.45 ) }
    dend_19 { pt3dadd( 62.0911, 6.667, -37.7693, 0.45 ) }
    dend_19 { pt3dadd( 63.6506, -3.2339, -41.6721, 0.45 ) }
    dend_19 { pt3dadd( 64.8058, -11.1753, -44.6386, 0.45 ) }
    dend_19 { pt3dadd( 65.3661, -14.9266, -45.9786, 0.45 ) }
    dend_19 { pt3dadd( 66.032, -19.0957, -47.503, 0.45 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 57.5121, 34.2489, -26.4722, 0.57 ) }
    dend_18 { pt3dadd( 54.4983, 34.7648, -28.1126, 0.57 ) }
    dend_18 { pt3dadd( 52.5711, 34.2693, -28.7037, 0.68 ) }
    dend_18 { pt3dadd( 50.9119, 33.6374, -29.3004, 0.68 ) }
    dend_18 { pt3dadd( 49.2517, 33.0051, -29.8975, 0.68 ) }
    dend_18 { pt3dadd( 46.6211, 32.0033, -30.8436, 0.68 ) }
    dend_18 { pt3dadd( 44.104, 31.0447, -31.7489, 0.68 ) }
    dend_18 { pt3dadd( 41.1208, 30.1613, -32.7654, 0.68 ) }
    dend_18 { pt3dadd( 38.0937, 29.4117, -33.6278, 0.57 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 62.0256, 58.7483, -21.2735, 0.68 ) }
    dend_16 { pt3dadd( 62.4096, 60.1676, -19.6919, 0.68 ) }
    dend_16 { pt3dadd( 62.7367, 61.3766, -18.3447, 0.68 ) }
    dend_16 { pt3dadd( 63.2836, 63.3979, -16.0922, 0.68 ) }
    dend_16 { pt3dadd( 64.3882, 67.4808, -11.5426, 0.68 ) }
    dend_16 { pt3dadd( 65.0064, 69.7658, -8.99637, 0.68 ) }
    dend_16 { pt3dadd( 65.8361, 72.8325, -5.57912, 0.68 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 62.0256, 58.7483, -21.2735, 0.79 ) }
    dend_15 { pt3dadd( 63.1031, 59.7032, -21.0205, 0.79 ) }
    dend_15 { pt3dadd( 64.8174, 61.2224, -20.618, 0.79 ) }
    dend_15 { pt3dadd( 65.9278, 62.2065, -20.3573, 0.79 ) }
    dend_15 { pt3dadd( 67.1663, 63.3041, -20.0666, 0.79 ) }
    dend_15 { pt3dadd( 67.8695, 63.9272, -19.9015, 0.79 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 141.851, -146.27, -56.4682, 0.57 ) }
    dend_7 { pt3dadd( 143.012, -148.578, -57.1221, 0.57 ) }
    dend_7 { pt3dadd( 144.769, -152.065, -58.0044, 0.57 ) }
    dend_7 { pt3dadd( 145.642, -153.746, -58.4163, 0.57 ) }
    dend_7 { pt3dadd( 147.944, -158.046, -59.4596, 0.57 ) }
    dend_7 { pt3dadd( 150.185, -162.19, -60.4239, 0.57 ) }
    dend_7 { pt3dadd( 151.993, -165.531, -61.2015, 0.57 ) }
    dend_7 { pt3dadd( 153.041, -167.471, -61.5632, 0.57 ) }
    dend_7 { pt3dadd( 153.983, -169.223, -61.8429, 0.57 ) }
    dend_7 { pt3dadd( 154.888, -170.853, -62.0971, 0.57 ) }
    dend_7 { pt3dadd( 156.033, -172.68, -62.4223, 0.57 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 141.851, -146.27, -56.4682, 0.34 ) }
    dend_6 { pt3dadd( 143.58, -148.225, -56.213, 0.34 ) }
    dend_6 { pt3dadd( 144.764, -149.795, -55.9358, 0.34 ) }
    dend_6 { pt3dadd( 145.268, -150.496, -55.819, 0.34 ) }
    dend_6 { pt3dadd( 147.629, -153.644, -55.5733, 0.34 ) }
    dend_6 { pt3dadd( 149.57, -156.173, -55.5468, 0.57 ) }
    dend_6 { pt3dadd( 152.204, -159.598, -55.603, 0.57 ) }
    dend_6 { pt3dadd( 153.959, -161.964, -55.7181, 0.57 ) }
    dend_6 { pt3dadd( 155.563, -164.03, -55.951, 0.57 ) }
    dend_6 { pt3dadd( 158.831, -168.067, -56.6452, 0.57 ) }
    dend_6 { pt3dadd( 160.744, -170.3, -57.161, 0.57 ) }
    dend_6 { pt3dadd( 162.715, -172.384, -57.8128, 0.57 ) }
    dend_6 { pt3dadd( 165.424, -174.931, -58.8065, 0.57 ) }
    dend_6 { pt3dadd( 169.4, -178.446, -60.3127, 0.57 ) }
    dend_6 { pt3dadd( 172.743, -181.343, -61.5562, 0.57 ) }
    dend_6 { pt3dadd( 174.89, -183.225, -62.2526, 0.57 ) }
    dend_6 { pt3dadd( 178.608, -186.433, -63.3473, 0.57 ) }
    dend_6 { pt3dadd( 179.682, -187.34, -63.6298, 0.57 ) }
    dend_6 { pt3dadd( 182.019, -189.315, -64.1068, 0.57 ) }
    dend_6 { pt3dadd( 183.708, -190.815, -64.2732, 0.57 ) }
    dend_6 { pt3dadd( 186.866, -193.605, -64.2616, 0.57 ) }
    dend_6 { pt3dadd( 187.827, -194.482, -64.1523, 0.57 ) }
    dend_6 { pt3dadd( 189.288, -196.071, -63.6222, 0.57 ) }
    dend_6 { pt3dadd( 190.281, -197.188, -63.1432, 0.57 ) }
    dend_6 { pt3dadd( 191.246, -198.325, -62.5404, 0.57 ) }
    dend_6 { pt3dadd( 191.9, -199.105, -62.1, 0.57 ) }
    dend_6 { pt3dadd( 193.454, -200.998, -61.0022, 0.57 ) }
    dend_6 { pt3dadd( 196.631, -205.171, -58.523, 0.57 ) }
    dend_6 { pt3dadd( 197.458, -206.35, -57.799, 0.57 ) }
    dend_6 { pt3dadd( 199.004, -208.693, -56.3377, 0.57 ) }
    dend_6 { pt3dadd( 200.545, -211.201, -54.8525, 0.57 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 90.8637, 16.9305, 24.2714, 0.45 ) }
    dend_4 { pt3dadd( 93.9933, 20.2594, 22.2747, 0.45 ) }
    dend_4 { pt3dadd( 95.5787, 21.9544, 21.2719, 0.45 ) }
    dend_4 { pt3dadd( 97.799, 24.637, 19.8052, 0.45 ) }
    dend_4 { pt3dadd( 98.3679, 25.3372, 19.4819, 0.45 ) }
    dend_4 { pt3dadd( 98.6417, 25.6683, 19.3515, 0.45 ) }
    dend_4 { pt3dadd( 101.16, 28.6923, 18.425, 0.45 ) }
    dend_4 { pt3dadd( 101.464, 29.0193, 18.3745, 0.45 ) }
    dend_4 { pt3dadd( 103.324, 31.0477, 18.0644, 0.45 ) }
    dend_4 { pt3dadd( 104.686, 32.6589, 18.0333, 0.45 ) }
    dend_4 { pt3dadd( 105.422, 33.5667, 18.0516, 0.45 ) }
    dend_4 { pt3dadd( 107.147, 35.643, 18.2433, 0.45 ) }
    dend_4 { pt3dadd( 108.619, 37.1873, 18.7297, 0.45 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 92/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 90.8637, 16.9305, 24.2714, 0.45 ) }
    dend_3 { pt3dadd( 92.7579, 17.2686, 25.0111, 0.45 ) }
    dend_3 { pt3dadd( 93.9766, 17.486, 25.4871, 0.45 ) }
    // Section: dend_64, id: dend_64, parent: dend_48 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 31.3779, -21.8934, 9.08866, 0.45 ) }
    dend_64 { pt3dadd( 29.9967, -26.9262, 10.843, 0.45 ) }
    dend_64 { pt3dadd( 28.4564, -32.7684, 12.8149, 0.45 ) }
    dend_64 { pt3dadd( 27.5832, -36.0162, 13.9485, 0.45 ) }
    dend_64 { pt3dadd( 26.6044, -39.53, 15.119, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_64 { pt3dadd( 25.4584, -43.6436, 16.385, 0.45 ) }
    dend_64 { pt3dadd( 25.0415, -45.217, 16.809, 0.45 ) }
    dend_64 { pt3dadd( 24.5387, -47.1919, 17.1959, 0.45 ) }
    dend_64 { pt3dadd( 23.5363, -52.0818, 18.0124, 0.45 ) }
    dend_64 { pt3dadd( 23.01, -55.8042, 18.3608, 0.45 ) }
    dend_64 { pt3dadd( 22.7149, -59.0418, 18.4371, 0.45 ) }
    dend_64 { pt3dadd( 22.5611, -61.694, 18.4203, 0.45 ) }
    dend_64 { pt3dadd( 22.5216, -64.131, 18.5104, 0.45 ) }
    dend_64 { pt3dadd( 22.6827, -67.9893, 18.8378, 0.45 ) }
    dend_64 { pt3dadd( 22.9648, -70.4766, 19.4502, 0.45 ) }
    dend_64 { pt3dadd( 23.3374, -72.741, 20.3499, 0.45 ) }
    dend_64 { pt3dadd( 23.9674, -75.9826, 21.7966, 0.45 ) }
    dend_64 { pt3dadd( 24.7152, -79.2866, 23.4103, 0.45 ) }
    dend_64 { pt3dadd( 25.2027, -81.0836, 24.3106, 0.45 ) }
    dend_64 { pt3dadd( 27.0718, -87.266, 26.7975, 0.45 ) }
    dend_64 { pt3dadd( 28.4552, -91.3369, 28.0895, 0.45 ) }
    dend_64 { pt3dadd( 29.811, -94.9486, 28.8376, 0.45 ) }
    dend_64 { pt3dadd( 31.0598, -98.2905, 28.9936, 0.45 ) }
    dend_64 { pt3dadd( 32.2532, -101.432, 28.952, 0.45 ) }
    dend_64 { pt3dadd( 34.4368, -107.534, 28.6728, 0.45 ) }
    dend_64 { pt3dadd( 35.3275, -110.281, 28.4547, 0.45 ) }
    dend_64 { pt3dadd( 35.9287, -112.437, 28.6874, 0.45 ) }
    dend_64 { pt3dadd( 37.1599, -117.377, 29.518, 0.45 ) }
    dend_64 { pt3dadd( 38.0358, -121.518, 30.3499, 0.45 ) }
    dend_64 { pt3dadd( 38.867, -126.13, 31.6768, 0.45 ) }
    dend_64 { pt3dadd( 39.2367, -128.506, 32.7157, 0.45 ) }
    dend_64 { pt3dadd( 40.3596, -137.528, 36.8774, 0.79 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 27/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 31.3779, -21.8934, 9.08866, 0.45 ) }
    dend_49 { pt3dadd( 34.1755, -23.5146, 9.35751, 0.45 ) }
    dend_49 { pt3dadd( 35.8061, -24.7729, 9.43512, 0.45 ) }
    dend_49 { pt3dadd( 38.4514, -27.0942, 9.46381, 0.45 ) }
    dend_49 { pt3dadd( 40.8006, -29.3299, 9.43837, 0.45 ) }
    dend_49 { pt3dadd( 44.2457, -32.8234, 9.32496, 0.45 ) }
    dend_49 { pt3dadd( 48.5901, -37.501, 9.10672, 0.45 ) }
    dend_49 { pt3dadd( 53.5901, -43.6415, 8.77102, 0.45 ) }
    dend_49 { pt3dadd( 57.3229, -48.6703, 8.09218, 0.45 ) }
    dend_49 { pt3dadd( 59.3082, -51.5066, 7.6634, 0.45 ) }
    dend_49 { pt3dadd( 62.9118, -56.9227, 6.75704, 0.45 ) }
    dend_49 { pt3dadd( 65.254, -60.5429, 6.02535, 0.45 ) }
    dend_49 { pt3dadd( 67.6456, -64.4324, 5.10498, 0.45 ) }
    dend_49 { pt3dadd( 72.2964, -72.9021, 2.60114, 0.45 ) }
    // Section: dend_41, id: dend_41, parent: dend_29 (entry count 41/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.08693, -62.7107, 15.6553, 0.12 ) }
    dend_41 { pt3dadd( 5.51944, -63.5558, 15.26, 0.12 ) }
    dend_41 { pt3dadd( 4.66991, -65.6003, 14.3251, 0.57 ) }
    dend_41 { pt3dadd( 4.14436, -67.3989, 13.6496, 0.57 ) }
    dend_41 { pt3dadd( 3.78951, -68.9982, 13.2582, 0.57 ) }
    dend_41 { pt3dadd( 2.5501, -74.0838, 11.8536, 0.57 ) }
    dend_41 { pt3dadd( 1.62717, -77.1299, 10.7676, 0.57 ) }
    dend_41 { pt3dadd( 1.07081, -78.8488, 10.0577, 0.91 ) }
    dend_41 { pt3dadd( 0.423671, -80.4258, 9.05083, 0.91 ) }
    dend_41 { pt3dadd( -0.602125, -82.3898, 7.39513, 0.91 ) }
    dend_41 { pt3dadd( -2.72197, -84.9183, 4.17079, 0.68 ) }
    dend_41 { pt3dadd( -4.71305, -86.1191, 1.29273, 0.68 ) }
    dend_41 { pt3dadd( -5.74693, -86.5656, -0.175622, 0.68 ) }
    dend_41 { pt3dadd( -9.24679, -87.7976, -5.33618, 0.68 ) }
    dend_41 { pt3dadd( -10.0912, -88.0275, -6.62172, 0.68 ) }
    dend_41 { pt3dadd( -12.0761, -88.4198, -9.77724, 0.68 ) }
    dend_41 { pt3dadd( -15.4434, -88.8866, -15.3068, 0.68 ) }
    dend_41 { pt3dadd( -16.7318, -89.0395, -17.5383, 0.68 ) }
    dend_41 { pt3dadd( -19.1812, -89.458, -22.0242, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_29 (entry count 60/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.08693, -62.7107, 15.6553, 0.79 ) }
    dend_32 { pt3dadd( 6.81106, -65.5047, 15.5334, 0.79 ) }
    dend_32 { pt3dadd( 7.78687, -69.2698, 15.3692, 0.79 ) }
    dend_32 { pt3dadd( 8.23745, -71.0083, 15.2934, 0.79 ) }
    dend_32 { pt3dadd( 8.58502, -72.3493, 15.2349, 0.79 ) }
    dend_32 { pt3dadd( 8.74766, -72.9769, 15.2075, 0.79 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 66/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.08693, -62.7107, 15.6553, 0.57 ) }
    dend_30 { pt3dadd( 7.25049, -63.0806, 18.0762, 0.57 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 68/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.6737, -47.4996, -2.59566, 1.13 ) }
    dend_28 { pt3dadd( 15.3068, -48.9324, -1.84245, 1.13 ) }
    dend_28 { pt3dadd( 16.326, -51.1345, -0.83951, 0.91 ) }
    dend_28 { pt3dadd( 16.9388, -52.4625, -0.347504, 0.91 ) }
    dend_28 { pt3dadd( 17.954, -54.6888, 0.359055, 0.91 ) }
    dend_28 { pt3dadd( 19.0174, -57.1322, 1.03036, 0.91 ) }
    dend_28 { pt3dadd( 19.9172, -59.33, 1.62255, 0.91 ) }
    dend_28 { pt3dadd( 20.4771, -60.8474, 1.96847, 0.91 ) }
    dend_28 { pt3dadd( 21.2962, -63.3493, 2.52553, 0.91 ) }
    dend_28 { pt3dadd( 21.6028, -64.3993, 2.76426, 1.92 ) }
    dend_28 { pt3dadd( 21.9807, -65.8084, 3.06386, 1.36 ) }
    dend_28 { pt3dadd( 22.5081, -67.8907, 3.54849, 1.02 ) }
    dend_28 { pt3dadd( 23.0968, -70.3596, 4.23674, 1.02 ) }
    dend_28 { pt3dadd( 23.6115, -72.4711, 4.88563, 1.02 ) }
    dend_28 { pt3dadd( 23.8343, -73.3356, 5.1625, 1.02 ) }
    dend_28 { pt3dadd( 24.105, -74.3053, 5.47367, 0.68 ) }
    dend_28 { pt3dadd( 24.594, -75.848, 5.88428, 0.68 ) }
    dend_28 { pt3dadd( 24.8955, -76.6674, 6.02129, 1.02 ) }
    dend_28 { pt3dadd( 25.2011, -77.3591, 6.06219, 2.15 ) }
    dend_28 { pt3dadd( 25.7984, -78.501, 6.00745, 1.47 ) }
    dend_28 { pt3dadd( 26.84, -80.2863, 5.84434, 1.13 ) }
    dend_28 { pt3dadd( 27.5605, -81.5068, 5.71658, 0.79 ) }
    dend_28 { pt3dadd( 28.0497, -82.3071, 5.61544, 0.57 ) }
    dend_28 { pt3dadd( 29.0219, -83.771, 5.42754, 0.57 ) }
    dend_28 { pt3dadd( 29.8955, -84.9905, 5.26768, 0.57 ) }
    dend_28 { pt3dadd( 30.649, -85.9889, 5.1278, 0.57 ) }
    dend_28 { pt3dadd( 31.3387, -86.9368, 4.99062, 0.57 ) }
    dend_28 { pt3dadd( 31.7797, -87.6412, 4.87638, 0.57 ) }
    dend_28 { pt3dadd( 32.4888, -88.9439, 4.61198, 0.57 ) }
    dend_28 { pt3dadd( 32.8847, -89.7147, 4.5277, 0.57 ) }
    dend_28 { pt3dadd( 33.4565, -90.9034, 4.46107, 2.83 ) }
    dend_28 { pt3dadd( 34.2103, -92.4587, 4.47539, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( 35.3126, -94.6549, 4.5351, 1.02 ) }
    dend_28 { pt3dadd( 35.9155, -95.8978, 4.60781, 0.68 ) }
    dend_28 { pt3dadd( 37.4226, -98.9779, 4.83309, 0.68 ) }
    dend_28 { pt3dadd( 37.9827, -100.044, 4.90884, 0.68 ) }
    dend_28 { pt3dadd( 39.0016, -101.814, 5.08878, 0.68 ) }
    dend_28 { pt3dadd( 39.6097, -102.787, 5.20064, 0.68 ) }
    dend_28 { pt3dadd( 40.4116, -103.952, 5.30396, 0.68 ) }
    dend_28 { pt3dadd( 41.5325, -105.487, 5.34347, 0.68 ) }
    dend_28 { pt3dadd( 42.8502, -107.139, 5.2615, 0.68 ) }
    dend_28 { pt3dadd( 44.7308, -109.303, 5.15783, 0.68 ) }
    dend_28 { pt3dadd( 45.9218, -110.625, 5.09361, 0.68 ) }
    dend_28 { pt3dadd( 47.3693, -112.208, 4.97795, 0.57 ) }
    dend_28 { pt3dadd( 48.3946, -113.339, 4.85352, 0.57 ) }
    dend_28 { pt3dadd( 49.3314, -114.467, 4.6255, 0.57 ) }
    dend_28 { pt3dadd( 50.2456, -115.668, 4.2194, 0.57 ) }
    dend_28 { pt3dadd( 51.138, -116.934, 3.56544, 0.57 ) }
    dend_28 { pt3dadd( 52.2642, -118.592, 2.59166, 0.57 ) }
    dend_28 { pt3dadd( 52.7409, -119.33, 2.10156, 1.47 ) }
    dend_28 { pt3dadd( 53.9664, -121.228, 0.73239, 0.68 ) }
    dend_28 { pt3dadd( 54.7107, -122.359, -0.109417, 0.68 ) }
    dend_28 { pt3dadd( 55.7526, -123.824, -1.22017, 0.68 ) }
    dend_28 { pt3dadd( 57.2927, -125.807, -2.70427, 0.68 ) }
    dend_28 { pt3dadd( 58.7971, -127.596, -3.92953, 0.68 ) }
    dend_28 { pt3dadd( 59.5072, -128.379, -4.44206, 0.68 ) }
    dend_28 { pt3dadd( 59.9798, -128.892, -4.61467, 0.68 ) }
    dend_28 { pt3dadd( 60.776, -129.92, -4.55798, 0.57 ) }
    dend_28 { pt3dadd( 61.1347, -130.468, -4.39462, 0.57 ) }
    dend_28 { pt3dadd( 61.6285, -131.306, -4.04112, 0.57 ) }
    dend_28 { pt3dadd( 62.4589, -132.823, -3.4178, 0.57 ) }
    dend_28 { pt3dadd( 65.1633, -138.142, -1.48698, 0.68 ) }
    dend_28 { pt3dadd( 66.6944, -141.322, -0.559417, 0.68 ) }
    dend_28 { pt3dadd( 67.3773, -142.831, -0.25016, 0.68 ) }
    dend_28 { pt3dadd( 67.815, -143.872, -0.165242, 0.68 ) }
    dend_28 { pt3dadd( 68.9199, -146.674, -0.59238, 0.68 ) }
    dend_28 { pt3dadd( 69.2452, -147.505, -0.951236, 0.68 ) }
    dend_28 { pt3dadd( 69.8361, -148.951, -2.03588, 2.04 ) }
    dend_28 { pt3dadd( 70.3778, -150.19, -3.16293, 0.79 ) }
    dend_28 { pt3dadd( 70.9769, -151.465, -4.34916, 0.79 ) }
    dend_28 { pt3dadd( 72.1574, -153.863, -6.37819, 0.79 ) }
    dend_28 { pt3dadd( 72.8569, -155.195, -7.28851, 0.79 ) }
    dend_28 { pt3dadd( 73.5379, -156.45, -7.95394, 0.79 ) }
    dend_28 { pt3dadd( 74.3338, -157.916, -8.45095, 0.79 ) }
    dend_28 { pt3dadd( 75.1157, -159.272, -8.70853, 0.68 ) }
    dend_28 { pt3dadd( 76.2152, -161.096, -8.79216, 0.68 ) }
    dend_28 { pt3dadd( 77.2421, -162.753, -8.65564, 0.68 ) }
    dend_28 { pt3dadd( 78.2154, -164.257, -8.21703, 0.68 ) }
    dend_28 { pt3dadd( 78.9492, -165.353, -7.76419, 0.68 ) }
    dend_28 { pt3dadd( 79.7306, -166.478, -7.14681, 0.68 ) }
    dend_28 { pt3dadd( 80.196, -167.117, -6.76334, 1.58 ) }
    dend_28 { pt3dadd( 80.9016, -168.024, -6.24762, 1.58 ) }
    dend_28 { pt3dadd( 83.8659, -171.744, -4.26721, 0.68 ) }
    dend_28 { pt3dadd( 84.9412, -173.04, -3.60612, 0.68 ) }
    dend_28 { pt3dadd( 86.9283, -175.343, -2.50196, 0.68 ) }
    dend_28 { pt3dadd( 88.7333, -177.421, -1.50264, 0.68 ) }
    dend_28 { pt3dadd( 90.314, -179.201, -0.686153, 0.68 ) }
    dend_28 { pt3dadd( 91.5686, -180.591, -0.0582927, 0.68 ) }
    dend_28 { pt3dadd( 92.9949, -182.111, 0.526534, 0.68 ) }
    dend_28 { pt3dadd( 93.9967, -183.108, 1.04452, 0.68 ) }
    dend_28 { pt3dadd( 95.8888, -184.854, 2.05749, 0.68 ) }
    dend_28 { pt3dadd( 96.5509, -185.409, 2.37122, 0.68 ) }
    dend_28 { pt3dadd( 98.3538, -186.785, 3.03863, 2.38 ) }
    dend_28 { pt3dadd( 99.2698, -187.455, 3.24297, 1.92 ) }
    dend_28 { pt3dadd( 101.965, -189.339, 3.55144, 0.57 ) }
    dend_28 { pt3dadd( 102.998, -190.052, 3.52264, 0.57 ) }
    dend_28 { pt3dadd( 106.565, -192.487, 3.0085, 0.57 ) }
    dend_28 { pt3dadd( 109.042, -194.187, 2.56615, 0.57 ) }
    dend_28 { pt3dadd( 110.606, -195.254, 2.21509, 0.57 ) }
    dend_28 { pt3dadd( 112.582, -196.597, 1.78174, 0.57 ) }
    dend_28 { pt3dadd( 114.458, -197.848, 1.37534, 0.57 ) }
    dend_28 { pt3dadd( 115.735, -198.711, 1.23091, 0.57 ) }
    dend_28 { pt3dadd( 116.758, -199.408, 1.27341, 2.15 ) }
    dend_28 { pt3dadd( 117.608, -199.97, 1.34665, 1.13 ) }
    dend_28 { pt3dadd( 118.915, -200.836, 1.50961, 0.57 ) }
    dend_28 { pt3dadd( 120.133, -201.701, 1.49594, 0.57 ) }
    dend_28 { pt3dadd( 120.655, -202.083, 1.44101, 0.57 ) }
    dend_28 { pt3dadd( 121.296, -202.618, 1.34196, 0.57 ) }
    dend_28 { pt3dadd( 122.114, -203.36, 1.18133, 0.57 ) }
    dend_28 { pt3dadd( 122.316, -203.572, 1.14208, 2.38 ) }
    dend_28 { pt3dadd( 124.275, -205.828, 0.765599, 0.45 ) }
    dend_28 { pt3dadd( 125.538, -207.376, 0.540371, 0.45 ) }
    dend_28 { pt3dadd( 126.935, -209.129, 0.319749, 0.45 ) }
    dend_28 { pt3dadd( 127.906, -210.375, 0.232437, 0.45 ) }
    dend_28 { pt3dadd( 129.642, -212.674, 0.277691, 0.45 ) }
    dend_28 { pt3dadd( 130.103, -213.31, 0.335948, 0.45 ) }
    dend_28 { pt3dadd( 132.066, -216.224, 0.895054, 0.45 ) }
    dend_28 { pt3dadd( 133.437, -218.474, 1.39216, 0.45 ) }
    dend_28 { pt3dadd( 134.566, -220.592, 1.82432, 0.45 ) }
    dend_28 { pt3dadd( 135.46, -222.593, 2.27519, 0.45 ) }
    dend_28 { pt3dadd( 135.812, -223.55, 2.50585, 0.45 ) }
    dend_28 { pt3dadd( 136.279, -225.103, 2.82874, 0.45 ) }
    dend_28 { pt3dadd( 136.76, -227.156, 3.13357, 0.45 ) }
    dend_28 { pt3dadd( 137.24, -229.262, 3.10688, 0.45 ) }
    dend_28 { pt3dadd( 137.385, -229.791, 3.01264, 1.24 ) }
    dend_28 { pt3dadd( 137.858, -231.087, 2.64678, 0.57 ) }
    dend_28 { pt3dadd( 138.614, -232.647, 2.1438, 0.57 ) }
    dend_28 { pt3dadd( 139.835, -234.633, 1.45119, 0.57 ) }
    dend_28 { pt3dadd( 141.127, -236.437, 0.852207, 1.36 ) }
    dend_28 { pt3dadd( 142.271, -237.871, 0.538383, 0.57 ) }
    dend_28 { pt3dadd( 143.633, -239.437, 0.305629, 0.57 ) }
    dend_28 { pt3dadd( 145.487, -241.43, 0.146198, 0.57 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( 146.945, -242.916, 0.225938, 0.57 ) }
    dend_28 { pt3dadd( 148.04, -243.979, 0.403108, 0.57 ) }
    dend_28 { pt3dadd( 150.393, -246.297, 0.887212, 0.57 ) }
    dend_28 { pt3dadd( 152.56, -248.562, 1.30922, 0.57 ) }
    dend_28 { pt3dadd( 153.447, -249.605, 1.49758, 0.57 ) }
    dend_28 { pt3dadd( 154.947, -251.627, 1.74701, 2.38 ) }
    dend_28 { pt3dadd( 155.371, -252.278, 1.7812, 1.58 ) }
    dend_28 { pt3dadd( 157.133, -255.299, 1.89187, 0.68 ) }
    dend_28 { pt3dadd( 158.087, -257.174, 1.89896, 0.68 ) }
    dend_28 { pt3dadd( 159.158, -259.523, 2.07039, 0.79 ) }
    dend_28 { pt3dadd( 160.128, -261.732, 2.27122, 0.57 ) }
    dend_28 { pt3dadd( 161.016, -263.862, 2.47144, 0.57 ) }
    dend_28 { pt3dadd( 162.3, -267.055, 2.87793, 0.57 ) }
    dend_28 { pt3dadd( 163.242, -269.47, 3.27567, 0.57 ) }
    dend_28 { pt3dadd( 164.126, -271.778, 3.61803, 0.57 ) }
    dend_28 { pt3dadd( 164.555, -272.893, 3.75012, 0.57 ) }
    dend_28 { pt3dadd( 165.242, -274.697, 3.94708, 0.57 ) }
    dend_28 { pt3dadd( 166.234, -277.382, 4.09821, 0.57 ) }
    dend_28 { pt3dadd( 166.868, -279.064, 4.01297, 0.57 ) }
    dend_28 { pt3dadd( 167.629, -281.032, 3.70518, 0.57 ) }
    dend_28 { pt3dadd( 168.164, -282.391, 3.33907, 0.57 ) }
    dend_28 { pt3dadd( 168.509, -283.226, 3.06588, 0.57 ) }
    dend_28 { pt3dadd( 169.196, -284.767, 2.54373, 0.57 ) }
    dend_28 { pt3dadd( 170.436, -287.33, 1.67258, 0.57 ) }
    dend_28 { pt3dadd( 171.502, -289.334, 1.10166, 1.13 ) }
    dend_28 { pt3dadd( 172.171, -290.489, 0.848396, 2.38 ) }
    dend_28 { pt3dadd( 172.416, -290.89, 0.779388, 2.38 ) }
    dend_28 { pt3dadd( 174.117, -293.522, 0.483096, 0.79 ) }
    dend_28 { pt3dadd( 175.075, -295.002, 0.275033, 0.79 ) }
    dend_28 { pt3dadd( 176.168, -296.792, 0.0390579, 0.57 ) }
    dend_28 { pt3dadd( 177.018, -298.261, -0.200528, 0.57 ) }
    dend_28 { pt3dadd( 177.742, -299.639, -0.471427, 0.57 ) }
    dend_28 { pt3dadd( 178.336, -300.857, -0.768907, 0.57 ) }
    dend_28 { pt3dadd( 179.781, -303.911, -1.70766, 0.57 ) }
    dend_28 { pt3dadd( 180.01, -304.425, -1.85157, 2.94 ) }
    dend_28 { pt3dadd( 181.052, -306.77, -2.51165, 0.68 ) }
    dend_28 { pt3dadd( 182.079, -309.018, -3.06153, 0.68 ) }
    dend_28 { pt3dadd( 182.951, -310.78, -3.41789, 0.68 ) }
    dend_28 { pt3dadd( 183.71, -312.205, -3.65446, 0.68 ) }
    dend_28 { pt3dadd( 184.993, -314.442, -3.92998, 0.68 ) }
    dend_28 { pt3dadd( 186.209, -316.547, -4.22551, 0.68 ) }
    dend_28 { pt3dadd( 187.101, -318.076, -4.46596, 0.68 ) }
    dend_28 { pt3dadd( 187.947, -319.522, -4.72885, 0.68 ) }
    dend_28 { pt3dadd( 189.547, -322.273, -5.19748, 0.68 ) }
    dend_28 { pt3dadd( 190.313, -323.569, -5.4018, 0.68 ) }
    dend_28 { pt3dadd( 191.124, -324.896, -5.58908, 0.68 ) }
    dend_28 { pt3dadd( 193.236, -328.449, -5.80269, 0.68 ) }
    dend_28 { pt3dadd( 193.709, -329.263, -5.8146, 0.68 ) }
    dend_28 { pt3dadd( 195.267, -332.169, -5.67391, 0.57 ) }
    dend_28 { pt3dadd( 195.651, -332.946, -5.59697, 0.57 ) }
    dend_28 { pt3dadd( 195.902, -333.51, -5.52485, 2.49 ) }
    dend_28 { pt3dadd( 197.479, -337.261, -4.8979, 0.68 ) }
    dend_28 { pt3dadd( 197.894, -338.335, -4.66655, 0.68 ) }
    dend_28 { pt3dadd( 199.376, -342.112, -3.80531, 0.68 ) }
    dend_28 { pt3dadd( 199.863, -343.3, -3.54384, 0.68 ) }
    dend_28 { pt3dadd( 200.929, -345.676, -3.06956, 0.68 ) }
    dend_28 { pt3dadd( 202.115, -348.059, -2.65403, 0.68 ) }
    dend_28 { pt3dadd( 203.331, -350.187, -2.37571, 0.68 ) }
    dend_28 { pt3dadd( 204.493, -351.977, -2.10305, 0.68 ) }
    dend_28 { pt3dadd( 206.399, -354.517, -1.69459, 0.68 ) }
    dend_28 { pt3dadd( 207.17, -355.47, -1.49871, 0.68 ) }
    dend_28 { pt3dadd( 207.75, -356.171, -1.30844, 2.72 ) }
    dend_28 { pt3dadd( 208.611, -357.258, -0.98441, 1.92 ) }
    dend_28 { pt3dadd( 210.153, -359.446, -0.246133, 0.91 ) }
    dend_28 { pt3dadd( 211.0, -360.897, 0.351464, 0.91 ) }
    dend_28 { pt3dadd( 211.719, -362.409, 1.09133, 0.68 ) }
    dend_28 { pt3dadd( 212.429, -364.097, 2.03166, 0.68 ) }
    dend_28 { pt3dadd( 213.119, -365.841, 3.1364, 0.68 ) }
    dend_28 { pt3dadd( 213.978, -368.086, 4.67198, 0.68 ) }
    dend_28 { pt3dadd( 214.575, -369.664, 5.91842, 0.68 ) }
    dend_28 { pt3dadd( 215.428, -371.835, 7.8714, 0.68 ) }
    dend_28 { pt3dadd( 216.149, -373.46, 9.62028, 0.68 ) }
    dend_28 { pt3dadd( 217.202, -375.572, 12.1369, 0.68 ) }
    dend_28 { pt3dadd( 217.717, -376.491, 13.4026, 0.68 ) }
    dend_28 { pt3dadd( 218.963, -378.482, 16.1864, 0.68 ) }
    dend_28 { pt3dadd( 219.771, -379.671, 17.791, 0.68 ) }
    dend_28 { pt3dadd( 221.87, -382.629, 21.5611, 0.68 ) }
    dend_28 { pt3dadd( 222.686, -383.785, 22.9218, 0.68 ) }
    dend_28 { pt3dadd( 224.66, -386.568, 25.8928, 0.68 ) }
    dend_28 { pt3dadd( 226.051, -388.543, 27.7858, 0.68 ) }
    dend_28 { pt3dadd( 226.521, -389.206, 28.3082, 0.68 ) }
    dend_28 { pt3dadd( 226.928, -389.792, 28.7163, 0.68 ) }
    dend_28 { pt3dadd( 228.089, -391.617, 29.7715, 0.68 ) }
    dend_28 { pt3dadd( 228.553, -392.371, 30.2474, 0.68 ) }
    dend_28 { pt3dadd( 229.746, -394.414, 31.465, 0.45 ) }
    dend_28 { pt3dadd( 230.37, -395.503, 32.3489, 0.45 ) }
    dend_28 { pt3dadd( 230.634, -395.987, 32.767, 0.45 ) }
    dend_28 { pt3dadd( 231.037, -396.733, 33.4313, 0.45 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.6737, -47.4996, -2.59566, 0.79 ) }
    dend_27 { pt3dadd( 15.8436, -45.9924, -3.28418, 0.79 ) }
    dend_27 { pt3dadd( 16.8652, -44.6762, -3.8854, 0.57 ) }
    dend_27 { pt3dadd( 17.3324, -44.0742, -4.16042, 0.34 ) }
    dend_27 { pt3dadd( 17.864, -43.3893, -4.47328, 0.34 ) }
    dend_27 { pt3dadd( 18.0897, -43.0986, -4.60608, 0.34 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 94/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 66.032, -19.0957, -47.503, 0.45 ) }
    dend_21 { pt3dadd( 66.5139, -21.4003, -48.7705, 0.45 ) }
    dend_21 { pt3dadd( 67.0972, -24.2386, -50.5582, 0.45 ) }
    dend_21 { pt3dadd( 68.2679, -30.0867, -54.4788, 0.45 ) }
    dend_21 { pt3dadd( 68.9634, -33.8741, -57.6949, 0.45 ) }
    dend_21 { pt3dadd( 69.4474, -37.5519, -61.0902, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_21 { pt3dadd( 69.5258, -38.6085, -62.0727, 0.45 ) }
    dend_21 { pt3dadd( 69.6211, -42.2877, -65.5404, 0.45 ) }
    dend_21 { pt3dadd( 69.5824, -47.0524, -70.05, 0.45 ) }
    dend_21 { pt3dadd( 69.2839, -53.8926, -76.3379, 0.45 ) }
    dend_21 { pt3dadd( 68.9795, -57.8703, -79.9439, 0.45 ) }
    dend_21 { pt3dadd( 68.2733, -63.5307, -84.8994, 0.45 ) }
    dend_21 { pt3dadd( 67.3299, -68.9722, -89.3508, 0.45 ) }
    dend_21 { pt3dadd( 66.4268, -72.7983, -92.1989, 0.45 ) }
    dend_21 { pt3dadd( 64.6861, -78.1382, -95.8106, 0.45 ) }
    dend_21 { pt3dadd( 63.316, -81.3312, -97.6477, 0.45 ) }
    dend_21 { pt3dadd( 61.9027, -84.1798, -99.3246, 0.45 ) }
    dend_21 { pt3dadd( 59.7469, -87.4685, -101.293, 0.45 ) }
    dend_21 { pt3dadd( 57.7021, -89.7401, -102.644, 0.45 ) }
    dend_21 { pt3dadd( 54.5607, -92.4557, -104.194, 0.45 ) }
    dend_21 { pt3dadd( 50.3545, -95.4039, -105.718, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 15/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 66.032, -19.0957, -47.503, 0.45 ) }
    dend_20 { pt3dadd( 69.2258, -25.4801, -48.9415, 0.45 ) }
    dend_20 { pt3dadd( 70.6635, -28.3539, -49.589, 0.45 ) }
    dend_20 { pt3dadd( 72.6389, -32.3028, -50.4788, 0.45 ) }
    dend_20 { pt3dadd( 73.6722, -34.3682, -50.9441, 0.45 ) }
    dend_20 { pt3dadd( 75.8958, -38.8131, -51.9456, 0.45 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 21/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 40.3596, -137.528, 36.8774, 0.57 ) }
    dend_66 { pt3dadd( 39.2455, -138.759, 37.9586, 0.57 ) }
    dend_66 { pt3dadd( 38.4019, -139.782, 38.8343, 0.57 ) }
    dend_66 { pt3dadd( 37.7207, -140.643, 39.5382, 0.57 ) }
    dend_66 { pt3dadd( 37.3155, -141.222, 39.9555, 0.57 ) }
    dend_66 { pt3dadd( 36.6965, -142.25, 40.6232, 0.57 ) }
    dend_66 { pt3dadd( 35.9653, -143.789, 41.6206, 0.57 ) }
    dend_66 { pt3dadd( 35.6102, -144.792, 42.2629, 0.57 ) }
    dend_66 { pt3dadd( 35.3884, -145.545, 42.6776, 0.57 ) }
    dend_66 { pt3dadd( 35.0955, -146.853, 43.5822, 0.57 ) }
    dend_66 { pt3dadd( 34.7178, -148.661, 44.915, 0.57 ) }
    dend_66 { pt3dadd( 34.2602, -150.731, 46.6964, 0.57 ) }
    dend_66 { pt3dadd( 34.0726, -151.371, 47.3368, 0.57 ) }
    dend_66 { pt3dadd( 33.5026, -152.721, 49.1557, 0.57 ) }
    dend_66 { pt3dadd( 31.8047, -155.075, 53.8919, 0.57 ) }
    dend_66 { pt3dadd( 31.1652, -155.45, 55.2534, 0.57 ) }
    dend_66 { pt3dadd( 30.0952, -155.575, 56.9305, 0.57 ) }
    dend_66 { pt3dadd( 28.9319, -155.489, 58.3675, 0.57 ) }
    dend_66 { pt3dadd( 27.4568, -155.33, 60.1873, 0.57 ) }
    dend_66 { pt3dadd( 26.184, -155.188, 61.583, 0.57 ) }
    dend_66 { pt3dadd( 24.6495, -155.114, 63.0973, 0.57 ) }
    dend_66 { pt3dadd( 23.3599, -155.19, 64.4989, 0.57 ) }
    dend_66 { pt3dadd( 21.765, -155.513, 66.3078, 0.57 ) }
    dend_66 { pt3dadd( 19.3943, -156.463, 69.1994, 0.57 ) }
    dend_66 { pt3dadd( 18.3347, -157.234, 70.8257, 0.57 ) }
    dend_66 { pt3dadd( 17.3898, -158.242, 72.6915, 0.57 ) }
    dend_66 { pt3dadd( 16.9363, -158.9, 73.9096, 0.57 ) }
    dend_66 { pt3dadd( 16.7221, -159.276, 74.6667, 0.57 ) }
    dend_66 { pt3dadd( 16.4293, -159.803, 75.746, 0.57 ) }
    dend_66 { pt3dadd( 15.3035, -161.535, 79.6431, 0.57 ) }
    dend_66 { pt3dadd( 15.0603, -161.877, 80.4547, 0.57 ) }
    dend_66 { pt3dadd( 14.7029, -162.327, 81.5511, 0.57 ) }
    dend_66 { pt3dadd( 13.5368, -163.681, 85.0098, 0.57 ) }
    dend_66 { pt3dadd( 13.0116, -164.262, 86.3955, 0.57 ) }
    dend_66 { pt3dadd( 11.3663, -165.968, 90.1934, 0.57 ) }
    dend_66 { pt3dadd( 10.9958, -166.344, 90.9569, 0.57 ) }
    dend_66 { pt3dadd( 9.52279, -167.838, 93.8269, 0.57 ) }
    dend_66 { pt3dadd( 9.09847, -168.266, 94.604, 0.57 ) }
    dend_66 { pt3dadd( 8.09884, -169.224, 96.233, 0.57 ) }
    dend_66 { pt3dadd( 7.57271, -169.719, 97.018, 0.57 ) }
    dend_66 { pt3dadd( 5.20624, -171.966, 100.162, 0.57 ) }
    dend_66 { pt3dadd( 4.07799, -173.039, 101.551, 0.57 ) }
    dend_66 { pt3dadd( 2.57168, -174.429, 103.063, 0.57 ) }
    dend_66 { pt3dadd( 0.512572, -176.319, 104.849, 0.57 ) }
    dend_66 { pt3dadd( -1.9631, -178.575, 106.726, 0.57 ) }
    dend_66 { pt3dadd( -2.69072, -179.235, 107.14, 0.57 ) }
    dend_66 { pt3dadd( -4.02078, -180.434, 107.614, 0.57 ) }
    dend_66 { pt3dadd( -6.6725, -182.646, 107.68, 0.57 ) }
    dend_66 { pt3dadd( -8.24997, -183.869, 107.293, 0.57 ) }
    dend_66 { pt3dadd( -10.0735, -185.256, 106.582, 0.57 ) }
    dend_66 { pt3dadd( -12.096, -186.766, 105.638, 0.57 ) }
    dend_66 { pt3dadd( -13.7388, -187.973, 104.79, 0.57 ) }
    dend_66 { pt3dadd( -20.1709, -192.678, 101.023, 0.57 ) }
    dend_66 { pt3dadd( -20.2822, -192.76, 100.95, 2.26 ) }
    dend_66 { pt3dadd( -22.2891, -194.135, 99.2972, 0.68 ) }
    dend_66 { pt3dadd( -23.0967, -194.653, 98.4479, 0.68 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 77/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 40.3596, -137.528, 36.8774, 0.57 ) }
    dend_65 { pt3dadd( 41.6922, -141.241, 43.4934, 0.57 ) }
    dend_65 { pt3dadd( 42.6762, -143.888, 48.0011, 0.57 ) }
    dend_65 { pt3dadd( 42.9203, -144.462, 48.8686, 0.57 ) }
    dend_65 { pt3dadd( 43.634, -146.072, 51.0783, 0.57 ) }
    dend_65 { pt3dadd( 45.0242, -149.18, 55.3605, 0.57 ) }
    dend_65 { pt3dadd( 48.4914, -156.438, 65.2751, 0.57 ) }
    dend_65 { pt3dadd( 49.2656, -157.863, 67.0633, 0.57 ) }
    dend_65 { pt3dadd( 50.9624, -160.782, 70.4306, 0.57 ) }
    dend_65 { pt3dadd( 51.6637, -161.895, 71.6106, 0.57 ) }
    dend_65 { pt3dadd( 54.5827, -166.282, 76.1236, 0.57 ) }
    dend_65 { pt3dadd( 55.6419, -167.862, 77.4001, 0.57 ) }
    dend_65 { pt3dadd( 57.3381, -170.332, 78.6539, 0.57 ) }
    dend_65 { pt3dadd( 59.0365, -172.622, 79.9769, 0.57 ) }
    dend_65 { pt3dadd( 61.3907, -175.792, 81.9485, 0.57 ) }
    // Section: dend_63, id: dend_63, parent: dend_49 (entry count 92/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 72.2964, -72.9021, 2.60114, 0.34 ) }
    dend_63 { pt3dadd( 72.0391, -73.725, 2.0701, 0.34 ) }
    dend_63 { pt3dadd( 71.902, -74.371, 1.62396, 0.34 ) }
    dend_63 { pt3dadd( 71.764, -75.0748, 1.15237, 0.45 ) }
    dend_63 { pt3dadd( 71.5337, -76.2853, 0.375759, 0.45 ) }
    dend_63 { pt3dadd( 71.3221, -77.4144, -0.371936, 0.45 ) }
    dend_63 { pt3dadd( 71.1356, -78.4406, -1.042, 0.45 ) }
    dend_63 { pt3dadd( 70.9407, -79.7535, -2.01544, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_63 { pt3dadd( 70.8861, -80.2936, -2.42262, 0.45 ) }
    dend_63 { pt3dadd( 70.8569, -80.681, -2.71376, 0.45 ) }
    dend_63 { pt3dadd( 70.7927, -81.714, -3.45607, 0.45 ) }
    dend_63 { pt3dadd( 70.754, -82.4245, -3.91907, 0.45 ) }
    dend_63 { pt3dadd( 70.6491, -84.3651, -5.11292, 0.45 ) }
    dend_63 { pt3dadd( 70.6, -85.1701, -5.61104, 0.45 ) }
    dend_63 { pt3dadd( 70.5796, -85.6816, -5.92256, 0.45 ) }
    dend_63 { pt3dadd( 70.534, -86.7365, -6.51345, 0.45 ) }
    dend_63 { pt3dadd( 70.4946, -87.8581, -7.16799, 0.45 ) }
    dend_63 { pt3dadd( 70.4589, -88.5201, -7.61954, 0.45 ) }
    dend_63 { pt3dadd( 70.3645, -89.6498, -8.47537, 0.45 ) }
    dend_63 { pt3dadd( 70.3096, -90.1831, -8.92402, 0.45 ) }
    dend_63 { pt3dadd( 70.2241, -90.8968, -9.62818, 0.45 ) }
    dend_63 { pt3dadd( 69.9858, -92.5356, -11.4216, 0.45 ) }
    dend_63 { pt3dadd( 69.8803, -93.2488, -12.3289, 0.45 ) }
    dend_63 { pt3dadd( 69.8081, -93.7911, -13.0424, 0.45 ) }
    dend_63 { pt3dadd( 69.7346, -94.4566, -13.9076, 0.45 ) }
    dend_63 { pt3dadd( 69.6014, -95.7876, -15.6257, 0.23 ) }
    dend_63 { pt3dadd( 69.5743, -96.1134, -16.0453, 0.23 ) }
    dend_63 { pt3dadd( 69.48, -97.3174, -17.4089, 0.23 ) }
    dend_63 { pt3dadd( 69.4649, -97.7922, -17.924, 0.23 ) }
    dend_63 { pt3dadd( 69.4568, -98.8821, -19.1515, 0.45 ) }
    dend_63 { pt3dadd( 69.4619, -99.2345, -19.564, 0.45 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 23/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 72.2964, -72.9021, 2.60114, 0.45 ) }
    dend_50 { pt3dadd( 74.0924, -75.1689, 2.43402, 0.45 ) }
    dend_50 { pt3dadd( 75.8353, -77.4109, 2.23333, 0.45 ) }
    dend_50 { pt3dadd( 77.219, -79.2587, 2.04569, 0.45 ) }
    dend_50 { pt3dadd( 78.97, -81.705, 1.91219, 0.45 ) }
    dend_50 { pt3dadd( 81.8406, -85.7385, 1.7806, 0.45 ) }
    dend_50 { pt3dadd( 83.7657, -88.4433, 1.69236, 0.45 ) }
    dend_50 { pt3dadd( 84.8588, -90.0561, 1.60318, 0.45 ) }
    dend_50 { pt3dadd( 86.6233, -92.8199, 1.44764, 0.45 ) }
    dend_50 { pt3dadd( 88.4065, -95.7352, 1.27472, 0.45 ) }
    dend_50 { pt3dadd( 89.9903, -98.335, 1.28113, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 34/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -19.1812, -89.458, -22.0242, 0.57 ) }
    dend_43 { pt3dadd( -21.763, -89.8946, -25.3223, 0.57 ) }
    dend_43 { pt3dadd( -22.1319, -89.9569, -25.7935, 0.57 ) }
    dend_43 { pt3dadd( -22.9324, -90.0923, -26.816, 0.57 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 38/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -19.1812, -89.458, -22.0242, 0.68 ) }
    dend_42 { pt3dadd( -19.6781, -90.8257, -22.5367, 0.68 ) }
    dend_42 { pt3dadd( -20.7116, -92.7608, -23.5512, 0.68 ) }
    dend_42 { pt3dadd( -21.2884, -93.7008, -24.0509, 0.68 ) }
    dend_42 { pt3dadd( -21.7916, -94.4208, -24.4119, 0.68 ) }
    dend_42 { pt3dadd( -23.0866, -95.9695, -25.3202, 0.68 ) }
    dend_42 { pt3dadd( -23.7037, -96.6626, -25.7341, 0.68 ) }
    dend_42 { pt3dadd( -25.7399, -98.7686, -27.051, 0.68 ) }
    dend_42 { pt3dadd( -26.4258, -99.5188, -27.4715, 0.68 ) }
    dend_42 { pt3dadd( -27.2755, -100.471, -27.9212, 0.68 ) }
    dend_42 { pt3dadd( -28.9943, -102.442, -28.7358, 0.68 ) }
    dend_42 { pt3dadd( -30.2879, -103.952, -29.211, 0.68 ) }
    dend_42 { pt3dadd( -32.3583, -106.453, -29.8643, 0.68 ) }
    dend_42 { pt3dadd( -34.0864, -108.612, -30.3088, 0.68 ) }
    dend_42 { pt3dadd( -35.9346, -110.956, -30.7254, 0.68 ) }
    dend_42 { pt3dadd( -37.3853, -112.846, -31.0149, 0.68 ) }
    dend_42 { pt3dadd( -39.054, -115.046, -31.2267, 0.68 ) }
    dend_42 { pt3dadd( -40.5838, -116.926, -31.3812, 0.57 ) }
    dend_42 { pt3dadd( -41.9576, -118.463, -31.4519, 0.57 ) }
    dend_42 { pt3dadd( -43.6788, -120.305, -31.5818, 0.57 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 58/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 8.74766, -72.9769, 15.2075, 0.45 ) }
    dend_38 { pt3dadd( 5.25795, -74.6519, 18.6057, 0.45 ) }
    dend_38 { pt3dadd( 3.6367, -75.1972, 20.2539, 0.45 ) }
    dend_38 { pt3dadd( -0.184328, -76.1447, 23.7052, 0.45 ) }
    dend_38 { pt3dadd( -1.2176, -76.3373, 24.6711, 0.45 ) }
    dend_38 { pt3dadd( -2.6702, -76.488, 26.0055, 0.45 ) }
    dend_38 { pt3dadd( -3.53688, -76.5779, 27.3039, 0.45 ) }
    dend_38 { pt3dadd( -4.3346, -76.6257, 29.0944, 0.45 ) }
    dend_38 { pt3dadd( -5.00235, -76.5593, 31.009, 0.45 ) }
    dend_38 { pt3dadd( -5.78117, -76.3113, 32.9485, 0.45 ) }
    dend_38 { pt3dadd( -6.34982, -76.0538, 34.287, 0.45 ) }
    dend_38 { pt3dadd( -9.87063, -74.3623, 42.6045, 0.45 ) }
    dend_38 { pt3dadd( -10.6491, -74.0594, 44.3281, 0.45 ) }
    dend_38 { pt3dadd( -12.2644, -73.5875, 47.5538, 0.45 ) }
    dend_38 { pt3dadd( -14.8512, -72.9798, 52.2452, 0.45 ) }
    dend_38 { pt3dadd( -15.8824, -72.8901, 53.823, 0.45 ) }
    dend_38 { pt3dadd( -18.9372, -73.3477, 57.8295, 0.45 ) }
    dend_38 { pt3dadd( -20.3931, -73.901, 59.1928, 0.45 ) }
    dend_38 { pt3dadd( -21.2199, -74.4395, 59.9622, 0.34 ) }
    dend_38 { pt3dadd( -22.1078, -75.2814, 60.7547, 0.34 ) }
    dend_38 { pt3dadd( -24.5632, -77.9264, 62.5064, 0.34 ) }
    dend_38 { pt3dadd( -26.8395, -80.3472, 63.6781, 0.34 ) }
    dend_38 { pt3dadd( -28.5592, -82.0685, 64.267, 0.34 ) }
    dend_38 { pt3dadd( -30.6199, -83.992, 64.9939, 0.34 ) }
    dend_38 { pt3dadd( -34.1035, -87.0926, 66.2917, 0.34 ) }
    dend_38 { pt3dadd( -38.664, -90.8717, 68.0483, 0.34 ) }
    dend_38 { pt3dadd( -40.272, -92.0061, 68.6347, 0.34 ) }
    dend_38 { pt3dadd( -41.4081, -92.6824, 69.1724, 0.34 ) }
    dend_38 { pt3dadd( -44.5795, -94.397, 71.0495, 0.34 ) }
    dend_38 { pt3dadd( -46.6339, -95.5265, 72.6646, 0.34 ) }
    dend_38 { pt3dadd( -48.1252, -96.3959, 74.266, 0.34 ) }
    dend_38 { pt3dadd( -49.6718, -97.3961, 76.3714, 0.34 ) }
    dend_38 { pt3dadd( -51.6214, -98.7622, 78.9185, 0.34 ) }
    dend_38 { pt3dadd( -54.0153, -100.592, 81.9999, 0.34 ) }
    dend_38 { pt3dadd( -56.6885, -102.778, 85.2377, 0.34 ) }
    dend_38 { pt3dadd( -59.3545, -105.067, 88.3238, 0.34 ) }
    dend_38 { pt3dadd( -61.0444, -106.635, 90.1463, 0.34 ) }
    dend_38 { pt3dadd( -63.5431, -109.218, 92.6723, 0.34 ) }
    dend_38 { pt3dadd( -64.9778, -110.734, 93.9103, 0.34 ) }
    dend_38 { pt3dadd( -65.9911, -111.788, 94.6586, 0.34 ) }
    dend_38 { pt3dadd( -69.1138, -114.868, 96.3896, 0.34 ) }
    dend_38 { pt3dadd( -70.9643, -116.762, 97.3098, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -73.4045, -119.271, 98.5582, 0.34 ) }
    dend_38 { pt3dadd( -74.3357, -120.201, 99.0905, 0.34 ) }
    dend_38 { pt3dadd( -76.6571, -122.345, 100.264, 0.34 ) }
    dend_38 { pt3dadd( -77.9114, -123.461, 100.85, 0.34 ) }
    dend_38 { pt3dadd( -80.3627, -125.575, 101.867, 0.34 ) }
    dend_38 { pt3dadd( -81.8184, -126.794, 102.39, 0.34 ) }
    dend_38 { pt3dadd( -83.451, -128.095, 102.878, 0.34 ) }
    dend_38 { pt3dadd( -86.3937, -130.382, 103.687, 0.34 ) }
    dend_38 { pt3dadd( -88.853, -132.183, 104.308, 0.34 ) }
    dend_38 { pt3dadd( -91.4479, -133.888, 104.896, 0.34 ) }
    dend_38 { pt3dadd( -93.9303, -135.303, 105.435, 0.34 ) }
    dend_38 { pt3dadd( -95.8271, -136.301, 105.934, 0.34 ) }
    dend_38 { pt3dadd( -97.6902, -137.21, 106.448, 0.34 ) }
    dend_38 { pt3dadd( -99.4935, -137.981, 106.985, 0.34 ) }
    dend_38 { pt3dadd( -101.0, -138.478, 107.48, 0.34 ) }
    dend_38 { pt3dadd( -103.801, -139.074, 108.535, 0.34 ) }
    dend_38 { pt3dadd( -105.776, -139.292, 109.421, 0.34 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.74766, -72.9769, 15.2075, 2.72 ) }
    dend_33 { pt3dadd( 13.9435, -77.5961, 19.1507, 2.72 ) }
    dend_33 { pt3dadd( 16.2238, -79.6049, 20.7461, 1.47 ) }
    dend_33 { pt3dadd( 18.0658, -81.401, 21.9537, 1.13 ) }
    dend_33 { pt3dadd( 23.7877, -87.3197, 25.5721, 1.13 ) }
    dend_33 { pt3dadd( 24.7856, -88.5298, 26.2043, 3.39 ) }
    dend_33 { pt3dadd( 26.4684, -91.0102, 27.3177, 1.81 ) }
    dend_33 { pt3dadd( 28.7181, -96.2997, 28.754, 0.68 ) }
    dend_33 { pt3dadd( 29.5566, -99.2654, 29.3674, 0.68 ) }
    dend_33 { pt3dadd( 29.6927, -100.874, 29.5968, 0.68 ) }
    dend_33 { pt3dadd( 29.3337, -105.666, 29.9954, 0.68 ) }
    dend_33 { pt3dadd( 28.9311, -108.925, 30.3491, 0.68 ) }
    dend_33 { pt3dadd( 28.39, -111.771, 30.6904, 0.68 ) }
    dend_33 { pt3dadd( 27.6227, -114.966, 30.9932, 0.68 ) }
    dend_33 { pt3dadd( 26.8135, -118.657, 31.4509, 0.68 ) }
    dend_33 { pt3dadd( 26.3151, -120.952, 31.7161, 0.68 ) }
    dend_33 { pt3dadd( 25.7573, -123.921, 32.0705, 0.68 ) }
    dend_33 { pt3dadd( 25.2706, -126.564, 32.3316, 0.68 ) }
    dend_33 { pt3dadd( 24.3209, -132.274, 32.9102, 0.68 ) }
    dend_33 { pt3dadd( 24.1961, -133.593, 33.0897, 3.51 ) }
    dend_33 { pt3dadd( 24.1086, -136.679, 33.5777, 1.7 ) }
    dend_33 { pt3dadd( 24.1913, -139.048, 34.1464, 0.79 ) }
    dend_33 { pt3dadd( 24.4258, -141.792, 35.0337, 0.79 ) }
    dend_33 { pt3dadd( 25.0947, -146.848, 36.9734, 0.68 ) }
    dend_33 { pt3dadd( 25.8888, -151.586, 38.9551, 0.79 ) }
    dend_33 { pt3dadd( 26.132, -153.01, 39.5253, 0.45 ) }
    dend_33 { pt3dadd( 27.5329, -157.037, 41.6901, 0.45 ) }
    dend_33 { pt3dadd( 28.2521, -158.507, 42.5905, 0.45 ) }
    dend_33 { pt3dadd( 28.9186, -159.584, 43.2975, 0.68 ) }
    dend_33 { pt3dadd( 30.8059, -162.101, 45.0873, 0.68 ) }
    dend_33 { pt3dadd( 31.8505, -163.402, 45.9986, 0.68 ) }
    dend_33 { pt3dadd( 38.7816, -171.732, 51.8195, 2.38 ) }
    dend_33 { pt3dadd( 40.0104, -173.116, 52.8248, 1.47 ) }
    dend_33 { pt3dadd( 40.6749, -173.872, 53.3798, 0.79 ) }
    dend_33 { pt3dadd( 43.1923, -176.774, 55.4617, 0.79 ) }
    dend_33 { pt3dadd( 44.9714, -178.939, 56.9111, 0.79 ) }
    dend_33 { pt3dadd( 46.0889, -180.543, 57.8026, 2.15 ) }
    dend_33 { pt3dadd( 48.5683, -185.586, 59.5694, 0.79 ) }
    dend_33 { pt3dadd( 49.9888, -188.621, 60.4644, 0.68 ) }
    dend_33 { pt3dadd( 50.8627, -190.817, 60.8948, 0.68 ) }
    dend_33 { pt3dadd( 51.5207, -192.846, 61.0658, 0.68 ) }
    dend_33 { pt3dadd( 51.7273, -193.658, 61.0872, 0.68 ) }
    dend_33 { pt3dadd( 52.0693, -196.144, 60.942, 0.68 ) }
    dend_33 { pt3dadd( 52.1182, -198.827, 60.601, 0.68 ) }
    dend_33 { pt3dadd( 51.8483, -203.577, 60.1679, 0.68 ) }
    dend_33 { pt3dadd( 51.719, -204.489, 60.1362, 2.6 ) }
    dend_33 { pt3dadd( 51.4093, -206.042, 60.164, 2.26 ) }
    dend_33 { pt3dadd( 50.0908, -211.138, 60.6015, 0.45 ) }
    dend_33 { pt3dadd( 49.5817, -212.735, 60.8643, 0.45 ) }
    dend_33 { pt3dadd( 48.6919, -215.11, 61.3541, 0.45 ) }
    dend_33 { pt3dadd( 47.3088, -218.527, 62.1654, 0.45 ) }
    dend_33 { pt3dadd( 46.0075, -221.752, 63.0426, 0.45 ) }
    dend_33 { pt3dadd( 44.5984, -225.337, 64.1486, 0.45 ) }
    dend_33 { pt3dadd( 43.1453, -229.13, 65.4551, 0.45 ) }
    dend_33 { pt3dadd( 41.7077, -232.831, 66.6873, 2.38 ) }
    dend_33 { pt3dadd( 41.3653, -233.724, 66.9691, 3.51 ) }
    dend_33 { pt3dadd( 39.7044, -238.065, 68.3509, 0.57 ) }
    dend_33 { pt3dadd( 38.9614, -239.991, 68.9574, 1.24 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 75/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.25049, -63.0806, 18.0762, 0.45 ) }
    dend_31 { pt3dadd( 7.76857, -62.5665, 16.9677, 0.45 ) }
    dend_31 { pt3dadd( 8.14316, -62.2693, 16.3597, 0.45 ) }
    dend_31 { pt3dadd( 8.74061, -61.908, 15.5146, 0.45 ) }
    dend_31 { pt3dadd( 10.4755, -61.1244, 13.426, 0.45 ) }
    dend_31 { pt3dadd( 12.084, -60.4757, 11.6037, 0.45 ) }
    dend_31 { pt3dadd( 13.6421, -59.8492, 9.868, 0.45 ) }
    dend_31 { pt3dadd( 15.1979, -59.1656, 7.77839, 0.45 ) }
    dend_31 { pt3dadd( 16.5625, -58.5446, 5.90901, 0.45 ) }
    dend_31 { pt3dadd( 17.6328, -58.0689, 4.47257, 0.45 ) }
    dend_31 { pt3dadd( 19.6719, -57.2045, 1.82811, 0.45 ) }
    dend_31 { pt3dadd( 21.075, -56.5913, 0.00342369, 0.45 ) }
    dend_31 { pt3dadd( 23.6781, -55.2518, -3.70403, 0.45 ) }
    dend_31 { pt3dadd( 24.4951, -54.7376, -5.26595, 0.45 ) }
    dend_31 { pt3dadd( 24.5739, -54.6727, -5.4449, 0.45 ) }
    dend_31 { pt3dadd( 24.6834, -54.5565, -5.78066, 0.45 ) }
    dend_31 { pt3dadd( 25.1329, -54.1296, -7.18846, 0.45 ) }
    dend_31 { pt3dadd( 26.1455, -53.4972, -10.4212, 0.45 ) }
    dend_31 { pt3dadd( 26.76, -53.2827, -12.0685, 0.45 ) }
    dend_31 { pt3dadd( 27.0889, -53.2049, -12.9277, 0.45 ) }
    dend_31 { pt3dadd( 27.8839, -53.1095, -14.9703, 0.45 ) }
    dend_31 { pt3dadd( 28.4028, -53.1152, -16.2368, 0.45 ) }
    dend_31 { pt3dadd( 29.6905, -53.2012, -19.2425, 0.45 ) }
    dend_31 { pt3dadd( 30.6009, -53.2083, -20.9615, 0.45 ) }
    dend_31 { pt3dadd( 30.9736, -53.2086, -21.6001, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 31.4054, -53.1785, -22.2766, 0.45 ) }
    dend_31 { pt3dadd( 31.9086, -53.0654, -22.946, 0.45 ) }
    dend_31 { pt3dadd( 32.6401, -52.7381, -23.8007, 0.45 ) }
    dend_31 { pt3dadd( 33.9878, -51.8919, -24.8903, 0.45 ) }
    dend_31 { pt3dadd( 34.5871, -51.4925, -25.4359, 0.45 ) }
    dend_31 { pt3dadd( 36.3105, -50.3167, -27.0938, 0.45 ) }
    dend_31 { pt3dadd( 37.1009, -49.7659, -27.9189, 0.45 ) }
    dend_31 { pt3dadd( 37.7877, -49.3173, -28.6534, 0.45 ) }
    dend_31 { pt3dadd( 39.1048, -48.5561, -30.0464, 0.45 ) }
    dend_31 { pt3dadd( 42.2881, -47.0255, -33.2455, 0.45 ) }
    dend_31 { pt3dadd( 42.6748, -46.8558, -33.6363, 0.45 ) }
    dend_31 { pt3dadd( 43.8737, -46.4244, -34.8934, 0.45 ) }
    dend_31 { pt3dadd( 44.699, -46.1799, -35.8019, 0.45 ) }
    dend_31 { pt3dadd( 45.0778, -46.0908, -36.2302, 0.45 ) }
    dend_31 { pt3dadd( 46.4462, -45.8193, -37.7497, 0.45 ) }
    dend_31 { pt3dadd( 47.6866, -45.5865, -38.3597, 0.45 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 16/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -23.0967, -194.653, 98.4479, 0.57 ) }
    dend_68 { pt3dadd( -24.4463, -196.124, 98.9858, 0.57 ) }
    dend_68 { pt3dadd( -28.3651, -199.853, 100.391, 0.57 ) }
    dend_68 { pt3dadd( -31.6983, -202.713, 101.503, 0.45 ) }
    dend_68 { pt3dadd( -34.6633, -205.046, 102.819, 0.45 ) }
    dend_68 { pt3dadd( -36.9521, -206.755, 103.939, 0.45 ) }
    dend_68 { pt3dadd( -38.964, -208.217, 105.041, 0.45 ) }
    dend_68 { pt3dadd( -41.2637, -209.769, 106.335, 0.45 ) }
    dend_68 { pt3dadd( -43.7132, -211.166, 107.81, 0.45 ) }
    dend_68 { pt3dadd( -50.2218, -214.506, 112.08, 0.45 ) }
    dend_68 { pt3dadd( -51.4148, -215.116, 112.954, 0.45 ) }
    dend_68 { pt3dadd( -53.5265, -216.318, 114.698, 0.45 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 28/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -23.0967, -194.653, 98.4479, 0.57 ) }
    dend_67 { pt3dadd( -23.5378, -200.771, 100.356, 0.57 ) }
    dend_67 { pt3dadd( -23.6988, -202.857, 101.039, 0.57 ) }
    dend_67 { pt3dadd( -23.8897, -205.48, 101.862, 0.57 ) }
    dend_67 { pt3dadd( -24.1543, -209.021, 102.93, 0.57 ) }
    dend_67 { pt3dadd( -24.3006, -211.451, 103.729, 0.57 ) }
    dend_67 { pt3dadd( -24.3504, -212.679, 104.127, 0.57 ) }
    dend_67 { pt3dadd( -24.3552, -212.901, 104.215, 2.04 ) }
    dend_67 { pt3dadd( -24.6424, -216.003, 105.045, 0.57 ) }
    dend_67 { pt3dadd( -24.8537, -217.073, 105.245, 0.57 ) }
    dend_67 { pt3dadd( -25.3744, -218.618, 105.413, 1.92 ) }
    dend_67 { pt3dadd( -26.9364, -222.506, 106.26, 0.68 ) }
    dend_67 { pt3dadd( -27.6873, -224.207, 106.737, 0.68 ) }
    dend_67 { pt3dadd( -29.8404, -228.661, 108.028, 0.57 ) }
    dend_67 { pt3dadd( -31.2173, -231.677, 109.361, 0.57 ) }
    dend_67 { pt3dadd( -32.9723, -236.014, 111.729, 0.57 ) }
    dend_67 { pt3dadd( -35.0505, -242.604, 115.666, 0.57 ) }
    dend_67 { pt3dadd( -35.2651, -243.611, 116.33, 0.57 ) }
    dend_67 { pt3dadd( -35.4922, -245.784, 117.732, 0.45 ) }
    dend_67 { pt3dadd( -35.3546, -254.306, 123.568, 0.45 ) }
    dend_67 { pt3dadd( -35.2598, -255.703, 124.5, 0.45 ) }
    dend_67 { pt3dadd( -34.9514, -259.965, 127.188, 0.45 ) }
    dend_67 { pt3dadd( -34.8404, -263.214, 128.86, 0.45 ) }
    dend_67 { pt3dadd( -34.8284, -265.874, 130.42, 0.45 ) }
    dend_67 { pt3dadd( -35.2052, -271.141, 133.644, 0.45 ) }
    dend_67 { pt3dadd( -35.6237, -273.25, 134.944, 0.45 ) }
    dend_67 { pt3dadd( -36.0816, -275.034, 136.257, 0.45 ) }
    dend_67 { pt3dadd( -36.2776, -275.658, 136.801, 0.45 ) }
    dend_67 { pt3dadd( -37.861, -280.298, 141.345, 0.11 ) }
    dend_67 { pt3dadd( -38.7799, -282.859, 144.067, 0.23 ) }
    dend_67 { pt3dadd( -40.1635, -286.671, 147.902, 0.23 ) }
    dend_67 { pt3dadd( -40.6852, -288.302, 149.666, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 60/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 89.9903, -98.335, 1.28113, 0.34 ) }
    dend_52 { pt3dadd( 91.7714, -100.671, 0.99474, 0.34 ) }
    dend_52 { pt3dadd( 93.9154, -103.483, 0.650003, 0.34 ) }
    dend_52 { pt3dadd( 96.02, -106.243, 0.311625, 0.34 ) }
    dend_52 { pt3dadd( 97.5325, -108.227, 0.0684195, 0.34 ) }
    dend_52 { pt3dadd( 98.3487, -109.297, -0.0628109, 0.34 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 66/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 89.9903, -98.335, 1.28113, 0.45 ) }
    dend_51 { pt3dadd( 92.4618, -96.7872, -0.170114, 0.45 ) }
    dend_51 { pt3dadd( 94.2803, -95.6192, -1.36573, 0.45 ) }
    dend_51 { pt3dadd( 97.0357, -93.8882, -3.19775, 0.45 ) }
    dend_51 { pt3dadd( 98.9492, -92.6508, -4.42601, 0.45 ) }
    dend_51 { pt3dadd( 102.781, -90.1584, -6.83149, 0.45 ) }
    dend_51 { pt3dadd( 105.389, -88.5509, -8.39312, 0.45 ) }
    dend_51 { pt3dadd( 107.434, -87.3993, -9.49826, 0.45 ) }
    dend_51 { pt3dadd( 110.227, -85.9175, -11.019, 0.45 ) }
    dend_51 { pt3dadd( 113.431, -84.2244, -12.8699, 0.45 ) }
    dend_51 { pt3dadd( 113.816, -84.011, -13.1225, 1.58 ) }
    dend_51 { pt3dadd( 116.692, -82.3567, -15.0561, 0.34 ) }
    dend_51 { pt3dadd( 118.972, -81.092, -16.7742, 0.34 ) }
    dend_51 { pt3dadd( 122.665, -79.0302, -20.0153, 0.34 ) }
    dend_51 { pt3dadd( 124.671, -77.9268, -22.0548, 0.34 ) }
    dend_51 { pt3dadd( 126.776, -77.1703, -24.2916, 0.34 ) }
    dend_51 { pt3dadd( 128.094, -76.855, -25.8063, 0.34 ) }
    dend_51 { pt3dadd( 129.608, -76.7498, -27.4947, 0.34 ) }
    dend_51 { pt3dadd( 132.024, -77.1198, -29.9966, 0.34 ) }
    dend_51 { pt3dadd( 133.994, -77.7126, -31.6859, 0.34 ) }
    dend_51 { pt3dadd( 139.592, -79.8169, -35.9132, 0.34 ) }
    dend_51 { pt3dadd( 142.577, -81.0737, -38.1652, 0.34 ) }
    dend_51 { pt3dadd( 145.688, -82.4701, -40.5244, 0.34 ) }
    dend_51 { pt3dadd( 150.505, -84.781, -44.0547, 0.34 ) }
    dend_51 { pt3dadd( 153.426, -86.338, -46.1402, 0.34 ) }
    dend_51 { pt3dadd( 156.552, -88.1069, -48.4063, 0.34 ) }
    dend_51 { pt3dadd( 159.697, -89.8641, -50.4788, 0.34 ) }
    dend_51 { pt3dadd( 162.897, -91.5381, -52.3402, 0.34 ) }
    dend_51 { pt3dadd( 164.406, -92.1927, -53.1003, 0.34 ) }
    dend_51 { pt3dadd( 166.294, -92.8969, -53.787, 0.34 ) }
    dend_51 { pt3dadd( 168.524, -93.7019, -54.4336, 0.34 ) }
    dend_51 { pt3dadd( 170.292, -94.2787, -54.8299, 0.34 ) }
    dend_51 { pt3dadd( 172.374, -94.8732, -55.2027, 0.34 ) }
    dend_51 { pt3dadd( 179.631, -96.8046, -56.5233, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 183.049, -97.6147, -57.1661, 0.34 ) }
    dend_51 { pt3dadd( 186.486, -98.3948, -57.8275, 0.34 ) }
    dend_51 { pt3dadd( 189.661, -99.1347, -58.4556, 0.34 ) }
    dend_51 { pt3dadd( 194.89, -100.405, -59.6196, 0.34 ) }
    dend_51 { pt3dadd( 198.986, -101.392, -60.5704, 0.34 ) }
    dend_51 { pt3dadd( 201.541, -101.959, -61.2151, 0.34 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -105.776, -139.292, 109.421, 0.34 ) }
    dend_40 { pt3dadd( -106.6, -139.861, 110.144, 0.34 ) }
    dend_40 { pt3dadd( -108.352, -141.265, 111.324, 0.34 ) }
    dend_40 { pt3dadd( -109.065, -141.885, 111.696, 2.04 ) }
    dend_40 { pt3dadd( -109.774, -142.528, 112.022, 1.13 ) }
    dend_40 { pt3dadd( -110.892, -143.664, 112.531, 0.79 ) }
    dend_40 { pt3dadd( -111.683, -144.488, 112.727, 0.57 ) }
    dend_40 { pt3dadd( -113.129, -145.974, 112.851, 0.57 ) }
    dend_40 { pt3dadd( -116.242, -149.11, 112.798, 0.57 ) }
    dend_40 { pt3dadd( -117.664, -150.468, 112.871, 0.57 ) }
    dend_40 { pt3dadd( -119.931, -152.532, 113.122, 0.57 ) }
    dend_40 { pt3dadd( -124.019, -156.081, 113.791, 0.57 ) }
    dend_40 { pt3dadd( -126.346, -157.923, 114.215, 0.57 ) }
    dend_40 { pt3dadd( -127.458, -158.726, 114.438, 0.57 ) }
    dend_40 { pt3dadd( -132.035, -161.815, 115.498, 0.57 ) }
    dend_40 { pt3dadd( -133.374, -162.687, 115.857, 0.57 ) }
    dend_40 { pt3dadd( -134.592, -163.512, 116.29, 0.57 ) }
    dend_40 { pt3dadd( -136.445, -164.908, 117.118, 0.57 ) }
    dend_40 { pt3dadd( -138.281, -166.458, 118.025, 0.57 ) }
    dend_40 { pt3dadd( -139.476, -167.561, 118.669, 0.57 ) }
    dend_40 { pt3dadd( -140.893, -169.072, 119.467, 0.57 ) }
    dend_40 { pt3dadd( -144.319, -172.993, 121.633, 0.57 ) }
    dend_40 { pt3dadd( -146.083, -175.068, 122.825, 0.57 ) }
    dend_40 { pt3dadd( -148.397, -177.861, 124.451, 0.57 ) }
    dend_40 { pt3dadd( -150.199, -180.043, 125.719, 0.57 ) }
    dend_40 { pt3dadd( -152.071, -182.226, 126.982, 0.57 ) }
    dend_40 { pt3dadd( -153.338, -183.723, 127.846, 0.57 ) }
    dend_40 { pt3dadd( -154.603, -185.201, 128.631, 0.57 ) }
    dend_40 { pt3dadd( -156.173, -187.036, 129.618, 0.57 ) }
    dend_40 { pt3dadd( -157.088, -188.072, 130.112, 0.57 ) }
    dend_40 { pt3dadd( -158.137, -189.208, 130.661, 0.57 ) }
    dend_40 { pt3dadd( -160.25, -191.434, 131.796, 0.57 ) }
    dend_40 { pt3dadd( -162.262, -193.586, 132.744, 0.57 ) }
    dend_40 { pt3dadd( -163.71, -195.138, 133.321, 0.57 ) }
    dend_40 { pt3dadd( -165.546, -197.079, 133.921, 0.57 ) }
    dend_40 { pt3dadd( -167.069, -198.704, 134.311, 0.57 ) }
    dend_40 { pt3dadd( -168.114, -199.818, 134.504, 0.57 ) }
    dend_40 { pt3dadd( -170.183, -201.91, 134.487, 0.57 ) }
    dend_40 { pt3dadd( -171.777, -203.488, 134.302, 0.57 ) }
    dend_40 { pt3dadd( -173.676, -205.252, 133.735, 0.57 ) }
    dend_40 { pt3dadd( -175.369, -206.752, 132.904, 0.57 ) }
    dend_40 { pt3dadd( -177.221, -208.3, 131.775, 0.57 ) }
    dend_40 { pt3dadd( -180.251, -210.604, 129.62, 0.57 ) }
    dend_40 { pt3dadd( -181.41, -211.426, 128.809, 0.57 ) }
    dend_40 { pt3dadd( -185.49, -214.125, 126.025, 0.57 ) }
    dend_40 { pt3dadd( -188.462, -215.997, 124.012, 0.57 ) }
    dend_40 { pt3dadd( -189.439, -216.632, 123.386, 0.57 ) }
    dend_40 { pt3dadd( -192.063, -218.534, 121.953, 0.57 ) }
    dend_40 { pt3dadd( -194.766, -221.101, 121.276, 0.57 ) }
    dend_40 { pt3dadd( -196.309, -222.99, 121.333, 0.57 ) }
    dend_40 { pt3dadd( -196.8, -223.748, 121.553, 0.57 ) }
    dend_40 { pt3dadd( -197.854, -225.536, 122.227, 0.57 ) }
    dend_40 { pt3dadd( -198.461, -226.58, 122.611, 0.57 ) }
    dend_40 { pt3dadd( -200.329, -230.083, 123.667, 0.57 ) }
    dend_40 { pt3dadd( -201.588, -232.476, 123.958, 0.57 ) }
    dend_40 { pt3dadd( -202.233, -233.67, 123.88, 0.45 ) }
    dend_40 { pt3dadd( -202.831, -234.79, 123.664, 0.45 ) }
    dend_40 { pt3dadd( -203.732, -236.615, 122.957, 0.45 ) }
    dend_40 { pt3dadd( -204.748, -239.069, 121.428, 0.45 ) }
    dend_40 { pt3dadd( -205.402, -241.008, 119.81, 0.45 ) }
    dend_40 { pt3dadd( -206.262, -244.036, 117.037, 0.45 ) }
    dend_40 { pt3dadd( -206.663, -245.625, 115.555, 0.45 ) }
    dend_40 { pt3dadd( -207.138, -247.994, 113.516, 0.45 ) }
    dend_40 { pt3dadd( -207.557, -250.661, 111.483, 0.45 ) }
    dend_40 { pt3dadd( -207.91, -252.679, 110.249, 0.45 ) }
    dend_40 { pt3dadd( -208.054, -253.49, 109.888, 0.45 ) }
    dend_40 { pt3dadd( -208.355, -254.937, 109.501, 0.45 ) }
    dend_40 { pt3dadd( -209.139, -257.883, 108.999, 0.45 ) }
    dend_40 { pt3dadd( -209.777, -259.901, 108.911, 0.45 ) }
    dend_40 { pt3dadd( -210.778, -262.607, 109.036, 0.45 ) }
    dend_40 { pt3dadd( -211.775, -265.025, 109.457, 0.45 ) }
    dend_40 { pt3dadd( -212.83, -267.351, 110.076, 0.45 ) }
    dend_40 { pt3dadd( -213.565, -268.785, 110.658, 0.45 ) }
    dend_40 { pt3dadd( -214.085, -269.718, 111.24, 0.45 ) }
    dend_40 { pt3dadd( -214.605, -270.685, 112.09, 0.45 ) }
    dend_40 { pt3dadd( -216.186, -274.088, 115.312, 0.45 ) }
    dend_40 { pt3dadd( -216.494, -274.794, 115.978, 0.45 ) }
    dend_40 { pt3dadd( -216.91, -276.07, 117.378, 0.45 ) }
    dend_40 { pt3dadd( -217.512, -278.539, 120.071, 0.45 ) }
    dend_40 { pt3dadd( -217.893, -280.845, 122.474, 0.45 ) }
    dend_40 { pt3dadd( -218.19, -283.898, 125.341, 0.45 ) }
    dend_40 { pt3dadd( -218.299, -285.56, 126.614, 0.45 ) }
    dend_40 { pt3dadd( -219.078, -293.785, 132.114, 0.45 ) }
    dend_40 { pt3dadd( -219.335, -295.973, 133.325, 0.45 ) }
    dend_40 { pt3dadd( -219.795, -298.867, 134.273, 0.45 ) }
    dend_40 { pt3dadd( -220.58, -302.965, 134.912, 0.45 ) }
    dend_40 { pt3dadd( -221.841, -309.211, 135.168, 0.45 ) }
    dend_40 { pt3dadd( -222.896, -314.363, 134.847, 0.45 ) }
    dend_40 { pt3dadd( -223.897, -318.965, 133.999, 0.45 ) }
    dend_40 { pt3dadd( -226.072, -329.483, 131.664, 0.45 ) }
    dend_40 { pt3dadd( -226.381, -331.041, 131.24, 0.45 ) }
    dend_40 { pt3dadd( -227.013, -334.892, 130.044, 0.45 ) }
    dend_40 { pt3dadd( -227.301, -337.377, 129.0, 0.45 ) }
    dend_40 { pt3dadd( -227.528, -340.843, 127.41, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_40 { pt3dadd( -227.641, -343.496, 126.199, 0.45 ) }
    dend_40 { pt3dadd( -227.717, -344.925, 125.733, 0.45 ) }
    dend_40 { pt3dadd( -227.92, -346.944, 125.098, 0.45 ) }
    dend_40 { pt3dadd( -229.034, -354.445, 123.198, 0.45 ) }
    dend_40 { pt3dadd( -229.699, -358.447, 122.85, 0.45 ) }
    dend_40 { pt3dadd( -229.979, -360.041, 122.986, 0.45 ) }
    dend_40 { pt3dadd( -231.069, -365.712, 124.033, 0.45 ) }
    dend_40 { pt3dadd( -231.624, -368.455, 124.774, 0.45 ) }
    dend_40 { pt3dadd( -232.666, -372.719, 126.191, 0.45 ) }
    dend_40 { pt3dadd( -233.933, -377.594, 128.477, 0.45 ) }
    dend_40 { pt3dadd( -234.519, -379.757, 129.331, 0.45 ) }
    dend_40 { pt3dadd( -235.159, -382.79, 130.154, 0.45 ) }
    dend_40 { pt3dadd( -235.242, -384.127, 130.259, 0.45 ) }
    dend_40 { pt3dadd( -234.913, -388.775, 129.824, 0.45 ) }
    dend_40 { pt3dadd( -234.107, -394.151, 128.465, 0.45 ) }
    dend_40 { pt3dadd( -232.212, -402.381, 125.261, 0.45 ) }
    dend_40 { pt3dadd( -230.322, -407.762, 122.821, 0.45 ) }
    dend_40 { pt3dadd( -228.782, -410.82, 121.288, 0.45 ) }
    dend_40 { pt3dadd( -228.43, -411.369, 120.973, 0.45 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 19/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -105.776, -139.292, 109.421, 0.34 ) }
    dend_39 { pt3dadd( -102.97, -138.422, 110.461, 0.34 ) }
    dend_39 { pt3dadd( -100.96, -137.799, 111.207, 0.34 ) }
    dend_39 { pt3dadd( -93.1685, -135.382, 114.097, 0.34 ) }
    dend_39 { pt3dadd( -91.0196, -134.716, 114.894, 0.34 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 24/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 38.9614, -239.991, 68.9574, 0.57 ) }
    dend_37 { pt3dadd( 37.9425, -241.487, 71.214, 0.57 ) }
    dend_37 { pt3dadd( 35.7618, -244.297, 74.2298, 0.57 ) }
    dend_37 { pt3dadd( 34.4584, -246.03, 75.6806, 0.57 ) }
    dend_37 { pt3dadd( 32.3817, -248.602, 77.1497, 0.57 ) }
    dend_37 { pt3dadd( 30.3471, -251.215, 78.3708, 0.57 ) }
    dend_37 { pt3dadd( 26.6491, -256.01, 80.4514, 0.57 ) }
    dend_37 { pt3dadd( 24.5205, -258.785, 81.438, 0.57 ) }
    dend_37 { pt3dadd( 22.0327, -262.011, 82.4252, 0.57 ) }
    dend_37 { pt3dadd( 17.5692, -267.859, 84.2336, 0.57 ) }
    dend_37 { pt3dadd( 12.5711, -274.285, 86.3008, 0.57 ) }
    dend_37 { pt3dadd( 9.33646, -278.55, 87.8726, 0.57 ) }
    dend_37 { pt3dadd( 8.26966, -280.004, 88.5094, 2.15 ) }
    dend_37 { pt3dadd( 7.34698, -281.263, 89.1521, 1.36 ) }
    dend_37 { pt3dadd( 5.60482, -283.777, 90.8158, 0.68 ) }
    dend_37 { pt3dadd( 4.83133, -285.069, 91.9752, 0.68 ) }
    dend_37 { pt3dadd( 4.08223, -286.472, 93.5368, 0.57 ) }
    dend_37 { pt3dadd( 3.74815, -287.239, 94.5266, 0.57 ) }
    dend_37 { pt3dadd( 2.96896, -289.25, 97.239, 0.57 ) }
    dend_37 { pt3dadd( 2.14193, -291.433, 100.306, 0.57 ) }
    dend_37 { pt3dadd( 1.59195, -292.895, 102.328, 0.57 ) }
    dend_37 { pt3dadd( 0.794873, -294.827, 104.659, 0.57 ) }
    dend_37 { pt3dadd( -0.21644, -296.759, 106.614, 0.57 ) }
    dend_37 { pt3dadd( -0.679352, -297.556, 107.296, 0.57 ) }
    dend_37 { pt3dadd( -1.47309, -298.813, 108.17, 0.57 ) }
    dend_37 { pt3dadd( -2.63963, -300.559, 109.234, 0.57 ) }
    dend_37 { pt3dadd( -6.20294, -305.701, 112.244, 0.57 ) }
    dend_37 { pt3dadd( -8.58857, -308.961, 113.965, 0.57 ) }
    dend_37 { pt3dadd( -10.6519, -311.726, 115.354, 0.57 ) }
    dend_37 { pt3dadd( -13.2705, -315.079, 117.087, 0.57 ) }
    dend_37 { pt3dadd( -16.5915, -319.299, 119.45, 0.57 ) }
    dend_37 { pt3dadd( -20.8434, -324.424, 122.694, 0.57 ) }
    dend_37 { pt3dadd( -22.6283, -326.404, 124.02, 1.7 ) }
    dend_37 { pt3dadd( -24.2487, -328.127, 125.222, 1.7 ) }
    dend_37 { pt3dadd( -25.9322, -329.743, 126.298, 0.68 ) }
    dend_37 { pt3dadd( -29.1224, -332.535, 128.164, 0.68 ) }
    dend_37 { pt3dadd( -31.1574, -334.294, 129.257, 0.68 ) }
    dend_37 { pt3dadd( -34.3473, -337.168, 130.962, 0.68 ) }
    dend_37 { pt3dadd( -35.2296, -338.011, 131.408, 1.7 ) }
    dend_37 { pt3dadd( -36.6646, -339.524, 132.029, 1.7 ) }
    dend_37 { pt3dadd( -37.6309, -340.656, 132.397, 1.7 ) }
    dend_37 { pt3dadd( -38.7569, -342.14, 132.782, 0.68 ) }
    dend_37 { pt3dadd( -41.3024, -346.003, 133.712, 0.68 ) }
    dend_37 { pt3dadd( -43.6378, -349.954, 134.707, 0.68 ) }
    dend_37 { pt3dadd( -45.3751, -353.274, 135.609, 0.68 ) }
    dend_37 { pt3dadd( -46.1304, -354.912, 136.069, 0.68 ) }
    dend_37 { pt3dadd( -47.7265, -358.849, 137.22, 0.68 ) }
    dend_37 { pt3dadd( -49.0555, -362.581, 138.395, 0.68 ) }
    dend_37 { pt3dadd( -49.5941, -364.479, 139.057, 0.68 ) }
    dend_37 { pt3dadd( -50.6153, -369.067, 140.887, 0.68 ) }
    dend_37 { pt3dadd( -50.8705, -370.415, 141.442, 0.68 ) }
    dend_37 { pt3dadd( -51.1483, -372.055, 142.127, 1.02 ) }
    dend_37 { pt3dadd( -51.424, -373.754, 142.813, 0.45 ) }
    dend_37 { pt3dadd( -51.8098, -376.42, 143.719, 0.45 ) }
    dend_37 { pt3dadd( -51.9446, -377.238, 143.926, 0.45 ) }
    dend_37 { pt3dadd( -52.4058, -379.696, 144.448, 0.45 ) }
    dend_37 { pt3dadd( -52.9435, -382.598, 145.08, 0.45 ) }
    dend_37 { pt3dadd( -53.53, -385.913, 145.785, 0.45 ) }
    dend_37 { pt3dadd( -54.1845, -389.739, 146.571, 0.45 ) }
    dend_37 { pt3dadd( -54.7233, -393.179, 147.291, 0.45 ) }
    dend_37 { pt3dadd( -55.5752, -398.54, 148.427, 0.45 ) }
    dend_37 { pt3dadd( -55.808, -400.176, 148.756, 0.45 ) }
    dend_37 { pt3dadd( -56.0552, -402.203, 149.134, 1.47 ) }
    dend_37 { pt3dadd( -56.1364, -402.902, 149.263, 1.47 ) }
    dend_37 { pt3dadd( -56.6218, -406.284, 149.792, 0.68 ) }
    dend_37 { pt3dadd( -57.2496, -410.336, 150.352, 0.57 ) }
    dend_37 { pt3dadd( -57.7511, -413.988, 150.873, 0.57 ) }
    dend_37 { pt3dadd( -58.1366, -417.413, 151.517, 0.57 ) }
    dend_37 { pt3dadd( -58.2333, -418.387, 151.735, 0.57 ) }
    dend_37 { pt3dadd( -58.4014, -421.391, 152.598, 0.57 ) }
    dend_37 { pt3dadd( -58.2991, -424.712, 153.945, 0.57 ) }
    dend_37 { pt3dadd( -57.9314, -427.587, 155.301, 1.7 ) }
    dend_37 { pt3dadd( -57.1324, -432.169, 157.534, 0.68 ) }
    dend_37 { pt3dadd( -56.6371, -434.458, 158.635, 0.68 ) }
    dend_37 { pt3dadd( -55.6536, -438.707, 160.584, 0.68 ) }
    dend_37 { pt3dadd( -54.315, -444.942, 163.257, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_37 { pt3dadd( -53.6371, -449.276, 164.912, 0.68 ) }
    dend_37 { pt3dadd( -53.5024, -450.921, 165.465, 2.15 ) }
    dend_37 { pt3dadd( -53.4852, -451.933, 165.765, 2.15 ) }
    dend_37 { pt3dadd( -53.7086, -455.324, 166.566, 0.68 ) }
    dend_37 { pt3dadd( -54.2694, -459.23, 167.409, 0.68 ) }
    dend_37 { pt3dadd( -54.6906, -461.73, 167.997, 0.68 ) }
    dend_37 { pt3dadd( -55.2416, -465.131, 169.01, 0.68 ) }
    dend_37 { pt3dadd( -55.8287, -468.765, 170.075, 0.68 ) }
    dend_37 { pt3dadd( -56.3538, -472.329, 171.055, 0.68 ) }
    dend_37 { pt3dadd( -57.0127, -477.894, 172.42, 0.68 ) }
    dend_37 { pt3dadd( -57.3178, -481.547, 173.18, 0.68 ) }
    dend_37 { pt3dadd( -57.5527, -484.338, 173.641, 0.68 ) }
    dend_37 { pt3dadd( -57.9466, -488.559, 174.131, 0.68 ) }
    dend_37 { pt3dadd( -58.1183, -490.244, 174.245, 0.68 ) }
    dend_37 { pt3dadd( -58.593, -494.538, 174.319, 0.68 ) }
    dend_37 { pt3dadd( -58.9527, -497.295, 174.197, 0.68 ) }
    dend_37 { pt3dadd( -59.4246, -500.751, 174.033, 0.68 ) }
    dend_37 { pt3dadd( -59.8606, -504.068, 174.018, 0.68 ) }
    dend_37 { pt3dadd( -60.2041, -506.742, 174.19, 0.68 ) }
    dend_37 { pt3dadd( -60.471, -508.454, 174.341, 0.68 ) }
    dend_37 { pt3dadd( -60.7522, -510.331, 174.635, 0.68 ) }
    dend_37 { pt3dadd( -60.8381, -511.013, 174.782, 0.68 ) }
    dend_37 { pt3dadd( -61.1746, -514.186, 175.605, 0.68 ) }
    dend_37 { pt3dadd( -61.4504, -517.842, 176.649, 0.68 ) }
    dend_37 { pt3dadd( -61.5632, -520.492, 177.399, 0.68 ) }
    dend_37 { pt3dadd( -61.6536, -524.197, 178.395, 0.68 ) }
    dend_37 { pt3dadd( -61.6168, -527.739, 179.355, 0.68 ) }
    dend_37 { pt3dadd( -61.5497, -528.685, 179.645, 0.68 ) }
    dend_37 { pt3dadd( -61.2877, -531.045, 180.395, 0.57 ) }
    dend_37 { pt3dadd( -61.0371, -533.168, 181.064, 0.57 ) }
    dend_37 { pt3dadd( -60.5578, -537.121, 182.302, 0.57 ) }
    dend_37 { pt3dadd( -59.9729, -540.823, 183.519, 0.57 ) }
    dend_37 { pt3dadd( -59.2359, -544.874, 185.033, 0.57 ) }
    dend_37 { pt3dadd( -58.5041, -548.933, 186.58, 0.57 ) }
    dend_37 { pt3dadd( -57.9881, -552.661, 187.91, 0.57 ) }
    dend_37 { pt3dadd( -57.7568, -555.277, 188.693, 1.47 ) }
    dend_37 { pt3dadd( -57.5043, -560.597, 190.037, 0.45 ) }
    dend_37 { pt3dadd( -57.5435, -563.189, 190.545, 0.45 ) }
    dend_37 { pt3dadd( -57.8093, -568.662, 191.282, 0.45 ) }
    dend_37 { pt3dadd( -57.9048, -573.154, 191.802, 0.45 ) }
    dend_37 { pt3dadd( -57.9336, -578.353, 192.24, 0.45 ) }
    dend_37 { pt3dadd( -57.5653, -582.551, 192.317, 0.45 ) }
    dend_37 { pt3dadd( -59.7585, -581.388, 191.456, 0.45 ) }
    dend_37 { pt3dadd( -63.4234, -577.676, 190.209, 0.45 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 44/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 38.9614, -239.991, 68.9574, 0.57 ) }
    dend_34 { pt3dadd( 38.5897, -241.438, 69.5617, 0.57 ) }
    dend_34 { pt3dadd( 38.3406, -242.4, 69.9632, 0.57 ) }
    dend_34 { pt3dadd( 38.0004, -243.754, 70.5074, 0.57 ) }
    dend_34 { pt3dadd( 37.4864, -245.8, 71.3297, 0.57 ) }
    dend_34 { pt3dadd( 36.8721, -248.244, 72.3121, 0.57 ) }
    dend_34 { pt3dadd( 36.4914, -249.76, 72.9212, 2.15 ) }
    dend_34 { pt3dadd( 36.1357, -251.09, 73.4643, 2.72 ) }
    dend_34 { pt3dadd( 35.8841, -252.133, 73.8816, 2.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 53/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 98.3487, -109.297, -0.0628109, 0.45 ) }
    dend_54 { pt3dadd( 102.322, -109.29, -0.568586, 0.45 ) }
    dend_54 { pt3dadd( 103.274, -109.288, -0.613282, 0.45 ) }
    dend_54 { pt3dadd( 105.023, -109.189, -0.607076, 0.45 ) }
    dend_54 { pt3dadd( 107.332, -109.019, -0.554557, 0.45 ) }
    dend_54 { pt3dadd( 109.444, -108.872, -0.49611, 0.45 ) }
    dend_54 { pt3dadd( 112.202, -108.625, -0.417452, 0.45 ) }
    dend_54 { pt3dadd( 113.164, -108.51, -0.331324, 0.45 ) }
    dend_54 { pt3dadd( 115.871, -108.032, -0.154887, 0.45 ) }
    dend_54 { pt3dadd( 117.962, -107.52, -0.0717287, 0.45 ) }
    dend_54 { pt3dadd( 119.592, -106.98, -0.0675106, 0.45 ) }
    dend_54 { pt3dadd( 121.833, -105.961, -0.268461, 0.45 ) }
    dend_54 { pt3dadd( 123.277, -105.135, -0.526184, 0.45 ) }
    dend_54 { pt3dadd( 124.833, -104.134, -0.872486, 0.45 ) }
    dend_54 { pt3dadd( 126.406, -103.038, -1.38282, 0.45 ) }
    dend_54 { pt3dadd( 128.129, -101.717, -2.1325, 0.45 ) }
    dend_54 { pt3dadd( 130.531, -99.7467, -3.30202, 0.45 ) }
    dend_54 { pt3dadd( 131.501, -98.9342, -3.8404, 0.45 ) }
    dend_54 { pt3dadd( 132.527, -98.0778, -4.46479, 0.45 ) }
    dend_54 { pt3dadd( 135.035, -96.0882, -6.0917, 0.45 ) }
    dend_54 { pt3dadd( 136.104, -95.307, -6.90617, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 98.3487, -109.297, -0.0628109, 0.34 ) }
    dend_53 { pt3dadd( 98.1902, -113.901, -0.829257, 0.34 ) }
    dend_53 { pt3dadd( 98.0024, -115.687, -1.15334, 0.34 ) }
    dend_53 { pt3dadd( 97.5748, -118.684, -1.69931, 0.34 ) }
    dend_53 { pt3dadd( 96.7152, -124.159, -2.70418, 0.34 ) }
    dend_53 { pt3dadd( 95.6896, -129.146, -3.77642, 0.34 ) }
    dend_53 { pt3dadd( 94.4247, -134.309, -4.87988, 0.34 ) }
    dend_53 { pt3dadd( 92.5492, -139.55, -5.87097, 0.34 ) }
    dend_53 { pt3dadd( 92.2389, -140.22, -5.98216, 0.34 ) }
    dend_53 { pt3dadd( 92.0145, -140.591, -6.04441, 1.58 ) }
    dend_53 { pt3dadd( 89.0346, -144.68, -6.49593, 0.45 ) }
    dend_53 { pt3dadd( 87.612, -146.504, -6.76291, 0.45 ) }
    dend_53 { pt3dadd( 83.9679, -151.133, -7.6569, 0.45 ) }
    dend_53 { pt3dadd( 82.7645, -152.759, -8.00335, 0.45 ) }
    dend_53 { pt3dadd( 79.8019, -157.159, -9.01684, 0.45 ) }
    dend_53 { pt3dadd( 78.8335, -158.757, -9.36043, 0.45 ) }
    dend_53 { pt3dadd( 76.4687, -163.333, -10.2551, 0.45 ) }
    dend_53 { pt3dadd( 75.4539, -165.563, -10.7893, 0.45 ) }
    dend_53 { pt3dadd( 73.8117, -169.97, -11.8039, 0.45 ) }
    dend_53 { pt3dadd( 72.8579, -172.776, -12.3903, 0.45 ) }
    dend_53 { pt3dadd( 71.7214, -176.531, -13.008, 0.45 ) }
    dend_53 { pt3dadd( 70.0563, -182.247, -14.0235, 0.45 ) }
    dend_53 { pt3dadd( 68.9108, -186.315, -14.6524, 0.45 ) }
    dend_53 { pt3dadd( 67.495, -191.561, -15.4579, 0.45 ) }
    dend_53 { pt3dadd( 66.3279, -195.824, -15.9935, 0.45 ) }
    dend_53 { pt3dadd( 65.3089, -199.523, -16.4857, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_53 { pt3dadd( 64.0954, -203.772, -17.0662, 0.45 ) }
    dend_53 { pt3dadd( 62.9325, -207.629, -17.4863, 0.45 ) }
    dend_53 { pt3dadd( 62.1266, -209.967, -17.6315, 0.45 ) }
    dend_53 { pt3dadd( 60.6109, -213.694, -18.0655, 0.45 ) }
    dend_53 { pt3dadd( 60.0417, -215.039, -18.2311, 0.45 ) }
    dend_53 { pt3dadd( 58.3525, -218.807, -18.7162, 0.45 ) }
    dend_53 { pt3dadd( 57.3407, -221.027, -18.955, 0.45 ) }
    dend_53 { pt3dadd( 55.8822, -224.188, -19.3553, 0.45 ) }
    dend_53 { pt3dadd( 53.0778, -230.134, -20.6072, 0.45 ) }
    dend_53 { pt3dadd( 51.461, -233.69, -21.5557, 0.45 ) }
    dend_53 { pt3dadd( 50.5789, -235.749, -22.1416, 0.45 ) }
    dend_53 { pt3dadd( 49.9385, -237.523, -22.6404, 0.45 ) }
    dend_53 { pt3dadd( 49.4577, -238.989, -23.1022, 0.45 ) }
    dend_53 { pt3dadd( 47.5701, -245.217, -24.9925, 0.45 ) }
    dend_53 { pt3dadd( 46.7227, -248.113, -25.765, 0.45 ) }
    dend_53 { pt3dadd( 46.2245, -249.838, -26.2759, 0.45 ) }
    dend_53 { pt3dadd( 45.3832, -252.885, -27.14, 0.45 ) }
    dend_53 { pt3dadd( 43.9095, -257.799, -29.0427, 0.45 ) }
    dend_53 { pt3dadd( 43.2113, -260.111, -29.9951, 0.45 ) }
    dend_53 { pt3dadd( 42.7326, -261.797, -30.6274, 0.45 ) }
    dend_53 { pt3dadd( 42.1851, -263.712, -31.332, 0.45 ) }
    dend_53 { pt3dadd( 41.0618, -267.585, -32.7844, 0.45 ) }
    dend_53 { pt3dadd( 38.8437, -276.758, -35.2344, 0.45 ) }
    dend_53 { pt3dadd( 38.2245, -280.503, -35.5198, 0.45 ) }
    dend_53 { pt3dadd( 37.7737, -284.552, -35.2013, 0.45 ) }
    dend_53 { pt3dadd( 37.4272, -288.975, -33.8733, 0.45 ) }
    dend_53 { pt3dadd( 37.2996, -290.843, -32.9125, 0.45 ) }
    dend_53 { pt3dadd( 36.5468, -301.635, -25.0088, 0.45 ) }
    dend_53 { pt3dadd( 36.2975, -304.686, -22.2486, 0.45 ) }
    dend_53 { pt3dadd( 36.2281, -305.214, -21.7341, 0.45 ) }
    dend_53 { pt3dadd( 35.6008, -308.308, -18.7431, 0.45 ) }
    dend_53 { pt3dadd( 34.9732, -310.75, -16.6325, 0.45 ) }
    dend_53 { pt3dadd( 34.0313, -313.598, -14.8305, 0.45 ) }
    dend_53 { pt3dadd( 33.7757, -314.208, -14.6418, 0.45 ) }
    dend_53 { pt3dadd( 32.906, -316.259, -14.3205, 0.45 ) }
    dend_53 { pt3dadd( 31.5477, -319.62, -14.1223, 0.45 ) }
    dend_53 { pt3dadd( 30.5497, -322.251, -14.1751, 0.45 ) }
    dend_53 { pt3dadd( 29.1149, -326.256, -14.3959, 0.45 ) }
    dend_53 { pt3dadd( 27.6788, -330.542, -14.7123, 0.45 ) }
    dend_53 { pt3dadd( 25.5631, -337.993, -15.166, 0.45 ) }
    dend_53 { pt3dadd( 25.0052, -340.233, -15.2794, 0.45 ) }
    dend_53 { pt3dadd( 24.4822, -342.484, -15.3823, 0.45 ) }
    dend_53 { pt3dadd( 23.9141, -345.1, -15.454, 0.45 ) }
    dend_53 { pt3dadd( 23.4151, -348.003, -15.3802, 0.45 ) }
    dend_53 { pt3dadd( 22.7608, -353.995, -15.0454, 0.45 ) }
    dend_53 { pt3dadd( 22.7569, -355.483, -14.7788, 0.45 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 46/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 35.8841, -252.133, 73.8816, 0.45 ) }
    dend_36 { pt3dadd( 34.8228, -254.21, 74.9281, 0.45 ) }
    dend_36 { pt3dadd( 34.0065, -255.875, 75.7566, 0.45 ) }
    dend_36 { pt3dadd( 33.265, -257.416, 76.5208, 0.45 ) }
    dend_36 { pt3dadd( 32.1865, -259.823, 77.6667, 0.45 ) }
    dend_36 { pt3dadd( 31.5593, -261.223, 78.3591, 0.45 ) }
    dend_36 { pt3dadd( 30.6593, -263.346, 79.4687, 0.45 ) }
    dend_36 { pt3dadd( 29.8241, -265.626, 80.6585, 0.45 ) }
    dend_36 { pt3dadd( 29.6121, -266.223, 80.9803, 1.47 ) }
    dend_36 { pt3dadd( 28.8743, -268.351, 82.2314, 0.45 ) }
    dend_36 { pt3dadd( 28.4418, -269.707, 83.0594, 0.45 ) }
    dend_36 { pt3dadd( 28.1045, -271.09, 83.9551, 0.45 ) }
    dend_36 { pt3dadd( 27.9306, -272.126, 84.622, 0.45 ) }
    dend_36 { pt3dadd( 27.7112, -274.413, 86.0643, 0.45 ) }
    dend_36 { pt3dadd( 27.6008, -276.055, 87.0793, 0.79 ) }
    dend_36 { pt3dadd( 27.5324, -277.627, 88.0127, 0.79 ) }
    dend_36 { pt3dadd( 27.5157, -280.638, 89.7237, 0.45 ) }
    dend_36 { pt3dadd( 27.5123, -282.929, 90.9992, 0.45 ) }
    dend_36 { pt3dadd( 27.5928, -285.826, 92.5612, 0.45 ) }
    dend_36 { pt3dadd( 27.6893, -286.803, 93.099, 0.45 ) }
    dend_36 { pt3dadd( 27.8088, -287.744, 93.615, 1.92 ) }
    dend_36 { pt3dadd( 28.1923, -289.486, 94.6497, 1.47 ) }
    dend_36 { pt3dadd( 28.6042, -290.984, 95.5428, 0.57 ) }
    dend_36 { pt3dadd( 29.0751, -292.416, 96.4, 0.57 ) }
    dend_36 { pt3dadd( 30.0681, -294.843, 97.9262, 0.57 ) }
    dend_36 { pt3dadd( 30.8729, -296.741, 99.0732, 0.57 ) }
    dend_36 { pt3dadd( 32.5445, -300.904, 101.509, 0.57 ) }
    dend_36 { pt3dadd( 32.8643, -301.816, 101.993, 0.57 ) }
    dend_36 { pt3dadd( 33.3815, -303.695, 102.898, 0.57 ) }
    dend_36 { pt3dadd( 33.8911, -307.032, 104.273, 0.57 ) }
    dend_36 { pt3dadd( 33.9435, -308.929, 104.888, 0.57 ) }
    dend_36 { pt3dadd( 33.7365, -310.769, 105.276, 0.57 ) }
    dend_36 { pt3dadd( 33.313, -313.133, 105.676, 0.57 ) }
    dend_36 { pt3dadd( 32.7969, -316.444, 106.361, 0.57 ) }
    dend_36 { pt3dadd( 32.3007, -319.873, 107.178, 0.57 ) }
    dend_36 { pt3dadd( 31.847, -322.956, 107.913, 0.57 ) }
    dend_36 { pt3dadd( 31.1547, -328.072, 109.228, 0.57 ) }
    dend_36 { pt3dadd( 30.4738, -331.873, 110.233, 0.57 ) }
    dend_36 { pt3dadd( 29.6708, -335.347, 111.229, 0.23 ) }
    dend_36 { pt3dadd( 29.1795, -337.336, 111.865, 0.23 ) }
    dend_36 { pt3dadd( 28.6139, -339.451, 112.622, 0.23 ) }
    dend_36 { pt3dadd( 27.8621, -342.088, 113.605, 0.23 ) }
    dend_36 { pt3dadd( 26.8198, -345.554, 114.965, 0.23 ) }
    dend_36 { pt3dadd( 26.1698, -346.881, 115.356, 0.23 ) }
    dend_36 { pt3dadd( 25.1648, -348.568, 115.855, 1.7 ) }
    dend_36 { pt3dadd( 24.0396, -350.382, 116.592, 0.68 ) }
    dend_36 { pt3dadd( 23.0285, -351.915, 117.44, 0.45 ) }
    dend_36 { pt3dadd( 22.5395, -352.705, 118.053, 0.45 ) }
    dend_36 { pt3dadd( 20.9204, -355.393, 121.218, 0.45 ) }
    dend_36 { pt3dadd( 19.7059, -356.981, 123.883, 0.45 ) }
    dend_36 { pt3dadd( 18.8612, -357.841, 125.776, 0.45 ) }
    dend_36 { pt3dadd( 18.3742, -358.334, 127.095, 0.45 ) }
    dend_36 { pt3dadd( 17.8666, -358.868, 128.365, 0.45 ) }
    dend_36 { pt3dadd( 16.9756, -360.159, 130.414, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_36 { pt3dadd( 16.848, -360.397, 130.686, 0.45 ) }
    dend_36 { pt3dadd( 16.4542, -361.044, 131.214, 1.92 ) }
    dend_36 { pt3dadd( 15.4087, -362.883, 132.376, 0.57 ) }
    dend_36 { pt3dadd( 14.2134, -365.235, 133.631, 0.57 ) }
    dend_36 { pt3dadd( 13.0591, -367.504, 134.589, 0.45 ) }
    dend_36 { pt3dadd( 12.43, -368.789, 135.05, 0.45 ) }
    dend_36 { pt3dadd( 11.1965, -371.367, 135.974, 0.45 ) }
    dend_36 { pt3dadd( 10.3337, -373.283, 136.653, 0.57 ) }
    dend_36 { pt3dadd( 9.83064, -374.442, 137.049, 0.57 ) }
    dend_36 { pt3dadd( 8.63853, -377.326, 138.023, 0.57 ) }
    dend_36 { pt3dadd( 6.97079, -381.16, 139.311, 0.57 ) }
    dend_36 { pt3dadd( 6.21369, -382.901, 139.882, 0.57 ) }
    dend_36 { pt3dadd( 4.53904, -386.766, 141.127, 0.57 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 13/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 35.8841, -252.133, 73.8816, 0.45 ) }
    dend_35 { pt3dadd( 36.3204, -254.41, 73.6673, 0.45 ) }
    dend_35 { pt3dadd( 36.5111, -255.403, 73.5547, 0.45 ) }
    dend_35 { pt3dadd( 37.392, -258.847, 73.2953, 0.45 ) }
    dend_35 { pt3dadd( 38.289, -262.082, 73.1547, 0.45 ) }
    dend_35 { pt3dadd( 38.9631, -264.726, 73.0493, 0.45 ) }
    dend_35 { pt3dadd( 38.9857, -264.824, 73.0427, 1.81 ) }
    dend_35 { pt3dadd( 39.2605, -266.08, 72.9361, 1.7 ) }
    dend_35 { pt3dadd( 39.9329, -269.291, 72.6779, 0.68 ) }
    dend_35 { pt3dadd( 40.3045, -271.129, 72.4841, 0.68 ) }
    dend_35 { pt3dadd( 40.8655, -273.467, 72.2334, 0.68 ) }
    dend_35 { pt3dadd( 41.5738, -276.257, 71.9022, 0.68 ) }
    dend_35 { pt3dadd( 41.9897, -277.918, 71.6373, 0.68 ) }
    dend_35 { pt3dadd( 42.5508, -280.152, 71.1706, 0.68 ) }
    dend_35 { pt3dadd( 43.1096, -282.364, 70.5769, 0.68 ) }
    dend_35 { pt3dadd( 43.8435, -284.934, 69.823, 0.68 ) }
    dend_35 { pt3dadd( 44.7028, -287.671, 68.9713, 0.68 ) }
    dend_35 { pt3dadd( 45.7274, -290.949, 67.8737, 0.68 ) }
    dend_35 { pt3dadd( 46.2359, -293.068, 67.0598, 0.68 ) }
    dend_35 { pt3dadd( 46.6222, -295.261, 66.1309, 0.68 ) }
    dend_35 { pt3dadd( 46.7984, -296.808, 65.4382, 0.68 ) }
    dend_35 { pt3dadd( 46.8905, -298.746, 64.5733, 0.68 ) }
    dend_35 { pt3dadd( 46.9484, -302.601, 62.9048, 0.68 ) }
    dend_35 { pt3dadd( 46.9709, -306.553, 61.2593, 0.57 ) }
    dend_35 { pt3dadd( 46.9794, -308.208, 60.5959, 0.57 ) }
    dend_35 { pt3dadd( 47.0057, -310.427, 59.7381, 0.57 ) }
    dend_35 { pt3dadd( 47.0175, -313.047, 58.6792, 0.57 ) }
    dend_35 { pt3dadd( 47.0447, -315.983, 57.4649, 0.57 ) }
    dend_35 { pt3dadd( 47.1503, -319.387, 56.0508, 0.57 ) }
    dend_35 { pt3dadd( 47.3333, -321.25, 55.2703, 0.57 ) }
    dend_35 { pt3dadd( 47.4806, -322.647, 54.6674, 0.57 ) }
    dend_35 { pt3dadd( 47.9805, -325.731, 53.3728, 0.57 ) }
    dend_35 { pt3dadd( 48.1406, -326.46, 53.0546, 0.57 ) }
    dend_35 { pt3dadd( 48.5457, -327.947, 52.4327, 0.57 ) }
    dend_35 { pt3dadd( 49.392, -330.188, 51.6634, 0.57 ) }
    dend_35 { pt3dadd( 49.6777, -330.845, 51.4542, 2.6 ) }
    dend_35 { pt3dadd( 50.7469, -333.148, 50.7798, 2.04 ) }
    dend_35 { pt3dadd( 51.9907, -336.201, 49.8109, 0.57 ) }
    dend_35 { pt3dadd( 52.3904, -337.476, 49.3201, 0.57 ) }
    dend_35 { pt3dadd( 53.526, -340.251, 48.4955, 0.57 ) }
    dend_35 { pt3dadd( 54.424, -342.259, 48.015, 0.57 ) }
    dend_35 { pt3dadd( 55.6213, -344.646, 47.5632, 0.57 ) }
    dend_35 { pt3dadd( 57.5828, -348.435, 46.9713, 0.57 ) }
    dend_35 { pt3dadd( 59.2189, -351.463, 46.6741, 0.57 ) }
    dend_35 { pt3dadd( 63.2963, -359.947, 45.6713, 0.57 ) }
    dend_35 { pt3dadd( 65.3299, -364.883, 45.0169, 0.57 ) }
    dend_35 { pt3dadd( 66.4032, -367.708, 44.6744, 0.57 ) }
    dend_35 { pt3dadd( 67.1971, -370.142, 44.3474, 0.57 ) }
    dend_35 { pt3dadd( 67.5846, -371.61, 44.1378, 0.57 ) }
    dend_35 { pt3dadd( 68.1641, -377.947, 42.6903, 0.57 ) }
    dend_35 { pt3dadd( 67.9312, -380.694, 41.7042, 0.57 ) }
    dend_35 { pt3dadd( 67.7669, -381.893, 41.2465, 0.57 ) }
    dend_35 { pt3dadd( 67.4407, -384.018, 40.4019, 0.45 ) }
    dend_35 { pt3dadd( 67.337, -385.017, 40.0156, 0.45 ) }
    dend_35 { pt3dadd( 67.3973, -387.021, 39.3246, 0.45 ) }
    dend_35 { pt3dadd( 67.8293, -389.123, 38.8194, 0.45 ) }
    dend_35 { pt3dadd( 68.0678, -390.104, 38.5869, 0.45 ) }
    dend_35 { pt3dadd( 68.3564, -391.215, 38.3429, 0.45 ) }
    dend_35 { pt3dadd( 68.6171, -392.243, 38.1267, 0.45 ) }
    dend_35 { pt3dadd( 69.2186, -394.709, 37.5874, 0.45 ) }
    dend_35 { pt3dadd( 69.6441, -396.433, 37.2421, 0.45 ) }
    dend_35 { pt3dadd( 70.1363, -398.523, 36.8492, 0.45 ) }
    dend_35 { pt3dadd( 70.747, -401.121, 36.3271, 0.45 ) }
    dend_35 { pt3dadd( 71.2297, -403.346, 35.8745, 0.45 ) }
    dend_35 { pt3dadd( 71.3989, -404.198, 35.7148, 0.45 ) }
    dend_35 { pt3dadd( 71.79, -406.412, 35.2922, 0.45 ) }
    dend_35 { pt3dadd( 72.4645, -410.2, 34.5921, 0.45 ) }
    dend_35 { pt3dadd( 73.0131, -413.247, 34.0481, 0.45 ) }
    dend_35 { pt3dadd( 73.596, -416.426, 33.5228, 0.45 ) }
    dend_35 { pt3dadd( 74.1493, -419.291, 33.0914, 0.45 ) }
    // Section: dend_62, id: dend_62, parent: dend_54 (entry count 83/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 136.104, -95.307, -6.90617, 0.45 ) }
    dend_62 { pt3dadd( 136.544, -96.3988, -9.4326, 0.45 ) }
    dend_62 { pt3dadd( 137.005, -97.4344, -11.3766, 0.45 ) }
    dend_62 { pt3dadd( 137.651, -98.6828, -13.4535, 0.45 ) }
    dend_62 { pt3dadd( 138.182, -99.8397, -15.3203, 0.45 ) }
    dend_62 { pt3dadd( 140.189, -105.333, -23.9811, 0.45 ) }
    dend_62 { pt3dadd( 141.288, -108.793, -29.3003, 0.45 ) }
    dend_62 { pt3dadd( 141.745, -110.912, -32.7619, 0.45 ) }
    dend_62 { pt3dadd( 141.864, -111.826, -34.2223, 0.45 ) }
    dend_62 { pt3dadd( 142.162, -115.035, -38.9354, 0.45 ) }
    dend_62 { pt3dadd( 142.402, -117.308, -41.9601, 0.45 ) }
    dend_62 { pt3dadd( 142.457, -117.679, -42.338, 0.45 ) }
    dend_62 { pt3dadd( 143.034, -120.808, -45.2592, 0.45 ) }
    dend_62 { pt3dadd( 143.496, -123.004, -47.3459, 0.45 ) }
    dend_62 { pt3dadd( 144.105, -125.14, -49.0032, 0.45 ) }
    dend_62 { pt3dadd( 144.974, -127.199, -50.3463, 0.34 ) }
    dend_62 { pt3dadd( 146.06, -129.321, -51.6056, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_62 { pt3dadd( 146.787, -130.63, -52.3262, 0.34 ) }
    dend_62 { pt3dadd( 147.39, -131.615, -52.804, 0.34 ) }
    dend_62 { pt3dadd( 149.474, -134.738, -54.3154, 0.34 ) }
    dend_62 { pt3dadd( 152.03, -138.763, -56.264, 0.34 ) }
    dend_62 { pt3dadd( 152.778, -139.991, -56.7486, 0.34 ) }
    dend_62 { pt3dadd( 153.292, -140.919, -57.2269, 0.34 ) }
    dend_62 { pt3dadd( 154.244, -142.77, -58.3135, 0.34 ) }
    dend_62 { pt3dadd( 154.749, -143.798, -58.9619, 0.34 ) }
    dend_62 { pt3dadd( 155.721, -145.863, -60.3756, 0.34 ) }
    dend_62 { pt3dadd( 156.574, -147.744, -61.4938, 0.34 ) }
    dend_62 { pt3dadd( 158.771, -152.726, -64.8419, 0.34 ) }
    dend_62 { pt3dadd( 159.703, -154.854, -66.4396, 0.34 ) }
    dend_62 { pt3dadd( 159.932, -155.391, -66.8866, 0.34 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 136.104, -95.307, -6.90617, 0.45 ) }
    dend_55 { pt3dadd( 138.01, -95.7305, -7.17095, 0.45 ) }
    dend_55 { pt3dadd( 139.525, -96.2567, -7.53919, 0.45 ) }
    dend_55 { pt3dadd( 141.34, -97.016, -8.03004, 0.45 ) }
    dend_55 { pt3dadd( 143.691, -98.3028, -9.06788, 0.45 ) }
    dend_55 { pt3dadd( 145.288, -99.3816, -9.90552, 0.45 ) }
    dend_55 { pt3dadd( 147.592, -101.123, -11.1753, 0.45 ) }
    dend_55 { pt3dadd( 149.85, -103.216, -12.5552, 0.34 ) }
    dend_55 { pt3dadd( 150.793, -104.213, -13.1436, 0.34 ) }
    dend_55 { pt3dadd( 154.063, -107.985, -15.3824, 0.34 ) }
    dend_55 { pt3dadd( 156.017, -110.306, -16.7922, 0.34 ) }
    dend_55 { pt3dadd( 157.421, -111.961, -17.7422, 0.34 ) }
    dend_55 { pt3dadd( 158.743, -113.534, -18.5476, 0.34 ) }
    dend_55 { pt3dadd( 160.562, -115.613, -19.4147, 0.34 ) }
    dend_55 { pt3dadd( 162.584, -117.92, -20.2108, 0.34 ) }
    dend_55 { pt3dadd( 164.185, -119.691, -20.6007, 0.34 ) }
    dend_55 { pt3dadd( 165.716, -121.374, -20.9442, 0.34 ) }
    dend_55 { pt3dadd( 167.101, -122.958, -21.1574, 0.34 ) }
    dend_55 { pt3dadd( 168.196, -124.215, -21.1753, 0.34 ) }
    dend_55 { pt3dadd( 169.315, -125.53, -20.9812, 0.34 ) }
    dend_55 { pt3dadd( 170.515, -126.953, -20.7133, 0.34 ) }
    dend_55 { pt3dadd( 172.016, -128.684, -20.4192, 0.34 ) }
    dend_55 { pt3dadd( 174.817, -131.782, -19.998, 0.45 ) }
    dend_55 { pt3dadd( 177.17, -134.197, -19.6887, 0.45 ) }
    dend_55 { pt3dadd( 179.401, -136.336, -19.344, 0.45 ) }
    dend_55 { pt3dadd( 182.11, -138.83, -18.922, 0.45 ) }
    dend_55 { pt3dadd( 183.442, -139.969, -18.7856, 0.45 ) }
    dend_55 { pt3dadd( 184.996, -141.242, -18.7131, 0.45 ) }
    dend_55 { pt3dadd( 185.863, -141.936, -18.7577, 0.45 ) }
    dend_55 { pt3dadd( 189.586, -144.933, -19.2002, 0.45 ) }
    dend_55 { pt3dadd( 192.097, -146.985, -19.5515, 0.45 ) }
    dend_55 { pt3dadd( 194.52, -149.058, -19.7987, 0.45 ) }
    dend_55 { pt3dadd( 195.544, -149.954, -19.9207, 0.45 ) }
    dend_55 { pt3dadd( 198.972, -152.911, -20.2939, 0.45 ) }
    dend_55 { pt3dadd( 200.566, -154.316, -20.4199, 0.45 ) }
    dend_55 { pt3dadd( 202.724, -156.256, -20.4666, 0.45 ) }
    dend_55 { pt3dadd( 204.048, -157.439, -20.3478, 0.45 ) }
    dend_55 { pt3dadd( 204.977, -158.282, -20.214, 0.45 ) }
    dend_55 { pt3dadd( 207.34, -160.425, -19.8494, 0.45 ) }
    dend_55 { pt3dadd( 209.748, -162.658, -19.4076, 0.45 ) }
    dend_55 { pt3dadd( 211.83, -164.681, -19.2144, 0.45 ) }
    dend_55 { pt3dadd( 214.027, -166.919, -19.2379, 0.45 ) }
    dend_55 { pt3dadd( 215.626, -168.604, -19.5154, 0.45 ) }
    dend_55 { pt3dadd( 217.264, -170.423, -20.0415, 0.45 ) }
    dend_55 { pt3dadd( 218.469, -171.822, -20.6074, 0.45 ) }
    dend_55 { pt3dadd( 220.826, -174.613, -21.9175, 0.45 ) }
    dend_55 { pt3dadd( 222.116, -176.186, -22.6658, 0.45 ) }
    dend_55 { pt3dadd( 224.329, -178.925, -23.8754, 0.45 ) }
    dend_55 { pt3dadd( 226.415, -181.443, -24.8723, 0.45 ) }
    dend_55 { pt3dadd( 227.742, -182.986, -25.4521, 0.45 ) }
    dend_55 { pt3dadd( 228.944, -184.36, -26.0394, 0.45 ) }
    dend_55 { pt3dadd( 230.58, -186.233, -26.8174, 0.45 ) }
    dend_55 { pt3dadd( 231.528, -187.274, -27.3222, 0.45 ) }
    dend_55 { pt3dadd( 232.023, -187.823, -27.6094, 0.45 ) }
    dend_55 { pt3dadd( 233.225, -189.139, -28.3809, 0.45 ) }
    dend_55 { pt3dadd( 236.346, -192.428, -30.5316, 0.45 ) }
    dend_55 { pt3dadd( 237.569, -193.686, -31.4354, 0.45 ) }
    dend_55 { pt3dadd( 239.266, -195.414, -32.7719, 0.45 ) }
    dend_55 { pt3dadd( 240.657, -196.824, -33.8677, 0.45 ) }
    dend_55 { pt3dadd( 241.184, -197.379, -34.2839, 0.79 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 73/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 241.184, -197.379, -34.2839, 0.45 ) }
    dend_57 { pt3dadd( 240.515, -200.333, -35.0671, 0.45 ) }
    dend_57 { pt3dadd( 240.218, -202.221, -35.5006, 0.45 ) }
    dend_57 { pt3dadd( 240.049, -203.831, -36.0167, 0.45 ) }
    dend_57 { pt3dadd( 240.012, -204.628, -36.4433, 0.45 ) }
    dend_57 { pt3dadd( 240.088, -205.903, -37.2401, 0.45 ) }
    dend_57 { pt3dadd( 240.243, -206.989, -37.9211, 0.45 ) }
    dend_57 { pt3dadd( 240.716, -208.558, -38.9442, 0.45 ) }
    dend_57 { pt3dadd( 241.684, -211.152, -40.6725, 0.45 ) }
    dend_57 { pt3dadd( 243.019, -214.521, -42.9275, 0.45 ) }
    dend_57 { pt3dadd( 243.708, -216.399, -44.0386, 0.45 ) }
    dend_57 { pt3dadd( 244.607, -219.022, -45.3831, 0.45 ) }
    dend_57 { pt3dadd( 245.058, -220.635, -46.0649, 0.45 ) }
    dend_57 { pt3dadd( 245.588, -222.864, -46.6304, 0.45 ) }
    dend_57 { pt3dadd( 246.191, -226.021, -46.5582, 0.45 ) }
    dend_57 { pt3dadd( 246.704, -229.576, -45.989, 0.45 ) }
    dend_57 { pt3dadd( 246.9, -231.702, -45.4243, 0.45 ) }
    dend_57 { pt3dadd( 247.036, -233.855, -44.4135, 0.45 ) }
    dend_57 { pt3dadd( 247.269, -237.946, -41.9551, 0.45 ) }
    dend_57 { pt3dadd( 247.595, -243.386, -38.1487, 0.45 ) }
    dend_57 { pt3dadd( 247.702, -245.055, -36.9232, 0.45 ) }
    dend_57 { pt3dadd( 247.909, -247.539, -35.1146, 0.45 ) }
    dend_57 { pt3dadd( 248.369, -253.177, -30.7769, 0.45 ) }
    dend_57 { pt3dadd( 248.505, -254.803, -29.4972, 0.45 ) }
    dend_57 { pt3dadd( 248.615, -256.72, -28.134, 0.45 ) }
    dend_57 { pt3dadd( 248.752, -259.778, -26.2636, 0.45 ) }
    dend_57 { pt3dadd( 248.852, -261.254, -25.3344, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 241.184, -197.379, -34.2839, 0.45 ) }
    dend_56 { pt3dadd( 242.942, -198.64, -34.1691, 0.45 ) }
    dend_56 { pt3dadd( 246.183, -200.811, -34.1017, 0.45 ) }
    dend_56 { pt3dadd( 249.623, -202.808, -34.1886, 0.45 ) }
    dend_56 { pt3dadd( 252.665, -204.493, -34.261, 0.45 ) }
    dend_56 { pt3dadd( 255.973, -206.325, -34.3384, 0.45 ) }
    dend_56 { pt3dadd( 257.715, -207.36, -34.5022, 0.45 ) }
    dend_56 { pt3dadd( 261.469, -209.729, -35.3061, 0.45 ) }
    dend_56 { pt3dadd( 265.184, -212.21, -36.5519, 0.45 ) }
    dend_56 { pt3dadd( 269.157, -215.086, -38.3394, 0.45 ) }
    dend_56 { pt3dadd( 270.458, -216.072, -38.9975, 0.45 ) }
    dend_56 { pt3dadd( 275.681, -220.11, -41.7574, 0.45 ) }
    dend_56 { pt3dadd( 279.641, -223.275, -43.8085, 0.45 ) }
    dend_56 { pt3dadd( 281.919, -225.055, -44.8988, 0.45 ) }
    dend_56 { pt3dadd( 286.917, -228.666, -47.0256, 0.45 ) }
    dend_56 { pt3dadd( 289.223, -230.155, -47.7371, 0.45 ) }
    dend_56 { pt3dadd( 293.716, -232.802, -48.5424, 0.45 ) }
    dend_56 { pt3dadd( 299.721, -235.976, -48.8717, 0.45 ) }
    dend_56 { pt3dadd( 306.697, -239.556, -48.5061, 0.45 ) }
    dend_56 { pt3dadd( 311.931, -242.175, -47.6834, 0.45 ) }
    dend_56 { pt3dadd( 318.483, -245.151, -46.114, 0.45 ) }
    dend_56 { pt3dadd( 321.882, -246.583, -45.148, 0.45 ) }
    dend_56 { pt3dadd( 324.171, -247.404, -44.4409, 0.45 ) }
    dend_56 { pt3dadd( 330.109, -248.891, -42.8617, 0.45 ) }
    dend_56 { pt3dadd( 335.532, -249.846, -41.7452, 0.45 ) }
    dend_56 { pt3dadd( 342.455, -250.657, -40.8825, 0.45 ) }
    dend_56 { pt3dadd( 347.053, -250.925, -40.7806, 0.45 ) }
    dend_56 { pt3dadd( 354.323, -250.954, -41.1094, 0.45 ) }
    dend_56 { pt3dadd( 364.489, -250.325, -42.0472, 0.45 ) }
    dend_56 { pt3dadd( 367.159, -249.92, -42.4441, 0.45 ) }
    dend_56 { pt3dadd( 369.606, -249.351, -42.9189, 0.45 ) }
    dend_56 { pt3dadd( 373.542, -247.827, -43.6984, 0.45 ) }
    dend_56 { pt3dadd( 375.761, -246.341, -44.1374, 0.45 ) }
    dend_56 { pt3dadd( 378.191, -243.046, -44.6524, 0.45 ) }
    dend_56 { pt3dadd( 379.156, -240.688, -44.8632, 0.45 ) }
    dend_56 { pt3dadd( 379.966, -238.361, -45.0716, 0.45 ) }
    dend_56 { pt3dadd( 381.603, -233.376, -45.5567, 0.45 ) }
    dend_56 { pt3dadd( 382.606, -230.485, -45.8787, 0.45 ) }
    dend_56 { pt3dadd( 384.654, -225.75, -46.5719, 0.45 ) }
    dend_56 { pt3dadd( 386.71, -222.264, -46.9596, 0.45 ) }
    dend_56 { pt3dadd( 389.22, -219.017, -47.0859, 0.45 ) }
    dend_56 { pt3dadd( 391.24, -216.826, -47.0905, 0.45 ) }
    dend_56 { pt3dadd( 393.367, -215.069, -46.9382, 0.45 ) }
    dend_56 { pt3dadd( 396.218, -213.355, -46.5575, 0.45 ) }
    dend_56 { pt3dadd( 404.945, -210.546, -43.884, 0.45 ) }
    dend_56 { pt3dadd( 406.205, -210.391, -43.2356, 0.45 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 248.852, -261.254, -25.3344, 0.45 ) }
    dend_59 { pt3dadd( 249.045, -263.045, -25.5663, 0.45 ) }
    dend_59 { pt3dadd( 249.309, -264.584, -25.7507, 0.45 ) }
    dend_59 { pt3dadd( 249.655, -266.204, -25.9039, 0.45 ) }
    dend_59 { pt3dadd( 249.986, -267.673, -26.0463, 0.45 ) }
    dend_59 { pt3dadd( 250.571, -270.169, -26.1074, 0.45 ) }
    dend_59 { pt3dadd( 250.846, -271.36, -26.0151, 0.45 ) }
    dend_59 { pt3dadd( 251.236, -273.042, -25.6962, 0.45 ) }
    dend_59 { pt3dadd( 251.615, -274.65, -25.3142, 0.45 ) }
    dend_59 { pt3dadd( 252.208, -276.964, -24.6653, 0.45 ) }
    dend_59 { pt3dadd( 253.128, -280.309, -23.6712, 0.45 ) }
    dend_59 { pt3dadd( 254.14, -283.622, -22.7001, 0.45 ) }
    dend_59 { pt3dadd( 255.04, -286.513, -21.9358, 0.45 ) }
    dend_59 { pt3dadd( 255.621, -288.235, -21.5522, 0.45 ) }
    dend_59 { pt3dadd( 256.606, -290.903, -21.1419, 0.45 ) }
    dend_59 { pt3dadd( 257.295, -292.612, -21.0022, 0.45 ) }
    dend_59 { pt3dadd( 258.168, -294.738, -21.0945, 0.45 ) }
    dend_59 { pt3dadd( 259.037, -296.738, -21.3294, 0.45 ) }
    dend_59 { pt3dadd( 259.956, -298.807, -21.6326, 0.45 ) }
    dend_59 { pt3dadd( 260.757, -300.746, -21.8826, 0.45 ) }
    dend_59 { pt3dadd( 261.52, -302.802, -22.2365, 0.45 ) }
    dend_59 { pt3dadd( 262.446, -305.467, -22.6991, 0.45 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 68/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 248.852, -261.254, -25.3344, 0.45 ) }
    dend_58 { pt3dadd( 251.208, -258.94, -24.8021, 0.45 ) }
    dend_58 { pt3dadd( 252.368, -257.799, -24.5399, 0.45 ) }
    dend_58 { pt3dadd( 253.678, -256.513, -24.244, 0.45 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 262.446, -305.467, -22.6991, 0.45 ) }
    dend_61 { pt3dadd( 260.434, -311.905, -21.0692, 0.45 ) }
    dend_61 { pt3dadd( 258.119, -319.643, -19.6163, 0.45 ) }
    dend_61 { pt3dadd( 256.838, -324.177, -18.9762, 0.45 ) }
    dend_61 { pt3dadd( 256.113, -326.987, -18.6808, 0.45 ) }
    dend_61 { pt3dadd( 255.963, -327.619, -18.6381, 0.45 ) }
    dend_61 { pt3dadd( 254.438, -334.351, -18.2727, 0.45 ) }
    dend_61 { pt3dadd( 254.187, -335.993, -18.4207, 0.45 ) }
    dend_61 { pt3dadd( 254.025, -337.542, -18.6878, 0.45 ) }
    dend_61 { pt3dadd( 253.795, -339.153, -18.9388, 0.45 ) }
    dend_61 { pt3dadd( 253.425, -341.339, -19.3922, 0.45 ) }
    dend_61 { pt3dadd( 252.838, -345.076, -20.3935, 0.45 ) }
    dend_61 { pt3dadd( 252.364, -348.398, -21.3769, 0.45 ) }
    dend_61 { pt3dadd( 251.73, -352.491, -22.3381, 0.45 ) }
    dend_61 { pt3dadd( 251.291, -354.836, -22.706, 0.45 ) }
    dend_61 { pt3dadd( 250.708, -357.629, -23.0749, 0.45 ) }
    dend_61 { pt3dadd( 249.819, -361.607, -23.5495, 0.45 ) }
    dend_61 { pt3dadd( 248.827, -365.518, -23.1552, 0.45 ) }
    dend_61 { pt3dadd( 247.789, -369.158, -22.1966, 0.45 ) }
    dend_61 { pt3dadd( 246.906, -372.2, -21.1314, 0.45 ) }
    dend_61 { pt3dadd( 246.05, -375.025, -19.9002, 0.45 ) }
    dend_61 { pt3dadd( 245.051, -378.055, -18.4735, 0.45 ) }
    dend_61 { pt3dadd( 240.857, -390.372, -12.9981, 0.45 ) }
    dend_61 { pt3dadd( 239.868, -393.458, -11.8486, 0.45 ) }
    dend_61 { pt3dadd( 239.286, -395.53, -11.2711, 0.45 ) }
    dend_61 { pt3dadd( 237.684, -402.042, -10.0767, 0.45 ) }
    dend_61 { pt3dadd( 236.998, -405.402, -9.72319, 0.45 ) }
    dend_61 { pt3dadd( 236.45, -409.466, -9.99569, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_61 { pt3dadd( 236.252, -412.326, -10.9289, 0.45 ) }
    dend_61 { pt3dadd( 236.183, -415.587, -12.1445, 0.45 ) }
    dend_61 { pt3dadd( 236.283, -418.56, -13.5276, 0.45 ) }
    dend_61 { pt3dadd( 236.575, -420.723, -14.9395, 0.45 ) }
    dend_61 { pt3dadd( 236.793, -421.807, -15.6279, 0.45 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 5/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 262.446, -305.467, -22.6991, 0.45 ) }
    dend_60 { pt3dadd( 262.858, -307.168, -22.5275, 0.45 ) }
    dend_60 { pt3dadd( 263.681, -310.618, -22.2885, 0.45 ) }
    dend_60 { pt3dadd( 264.432, -314.542, -22.0921, 0.45 ) }
    dend_60 { pt3dadd( 264.571, -316.061, -21.9554, 0.45 ) }
    dend_60 { pt3dadd( 264.61, -318.388, -21.6206, 0.45 ) }
    dend_60 { pt3dadd( 264.539, -320.798, -21.1565, 0.45 ) }
    dend_60 { pt3dadd( 264.37, -322.426, -20.7044, 0.45 ) }
    dend_60 { pt3dadd( 264.035, -324.682, -19.9053, 0.45 ) }
    dend_60 { pt3dadd( 263.014, -330.179, -17.4436, 0.45 ) }
    dend_60 { pt3dadd( 262.316, -333.784, -15.7009, 0.45 ) }
    dend_60 { pt3dadd( 261.952, -335.918, -14.6308, 0.45 ) }
    dend_60 { pt3dadd( 261.471, -339.266, -12.8484, 0.45 ) }
    dend_60 { pt3dadd( 261.403, -340.096, -12.4014, 0.45 ) }
    dend_60 { pt3dadd( 261.467, -341.978, -11.2845, 0.45 ) }
    dend_60 { pt3dadd( 261.818, -343.88, -10.2283, 0.45 ) }
    dend_60 { pt3dadd( 262.513, -346.514, -8.86874, 0.45 ) }
    dend_60 { pt3dadd( 262.846, -347.524, -8.40736, 0.45 ) }
    dend_60 { pt3dadd( 263.933, -350.522, -7.27814, 0.45 ) }
    dend_60 { pt3dadd( 265.852, -355.319, -5.5269, 0.45 ) }
    dend_60 { pt3dadd( 266.974, -357.973, -4.51688, 0.45 ) }
    dend_60 { pt3dadd( 268.613, -361.69, -3.06365, 0.45 ) }
    dend_60 { pt3dadd( 269.675, -364.19, -2.09389, 0.45 ) }
    dend_60 { pt3dadd( 271.82, -369.207, -0.120155, 0.45 ) }
    dend_60 { pt3dadd( 272.492, -370.741, 0.482288, 0.45 ) }
    dend_60 { pt3dadd( 273.991, -374.201, 1.7592, 0.45 ) }
    dend_60 { pt3dadd( 274.507, -375.538, 2.3316, 0.45 ) }
    dend_60 { pt3dadd( 275.79, -378.984, 3.87843, 0.45 ) }
    dend_60 { pt3dadd( 276.901, -382.333, 5.46368, 0.45 ) }
    dend_60 { pt3dadd( 277.328, -383.936, 6.41111, 0.45 ) }
    dend_60 { pt3dadd( 277.745, -385.902, 7.75886, 0.45 ) }
    dend_60 { pt3dadd( 278.455, -389.763, 10.3089, 0.45 ) }
    dend_60 { pt3dadd( 278.745, -391.649, 11.5103, 0.45 ) }
    dend_60 { pt3dadd( 279.043, -393.653, 12.7461, 0.45 ) }
    dend_60 { pt3dadd( 280.283, -401.888, 17.5437, 0.45 ) }
    dend_60 { pt3dadd( 281.26, -407.604, 20.6505, 0.45 ) }
    dend_60 { pt3dadd( 282.163, -412.325, 23.0502, 0.45 ) }
    dend_60 { pt3dadd( 282.471, -413.733, 23.665, 0.45 ) }
    dend_60 { pt3dadd( 282.781, -415.24, 24.347, 0.45 ) }
    dend_60 { pt3dadd( 283.17, -417.125, 25.243, 0.45 ) }
    dend_60 { pt3dadd( 283.598, -419.119, 26.304, 0.45 ) }
    dend_60 { pt3dadd( 283.97, -421.065, 27.5995, 0.45 ) }
    dend_60 { pt3dadd( 284.1, -421.818, 28.1894, 0.45 ) }
    dend_60 { pt3dadd( 285.19, -428.729, 33.9428, 0.45 ) }
    dend_60 { pt3dadd( 285.668, -431.989, 36.6748, 0.45 ) }
    dend_60 { pt3dadd( 286.603, -437.197, 40.9624, 0.45 ) }
    dend_60 { pt3dadd( 286.752, -438.055, 41.6749, 0.45 ) }
    dend_60 { pt3dadd( 286.933, -438.897, 42.3499, 0.45 ) }
    dend_60 { pt3dadd( 287.308, -440.358, 43.4317, 0.45 ) }
    dend_60 { pt3dadd( 288.365, -443.74, 45.5649, 0.45 ) }
    dend_60 { pt3dadd( 289.402, -447.085, 47.5546, 0.45 ) }
    dend_60 { pt3dadd( 291.989, -455.705, 52.4708, 0.45 ) }
    dend_60 { pt3dadd( 293.043, -459.407, 54.6087, 0.45 ) }
    dend_60 { pt3dadd( 293.552, -461.176, 55.6523, 0.45 ) }
    dend_60 { pt3dadd( 294.009, -463.135, 57.1915, 0.45 ) }
    dend_60 { pt3dadd( 294.505, -465.68, 59.8099, 0.45 ) }
    dend_60 { pt3dadd( 294.921, -468.671, 63.5484, 0.45 ) }
    dend_60 { pt3dadd( 295.041, -469.821, 65.1446, 0.45 ) }
    dend_60 { pt3dadd( 295.05, -470.845, 66.6214, 0.45 ) }
    dend_60 { pt3dadd( 294.778, -479.847, 79.3919, 0.45 ) }
    dend_60 { pt3dadd( 294.68, -482.357, 82.8088, 0.45 ) }
    dend_60 { pt3dadd( 294.596, -485.214, 86.4198, 0.45 ) }
    dend_60 { pt3dadd( 294.495, -486.906, 88.5729, 0.45 ) }
    dend_60 { pt3dadd( 294.214, -490.933, 93.5571, 0.45 ) }
    dend_60 { pt3dadd( 294.057, -492.968, 95.8682, 0.45 ) }
    dend_60 { pt3dadd( 293.959, -495.121, 97.8986, 0.45 ) }
    dend_60 { pt3dadd( 293.741, -499.061, 101.645, 0.45 ) }
    dend_60 { pt3dadd( 293.219, -512.841, 115.714, 0.45 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_2 = new SectionList()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_23, dend_12, dend_11, dend_0, dend_45, dend_24, dend_22, dend_13, dend_8, dend_1, dend_47, dend_46, dend_44, dend_25, dend_17, dend_14, dend_10, dend_9, dend_5, dend_2, dend_69, dend_48, dend_29, dend_26, dend_19, dend_18, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_64, dend_49, dend_41, dend_32, dend_30, dend_28, dend_27, dend_21, dend_20, dend_66, dend_65, dend_63, dend_50, dend_43, dend_42, dend_38, dend_33, dend_31, dend_68, dend_67, dend_52, dend_51, dend_40, dend_39, dend_37, dend_34, dend_54, dend_53, dend_36, dend_35, dend_62, dend_55, dend_57, dend_56, dend_59, dend_58, dend_61, dend_60]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_11 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_46 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_44 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_10 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_9 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_69 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_64 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_49 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_41 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_28 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_21 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_66 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_65 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_42 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_38 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_33 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_51 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_40 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_37 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_54 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_53 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_36 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_35 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_62 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_55 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_57 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_56 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_59 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_23 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_24 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_12 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_25 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_45 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_47 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_29 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_30 OneSecGrp_SectionRef_40.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_32 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_14 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_43 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_50 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_63 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_52 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_20 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_48, dend_48, dend_48, dend_48, dend_48, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_11 nseg = 3
    dend_22 nseg = 5
    dend_13 nseg = 3
    dend_8 nseg = 5
    dend_46 nseg = 7
    dend_44 nseg = 7
    dend_10 nseg = 7
    dend_9 nseg = 9
    dend_5 nseg = 9
    dend_2 nseg = 3
    dend_69 nseg = 5
    dend_19 nseg = 3
    dend_6 nseg = 5
    dend_64 nseg = 7
    dend_49 nseg = 3
    dend_41 nseg = 3
    dend_28 nseg = 23
    dend_21 nseg = 5
    dend_66 nseg = 7
    dend_65 nseg = 3
    dend_42 nseg = 3
    dend_38 nseg = 9
    dend_33 nseg = 9
    dend_31 nseg = 3
    dend_68 nseg = 3
    dend_67 nseg = 5
    dend_51 nseg = 7
    dend_40 nseg = 17
    dend_37 nseg = 21
    dend_54 nseg = 3
    dend_53 nseg = 13
    dend_36 nseg = 9
    dend_35 nseg = 9
    dend_62 nseg = 5
    dend_55 nseg = 7
    dend_57 nseg = 3
    dend_56 nseg = 11
    dend_59 nseg = 3
    dend_61 nseg = 7
    dend_60 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_NBC_809407f588_0_0


