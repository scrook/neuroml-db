// Cell: bIR215_L4_BP_7d938499d8_0_0
/*
{
  "id" : "bIR215_L4_BP_7d938499d8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.87753, -1.26548, 1.33", "2.51993, -9.80462, -1.99002, 1.33", "4.01813, -16.3157, -3.19129, 0.66", "5.17809, -21.3567, -4.12135, 0.66", "6.41412, -26.7284, -5.11241, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.41412, -26.7284, -5.11241, 0.66", "6.99743, -39.3057, -2.05672, 0.66", "7.84603, -57.9872, 2.50614, 0.66", "8.87753, -80.7913, 8.25284, 0.66", "9.74847, -98.3904, 12.7088, 0.66", "10.2667, -108.602, 15.2859, 0.66", "10.4263, -111.991, 16.1347, 0.66", "10.6591, -116.588, 17.3189, 0.66", "10.8045, -120.888, 18.4582, 0.66", "10.9684, -125.849, 19.6829, 0.66", "11.0625, -128.531, 20.0141, 0.66", "11.1361, -131.879, 20.1272, 0.66", "11.2784, -136.929, 19.7245, 0.66", "11.4192, -143.568, 18.8823, 0.66", "11.5359, -146.46, 18.49, 0.66", "12.1865, -160.037, 16.5235, 0.66", "12.4153, -163.241, 16.0065, 0.66", "13.2974, -173.136, 14.1647, 0.66", "13.7149, -177.313, 13.3518, 0.66", "14.6156, -184.986, 11.9551, 0.66", "15.1443, -189.381, 11.4402, 0.66", "15.674, -193.657, 11.3656, 0.66", "16.1902, -197.783, 11.4385, 0.66", "16.537, -201.763, 11.5208, 0.66", "16.8372, -205.978, 11.446, 0.66", "17.0725, -212.493, 11.2402, 0.66", "17.2582, -216.452, 11.2973, 0.66", "17.4181, -221.255, 11.4352, 0.66", "17.6127, -227.757, 11.5912, 0.66", "17.6953, -231.908, 11.5011, 0.66", "17.8379, -237.493, 11.1371, 0.66", "18.1358, -242.753, 10.7456, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.41412, -26.7284, -5.11241, 0.66", "9.64598, -29.3542, -5.31545, 0.66", "17.0758, -35.3905, -5.78225, 0.33", "34.0829, -49.2079, -6.85076, 0.33", "34.7246, -49.7292, -6.89107, 0.66", "41.5877, -55.3052, -7.32227, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.1358, -242.753, 10.7456, 0.66", "22.0879, -246.97, 12.0318, 0.66", "24.2719, -249.368, 13.1325, 0.66", "27.6607, -253.059, 15.9466, 0.66", "29.7811, -255.259, 17.9816, 0.66", "33.7921, -259.297, 22.2027, 0.66", "36.8745, -262.233, 25.4305, 0.66", "39.8268, -264.905, 28.8358, 0.66", "46.2284, -270.052, 36.1002, 0.66", "49.8995, -272.732, 40.1968, 0.66", "54.1788, -275.831, 45.0663, 0.33", "55.919, -277.047, 46.9249, 0.33", "56.5455, -277.43, 47.5285, 0.66", "60.3863, -279.441, 50.8345, 0.33", "61.2534, -279.82, 51.2754, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "18.1358, -242.753, 10.7456, 0.66", "18.8949, -247.134, 12.0933, 0.66", "19.8701, -252.795, 13.8644, 0.66", "21.9693, -264.118, 17.2255, 0.66", "22.8302, -269.053, 18.6406, 0.66", "23.9777, -275.059, 20.398, 0.66", "25.0673, -281.165, 22.0163, 0.66", "25.6591, -284.599, 22.8187, 0.66", "26.2923, -289.355, 23.7564, 0.66", "27.3864, -298.51, 25.2319, 0.66", "27.9733, -303.716, 25.8364, 0.66", "28.5959, -309.825, 26.4561, 0.66", "28.9465, -315.003, 26.6807, 0.66", "29.0595, -317.81, 26.7825, 0.66", "29.26, -327.249, 27.0092, 0.66", "29.3216, -332.137, 26.9838, 0.66", "29.2839, -338.912, 26.9084, 0.66", "29.4161, -344.335, 27.0403, 0.66", "29.4716, -346.742, 27.0726, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "29.4716, -346.742, 27.0726, 0.66", "29.9704, -349.959, 27.3037, 0.66", "30.6318, -355.175, 28.2435, 0.66", "31.2908, -360.737, 29.4312, 0.66", "31.6356, -364.387, 30.2526, 0.66", "32.0604, -369.434, 31.285, 0.66", "32.6254, -378.37, 32.8661, 0.66", "32.8349, -384.486, 33.871, 0.66", "32.9158, -388.681, 34.6177, 0.66", "33.0169, -393.072, 35.2828, 0.66", "33.1625, -397.997, 35.9695, 0.66", "33.2931, -401.368, 36.3972, 0.66", "33.5671, -405.997, 36.84, 0.66", "33.9054, -410.253, 37.2058, 0.66", "34.7604, -420.258, 38.2873, 0.66", "35.1823, -424.233, 38.7695, 0.66", "36.1282, -434.215, 39.9259, 0.66", "36.4454, -438.242, 40.2627, 0.66", "36.6681, -442.126, 40.4606, 0.66", "36.8116, -445.623, 40.5057, 0.66", "36.9574, -451.352, 40.5246, 0.66", "37.0046, -456.254, 40.5025, 0.66", "36.979, -465.685, 40.1525, 0.66", "37.0716, -470.448, 39.9671, 0.66", "37.1704, -474.154, 39.8383, 0.66", "37.3581, -479.139, 39.6887, 0.66", "38.0863, -497.898, 39.0803, 0.66", "38.4253, -504.791, 38.7262, 0.66", "39.3484, -522.891, 37.5435, 0.66", "39.706, -529.732, 37.0085, 0.66", "40.0982, -536.461, 36.5251, 0.66", "40.4165, -541.141, 36.2116, 0.66", "40.9194, -547.546, 35.7362, 0.66", "41.3486, -554.672, 35.2558, 0.66", "41.7007, -562.445, 34.4686, 0.66", "41.8708, -566.789, 34.0418, 0.66", "42.0095, -569.815, 33.8302, 0.66", "42.6276, -581.544, 33.6484, 0.66", "42.8186, -585.2, 33.6024, 0.66", "43.0183, -591.204, 33.2836, 0.66", "43.2143, -597.209, 32.8706, 0.66", "43.4522, -601.86, 32.5787, 0.66", "44.2193, -613.24, 32.2915, 0.66", "45.3188, -626.3, 32.2601, 0.66", "46.1185, -635.191, 32.1866, 0.66", "46.4949, -639.661, 32.0695, 0.66", "47.8544, -656.021, 31.3301, 0.66", "48.5174, -666.524, 30.493, 0.66", "48.7018, -669.594, 30.1873, 0.66", "49.003, -674.572, 29.5765, 0.66", "49.4063, -681.871, 28.467, 0.66", "49.4947, -685.027, 27.8863, 0.66", "49.5356, -693.481, 26.009, 0.66", "49.6548, -711.116, 21.8058, 0.66", "49.8258, -720.211, 19.909, 0.66", "49.9524, -723.605, 19.3101, 0.33", "50.0856, -725.87, 18.986, 1.33", "50.619, -731.239, 18.5043, 0.66", "51.601, -737.709, 18.267, 0.66", "52.433, -742.3, 18.2218, 0.66", "53.3693, -746.945, 18.3071, 0.66", "54.2243, -750.744, 18.3425, 0.66", "57.8755, -766.349, 18.8782, 0.66", "58.3865, -768.55, 19.0115, 0.33", "59.0552, -771.695, 19.2058, 1.33", "59.692, -774.817, 19.3329, 0.66", "60.1584, -777.271, 19.4288, 0.33", "61.3768, -784.047, 19.7422, 0.66", "61.7982, -787.546, 20.2893, 0.66", "62.2854, -792.168, 21.2489, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "29.4716, -346.742, 27.0726, 0.66", "27.4048, -352.691, 27.2198, 0.66", "25.7012, -357.74, 27.2762, 0.66", "24.5624, -361.53, 27.5525, 0.33", "23.0274, -366.859, 28.136, 0.33", "22.7804, -367.729, 28.2746, 0.66", "22.0378, -370.553, 28.7888, 0.33", "21.5543, -372.61, 29.2775, 0.66", "20.55, -377.486, 30.2847, 0.33", "20.4081, -378.257, 30.4649, 0.66", "19.4382, -383.476, 31.6702, 0.33", "19.068, -386.179, 32.377, 0.33", "18.802, -389.115, 33.2053, 0.66", "18.5788, -392.629, 34.2818, 0.33", "18.5157, -394.527, 34.8235, 0.33", "18.5539, -395.59, 35.1747, 0.66", "19.1501, -400.049, 37.2583, 0.33", "19.2528, -400.697, 37.6489, 0.66", "19.5972, -402.33, 38.7888, 0.33", "19.7605, -403.169, 39.3938, 0.33", "19.8935, -404.06, 39.945, 0.66", "20.1957, -407.403, 41.6718, 0.33", "20.1847, -409.455, 42.4099, 0.33", "20.1852, -410.231, 42.6356, 0.66", "20.2103, -411.738, 42.9405, 0.33", "20.209, -412.538, 43.0492, 0.66", "20.1935, -413.555, 43.1287, 0.33", "20.1611, -414.61, 43.1369, 0.66", "20.0919, -416.155, 43.1797, 0.33", "20.057, -416.719, 43.2081, 0.66", "19.7052, -421.387, 43.5593, 0.33", "19.6764, -421.685, 43.5839, 0.66", "19.5378, -422.759, 43.6831, 0.33", "19.4506, -423.318, 43.739, 0.66", "19.2785, -424.84, 44.0344, 0.33", "19.2268, -425.536, 44.2131, 0.66", "19.1887, -426.78, 44.5852, 0.33", "19.1776, -427.66, 44.8588, 0.66", "19.1984, -428.668, 45.1948, 0.33", "19.3943, -433.355, 46.9004, 0.33", "19.4888, -434.722, 47.4623, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "62.2854, -792.168, 21.2489, 0.66", "62.7288, -796.817, 20.1784, 0.66", "63.19, -799.217, 20.1321, 1.33", "63.6268, -801.277, 20.2659, 0.66", "64.0987, -803.87, 20.3899, 0.66", "65.2033, -809.452, 20.9061, 0.33", "66.6559, -816.2, 21.6672, 0.66", "68.7258, -824.906, 23.1596, 0.66", "69.8803, -829.238, 24.0279, 0.66", "71.2202, -834.066, 24.8514, 0.33", "72.8856, -840.246, 25.6585, 0.33", "73.2886, -841.995, 25.7789, 0.66", "73.5843, -843.448, 25.6057, 0.33", "73.7608, -844.708, 25.2768, 0.66", "74.7147, -852.062, 23.0283, 0.33", "75.1457, -855.132, 22.0734, 0.66", "75.4849, -858.044, 21.0828, 0.33", "76.4158, -866.315, 18.667, 0.33", "77.0491, -871.157, 17.4299, 0.66", "78.3267, -879.923, 15.5042, 0.33", "78.9728, -884.056, 14.8085, 0.66", "79.6532, -888.133, 14.2108, 1.33", "81.3323, -897.438, 13.1973, 0.33", "82.205, -902.042, 12.9905, 0.33", "82.5559, -903.852, 12.9546, 0.66", "83.4143, -908.413, 13.0533, 0.33", "84.5256, -914.534, 13.3126, 0.33", "84.9696, -916.768, 13.4682, 1.33", "86.2116, -923.184, 13.9242, 0.33", "86.5608, -925.408, 14.139, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "62.2854, -792.168, 21.2489, 0.66", "61.3131, -793.866, 19.4575, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "86.5608, -925.408, 14.139, 0.66", "84.5159, -925.122, 14.2544, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "86.5608, -925.408, 14.139, 0.66", "86.778, -926.849, 13.9489, 0.66", "87.7451, -933.266, 13.1023, 0.33", "88.0527, -935.307, 12.833, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "88.0527, -935.307, 12.833, 0.33", "93.8736, -946.106, 19.6489, 0.33", "94.4347, -947.156, 20.2327, 1.33", "96.0446, -950.092, 21.6967, 0.33", "96.389, -950.702, 21.9226, 0.66", "98.0927, -953.604, 22.7069, 0.33", "98.6097, -954.485, 22.9449, 0.66", "99.0529, -955.285, 22.7827, 0.33", "99.6733, -956.284, 22.5316, 0.66", "101.987, -959.391, 21.4482, 0.33", "102.911, -960.514, 20.9726, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "88.0527, -935.307, 12.833, 0.33", "88.9686, -946.507, 16.2975, 0.33", "89.468, -952.615, 18.1869, 0.33", "89.5465, -953.576, 18.4839, 0.66", "90.062, -959.88, 20.434, 0.33", "90.1308, -960.72, 20.694, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L4_BP_7d938499d8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.87753, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.51993, -9.80462, -1.99002, 1.33 ) }
    dend_0 { pt3dadd( 4.01813, -16.3157, -3.19129, 0.66 ) }
    dend_0 { pt3dadd( 5.17809, -21.3567, -4.12135, 0.66 ) }
    dend_0 { pt3dadd( 6.41412, -26.7284, -5.11241, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.41412, -26.7284, -5.11241, 0.66 ) }
    dend_2 { pt3dadd( 6.99743, -39.3057, -2.05672, 0.66 ) }
    dend_2 { pt3dadd( 7.84603, -57.9872, 2.50614, 0.66 ) }
    dend_2 { pt3dadd( 8.87753, -80.7913, 8.25284, 0.66 ) }
    dend_2 { pt3dadd( 9.74847, -98.3904, 12.7088, 0.66 ) }
    dend_2 { pt3dadd( 10.2667, -108.602, 15.2859, 0.66 ) }
    dend_2 { pt3dadd( 10.4263, -111.991, 16.1347, 0.66 ) }
    dend_2 { pt3dadd( 10.6591, -116.588, 17.3189, 0.66 ) }
    dend_2 { pt3dadd( 10.8045, -120.888, 18.4582, 0.66 ) }
    dend_2 { pt3dadd( 10.9684, -125.849, 19.6829, 0.66 ) }
    dend_2 { pt3dadd( 11.0625, -128.531, 20.0141, 0.66 ) }
    dend_2 { pt3dadd( 11.1361, -131.879, 20.1272, 0.66 ) }
    dend_2 { pt3dadd( 11.2784, -136.929, 19.7245, 0.66 ) }
    dend_2 { pt3dadd( 11.4192, -143.568, 18.8823, 0.66 ) }
    dend_2 { pt3dadd( 11.5359, -146.46, 18.49, 0.66 ) }
    dend_2 { pt3dadd( 12.1865, -160.037, 16.5235, 0.66 ) }
    dend_2 { pt3dadd( 12.4153, -163.241, 16.0065, 0.66 ) }
    dend_2 { pt3dadd( 13.2974, -173.136, 14.1647, 0.66 ) }
    dend_2 { pt3dadd( 13.7149, -177.313, 13.3518, 0.66 ) }
    dend_2 { pt3dadd( 14.6156, -184.986, 11.9551, 0.66 ) }
    dend_2 { pt3dadd( 15.1443, -189.381, 11.4402, 0.66 ) }
    dend_2 { pt3dadd( 15.674, -193.657, 11.3656, 0.66 ) }
    dend_2 { pt3dadd( 16.1902, -197.783, 11.4385, 0.66 ) }
    dend_2 { pt3dadd( 16.537, -201.763, 11.5208, 0.66 ) }
    dend_2 { pt3dadd( 16.8372, -205.978, 11.446, 0.66 ) }
    dend_2 { pt3dadd( 17.0725, -212.493, 11.2402, 0.66 ) }
    dend_2 { pt3dadd( 17.2582, -216.452, 11.2973, 0.66 ) }
    dend_2 { pt3dadd( 17.4181, -221.255, 11.4352, 0.66 ) }
    dend_2 { pt3dadd( 17.6127, -227.757, 11.5912, 0.66 ) }
    dend_2 { pt3dadd( 17.6953, -231.908, 11.5011, 0.66 ) }
    dend_2 { pt3dadd( 17.8379, -237.493, 11.1371, 0.66 ) }
    dend_2 { pt3dadd( 18.1358, -242.753, 10.7456, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.41412, -26.7284, -5.11241, 0.66 ) }
    dend_1 { pt3dadd( 9.64598, -29.3542, -5.31545, 0.66 ) }
    dend_1 { pt3dadd( 17.0758, -35.3905, -5.78225, 0.33 ) }
    dend_1 { pt3dadd( 34.0829, -49.2079, -6.85076, 0.33 ) }
    dend_1 { pt3dadd( 34.7246, -49.7292, -6.89107, 0.66 ) }
    dend_1 { pt3dadd( 41.5877, -55.3052, -7.32227, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.1358, -242.753, 10.7456, 0.66 ) }
    dend_12 { pt3dadd( 22.0879, -246.97, 12.0318, 0.66 ) }
    dend_12 { pt3dadd( 24.2719, -249.368, 13.1325, 0.66 ) }
    dend_12 { pt3dadd( 27.6607, -253.059, 15.9466, 0.66 ) }
    dend_12 { pt3dadd( 29.7811, -255.259, 17.9816, 0.66 ) }
    dend_12 { pt3dadd( 33.7921, -259.297, 22.2027, 0.66 ) }
    dend_12 { pt3dadd( 36.8745, -262.233, 25.4305, 0.66 ) }
    dend_12 { pt3dadd( 39.8268, -264.905, 28.8358, 0.66 ) }
    dend_12 { pt3dadd( 46.2284, -270.052, 36.1002, 0.66 ) }
    dend_12 { pt3dadd( 49.8995, -272.732, 40.1968, 0.66 ) }
    dend_12 { pt3dadd( 54.1788, -275.831, 45.0663, 0.33 ) }
    dend_12 { pt3dadd( 55.919, -277.047, 46.9249, 0.33 ) }
    dend_12 { pt3dadd( 56.5455, -277.43, 47.5285, 0.66 ) }
    dend_12 { pt3dadd( 60.3863, -279.441, 50.8345, 0.33 ) }
    dend_12 { pt3dadd( 61.2534, -279.82, 51.2754, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 18.1358, -242.753, 10.7456, 0.66 ) }
    dend_3 { pt3dadd( 18.8949, -247.134, 12.0933, 0.66 ) }
    dend_3 { pt3dadd( 19.8701, -252.795, 13.8644, 0.66 ) }
    dend_3 { pt3dadd( 21.9693, -264.118, 17.2255, 0.66 ) }
    dend_3 { pt3dadd( 22.8302, -269.053, 18.6406, 0.66 ) }
    dend_3 { pt3dadd( 23.9777, -275.059, 20.398, 0.66 ) }
    dend_3 { pt3dadd( 25.0673, -281.165, 22.0163, 0.66 ) }
    dend_3 { pt3dadd( 25.6591, -284.599, 22.8187, 0.66 ) }
    dend_3 { pt3dadd( 26.2923, -289.355, 23.7564, 0.66 ) }
    dend_3 { pt3dadd( 27.3864, -298.51, 25.2319, 0.66 ) }
    dend_3 { pt3dadd( 27.9733, -303.716, 25.8364, 0.66 ) }
    dend_3 { pt3dadd( 28.5959, -309.825, 26.4561, 0.66 ) }
    dend_3 { pt3dadd( 28.9465, -315.003, 26.6807, 0.66 ) }
    dend_3 { pt3dadd( 29.0595, -317.81, 26.7825, 0.66 ) }
    dend_3 { pt3dadd( 29.26, -327.249, 27.0092, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 29.3216, -332.137, 26.9838, 0.66 ) }
    dend_3 { pt3dadd( 29.2839, -338.912, 26.9084, 0.66 ) }
    dend_3 { pt3dadd( 29.4161, -344.335, 27.0403, 0.66 ) }
    dend_3 { pt3dadd( 29.4716, -346.742, 27.0726, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 29.4716, -346.742, 27.0726, 0.66 ) }
    dend_5 { pt3dadd( 29.9704, -349.959, 27.3037, 0.66 ) }
    dend_5 { pt3dadd( 30.6318, -355.175, 28.2435, 0.66 ) }
    dend_5 { pt3dadd( 31.2908, -360.737, 29.4312, 0.66 ) }
    dend_5 { pt3dadd( 31.6356, -364.387, 30.2526, 0.66 ) }
    dend_5 { pt3dadd( 32.0604, -369.434, 31.285, 0.66 ) }
    dend_5 { pt3dadd( 32.6254, -378.37, 32.8661, 0.66 ) }
    dend_5 { pt3dadd( 32.8349, -384.486, 33.871, 0.66 ) }
    dend_5 { pt3dadd( 32.9158, -388.681, 34.6177, 0.66 ) }
    dend_5 { pt3dadd( 33.0169, -393.072, 35.2828, 0.66 ) }
    dend_5 { pt3dadd( 33.1625, -397.997, 35.9695, 0.66 ) }
    dend_5 { pt3dadd( 33.2931, -401.368, 36.3972, 0.66 ) }
    dend_5 { pt3dadd( 33.5671, -405.997, 36.84, 0.66 ) }
    dend_5 { pt3dadd( 33.9054, -410.253, 37.2058, 0.66 ) }
    dend_5 { pt3dadd( 34.7604, -420.258, 38.2873, 0.66 ) }
    dend_5 { pt3dadd( 35.1823, -424.233, 38.7695, 0.66 ) }
    dend_5 { pt3dadd( 36.1282, -434.215, 39.9259, 0.66 ) }
    dend_5 { pt3dadd( 36.4454, -438.242, 40.2627, 0.66 ) }
    dend_5 { pt3dadd( 36.6681, -442.126, 40.4606, 0.66 ) }
    dend_5 { pt3dadd( 36.8116, -445.623, 40.5057, 0.66 ) }
    dend_5 { pt3dadd( 36.9574, -451.352, 40.5246, 0.66 ) }
    dend_5 { pt3dadd( 37.0046, -456.254, 40.5025, 0.66 ) }
    dend_5 { pt3dadd( 36.979, -465.685, 40.1525, 0.66 ) }
    dend_5 { pt3dadd( 37.0716, -470.448, 39.9671, 0.66 ) }
    dend_5 { pt3dadd( 37.1704, -474.154, 39.8383, 0.66 ) }
    dend_5 { pt3dadd( 37.3581, -479.139, 39.6887, 0.66 ) }
    dend_5 { pt3dadd( 38.0863, -497.898, 39.0803, 0.66 ) }
    dend_5 { pt3dadd( 38.4253, -504.791, 38.7262, 0.66 ) }
    dend_5 { pt3dadd( 39.3484, -522.891, 37.5435, 0.66 ) }
    dend_5 { pt3dadd( 39.706, -529.732, 37.0085, 0.66 ) }
    dend_5 { pt3dadd( 40.0982, -536.461, 36.5251, 0.66 ) }
    dend_5 { pt3dadd( 40.4165, -541.141, 36.2116, 0.66 ) }
    dend_5 { pt3dadd( 40.9194, -547.546, 35.7362, 0.66 ) }
    dend_5 { pt3dadd( 41.3486, -554.672, 35.2558, 0.66 ) }
    dend_5 { pt3dadd( 41.7007, -562.445, 34.4686, 0.66 ) }
    dend_5 { pt3dadd( 41.8708, -566.789, 34.0418, 0.66 ) }
    dend_5 { pt3dadd( 42.0095, -569.815, 33.8302, 0.66 ) }
    dend_5 { pt3dadd( 42.6276, -581.544, 33.6484, 0.66 ) }
    dend_5 { pt3dadd( 42.8186, -585.2, 33.6024, 0.66 ) }
    dend_5 { pt3dadd( 43.0183, -591.204, 33.2836, 0.66 ) }
    dend_5 { pt3dadd( 43.2143, -597.209, 32.8706, 0.66 ) }
    dend_5 { pt3dadd( 43.4522, -601.86, 32.5787, 0.66 ) }
    dend_5 { pt3dadd( 44.2193, -613.24, 32.2915, 0.66 ) }
    dend_5 { pt3dadd( 45.3188, -626.3, 32.2601, 0.66 ) }
    dend_5 { pt3dadd( 46.1185, -635.191, 32.1866, 0.66 ) }
    dend_5 { pt3dadd( 46.4949, -639.661, 32.0695, 0.66 ) }
    dend_5 { pt3dadd( 47.8544, -656.021, 31.3301, 0.66 ) }
    dend_5 { pt3dadd( 48.5174, -666.524, 30.493, 0.66 ) }
    dend_5 { pt3dadd( 48.7018, -669.594, 30.1873, 0.66 ) }
    dend_5 { pt3dadd( 49.003, -674.572, 29.5765, 0.66 ) }
    dend_5 { pt3dadd( 49.4063, -681.871, 28.467, 0.66 ) }
    dend_5 { pt3dadd( 49.4947, -685.027, 27.8863, 0.66 ) }
    dend_5 { pt3dadd( 49.5356, -693.481, 26.009, 0.66 ) }
    dend_5 { pt3dadd( 49.6548, -711.116, 21.8058, 0.66 ) }
    dend_5 { pt3dadd( 49.8258, -720.211, 19.909, 0.66 ) }
    dend_5 { pt3dadd( 49.9524, -723.605, 19.3101, 0.33 ) }
    dend_5 { pt3dadd( 50.0856, -725.87, 18.986, 1.33 ) }
    dend_5 { pt3dadd( 50.619, -731.239, 18.5043, 0.66 ) }
    dend_5 { pt3dadd( 51.601, -737.709, 18.267, 0.66 ) }
    dend_5 { pt3dadd( 52.433, -742.3, 18.2218, 0.66 ) }
    dend_5 { pt3dadd( 53.3693, -746.945, 18.3071, 0.66 ) }
    dend_5 { pt3dadd( 54.2243, -750.744, 18.3425, 0.66 ) }
    dend_5 { pt3dadd( 57.8755, -766.349, 18.8782, 0.66 ) }
    dend_5 { pt3dadd( 58.3865, -768.55, 19.0115, 0.33 ) }
    dend_5 { pt3dadd( 59.0552, -771.695, 19.2058, 1.33 ) }
    dend_5 { pt3dadd( 59.692, -774.817, 19.3329, 0.66 ) }
    dend_5 { pt3dadd( 60.1584, -777.271, 19.4288, 0.33 ) }
    dend_5 { pt3dadd( 61.3768, -784.047, 19.7422, 0.66 ) }
    dend_5 { pt3dadd( 61.7982, -787.546, 20.2893, 0.66 ) }
    dend_5 { pt3dadd( 62.2854, -792.168, 21.2489, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 29.4716, -346.742, 27.0726, 0.66 ) }
    dend_4 { pt3dadd( 27.4048, -352.691, 27.2198, 0.66 ) }
    dend_4 { pt3dadd( 25.7012, -357.74, 27.2762, 0.66 ) }
    dend_4 { pt3dadd( 24.5624, -361.53, 27.5525, 0.33 ) }
    dend_4 { pt3dadd( 23.0274, -366.859, 28.136, 0.33 ) }
    dend_4 { pt3dadd( 22.7804, -367.729, 28.2746, 0.66 ) }
    dend_4 { pt3dadd( 22.0378, -370.553, 28.7888, 0.33 ) }
    dend_4 { pt3dadd( 21.5543, -372.61, 29.2775, 0.66 ) }
    dend_4 { pt3dadd( 20.55, -377.486, 30.2847, 0.33 ) }
    dend_4 { pt3dadd( 20.4081, -378.257, 30.4649, 0.66 ) }
    dend_4 { pt3dadd( 19.4382, -383.476, 31.6702, 0.33 ) }
    dend_4 { pt3dadd( 19.068, -386.179, 32.377, 0.33 ) }
    dend_4 { pt3dadd( 18.802, -389.115, 33.2053, 0.66 ) }
    dend_4 { pt3dadd( 18.5788, -392.629, 34.2818, 0.33 ) }
    dend_4 { pt3dadd( 18.5157, -394.527, 34.8235, 0.33 ) }
    dend_4 { pt3dadd( 18.5539, -395.59, 35.1747, 0.66 ) }
    dend_4 { pt3dadd( 19.1501, -400.049, 37.2583, 0.33 ) }
    dend_4 { pt3dadd( 19.2528, -400.697, 37.6489, 0.66 ) }
    dend_4 { pt3dadd( 19.5972, -402.33, 38.7888, 0.33 ) }
    dend_4 { pt3dadd( 19.7605, -403.169, 39.3938, 0.33 ) }
    dend_4 { pt3dadd( 19.8935, -404.06, 39.945, 0.66 ) }
    dend_4 { pt3dadd( 20.1957, -407.403, 41.6718, 0.33 ) }
    dend_4 { pt3dadd( 20.1847, -409.455, 42.4099, 0.33 ) }
    dend_4 { pt3dadd( 20.1852, -410.231, 42.6356, 0.66 ) }
    dend_4 { pt3dadd( 20.2103, -411.738, 42.9405, 0.33 ) }
    dend_4 { pt3dadd( 20.209, -412.538, 43.0492, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 20.1935, -413.555, 43.1287, 0.33 ) }
    dend_4 { pt3dadd( 20.1611, -414.61, 43.1369, 0.66 ) }
    dend_4 { pt3dadd( 20.0919, -416.155, 43.1797, 0.33 ) }
    dend_4 { pt3dadd( 20.057, -416.719, 43.2081, 0.66 ) }
    dend_4 { pt3dadd( 19.7052, -421.387, 43.5593, 0.33 ) }
    dend_4 { pt3dadd( 19.6764, -421.685, 43.5839, 0.66 ) }
    dend_4 { pt3dadd( 19.5378, -422.759, 43.6831, 0.33 ) }
    dend_4 { pt3dadd( 19.4506, -423.318, 43.739, 0.66 ) }
    dend_4 { pt3dadd( 19.2785, -424.84, 44.0344, 0.33 ) }
    dend_4 { pt3dadd( 19.2268, -425.536, 44.2131, 0.66 ) }
    dend_4 { pt3dadd( 19.1887, -426.78, 44.5852, 0.33 ) }
    dend_4 { pt3dadd( 19.1776, -427.66, 44.8588, 0.66 ) }
    dend_4 { pt3dadd( 19.1984, -428.668, 45.1948, 0.33 ) }
    dend_4 { pt3dadd( 19.3943, -433.355, 46.9004, 0.33 ) }
    dend_4 { pt3dadd( 19.4888, -434.722, 47.4623, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 62.2854, -792.168, 21.2489, 0.66 ) }
    dend_7 { pt3dadd( 62.7288, -796.817, 20.1784, 0.66 ) }
    dend_7 { pt3dadd( 63.19, -799.217, 20.1321, 1.33 ) }
    dend_7 { pt3dadd( 63.6268, -801.277, 20.2659, 0.66 ) }
    dend_7 { pt3dadd( 64.0987, -803.87, 20.3899, 0.66 ) }
    dend_7 { pt3dadd( 65.2033, -809.452, 20.9061, 0.33 ) }
    dend_7 { pt3dadd( 66.6559, -816.2, 21.6672, 0.66 ) }
    dend_7 { pt3dadd( 68.7258, -824.906, 23.1596, 0.66 ) }
    dend_7 { pt3dadd( 69.8803, -829.238, 24.0279, 0.66 ) }
    dend_7 { pt3dadd( 71.2202, -834.066, 24.8514, 0.33 ) }
    dend_7 { pt3dadd( 72.8856, -840.246, 25.6585, 0.33 ) }
    dend_7 { pt3dadd( 73.2886, -841.995, 25.7789, 0.66 ) }
    dend_7 { pt3dadd( 73.5843, -843.448, 25.6057, 0.33 ) }
    dend_7 { pt3dadd( 73.7608, -844.708, 25.2768, 0.66 ) }
    dend_7 { pt3dadd( 74.7147, -852.062, 23.0283, 0.33 ) }
    dend_7 { pt3dadd( 75.1457, -855.132, 22.0734, 0.66 ) }
    dend_7 { pt3dadd( 75.4849, -858.044, 21.0828, 0.33 ) }
    dend_7 { pt3dadd( 76.4158, -866.315, 18.667, 0.33 ) }
    dend_7 { pt3dadd( 77.0491, -871.157, 17.4299, 0.66 ) }
    dend_7 { pt3dadd( 78.3267, -879.923, 15.5042, 0.33 ) }
    dend_7 { pt3dadd( 78.9728, -884.056, 14.8085, 0.66 ) }
    dend_7 { pt3dadd( 79.6532, -888.133, 14.2108, 1.33 ) }
    dend_7 { pt3dadd( 81.3323, -897.438, 13.1973, 0.33 ) }
    dend_7 { pt3dadd( 82.205, -902.042, 12.9905, 0.33 ) }
    dend_7 { pt3dadd( 82.5559, -903.852, 12.9546, 0.66 ) }
    dend_7 { pt3dadd( 83.4143, -908.413, 13.0533, 0.33 ) }
    dend_7 { pt3dadd( 84.5256, -914.534, 13.3126, 0.33 ) }
    dend_7 { pt3dadd( 84.9696, -916.768, 13.4682, 1.33 ) }
    dend_7 { pt3dadd( 86.2116, -923.184, 13.9242, 0.33 ) }
    dend_7 { pt3dadd( 86.5608, -925.408, 14.139, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 62.2854, -792.168, 21.2489, 0.66 ) }
    dend_6 { pt3dadd( 61.3131, -793.866, 19.4575, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 86.5608, -925.408, 14.139, 0.66 ) }
    dend_11 { pt3dadd( 84.5159, -925.122, 14.2544, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 86.5608, -925.408, 14.139, 0.66 ) }
    dend_8 { pt3dadd( 86.778, -926.849, 13.9489, 0.66 ) }
    dend_8 { pt3dadd( 87.7451, -933.266, 13.1023, 0.33 ) }
    dend_8 { pt3dadd( 88.0527, -935.307, 12.833, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 88.0527, -935.307, 12.833, 0.33 ) }
    dend_10 { pt3dadd( 93.8736, -946.106, 19.6489, 0.33 ) }
    dend_10 { pt3dadd( 94.4347, -947.156, 20.2327, 1.33 ) }
    dend_10 { pt3dadd( 96.0446, -950.092, 21.6967, 0.33 ) }
    dend_10 { pt3dadd( 96.389, -950.702, 21.9226, 0.66 ) }
    dend_10 { pt3dadd( 98.0927, -953.604, 22.7069, 0.33 ) }
    dend_10 { pt3dadd( 98.6097, -954.485, 22.9449, 0.66 ) }
    dend_10 { pt3dadd( 99.0529, -955.285, 22.7827, 0.33 ) }
    dend_10 { pt3dadd( 99.6733, -956.284, 22.5316, 0.66 ) }
    dend_10 { pt3dadd( 101.987, -959.391, 21.4482, 0.33 ) }
    dend_10 { pt3dadd( 102.911, -960.514, 20.9726, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 88.0527, -935.307, 12.833, 0.33 ) }
    dend_9 { pt3dadd( 88.9686, -946.507, 16.2975, 0.33 ) }
    dend_9 { pt3dadd( 89.468, -952.615, 18.1869, 0.33 ) }
    dend_9 { pt3dadd( 89.5465, -953.576, 18.4839, 0.66 ) }
    dend_9 { pt3dadd( 90.062, -959.88, 20.434, 0.33 ) }
    dend_9 { pt3dadd( 90.1308, -960.72, 20.694, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 11
    dend_1 nseg = 3
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_5 nseg = 23
    dend_4 nseg = 5
    dend_7 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L4_BP_7d938499d8_0_0


