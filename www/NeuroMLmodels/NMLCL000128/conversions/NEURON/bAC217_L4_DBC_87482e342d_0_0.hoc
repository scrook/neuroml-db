// Cell: bAC217_L4_DBC_87482e342d_0_0
/*
{
  "id" : "bAC217_L4_DBC_87482e342d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.03775, -11.4909, 0.0, 3.43439", "1.89325, -10.3873, 0.0, 4.10946", "1.74876, -9.28361, 0.0, 5.49512", "1.60426, -8.17996, 0.0, 6.92062", "1.45977, -7.07631, 0.0, 8.33776", "1.31528, -5.97266, 0.0, 9.37588", "1.17078, -4.86901, 0.0, 10.388", "1.02629, -3.76536, 0.0, 11.4001", "0.881794, -2.66171, 0.0, 12.0337", "0.7373, -1.55806, 0.0, 11.8609", "0.592806, -0.454415, 0.0, 11.675", "0.448312, 0.649234, 0.0, 11.6509", "0.303818, 1.75288, 0.0, 11.6321", "0.159324, 2.85653, 0.0, 10.7321", "0.0148298, 3.96018, 0.0, 9.70998", "-0.129664, 5.06383, 0.0, 8.74071", "-0.274158, 6.16748, 0.0, 7.95018", "-0.418652, 7.27113, 0.0, 6.7513", "-0.563146, 8.37478, 0.0, 5.22686", "-0.70764, 9.47842, 0.0, 3.48033", "-0.852134, 10.5821, 0.0, 2.02048" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.596014, -11.6449, -2.34, 2.22", "-1.02636, -15.4198, -0.822263, 2.22", "-1.40297, -19.2716, 0.603821, 2.49", "-1.96824, -25.9623, 2.87351, 2.49", "-2.29898, -32.4277, 4.74016, 2.49", "-2.39192, -35.3617, 5.48663, 1.94", "-2.43352, -38.524, 6.20422, 1.38", "-2.34341, -42.3705, 6.96571, 1.11", "-2.22508, -44.9649, 7.36021, 0.83", "-1.90203, -51.4734, 7.95349, 1.11", "-1.79845, -54.0995, 7.9876, 1.11", "-1.66894, -57.2422, 7.94786, 1.38", "-1.52267, -60.25, 7.8608, 0.83", "-1.36853, -62.8096, 7.80058, 1.66", "-1.18697, -65.2319, 7.76262, 1.11", "-0.749438, -70.4768, 7.62991, 1.66", "-0.486175, -73.3513, 7.55036, 1.38", "-0.10875, -77.0484, 7.43853, 1.94", "0.385761, -80.9467, 7.31176, 1.38", "1.06651, -84.9974, 7.17442, 1.38", "2.10209, -89.9939, 7.00533, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.59602, 9.47005, -0.86, 2.22", "-1.00672, 14.2369, -0.83273, 1.94", "-0.673029, 17.9643, -0.715005, 1.94", "-0.334968, 23.5436, -0.362651, 1.94", "-0.245522, 25.5781, -0.208419, 1.38", "0.0307452, 30.1766, 0.123239, 2.22", "0.301895, 34.6899, 0.448753, 1.94", "0.654725, 40.7932, 0.913465, 1.94", "0.857684, 45.1906, 1.34248, 1.94", "0.93963, 49.4464, 1.89297, 1.94", "1.00119, 55.2115, 2.64595, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999993435552117,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.852134, 10.5821, 0.0, 0.55", "-2.79938, 25.4552, 0.0, 0.55", "-4.74662, 40.3282, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.10209, -89.9939, 7.00533, 0.55", "2.8112, -91.3446, 7.43566, 0.55", "3.51262, -92.4996, 7.97875, 0.55", "4.52804, -94.0697, 8.95528, 0.28", "5.71328, -95.5667, 10.0024, 0.55", "7.15142, -97.2004, 11.1675, 0.28", "8.36171, -98.4721, 12.203, 1.11", "10.289, -100.378, 13.9485, 0.28", "11.5309, -101.522, 15.2816, 0.83", "13.3637, -103.087, 17.3986, 0.83", "14.4536, -103.994, 18.7188, 0.83", "16.2907, -105.55, 20.9778, 0.83", "17.2458, -106.353, 22.1615, 1.11", "20.1864, -108.979, 25.5902, 0.28", "20.8434, -109.611, 26.2696, 0.28", "21.4164, -110.189, 26.807, 0.55", "22.2768, -111.024, 27.4504, 0.55", "24.1132, -112.722, 28.4137, 0.55", "25.8632, -114.2, 29.0901, 0.55", "27.7944, -115.781, 29.5555, 0.83", "29.611, -117.132, 29.9688, 1.11", "31.198, -118.281, 30.3342, 0.55", "32.0616, -118.924, 30.5441, 1.38", "33.1885, -119.756, 30.8349, 0.55", "34.4658, -120.541, 31.1573, 1.11", "37.2074, -122.078, 31.778, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.10209, -89.9939, 7.00533, 1.38", "1.77122, -91.2688, 6.95937, 1.38", "0.885736, -95.0066, 7.13789, 1.38", "0.333909, -97.3359, 7.24914, 1.11", "-0.865417, -102.398, 7.49093, 1.66", "-1.6297, -105.624, 7.64501, 2.22", "-2.01941, -107.269, 7.72357, 2.22", "-3.09041, -111.995, 7.80293, 1.66" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.00119, 55.2115, 2.64595, 1.38", "0.908199, 58.1604, 2.6495, 1.38", "0.916373, 60.1596, 2.63362, 1.38", "0.978843, 63.0815, 2.59021, 1.11", "1.15772, 67.5764, 2.57746, 1.38", "1.23847, 69.8217, 2.56557, 1.38", "1.29232, 73.7433, 2.56487, 1.38", "1.30151, 78.7061, 2.56701, 1.38", "1.21988, 82.3223, 2.5724, 1.38", "1.1087, 85.6886, 2.58501, 1.38", "0.906985, 88.8324, 2.60769, 1.38", "0.325342, 94.0796, 2.66363, 1.66", "-0.137476, 97.0932, 2.70615, 1.38", "-0.730157, 100.522, 2.65984, 1.38", "-1.41935, 104.461, 2.48685, 1.38", "-1.91128, 107.603, 2.25577, 1.38", "-2.10918, 109.271, 2.11406, 1.38", "-2.32566, 111.852, 1.87223, 1.11", "-2.57128, 115.756, 1.52118, 1.11", "-2.64678, 119.869, 1.16816, 1.11", "-2.63868, 124.022, 0.859103, 1.38", "-2.58894, 126.811, 0.724149, 1.11", "-2.55586, 129.489, 0.670878, 1.38", "-2.54024, 131.215, 0.724621, 1.38", "-2.50416, 133.973, 1.03295, 1.38", "-2.50347, 137.923, 1.60211, 1.94", "-2.48789, 140.012, 1.93668, 1.66", "-2.47476, 140.889, 2.07184, 1.66", "-2.43453, 143.628, 2.45463, 1.66", "-2.37773, 147.947, 3.01705, 1.66", "-2.39899, 150.201, 3.28498, 1.38", "-2.4808, 153.758, 3.64583, 1.66", "-2.53326, 156.894, 3.87592, 1.11", "-2.57428, 160.369, 4.08674, 1.11", "-2.60986, 162.304, 4.1611, 1.11", "-2.62747, 164.441, 4.21659, 1.11", "-2.59894, 166.041, 4.27278, 1.11", "-2.43139, 169.437, 4.41952, 1.38", "-2.23647, 172.024, 4.54428, 1.11", "-2.07523, 173.963, 4.63246, 1.38", "-1.89373, 176.165, 4.72126, 1.38", "-1.73294, 178.675, 4.80374, 0.83", "-1.62123, 181.717, 4.87972, 1.38", "-1.61955, 184.144, 4.91485, 0.83", "-1.67345, 186.609, 4.91725, 1.38", "-1.78698, 188.552, 4.92084, 1.38", "-2.05537, 191.74, 4.90308, 1.38", "-2.16123, 193.146, 4.88609, 1.38", "-2.27204, 195.329, 4.84664, 1.11", "-2.30395, 198.043, 4.78398, 1.11", "-2.21392, 201.963, 4.67422, 1.66", "-2.04281, 204.484, 4.59056, 1.11", "-1.94642, 205.481, 4.61275, 1.11", "-1.82233, 207.213, 4.7344, 1.38", "-1.70169, 209.402, 4.98414, 1.38", "-1.63894, 211.871, 5.35949, 1.94", "-1.67915, 214.428, 5.82621, 1.94", "-1.93535, 218.601, 6.62619, 1.11", "-2.18908, 220.926, 7.04282, 1.11", "-2.52435, 223.128, 7.40916, 1.38", "-3.0222, 225.778, 7.79076, 1.38", "-3.45528, 227.994, 8.03814, 1.11", "-3.8729, 230.431, 8.20147, 0.83", "-4.27994, 233.218, 8.22902, 0.83", "-4.49917, 234.825, 8.24288, 0.83", "-4.88603, 237.618, 8.26332, 1.11", "-5.16997, 240.07, 8.25734, 1.11", "-5.45978, 242.594, 8.23072, 1.38", "-5.91048, 246.433, 8.17272, 1.38", "-6.15742, 248.784, 8.12813, 1.11", "-6.43547, 251.574, 8.06847, 1.38", "-6.69224, 253.862, 7.98528, 0.83", "-7.09983, 256.919, 7.8547, 0.83", "-7.4081, 259.344, 7.72238, 1.38", "-7.48794, 260.435, 7.65136, 1.38", "-7.60803, 262.433, 7.50635, 1.11", "-7.81351, 265.737, 7.24841, 1.38", "-7.91467, 267.747, 7.08525, 1.11", "-7.93421, 269.723, 6.90328, 1.11", "-7.93228, 271.7, 6.7193, 1.11", "-7.93537, 274.166, 6.48923, 1.11", "-7.91587, 278.408, 6.07423, 1.11", "-7.86726, 280.897, 5.83618, 1.11", "-7.83808, 283.646, 5.63682, 1.38", "-7.85269, 286.467, 5.51516, 1.38", "-7.90547, 289.106, 5.46753, 0.83", "-7.93015, 291.135, 5.49109, 1.38", "-7.93294, 293.051, 5.57787, 1.38", "-7.94678, 295.654, 5.76587, 1.11", "-7.93938, 297.383, 5.9268, 0.55", "-7.84043, 299.105, 6.09379, 1.11", "-7.73134, 300.733, 6.24783, 1.11", "-7.60593, 302.474, 6.37996, 0.83", "-7.46313, 304.313, 6.4505, 0.83", "-7.33672, 305.984, 6.44824, 0.83", "-7.19923, 309.028, 6.44634, 1.11", "-7.10721, 311.015, 6.41078, 1.66", "-7.09012, 312.926, 6.35532, 1.66", "-7.176, 315.403, 6.27428, 0.83", "-7.26602, 317.392, 6.19416, 0.83", "-7.36058, 320.199, 6.06977, 1.11", "-7.52034, 323.54, 5.91347, 0.83", "-7.67352, 327.272, 5.74099, 0.83", "-7.75948, 329.407, 5.6411, 0.83", "-7.95393, 333.821, 5.43888, 1.38", "-8.19374, 338.232, 5.25407, 1.38", "-8.31364, 340.197, 5.18453, 1.11", "-8.60098, 343.245, 5.11614, 1.11", "-8.80597, 345.181, 5.07205, 0.83", "-9.01245, 346.541, 5.04565, 0.83", "-9.49158, 348.819, 5.11736, 1.38", "-9.74209, 350.003, 5.24475, 1.38", "-10.1712, 352.779, 5.66628, 0.83", "-10.3625, 354.675, 6.01956, 0.83", "-10.5653, 357.703, 6.46487, 0.83", "-10.6595, 360.533, 6.90581, 0.83", "-10.6585, 364.167, 7.51126, 1.38", "-10.6182, 366.634, 7.94273, 1.38", "-10.4714, 368.351, 8.259, 1.38", "-9.86866, 372.33, 8.95115, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.00119, 55.2115, 2.64595, 1.11", "1.2482, 58.0178, -0.215768, 1.11", "1.33742, 58.8848, -0.980526, 1.11", "1.44615, 60.3781, -2.32541, 1.11", "1.67973, 64.659, -6.03805, 1.11", "1.74102, 66.2457, -7.25759, 1.11", "1.78559, 68.4741, -8.82055, 0.83", "1.76569, 69.8066, -9.61359, 0.83", "1.72128, 73.6146, -11.6395, 1.11", "1.7033, 75.3561, -12.3909, 1.11", "1.55497, 78.0929, -13.1787, 1.11", "1.30448, 80.6001, -13.6857, 1.11", "1.08982, 82.3478, -13.8648, 1.38", "0.96146, 83.5736, -13.8314, 1.38", "0.854406, 84.9947, -13.6521, 1.11", "0.662745, 87.7027, -13.295, 1.11", "0.495848, 90.5649, -12.9893, 0.83", "0.477801, 91.0176, -12.9288, 0.83", "0.413296, 93.7798, -12.6473, 1.66", "0.343, 96.1472, -12.5438, 0.83", "0.328355, 96.6022, -12.5537, 0.83", "0.291693, 98.5326, -12.7142, 1.66", "0.255552, 99.7463, -12.8689, 1.66", "0.197122, 101.283, -13.0157, 1.11", "0.0829803, 103.093, -13.1611, 1.11", "-0.0532484, 105.035, -13.2446, 1.11", "-0.193671, 107.352, -13.3629, 1.66", "-0.313141, 109.541, -13.4464, 1.66", "-0.45651, 111.829, -13.5813, 0.83", "-0.58181, 113.842, -13.7812, 0.83", "-0.646387, 115.264, -13.9869, 0.83", "-0.689891, 117.304, -14.3319, 1.66", "-0.706628, 119.256, -14.6977, 0.55", "-0.717711, 121.161, -15.0492, 0.55", "-0.682942, 123.288, -15.4002, 1.38", "-0.604302, 125.061, -15.6154, 1.94", "-0.504756, 127.2, -15.798, 0.83", "-0.460875, 128.391, -15.8528, 0.83", "-0.42084, 130.4, -15.9029, 1.94", "-0.392722, 132.928, -15.8545, 1.94", "-0.406806, 134.575, -15.8008, 1.11", "-0.414596, 136.508, -15.626, 1.11", "-0.431268, 138.259, -15.4069, 1.11", "-0.43916, 139.268, -15.2488, 1.11", "-0.456398, 140.3, -15.0832, 1.11", "-0.589115, 144.139, -14.4606, 2.22", "-0.707807, 148.532, -13.773, 0.83", "-0.721256, 149.813, -13.5971, 0.83", "-0.695126, 151.545, -13.4022, 1.11", "-0.655668, 153.703, -13.2348, 0.55", "-0.680358, 155.381, -13.1827, 2.22", "-0.730416, 156.431, -13.2404, 1.94", "-0.809196, 157.952, -13.4668, 0.83", "-0.85734, 159.573, -13.7019, 0.83", "-0.87542, 161.202, -13.9155, 0.83", "-0.91798, 162.923, -14.0869, 1.66", "-0.979709, 164.815, -14.2587, 0.83", "-1.01831, 165.898, -14.3349, 0.83", "-1.05295, 166.817, -14.4009, 1.11", "-1.12581, 168.236, -14.5144, 0.83", "-1.22301, 170.717, -14.74, 0.83", "-1.24311, 171.166, -14.7806, 0.83", "-1.41917, 173.642, -14.9827, 1.94", "-1.5543, 175.489, -15.1357, 0.55", "-1.69463, 177.575, -15.3556, 0.55", "-1.72404, 177.95, -15.4116, 0.55", "-1.98827, 180.921, -15.9407, 2.22", "-2.14503, 183.189, -16.3663, 0.83", "-2.18786, 184.217, -16.5516, 0.83", "-2.22583, 186.649, -16.9492, 1.38", "-2.18126, 188.794, -17.2769, 0.55", "-2.11018, 190.697, -17.5242, 0.55", "-1.94116, 193.343, -17.8807, 0.83", "-1.61328, 197.064, -18.1718, 0.83", "-1.50503, 198.111, -18.1984, 2.49", "-1.27602, 200.131, -18.1331, 2.49", "-0.923071, 203.273, -17.9141, 0.83", "-0.732586, 205.042, -17.7691, 0.83", "-0.526206, 208.553, -17.4547, 0.83", "-0.485691, 209.593, -17.3568, 0.83", "-0.490272, 211.853, -17.1634, 1.66", "-0.531728, 214.137, -16.9965, 0.83", "-0.573352, 215.806, -16.8982, 0.83", "-0.647852, 218.301, -16.7954, 0.83", "-0.693158, 220.228, -16.7973, 1.94", "-0.694717, 223.416, -16.7987, 0.83", "-0.646344, 226.704, -16.799, 0.83", "-0.610244, 228.179, -16.7988, 0.83", "-0.570826, 230.037, -16.7987, 1.11", "-0.544144, 231.476, -16.7987, 2.49", "-0.559862, 233.941, -16.8001, 0.83", "-0.596124, 234.79, -16.8013, 0.83", "-0.699699, 236.223, -16.8042, 0.83", "-0.874739, 238.598, -16.8092, 0.83", "-1.01922, 240.918, -16.8622, 0.83", "-1.2029, 243.634, -16.9717, 1.11", "-1.33355, 246.01, -17.1266, 1.66", "-1.40706, 248.287, -17.3016, 0.83", "-1.43974, 250.149, -17.4749, 0.83", "-1.3828, 252.291, -17.7048, 0.83", "-1.29935, 253.865, -17.8908, 0.83", "-1.2159, 255.598, -18.1113, 0.83", "-1.08338, 258.307, -18.4526, 1.66", "-0.988119, 260.459, -18.7159, 0.83", "-0.942694, 261.599, -18.8393, 0.83", "-0.86679, 264.364, -19.0576, 1.38", "-0.75234, 266.959, -19.2516, 0.83", "-0.701068, 268.399, -19.3482, 0.83", "-0.67226, 269.262, -19.4163, 1.66", "-0.639398, 271.009, -19.5354, 1.66", "-0.685526, 272.771, -19.6525, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.74662, 40.3282, 0.0, 0.28", "-6.69386, 55.2013, 0.0, 0.28", "-8.6411, 70.0744, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "37.2074, -122.078, 31.778, 0.83", "38.4962, -121.981, 33.3469, 0.83", "39.3279, -121.893, 34.4671, 0.28", "41.3299, -121.682, 37.1635, 0.55", "42.1191, -121.599, 38.2266, 0.55", "43.2573, -121.479, 39.7596, 0.55", "46.9165, -121.092, 44.6883, 0.28", "47.364, -121.09, 45.4193, 0.28" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "37.2074, -122.078, 31.778, 0.55", "38.0445, -123.453, 33.4693, 0.55", "38.2609, -123.685, 33.9383, 0.83", "38.7722, -124.326, 35.1423, 0.28", "38.9599, -124.611, 35.6852, 0.83", "39.3358, -125.153, 36.743, 0.83", "40.2613, -126.441, 39.2523, 0.83", "41.5633, -127.941, 42.3505, 0.83", "42.0259, -128.44, 43.6058, 0.83", "43.1451, -129.356, 46.8539, 1.11", "43.4316, -129.547, 47.9997, 0.83", "43.5006, -129.566, 48.4311, 0.83", "43.5568, -129.334, 49.9963, 0.83", "43.2755, -128.318, 53.0318, 0.83", "43.0141, -127.338, 55.1235, 0.83", "42.5295, -125.734, 57.6198, 0.83", "42.1968, -124.916, 58.8499, 1.11", "41.5917, -123.65, 60.6749, 0.28", "41.4426, -123.406, 61.0108, 0.55", "40.8443, -122.254, 62.2456, 0.28", "40.2696, -121.657, 62.9309, 1.11" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.09041, -111.995, 7.80293, 1.11", "-3.61594, -112.991, 8.77154, 1.11", "-4.18938, -114.37, 9.94482, 1.11", "-5.49431, -118.263, 12.7288, 1.38", "-6.09484, -120.59, 14.3473, 1.38", "-6.53725, -122.305, 15.5397, 1.66", "-7.23885, -125.024, 17.4306, 1.11", "-7.54834, -126.603, 18.4706, 1.11", "-7.8423, -129.073, 19.9106, 1.38", "-8.06578, -133.315, 21.9198, 2.77" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.09041, -111.995, 7.80293, 1.38", "-3.17127, -116.487, 7.93187, 1.38", "-3.13919, -120.118, 8.10244, 1.94", "-3.10623, -122.759, 8.01327, 1.38", "-3.03374, -127.147, 7.24911, 1.94", "-2.88841, -130.558, 6.35191, 0.83", "-2.74773, -132.624, 5.6661, 0.83", "-2.42768, -135.276, 4.60414, 1.38", "-1.69, -139.271, 2.53165, 1.94", "-0.619427, -143.517, -0.277605, 0.83", "-0.219023, -144.822, -1.33708, 0.83", "0.813994, -148.008, -4.46079, 1.11", "1.44313, -149.834, -6.34218, 0.55", "1.73288, -150.792, -7.38357, 0.55", "2.23953, -152.766, -9.49898, 0.55", "2.40361, -153.79, -10.6809, 0.83", "2.64402, -156.085, -13.5083, 0.55", "2.78577, -158.348, -16.5444, 1.66", "2.83096, -161.916, -21.4246, 0.55", "2.75617, -163.461, -23.4827, 1.66", "2.42494, -166.791, -27.6921, 0.55", "2.29082, -168.251, -29.5707, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.86866, 372.33, 8.95115, 0.83", "-9.60602, 373.865, 7.84733, 0.83", "-9.39729, 375.559, 6.62171, 0.83", "-9.13094, 377.775, 5.20127, 0.55", "-8.80121, 379.971, 3.8975, 0.83", "-8.46253, 382.189, 2.70264, 0.28", "-8.31579, 383.218, 2.19899, 0.55", "-8.26163, 383.924, 1.85932, 0.55", "-8.08931, 385.985, 0.990498, 1.11", "-7.92236, 387.747, 0.428987, 0.55", "-7.78176, 389.262, 0.031158, 1.11", "-7.67349, 390.572, -0.236564, 1.11", "-7.53683, 392.544, -0.556337, 0.28", "-7.42546, 395.107, -1.05532, 0.55", "-7.39247, 398.111, -1.7061, 0.55", "-7.37087, 399.649, -1.99259, 0.55", "-7.34397, 400.777, -2.17758, 0.28", "-7.27503, 402.421, -2.31154, 0.83", "-7.13742, 405.639, -2.27236, 1.38", "-7.13025, 407.172, -2.17267, 1.38", "-7.08666, 410.681, -1.7681, 0.83", "-7.08521, 412.354, -1.5289, 0.83", "-7.10973, 416.99, -0.685913, 0.83", "-7.13584, 418.585, -0.358056, 0.83", "-7.18385, 421.135, 0.310639, 0.83", "-7.20636, 421.783, 0.486554, 0.83", "-7.28326, 424.008, 1.07183, 1.38", "-7.29632, 425.567, 1.43633, 0.55", "-7.28126, 427.452, 1.74186, 0.55", "-7.19352, 428.489, 1.86327, 0.55", "-7.08563, 429.248, 1.92224, 0.28", "-6.71164, 431.35, 1.99403, 0.83", "-6.33702, 432.971, 1.94555, 0.55", "-5.86055, 434.714, 1.82123, 0.83", "-5.15817, 437.217, 1.59816, 0.55", "-4.76533, 438.671, 1.45307, 1.66", "-4.17824, 440.946, 1.21174, 1.66", "-3.59865, 443.435, 0.945812, 0.83", "-3.18995, 445.439, 0.739917, 0.83", "-2.91716, 447.085, 0.588766, 0.83", "-2.80699, 448.07, 0.516371, 0.28", "-2.7005, 449.738, 0.448429, 1.11", "-2.71066, 452.246, 0.410608, 0.55", "-2.77582, 453.691, 0.419951, 0.55", "-2.86195, 455.2, 0.407528, 0.55", "-2.93994, 456.197, 0.376879, 0.55", "-3.12506, 457.64, 0.297813, 1.11", "-3.39279, 459.229, 0.177059, 0.28", "-3.52713, 459.973, 0.112118, 0.55", "-3.73653, 461.743, -0.0256574, 0.55", "-3.91348, 464.563, -0.21499, 0.55", "-3.91765, 465.556, -0.261967, 0.83", "-3.86073, 467.129, -0.350537, 0.83", "-3.7195, 469.384, -0.431705, 0.83", "-3.51413, 471.521, -0.434619, 0.83", "-3.26229, 473.163, -0.395149, 0.83", "-2.42443, 476.763, -0.234253, 1.11", "-1.90748, 478.605, -0.132259, 0.28", "-1.53241, 479.695, -0.075006, 0.55", "-1.1103, 480.878, 0.112683, 0.55", "-0.746817, 481.88, 0.37818, 0.55", "-0.4529, 482.555, 0.638515, 0.55", "0.671752, 484.606, 1.59707, 0.55", "1.45056, 486.062, 2.26582, 0.83", "3.42454, 489.746, 3.60526, 0.55", "3.74401, 490.378, 3.82232, 0.83", "4.32177, 491.634, 4.21729, 0.83", "4.98205, 493.211, 4.63766, 0.55", "5.53245, 494.657, 4.91959, 0.83", "6.31371, 497.007, 5.16835, 0.83", "6.93063, 499.077, 5.25877, 0.55", "7.11209, 499.84, 5.33552, 0.55", "7.44882, 501.552, 5.58719, 0.55", "7.58117, 502.381, 5.74456, 0.83", "7.8143, 503.841, 6.0645, 0.83", "8.12012, 506.431, 6.59343, 0.55", "8.27474, 507.691, 6.79451, 0.55", "8.48777, 509.584, 7.10783, 0.55", "8.63755, 511.142, 7.35332, 0.55", "8.94664, 514.038, 7.8015, 0.55", "9.17804, 516.087, 8.06319, 0.83", "9.30518, 517.148, 8.1417, 1.11", "9.47754, 519.259, 8.2954, 0.55", "9.56127, 522.283, 8.55725, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.86866, 372.33, 8.95115, 0.55", "-10.9703, 374.942, 8.50578, 0.55", "-11.6955, 376.817, 8.25111, 0.55", "-12.2334, 378.409, 8.07834, 0.55", "-12.6741, 379.846, 7.94224, 0.55", "-13.5481, 382.79, 7.69207, 0.55", "-14.0541, 384.498, 7.55121, 0.83", "-14.7151, 386.646, 7.44997, 0.83", "-15.3677, 388.879, 7.34295, 0.83", "-15.8114, 390.748, 7.25962, 0.55", "-16.1149, 392.317, 7.19687, 0.55", "-16.5441, 394.472, 7.13508, 0.83", "-16.8926, 396.206, 7.09933, 0.83", "-17.4956, 398.926, 7.04746, 0.83", "-17.9033, 400.705, 7.02301, 0.83", "-18.2018, 402.09, 7.02046, 0.55", "-18.5322, 403.879, 7.03994, 0.83", "-18.8345, 405.866, 7.1154, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.685526, 272.771, -19.6525, 0.55", "-0.726436, 274.216, -19.6585, 0.55", "-0.785611, 276.306, -19.6673, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.685526, 272.771, -19.6525, 0.55", "-2.82562, 273.03, -18.8518, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "47.364, -121.09, 45.4193, 0.28", "48.9107, -123.664, 43.7153, 0.28", "49.1958, -124.138, 43.4012, 1.11", "50.5493, -126.391, 41.9098, 0.28", "50.6854, -126.617, 41.7599, 1.11" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "47.364, -121.09, 45.4193, 1.66", "47.3406, -120.241, 46.3697, 1.66", "47.1055, -117.906, 48.4546, 0.83", "46.8392, -115.573, 50.4141, 0.28", "46.7019, -114.782, 51.0178, 0.55", "46.0981, -112.052, 52.8595, 0.28", "45.7229, -110.417, 53.9199, 0.83", "45.1501, -108.298, 55.2796, 0.83", "44.7373, -106.961, 56.0239, 0.28", "44.1085, -105.026, 56.9796, 0.55", "43.3637, -103.279, 57.6902, 0.55", "42.2452, -101.163, 58.3675, 0.28", "41.85, -100.534, 58.5466, 0.83", "40.7077, -98.7784, 59.0191, 0.28", "39.3004, -96.7358, 59.4808, 0.55", "37.5172, -94.2723, 59.9869, 0.28", "36.1609, -92.5792, 60.2573, 1.11", "35.0468, -91.3247, 60.3305, 0.28", "33.597, -89.7275, 60.3635, 0.83" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-8.06578, -133.315, 21.9198, 0.83", "-6.54951, -139.494, 22.662, 0.83", "-5.69277, -142.515, 23.005, 0.83", "-4.30176, -147.88, 23.5791, 0.83", "-3.4846, -151.844, 24.2807, 0.55", "-2.94839, -155.508, 25.2048, 0.83", "-2.6194, -159.02, 26.3591, 0.83", "-2.50138, -161.613, 27.6035, 0.83", "-2.58856, -165.849, 30.0566, 0.83", "-3.00371, -170.943, 33.3847, 0.83", "-3.49534, -174.269, 35.6367, 0.83", "-4.56599, -179.556, 39.412, 1.11", "-5.50236, -183.515, 42.3069, 0.55", "-6.11927, -186.364, 44.2633, 0.55", "-6.79021, -189.937, 46.4421, 0.83", "-7.18358, -192.276, 47.5559, 0.83", "-7.4615, -194.318, 48.3694, 0.28", "-7.75088, -196.465, 49.1159, 0.55", "-8.33861, -201.014, 50.5228, 1.11", "-8.66036, -204.221, 51.4089, 0.28", "-8.83901, -206.033, 51.8596, 0.55", "-9.49547, -211.201, 53.0483, 0.28", "-9.62489, -212.191, 53.2896, 0.83", "-10.0564, -216.154, 54.3109, 0.83", "-10.4824, -220.268, 55.3896, 0.28", "-10.5181, -220.884, 55.5341, 1.11", "-10.6119, -223.655, 56.0527, 1.11", "-10.8315, -227.776, 56.6328, 0.55", "-10.9639, -230.968, 57.1614, 1.11", "-11.0232, -233.624, 57.7019, 1.11", "-11.0627, -235.473, 58.2148, 1.11", "-11.135, -237.92, 58.9046, 0.28", "-11.0999, -239.43, 59.4427, 0.55", "-10.958, -241.764, 60.371, 0.28", "-10.8403, -242.918, 61.0261, 0.83", "-10.5845, -245.163, 62.4886, 0.28", "-10.441, -246.352, 63.2688, 0.83", "-9.75823, -250.815, 66.1091, 0.28", "-9.58301, -252.195, 66.8718, 0.83", "-9.23462, -256.1, 68.6617, 0.55", "-9.088, -258.74, 69.7042, 1.11", "-9.0195, -261.614, 70.6075, 0.28", "-9.00983, -263.167, 70.977, 0.83", "-9.1522, -267.384, 71.5803, 0.83", "-9.18582, -269.649, 72.0002, 0.28", "-9.1445, -271.041, 72.2792, 0.28", "-9.00527, -272.588, 72.7429, 0.83", "-8.70893, -274.451, 73.4544, 0.83", "-8.16676, -276.933, 74.5525, 0.55", "-6.93736, -281.432, 76.7134, 0.28", "-6.64234, -282.684, 77.3381, 1.11", "-6.26966, -284.531, 78.1927, 0.83", "-5.62937, -288.309, 79.7333, 0.28", "-5.52977, -288.895, 79.9212, 0.55", "-5.04626, -291.49, 80.478, 0.55", "-4.41806, -294.318, 80.75, 0.55", "-3.87871, -296.639, 80.8779, 0.55", "-3.43953, -298.615, 80.9255, 0.55", "-2.90248, -301.178, 80.9908, 0.55", "-2.11559, -304.423, 81.0443, 0.55", "-1.26203, -307.563, 81.0707, 0.55", "-0.377294, -310.631, 81.0729, 0.55", "0.214852, -312.835, 81.1312, 0.28", "0.858533, -315.51, 81.2211, 0.83", "1.54603, -319.268, 81.3797, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-8.06578, -133.315, 21.9198, 1.38", "-10.9417, -134.034, 22.6502, 1.38", "-14.4023, -134.9, 23.5291, 1.38" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.29082, -168.251, -29.5707, 0.55", "2.40853, -173.385, -30.0693, 0.55", "2.38036, -175.929, -30.4127, 0.55", "2.35447, -178.972, -30.8797, 2.49", "2.31628, -181.425, -31.3551, 0.55", "2.25763, -183.794, -31.8609, 0.55", "2.18341, -186.793, -32.5009, 0.83", "1.9227, -189.386, -33.1165, 0.28", "1.82852, -190.598, -33.4626, 0.55", "1.70156, -192.539, -34.1217, 0.28", "1.62835, -193.751, -34.5676, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.29082, -168.251, -29.5707, 0.83", "4.9545, -168.722, -30.1243, 0.83", "7.31281, -168.959, -30.4445, 0.83", "9.86516, -169.121, -30.7878, 0.55", "13.0304, -169.356, -31.1993, 0.55", "14.1038, -169.51, -31.3906, 0.83", "16.2684, -170.049, -31.7743, 0.55", "18.1867, -170.729, -32.0779, 1.11", "20.1573, -171.757, -32.3747, 0.28", "21.5172, -172.704, -32.5683, 0.83", "24.122, -174.987, -33.0702, 0.28", "26.5231, -177.402, -33.6759, 1.38", "27.9152, -178.936, -33.9368, 0.55", "28.9742, -180.216, -34.0186, 0.55", "30.4758, -182.17, -33.8055, 0.83", "31.5533, -183.655, -33.4451, 0.28", "32.9955, -185.632, -32.7977, 0.55", "35.9112, -189.5, -31.102, 0.28", "37.3144, -191.224, -30.175, 0.83", "39.5823, -193.705, -28.5848, 0.55", "40.3922, -194.482, -27.9856, 0.55", "42.8619, -196.623, -26.1769, 1.94", "45.8377, -199.125, -24.1842, 0.55", "47.2341, -200.207, -23.3656, 0.55", "48.4713, -201.094, -22.6396, 0.55", "50.9391, -203.005, -21.2374, 0.28", "51.7774, -203.784, -20.7522, 1.38", "53.3869, -205.636, -19.7686, 1.38", "55.4306, -208.663, -18.8405, 0.55", "56.3001, -210.287, -18.0557, 0.55", "57.8712, -213.576, -16.185, 1.11", "59.101, -216.435, -14.5372, 0.28", "59.3185, -216.987, -14.1977, 0.83", "60.412, -220.005, -12.1357, 0.28", "63.5733, -229.881, -4.91067, 0.83", "63.9971, -231.247, -3.439, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-18.8345, 405.866, 7.1154, 0.55", "-18.9019, 407.316, 7.19355, 0.55", "-18.975, 408.727, 7.49023, 0.28", "-19.1371, 409.989, 7.836, 0.55", "-19.3657, 410.88, 8.12758, 0.28", "-19.7788, 412.177, 8.51457, 0.83", "-20.1976, 413.498, 8.8626, 0.83", "-20.9199, 415.537, 9.80316, 0.55", "-21.3402, 416.701, 10.4971, 0.55", "-22.1416, 418.901, 12.0049, 0.83", "-22.617, 420.118, 12.901, 0.83", "-23.1505, 421.501, 14.0406, 0.83", "-24.9792, 425.886, 17.5339, 0.55", "-25.3109, 426.779, 18.1931, 0.55", "-25.4362, 427.196, 18.4892, 0.83", "-25.6604, 428.148, 19.1319, 0.55", "-26.2116, 431.095, 20.8278, 1.11", "-26.5928, 433.676, 21.9496, 0.83", "-26.7763, 435.498, 22.4345, 0.55", "-26.8596, 436.859, 22.7766, 1.11", "-26.9136, 438.371, 23.1725, 0.55", "-26.9065, 440.862, 23.8393, 1.11", "-26.9032, 442.778, 24.323, 0.55", "-26.9042, 444.492, 24.8286, 0.55", "-26.9674, 445.423, 25.1114, 0.28", "-27.1292, 447.087, 25.624, 0.83", "-27.3358, 448.774, 26.0856, 0.55", "-27.5585, 450.288, 26.436, 0.83", "-27.813, 451.725, 26.7119, 0.83", "-28.2651, 453.795, 27.0609, 0.55", "-28.7493, 455.857, 27.3402, 0.55", "-29.4268, 458.514, 27.6084, 0.83", "-30.1406, 461.143, 27.8425, 0.83", "-30.8091, 463.599, 28.0467, 0.83", "-31.2358, 465.127, 28.1594, 0.83", "-31.7774, 467.167, 28.2776, 0.83", "-32.2721, 468.954, 28.3868, 0.83", "-32.7418, 470.896, 28.5772, 0.83", "-32.9962, 472.036, 28.7137, 0.83", "-33.298, 473.618, 28.9568, 0.55", "-33.5599, 474.964, 29.1186, 0.83", "-33.9039, 476.612, 29.3339, 0.83", "-34.4572, 479.287, 29.7008, 0.55", "-35.042, 481.865, 30.0822, 0.83", "-35.7313, 484.615, 30.5089, 0.55", "-36.6408, 487.567, 30.9756, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-18.8345, 405.866, 7.1154, 0.55", "-20.8994, 409.25, 8.69837, 0.55", "-22.5805, 411.96, 9.54517, 0.28", "-23.3911, 413.205, 9.83165, 0.83", "-24.5729, 414.933, 10.1528, 0.28", "-25.1633, 415.798, 10.2894, 0.28", "-26.1305, 417.193, 10.4705, 0.83", "-27.9393, 420.021, 10.5775, 0.83", "-28.8467, 421.5, 10.5173, 0.28", "-30.1338, 423.713, 10.473, 0.83", "-30.7964, 424.843, 10.4536, 0.55", "-32.0607, 427.044, 10.4835, 1.11", "-33.2295, 429.185, 10.5352, 0.55", "-34.129, 431.002, 10.5874, 1.11", "-35.0598, 433.065, 10.6532, 0.55", "-36.2551, 435.963, 10.7501, 1.11", "-36.9702, 437.703, 10.8277, 0.28", "-37.523, 439.084, 10.9172, 0.55", "-38.2147, 440.666, 11.0595, 0.28", "-38.7041, 441.788, 11.1885, 0.83", "-39.2405, 443.279, 11.2831, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.785611, 276.306, -19.6673, 0.83", "-0.179852, 278.882, -20.0877, 0.83", "0.106593, 280.286, -20.3268, 0.83", "0.520693, 282.379, -20.6777, 2.22", "0.903846, 284.501, -21.0434, 1.66", "1.39539, 287.085, -21.3904, 0.83", "1.55484, 287.938, -21.4826, 0.83", "1.84605, 289.841, -21.6522, 0.83", "2.20629, 292.468, -21.803, 1.66", "2.39645, 294.512, -21.8564, 0.55", "2.45574, 296.572, -21.9143, 0.55", "2.43575, 297.858, -21.9725, 1.11", "2.34349, 300.065, -22.1659, 0.55", "2.08311, 303.678, -22.6584, 1.66", "1.99646, 305.513, -22.9761, 0.83", "1.9411, 308.509, -23.5664, 0.83", "1.94139, 309.959, -23.8922, 0.83", "2.02967, 311.574, -24.2426, 1.66", "2.26769, 313.765, -24.6841, 0.83", "2.7923, 317.127, -25.253, 0.83", "3.29753, 319.642, -25.5693, 0.83", "3.53351, 320.596, -25.6335, 0.83", "4.066, 322.738, -25.7257, 0.83", "4.39294, 324.152, -25.7834, 1.38", "4.88548, 326.356, -25.859, 0.55", "5.23079, 327.818, -25.913, 1.38", "5.92342, 330.61, -26.0178, 1.38", "6.48523, 333.002, -26.1042, 0.83", "7.06071, 335.599, -26.1884, 0.83", "7.7172, 338.438, -26.2754, 1.11", "8.24839, 340.77, -26.3376, 0.55", "8.63032, 342.645, -26.3751, 0.55", "8.90992, 344.131, -26.4491, 0.55", "9.54099, 347.424, -26.696, 2.22", "9.82156, 348.897, -26.8431, 0.55", "10.1148, 350.37, -27.0188, 0.55", "10.2534, 351.098, -27.1109, 1.11", "10.9247, 354.555, -27.5518, 0.55", "11.255, 356.466, -27.7867, 0.55", "11.3563, 357.216, -27.8719, 0.55", "11.5593, 359.559, -28.0835, 1.11", "11.6614, 361.814, -28.2861, 1.11", "11.7048, 363.669, -28.4212, 0.83", "11.6593, 365.608, -28.4939, 0.83", "11.6001, 366.833, -28.5486, 0.83", "11.3849, 369.28, -28.6773, 0.83", "10.9801, 372.053, -28.8656, 2.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.785611, 276.306, -19.6673, 0.55", "-2.71553, 276.236, -20.0064, 0.55", "-4.73407, 276.163, -20.3611, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.4023, -134.9, 23.5291, 1.11", "-14.3658, -136.414, 23.553, 1.11", "-14.3043, -138.972, 23.5935, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-14.4023, -134.9, 23.5291, 1.11", "-18.9851, -132.555, 22.6628, 1.11", "-20.4598, -131.607, 22.4612, 0.28", "-21.368, -130.987, 22.5776, 0.83", "-24.6063, -128.716, 23.4851, 0.55", "-26.0591, -127.749, 24.0106, 0.55", "-27.4838, -126.844, 24.4786, 0.55", "-29.4508, -125.704, 25.1832, 0.55", "-34.4069, -123.158, 26.7816, 1.11", "-37.3424, -121.696, 27.6929, 0.55", "-39.2473, -120.766, 28.2974, 0.55", "-43.6751, -118.928, 29.5822, 0.83", "-46.3716, -117.951, 30.3309, 0.55", "-49.0251, -117.119, 31.0369, 1.11", "-53.3749, -115.952, 32.0483, 0.83", "-54.8953, -115.621, 32.4509, 0.83", "-56.9725, -115.2, 33.1328, 0.83", "-60.1224, -114.713, 34.4463, 0.83", "-64.0834, -114.266, 36.1639, 1.11", "-65.9614, -114.157, 36.9052, 0.83", "-68.7018, -114.124, 37.8752, 0.83", "-72.792, -114.173, 39.1855, 0.83", "-75.5268, -114.306, 39.9099, 0.55", "-77.6054, -114.574, 40.3629, 1.38", "-80.6695, -115.007, 40.8266, 0.55", "-83.4846, -115.284, 41.1422, 0.55", "-85.2339, -115.472, 41.2517, 0.55", "-87.8952, -115.758, 41.2552, 0.55", "-89.3586, -115.854, 41.1921, 0.83", "-94.2963, -115.845, 40.8173, 0.55", "-96.0408, -115.793, 40.6461, 0.55", "-98.0227, -115.644, 40.4337, 0.55", "-101.752, -115.232, 40.2586, 0.55", "-105.554, -114.714, 40.3288, 1.11", "-109.344, -114.188, 40.5852, 0.55", "-110.335, -114.086, 40.7286, 0.55", "-113.594, -113.895, 41.4375, 0.55", "-117.183, -113.741, 42.6099, 1.94", "-119.604, -113.798, 43.819, 0.83", "-120.46, -113.867, 44.3026, 0.28", "-121.968, -114.118, 45.162, 0.55", "-124.157, -114.592, 46.3671, 0.55", "-126.072, -115.103, 47.3776, 0.28", "-129.42, -116.063, 49.2199, 1.11", "-131.854, -116.861, 50.7217, 0.28", "-134.472, -117.594, 52.4557, 0.83", "-136.452, -118.042, 53.8973, 0.28", "-137.279, -118.164, 54.5692, 0.28", "-139.254, -118.276, 56.3895, 0.28", "-140.273, -118.199, 57.4683, 0.55", "-142.247, -117.728, 59.7012, 0.55", "-143.095, -117.327, 60.5386, 0.83", "-144.541, -116.528, 61.7422, 0.28", "-144.912, -116.334, 62.0116, 0.83", "-147.37, -115.105, 63.5659, 0.83", "-149.393, -114.109, 64.805, 0.83", "-151.728, -113.117, 66.1936, 0.55", "-152.922, -112.669, 66.8857, 0.55", "-155.16, -111.989, 68.1894, 1.38", "-157.554, -111.409, 69.6003, 1.38", "-159.544, -111.057, 70.7921, 0.28", "-161.178, -110.983, 71.7323, 0.83", "-162.482, -111.095, 72.4645, 0.28", "-163.738, -111.36, 73.1369, 1.38", "-165.664, -111.946, 74.1118, 0.28", "-166.346, -112.258, 74.4338, 0.83", "-168.252, -113.36, 75.272, 0.55", "-169.28, -113.986, 75.6875, 0.55", "-171.107, -115.06, 76.3652, 1.11" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "1.62835, -193.751, -34.5676, 0.83", "1.53545, -195.557, -34.6709, 0.83", "1.40286, -197.265, -34.972, 1.94", "1.28194, -198.984, -35.3464, 1.94", "0.953459, -202.386, -36.2322, 0.83", "0.698711, -204.754, -36.8648, 1.38", "-0.081837, -210.887, -38.6795, 0.28", "-0.150167, -211.426, -38.8596, 0.83", "-0.358449, -212.967, -39.4704, 0.55", "-0.717893, -215.088, -40.4884, 0.28", "-1.17165, -217.081, -41.6701, 0.55", "-1.85613, -219.763, -43.2281, 3.6" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.62835, -193.751, -34.5676, 0.28", "-0.938051, -192.275, -30.4512, 0.28", "-1.3043, -192.064, -29.8638, 1.38", "-3.93429, -190.55, -25.6454, 0.55", "-5.43925, -189.684, -23.2315, 0.55" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "63.9971, -231.247, -3.439, 1.38", "64.373, -234.441, -3.38728, 1.38" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "63.9971, -231.247, -3.439, 0.55", "65.4283, -230.051, -4.82546, 0.55", "66.3501, -229.281, -5.71842, 0.55", "68.781, -227.251, -8.07334, 0.28", "69.5688, -226.593, -8.83651, 1.11", "71.9811, -224.578, -11.1734, 0.28", "74.001, -222.891, -13.1302, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-36.6408, 487.567, 30.9756, 1.38", "-36.4806, 489.442, 31.4877, 1.38", "-36.4954, 491.126, 32.0004, 0.55", "-36.6946, 492.54, 32.6576, 0.55", "-36.8679, 493.77, 33.2293, 0.55", "-37.0692, 495.198, 33.8932, 1.11", "-37.4722, 498.058, 35.2225, 0.55", "-37.9509, 500.097, 36.3328, 1.11", "-38.8464, 503.053, 38.206, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-36.6408, 487.567, 30.9756, 0.55", "-37.1128, 489.878, 30.5929, 0.55", "-37.4345, 490.844, 30.4819, 0.28", "-37.8525, 491.761, 30.312, 0.83", "-38.6645, 493.377, 29.9774, 0.28", "-39.4403, 494.757, 29.692, 0.55", "-40.2063, 496.042, 29.4369, 0.55", "-41.7874, 498.26, 28.9638, 1.11", "-43.2792, 500.081, 28.6074, 0.55", "-43.8597, 500.757, 28.447, 0.55", "-45.1722, 502.261, 28.0763, 0.83", "-46.0795, 503.284, 27.7823, 0.83", "-47.3789, 504.799, 27.2053, 0.83", "-48.0509, 505.609, 26.8445, 0.83", "-49.5988, 507.75, 25.868, 0.55", "-50.6894, 509.554, 24.9153, 0.83", "-51.3117, 510.721, 24.1815, 0.83", "-52.3171, 512.778, 22.7988, 0.55", "-53.083, 514.535, 21.6093, 0.55", "-53.5454, 515.622, 20.859, 0.83", "-54.693, 518.124, 19.1588, 0.83", "-55.3867, 519.658, 18.0933, 0.83", "-55.8882, 520.757, 17.3221, 0.28", "-56.2633, 521.578, 16.6866, 0.55", "-56.8573, 522.981, 15.1569, 0.55", "-57.1867, 523.741, 14.1959, 0.55", "-57.4572, 524.358, 13.3141, 0.55", "-58.1321, 525.86, 10.9529, 0.55", "-58.8532, 527.261, 8.36752, 0.83", "-60.1243, 529.284, 4.15785, 0.28", "-60.5483, 529.825, 2.76177, 0.28", "-60.7805, 530.091, 1.93406, 0.55", "-61.0554, 530.402, 0.789578, 0.28", "-61.205, 530.594, 0.030382, 0.83", "-61.4093, 530.938, -1.15746, 0.83", "-61.9179, 532.193, -5.20704, 0.83", "-62.2141, 533.121, -8.34129, 0.28", "-62.4692, 533.968, -11.3948, 1.11", "-62.8304, 535.18, -15.9142, 0.55", "-62.9535, 535.487, -17.0991, 0.55", "-63.2441, 535.972, -19.2333, 0.55", "-63.5391, 536.264, -20.658, 0.55", "-63.9681, 536.519, -22.1871, 0.83", "-64.905, 536.898, -24.8506, 0.55", "-65.6449, 537.148, -26.7752, 1.11", "-68.0065, 537.933, -32.6972, 0.28", "-68.2777, 538.051, -33.4315, 0.55", "-69.1923, 538.565, -35.9863, 0.28", "-69.8467, 538.983, -37.9315, 1.11", "-70.8197, 539.669, -41.0973, 0.55", "-71.173, 540.02, -42.6059, 1.11", "-71.8183, 540.925, -46.2416, 0.55", "-71.939, 541.193, -47.2483, 0.55", "-72.1323, 541.909, -49.8483, 1.11", "-72.1688, 542.291, -51.183, 1.11", "-72.0964, 543.704, -55.9187, 0.28", "-72.046, 544.122, -57.3105, 0.83", "-71.9874, 545.105, -60.6737, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-39.2405, 443.279, 11.2831, 0.55", "-39.5242, 444.112, 11.5816, 0.55", "-39.8997, 445.146, 11.9183, 0.28", "-40.4687, 446.608, 12.3426, 1.38", "-41.358, 448.707, 12.8918, 0.28", "-42.1528, 450.478, 13.3149, 0.55", "-42.5837, 451.435, 13.5253, 0.55", "-42.9557, 452.244, 13.6822, 0.83", "-43.5204, 453.412, 13.8723, 0.28", "-43.9972, 454.362, 13.9584, 0.83", "-44.3229, 455.052, 13.9631, 0.28", "-44.6214, 455.74, 13.9804, 0.28", "-45.0789, 456.797, 14.0086, 0.83", "-45.6071, 458.054, 14.042, 0.28", "-45.8623, 458.687, 14.0572, 0.55", "-46.4455, 460.147, 14.088, 0.55", "-46.8864, 461.236, 14.1159, 0.28", "-47.1172, 461.78, 14.1314, 0.28", "-47.5175, 462.758, 14.1598, 1.11", "-47.9671, 464.009, 14.1218, 0.28", "-48.2576, 464.875, 14.0299, 0.83", "-48.532, 465.832, 13.8465, 0.28", "-48.749, 466.957, 13.5618, 0.83", "-48.8414, 467.652, 13.3706, 0.83", "-49.0024, 469.488, 12.8323, 0.55", "-49.08, 470.726, 12.4756, 0.55", "-49.133, 471.517, 12.2651, 0.55", "-49.2416, 472.952, 11.9227, 0.83", "-49.344, 474.164, 11.6868, 0.55", "-49.5456, 475.939, 11.4293, 1.11", "-49.7076, 477.175, 11.3114, 0.55", "-49.8741, 478.335, 11.2186, 0.55", "-49.9911, 479.072, 11.137, 0.83", "-50.0822, 479.638, 11.0303, 0.55", "-50.3328, 481.607, 10.5419, 0.83", "-50.4058, 482.409, 10.2311, 0.28", "-50.4182, 482.572, 10.1487, 0.28", "-50.4537, 483.269, 9.74206, 0.55", "-50.525, 485.053, 8.63316, 0.28", "-50.541, 485.389, 8.43908, 0.55", "-50.6229, 487.129, 7.49069, 0.28", "-50.6577, 487.837, 7.16337, 0.83", "-50.7761, 489.066, 6.68727, 0.83", "-50.8401, 489.585, 6.5332, 0.28", "-50.9854, 491.141, 6.20863, 0.55", "-51.073, 492.155, 6.05125, 0.28", "-51.1664, 493.472, 6.03617, 0.83", "-51.2562, 495.213, 6.13037, 0.28", "-51.2712, 495.967, 6.23814, 0.28", "-51.2723, 497.018, 6.46712, 0.55", "-51.2761, 498.626, 6.83459, 0.83", "-51.325, 500.754, 7.34768, 0.28", "-51.3321, 501.653, 7.52736, 0.83", "-51.3359, 503.141, 7.69497, 0.28", "-51.3061, 505.1, 7.63545, 1.38", "-51.2667, 506.846, 7.39075, 0.28", "-51.1803, 508.373, 7.04339, 0.83", "-51.0707, 509.842, 6.58994, 0.83", "-50.871, 512.149, 5.82266, 0.55", "-50.7204, 514.507, 4.99211, 0.55", "-50.6196, 516.168, 4.48389, 0.83", "-50.5624, 517.449, 4.26694, 0.83", "-50.5269, 519.109, 4.17469, 0.55", "-50.5523, 520.207, 4.3341, 0.55", "-50.6059, 521.819, 4.86167, 1.38", "-50.754, 523.809, 5.74117, 0.83", "-50.9362, 526.095, 6.96623, 1.11", "-51.0383, 527.218, 7.68245, 1.11", "-51.2058, 529.486, 9.41866, 0.83", "-51.2144, 529.977, 9.83783, 0.83" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-39.2405, 443.279, 11.2831, 0.28", "-37.5098, 443.13, 12.1116, 0.28", "-37.0692, 443.092, 12.3225, 0.83", "-35.7113, 442.975, 12.9726, 0.28", "-35.5123, 442.958, 13.0678, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "10.9801, 372.053, -28.8656, 0.55", "11.7672, 374.126, -29.2024, 0.55", "12.5876, 376.442, -29.6124, 0.55", "13.0185, 377.777, -29.8517, 0.55", "13.643, 379.512, -30.197, 0.28", "14.285, 381.097, -30.5519, 0.83", "15.2851, 383.507, -31.1049, 0.28", "15.6698, 384.475, -31.3304, 0.83", "16.2043, 385.967, -31.6642, 0.55", "16.9473, 388.066, -32.1751, 0.55", "17.361, 389.313, -32.486, 0.83", "17.8, 390.896, -32.8494, 0.28", "18.1441, 392.192, -33.0968, 0.83", "18.495, 393.668, -33.3739, 0.83", "18.6929, 394.756, -33.6332, 0.28", "18.8131, 396.331, -34.0037, 0.83", "18.7838, 397.652, -34.3435, 0.83", "18.4989, 399.304, -34.98, 0.83", "17.9146, 401.158, -35.8662, 1.11", "16.8755, 403.302, -37.2967, 0.55", "15.7818, 404.855, -38.5059, 0.55", "14.5304, 406.267, -39.7408, 1.11", "11.9995, 408.632, -42.1467, 0.28", "11.2825, 409.241, -42.8434, 0.28", "8.93903, 411.128, -45.1345, 0.83", "7.55528, 412.215, -46.5695, 0.55", "7.08106, 412.581, -47.1257, 0.55", "5.63379, 413.778, -48.9068, 0.55", "4.57942, 414.688, -50.2137, 0.83", "2.53749, 416.359, -52.7323, 0.55", "-1.23237, 419.346, -57.2638, 1.94", "-4.57823, 421.874, -61.4909, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.9801, 372.053, -28.8656, 0.55", "10.2844, 374.324, -28.872, 0.55", "9.64728, 376.428, -28.9426, 0.83", "9.32637, 377.454, -29.0475, 0.55", "8.75652, 379.731, -29.4035, 0.83", "8.02862, 383.016, -30.0253, 0.55", "7.64608, 384.444, -30.3344, 0.55", "7.21884, 385.786, -30.7747, 1.11", "6.63031, 387.665, -31.548, 0.83", "5.83688, 390.005, -32.6634, 0.83", "4.77168, 392.727, -34.1071, 0.83", "3.6402, 394.999, -35.3378, 0.55", "2.25883, 397.55, -36.6893, 0.28", "0.50787, 400.02, -38.4772, 0.83", "-1.00297, 401.873, -40.0145, 0.55", "-2.89656, 403.977, -41.9301, 1.38", "-4.66876, 405.938, -43.8265, 0.55", "-5.67733, 407.121, -44.9543, 0.55", "-12.0907, 414.976, -52.1541, 0.83", "-13.068, 416.144, -53.227, 0.55", "-13.2806, 416.427, -53.4788, 0.55", "-14.447, 418.213, -54.9344, 1.38", "-15.1327, 419.621, -55.8683, 1.38", "-15.9954, 422.49, -56.8769, 0.28", "-16.0444, 423.745, -56.7189, 0.55", "-15.9579, 425.891, -56.3505, 0.28", "-15.8286, 428.201, -55.8686, 0.55", "-15.5167, 432.243, -54.74, 0.55", "-15.2974, 434.716, -53.9606, 0.55", "-14.9794, 437.645, -52.9378, 0.55", "-14.5596, 440.04, -52.0508, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-14.3043, -138.972, 23.5935, 0.55", "-15.322, -139.499, 24.9663, 0.55", "-16.1309, -139.92, 26.0792, 0.28", "-16.8726, -140.306, 27.0997, 1.11", "-19.5847, -141.719, 30.8312, 0.28", "-19.9382, -141.903, 31.3175, 1.11", "-21.7691, -142.857, 33.8366, 0.28", "-22.199, -143.088, 34.5738, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-14.3043, -138.972, 23.5935, 0.83", "-15.6908, -140.571, 24.9514, 0.83", "-17.0398, -141.878, 26.2325, 0.83", "-18.2572, -142.742, 27.4657, 0.83", "-20.3993, -144.126, 29.6285, 0.83", "-21.8185, -145.176, 31.478, 0.83", "-23.5732, -146.705, 34.2216, 0.83", "-24.4688, -147.599, 35.8536, 0.83", "-26.2582, -150.015, 39.8511, 1.11", "-26.5611, -150.649, 40.829, 1.11", "-27.412, -153.906, 45.2661, 1.11", "-27.736, -156.194, 48.0098, 1.11", "-27.8619, -158.323, 50.2477, 1.11", "-27.8353, -160.308, 52.1587, 1.38", "-27.6091, -163.536, 54.8595, 0.55", "-27.5318, -164.906, 55.935, 0.83", "-27.5395, -166.27, 56.8292, 0.83", "-27.4947, -167.43, 57.6046, 0.83", "-27.4797, -168.533, 58.3983, 0.83", "-27.4608, -170.683, 59.6904, 0.55", "-27.551, -172.175, 60.2682, 0.55", "-27.6531, -173.014, 60.4998, 1.11", "-27.8915, -174.589, 60.7796, 0.28", "-28.0542, -175.444, 60.8889, 1.11", "-28.5603, -177.336, 60.9706, 0.55", "-29.1583, -179.194, 60.7782, 0.55", "-30.0175, -181.28, 60.4265, 0.28", "-30.3247, -181.947, 60.259, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-171.107, -115.06, 76.3652, 1.11", "-173.888, -114.551, 77.8848, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-171.107, -115.06, 76.3652, 0.28", "-171.874, -116.542, 76.213, 0.28", "-172.019, -116.823, 76.1842, 0.83", "-172.736, -118.207, 76.042, 0.28", "-172.938, -118.597, 76.0019, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-1.85613, -219.763, -43.2281, 0.55", "-3.1503, -221.092, -41.9019, 0.55", "-4.09959, -222.014, -41.0643, 0.55", "-5.76626, -223.655, -39.185, 0.28", "-6.23458, -224.175, -38.6338, 0.55", "-6.95649, -224.976, -37.7854, 1.11", "-7.88386, -226.03, -36.7043, 0.28", "-8.63385, -226.808, -35.8445, 0.55", "-10.8397, -228.933, -33.5589, 0.28", "-12.7331, -230.694, -31.7438, 0.83", "-14.6096, -232.495, -29.8597, 0.28", "-15.1329, -233.019, -29.3091, 0.83", "-16.4645, -234.339, -27.9061, 0.83", "-17.8989, -235.641, -26.5483, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.85613, -219.763, -43.2281, 0.28", "-1.85786, -224.123, -42.9292, 0.28", "-1.80655, -225.656, -42.7669, 0.55", "-1.66807, -228.235, -42.4566, 0.28", "-1.46509, -231.339, -42.0692, 1.11", "-1.18821, -235.032, -41.6111, 0.28", "-1.09611, -236.013, -41.502, 0.55", "-0.907008, -237.537, -41.2045, 0.28", "-0.763996, -238.49, -40.9953, 0.55", "-0.601322, -239.704, -40.6632, 0.28", "-0.534076, -240.377, -40.4922, 0.55", "-0.461366, -242.59, -40.1774, 0.28", "-0.437871, -244.547, -39.9897, 1.11", "-0.359492, -248.678, -39.3732, 0.28", "-0.27268, -251.068, -38.9647, 1.11", "-0.207535, -252.972, -38.6261, 1.11", "-0.098101, -256.506, -37.9792, 0.28", "-0.0307477, -258.745, -37.5637, 0.83", "0.264487, -263.512, -36.8394, 0.55", "0.441017, -266.158, -36.6274, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "64.373, -234.441, -3.38728, 0.28", "66.6632, -235.933, -3.27578, 0.28", "67.4671, -236.445, -3.24206, 0.83", "68.7249, -237.261, -3.20556, 0.28", "70.4779, -238.428, -3.17497, 0.83", "72.2148, -239.655, -3.15825, 0.28", "73.5029, -240.555, -3.16152, 0.55", "74.1983, -240.998, -3.17105, 0.28", "75.7272, -241.888, -3.23489, 0.55", "76.7377, -242.455, -3.29963, 0.28", "77.8756, -243.064, -3.38326, 0.55", "79.3555, -243.775, -3.52227, 0.55", "80.8297, -244.456, -3.75277, 0.55", "82.8024, -245.407, -4.14925, 0.83", "83.964, -246.007, -4.50997, 0.28", "85.0276, -246.649, -4.92636, 0.83", "86.1293, -247.346, -5.1839, 1.38", "88.575, -249.024, -5.44757, 0.28", "89.8994, -250.047, -5.55839, 0.83", "91.9436, -251.686, -5.68505, 0.28", "93.2431, -252.727, -5.7099, 1.11", "98.2363, -256.717, -5.42035, 0.28", "98.881, -257.228, -5.33806, 0.55", "102.14, -259.764, -4.76307, 0.28", "104.313, -261.509, -4.37874, 0.28", "105.237, -262.334, -4.21123, 0.55", "106.667, -263.669, -4.10161, 0.28", "107.442, -264.54, -4.24238, 0.28", "108.418, -265.692, -4.36752, 0.55", "109.586, -267.114, -4.22115, 0.55", "110.213, -268.316, -4.18585, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "64.373, -234.441, -3.38728, 0.55", "62.056, -235.635, -2.46478, 0.55", "61.0957, -236.129, -2.08245, 0.55", "59.912, -236.739, -1.61117, 0.28", "58.3463, -237.545, -0.987784, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-38.8464, 503.053, 38.206, 0.83", "-39.0047, 504.989, 38.9947, 0.83", "-39.2063, 507.978, 40.1965, 0.83", "-39.325, 510.02, 41.0324, 0.83", "-39.701, 514.252, 42.7199, 0.83", "-39.7455, 514.741, 42.8798, 1.11", "-39.8746, 516.018, 43.2213, 0.55", "-39.9763, 516.775, 43.381, 0.83", "-40.0119, 517.394, 41.9544, 0.28", "-39.8845, 517.998, 40.4474, 0.55", "-39.1904, 519.957, 35.7693, 0.28", "-38.9635, 520.598, 34.4325, 0.83", "-38.7589, 521.13, 33.4169, 0.83", "-37.2677, 524.771, 27.2906, 0.55", "-36.7749, 525.868, 25.6905, 0.55", "-36.2677, 526.972, 24.6014, 1.11", "-34.9179, 530.903, 23.1548, 0.55", "-34.759, 531.459, 23.0998, 0.83", "-34.5805, 532.354, 23.2794, 0.28", "-34.5342, 532.83, 23.4759, 0.55", "-34.5326, 533.596, 23.6845, 0.28", "-34.5609, 534.658, 23.7823, 0.83", "-34.5028, 535.774, 23.7137, 0.28", "-34.4727, 536.515, 23.6551, 0.83", "-34.3651, 538.893, 23.2436, 0.55", "-34.2455, 541.052, 22.7311, 0.55", "-34.1616, 542.649, 22.2892, 0.55", "-34.0401, 544.875, 21.6574, 0.55", "-33.9705, 546.371, 21.1898, 0.55", "-33.8578, 549.607, 20.2009, 0.55", "-33.8076, 550.613, 19.888, 0.28", "-33.7502, 551.505, 19.5846, 0.55", "-33.7019, 552.741, 19.1489, 0.28", "-33.719, 554.655, 18.411, 0.55", "-33.7308, 555.447, 18.1254, 0.55", "-33.729, 556.949, 17.6631, 0.28", "-33.6666, 558.368, 17.1462, 0.28", "-33.5688, 559.096, 16.8674, 0.55", "-33.1113, 560.713, 15.8871, 0.28", "-32.6994, 561.551, 15.1883, 0.83", "-32.2172, 562.436, 14.3874, 0.83", "-31.2553, 563.986, 12.8689, 0.55", "-30.444, 565.116, 11.6358, 0.55", "-27.8376, 568.391, 7.73629, 0.28", "-25.9999, 570.413, 5.0922, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-38.8464, 503.053, 38.206, 0.55", "-40.2681, 505.342, 38.1235, 0.55", "-42.1391, 508.353, 38.0148, 0.55", "-43.4552, 510.471, 37.9384, 0.55", "-44.5978, 512.31, 37.8721, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-51.2144, 529.977, 9.83783, 0.28", "-51.2417, 530.696, 7.60127, 0.28", "-51.2493, 530.896, 6.97919, 0.55", "-51.3242, 532.864, 0.86026, 0.28", "-51.3327, 533.088, 0.165813, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-51.2144, 529.977, 9.83783, 0.28", "-52.8042, 531.548, 9.95797, 0.28", "-53.7869, 532.519, 10.0322, 0.83", "-54.5217, 533.245, 10.0878, 0.83", "-54.9866, 533.704, 10.1229, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.57823, 421.874, -61.4909, 0.55", "-6.99495, 422.86, -61.0561, 0.55", "-9.91047, 424.059, -60.7322, 0.55", "-12.0873, 424.954, -60.4904, 0.55", "-14.6151, 425.993, -60.2096, 0.28", "-16.9014, 426.934, -59.9557, 0.83", "-18.6633, 427.658, -59.76, 0.83", "-20.5717, 428.537, -59.7287, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.57823, 421.874, -61.4909, 0.55", "-5.62593, 424.542, -61.6868, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-173.888, -114.551, 77.8848, 0.28", "-175.999, -114.23, 79.1618, 0.28", "-178.077, -113.789, 80.4691, 0.55", "-180.378, -113.261, 81.9526, 0.28", "-181.64, -112.993, 82.8207, 1.11", "-183.535, -112.589, 84.2006, 0.28", "-184.034, -112.474, 84.538, 0.55", "-186.9, -111.817, 86.352, 0.28", "-187.721, -111.611, 86.8653, 1.11", "-189.588, -111.182, 88.0167, 0.28", "-190.688, -110.939, 88.7078, 1.11", "-193.239, -110.395, 90.4393, 1.11", "-195.068, -110.066, 91.5486, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-173.888, -114.551, 77.8848, 0.83", "-176.953, -116.644, 78.1625, 0.83" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-17.8989, -235.641, -26.5483, 0.83", "-18.7963, -236.532, -27.0181, 0.83", "-20.2991, -238.024, -27.8047, 0.28", "-21.5596, -239.275, -28.4645, 1.11", "-25.1214, -242.812, -30.329, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-17.8989, -235.641, -26.5483, 1.11", "-20.0928, -233.17, -26.2942, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-54.9866, 533.704, 10.1229, 0.55", "-54.0001, 534.916, 8.10224, 0.55", "-52.8948, 536.052, 6.30039, 0.28", "-52.6332, 536.321, 5.69363, 0.55", "-50.7872, 538.221, 1.41123, 0.28", "-49.9215, 539.113, -0.597057, 0.55", "-48.7446, 540.324, -3.32731, 0.28", "-48.05, 541.188, -5.55308, 0.55", "-46.3215, 543.808, -12.8445, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-54.9866, 533.704, 10.1229, 0.28", "-56.3575, 533.929, 10.2872, 0.28", "-58.4733, 534.275, 10.5408, 0.55", "-60.2689, 534.569, 10.7561, 0.55", "-62.1634, 534.879, 10.9832, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.5717, 428.537, -59.7287, 0.55", "-20.7951, 430.07, -59.0961, 0.55", "-21.011, 431.552, -58.4847, 0.55", "-21.2072, 432.899, -57.9289, 0.83", "-21.4454, 434.534, -57.2545, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-20.5717, 428.537, -59.7287, 0.28", "-23.4993, 430.121, -58.7897, 0.28", "-24.3027, 430.556, -58.532, 0.28", "-25.9272, 431.435, -58.0109, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-25.1214, -242.812, -30.329, 1.11", "-24.5411, -245.041, -28.8793, 1.11", "-23.9519, -247.316, -27.2778, 0.28", "-23.5867, -248.893, -26.1326, 1.11", "-22.6417, -253.238, -22.6441, 0.28", "-22.43, -254.317, -21.7496, 1.94", "-21.9096, -257.467, -19.2702, 1.11", "-21.8255, -258.164, -18.7099, 0.28", "-21.765, -258.965, -18.0608, 0.83", "-21.7496, -261.116, -16.5216, 0.28", "-21.8578, -262.122, -16.0167, 1.11", "-22.2299, -264.812, -14.9029, 0.28", "-22.6424, -266.962, -14.2089, 0.28", "-22.8342, -268.093, -13.8762, 1.11", "-22.8342, -268.093, -13.8762, 1.11", "-23.0934, -269.508, -13.6269, 0.55", "-23.2101, -270.127, -13.4969, 1.38", "-23.7051, -272.473, -12.7907, 0.28", "-23.7482, -272.724, -12.6974, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-25.1214, -242.812, -30.329, 0.55", "-27.6609, -242.474, -27.5911, 0.55", "-29.2344, -242.264, -25.8946, 0.55", "-30.5825, -242.085, -24.4412, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-62.1634, 534.879, 10.9832, 0.55", "-62.7041, 536.144, 11.2476, 0.55", "-63.5217, 538.46, 11.8092, 0.55", "-63.9255, 540.016, 12.1577, 0.55", "-64.3771, 541.943, 12.5187, 0.55", "-64.7607, 543.719, 12.9055, 0.28", "-64.9221, 544.533, 13.0379, 0.83", "-65.2747, 546.855, 13.3084, 0.83", "-65.445, 548.854, 13.5046, 0.83", "-65.5119, 549.88, 13.5605, 0.55", "-65.5077, 552.497, 13.6166, 0.83", "-65.3162, 555.461, 13.4755, 0.28", "-65.2293, 556.881, 13.2805, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-62.1634, 534.879, 10.9832, 0.55", "-65.2253, 533.586, 11.9688, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_0", "dend_57", "dend_30", "dend_12", "dend_1", "dend_59", "dend_58", "dend_46", "dend_31", "dend_28", "dend_13", "dend_3", "dend_2", "dend_61", "dend_60", "dend_56", "dend_47", "dend_37", "dend_32", "dend_23", "dend_14", "dend_5", "dend_4", "dend_53", "dend_48", "dend_39", "dend_38", "dend_34", "dend_33", "dend_25", "dend_24", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_49", "dend_41", "dend_40", "dend_36", "dend_35", "dend_27", "dend_26", "dend_22", "dend_17", "dend_9", "dend_8", "dend_52", "dend_51", "dend_43", "dend_42", "dend_21", "dend_18", "dend_11", "dend_10", "dend_45", "dend_44", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_2", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_47", "dend_47", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_DBC_87482e342d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_29
create dend_57
public dend_57
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_30
create dend_46
public dend_46
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_12
create dend_28
public dend_28
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_56, id: dend_56, parent: dend_46
create dend_56
public dend_56
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_37, id: dend_37, parent: dend_31
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_13
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.4999993435552117)
    connect dend_0(0), soma_0(0.4999993435552117)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_56(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_37(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.03775, -11.4909, 0.0, 3.43439 ) }
    soma_0 { pt3dadd( 1.89325, -10.3873, 0.0, 4.10946 ) }
    soma_0 { pt3dadd( 1.74876, -9.28361, 0.0, 5.49512 ) }
    soma_0 { pt3dadd( 1.60426, -8.17996, 0.0, 6.92062 ) }
    soma_0 { pt3dadd( 1.45977, -7.07631, 0.0, 8.33776 ) }
    soma_0 { pt3dadd( 1.31528, -5.97266, 0.0, 9.37588 ) }
    soma_0 { pt3dadd( 1.17078, -4.86901, 0.0, 10.388 ) }
    soma_0 { pt3dadd( 1.02629, -3.76536, 0.0, 11.4001 ) }
    soma_0 { pt3dadd( 0.881794, -2.66171, 0.0, 12.0337 ) }
    soma_0 { pt3dadd( 0.7373, -1.55806, 0.0, 11.8609 ) }
    soma_0 { pt3dadd( 0.592806, -0.454415, 0.0, 11.675 ) }
    soma_0 { pt3dadd( 0.448312, 0.649234, 0.0, 11.6509 ) }
    soma_0 { pt3dadd( 0.303818, 1.75288, 0.0, 11.6321 ) }
    soma_0 { pt3dadd( 0.159324, 2.85653, 0.0, 10.7321 ) }
    soma_0 { pt3dadd( 0.0148298, 3.96018, 0.0, 9.70998 ) }
    soma_0 { pt3dadd( -0.129664, 5.06383, 0.0, 8.74071 ) }
    soma_0 { pt3dadd( -0.274158, 6.16748, 0.0, 7.95018 ) }
    soma_0 { pt3dadd( -0.418652, 7.27113, 0.0, 6.7513 ) }
    soma_0 { pt3dadd( -0.563146, 8.37478, 0.0, 5.22686 ) }
    soma_0 { pt3dadd( -0.70764, 9.47842, 0.0, 3.48033 ) }
    soma_0 { pt3dadd( -0.852134, 10.5821, 0.0, 2.02048 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.596014, -11.6449, -2.34, 2.22 ) }
    dend_29 { pt3dadd( -1.02636, -15.4198, -0.822263, 2.22 ) }
    dend_29 { pt3dadd( -1.40297, -19.2716, 0.603821, 2.49 ) }
    dend_29 { pt3dadd( -1.96824, -25.9623, 2.87351, 2.49 ) }
    dend_29 { pt3dadd( -2.29898, -32.4277, 4.74016, 2.49 ) }
    dend_29 { pt3dadd( -2.39192, -35.3617, 5.48663, 1.94 ) }
    dend_29 { pt3dadd( -2.43352, -38.524, 6.20422, 1.38 ) }
    dend_29 { pt3dadd( -2.34341, -42.3705, 6.96571, 1.11 ) }
    dend_29 { pt3dadd( -2.22508, -44.9649, 7.36021, 0.83 ) }
    dend_29 { pt3dadd( -1.90203, -51.4734, 7.95349, 1.11 ) }
    dend_29 { pt3dadd( -1.79845, -54.0995, 7.9876, 1.11 ) }
    dend_29 { pt3dadd( -1.66894, -57.2422, 7.94786, 1.38 ) }
    dend_29 { pt3dadd( -1.52267, -60.25, 7.8608, 0.83 ) }
    dend_29 { pt3dadd( -1.36853, -62.8096, 7.80058, 1.66 ) }
    dend_29 { pt3dadd( -1.18697, -65.2319, 7.76262, 1.11 ) }
    dend_29 { pt3dadd( -0.749438, -70.4768, 7.62991, 1.66 ) }
    dend_29 { pt3dadd( -0.486175, -73.3513, 7.55036, 1.38 ) }
    dend_29 { pt3dadd( -0.10875, -77.0484, 7.43853, 1.94 ) }
    dend_29 { pt3dadd( 0.385761, -80.9467, 7.31176, 1.38 ) }
    dend_29 { pt3dadd( 1.06651, -84.9974, 7.17442, 1.38 ) }
    dend_29 { pt3dadd( 2.10209, -89.9939, 7.00533, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.59602, 9.47005, -0.86, 2.22 ) }
    dend_0 { pt3dadd( -1.00672, 14.2369, -0.83273, 1.94 ) }
    dend_0 { pt3dadd( -0.673029, 17.9643, -0.715005, 1.94 ) }
    dend_0 { pt3dadd( -0.334968, 23.5436, -0.362651, 1.94 ) }
    dend_0 { pt3dadd( -0.245522, 25.5781, -0.208419, 1.38 ) }
    dend_0 { pt3dadd( 0.0307452, 30.1766, 0.123239, 2.22 ) }
    dend_0 { pt3dadd( 0.301895, 34.6899, 0.448753, 1.94 ) }
    dend_0 { pt3dadd( 0.654725, 40.7932, 0.913465, 1.94 ) }
    dend_0 { pt3dadd( 0.857684, 45.1906, 1.34248, 1.94 ) }
    dend_0 { pt3dadd( 0.93963, 49.4464, 1.89297, 1.94 ) }
    dend_0 { pt3dadd( 1.00119, 55.2115, 2.64595, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.852134, 10.5821, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -2.79938, 25.4552, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -4.74662, 40.3282, 0.0, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_29 (entry count 56/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.10209, -89.9939, 7.00533, 0.55 ) }
    dend_57 { pt3dadd( 2.8112, -91.3446, 7.43566, 0.55 ) }
    dend_57 { pt3dadd( 3.51262, -92.4996, 7.97875, 0.55 ) }
    dend_57 { pt3dadd( 4.52804, -94.0697, 8.95528, 0.28 ) }
    dend_57 { pt3dadd( 5.71328, -95.5667, 10.0024, 0.55 ) }
    dend_57 { pt3dadd( 7.15142, -97.2004, 11.1675, 0.28 ) }
    dend_57 { pt3dadd( 8.36171, -98.4721, 12.203, 1.11 ) }
    dend_57 { pt3dadd( 10.289, -100.378, 13.9485, 0.28 ) }
    dend_57 { pt3dadd( 11.5309, -101.522, 15.2816, 0.83 ) }
    dend_57 { pt3dadd( 13.3637, -103.087, 17.3986, 0.83 ) }
    dend_57 { pt3dadd( 14.4536, -103.994, 18.7188, 0.83 ) }
    dend_57 { pt3dadd( 16.2907, -105.55, 20.9778, 0.83 ) }
    dend_57 { pt3dadd( 17.2458, -106.353, 22.1615, 1.11 ) }
    dend_57 { pt3dadd( 20.1864, -108.979, 25.5902, 0.28 ) }
    dend_57 { pt3dadd( 20.8434, -109.611, 26.2696, 0.28 ) }
    dend_57 { pt3dadd( 21.4164, -110.189, 26.807, 0.55 ) }
    dend_57 { pt3dadd( 22.2768, -111.024, 27.4504, 0.55 ) }
    dend_57 { pt3dadd( 24.1132, -112.722, 28.4137, 0.55 ) }
    dend_57 { pt3dadd( 25.8632, -114.2, 29.0901, 0.55 ) }
    dend_57 { pt3dadd( 27.7944, -115.781, 29.5555, 0.83 ) }
    dend_57 { pt3dadd( 29.611, -117.132, 29.9688, 1.11 ) }
    dend_57 { pt3dadd( 31.198, -118.281, 30.3342, 0.55 ) }
    dend_57 { pt3dadd( 32.0616, -118.924, 30.5441, 1.38 ) }
    dend_57 { pt3dadd( 33.1885, -119.756, 30.8349, 0.55 ) }
    dend_57 { pt3dadd( 34.4658, -120.541, 31.1573, 1.11 ) }
    dend_57 { pt3dadd( 37.2074, -122.078, 31.778, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.10209, -89.9939, 7.00533, 1.38 ) }
    dend_30 { pt3dadd( 1.77122, -91.2688, 6.95937, 1.38 ) }
    dend_30 { pt3dadd( 0.885736, -95.0066, 7.13789, 1.38 ) }
    dend_30 { pt3dadd( 0.333909, -97.3359, 7.24914, 1.11 ) }
    dend_30 { pt3dadd( -0.865417, -102.398, 7.49093, 1.66 ) }
    dend_30 { pt3dadd( -1.6297, -105.624, 7.64501, 2.22 ) }
    dend_30 { pt3dadd( -2.01941, -107.269, 7.72357, 2.22 ) }
    dend_30 { pt3dadd( -3.09041, -111.995, 7.80293, 1.66 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 90/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.00119, 55.2115, 2.64595, 1.38 ) }
    dend_12 { pt3dadd( 0.908199, 58.1604, 2.6495, 1.38 ) }
    dend_12 { pt3dadd( 0.916373, 60.1596, 2.63362, 1.38 ) }
    dend_12 { pt3dadd( 0.978843, 63.0815, 2.59021, 1.11 ) }
    dend_12 { pt3dadd( 1.15772, 67.5764, 2.57746, 1.38 ) }
    dend_12 { pt3dadd( 1.23847, 69.8217, 2.56557, 1.38 ) }
    dend_12 { pt3dadd( 1.29232, 73.7433, 2.56487, 1.38 ) }
    dend_12 { pt3dadd( 1.30151, 78.7061, 2.56701, 1.38 ) }
    dend_12 { pt3dadd( 1.21988, 82.3223, 2.5724, 1.38 ) }
    dend_12 { pt3dadd( 1.1087, 85.6886, 2.58501, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_12 { pt3dadd( 0.906985, 88.8324, 2.60769, 1.38 ) }
    dend_12 { pt3dadd( 0.325342, 94.0796, 2.66363, 1.66 ) }
    dend_12 { pt3dadd( -0.137476, 97.0932, 2.70615, 1.38 ) }
    dend_12 { pt3dadd( -0.730157, 100.522, 2.65984, 1.38 ) }
    dend_12 { pt3dadd( -1.41935, 104.461, 2.48685, 1.38 ) }
    dend_12 { pt3dadd( -1.91128, 107.603, 2.25577, 1.38 ) }
    dend_12 { pt3dadd( -2.10918, 109.271, 2.11406, 1.38 ) }
    dend_12 { pt3dadd( -2.32566, 111.852, 1.87223, 1.11 ) }
    dend_12 { pt3dadd( -2.57128, 115.756, 1.52118, 1.11 ) }
    dend_12 { pt3dadd( -2.64678, 119.869, 1.16816, 1.11 ) }
    dend_12 { pt3dadd( -2.63868, 124.022, 0.859103, 1.38 ) }
    dend_12 { pt3dadd( -2.58894, 126.811, 0.724149, 1.11 ) }
    dend_12 { pt3dadd( -2.55586, 129.489, 0.670878, 1.38 ) }
    dend_12 { pt3dadd( -2.54024, 131.215, 0.724621, 1.38 ) }
    dend_12 { pt3dadd( -2.50416, 133.973, 1.03295, 1.38 ) }
    dend_12 { pt3dadd( -2.50347, 137.923, 1.60211, 1.94 ) }
    dend_12 { pt3dadd( -2.48789, 140.012, 1.93668, 1.66 ) }
    dend_12 { pt3dadd( -2.47476, 140.889, 2.07184, 1.66 ) }
    dend_12 { pt3dadd( -2.43453, 143.628, 2.45463, 1.66 ) }
    dend_12 { pt3dadd( -2.37773, 147.947, 3.01705, 1.66 ) }
    dend_12 { pt3dadd( -2.39899, 150.201, 3.28498, 1.38 ) }
    dend_12 { pt3dadd( -2.4808, 153.758, 3.64583, 1.66 ) }
    dend_12 { pt3dadd( -2.53326, 156.894, 3.87592, 1.11 ) }
    dend_12 { pt3dadd( -2.57428, 160.369, 4.08674, 1.11 ) }
    dend_12 { pt3dadd( -2.60986, 162.304, 4.1611, 1.11 ) }
    dend_12 { pt3dadd( -2.62747, 164.441, 4.21659, 1.11 ) }
    dend_12 { pt3dadd( -2.59894, 166.041, 4.27278, 1.11 ) }
    dend_12 { pt3dadd( -2.43139, 169.437, 4.41952, 1.38 ) }
    dend_12 { pt3dadd( -2.23647, 172.024, 4.54428, 1.11 ) }
    dend_12 { pt3dadd( -2.07523, 173.963, 4.63246, 1.38 ) }
    dend_12 { pt3dadd( -1.89373, 176.165, 4.72126, 1.38 ) }
    dend_12 { pt3dadd( -1.73294, 178.675, 4.80374, 0.83 ) }
    dend_12 { pt3dadd( -1.62123, 181.717, 4.87972, 1.38 ) }
    dend_12 { pt3dadd( -1.61955, 184.144, 4.91485, 0.83 ) }
    dend_12 { pt3dadd( -1.67345, 186.609, 4.91725, 1.38 ) }
    dend_12 { pt3dadd( -1.78698, 188.552, 4.92084, 1.38 ) }
    dend_12 { pt3dadd( -2.05537, 191.74, 4.90308, 1.38 ) }
    dend_12 { pt3dadd( -2.16123, 193.146, 4.88609, 1.38 ) }
    dend_12 { pt3dadd( -2.27204, 195.329, 4.84664, 1.11 ) }
    dend_12 { pt3dadd( -2.30395, 198.043, 4.78398, 1.11 ) }
    dend_12 { pt3dadd( -2.21392, 201.963, 4.67422, 1.66 ) }
    dend_12 { pt3dadd( -2.04281, 204.484, 4.59056, 1.11 ) }
    dend_12 { pt3dadd( -1.94642, 205.481, 4.61275, 1.11 ) }
    dend_12 { pt3dadd( -1.82233, 207.213, 4.7344, 1.38 ) }
    dend_12 { pt3dadd( -1.70169, 209.402, 4.98414, 1.38 ) }
    dend_12 { pt3dadd( -1.63894, 211.871, 5.35949, 1.94 ) }
    dend_12 { pt3dadd( -1.67915, 214.428, 5.82621, 1.94 ) }
    dend_12 { pt3dadd( -1.93535, 218.601, 6.62619, 1.11 ) }
    dend_12 { pt3dadd( -2.18908, 220.926, 7.04282, 1.11 ) }
    dend_12 { pt3dadd( -2.52435, 223.128, 7.40916, 1.38 ) }
    dend_12 { pt3dadd( -3.0222, 225.778, 7.79076, 1.38 ) }
    dend_12 { pt3dadd( -3.45528, 227.994, 8.03814, 1.11 ) }
    dend_12 { pt3dadd( -3.8729, 230.431, 8.20147, 0.83 ) }
    dend_12 { pt3dadd( -4.27994, 233.218, 8.22902, 0.83 ) }
    dend_12 { pt3dadd( -4.49917, 234.825, 8.24288, 0.83 ) }
    dend_12 { pt3dadd( -4.88603, 237.618, 8.26332, 1.11 ) }
    dend_12 { pt3dadd( -5.16997, 240.07, 8.25734, 1.11 ) }
    dend_12 { pt3dadd( -5.45978, 242.594, 8.23072, 1.38 ) }
    dend_12 { pt3dadd( -5.91048, 246.433, 8.17272, 1.38 ) }
    dend_12 { pt3dadd( -6.15742, 248.784, 8.12813, 1.11 ) }
    dend_12 { pt3dadd( -6.43547, 251.574, 8.06847, 1.38 ) }
    dend_12 { pt3dadd( -6.69224, 253.862, 7.98528, 0.83 ) }
    dend_12 { pt3dadd( -7.09983, 256.919, 7.8547, 0.83 ) }
    dend_12 { pt3dadd( -7.4081, 259.344, 7.72238, 1.38 ) }
    dend_12 { pt3dadd( -7.48794, 260.435, 7.65136, 1.38 ) }
    dend_12 { pt3dadd( -7.60803, 262.433, 7.50635, 1.11 ) }
    dend_12 { pt3dadd( -7.81351, 265.737, 7.24841, 1.38 ) }
    dend_12 { pt3dadd( -7.91467, 267.747, 7.08525, 1.11 ) }
    dend_12 { pt3dadd( -7.93421, 269.723, 6.90328, 1.11 ) }
    dend_12 { pt3dadd( -7.93228, 271.7, 6.7193, 1.11 ) }
    dend_12 { pt3dadd( -7.93537, 274.166, 6.48923, 1.11 ) }
    dend_12 { pt3dadd( -7.91587, 278.408, 6.07423, 1.11 ) }
    dend_12 { pt3dadd( -7.86726, 280.897, 5.83618, 1.11 ) }
    dend_12 { pt3dadd( -7.83808, 283.646, 5.63682, 1.38 ) }
    dend_12 { pt3dadd( -7.85269, 286.467, 5.51516, 1.38 ) }
    dend_12 { pt3dadd( -7.90547, 289.106, 5.46753, 0.83 ) }
    dend_12 { pt3dadd( -7.93015, 291.135, 5.49109, 1.38 ) }
    dend_12 { pt3dadd( -7.93294, 293.051, 5.57787, 1.38 ) }
    dend_12 { pt3dadd( -7.94678, 295.654, 5.76587, 1.11 ) }
    dend_12 { pt3dadd( -7.93938, 297.383, 5.9268, 0.55 ) }
    dend_12 { pt3dadd( -7.84043, 299.105, 6.09379, 1.11 ) }
    dend_12 { pt3dadd( -7.73134, 300.733, 6.24783, 1.11 ) }
    dend_12 { pt3dadd( -7.60593, 302.474, 6.37996, 0.83 ) }
    dend_12 { pt3dadd( -7.46313, 304.313, 6.4505, 0.83 ) }
    dend_12 { pt3dadd( -7.33672, 305.984, 6.44824, 0.83 ) }
    dend_12 { pt3dadd( -7.19923, 309.028, 6.44634, 1.11 ) }
    dend_12 { pt3dadd( -7.10721, 311.015, 6.41078, 1.66 ) }
    dend_12 { pt3dadd( -7.09012, 312.926, 6.35532, 1.66 ) }
    dend_12 { pt3dadd( -7.176, 315.403, 6.27428, 0.83 ) }
    dend_12 { pt3dadd( -7.26602, 317.392, 6.19416, 0.83 ) }
    dend_12 { pt3dadd( -7.36058, 320.199, 6.06977, 1.11 ) }
    dend_12 { pt3dadd( -7.52034, 323.54, 5.91347, 0.83 ) }
    dend_12 { pt3dadd( -7.67352, 327.272, 5.74099, 0.83 ) }
    dend_12 { pt3dadd( -7.75948, 329.407, 5.6411, 0.83 ) }
    dend_12 { pt3dadd( -7.95393, 333.821, 5.43888, 1.38 ) }
    dend_12 { pt3dadd( -8.19374, 338.232, 5.25407, 1.38 ) }
    dend_12 { pt3dadd( -8.31364, 340.197, 5.18453, 1.11 ) }
    dend_12 { pt3dadd( -8.60098, 343.245, 5.11614, 1.11 ) }
    dend_12 { pt3dadd( -8.80597, 345.181, 5.07205, 0.83 ) }
    dend_12 { pt3dadd( -9.01245, 346.541, 5.04565, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( -9.49158, 348.819, 5.11736, 1.38 ) }
    dend_12 { pt3dadd( -9.74209, 350.003, 5.24475, 1.38 ) }
    dend_12 { pt3dadd( -10.1712, 352.779, 5.66628, 0.83 ) }
    dend_12 { pt3dadd( -10.3625, 354.675, 6.01956, 0.83 ) }
    dend_12 { pt3dadd( -10.5653, 357.703, 6.46487, 0.83 ) }
    dend_12 { pt3dadd( -10.6595, 360.533, 6.90581, 0.83 ) }
    dend_12 { pt3dadd( -10.6585, 364.167, 7.51126, 1.38 ) }
    dend_12 { pt3dadd( -10.6182, 366.634, 7.94273, 1.38 ) }
    dend_12 { pt3dadd( -10.4714, 368.351, 8.259, 1.38 ) }
    dend_12 { pt3dadd( -9.86866, 372.33, 8.95115, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.00119, 55.2115, 2.64595, 1.11 ) }
    dend_1 { pt3dadd( 1.2482, 58.0178, -0.215768, 1.11 ) }
    dend_1 { pt3dadd( 1.33742, 58.8848, -0.980526, 1.11 ) }
    dend_1 { pt3dadd( 1.44615, 60.3781, -2.32541, 1.11 ) }
    dend_1 { pt3dadd( 1.67973, 64.659, -6.03805, 1.11 ) }
    dend_1 { pt3dadd( 1.74102, 66.2457, -7.25759, 1.11 ) }
    dend_1 { pt3dadd( 1.78559, 68.4741, -8.82055, 0.83 ) }
    dend_1 { pt3dadd( 1.76569, 69.8066, -9.61359, 0.83 ) }
    dend_1 { pt3dadd( 1.72128, 73.6146, -11.6395, 1.11 ) }
    dend_1 { pt3dadd( 1.7033, 75.3561, -12.3909, 1.11 ) }
    dend_1 { pt3dadd( 1.55497, 78.0929, -13.1787, 1.11 ) }
    dend_1 { pt3dadd( 1.30448, 80.6001, -13.6857, 1.11 ) }
    dend_1 { pt3dadd( 1.08982, 82.3478, -13.8648, 1.38 ) }
    dend_1 { pt3dadd( 0.96146, 83.5736, -13.8314, 1.38 ) }
    dend_1 { pt3dadd( 0.854406, 84.9947, -13.6521, 1.11 ) }
    dend_1 { pt3dadd( 0.662745, 87.7027, -13.295, 1.11 ) }
    dend_1 { pt3dadd( 0.495848, 90.5649, -12.9893, 0.83 ) }
    dend_1 { pt3dadd( 0.477801, 91.0176, -12.9288, 0.83 ) }
    dend_1 { pt3dadd( 0.413296, 93.7798, -12.6473, 1.66 ) }
    dend_1 { pt3dadd( 0.343, 96.1472, -12.5438, 0.83 ) }
    dend_1 { pt3dadd( 0.328355, 96.6022, -12.5537, 0.83 ) }
    dend_1 { pt3dadd( 0.291693, 98.5326, -12.7142, 1.66 ) }
    dend_1 { pt3dadd( 0.255552, 99.7463, -12.8689, 1.66 ) }
    dend_1 { pt3dadd( 0.197122, 101.283, -13.0157, 1.11 ) }
    dend_1 { pt3dadd( 0.0829803, 103.093, -13.1611, 1.11 ) }
    dend_1 { pt3dadd( -0.0532484, 105.035, -13.2446, 1.11 ) }
    dend_1 { pt3dadd( -0.193671, 107.352, -13.3629, 1.66 ) }
    dend_1 { pt3dadd( -0.313141, 109.541, -13.4464, 1.66 ) }
    dend_1 { pt3dadd( -0.45651, 111.829, -13.5813, 0.83 ) }
    dend_1 { pt3dadd( -0.58181, 113.842, -13.7812, 0.83 ) }
    dend_1 { pt3dadd( -0.646387, 115.264, -13.9869, 0.83 ) }
    dend_1 { pt3dadd( -0.689891, 117.304, -14.3319, 1.66 ) }
    dend_1 { pt3dadd( -0.706628, 119.256, -14.6977, 0.55 ) }
    dend_1 { pt3dadd( -0.717711, 121.161, -15.0492, 0.55 ) }
    dend_1 { pt3dadd( -0.682942, 123.288, -15.4002, 1.38 ) }
    dend_1 { pt3dadd( -0.604302, 125.061, -15.6154, 1.94 ) }
    dend_1 { pt3dadd( -0.504756, 127.2, -15.798, 0.83 ) }
    dend_1 { pt3dadd( -0.460875, 128.391, -15.8528, 0.83 ) }
    dend_1 { pt3dadd( -0.42084, 130.4, -15.9029, 1.94 ) }
    dend_1 { pt3dadd( -0.392722, 132.928, -15.8545, 1.94 ) }
    dend_1 { pt3dadd( -0.406806, 134.575, -15.8008, 1.11 ) }
    dend_1 { pt3dadd( -0.414596, 136.508, -15.626, 1.11 ) }
    dend_1 { pt3dadd( -0.431268, 138.259, -15.4069, 1.11 ) }
    dend_1 { pt3dadd( -0.43916, 139.268, -15.2488, 1.11 ) }
    dend_1 { pt3dadd( -0.456398, 140.3, -15.0832, 1.11 ) }
    dend_1 { pt3dadd( -0.589115, 144.139, -14.4606, 2.22 ) }
    dend_1 { pt3dadd( -0.707807, 148.532, -13.773, 0.83 ) }
    dend_1 { pt3dadd( -0.721256, 149.813, -13.5971, 0.83 ) }
    dend_1 { pt3dadd( -0.695126, 151.545, -13.4022, 1.11 ) }
    dend_1 { pt3dadd( -0.655668, 153.703, -13.2348, 0.55 ) }
    dend_1 { pt3dadd( -0.680358, 155.381, -13.1827, 2.22 ) }
    dend_1 { pt3dadd( -0.730416, 156.431, -13.2404, 1.94 ) }
    dend_1 { pt3dadd( -0.809196, 157.952, -13.4668, 0.83 ) }
    dend_1 { pt3dadd( -0.85734, 159.573, -13.7019, 0.83 ) }
    dend_1 { pt3dadd( -0.87542, 161.202, -13.9155, 0.83 ) }
    dend_1 { pt3dadd( -0.91798, 162.923, -14.0869, 1.66 ) }
    dend_1 { pt3dadd( -0.979709, 164.815, -14.2587, 0.83 ) }
    dend_1 { pt3dadd( -1.01831, 165.898, -14.3349, 0.83 ) }
    dend_1 { pt3dadd( -1.05295, 166.817, -14.4009, 1.11 ) }
    dend_1 { pt3dadd( -1.12581, 168.236, -14.5144, 0.83 ) }
    dend_1 { pt3dadd( -1.22301, 170.717, -14.74, 0.83 ) }
    dend_1 { pt3dadd( -1.24311, 171.166, -14.7806, 0.83 ) }
    dend_1 { pt3dadd( -1.41917, 173.642, -14.9827, 1.94 ) }
    dend_1 { pt3dadd( -1.5543, 175.489, -15.1357, 0.55 ) }
    dend_1 { pt3dadd( -1.69463, 177.575, -15.3556, 0.55 ) }
    dend_1 { pt3dadd( -1.72404, 177.95, -15.4116, 0.55 ) }
    dend_1 { pt3dadd( -1.98827, 180.921, -15.9407, 2.22 ) }
    dend_1 { pt3dadd( -2.14503, 183.189, -16.3663, 0.83 ) }
    dend_1 { pt3dadd( -2.18786, 184.217, -16.5516, 0.83 ) }
    dend_1 { pt3dadd( -2.22583, 186.649, -16.9492, 1.38 ) }
    dend_1 { pt3dadd( -2.18126, 188.794, -17.2769, 0.55 ) }
    dend_1 { pt3dadd( -2.11018, 190.697, -17.5242, 0.55 ) }
    dend_1 { pt3dadd( -1.94116, 193.343, -17.8807, 0.83 ) }
    dend_1 { pt3dadd( -1.61328, 197.064, -18.1718, 0.83 ) }
    dend_1 { pt3dadd( -1.50503, 198.111, -18.1984, 2.49 ) }
    dend_1 { pt3dadd( -1.27602, 200.131, -18.1331, 2.49 ) }
    dend_1 { pt3dadd( -0.923071, 203.273, -17.9141, 0.83 ) }
    dend_1 { pt3dadd( -0.732586, 205.042, -17.7691, 0.83 ) }
    dend_1 { pt3dadd( -0.526206, 208.553, -17.4547, 0.83 ) }
    dend_1 { pt3dadd( -0.485691, 209.593, -17.3568, 0.83 ) }
    dend_1 { pt3dadd( -0.490272, 211.853, -17.1634, 1.66 ) }
    dend_1 { pt3dadd( -0.531728, 214.137, -16.9965, 0.83 ) }
    dend_1 { pt3dadd( -0.573352, 215.806, -16.8982, 0.83 ) }
    dend_1 { pt3dadd( -0.647852, 218.301, -16.7954, 0.83 ) }
    dend_1 { pt3dadd( -0.693158, 220.228, -16.7973, 1.94 ) }
    dend_1 { pt3dadd( -0.694717, 223.416, -16.7987, 0.83 ) }
    dend_1 { pt3dadd( -0.646344, 226.704, -16.799, 0.83 ) }
    dend_1 { pt3dadd( -0.610244, 228.179, -16.7988, 0.83 ) }
    dend_1 { pt3dadd( -0.570826, 230.037, -16.7987, 1.11 ) }
    dend_1 { pt3dadd( -0.544144, 231.476, -16.7987, 2.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -0.559862, 233.941, -16.8001, 0.83 ) }
    dend_1 { pt3dadd( -0.596124, 234.79, -16.8013, 0.83 ) }
    dend_1 { pt3dadd( -0.699699, 236.223, -16.8042, 0.83 ) }
    dend_1 { pt3dadd( -0.874739, 238.598, -16.8092, 0.83 ) }
    dend_1 { pt3dadd( -1.01922, 240.918, -16.8622, 0.83 ) }
    dend_1 { pt3dadd( -1.2029, 243.634, -16.9717, 1.11 ) }
    dend_1 { pt3dadd( -1.33355, 246.01, -17.1266, 1.66 ) }
    dend_1 { pt3dadd( -1.40706, 248.287, -17.3016, 0.83 ) }
    dend_1 { pt3dadd( -1.43974, 250.149, -17.4749, 0.83 ) }
    dend_1 { pt3dadd( -1.3828, 252.291, -17.7048, 0.83 ) }
    dend_1 { pt3dadd( -1.29935, 253.865, -17.8908, 0.83 ) }
    dend_1 { pt3dadd( -1.2159, 255.598, -18.1113, 0.83 ) }
    dend_1 { pt3dadd( -1.08338, 258.307, -18.4526, 1.66 ) }
    dend_1 { pt3dadd( -0.988119, 260.459, -18.7159, 0.83 ) }
    dend_1 { pt3dadd( -0.942694, 261.599, -18.8393, 0.83 ) }
    dend_1 { pt3dadd( -0.86679, 264.364, -19.0576, 1.38 ) }
    dend_1 { pt3dadd( -0.75234, 266.959, -19.2516, 0.83 ) }
    dend_1 { pt3dadd( -0.701068, 268.399, -19.3482, 0.83 ) }
    dend_1 { pt3dadd( -0.67226, 269.262, -19.4163, 1.66 ) }
    dend_1 { pt3dadd( -0.639398, 271.009, -19.5354, 1.66 ) }
    dend_1 { pt3dadd( -0.685526, 272.771, -19.6525, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 21/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.74662, 40.3282, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -6.69386, 55.2013, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -8.6411, 70.0744, 0.0, 0.28 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 24/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 37.2074, -122.078, 31.778, 0.83 ) }
    dend_59 { pt3dadd( 38.4962, -121.981, 33.3469, 0.83 ) }
    dend_59 { pt3dadd( 39.3279, -121.893, 34.4671, 0.28 ) }
    dend_59 { pt3dadd( 41.3299, -121.682, 37.1635, 0.55 ) }
    dend_59 { pt3dadd( 42.1191, -121.599, 38.2266, 0.55 ) }
    dend_59 { pt3dadd( 43.2573, -121.479, 39.7596, 0.55 ) }
    dend_59 { pt3dadd( 46.9165, -121.092, 44.6883, 0.28 ) }
    dend_59 { pt3dadd( 47.364, -121.09, 45.4193, 0.28 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 32/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 37.2074, -122.078, 31.778, 0.55 ) }
    dend_58 { pt3dadd( 38.0445, -123.453, 33.4693, 0.55 ) }
    dend_58 { pt3dadd( 38.2609, -123.685, 33.9383, 0.83 ) }
    dend_58 { pt3dadd( 38.7722, -124.326, 35.1423, 0.28 ) }
    dend_58 { pt3dadd( 38.9599, -124.611, 35.6852, 0.83 ) }
    dend_58 { pt3dadd( 39.3358, -125.153, 36.743, 0.83 ) }
    dend_58 { pt3dadd( 40.2613, -126.441, 39.2523, 0.83 ) }
    dend_58 { pt3dadd( 41.5633, -127.941, 42.3505, 0.83 ) }
    dend_58 { pt3dadd( 42.0259, -128.44, 43.6058, 0.83 ) }
    dend_58 { pt3dadd( 43.1451, -129.356, 46.8539, 1.11 ) }
    dend_58 { pt3dadd( 43.4316, -129.547, 47.9997, 0.83 ) }
    dend_58 { pt3dadd( 43.5006, -129.566, 48.4311, 0.83 ) }
    dend_58 { pt3dadd( 43.5568, -129.334, 49.9963, 0.83 ) }
    dend_58 { pt3dadd( 43.2755, -128.318, 53.0318, 0.83 ) }
    dend_58 { pt3dadd( 43.0141, -127.338, 55.1235, 0.83 ) }
    dend_58 { pt3dadd( 42.5295, -125.734, 57.6198, 0.83 ) }
    dend_58 { pt3dadd( 42.1968, -124.916, 58.8499, 1.11 ) }
    dend_58 { pt3dadd( 41.5917, -123.65, 60.6749, 0.28 ) }
    dend_58 { pt3dadd( 41.4426, -123.406, 61.0108, 0.55 ) }
    dend_58 { pt3dadd( 40.8443, -122.254, 62.2456, 0.28 ) }
    dend_58 { pt3dadd( 40.2696, -121.657, 62.9309, 1.11 ) }
    // Section: dend_46, id: dend_46, parent: dend_30 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.09041, -111.995, 7.80293, 1.11 ) }
    dend_46 { pt3dadd( -3.61594, -112.991, 8.77154, 1.11 ) }
    dend_46 { pt3dadd( -4.18938, -114.37, 9.94482, 1.11 ) }
    dend_46 { pt3dadd( -5.49431, -118.263, 12.7288, 1.38 ) }
    dend_46 { pt3dadd( -6.09484, -120.59, 14.3473, 1.38 ) }
    dend_46 { pt3dadd( -6.53725, -122.305, 15.5397, 1.66 ) }
    dend_46 { pt3dadd( -7.23885, -125.024, 17.4306, 1.11 ) }
    dend_46 { pt3dadd( -7.54834, -126.603, 18.4706, 1.11 ) }
    dend_46 { pt3dadd( -7.8423, -129.073, 19.9106, 1.38 ) }
    dend_46 { pt3dadd( -8.06578, -133.315, 21.9198, 2.77 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 63/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.09041, -111.995, 7.80293, 1.38 ) }
    dend_31 { pt3dadd( -3.17127, -116.487, 7.93187, 1.38 ) }
    dend_31 { pt3dadd( -3.13919, -120.118, 8.10244, 1.94 ) }
    dend_31 { pt3dadd( -3.10623, -122.759, 8.01327, 1.38 ) }
    dend_31 { pt3dadd( -3.03374, -127.147, 7.24911, 1.94 ) }
    dend_31 { pt3dadd( -2.88841, -130.558, 6.35191, 0.83 ) }
    dend_31 { pt3dadd( -2.74773, -132.624, 5.6661, 0.83 ) }
    dend_31 { pt3dadd( -2.42768, -135.276, 4.60414, 1.38 ) }
    dend_31 { pt3dadd( -1.69, -139.271, 2.53165, 1.94 ) }
    dend_31 { pt3dadd( -0.619427, -143.517, -0.277605, 0.83 ) }
    dend_31 { pt3dadd( -0.219023, -144.822, -1.33708, 0.83 ) }
    dend_31 { pt3dadd( 0.813994, -148.008, -4.46079, 1.11 ) }
    dend_31 { pt3dadd( 1.44313, -149.834, -6.34218, 0.55 ) }
    dend_31 { pt3dadd( 1.73288, -150.792, -7.38357, 0.55 ) }
    dend_31 { pt3dadd( 2.23953, -152.766, -9.49898, 0.55 ) }
    dend_31 { pt3dadd( 2.40361, -153.79, -10.6809, 0.83 ) }
    dend_31 { pt3dadd( 2.64402, -156.085, -13.5083, 0.55 ) }
    dend_31 { pt3dadd( 2.78577, -158.348, -16.5444, 1.66 ) }
    dend_31 { pt3dadd( 2.83096, -161.916, -21.4246, 0.55 ) }
    dend_31 { pt3dadd( 2.75617, -163.461, -23.4827, 1.66 ) }
    dend_31 { pt3dadd( 2.42494, -166.791, -27.6921, 0.55 ) }
    dend_31 { pt3dadd( 2.29082, -168.251, -29.5707, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_12 (entry count 85/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.86866, 372.33, 8.95115, 0.83 ) }
    dend_28 { pt3dadd( -9.60602, 373.865, 7.84733, 0.83 ) }
    dend_28 { pt3dadd( -9.39729, 375.559, 6.62171, 0.83 ) }
    dend_28 { pt3dadd( -9.13094, 377.775, 5.20127, 0.55 ) }
    dend_28 { pt3dadd( -8.80121, 379.971, 3.8975, 0.83 ) }
    dend_28 { pt3dadd( -8.46253, 382.189, 2.70264, 0.28 ) }
    dend_28 { pt3dadd( -8.31579, 383.218, 2.19899, 0.55 ) }
    dend_28 { pt3dadd( -8.26163, 383.924, 1.85932, 0.55 ) }
    dend_28 { pt3dadd( -8.08931, 385.985, 0.990498, 1.11 ) }
    dend_28 { pt3dadd( -7.92236, 387.747, 0.428987, 0.55 ) }
    dend_28 { pt3dadd( -7.78176, 389.262, 0.031158, 1.11 ) }
    dend_28 { pt3dadd( -7.67349, 390.572, -0.236564, 1.11 ) }
    dend_28 { pt3dadd( -7.53683, 392.544, -0.556337, 0.28 ) }
    dend_28 { pt3dadd( -7.42546, 395.107, -1.05532, 0.55 ) }
    dend_28 { pt3dadd( -7.39247, 398.111, -1.7061, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( -7.37087, 399.649, -1.99259, 0.55 ) }
    dend_28 { pt3dadd( -7.34397, 400.777, -2.17758, 0.28 ) }
    dend_28 { pt3dadd( -7.27503, 402.421, -2.31154, 0.83 ) }
    dend_28 { pt3dadd( -7.13742, 405.639, -2.27236, 1.38 ) }
    dend_28 { pt3dadd( -7.13025, 407.172, -2.17267, 1.38 ) }
    dend_28 { pt3dadd( -7.08666, 410.681, -1.7681, 0.83 ) }
    dend_28 { pt3dadd( -7.08521, 412.354, -1.5289, 0.83 ) }
    dend_28 { pt3dadd( -7.10973, 416.99, -0.685913, 0.83 ) }
    dend_28 { pt3dadd( -7.13584, 418.585, -0.358056, 0.83 ) }
    dend_28 { pt3dadd( -7.18385, 421.135, 0.310639, 0.83 ) }
    dend_28 { pt3dadd( -7.20636, 421.783, 0.486554, 0.83 ) }
    dend_28 { pt3dadd( -7.28326, 424.008, 1.07183, 1.38 ) }
    dend_28 { pt3dadd( -7.29632, 425.567, 1.43633, 0.55 ) }
    dend_28 { pt3dadd( -7.28126, 427.452, 1.74186, 0.55 ) }
    dend_28 { pt3dadd( -7.19352, 428.489, 1.86327, 0.55 ) }
    dend_28 { pt3dadd( -7.08563, 429.248, 1.92224, 0.28 ) }
    dend_28 { pt3dadd( -6.71164, 431.35, 1.99403, 0.83 ) }
    dend_28 { pt3dadd( -6.33702, 432.971, 1.94555, 0.55 ) }
    dend_28 { pt3dadd( -5.86055, 434.714, 1.82123, 0.83 ) }
    dend_28 { pt3dadd( -5.15817, 437.217, 1.59816, 0.55 ) }
    dend_28 { pt3dadd( -4.76533, 438.671, 1.45307, 1.66 ) }
    dend_28 { pt3dadd( -4.17824, 440.946, 1.21174, 1.66 ) }
    dend_28 { pt3dadd( -3.59865, 443.435, 0.945812, 0.83 ) }
    dend_28 { pt3dadd( -3.18995, 445.439, 0.739917, 0.83 ) }
    dend_28 { pt3dadd( -2.91716, 447.085, 0.588766, 0.83 ) }
    dend_28 { pt3dadd( -2.80699, 448.07, 0.516371, 0.28 ) }
    dend_28 { pt3dadd( -2.7005, 449.738, 0.448429, 1.11 ) }
    dend_28 { pt3dadd( -2.71066, 452.246, 0.410608, 0.55 ) }
    dend_28 { pt3dadd( -2.77582, 453.691, 0.419951, 0.55 ) }
    dend_28 { pt3dadd( -2.86195, 455.2, 0.407528, 0.55 ) }
    dend_28 { pt3dadd( -2.93994, 456.197, 0.376879, 0.55 ) }
    dend_28 { pt3dadd( -3.12506, 457.64, 0.297813, 1.11 ) }
    dend_28 { pt3dadd( -3.39279, 459.229, 0.177059, 0.28 ) }
    dend_28 { pt3dadd( -3.52713, 459.973, 0.112118, 0.55 ) }
    dend_28 { pt3dadd( -3.73653, 461.743, -0.0256574, 0.55 ) }
    dend_28 { pt3dadd( -3.91348, 464.563, -0.21499, 0.55 ) }
    dend_28 { pt3dadd( -3.91765, 465.556, -0.261967, 0.83 ) }
    dend_28 { pt3dadd( -3.86073, 467.129, -0.350537, 0.83 ) }
    dend_28 { pt3dadd( -3.7195, 469.384, -0.431705, 0.83 ) }
    dend_28 { pt3dadd( -3.51413, 471.521, -0.434619, 0.83 ) }
    dend_28 { pt3dadd( -3.26229, 473.163, -0.395149, 0.83 ) }
    dend_28 { pt3dadd( -2.42443, 476.763, -0.234253, 1.11 ) }
    dend_28 { pt3dadd( -1.90748, 478.605, -0.132259, 0.28 ) }
    dend_28 { pt3dadd( -1.53241, 479.695, -0.075006, 0.55 ) }
    dend_28 { pt3dadd( -1.1103, 480.878, 0.112683, 0.55 ) }
    dend_28 { pt3dadd( -0.746817, 481.88, 0.37818, 0.55 ) }
    dend_28 { pt3dadd( -0.4529, 482.555, 0.638515, 0.55 ) }
    dend_28 { pt3dadd( 0.671752, 484.606, 1.59707, 0.55 ) }
    dend_28 { pt3dadd( 1.45056, 486.062, 2.26582, 0.83 ) }
    dend_28 { pt3dadd( 3.42454, 489.746, 3.60526, 0.55 ) }
    dend_28 { pt3dadd( 3.74401, 490.378, 3.82232, 0.83 ) }
    dend_28 { pt3dadd( 4.32177, 491.634, 4.21729, 0.83 ) }
    dend_28 { pt3dadd( 4.98205, 493.211, 4.63766, 0.55 ) }
    dend_28 { pt3dadd( 5.53245, 494.657, 4.91959, 0.83 ) }
    dend_28 { pt3dadd( 6.31371, 497.007, 5.16835, 0.83 ) }
    dend_28 { pt3dadd( 6.93063, 499.077, 5.25877, 0.55 ) }
    dend_28 { pt3dadd( 7.11209, 499.84, 5.33552, 0.55 ) }
    dend_28 { pt3dadd( 7.44882, 501.552, 5.58719, 0.55 ) }
    dend_28 { pt3dadd( 7.58117, 502.381, 5.74456, 0.83 ) }
    dend_28 { pt3dadd( 7.8143, 503.841, 6.0645, 0.83 ) }
    dend_28 { pt3dadd( 8.12012, 506.431, 6.59343, 0.55 ) }
    dend_28 { pt3dadd( 8.27474, 507.691, 6.79451, 0.55 ) }
    dend_28 { pt3dadd( 8.48777, 509.584, 7.10783, 0.55 ) }
    dend_28 { pt3dadd( 8.63755, 511.142, 7.35332, 0.55 ) }
    dend_28 { pt3dadd( 8.94664, 514.038, 7.8015, 0.55 ) }
    dend_28 { pt3dadd( 9.17804, 516.087, 8.06319, 0.83 ) }
    dend_28 { pt3dadd( 9.30518, 517.148, 8.1417, 1.11 ) }
    dend_28 { pt3dadd( 9.47754, 519.259, 8.2954, 0.55 ) }
    dend_28 { pt3dadd( 9.56127, 522.283, 8.55725, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 69/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.86866, 372.33, 8.95115, 0.55 ) }
    dend_13 { pt3dadd( -10.9703, 374.942, 8.50578, 0.55 ) }
    dend_13 { pt3dadd( -11.6955, 376.817, 8.25111, 0.55 ) }
    dend_13 { pt3dadd( -12.2334, 378.409, 8.07834, 0.55 ) }
    dend_13 { pt3dadd( -12.6741, 379.846, 7.94224, 0.55 ) }
    dend_13 { pt3dadd( -13.5481, 382.79, 7.69207, 0.55 ) }
    dend_13 { pt3dadd( -14.0541, 384.498, 7.55121, 0.83 ) }
    dend_13 { pt3dadd( -14.7151, 386.646, 7.44997, 0.83 ) }
    dend_13 { pt3dadd( -15.3677, 388.879, 7.34295, 0.83 ) }
    dend_13 { pt3dadd( -15.8114, 390.748, 7.25962, 0.55 ) }
    dend_13 { pt3dadd( -16.1149, 392.317, 7.19687, 0.55 ) }
    dend_13 { pt3dadd( -16.5441, 394.472, 7.13508, 0.83 ) }
    dend_13 { pt3dadd( -16.8926, 396.206, 7.09933, 0.83 ) }
    dend_13 { pt3dadd( -17.4956, 398.926, 7.04746, 0.83 ) }
    dend_13 { pt3dadd( -17.9033, 400.705, 7.02301, 0.83 ) }
    dend_13 { pt3dadd( -18.2018, 402.09, 7.02046, 0.55 ) }
    dend_13 { pt3dadd( -18.5322, 403.879, 7.03994, 0.83 ) }
    dend_13 { pt3dadd( -18.8345, 405.866, 7.1154, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.685526, 272.771, -19.6525, 0.55 ) }
    dend_3 { pt3dadd( -0.726436, 274.216, -19.6585, 0.55 ) }
    dend_3 { pt3dadd( -0.785611, 276.306, -19.6673, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 90/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.685526, 272.771, -19.6525, 0.55 ) }
    dend_2 { pt3dadd( -2.82562, 273.03, -18.8518, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 92/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 47.364, -121.09, 45.4193, 0.28 ) }
    dend_61 { pt3dadd( 48.9107, -123.664, 43.7153, 0.28 ) }
    dend_61 { pt3dadd( 49.1958, -124.138, 43.4012, 1.11 ) }
    dend_61 { pt3dadd( 50.5493, -126.391, 41.9098, 0.28 ) }
    dend_61 { pt3dadd( 50.6854, -126.617, 41.7599, 1.11 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 97/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 47.364, -121.09, 45.4193, 1.66 ) }
    dend_60 { pt3dadd( 47.3406, -120.241, 46.3697, 1.66 ) }
    dend_60 { pt3dadd( 47.1055, -117.906, 48.4546, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 46.8392, -115.573, 50.4141, 0.28 ) }
    dend_60 { pt3dadd( 46.7019, -114.782, 51.0178, 0.55 ) }
    dend_60 { pt3dadd( 46.0981, -112.052, 52.8595, 0.28 ) }
    dend_60 { pt3dadd( 45.7229, -110.417, 53.9199, 0.83 ) }
    dend_60 { pt3dadd( 45.1501, -108.298, 55.2796, 0.83 ) }
    dend_60 { pt3dadd( 44.7373, -106.961, 56.0239, 0.28 ) }
    dend_60 { pt3dadd( 44.1085, -105.026, 56.9796, 0.55 ) }
    dend_60 { pt3dadd( 43.3637, -103.279, 57.6902, 0.55 ) }
    dend_60 { pt3dadd( 42.2452, -101.163, 58.3675, 0.28 ) }
    dend_60 { pt3dadd( 41.85, -100.534, 58.5466, 0.83 ) }
    dend_60 { pt3dadd( 40.7077, -98.7784, 59.0191, 0.28 ) }
    dend_60 { pt3dadd( 39.3004, -96.7358, 59.4808, 0.55 ) }
    dend_60 { pt3dadd( 37.5172, -94.2723, 59.9869, 0.28 ) }
    dend_60 { pt3dadd( 36.1609, -92.5792, 60.2573, 1.11 ) }
    dend_60 { pt3dadd( 35.0468, -91.3247, 60.3305, 0.28 ) }
    dend_60 { pt3dadd( 33.597, -89.7275, 60.3635, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_46 (entry count 16/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -8.06578, -133.315, 21.9198, 0.83 ) }
    dend_56 { pt3dadd( -6.54951, -139.494, 22.662, 0.83 ) }
    dend_56 { pt3dadd( -5.69277, -142.515, 23.005, 0.83 ) }
    dend_56 { pt3dadd( -4.30176, -147.88, 23.5791, 0.83 ) }
    dend_56 { pt3dadd( -3.4846, -151.844, 24.2807, 0.55 ) }
    dend_56 { pt3dadd( -2.94839, -155.508, 25.2048, 0.83 ) }
    dend_56 { pt3dadd( -2.6194, -159.02, 26.3591, 0.83 ) }
    dend_56 { pt3dadd( -2.50138, -161.613, 27.6035, 0.83 ) }
    dend_56 { pt3dadd( -2.58856, -165.849, 30.0566, 0.83 ) }
    dend_56 { pt3dadd( -3.00371, -170.943, 33.3847, 0.83 ) }
    dend_56 { pt3dadd( -3.49534, -174.269, 35.6367, 0.83 ) }
    dend_56 { pt3dadd( -4.56599, -179.556, 39.412, 1.11 ) }
    dend_56 { pt3dadd( -5.50236, -183.515, 42.3069, 0.55 ) }
    dend_56 { pt3dadd( -6.11927, -186.364, 44.2633, 0.55 ) }
    dend_56 { pt3dadd( -6.79021, -189.937, 46.4421, 0.83 ) }
    dend_56 { pt3dadd( -7.18358, -192.276, 47.5559, 0.83 ) }
    dend_56 { pt3dadd( -7.4615, -194.318, 48.3694, 0.28 ) }
    dend_56 { pt3dadd( -7.75088, -196.465, 49.1159, 0.55 ) }
    dend_56 { pt3dadd( -8.33861, -201.014, 50.5228, 1.11 ) }
    dend_56 { pt3dadd( -8.66036, -204.221, 51.4089, 0.28 ) }
    dend_56 { pt3dadd( -8.83901, -206.033, 51.8596, 0.55 ) }
    dend_56 { pt3dadd( -9.49547, -211.201, 53.0483, 0.28 ) }
    dend_56 { pt3dadd( -9.62489, -212.191, 53.2896, 0.83 ) }
    dend_56 { pt3dadd( -10.0564, -216.154, 54.3109, 0.83 ) }
    dend_56 { pt3dadd( -10.4824, -220.268, 55.3896, 0.28 ) }
    dend_56 { pt3dadd( -10.5181, -220.884, 55.5341, 1.11 ) }
    dend_56 { pt3dadd( -10.6119, -223.655, 56.0527, 1.11 ) }
    dend_56 { pt3dadd( -10.8315, -227.776, 56.6328, 0.55 ) }
    dend_56 { pt3dadd( -10.9639, -230.968, 57.1614, 1.11 ) }
    dend_56 { pt3dadd( -11.0232, -233.624, 57.7019, 1.11 ) }
    dend_56 { pt3dadd( -11.0627, -235.473, 58.2148, 1.11 ) }
    dend_56 { pt3dadd( -11.135, -237.92, 58.9046, 0.28 ) }
    dend_56 { pt3dadd( -11.0999, -239.43, 59.4427, 0.55 ) }
    dend_56 { pt3dadd( -10.958, -241.764, 60.371, 0.28 ) }
    dend_56 { pt3dadd( -10.8403, -242.918, 61.0261, 0.83 ) }
    dend_56 { pt3dadd( -10.5845, -245.163, 62.4886, 0.28 ) }
    dend_56 { pt3dadd( -10.441, -246.352, 63.2688, 0.83 ) }
    dend_56 { pt3dadd( -9.75823, -250.815, 66.1091, 0.28 ) }
    dend_56 { pt3dadd( -9.58301, -252.195, 66.8718, 0.83 ) }
    dend_56 { pt3dadd( -9.23462, -256.1, 68.6617, 0.55 ) }
    dend_56 { pt3dadd( -9.088, -258.74, 69.7042, 1.11 ) }
    dend_56 { pt3dadd( -9.0195, -261.614, 70.6075, 0.28 ) }
    dend_56 { pt3dadd( -9.00983, -263.167, 70.977, 0.83 ) }
    dend_56 { pt3dadd( -9.1522, -267.384, 71.5803, 0.83 ) }
    dend_56 { pt3dadd( -9.18582, -269.649, 72.0002, 0.28 ) }
    dend_56 { pt3dadd( -9.1445, -271.041, 72.2792, 0.28 ) }
    dend_56 { pt3dadd( -9.00527, -272.588, 72.7429, 0.83 ) }
    dend_56 { pt3dadd( -8.70893, -274.451, 73.4544, 0.83 ) }
    dend_56 { pt3dadd( -8.16676, -276.933, 74.5525, 0.55 ) }
    dend_56 { pt3dadd( -6.93736, -281.432, 76.7134, 0.28 ) }
    dend_56 { pt3dadd( -6.64234, -282.684, 77.3381, 1.11 ) }
    dend_56 { pt3dadd( -6.26966, -284.531, 78.1927, 0.83 ) }
    dend_56 { pt3dadd( -5.62937, -288.309, 79.7333, 0.28 ) }
    dend_56 { pt3dadd( -5.52977, -288.895, 79.9212, 0.55 ) }
    dend_56 { pt3dadd( -5.04626, -291.49, 80.478, 0.55 ) }
    dend_56 { pt3dadd( -4.41806, -294.318, 80.75, 0.55 ) }
    dend_56 { pt3dadd( -3.87871, -296.639, 80.8779, 0.55 ) }
    dend_56 { pt3dadd( -3.43953, -298.615, 80.9255, 0.55 ) }
    dend_56 { pt3dadd( -2.90248, -301.178, 80.9908, 0.55 ) }
    dend_56 { pt3dadd( -2.11559, -304.423, 81.0443, 0.55 ) }
    dend_56 { pt3dadd( -1.26203, -307.563, 81.0707, 0.55 ) }
    dend_56 { pt3dadd( -0.377294, -310.631, 81.0729, 0.55 ) }
    dend_56 { pt3dadd( 0.214852, -312.835, 81.1312, 0.28 ) }
    dend_56 { pt3dadd( 0.858533, -315.51, 81.2211, 0.83 ) }
    dend_56 { pt3dadd( 1.54603, -319.268, 81.3797, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 81/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -8.06578, -133.315, 21.9198, 1.38 ) }
    dend_47 { pt3dadd( -10.9417, -134.034, 22.6502, 1.38 ) }
    dend_47 { pt3dadd( -14.4023, -134.9, 23.5291, 1.38 ) }
    // Section: dend_37, id: dend_37, parent: dend_31 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.29082, -168.251, -29.5707, 0.55 ) }
    dend_37 { pt3dadd( 2.40853, -173.385, -30.0693, 0.55 ) }
    dend_37 { pt3dadd( 2.38036, -175.929, -30.4127, 0.55 ) }
    dend_37 { pt3dadd( 2.35447, -178.972, -30.8797, 2.49 ) }
    dend_37 { pt3dadd( 2.31628, -181.425, -31.3551, 0.55 ) }
    dend_37 { pt3dadd( 2.25763, -183.794, -31.8609, 0.55 ) }
    dend_37 { pt3dadd( 2.18341, -186.793, -32.5009, 0.83 ) }
    dend_37 { pt3dadd( 1.9227, -189.386, -33.1165, 0.28 ) }
    dend_37 { pt3dadd( 1.82852, -190.598, -33.4626, 0.55 ) }
    dend_37 { pt3dadd( 1.70156, -192.539, -34.1217, 0.28 ) }
    dend_37 { pt3dadd( 1.62835, -193.751, -34.5676, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.29082, -168.251, -29.5707, 0.83 ) }
    dend_32 { pt3dadd( 4.9545, -168.722, -30.1243, 0.83 ) }
    dend_32 { pt3dadd( 7.31281, -168.959, -30.4445, 0.83 ) }
    dend_32 { pt3dadd( 9.86516, -169.121, -30.7878, 0.55 ) }
    dend_32 { pt3dadd( 13.0304, -169.356, -31.1993, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_32 { pt3dadd( 14.1038, -169.51, -31.3906, 0.83 ) }
    dend_32 { pt3dadd( 16.2684, -170.049, -31.7743, 0.55 ) }
    dend_32 { pt3dadd( 18.1867, -170.729, -32.0779, 1.11 ) }
    dend_32 { pt3dadd( 20.1573, -171.757, -32.3747, 0.28 ) }
    dend_32 { pt3dadd( 21.5172, -172.704, -32.5683, 0.83 ) }
    dend_32 { pt3dadd( 24.122, -174.987, -33.0702, 0.28 ) }
    dend_32 { pt3dadd( 26.5231, -177.402, -33.6759, 1.38 ) }
    dend_32 { pt3dadd( 27.9152, -178.936, -33.9368, 0.55 ) }
    dend_32 { pt3dadd( 28.9742, -180.216, -34.0186, 0.55 ) }
    dend_32 { pt3dadd( 30.4758, -182.17, -33.8055, 0.83 ) }
    dend_32 { pt3dadd( 31.5533, -183.655, -33.4451, 0.28 ) }
    dend_32 { pt3dadd( 32.9955, -185.632, -32.7977, 0.55 ) }
    dend_32 { pt3dadd( 35.9112, -189.5, -31.102, 0.28 ) }
    dend_32 { pt3dadd( 37.3144, -191.224, -30.175, 0.83 ) }
    dend_32 { pt3dadd( 39.5823, -193.705, -28.5848, 0.55 ) }
    dend_32 { pt3dadd( 40.3922, -194.482, -27.9856, 0.55 ) }
    dend_32 { pt3dadd( 42.8619, -196.623, -26.1769, 1.94 ) }
    dend_32 { pt3dadd( 45.8377, -199.125, -24.1842, 0.55 ) }
    dend_32 { pt3dadd( 47.2341, -200.207, -23.3656, 0.55 ) }
    dend_32 { pt3dadd( 48.4713, -201.094, -22.6396, 0.55 ) }
    dend_32 { pt3dadd( 50.9391, -203.005, -21.2374, 0.28 ) }
    dend_32 { pt3dadd( 51.7774, -203.784, -20.7522, 1.38 ) }
    dend_32 { pt3dadd( 53.3869, -205.636, -19.7686, 1.38 ) }
    dend_32 { pt3dadd( 55.4306, -208.663, -18.8405, 0.55 ) }
    dend_32 { pt3dadd( 56.3001, -210.287, -18.0557, 0.55 ) }
    dend_32 { pt3dadd( 57.8712, -213.576, -16.185, 1.11 ) }
    dend_32 { pt3dadd( 59.101, -216.435, -14.5372, 0.28 ) }
    dend_32 { pt3dadd( 59.3185, -216.987, -14.1977, 0.83 ) }
    dend_32 { pt3dadd( 60.412, -220.005, -12.1357, 0.28 ) }
    dend_32 { pt3dadd( 63.5733, -229.881, -4.91067, 0.83 ) }
    dend_32 { pt3dadd( 63.9971, -231.247, -3.439, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_13 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -18.8345, 405.866, 7.1154, 0.55 ) }
    dend_23 { pt3dadd( -18.9019, 407.316, 7.19355, 0.55 ) }
    dend_23 { pt3dadd( -18.975, 408.727, 7.49023, 0.28 ) }
    dend_23 { pt3dadd( -19.1371, 409.989, 7.836, 0.55 ) }
    dend_23 { pt3dadd( -19.3657, 410.88, 8.12758, 0.28 ) }
    dend_23 { pt3dadd( -19.7788, 412.177, 8.51457, 0.83 ) }
    dend_23 { pt3dadd( -20.1976, 413.498, 8.8626, 0.83 ) }
    dend_23 { pt3dadd( -20.9199, 415.537, 9.80316, 0.55 ) }
    dend_23 { pt3dadd( -21.3402, 416.701, 10.4971, 0.55 ) }
    dend_23 { pt3dadd( -22.1416, 418.901, 12.0049, 0.83 ) }
    dend_23 { pt3dadd( -22.617, 420.118, 12.901, 0.83 ) }
    dend_23 { pt3dadd( -23.1505, 421.501, 14.0406, 0.83 ) }
    dend_23 { pt3dadd( -24.9792, 425.886, 17.5339, 0.55 ) }
    dend_23 { pt3dadd( -25.3109, 426.779, 18.1931, 0.55 ) }
    dend_23 { pt3dadd( -25.4362, 427.196, 18.4892, 0.83 ) }
    dend_23 { pt3dadd( -25.6604, 428.148, 19.1319, 0.55 ) }
    dend_23 { pt3dadd( -26.2116, 431.095, 20.8278, 1.11 ) }
    dend_23 { pt3dadd( -26.5928, 433.676, 21.9496, 0.83 ) }
    dend_23 { pt3dadd( -26.7763, 435.498, 22.4345, 0.55 ) }
    dend_23 { pt3dadd( -26.8596, 436.859, 22.7766, 1.11 ) }
    dend_23 { pt3dadd( -26.9136, 438.371, 23.1725, 0.55 ) }
    dend_23 { pt3dadd( -26.9065, 440.862, 23.8393, 1.11 ) }
    dend_23 { pt3dadd( -26.9032, 442.778, 24.323, 0.55 ) }
    dend_23 { pt3dadd( -26.9042, 444.492, 24.8286, 0.55 ) }
    dend_23 { pt3dadd( -26.9674, 445.423, 25.1114, 0.28 ) }
    dend_23 { pt3dadd( -27.1292, 447.087, 25.624, 0.83 ) }
    dend_23 { pt3dadd( -27.3358, 448.774, 26.0856, 0.55 ) }
    dend_23 { pt3dadd( -27.5585, 450.288, 26.436, 0.83 ) }
    dend_23 { pt3dadd( -27.813, 451.725, 26.7119, 0.83 ) }
    dend_23 { pt3dadd( -28.2651, 453.795, 27.0609, 0.55 ) }
    dend_23 { pt3dadd( -28.7493, 455.857, 27.3402, 0.55 ) }
    dend_23 { pt3dadd( -29.4268, 458.514, 27.6084, 0.83 ) }
    dend_23 { pt3dadd( -30.1406, 461.143, 27.8425, 0.83 ) }
    dend_23 { pt3dadd( -30.8091, 463.599, 28.0467, 0.83 ) }
    dend_23 { pt3dadd( -31.2358, 465.127, 28.1594, 0.83 ) }
    dend_23 { pt3dadd( -31.7774, 467.167, 28.2776, 0.83 ) }
    dend_23 { pt3dadd( -32.2721, 468.954, 28.3868, 0.83 ) }
    dend_23 { pt3dadd( -32.7418, 470.896, 28.5772, 0.83 ) }
    dend_23 { pt3dadd( -32.9962, 472.036, 28.7137, 0.83 ) }
    dend_23 { pt3dadd( -33.298, 473.618, 28.9568, 0.55 ) }
    dend_23 { pt3dadd( -33.5599, 474.964, 29.1186, 0.83 ) }
    dend_23 { pt3dadd( -33.9039, 476.612, 29.3339, 0.83 ) }
    dend_23 { pt3dadd( -34.4572, 479.287, 29.7008, 0.55 ) }
    dend_23 { pt3dadd( -35.042, 481.865, 30.0822, 0.83 ) }
    dend_23 { pt3dadd( -35.7313, 484.615, 30.5089, 0.55 ) }
    dend_23 { pt3dadd( -36.6408, 487.567, 30.9756, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -18.8345, 405.866, 7.1154, 0.55 ) }
    dend_14 { pt3dadd( -20.8994, 409.25, 8.69837, 0.55 ) }
    dend_14 { pt3dadd( -22.5805, 411.96, 9.54517, 0.28 ) }
    dend_14 { pt3dadd( -23.3911, 413.205, 9.83165, 0.83 ) }
    dend_14 { pt3dadd( -24.5729, 414.933, 10.1528, 0.28 ) }
    dend_14 { pt3dadd( -25.1633, 415.798, 10.2894, 0.28 ) }
    dend_14 { pt3dadd( -26.1305, 417.193, 10.4705, 0.83 ) }
    dend_14 { pt3dadd( -27.9393, 420.021, 10.5775, 0.83 ) }
    dend_14 { pt3dadd( -28.8467, 421.5, 10.5173, 0.28 ) }
    dend_14 { pt3dadd( -30.1338, 423.713, 10.473, 0.83 ) }
    dend_14 { pt3dadd( -30.7964, 424.843, 10.4536, 0.55 ) }
    dend_14 { pt3dadd( -32.0607, 427.044, 10.4835, 1.11 ) }
    dend_14 { pt3dadd( -33.2295, 429.185, 10.5352, 0.55 ) }
    dend_14 { pt3dadd( -34.129, 431.002, 10.5874, 1.11 ) }
    dend_14 { pt3dadd( -35.0598, 433.065, 10.6532, 0.55 ) }
    dend_14 { pt3dadd( -36.2551, 435.963, 10.7501, 1.11 ) }
    dend_14 { pt3dadd( -36.9702, 437.703, 10.8277, 0.28 ) }
    dend_14 { pt3dadd( -37.523, 439.084, 10.9172, 0.55 ) }
    dend_14 { pt3dadd( -38.2147, 440.666, 11.0595, 0.28 ) }
    dend_14 { pt3dadd( -38.7041, 441.788, 11.1885, 0.83 ) }
    dend_14 { pt3dadd( -39.2405, 443.279, 11.2831, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.785611, 276.306, -19.6673, 0.83 ) }
    dend_5 { pt3dadd( -0.179852, 278.882, -20.0877, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 0.106593, 280.286, -20.3268, 0.83 ) }
    dend_5 { pt3dadd( 0.520693, 282.379, -20.6777, 2.22 ) }
    dend_5 { pt3dadd( 0.903846, 284.501, -21.0434, 1.66 ) }
    dend_5 { pt3dadd( 1.39539, 287.085, -21.3904, 0.83 ) }
    dend_5 { pt3dadd( 1.55484, 287.938, -21.4826, 0.83 ) }
    dend_5 { pt3dadd( 1.84605, 289.841, -21.6522, 0.83 ) }
    dend_5 { pt3dadd( 2.20629, 292.468, -21.803, 1.66 ) }
    dend_5 { pt3dadd( 2.39645, 294.512, -21.8564, 0.55 ) }
    dend_5 { pt3dadd( 2.45574, 296.572, -21.9143, 0.55 ) }
    dend_5 { pt3dadd( 2.43575, 297.858, -21.9725, 1.11 ) }
    dend_5 { pt3dadd( 2.34349, 300.065, -22.1659, 0.55 ) }
    dend_5 { pt3dadd( 2.08311, 303.678, -22.6584, 1.66 ) }
    dend_5 { pt3dadd( 1.99646, 305.513, -22.9761, 0.83 ) }
    dend_5 { pt3dadd( 1.9411, 308.509, -23.5664, 0.83 ) }
    dend_5 { pt3dadd( 1.94139, 309.959, -23.8922, 0.83 ) }
    dend_5 { pt3dadd( 2.02967, 311.574, -24.2426, 1.66 ) }
    dend_5 { pt3dadd( 2.26769, 313.765, -24.6841, 0.83 ) }
    dend_5 { pt3dadd( 2.7923, 317.127, -25.253, 0.83 ) }
    dend_5 { pt3dadd( 3.29753, 319.642, -25.5693, 0.83 ) }
    dend_5 { pt3dadd( 3.53351, 320.596, -25.6335, 0.83 ) }
    dend_5 { pt3dadd( 4.066, 322.738, -25.7257, 0.83 ) }
    dend_5 { pt3dadd( 4.39294, 324.152, -25.7834, 1.38 ) }
    dend_5 { pt3dadd( 4.88548, 326.356, -25.859, 0.55 ) }
    dend_5 { pt3dadd( 5.23079, 327.818, -25.913, 1.38 ) }
    dend_5 { pt3dadd( 5.92342, 330.61, -26.0178, 1.38 ) }
    dend_5 { pt3dadd( 6.48523, 333.002, -26.1042, 0.83 ) }
    dend_5 { pt3dadd( 7.06071, 335.599, -26.1884, 0.83 ) }
    dend_5 { pt3dadd( 7.7172, 338.438, -26.2754, 1.11 ) }
    dend_5 { pt3dadd( 8.24839, 340.77, -26.3376, 0.55 ) }
    dend_5 { pt3dadd( 8.63032, 342.645, -26.3751, 0.55 ) }
    dend_5 { pt3dadd( 8.90992, 344.131, -26.4491, 0.55 ) }
    dend_5 { pt3dadd( 9.54099, 347.424, -26.696, 2.22 ) }
    dend_5 { pt3dadd( 9.82156, 348.897, -26.8431, 0.55 ) }
    dend_5 { pt3dadd( 10.1148, 350.37, -27.0188, 0.55 ) }
    dend_5 { pt3dadd( 10.2534, 351.098, -27.1109, 1.11 ) }
    dend_5 { pt3dadd( 10.9247, 354.555, -27.5518, 0.55 ) }
    dend_5 { pt3dadd( 11.255, 356.466, -27.7867, 0.55 ) }
    dend_5 { pt3dadd( 11.3563, 357.216, -27.8719, 0.55 ) }
    dend_5 { pt3dadd( 11.5593, 359.559, -28.0835, 1.11 ) }
    dend_5 { pt3dadd( 11.6614, 361.814, -28.2861, 1.11 ) }
    dend_5 { pt3dadd( 11.7048, 363.669, -28.4212, 0.83 ) }
    dend_5 { pt3dadd( 11.6593, 365.608, -28.4939, 0.83 ) }
    dend_5 { pt3dadd( 11.6001, 366.833, -28.5486, 0.83 ) }
    dend_5 { pt3dadd( 11.3849, 369.28, -28.6773, 0.83 ) }
    dend_5 { pt3dadd( 10.9801, 372.053, -28.8656, 2.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 45/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.785611, 276.306, -19.6673, 0.55 ) }
    dend_4 { pt3dadd( -2.71553, 276.236, -20.0064, 0.55 ) }
    dend_4 { pt3dadd( -4.73407, 276.163, -20.3611, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 48/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.4023, -134.9, 23.5291, 1.11 ) }
    dend_53 { pt3dadd( -14.3658, -136.414, 23.553, 1.11 ) }
    dend_53 { pt3dadd( -14.3043, -138.972, 23.5935, 1.11 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 51/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -14.4023, -134.9, 23.5291, 1.11 ) }
    dend_48 { pt3dadd( -18.9851, -132.555, 22.6628, 1.11 ) }
    dend_48 { pt3dadd( -20.4598, -131.607, 22.4612, 0.28 ) }
    dend_48 { pt3dadd( -21.368, -130.987, 22.5776, 0.83 ) }
    dend_48 { pt3dadd( -24.6063, -128.716, 23.4851, 0.55 ) }
    dend_48 { pt3dadd( -26.0591, -127.749, 24.0106, 0.55 ) }
    dend_48 { pt3dadd( -27.4838, -126.844, 24.4786, 0.55 ) }
    dend_48 { pt3dadd( -29.4508, -125.704, 25.1832, 0.55 ) }
    dend_48 { pt3dadd( -34.4069, -123.158, 26.7816, 1.11 ) }
    dend_48 { pt3dadd( -37.3424, -121.696, 27.6929, 0.55 ) }
    dend_48 { pt3dadd( -39.2473, -120.766, 28.2974, 0.55 ) }
    dend_48 { pt3dadd( -43.6751, -118.928, 29.5822, 0.83 ) }
    dend_48 { pt3dadd( -46.3716, -117.951, 30.3309, 0.55 ) }
    dend_48 { pt3dadd( -49.0251, -117.119, 31.0369, 1.11 ) }
    dend_48 { pt3dadd( -53.3749, -115.952, 32.0483, 0.83 ) }
    dend_48 { pt3dadd( -54.8953, -115.621, 32.4509, 0.83 ) }
    dend_48 { pt3dadd( -56.9725, -115.2, 33.1328, 0.83 ) }
    dend_48 { pt3dadd( -60.1224, -114.713, 34.4463, 0.83 ) }
    dend_48 { pt3dadd( -64.0834, -114.266, 36.1639, 1.11 ) }
    dend_48 { pt3dadd( -65.9614, -114.157, 36.9052, 0.83 ) }
    dend_48 { pt3dadd( -68.7018, -114.124, 37.8752, 0.83 ) }
    dend_48 { pt3dadd( -72.792, -114.173, 39.1855, 0.83 ) }
    dend_48 { pt3dadd( -75.5268, -114.306, 39.9099, 0.55 ) }
    dend_48 { pt3dadd( -77.6054, -114.574, 40.3629, 1.38 ) }
    dend_48 { pt3dadd( -80.6695, -115.007, 40.8266, 0.55 ) }
    dend_48 { pt3dadd( -83.4846, -115.284, 41.1422, 0.55 ) }
    dend_48 { pt3dadd( -85.2339, -115.472, 41.2517, 0.55 ) }
    dend_48 { pt3dadd( -87.8952, -115.758, 41.2552, 0.55 ) }
    dend_48 { pt3dadd( -89.3586, -115.854, 41.1921, 0.83 ) }
    dend_48 { pt3dadd( -94.2963, -115.845, 40.8173, 0.55 ) }
    dend_48 { pt3dadd( -96.0408, -115.793, 40.6461, 0.55 ) }
    dend_48 { pt3dadd( -98.0227, -115.644, 40.4337, 0.55 ) }
    dend_48 { pt3dadd( -101.752, -115.232, 40.2586, 0.55 ) }
    dend_48 { pt3dadd( -105.554, -114.714, 40.3288, 1.11 ) }
    dend_48 { pt3dadd( -109.344, -114.188, 40.5852, 0.55 ) }
    dend_48 { pt3dadd( -110.335, -114.086, 40.7286, 0.55 ) }
    dend_48 { pt3dadd( -113.594, -113.895, 41.4375, 0.55 ) }
    dend_48 { pt3dadd( -117.183, -113.741, 42.6099, 1.94 ) }
    dend_48 { pt3dadd( -119.604, -113.798, 43.819, 0.83 ) }
    dend_48 { pt3dadd( -120.46, -113.867, 44.3026, 0.28 ) }
    dend_48 { pt3dadd( -121.968, -114.118, 45.162, 0.55 ) }
    dend_48 { pt3dadd( -124.157, -114.592, 46.3671, 0.55 ) }
    dend_48 { pt3dadd( -126.072, -115.103, 47.3776, 0.28 ) }
    dend_48 { pt3dadd( -129.42, -116.063, 49.2199, 1.11 ) }
    dend_48 { pt3dadd( -131.854, -116.861, 50.7217, 0.28 ) }
    dend_48 { pt3dadd( -134.472, -117.594, 52.4557, 0.83 ) }
    dend_48 { pt3dadd( -136.452, -118.042, 53.8973, 0.28 ) }
    dend_48 { pt3dadd( -137.279, -118.164, 54.5692, 0.28 ) }
    dend_48 { pt3dadd( -139.254, -118.276, 56.3895, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( -140.273, -118.199, 57.4683, 0.55 ) }
    dend_48 { pt3dadd( -142.247, -117.728, 59.7012, 0.55 ) }
    dend_48 { pt3dadd( -143.095, -117.327, 60.5386, 0.83 ) }
    dend_48 { pt3dadd( -144.541, -116.528, 61.7422, 0.28 ) }
    dend_48 { pt3dadd( -144.912, -116.334, 62.0116, 0.83 ) }
    dend_48 { pt3dadd( -147.37, -115.105, 63.5659, 0.83 ) }
    dend_48 { pt3dadd( -149.393, -114.109, 64.805, 0.83 ) }
    dend_48 { pt3dadd( -151.728, -113.117, 66.1936, 0.55 ) }
    dend_48 { pt3dadd( -152.922, -112.669, 66.8857, 0.55 ) }
    dend_48 { pt3dadd( -155.16, -111.989, 68.1894, 1.38 ) }
    dend_48 { pt3dadd( -157.554, -111.409, 69.6003, 1.38 ) }
    dend_48 { pt3dadd( -159.544, -111.057, 70.7921, 0.28 ) }
    dend_48 { pt3dadd( -161.178, -110.983, 71.7323, 0.83 ) }
    dend_48 { pt3dadd( -162.482, -111.095, 72.4645, 0.28 ) }
    dend_48 { pt3dadd( -163.738, -111.36, 73.1369, 1.38 ) }
    dend_48 { pt3dadd( -165.664, -111.946, 74.1118, 0.28 ) }
    dend_48 { pt3dadd( -166.346, -112.258, 74.4338, 0.83 ) }
    dend_48 { pt3dadd( -168.252, -113.36, 75.272, 0.55 ) }
    dend_48 { pt3dadd( -169.28, -113.986, 75.6875, 0.55 ) }
    dend_48 { pt3dadd( -171.107, -115.06, 76.3652, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 1.62835, -193.751, -34.5676, 0.83 ) }
    dend_39 { pt3dadd( 1.53545, -195.557, -34.6709, 0.83 ) }
    dend_39 { pt3dadd( 1.40286, -197.265, -34.972, 1.94 ) }
    dend_39 { pt3dadd( 1.28194, -198.984, -35.3464, 1.94 ) }
    dend_39 { pt3dadd( 0.953459, -202.386, -36.2322, 0.83 ) }
    dend_39 { pt3dadd( 0.698711, -204.754, -36.8648, 1.38 ) }
    dend_39 { pt3dadd( -0.081837, -210.887, -38.6795, 0.28 ) }
    dend_39 { pt3dadd( -0.150167, -211.426, -38.8596, 0.83 ) }
    dend_39 { pt3dadd( -0.358449, -212.967, -39.4704, 0.55 ) }
    dend_39 { pt3dadd( -0.717893, -215.088, -40.4884, 0.28 ) }
    dend_39 { pt3dadd( -1.17165, -217.081, -41.6701, 0.55 ) }
    dend_39 { pt3dadd( -1.85613, -219.763, -43.2281, 3.6 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 32/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.62835, -193.751, -34.5676, 0.28 ) }
    dend_38 { pt3dadd( -0.938051, -192.275, -30.4512, 0.28 ) }
    dend_38 { pt3dadd( -1.3043, -192.064, -29.8638, 1.38 ) }
    dend_38 { pt3dadd( -3.93429, -190.55, -25.6454, 0.55 ) }
    dend_38 { pt3dadd( -5.43925, -189.684, -23.2315, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 63.9971, -231.247, -3.439, 1.38 ) }
    dend_34 { pt3dadd( 64.373, -234.441, -3.38728, 1.38 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 39/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 63.9971, -231.247, -3.439, 0.55 ) }
    dend_33 { pt3dadd( 65.4283, -230.051, -4.82546, 0.55 ) }
    dend_33 { pt3dadd( 66.3501, -229.281, -5.71842, 0.55 ) }
    dend_33 { pt3dadd( 68.781, -227.251, -8.07334, 0.28 ) }
    dend_33 { pt3dadd( 69.5688, -226.593, -8.83651, 1.11 ) }
    dend_33 { pt3dadd( 71.9811, -224.578, -11.1734, 0.28 ) }
    dend_33 { pt3dadd( 74.001, -222.891, -13.1302, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 46/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -36.6408, 487.567, 30.9756, 1.38 ) }
    dend_25 { pt3dadd( -36.4806, 489.442, 31.4877, 1.38 ) }
    dend_25 { pt3dadd( -36.4954, 491.126, 32.0004, 0.55 ) }
    dend_25 { pt3dadd( -36.6946, 492.54, 32.6576, 0.55 ) }
    dend_25 { pt3dadd( -36.8679, 493.77, 33.2293, 0.55 ) }
    dend_25 { pt3dadd( -37.0692, 495.198, 33.8932, 1.11 ) }
    dend_25 { pt3dadd( -37.4722, 498.058, 35.2225, 0.55 ) }
    dend_25 { pt3dadd( -37.9509, 500.097, 36.3328, 1.11 ) }
    dend_25 { pt3dadd( -38.8464, 503.053, 38.206, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -36.6408, 487.567, 30.9756, 0.55 ) }
    dend_24 { pt3dadd( -37.1128, 489.878, 30.5929, 0.55 ) }
    dend_24 { pt3dadd( -37.4345, 490.844, 30.4819, 0.28 ) }
    dend_24 { pt3dadd( -37.8525, 491.761, 30.312, 0.83 ) }
    dend_24 { pt3dadd( -38.6645, 493.377, 29.9774, 0.28 ) }
    dend_24 { pt3dadd( -39.4403, 494.757, 29.692, 0.55 ) }
    dend_24 { pt3dadd( -40.2063, 496.042, 29.4369, 0.55 ) }
    dend_24 { pt3dadd( -41.7874, 498.26, 28.9638, 1.11 ) }
    dend_24 { pt3dadd( -43.2792, 500.081, 28.6074, 0.55 ) }
    dend_24 { pt3dadd( -43.8597, 500.757, 28.447, 0.55 ) }
    dend_24 { pt3dadd( -45.1722, 502.261, 28.0763, 0.83 ) }
    dend_24 { pt3dadd( -46.0795, 503.284, 27.7823, 0.83 ) }
    dend_24 { pt3dadd( -47.3789, 504.799, 27.2053, 0.83 ) }
    dend_24 { pt3dadd( -48.0509, 505.609, 26.8445, 0.83 ) }
    dend_24 { pt3dadd( -49.5988, 507.75, 25.868, 0.55 ) }
    dend_24 { pt3dadd( -50.6894, 509.554, 24.9153, 0.83 ) }
    dend_24 { pt3dadd( -51.3117, 510.721, 24.1815, 0.83 ) }
    dend_24 { pt3dadd( -52.3171, 512.778, 22.7988, 0.55 ) }
    dend_24 { pt3dadd( -53.083, 514.535, 21.6093, 0.55 ) }
    dend_24 { pt3dadd( -53.5454, 515.622, 20.859, 0.83 ) }
    dend_24 { pt3dadd( -54.693, 518.124, 19.1588, 0.83 ) }
    dend_24 { pt3dadd( -55.3867, 519.658, 18.0933, 0.83 ) }
    dend_24 { pt3dadd( -55.8882, 520.757, 17.3221, 0.28 ) }
    dend_24 { pt3dadd( -56.2633, 521.578, 16.6866, 0.55 ) }
    dend_24 { pt3dadd( -56.8573, 522.981, 15.1569, 0.55 ) }
    dend_24 { pt3dadd( -57.1867, 523.741, 14.1959, 0.55 ) }
    dend_24 { pt3dadd( -57.4572, 524.358, 13.3141, 0.55 ) }
    dend_24 { pt3dadd( -58.1321, 525.86, 10.9529, 0.55 ) }
    dend_24 { pt3dadd( -58.8532, 527.261, 8.36752, 0.83 ) }
    dend_24 { pt3dadd( -60.1243, 529.284, 4.15785, 0.28 ) }
    dend_24 { pt3dadd( -60.5483, 529.825, 2.76177, 0.28 ) }
    dend_24 { pt3dadd( -60.7805, 530.091, 1.93406, 0.55 ) }
    dend_24 { pt3dadd( -61.0554, 530.402, 0.789578, 0.28 ) }
    dend_24 { pt3dadd( -61.205, 530.594, 0.030382, 0.83 ) }
    dend_24 { pt3dadd( -61.4093, 530.938, -1.15746, 0.83 ) }
    dend_24 { pt3dadd( -61.9179, 532.193, -5.20704, 0.83 ) }
    dend_24 { pt3dadd( -62.2141, 533.121, -8.34129, 0.28 ) }
    dend_24 { pt3dadd( -62.4692, 533.968, -11.3948, 1.11 ) }
    dend_24 { pt3dadd( -62.8304, 535.18, -15.9142, 0.55 ) }
    dend_24 { pt3dadd( -62.9535, 535.487, -17.0991, 0.55 ) }
    dend_24 { pt3dadd( -63.2441, 535.972, -19.2333, 0.55 ) }
    dend_24 { pt3dadd( -63.5391, 536.264, -20.658, 0.55 ) }
    dend_24 { pt3dadd( -63.9681, 536.519, -22.1871, 0.83 ) }
    dend_24 { pt3dadd( -64.905, 536.898, -24.8506, 0.55 ) }
    dend_24 { pt3dadd( -65.6449, 537.148, -26.7752, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_24 { pt3dadd( -68.0065, 537.933, -32.6972, 0.28 ) }
    dend_24 { pt3dadd( -68.2777, 538.051, -33.4315, 0.55 ) }
    dend_24 { pt3dadd( -69.1923, 538.565, -35.9863, 0.28 ) }
    dend_24 { pt3dadd( -69.8467, 538.983, -37.9315, 1.11 ) }
    dend_24 { pt3dadd( -70.8197, 539.669, -41.0973, 0.55 ) }
    dend_24 { pt3dadd( -71.173, 540.02, -42.6059, 1.11 ) }
    dend_24 { pt3dadd( -71.8183, 540.925, -46.2416, 0.55 ) }
    dend_24 { pt3dadd( -71.939, 541.193, -47.2483, 0.55 ) }
    dend_24 { pt3dadd( -72.1323, 541.909, -49.8483, 1.11 ) }
    dend_24 { pt3dadd( -72.1688, 542.291, -51.183, 1.11 ) }
    dend_24 { pt3dadd( -72.0964, 543.704, -55.9187, 0.28 ) }
    dend_24 { pt3dadd( -72.046, 544.122, -57.3105, 0.83 ) }
    dend_24 { pt3dadd( -71.9874, 545.105, -60.6737, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -39.2405, 443.279, 11.2831, 0.55 ) }
    dend_16 { pt3dadd( -39.5242, 444.112, 11.5816, 0.55 ) }
    dend_16 { pt3dadd( -39.8997, 445.146, 11.9183, 0.28 ) }
    dend_16 { pt3dadd( -40.4687, 446.608, 12.3426, 1.38 ) }
    dend_16 { pt3dadd( -41.358, 448.707, 12.8918, 0.28 ) }
    dend_16 { pt3dadd( -42.1528, 450.478, 13.3149, 0.55 ) }
    dend_16 { pt3dadd( -42.5837, 451.435, 13.5253, 0.55 ) }
    dend_16 { pt3dadd( -42.9557, 452.244, 13.6822, 0.83 ) }
    dend_16 { pt3dadd( -43.5204, 453.412, 13.8723, 0.28 ) }
    dend_16 { pt3dadd( -43.9972, 454.362, 13.9584, 0.83 ) }
    dend_16 { pt3dadd( -44.3229, 455.052, 13.9631, 0.28 ) }
    dend_16 { pt3dadd( -44.6214, 455.74, 13.9804, 0.28 ) }
    dend_16 { pt3dadd( -45.0789, 456.797, 14.0086, 0.83 ) }
    dend_16 { pt3dadd( -45.6071, 458.054, 14.042, 0.28 ) }
    dend_16 { pt3dadd( -45.8623, 458.687, 14.0572, 0.55 ) }
    dend_16 { pt3dadd( -46.4455, 460.147, 14.088, 0.55 ) }
    dend_16 { pt3dadd( -46.8864, 461.236, 14.1159, 0.28 ) }
    dend_16 { pt3dadd( -47.1172, 461.78, 14.1314, 0.28 ) }
    dend_16 { pt3dadd( -47.5175, 462.758, 14.1598, 1.11 ) }
    dend_16 { pt3dadd( -47.9671, 464.009, 14.1218, 0.28 ) }
    dend_16 { pt3dadd( -48.2576, 464.875, 14.0299, 0.83 ) }
    dend_16 { pt3dadd( -48.532, 465.832, 13.8465, 0.28 ) }
    dend_16 { pt3dadd( -48.749, 466.957, 13.5618, 0.83 ) }
    dend_16 { pt3dadd( -48.8414, 467.652, 13.3706, 0.83 ) }
    dend_16 { pt3dadd( -49.0024, 469.488, 12.8323, 0.55 ) }
    dend_16 { pt3dadd( -49.08, 470.726, 12.4756, 0.55 ) }
    dend_16 { pt3dadd( -49.133, 471.517, 12.2651, 0.55 ) }
    dend_16 { pt3dadd( -49.2416, 472.952, 11.9227, 0.83 ) }
    dend_16 { pt3dadd( -49.344, 474.164, 11.6868, 0.55 ) }
    dend_16 { pt3dadd( -49.5456, 475.939, 11.4293, 1.11 ) }
    dend_16 { pt3dadd( -49.7076, 477.175, 11.3114, 0.55 ) }
    dend_16 { pt3dadd( -49.8741, 478.335, 11.2186, 0.55 ) }
    dend_16 { pt3dadd( -49.9911, 479.072, 11.137, 0.83 ) }
    dend_16 { pt3dadd( -50.0822, 479.638, 11.0303, 0.55 ) }
    dend_16 { pt3dadd( -50.3328, 481.607, 10.5419, 0.83 ) }
    dend_16 { pt3dadd( -50.4058, 482.409, 10.2311, 0.28 ) }
    dend_16 { pt3dadd( -50.4182, 482.572, 10.1487, 0.28 ) }
    dend_16 { pt3dadd( -50.4537, 483.269, 9.74206, 0.55 ) }
    dend_16 { pt3dadd( -50.525, 485.053, 8.63316, 0.28 ) }
    dend_16 { pt3dadd( -50.541, 485.389, 8.43908, 0.55 ) }
    dend_16 { pt3dadd( -50.6229, 487.129, 7.49069, 0.28 ) }
    dend_16 { pt3dadd( -50.6577, 487.837, 7.16337, 0.83 ) }
    dend_16 { pt3dadd( -50.7761, 489.066, 6.68727, 0.83 ) }
    dend_16 { pt3dadd( -50.8401, 489.585, 6.5332, 0.28 ) }
    dend_16 { pt3dadd( -50.9854, 491.141, 6.20863, 0.55 ) }
    dend_16 { pt3dadd( -51.073, 492.155, 6.05125, 0.28 ) }
    dend_16 { pt3dadd( -51.1664, 493.472, 6.03617, 0.83 ) }
    dend_16 { pt3dadd( -51.2562, 495.213, 6.13037, 0.28 ) }
    dend_16 { pt3dadd( -51.2712, 495.967, 6.23814, 0.28 ) }
    dend_16 { pt3dadd( -51.2723, 497.018, 6.46712, 0.55 ) }
    dend_16 { pt3dadd( -51.2761, 498.626, 6.83459, 0.83 ) }
    dend_16 { pt3dadd( -51.325, 500.754, 7.34768, 0.28 ) }
    dend_16 { pt3dadd( -51.3321, 501.653, 7.52736, 0.83 ) }
    dend_16 { pt3dadd( -51.3359, 503.141, 7.69497, 0.28 ) }
    dend_16 { pt3dadd( -51.3061, 505.1, 7.63545, 1.38 ) }
    dend_16 { pt3dadd( -51.2667, 506.846, 7.39075, 0.28 ) }
    dend_16 { pt3dadd( -51.1803, 508.373, 7.04339, 0.83 ) }
    dend_16 { pt3dadd( -51.0707, 509.842, 6.58994, 0.83 ) }
    dend_16 { pt3dadd( -50.871, 512.149, 5.82266, 0.55 ) }
    dend_16 { pt3dadd( -50.7204, 514.507, 4.99211, 0.55 ) }
    dend_16 { pt3dadd( -50.6196, 516.168, 4.48389, 0.83 ) }
    dend_16 { pt3dadd( -50.5624, 517.449, 4.26694, 0.83 ) }
    dend_16 { pt3dadd( -50.5269, 519.109, 4.17469, 0.55 ) }
    dend_16 { pt3dadd( -50.5523, 520.207, 4.3341, 0.55 ) }
    dend_16 { pt3dadd( -50.6059, 521.819, 4.86167, 1.38 ) }
    dend_16 { pt3dadd( -50.754, 523.809, 5.74117, 0.83 ) }
    dend_16 { pt3dadd( -50.9362, 526.095, 6.96623, 1.11 ) }
    dend_16 { pt3dadd( -51.0383, 527.218, 7.68245, 1.11 ) }
    dend_16 { pt3dadd( -51.2058, 529.486, 9.41866, 0.83 ) }
    dend_16 { pt3dadd( -51.2144, 529.977, 9.83783, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 83/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -39.2405, 443.279, 11.2831, 0.28 ) }
    dend_15 { pt3dadd( -37.5098, 443.13, 12.1116, 0.28 ) }
    dend_15 { pt3dadd( -37.0692, 443.092, 12.3225, 0.83 ) }
    dend_15 { pt3dadd( -35.7113, 442.975, 12.9726, 0.28 ) }
    dend_15 { pt3dadd( -35.5123, 442.958, 13.0678, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 88/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 10.9801, 372.053, -28.8656, 0.55 ) }
    dend_7 { pt3dadd( 11.7672, 374.126, -29.2024, 0.55 ) }
    dend_7 { pt3dadd( 12.5876, 376.442, -29.6124, 0.55 ) }
    dend_7 { pt3dadd( 13.0185, 377.777, -29.8517, 0.55 ) }
    dend_7 { pt3dadd( 13.643, 379.512, -30.197, 0.28 ) }
    dend_7 { pt3dadd( 14.285, 381.097, -30.5519, 0.83 ) }
    dend_7 { pt3dadd( 15.2851, 383.507, -31.1049, 0.28 ) }
    dend_7 { pt3dadd( 15.6698, 384.475, -31.3304, 0.83 ) }
    dend_7 { pt3dadd( 16.2043, 385.967, -31.6642, 0.55 ) }
    dend_7 { pt3dadd( 16.9473, 388.066, -32.1751, 0.55 ) }
    dend_7 { pt3dadd( 17.361, 389.313, -32.486, 0.83 ) }
    dend_7 { pt3dadd( 17.8, 390.896, -32.8494, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 18.1441, 392.192, -33.0968, 0.83 ) }
    dend_7 { pt3dadd( 18.495, 393.668, -33.3739, 0.83 ) }
    dend_7 { pt3dadd( 18.6929, 394.756, -33.6332, 0.28 ) }
    dend_7 { pt3dadd( 18.8131, 396.331, -34.0037, 0.83 ) }
    dend_7 { pt3dadd( 18.7838, 397.652, -34.3435, 0.83 ) }
    dend_7 { pt3dadd( 18.4989, 399.304, -34.98, 0.83 ) }
    dend_7 { pt3dadd( 17.9146, 401.158, -35.8662, 1.11 ) }
    dend_7 { pt3dadd( 16.8755, 403.302, -37.2967, 0.55 ) }
    dend_7 { pt3dadd( 15.7818, 404.855, -38.5059, 0.55 ) }
    dend_7 { pt3dadd( 14.5304, 406.267, -39.7408, 1.11 ) }
    dend_7 { pt3dadd( 11.9995, 408.632, -42.1467, 0.28 ) }
    dend_7 { pt3dadd( 11.2825, 409.241, -42.8434, 0.28 ) }
    dend_7 { pt3dadd( 8.93903, 411.128, -45.1345, 0.83 ) }
    dend_7 { pt3dadd( 7.55528, 412.215, -46.5695, 0.55 ) }
    dend_7 { pt3dadd( 7.08106, 412.581, -47.1257, 0.55 ) }
    dend_7 { pt3dadd( 5.63379, 413.778, -48.9068, 0.55 ) }
    dend_7 { pt3dadd( 4.57942, 414.688, -50.2137, 0.83 ) }
    dend_7 { pt3dadd( 2.53749, 416.359, -52.7323, 0.55 ) }
    dend_7 { pt3dadd( -1.23237, 419.346, -57.2638, 1.94 ) }
    dend_7 { pt3dadd( -4.57823, 421.874, -61.4909, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.9801, 372.053, -28.8656, 0.55 ) }
    dend_6 { pt3dadd( 10.2844, 374.324, -28.872, 0.55 ) }
    dend_6 { pt3dadd( 9.64728, 376.428, -28.9426, 0.83 ) }
    dend_6 { pt3dadd( 9.32637, 377.454, -29.0475, 0.55 ) }
    dend_6 { pt3dadd( 8.75652, 379.731, -29.4035, 0.83 ) }
    dend_6 { pt3dadd( 8.02862, 383.016, -30.0253, 0.55 ) }
    dend_6 { pt3dadd( 7.64608, 384.444, -30.3344, 0.55 ) }
    dend_6 { pt3dadd( 7.21884, 385.786, -30.7747, 1.11 ) }
    dend_6 { pt3dadd( 6.63031, 387.665, -31.548, 0.83 ) }
    dend_6 { pt3dadd( 5.83688, 390.005, -32.6634, 0.83 ) }
    dend_6 { pt3dadd( 4.77168, 392.727, -34.1071, 0.83 ) }
    dend_6 { pt3dadd( 3.6402, 394.999, -35.3378, 0.55 ) }
    dend_6 { pt3dadd( 2.25883, 397.55, -36.6893, 0.28 ) }
    dend_6 { pt3dadd( 0.50787, 400.02, -38.4772, 0.83 ) }
    dend_6 { pt3dadd( -1.00297, 401.873, -40.0145, 0.55 ) }
    dend_6 { pt3dadd( -2.89656, 403.977, -41.9301, 1.38 ) }
    dend_6 { pt3dadd( -4.66876, 405.938, -43.8265, 0.55 ) }
    dend_6 { pt3dadd( -5.67733, 407.121, -44.9543, 0.55 ) }
    dend_6 { pt3dadd( -12.0907, 414.976, -52.1541, 0.83 ) }
    dend_6 { pt3dadd( -13.068, 416.144, -53.227, 0.55 ) }
    dend_6 { pt3dadd( -13.2806, 416.427, -53.4788, 0.55 ) }
    dend_6 { pt3dadd( -14.447, 418.213, -54.9344, 1.38 ) }
    dend_6 { pt3dadd( -15.1327, 419.621, -55.8683, 1.38 ) }
    dend_6 { pt3dadd( -15.9954, 422.49, -56.8769, 0.28 ) }
    dend_6 { pt3dadd( -16.0444, 423.745, -56.7189, 0.55 ) }
    dend_6 { pt3dadd( -15.9579, 425.891, -56.3505, 0.28 ) }
    dend_6 { pt3dadd( -15.8286, 428.201, -55.8686, 0.55 ) }
    dend_6 { pt3dadd( -15.5167, 432.243, -54.74, 0.55 ) }
    dend_6 { pt3dadd( -15.2974, 434.716, -53.9606, 0.55 ) }
    dend_6 { pt3dadd( -14.9794, 437.645, -52.9378, 0.55 ) }
    dend_6 { pt3dadd( -14.5596, 440.04, -52.0508, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 51/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -14.3043, -138.972, 23.5935, 0.55 ) }
    dend_55 { pt3dadd( -15.322, -139.499, 24.9663, 0.55 ) }
    dend_55 { pt3dadd( -16.1309, -139.92, 26.0792, 0.28 ) }
    dend_55 { pt3dadd( -16.8726, -140.306, 27.0997, 1.11 ) }
    dend_55 { pt3dadd( -19.5847, -141.719, 30.8312, 0.28 ) }
    dend_55 { pt3dadd( -19.9382, -141.903, 31.3175, 1.11 ) }
    dend_55 { pt3dadd( -21.7691, -142.857, 33.8366, 0.28 ) }
    dend_55 { pt3dadd( -22.199, -143.088, 34.5738, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -14.3043, -138.972, 23.5935, 0.83 ) }
    dend_54 { pt3dadd( -15.6908, -140.571, 24.9514, 0.83 ) }
    dend_54 { pt3dadd( -17.0398, -141.878, 26.2325, 0.83 ) }
    dend_54 { pt3dadd( -18.2572, -142.742, 27.4657, 0.83 ) }
    dend_54 { pt3dadd( -20.3993, -144.126, 29.6285, 0.83 ) }
    dend_54 { pt3dadd( -21.8185, -145.176, 31.478, 0.83 ) }
    dend_54 { pt3dadd( -23.5732, -146.705, 34.2216, 0.83 ) }
    dend_54 { pt3dadd( -24.4688, -147.599, 35.8536, 0.83 ) }
    dend_54 { pt3dadd( -26.2582, -150.015, 39.8511, 1.11 ) }
    dend_54 { pt3dadd( -26.5611, -150.649, 40.829, 1.11 ) }
    dend_54 { pt3dadd( -27.412, -153.906, 45.2661, 1.11 ) }
    dend_54 { pt3dadd( -27.736, -156.194, 48.0098, 1.11 ) }
    dend_54 { pt3dadd( -27.8619, -158.323, 50.2477, 1.11 ) }
    dend_54 { pt3dadd( -27.8353, -160.308, 52.1587, 1.38 ) }
    dend_54 { pt3dadd( -27.6091, -163.536, 54.8595, 0.55 ) }
    dend_54 { pt3dadd( -27.5318, -164.906, 55.935, 0.83 ) }
    dend_54 { pt3dadd( -27.5395, -166.27, 56.8292, 0.83 ) }
    dend_54 { pt3dadd( -27.4947, -167.43, 57.6046, 0.83 ) }
    dend_54 { pt3dadd( -27.4797, -168.533, 58.3983, 0.83 ) }
    dend_54 { pt3dadd( -27.4608, -170.683, 59.6904, 0.55 ) }
    dend_54 { pt3dadd( -27.551, -172.175, 60.2682, 0.55 ) }
    dend_54 { pt3dadd( -27.6531, -173.014, 60.4998, 1.11 ) }
    dend_54 { pt3dadd( -27.8915, -174.589, 60.7796, 0.28 ) }
    dend_54 { pt3dadd( -28.0542, -175.444, 60.8889, 1.11 ) }
    dend_54 { pt3dadd( -28.5603, -177.336, 60.9706, 0.55 ) }
    dend_54 { pt3dadd( -29.1583, -179.194, 60.7782, 0.55 ) }
    dend_54 { pt3dadd( -30.0175, -181.28, 60.4265, 0.28 ) }
    dend_54 { pt3dadd( -30.3247, -181.947, 60.259, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -171.107, -115.06, 76.3652, 1.11 ) }
    dend_50 { pt3dadd( -173.888, -114.551, 77.8848, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 89/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -171.107, -115.06, 76.3652, 0.28 ) }
    dend_49 { pt3dadd( -171.874, -116.542, 76.213, 0.28 ) }
    dend_49 { pt3dadd( -172.019, -116.823, 76.1842, 0.83 ) }
    dend_49 { pt3dadd( -172.736, -118.207, 76.042, 0.28 ) }
    dend_49 { pt3dadd( -172.938, -118.597, 76.0019, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -1.85613, -219.763, -43.2281, 0.55 ) }
    dend_41 { pt3dadd( -3.1503, -221.092, -41.9019, 0.55 ) }
    dend_41 { pt3dadd( -4.09959, -222.014, -41.0643, 0.55 ) }
    dend_41 { pt3dadd( -5.76626, -223.655, -39.185, 0.28 ) }
    dend_41 { pt3dadd( -6.23458, -224.175, -38.6338, 0.55 ) }
    dend_41 { pt3dadd( -6.95649, -224.976, -37.7854, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_41 { pt3dadd( -7.88386, -226.03, -36.7043, 0.28 ) }
    dend_41 { pt3dadd( -8.63385, -226.808, -35.8445, 0.55 ) }
    dend_41 { pt3dadd( -10.8397, -228.933, -33.5589, 0.28 ) }
    dend_41 { pt3dadd( -12.7331, -230.694, -31.7438, 0.83 ) }
    dend_41 { pt3dadd( -14.6096, -232.495, -29.8597, 0.28 ) }
    dend_41 { pt3dadd( -15.1329, -233.019, -29.3091, 0.83 ) }
    dend_41 { pt3dadd( -16.4645, -234.339, -27.9061, 0.83 ) }
    dend_41 { pt3dadd( -17.8989, -235.641, -26.5483, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.85613, -219.763, -43.2281, 0.28 ) }
    dend_40 { pt3dadd( -1.85786, -224.123, -42.9292, 0.28 ) }
    dend_40 { pt3dadd( -1.80655, -225.656, -42.7669, 0.55 ) }
    dend_40 { pt3dadd( -1.66807, -228.235, -42.4566, 0.28 ) }
    dend_40 { pt3dadd( -1.46509, -231.339, -42.0692, 1.11 ) }
    dend_40 { pt3dadd( -1.18821, -235.032, -41.6111, 0.28 ) }
    dend_40 { pt3dadd( -1.09611, -236.013, -41.502, 0.55 ) }
    dend_40 { pt3dadd( -0.907008, -237.537, -41.2045, 0.28 ) }
    dend_40 { pt3dadd( -0.763996, -238.49, -40.9953, 0.55 ) }
    dend_40 { pt3dadd( -0.601322, -239.704, -40.6632, 0.28 ) }
    dend_40 { pt3dadd( -0.534076, -240.377, -40.4922, 0.55 ) }
    dend_40 { pt3dadd( -0.461366, -242.59, -40.1774, 0.28 ) }
    dend_40 { pt3dadd( -0.437871, -244.547, -39.9897, 1.11 ) }
    dend_40 { pt3dadd( -0.359492, -248.678, -39.3732, 0.28 ) }
    dend_40 { pt3dadd( -0.27268, -251.068, -38.9647, 1.11 ) }
    dend_40 { pt3dadd( -0.207535, -252.972, -38.6261, 1.11 ) }
    dend_40 { pt3dadd( -0.098101, -256.506, -37.9792, 0.28 ) }
    dend_40 { pt3dadd( -0.0307477, -258.745, -37.5637, 0.83 ) }
    dend_40 { pt3dadd( 0.264487, -263.512, -36.8394, 0.55 ) }
    dend_40 { pt3dadd( 0.441017, -266.158, -36.6274, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 64.373, -234.441, -3.38728, 0.28 ) }
    dend_36 { pt3dadd( 66.6632, -235.933, -3.27578, 0.28 ) }
    dend_36 { pt3dadd( 67.4671, -236.445, -3.24206, 0.83 ) }
    dend_36 { pt3dadd( 68.7249, -237.261, -3.20556, 0.28 ) }
    dend_36 { pt3dadd( 70.4779, -238.428, -3.17497, 0.83 ) }
    dend_36 { pt3dadd( 72.2148, -239.655, -3.15825, 0.28 ) }
    dend_36 { pt3dadd( 73.5029, -240.555, -3.16152, 0.55 ) }
    dend_36 { pt3dadd( 74.1983, -240.998, -3.17105, 0.28 ) }
    dend_36 { pt3dadd( 75.7272, -241.888, -3.23489, 0.55 ) }
    dend_36 { pt3dadd( 76.7377, -242.455, -3.29963, 0.28 ) }
    dend_36 { pt3dadd( 77.8756, -243.064, -3.38326, 0.55 ) }
    dend_36 { pt3dadd( 79.3555, -243.775, -3.52227, 0.55 ) }
    dend_36 { pt3dadd( 80.8297, -244.456, -3.75277, 0.55 ) }
    dend_36 { pt3dadd( 82.8024, -245.407, -4.14925, 0.83 ) }
    dend_36 { pt3dadd( 83.964, -246.007, -4.50997, 0.28 ) }
    dend_36 { pt3dadd( 85.0276, -246.649, -4.92636, 0.83 ) }
    dend_36 { pt3dadd( 86.1293, -247.346, -5.1839, 1.38 ) }
    dend_36 { pt3dadd( 88.575, -249.024, -5.44757, 0.28 ) }
    dend_36 { pt3dadd( 89.8994, -250.047, -5.55839, 0.83 ) }
    dend_36 { pt3dadd( 91.9436, -251.686, -5.68505, 0.28 ) }
    dend_36 { pt3dadd( 93.2431, -252.727, -5.7099, 1.11 ) }
    dend_36 { pt3dadd( 98.2363, -256.717, -5.42035, 0.28 ) }
    dend_36 { pt3dadd( 98.881, -257.228, -5.33806, 0.55 ) }
    dend_36 { pt3dadd( 102.14, -259.764, -4.76307, 0.28 ) }
    dend_36 { pt3dadd( 104.313, -261.509, -4.37874, 0.28 ) }
    dend_36 { pt3dadd( 105.237, -262.334, -4.21123, 0.55 ) }
    dend_36 { pt3dadd( 106.667, -263.669, -4.10161, 0.28 ) }
    dend_36 { pt3dadd( 107.442, -264.54, -4.24238, 0.28 ) }
    dend_36 { pt3dadd( 108.418, -265.692, -4.36752, 0.55 ) }
    dend_36 { pt3dadd( 109.586, -267.114, -4.22115, 0.55 ) }
    dend_36 { pt3dadd( 110.213, -268.316, -4.18585, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 64.373, -234.441, -3.38728, 0.55 ) }
    dend_35 { pt3dadd( 62.056, -235.635, -2.46478, 0.55 ) }
    dend_35 { pt3dadd( 61.0957, -236.129, -2.08245, 0.55 ) }
    dend_35 { pt3dadd( 59.912, -236.739, -1.61117, 0.28 ) }
    dend_35 { pt3dadd( 58.3463, -237.545, -0.987784, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 64/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -38.8464, 503.053, 38.206, 0.83 ) }
    dend_27 { pt3dadd( -39.0047, 504.989, 38.9947, 0.83 ) }
    dend_27 { pt3dadd( -39.2063, 507.978, 40.1965, 0.83 ) }
    dend_27 { pt3dadd( -39.325, 510.02, 41.0324, 0.83 ) }
    dend_27 { pt3dadd( -39.701, 514.252, 42.7199, 0.83 ) }
    dend_27 { pt3dadd( -39.7455, 514.741, 42.8798, 1.11 ) }
    dend_27 { pt3dadd( -39.8746, 516.018, 43.2213, 0.55 ) }
    dend_27 { pt3dadd( -39.9763, 516.775, 43.381, 0.83 ) }
    dend_27 { pt3dadd( -40.0119, 517.394, 41.9544, 0.28 ) }
    dend_27 { pt3dadd( -39.8845, 517.998, 40.4474, 0.55 ) }
    dend_27 { pt3dadd( -39.1904, 519.957, 35.7693, 0.28 ) }
    dend_27 { pt3dadd( -38.9635, 520.598, 34.4325, 0.83 ) }
    dend_27 { pt3dadd( -38.7589, 521.13, 33.4169, 0.83 ) }
    dend_27 { pt3dadd( -37.2677, 524.771, 27.2906, 0.55 ) }
    dend_27 { pt3dadd( -36.7749, 525.868, 25.6905, 0.55 ) }
    dend_27 { pt3dadd( -36.2677, 526.972, 24.6014, 1.11 ) }
    dend_27 { pt3dadd( -34.9179, 530.903, 23.1548, 0.55 ) }
    dend_27 { pt3dadd( -34.759, 531.459, 23.0998, 0.83 ) }
    dend_27 { pt3dadd( -34.5805, 532.354, 23.2794, 0.28 ) }
    dend_27 { pt3dadd( -34.5342, 532.83, 23.4759, 0.55 ) }
    dend_27 { pt3dadd( -34.5326, 533.596, 23.6845, 0.28 ) }
    dend_27 { pt3dadd( -34.5609, 534.658, 23.7823, 0.83 ) }
    dend_27 { pt3dadd( -34.5028, 535.774, 23.7137, 0.28 ) }
    dend_27 { pt3dadd( -34.4727, 536.515, 23.6551, 0.83 ) }
    dend_27 { pt3dadd( -34.3651, 538.893, 23.2436, 0.55 ) }
    dend_27 { pt3dadd( -34.2455, 541.052, 22.7311, 0.55 ) }
    dend_27 { pt3dadd( -34.1616, 542.649, 22.2892, 0.55 ) }
    dend_27 { pt3dadd( -34.0401, 544.875, 21.6574, 0.55 ) }
    dend_27 { pt3dadd( -33.9705, 546.371, 21.1898, 0.55 ) }
    dend_27 { pt3dadd( -33.8578, 549.607, 20.2009, 0.55 ) }
    dend_27 { pt3dadd( -33.8076, 550.613, 19.888, 0.28 ) }
    dend_27 { pt3dadd( -33.7502, 551.505, 19.5846, 0.55 ) }
    dend_27 { pt3dadd( -33.7019, 552.741, 19.1489, 0.28 ) }
    dend_27 { pt3dadd( -33.719, 554.655, 18.411, 0.55 ) }
    dend_27 { pt3dadd( -33.7308, 555.447, 18.1254, 0.55 ) }
    dend_27 { pt3dadd( -33.729, 556.949, 17.6631, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_27 { pt3dadd( -33.6666, 558.368, 17.1462, 0.28 ) }
    dend_27 { pt3dadd( -33.5688, 559.096, 16.8674, 0.55 ) }
    dend_27 { pt3dadd( -33.1113, 560.713, 15.8871, 0.28 ) }
    dend_27 { pt3dadd( -32.6994, 561.551, 15.1883, 0.83 ) }
    dend_27 { pt3dadd( -32.2172, 562.436, 14.3874, 0.83 ) }
    dend_27 { pt3dadd( -31.2553, 563.986, 12.8689, 0.55 ) }
    dend_27 { pt3dadd( -30.444, 565.116, 11.6358, 0.55 ) }
    dend_27 { pt3dadd( -27.8376, 568.391, 7.73629, 0.28 ) }
    dend_27 { pt3dadd( -25.9999, 570.413, 5.0922, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 9/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -38.8464, 503.053, 38.206, 0.55 ) }
    dend_26 { pt3dadd( -40.2681, 505.342, 38.1235, 0.55 ) }
    dend_26 { pt3dadd( -42.1391, 508.353, 38.0148, 0.55 ) }
    dend_26 { pt3dadd( -43.4552, 510.471, 37.9384, 0.55 ) }
    dend_26 { pt3dadd( -44.5978, 512.31, 37.8721, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 14/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -51.2144, 529.977, 9.83783, 0.28 ) }
    dend_22 { pt3dadd( -51.2417, 530.696, 7.60127, 0.28 ) }
    dend_22 { pt3dadd( -51.2493, 530.896, 6.97919, 0.55 ) }
    dend_22 { pt3dadd( -51.3242, 532.864, 0.86026, 0.28 ) }
    dend_22 { pt3dadd( -51.3327, 533.088, 0.165813, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 19/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -51.2144, 529.977, 9.83783, 0.28 ) }
    dend_17 { pt3dadd( -52.8042, 531.548, 9.95797, 0.28 ) }
    dend_17 { pt3dadd( -53.7869, 532.519, 10.0322, 0.83 ) }
    dend_17 { pt3dadd( -54.5217, 533.245, 10.0878, 0.83 ) }
    dend_17 { pt3dadd( -54.9866, 533.704, 10.1229, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.57823, 421.874, -61.4909, 0.55 ) }
    dend_9 { pt3dadd( -6.99495, 422.86, -61.0561, 0.55 ) }
    dend_9 { pt3dadd( -9.91047, 424.059, -60.7322, 0.55 ) }
    dend_9 { pt3dadd( -12.0873, 424.954, -60.4904, 0.55 ) }
    dend_9 { pt3dadd( -14.6151, 425.993, -60.2096, 0.28 ) }
    dend_9 { pt3dadd( -16.9014, 426.934, -59.9557, 0.83 ) }
    dend_9 { pt3dadd( -18.6633, 427.658, -59.76, 0.83 ) }
    dend_9 { pt3dadd( -20.5717, 428.537, -59.7287, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 32/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.57823, 421.874, -61.4909, 0.55 ) }
    dend_8 { pt3dadd( -5.62593, 424.542, -61.6868, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 34/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -173.888, -114.551, 77.8848, 0.28 ) }
    dend_52 { pt3dadd( -175.999, -114.23, 79.1618, 0.28 ) }
    dend_52 { pt3dadd( -178.077, -113.789, 80.4691, 0.55 ) }
    dend_52 { pt3dadd( -180.378, -113.261, 81.9526, 0.28 ) }
    dend_52 { pt3dadd( -181.64, -112.993, 82.8207, 1.11 ) }
    dend_52 { pt3dadd( -183.535, -112.589, 84.2006, 0.28 ) }
    dend_52 { pt3dadd( -184.034, -112.474, 84.538, 0.55 ) }
    dend_52 { pt3dadd( -186.9, -111.817, 86.352, 0.28 ) }
    dend_52 { pt3dadd( -187.721, -111.611, 86.8653, 1.11 ) }
    dend_52 { pt3dadd( -189.588, -111.182, 88.0167, 0.28 ) }
    dend_52 { pt3dadd( -190.688, -110.939, 88.7078, 1.11 ) }
    dend_52 { pt3dadd( -193.239, -110.395, 90.4393, 1.11 ) }
    dend_52 { pt3dadd( -195.068, -110.066, 91.5486, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 47/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -173.888, -114.551, 77.8848, 0.83 ) }
    dend_51 { pt3dadd( -176.953, -116.644, 78.1625, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 49/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -17.8989, -235.641, -26.5483, 0.83 ) }
    dend_43 { pt3dadd( -18.7963, -236.532, -27.0181, 0.83 ) }
    dend_43 { pt3dadd( -20.2991, -238.024, -27.8047, 0.28 ) }
    dend_43 { pt3dadd( -21.5596, -239.275, -28.4645, 1.11 ) }
    dend_43 { pt3dadd( -25.1214, -242.812, -30.329, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 54/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -17.8989, -235.641, -26.5483, 1.11 ) }
    dend_42 { pt3dadd( -20.0928, -233.17, -26.2942, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -54.9866, 533.704, 10.1229, 0.55 ) }
    dend_21 { pt3dadd( -54.0001, 534.916, 8.10224, 0.55 ) }
    dend_21 { pt3dadd( -52.8948, 536.052, 6.30039, 0.28 ) }
    dend_21 { pt3dadd( -52.6332, 536.321, 5.69363, 0.55 ) }
    dend_21 { pt3dadd( -50.7872, 538.221, 1.41123, 0.28 ) }
    dend_21 { pt3dadd( -49.9215, 539.113, -0.597057, 0.55 ) }
    dend_21 { pt3dadd( -48.7446, 540.324, -3.32731, 0.28 ) }
    dend_21 { pt3dadd( -48.05, 541.188, -5.55308, 0.55 ) }
    dend_21 { pt3dadd( -46.3215, 543.808, -12.8445, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -54.9866, 533.704, 10.1229, 0.28 ) }
    dend_18 { pt3dadd( -56.3575, 533.929, 10.2872, 0.28 ) }
    dend_18 { pt3dadd( -58.4733, 534.275, 10.5408, 0.55 ) }
    dend_18 { pt3dadd( -60.2689, 534.569, 10.7561, 0.55 ) }
    dend_18 { pt3dadd( -62.1634, 534.879, 10.9832, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.5717, 428.537, -59.7287, 0.55 ) }
    dend_11 { pt3dadd( -20.7951, 430.07, -59.0961, 0.55 ) }
    dend_11 { pt3dadd( -21.011, 431.552, -58.4847, 0.55 ) }
    dend_11 { pt3dadd( -21.2072, 432.899, -57.9289, 0.83 ) }
    dend_11 { pt3dadd( -21.4454, 434.534, -57.2545, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 75/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -20.5717, 428.537, -59.7287, 0.28 ) }
    dend_10 { pt3dadd( -23.4993, 430.121, -58.7897, 0.28 ) }
    dend_10 { pt3dadd( -24.3027, 430.556, -58.532, 0.28 ) }
    dend_10 { pt3dadd( -25.9272, 431.435, -58.0109, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 79/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -25.1214, -242.812, -30.329, 1.11 ) }
    dend_45 { pt3dadd( -24.5411, -245.041, -28.8793, 1.11 ) }
    dend_45 { pt3dadd( -23.9519, -247.316, -27.2778, 0.28 ) }
    dend_45 { pt3dadd( -23.5867, -248.893, -26.1326, 1.11 ) }
    dend_45 { pt3dadd( -22.6417, -253.238, -22.6441, 0.28 ) }
    dend_45 { pt3dadd( -22.43, -254.317, -21.7496, 1.94 ) }
    dend_45 { pt3dadd( -21.9096, -257.467, -19.2702, 1.11 ) }
    dend_45 { pt3dadd( -21.8255, -258.164, -18.7099, 0.28 ) }
    dend_45 { pt3dadd( -21.765, -258.965, -18.0608, 0.83 ) }
    dend_45 { pt3dadd( -21.7496, -261.116, -16.5216, 0.28 ) }
    dend_45 { pt3dadd( -21.8578, -262.122, -16.0167, 1.11 ) }
    dend_45 { pt3dadd( -22.2299, -264.812, -14.9029, 0.28 ) }
    dend_45 { pt3dadd( -22.6424, -266.962, -14.2089, 0.28 ) }
    dend_45 { pt3dadd( -22.8342, -268.093, -13.8762, 1.11 ) }
    dend_45 { pt3dadd( -22.8342, -268.093, -13.8762, 1.11 ) }
    dend_45 { pt3dadd( -23.0934, -269.508, -13.6269, 0.55 ) }
    dend_45 { pt3dadd( -23.2101, -270.127, -13.4969, 1.38 ) }
    dend_45 { pt3dadd( -23.7051, -272.473, -12.7907, 0.28 ) }
    dend_45 { pt3dadd( -23.7482, -272.724, -12.6974, 1.11 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 98/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -25.1214, -242.812, -30.329, 0.55 ) }
    dend_44 { pt3dadd( -27.6609, -242.474, -27.5911, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_44 { pt3dadd( -29.2344, -242.264, -25.8946, 0.55 ) }
    dend_44 { pt3dadd( -30.5825, -242.085, -24.4412, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -62.1634, 534.879, 10.9832, 0.55 ) }
    dend_20 { pt3dadd( -62.7041, 536.144, 11.2476, 0.55 ) }
    dend_20 { pt3dadd( -63.5217, 538.46, 11.8092, 0.55 ) }
    dend_20 { pt3dadd( -63.9255, 540.016, 12.1577, 0.55 ) }
    dend_20 { pt3dadd( -64.3771, 541.943, 12.5187, 0.55 ) }
    dend_20 { pt3dadd( -64.7607, 543.719, 12.9055, 0.28 ) }
    dend_20 { pt3dadd( -64.9221, 544.533, 13.0379, 0.83 ) }
    dend_20 { pt3dadd( -65.2747, 546.855, 13.3084, 0.83 ) }
    dend_20 { pt3dadd( -65.445, 548.854, 13.5046, 0.83 ) }
    dend_20 { pt3dadd( -65.5119, 549.88, 13.5605, 0.55 ) }
    dend_20 { pt3dadd( -65.5077, 552.497, 13.6166, 0.83 ) }
    dend_20 { pt3dadd( -65.3162, 555.461, 13.4755, 0.28 ) }
    dend_20 { pt3dadd( -65.2293, 556.881, 13.2805, 0.28 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 15/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -62.1634, 534.879, 10.9832, 0.55 ) }
    dend_19 { pt3dadd( -65.2253, 533.586, 11.9688, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_0, dend_57, dend_30, dend_12, dend_1, dend_59, dend_58, dend_46, dend_31, dend_28, dend_13, dend_3, dend_2, dend_61, dend_60, dend_56, dend_47, dend_37, dend_32, dend_23, dend_14, dend_5, dend_4, dend_53, dend_48, dend_39, dend_38, dend_34, dend_33, dend_25, dend_24, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_49, dend_41, dend_40, dend_36, dend_35, dend_27, dend_26, dend_22, dend_17, dend_9, dend_8, dend_52, dend_51, dend_43, dend_42, dend_21, dend_18, dend_11, dend_10, dend_45, dend_44, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_57 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_31 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_32 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_14 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_5 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_48 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_16 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_54 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_36 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_53 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_59 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_55 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_61 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_58 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_38 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_39 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_42 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_43 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_4 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_35 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_49 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_52 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_9 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_11 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_26 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_17 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_20 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_2, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_47, dend_47, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_43, dend_43, dend_43, dend_43, dend_42, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 5
    dend_0 nseg = 3
    dend_57 nseg = 3
    dend_12 nseg = 15
    dend_1 nseg = 11
    dend_31 nseg = 3
    dend_28 nseg = 7
    dend_56 nseg = 11
    dend_32 nseg = 5
    dend_23 nseg = 5
    dend_14 nseg = 3
    dend_5 nseg = 5
    dend_48 nseg = 9
    dend_24 nseg = 7
    dend_16 nseg = 5
    dend_7 nseg = 3
    dend_6 nseg = 5
    dend_54 nseg = 3
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_27 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_DBC_87482e342d_0_0


