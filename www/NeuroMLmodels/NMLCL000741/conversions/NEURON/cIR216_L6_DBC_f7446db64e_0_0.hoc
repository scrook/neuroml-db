// Cell: cIR216_L6_DBC_f7446db64e_0_0
/*
{
  "id" : "cIR216_L6_DBC_f7446db64e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.20498, -9.63696, 0.0, 2.93949", "1.97921, -8.62937, 0.0, 5.10114", "1.75343, -7.62179, 0.0, 6.34149", "1.52766, -6.61421, 0.0, 7.24948", "1.30189, -5.60662, 0.0, 8.32859", "1.07612, -4.59904, 0.0, 9.63098", "0.850343, -3.59146, 0.0, 10.5761", "0.624571, -2.58388, 0.0, 11.2008", "0.398798, -1.57629, 0.0, 11.5851", "0.173026, -0.56871, 0.0, 11.8715", "-0.0527468, 0.438873, 0.0, 11.942", "-0.278519, 1.44646, 0.0, 11.923", "-0.504292, 2.45404, 0.0, 11.4797", "-0.730064, 3.46162, 0.0, 10.9001", "-0.955837, 4.4692, 0.0, 10.1322", "-1.18161, 5.47679, 0.0, 9.32117", "-1.40738, 6.48437, 0.0, 8.43955", "-1.63315, 7.49195, 0.0, 7.43264", "-1.85893, 8.49954, 0.0, 6.41765", "-2.0847, 9.50712, 0.0, 5.2256", "-2.31047, 10.5147, 0.0, 2.87927" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67666, -9.21573, 7.1, 4.35", "1.67666, -9.21573, 7.1, 4.35", "2.14179, -10.1729, 7.76768, 3.32", "2.98457, -11.6649, 9.08886, 2.36", "3.88481, -13.2585, 10.5001, 2.88", "3.97025, -13.4098, 10.6341, 2.65", "4.62081, -14.5614, 11.6539, 1.62", "5.50591, -16.0125, 13.0943, 1.84", "6.39157, -17.2276, 14.6439, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.96334, 9.77477, 0.0, 4.28", "-1.96334, 9.77477, 0.0, 4.28", "-2.59803, 10.932, -0.125262, 3.32", "-3.04813, 11.7489, -0.274091, 2.88", "-3.37423, 12.3423, -0.396396, 2.88", "-3.86124, 13.2286, -0.579055, 3.47", "-4.49793, 14.3874, -0.81785, 2.51", "-5.25492, 15.7432, -1.12701, 2.8", "-5.92588, 16.9048, -1.44789, 4.13", "-6.24251, 17.4434, -1.62136, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.31047, 10.5147, 0.0, 0.488856", "-5.59024, 25.1517, 0.0, 0.488856", "-8.87001, 39.7888, 0.0, 0.488856" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.39157, -17.2276, 14.6439, 1.4", "7.37125, -18.0097, 13.6838, 1.4", "8.67499, -19.0822, 12.4496, 1.4", "9.56061, -19.81, 11.6627, 1.4", "10.672, -20.7371, 10.7719, 1.4", "11.6438, -21.5561, 10.0334, 1.18", "12.8824, -22.5895, 9.16079, 1.4", "13.4451, -23.0756, 8.79853, 1.55", "14.0005, -23.5576, 8.49652, 1.7", "15.2151, -24.5987, 7.90348, 1.18", "16.1703, -25.3906, 7.51674, 1.18", "17.0317, -26.0884, 7.22272, 1.84", "17.5362, -26.4967, 7.09905, 1.84" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.39157, -17.2276, 14.6439, 1.18", "6.25613, -17.5784, 15.2726, 1.18", "5.95238, -18.4473, 16.7719, 1.03", "5.7925, -19.0918, 17.8647, 1.03", "5.7487, -19.4589, 18.5031, 0.96", "5.76914, -19.7674, 19.07, 0.96", "5.84385, -20.1592, 19.8484, 1.11", "5.97931, -20.5352, 20.6852, 1.03", "6.16609, -20.9466, 21.6892, 1.18", "6.41005, -21.4487, 23.0386, 1.84", "6.68504, -22.016, 24.7337, 1.18", "6.84272, -22.4392, 26.0921, 1.18", "6.8694, -22.7337, 27.1317, 1.18", "6.71024, -23.028, 28.2815, 1.33", "6.36437, -23.2477, 29.2504, 1.33", "6.05637, -23.3565, 29.7903, 1.33", "5.48836, -23.499, 30.6242, 1.4", "4.93915, -23.6195, 31.4837, 1.47", "4.23026, -23.7763, 32.8543, 1.33", "3.75749, -23.9019, 34.1467, 1.33", "3.46026, -24.0135, 35.258, 1.4", "3.14059, -24.1837, 37.0372, 1.4", "2.92528, -24.3621, 38.9106, 1.4", "2.80237, -24.5422, 40.4253, 1.4", "2.6635, -24.8052, 42.2044, 1.4", "2.56153, -24.9575, 42.9584, 1.11", "2.17023, -25.402, 44.6646, 1.11", "1.62335, -25.894, 46.231, 1.25", "1.27599, -26.1719, 47.0084, 1.55", "0.605929, -26.6535, 48.2306, 1.55", "-0.234564, -27.2242, 49.5538, 1.25", "-1.20757, -27.8531, 50.9846, 1.25", "-2.40665, -28.6286, 52.5063, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.24251, 17.4434, -1.62136, 2.88", "-7.54897, 19.1803, -3.37657, 2.88", "-8.49523, 20.4383, -4.64787, 2.88", "-9.44469, 21.7006, -5.92345, 3.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.24251, 17.4434, -1.62136, 2.06", "-6.38036, 19.6251, 0.467973, 2.06", "-6.42099, 21.6541, 2.18211, 0.96", "-6.40115, 22.5768, 2.90511, 0.96", "-6.32858, 23.92, 3.86684, 0.81", "-6.22878, 25.0047, 4.5862, 0.81", "-6.05349, 26.4596, 5.4981, 1.03", "-5.88019, 27.4199, 5.95904, 1.11", "-5.62777, 28.5089, 6.38568, 1.55", "-5.2906, 29.9493, 6.89546, 1.18", "-4.98838, 31.3333, 7.33605, 0.88", "-4.84216, 32.1345, 7.56848, 0.74", "-4.65744, 33.5063, 7.91809, 1.18", "-4.51999, 35.0345, 8.31604, 0.81", "-4.409, 36.8538, 8.79808, 0.96", "-4.315, 38.4528, 9.21182, 1.25", "-4.22752, 39.8527, 9.56962, 1.25", "-4.10233, 41.1612, 9.91449, 0.66", "-3.88803, 42.5239, 10.3014, 0.88", "-3.54998, 43.7502, 10.65, 0.52", "-3.10661, 44.9123, 10.9715, 0.96", "-2.77323, 45.6504, 11.1641, 0.96", "-2.07304, 47.0475, 11.5472, 0.74", "-1.47276, 48.1511, 11.862, 0.88", "-0.717936, 49.5025, 12.2481, 0.88", "0.0817972, 51.0351, 12.772, 0.96", "0.312894, 51.5069, 12.9645, 0.96", "0.886295, 52.7898, 13.5766, 0.96", "1.113, 53.3669, 13.9099, 1.11", "1.36141, 54.0823, 14.3777, 0.96", "1.79015, 55.3213, 15.3456, 0.81", "2.14943, 56.3383, 16.2431, 0.66", "2.60895, 57.6631, 17.4472, 0.59", "2.96455, 58.7746, 18.5666, 0.88", "3.28961, 59.8203, 19.6606, 1.4", "3.76037, 61.3222, 21.3195, 0.88", "4.16043, 62.5386, 22.7532, 0.74", "4.36777, 63.1994, 23.5764, 0.74", "4.92323, 64.7567, 25.6107, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.87001, 39.7888, 0.0, 0.158826", "-12.1498, 54.4258, 0.0, 0.158826", "-15.4296, 69.0629, 0.0, 0.158826" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "17.5362, -26.4967, 7.09905, 1.7", "18.733, -26.5428, 9.04233, 1.7", "19.7381, -26.6929, 10.7434, 1.25", "20.5063, -26.8854, 12.0851, 1.25", "21.2753, -27.1473, 13.4126, 1.55", "22.2459, -27.5455, 15.0481, 1.4", "23.1614, -27.9597, 16.5495, 1.62", "24.0698, -28.4479, 17.9446, 1.55", "25.1313, -29.0638, 19.521, 1.4", "26.0401, -29.6034, 20.8023, 1.47", "27.3623, -30.3951, 22.563, 1.18", "28.6319, -31.1225, 24.1227, 1.18", "30.0418, -31.882, 25.7087, 1.03", "31.2391, -32.4719, 26.9305, 1.03", "31.7532, -32.6949, 27.4045, 1.25", "33.0592, -33.1861, 28.5271, 1.11", "34.19, -33.5525, 29.5322, 1.33", "34.903, -33.7528, 30.1708, 1.62", "36.5398, -34.1801, 31.6381, 1.33", "38.1494, -34.5624, 33.0973, 1.25", "39.5258, -34.844, 34.3845, 1.18", "41.8728, -35.2288, 36.6494, 1.47", "42.5398, -35.3236, 37.3319, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.5362, -26.4967, 7.09905, 0.88", "17.6218, -27.2292, 7.64094, 0.88", "17.6473, -28.3092, 8.51181, 0.74", "17.6078, -29.4123, 9.47514, 0.74", "17.5451, -30.2739, 10.2185, 0.74", "17.4464, -31.199, 10.9916, 0.96", "17.3212, -32.1232, 11.732, 1.7", "17.0363, -33.5039, 12.8322, 0.66", "16.768, -34.4678, 13.5324, 0.74", "16.5311, -35.2057, 13.9446, 0.88", "16.2915, -35.8943, 14.1954, 1.11", "15.9969, -36.7422, 14.347, 1.33", "15.6173, -37.9043, 14.3912, 0.74", "15.3078, -39.0009, 14.3162, 0.74", "15.1203, -39.7783, 14.2007, 0.59", "14.8417, -41.1487, 13.9606, 0.88", "14.6462, -42.3412, 13.7403, 0.59", "14.5583, -42.9715, 13.6155, 0.59", "14.4346, -44.12, 13.3931, 0.81", "14.3089, -45.5865, 13.1622, 0.74", "14.2551, -46.3227, 13.0477, 0.59", "14.2106, -47.2803, 12.9315, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-2.40665, -28.6286, 52.5063, 0.52", "-1.89402, -28.1038, 56.2628, 0.52", "-1.56945, -27.8493, 58.1012, 0.52", "-1.28757, -27.6437, 59.5412, 0.52", "-1.04406, -27.4898, 60.7198, 0.52", "-0.680401, -27.2306, 62.5019, 0.52", "-0.429988, -27.0298, 63.7661, 0.52", "-0.204994, -26.7933, 64.9266, 0.52", "0.122792, -26.3919, 66.6978, 0.52", "0.485257, -25.8087, 68.9023, 0.52", "0.687399, -25.3454, 70.4074, 0.81", "0.836033, -24.8307, 71.7735, 0.81", "0.956122, -24.3514, 72.8473, 0.59", "1.24368, -23.2633, 75.0355, 0.59", "1.53631, -22.3814, 76.6391, 0.52", "1.8514, -21.5496, 77.9812, 0.37", "2.39148, -20.3974, 79.7817, 0.44", "3.02111, -19.2153, 81.4973, 0.29", "3.62343, -18.2377, 82.8898, 0.29", "4.41138, -17.0074, 84.4678, 0.29", "5.0781, -16.0102, 85.7092, 0.29", "6.08547, -14.5265, 87.4948, 0.29", "6.62007, -13.7514, 88.4217, 0.29", "7.74325, -12.1017, 90.3846, 0.29", "8.4706, -11.0134, 91.6523, 0.22", "9.63352, -9.24491, 93.7312, 0.22", "10.1625, -8.45317, 94.6933, 0.22", "11.0415, -7.07576, 96.3398, 0.22", "12.0381, -5.50511, 98.3232, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-2.40665, -28.6286, 52.5063, 1.03", "-2.68718, -29.5926, 52.5568, 1.03", "-3.06398, -30.9392, 52.8013, 0.74", "-3.47648, -32.5321, 53.1662, 0.74", "-3.7864, -33.807, 53.4732, 0.88", "-4.18229, -35.5329, 53.8201, 0.96", "-4.37383, -36.4218, 53.9721, 0.96", "-4.83402, -38.8462, 54.338, 1.03", "-5.11385, -40.474, 54.5546, 0.66", "-5.3071, -41.7856, 54.716, 0.52", "-5.492, -43.4686, 54.8892, 0.66", "-5.58448, -44.8909, 54.9919, 0.96", "-5.68499, -46.4009, 55.0497, 1.11", "-5.72002, -46.9885, 55.0447, 1.11", "-5.776, -48.5074, 55.0648, 0.66", "-5.79735, -49.4282, 55.0981, 0.66", "-5.81569, -50.725, 55.1737, 0.66", "-5.83358, -52.2804, 55.3331, 0.88", "-5.85787, -54.0017, 55.5998, 0.81", "-5.89756, -55.9644, 56.0455, 0.74", "-5.95854, -57.7352, 56.5469, 0.66", "-6.03845, -59.4165, 57.1241, 0.52", "-6.16295, -61.6409, 57.98, 0.52", "-6.23433, -62.9243, 58.5463, 0.52", "-6.39642, -64.6629, 59.374, 0.52", "-6.53302, -65.8078, 59.9283, 0.66", "-6.69289, -67.068, 60.5163, 0.96", "-6.91576, -68.8637, 61.2839, 1.03", "-7.13793, -70.7695, 61.929, 0.74", "-7.32605, -72.5496, 62.4144, 0.44", "-7.43003, -73.6891, 62.6626, 0.22", "-7.46879, -74.2047, 62.7629, 0.22", "-7.53654, -75.4994, 62.9658, 0.52", "-7.57475, -77.0797, 63.0851, 0.52", "-7.55177, -79.007, 63.0642, 0.22", "-7.49851, -80.0176, 63.0644, 0.22", "-7.40301, -81.3739, 63.1275, 0.66", "-7.23186, -83.291, 63.2772, 0.66", "-7.01764, -85.1602, 63.4646, 0.37", "-6.80678, -86.5952, 63.7036, 0.22", "-6.44064, -88.954, 64.2264, 0.29", "-6.24061, -90.4977, 64.4683, 0.29", "-6.15797, -91.2801, 64.5458, 0.66", "-6.04699, -92.5159, 64.5881, 0.96", "-5.90122, -94.5041, 64.5415, 0.96", "-5.79145, -96.2495, 64.3346, 0.37", "-5.62453, -99.7902, 63.646, 0.44", "-5.60047, -100.821, 63.4343, 0.44", "-5.59395, -102.825, 63.1054, 0.52", "-5.61713, -104.743, 62.868, 0.44", "-5.64551, -106.115, 62.7654, 0.44", "-5.68634, -108.126, 62.7773, 0.44", "-5.72177, -110.364, 63.059, 0.44", "-5.77226, -112.157, 63.353, 0.44", "-5.83568, -113.471, 63.6127, 0.44", "-5.90237, -114.719, 63.8823, 0.44", "-6.02115, -116.057, 64.2016, 0.52", "-6.22957, -117.683, 64.6057, 0.52", "-6.38515, -118.655, 64.8382, 0.52", "-6.81599, -120.824, 65.2893, 0.22", "-7.18144, -122.596, 65.6052, 0.22", "-7.51701, -124.189, 65.8406, 0.22", "-7.87293, -125.85, 66.0348, 0.29", "-8.18556, -127.406, 66.1152, 0.29", "-8.48688, -129.222, 66.2962, 0.29", "-8.7844, -131.531, 66.6156, 0.22", "-8.87104, -132.445, 66.7672, 0.29", "-8.97007, -134.172, 67.0791, 0.37", "-9.04053, -136.206, 67.4821, 0.37", "-9.1519, -139.593, 68.0983, 0.22", "-9.18078, -140.669, 68.2731, 0.22", "-9.22771, -141.916, 68.4445, 0.37", "-9.29568, -143.323, 68.5876, 0.37", "-9.42559, -145.737, 68.7836, 0.29", "-9.53449, -147.348, 68.8803, 0.22", "-9.6371, -148.642, 68.8835, 0.22", "-9.75172, -150.051, 68.9807, 0.29", "-9.918, -151.878, 69.2255, 0.29", "-10.0728, -153.421, 69.6199, 0.29", "-10.2043, -154.555, 69.9847, 0.29", "-10.4476, -156.655, 70.8056, 0.15", "-10.7001, -158.69, 71.702, 0.15", "-10.8125, -159.629, 72.1714, 0.37", "-11.0765, -162.12, 73.5925, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.44469, 21.7006, -5.92345, 2.8", "-10.7069, 21.9289, -6.94916, 2.8" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-9.44469, 21.7006, -5.92345, 1.77", "-9.20156, 22.9763, -7.09795, 1.77", "-8.93968, 24.7104, -8.77659, 1.4", "-8.76867, 26.0678, -10.1033, 1.4", "-8.6724, 26.9384, -10.9769, 1.7", "-8.57164, 28.077, -12.1573, 1.84", "-8.47159, 29.4116, -13.5536, 1.84", "-8.42427, 30.6445, -14.9066, 1.4", "-8.39211, 31.9529, -16.3142, 1.84", "-8.36963, 33.4974, -17.8709, 1.62", "-8.36386, 35.3639, -19.6087, 1.77", "-8.39795, 36.4125, -20.4621, 1.77", "-8.52605, 38.0895, -21.6842, 1.62", "-8.65524, 39.1501, -22.3782, 1.62", "-8.95359, 40.8889, -23.4253, 1.47", "-9.2112, 42.0701, -24.0724, 1.47", "-9.74413, 44.2484, -25.2165, 1.4", "-10.1622, 45.9095, -26.1084, 1.47", "-10.524, 47.4492, -26.985, 1.55", "-10.6898, 48.3482, -27.5588, 1.55", "-10.8648, 49.9794, -28.6848, 1.25", "-10.8857, 51.5827, -29.8234, 1.25", "-10.7642, 52.8786, -30.7259, 1.4", "-10.5284, 54.2456, -31.6119, 1.25", "-10.1593, 55.8637, -32.5338, 1.25", "-9.89125, 57.02, -33.077, 1.25", "-9.57765, 58.3994, -33.6705, 1.47", "-9.44031, 59.1988, -33.9721, 1.62", "-9.36155, 60.2072, -34.2982, 1.33", "-9.42083, 62.3956, -34.8844, 1.11", "-9.59838, 63.7233, -35.2433, 1.11", "-9.88775, 65.2903, -35.7008, 1.25", "-10.0949, 66.1672, -35.9862, 1.47", "-10.4768, 67.5368, -36.4687, 1.4", "-10.8985, 68.7979, -36.9497, 1.25", "-11.6655, 70.5112, -37.6322, 1.47" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.92323, 64.7567, 25.6107, 0.15", "3.05543, 64.7378, 26.8681, 0.15", "2.17747, 64.7626, 27.4725, 0.15", "1.64378, 64.8139, 27.8503, 0.29", "0.277962, 65.0564, 28.8722, 0.22", "-0.842642, 65.3305, 29.7554, 0.22", "-1.74085, 65.6231, 30.4942, 0.37", "-1.90719, 65.6921, 30.6432, 0.81", "-2.35301, 65.9868, 31.0824, 0.15", "-2.86881, 66.479, 31.6539, 0.22", "-3.03668, 66.6901, 31.866, 0.59", "-3.34567, 67.0818, 32.268, 1.03", "-3.98636, 67.7804, 33.0141, 0.15", "-4.28673, 68.0257, 33.3161, 0.29", "-5.12333, 68.5077, 34.0523, 0.22", "-6.16419, 68.9702, 34.8729, 0.37", "-6.83295, 69.2044, 35.3641, 0.37", "-7.4153, 69.3484, 35.7745, 0.44", "-8.48306, 69.5344, 36.4874, 0.37", "-9.58637, 69.695, 37.2068, 0.37", "-10.3069, 69.7832, 37.6492, 0.37", "-11.2382, 69.8819, 38.1981, 0.37", "-12.6609, 70.0226, 39.0627, 0.37", "-14.1751, 70.1723, 40.0546, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.92323, 64.7567, 25.6107, 0.96", "6.04191, 66.1764, 25.6536, 0.96", "6.40601, 66.6547, 25.7066, 0.88", "7.04116, 67.4962, 25.8521, 0.74", "7.73247, 68.438, 26.0655, 0.96", "8.36155, 69.3032, 26.2526, 0.81", "8.92092, 70.0846, 26.411, 0.44", "9.43301, 70.8796, 26.5922, 0.44", "9.81283, 71.5067, 26.6958, 0.66", "10.42, 72.5747, 26.8215, 0.52", "10.91, 73.4798, 26.8844, 0.74", "11.3295, 74.2642, 26.89, 1.11", "11.7113, 75.0333, 26.8681, 0.66", "12.2482, 76.176, 26.829, 0.66", "12.5949, 76.9388, 26.8133, 0.66", "13.0267, 77.9046, 26.8433, 0.81", "13.3258, 78.5839, 26.9248, 0.59", "13.7913, 79.5959, 27.0797, 0.52", "14.1308, 80.3324, 27.2048, 0.52", "14.3347, 80.7773, 27.295, 0.52", "14.7153, 81.6548, 27.5026, 0.66", "15.0288, 82.3989, 27.7199, 0.88", "15.4439, 83.3244, 28.0267, 1.03", "15.8955, 84.2599, 28.3786, 0.52", "16.274, 85.0416, 28.6987, 0.29", "16.6299, 85.7614, 29.0239, 0.29", "17.01, 86.5861, 29.4778, 0.52", "17.3693, 87.4088, 30.0255, 0.22", "17.5439, 87.8398, 30.3567, 0.15", "17.7407, 88.3707, 30.7698, 0.66", "17.923, 89.0738, 31.2969, 0.29", "18.027, 89.9968, 31.9787, 0.52", "18.0236, 90.4617, 32.3278, 1.03", "17.9808, 91.1605, 32.8695, 0.37", "17.9717, 91.7741, 33.3176, 0.44", "18.0442, 92.8576, 34.0126, 0.59", "18.1926, 93.9746, 34.5919, 0.88", "18.3262, 94.6467, 34.8558, 0.88", "18.4671, 95.2551, 35.052, 0.66", "18.8781, 96.5949, 35.3502, 0.29", "19.2727, 97.606, 35.4715, 0.66", "19.6381, 98.4029, 35.49, 0.44", "19.8836, 98.9364, 35.475, 0.44", "20.2361, 99.8021, 35.4565, 0.22", "20.5441, 100.693, 35.4739, 0.22", "20.7172, 101.347, 35.5777, 0.66", "20.8347, 101.861, 35.7192, 0.88", "21.0167, 102.721, 36.0355, 0.52", "21.1265, 103.389, 36.3755, 0.52", "21.2077, 104.257, 36.9525, 0.52", "21.2466, 105.458, 37.8987, 0.52", "21.2501, 106.057, 38.4287, 0.96", "21.2561, 106.811, 39.1639, 0.66", "21.2966, 107.699, 40.0992, 0.22", "21.336, 108.153, 40.5883, 0.22", "21.4097, 108.653, 41.097, 0.29", "21.5798, 109.349, 41.7118, 0.37", "21.894, 110.201, 42.3696, 0.52", "22.2116, 110.806, 42.7783, 0.81", "22.5535, 111.313, 43.0388, 0.81", "23.2483, 112.21, 43.3919, 0.22", "23.7343, 112.814, 43.6306, 0.59", "24.4571, 113.693, 43.9636, 0.59", "25.0512, 114.418, 44.2401, 0.22", "25.7809, 115.369, 44.6308, 0.15", "26.2735, 116.106, 44.95, 0.15", "26.9571, 117.439, 45.6886, 0.59", "27.1338, 117.93, 46.0185, 0.59", "27.2861, 118.585, 46.5093, 0.59", "27.3867, 119.189, 46.9723, 0.29", "27.4831, 119.875, 47.5128, 0.22", "27.7167, 121.145, 48.455, 0.22", "27.8222, 121.531, 48.6924, 0.22", "28.043, 122.211, 49.0882, 0.52", "28.3335, 122.994, 49.5111, 0.59", "28.5351, 123.484, 49.7475, 0.59", "28.9346, 124.393, 50.1724, 0.29", "29.2138, 125.035, 50.4393, 0.29", "29.5329, 125.9, 50.8011, 0.37", "29.6966, 126.471, 51.0384, 0.29", "29.8004, 127.148, 51.3591, 0.44", "29.8753, 128.263, 51.9286, 0.44", "29.8951, 129.053, 52.3455, 0.66", "29.9068, 129.786, 52.746, 0.88", "29.9254, 130.756, 53.2668, 0.66", "30.0434, 132.573, 54.2415, 0.37", "30.1448, 133.469, 54.7566, 0.22", "30.2867, 134.284, 55.2033, 0.52", "30.4241, 134.815, 55.4918, 0.59", "30.6942, 135.556, 55.8592, 0.29", "31.0061, 136.288, 56.2198, 0.22", "31.6001, 137.608, 56.8503, 0.15", "32.0116, 138.64, 57.3968, 0.37", "32.2316, 139.295, 57.765, 0.37", "32.4352, 140.031, 58.1725, 0.37", "32.8309, 141.603, 59.0318, 0.81", "33.0157, 142.431, 59.4793, 0.96", "33.1577, 143.087, 59.8213, 0.52", "33.29, 143.864, 60.2663, 0.22", "33.4245, 144.871, 60.8326, 0.29", "33.5614, 145.899, 61.3776, 0.22", "33.6977, 146.75, 61.7775, 0.74", "33.8971, 147.992, 62.3612, 0.29", "34.0903, 149.348, 63.0476, 0.52", "34.187, 150.072, 63.4427, 0.59", "34.2846, 150.906, 63.9172, 0.29", "34.3447, 151.519, 64.2357, 0.29", "34.3981, 152.269, 64.6259, 0.29", "34.4226, 153.007, 65.0643, 0.66", "34.4368, 153.538, 65.4162, 0.96", "34.4144, 154.123, 65.8999, 0.37", "34.3303, 154.97, 66.6847, 0.29", "34.1593, 155.999, 67.6459, 0.37", "33.9558, 156.937, 68.5082, 0.66", "33.8262, 157.499, 69.0038, 0.44", "33.5977, 158.536, 69.8861, 0.88", "33.4704, 159.179, 70.408, 1.11", "33.2456, 160.406, 71.3272, 0.22", "33.1696, 161.028, 71.6833, 0.22", "33.11, 161.673, 71.9766, 0.15", "33.0355, 162.426, 72.2522, 0.15", "32.9842, 162.982, 72.4152, 0.15", "32.8852, 163.873, 72.6792, 0.37", "32.793, 164.765, 72.9538, 0.37", "32.7295, 165.313, 73.1295, 0.22", "32.6367, 166.121, 73.3959, 0.44", "32.5926, 166.558, 73.5392, 0.44", "32.5512, 167.183, 73.7421, 0.44", "32.5547, 167.736, 73.9048, 0.66", "32.593, 168.345, 74.1124, 0.37", "32.683, 169.034, 74.3725, 0.37", "32.8412, 169.769, 74.677, 0.22", "32.9274, 170.09, 74.8114, 0.22", "33.1662, 170.919, 75.1537, 0.22", "33.5116, 172.007, 75.554, 0.52", "33.7239, 172.646, 75.7633, 0.96", "33.8802, 173.12, 75.8987, 0.96", "34.1871, 174.069, 76.1335, 0.22", "34.4185, 174.84, 76.284, 0.29", "34.6921, 175.815, 76.3975, 0.29", "34.848, 176.395, 76.4152, 0.81", "34.9798, 176.908, 76.4178, 0.52", "35.1882, 177.746, 76.3921, 0.37", "35.3477, 178.336, 76.3083, 0.37", "35.5537, 179.099, 76.1562, 0.74", "35.7046, 179.679, 76.0331, 0.74", "35.9053, 180.402, 75.8585, 0.29", "36.1035, 181.116, 75.6794, 0.37", "36.5281, 182.696, 75.303, 0.37", "36.741, 183.461, 75.1256, 0.52", "36.9146, 184.052, 75.0175, 0.52", "37.0916, 184.515, 74.9534, 0.52", "37.3823, 185.166, 74.9575, 0.59", "37.6886, 185.794, 75.0533, 0.22", "38.1902, 186.78, 75.3848, 0.44", "38.6414, 187.566, 75.7339, 0.52", "39.3733, 188.762, 76.4496, 0.29", "40.025, 189.757, 77.292, 0.44", "40.3786, 190.29, 77.928, 0.44", "40.7398, 190.906, 78.9497, 0.44", "40.918, 191.299, 79.7362, 0.44", "41.0398, 191.76, 80.7662, 0.44", "41.0879, 192.304, 82.049, 0.22", "41.0838, 192.802, 83.198, 0.74", "41.0173, 193.404, 84.4857, 0.74", "40.9302, 193.862, 85.3055, 0.59", "40.7563, 194.548, 86.3454, 0.22", "40.6813, 194.851, 86.7184, 0.15", "40.5282, 195.472, 87.3117, 0.29", "40.3539, 196.229, 87.8824, 0.29", "40.1808, 197.004, 88.3503, 0.29", "40.0665, 197.458, 88.6037, 0.52", "39.9415, 197.974, 88.8508, 0.88", "39.7127, 198.87, 89.2389, 0.52", "39.5863, 199.493, 89.4135, 0.52", "39.474, 200.173, 89.512, 0.22", "39.3354, 200.928, 89.5808, 0.22", "39.2382, 201.433, 89.6184, 0.52", "39.1602, 201.837, 89.6406, 0.81", "38.8619, 203.449, 89.6953, 0.22", "38.7029, 204.238, 89.7063, 0.22", "38.3968, 205.651, 89.7092, 0.22", "38.3414, 205.935, 89.6953, 0.37", "38.2432, 206.471, 89.6731, 0.96", "38.2069, 206.682, 89.6705, 0.96", "38.0633, 207.559, 89.7027, 0.22", "38.0362, 207.798, 89.7111, 0.22", "37.9823, 208.695, 89.7361, 0.37", "37.9445, 209.259, 89.8074, 0.88", "37.8778, 210.394, 90.044, 0.22", "37.8592, 210.899, 90.187, 0.37", "37.8305, 211.943, 90.5702, 0.66", "37.7804, 212.739, 90.9414, 0.22", "37.6899, 213.625, 91.44, 0.66", "37.6275, 214.085, 91.731, 0.66", "37.4969, 214.765, 92.2454, 0.44", "37.3993, 215.103, 92.5447, 0.59", "37.1219, 215.838, 93.2916, 0.15", "36.9717, 216.124, 93.6457, 0.37", "36.8198, 216.368, 93.9801, 0.37", "36.4449, 216.883, 94.7489, 0.15", "36.1467, 217.264, 95.3408, 0.15", "36.0119, 217.483, 95.6421, 0.29", "35.7949, 217.951, 96.2341, 0.29", "35.5656, 218.626, 96.9817, 0.22", "35.4256, 219.232, 97.5273, 0.66", "35.3997, 219.38, 97.6354, 0.66", "35.1773, 220.304, 98.2766, 0.15", "34.9486, 221.019, 98.7479, 0.15", "34.7007, 221.567, 99.1121, 0.37", "34.4865, 221.922, 99.3931, 0.37", "34.1063, 222.506, 99.8517, 0.22", "33.4831, 223.434, 100.543, 0.22", "33.1754, 223.907, 100.875, 0.37", "32.4304, 225.201, 101.667, 0.15", "31.8281, 226.428, 102.288, 0.15", "31.2172, 227.971, 102.929, 0.15", "30.9586, 228.844, 103.218, 0.15", "30.7154, 230.137, 103.562, 0.15", "30.6597, 231.202, 103.831, 0.15", "30.8611, 232.797, 104.207, 0.15", "31.1169, 233.598, 104.391, 0.15", "31.4486, 234.221, 104.573, 0.15", "31.9416, 234.873, 104.813, 0.37", "33.2246, 236.123, 105.398, 0.15", "33.989, 236.706, 105.754, 0.15", "34.895, 237.278, 106.237, 0.15", "35.2276, 237.474, 106.424, 0.59", "35.8724, 237.844, 106.849, 0.29", "36.3422, 238.129, 107.237, 0.15", "36.5652, 238.299, 107.488, 0.29", "37.0394, 238.774, 108.181, 0.88", "37.2678, 239.125, 108.716, 0.22", "37.4586, 239.741, 109.637, 0.22", "37.4518, 240.053, 110.133, 0.22", "37.3219, 240.618, 111.105, 0.29", "37.1707, 241.002, 111.8, 0.15", "36.7682, 241.767, 113.227, 0.66", "36.3087, 242.49, 114.594, 0.37", "35.706, 243.286, 116.123, 0.15", "35.2706, 243.822, 117.1, 0.15", "34.8657, 244.301, 117.884, 0.15", "34.6921, 244.528, 118.176, 0.15", "34.3906, 245.025, 118.602, 0.52", "34.0494, 245.814, 118.991, 0.52", "33.5895, 247.309, 119.368, 0.15", "33.2834, 248.595, 119.551, 0.15", "33.1047, 249.749, 119.644, 0.15", "32.9451, 251.427, 119.729, 0.15", "32.865, 253.57, 119.791, 0.15", "32.9081, 255.072, 119.814, 0.15", "32.9765, 255.821, 119.824, 0.22", "33.1881, 257.309, 119.847, 0.07", "33.2726, 257.795, 119.854, 0.07", "33.4688, 258.77, 119.857, 0.22", "33.7516, 260.203, 119.901, 0.07", "33.8718, 260.719, 119.893, 0.07", "33.9733, 261.11, 119.867, 0.22", "34.136, 261.65, 119.812, 0.59", "34.6666, 263.019, 119.613, 0.07", "35.1053, 263.927, 119.46, 0.07", "35.3116, 264.295, 119.398, 0.29", "35.5796, 264.737, 119.326, 0.29", "36.1416, 265.669, 119.186, 0.07", "36.7288, 266.735, 119.073, 0.07", "36.951, 267.225, 119.045, 0.07", "37.0696, 267.57, 119.011, 0.29", "37.1613, 268.024, 118.973, 0.29", "37.32, 269.283, 118.878, 0.15", "37.3411, 270.414, 118.781, 0.15", "37.2772, 271.195, 118.722, 0.29", "37.1089, 272.524, 118.59, 0.22", "36.8844, 273.919, 118.447, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "42.5398, -35.3236, 37.3319, 0.88", "42.7765, -34.2539, 37.368, 0.88", "42.8953, -33.5213, 37.4489, 0.74", "43.0238, -32.4753, 37.5943, 0.81", "43.1357, -31.3128, 37.7693, 0.88", "43.2208, -30.2379, 37.9353, 1.4", "43.2757, -29.2015, 38.1343, 0.96", "43.2421, -27.9165, 38.4349, 0.88", "43.1831, -27.1744, 38.6304, 0.81", "43.1217, -26.7103, 38.7144, 0.81", "42.9821, -26.0198, 38.7615, 0.81", "42.6483, -24.7495, 38.7013, 1.18", "42.3434, -23.7739, 38.5842, 1.18", "41.978, -22.6583, 38.3938, 1.18", "41.188, -20.1386, 38.0428, 0.96", "40.6919, -18.3643, 37.8534, 0.59", "40.4127, -17.1628, 37.8045, 0.59", "40.2336, -16.1384, 37.8558, 0.74", "40.1107, -15.086, 38.0478, 1.11", "39.9861, -13.4364, 38.6362, 1.4", "39.9559, -12.1389, 39.2925, 1.4", "39.9648, -10.648, 40.115, 1.18", "39.9688, -9.54355, 40.6971, 1.47", "39.9497, -8.71606, 41.0476, 1.11", "39.8306, -7.19659, 41.4197, 0.74", "39.7084, -6.24315, 41.4444, 1.03", "39.5669, -5.38898, 41.3116, 1.11", "39.3073, -4.10681, 40.8745, 0.88", "39.0062, -2.8569, 40.2692, 0.88", "38.6826, -1.75946, 39.6348, 0.74", "38.4389, -1.03673, 39.147, 0.66", "38.1165, -0.172184, 38.5581, 0.59", "37.763, 0.808554, 37.9076, 0.81", "37.4023, 1.82235, 37.329, 0.88", "36.9624, 3.15712, 36.7068, 0.81", "36.6276, 4.28341, 36.2652, 0.81", "36.3488, 5.48098, 35.8691, 0.81", "36.1516, 6.81083, 35.516, 0.66", "36.0679, 7.99167, 35.2834, 0.88", "36.0566, 9.04078, 35.1052, 1.18", "36.0764, 9.72841, 34.9991, 1.18", "36.1509, 11.1184, 34.8058, 0.81", "36.2747, 12.6104, 34.6017, 0.96", "36.3794, 13.8329, 34.4059, 0.96", "36.4859, 14.8979, 34.1793, 1.11", "36.5837, 15.7552, 33.9874, 1.11", "36.6974, 16.6664, 33.7919, 0.88", "36.8563, 17.8547, 33.6044, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "42.5398, -35.3236, 37.3319, 0.88", "44.0685, -37.1063, 40.4191, 0.88", "44.6085, -37.7256, 41.3288, 0.66", "45.4452, -38.7294, 42.7879, 0.74", "45.7385, -39.1379, 43.3809, 1.03", "45.9808, -39.5661, 43.9562, 0.74", "46.2778, -40.2283, 44.8101, 0.96", "46.6218, -41.513, 46.183, 1.03", "46.8516, -42.9315, 47.7581, 0.74", "46.9727, -44.224, 49.2028, 1.03", "47.0294, -45.2876, 50.4606, 0.88", "47.0592, -46.3427, 51.7957, 0.81", "47.0423, -47.1431, 52.8328, 0.66", "46.9829, -48.164, 54.1202, 0.66", "46.9311, -49.3964, 55.5632, 0.88", "46.9461, -50.7385, 57.1102, 1.11", "47.0507, -52.1637, 58.7572, 0.96", "47.2157, -53.5649, 60.2879, 0.96", "47.3716, -54.5378, 61.2698, 0.96", "47.6699, -56.0729, 62.7135, 1.03", "47.9731, -57.5919, 64.0562, 0.81", "48.1855, -58.5278, 64.8183, 0.81", "48.4084, -59.3498, 65.4231, 0.66", "48.8066, -60.3804, 66.1753, 0.88", "49.479, -61.7684, 67.2345, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "14.2106, -47.2803, 12.9315, 0.29", "13.9819, -48.1886, 13.3956, 0.29", "13.7644, -49.2465, 13.9037, 0.29", "13.6513, -49.9445, 14.255, 0.81", "13.5094, -51.0775, 14.8225, 0.59", "13.4031, -52.2528, 15.4539, 0.44", "13.3552, -53.2232, 16.0233, 0.22", "13.3767, -53.9391, 16.4693, 0.22", "13.4774, -54.8415, 17.075, 0.22", "13.5533, -55.3953, 17.4984, 0.74", "13.6935, -56.4038, 18.3366, 0.74", "13.8181, -57.3199, 19.1348, 0.96", "13.8735, -57.8461, 19.5736, 1.11", "13.9568, -59.0431, 20.5121, 0.37", "14.0196, -60.0984, 21.2237, 0.22", "14.0624, -60.7521, 21.5861, 0.66", "14.1135, -61.5121, 21.8819, 0.66", "14.1695, -62.226, 22.0741, 0.66", "14.2397, -62.957, 22.2298, 0.29", "14.3666, -63.8771, 22.369, 0.22", "14.5775, -64.9685, 22.5425, 0.66", "14.8124, -66.0537, 22.8076, 0.88", "14.9787, -66.837, 23.0638, 0.37", "15.1875, -67.9304, 23.4889, 0.22", "15.2902, -68.5903, 23.7985, 0.59", "15.3877, -69.4142, 24.2356, 0.74", "15.535, -70.8712, 25.0729, 0.15", "15.5848, -71.4237, 25.3955, 0.15", "15.6379, -72.1519, 25.7874, 0.37", "15.7267, -73.511, 26.4094, 0.22", "15.7619, -73.9452, 26.5756, 0.66", "15.8193, -74.4718, 26.7445, 1.11", "15.9322, -75.2499, 26.9477, 0.37", "16.1393, -76.3461, 27.2242, 0.15", "16.2961, -77.0517, 27.4296, 0.44", "16.6, -78.3088, 27.8565, 0.15", "16.8509, -79.3397, 28.2638, 0.15", "16.9924, -79.9472, 28.5445, 0.81", "17.1015, -80.439, 28.7869, 1.18", "17.403, -82.053, 29.6447, 0.15", "17.537, -82.9629, 30.135, 0.15", "17.5769, -83.4365, 30.3954, 0.81", "17.6024, -84.1922, 30.868, 0.81", "17.6029, -84.931, 31.3788, 0.22", "17.5775, -85.9807, 32.1783, 0.15", "17.5627, -86.3418, 32.4592, 0.22", "17.5268, -87.2624, 33.2064, 0.15", "17.486, -88.6043, 34.4314, 0.15", "17.4767, -89.036, 34.8467, 0.59", "17.455, -90.1223, 35.9298, 0.15", "17.4488, -90.6233, 36.4065, 0.15", "17.4485, -91.2772, 36.9757, 0.81", "17.4949, -92.7611, 38.0511, 0.15", "17.5342, -93.4772, 38.4682, 0.15", "17.5662, -93.9643, 38.713, 0.52", "17.6206, -94.6514, 38.9846, 0.66", "17.6781, -95.498, 39.253, 0.29", "17.7228, -96.5227, 39.465, 0.15", "17.7271, -97.0283, 39.517, 0.15", "17.7133, -97.5675, 39.5668, 0.59", "17.6725, -98.2421, 39.5906, 0.88", "17.5866, -99.0768, 39.5788, 0.29", "17.477, -99.7947, 39.5349, 0.22", "17.3051, -100.798, 39.4405, 0.07", "17.2112, -101.46, 39.337, 0.07", "17.0828, -102.606, 39.116, 0.07", "17.0668, -102.872, 39.0595, 0.29", "17.0718, -103.619, 38.9148, 0.66", "17.1203, -104.565, 38.7582, 0.15", "17.1925, -105.646, 38.6289, 0.15", "17.2429, -106.39, 38.5468, 0.29", "17.2915, -107.283, 38.4786, 0.15", "17.3199, -108.062, 38.4129, 0.37", "17.3275, -108.596, 38.3477, 0.37", "17.3073, -109.608, 38.2018, 0.22", "17.2664, -110.463, 38.0805, 0.44", "17.2153, -111.329, 37.8812, 0.96", "17.1803, -111.913, 37.696, 0.22", "17.1234, -113.112, 37.2407, 0.15", "17.1173, -113.359, 37.1435, 0.15", "17.1276, -114.355, 36.7114, 0.29", "17.166, -115.492, 36.1723, 0.15", "17.2041, -116.092, 35.8537, 0.15", "17.221, -116.342, 35.7185, 0.37", "17.2636, -117.004, 35.3782, 0.88", "17.3668, -118.405, 34.7109, 0.15", "17.4168, -119.129, 34.4064, 0.15", "17.453, -119.847, 34.1777, 0.15", "17.4614, -120.507, 34.0146, 0.66", "17.447, -121.247, 33.8911, 0.22", "17.4102, -121.959, 33.828, 0.22", "17.3537, -122.598, 33.8312, 0.15", "17.3046, -123.064, 33.8489, 0.15", "17.1986, -123.941, 33.8796, 0.66", "16.9988, -125.344, 33.9263, 0.15", "16.9203, -125.837, 33.9425, 0.15", "16.8508, -126.254, 33.9565, 0.22", "16.7609, -126.852, 33.9771, 0.15", "16.6756, -127.459, 33.9991, 0.96", "16.542, -128.402, 34.0365, 0.44", "16.401, -129.402, 34.0812, 0.15", "16.3248, -130.001, 34.0871, 0.15", "16.2609, -130.533, 34.0445, 0.15", "16.1871, -131.136, 33.9519, 0.15", "16.0902, -131.835, 33.8083, 0.44", "15.9538, -132.681, 33.609, 0.44", "15.7417, -133.803, 33.3872, 0.15", "15.4639, -135.239, 33.1676, 0.15", "15.3342, -135.92, 33.0883, 0.44", "15.1578, -136.896, 33.0126, 0.22", "14.9991, -137.95, 33.0321, 0.22", "14.7881, -139.512, 33.2054, 0.07", "14.6627, -140.559, 33.4291, 0.07", "14.6226, -140.943, 33.538, 0.29", "14.5567, -141.648, 33.7504, 0.96", "14.402, -143.539, 34.393, 0.15", "14.3383, -144.246, 34.6486, 0.15", "14.2579, -144.879, 34.8363, 0.15", "14.1166, -145.746, 35.0983, 0.37", "14.0244, -146.231, 35.2474, 0.37", "13.7673, -147.36, 35.5793, 0.15", "13.5865, -148.0, 35.7665, 0.74", "13.1197, -149.429, 36.3611, 0.15", "12.7456, -150.375, 36.8553, 0.15", "12.497, -150.881, 37.2167, 0.59", "12.2118, -151.371, 37.6603, 0.22", "11.6708, -152.175, 38.4999, 0.15", "10.9838, -153.069, 39.602, 0.15", "10.6251, -153.474, 40.1819, 0.52", "9.83772, -154.223, 41.3306, 0.15", "9.2977, -154.658, 42.1331, 0.15", "9.07089, -154.823, 42.4798, 0.44", "8.64574, -155.109, 43.1171, 0.81", "8.25523, -155.381, 43.6798, 0.81", "7.34479, -156.076, 45.0528, 0.15", "6.43539, -156.836, 46.4174, 0.15", "6.16437, -157.105, 46.8423, 0.15", "5.95357, -157.359, 47.2202, 0.66", "5.53766, -158.006, 48.0481, 0.22", "5.09752, -158.903, 49.1545, 0.15", "4.99809, -159.159, 49.4925, 0.22", "4.7385, -159.883, 50.5106, 0.15", "4.52111, -160.473, 51.4056, 0.44", "4.35403, -160.926, 52.1204, 0.88", "3.75772, -162.311, 54.3758, 0.15", "3.17655, -163.401, 56.1435, 0.15", "2.81421, -163.987, 57.0911, 0.15", "2.50182, -164.418, 57.7722, 0.37", "2.20325, -164.784, 58.3187, 0.37", "1.42322, -165.633, 59.5747, 0.07", "0.815059, -166.25, 60.3309, 0.07", "0.482729, -166.584, 60.6887, 0.15", "-0.271746, -167.328, 61.4741, 0.07", "-0.698364, -167.742, 61.9197, 0.29", "-1.2821, -168.308, 62.535, 0.29", "-1.97374, -169.047, 63.2999, 0.15", "-2.30106, -169.424, 63.6819, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "14.2106, -47.2803, 12.9315, 0.22", "15.1619, -48.2455, 8.98339, 0.22", "15.4437, -48.5351, 7.99093, 0.22", "15.6862, -48.8136, 7.14534, 0.52", "15.8802, -49.0668, 6.43646, 0.88", "16.1718, -49.5184, 5.27266, 0.96", "16.4315, -50.0283, 4.05469, 0.74", "16.63, -50.7389, 2.71542, 0.29", "16.6926, -51.2797, 1.80966, 0.37", "16.6954, -51.7133, 1.16751, 0.37", "16.6676, -52.1174, 0.605697, 0.74", "16.6163, -52.6554, -0.134094, 0.44", "16.5563, -53.594, -1.51464, 0.44", "16.5843, -53.9152, -2.08078, 0.44", "16.7132, -54.3081, -2.8747, 0.22", "16.9746, -54.8224, -3.96824, 0.22", "17.2172, -55.239, -4.86852, 0.44", "17.4358, -55.6509, -5.71421, 0.59", "17.7196, -56.4712, -7.2736, 0.29", "17.768, -56.9003, -8.05448, 0.22", "17.7042, -57.3183, -8.7338, 0.29", "17.5185, -57.8638, -9.49307, 0.44", "17.1704, -58.586, -10.4028, 0.74", "16.6706, -59.4142, -11.3641, 0.96", "16.4224, -59.7736, -11.7604, 0.96", "15.9076, -60.4964, -12.5715, 0.37", "15.406, -61.2382, -13.4601, 0.44", "15.1119, -61.7622, -14.1371, 0.37", "14.9612, -62.1542, -14.6705, 0.22", "14.9058, -62.5622, -15.2726, 0.22", "14.9483, -62.8038, -15.7134, 0.29", "15.1324, -63.1174, -16.4855, 0.44", "15.3752, -63.3794, -17.3209, 0.44", "15.5666, -63.5608, -17.9621, 0.66", "15.8953, -63.8873, -19.1333, 0.81", "16.2428, -64.3163, -20.5895, 0.96", "16.4785, -64.7416, -21.8731, 0.96", "16.6231, -65.1004, -22.8492, 0.96", "16.6972, -65.3219, -23.4407, 0.66", "16.8107, -65.6793, -24.3779, 0.74", "16.9321, -66.0441, -25.2697, 0.74", "17.2235, -66.7539, -26.9342, 0.59", "17.5673, -67.4608, -28.606, 0.29", "17.8319, -67.9544, -29.8834, 0.29", "18.0378, -68.2828, -30.7929, 0.29", "18.2383, -68.5633, -31.6248, 0.37", "18.5647, -68.972, -32.927, 0.52", "18.8578, -69.3275, -34.1063, 0.44", "19.2912, -69.9446, -36.0454, 0.44", "21.3783, -74.1993, -42.899, 0.44", "23.0533, -79.3605, -49.153, 0.44", "24.973, -83.7069, -55.9921, 0.44", "26.6151, -88.0112, -62.9321, 0.44", "26.6539, -91.4082, -70.5818, 0.44", "27.8437, -93.3027, -78.692, 0.44", "29.0589, -95.4201, -86.7385, 0.44", "31.3763, -98.2869, -94.2746, 0.44", "33.629, -100.095, -102.178, 0.44", "34.9367, -100.524, -110.49, 0.44", "37.0753, -100.108, -118.623, 0.44", "38.3037, -100.722, -126.935, 0.44", "39.6356, -102.217, -135.113, 0.44", "41.8556, -104.851, -142.77, 0.44", "44.4776, -107.345, -150.35, 0.44", "47.1367, -110.873, -157.455, 0.44", "49.2753, -114.672, -164.581, 0.44", "51.0974, -118.654, -171.686, 0.44", "53.8217, -121.689, -179.011, 0.44", "54.8793, -124.541, -186.83, 0.44", "56.8868, -128.271, -194.034, 0.44", "58.4259, -133.458, -200.299, 0.44", "61.0919, -138.709, -206.111, 0.44", "64.6254, -144.522, -210.747, 0.44", "67.6084, -150.425, -215.638, 0.44", "69.6329, -157.092, -219.888, 0.44", "72.83, -162.235, -225.536, 0.44", "75.8321, -167.949, -230.66, 0.44", "79.3692, -174.0, -234.94, 0.44", "83.294, -180.132, -238.725, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-11.0765, -162.12, 73.5925, 0.15", "-11.0791, -163.013, 74.0539, 0.15", "-11.093, -163.654, 74.4422, 0.22", "-11.1083, -164.112, 74.7309, 0.22", "-11.1328, -164.804, 75.1796, 0.37", "-11.1356, -165.707, 75.8524, 0.15", "-11.0751, -167.2, 77.0562, 0.15", "-11.0347, -167.645, 77.5128, 0.15", "-10.982, -168.069, 78.0097, 0.29", "-10.7651, -169.408, 79.7561, 0.15", "-10.5589, -170.295, 81.0943, 0.15", "-10.4265, -170.684, 81.7705, 0.15", "-9.95118, -171.664, 83.6636, 0.15", "-9.72248, -172.015, 84.5233, 0.15", "-9.4475, -172.36, 85.5505, 0.22", "-9.05125, -172.79, 87.0111, 0.44", "-8.79057, -173.068, 87.9609, 0.44", "-8.2971, -173.593, 89.6909, 0.15", "-7.21984, -174.674, 93.1224, 0.22", "-6.54288, -175.328, 95.1717, 0.22", "-6.31257, -175.549, 95.807, 0.22", "-5.89942, -175.968, 96.8328, 0.22", "-5.47296, -176.405, 97.7034, 0.22", "-4.81905, -177.068, 98.7052, 0.22", "-4.35573, -177.543, 99.228, 0.22", "-3.7184, -178.247, 99.8729, 0.07", "-2.77311, -179.341, 100.879, 0.07", "-1.67238, -180.647, 102.04, 0.07", "-0.828033, -181.662, 102.95, 0.07", "0.357688, -183.184, 104.248, 0.07", "1.34625, -184.525, 105.424, 0.07", "2.2277, -185.838, 106.741, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.0765, -162.12, 73.5925, 0.22", "-11.9442, -163.942, 72.7581, 0.22", "-12.5879, -165.506, 72.5023, 0.15", "-13.0242, -166.696, 72.5518, 0.15", "-13.4206, -167.845, 72.7262, 0.15", "-13.8084, -168.974, 72.9551, 0.15", "-14.6377, -171.476, 73.4933, 0.15", "-14.9703, -172.627, 73.8748, 0.15", "-15.1773, -173.357, 74.1586, 0.37", "-15.4832, -174.318, 74.4856, 0.59", "-16.0471, -175.946, 74.919, 0.22", "-16.5693, -177.303, 75.1642, 0.22", "-17.042, -178.375, 75.2015, 0.15", "-17.4966, -179.305, 75.1847, 0.15", "-18.2658, -180.737, 75.1497, 0.15", "-18.6462, -181.374, 75.0943, 0.15", "-19.0597, -181.983, 74.9685, 0.29", "-19.4192, -182.47, 74.8304, 0.29", "-20.0491, -183.334, 74.5306, 0.44", "-20.513, -184.04, 74.3556, 0.44", "-21.2986, -185.41, 74.2246, 0.22", "-21.9581, -186.706, 74.2251, 0.29", "-22.548, -188.058, 74.3425, 0.07", "-22.9544, -189.165, 74.5277, 0.07", "-23.6736, -191.537, 74.9882, 0.22", "-23.9322, -192.614, 75.3217, 0.22", "-24.0588, -193.307, 75.6342, 0.22", "-24.121, -193.852, 75.9395, 0.44", "-24.1678, -194.438, 76.2886, 0.66", "-24.2782, -195.941, 77.19, 0.22", "-24.4026, -197.662, 78.1237, 0.22", "-24.4564, -198.486, 78.5652, 0.07", "-24.5083, -199.543, 79.0588, 0.07", "-24.5297, -200.441, 79.4092, 0.15", "-24.5265, -201.154, 79.6303, 0.15", "-24.4955, -202.279, 79.8852, 0.37", "-24.4553, -203.456, 79.9514, 0.66", "-24.3892, -205.199, 79.8891, 0.15", "-24.3497, -206.409, 79.7587, 0.22", "-24.3164, -207.535, 79.597, 0.22", "-24.3043, -208.52, 79.4229, 0.15", "-24.3156, -209.211, 79.2874, 0.15", "-24.3615, -209.879, 79.1834, 0.59", "-24.4731, -210.61, 79.1251, 0.59", "-24.8291, -212.036, 79.0785, 0.22", "-24.9712, -212.457, 79.0626, 0.22", "-25.2338, -213.142, 79.0376, 0.44", "-25.584, -214.127, 79.0054, 0.66", "-25.9353, -215.228, 78.9541, 0.29", "-26.1812, -216.136, 78.9028, 0.66", "-26.4116, -217.3, 78.8216, 0.52", "-26.6474, -218.991, 78.6741, 0.29", "-26.7892, -220.51, 78.4558, 0.22", "-26.845, -221.628, 78.2291, 0.29", "-26.8549, -222.692, 77.9673, 0.37", "-26.8205, -223.954, 77.666, 0.22", "-26.7904, -224.607, 77.527, 0.22", "-26.7172, -226.23, 77.1721, 0.29", "-26.7003, -227.314, 76.9506, 0.52", "-26.7045, -227.973, 76.838, 0.81", "-26.7383, -229.308, 76.6698, 0.29", "-26.7528, -230.413, 76.6772, 0.22", "-26.7437, -230.859, 76.7395, 0.22", "-26.7202, -231.393, 76.8829, 0.44", "-26.6968, -232.166, 77.1239, 0.74", "-26.6705, -232.977, 77.3514, 0.29", "-26.5924, -234.548, 77.7039, 0.15", "-26.5649, -234.932, 77.7798, 0.15", "-26.4981, -235.601, 77.883, 0.15", "-26.3697, -236.573, 77.9918, 0.44", "-26.1376, -238.065, 78.152, 0.22", "-25.9886, -239.082, 78.2483, 0.22", "-25.8161, -240.385, 78.3326, 0.52", "-25.6381, -241.885, 78.3815, 0.15", "-25.5521, -242.928, 78.3517, 0.29", "-25.5242, -244.18, 78.1987, 0.59", "-25.5977, -245.206, 77.9495, 0.74", "-25.6573, -245.588, 77.8149, 0.74", "-26.0317, -247.049, 77.1647, 0.22", "-26.5967, -248.538, 76.4003, 0.15", "-27.0792, -249.565, 75.7927, 0.15", "-27.5435, -250.438, 75.2453, 0.29", "-27.9338, -251.124, 74.8349, 0.74", "-28.3442, -251.856, 74.4602, 0.66", "-29.0551, -253.218, 73.9065, 0.15", "-29.6583, -254.461, 73.4265, 0.15", "-30.0562, -255.38, 73.0848, 0.22", "-30.4611, -256.442, 72.6737, 0.52", "-30.8666, -257.738, 72.1463, 0.29", "-31.2006, -259.263, 71.5514, 0.15", "-31.3452, -260.471, 71.0846, 0.15", "-31.3643, -260.882, 70.9232, 0.15", "-31.3689, -261.526, 70.6482, 0.81", "-31.395, -262.38, 70.2901, 0.29", "-31.5277, -263.843, 69.6844, 0.15", "-31.7091, -264.928, 69.2313, 0.59", "-31.8979, -265.694, 68.9202, 0.59", "-32.1246, -266.333, 68.6136, 0.59", "-32.649, -267.417, 67.9674, 1.18", "-33.1866, -268.249, 67.2778, 0.74", "-34.1128, -269.461, 66.0324, 0.22", "-34.4092, -269.825, 65.599, 0.29", "-35.0501, -270.592, 64.5359, 0.37", "-35.7096, -271.356, 63.2462, 0.37", "-36.5866, -272.307, 61.2576, 0.37", "-36.8916, -272.595, 60.5505, 0.37", "-37.2749, -272.934, 59.6207, 0.37", "-37.3808, -273.038, 59.3271, 0.37", "-37.5409, -273.237, 58.774, 0.37", "-37.6951, -273.521, 58.0929, 0.37", "-37.8861, -273.956, 57.219, 0.44", "-38.0923, -274.386, 56.443, 0.52", "-38.4788, -275.23, 55.2489, 0.52", "-38.842, -276.008, 54.2896, 0.37", "-39.012, -276.409, 53.8666, 0.22", "-39.192, -276.857, 53.4547, 0.22", "-39.4615, -277.496, 52.9646, 0.29", "-39.8882, -278.4, 52.4548, 0.81", "-40.52, -279.718, 51.9959, 0.15", "-40.817, -280.323, 51.8638, 0.15", "-41.0818, -280.873, 51.7497, 0.22", "-41.3999, -281.599, 51.6138, 0.29", "-41.6183, -282.128, 51.5175, 0.81", "-42.1569, -283.399, 51.2423, 0.22", "-42.5921, -284.41, 50.9838, 0.22", "-42.9797, -285.267, 50.6592, 0.22", "-43.2916, -285.978, 50.274, 0.52", "-43.3752, -286.178, 50.1259, 0.52", "-43.8056, -287.214, 49.1278, 0.22", "-44.0953, -287.882, 48.3529, 0.37", "-44.3507, -288.485, 47.5659, 0.66", "-44.6665, -289.254, 46.5159, 0.22", "-44.9632, -289.98, 45.4914, 0.22", "-45.2037, -290.648, 44.5943, 0.22", "-45.2987, -290.983, 44.1769, 0.37", "-45.5233, -291.972, 43.0668, 1.11", "-45.7319, -293.085, 41.9749, 0.44", "-45.8899, -294.098, 41.0666, 0.66", "-45.9607, -294.807, 40.467, 0.59", "-45.9824, -295.372, 39.9787, 0.52", "-45.972, -295.977, 39.4123, 0.29", "-45.9309, -296.926, 38.4365, 0.15", "-45.8938, -297.959, 37.3302, 0.15", "-45.8987, -298.402, 36.8334, 0.52", "-46.0087, -299.389, 35.7169, 0.74", "-46.1015, -299.896, 35.1636, 0.74", "-46.3708, -301.144, 33.8934, 0.37", "-46.6428, -302.231, 32.9637, 0.37", "-46.9258, -303.288, 32.2595, 0.59", "-47.2362, -304.359, 31.7116, 0.88", "-47.4012, -304.921, 31.51, 0.88", "-47.737, -306.076, 31.1994, 0.37", "-48.04, -307.257, 30.9808, 0.66", "-48.2537, -308.328, 30.7592, 0.66", "-48.4146, -309.504, 30.5126, 1.18", "-48.4797, -310.404, 30.307, 0.81", "-48.5244, -312.104, 29.8855, 0.44", "-48.4884, -313.479, 29.5282, 0.37", "-48.297, -315.401, 28.9578, 0.29", "-48.2446, -315.733, 28.8389, 0.52", "-48.1115, -316.334, 28.5951, 0.96", "-47.8671, -317.299, 28.1219, 0.29", "-47.7035, -317.845, 27.8289, 0.29", "-47.5247, -318.438, 27.4879, 0.59", "-47.204, -319.522, 27.0097, 0.59", "-47.0243, -320.13, 26.7814, 0.59", "-46.5191, -321.856, 26.2354, 0.29", "-46.1806, -323.01, 25.9605, 0.22", "-46.0061, -323.643, 25.8867, 0.88", "-45.5084, -325.621, 25.9994, 0.37", "-45.3755, -326.23, 26.1356, 0.66", "-45.2848, -326.697, 26.3295, 0.66", "-45.0735, -327.795, 26.9998, 0.44", "-44.9279, -328.54, 27.5994, 0.44", "-44.7235, -329.393, 28.5111, 0.44", "-44.5441, -330.052, 29.3513, 0.81", "-44.1226, -331.232, 31.0042, 0.22", "-43.8779, -331.777, 31.825, 0.37", "-43.3663, -332.696, 33.2865, 0.37", "-42.6925, -333.715, 34.8789, 0.37", "-42.3556, -334.151, 35.5201, 0.66", "-41.7407, -334.827, 36.5361, 0.22", "-41.3598, -335.198, 37.0693, 0.22", "-41.0, -335.498, 37.5677, 0.74", "-40.61, -335.761, 38.0936, 0.74", "-39.7182, -336.197, 39.4222, 0.22", "-38.8731, -336.47, 40.8769, 0.22", "-38.4439, -336.563, 41.7538, 0.37", "-37.3533, -336.745, 44.2578, 0.37", "-37.0426, -336.783, 45.0985, 0.74", "-36.3461, -336.821, 47.2885, 0.74", "-35.8606, -336.825, 49.0335, 0.52", "-35.3486, -336.862, 51.0798, 0.52", "-35.1852, -336.895, 51.7999, 0.52", "-34.7218, -337.028, 53.9426, 0.52", "-34.4932, -337.115, 55.0552, 0.52", "-34.0956, -337.298, 57.0072, 0.52", "-33.9668, -337.359, 57.6487, 0.52", "-32.9644, -337.768, 62.3273, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-10.7069, 21.9289, -6.94916, 0.96", "-13.6584, 23.6801, -7.08206, 0.96", "-15.0761, 24.5623, -7.11639, 0.96", "-16.6891, 25.6754, -7.06893, 0.88", "-18.1831, 26.7923, -6.96716, 0.88", "-19.6543, 27.9712, -6.76185, 0.81", "-21.156, 29.2729, -6.4153, 0.66", "-22.157, 30.2623, -5.94715, 1.03", "-23.2914, 31.4653, -5.14657, 1.18", "-23.6918, 31.8949, -4.76497, 1.33", "-24.7908, 33.0327, -3.55852, 1.03", "-26.0214, 34.2259, -2.22387, 0.96", "-27.3365, 35.3105, -0.859855, 0.96", "-29.1968, 36.5145, 0.870939, 1.33", "-30.7637, 37.2874, 2.17935, 1.03", "-31.5477, 37.5674, 2.8129, 1.03", "-33.6191, 38.0274, 4.44661, 0.74", "-34.8178, 38.1759, 5.42273, 0.96", "-35.747, 38.2537, 6.2157, 1.55", "-37.3392, 38.3981, 7.72863, 1.25", "-39.0452, 38.6072, 9.71008, 1.03", "-40.1628, 38.7892, 11.3253, 0.74", "-40.8489, 38.9526, 12.4873, 0.74", "-41.5639, 39.1554, 13.8031, 1.11", "-42.2742, 39.3717, 15.1515, 1.11", "-43.7336, 39.8295, 17.8328, 0.96", "-45.1389, 40.3282, 20.2981, 1.18", "-46.1561, 40.7507, 22.0088, 1.55", "-46.8836, 41.0986, 23.1436, 1.55", "-47.6851, 41.5405, 24.2403, 1.18", "-48.4825, 42.0705, 25.0865, 0.88", "-49.5645, 42.9507, 26.0123, 0.66", "-50.6911, 43.9899, 26.9653, 0.96", "-51.4763, 44.8004, 27.7228, 1.18", "-52.2812, 45.7642, 28.6432, 1.18", "-53.1944, 47.067, 29.9615, 1.11", "-54.2729, 48.811, 31.8205, 1.18", "-55.2137, 50.4764, 33.6637, 1.03", "-55.9144, 51.7565, 35.2046, 1.03", "-56.6072, 53.0674, 36.9445, 0.88", "-57.2655, 54.4214, 38.8072, 1.03", "-57.7748, 55.5524, 40.3914, 0.74", "-58.2656, 56.727, 41.9824, 0.66", "-58.8243, 58.1719, 43.8916, 0.59", "-59.4743, 59.7922, 46.128, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.7069, 21.9289, -6.94916, 1.03", "-11.4885, 22.329, -8.99445, 1.03", "-12.3572, 22.7044, -10.953, 1.03", "-13.1674, 23.0042, -12.5584, 1.18", "-14.1559, 23.3234, -14.3615, 1.18", "-14.8534, 23.5353, -15.5679, 1.18", "-15.6452, 23.7762, -16.9244, 1.03", "-16.4144, 24.0031, -18.097, 0.96", "-16.9766, 24.1763, -18.8859, 1.18", "-17.6059, 24.381, -19.7451, 1.03", "-18.1937, 24.5776, -20.5386, 1.03", "-18.9477, 24.8423, -21.5422, 1.03", "-19.5368, 25.0542, -22.301, 1.18", "-20.4799, 25.3969, -23.3879, 1.18", "-21.1496, 25.6514, -24.0834, 1.18", "-21.9462, 25.9696, -24.8634, 1.11", "-22.7934, 26.3085, -25.6257, 1.18", "-23.3268, 26.5314, -26.0542, 0.96", "-24.0964, 26.8991, -26.6179, 0.81", "-25.0615, 27.4519, -27.2757, 1.03", "-26.4857, 28.3927, -28.1876, 1.25", "-26.9379, 28.723, -28.4672, 1.25", "-27.6211, 29.2367, -28.8648, 0.88", "-28.5747, 29.9322, -29.3938, 0.88", "-29.6683, 30.6655, -29.9604, 1.11", "-30.5948, 31.2104, -30.3722, 1.11", "-31.7676, 31.8268, -30.8278, 0.96", "-32.7447, 32.293, -31.2073, 1.03", "-33.6849, 32.7022, -31.5821, 1.03", "-34.6601, 33.0798, -31.9734, 0.96", "-35.5678, 33.4056, -32.3199, 0.96", "-36.5396, 33.7405, -32.7089, 0.96", "-37.7612, 34.134, -33.1856, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.6655, 70.5112, -37.6322, 1.18", "-12.1435, 72.9262, -37.416, 1.18", "-12.3642, 74.5848, -37.2806, 0.96", "-12.4296, 75.6935, -37.2436, 0.96", "-12.4407, 76.7084, -37.2757, 0.96", "-12.4264, 78.5716, -37.4426, 0.96", "-12.4407, 80.3963, -37.6975, 1.03", "-12.4189, 81.732, -37.9787, 1.11", "-12.3664, 83.3347, -38.451, 0.88", "-12.3779, 84.5649, -38.8975, 0.88", "-12.487, 85.8185, -39.3827, 0.88", "-12.7089, 87.3618, -39.9945, 1.03", "-12.901, 88.4008, -40.3907, 1.03", "-13.3695, 90.5037, -41.0821, 1.18", "-13.8719, 92.6868, -41.6841, 0.88", "-14.4574, 95.3672, -42.2999, 0.81", "-14.6475, 96.3547, -42.4845, 0.96", "-14.8236, 97.3685, -42.6562, 0.96", "-15.1865, 99.3959, -43.0019, 0.88", "-15.4497, 100.833, -43.2301, 0.88", "-15.7342, 102.425, -43.5285, 1.11", "-16.1752, 104.883, -44.0774, 1.25", "-16.475, 106.454, -44.4623, 1.03", "-16.8055, 108.167, -44.9214, 1.03", "-17.0561, 109.499, -45.3017, 1.18", "-17.4777, 111.843, -46.0609, 0.96", "-17.7689, 113.736, -46.7295, 1.11", "-17.9317, 115.331, -47.3065, 1.11", "-17.9898, 117.103, -47.8897, 1.18", "-17.904, 118.814, -48.3914, 0.74", "-17.6745, 120.51, -48.8243, 0.88", "-17.3953, 121.723, -49.06, 1.25", "-16.8489, 123.379, -49.2802, 1.33", "-16.1277, 125.09, -49.3592, 0.96", "-15.4027, 126.523, -49.2839, 0.74", "-14.6996, 127.769, -49.1159, 0.81", "-14.0853, 128.797, -48.8461, 0.81", "-13.3078, 130.088, -48.4106, 0.74", "-12.6906, 131.192, -47.9538, 1.25", "-11.9111, 132.686, -47.2391, 1.4", "-11.3951, 133.858, -46.6146, 1.4", "-10.5022, 136.237, -45.2833, 0.88", "-10.3257, 136.788, -44.9608, 0.88", "-9.92673, 138.248, -44.0934, 0.88", "-9.67732, 139.296, -43.5076, 0.88", "-9.32065, 141.065, -42.6552, 0.96", "-9.13144, 142.158, -42.2448, 0.96", "-8.89082, 143.797, -41.8162, 1.55", "-8.82545, 144.348, -41.6889, 1.55", "-8.56684, 146.553, -41.3329, 1.18", "-8.3433, 148.801, -41.1273, 1.25", "-8.21688, 150.605, -41.133, 1.62", "-8.1919, 151.536, -41.226, 1.62", "-8.22563, 154.074, -41.6892, 0.96", "-8.31555, 156.038, -42.2068, 0.96", "-8.41697, 157.33, -42.6648, 1.33", "-8.60987, 159.217, -43.5192, 1.11", "-8.78477, 161.037, -44.5515, 1.33", "-8.89166, 162.338, -45.402, 1.33", "-8.99652, 163.961, -46.6516, 1.47", "-9.05887, 164.967, -47.4518, 1.62", "-9.14201, 166.815, -48.9634, 1.03", "-9.18957, 168.399, -50.2407, 0.96", "-9.19625, 169.47, -51.0645, 0.88", "-9.15071, 171.163, -52.3575, 0.81", "-9.13221, 171.996, -52.9284, 1.18", "-9.13125, 174.434, -54.4118, 0.96", "-9.21902, 176.68, -55.593, 0.96", "-9.38897, 178.548, -56.3583, 0.74", "-9.64662, 180.522, -56.9787, 0.59", "-10.0735, 183.075, -57.5285, 0.59", "-10.4551, 185.007, -57.8521, 0.52", "-10.7475, 186.268, -57.9846, 0.74", "-11.4325, 188.729, -58.1711, 1.03", "-11.8424, 189.97, -58.2296, 1.11", "-12.3541, 191.431, -58.26, 0.74", "-13.0586, 193.484, -58.3236, 0.66", "-13.4269, 194.582, -58.3773, 0.52", "-13.8206, 195.847, -58.4924, 0.22", "-14.43, 197.886, -58.8634, 0.15", "-14.6312, 198.534, -58.984, 0.22", "-16.8547, 209.431, -62.26, 0.22", "-17.1109, 219.817, -67.5693, 0.22", "-17.8434, 230.682, -71.6035, 0.22", "-20.3929, 241.343, -75.4485, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-11.6655, 70.5112, -37.6322, 0.66", "-10.9777, 71.0227, -39.6775, 0.66", "-10.5135, 71.368, -41.0579, 0.59", "-10.0471, 71.7149, -42.4448, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "36.8563, 17.8547, 33.6044, 0.88", "37.9329, 18.5421, 33.1637, 0.88", "38.8669, 19.1472, 32.7148, 0.59", "39.9536, 19.8344, 32.1923, 0.59", "40.7394, 20.2829, 31.8533, 0.59", "41.4451, 20.6348, 31.5538, 0.59", "42.2017, 20.9641, 31.2216, 0.81", "43.0541, 21.2477, 30.8095, 0.81", "43.7156, 21.3929, 30.4993, 0.81", "44.729, 21.515, 30.0692, 0.52", "45.9436, 21.5685, 29.569, 0.52", "46.8728, 21.554, 29.1806, 0.52", "47.7237, 21.5196, 28.8324, 0.52", "48.3281, 21.5104, 28.5939, 0.52", "49.2446, 21.5197, 28.1974, 0.44", "50.3984, 21.5608, 27.6622, 0.59", "51.3695, 21.5981, 27.2473, 0.44", "51.9602, 21.6068, 26.9913, 0.66", "52.8108, 21.5903, 26.6322, 0.37", "53.909, 21.5063, 26.1623, 0.37", "54.9593, 21.3434, 25.7539, 0.59", "55.7373, 21.1707, 25.4642, 1.11", "57.1061, 20.8323, 24.9169, 1.11", "58.1732, 20.57, 24.4663, 0.66", "59.3407, 20.3307, 23.961, 0.52", "60.199, 20.2216, 23.5644, 0.29", "61.145, 20.2139, 23.0628, 0.29", "62.081, 20.344, 22.4215, 0.59", "62.5907, 20.5025, 22.0003, 0.59", "63.3833, 20.8649, 21.2496, 0.37", "64.1262, 21.2704, 20.4943, 0.37", "64.6361, 21.5556, 19.9561, 0.59", "65.708, 22.1158, 18.8588, 1.03", "66.4626, 22.458, 18.1271, 0.88", "67.11, 22.7174, 17.5379, 0.44", "68.1029, 23.0536, 16.6496, 0.44", "68.6244, 23.2094, 16.224, 0.44", "69.0784, 23.31, 15.8819, 0.66", "69.4687, 23.3669, 15.6319, 0.66", "70.0993, 23.4075, 15.238, 0.44", "71.6343, 23.4105, 14.3188, 0.44", "72.0712, 23.3868, 14.0761, 0.81", "72.7659, 23.3067, 13.6712, 1.03", "73.7269, 23.1139, 13.0086, 0.66", "74.4584, 22.9037, 12.3897, 0.66", "75.3337, 22.5685, 11.4272, 0.52", "76.0721, 22.1988, 10.3691, 0.37", "76.6729, 21.8145, 9.24131, 0.44", "77.4458, 21.1981, 7.409, 0.52", "77.9589, 20.7056, 5.97017, 0.52", "78.5754, 20.0661, 4.17696, 0.52", "79.0904, 19.526, 2.67418, 0.81", "79.5362, 19.1098, 1.47989, 1.03", "80.0363, 18.7621, 0.406463, 1.03", "80.5221, 18.5513, -0.33041, 0.81", "81.389, 18.3275, -1.28745, 0.59", "82.1651, 18.232, -1.92675, 0.59", "82.75, 18.2202, -2.32692, 0.44", "83.9484, 18.2467, -3.07391, 0.44", "84.8269, 18.2727, -3.57787, 0.37", "85.4707, 18.2839, -3.91311, 0.37", "86.2025, 18.2736, -4.23637, 0.96", "87.5728, 18.193, -4.72639, 0.66", "88.4695, 18.1158, -5.01156, 0.66", "89.3863, 18.0233, -5.31126, 0.88", "90.5841, 17.9057, -5.8229, 0.74", "91.6499, 17.8266, -6.45091, 0.74", "92.8426, 17.8056, -7.35366, 0.74", "93.7006, 17.8771, -8.15504, 0.59", "94.9335, 18.1311, -9.51002, 0.81", "96.0675, 18.5171, -10.9662, 0.96", "97.0324, 18.9928, -12.3884, 0.96", "97.5005, 19.3146, -13.1179, 0.66", "97.9763, 19.717, -13.8257, 0.59", "98.3347, 20.0162, -14.2918, 0.44", "98.9571, 20.5439, -14.9599, 0.88", "99.2745, 20.7744, -15.2742, 0.88", "99.9922, 21.1091, -16.074, 0.29", "100.954, 21.233, -17.4501, 0.29", "101.984, 21.0684, -19.2433, 0.29", "102.275, 20.9767, -19.805, 0.88", "102.989, 20.6855, -21.2983, 0.88", "103.537, 20.4624, -22.5251, 0.88", "103.943, 20.3127, -23.5535, 0.88", "104.403, 20.2658, -24.8872, 0.88", "104.552, 20.3519, -25.3638, 0.88", "104.714, 20.6109, -25.8891, 0.88", "104.85, 21.3019, -26.5536, 0.52", "104.883, 21.951, -27.0684, 0.52", "104.873, 22.5212, -27.5324, 1.03", "104.867, 23.0727, -28.0238, 1.03", "104.893, 23.6647, -28.6234, 0.81", "105.004, 24.5298, -29.6125, 0.44", "105.189, 25.2453, -30.5141, 0.52", "105.416, 25.8381, -31.3274, 0.52", "105.706, 26.458, -32.296, 0.66", "105.843, 26.733, -32.8421, 0.52", "106.018, 27.1046, -33.718, 0.66", "106.17, 27.5063, -34.7053, 0.88", "106.312, 28.1404, -36.2023, 0.59", "106.365, 28.5957, -37.2266, 0.59", "106.428, 29.4815, -39.2696, 0.52", "106.462, 29.8257, -40.0726, 0.52", "106.536, 30.1115, -40.7054, 0.52", "106.763, 30.5713, -41.5356, 0.52", "107.179, 31.0926, -42.0959, 0.44", "107.731, 31.7024, -42.4657, 0.74", "108.052, 32.0558, -42.5956, 0.81", "108.976, 33.0189, -42.9068, 0.59", "109.618, 33.6344, -43.1385, 0.66", "110.444, 34.4244, -43.4378, 0.59", "111.272, 35.2764, -43.7468, 0.59", "111.867, 35.9526, -43.965, 0.66", "112.495, 36.7254, -44.2116, 0.52", "113.386, 37.912, -44.556, 0.81", "119.605, 39.2309, -50.0087, 0.81", "125.145, 40.2955, -56.2116, 0.81", "129.992, 40.9127, -63.0438, 0.81", "133.642, 42.4384, -70.4235, 0.81", "137.567, 45.4286, -77.1056, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "36.8563, 17.8547, 33.6044, 0.81", "36.6022, 18.6261, 33.3515, 0.81", "36.3054, 19.5777, 33.0838, 0.74", "36.0158, 20.4773, 32.9286, 0.59", "35.5955, 21.8282, 32.7654, 0.37", "35.296, 22.8845, 32.7094, 0.44", "35.0373, 23.9048, 32.6936, 0.44", "34.8069, 24.9547, 32.7323, 0.74", "34.4917, 26.6319, 32.87, 0.44", "34.389, 27.437, 32.9668, 0.52", "34.3184, 28.68, 33.1566, 0.66", "34.3248, 29.3625, 33.2494, 0.44", "34.3737, 30.2541, 33.3355, 0.44", "34.4563, 31.0946, 33.381, 0.37", "34.6313, 32.2515, 33.3681, 0.37", "34.7929, 33.1854, 33.3316, 0.44", "34.9305, 33.8822, 33.2854, 0.22", "35.0682, 34.5086, 33.2513, 0.22", "35.2542, 35.3099, 33.2149, 0.29", "35.459, 36.1729, 33.1558, 0.74", "35.6533, 37.0045, 33.0785, 0.59", "35.8371, 37.793, 32.9886, 0.44", "36.0373, 38.5013, 32.8412, 0.22", "36.2328, 39.0561, 32.6868, 0.22", "36.5132, 39.7708, 32.4908, 0.22", "36.7923, 40.4298, 32.3184, 0.37", "36.991, 40.8569, 32.1912, 0.37", "37.7204, 42.3783, 31.7108, 0.74", "38.2036, 43.3771, 31.3712, 0.22", "38.7237, 44.4834, 30.9959, 0.22", "39.0872, 45.3141, 30.7064, 0.44", "39.4779, 46.3277, 30.2654, 0.29", "39.6895, 46.9209, 29.9193, 0.66", "39.8953, 47.5861, 29.4659, 0.66", "40.0555, 48.2325, 28.9673, 0.88", "40.2068, 48.9692, 28.384, 0.88", "40.4909, 50.3784, 27.3522, 0.59", "40.817, 51.7406, 26.4942, 0.44", "41.0504, 52.554, 26.0196, 0.44", "41.4161, 53.7452, 25.4104, 0.52", "41.7074, 54.626, 24.9766, 0.59", "42.1351, 55.8422, 24.3953, 0.44", "42.547, 56.9612, 23.8962, 0.22", "42.8833, 57.8514, 23.474, 0.44", "43.1991, 58.6588, 23.0398, 0.74", "43.6903, 59.9113, 22.3288, 1.11", "44.1116, 61.1119, 21.6375, 0.96", "44.3154, 61.8029, 21.2496, 0.96", "44.7019, 63.3396, 20.4402, 0.59", "44.9108, 64.3175, 19.998, 0.37", "45.1198, 65.4574, 19.6115, 0.22", "45.2092, 66.2018, 19.4623, 0.66", "45.2654, 66.8648, 19.3619, 0.74", "45.326, 67.6008, 19.2527, 0.52", "45.4167, 68.6419, 19.0752, 0.59", "45.5726, 70.0232, 18.7644, 0.66", "45.7365, 71.2212, 18.4503, 0.29", "45.942, 72.627, 18.0522, 0.29", "46.1108, 73.6372, 17.7203, 0.37", "46.3754, 74.9883, 17.2331, 0.44", "46.6182, 76.0403, 16.7932, 0.52", "46.866, 77.0618, 16.2997, 0.66", "47.1012, 77.9986, 15.8534, 0.66", "47.3232, 78.9499, 15.4045, 0.66", "47.5176, 79.8267, 14.976, 0.96", "47.906, 81.4368, 14.1531, 0.44", "48.1617, 82.3667, 13.6304, 0.44", "48.4389, 83.2073, 13.1145, 0.59", "48.9198, 84.4299, 12.3085, 0.22", "49.1627, 84.9923, 11.936, 0.22", "49.3764, 85.4518, 11.6257, 0.22", "49.5287, 85.7465, 11.436, 0.22", "49.8117, 86.2739, 11.1169, 0.22", "50.0317, 86.6947, 10.8616, 0.22", "50.3072, 87.2509, 10.5311, 0.66", "50.6731, 88.0456, 10.0488, 0.66", "51.0185, 88.9152, 9.54314, 0.66", "51.2187, 89.4959, 9.22636, 0.37", "51.4982, 90.4394, 8.72464, 0.22", "51.7601, 91.4779, 8.27814, 0.44", "51.917, 92.2198, 8.05341, 0.44", "52.0821, 93.0894, 7.94759, 0.44", "52.242, 94.2429, 8.12628, 0.22", "52.3761, 95.3452, 8.41365, 0.29", "52.5898, 97.2782, 8.96895, 0.44", "52.7334, 98.5503, 9.28335, 0.66", "52.9129, 99.7961, 9.4396, 0.66", "53.3033, 101.749, 9.32951, 0.29", "53.755, 103.414, 8.81135, 0.37", "54.1733, 104.737, 8.02742, 0.52", "54.5183, 105.813, 7.07207, 0.74", "54.8809, 106.939, 5.84912, 0.74", "55.1237, 107.669, 4.97264, 0.74", "55.5148, 108.779, 3.55757, 0.52", "55.8466, 109.757, 2.42233, 0.59", "56.337, 111.337, 0.752342, 0.22", "56.5319, 112.0, 0.0941542, 0.22", "56.7439, 112.782, -0.634995, 0.59", "57.0363, 113.915, -1.70369, 0.96", "57.3261, 115.091, -2.73389, 0.37", "57.5653, 115.972, -3.44994, 0.44", "57.9208, 117.149, -4.35918, 0.44", "58.2436, 118.148, -5.12165, 0.44", "58.5304, 118.94, -5.73151, 0.44", "59.0307, 120.12, -6.62493, 0.22", "59.6344, 121.384, -7.59089, 0.22", "59.853, 121.797, -7.89361, 0.22", "60.2508, 122.531, -8.37594, 0.59", "60.9708, 123.854, -9.15016, 0.29", "61.4363, 124.783, -9.65347, 0.29", "61.8743, 125.811, -10.1961, 0.52", "62.187, 126.755, -10.6583, 0.88", "62.3752, 127.464, -11.0011, 0.88", "62.5949, 128.441, -11.4446, 0.59", "62.882, 129.718, -11.9546, 0.22", "63.0655, 130.374, -12.2114, 0.29", "63.2668, 130.924, -12.4352, 0.29", "63.5493, 131.559, -12.6893, 0.81", "63.9925, 132.401, -13.0199, 0.88", "64.44, 133.147, -13.2862, 0.59", "65.0601, 134.104, -13.6178, 0.59", "65.7811, 135.225, -14.0047, 0.29", "66.6876, 136.697, -14.5361, 0.52", "67.2214, 137.618, -14.9313, 0.59", "67.7126, 138.586, -15.4193, 0.59", "68.0322, 139.305, -15.8341, 0.74", "68.2376, 139.813, -16.1828, 0.74", "68.5902, 140.752, -16.943, 0.66", "68.8894, 141.618, -17.7361, 0.66", "69.142, 142.417, -18.4708, 0.74", "69.4642, 143.519, -19.3479, 0.52", "69.6817, 144.303, -19.79, 0.59", "69.9201, 145.189, -20.0445, 0.44", "70.1676, 146.098, -20.1699, 0.59", "70.3661, 146.816, -20.2361, 0.37", "70.7683, 148.468, -20.476, 0.74", "70.9336, 149.535, -20.7966, 1.03", "71.0346, 150.732, -21.43, 0.44", "71.0933, 152.457, -22.9964, 0.59", "71.1266, 153.308, -23.9947, 1.18", "71.1657, 154.345, -25.3764, 0.37", "71.1731, 155.326, -26.8447, 0.37", "71.1479, 156.064, -28.0476, 0.81", "71.1031, 157.255, -29.999, 0.81", "71.086, 158.03, -31.1346, 0.66", "71.1308, 158.903, -32.2824, 0.37", "71.2833, 159.946, -33.468, 0.37", "71.5368, 161.253, -34.7207, 0.37", "71.7047, 162.029, -35.3116, 0.52", "71.8815, 162.914, -35.8154, 0.44", "72.0774, 163.872, -36.3386, 0.66", "72.3035, 164.733, -36.8275, 0.81", "72.4765, 165.319, -37.1527, 0.81", "72.6686, 165.965, -37.5174, 0.74", "73.0545, 167.403, -38.3721, 0.66", "73.4379, 168.927, -39.3038, 0.44", "73.7204, 170.181, -40.0617, 0.44", "73.9329, 171.17, -40.6325, 1.03", "74.0731, 171.915, -40.9637, 0.66", "74.2107, 172.911, -41.2176, 0.52", "74.2773, 173.451, -41.2817, 0.74", "74.3484, 174.189, -41.3679, 0.96", "74.3941, 174.605, -41.4431, 0.96", "74.6547, 176.415, -42.0549, 0.66", "74.9144, 177.912, -42.8378, 0.66", "75.147, 179.215, -43.7664, 0.44", "75.3779, 180.696, -45.0992, 0.96", "75.4789, 181.641, -46.1505, 0.52", "75.4835, 182.544, -47.3872, 0.52", "75.4763, 183.353, -48.7171, 0.52", "75.4143, 183.927, -49.8059, 0.44", "75.2581, 184.449, -50.8519, 0.44", "75.0245, 184.859, -51.7566, 0.96", "74.4252, 185.457, -53.345, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "49.479, -61.7684, 67.2345, 0.37", "49.8015, -63.0545, 69.8923, 0.37", "50.3246, -64.6143, 72.4776, 0.37", "50.6422, -65.4198, 73.7599, 0.59", "51.1803, -66.7264, 75.735, 0.44", "51.4857, -67.3501, 76.7865, 0.66", "51.9392, -68.1171, 78.3389, 0.44", "52.6372, -69.1778, 80.5235, 0.44", "53.2132, -69.9615, 82.1446, 0.44", "53.6256, -70.465, 83.2074, 0.81", "54.9632, -72.0435, 86.4564, 0.81", "56.2196, -73.5305, 89.4868, 0.81", "56.6259, -74.0255, 90.4573, 0.81", "57.1972, -74.7764, 91.7354, 0.44", "57.7235, -75.5705, 92.8337, 0.44", "58.5465, -77.0191, 94.5779, 0.44", "58.9311, -77.8443, 95.4198, 0.66", "59.1908, -78.4984, 96.0627, 0.66", "59.7411, -80.0065, 97.7797, 0.52", "60.1671, -81.4222, 99.5944, 0.66", "60.5853, -83.3003, 102.08, 0.29", "60.7037, -84.0647, 103.125, 0.29", "60.8243, -85.2916, 104.804, 0.22", "60.9015, -87.1955, 107.323, 0.22", "60.8963, -88.4956, 109.003, 0.22", "60.8488, -89.6829, 110.481, 0.37", "60.7386, -91.4226, 112.53, 0.74", "60.6715, -92.438, 113.62, 0.88", "60.5954, -93.5805, 114.739, 0.22", "60.3887, -95.5994, 116.381, 0.22", "60.2993, -96.3922, 116.966, 0.22", "60.133, -97.6604, 117.701, 0.22", "59.8435, -99.7384, 118.565, 0.15", "59.6579, -101.331, 119.078, 0.15", "59.3828, -104.323, 119.939, 0.22", "59.2235, -106.398, 120.48, 0.22", "58.9638, -110.107, 121.558, 0.15", "58.6879, -113.195, 122.528, 0.15", "58.3649, -116.112, 123.601, 0.22", "58.058, -118.632, 124.697, 0.22", "57.7983, -120.69, 125.744, 0.22", "57.4632, -123.054, 127.095, 0.22", "57.0307, -126.077, 129.138, 0.22", "56.5935, -129.134, 131.297, 0.22", "56.3387, -130.977, 132.63, 0.22", "56.1831, -132.276, 133.518, 0.52", "56.0493, -133.877, 134.572, 0.59", "56.0078, -135.796, 135.76, 0.22", "56.0583, -137.114, 136.543, 0.15", "56.1473, -138.805, 137.595, 0.15", "56.0877, -140.627, 138.562, 0.22", "55.8827, -141.922, 139.207, 0.37", "55.4993, -143.712, 140.082, 0.37", "54.9517, -145.624, 140.941, 0.15", "53.9102, -148.595, 142.236, 0.15", "51.9993, -153.188, 143.971, 0.15", "50.9389, -155.291, 144.719, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "49.479, -61.7684, 67.2345, 0.29", "49.615, -62.9048, 66.5294, 0.29", "49.8878, -64.7768, 65.2807, 0.37", "50.0634, -65.8989, 64.5295, 0.37", "50.3374, -67.3621, 63.5693, 0.22", "50.7054, -68.9485, 62.5351, 0.22", "50.9386, -69.8229, 61.9894, 0.52", "51.4077, -71.6547, 60.904, 0.29", "51.6316, -72.5071, 60.4348, 0.44", "51.8445, -73.3826, 59.9775, 0.66", "52.0957, -74.6183, 59.3722, 0.37", "52.2492, -75.8266, 58.8625, 0.29", "52.2933, -77.2671, 58.2909, 0.29", "52.2435, -78.5557, 57.8241, 0.29", "52.1604, -79.969, 57.337, 0.66", "52.0312, -81.3886, 56.8745, 0.66", "51.875, -82.7946, 56.4553, 0.52", "51.6595, -84.8579, 55.8784, 0.37", "51.5813, -86.284, 55.5163, 0.66", "51.5806, -87.775, 55.1282, 0.22", "51.6403, -88.7156, 54.8293, 0.22", "51.7621, -89.6695, 54.4725, 0.59", "51.9744, -90.7518, 54.0224, 0.81", "52.3765, -92.2607, 53.3293, 0.52", "52.9387, -94.0586, 52.4296, 0.66", "53.5067, -95.7186, 51.5695, 0.44", "54.1528, -97.4603, 50.724, 0.37", "54.4601, -98.3127, 50.3312, 0.37", "54.786, -99.259, 49.9312, 0.37", "55.3326, -100.948, 49.329, 0.66", "55.664, -101.998, 49.0348, 1.11", "56.1235, -103.587, 48.6229, 0.66", "56.5439, -105.238, 48.1243, 0.44", "56.8368, -106.692, 47.5655, 0.44", "57.0638, -107.979, 46.9939, 0.59", "57.2523, -109.057, 46.4541, 0.52", "57.5598, -110.715, 45.4991, 0.29", "57.8584, -112.194, 44.5153, 0.81", "58.231, -113.823, 43.3322, 0.22", "58.3684, -114.383, 42.8953, 0.22", "58.4834, -114.793, 42.5606, 0.29", "58.9162, -115.857, 41.6879, 0.52", "59.5053, -116.857, 40.9045, 0.22", "60.1952, -117.743, 40.2659, 0.52", "60.7405, -118.309, 39.8831, 0.52", "61.3875, -118.883, 39.5525, 0.29", "62.9068, -120.0, 39.052, 0.22", "63.8787, -120.596, 38.8965, 0.29", "64.6964, -121.059, 38.8562, 0.52", "65.5152, -121.518, 38.8847, 0.66", "67.2393, -122.475, 39.0173, 0.44", "68.5654, -123.242, 39.1783, 0.44", "69.7953, -124.0, 39.3518, 0.44", "70.9127, -124.71, 39.4869, 0.52", "71.8843, -125.362, 39.5273, 0.66", "72.7221, -125.956, 39.4828, 0.66", "73.8376, -126.757, 39.2744, 0.37", "74.6676, -127.321, 39.0716, 0.37", "75.3617, -127.766, 38.8266, 0.74", "76.2541, -128.303, 38.4517, 1.03", "77.307, -128.933, 37.972, 0.29", "78.4604, -129.624, 37.4295, 0.22", "79.6895, -130.333, 36.8607, 0.22", "81.0382, -131.123, 36.2757, 0.22", "82.1438, -131.773, 35.8916, 0.29", "83.049, -132.316, 35.6777, 0.44", "83.927, -132.846, 35.5601, 0.44", "84.8069, -133.384, 35.5645, 0.81", "85.3106, -133.693, 35.637, 0.88", "86.7442, -134.591, 36.0442, 0.22", "87.6299, -135.18, 36.4597, 0.15", "88.5974, -135.822, 37.0746, 0.15", "89.6806, -136.547, 37.872, 0.15", "90.2257, -136.928, 38.2998, 0.37", "90.9363, -137.454, 38.8551, 0.81", "92.5436, -138.781, 40.0989, 0.52", "93.5379, -139.77, 40.9222, 0.66", "93.9975, -140.355, 41.3177, 0.52", "94.4996, -141.17, 41.7272, 0.22", "95.0698, -142.274, 42.2433, 0.22", "95.4316, -143.116, 42.5951, 0.44", "95.9991, -144.728, 43.2336, 0.44", "96.3501, -146.021, 43.7867, 0.44", "96.6029, -147.203, 44.3609, 0.44", "96.9677, -148.854, 45.3749, 0.29", "97.1093, -149.408, 45.7665, 0.66", "97.4784, -150.591, 46.6827, 0.66", "97.9323, -151.797, 47.6786, 0.66", "98.2799, -152.614, 48.3694, 1.03", "99.1249, -154.392, 49.8112, 0.29", "99.6663, -155.451, 50.5812, 0.15", "99.8866, -155.822, 50.8655, 0.15", "100.248, -156.311, 51.2903, 0.15", "100.747, -156.809, 51.8414, 0.59", "101.069, -157.075, 52.1859, 0.81", "102.166, -157.932, 53.3371, 0.29", "103.222, -158.71, 54.4931, 0.44", "104.607, -159.728, 56.0046, 0.22", "105.908, -160.677, 57.3924, 0.22", "106.891, -161.423, 58.4938, 0.22", "107.876, -162.23, 59.6233, 0.29", "108.714, -162.978, 60.5683, 0.59", "109.275, -163.571, 61.2367, 1.03", "109.585, -163.987, 61.6398, 1.03", "110.878, -166.004, 63.5469, 0.15", "111.385, -166.856, 64.3399, 0.15", "111.76, -167.528, 64.9386, 0.22", "112.469, -168.832, 65.9748, 0.74", "112.973, -169.734, 66.6266, 0.96", "113.909, -171.373, 67.5928, 0.22", "114.497, -172.392, 67.9804, 0.22", "115.291, -173.726, 68.3292, 0.37", "116.114, -175.04, 68.5063, 0.15", "116.686, -175.943, 68.4762, 0.29", "117.409, -177.112, 68.3182, 0.15", "118.153, -178.399, 68.027, 0.66", "118.99, -179.822, 67.6569, 0.22", "119.715, -181.022, 67.331, 0.22", "120.486, -182.332, 67.0566, 0.29", "120.948, -183.153, 66.9607, 0.15", "121.335, -183.843, 66.9556, 0.52", "121.758, -184.579, 67.0952, 0.59", "122.53, -185.881, 67.6715, 0.22", "123.235, -186.937, 68.4295, 0.88", "123.789, -187.586, 69.1363, 0.88", "124.299, -188.067, 69.8547, 0.59", "125.54, -189.049, 71.7266, 0.15", "126.539, -189.699, 73.3527, 0.22", "127.155, -189.996, 74.3966, 0.22", "128.224, -190.35, 76.2555, 0.15", "128.952, -190.528, 77.533, 0.15", "129.395, -190.604, 78.3118, 0.44", "130.401, -190.715, 80.0254, 0.74", "131.247, -190.799, 81.4687, 0.74", "132.221, -190.906, 83.294, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-59.4743, 59.7922, 46.128, 1.18", "-61.4917, 61.5782, 46.8517, 1.18", "-62.6292, 62.5122, 47.1434, 1.03", "-63.6208, 63.2772, 47.2831, 1.4", "-64.915, 64.2308, 47.4704, 1.03", "-65.7656, 64.8308, 47.626, 0.88", "-67.1097, 65.7488, 47.9054, 0.59", "-68.4967, 66.634, 48.1275, 0.29", "-69.7265, 67.3391, 48.3615, 0.37", "-71.1077, 68.0684, 48.6816, 0.74", "-72.3793, 68.7028, 49.0416, 1.4", "-74.0567, 69.5328, 49.6028, 0.88", "-75.0367, 70.0252, 50.0325, 0.88", "-75.6932, 70.3787, 50.3858, 0.88", "-76.5382, 70.8425, 50.8964, 0.59", "-77.5707, 71.3954, 51.535, 0.44", "-78.4264, 71.8202, 52.1173, 0.29", "-79.9411, 72.5302, 53.2826, 0.52", "-80.9423, 72.9821, 54.1238, 0.74", "-81.924, 73.3944, 55.0113, 1.03", "-83.1299, 73.8519, 56.1172, 0.59", "-84.3189, 74.2717, 57.1978, 0.22", "-85.3509, 74.6009, 58.1024, 0.22", "-86.5643, 74.9567, 59.1542, 0.22", "-87.7037, 75.2918, 60.2128, 0.37", "-88.265, 75.4602, 60.745, 0.52", "-89.3577, 75.8058, 61.7451, 1.33", "-90.6579, 76.2396, 62.8789, 0.29", "-92.2528, 76.7552, 64.1454, 0.37", "-93.6817, 77.2066, 65.1579, 0.37", "-94.5505, 77.4661, 65.6956, 0.37", "-95.6226, 77.744, 66.2635, 0.66", "-96.2519, 77.8852, 66.5381, 0.66", "-97.4798, 78.1566, 66.9549, 0.44", "-98.2196, 78.326, 67.1768, 0.44", "-99.2146, 78.5508, 67.5471, 0.22", "-100.086, 78.7572, 68.0188, 0.22", "-101.149, 78.9969, 68.7897, 0.22", "-102.065, 79.2016, 69.5624, 0.15", "-103.273, 79.4535, 70.7483, 0.66", "-104.439, 79.6875, 71.9171, 0.29", "-105.666, 79.9081, 73.1241, 0.66", "-106.875, 80.0891, 74.2122, 1.03", "-107.852, 80.1922, 74.9689, 1.25", "-110.164, 80.3232, 76.4924, 0.22", "-111.466, 80.349, 77.1723, 0.22", "-112.42, 80.3439, 77.5348, 0.29", "-113.837, 80.3104, 77.8671, 0.29", "-114.819, 80.2876, 77.9353, 0.22", "-115.873, 80.2541, 77.8543, 0.29", "-116.577, 80.2366, 77.6944, 0.44", "-117.399, 80.2228, 77.4203, 0.66", "-118.258, 80.2381, 77.0697, 0.66", "-119.474, 80.3208, 76.5131, 0.22", "-120.398, 80.4289, 76.0894, 0.22", "-121.633, 80.6111, 75.6434, 0.29", "-123.384, 80.8975, 75.1967, 0.29", "-124.158, 81.0279, 75.0843, 0.59", "-125.431, 81.2223, 75.079, 0.59", "-127.011, 81.4397, 75.2534, 0.22", "-129.132, 81.7132, 75.6514, 0.44", "-130.009, 81.8091, 75.8798, 0.44", "-131.0, 81.9017, 76.1848, 0.22", "-132.476, 82.0288, 76.6091, 0.37", "-133.099, 82.0919, 76.7403, 0.59", "-133.79, 82.1925, 76.8122, 0.96", "-134.888, 82.4006, 76.8087, 0.29", "-136.595, 82.7836, 76.7258, 0.22", "-137.637, 83.0495, 76.7442, 0.22", "-139.426, 83.5526, 76.8438, 0.22", "-140.984, 84.0245, 77.023, 0.29", "-141.817, 84.2949, 77.1602, 0.29", "-142.882, 84.6705, 77.3924, 0.59", "-145.714, 85.7546, 78.3826, 0.07", "-146.317, 86.0014, 78.6824, 0.15", "-147.037, 86.3224, 79.1911, 0.29", "-148.34, 86.9678, 80.3127, 0.15", "-148.771, 87.195, 80.7508, 0.22", "-150.231, 87.9658, 82.4328, 0.44", "-150.837, 88.282, 83.158, 0.81", "-152.059, 88.882, 84.6937, 0.22", "-152.709, 89.1816, 85.5066, 0.29", "-153.903, 89.6887, 86.9852, 0.22", "-154.877, 90.0753, 88.0052, 0.22", "-155.469, 90.2965, 88.4394, 0.66", "-155.9, 90.453, 88.6333, 0.66", "-157.118, 90.9018, 88.8089, 0.22", "-158.355, 91.391, 88.6725, 0.29", "-159.651, 91.9876, 88.2492, 0.74", "-161.481, 92.9249, 87.347, 0.22", "-162.56, 93.4792, 86.7232, 0.15", "-163.118, 93.7588, 86.363, 0.29", "-163.835, 94.1076, 85.8563, 0.74", "-164.782, 94.5503, 85.1804, 0.22", "-165.984, 95.0371, 84.4605, 0.22", "-166.561, 95.2453, 84.2264, 0.52", "-166.942, 95.3723, 84.091, 0.88", "-167.683, 95.6093, 83.861, 0.29", "-168.699, 95.9029, 83.8317, 0.22", "-170.042, 96.3005, 84.1276, 0.22", "-170.821, 96.5495, 84.4415, 0.22", "-171.976, 96.949, 85.0214, 0.22", "-173.191, 97.3692, 85.7466, 0.15", "-176.881, 98.5517, 88.6824, 0.15", "-177.869, 98.8176, 89.6516, 0.15", "-178.504, 98.9662, 90.3747, 0.15", "-179.077, 99.0741, 91.1259, 0.15", "-179.835, 99.1928, 92.197, 0.37", "-181.733, 99.4182, 95.0145, 0.15", "-183.02, 99.5136, 96.8653, 0.15", "-183.955, 99.5304, 98.302, 0.15", "-185.217, 99.5177, 100.398, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-59.4743, 59.7922, 46.128, 0.29", "-59.3135, 60.0074, 46.8066, 0.29", "-59.0577, 60.3351, 47.9302, 0.29", "-58.8573, 60.6088, 48.9034, 0.29", "-58.6766, 60.8901, 49.8926, 0.29", "-58.5593, 61.1266, 50.6737, 0.29", "-58.5371, 61.1893, 50.8711, 0.29", "-58.5102, 61.3462, 51.3459, 0.29", "-58.5199, 61.4304, 51.5994, 0.37", "-58.6233, 61.6165, 52.1812, 0.37", "-58.7694, 61.7446, 52.6231, 0.22", "-58.9778, 61.8844, 53.1339, 0.22", "-59.0573, 61.9346, 53.3346, 0.22", "-59.117, 61.9732, 53.5209, 0.22", "-59.1994, 62.0339, 53.8854, 0.22", "-59.2532, 62.0722, 54.1877, 0.22", "-59.2756, 62.0866, 54.3517, 0.22", "-59.2974, 62.1071, 54.5755, 0.29", "-59.3449, 62.1496, 55.1474, 0.29", "-59.4067, 62.1875, 55.7919, 0.29", "-59.4627, 62.2048, 56.2657, 0.29", "-59.4996, 62.2147, 56.5734, 0.15", "-59.6296, 62.2393, 57.7077, 0.15", "-59.7597, 62.2405, 58.8966, 0.15", "-59.8763, 62.2091, 59.9452, 0.15", "-59.9404, 62.1771, 60.5262, 0.52" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-37.7612, 34.134, -33.1856, 1.18", "-39.3759, 34.5575, -32.6589, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-37.7612, 34.134, -33.1856, 0.29", "-38.5711, 35.0433, -33.0457, 0.29", "-39.2695, 35.8616, -33.0544, 0.29", "-39.869, 36.5726, -33.1259, 0.88", "-40.5747, 37.4089, -33.2496, 0.44", "-41.2592, 38.2166, -33.4188, 0.44", "-41.6857, 38.7079, -33.5386, 0.29", "-42.5344, 39.6811, -33.9197, 0.29", "-42.9503, 40.1368, -34.133, 0.74", "-43.2784, 40.4508, -34.2956, 0.96", "-43.9643, 41.0298, -34.5673, 0.96", "-44.8522, 41.6971, -34.804, 0.66", "-46.1785, 42.5916, -34.9471, 0.37", "-46.9504, 43.0868, -34.8977, 0.22", "-48.0254, 43.7655, -34.6991, 0.29", "-49.2453, 44.5272, -34.3048, 0.29", "-49.9239, 44.9404, -33.9775, 0.81", "-51.0395, 45.6088, -33.2865, 1.03", "-52.0139, 46.2121, -32.574, 0.22", "-52.5883, 46.6113, -32.124, 0.29", "-53.1164, 47.0502, -31.6898, 0.44", "-53.5476, 47.4777, -31.3654, 0.44", "-54.0716, 48.0993, -30.9551, 0.44", "-54.5781, 48.8681, -30.5981, 0.52", "-54.8988, 49.4476, -30.4567, 0.52", "-55.2933, 50.2761, -30.3841, 0.29", "-55.532, 50.8371, -30.3877, 0.37", "-55.8603, 51.6145, -30.4319, 0.37", "-56.4986, 52.9994, -30.5909, 0.81", "-56.9975, 53.9809, -30.7627, 1.03", "-57.4523, 54.797, -30.9389, 0.74", "-58.0177, 55.7363, -31.1668, 0.66", "-58.5755, 56.6376, -31.391, 0.37", "-59.2992, 57.7956, -31.6784, 0.29", "-59.7582, 58.5234, -31.8129, 0.29", "-60.0008, 58.9507, -31.9107, 0.66", "-60.2517, 59.4516, -32.0373, 1.18", "-60.4381, 59.9034, -32.1504, 1.18", "-60.7144, 60.6553, -32.3191, 0.74", "-60.9818, 61.3488, -32.4439, 0.44", "-61.4058, 62.3505, -32.6267, 0.29", "-61.6273, 62.847, -32.7204, 0.29", "-61.8648, 63.3625, -32.8151, 0.29", "-62.2865, 64.258, -33.0076, 0.29", "-62.6623, 65.0212, -33.181, 0.22", "-63.1355, 65.9251, -33.3916, 0.37", "-63.584, 66.7422, -33.5595, 0.22", "-63.7825, 67.1112, -33.6364, 0.22", "-64.1675, 67.8662, -33.7826, 0.44", "-64.4365, 68.4285, -33.875, 0.96", "-64.6789, 68.9085, -33.937, 1.18", "-65.1462, 69.7208, -34.0061, 1.18", "-65.4825, 70.2522, -34.0689, 1.25", "-65.885, 70.8555, -34.178, 0.37", "-66.2441, 71.3751, -34.2894, 0.22", "-66.6669, 71.9919, -34.467, 0.29", "-66.9287, 72.4188, -34.6145, 0.29", "-67.3623, 73.2458, -34.9586, 0.22", "-67.6969, 74.0224, -35.3078, 0.22", "-67.8043, 74.3025, -35.4355, 0.44", "-68.0707, 75.0717, -35.8111, 0.81", "-68.4361, 76.2465, -36.4257, 0.29", "-68.705, 77.1275, -36.9323, 0.52", "-68.9393, 77.8121, -37.3572, 1.03", "-69.1898, 78.4301, -37.7821, 1.03", "-69.6743, 79.4251, -38.5369, 0.66", "-70.1611, 80.2878, -39.2503, 0.59", "-70.6974, 81.1365, -39.9883, 0.88", "-71.3521, 82.1383, -40.8386, 0.22", "-71.8754, 82.9337, -41.4861, 0.59", "-72.4994, 83.9131, -42.2452, 0.22", "-72.8189, 84.4422, -42.6162, 0.44", "-73.1706, 85.1221, -43.0641, 0.74", "-73.3789, 85.6654, -43.4121, 0.88", "-73.5764, 86.3977, -43.8882, 0.37", "-73.7239, 87.0815, -44.3627, 0.37", "-73.885, 87.8951, -44.9406, 0.37", "-74.1097, 88.8872, -45.6376, 0.29", "-74.2942, 89.6988, -46.2289, 0.52", "-74.3786, 90.0704, -46.5148, 0.52", "-74.5863, 90.9878, -47.2235, 0.52", "-74.7965, 91.7265, -47.7588, 0.37", "-74.9845, 92.1593, -48.0465, 0.37", "-78.8278, 99.4179, -48.5709, 0.37", "-81.6313, 106.977, -47.1546, 0.37", "-83.6636, 114.69, -45.3719, 0.37", "-85.5723, 122.479, -43.8151, 0.37", "-86.041, 130.604, -43.1546, 0.37", "-85.965, 138.474, -40.944, 0.37", "-85.2074, 146.46, -39.339, 0.37", "-84.3697, 154.346, -37.3082, 0.37", "-84.4779, 162.391, -35.909, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.0471, 71.7149, -42.4448, 0.52", "-11.2442, 71.6359, -43.6519, 0.52", "-12.3853, 71.4657, -44.8683, 0.52", "-13.0289, 71.2936, -45.766, 0.66", "-13.4833, 71.0659, -46.6431, 0.44", "-13.8181, 70.8195, -47.5365, 0.37", "-14.3141, 70.3953, -49.1775, 0.37", "-14.4123, 70.287, -49.611, 0.37", "-14.7174, 69.7844, -51.5422, 0.37", "-14.9178, 69.3531, -53.1082, 0.52", "-15.0735, 69.0384, -54.232, 0.52", "-15.1803, 68.8765, -54.7822, 0.52", "-15.5476, 68.5309, -55.7666, 0.52", "-16.1414, 68.173, -56.5922, 0.66", "-16.8853, 67.8354, -56.8663, 0.52", "-17.9148, 67.4104, -57.0568, 0.44", "-18.6775, 67.0859, -57.118, 0.44", "-19.281, 66.8069, -57.1204, 0.81", "-20.2752, 66.3228, -56.9931, 0.96", "-21.6905, 65.6641, -56.6722, 0.22", "-27.8252, 61.5441, -61.7345, 0.22", "-35.2619, 57.4674, -64.5956, 0.22", "-41.9701, 52.4423, -67.5787, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-10.0471, 71.7149, -42.4448, 0.59", "-9.96046, 72.7748, -41.9267, 0.59", "-9.91342, 73.9929, -41.4212, 0.59", "-9.88458, 75.0041, -41.1568, 0.66", "-9.89032, 75.7823, -41.0451, 0.81", "-9.93663, 76.9269, -41.0253, 0.52", "-10.0363, 78.3185, -41.165, 0.52", "-10.1288, 79.1903, -41.4592, 0.66", "-10.2545, 80.522, -42.2594, 1.03", "-10.3262, 81.8074, -43.3908, 0.37", "-10.3006, 82.7612, -44.516, 0.37", "-10.2086, 83.4772, -45.5657, 0.59", "-9.99523, 84.4219, -47.1268, 0.74", "-9.71973, 85.2122, -48.5274, 0.74", "-9.30381, 86.0788, -50.1331, 0.37", "-8.91193, 86.6993, -51.3179, 0.37", "-8.62065, 87.0846, -52.0041, 0.37", "-8.29518, 87.4437, -52.647, 0.44", "-7.74487, 88.0443, -53.6336, 0.44", "-7.42862, 88.3956, -54.1718, 0.74", "-6.85093, 89.0528, -55.1462, 0.74", "-6.14178, 89.8195, -56.2993, 0.15", "-5.43025, 90.4854, -57.4468, 0.15", "-3.64839, 98.0526, -61.3164, 0.15", "-2.36559, 105.904, -64.7222, 0.15", "-2.06246, 112.886, -69.9547, 0.15", "-2.13182, 119.278, -75.9678, 0.15", "-2.54645, 126.334, -81.0737, 0.15", "-2.4498, 133.675, -85.7347, 0.15", "-1.08737, 141.159, -89.9367, 0.15", "0.472712, 149.011, -93.227, 0.15", "1.12793, 157.081, -96.2088, 0.15", "3.54184, 165.231, -97.6935, 0.15", "6.18987, 173.391, -98.6183, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "74.4252, 185.457, -53.345, 0.29", "74.4002, 185.906, -54.537, 0.29", "74.3443, 186.384, -56.1662, 0.29", "74.2666, 186.657, -57.2247, 0.29", "74.1689, 186.874, -58.0509, 0.29", "74.0925, 187.028, -58.6092, 0.59", "73.8876, 187.488, -60.1579, 0.22", "73.7721, 187.852, -61.2019, 0.22", "73.7311, 188.076, -61.7349, 0.22", "73.7228, 188.382, -62.3963, 0.15", "73.9214, 188.68, -62.752, 0.15", "74.3355, 189.067, -62.9464, 0.66", "75.1128, 189.712, -63.0886, 0.22", "75.5105, 190.027, -63.1343, 0.22", "75.8908, 190.284, -63.1656, 0.44", "76.9795, 190.874, -63.2085, 0.29", "79.9299, 194.485, -69.4325, 0.29", "82.1214, 198.33, -75.8161, 0.29", "83.626, 202.365, -82.2725, 0.29", "84.7486, 207.251, -88.1273, 0.29", "86.2185, 211.854, -94.1545, 0.29", "86.1686, 215.587, -100.99, 0.29", "85.2249, 218.65, -108.132, 0.29", "83.7129, 222.383, -114.811, 0.29", "83.3712, 226.064, -121.672, 0.29", "82.9157, 230.506, -128.007, 0.29", "83.2837, 235.418, -133.942, 0.29", "84.8636, 239.589, -140.282, 0.29", "88.1752, 243.129, -146.366, 0.29", "91.4421, 245.325, -153.152, 0.29", "95.2605, 246.559, -159.929, 0.29", "98.677, 246.462, -167.055, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "74.4252, 185.457, -53.345, 0.74", "73.9983, 185.957, -53.434, 0.74", "72.0304, 188.156, -53.9932, 0.29", "71.3421, 188.872, -54.2253, 0.29", "70.2554, 189.932, -54.6418, 0.52", "69.514, 190.617, -54.9681, 0.29", "68.593, 191.46, -55.4841, 0.37", "67.8532, 192.116, -56.0257, 0.59", "67.3095, 192.568, -56.4843, 0.44", "66.6819, 193.103, -56.9805, 0.88", "65.4755, 194.223, -57.8109, 0.37", "64.2251, 195.501, -58.505, 0.66", "63.4772, 196.375, -58.8369, 0.29", "62.6463, 197.508, -59.1351, 0.22", "61.7502, 198.925, -59.3907, 0.74", "60.8405, 200.578, -59.5775, 0.29", "60.354, 201.61, -59.6361, 0.22", "59.9946, 202.463, -59.6646, 0.88", "59.6141, 203.545, -59.7657, 0.88", "59.3825, 204.398, -59.9269, 0.22", "59.206, 205.261, -60.1643, 0.22", "59.0598, 206.257, -60.4813, 0.15", "58.9922, 206.859, -60.6605, 0.66", "58.9458, 207.497, -60.8356, 0.22", "58.9016, 208.451, -61.0863, 0.15", "58.9073, 208.947, -61.2105, 0.15", "58.996, 209.726, -61.4316, 0.44", "59.2366, 210.767, -61.7804, 0.44", "59.6309, 211.881, -62.294, 0.22", "59.9248, 212.465, -62.6677, 0.22", "60.4043, 213.177, -63.2759, 0.52", "61.1041, 214.0, -64.1803, 0.52", "61.6244, 214.491, -64.8461, 0.22", "62.6306, 215.328, -66.0986, 0.22", "63.4376, 215.957, -67.0987, 0.22", "64.0629, 216.431, -67.8912, 0.22", "64.7732, 216.982, -68.8323, 0.22", "65.7857, 217.812, -70.1706, 0.22", "66.5547, 218.425, -71.1433, 0.66", "67.0623, 218.826, -71.7057, 0.37", "67.2152, 227.766, -76.309, 0.37", "67.9814, 237.121, -79.8467, 0.37", "66.1265, 246.553, -82.7885, 0.37", "64.4053, 256.298, -84.5029, 0.37", "63.0729, 265.724, -87.7081, 0.37", "63.5493, 275.281, -90.6904, 0.37", "65.1449, 285.061, -92.1897, 0.37", "66.2131, 295.038, -92.2549, 0.37", "68.1003, 304.753, -90.2637, 0.37", "71.9908, 313.938, -88.5035, 0.37", "77.2916, 322.571, -87.8505, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-39.3759, 34.5575, -32.6589, 0.52", "-40.9544, 35.2833, -33.0184, 0.52", "-41.5866, 35.5787, -33.1815, 0.66", "-42.5881, 36.0368, -33.4362, 0.88", "-44.0938, 36.7026, -33.8045, 0.74", "-45.4453, 37.2619, -34.1003, 0.52", "-46.5822, 37.7055, -34.3274, 0.52", "-48.2991, 38.3202, -34.6934, 0.74", "-49.263, 38.638, -34.882, 0.74", "-50.6363, 39.0392, -35.0915, 0.66", "-52.1656, 39.4005, -35.2681, 0.37", "-52.858, 39.5268, -35.337, 0.37", "-53.5649, 39.6171, -35.4221, 0.88", "-54.6834, 39.7065, -35.6035, 0.88", "-55.5611, 39.7617, -35.7978, 0.59", "-56.4471, 39.7939, -36.0455, 0.59", "-57.3651, 39.8131, -36.3928, 0.59", "-58.1446, 39.802, -36.7966, 0.59", "-58.9903, 39.7715, -37.3051, 0.59", "-59.6102, 39.7342, -37.6913, 0.81", "-60.4098, 39.6764, -38.1699, 1.03", "-61.8495, 39.5184, -38.9456, 0.52", "-63.7826, 39.2457, -39.8434, 0.59", "-65.0411, 38.9969, -40.3498, 0.59", "-66.0976, 38.7156, -40.6891, 0.59", "-67.5422, 38.2065, -41.0382, 0.59", "-68.5428, 37.7481, -41.1614, 0.59", "-69.7095, 37.0791, -41.1224, 0.52", "-70.4807, 36.5573, -40.9998, 0.59", "-71.3201, 35.9018, -40.837, 0.52", "-72.1049, 35.2519, -40.6878, 0.37", "-73.1494, 34.3729, -40.5227, 0.66", "-73.8212, 33.843, -40.4436, 0.66", "-74.4898, 33.3819, -40.4072, 0.88", "-75.3292, 32.8962, -40.4004, 0.88", "-76.8386, 32.1203, -40.4962, 0.52", "-77.7206, 31.7108, -40.644, 0.52", "-78.3149, 31.4711, -40.8194, 0.66", "-79.8177, 30.9567, -41.4581, 0.44", "-80.532, 30.77, -41.8532, 0.59", "-81.4899, 30.6092, -42.4785, 0.66", "-83.0625, 30.5207, -43.6434, 0.66", "-84.1124, 30.5478, -44.4882, 0.88", "-84.9252, 30.6287, -45.1716, 0.88", "-85.7467, 30.7548, -45.8694, 0.81", "-86.5043, 30.9009, -46.4597, 1.11", "-87.5728, 31.1389, -47.1411, 0.52", "-88.9767, 31.4765, -47.8926, 0.52", "-90.5386, 31.8672, -48.6034, 0.29", "-91.0305, 31.9916, -48.7955, 0.29", "-92.1213, 32.2443, -49.2042, 0.59", "-93.5524, 32.5039, -49.8292, 0.29", "-95.427, 32.764, -50.8639, 0.37", "-96.6371, 32.8805, -51.6263, 0.37", "-97.55, 32.9368, -52.2638, 0.37", "-99.1278, 33.0018, -53.4738, 0.44", "-101.114, 33.0136, -55.2023, 0.96", "-102.966, 32.9329, -57.0516, 0.44", "-103.71, 32.8556, -57.8883, 0.52", "-104.58, 32.7407, -59.0234, 0.52", "-114.075, 31.8124, -63.7478, 0.52", "-123.863, 31.5557, -67.9437, 0.52", "-134.011, 30.2822, -70.8625, 0.52", "-144.341, 27.9501, -71.3302, 0.52", "-154.375, 24.8119, -70.28, 0.52", "-164.88, 23.2595, -70.0531, 0.52", "-174.841, 19.8096, -70.6727, 0.52", "-185.011, 17.3053, -72.3014, 0.52", "-195.023, 15.4993, -75.3638, 0.52", "-204.508, 14.1437, -79.9872, 0.52", "-213.903, 12.1602, -84.538, 0.52", "-222.835, 10.395, -90.0315, 0.52", "-232.036, 8.58198, -95.0383, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-39.3759, 34.5575, -32.6589, 0.29", "-40.4187, 34.6793, -33.4356, 0.29", "-41.6408, 34.7987, -34.2811, 0.44", "-42.1496, 34.853, -34.5969, 0.44", "-42.9609, 34.959, -35.0451, 0.29", "-43.7984, 35.0917, -35.4605, 0.29", "-44.6333, 35.243, -35.8365, 0.59", "-45.2161, 35.3939, -36.0107, 0.81", "-45.9464, 35.5977, -36.1616, 0.59", "-46.6465, 35.7766, -36.3086, 0.44", "-47.2317, 35.9075, -36.4531, 0.74", "-47.6784, 36.0062, -36.5919, 1.03", "-48.5618, 36.1918, -36.9469, 0.29", "-49.5536, 36.3432, -37.4497, 0.29", "-50.6032, 36.394, -38.0804, 0.96", "-51.6905, 36.3103, -38.8119, 0.66", "-52.4786, 36.1424, -39.3782, 0.74", "-53.2158, 35.9429, -39.9453, 0.81", "-53.8985, 35.7032, -40.5136, 0.52", "-54.7777, 35.3127, -41.2447, 0.52", "-55.4924, 34.8801, -41.8317, 0.44", "-56.0675, 34.4116, -42.2652, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-232.036, 8.58198, -95.0383, 0.66", "-238.919, 3.11277, -96.4611, 0.66", "-244.931, -3.21548, -97.8894, 0.66", "-250.77, -9.69158, -99.2978, 0.66", "-257.231, -15.7532, -99.4938, 0.66", "-263.0, -22.4124, -99.2297, 0.66", "-268.546, -29.2254, -99.8137, 0.66", "-273.691, -36.1426, -101.582, 0.66", "-278.361, -43.3841, -103.232, 0.66", "-282.887, -50.781, -104.467, 0.66", "-286.889, -58.4992, -105.26, 0.66", "-290.287, -66.502, -104.873, 0.66", "-293.281, -74.654, -104.543, 0.66", "-298.115, -81.9624, -104.635, 0.66", "-302.588, -89.4701, -105.005, 0.66", "-307.461, -96.5014, -107.033, 0.66", "-312.64, -103.327, -109.077, 0.66", "-318.338, -109.002, -112.892, 0.66", "-323.535, -114.435, -117.694, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-232.036, 8.58198, -95.0383, 0.15", "-238.568, 11.7433, -98.5836, 0.66", "-244.58, 16.1039, -101.619, 0.66", "-250.72, 20.4173, -104.473, 0.66", "-256.313, 25.538, -106.961, 0.66", "-261.986, 30.3597, -109.876, 0.66", "-266.651, 35.375, -113.939, 0.66", "-271.547, 39.9552, -118.285, 0.66", "-275.951, 45.0769, -122.482, 0.66", "-281.367, 49.0886, -126.84, 0.66", "-286.389, 52.4406, -132.16, 0.66", "-290.22, 56.0309, -138.225, 0.66", "-295.171, 58.6251, -144.054, 0.66", "-298.996, 61.7886, -150.38, 0.66", "-301.945, 65.8665, -156.581, 0.66", "-303.716, 70.2847, -162.952, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-56.0675, 34.4116, -42.2652, 0.66", "-56.3523, 33.2459, -43.0609, 0.66", "-56.5811, 32.3572, -43.8312, 0.59", "-56.8037, 31.7494, -44.4874, 0.29", "-57.2409, 30.9134, -45.4972, 0.29", "-57.4542, 30.5933, -45.9572, 0.44", "-58.0979, 29.84, -47.3047, 0.59", "-58.6269, 29.3557, -48.3399, 0.59", "-59.2478, 28.904, -49.5617, 0.59", "-59.718, 28.6259, -50.4924, 0.66", "-60.4822, 28.2598, -51.9747, 0.66", "-61.4623, 27.9012, -53.8475, 0.22", "-64.8416, 23.9456, -62.8182, 0.22", "-68.4644, 19.9874, -71.6918, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-56.0675, 34.4116, -42.2652, 0.15", "-56.6821, 34.5632, -42.1837, 0.15", "-57.2974, 34.666, -42.0991, 0.22", "-57.9469, 34.6874, -42.0187, 0.37", "-58.5769, 34.6519, -41.9577, 0.52", "-59.4325, 34.5292, -41.8706, 0.22", "-59.9369, 34.4332, -41.8116, 0.22", "-60.311, 34.3411, -41.7371, 0.22", "-61.1341, 34.0856, -41.5253, 0.29", "-61.6074, 33.9156, -41.3868, 0.22", "-62.3115, 33.6727, -41.2238, 0.29", "-63.0352, 33.4659, -41.1102, 0.15", "-63.9522, 33.2715, -41.0017, 0.15", "-64.3109, 33.2237, -40.9755, 0.44", "-64.7596, 33.1943, -40.9665, 0.44", "-66.0253, 33.1707, -41.0157, 0.22", "-66.6327, 33.1893, -41.0497, 0.22", "-67.1004, 33.2251, -41.0719, 0.52", "-67.6569, 33.2991, -41.1142, 0.52", "-68.3056, 33.4063, -41.1398, 0.22", "-68.8008, 33.5107, -41.1221, 0.44", "-69.7102, 33.7426, -40.9499, 0.44", "-70.3315, 33.9493, -40.8022, 0.74", "-71.0336, 34.2457, -40.5847, 0.88", "-77.6988, 33.844, -39.0964, 0.88", "-84.2769, 32.7827, -37.5744, 0.88", "-91.104, 32.4775, -37.2568, 0.88", "-97.8719, 32.8907, -38.1587, 0.88", "-104.489, 33.322, -39.8373, 0.88", "-111.091, 34.4023, -41.2256, 0.88", "-117.226, 36.1622, -43.6258, 0.88", "-123.071, 36.8663, -47.1052, 0.88", "-128.922, 38.3713, -50.282, 0.88", "-135.56, 38.7383, -51.8921, 0.88", "-142.353, 38.1339, -52.4123, 0.88", "-148.694, 36.4756, -54.2949, 0.88", "-154.634, 34.8448, -57.2194, 0.88", "-161.125, 34.2701, -59.2932, 0.88", "-167.584, 33.8974, -61.5162, 0.88", "-174.294, 33.6114, -62.816, 0.88", "-181.115, 33.4192, -63.3013, 0.88", "-187.796, 32.0173, -63.1571, 0.88", "-194.491, 31.2755, -61.9762, 0.88", "-200.837, 31.4407, -59.4278, 0.88", "-206.84, 30.7383, -56.2254, 0.88", "-212.169, 28.9422, -52.3635, 0.88", "-216.955, 26.5549, -48.1558, 0.88", "-222.209, 23.4422, -45.2263, 0.88", "-226.901, 19.7926, -42.0349, 0.88", "-230.503, 15.4008, -38.4791, 0.88", "-233.327, 10.3475, -35.2042, 0.88", "-235.038, 4.79228, -32.0614, 0.88", "-235.782, -1.39077, -30.0543, 0.88", "-236.975, -7.22058, -27.2434, 0.88", "-238.981, -12.8218, -24.3795, 0.88", "-240.858, -18.3442, -21.2683, 0.88", "-242.204, -24.2733, -18.7768, 0.88", "-243.082, -30.0505, -15.7374, 0.88", "-244.227, -35.8495, -12.8364, 0.88", "-245.107, -41.7123, -9.98645, 0.88", "-247.004, -46.9471, -6.37445, 0.88", "-248.385, -52.4164, -2.91687, 0.88", "-250.575, -57.168, 1.2309, 0.88", "-253.441, -62.2684, 4.3859, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-68.4644, 19.9874, -71.6918, 0.22", "-71.4422, 16.9895, -76.578, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-68.4644, 19.9874, -71.6918, 0.22", "-71.9152, 15.8256, -79.6304, 0.22", "-77.0737, 11.3319, -86.3285, 0.22", "-81.0057, 7.39815, -94.1668, 0.22", "-84.6141, 2.60959, -101.63, 0.22", "-86.4778, -1.22689, -110.261, 0.22", "-88.4728, -6.25786, -118.158, 0.22", "-89.0497, -11.6393, -126.044, 0.22", "-91.1517, -17.9528, -132.814, 0.22", "-93.4118, -23.4066, -140.318, 0.22", "-97.1115, -28.3364, -147.632, 0.22", "-100.842, -33.8532, -154.449, 0.22", "-105.414, -39.6108, -160.471, 0.22", "-110.66, -45.001, -166.307, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "axon_0", "dend_31", "dend_26", "dend_4", "dend_1", "axon_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_DBC_f7446db64e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_25, dend_0, axon_0, dend_31, dend_26, dend_4, dend_1, axon_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000015763654744)
    connect dend_0(0), soma_0(0.45000015763654744)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.20498, -9.63696, 0.0, 2.93949 ) }
    soma_0 { pt3dadd( 1.97921, -8.62937, 0.0, 5.10114 ) }
    soma_0 { pt3dadd( 1.75343, -7.62179, 0.0, 6.34149 ) }
    soma_0 { pt3dadd( 1.52766, -6.61421, 0.0, 7.24948 ) }
    soma_0 { pt3dadd( 1.30189, -5.60662, 0.0, 8.32859 ) }
    soma_0 { pt3dadd( 1.07612, -4.59904, 0.0, 9.63098 ) }
    soma_0 { pt3dadd( 0.850343, -3.59146, 0.0, 10.5761 ) }
    soma_0 { pt3dadd( 0.624571, -2.58388, 0.0, 11.2008 ) }
    soma_0 { pt3dadd( 0.398798, -1.57629, 0.0, 11.5851 ) }
    soma_0 { pt3dadd( 0.173026, -0.56871, 0.0, 11.8715 ) }
    soma_0 { pt3dadd( -0.0527468, 0.438873, 0.0, 11.942 ) }
    soma_0 { pt3dadd( -0.278519, 1.44646, 0.0, 11.923 ) }
    soma_0 { pt3dadd( -0.504292, 2.45404, 0.0, 11.4797 ) }
    soma_0 { pt3dadd( -0.730064, 3.46162, 0.0, 10.9001 ) }
    soma_0 { pt3dadd( -0.955837, 4.4692, 0.0, 10.1322 ) }
    soma_0 { pt3dadd( -1.18161, 5.47679, 0.0, 9.32117 ) }
    soma_0 { pt3dadd( -1.40738, 6.48437, 0.0, 8.43955 ) }
    soma_0 { pt3dadd( -1.63315, 7.49195, 0.0, 7.43264 ) }
    soma_0 { pt3dadd( -1.85893, 8.49954, 0.0, 6.41765 ) }
    soma_0 { pt3dadd( -2.0847, 9.50712, 0.0, 5.2256 ) }
    soma_0 { pt3dadd( -2.31047, 10.5147, 0.0, 2.87927 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67666, -9.21573, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 1.67666, -9.21573, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 2.14179, -10.1729, 7.76768, 3.32 ) }
    dend_25 { pt3dadd( 2.98457, -11.6649, 9.08886, 2.36 ) }
    dend_25 { pt3dadd( 3.88481, -13.2585, 10.5001, 2.88 ) }
    dend_25 { pt3dadd( 3.97025, -13.4098, 10.6341, 2.65 ) }
    dend_25 { pt3dadd( 4.62081, -14.5614, 11.6539, 1.62 ) }
    dend_25 { pt3dadd( 5.50591, -16.0125, 13.0943, 1.84 ) }
    dend_25 { pt3dadd( 6.39157, -17.2276, 14.6439, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.96334, 9.77477, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -1.96334, 9.77477, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -2.59803, 10.932, -0.125262, 3.32 ) }
    dend_0 { pt3dadd( -3.04813, 11.7489, -0.274091, 2.88 ) }
    dend_0 { pt3dadd( -3.37423, 12.3423, -0.396396, 2.88 ) }
    dend_0 { pt3dadd( -3.86124, 13.2286, -0.579055, 3.47 ) }
    dend_0 { pt3dadd( -4.49793, 14.3874, -0.81785, 2.51 ) }
    dend_0 { pt3dadd( -5.25492, 15.7432, -1.12701, 2.8 ) }
    dend_0 { pt3dadd( -5.92588, 16.9048, -1.44789, 4.13 ) }
    dend_0 { pt3dadd( -6.24251, 17.4434, -1.62136, 4.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.31047, 10.5147, 0.0, 0.488856 ) }
    axon_0 { pt3dadd( -5.59024, 25.1517, 0.0, 0.488856 ) }
    axon_0 { pt3dadd( -8.87001, 39.7888, 0.0, 0.488856 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.39157, -17.2276, 14.6439, 1.4 ) }
    dend_31 { pt3dadd( 7.37125, -18.0097, 13.6838, 1.4 ) }
    dend_31 { pt3dadd( 8.67499, -19.0822, 12.4496, 1.4 ) }
    dend_31 { pt3dadd( 9.56061, -19.81, 11.6627, 1.4 ) }
    dend_31 { pt3dadd( 10.672, -20.7371, 10.7719, 1.4 ) }
    dend_31 { pt3dadd( 11.6438, -21.5561, 10.0334, 1.18 ) }
    dend_31 { pt3dadd( 12.8824, -22.5895, 9.16079, 1.4 ) }
    dend_31 { pt3dadd( 13.4451, -23.0756, 8.79853, 1.55 ) }
    dend_31 { pt3dadd( 14.0005, -23.5576, 8.49652, 1.7 ) }
    dend_31 { pt3dadd( 15.2151, -24.5987, 7.90348, 1.18 ) }
    dend_31 { pt3dadd( 16.1703, -25.3906, 7.51674, 1.18 ) }
    dend_31 { pt3dadd( 17.0317, -26.0884, 7.22272, 1.84 ) }
    dend_31 { pt3dadd( 17.5362, -26.4967, 7.09905, 1.84 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.39157, -17.2276, 14.6439, 1.18 ) }
    dend_26 { pt3dadd( 6.25613, -17.5784, 15.2726, 1.18 ) }
    dend_26 { pt3dadd( 5.95238, -18.4473, 16.7719, 1.03 ) }
    dend_26 { pt3dadd( 5.7925, -19.0918, 17.8647, 1.03 ) }
    dend_26 { pt3dadd( 5.7487, -19.4589, 18.5031, 0.96 ) }
    dend_26 { pt3dadd( 5.76914, -19.7674, 19.07, 0.96 ) }
    dend_26 { pt3dadd( 5.84385, -20.1592, 19.8484, 1.11 ) }
    dend_26 { pt3dadd( 5.97931, -20.5352, 20.6852, 1.03 ) }
    dend_26 { pt3dadd( 6.16609, -20.9466, 21.6892, 1.18 ) }
    dend_26 { pt3dadd( 6.41005, -21.4487, 23.0386, 1.84 ) }
    dend_26 { pt3dadd( 6.68504, -22.016, 24.7337, 1.18 ) }
    dend_26 { pt3dadd( 6.84272, -22.4392, 26.0921, 1.18 ) }
    dend_26 { pt3dadd( 6.8694, -22.7337, 27.1317, 1.18 ) }
    dend_26 { pt3dadd( 6.71024, -23.028, 28.2815, 1.33 ) }
    dend_26 { pt3dadd( 6.36437, -23.2477, 29.2504, 1.33 ) }
    dend_26 { pt3dadd( 6.05637, -23.3565, 29.7903, 1.33 ) }
    dend_26 { pt3dadd( 5.48836, -23.499, 30.6242, 1.4 ) }
    dend_26 { pt3dadd( 4.93915, -23.6195, 31.4837, 1.47 ) }
    dend_26 { pt3dadd( 4.23026, -23.7763, 32.8543, 1.33 ) }
    dend_26 { pt3dadd( 3.75749, -23.9019, 34.1467, 1.33 ) }
    dend_26 { pt3dadd( 3.46026, -24.0135, 35.258, 1.4 ) }
    dend_26 { pt3dadd( 3.14059, -24.1837, 37.0372, 1.4 ) }
    dend_26 { pt3dadd( 2.92528, -24.3621, 38.9106, 1.4 ) }
    dend_26 { pt3dadd( 2.80237, -24.5422, 40.4253, 1.4 ) }
    dend_26 { pt3dadd( 2.6635, -24.8052, 42.2044, 1.4 ) }
    dend_26 { pt3dadd( 2.56153, -24.9575, 42.9584, 1.11 ) }
    dend_26 { pt3dadd( 2.17023, -25.402, 44.6646, 1.11 ) }
    dend_26 { pt3dadd( 1.62335, -25.894, 46.231, 1.25 ) }
    dend_26 { pt3dadd( 1.27599, -26.1719, 47.0084, 1.55 ) }
    dend_26 { pt3dadd( 0.605929, -26.6535, 48.2306, 1.55 ) }
    dend_26 { pt3dadd( -0.234564, -27.2242, 49.5538, 1.25 ) }
    dend_26 { pt3dadd( -1.20757, -27.8531, 50.9846, 1.25 ) }
    dend_26 { pt3dadd( -2.40665, -28.6286, 52.5063, 1.62 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.24251, 17.4434, -1.62136, 2.88 ) }
    dend_4 { pt3dadd( -7.54897, 19.1803, -3.37657, 2.88 ) }
    dend_4 { pt3dadd( -8.49523, 20.4383, -4.64787, 2.88 ) }
    dend_4 { pt3dadd( -9.44469, 21.7006, -5.92345, 3.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.24251, 17.4434, -1.62136, 2.06 ) }
    dend_1 { pt3dadd( -6.38036, 19.6251, 0.467973, 2.06 ) }
    dend_1 { pt3dadd( -6.42099, 21.6541, 2.18211, 0.96 ) }
    dend_1 { pt3dadd( -6.40115, 22.5768, 2.90511, 0.96 ) }
    dend_1 { pt3dadd( -6.32858, 23.92, 3.86684, 0.81 ) }
    dend_1 { pt3dadd( -6.22878, 25.0047, 4.5862, 0.81 ) }
    dend_1 { pt3dadd( -6.05349, 26.4596, 5.4981, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -5.88019, 27.4199, 5.95904, 1.11 ) }
    dend_1 { pt3dadd( -5.62777, 28.5089, 6.38568, 1.55 ) }
    dend_1 { pt3dadd( -5.2906, 29.9493, 6.89546, 1.18 ) }
    dend_1 { pt3dadd( -4.98838, 31.3333, 7.33605, 0.88 ) }
    dend_1 { pt3dadd( -4.84216, 32.1345, 7.56848, 0.74 ) }
    dend_1 { pt3dadd( -4.65744, 33.5063, 7.91809, 1.18 ) }
    dend_1 { pt3dadd( -4.51999, 35.0345, 8.31604, 0.81 ) }
    dend_1 { pt3dadd( -4.409, 36.8538, 8.79808, 0.96 ) }
    dend_1 { pt3dadd( -4.315, 38.4528, 9.21182, 1.25 ) }
    dend_1 { pt3dadd( -4.22752, 39.8527, 9.56962, 1.25 ) }
    dend_1 { pt3dadd( -4.10233, 41.1612, 9.91449, 0.66 ) }
    dend_1 { pt3dadd( -3.88803, 42.5239, 10.3014, 0.88 ) }
    dend_1 { pt3dadd( -3.54998, 43.7502, 10.65, 0.52 ) }
    dend_1 { pt3dadd( -3.10661, 44.9123, 10.9715, 0.96 ) }
    dend_1 { pt3dadd( -2.77323, 45.6504, 11.1641, 0.96 ) }
    dend_1 { pt3dadd( -2.07304, 47.0475, 11.5472, 0.74 ) }
    dend_1 { pt3dadd( -1.47276, 48.1511, 11.862, 0.88 ) }
    dend_1 { pt3dadd( -0.717936, 49.5025, 12.2481, 0.88 ) }
    dend_1 { pt3dadd( 0.0817972, 51.0351, 12.772, 0.96 ) }
    dend_1 { pt3dadd( 0.312894, 51.5069, 12.9645, 0.96 ) }
    dend_1 { pt3dadd( 0.886295, 52.7898, 13.5766, 0.96 ) }
    dend_1 { pt3dadd( 1.113, 53.3669, 13.9099, 1.11 ) }
    dend_1 { pt3dadd( 1.36141, 54.0823, 14.3777, 0.96 ) }
    dend_1 { pt3dadd( 1.79015, 55.3213, 15.3456, 0.81 ) }
    dend_1 { pt3dadd( 2.14943, 56.3383, 16.2431, 0.66 ) }
    dend_1 { pt3dadd( 2.60895, 57.6631, 17.4472, 0.59 ) }
    dend_1 { pt3dadd( 2.96455, 58.7746, 18.5666, 0.88 ) }
    dend_1 { pt3dadd( 3.28961, 59.8203, 19.6606, 1.4 ) }
    dend_1 { pt3dadd( 3.76037, 61.3222, 21.3195, 0.88 ) }
    dend_1 { pt3dadd( 4.16043, 62.5386, 22.7532, 0.74 ) }
    dend_1 { pt3dadd( 4.36777, 63.1994, 23.5764, 0.74 ) }
    dend_1 { pt3dadd( 4.92323, 64.7567, 25.6107, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.87001, 39.7888, 0.0, 0.158826 ) }
    axon_1 { pt3dadd( -12.1498, 54.4258, 0.0, 0.158826 ) }
    axon_1 { pt3dadd( -15.4296, 69.0629, 0.0, 0.158826 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 35/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 17.5362, -26.4967, 7.09905, 1.7 ) }
    dend_35 { pt3dadd( 18.733, -26.5428, 9.04233, 1.7 ) }
    dend_35 { pt3dadd( 19.7381, -26.6929, 10.7434, 1.25 ) }
    dend_35 { pt3dadd( 20.5063, -26.8854, 12.0851, 1.25 ) }
    dend_35 { pt3dadd( 21.2753, -27.1473, 13.4126, 1.55 ) }
    dend_35 { pt3dadd( 22.2459, -27.5455, 15.0481, 1.4 ) }
    dend_35 { pt3dadd( 23.1614, -27.9597, 16.5495, 1.62 ) }
    dend_35 { pt3dadd( 24.0698, -28.4479, 17.9446, 1.55 ) }
    dend_35 { pt3dadd( 25.1313, -29.0638, 19.521, 1.4 ) }
    dend_35 { pt3dadd( 26.0401, -29.6034, 20.8023, 1.47 ) }
    dend_35 { pt3dadd( 27.3623, -30.3951, 22.563, 1.18 ) }
    dend_35 { pt3dadd( 28.6319, -31.1225, 24.1227, 1.18 ) }
    dend_35 { pt3dadd( 30.0418, -31.882, 25.7087, 1.03 ) }
    dend_35 { pt3dadd( 31.2391, -32.4719, 26.9305, 1.03 ) }
    dend_35 { pt3dadd( 31.7532, -32.6949, 27.4045, 1.25 ) }
    dend_35 { pt3dadd( 33.0592, -33.1861, 28.5271, 1.11 ) }
    dend_35 { pt3dadd( 34.19, -33.5525, 29.5322, 1.33 ) }
    dend_35 { pt3dadd( 34.903, -33.7528, 30.1708, 1.62 ) }
    dend_35 { pt3dadd( 36.5398, -34.1801, 31.6381, 1.33 ) }
    dend_35 { pt3dadd( 38.1494, -34.5624, 33.0973, 1.25 ) }
    dend_35 { pt3dadd( 39.5258, -34.844, 34.3845, 1.18 ) }
    dend_35 { pt3dadd( 41.8728, -35.2288, 36.6494, 1.47 ) }
    dend_35 { pt3dadd( 42.5398, -35.3236, 37.3319, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.5362, -26.4967, 7.09905, 0.88 ) }
    dend_32 { pt3dadd( 17.6218, -27.2292, 7.64094, 0.88 ) }
    dend_32 { pt3dadd( 17.6473, -28.3092, 8.51181, 0.74 ) }
    dend_32 { pt3dadd( 17.6078, -29.4123, 9.47514, 0.74 ) }
    dend_32 { pt3dadd( 17.5451, -30.2739, 10.2185, 0.74 ) }
    dend_32 { pt3dadd( 17.4464, -31.199, 10.9916, 0.96 ) }
    dend_32 { pt3dadd( 17.3212, -32.1232, 11.732, 1.7 ) }
    dend_32 { pt3dadd( 17.0363, -33.5039, 12.8322, 0.66 ) }
    dend_32 { pt3dadd( 16.768, -34.4678, 13.5324, 0.74 ) }
    dend_32 { pt3dadd( 16.5311, -35.2057, 13.9446, 0.88 ) }
    dend_32 { pt3dadd( 16.2915, -35.8943, 14.1954, 1.11 ) }
    dend_32 { pt3dadd( 15.9969, -36.7422, 14.347, 1.33 ) }
    dend_32 { pt3dadd( 15.6173, -37.9043, 14.3912, 0.74 ) }
    dend_32 { pt3dadd( 15.3078, -39.0009, 14.3162, 0.74 ) }
    dend_32 { pt3dadd( 15.1203, -39.7783, 14.2007, 0.59 ) }
    dend_32 { pt3dadd( 14.8417, -41.1487, 13.9606, 0.88 ) }
    dend_32 { pt3dadd( 14.6462, -42.3412, 13.7403, 0.59 ) }
    dend_32 { pt3dadd( 14.5583, -42.9715, 13.6155, 0.59 ) }
    dend_32 { pt3dadd( 14.4346, -44.12, 13.3931, 0.81 ) }
    dend_32 { pt3dadd( 14.3089, -45.5865, 13.1622, 0.74 ) }
    dend_32 { pt3dadd( 14.2551, -46.3227, 13.0477, 0.59 ) }
    dend_32 { pt3dadd( 14.2106, -47.2803, 12.9315, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -2.40665, -28.6286, 52.5063, 0.52 ) }
    dend_30 { pt3dadd( -1.89402, -28.1038, 56.2628, 0.52 ) }
    dend_30 { pt3dadd( -1.56945, -27.8493, 58.1012, 0.52 ) }
    dend_30 { pt3dadd( -1.28757, -27.6437, 59.5412, 0.52 ) }
    dend_30 { pt3dadd( -1.04406, -27.4898, 60.7198, 0.52 ) }
    dend_30 { pt3dadd( -0.680401, -27.2306, 62.5019, 0.52 ) }
    dend_30 { pt3dadd( -0.429988, -27.0298, 63.7661, 0.52 ) }
    dend_30 { pt3dadd( -0.204994, -26.7933, 64.9266, 0.52 ) }
    dend_30 { pt3dadd( 0.122792, -26.3919, 66.6978, 0.52 ) }
    dend_30 { pt3dadd( 0.485257, -25.8087, 68.9023, 0.52 ) }
    dend_30 { pt3dadd( 0.687399, -25.3454, 70.4074, 0.81 ) }
    dend_30 { pt3dadd( 0.836033, -24.8307, 71.7735, 0.81 ) }
    dend_30 { pt3dadd( 0.956122, -24.3514, 72.8473, 0.59 ) }
    dend_30 { pt3dadd( 1.24368, -23.2633, 75.0355, 0.59 ) }
    dend_30 { pt3dadd( 1.53631, -22.3814, 76.6391, 0.52 ) }
    dend_30 { pt3dadd( 1.8514, -21.5496, 77.9812, 0.37 ) }
    dend_30 { pt3dadd( 2.39148, -20.3974, 79.7817, 0.44 ) }
    dend_30 { pt3dadd( 3.02111, -19.2153, 81.4973, 0.29 ) }
    dend_30 { pt3dadd( 3.62343, -18.2377, 82.8898, 0.29 ) }
    dend_30 { pt3dadd( 4.41138, -17.0074, 84.4678, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 5.0781, -16.0102, 85.7092, 0.29 ) }
    dend_30 { pt3dadd( 6.08547, -14.5265, 87.4948, 0.29 ) }
    dend_30 { pt3dadd( 6.62007, -13.7514, 88.4217, 0.29 ) }
    dend_30 { pt3dadd( 7.74325, -12.1017, 90.3846, 0.29 ) }
    dend_30 { pt3dadd( 8.4706, -11.0134, 91.6523, 0.22 ) }
    dend_30 { pt3dadd( 9.63352, -9.24491, 93.7312, 0.22 ) }
    dend_30 { pt3dadd( 10.1625, -8.45317, 94.6933, 0.22 ) }
    dend_30 { pt3dadd( 11.0415, -7.07576, 96.3398, 0.22 ) }
    dend_30 { pt3dadd( 12.0381, -5.50511, 98.3232, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -2.40665, -28.6286, 52.5063, 1.03 ) }
    dend_27 { pt3dadd( -2.68718, -29.5926, 52.5568, 1.03 ) }
    dend_27 { pt3dadd( -3.06398, -30.9392, 52.8013, 0.74 ) }
    dend_27 { pt3dadd( -3.47648, -32.5321, 53.1662, 0.74 ) }
    dend_27 { pt3dadd( -3.7864, -33.807, 53.4732, 0.88 ) }
    dend_27 { pt3dadd( -4.18229, -35.5329, 53.8201, 0.96 ) }
    dend_27 { pt3dadd( -4.37383, -36.4218, 53.9721, 0.96 ) }
    dend_27 { pt3dadd( -4.83402, -38.8462, 54.338, 1.03 ) }
    dend_27 { pt3dadd( -5.11385, -40.474, 54.5546, 0.66 ) }
    dend_27 { pt3dadd( -5.3071, -41.7856, 54.716, 0.52 ) }
    dend_27 { pt3dadd( -5.492, -43.4686, 54.8892, 0.66 ) }
    dend_27 { pt3dadd( -5.58448, -44.8909, 54.9919, 0.96 ) }
    dend_27 { pt3dadd( -5.68499, -46.4009, 55.0497, 1.11 ) }
    dend_27 { pt3dadd( -5.72002, -46.9885, 55.0447, 1.11 ) }
    dend_27 { pt3dadd( -5.776, -48.5074, 55.0648, 0.66 ) }
    dend_27 { pt3dadd( -5.79735, -49.4282, 55.0981, 0.66 ) }
    dend_27 { pt3dadd( -5.81569, -50.725, 55.1737, 0.66 ) }
    dend_27 { pt3dadd( -5.83358, -52.2804, 55.3331, 0.88 ) }
    dend_27 { pt3dadd( -5.85787, -54.0017, 55.5998, 0.81 ) }
    dend_27 { pt3dadd( -5.89756, -55.9644, 56.0455, 0.74 ) }
    dend_27 { pt3dadd( -5.95854, -57.7352, 56.5469, 0.66 ) }
    dend_27 { pt3dadd( -6.03845, -59.4165, 57.1241, 0.52 ) }
    dend_27 { pt3dadd( -6.16295, -61.6409, 57.98, 0.52 ) }
    dend_27 { pt3dadd( -6.23433, -62.9243, 58.5463, 0.52 ) }
    dend_27 { pt3dadd( -6.39642, -64.6629, 59.374, 0.52 ) }
    dend_27 { pt3dadd( -6.53302, -65.8078, 59.9283, 0.66 ) }
    dend_27 { pt3dadd( -6.69289, -67.068, 60.5163, 0.96 ) }
    dend_27 { pt3dadd( -6.91576, -68.8637, 61.2839, 1.03 ) }
    dend_27 { pt3dadd( -7.13793, -70.7695, 61.929, 0.74 ) }
    dend_27 { pt3dadd( -7.32605, -72.5496, 62.4144, 0.44 ) }
    dend_27 { pt3dadd( -7.43003, -73.6891, 62.6626, 0.22 ) }
    dend_27 { pt3dadd( -7.46879, -74.2047, 62.7629, 0.22 ) }
    dend_27 { pt3dadd( -7.53654, -75.4994, 62.9658, 0.52 ) }
    dend_27 { pt3dadd( -7.57475, -77.0797, 63.0851, 0.52 ) }
    dend_27 { pt3dadd( -7.55177, -79.007, 63.0642, 0.22 ) }
    dend_27 { pt3dadd( -7.49851, -80.0176, 63.0644, 0.22 ) }
    dend_27 { pt3dadd( -7.40301, -81.3739, 63.1275, 0.66 ) }
    dend_27 { pt3dadd( -7.23186, -83.291, 63.2772, 0.66 ) }
    dend_27 { pt3dadd( -7.01764, -85.1602, 63.4646, 0.37 ) }
    dend_27 { pt3dadd( -6.80678, -86.5952, 63.7036, 0.22 ) }
    dend_27 { pt3dadd( -6.44064, -88.954, 64.2264, 0.29 ) }
    dend_27 { pt3dadd( -6.24061, -90.4977, 64.4683, 0.29 ) }
    dend_27 { pt3dadd( -6.15797, -91.2801, 64.5458, 0.66 ) }
    dend_27 { pt3dadd( -6.04699, -92.5159, 64.5881, 0.96 ) }
    dend_27 { pt3dadd( -5.90122, -94.5041, 64.5415, 0.96 ) }
    dend_27 { pt3dadd( -5.79145, -96.2495, 64.3346, 0.37 ) }
    dend_27 { pt3dadd( -5.62453, -99.7902, 63.646, 0.44 ) }
    dend_27 { pt3dadd( -5.60047, -100.821, 63.4343, 0.44 ) }
    dend_27 { pt3dadd( -5.59395, -102.825, 63.1054, 0.52 ) }
    dend_27 { pt3dadd( -5.61713, -104.743, 62.868, 0.44 ) }
    dend_27 { pt3dadd( -5.64551, -106.115, 62.7654, 0.44 ) }
    dend_27 { pt3dadd( -5.68634, -108.126, 62.7773, 0.44 ) }
    dend_27 { pt3dadd( -5.72177, -110.364, 63.059, 0.44 ) }
    dend_27 { pt3dadd( -5.77226, -112.157, 63.353, 0.44 ) }
    dend_27 { pt3dadd( -5.83568, -113.471, 63.6127, 0.44 ) }
    dend_27 { pt3dadd( -5.90237, -114.719, 63.8823, 0.44 ) }
    dend_27 { pt3dadd( -6.02115, -116.057, 64.2016, 0.52 ) }
    dend_27 { pt3dadd( -6.22957, -117.683, 64.6057, 0.52 ) }
    dend_27 { pt3dadd( -6.38515, -118.655, 64.8382, 0.52 ) }
    dend_27 { pt3dadd( -6.81599, -120.824, 65.2893, 0.22 ) }
    dend_27 { pt3dadd( -7.18144, -122.596, 65.6052, 0.22 ) }
    dend_27 { pt3dadd( -7.51701, -124.189, 65.8406, 0.22 ) }
    dend_27 { pt3dadd( -7.87293, -125.85, 66.0348, 0.29 ) }
    dend_27 { pt3dadd( -8.18556, -127.406, 66.1152, 0.29 ) }
    dend_27 { pt3dadd( -8.48688, -129.222, 66.2962, 0.29 ) }
    dend_27 { pt3dadd( -8.7844, -131.531, 66.6156, 0.22 ) }
    dend_27 { pt3dadd( -8.87104, -132.445, 66.7672, 0.29 ) }
    dend_27 { pt3dadd( -8.97007, -134.172, 67.0791, 0.37 ) }
    dend_27 { pt3dadd( -9.04053, -136.206, 67.4821, 0.37 ) }
    dend_27 { pt3dadd( -9.1519, -139.593, 68.0983, 0.22 ) }
    dend_27 { pt3dadd( -9.18078, -140.669, 68.2731, 0.22 ) }
    dend_27 { pt3dadd( -9.22771, -141.916, 68.4445, 0.37 ) }
    dend_27 { pt3dadd( -9.29568, -143.323, 68.5876, 0.37 ) }
    dend_27 { pt3dadd( -9.42559, -145.737, 68.7836, 0.29 ) }
    dend_27 { pt3dadd( -9.53449, -147.348, 68.8803, 0.22 ) }
    dend_27 { pt3dadd( -9.6371, -148.642, 68.8835, 0.22 ) }
    dend_27 { pt3dadd( -9.75172, -150.051, 68.9807, 0.29 ) }
    dend_27 { pt3dadd( -9.918, -151.878, 69.2255, 0.29 ) }
    dend_27 { pt3dadd( -10.0728, -153.421, 69.6199, 0.29 ) }
    dend_27 { pt3dadd( -10.2043, -154.555, 69.9847, 0.29 ) }
    dend_27 { pt3dadd( -10.4476, -156.655, 70.8056, 0.15 ) }
    dend_27 { pt3dadd( -10.7001, -158.69, 71.702, 0.15 ) }
    dend_27 { pt3dadd( -10.8125, -159.629, 72.1714, 0.37 ) }
    dend_27 { pt3dadd( -11.0765, -162.12, 73.5925, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.44469, 21.7006, -5.92345, 2.8 ) }
    dend_10 { pt3dadd( -10.7069, 21.9289, -6.94916, 2.8 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -9.44469, 21.7006, -5.92345, 1.77 ) }
    dend_5 { pt3dadd( -9.20156, 22.9763, -7.09795, 1.77 ) }
    dend_5 { pt3dadd( -8.93968, 24.7104, -8.77659, 1.4 ) }
    dend_5 { pt3dadd( -8.76867, 26.0678, -10.1033, 1.4 ) }
    dend_5 { pt3dadd( -8.6724, 26.9384, -10.9769, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -8.57164, 28.077, -12.1573, 1.84 ) }
    dend_5 { pt3dadd( -8.47159, 29.4116, -13.5536, 1.84 ) }
    dend_5 { pt3dadd( -8.42427, 30.6445, -14.9066, 1.4 ) }
    dend_5 { pt3dadd( -8.39211, 31.9529, -16.3142, 1.84 ) }
    dend_5 { pt3dadd( -8.36963, 33.4974, -17.8709, 1.62 ) }
    dend_5 { pt3dadd( -8.36386, 35.3639, -19.6087, 1.77 ) }
    dend_5 { pt3dadd( -8.39795, 36.4125, -20.4621, 1.77 ) }
    dend_5 { pt3dadd( -8.52605, 38.0895, -21.6842, 1.62 ) }
    dend_5 { pt3dadd( -8.65524, 39.1501, -22.3782, 1.62 ) }
    dend_5 { pt3dadd( -8.95359, 40.8889, -23.4253, 1.47 ) }
    dend_5 { pt3dadd( -9.2112, 42.0701, -24.0724, 1.47 ) }
    dend_5 { pt3dadd( -9.74413, 44.2484, -25.2165, 1.4 ) }
    dend_5 { pt3dadd( -10.1622, 45.9095, -26.1084, 1.47 ) }
    dend_5 { pt3dadd( -10.524, 47.4492, -26.985, 1.55 ) }
    dend_5 { pt3dadd( -10.6898, 48.3482, -27.5588, 1.55 ) }
    dend_5 { pt3dadd( -10.8648, 49.9794, -28.6848, 1.25 ) }
    dend_5 { pt3dadd( -10.8857, 51.5827, -29.8234, 1.25 ) }
    dend_5 { pt3dadd( -10.7642, 52.8786, -30.7259, 1.4 ) }
    dend_5 { pt3dadd( -10.5284, 54.2456, -31.6119, 1.25 ) }
    dend_5 { pt3dadd( -10.1593, 55.8637, -32.5338, 1.25 ) }
    dend_5 { pt3dadd( -9.89125, 57.02, -33.077, 1.25 ) }
    dend_5 { pt3dadd( -9.57765, 58.3994, -33.6705, 1.47 ) }
    dend_5 { pt3dadd( -9.44031, 59.1988, -33.9721, 1.62 ) }
    dend_5 { pt3dadd( -9.36155, 60.2072, -34.2982, 1.33 ) }
    dend_5 { pt3dadd( -9.42083, 62.3956, -34.8844, 1.11 ) }
    dend_5 { pt3dadd( -9.59838, 63.7233, -35.2433, 1.11 ) }
    dend_5 { pt3dadd( -9.88775, 65.2903, -35.7008, 1.25 ) }
    dend_5 { pt3dadd( -10.0949, 66.1672, -35.9862, 1.47 ) }
    dend_5 { pt3dadd( -10.4768, 67.5368, -36.4687, 1.4 ) }
    dend_5 { pt3dadd( -10.8985, 68.7979, -36.9497, 1.25 ) }
    dend_5 { pt3dadd( -11.6655, 70.5112, -37.6322, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.92323, 64.7567, 25.6107, 0.15 ) }
    dend_3 { pt3dadd( 3.05543, 64.7378, 26.8681, 0.15 ) }
    dend_3 { pt3dadd( 2.17747, 64.7626, 27.4725, 0.15 ) }
    dend_3 { pt3dadd( 1.64378, 64.8139, 27.8503, 0.29 ) }
    dend_3 { pt3dadd( 0.277962, 65.0564, 28.8722, 0.22 ) }
    dend_3 { pt3dadd( -0.842642, 65.3305, 29.7554, 0.22 ) }
    dend_3 { pt3dadd( -1.74085, 65.6231, 30.4942, 0.37 ) }
    dend_3 { pt3dadd( -1.90719, 65.6921, 30.6432, 0.81 ) }
    dend_3 { pt3dadd( -2.35301, 65.9868, 31.0824, 0.15 ) }
    dend_3 { pt3dadd( -2.86881, 66.479, 31.6539, 0.22 ) }
    dend_3 { pt3dadd( -3.03668, 66.6901, 31.866, 0.59 ) }
    dend_3 { pt3dadd( -3.34567, 67.0818, 32.268, 1.03 ) }
    dend_3 { pt3dadd( -3.98636, 67.7804, 33.0141, 0.15 ) }
    dend_3 { pt3dadd( -4.28673, 68.0257, 33.3161, 0.29 ) }
    dend_3 { pt3dadd( -5.12333, 68.5077, 34.0523, 0.22 ) }
    dend_3 { pt3dadd( -6.16419, 68.9702, 34.8729, 0.37 ) }
    dend_3 { pt3dadd( -6.83295, 69.2044, 35.3641, 0.37 ) }
    dend_3 { pt3dadd( -7.4153, 69.3484, 35.7745, 0.44 ) }
    dend_3 { pt3dadd( -8.48306, 69.5344, 36.4874, 0.37 ) }
    dend_3 { pt3dadd( -9.58637, 69.695, 37.2068, 0.37 ) }
    dend_3 { pt3dadd( -10.3069, 69.7832, 37.6492, 0.37 ) }
    dend_3 { pt3dadd( -11.2382, 69.8819, 38.1981, 0.37 ) }
    dend_3 { pt3dadd( -12.6609, 70.0226, 39.0627, 0.37 ) }
    dend_3 { pt3dadd( -14.1751, 70.1723, 40.0546, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.92323, 64.7567, 25.6107, 0.96 ) }
    dend_2 { pt3dadd( 6.04191, 66.1764, 25.6536, 0.96 ) }
    dend_2 { pt3dadd( 6.40601, 66.6547, 25.7066, 0.88 ) }
    dend_2 { pt3dadd( 7.04116, 67.4962, 25.8521, 0.74 ) }
    dend_2 { pt3dadd( 7.73247, 68.438, 26.0655, 0.96 ) }
    dend_2 { pt3dadd( 8.36155, 69.3032, 26.2526, 0.81 ) }
    dend_2 { pt3dadd( 8.92092, 70.0846, 26.411, 0.44 ) }
    dend_2 { pt3dadd( 9.43301, 70.8796, 26.5922, 0.44 ) }
    dend_2 { pt3dadd( 9.81283, 71.5067, 26.6958, 0.66 ) }
    dend_2 { pt3dadd( 10.42, 72.5747, 26.8215, 0.52 ) }
    dend_2 { pt3dadd( 10.91, 73.4798, 26.8844, 0.74 ) }
    dend_2 { pt3dadd( 11.3295, 74.2642, 26.89, 1.11 ) }
    dend_2 { pt3dadd( 11.7113, 75.0333, 26.8681, 0.66 ) }
    dend_2 { pt3dadd( 12.2482, 76.176, 26.829, 0.66 ) }
    dend_2 { pt3dadd( 12.5949, 76.9388, 26.8133, 0.66 ) }
    dend_2 { pt3dadd( 13.0267, 77.9046, 26.8433, 0.81 ) }
    dend_2 { pt3dadd( 13.3258, 78.5839, 26.9248, 0.59 ) }
    dend_2 { pt3dadd( 13.7913, 79.5959, 27.0797, 0.52 ) }
    dend_2 { pt3dadd( 14.1308, 80.3324, 27.2048, 0.52 ) }
    dend_2 { pt3dadd( 14.3347, 80.7773, 27.295, 0.52 ) }
    dend_2 { pt3dadd( 14.7153, 81.6548, 27.5026, 0.66 ) }
    dend_2 { pt3dadd( 15.0288, 82.3989, 27.7199, 0.88 ) }
    dend_2 { pt3dadd( 15.4439, 83.3244, 28.0267, 1.03 ) }
    dend_2 { pt3dadd( 15.8955, 84.2599, 28.3786, 0.52 ) }
    dend_2 { pt3dadd( 16.274, 85.0416, 28.6987, 0.29 ) }
    dend_2 { pt3dadd( 16.6299, 85.7614, 29.0239, 0.29 ) }
    dend_2 { pt3dadd( 17.01, 86.5861, 29.4778, 0.52 ) }
    dend_2 { pt3dadd( 17.3693, 87.4088, 30.0255, 0.22 ) }
    dend_2 { pt3dadd( 17.5439, 87.8398, 30.3567, 0.15 ) }
    dend_2 { pt3dadd( 17.7407, 88.3707, 30.7698, 0.66 ) }
    dend_2 { pt3dadd( 17.923, 89.0738, 31.2969, 0.29 ) }
    dend_2 { pt3dadd( 18.027, 89.9968, 31.9787, 0.52 ) }
    dend_2 { pt3dadd( 18.0236, 90.4617, 32.3278, 1.03 ) }
    dend_2 { pt3dadd( 17.9808, 91.1605, 32.8695, 0.37 ) }
    dend_2 { pt3dadd( 17.9717, 91.7741, 33.3176, 0.44 ) }
    dend_2 { pt3dadd( 18.0442, 92.8576, 34.0126, 0.59 ) }
    dend_2 { pt3dadd( 18.1926, 93.9746, 34.5919, 0.88 ) }
    dend_2 { pt3dadd( 18.3262, 94.6467, 34.8558, 0.88 ) }
    dend_2 { pt3dadd( 18.4671, 95.2551, 35.052, 0.66 ) }
    dend_2 { pt3dadd( 18.8781, 96.5949, 35.3502, 0.29 ) }
    dend_2 { pt3dadd( 19.2727, 97.606, 35.4715, 0.66 ) }
    dend_2 { pt3dadd( 19.6381, 98.4029, 35.49, 0.44 ) }
    dend_2 { pt3dadd( 19.8836, 98.9364, 35.475, 0.44 ) }
    dend_2 { pt3dadd( 20.2361, 99.8021, 35.4565, 0.22 ) }
    dend_2 { pt3dadd( 20.5441, 100.693, 35.4739, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 20.7172, 101.347, 35.5777, 0.66 ) }
    dend_2 { pt3dadd( 20.8347, 101.861, 35.7192, 0.88 ) }
    dend_2 { pt3dadd( 21.0167, 102.721, 36.0355, 0.52 ) }
    dend_2 { pt3dadd( 21.1265, 103.389, 36.3755, 0.52 ) }
    dend_2 { pt3dadd( 21.2077, 104.257, 36.9525, 0.52 ) }
    dend_2 { pt3dadd( 21.2466, 105.458, 37.8987, 0.52 ) }
    dend_2 { pt3dadd( 21.2501, 106.057, 38.4287, 0.96 ) }
    dend_2 { pt3dadd( 21.2561, 106.811, 39.1639, 0.66 ) }
    dend_2 { pt3dadd( 21.2966, 107.699, 40.0992, 0.22 ) }
    dend_2 { pt3dadd( 21.336, 108.153, 40.5883, 0.22 ) }
    dend_2 { pt3dadd( 21.4097, 108.653, 41.097, 0.29 ) }
    dend_2 { pt3dadd( 21.5798, 109.349, 41.7118, 0.37 ) }
    dend_2 { pt3dadd( 21.894, 110.201, 42.3696, 0.52 ) }
    dend_2 { pt3dadd( 22.2116, 110.806, 42.7783, 0.81 ) }
    dend_2 { pt3dadd( 22.5535, 111.313, 43.0388, 0.81 ) }
    dend_2 { pt3dadd( 23.2483, 112.21, 43.3919, 0.22 ) }
    dend_2 { pt3dadd( 23.7343, 112.814, 43.6306, 0.59 ) }
    dend_2 { pt3dadd( 24.4571, 113.693, 43.9636, 0.59 ) }
    dend_2 { pt3dadd( 25.0512, 114.418, 44.2401, 0.22 ) }
    dend_2 { pt3dadd( 25.7809, 115.369, 44.6308, 0.15 ) }
    dend_2 { pt3dadd( 26.2735, 116.106, 44.95, 0.15 ) }
    dend_2 { pt3dadd( 26.9571, 117.439, 45.6886, 0.59 ) }
    dend_2 { pt3dadd( 27.1338, 117.93, 46.0185, 0.59 ) }
    dend_2 { pt3dadd( 27.2861, 118.585, 46.5093, 0.59 ) }
    dend_2 { pt3dadd( 27.3867, 119.189, 46.9723, 0.29 ) }
    dend_2 { pt3dadd( 27.4831, 119.875, 47.5128, 0.22 ) }
    dend_2 { pt3dadd( 27.7167, 121.145, 48.455, 0.22 ) }
    dend_2 { pt3dadd( 27.8222, 121.531, 48.6924, 0.22 ) }
    dend_2 { pt3dadd( 28.043, 122.211, 49.0882, 0.52 ) }
    dend_2 { pt3dadd( 28.3335, 122.994, 49.5111, 0.59 ) }
    dend_2 { pt3dadd( 28.5351, 123.484, 49.7475, 0.59 ) }
    dend_2 { pt3dadd( 28.9346, 124.393, 50.1724, 0.29 ) }
    dend_2 { pt3dadd( 29.2138, 125.035, 50.4393, 0.29 ) }
    dend_2 { pt3dadd( 29.5329, 125.9, 50.8011, 0.37 ) }
    dend_2 { pt3dadd( 29.6966, 126.471, 51.0384, 0.29 ) }
    dend_2 { pt3dadd( 29.8004, 127.148, 51.3591, 0.44 ) }
    dend_2 { pt3dadd( 29.8753, 128.263, 51.9286, 0.44 ) }
    dend_2 { pt3dadd( 29.8951, 129.053, 52.3455, 0.66 ) }
    dend_2 { pt3dadd( 29.9068, 129.786, 52.746, 0.88 ) }
    dend_2 { pt3dadd( 29.9254, 130.756, 53.2668, 0.66 ) }
    dend_2 { pt3dadd( 30.0434, 132.573, 54.2415, 0.37 ) }
    dend_2 { pt3dadd( 30.1448, 133.469, 54.7566, 0.22 ) }
    dend_2 { pt3dadd( 30.2867, 134.284, 55.2033, 0.52 ) }
    dend_2 { pt3dadd( 30.4241, 134.815, 55.4918, 0.59 ) }
    dend_2 { pt3dadd( 30.6942, 135.556, 55.8592, 0.29 ) }
    dend_2 { pt3dadd( 31.0061, 136.288, 56.2198, 0.22 ) }
    dend_2 { pt3dadd( 31.6001, 137.608, 56.8503, 0.15 ) }
    dend_2 { pt3dadd( 32.0116, 138.64, 57.3968, 0.37 ) }
    dend_2 { pt3dadd( 32.2316, 139.295, 57.765, 0.37 ) }
    dend_2 { pt3dadd( 32.4352, 140.031, 58.1725, 0.37 ) }
    dend_2 { pt3dadd( 32.8309, 141.603, 59.0318, 0.81 ) }
    dend_2 { pt3dadd( 33.0157, 142.431, 59.4793, 0.96 ) }
    dend_2 { pt3dadd( 33.1577, 143.087, 59.8213, 0.52 ) }
    dend_2 { pt3dadd( 33.29, 143.864, 60.2663, 0.22 ) }
    dend_2 { pt3dadd( 33.4245, 144.871, 60.8326, 0.29 ) }
    dend_2 { pt3dadd( 33.5614, 145.899, 61.3776, 0.22 ) }
    dend_2 { pt3dadd( 33.6977, 146.75, 61.7775, 0.74 ) }
    dend_2 { pt3dadd( 33.8971, 147.992, 62.3612, 0.29 ) }
    dend_2 { pt3dadd( 34.0903, 149.348, 63.0476, 0.52 ) }
    dend_2 { pt3dadd( 34.187, 150.072, 63.4427, 0.59 ) }
    dend_2 { pt3dadd( 34.2846, 150.906, 63.9172, 0.29 ) }
    dend_2 { pt3dadd( 34.3447, 151.519, 64.2357, 0.29 ) }
    dend_2 { pt3dadd( 34.3981, 152.269, 64.6259, 0.29 ) }
    dend_2 { pt3dadd( 34.4226, 153.007, 65.0643, 0.66 ) }
    dend_2 { pt3dadd( 34.4368, 153.538, 65.4162, 0.96 ) }
    dend_2 { pt3dadd( 34.4144, 154.123, 65.8999, 0.37 ) }
    dend_2 { pt3dadd( 34.3303, 154.97, 66.6847, 0.29 ) }
    dend_2 { pt3dadd( 34.1593, 155.999, 67.6459, 0.37 ) }
    dend_2 { pt3dadd( 33.9558, 156.937, 68.5082, 0.66 ) }
    dend_2 { pt3dadd( 33.8262, 157.499, 69.0038, 0.44 ) }
    dend_2 { pt3dadd( 33.5977, 158.536, 69.8861, 0.88 ) }
    dend_2 { pt3dadd( 33.4704, 159.179, 70.408, 1.11 ) }
    dend_2 { pt3dadd( 33.2456, 160.406, 71.3272, 0.22 ) }
    dend_2 { pt3dadd( 33.1696, 161.028, 71.6833, 0.22 ) }
    dend_2 { pt3dadd( 33.11, 161.673, 71.9766, 0.15 ) }
    dend_2 { pt3dadd( 33.0355, 162.426, 72.2522, 0.15 ) }
    dend_2 { pt3dadd( 32.9842, 162.982, 72.4152, 0.15 ) }
    dend_2 { pt3dadd( 32.8852, 163.873, 72.6792, 0.37 ) }
    dend_2 { pt3dadd( 32.793, 164.765, 72.9538, 0.37 ) }
    dend_2 { pt3dadd( 32.7295, 165.313, 73.1295, 0.22 ) }
    dend_2 { pt3dadd( 32.6367, 166.121, 73.3959, 0.44 ) }
    dend_2 { pt3dadd( 32.5926, 166.558, 73.5392, 0.44 ) }
    dend_2 { pt3dadd( 32.5512, 167.183, 73.7421, 0.44 ) }
    dend_2 { pt3dadd( 32.5547, 167.736, 73.9048, 0.66 ) }
    dend_2 { pt3dadd( 32.593, 168.345, 74.1124, 0.37 ) }
    dend_2 { pt3dadd( 32.683, 169.034, 74.3725, 0.37 ) }
    dend_2 { pt3dadd( 32.8412, 169.769, 74.677, 0.22 ) }
    dend_2 { pt3dadd( 32.9274, 170.09, 74.8114, 0.22 ) }
    dend_2 { pt3dadd( 33.1662, 170.919, 75.1537, 0.22 ) }
    dend_2 { pt3dadd( 33.5116, 172.007, 75.554, 0.52 ) }
    dend_2 { pt3dadd( 33.7239, 172.646, 75.7633, 0.96 ) }
    dend_2 { pt3dadd( 33.8802, 173.12, 75.8987, 0.96 ) }
    dend_2 { pt3dadd( 34.1871, 174.069, 76.1335, 0.22 ) }
    dend_2 { pt3dadd( 34.4185, 174.84, 76.284, 0.29 ) }
    dend_2 { pt3dadd( 34.6921, 175.815, 76.3975, 0.29 ) }
    dend_2 { pt3dadd( 34.848, 176.395, 76.4152, 0.81 ) }
    dend_2 { pt3dadd( 34.9798, 176.908, 76.4178, 0.52 ) }
    dend_2 { pt3dadd( 35.1882, 177.746, 76.3921, 0.37 ) }
    dend_2 { pt3dadd( 35.3477, 178.336, 76.3083, 0.37 ) }
    dend_2 { pt3dadd( 35.5537, 179.099, 76.1562, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 35.7046, 179.679, 76.0331, 0.74 ) }
    dend_2 { pt3dadd( 35.9053, 180.402, 75.8585, 0.29 ) }
    dend_2 { pt3dadd( 36.1035, 181.116, 75.6794, 0.37 ) }
    dend_2 { pt3dadd( 36.5281, 182.696, 75.303, 0.37 ) }
    dend_2 { pt3dadd( 36.741, 183.461, 75.1256, 0.52 ) }
    dend_2 { pt3dadd( 36.9146, 184.052, 75.0175, 0.52 ) }
    dend_2 { pt3dadd( 37.0916, 184.515, 74.9534, 0.52 ) }
    dend_2 { pt3dadd( 37.3823, 185.166, 74.9575, 0.59 ) }
    dend_2 { pt3dadd( 37.6886, 185.794, 75.0533, 0.22 ) }
    dend_2 { pt3dadd( 38.1902, 186.78, 75.3848, 0.44 ) }
    dend_2 { pt3dadd( 38.6414, 187.566, 75.7339, 0.52 ) }
    dend_2 { pt3dadd( 39.3733, 188.762, 76.4496, 0.29 ) }
    dend_2 { pt3dadd( 40.025, 189.757, 77.292, 0.44 ) }
    dend_2 { pt3dadd( 40.3786, 190.29, 77.928, 0.44 ) }
    dend_2 { pt3dadd( 40.7398, 190.906, 78.9497, 0.44 ) }
    dend_2 { pt3dadd( 40.918, 191.299, 79.7362, 0.44 ) }
    dend_2 { pt3dadd( 41.0398, 191.76, 80.7662, 0.44 ) }
    dend_2 { pt3dadd( 41.0879, 192.304, 82.049, 0.22 ) }
    dend_2 { pt3dadd( 41.0838, 192.802, 83.198, 0.74 ) }
    dend_2 { pt3dadd( 41.0173, 193.404, 84.4857, 0.74 ) }
    dend_2 { pt3dadd( 40.9302, 193.862, 85.3055, 0.59 ) }
    dend_2 { pt3dadd( 40.7563, 194.548, 86.3454, 0.22 ) }
    dend_2 { pt3dadd( 40.6813, 194.851, 86.7184, 0.15 ) }
    dend_2 { pt3dadd( 40.5282, 195.472, 87.3117, 0.29 ) }
    dend_2 { pt3dadd( 40.3539, 196.229, 87.8824, 0.29 ) }
    dend_2 { pt3dadd( 40.1808, 197.004, 88.3503, 0.29 ) }
    dend_2 { pt3dadd( 40.0665, 197.458, 88.6037, 0.52 ) }
    dend_2 { pt3dadd( 39.9415, 197.974, 88.8508, 0.88 ) }
    dend_2 { pt3dadd( 39.7127, 198.87, 89.2389, 0.52 ) }
    dend_2 { pt3dadd( 39.5863, 199.493, 89.4135, 0.52 ) }
    dend_2 { pt3dadd( 39.474, 200.173, 89.512, 0.22 ) }
    dend_2 { pt3dadd( 39.3354, 200.928, 89.5808, 0.22 ) }
    dend_2 { pt3dadd( 39.2382, 201.433, 89.6184, 0.52 ) }
    dend_2 { pt3dadd( 39.1602, 201.837, 89.6406, 0.81 ) }
    dend_2 { pt3dadd( 38.8619, 203.449, 89.6953, 0.22 ) }
    dend_2 { pt3dadd( 38.7029, 204.238, 89.7063, 0.22 ) }
    dend_2 { pt3dadd( 38.3968, 205.651, 89.7092, 0.22 ) }
    dend_2 { pt3dadd( 38.3414, 205.935, 89.6953, 0.37 ) }
    dend_2 { pt3dadd( 38.2432, 206.471, 89.6731, 0.96 ) }
    dend_2 { pt3dadd( 38.2069, 206.682, 89.6705, 0.96 ) }
    dend_2 { pt3dadd( 38.0633, 207.559, 89.7027, 0.22 ) }
    dend_2 { pt3dadd( 38.0362, 207.798, 89.7111, 0.22 ) }
    dend_2 { pt3dadd( 37.9823, 208.695, 89.7361, 0.37 ) }
    dend_2 { pt3dadd( 37.9445, 209.259, 89.8074, 0.88 ) }
    dend_2 { pt3dadd( 37.8778, 210.394, 90.044, 0.22 ) }
    dend_2 { pt3dadd( 37.8592, 210.899, 90.187, 0.37 ) }
    dend_2 { pt3dadd( 37.8305, 211.943, 90.5702, 0.66 ) }
    dend_2 { pt3dadd( 37.7804, 212.739, 90.9414, 0.22 ) }
    dend_2 { pt3dadd( 37.6899, 213.625, 91.44, 0.66 ) }
    dend_2 { pt3dadd( 37.6275, 214.085, 91.731, 0.66 ) }
    dend_2 { pt3dadd( 37.4969, 214.765, 92.2454, 0.44 ) }
    dend_2 { pt3dadd( 37.3993, 215.103, 92.5447, 0.59 ) }
    dend_2 { pt3dadd( 37.1219, 215.838, 93.2916, 0.15 ) }
    dend_2 { pt3dadd( 36.9717, 216.124, 93.6457, 0.37 ) }
    dend_2 { pt3dadd( 36.8198, 216.368, 93.9801, 0.37 ) }
    dend_2 { pt3dadd( 36.4449, 216.883, 94.7489, 0.15 ) }
    dend_2 { pt3dadd( 36.1467, 217.264, 95.3408, 0.15 ) }
    dend_2 { pt3dadd( 36.0119, 217.483, 95.6421, 0.29 ) }
    dend_2 { pt3dadd( 35.7949, 217.951, 96.2341, 0.29 ) }
    dend_2 { pt3dadd( 35.5656, 218.626, 96.9817, 0.22 ) }
    dend_2 { pt3dadd( 35.4256, 219.232, 97.5273, 0.66 ) }
    dend_2 { pt3dadd( 35.3997, 219.38, 97.6354, 0.66 ) }
    dend_2 { pt3dadd( 35.1773, 220.304, 98.2766, 0.15 ) }
    dend_2 { pt3dadd( 34.9486, 221.019, 98.7479, 0.15 ) }
    dend_2 { pt3dadd( 34.7007, 221.567, 99.1121, 0.37 ) }
    dend_2 { pt3dadd( 34.4865, 221.922, 99.3931, 0.37 ) }
    dend_2 { pt3dadd( 34.1063, 222.506, 99.8517, 0.22 ) }
    dend_2 { pt3dadd( 33.4831, 223.434, 100.543, 0.22 ) }
    dend_2 { pt3dadd( 33.1754, 223.907, 100.875, 0.37 ) }
    dend_2 { pt3dadd( 32.4304, 225.201, 101.667, 0.15 ) }
    dend_2 { pt3dadd( 31.8281, 226.428, 102.288, 0.15 ) }
    dend_2 { pt3dadd( 31.2172, 227.971, 102.929, 0.15 ) }
    dend_2 { pt3dadd( 30.9586, 228.844, 103.218, 0.15 ) }
    dend_2 { pt3dadd( 30.7154, 230.137, 103.562, 0.15 ) }
    dend_2 { pt3dadd( 30.6597, 231.202, 103.831, 0.15 ) }
    dend_2 { pt3dadd( 30.8611, 232.797, 104.207, 0.15 ) }
    dend_2 { pt3dadd( 31.1169, 233.598, 104.391, 0.15 ) }
    dend_2 { pt3dadd( 31.4486, 234.221, 104.573, 0.15 ) }
    dend_2 { pt3dadd( 31.9416, 234.873, 104.813, 0.37 ) }
    dend_2 { pt3dadd( 33.2246, 236.123, 105.398, 0.15 ) }
    dend_2 { pt3dadd( 33.989, 236.706, 105.754, 0.15 ) }
    dend_2 { pt3dadd( 34.895, 237.278, 106.237, 0.15 ) }
    dend_2 { pt3dadd( 35.2276, 237.474, 106.424, 0.59 ) }
    dend_2 { pt3dadd( 35.8724, 237.844, 106.849, 0.29 ) }
    dend_2 { pt3dadd( 36.3422, 238.129, 107.237, 0.15 ) }
    dend_2 { pt3dadd( 36.5652, 238.299, 107.488, 0.29 ) }
    dend_2 { pt3dadd( 37.0394, 238.774, 108.181, 0.88 ) }
    dend_2 { pt3dadd( 37.2678, 239.125, 108.716, 0.22 ) }
    dend_2 { pt3dadd( 37.4586, 239.741, 109.637, 0.22 ) }
    dend_2 { pt3dadd( 37.4518, 240.053, 110.133, 0.22 ) }
    dend_2 { pt3dadd( 37.3219, 240.618, 111.105, 0.29 ) }
    dend_2 { pt3dadd( 37.1707, 241.002, 111.8, 0.15 ) }
    dend_2 { pt3dadd( 36.7682, 241.767, 113.227, 0.66 ) }
    dend_2 { pt3dadd( 36.3087, 242.49, 114.594, 0.37 ) }
    dend_2 { pt3dadd( 35.706, 243.286, 116.123, 0.15 ) }
    dend_2 { pt3dadd( 35.2706, 243.822, 117.1, 0.15 ) }
    dend_2 { pt3dadd( 34.8657, 244.301, 117.884, 0.15 ) }
    dend_2 { pt3dadd( 34.6921, 244.528, 118.176, 0.15 ) }
    dend_2 { pt3dadd( 34.3906, 245.025, 118.602, 0.52 ) }
    dend_2 { pt3dadd( 34.0494, 245.814, 118.991, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 33.5895, 247.309, 119.368, 0.15 ) }
    dend_2 { pt3dadd( 33.2834, 248.595, 119.551, 0.15 ) }
    dend_2 { pt3dadd( 33.1047, 249.749, 119.644, 0.15 ) }
    dend_2 { pt3dadd( 32.9451, 251.427, 119.729, 0.15 ) }
    dend_2 { pt3dadd( 32.865, 253.57, 119.791, 0.15 ) }
    dend_2 { pt3dadd( 32.9081, 255.072, 119.814, 0.15 ) }
    dend_2 { pt3dadd( 32.9765, 255.821, 119.824, 0.22 ) }
    dend_2 { pt3dadd( 33.1881, 257.309, 119.847, 0.07 ) }
    dend_2 { pt3dadd( 33.2726, 257.795, 119.854, 0.07 ) }
    dend_2 { pt3dadd( 33.4688, 258.77, 119.857, 0.22 ) }
    dend_2 { pt3dadd( 33.7516, 260.203, 119.901, 0.07 ) }
    dend_2 { pt3dadd( 33.8718, 260.719, 119.893, 0.07 ) }
    dend_2 { pt3dadd( 33.9733, 261.11, 119.867, 0.22 ) }
    dend_2 { pt3dadd( 34.136, 261.65, 119.812, 0.59 ) }
    dend_2 { pt3dadd( 34.6666, 263.019, 119.613, 0.07 ) }
    dend_2 { pt3dadd( 35.1053, 263.927, 119.46, 0.07 ) }
    dend_2 { pt3dadd( 35.3116, 264.295, 119.398, 0.29 ) }
    dend_2 { pt3dadd( 35.5796, 264.737, 119.326, 0.29 ) }
    dend_2 { pt3dadd( 36.1416, 265.669, 119.186, 0.07 ) }
    dend_2 { pt3dadd( 36.7288, 266.735, 119.073, 0.07 ) }
    dend_2 { pt3dadd( 36.951, 267.225, 119.045, 0.07 ) }
    dend_2 { pt3dadd( 37.0696, 267.57, 119.011, 0.29 ) }
    dend_2 { pt3dadd( 37.1613, 268.024, 118.973, 0.29 ) }
    dend_2 { pt3dadd( 37.32, 269.283, 118.878, 0.15 ) }
    dend_2 { pt3dadd( 37.3411, 270.414, 118.781, 0.15 ) }
    dend_2 { pt3dadd( 37.2772, 271.195, 118.722, 0.29 ) }
    dend_2 { pt3dadd( 37.1089, 272.524, 118.59, 0.22 ) }
    dend_2 { pt3dadd( 36.8844, 273.919, 118.447, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 42.5398, -35.3236, 37.3319, 0.88 ) }
    dend_39 { pt3dadd( 42.7765, -34.2539, 37.368, 0.88 ) }
    dend_39 { pt3dadd( 42.8953, -33.5213, 37.4489, 0.74 ) }
    dend_39 { pt3dadd( 43.0238, -32.4753, 37.5943, 0.81 ) }
    dend_39 { pt3dadd( 43.1357, -31.3128, 37.7693, 0.88 ) }
    dend_39 { pt3dadd( 43.2208, -30.2379, 37.9353, 1.4 ) }
    dend_39 { pt3dadd( 43.2757, -29.2015, 38.1343, 0.96 ) }
    dend_39 { pt3dadd( 43.2421, -27.9165, 38.4349, 0.88 ) }
    dend_39 { pt3dadd( 43.1831, -27.1744, 38.6304, 0.81 ) }
    dend_39 { pt3dadd( 43.1217, -26.7103, 38.7144, 0.81 ) }
    dend_39 { pt3dadd( 42.9821, -26.0198, 38.7615, 0.81 ) }
    dend_39 { pt3dadd( 42.6483, -24.7495, 38.7013, 1.18 ) }
    dend_39 { pt3dadd( 42.3434, -23.7739, 38.5842, 1.18 ) }
    dend_39 { pt3dadd( 41.978, -22.6583, 38.3938, 1.18 ) }
    dend_39 { pt3dadd( 41.188, -20.1386, 38.0428, 0.96 ) }
    dend_39 { pt3dadd( 40.6919, -18.3643, 37.8534, 0.59 ) }
    dend_39 { pt3dadd( 40.4127, -17.1628, 37.8045, 0.59 ) }
    dend_39 { pt3dadd( 40.2336, -16.1384, 37.8558, 0.74 ) }
    dend_39 { pt3dadd( 40.1107, -15.086, 38.0478, 1.11 ) }
    dend_39 { pt3dadd( 39.9861, -13.4364, 38.6362, 1.4 ) }
    dend_39 { pt3dadd( 39.9559, -12.1389, 39.2925, 1.4 ) }
    dend_39 { pt3dadd( 39.9648, -10.648, 40.115, 1.18 ) }
    dend_39 { pt3dadd( 39.9688, -9.54355, 40.6971, 1.47 ) }
    dend_39 { pt3dadd( 39.9497, -8.71606, 41.0476, 1.11 ) }
    dend_39 { pt3dadd( 39.8306, -7.19659, 41.4197, 0.74 ) }
    dend_39 { pt3dadd( 39.7084, -6.24315, 41.4444, 1.03 ) }
    dend_39 { pt3dadd( 39.5669, -5.38898, 41.3116, 1.11 ) }
    dend_39 { pt3dadd( 39.3073, -4.10681, 40.8745, 0.88 ) }
    dend_39 { pt3dadd( 39.0062, -2.8569, 40.2692, 0.88 ) }
    dend_39 { pt3dadd( 38.6826, -1.75946, 39.6348, 0.74 ) }
    dend_39 { pt3dadd( 38.4389, -1.03673, 39.147, 0.66 ) }
    dend_39 { pt3dadd( 38.1165, -0.172184, 38.5581, 0.59 ) }
    dend_39 { pt3dadd( 37.763, 0.808554, 37.9076, 0.81 ) }
    dend_39 { pt3dadd( 37.4023, 1.82235, 37.329, 0.88 ) }
    dend_39 { pt3dadd( 36.9624, 3.15712, 36.7068, 0.81 ) }
    dend_39 { pt3dadd( 36.6276, 4.28341, 36.2652, 0.81 ) }
    dend_39 { pt3dadd( 36.3488, 5.48098, 35.8691, 0.81 ) }
    dend_39 { pt3dadd( 36.1516, 6.81083, 35.516, 0.66 ) }
    dend_39 { pt3dadd( 36.0679, 7.99167, 35.2834, 0.88 ) }
    dend_39 { pt3dadd( 36.0566, 9.04078, 35.1052, 1.18 ) }
    dend_39 { pt3dadd( 36.0764, 9.72841, 34.9991, 1.18 ) }
    dend_39 { pt3dadd( 36.1509, 11.1184, 34.8058, 0.81 ) }
    dend_39 { pt3dadd( 36.2747, 12.6104, 34.6017, 0.96 ) }
    dend_39 { pt3dadd( 36.3794, 13.8329, 34.4059, 0.96 ) }
    dend_39 { pt3dadd( 36.4859, 14.8979, 34.1793, 1.11 ) }
    dend_39 { pt3dadd( 36.5837, 15.7552, 33.9874, 1.11 ) }
    dend_39 { pt3dadd( 36.6974, 16.6664, 33.7919, 0.88 ) }
    dend_39 { pt3dadd( 36.8563, 17.8547, 33.6044, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 42.5398, -35.3236, 37.3319, 0.88 ) }
    dend_36 { pt3dadd( 44.0685, -37.1063, 40.4191, 0.88 ) }
    dend_36 { pt3dadd( 44.6085, -37.7256, 41.3288, 0.66 ) }
    dend_36 { pt3dadd( 45.4452, -38.7294, 42.7879, 0.74 ) }
    dend_36 { pt3dadd( 45.7385, -39.1379, 43.3809, 1.03 ) }
    dend_36 { pt3dadd( 45.9808, -39.5661, 43.9562, 0.74 ) }
    dend_36 { pt3dadd( 46.2778, -40.2283, 44.8101, 0.96 ) }
    dend_36 { pt3dadd( 46.6218, -41.513, 46.183, 1.03 ) }
    dend_36 { pt3dadd( 46.8516, -42.9315, 47.7581, 0.74 ) }
    dend_36 { pt3dadd( 46.9727, -44.224, 49.2028, 1.03 ) }
    dend_36 { pt3dadd( 47.0294, -45.2876, 50.4606, 0.88 ) }
    dend_36 { pt3dadd( 47.0592, -46.3427, 51.7957, 0.81 ) }
    dend_36 { pt3dadd( 47.0423, -47.1431, 52.8328, 0.66 ) }
    dend_36 { pt3dadd( 46.9829, -48.164, 54.1202, 0.66 ) }
    dend_36 { pt3dadd( 46.9311, -49.3964, 55.5632, 0.88 ) }
    dend_36 { pt3dadd( 46.9461, -50.7385, 57.1102, 1.11 ) }
    dend_36 { pt3dadd( 47.0507, -52.1637, 58.7572, 0.96 ) }
    dend_36 { pt3dadd( 47.2157, -53.5649, 60.2879, 0.96 ) }
    dend_36 { pt3dadd( 47.3716, -54.5378, 61.2698, 0.96 ) }
    dend_36 { pt3dadd( 47.6699, -56.0729, 62.7135, 1.03 ) }
    dend_36 { pt3dadd( 47.9731, -57.5919, 64.0562, 0.81 ) }
    dend_36 { pt3dadd( 48.1855, -58.5278, 64.8183, 0.81 ) }
    dend_36 { pt3dadd( 48.4084, -59.3498, 65.4231, 0.66 ) }
    dend_36 { pt3dadd( 48.8066, -60.3804, 66.1753, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 49.479, -61.7684, 67.2345, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 1/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 14.2106, -47.2803, 12.9315, 0.29 ) }
    dend_34 { pt3dadd( 13.9819, -48.1886, 13.3956, 0.29 ) }
    dend_34 { pt3dadd( 13.7644, -49.2465, 13.9037, 0.29 ) }
    dend_34 { pt3dadd( 13.6513, -49.9445, 14.255, 0.81 ) }
    dend_34 { pt3dadd( 13.5094, -51.0775, 14.8225, 0.59 ) }
    dend_34 { pt3dadd( 13.4031, -52.2528, 15.4539, 0.44 ) }
    dend_34 { pt3dadd( 13.3552, -53.2232, 16.0233, 0.22 ) }
    dend_34 { pt3dadd( 13.3767, -53.9391, 16.4693, 0.22 ) }
    dend_34 { pt3dadd( 13.4774, -54.8415, 17.075, 0.22 ) }
    dend_34 { pt3dadd( 13.5533, -55.3953, 17.4984, 0.74 ) }
    dend_34 { pt3dadd( 13.6935, -56.4038, 18.3366, 0.74 ) }
    dend_34 { pt3dadd( 13.8181, -57.3199, 19.1348, 0.96 ) }
    dend_34 { pt3dadd( 13.8735, -57.8461, 19.5736, 1.11 ) }
    dend_34 { pt3dadd( 13.9568, -59.0431, 20.5121, 0.37 ) }
    dend_34 { pt3dadd( 14.0196, -60.0984, 21.2237, 0.22 ) }
    dend_34 { pt3dadd( 14.0624, -60.7521, 21.5861, 0.66 ) }
    dend_34 { pt3dadd( 14.1135, -61.5121, 21.8819, 0.66 ) }
    dend_34 { pt3dadd( 14.1695, -62.226, 22.0741, 0.66 ) }
    dend_34 { pt3dadd( 14.2397, -62.957, 22.2298, 0.29 ) }
    dend_34 { pt3dadd( 14.3666, -63.8771, 22.369, 0.22 ) }
    dend_34 { pt3dadd( 14.5775, -64.9685, 22.5425, 0.66 ) }
    dend_34 { pt3dadd( 14.8124, -66.0537, 22.8076, 0.88 ) }
    dend_34 { pt3dadd( 14.9787, -66.837, 23.0638, 0.37 ) }
    dend_34 { pt3dadd( 15.1875, -67.9304, 23.4889, 0.22 ) }
    dend_34 { pt3dadd( 15.2902, -68.5903, 23.7985, 0.59 ) }
    dend_34 { pt3dadd( 15.3877, -69.4142, 24.2356, 0.74 ) }
    dend_34 { pt3dadd( 15.535, -70.8712, 25.0729, 0.15 ) }
    dend_34 { pt3dadd( 15.5848, -71.4237, 25.3955, 0.15 ) }
    dend_34 { pt3dadd( 15.6379, -72.1519, 25.7874, 0.37 ) }
    dend_34 { pt3dadd( 15.7267, -73.511, 26.4094, 0.22 ) }
    dend_34 { pt3dadd( 15.7619, -73.9452, 26.5756, 0.66 ) }
    dend_34 { pt3dadd( 15.8193, -74.4718, 26.7445, 1.11 ) }
    dend_34 { pt3dadd( 15.9322, -75.2499, 26.9477, 0.37 ) }
    dend_34 { pt3dadd( 16.1393, -76.3461, 27.2242, 0.15 ) }
    dend_34 { pt3dadd( 16.2961, -77.0517, 27.4296, 0.44 ) }
    dend_34 { pt3dadd( 16.6, -78.3088, 27.8565, 0.15 ) }
    dend_34 { pt3dadd( 16.8509, -79.3397, 28.2638, 0.15 ) }
    dend_34 { pt3dadd( 16.9924, -79.9472, 28.5445, 0.81 ) }
    dend_34 { pt3dadd( 17.1015, -80.439, 28.7869, 1.18 ) }
    dend_34 { pt3dadd( 17.403, -82.053, 29.6447, 0.15 ) }
    dend_34 { pt3dadd( 17.537, -82.9629, 30.135, 0.15 ) }
    dend_34 { pt3dadd( 17.5769, -83.4365, 30.3954, 0.81 ) }
    dend_34 { pt3dadd( 17.6024, -84.1922, 30.868, 0.81 ) }
    dend_34 { pt3dadd( 17.6029, -84.931, 31.3788, 0.22 ) }
    dend_34 { pt3dadd( 17.5775, -85.9807, 32.1783, 0.15 ) }
    dend_34 { pt3dadd( 17.5627, -86.3418, 32.4592, 0.22 ) }
    dend_34 { pt3dadd( 17.5268, -87.2624, 33.2064, 0.15 ) }
    dend_34 { pt3dadd( 17.486, -88.6043, 34.4314, 0.15 ) }
    dend_34 { pt3dadd( 17.4767, -89.036, 34.8467, 0.59 ) }
    dend_34 { pt3dadd( 17.455, -90.1223, 35.9298, 0.15 ) }
    dend_34 { pt3dadd( 17.4488, -90.6233, 36.4065, 0.15 ) }
    dend_34 { pt3dadd( 17.4485, -91.2772, 36.9757, 0.81 ) }
    dend_34 { pt3dadd( 17.4949, -92.7611, 38.0511, 0.15 ) }
    dend_34 { pt3dadd( 17.5342, -93.4772, 38.4682, 0.15 ) }
    dend_34 { pt3dadd( 17.5662, -93.9643, 38.713, 0.52 ) }
    dend_34 { pt3dadd( 17.6206, -94.6514, 38.9846, 0.66 ) }
    dend_34 { pt3dadd( 17.6781, -95.498, 39.253, 0.29 ) }
    dend_34 { pt3dadd( 17.7228, -96.5227, 39.465, 0.15 ) }
    dend_34 { pt3dadd( 17.7271, -97.0283, 39.517, 0.15 ) }
    dend_34 { pt3dadd( 17.7133, -97.5675, 39.5668, 0.59 ) }
    dend_34 { pt3dadd( 17.6725, -98.2421, 39.5906, 0.88 ) }
    dend_34 { pt3dadd( 17.5866, -99.0768, 39.5788, 0.29 ) }
    dend_34 { pt3dadd( 17.477, -99.7947, 39.5349, 0.22 ) }
    dend_34 { pt3dadd( 17.3051, -100.798, 39.4405, 0.07 ) }
    dend_34 { pt3dadd( 17.2112, -101.46, 39.337, 0.07 ) }
    dend_34 { pt3dadd( 17.0828, -102.606, 39.116, 0.07 ) }
    dend_34 { pt3dadd( 17.0668, -102.872, 39.0595, 0.29 ) }
    dend_34 { pt3dadd( 17.0718, -103.619, 38.9148, 0.66 ) }
    dend_34 { pt3dadd( 17.1203, -104.565, 38.7582, 0.15 ) }
    dend_34 { pt3dadd( 17.1925, -105.646, 38.6289, 0.15 ) }
    dend_34 { pt3dadd( 17.2429, -106.39, 38.5468, 0.29 ) }
    dend_34 { pt3dadd( 17.2915, -107.283, 38.4786, 0.15 ) }
    dend_34 { pt3dadd( 17.3199, -108.062, 38.4129, 0.37 ) }
    dend_34 { pt3dadd( 17.3275, -108.596, 38.3477, 0.37 ) }
    dend_34 { pt3dadd( 17.3073, -109.608, 38.2018, 0.22 ) }
    dend_34 { pt3dadd( 17.2664, -110.463, 38.0805, 0.44 ) }
    dend_34 { pt3dadd( 17.2153, -111.329, 37.8812, 0.96 ) }
    dend_34 { pt3dadd( 17.1803, -111.913, 37.696, 0.22 ) }
    dend_34 { pt3dadd( 17.1234, -113.112, 37.2407, 0.15 ) }
    dend_34 { pt3dadd( 17.1173, -113.359, 37.1435, 0.15 ) }
    dend_34 { pt3dadd( 17.1276, -114.355, 36.7114, 0.29 ) }
    dend_34 { pt3dadd( 17.166, -115.492, 36.1723, 0.15 ) }
    dend_34 { pt3dadd( 17.2041, -116.092, 35.8537, 0.15 ) }
    dend_34 { pt3dadd( 17.221, -116.342, 35.7185, 0.37 ) }
    dend_34 { pt3dadd( 17.2636, -117.004, 35.3782, 0.88 ) }
    dend_34 { pt3dadd( 17.3668, -118.405, 34.7109, 0.15 ) }
    dend_34 { pt3dadd( 17.4168, -119.129, 34.4064, 0.15 ) }
    dend_34 { pt3dadd( 17.453, -119.847, 34.1777, 0.15 ) }
    dend_34 { pt3dadd( 17.4614, -120.507, 34.0146, 0.66 ) }
    dend_34 { pt3dadd( 17.447, -121.247, 33.8911, 0.22 ) }
    dend_34 { pt3dadd( 17.4102, -121.959, 33.828, 0.22 ) }
    dend_34 { pt3dadd( 17.3537, -122.598, 33.8312, 0.15 ) }
    dend_34 { pt3dadd( 17.3046, -123.064, 33.8489, 0.15 ) }
    dend_34 { pt3dadd( 17.1986, -123.941, 33.8796, 0.66 ) }
    dend_34 { pt3dadd( 16.9988, -125.344, 33.9263, 0.15 ) }
    dend_34 { pt3dadd( 16.9203, -125.837, 33.9425, 0.15 ) }
    dend_34 { pt3dadd( 16.8508, -126.254, 33.9565, 0.22 ) }
    dend_34 { pt3dadd( 16.7609, -126.852, 33.9771, 0.15 ) }
    dend_34 { pt3dadd( 16.6756, -127.459, 33.9991, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 16.542, -128.402, 34.0365, 0.44 ) }
    dend_34 { pt3dadd( 16.401, -129.402, 34.0812, 0.15 ) }
    dend_34 { pt3dadd( 16.3248, -130.001, 34.0871, 0.15 ) }
    dend_34 { pt3dadd( 16.2609, -130.533, 34.0445, 0.15 ) }
    dend_34 { pt3dadd( 16.1871, -131.136, 33.9519, 0.15 ) }
    dend_34 { pt3dadd( 16.0902, -131.835, 33.8083, 0.44 ) }
    dend_34 { pt3dadd( 15.9538, -132.681, 33.609, 0.44 ) }
    dend_34 { pt3dadd( 15.7417, -133.803, 33.3872, 0.15 ) }
    dend_34 { pt3dadd( 15.4639, -135.239, 33.1676, 0.15 ) }
    dend_34 { pt3dadd( 15.3342, -135.92, 33.0883, 0.44 ) }
    dend_34 { pt3dadd( 15.1578, -136.896, 33.0126, 0.22 ) }
    dend_34 { pt3dadd( 14.9991, -137.95, 33.0321, 0.22 ) }
    dend_34 { pt3dadd( 14.7881, -139.512, 33.2054, 0.07 ) }
    dend_34 { pt3dadd( 14.6627, -140.559, 33.4291, 0.07 ) }
    dend_34 { pt3dadd( 14.6226, -140.943, 33.538, 0.29 ) }
    dend_34 { pt3dadd( 14.5567, -141.648, 33.7504, 0.96 ) }
    dend_34 { pt3dadd( 14.402, -143.539, 34.393, 0.15 ) }
    dend_34 { pt3dadd( 14.3383, -144.246, 34.6486, 0.15 ) }
    dend_34 { pt3dadd( 14.2579, -144.879, 34.8363, 0.15 ) }
    dend_34 { pt3dadd( 14.1166, -145.746, 35.0983, 0.37 ) }
    dend_34 { pt3dadd( 14.0244, -146.231, 35.2474, 0.37 ) }
    dend_34 { pt3dadd( 13.7673, -147.36, 35.5793, 0.15 ) }
    dend_34 { pt3dadd( 13.5865, -148.0, 35.7665, 0.74 ) }
    dend_34 { pt3dadd( 13.1197, -149.429, 36.3611, 0.15 ) }
    dend_34 { pt3dadd( 12.7456, -150.375, 36.8553, 0.15 ) }
    dend_34 { pt3dadd( 12.497, -150.881, 37.2167, 0.59 ) }
    dend_34 { pt3dadd( 12.2118, -151.371, 37.6603, 0.22 ) }
    dend_34 { pt3dadd( 11.6708, -152.175, 38.4999, 0.15 ) }
    dend_34 { pt3dadd( 10.9838, -153.069, 39.602, 0.15 ) }
    dend_34 { pt3dadd( 10.6251, -153.474, 40.1819, 0.52 ) }
    dend_34 { pt3dadd( 9.83772, -154.223, 41.3306, 0.15 ) }
    dend_34 { pt3dadd( 9.2977, -154.658, 42.1331, 0.15 ) }
    dend_34 { pt3dadd( 9.07089, -154.823, 42.4798, 0.44 ) }
    dend_34 { pt3dadd( 8.64574, -155.109, 43.1171, 0.81 ) }
    dend_34 { pt3dadd( 8.25523, -155.381, 43.6798, 0.81 ) }
    dend_34 { pt3dadd( 7.34479, -156.076, 45.0528, 0.15 ) }
    dend_34 { pt3dadd( 6.43539, -156.836, 46.4174, 0.15 ) }
    dend_34 { pt3dadd( 6.16437, -157.105, 46.8423, 0.15 ) }
    dend_34 { pt3dadd( 5.95357, -157.359, 47.2202, 0.66 ) }
    dend_34 { pt3dadd( 5.53766, -158.006, 48.0481, 0.22 ) }
    dend_34 { pt3dadd( 5.09752, -158.903, 49.1545, 0.15 ) }
    dend_34 { pt3dadd( 4.99809, -159.159, 49.4925, 0.22 ) }
    dend_34 { pt3dadd( 4.7385, -159.883, 50.5106, 0.15 ) }
    dend_34 { pt3dadd( 4.52111, -160.473, 51.4056, 0.44 ) }
    dend_34 { pt3dadd( 4.35403, -160.926, 52.1204, 0.88 ) }
    dend_34 { pt3dadd( 3.75772, -162.311, 54.3758, 0.15 ) }
    dend_34 { pt3dadd( 3.17655, -163.401, 56.1435, 0.15 ) }
    dend_34 { pt3dadd( 2.81421, -163.987, 57.0911, 0.15 ) }
    dend_34 { pt3dadd( 2.50182, -164.418, 57.7722, 0.37 ) }
    dend_34 { pt3dadd( 2.20325, -164.784, 58.3187, 0.37 ) }
    dend_34 { pt3dadd( 1.42322, -165.633, 59.5747, 0.07 ) }
    dend_34 { pt3dadd( 0.815059, -166.25, 60.3309, 0.07 ) }
    dend_34 { pt3dadd( 0.482729, -166.584, 60.6887, 0.15 ) }
    dend_34 { pt3dadd( -0.271746, -167.328, 61.4741, 0.07 ) }
    dend_34 { pt3dadd( -0.698364, -167.742, 61.9197, 0.29 ) }
    dend_34 { pt3dadd( -1.2821, -168.308, 62.535, 0.29 ) }
    dend_34 { pt3dadd( -1.97374, -169.047, 63.2999, 0.15 ) }
    dend_34 { pt3dadd( -2.30106, -169.424, 63.6819, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 14.2106, -47.2803, 12.9315, 0.22 ) }
    dend_33 { pt3dadd( 15.1619, -48.2455, 8.98339, 0.22 ) }
    dend_33 { pt3dadd( 15.4437, -48.5351, 7.99093, 0.22 ) }
    dend_33 { pt3dadd( 15.6862, -48.8136, 7.14534, 0.52 ) }
    dend_33 { pt3dadd( 15.8802, -49.0668, 6.43646, 0.88 ) }
    dend_33 { pt3dadd( 16.1718, -49.5184, 5.27266, 0.96 ) }
    dend_33 { pt3dadd( 16.4315, -50.0283, 4.05469, 0.74 ) }
    dend_33 { pt3dadd( 16.63, -50.7389, 2.71542, 0.29 ) }
    dend_33 { pt3dadd( 16.6926, -51.2797, 1.80966, 0.37 ) }
    dend_33 { pt3dadd( 16.6954, -51.7133, 1.16751, 0.37 ) }
    dend_33 { pt3dadd( 16.6676, -52.1174, 0.605697, 0.74 ) }
    dend_33 { pt3dadd( 16.6163, -52.6554, -0.134094, 0.44 ) }
    dend_33 { pt3dadd( 16.5563, -53.594, -1.51464, 0.44 ) }
    dend_33 { pt3dadd( 16.5843, -53.9152, -2.08078, 0.44 ) }
    dend_33 { pt3dadd( 16.7132, -54.3081, -2.8747, 0.22 ) }
    dend_33 { pt3dadd( 16.9746, -54.8224, -3.96824, 0.22 ) }
    dend_33 { pt3dadd( 17.2172, -55.239, -4.86852, 0.44 ) }
    dend_33 { pt3dadd( 17.4358, -55.6509, -5.71421, 0.59 ) }
    dend_33 { pt3dadd( 17.7196, -56.4712, -7.2736, 0.29 ) }
    dend_33 { pt3dadd( 17.768, -56.9003, -8.05448, 0.22 ) }
    dend_33 { pt3dadd( 17.7042, -57.3183, -8.7338, 0.29 ) }
    dend_33 { pt3dadd( 17.5185, -57.8638, -9.49307, 0.44 ) }
    dend_33 { pt3dadd( 17.1704, -58.586, -10.4028, 0.74 ) }
    dend_33 { pt3dadd( 16.6706, -59.4142, -11.3641, 0.96 ) }
    dend_33 { pt3dadd( 16.4224, -59.7736, -11.7604, 0.96 ) }
    dend_33 { pt3dadd( 15.9076, -60.4964, -12.5715, 0.37 ) }
    dend_33 { pt3dadd( 15.406, -61.2382, -13.4601, 0.44 ) }
    dend_33 { pt3dadd( 15.1119, -61.7622, -14.1371, 0.37 ) }
    dend_33 { pt3dadd( 14.9612, -62.1542, -14.6705, 0.22 ) }
    dend_33 { pt3dadd( 14.9058, -62.5622, -15.2726, 0.22 ) }
    dend_33 { pt3dadd( 14.9483, -62.8038, -15.7134, 0.29 ) }
    dend_33 { pt3dadd( 15.1324, -63.1174, -16.4855, 0.44 ) }
    dend_33 { pt3dadd( 15.3752, -63.3794, -17.3209, 0.44 ) }
    dend_33 { pt3dadd( 15.5666, -63.5608, -17.9621, 0.66 ) }
    dend_33 { pt3dadd( 15.8953, -63.8873, -19.1333, 0.81 ) }
    dend_33 { pt3dadd( 16.2428, -64.3163, -20.5895, 0.96 ) }
    dend_33 { pt3dadd( 16.4785, -64.7416, -21.8731, 0.96 ) }
    dend_33 { pt3dadd( 16.6231, -65.1004, -22.8492, 0.96 ) }
    dend_33 { pt3dadd( 16.6972, -65.3219, -23.4407, 0.66 ) }
    dend_33 { pt3dadd( 16.8107, -65.6793, -24.3779, 0.74 ) }
    dend_33 { pt3dadd( 16.9321, -66.0441, -25.2697, 0.74 ) }
    dend_33 { pt3dadd( 17.2235, -66.7539, -26.9342, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( 17.5673, -67.4608, -28.606, 0.29 ) }
    dend_33 { pt3dadd( 17.8319, -67.9544, -29.8834, 0.29 ) }
    dend_33 { pt3dadd( 18.0378, -68.2828, -30.7929, 0.29 ) }
    dend_33 { pt3dadd( 18.2383, -68.5633, -31.6248, 0.37 ) }
    dend_33 { pt3dadd( 18.5647, -68.972, -32.927, 0.52 ) }
    dend_33 { pt3dadd( 18.8578, -69.3275, -34.1063, 0.44 ) }
    dend_33 { pt3dadd( 19.2912, -69.9446, -36.0454, 0.44 ) }
    dend_33 { pt3dadd( 21.3783, -74.1993, -42.899, 0.44 ) }
    dend_33 { pt3dadd( 23.0533, -79.3605, -49.153, 0.44 ) }
    dend_33 { pt3dadd( 24.973, -83.7069, -55.9921, 0.44 ) }
    dend_33 { pt3dadd( 26.6151, -88.0112, -62.9321, 0.44 ) }
    dend_33 { pt3dadd( 26.6539, -91.4082, -70.5818, 0.44 ) }
    dend_33 { pt3dadd( 27.8437, -93.3027, -78.692, 0.44 ) }
    dend_33 { pt3dadd( 29.0589, -95.4201, -86.7385, 0.44 ) }
    dend_33 { pt3dadd( 31.3763, -98.2869, -94.2746, 0.44 ) }
    dend_33 { pt3dadd( 33.629, -100.095, -102.178, 0.44 ) }
    dend_33 { pt3dadd( 34.9367, -100.524, -110.49, 0.44 ) }
    dend_33 { pt3dadd( 37.0753, -100.108, -118.623, 0.44 ) }
    dend_33 { pt3dadd( 38.3037, -100.722, -126.935, 0.44 ) }
    dend_33 { pt3dadd( 39.6356, -102.217, -135.113, 0.44 ) }
    dend_33 { pt3dadd( 41.8556, -104.851, -142.77, 0.44 ) }
    dend_33 { pt3dadd( 44.4776, -107.345, -150.35, 0.44 ) }
    dend_33 { pt3dadd( 47.1367, -110.873, -157.455, 0.44 ) }
    dend_33 { pt3dadd( 49.2753, -114.672, -164.581, 0.44 ) }
    dend_33 { pt3dadd( 51.0974, -118.654, -171.686, 0.44 ) }
    dend_33 { pt3dadd( 53.8217, -121.689, -179.011, 0.44 ) }
    dend_33 { pt3dadd( 54.8793, -124.541, -186.83, 0.44 ) }
    dend_33 { pt3dadd( 56.8868, -128.271, -194.034, 0.44 ) }
    dend_33 { pt3dadd( 58.4259, -133.458, -200.299, 0.44 ) }
    dend_33 { pt3dadd( 61.0919, -138.709, -206.111, 0.44 ) }
    dend_33 { pt3dadd( 64.6254, -144.522, -210.747, 0.44 ) }
    dend_33 { pt3dadd( 67.6084, -150.425, -215.638, 0.44 ) }
    dend_33 { pt3dadd( 69.6329, -157.092, -219.888, 0.44 ) }
    dend_33 { pt3dadd( 72.83, -162.235, -225.536, 0.44 ) }
    dend_33 { pt3dadd( 75.8321, -167.949, -230.66, 0.44 ) }
    dend_33 { pt3dadd( 79.3692, -174.0, -234.94, 0.44 ) }
    dend_33 { pt3dadd( 83.294, -180.132, -238.725, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -11.0765, -162.12, 73.5925, 0.15 ) }
    dend_29 { pt3dadd( -11.0791, -163.013, 74.0539, 0.15 ) }
    dend_29 { pt3dadd( -11.093, -163.654, 74.4422, 0.22 ) }
    dend_29 { pt3dadd( -11.1083, -164.112, 74.7309, 0.22 ) }
    dend_29 { pt3dadd( -11.1328, -164.804, 75.1796, 0.37 ) }
    dend_29 { pt3dadd( -11.1356, -165.707, 75.8524, 0.15 ) }
    dend_29 { pt3dadd( -11.0751, -167.2, 77.0562, 0.15 ) }
    dend_29 { pt3dadd( -11.0347, -167.645, 77.5128, 0.15 ) }
    dend_29 { pt3dadd( -10.982, -168.069, 78.0097, 0.29 ) }
    dend_29 { pt3dadd( -10.7651, -169.408, 79.7561, 0.15 ) }
    dend_29 { pt3dadd( -10.5589, -170.295, 81.0943, 0.15 ) }
    dend_29 { pt3dadd( -10.4265, -170.684, 81.7705, 0.15 ) }
    dend_29 { pt3dadd( -9.95118, -171.664, 83.6636, 0.15 ) }
    dend_29 { pt3dadd( -9.72248, -172.015, 84.5233, 0.15 ) }
    dend_29 { pt3dadd( -9.4475, -172.36, 85.5505, 0.22 ) }
    dend_29 { pt3dadd( -9.05125, -172.79, 87.0111, 0.44 ) }
    dend_29 { pt3dadd( -8.79057, -173.068, 87.9609, 0.44 ) }
    dend_29 { pt3dadd( -8.2971, -173.593, 89.6909, 0.15 ) }
    dend_29 { pt3dadd( -7.21984, -174.674, 93.1224, 0.22 ) }
    dend_29 { pt3dadd( -6.54288, -175.328, 95.1717, 0.22 ) }
    dend_29 { pt3dadd( -6.31257, -175.549, 95.807, 0.22 ) }
    dend_29 { pt3dadd( -5.89942, -175.968, 96.8328, 0.22 ) }
    dend_29 { pt3dadd( -5.47296, -176.405, 97.7034, 0.22 ) }
    dend_29 { pt3dadd( -4.81905, -177.068, 98.7052, 0.22 ) }
    dend_29 { pt3dadd( -4.35573, -177.543, 99.228, 0.22 ) }
    dend_29 { pt3dadd( -3.7184, -178.247, 99.8729, 0.07 ) }
    dend_29 { pt3dadd( -2.77311, -179.341, 100.879, 0.07 ) }
    dend_29 { pt3dadd( -1.67238, -180.647, 102.04, 0.07 ) }
    dend_29 { pt3dadd( -0.828033, -181.662, 102.95, 0.07 ) }
    dend_29 { pt3dadd( 0.357688, -183.184, 104.248, 0.07 ) }
    dend_29 { pt3dadd( 1.34625, -184.525, 105.424, 0.07 ) }
    dend_29 { pt3dadd( 2.2277, -185.838, 106.741, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 69/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.0765, -162.12, 73.5925, 0.22 ) }
    dend_28 { pt3dadd( -11.9442, -163.942, 72.7581, 0.22 ) }
    dend_28 { pt3dadd( -12.5879, -165.506, 72.5023, 0.15 ) }
    dend_28 { pt3dadd( -13.0242, -166.696, 72.5518, 0.15 ) }
    dend_28 { pt3dadd( -13.4206, -167.845, 72.7262, 0.15 ) }
    dend_28 { pt3dadd( -13.8084, -168.974, 72.9551, 0.15 ) }
    dend_28 { pt3dadd( -14.6377, -171.476, 73.4933, 0.15 ) }
    dend_28 { pt3dadd( -14.9703, -172.627, 73.8748, 0.15 ) }
    dend_28 { pt3dadd( -15.1773, -173.357, 74.1586, 0.37 ) }
    dend_28 { pt3dadd( -15.4832, -174.318, 74.4856, 0.59 ) }
    dend_28 { pt3dadd( -16.0471, -175.946, 74.919, 0.22 ) }
    dend_28 { pt3dadd( -16.5693, -177.303, 75.1642, 0.22 ) }
    dend_28 { pt3dadd( -17.042, -178.375, 75.2015, 0.15 ) }
    dend_28 { pt3dadd( -17.4966, -179.305, 75.1847, 0.15 ) }
    dend_28 { pt3dadd( -18.2658, -180.737, 75.1497, 0.15 ) }
    dend_28 { pt3dadd( -18.6462, -181.374, 75.0943, 0.15 ) }
    dend_28 { pt3dadd( -19.0597, -181.983, 74.9685, 0.29 ) }
    dend_28 { pt3dadd( -19.4192, -182.47, 74.8304, 0.29 ) }
    dend_28 { pt3dadd( -20.0491, -183.334, 74.5306, 0.44 ) }
    dend_28 { pt3dadd( -20.513, -184.04, 74.3556, 0.44 ) }
    dend_28 { pt3dadd( -21.2986, -185.41, 74.2246, 0.22 ) }
    dend_28 { pt3dadd( -21.9581, -186.706, 74.2251, 0.29 ) }
    dend_28 { pt3dadd( -22.548, -188.058, 74.3425, 0.07 ) }
    dend_28 { pt3dadd( -22.9544, -189.165, 74.5277, 0.07 ) }
    dend_28 { pt3dadd( -23.6736, -191.537, 74.9882, 0.22 ) }
    dend_28 { pt3dadd( -23.9322, -192.614, 75.3217, 0.22 ) }
    dend_28 { pt3dadd( -24.0588, -193.307, 75.6342, 0.22 ) }
    dend_28 { pt3dadd( -24.121, -193.852, 75.9395, 0.44 ) }
    dend_28 { pt3dadd( -24.1678, -194.438, 76.2886, 0.66 ) }
    dend_28 { pt3dadd( -24.2782, -195.941, 77.19, 0.22 ) }
    dend_28 { pt3dadd( -24.4026, -197.662, 78.1237, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -24.4564, -198.486, 78.5652, 0.07 ) }
    dend_28 { pt3dadd( -24.5083, -199.543, 79.0588, 0.07 ) }
    dend_28 { pt3dadd( -24.5297, -200.441, 79.4092, 0.15 ) }
    dend_28 { pt3dadd( -24.5265, -201.154, 79.6303, 0.15 ) }
    dend_28 { pt3dadd( -24.4955, -202.279, 79.8852, 0.37 ) }
    dend_28 { pt3dadd( -24.4553, -203.456, 79.9514, 0.66 ) }
    dend_28 { pt3dadd( -24.3892, -205.199, 79.8891, 0.15 ) }
    dend_28 { pt3dadd( -24.3497, -206.409, 79.7587, 0.22 ) }
    dend_28 { pt3dadd( -24.3164, -207.535, 79.597, 0.22 ) }
    dend_28 { pt3dadd( -24.3043, -208.52, 79.4229, 0.15 ) }
    dend_28 { pt3dadd( -24.3156, -209.211, 79.2874, 0.15 ) }
    dend_28 { pt3dadd( -24.3615, -209.879, 79.1834, 0.59 ) }
    dend_28 { pt3dadd( -24.4731, -210.61, 79.1251, 0.59 ) }
    dend_28 { pt3dadd( -24.8291, -212.036, 79.0785, 0.22 ) }
    dend_28 { pt3dadd( -24.9712, -212.457, 79.0626, 0.22 ) }
    dend_28 { pt3dadd( -25.2338, -213.142, 79.0376, 0.44 ) }
    dend_28 { pt3dadd( -25.584, -214.127, 79.0054, 0.66 ) }
    dend_28 { pt3dadd( -25.9353, -215.228, 78.9541, 0.29 ) }
    dend_28 { pt3dadd( -26.1812, -216.136, 78.9028, 0.66 ) }
    dend_28 { pt3dadd( -26.4116, -217.3, 78.8216, 0.52 ) }
    dend_28 { pt3dadd( -26.6474, -218.991, 78.6741, 0.29 ) }
    dend_28 { pt3dadd( -26.7892, -220.51, 78.4558, 0.22 ) }
    dend_28 { pt3dadd( -26.845, -221.628, 78.2291, 0.29 ) }
    dend_28 { pt3dadd( -26.8549, -222.692, 77.9673, 0.37 ) }
    dend_28 { pt3dadd( -26.8205, -223.954, 77.666, 0.22 ) }
    dend_28 { pt3dadd( -26.7904, -224.607, 77.527, 0.22 ) }
    dend_28 { pt3dadd( -26.7172, -226.23, 77.1721, 0.29 ) }
    dend_28 { pt3dadd( -26.7003, -227.314, 76.9506, 0.52 ) }
    dend_28 { pt3dadd( -26.7045, -227.973, 76.838, 0.81 ) }
    dend_28 { pt3dadd( -26.7383, -229.308, 76.6698, 0.29 ) }
    dend_28 { pt3dadd( -26.7528, -230.413, 76.6772, 0.22 ) }
    dend_28 { pt3dadd( -26.7437, -230.859, 76.7395, 0.22 ) }
    dend_28 { pt3dadd( -26.7202, -231.393, 76.8829, 0.44 ) }
    dend_28 { pt3dadd( -26.6968, -232.166, 77.1239, 0.74 ) }
    dend_28 { pt3dadd( -26.6705, -232.977, 77.3514, 0.29 ) }
    dend_28 { pt3dadd( -26.5924, -234.548, 77.7039, 0.15 ) }
    dend_28 { pt3dadd( -26.5649, -234.932, 77.7798, 0.15 ) }
    dend_28 { pt3dadd( -26.4981, -235.601, 77.883, 0.15 ) }
    dend_28 { pt3dadd( -26.3697, -236.573, 77.9918, 0.44 ) }
    dend_28 { pt3dadd( -26.1376, -238.065, 78.152, 0.22 ) }
    dend_28 { pt3dadd( -25.9886, -239.082, 78.2483, 0.22 ) }
    dend_28 { pt3dadd( -25.8161, -240.385, 78.3326, 0.52 ) }
    dend_28 { pt3dadd( -25.6381, -241.885, 78.3815, 0.15 ) }
    dend_28 { pt3dadd( -25.5521, -242.928, 78.3517, 0.29 ) }
    dend_28 { pt3dadd( -25.5242, -244.18, 78.1987, 0.59 ) }
    dend_28 { pt3dadd( -25.5977, -245.206, 77.9495, 0.74 ) }
    dend_28 { pt3dadd( -25.6573, -245.588, 77.8149, 0.74 ) }
    dend_28 { pt3dadd( -26.0317, -247.049, 77.1647, 0.22 ) }
    dend_28 { pt3dadd( -26.5967, -248.538, 76.4003, 0.15 ) }
    dend_28 { pt3dadd( -27.0792, -249.565, 75.7927, 0.15 ) }
    dend_28 { pt3dadd( -27.5435, -250.438, 75.2453, 0.29 ) }
    dend_28 { pt3dadd( -27.9338, -251.124, 74.8349, 0.74 ) }
    dend_28 { pt3dadd( -28.3442, -251.856, 74.4602, 0.66 ) }
    dend_28 { pt3dadd( -29.0551, -253.218, 73.9065, 0.15 ) }
    dend_28 { pt3dadd( -29.6583, -254.461, 73.4265, 0.15 ) }
    dend_28 { pt3dadd( -30.0562, -255.38, 73.0848, 0.22 ) }
    dend_28 { pt3dadd( -30.4611, -256.442, 72.6737, 0.52 ) }
    dend_28 { pt3dadd( -30.8666, -257.738, 72.1463, 0.29 ) }
    dend_28 { pt3dadd( -31.2006, -259.263, 71.5514, 0.15 ) }
    dend_28 { pt3dadd( -31.3452, -260.471, 71.0846, 0.15 ) }
    dend_28 { pt3dadd( -31.3643, -260.882, 70.9232, 0.15 ) }
    dend_28 { pt3dadd( -31.3689, -261.526, 70.6482, 0.81 ) }
    dend_28 { pt3dadd( -31.395, -262.38, 70.2901, 0.29 ) }
    dend_28 { pt3dadd( -31.5277, -263.843, 69.6844, 0.15 ) }
    dend_28 { pt3dadd( -31.7091, -264.928, 69.2313, 0.59 ) }
    dend_28 { pt3dadd( -31.8979, -265.694, 68.9202, 0.59 ) }
    dend_28 { pt3dadd( -32.1246, -266.333, 68.6136, 0.59 ) }
    dend_28 { pt3dadd( -32.649, -267.417, 67.9674, 1.18 ) }
    dend_28 { pt3dadd( -33.1866, -268.249, 67.2778, 0.74 ) }
    dend_28 { pt3dadd( -34.1128, -269.461, 66.0324, 0.22 ) }
    dend_28 { pt3dadd( -34.4092, -269.825, 65.599, 0.29 ) }
    dend_28 { pt3dadd( -35.0501, -270.592, 64.5359, 0.37 ) }
    dend_28 { pt3dadd( -35.7096, -271.356, 63.2462, 0.37 ) }
    dend_28 { pt3dadd( -36.5866, -272.307, 61.2576, 0.37 ) }
    dend_28 { pt3dadd( -36.8916, -272.595, 60.5505, 0.37 ) }
    dend_28 { pt3dadd( -37.2749, -272.934, 59.6207, 0.37 ) }
    dend_28 { pt3dadd( -37.3808, -273.038, 59.3271, 0.37 ) }
    dend_28 { pt3dadd( -37.5409, -273.237, 58.774, 0.37 ) }
    dend_28 { pt3dadd( -37.6951, -273.521, 58.0929, 0.37 ) }
    dend_28 { pt3dadd( -37.8861, -273.956, 57.219, 0.44 ) }
    dend_28 { pt3dadd( -38.0923, -274.386, 56.443, 0.52 ) }
    dend_28 { pt3dadd( -38.4788, -275.23, 55.2489, 0.52 ) }
    dend_28 { pt3dadd( -38.842, -276.008, 54.2896, 0.37 ) }
    dend_28 { pt3dadd( -39.012, -276.409, 53.8666, 0.22 ) }
    dend_28 { pt3dadd( -39.192, -276.857, 53.4547, 0.22 ) }
    dend_28 { pt3dadd( -39.4615, -277.496, 52.9646, 0.29 ) }
    dend_28 { pt3dadd( -39.8882, -278.4, 52.4548, 0.81 ) }
    dend_28 { pt3dadd( -40.52, -279.718, 51.9959, 0.15 ) }
    dend_28 { pt3dadd( -40.817, -280.323, 51.8638, 0.15 ) }
    dend_28 { pt3dadd( -41.0818, -280.873, 51.7497, 0.22 ) }
    dend_28 { pt3dadd( -41.3999, -281.599, 51.6138, 0.29 ) }
    dend_28 { pt3dadd( -41.6183, -282.128, 51.5175, 0.81 ) }
    dend_28 { pt3dadd( -42.1569, -283.399, 51.2423, 0.22 ) }
    dend_28 { pt3dadd( -42.5921, -284.41, 50.9838, 0.22 ) }
    dend_28 { pt3dadd( -42.9797, -285.267, 50.6592, 0.22 ) }
    dend_28 { pt3dadd( -43.2916, -285.978, 50.274, 0.52 ) }
    dend_28 { pt3dadd( -43.3752, -286.178, 50.1259, 0.52 ) }
    dend_28 { pt3dadd( -43.8056, -287.214, 49.1278, 0.22 ) }
    dend_28 { pt3dadd( -44.0953, -287.882, 48.3529, 0.37 ) }
    dend_28 { pt3dadd( -44.3507, -288.485, 47.5659, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -44.6665, -289.254, 46.5159, 0.22 ) }
    dend_28 { pt3dadd( -44.9632, -289.98, 45.4914, 0.22 ) }
    dend_28 { pt3dadd( -45.2037, -290.648, 44.5943, 0.22 ) }
    dend_28 { pt3dadd( -45.2987, -290.983, 44.1769, 0.37 ) }
    dend_28 { pt3dadd( -45.5233, -291.972, 43.0668, 1.11 ) }
    dend_28 { pt3dadd( -45.7319, -293.085, 41.9749, 0.44 ) }
    dend_28 { pt3dadd( -45.8899, -294.098, 41.0666, 0.66 ) }
    dend_28 { pt3dadd( -45.9607, -294.807, 40.467, 0.59 ) }
    dend_28 { pt3dadd( -45.9824, -295.372, 39.9787, 0.52 ) }
    dend_28 { pt3dadd( -45.972, -295.977, 39.4123, 0.29 ) }
    dend_28 { pt3dadd( -45.9309, -296.926, 38.4365, 0.15 ) }
    dend_28 { pt3dadd( -45.8938, -297.959, 37.3302, 0.15 ) }
    dend_28 { pt3dadd( -45.8987, -298.402, 36.8334, 0.52 ) }
    dend_28 { pt3dadd( -46.0087, -299.389, 35.7169, 0.74 ) }
    dend_28 { pt3dadd( -46.1015, -299.896, 35.1636, 0.74 ) }
    dend_28 { pt3dadd( -46.3708, -301.144, 33.8934, 0.37 ) }
    dend_28 { pt3dadd( -46.6428, -302.231, 32.9637, 0.37 ) }
    dend_28 { pt3dadd( -46.9258, -303.288, 32.2595, 0.59 ) }
    dend_28 { pt3dadd( -47.2362, -304.359, 31.7116, 0.88 ) }
    dend_28 { pt3dadd( -47.4012, -304.921, 31.51, 0.88 ) }
    dend_28 { pt3dadd( -47.737, -306.076, 31.1994, 0.37 ) }
    dend_28 { pt3dadd( -48.04, -307.257, 30.9808, 0.66 ) }
    dend_28 { pt3dadd( -48.2537, -308.328, 30.7592, 0.66 ) }
    dend_28 { pt3dadd( -48.4146, -309.504, 30.5126, 1.18 ) }
    dend_28 { pt3dadd( -48.4797, -310.404, 30.307, 0.81 ) }
    dend_28 { pt3dadd( -48.5244, -312.104, 29.8855, 0.44 ) }
    dend_28 { pt3dadd( -48.4884, -313.479, 29.5282, 0.37 ) }
    dend_28 { pt3dadd( -48.297, -315.401, 28.9578, 0.29 ) }
    dend_28 { pt3dadd( -48.2446, -315.733, 28.8389, 0.52 ) }
    dend_28 { pt3dadd( -48.1115, -316.334, 28.5951, 0.96 ) }
    dend_28 { pt3dadd( -47.8671, -317.299, 28.1219, 0.29 ) }
    dend_28 { pt3dadd( -47.7035, -317.845, 27.8289, 0.29 ) }
    dend_28 { pt3dadd( -47.5247, -318.438, 27.4879, 0.59 ) }
    dend_28 { pt3dadd( -47.204, -319.522, 27.0097, 0.59 ) }
    dend_28 { pt3dadd( -47.0243, -320.13, 26.7814, 0.59 ) }
    dend_28 { pt3dadd( -46.5191, -321.856, 26.2354, 0.29 ) }
    dend_28 { pt3dadd( -46.1806, -323.01, 25.9605, 0.22 ) }
    dend_28 { pt3dadd( -46.0061, -323.643, 25.8867, 0.88 ) }
    dend_28 { pt3dadd( -45.5084, -325.621, 25.9994, 0.37 ) }
    dend_28 { pt3dadd( -45.3755, -326.23, 26.1356, 0.66 ) }
    dend_28 { pt3dadd( -45.2848, -326.697, 26.3295, 0.66 ) }
    dend_28 { pt3dadd( -45.0735, -327.795, 26.9998, 0.44 ) }
    dend_28 { pt3dadd( -44.9279, -328.54, 27.5994, 0.44 ) }
    dend_28 { pt3dadd( -44.7235, -329.393, 28.5111, 0.44 ) }
    dend_28 { pt3dadd( -44.5441, -330.052, 29.3513, 0.81 ) }
    dend_28 { pt3dadd( -44.1226, -331.232, 31.0042, 0.22 ) }
    dend_28 { pt3dadd( -43.8779, -331.777, 31.825, 0.37 ) }
    dend_28 { pt3dadd( -43.3663, -332.696, 33.2865, 0.37 ) }
    dend_28 { pt3dadd( -42.6925, -333.715, 34.8789, 0.37 ) }
    dend_28 { pt3dadd( -42.3556, -334.151, 35.5201, 0.66 ) }
    dend_28 { pt3dadd( -41.7407, -334.827, 36.5361, 0.22 ) }
    dend_28 { pt3dadd( -41.3598, -335.198, 37.0693, 0.22 ) }
    dend_28 { pt3dadd( -41.0, -335.498, 37.5677, 0.74 ) }
    dend_28 { pt3dadd( -40.61, -335.761, 38.0936, 0.74 ) }
    dend_28 { pt3dadd( -39.7182, -336.197, 39.4222, 0.22 ) }
    dend_28 { pt3dadd( -38.8731, -336.47, 40.8769, 0.22 ) }
    dend_28 { pt3dadd( -38.4439, -336.563, 41.7538, 0.37 ) }
    dend_28 { pt3dadd( -37.3533, -336.745, 44.2578, 0.37 ) }
    dend_28 { pt3dadd( -37.0426, -336.783, 45.0985, 0.74 ) }
    dend_28 { pt3dadd( -36.3461, -336.821, 47.2885, 0.74 ) }
    dend_28 { pt3dadd( -35.8606, -336.825, 49.0335, 0.52 ) }
    dend_28 { pt3dadd( -35.3486, -336.862, 51.0798, 0.52 ) }
    dend_28 { pt3dadd( -35.1852, -336.895, 51.7999, 0.52 ) }
    dend_28 { pt3dadd( -34.7218, -337.028, 53.9426, 0.52 ) }
    dend_28 { pt3dadd( -34.4932, -337.115, 55.0552, 0.52 ) }
    dend_28 { pt3dadd( -34.0956, -337.298, 57.0072, 0.52 ) }
    dend_28 { pt3dadd( -33.9668, -337.359, 57.6487, 0.52 ) }
    dend_28 { pt3dadd( -32.9644, -337.768, 62.3273, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 68/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -10.7069, 21.9289, -6.94916, 0.96 ) }
    dend_22 { pt3dadd( -13.6584, 23.6801, -7.08206, 0.96 ) }
    dend_22 { pt3dadd( -15.0761, 24.5623, -7.11639, 0.96 ) }
    dend_22 { pt3dadd( -16.6891, 25.6754, -7.06893, 0.88 ) }
    dend_22 { pt3dadd( -18.1831, 26.7923, -6.96716, 0.88 ) }
    dend_22 { pt3dadd( -19.6543, 27.9712, -6.76185, 0.81 ) }
    dend_22 { pt3dadd( -21.156, 29.2729, -6.4153, 0.66 ) }
    dend_22 { pt3dadd( -22.157, 30.2623, -5.94715, 1.03 ) }
    dend_22 { pt3dadd( -23.2914, 31.4653, -5.14657, 1.18 ) }
    dend_22 { pt3dadd( -23.6918, 31.8949, -4.76497, 1.33 ) }
    dend_22 { pt3dadd( -24.7908, 33.0327, -3.55852, 1.03 ) }
    dend_22 { pt3dadd( -26.0214, 34.2259, -2.22387, 0.96 ) }
    dend_22 { pt3dadd( -27.3365, 35.3105, -0.859855, 0.96 ) }
    dend_22 { pt3dadd( -29.1968, 36.5145, 0.870939, 1.33 ) }
    dend_22 { pt3dadd( -30.7637, 37.2874, 2.17935, 1.03 ) }
    dend_22 { pt3dadd( -31.5477, 37.5674, 2.8129, 1.03 ) }
    dend_22 { pt3dadd( -33.6191, 38.0274, 4.44661, 0.74 ) }
    dend_22 { pt3dadd( -34.8178, 38.1759, 5.42273, 0.96 ) }
    dend_22 { pt3dadd( -35.747, 38.2537, 6.2157, 1.55 ) }
    dend_22 { pt3dadd( -37.3392, 38.3981, 7.72863, 1.25 ) }
    dend_22 { pt3dadd( -39.0452, 38.6072, 9.71008, 1.03 ) }
    dend_22 { pt3dadd( -40.1628, 38.7892, 11.3253, 0.74 ) }
    dend_22 { pt3dadd( -40.8489, 38.9526, 12.4873, 0.74 ) }
    dend_22 { pt3dadd( -41.5639, 39.1554, 13.8031, 1.11 ) }
    dend_22 { pt3dadd( -42.2742, 39.3717, 15.1515, 1.11 ) }
    dend_22 { pt3dadd( -43.7336, 39.8295, 17.8328, 0.96 ) }
    dend_22 { pt3dadd( -45.1389, 40.3282, 20.2981, 1.18 ) }
    dend_22 { pt3dadd( -46.1561, 40.7507, 22.0088, 1.55 ) }
    dend_22 { pt3dadd( -46.8836, 41.0986, 23.1436, 1.55 ) }
    dend_22 { pt3dadd( -47.6851, 41.5405, 24.2403, 1.18 ) }
    dend_22 { pt3dadd( -48.4825, 42.0705, 25.0865, 0.88 ) }
    dend_22 { pt3dadd( -49.5645, 42.9507, 26.0123, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -50.6911, 43.9899, 26.9653, 0.96 ) }
    dend_22 { pt3dadd( -51.4763, 44.8004, 27.7228, 1.18 ) }
    dend_22 { pt3dadd( -52.2812, 45.7642, 28.6432, 1.18 ) }
    dend_22 { pt3dadd( -53.1944, 47.067, 29.9615, 1.11 ) }
    dend_22 { pt3dadd( -54.2729, 48.811, 31.8205, 1.18 ) }
    dend_22 { pt3dadd( -55.2137, 50.4764, 33.6637, 1.03 ) }
    dend_22 { pt3dadd( -55.9144, 51.7565, 35.2046, 1.03 ) }
    dend_22 { pt3dadd( -56.6072, 53.0674, 36.9445, 0.88 ) }
    dend_22 { pt3dadd( -57.2655, 54.4214, 38.8072, 1.03 ) }
    dend_22 { pt3dadd( -57.7748, 55.5524, 40.3914, 0.74 ) }
    dend_22 { pt3dadd( -58.2656, 56.727, 41.9824, 0.66 ) }
    dend_22 { pt3dadd( -58.8243, 58.1719, 43.8916, 0.59 ) }
    dend_22 { pt3dadd( -59.4743, 59.7922, 46.128, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.7069, 21.9289, -6.94916, 1.03 ) }
    dend_11 { pt3dadd( -11.4885, 22.329, -8.99445, 1.03 ) }
    dend_11 { pt3dadd( -12.3572, 22.7044, -10.953, 1.03 ) }
    dend_11 { pt3dadd( -13.1674, 23.0042, -12.5584, 1.18 ) }
    dend_11 { pt3dadd( -14.1559, 23.3234, -14.3615, 1.18 ) }
    dend_11 { pt3dadd( -14.8534, 23.5353, -15.5679, 1.18 ) }
    dend_11 { pt3dadd( -15.6452, 23.7762, -16.9244, 1.03 ) }
    dend_11 { pt3dadd( -16.4144, 24.0031, -18.097, 0.96 ) }
    dend_11 { pt3dadd( -16.9766, 24.1763, -18.8859, 1.18 ) }
    dend_11 { pt3dadd( -17.6059, 24.381, -19.7451, 1.03 ) }
    dend_11 { pt3dadd( -18.1937, 24.5776, -20.5386, 1.03 ) }
    dend_11 { pt3dadd( -18.9477, 24.8423, -21.5422, 1.03 ) }
    dend_11 { pt3dadd( -19.5368, 25.0542, -22.301, 1.18 ) }
    dend_11 { pt3dadd( -20.4799, 25.3969, -23.3879, 1.18 ) }
    dend_11 { pt3dadd( -21.1496, 25.6514, -24.0834, 1.18 ) }
    dend_11 { pt3dadd( -21.9462, 25.9696, -24.8634, 1.11 ) }
    dend_11 { pt3dadd( -22.7934, 26.3085, -25.6257, 1.18 ) }
    dend_11 { pt3dadd( -23.3268, 26.5314, -26.0542, 0.96 ) }
    dend_11 { pt3dadd( -24.0964, 26.8991, -26.6179, 0.81 ) }
    dend_11 { pt3dadd( -25.0615, 27.4519, -27.2757, 1.03 ) }
    dend_11 { pt3dadd( -26.4857, 28.3927, -28.1876, 1.25 ) }
    dend_11 { pt3dadd( -26.9379, 28.723, -28.4672, 1.25 ) }
    dend_11 { pt3dadd( -27.6211, 29.2367, -28.8648, 0.88 ) }
    dend_11 { pt3dadd( -28.5747, 29.9322, -29.3938, 0.88 ) }
    dend_11 { pt3dadd( -29.6683, 30.6655, -29.9604, 1.11 ) }
    dend_11 { pt3dadd( -30.5948, 31.2104, -30.3722, 1.11 ) }
    dend_11 { pt3dadd( -31.7676, 31.8268, -30.8278, 0.96 ) }
    dend_11 { pt3dadd( -32.7447, 32.293, -31.2073, 1.03 ) }
    dend_11 { pt3dadd( -33.6849, 32.7022, -31.5821, 1.03 ) }
    dend_11 { pt3dadd( -34.6601, 33.0798, -31.9734, 0.96 ) }
    dend_11 { pt3dadd( -35.5678, 33.4056, -32.3199, 0.96 ) }
    dend_11 { pt3dadd( -36.5396, 33.7405, -32.7089, 0.96 ) }
    dend_11 { pt3dadd( -37.7612, 34.134, -33.1856, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.6655, 70.5112, -37.6322, 1.18 ) }
    dend_9 { pt3dadd( -12.1435, 72.9262, -37.416, 1.18 ) }
    dend_9 { pt3dadd( -12.3642, 74.5848, -37.2806, 0.96 ) }
    dend_9 { pt3dadd( -12.4296, 75.6935, -37.2436, 0.96 ) }
    dend_9 { pt3dadd( -12.4407, 76.7084, -37.2757, 0.96 ) }
    dend_9 { pt3dadd( -12.4264, 78.5716, -37.4426, 0.96 ) }
    dend_9 { pt3dadd( -12.4407, 80.3963, -37.6975, 1.03 ) }
    dend_9 { pt3dadd( -12.4189, 81.732, -37.9787, 1.11 ) }
    dend_9 { pt3dadd( -12.3664, 83.3347, -38.451, 0.88 ) }
    dend_9 { pt3dadd( -12.3779, 84.5649, -38.8975, 0.88 ) }
    dend_9 { pt3dadd( -12.487, 85.8185, -39.3827, 0.88 ) }
    dend_9 { pt3dadd( -12.7089, 87.3618, -39.9945, 1.03 ) }
    dend_9 { pt3dadd( -12.901, 88.4008, -40.3907, 1.03 ) }
    dend_9 { pt3dadd( -13.3695, 90.5037, -41.0821, 1.18 ) }
    dend_9 { pt3dadd( -13.8719, 92.6868, -41.6841, 0.88 ) }
    dend_9 { pt3dadd( -14.4574, 95.3672, -42.2999, 0.81 ) }
    dend_9 { pt3dadd( -14.6475, 96.3547, -42.4845, 0.96 ) }
    dend_9 { pt3dadd( -14.8236, 97.3685, -42.6562, 0.96 ) }
    dend_9 { pt3dadd( -15.1865, 99.3959, -43.0019, 0.88 ) }
    dend_9 { pt3dadd( -15.4497, 100.833, -43.2301, 0.88 ) }
    dend_9 { pt3dadd( -15.7342, 102.425, -43.5285, 1.11 ) }
    dend_9 { pt3dadd( -16.1752, 104.883, -44.0774, 1.25 ) }
    dend_9 { pt3dadd( -16.475, 106.454, -44.4623, 1.03 ) }
    dend_9 { pt3dadd( -16.8055, 108.167, -44.9214, 1.03 ) }
    dend_9 { pt3dadd( -17.0561, 109.499, -45.3017, 1.18 ) }
    dend_9 { pt3dadd( -17.4777, 111.843, -46.0609, 0.96 ) }
    dend_9 { pt3dadd( -17.7689, 113.736, -46.7295, 1.11 ) }
    dend_9 { pt3dadd( -17.9317, 115.331, -47.3065, 1.11 ) }
    dend_9 { pt3dadd( -17.9898, 117.103, -47.8897, 1.18 ) }
    dend_9 { pt3dadd( -17.904, 118.814, -48.3914, 0.74 ) }
    dend_9 { pt3dadd( -17.6745, 120.51, -48.8243, 0.88 ) }
    dend_9 { pt3dadd( -17.3953, 121.723, -49.06, 1.25 ) }
    dend_9 { pt3dadd( -16.8489, 123.379, -49.2802, 1.33 ) }
    dend_9 { pt3dadd( -16.1277, 125.09, -49.3592, 0.96 ) }
    dend_9 { pt3dadd( -15.4027, 126.523, -49.2839, 0.74 ) }
    dend_9 { pt3dadd( -14.6996, 127.769, -49.1159, 0.81 ) }
    dend_9 { pt3dadd( -14.0853, 128.797, -48.8461, 0.81 ) }
    dend_9 { pt3dadd( -13.3078, 130.088, -48.4106, 0.74 ) }
    dend_9 { pt3dadd( -12.6906, 131.192, -47.9538, 1.25 ) }
    dend_9 { pt3dadd( -11.9111, 132.686, -47.2391, 1.4 ) }
    dend_9 { pt3dadd( -11.3951, 133.858, -46.6146, 1.4 ) }
    dend_9 { pt3dadd( -10.5022, 136.237, -45.2833, 0.88 ) }
    dend_9 { pt3dadd( -10.3257, 136.788, -44.9608, 0.88 ) }
    dend_9 { pt3dadd( -9.92673, 138.248, -44.0934, 0.88 ) }
    dend_9 { pt3dadd( -9.67732, 139.296, -43.5076, 0.88 ) }
    dend_9 { pt3dadd( -9.32065, 141.065, -42.6552, 0.96 ) }
    dend_9 { pt3dadd( -9.13144, 142.158, -42.2448, 0.96 ) }
    dend_9 { pt3dadd( -8.89082, 143.797, -41.8162, 1.55 ) }
    dend_9 { pt3dadd( -8.82545, 144.348, -41.6889, 1.55 ) }
    dend_9 { pt3dadd( -8.56684, 146.553, -41.3329, 1.18 ) }
    dend_9 { pt3dadd( -8.3433, 148.801, -41.1273, 1.25 ) }
    dend_9 { pt3dadd( -8.21688, 150.605, -41.133, 1.62 ) }
    dend_9 { pt3dadd( -8.1919, 151.536, -41.226, 1.62 ) }
    dend_9 { pt3dadd( -8.22563, 154.074, -41.6892, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -8.31555, 156.038, -42.2068, 0.96 ) }
    dend_9 { pt3dadd( -8.41697, 157.33, -42.6648, 1.33 ) }
    dend_9 { pt3dadd( -8.60987, 159.217, -43.5192, 1.11 ) }
    dend_9 { pt3dadd( -8.78477, 161.037, -44.5515, 1.33 ) }
    dend_9 { pt3dadd( -8.89166, 162.338, -45.402, 1.33 ) }
    dend_9 { pt3dadd( -8.99652, 163.961, -46.6516, 1.47 ) }
    dend_9 { pt3dadd( -9.05887, 164.967, -47.4518, 1.62 ) }
    dend_9 { pt3dadd( -9.14201, 166.815, -48.9634, 1.03 ) }
    dend_9 { pt3dadd( -9.18957, 168.399, -50.2407, 0.96 ) }
    dend_9 { pt3dadd( -9.19625, 169.47, -51.0645, 0.88 ) }
    dend_9 { pt3dadd( -9.15071, 171.163, -52.3575, 0.81 ) }
    dend_9 { pt3dadd( -9.13221, 171.996, -52.9284, 1.18 ) }
    dend_9 { pt3dadd( -9.13125, 174.434, -54.4118, 0.96 ) }
    dend_9 { pt3dadd( -9.21902, 176.68, -55.593, 0.96 ) }
    dend_9 { pt3dadd( -9.38897, 178.548, -56.3583, 0.74 ) }
    dend_9 { pt3dadd( -9.64662, 180.522, -56.9787, 0.59 ) }
    dend_9 { pt3dadd( -10.0735, 183.075, -57.5285, 0.59 ) }
    dend_9 { pt3dadd( -10.4551, 185.007, -57.8521, 0.52 ) }
    dend_9 { pt3dadd( -10.7475, 186.268, -57.9846, 0.74 ) }
    dend_9 { pt3dadd( -11.4325, 188.729, -58.1711, 1.03 ) }
    dend_9 { pt3dadd( -11.8424, 189.97, -58.2296, 1.11 ) }
    dend_9 { pt3dadd( -12.3541, 191.431, -58.26, 0.74 ) }
    dend_9 { pt3dadd( -13.0586, 193.484, -58.3236, 0.66 ) }
    dend_9 { pt3dadd( -13.4269, 194.582, -58.3773, 0.52 ) }
    dend_9 { pt3dadd( -13.8206, 195.847, -58.4924, 0.22 ) }
    dend_9 { pt3dadd( -14.43, 197.886, -58.8634, 0.15 ) }
    dend_9 { pt3dadd( -14.6312, 198.534, -58.984, 0.22 ) }
    dend_9 { pt3dadd( -16.8547, 209.431, -62.26, 0.22 ) }
    dend_9 { pt3dadd( -17.1109, 219.817, -67.5693, 0.22 ) }
    dend_9 { pt3dadd( -17.8434, 230.682, -71.6035, 0.22 ) }
    dend_9 { pt3dadd( -20.3929, 241.343, -75.4485, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -11.6655, 70.5112, -37.6322, 0.66 ) }
    dend_6 { pt3dadd( -10.9777, 71.0227, -39.6775, 0.66 ) }
    dend_6 { pt3dadd( -10.5135, 71.368, -41.0579, 0.59 ) }
    dend_6 { pt3dadd( -10.0471, 71.7149, -42.4448, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 36.8563, 17.8547, 33.6044, 0.88 ) }
    dend_43 { pt3dadd( 37.9329, 18.5421, 33.1637, 0.88 ) }
    dend_43 { pt3dadd( 38.8669, 19.1472, 32.7148, 0.59 ) }
    dend_43 { pt3dadd( 39.9536, 19.8344, 32.1923, 0.59 ) }
    dend_43 { pt3dadd( 40.7394, 20.2829, 31.8533, 0.59 ) }
    dend_43 { pt3dadd( 41.4451, 20.6348, 31.5538, 0.59 ) }
    dend_43 { pt3dadd( 42.2017, 20.9641, 31.2216, 0.81 ) }
    dend_43 { pt3dadd( 43.0541, 21.2477, 30.8095, 0.81 ) }
    dend_43 { pt3dadd( 43.7156, 21.3929, 30.4993, 0.81 ) }
    dend_43 { pt3dadd( 44.729, 21.515, 30.0692, 0.52 ) }
    dend_43 { pt3dadd( 45.9436, 21.5685, 29.569, 0.52 ) }
    dend_43 { pt3dadd( 46.8728, 21.554, 29.1806, 0.52 ) }
    dend_43 { pt3dadd( 47.7237, 21.5196, 28.8324, 0.52 ) }
    dend_43 { pt3dadd( 48.3281, 21.5104, 28.5939, 0.52 ) }
    dend_43 { pt3dadd( 49.2446, 21.5197, 28.1974, 0.44 ) }
    dend_43 { pt3dadd( 50.3984, 21.5608, 27.6622, 0.59 ) }
    dend_43 { pt3dadd( 51.3695, 21.5981, 27.2473, 0.44 ) }
    dend_43 { pt3dadd( 51.9602, 21.6068, 26.9913, 0.66 ) }
    dend_43 { pt3dadd( 52.8108, 21.5903, 26.6322, 0.37 ) }
    dend_43 { pt3dadd( 53.909, 21.5063, 26.1623, 0.37 ) }
    dend_43 { pt3dadd( 54.9593, 21.3434, 25.7539, 0.59 ) }
    dend_43 { pt3dadd( 55.7373, 21.1707, 25.4642, 1.11 ) }
    dend_43 { pt3dadd( 57.1061, 20.8323, 24.9169, 1.11 ) }
    dend_43 { pt3dadd( 58.1732, 20.57, 24.4663, 0.66 ) }
    dend_43 { pt3dadd( 59.3407, 20.3307, 23.961, 0.52 ) }
    dend_43 { pt3dadd( 60.199, 20.2216, 23.5644, 0.29 ) }
    dend_43 { pt3dadd( 61.145, 20.2139, 23.0628, 0.29 ) }
    dend_43 { pt3dadd( 62.081, 20.344, 22.4215, 0.59 ) }
    dend_43 { pt3dadd( 62.5907, 20.5025, 22.0003, 0.59 ) }
    dend_43 { pt3dadd( 63.3833, 20.8649, 21.2496, 0.37 ) }
    dend_43 { pt3dadd( 64.1262, 21.2704, 20.4943, 0.37 ) }
    dend_43 { pt3dadd( 64.6361, 21.5556, 19.9561, 0.59 ) }
    dend_43 { pt3dadd( 65.708, 22.1158, 18.8588, 1.03 ) }
    dend_43 { pt3dadd( 66.4626, 22.458, 18.1271, 0.88 ) }
    dend_43 { pt3dadd( 67.11, 22.7174, 17.5379, 0.44 ) }
    dend_43 { pt3dadd( 68.1029, 23.0536, 16.6496, 0.44 ) }
    dend_43 { pt3dadd( 68.6244, 23.2094, 16.224, 0.44 ) }
    dend_43 { pt3dadd( 69.0784, 23.31, 15.8819, 0.66 ) }
    dend_43 { pt3dadd( 69.4687, 23.3669, 15.6319, 0.66 ) }
    dend_43 { pt3dadd( 70.0993, 23.4075, 15.238, 0.44 ) }
    dend_43 { pt3dadd( 71.6343, 23.4105, 14.3188, 0.44 ) }
    dend_43 { pt3dadd( 72.0712, 23.3868, 14.0761, 0.81 ) }
    dend_43 { pt3dadd( 72.7659, 23.3067, 13.6712, 1.03 ) }
    dend_43 { pt3dadd( 73.7269, 23.1139, 13.0086, 0.66 ) }
    dend_43 { pt3dadd( 74.4584, 22.9037, 12.3897, 0.66 ) }
    dend_43 { pt3dadd( 75.3337, 22.5685, 11.4272, 0.52 ) }
    dend_43 { pt3dadd( 76.0721, 22.1988, 10.3691, 0.37 ) }
    dend_43 { pt3dadd( 76.6729, 21.8145, 9.24131, 0.44 ) }
    dend_43 { pt3dadd( 77.4458, 21.1981, 7.409, 0.52 ) }
    dend_43 { pt3dadd( 77.9589, 20.7056, 5.97017, 0.52 ) }
    dend_43 { pt3dadd( 78.5754, 20.0661, 4.17696, 0.52 ) }
    dend_43 { pt3dadd( 79.0904, 19.526, 2.67418, 0.81 ) }
    dend_43 { pt3dadd( 79.5362, 19.1098, 1.47989, 1.03 ) }
    dend_43 { pt3dadd( 80.0363, 18.7621, 0.406463, 1.03 ) }
    dend_43 { pt3dadd( 80.5221, 18.5513, -0.33041, 0.81 ) }
    dend_43 { pt3dadd( 81.389, 18.3275, -1.28745, 0.59 ) }
    dend_43 { pt3dadd( 82.1651, 18.232, -1.92675, 0.59 ) }
    dend_43 { pt3dadd( 82.75, 18.2202, -2.32692, 0.44 ) }
    dend_43 { pt3dadd( 83.9484, 18.2467, -3.07391, 0.44 ) }
    dend_43 { pt3dadd( 84.8269, 18.2727, -3.57787, 0.37 ) }
    dend_43 { pt3dadd( 85.4707, 18.2839, -3.91311, 0.37 ) }
    dend_43 { pt3dadd( 86.2025, 18.2736, -4.23637, 0.96 ) }
    dend_43 { pt3dadd( 87.5728, 18.193, -4.72639, 0.66 ) }
    dend_43 { pt3dadd( 88.4695, 18.1158, -5.01156, 0.66 ) }
    dend_43 { pt3dadd( 89.3863, 18.0233, -5.31126, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 90.5841, 17.9057, -5.8229, 0.74 ) }
    dend_43 { pt3dadd( 91.6499, 17.8266, -6.45091, 0.74 ) }
    dend_43 { pt3dadd( 92.8426, 17.8056, -7.35366, 0.74 ) }
    dend_43 { pt3dadd( 93.7006, 17.8771, -8.15504, 0.59 ) }
    dend_43 { pt3dadd( 94.9335, 18.1311, -9.51002, 0.81 ) }
    dend_43 { pt3dadd( 96.0675, 18.5171, -10.9662, 0.96 ) }
    dend_43 { pt3dadd( 97.0324, 18.9928, -12.3884, 0.96 ) }
    dend_43 { pt3dadd( 97.5005, 19.3146, -13.1179, 0.66 ) }
    dend_43 { pt3dadd( 97.9763, 19.717, -13.8257, 0.59 ) }
    dend_43 { pt3dadd( 98.3347, 20.0162, -14.2918, 0.44 ) }
    dend_43 { pt3dadd( 98.9571, 20.5439, -14.9599, 0.88 ) }
    dend_43 { pt3dadd( 99.2745, 20.7744, -15.2742, 0.88 ) }
    dend_43 { pt3dadd( 99.9922, 21.1091, -16.074, 0.29 ) }
    dend_43 { pt3dadd( 100.954, 21.233, -17.4501, 0.29 ) }
    dend_43 { pt3dadd( 101.984, 21.0684, -19.2433, 0.29 ) }
    dend_43 { pt3dadd( 102.275, 20.9767, -19.805, 0.88 ) }
    dend_43 { pt3dadd( 102.989, 20.6855, -21.2983, 0.88 ) }
    dend_43 { pt3dadd( 103.537, 20.4624, -22.5251, 0.88 ) }
    dend_43 { pt3dadd( 103.943, 20.3127, -23.5535, 0.88 ) }
    dend_43 { pt3dadd( 104.403, 20.2658, -24.8872, 0.88 ) }
    dend_43 { pt3dadd( 104.552, 20.3519, -25.3638, 0.88 ) }
    dend_43 { pt3dadd( 104.714, 20.6109, -25.8891, 0.88 ) }
    dend_43 { pt3dadd( 104.85, 21.3019, -26.5536, 0.52 ) }
    dend_43 { pt3dadd( 104.883, 21.951, -27.0684, 0.52 ) }
    dend_43 { pt3dadd( 104.873, 22.5212, -27.5324, 1.03 ) }
    dend_43 { pt3dadd( 104.867, 23.0727, -28.0238, 1.03 ) }
    dend_43 { pt3dadd( 104.893, 23.6647, -28.6234, 0.81 ) }
    dend_43 { pt3dadd( 105.004, 24.5298, -29.6125, 0.44 ) }
    dend_43 { pt3dadd( 105.189, 25.2453, -30.5141, 0.52 ) }
    dend_43 { pt3dadd( 105.416, 25.8381, -31.3274, 0.52 ) }
    dend_43 { pt3dadd( 105.706, 26.458, -32.296, 0.66 ) }
    dend_43 { pt3dadd( 105.843, 26.733, -32.8421, 0.52 ) }
    dend_43 { pt3dadd( 106.018, 27.1046, -33.718, 0.66 ) }
    dend_43 { pt3dadd( 106.17, 27.5063, -34.7053, 0.88 ) }
    dend_43 { pt3dadd( 106.312, 28.1404, -36.2023, 0.59 ) }
    dend_43 { pt3dadd( 106.365, 28.5957, -37.2266, 0.59 ) }
    dend_43 { pt3dadd( 106.428, 29.4815, -39.2696, 0.52 ) }
    dend_43 { pt3dadd( 106.462, 29.8257, -40.0726, 0.52 ) }
    dend_43 { pt3dadd( 106.536, 30.1115, -40.7054, 0.52 ) }
    dend_43 { pt3dadd( 106.763, 30.5713, -41.5356, 0.52 ) }
    dend_43 { pt3dadd( 107.179, 31.0926, -42.0959, 0.44 ) }
    dend_43 { pt3dadd( 107.731, 31.7024, -42.4657, 0.74 ) }
    dend_43 { pt3dadd( 108.052, 32.0558, -42.5956, 0.81 ) }
    dend_43 { pt3dadd( 108.976, 33.0189, -42.9068, 0.59 ) }
    dend_43 { pt3dadd( 109.618, 33.6344, -43.1385, 0.66 ) }
    dend_43 { pt3dadd( 110.444, 34.4244, -43.4378, 0.59 ) }
    dend_43 { pt3dadd( 111.272, 35.2764, -43.7468, 0.59 ) }
    dend_43 { pt3dadd( 111.867, 35.9526, -43.965, 0.66 ) }
    dend_43 { pt3dadd( 112.495, 36.7254, -44.2116, 0.52 ) }
    dend_43 { pt3dadd( 113.386, 37.912, -44.556, 0.81 ) }
    dend_43 { pt3dadd( 119.605, 39.2309, -50.0087, 0.81 ) }
    dend_43 { pt3dadd( 125.145, 40.2955, -56.2116, 0.81 ) }
    dend_43 { pt3dadd( 129.992, 40.9127, -63.0438, 0.81 ) }
    dend_43 { pt3dadd( 133.642, 42.4384, -70.4235, 0.81 ) }
    dend_43 { pt3dadd( 137.567, 45.4286, -77.1056, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 36.8563, 17.8547, 33.6044, 0.81 ) }
    dend_40 { pt3dadd( 36.6022, 18.6261, 33.3515, 0.81 ) }
    dend_40 { pt3dadd( 36.3054, 19.5777, 33.0838, 0.74 ) }
    dend_40 { pt3dadd( 36.0158, 20.4773, 32.9286, 0.59 ) }
    dend_40 { pt3dadd( 35.5955, 21.8282, 32.7654, 0.37 ) }
    dend_40 { pt3dadd( 35.296, 22.8845, 32.7094, 0.44 ) }
    dend_40 { pt3dadd( 35.0373, 23.9048, 32.6936, 0.44 ) }
    dend_40 { pt3dadd( 34.8069, 24.9547, 32.7323, 0.74 ) }
    dend_40 { pt3dadd( 34.4917, 26.6319, 32.87, 0.44 ) }
    dend_40 { pt3dadd( 34.389, 27.437, 32.9668, 0.52 ) }
    dend_40 { pt3dadd( 34.3184, 28.68, 33.1566, 0.66 ) }
    dend_40 { pt3dadd( 34.3248, 29.3625, 33.2494, 0.44 ) }
    dend_40 { pt3dadd( 34.3737, 30.2541, 33.3355, 0.44 ) }
    dend_40 { pt3dadd( 34.4563, 31.0946, 33.381, 0.37 ) }
    dend_40 { pt3dadd( 34.6313, 32.2515, 33.3681, 0.37 ) }
    dend_40 { pt3dadd( 34.7929, 33.1854, 33.3316, 0.44 ) }
    dend_40 { pt3dadd( 34.9305, 33.8822, 33.2854, 0.22 ) }
    dend_40 { pt3dadd( 35.0682, 34.5086, 33.2513, 0.22 ) }
    dend_40 { pt3dadd( 35.2542, 35.3099, 33.2149, 0.29 ) }
    dend_40 { pt3dadd( 35.459, 36.1729, 33.1558, 0.74 ) }
    dend_40 { pt3dadd( 35.6533, 37.0045, 33.0785, 0.59 ) }
    dend_40 { pt3dadd( 35.8371, 37.793, 32.9886, 0.44 ) }
    dend_40 { pt3dadd( 36.0373, 38.5013, 32.8412, 0.22 ) }
    dend_40 { pt3dadd( 36.2328, 39.0561, 32.6868, 0.22 ) }
    dend_40 { pt3dadd( 36.5132, 39.7708, 32.4908, 0.22 ) }
    dend_40 { pt3dadd( 36.7923, 40.4298, 32.3184, 0.37 ) }
    dend_40 { pt3dadd( 36.991, 40.8569, 32.1912, 0.37 ) }
    dend_40 { pt3dadd( 37.7204, 42.3783, 31.7108, 0.74 ) }
    dend_40 { pt3dadd( 38.2036, 43.3771, 31.3712, 0.22 ) }
    dend_40 { pt3dadd( 38.7237, 44.4834, 30.9959, 0.22 ) }
    dend_40 { pt3dadd( 39.0872, 45.3141, 30.7064, 0.44 ) }
    dend_40 { pt3dadd( 39.4779, 46.3277, 30.2654, 0.29 ) }
    dend_40 { pt3dadd( 39.6895, 46.9209, 29.9193, 0.66 ) }
    dend_40 { pt3dadd( 39.8953, 47.5861, 29.4659, 0.66 ) }
    dend_40 { pt3dadd( 40.0555, 48.2325, 28.9673, 0.88 ) }
    dend_40 { pt3dadd( 40.2068, 48.9692, 28.384, 0.88 ) }
    dend_40 { pt3dadd( 40.4909, 50.3784, 27.3522, 0.59 ) }
    dend_40 { pt3dadd( 40.817, 51.7406, 26.4942, 0.44 ) }
    dend_40 { pt3dadd( 41.0504, 52.554, 26.0196, 0.44 ) }
    dend_40 { pt3dadd( 41.4161, 53.7452, 25.4104, 0.52 ) }
    dend_40 { pt3dadd( 41.7074, 54.626, 24.9766, 0.59 ) }
    dend_40 { pt3dadd( 42.1351, 55.8422, 24.3953, 0.44 ) }
    dend_40 { pt3dadd( 42.547, 56.9612, 23.8962, 0.22 ) }
    dend_40 { pt3dadd( 42.8833, 57.8514, 23.474, 0.44 ) }
    dend_40 { pt3dadd( 43.1991, 58.6588, 23.0398, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 43.6903, 59.9113, 22.3288, 1.11 ) }
    dend_40 { pt3dadd( 44.1116, 61.1119, 21.6375, 0.96 ) }
    dend_40 { pt3dadd( 44.3154, 61.8029, 21.2496, 0.96 ) }
    dend_40 { pt3dadd( 44.7019, 63.3396, 20.4402, 0.59 ) }
    dend_40 { pt3dadd( 44.9108, 64.3175, 19.998, 0.37 ) }
    dend_40 { pt3dadd( 45.1198, 65.4574, 19.6115, 0.22 ) }
    dend_40 { pt3dadd( 45.2092, 66.2018, 19.4623, 0.66 ) }
    dend_40 { pt3dadd( 45.2654, 66.8648, 19.3619, 0.74 ) }
    dend_40 { pt3dadd( 45.326, 67.6008, 19.2527, 0.52 ) }
    dend_40 { pt3dadd( 45.4167, 68.6419, 19.0752, 0.59 ) }
    dend_40 { pt3dadd( 45.5726, 70.0232, 18.7644, 0.66 ) }
    dend_40 { pt3dadd( 45.7365, 71.2212, 18.4503, 0.29 ) }
    dend_40 { pt3dadd( 45.942, 72.627, 18.0522, 0.29 ) }
    dend_40 { pt3dadd( 46.1108, 73.6372, 17.7203, 0.37 ) }
    dend_40 { pt3dadd( 46.3754, 74.9883, 17.2331, 0.44 ) }
    dend_40 { pt3dadd( 46.6182, 76.0403, 16.7932, 0.52 ) }
    dend_40 { pt3dadd( 46.866, 77.0618, 16.2997, 0.66 ) }
    dend_40 { pt3dadd( 47.1012, 77.9986, 15.8534, 0.66 ) }
    dend_40 { pt3dadd( 47.3232, 78.9499, 15.4045, 0.66 ) }
    dend_40 { pt3dadd( 47.5176, 79.8267, 14.976, 0.96 ) }
    dend_40 { pt3dadd( 47.906, 81.4368, 14.1531, 0.44 ) }
    dend_40 { pt3dadd( 48.1617, 82.3667, 13.6304, 0.44 ) }
    dend_40 { pt3dadd( 48.4389, 83.2073, 13.1145, 0.59 ) }
    dend_40 { pt3dadd( 48.9198, 84.4299, 12.3085, 0.22 ) }
    dend_40 { pt3dadd( 49.1627, 84.9923, 11.936, 0.22 ) }
    dend_40 { pt3dadd( 49.3764, 85.4518, 11.6257, 0.22 ) }
    dend_40 { pt3dadd( 49.5287, 85.7465, 11.436, 0.22 ) }
    dend_40 { pt3dadd( 49.8117, 86.2739, 11.1169, 0.22 ) }
    dend_40 { pt3dadd( 50.0317, 86.6947, 10.8616, 0.22 ) }
    dend_40 { pt3dadd( 50.3072, 87.2509, 10.5311, 0.66 ) }
    dend_40 { pt3dadd( 50.6731, 88.0456, 10.0488, 0.66 ) }
    dend_40 { pt3dadd( 51.0185, 88.9152, 9.54314, 0.66 ) }
    dend_40 { pt3dadd( 51.2187, 89.4959, 9.22636, 0.37 ) }
    dend_40 { pt3dadd( 51.4982, 90.4394, 8.72464, 0.22 ) }
    dend_40 { pt3dadd( 51.7601, 91.4779, 8.27814, 0.44 ) }
    dend_40 { pt3dadd( 51.917, 92.2198, 8.05341, 0.44 ) }
    dend_40 { pt3dadd( 52.0821, 93.0894, 7.94759, 0.44 ) }
    dend_40 { pt3dadd( 52.242, 94.2429, 8.12628, 0.22 ) }
    dend_40 { pt3dadd( 52.3761, 95.3452, 8.41365, 0.29 ) }
    dend_40 { pt3dadd( 52.5898, 97.2782, 8.96895, 0.44 ) }
    dend_40 { pt3dadd( 52.7334, 98.5503, 9.28335, 0.66 ) }
    dend_40 { pt3dadd( 52.9129, 99.7961, 9.4396, 0.66 ) }
    dend_40 { pt3dadd( 53.3033, 101.749, 9.32951, 0.29 ) }
    dend_40 { pt3dadd( 53.755, 103.414, 8.81135, 0.37 ) }
    dend_40 { pt3dadd( 54.1733, 104.737, 8.02742, 0.52 ) }
    dend_40 { pt3dadd( 54.5183, 105.813, 7.07207, 0.74 ) }
    dend_40 { pt3dadd( 54.8809, 106.939, 5.84912, 0.74 ) }
    dend_40 { pt3dadd( 55.1237, 107.669, 4.97264, 0.74 ) }
    dend_40 { pt3dadd( 55.5148, 108.779, 3.55757, 0.52 ) }
    dend_40 { pt3dadd( 55.8466, 109.757, 2.42233, 0.59 ) }
    dend_40 { pt3dadd( 56.337, 111.337, 0.752342, 0.22 ) }
    dend_40 { pt3dadd( 56.5319, 112.0, 0.0941542, 0.22 ) }
    dend_40 { pt3dadd( 56.7439, 112.782, -0.634995, 0.59 ) }
    dend_40 { pt3dadd( 57.0363, 113.915, -1.70369, 0.96 ) }
    dend_40 { pt3dadd( 57.3261, 115.091, -2.73389, 0.37 ) }
    dend_40 { pt3dadd( 57.5653, 115.972, -3.44994, 0.44 ) }
    dend_40 { pt3dadd( 57.9208, 117.149, -4.35918, 0.44 ) }
    dend_40 { pt3dadd( 58.2436, 118.148, -5.12165, 0.44 ) }
    dend_40 { pt3dadd( 58.5304, 118.94, -5.73151, 0.44 ) }
    dend_40 { pt3dadd( 59.0307, 120.12, -6.62493, 0.22 ) }
    dend_40 { pt3dadd( 59.6344, 121.384, -7.59089, 0.22 ) }
    dend_40 { pt3dadd( 59.853, 121.797, -7.89361, 0.22 ) }
    dend_40 { pt3dadd( 60.2508, 122.531, -8.37594, 0.59 ) }
    dend_40 { pt3dadd( 60.9708, 123.854, -9.15016, 0.29 ) }
    dend_40 { pt3dadd( 61.4363, 124.783, -9.65347, 0.29 ) }
    dend_40 { pt3dadd( 61.8743, 125.811, -10.1961, 0.52 ) }
    dend_40 { pt3dadd( 62.187, 126.755, -10.6583, 0.88 ) }
    dend_40 { pt3dadd( 62.3752, 127.464, -11.0011, 0.88 ) }
    dend_40 { pt3dadd( 62.5949, 128.441, -11.4446, 0.59 ) }
    dend_40 { pt3dadd( 62.882, 129.718, -11.9546, 0.22 ) }
    dend_40 { pt3dadd( 63.0655, 130.374, -12.2114, 0.29 ) }
    dend_40 { pt3dadd( 63.2668, 130.924, -12.4352, 0.29 ) }
    dend_40 { pt3dadd( 63.5493, 131.559, -12.6893, 0.81 ) }
    dend_40 { pt3dadd( 63.9925, 132.401, -13.0199, 0.88 ) }
    dend_40 { pt3dadd( 64.44, 133.147, -13.2862, 0.59 ) }
    dend_40 { pt3dadd( 65.0601, 134.104, -13.6178, 0.59 ) }
    dend_40 { pt3dadd( 65.7811, 135.225, -14.0047, 0.29 ) }
    dend_40 { pt3dadd( 66.6876, 136.697, -14.5361, 0.52 ) }
    dend_40 { pt3dadd( 67.2214, 137.618, -14.9313, 0.59 ) }
    dend_40 { pt3dadd( 67.7126, 138.586, -15.4193, 0.59 ) }
    dend_40 { pt3dadd( 68.0322, 139.305, -15.8341, 0.74 ) }
    dend_40 { pt3dadd( 68.2376, 139.813, -16.1828, 0.74 ) }
    dend_40 { pt3dadd( 68.5902, 140.752, -16.943, 0.66 ) }
    dend_40 { pt3dadd( 68.8894, 141.618, -17.7361, 0.66 ) }
    dend_40 { pt3dadd( 69.142, 142.417, -18.4708, 0.74 ) }
    dend_40 { pt3dadd( 69.4642, 143.519, -19.3479, 0.52 ) }
    dend_40 { pt3dadd( 69.6817, 144.303, -19.79, 0.59 ) }
    dend_40 { pt3dadd( 69.9201, 145.189, -20.0445, 0.44 ) }
    dend_40 { pt3dadd( 70.1676, 146.098, -20.1699, 0.59 ) }
    dend_40 { pt3dadd( 70.3661, 146.816, -20.2361, 0.37 ) }
    dend_40 { pt3dadd( 70.7683, 148.468, -20.476, 0.74 ) }
    dend_40 { pt3dadd( 70.9336, 149.535, -20.7966, 1.03 ) }
    dend_40 { pt3dadd( 71.0346, 150.732, -21.43, 0.44 ) }
    dend_40 { pt3dadd( 71.0933, 152.457, -22.9964, 0.59 ) }
    dend_40 { pt3dadd( 71.1266, 153.308, -23.9947, 1.18 ) }
    dend_40 { pt3dadd( 71.1657, 154.345, -25.3764, 0.37 ) }
    dend_40 { pt3dadd( 71.1731, 155.326, -26.8447, 0.37 ) }
    dend_40 { pt3dadd( 71.1479, 156.064, -28.0476, 0.81 ) }
    dend_40 { pt3dadd( 71.1031, 157.255, -29.999, 0.81 ) }
    dend_40 { pt3dadd( 71.086, 158.03, -31.1346, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 71.1308, 158.903, -32.2824, 0.37 ) }
    dend_40 { pt3dadd( 71.2833, 159.946, -33.468, 0.37 ) }
    dend_40 { pt3dadd( 71.5368, 161.253, -34.7207, 0.37 ) }
    dend_40 { pt3dadd( 71.7047, 162.029, -35.3116, 0.52 ) }
    dend_40 { pt3dadd( 71.8815, 162.914, -35.8154, 0.44 ) }
    dend_40 { pt3dadd( 72.0774, 163.872, -36.3386, 0.66 ) }
    dend_40 { pt3dadd( 72.3035, 164.733, -36.8275, 0.81 ) }
    dend_40 { pt3dadd( 72.4765, 165.319, -37.1527, 0.81 ) }
    dend_40 { pt3dadd( 72.6686, 165.965, -37.5174, 0.74 ) }
    dend_40 { pt3dadd( 73.0545, 167.403, -38.3721, 0.66 ) }
    dend_40 { pt3dadd( 73.4379, 168.927, -39.3038, 0.44 ) }
    dend_40 { pt3dadd( 73.7204, 170.181, -40.0617, 0.44 ) }
    dend_40 { pt3dadd( 73.9329, 171.17, -40.6325, 1.03 ) }
    dend_40 { pt3dadd( 74.0731, 171.915, -40.9637, 0.66 ) }
    dend_40 { pt3dadd( 74.2107, 172.911, -41.2176, 0.52 ) }
    dend_40 { pt3dadd( 74.2773, 173.451, -41.2817, 0.74 ) }
    dend_40 { pt3dadd( 74.3484, 174.189, -41.3679, 0.96 ) }
    dend_40 { pt3dadd( 74.3941, 174.605, -41.4431, 0.96 ) }
    dend_40 { pt3dadd( 74.6547, 176.415, -42.0549, 0.66 ) }
    dend_40 { pt3dadd( 74.9144, 177.912, -42.8378, 0.66 ) }
    dend_40 { pt3dadd( 75.147, 179.215, -43.7664, 0.44 ) }
    dend_40 { pt3dadd( 75.3779, 180.696, -45.0992, 0.96 ) }
    dend_40 { pt3dadd( 75.4789, 181.641, -46.1505, 0.52 ) }
    dend_40 { pt3dadd( 75.4835, 182.544, -47.3872, 0.52 ) }
    dend_40 { pt3dadd( 75.4763, 183.353, -48.7171, 0.52 ) }
    dend_40 { pt3dadd( 75.4143, 183.927, -49.8059, 0.44 ) }
    dend_40 { pt3dadd( 75.2581, 184.449, -50.8519, 0.44 ) }
    dend_40 { pt3dadd( 75.0245, 184.859, -51.7566, 0.96 ) }
    dend_40 { pt3dadd( 74.4252, 185.457, -53.345, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 49.479, -61.7684, 67.2345, 0.37 ) }
    dend_38 { pt3dadd( 49.8015, -63.0545, 69.8923, 0.37 ) }
    dend_38 { pt3dadd( 50.3246, -64.6143, 72.4776, 0.37 ) }
    dend_38 { pt3dadd( 50.6422, -65.4198, 73.7599, 0.59 ) }
    dend_38 { pt3dadd( 51.1803, -66.7264, 75.735, 0.44 ) }
    dend_38 { pt3dadd( 51.4857, -67.3501, 76.7865, 0.66 ) }
    dend_38 { pt3dadd( 51.9392, -68.1171, 78.3389, 0.44 ) }
    dend_38 { pt3dadd( 52.6372, -69.1778, 80.5235, 0.44 ) }
    dend_38 { pt3dadd( 53.2132, -69.9615, 82.1446, 0.44 ) }
    dend_38 { pt3dadd( 53.6256, -70.465, 83.2074, 0.81 ) }
    dend_38 { pt3dadd( 54.9632, -72.0435, 86.4564, 0.81 ) }
    dend_38 { pt3dadd( 56.2196, -73.5305, 89.4868, 0.81 ) }
    dend_38 { pt3dadd( 56.6259, -74.0255, 90.4573, 0.81 ) }
    dend_38 { pt3dadd( 57.1972, -74.7764, 91.7354, 0.44 ) }
    dend_38 { pt3dadd( 57.7235, -75.5705, 92.8337, 0.44 ) }
    dend_38 { pt3dadd( 58.5465, -77.0191, 94.5779, 0.44 ) }
    dend_38 { pt3dadd( 58.9311, -77.8443, 95.4198, 0.66 ) }
    dend_38 { pt3dadd( 59.1908, -78.4984, 96.0627, 0.66 ) }
    dend_38 { pt3dadd( 59.7411, -80.0065, 97.7797, 0.52 ) }
    dend_38 { pt3dadd( 60.1671, -81.4222, 99.5944, 0.66 ) }
    dend_38 { pt3dadd( 60.5853, -83.3003, 102.08, 0.29 ) }
    dend_38 { pt3dadd( 60.7037, -84.0647, 103.125, 0.29 ) }
    dend_38 { pt3dadd( 60.8243, -85.2916, 104.804, 0.22 ) }
    dend_38 { pt3dadd( 60.9015, -87.1955, 107.323, 0.22 ) }
    dend_38 { pt3dadd( 60.8963, -88.4956, 109.003, 0.22 ) }
    dend_38 { pt3dadd( 60.8488, -89.6829, 110.481, 0.37 ) }
    dend_38 { pt3dadd( 60.7386, -91.4226, 112.53, 0.74 ) }
    dend_38 { pt3dadd( 60.6715, -92.438, 113.62, 0.88 ) }
    dend_38 { pt3dadd( 60.5954, -93.5805, 114.739, 0.22 ) }
    dend_38 { pt3dadd( 60.3887, -95.5994, 116.381, 0.22 ) }
    dend_38 { pt3dadd( 60.2993, -96.3922, 116.966, 0.22 ) }
    dend_38 { pt3dadd( 60.133, -97.6604, 117.701, 0.22 ) }
    dend_38 { pt3dadd( 59.8435, -99.7384, 118.565, 0.15 ) }
    dend_38 { pt3dadd( 59.6579, -101.331, 119.078, 0.15 ) }
    dend_38 { pt3dadd( 59.3828, -104.323, 119.939, 0.22 ) }
    dend_38 { pt3dadd( 59.2235, -106.398, 120.48, 0.22 ) }
    dend_38 { pt3dadd( 58.9638, -110.107, 121.558, 0.15 ) }
    dend_38 { pt3dadd( 58.6879, -113.195, 122.528, 0.15 ) }
    dend_38 { pt3dadd( 58.3649, -116.112, 123.601, 0.22 ) }
    dend_38 { pt3dadd( 58.058, -118.632, 124.697, 0.22 ) }
    dend_38 { pt3dadd( 57.7983, -120.69, 125.744, 0.22 ) }
    dend_38 { pt3dadd( 57.4632, -123.054, 127.095, 0.22 ) }
    dend_38 { pt3dadd( 57.0307, -126.077, 129.138, 0.22 ) }
    dend_38 { pt3dadd( 56.5935, -129.134, 131.297, 0.22 ) }
    dend_38 { pt3dadd( 56.3387, -130.977, 132.63, 0.22 ) }
    dend_38 { pt3dadd( 56.1831, -132.276, 133.518, 0.52 ) }
    dend_38 { pt3dadd( 56.0493, -133.877, 134.572, 0.59 ) }
    dend_38 { pt3dadd( 56.0078, -135.796, 135.76, 0.22 ) }
    dend_38 { pt3dadd( 56.0583, -137.114, 136.543, 0.15 ) }
    dend_38 { pt3dadd( 56.1473, -138.805, 137.595, 0.15 ) }
    dend_38 { pt3dadd( 56.0877, -140.627, 138.562, 0.22 ) }
    dend_38 { pt3dadd( 55.8827, -141.922, 139.207, 0.37 ) }
    dend_38 { pt3dadd( 55.4993, -143.712, 140.082, 0.37 ) }
    dend_38 { pt3dadd( 54.9517, -145.624, 140.941, 0.15 ) }
    dend_38 { pt3dadd( 53.9102, -148.595, 142.236, 0.15 ) }
    dend_38 { pt3dadd( 51.9993, -153.188, 143.971, 0.15 ) }
    dend_38 { pt3dadd( 50.9389, -155.291, 144.719, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 49.479, -61.7684, 67.2345, 0.29 ) }
    dend_37 { pt3dadd( 49.615, -62.9048, 66.5294, 0.29 ) }
    dend_37 { pt3dadd( 49.8878, -64.7768, 65.2807, 0.37 ) }
    dend_37 { pt3dadd( 50.0634, -65.8989, 64.5295, 0.37 ) }
    dend_37 { pt3dadd( 50.3374, -67.3621, 63.5693, 0.22 ) }
    dend_37 { pt3dadd( 50.7054, -68.9485, 62.5351, 0.22 ) }
    dend_37 { pt3dadd( 50.9386, -69.8229, 61.9894, 0.52 ) }
    dend_37 { pt3dadd( 51.4077, -71.6547, 60.904, 0.29 ) }
    dend_37 { pt3dadd( 51.6316, -72.5071, 60.4348, 0.44 ) }
    dend_37 { pt3dadd( 51.8445, -73.3826, 59.9775, 0.66 ) }
    dend_37 { pt3dadd( 52.0957, -74.6183, 59.3722, 0.37 ) }
    dend_37 { pt3dadd( 52.2492, -75.8266, 58.8625, 0.29 ) }
    dend_37 { pt3dadd( 52.2933, -77.2671, 58.2909, 0.29 ) }
    dend_37 { pt3dadd( 52.2435, -78.5557, 57.8241, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 52.1604, -79.969, 57.337, 0.66 ) }
    dend_37 { pt3dadd( 52.0312, -81.3886, 56.8745, 0.66 ) }
    dend_37 { pt3dadd( 51.875, -82.7946, 56.4553, 0.52 ) }
    dend_37 { pt3dadd( 51.6595, -84.8579, 55.8784, 0.37 ) }
    dend_37 { pt3dadd( 51.5813, -86.284, 55.5163, 0.66 ) }
    dend_37 { pt3dadd( 51.5806, -87.775, 55.1282, 0.22 ) }
    dend_37 { pt3dadd( 51.6403, -88.7156, 54.8293, 0.22 ) }
    dend_37 { pt3dadd( 51.7621, -89.6695, 54.4725, 0.59 ) }
    dend_37 { pt3dadd( 51.9744, -90.7518, 54.0224, 0.81 ) }
    dend_37 { pt3dadd( 52.3765, -92.2607, 53.3293, 0.52 ) }
    dend_37 { pt3dadd( 52.9387, -94.0586, 52.4296, 0.66 ) }
    dend_37 { pt3dadd( 53.5067, -95.7186, 51.5695, 0.44 ) }
    dend_37 { pt3dadd( 54.1528, -97.4603, 50.724, 0.37 ) }
    dend_37 { pt3dadd( 54.4601, -98.3127, 50.3312, 0.37 ) }
    dend_37 { pt3dadd( 54.786, -99.259, 49.9312, 0.37 ) }
    dend_37 { pt3dadd( 55.3326, -100.948, 49.329, 0.66 ) }
    dend_37 { pt3dadd( 55.664, -101.998, 49.0348, 1.11 ) }
    dend_37 { pt3dadd( 56.1235, -103.587, 48.6229, 0.66 ) }
    dend_37 { pt3dadd( 56.5439, -105.238, 48.1243, 0.44 ) }
    dend_37 { pt3dadd( 56.8368, -106.692, 47.5655, 0.44 ) }
    dend_37 { pt3dadd( 57.0638, -107.979, 46.9939, 0.59 ) }
    dend_37 { pt3dadd( 57.2523, -109.057, 46.4541, 0.52 ) }
    dend_37 { pt3dadd( 57.5598, -110.715, 45.4991, 0.29 ) }
    dend_37 { pt3dadd( 57.8584, -112.194, 44.5153, 0.81 ) }
    dend_37 { pt3dadd( 58.231, -113.823, 43.3322, 0.22 ) }
    dend_37 { pt3dadd( 58.3684, -114.383, 42.8953, 0.22 ) }
    dend_37 { pt3dadd( 58.4834, -114.793, 42.5606, 0.29 ) }
    dend_37 { pt3dadd( 58.9162, -115.857, 41.6879, 0.52 ) }
    dend_37 { pt3dadd( 59.5053, -116.857, 40.9045, 0.22 ) }
    dend_37 { pt3dadd( 60.1952, -117.743, 40.2659, 0.52 ) }
    dend_37 { pt3dadd( 60.7405, -118.309, 39.8831, 0.52 ) }
    dend_37 { pt3dadd( 61.3875, -118.883, 39.5525, 0.29 ) }
    dend_37 { pt3dadd( 62.9068, -120.0, 39.052, 0.22 ) }
    dend_37 { pt3dadd( 63.8787, -120.596, 38.8965, 0.29 ) }
    dend_37 { pt3dadd( 64.6964, -121.059, 38.8562, 0.52 ) }
    dend_37 { pt3dadd( 65.5152, -121.518, 38.8847, 0.66 ) }
    dend_37 { pt3dadd( 67.2393, -122.475, 39.0173, 0.44 ) }
    dend_37 { pt3dadd( 68.5654, -123.242, 39.1783, 0.44 ) }
    dend_37 { pt3dadd( 69.7953, -124.0, 39.3518, 0.44 ) }
    dend_37 { pt3dadd( 70.9127, -124.71, 39.4869, 0.52 ) }
    dend_37 { pt3dadd( 71.8843, -125.362, 39.5273, 0.66 ) }
    dend_37 { pt3dadd( 72.7221, -125.956, 39.4828, 0.66 ) }
    dend_37 { pt3dadd( 73.8376, -126.757, 39.2744, 0.37 ) }
    dend_37 { pt3dadd( 74.6676, -127.321, 39.0716, 0.37 ) }
    dend_37 { pt3dadd( 75.3617, -127.766, 38.8266, 0.74 ) }
    dend_37 { pt3dadd( 76.2541, -128.303, 38.4517, 1.03 ) }
    dend_37 { pt3dadd( 77.307, -128.933, 37.972, 0.29 ) }
    dend_37 { pt3dadd( 78.4604, -129.624, 37.4295, 0.22 ) }
    dend_37 { pt3dadd( 79.6895, -130.333, 36.8607, 0.22 ) }
    dend_37 { pt3dadd( 81.0382, -131.123, 36.2757, 0.22 ) }
    dend_37 { pt3dadd( 82.1438, -131.773, 35.8916, 0.29 ) }
    dend_37 { pt3dadd( 83.049, -132.316, 35.6777, 0.44 ) }
    dend_37 { pt3dadd( 83.927, -132.846, 35.5601, 0.44 ) }
    dend_37 { pt3dadd( 84.8069, -133.384, 35.5645, 0.81 ) }
    dend_37 { pt3dadd( 85.3106, -133.693, 35.637, 0.88 ) }
    dend_37 { pt3dadd( 86.7442, -134.591, 36.0442, 0.22 ) }
    dend_37 { pt3dadd( 87.6299, -135.18, 36.4597, 0.15 ) }
    dend_37 { pt3dadd( 88.5974, -135.822, 37.0746, 0.15 ) }
    dend_37 { pt3dadd( 89.6806, -136.547, 37.872, 0.15 ) }
    dend_37 { pt3dadd( 90.2257, -136.928, 38.2998, 0.37 ) }
    dend_37 { pt3dadd( 90.9363, -137.454, 38.8551, 0.81 ) }
    dend_37 { pt3dadd( 92.5436, -138.781, 40.0989, 0.52 ) }
    dend_37 { pt3dadd( 93.5379, -139.77, 40.9222, 0.66 ) }
    dend_37 { pt3dadd( 93.9975, -140.355, 41.3177, 0.52 ) }
    dend_37 { pt3dadd( 94.4996, -141.17, 41.7272, 0.22 ) }
    dend_37 { pt3dadd( 95.0698, -142.274, 42.2433, 0.22 ) }
    dend_37 { pt3dadd( 95.4316, -143.116, 42.5951, 0.44 ) }
    dend_37 { pt3dadd( 95.9991, -144.728, 43.2336, 0.44 ) }
    dend_37 { pt3dadd( 96.3501, -146.021, 43.7867, 0.44 ) }
    dend_37 { pt3dadd( 96.6029, -147.203, 44.3609, 0.44 ) }
    dend_37 { pt3dadd( 96.9677, -148.854, 45.3749, 0.29 ) }
    dend_37 { pt3dadd( 97.1093, -149.408, 45.7665, 0.66 ) }
    dend_37 { pt3dadd( 97.4784, -150.591, 46.6827, 0.66 ) }
    dend_37 { pt3dadd( 97.9323, -151.797, 47.6786, 0.66 ) }
    dend_37 { pt3dadd( 98.2799, -152.614, 48.3694, 1.03 ) }
    dend_37 { pt3dadd( 99.1249, -154.392, 49.8112, 0.29 ) }
    dend_37 { pt3dadd( 99.6663, -155.451, 50.5812, 0.15 ) }
    dend_37 { pt3dadd( 99.8866, -155.822, 50.8655, 0.15 ) }
    dend_37 { pt3dadd( 100.248, -156.311, 51.2903, 0.15 ) }
    dend_37 { pt3dadd( 100.747, -156.809, 51.8414, 0.59 ) }
    dend_37 { pt3dadd( 101.069, -157.075, 52.1859, 0.81 ) }
    dend_37 { pt3dadd( 102.166, -157.932, 53.3371, 0.29 ) }
    dend_37 { pt3dadd( 103.222, -158.71, 54.4931, 0.44 ) }
    dend_37 { pt3dadd( 104.607, -159.728, 56.0046, 0.22 ) }
    dend_37 { pt3dadd( 105.908, -160.677, 57.3924, 0.22 ) }
    dend_37 { pt3dadd( 106.891, -161.423, 58.4938, 0.22 ) }
    dend_37 { pt3dadd( 107.876, -162.23, 59.6233, 0.29 ) }
    dend_37 { pt3dadd( 108.714, -162.978, 60.5683, 0.59 ) }
    dend_37 { pt3dadd( 109.275, -163.571, 61.2367, 1.03 ) }
    dend_37 { pt3dadd( 109.585, -163.987, 61.6398, 1.03 ) }
    dend_37 { pt3dadd( 110.878, -166.004, 63.5469, 0.15 ) }
    dend_37 { pt3dadd( 111.385, -166.856, 64.3399, 0.15 ) }
    dend_37 { pt3dadd( 111.76, -167.528, 64.9386, 0.22 ) }
    dend_37 { pt3dadd( 112.469, -168.832, 65.9748, 0.74 ) }
    dend_37 { pt3dadd( 112.973, -169.734, 66.6266, 0.96 ) }
    dend_37 { pt3dadd( 113.909, -171.373, 67.5928, 0.22 ) }
    dend_37 { pt3dadd( 114.497, -172.392, 67.9804, 0.22 ) }
    dend_37 { pt3dadd( 115.291, -173.726, 68.3292, 0.37 ) }
    dend_37 { pt3dadd( 116.114, -175.04, 68.5063, 0.15 ) }
    dend_37 { pt3dadd( 116.686, -175.943, 68.4762, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 117.409, -177.112, 68.3182, 0.15 ) }
    dend_37 { pt3dadd( 118.153, -178.399, 68.027, 0.66 ) }
    dend_37 { pt3dadd( 118.99, -179.822, 67.6569, 0.22 ) }
    dend_37 { pt3dadd( 119.715, -181.022, 67.331, 0.22 ) }
    dend_37 { pt3dadd( 120.486, -182.332, 67.0566, 0.29 ) }
    dend_37 { pt3dadd( 120.948, -183.153, 66.9607, 0.15 ) }
    dend_37 { pt3dadd( 121.335, -183.843, 66.9556, 0.52 ) }
    dend_37 { pt3dadd( 121.758, -184.579, 67.0952, 0.59 ) }
    dend_37 { pt3dadd( 122.53, -185.881, 67.6715, 0.22 ) }
    dend_37 { pt3dadd( 123.235, -186.937, 68.4295, 0.88 ) }
    dend_37 { pt3dadd( 123.789, -187.586, 69.1363, 0.88 ) }
    dend_37 { pt3dadd( 124.299, -188.067, 69.8547, 0.59 ) }
    dend_37 { pt3dadd( 125.54, -189.049, 71.7266, 0.15 ) }
    dend_37 { pt3dadd( 126.539, -189.699, 73.3527, 0.22 ) }
    dend_37 { pt3dadd( 127.155, -189.996, 74.3966, 0.22 ) }
    dend_37 { pt3dadd( 128.224, -190.35, 76.2555, 0.15 ) }
    dend_37 { pt3dadd( 128.952, -190.528, 77.533, 0.15 ) }
    dend_37 { pt3dadd( 129.395, -190.604, 78.3118, 0.44 ) }
    dend_37 { pt3dadd( 130.401, -190.715, 80.0254, 0.74 ) }
    dend_37 { pt3dadd( 131.247, -190.799, 81.4687, 0.74 ) }
    dend_37 { pt3dadd( 132.221, -190.906, 83.294, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -59.4743, 59.7922, 46.128, 1.18 ) }
    dend_24 { pt3dadd( -61.4917, 61.5782, 46.8517, 1.18 ) }
    dend_24 { pt3dadd( -62.6292, 62.5122, 47.1434, 1.03 ) }
    dend_24 { pt3dadd( -63.6208, 63.2772, 47.2831, 1.4 ) }
    dend_24 { pt3dadd( -64.915, 64.2308, 47.4704, 1.03 ) }
    dend_24 { pt3dadd( -65.7656, 64.8308, 47.626, 0.88 ) }
    dend_24 { pt3dadd( -67.1097, 65.7488, 47.9054, 0.59 ) }
    dend_24 { pt3dadd( -68.4967, 66.634, 48.1275, 0.29 ) }
    dend_24 { pt3dadd( -69.7265, 67.3391, 48.3615, 0.37 ) }
    dend_24 { pt3dadd( -71.1077, 68.0684, 48.6816, 0.74 ) }
    dend_24 { pt3dadd( -72.3793, 68.7028, 49.0416, 1.4 ) }
    dend_24 { pt3dadd( -74.0567, 69.5328, 49.6028, 0.88 ) }
    dend_24 { pt3dadd( -75.0367, 70.0252, 50.0325, 0.88 ) }
    dend_24 { pt3dadd( -75.6932, 70.3787, 50.3858, 0.88 ) }
    dend_24 { pt3dadd( -76.5382, 70.8425, 50.8964, 0.59 ) }
    dend_24 { pt3dadd( -77.5707, 71.3954, 51.535, 0.44 ) }
    dend_24 { pt3dadd( -78.4264, 71.8202, 52.1173, 0.29 ) }
    dend_24 { pt3dadd( -79.9411, 72.5302, 53.2826, 0.52 ) }
    dend_24 { pt3dadd( -80.9423, 72.9821, 54.1238, 0.74 ) }
    dend_24 { pt3dadd( -81.924, 73.3944, 55.0113, 1.03 ) }
    dend_24 { pt3dadd( -83.1299, 73.8519, 56.1172, 0.59 ) }
    dend_24 { pt3dadd( -84.3189, 74.2717, 57.1978, 0.22 ) }
    dend_24 { pt3dadd( -85.3509, 74.6009, 58.1024, 0.22 ) }
    dend_24 { pt3dadd( -86.5643, 74.9567, 59.1542, 0.22 ) }
    dend_24 { pt3dadd( -87.7037, 75.2918, 60.2128, 0.37 ) }
    dend_24 { pt3dadd( -88.265, 75.4602, 60.745, 0.52 ) }
    dend_24 { pt3dadd( -89.3577, 75.8058, 61.7451, 1.33 ) }
    dend_24 { pt3dadd( -90.6579, 76.2396, 62.8789, 0.29 ) }
    dend_24 { pt3dadd( -92.2528, 76.7552, 64.1454, 0.37 ) }
    dend_24 { pt3dadd( -93.6817, 77.2066, 65.1579, 0.37 ) }
    dend_24 { pt3dadd( -94.5505, 77.4661, 65.6956, 0.37 ) }
    dend_24 { pt3dadd( -95.6226, 77.744, 66.2635, 0.66 ) }
    dend_24 { pt3dadd( -96.2519, 77.8852, 66.5381, 0.66 ) }
    dend_24 { pt3dadd( -97.4798, 78.1566, 66.9549, 0.44 ) }
    dend_24 { pt3dadd( -98.2196, 78.326, 67.1768, 0.44 ) }
    dend_24 { pt3dadd( -99.2146, 78.5508, 67.5471, 0.22 ) }
    dend_24 { pt3dadd( -100.086, 78.7572, 68.0188, 0.22 ) }
    dend_24 { pt3dadd( -101.149, 78.9969, 68.7897, 0.22 ) }
    dend_24 { pt3dadd( -102.065, 79.2016, 69.5624, 0.15 ) }
    dend_24 { pt3dadd( -103.273, 79.4535, 70.7483, 0.66 ) }
    dend_24 { pt3dadd( -104.439, 79.6875, 71.9171, 0.29 ) }
    dend_24 { pt3dadd( -105.666, 79.9081, 73.1241, 0.66 ) }
    dend_24 { pt3dadd( -106.875, 80.0891, 74.2122, 1.03 ) }
    dend_24 { pt3dadd( -107.852, 80.1922, 74.9689, 1.25 ) }
    dend_24 { pt3dadd( -110.164, 80.3232, 76.4924, 0.22 ) }
    dend_24 { pt3dadd( -111.466, 80.349, 77.1723, 0.22 ) }
    dend_24 { pt3dadd( -112.42, 80.3439, 77.5348, 0.29 ) }
    dend_24 { pt3dadd( -113.837, 80.3104, 77.8671, 0.29 ) }
    dend_24 { pt3dadd( -114.819, 80.2876, 77.9353, 0.22 ) }
    dend_24 { pt3dadd( -115.873, 80.2541, 77.8543, 0.29 ) }
    dend_24 { pt3dadd( -116.577, 80.2366, 77.6944, 0.44 ) }
    dend_24 { pt3dadd( -117.399, 80.2228, 77.4203, 0.66 ) }
    dend_24 { pt3dadd( -118.258, 80.2381, 77.0697, 0.66 ) }
    dend_24 { pt3dadd( -119.474, 80.3208, 76.5131, 0.22 ) }
    dend_24 { pt3dadd( -120.398, 80.4289, 76.0894, 0.22 ) }
    dend_24 { pt3dadd( -121.633, 80.6111, 75.6434, 0.29 ) }
    dend_24 { pt3dadd( -123.384, 80.8975, 75.1967, 0.29 ) }
    dend_24 { pt3dadd( -124.158, 81.0279, 75.0843, 0.59 ) }
    dend_24 { pt3dadd( -125.431, 81.2223, 75.079, 0.59 ) }
    dend_24 { pt3dadd( -127.011, 81.4397, 75.2534, 0.22 ) }
    dend_24 { pt3dadd( -129.132, 81.7132, 75.6514, 0.44 ) }
    dend_24 { pt3dadd( -130.009, 81.8091, 75.8798, 0.44 ) }
    dend_24 { pt3dadd( -131.0, 81.9017, 76.1848, 0.22 ) }
    dend_24 { pt3dadd( -132.476, 82.0288, 76.6091, 0.37 ) }
    dend_24 { pt3dadd( -133.099, 82.0919, 76.7403, 0.59 ) }
    dend_24 { pt3dadd( -133.79, 82.1925, 76.8122, 0.96 ) }
    dend_24 { pt3dadd( -134.888, 82.4006, 76.8087, 0.29 ) }
    dend_24 { pt3dadd( -136.595, 82.7836, 76.7258, 0.22 ) }
    dend_24 { pt3dadd( -137.637, 83.0495, 76.7442, 0.22 ) }
    dend_24 { pt3dadd( -139.426, 83.5526, 76.8438, 0.22 ) }
    dend_24 { pt3dadd( -140.984, 84.0245, 77.023, 0.29 ) }
    dend_24 { pt3dadd( -141.817, 84.2949, 77.1602, 0.29 ) }
    dend_24 { pt3dadd( -142.882, 84.6705, 77.3924, 0.59 ) }
    dend_24 { pt3dadd( -145.714, 85.7546, 78.3826, 0.07 ) }
    dend_24 { pt3dadd( -146.317, 86.0014, 78.6824, 0.15 ) }
    dend_24 { pt3dadd( -147.037, 86.3224, 79.1911, 0.29 ) }
    dend_24 { pt3dadd( -148.34, 86.9678, 80.3127, 0.15 ) }
    dend_24 { pt3dadd( -148.771, 87.195, 80.7508, 0.22 ) }
    dend_24 { pt3dadd( -150.231, 87.9658, 82.4328, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -150.837, 88.282, 83.158, 0.81 ) }
    dend_24 { pt3dadd( -152.059, 88.882, 84.6937, 0.22 ) }
    dend_24 { pt3dadd( -152.709, 89.1816, 85.5066, 0.29 ) }
    dend_24 { pt3dadd( -153.903, 89.6887, 86.9852, 0.22 ) }
    dend_24 { pt3dadd( -154.877, 90.0753, 88.0052, 0.22 ) }
    dend_24 { pt3dadd( -155.469, 90.2965, 88.4394, 0.66 ) }
    dend_24 { pt3dadd( -155.9, 90.453, 88.6333, 0.66 ) }
    dend_24 { pt3dadd( -157.118, 90.9018, 88.8089, 0.22 ) }
    dend_24 { pt3dadd( -158.355, 91.391, 88.6725, 0.29 ) }
    dend_24 { pt3dadd( -159.651, 91.9876, 88.2492, 0.74 ) }
    dend_24 { pt3dadd( -161.481, 92.9249, 87.347, 0.22 ) }
    dend_24 { pt3dadd( -162.56, 93.4792, 86.7232, 0.15 ) }
    dend_24 { pt3dadd( -163.118, 93.7588, 86.363, 0.29 ) }
    dend_24 { pt3dadd( -163.835, 94.1076, 85.8563, 0.74 ) }
    dend_24 { pt3dadd( -164.782, 94.5503, 85.1804, 0.22 ) }
    dend_24 { pt3dadd( -165.984, 95.0371, 84.4605, 0.22 ) }
    dend_24 { pt3dadd( -166.561, 95.2453, 84.2264, 0.52 ) }
    dend_24 { pt3dadd( -166.942, 95.3723, 84.091, 0.88 ) }
    dend_24 { pt3dadd( -167.683, 95.6093, 83.861, 0.29 ) }
    dend_24 { pt3dadd( -168.699, 95.9029, 83.8317, 0.22 ) }
    dend_24 { pt3dadd( -170.042, 96.3005, 84.1276, 0.22 ) }
    dend_24 { pt3dadd( -170.821, 96.5495, 84.4415, 0.22 ) }
    dend_24 { pt3dadd( -171.976, 96.949, 85.0214, 0.22 ) }
    dend_24 { pt3dadd( -173.191, 97.3692, 85.7466, 0.15 ) }
    dend_24 { pt3dadd( -176.881, 98.5517, 88.6824, 0.15 ) }
    dend_24 { pt3dadd( -177.869, 98.8176, 89.6516, 0.15 ) }
    dend_24 { pt3dadd( -178.504, 98.9662, 90.3747, 0.15 ) }
    dend_24 { pt3dadd( -179.077, 99.0741, 91.1259, 0.15 ) }
    dend_24 { pt3dadd( -179.835, 99.1928, 92.197, 0.37 ) }
    dend_24 { pt3dadd( -181.733, 99.4182, 95.0145, 0.15 ) }
    dend_24 { pt3dadd( -183.02, 99.5136, 96.8653, 0.15 ) }
    dend_24 { pt3dadd( -183.955, 99.5304, 98.302, 0.15 ) }
    dend_24 { pt3dadd( -185.217, 99.5177, 100.398, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -59.4743, 59.7922, 46.128, 0.29 ) }
    dend_23 { pt3dadd( -59.3135, 60.0074, 46.8066, 0.29 ) }
    dend_23 { pt3dadd( -59.0577, 60.3351, 47.9302, 0.29 ) }
    dend_23 { pt3dadd( -58.8573, 60.6088, 48.9034, 0.29 ) }
    dend_23 { pt3dadd( -58.6766, 60.8901, 49.8926, 0.29 ) }
    dend_23 { pt3dadd( -58.5593, 61.1266, 50.6737, 0.29 ) }
    dend_23 { pt3dadd( -58.5371, 61.1893, 50.8711, 0.29 ) }
    dend_23 { pt3dadd( -58.5102, 61.3462, 51.3459, 0.29 ) }
    dend_23 { pt3dadd( -58.5199, 61.4304, 51.5994, 0.37 ) }
    dend_23 { pt3dadd( -58.6233, 61.6165, 52.1812, 0.37 ) }
    dend_23 { pt3dadd( -58.7694, 61.7446, 52.6231, 0.22 ) }
    dend_23 { pt3dadd( -58.9778, 61.8844, 53.1339, 0.22 ) }
    dend_23 { pt3dadd( -59.0573, 61.9346, 53.3346, 0.22 ) }
    dend_23 { pt3dadd( -59.117, 61.9732, 53.5209, 0.22 ) }
    dend_23 { pt3dadd( -59.1994, 62.0339, 53.8854, 0.22 ) }
    dend_23 { pt3dadd( -59.2532, 62.0722, 54.1877, 0.22 ) }
    dend_23 { pt3dadd( -59.2756, 62.0866, 54.3517, 0.22 ) }
    dend_23 { pt3dadd( -59.2974, 62.1071, 54.5755, 0.29 ) }
    dend_23 { pt3dadd( -59.3449, 62.1496, 55.1474, 0.29 ) }
    dend_23 { pt3dadd( -59.4067, 62.1875, 55.7919, 0.29 ) }
    dend_23 { pt3dadd( -59.4627, 62.2048, 56.2657, 0.29 ) }
    dend_23 { pt3dadd( -59.4996, 62.2147, 56.5734, 0.15 ) }
    dend_23 { pt3dadd( -59.6296, 62.2393, 57.7077, 0.15 ) }
    dend_23 { pt3dadd( -59.7597, 62.2405, 58.8966, 0.15 ) }
    dend_23 { pt3dadd( -59.8763, 62.2091, 59.9452, 0.15 ) }
    dend_23 { pt3dadd( -59.9404, 62.1771, 60.5262, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -37.7612, 34.134, -33.1856, 1.18 ) }
    dend_13 { pt3dadd( -39.3759, 34.5575, -32.6589, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -37.7612, 34.134, -33.1856, 0.29 ) }
    dend_12 { pt3dadd( -38.5711, 35.0433, -33.0457, 0.29 ) }
    dend_12 { pt3dadd( -39.2695, 35.8616, -33.0544, 0.29 ) }
    dend_12 { pt3dadd( -39.869, 36.5726, -33.1259, 0.88 ) }
    dend_12 { pt3dadd( -40.5747, 37.4089, -33.2496, 0.44 ) }
    dend_12 { pt3dadd( -41.2592, 38.2166, -33.4188, 0.44 ) }
    dend_12 { pt3dadd( -41.6857, 38.7079, -33.5386, 0.29 ) }
    dend_12 { pt3dadd( -42.5344, 39.6811, -33.9197, 0.29 ) }
    dend_12 { pt3dadd( -42.9503, 40.1368, -34.133, 0.74 ) }
    dend_12 { pt3dadd( -43.2784, 40.4508, -34.2956, 0.96 ) }
    dend_12 { pt3dadd( -43.9643, 41.0298, -34.5673, 0.96 ) }
    dend_12 { pt3dadd( -44.8522, 41.6971, -34.804, 0.66 ) }
    dend_12 { pt3dadd( -46.1785, 42.5916, -34.9471, 0.37 ) }
    dend_12 { pt3dadd( -46.9504, 43.0868, -34.8977, 0.22 ) }
    dend_12 { pt3dadd( -48.0254, 43.7655, -34.6991, 0.29 ) }
    dend_12 { pt3dadd( -49.2453, 44.5272, -34.3048, 0.29 ) }
    dend_12 { pt3dadd( -49.9239, 44.9404, -33.9775, 0.81 ) }
    dend_12 { pt3dadd( -51.0395, 45.6088, -33.2865, 1.03 ) }
    dend_12 { pt3dadd( -52.0139, 46.2121, -32.574, 0.22 ) }
    dend_12 { pt3dadd( -52.5883, 46.6113, -32.124, 0.29 ) }
    dend_12 { pt3dadd( -53.1164, 47.0502, -31.6898, 0.44 ) }
    dend_12 { pt3dadd( -53.5476, 47.4777, -31.3654, 0.44 ) }
    dend_12 { pt3dadd( -54.0716, 48.0993, -30.9551, 0.44 ) }
    dend_12 { pt3dadd( -54.5781, 48.8681, -30.5981, 0.52 ) }
    dend_12 { pt3dadd( -54.8988, 49.4476, -30.4567, 0.52 ) }
    dend_12 { pt3dadd( -55.2933, 50.2761, -30.3841, 0.29 ) }
    dend_12 { pt3dadd( -55.532, 50.8371, -30.3877, 0.37 ) }
    dend_12 { pt3dadd( -55.8603, 51.6145, -30.4319, 0.37 ) }
    dend_12 { pt3dadd( -56.4986, 52.9994, -30.5909, 0.81 ) }
    dend_12 { pt3dadd( -56.9975, 53.9809, -30.7627, 1.03 ) }
    dend_12 { pt3dadd( -57.4523, 54.797, -30.9389, 0.74 ) }
    dend_12 { pt3dadd( -58.0177, 55.7363, -31.1668, 0.66 ) }
    dend_12 { pt3dadd( -58.5755, 56.6376, -31.391, 0.37 ) }
    dend_12 { pt3dadd( -59.2992, 57.7956, -31.6784, 0.29 ) }
    dend_12 { pt3dadd( -59.7582, 58.5234, -31.8129, 0.29 ) }
    dend_12 { pt3dadd( -60.0008, 58.9507, -31.9107, 0.66 ) }
    dend_12 { pt3dadd( -60.2517, 59.4516, -32.0373, 1.18 ) }
    dend_12 { pt3dadd( -60.4381, 59.9034, -32.1504, 1.18 ) }
    dend_12 { pt3dadd( -60.7144, 60.6553, -32.3191, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -60.9818, 61.3488, -32.4439, 0.44 ) }
    dend_12 { pt3dadd( -61.4058, 62.3505, -32.6267, 0.29 ) }
    dend_12 { pt3dadd( -61.6273, 62.847, -32.7204, 0.29 ) }
    dend_12 { pt3dadd( -61.8648, 63.3625, -32.8151, 0.29 ) }
    dend_12 { pt3dadd( -62.2865, 64.258, -33.0076, 0.29 ) }
    dend_12 { pt3dadd( -62.6623, 65.0212, -33.181, 0.22 ) }
    dend_12 { pt3dadd( -63.1355, 65.9251, -33.3916, 0.37 ) }
    dend_12 { pt3dadd( -63.584, 66.7422, -33.5595, 0.22 ) }
    dend_12 { pt3dadd( -63.7825, 67.1112, -33.6364, 0.22 ) }
    dend_12 { pt3dadd( -64.1675, 67.8662, -33.7826, 0.44 ) }
    dend_12 { pt3dadd( -64.4365, 68.4285, -33.875, 0.96 ) }
    dend_12 { pt3dadd( -64.6789, 68.9085, -33.937, 1.18 ) }
    dend_12 { pt3dadd( -65.1462, 69.7208, -34.0061, 1.18 ) }
    dend_12 { pt3dadd( -65.4825, 70.2522, -34.0689, 1.25 ) }
    dend_12 { pt3dadd( -65.885, 70.8555, -34.178, 0.37 ) }
    dend_12 { pt3dadd( -66.2441, 71.3751, -34.2894, 0.22 ) }
    dend_12 { pt3dadd( -66.6669, 71.9919, -34.467, 0.29 ) }
    dend_12 { pt3dadd( -66.9287, 72.4188, -34.6145, 0.29 ) }
    dend_12 { pt3dadd( -67.3623, 73.2458, -34.9586, 0.22 ) }
    dend_12 { pt3dadd( -67.6969, 74.0224, -35.3078, 0.22 ) }
    dend_12 { pt3dadd( -67.8043, 74.3025, -35.4355, 0.44 ) }
    dend_12 { pt3dadd( -68.0707, 75.0717, -35.8111, 0.81 ) }
    dend_12 { pt3dadd( -68.4361, 76.2465, -36.4257, 0.29 ) }
    dend_12 { pt3dadd( -68.705, 77.1275, -36.9323, 0.52 ) }
    dend_12 { pt3dadd( -68.9393, 77.8121, -37.3572, 1.03 ) }
    dend_12 { pt3dadd( -69.1898, 78.4301, -37.7821, 1.03 ) }
    dend_12 { pt3dadd( -69.6743, 79.4251, -38.5369, 0.66 ) }
    dend_12 { pt3dadd( -70.1611, 80.2878, -39.2503, 0.59 ) }
    dend_12 { pt3dadd( -70.6974, 81.1365, -39.9883, 0.88 ) }
    dend_12 { pt3dadd( -71.3521, 82.1383, -40.8386, 0.22 ) }
    dend_12 { pt3dadd( -71.8754, 82.9337, -41.4861, 0.59 ) }
    dend_12 { pt3dadd( -72.4994, 83.9131, -42.2452, 0.22 ) }
    dend_12 { pt3dadd( -72.8189, 84.4422, -42.6162, 0.44 ) }
    dend_12 { pt3dadd( -73.1706, 85.1221, -43.0641, 0.74 ) }
    dend_12 { pt3dadd( -73.3789, 85.6654, -43.4121, 0.88 ) }
    dend_12 { pt3dadd( -73.5764, 86.3977, -43.8882, 0.37 ) }
    dend_12 { pt3dadd( -73.7239, 87.0815, -44.3627, 0.37 ) }
    dend_12 { pt3dadd( -73.885, 87.8951, -44.9406, 0.37 ) }
    dend_12 { pt3dadd( -74.1097, 88.8872, -45.6376, 0.29 ) }
    dend_12 { pt3dadd( -74.2942, 89.6988, -46.2289, 0.52 ) }
    dend_12 { pt3dadd( -74.3786, 90.0704, -46.5148, 0.52 ) }
    dend_12 { pt3dadd( -74.5863, 90.9878, -47.2235, 0.52 ) }
    dend_12 { pt3dadd( -74.7965, 91.7265, -47.7588, 0.37 ) }
    dend_12 { pt3dadd( -74.9845, 92.1593, -48.0465, 0.37 ) }
    dend_12 { pt3dadd( -78.8278, 99.4179, -48.5709, 0.37 ) }
    dend_12 { pt3dadd( -81.6313, 106.977, -47.1546, 0.37 ) }
    dend_12 { pt3dadd( -83.6636, 114.69, -45.3719, 0.37 ) }
    dend_12 { pt3dadd( -85.5723, 122.479, -43.8151, 0.37 ) }
    dend_12 { pt3dadd( -86.041, 130.604, -43.1546, 0.37 ) }
    dend_12 { pt3dadd( -85.965, 138.474, -40.944, 0.37 ) }
    dend_12 { pt3dadd( -85.2074, 146.46, -39.339, 0.37 ) }
    dend_12 { pt3dadd( -84.3697, 154.346, -37.3082, 0.37 ) }
    dend_12 { pt3dadd( -84.4779, 162.391, -35.909, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.0471, 71.7149, -42.4448, 0.52 ) }
    dend_8 { pt3dadd( -11.2442, 71.6359, -43.6519, 0.52 ) }
    dend_8 { pt3dadd( -12.3853, 71.4657, -44.8683, 0.52 ) }
    dend_8 { pt3dadd( -13.0289, 71.2936, -45.766, 0.66 ) }
    dend_8 { pt3dadd( -13.4833, 71.0659, -46.6431, 0.44 ) }
    dend_8 { pt3dadd( -13.8181, 70.8195, -47.5365, 0.37 ) }
    dend_8 { pt3dadd( -14.3141, 70.3953, -49.1775, 0.37 ) }
    dend_8 { pt3dadd( -14.4123, 70.287, -49.611, 0.37 ) }
    dend_8 { pt3dadd( -14.7174, 69.7844, -51.5422, 0.37 ) }
    dend_8 { pt3dadd( -14.9178, 69.3531, -53.1082, 0.52 ) }
    dend_8 { pt3dadd( -15.0735, 69.0384, -54.232, 0.52 ) }
    dend_8 { pt3dadd( -15.1803, 68.8765, -54.7822, 0.52 ) }
    dend_8 { pt3dadd( -15.5476, 68.5309, -55.7666, 0.52 ) }
    dend_8 { pt3dadd( -16.1414, 68.173, -56.5922, 0.66 ) }
    dend_8 { pt3dadd( -16.8853, 67.8354, -56.8663, 0.52 ) }
    dend_8 { pt3dadd( -17.9148, 67.4104, -57.0568, 0.44 ) }
    dend_8 { pt3dadd( -18.6775, 67.0859, -57.118, 0.44 ) }
    dend_8 { pt3dadd( -19.281, 66.8069, -57.1204, 0.81 ) }
    dend_8 { pt3dadd( -20.2752, 66.3228, -56.9931, 0.96 ) }
    dend_8 { pt3dadd( -21.6905, 65.6641, -56.6722, 0.22 ) }
    dend_8 { pt3dadd( -27.8252, 61.5441, -61.7345, 0.22 ) }
    dend_8 { pt3dadd( -35.2619, 57.4674, -64.5956, 0.22 ) }
    dend_8 { pt3dadd( -41.9701, 52.4423, -67.5787, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -10.0471, 71.7149, -42.4448, 0.59 ) }
    dend_7 { pt3dadd( -9.96046, 72.7748, -41.9267, 0.59 ) }
    dend_7 { pt3dadd( -9.91342, 73.9929, -41.4212, 0.59 ) }
    dend_7 { pt3dadd( -9.88458, 75.0041, -41.1568, 0.66 ) }
    dend_7 { pt3dadd( -9.89032, 75.7823, -41.0451, 0.81 ) }
    dend_7 { pt3dadd( -9.93663, 76.9269, -41.0253, 0.52 ) }
    dend_7 { pt3dadd( -10.0363, 78.3185, -41.165, 0.52 ) }
    dend_7 { pt3dadd( -10.1288, 79.1903, -41.4592, 0.66 ) }
    dend_7 { pt3dadd( -10.2545, 80.522, -42.2594, 1.03 ) }
    dend_7 { pt3dadd( -10.3262, 81.8074, -43.3908, 0.37 ) }
    dend_7 { pt3dadd( -10.3006, 82.7612, -44.516, 0.37 ) }
    dend_7 { pt3dadd( -10.2086, 83.4772, -45.5657, 0.59 ) }
    dend_7 { pt3dadd( -9.99523, 84.4219, -47.1268, 0.74 ) }
    dend_7 { pt3dadd( -9.71973, 85.2122, -48.5274, 0.74 ) }
    dend_7 { pt3dadd( -9.30381, 86.0788, -50.1331, 0.37 ) }
    dend_7 { pt3dadd( -8.91193, 86.6993, -51.3179, 0.37 ) }
    dend_7 { pt3dadd( -8.62065, 87.0846, -52.0041, 0.37 ) }
    dend_7 { pt3dadd( -8.29518, 87.4437, -52.647, 0.44 ) }
    dend_7 { pt3dadd( -7.74487, 88.0443, -53.6336, 0.44 ) }
    dend_7 { pt3dadd( -7.42862, 88.3956, -54.1718, 0.74 ) }
    dend_7 { pt3dadd( -6.85093, 89.0528, -55.1462, 0.74 ) }
    dend_7 { pt3dadd( -6.14178, 89.8195, -56.2993, 0.15 ) }
    dend_7 { pt3dadd( -5.43025, 90.4854, -57.4468, 0.15 ) }
    dend_7 { pt3dadd( -3.64839, 98.0526, -61.3164, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -2.36559, 105.904, -64.7222, 0.15 ) }
    dend_7 { pt3dadd( -2.06246, 112.886, -69.9547, 0.15 ) }
    dend_7 { pt3dadd( -2.13182, 119.278, -75.9678, 0.15 ) }
    dend_7 { pt3dadd( -2.54645, 126.334, -81.0737, 0.15 ) }
    dend_7 { pt3dadd( -2.4498, 133.675, -85.7347, 0.15 ) }
    dend_7 { pt3dadd( -1.08737, 141.159, -89.9367, 0.15 ) }
    dend_7 { pt3dadd( 0.472712, 149.011, -93.227, 0.15 ) }
    dend_7 { pt3dadd( 1.12793, 157.081, -96.2088, 0.15 ) }
    dend_7 { pt3dadd( 3.54184, 165.231, -97.6935, 0.15 ) }
    dend_7 { pt3dadd( 6.18987, 173.391, -98.6183, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 74.4252, 185.457, -53.345, 0.29 ) }
    dend_42 { pt3dadd( 74.4002, 185.906, -54.537, 0.29 ) }
    dend_42 { pt3dadd( 74.3443, 186.384, -56.1662, 0.29 ) }
    dend_42 { pt3dadd( 74.2666, 186.657, -57.2247, 0.29 ) }
    dend_42 { pt3dadd( 74.1689, 186.874, -58.0509, 0.29 ) }
    dend_42 { pt3dadd( 74.0925, 187.028, -58.6092, 0.59 ) }
    dend_42 { pt3dadd( 73.8876, 187.488, -60.1579, 0.22 ) }
    dend_42 { pt3dadd( 73.7721, 187.852, -61.2019, 0.22 ) }
    dend_42 { pt3dadd( 73.7311, 188.076, -61.7349, 0.22 ) }
    dend_42 { pt3dadd( 73.7228, 188.382, -62.3963, 0.15 ) }
    dend_42 { pt3dadd( 73.9214, 188.68, -62.752, 0.15 ) }
    dend_42 { pt3dadd( 74.3355, 189.067, -62.9464, 0.66 ) }
    dend_42 { pt3dadd( 75.1128, 189.712, -63.0886, 0.22 ) }
    dend_42 { pt3dadd( 75.5105, 190.027, -63.1343, 0.22 ) }
    dend_42 { pt3dadd( 75.8908, 190.284, -63.1656, 0.44 ) }
    dend_42 { pt3dadd( 76.9795, 190.874, -63.2085, 0.29 ) }
    dend_42 { pt3dadd( 79.9299, 194.485, -69.4325, 0.29 ) }
    dend_42 { pt3dadd( 82.1214, 198.33, -75.8161, 0.29 ) }
    dend_42 { pt3dadd( 83.626, 202.365, -82.2725, 0.29 ) }
    dend_42 { pt3dadd( 84.7486, 207.251, -88.1273, 0.29 ) }
    dend_42 { pt3dadd( 86.2185, 211.854, -94.1545, 0.29 ) }
    dend_42 { pt3dadd( 86.1686, 215.587, -100.99, 0.29 ) }
    dend_42 { pt3dadd( 85.2249, 218.65, -108.132, 0.29 ) }
    dend_42 { pt3dadd( 83.7129, 222.383, -114.811, 0.29 ) }
    dend_42 { pt3dadd( 83.3712, 226.064, -121.672, 0.29 ) }
    dend_42 { pt3dadd( 82.9157, 230.506, -128.007, 0.29 ) }
    dend_42 { pt3dadd( 83.2837, 235.418, -133.942, 0.29 ) }
    dend_42 { pt3dadd( 84.8636, 239.589, -140.282, 0.29 ) }
    dend_42 { pt3dadd( 88.1752, 243.129, -146.366, 0.29 ) }
    dend_42 { pt3dadd( 91.4421, 245.325, -153.152, 0.29 ) }
    dend_42 { pt3dadd( 95.2605, 246.559, -159.929, 0.29 ) }
    dend_42 { pt3dadd( 98.677, 246.462, -167.055, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 74.4252, 185.457, -53.345, 0.74 ) }
    dend_41 { pt3dadd( 73.9983, 185.957, -53.434, 0.74 ) }
    dend_41 { pt3dadd( 72.0304, 188.156, -53.9932, 0.29 ) }
    dend_41 { pt3dadd( 71.3421, 188.872, -54.2253, 0.29 ) }
    dend_41 { pt3dadd( 70.2554, 189.932, -54.6418, 0.52 ) }
    dend_41 { pt3dadd( 69.514, 190.617, -54.9681, 0.29 ) }
    dend_41 { pt3dadd( 68.593, 191.46, -55.4841, 0.37 ) }
    dend_41 { pt3dadd( 67.8532, 192.116, -56.0257, 0.59 ) }
    dend_41 { pt3dadd( 67.3095, 192.568, -56.4843, 0.44 ) }
    dend_41 { pt3dadd( 66.6819, 193.103, -56.9805, 0.88 ) }
    dend_41 { pt3dadd( 65.4755, 194.223, -57.8109, 0.37 ) }
    dend_41 { pt3dadd( 64.2251, 195.501, -58.505, 0.66 ) }
    dend_41 { pt3dadd( 63.4772, 196.375, -58.8369, 0.29 ) }
    dend_41 { pt3dadd( 62.6463, 197.508, -59.1351, 0.22 ) }
    dend_41 { pt3dadd( 61.7502, 198.925, -59.3907, 0.74 ) }
    dend_41 { pt3dadd( 60.8405, 200.578, -59.5775, 0.29 ) }
    dend_41 { pt3dadd( 60.354, 201.61, -59.6361, 0.22 ) }
    dend_41 { pt3dadd( 59.9946, 202.463, -59.6646, 0.88 ) }
    dend_41 { pt3dadd( 59.6141, 203.545, -59.7657, 0.88 ) }
    dend_41 { pt3dadd( 59.3825, 204.398, -59.9269, 0.22 ) }
    dend_41 { pt3dadd( 59.206, 205.261, -60.1643, 0.22 ) }
    dend_41 { pt3dadd( 59.0598, 206.257, -60.4813, 0.15 ) }
    dend_41 { pt3dadd( 58.9922, 206.859, -60.6605, 0.66 ) }
    dend_41 { pt3dadd( 58.9458, 207.497, -60.8356, 0.22 ) }
    dend_41 { pt3dadd( 58.9016, 208.451, -61.0863, 0.15 ) }
    dend_41 { pt3dadd( 58.9073, 208.947, -61.2105, 0.15 ) }
    dend_41 { pt3dadd( 58.996, 209.726, -61.4316, 0.44 ) }
    dend_41 { pt3dadd( 59.2366, 210.767, -61.7804, 0.44 ) }
    dend_41 { pt3dadd( 59.6309, 211.881, -62.294, 0.22 ) }
    dend_41 { pt3dadd( 59.9248, 212.465, -62.6677, 0.22 ) }
    dend_41 { pt3dadd( 60.4043, 213.177, -63.2759, 0.52 ) }
    dend_41 { pt3dadd( 61.1041, 214.0, -64.1803, 0.52 ) }
    dend_41 { pt3dadd( 61.6244, 214.491, -64.8461, 0.22 ) }
    dend_41 { pt3dadd( 62.6306, 215.328, -66.0986, 0.22 ) }
    dend_41 { pt3dadd( 63.4376, 215.957, -67.0987, 0.22 ) }
    dend_41 { pt3dadd( 64.0629, 216.431, -67.8912, 0.22 ) }
    dend_41 { pt3dadd( 64.7732, 216.982, -68.8323, 0.22 ) }
    dend_41 { pt3dadd( 65.7857, 217.812, -70.1706, 0.22 ) }
    dend_41 { pt3dadd( 66.5547, 218.425, -71.1433, 0.66 ) }
    dend_41 { pt3dadd( 67.0623, 218.826, -71.7057, 0.37 ) }
    dend_41 { pt3dadd( 67.2152, 227.766, -76.309, 0.37 ) }
    dend_41 { pt3dadd( 67.9814, 237.121, -79.8467, 0.37 ) }
    dend_41 { pt3dadd( 66.1265, 246.553, -82.7885, 0.37 ) }
    dend_41 { pt3dadd( 64.4053, 256.298, -84.5029, 0.37 ) }
    dend_41 { pt3dadd( 63.0729, 265.724, -87.7081, 0.37 ) }
    dend_41 { pt3dadd( 63.5493, 275.281, -90.6904, 0.37 ) }
    dend_41 { pt3dadd( 65.1449, 285.061, -92.1897, 0.37 ) }
    dend_41 { pt3dadd( 66.2131, 295.038, -92.2549, 0.37 ) }
    dend_41 { pt3dadd( 68.1003, 304.753, -90.2637, 0.37 ) }
    dend_41 { pt3dadd( 71.9908, 313.938, -88.5035, 0.37 ) }
    dend_41 { pt3dadd( 77.2916, 322.571, -87.8505, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -39.3759, 34.5575, -32.6589, 0.52 ) }
    dend_19 { pt3dadd( -40.9544, 35.2833, -33.0184, 0.52 ) }
    dend_19 { pt3dadd( -41.5866, 35.5787, -33.1815, 0.66 ) }
    dend_19 { pt3dadd( -42.5881, 36.0368, -33.4362, 0.88 ) }
    dend_19 { pt3dadd( -44.0938, 36.7026, -33.8045, 0.74 ) }
    dend_19 { pt3dadd( -45.4453, 37.2619, -34.1003, 0.52 ) }
    dend_19 { pt3dadd( -46.5822, 37.7055, -34.3274, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -48.2991, 38.3202, -34.6934, 0.74 ) }
    dend_19 { pt3dadd( -49.263, 38.638, -34.882, 0.74 ) }
    dend_19 { pt3dadd( -50.6363, 39.0392, -35.0915, 0.66 ) }
    dend_19 { pt3dadd( -52.1656, 39.4005, -35.2681, 0.37 ) }
    dend_19 { pt3dadd( -52.858, 39.5268, -35.337, 0.37 ) }
    dend_19 { pt3dadd( -53.5649, 39.6171, -35.4221, 0.88 ) }
    dend_19 { pt3dadd( -54.6834, 39.7065, -35.6035, 0.88 ) }
    dend_19 { pt3dadd( -55.5611, 39.7617, -35.7978, 0.59 ) }
    dend_19 { pt3dadd( -56.4471, 39.7939, -36.0455, 0.59 ) }
    dend_19 { pt3dadd( -57.3651, 39.8131, -36.3928, 0.59 ) }
    dend_19 { pt3dadd( -58.1446, 39.802, -36.7966, 0.59 ) }
    dend_19 { pt3dadd( -58.9903, 39.7715, -37.3051, 0.59 ) }
    dend_19 { pt3dadd( -59.6102, 39.7342, -37.6913, 0.81 ) }
    dend_19 { pt3dadd( -60.4098, 39.6764, -38.1699, 1.03 ) }
    dend_19 { pt3dadd( -61.8495, 39.5184, -38.9456, 0.52 ) }
    dend_19 { pt3dadd( -63.7826, 39.2457, -39.8434, 0.59 ) }
    dend_19 { pt3dadd( -65.0411, 38.9969, -40.3498, 0.59 ) }
    dend_19 { pt3dadd( -66.0976, 38.7156, -40.6891, 0.59 ) }
    dend_19 { pt3dadd( -67.5422, 38.2065, -41.0382, 0.59 ) }
    dend_19 { pt3dadd( -68.5428, 37.7481, -41.1614, 0.59 ) }
    dend_19 { pt3dadd( -69.7095, 37.0791, -41.1224, 0.52 ) }
    dend_19 { pt3dadd( -70.4807, 36.5573, -40.9998, 0.59 ) }
    dend_19 { pt3dadd( -71.3201, 35.9018, -40.837, 0.52 ) }
    dend_19 { pt3dadd( -72.1049, 35.2519, -40.6878, 0.37 ) }
    dend_19 { pt3dadd( -73.1494, 34.3729, -40.5227, 0.66 ) }
    dend_19 { pt3dadd( -73.8212, 33.843, -40.4436, 0.66 ) }
    dend_19 { pt3dadd( -74.4898, 33.3819, -40.4072, 0.88 ) }
    dend_19 { pt3dadd( -75.3292, 32.8962, -40.4004, 0.88 ) }
    dend_19 { pt3dadd( -76.8386, 32.1203, -40.4962, 0.52 ) }
    dend_19 { pt3dadd( -77.7206, 31.7108, -40.644, 0.52 ) }
    dend_19 { pt3dadd( -78.3149, 31.4711, -40.8194, 0.66 ) }
    dend_19 { pt3dadd( -79.8177, 30.9567, -41.4581, 0.44 ) }
    dend_19 { pt3dadd( -80.532, 30.77, -41.8532, 0.59 ) }
    dend_19 { pt3dadd( -81.4899, 30.6092, -42.4785, 0.66 ) }
    dend_19 { pt3dadd( -83.0625, 30.5207, -43.6434, 0.66 ) }
    dend_19 { pt3dadd( -84.1124, 30.5478, -44.4882, 0.88 ) }
    dend_19 { pt3dadd( -84.9252, 30.6287, -45.1716, 0.88 ) }
    dend_19 { pt3dadd( -85.7467, 30.7548, -45.8694, 0.81 ) }
    dend_19 { pt3dadd( -86.5043, 30.9009, -46.4597, 1.11 ) }
    dend_19 { pt3dadd( -87.5728, 31.1389, -47.1411, 0.52 ) }
    dend_19 { pt3dadd( -88.9767, 31.4765, -47.8926, 0.52 ) }
    dend_19 { pt3dadd( -90.5386, 31.8672, -48.6034, 0.29 ) }
    dend_19 { pt3dadd( -91.0305, 31.9916, -48.7955, 0.29 ) }
    dend_19 { pt3dadd( -92.1213, 32.2443, -49.2042, 0.59 ) }
    dend_19 { pt3dadd( -93.5524, 32.5039, -49.8292, 0.29 ) }
    dend_19 { pt3dadd( -95.427, 32.764, -50.8639, 0.37 ) }
    dend_19 { pt3dadd( -96.6371, 32.8805, -51.6263, 0.37 ) }
    dend_19 { pt3dadd( -97.55, 32.9368, -52.2638, 0.37 ) }
    dend_19 { pt3dadd( -99.1278, 33.0018, -53.4738, 0.44 ) }
    dend_19 { pt3dadd( -101.114, 33.0136, -55.2023, 0.96 ) }
    dend_19 { pt3dadd( -102.966, 32.9329, -57.0516, 0.44 ) }
    dend_19 { pt3dadd( -103.71, 32.8556, -57.8883, 0.52 ) }
    dend_19 { pt3dadd( -104.58, 32.7407, -59.0234, 0.52 ) }
    dend_19 { pt3dadd( -114.075, 31.8124, -63.7478, 0.52 ) }
    dend_19 { pt3dadd( -123.863, 31.5557, -67.9437, 0.52 ) }
    dend_19 { pt3dadd( -134.011, 30.2822, -70.8625, 0.52 ) }
    dend_19 { pt3dadd( -144.341, 27.9501, -71.3302, 0.52 ) }
    dend_19 { pt3dadd( -154.375, 24.8119, -70.28, 0.52 ) }
    dend_19 { pt3dadd( -164.88, 23.2595, -70.0531, 0.52 ) }
    dend_19 { pt3dadd( -174.841, 19.8096, -70.6727, 0.52 ) }
    dend_19 { pt3dadd( -185.011, 17.3053, -72.3014, 0.52 ) }
    dend_19 { pt3dadd( -195.023, 15.4993, -75.3638, 0.52 ) }
    dend_19 { pt3dadd( -204.508, 14.1437, -79.9872, 0.52 ) }
    dend_19 { pt3dadd( -213.903, 12.1602, -84.538, 0.52 ) }
    dend_19 { pt3dadd( -222.835, 10.395, -90.0315, 0.52 ) }
    dend_19 { pt3dadd( -232.036, 8.58198, -95.0383, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -39.3759, 34.5575, -32.6589, 0.29 ) }
    dend_14 { pt3dadd( -40.4187, 34.6793, -33.4356, 0.29 ) }
    dend_14 { pt3dadd( -41.6408, 34.7987, -34.2811, 0.44 ) }
    dend_14 { pt3dadd( -42.1496, 34.853, -34.5969, 0.44 ) }
    dend_14 { pt3dadd( -42.9609, 34.959, -35.0451, 0.29 ) }
    dend_14 { pt3dadd( -43.7984, 35.0917, -35.4605, 0.29 ) }
    dend_14 { pt3dadd( -44.6333, 35.243, -35.8365, 0.59 ) }
    dend_14 { pt3dadd( -45.2161, 35.3939, -36.0107, 0.81 ) }
    dend_14 { pt3dadd( -45.9464, 35.5977, -36.1616, 0.59 ) }
    dend_14 { pt3dadd( -46.6465, 35.7766, -36.3086, 0.44 ) }
    dend_14 { pt3dadd( -47.2317, 35.9075, -36.4531, 0.74 ) }
    dend_14 { pt3dadd( -47.6784, 36.0062, -36.5919, 1.03 ) }
    dend_14 { pt3dadd( -48.5618, 36.1918, -36.9469, 0.29 ) }
    dend_14 { pt3dadd( -49.5536, 36.3432, -37.4497, 0.29 ) }
    dend_14 { pt3dadd( -50.6032, 36.394, -38.0804, 0.96 ) }
    dend_14 { pt3dadd( -51.6905, 36.3103, -38.8119, 0.66 ) }
    dend_14 { pt3dadd( -52.4786, 36.1424, -39.3782, 0.74 ) }
    dend_14 { pt3dadd( -53.2158, 35.9429, -39.9453, 0.81 ) }
    dend_14 { pt3dadd( -53.8985, 35.7032, -40.5136, 0.52 ) }
    dend_14 { pt3dadd( -54.7777, 35.3127, -41.2447, 0.52 ) }
    dend_14 { pt3dadd( -55.4924, 34.8801, -41.8317, 0.44 ) }
    dend_14 { pt3dadd( -56.0675, 34.4116, -42.2652, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -232.036, 8.58198, -95.0383, 0.66 ) }
    dend_21 { pt3dadd( -238.919, 3.11277, -96.4611, 0.66 ) }
    dend_21 { pt3dadd( -244.931, -3.21548, -97.8894, 0.66 ) }
    dend_21 { pt3dadd( -250.77, -9.69158, -99.2978, 0.66 ) }
    dend_21 { pt3dadd( -257.231, -15.7532, -99.4938, 0.66 ) }
    dend_21 { pt3dadd( -263.0, -22.4124, -99.2297, 0.66 ) }
    dend_21 { pt3dadd( -268.546, -29.2254, -99.8137, 0.66 ) }
    dend_21 { pt3dadd( -273.691, -36.1426, -101.582, 0.66 ) }
    dend_21 { pt3dadd( -278.361, -43.3841, -103.232, 0.66 ) }
    dend_21 { pt3dadd( -282.887, -50.781, -104.467, 0.66 ) }
    dend_21 { pt3dadd( -286.889, -58.4992, -105.26, 0.66 ) }
    dend_21 { pt3dadd( -290.287, -66.502, -104.873, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -293.281, -74.654, -104.543, 0.66 ) }
    dend_21 { pt3dadd( -298.115, -81.9624, -104.635, 0.66 ) }
    dend_21 { pt3dadd( -302.588, -89.4701, -105.005, 0.66 ) }
    dend_21 { pt3dadd( -307.461, -96.5014, -107.033, 0.66 ) }
    dend_21 { pt3dadd( -312.64, -103.327, -109.077, 0.66 ) }
    dend_21 { pt3dadd( -318.338, -109.002, -112.892, 0.66 ) }
    dend_21 { pt3dadd( -323.535, -114.435, -117.694, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -232.036, 8.58198, -95.0383, 0.15 ) }
    dend_20 { pt3dadd( -238.568, 11.7433, -98.5836, 0.66 ) }
    dend_20 { pt3dadd( -244.58, 16.1039, -101.619, 0.66 ) }
    dend_20 { pt3dadd( -250.72, 20.4173, -104.473, 0.66 ) }
    dend_20 { pt3dadd( -256.313, 25.538, -106.961, 0.66 ) }
    dend_20 { pt3dadd( -261.986, 30.3597, -109.876, 0.66 ) }
    dend_20 { pt3dadd( -266.651, 35.375, -113.939, 0.66 ) }
    dend_20 { pt3dadd( -271.547, 39.9552, -118.285, 0.66 ) }
    dend_20 { pt3dadd( -275.951, 45.0769, -122.482, 0.66 ) }
    dend_20 { pt3dadd( -281.367, 49.0886, -126.84, 0.66 ) }
    dend_20 { pt3dadd( -286.389, 52.4406, -132.16, 0.66 ) }
    dend_20 { pt3dadd( -290.22, 56.0309, -138.225, 0.66 ) }
    dend_20 { pt3dadd( -295.171, 58.6251, -144.054, 0.66 ) }
    dend_20 { pt3dadd( -298.996, 61.7886, -150.38, 0.66 ) }
    dend_20 { pt3dadd( -301.945, 65.8665, -156.581, 0.66 ) }
    dend_20 { pt3dadd( -303.716, 70.2847, -162.952, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -56.0675, 34.4116, -42.2652, 0.66 ) }
    dend_16 { pt3dadd( -56.3523, 33.2459, -43.0609, 0.66 ) }
    dend_16 { pt3dadd( -56.5811, 32.3572, -43.8312, 0.59 ) }
    dend_16 { pt3dadd( -56.8037, 31.7494, -44.4874, 0.29 ) }
    dend_16 { pt3dadd( -57.2409, 30.9134, -45.4972, 0.29 ) }
    dend_16 { pt3dadd( -57.4542, 30.5933, -45.9572, 0.44 ) }
    dend_16 { pt3dadd( -58.0979, 29.84, -47.3047, 0.59 ) }
    dend_16 { pt3dadd( -58.6269, 29.3557, -48.3399, 0.59 ) }
    dend_16 { pt3dadd( -59.2478, 28.904, -49.5617, 0.59 ) }
    dend_16 { pt3dadd( -59.718, 28.6259, -50.4924, 0.66 ) }
    dend_16 { pt3dadd( -60.4822, 28.2598, -51.9747, 0.66 ) }
    dend_16 { pt3dadd( -61.4623, 27.9012, -53.8475, 0.22 ) }
    dend_16 { pt3dadd( -64.8416, 23.9456, -62.8182, 0.22 ) }
    dend_16 { pt3dadd( -68.4644, 19.9874, -71.6918, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -56.0675, 34.4116, -42.2652, 0.15 ) }
    dend_15 { pt3dadd( -56.6821, 34.5632, -42.1837, 0.15 ) }
    dend_15 { pt3dadd( -57.2974, 34.666, -42.0991, 0.22 ) }
    dend_15 { pt3dadd( -57.9469, 34.6874, -42.0187, 0.37 ) }
    dend_15 { pt3dadd( -58.5769, 34.6519, -41.9577, 0.52 ) }
    dend_15 { pt3dadd( -59.4325, 34.5292, -41.8706, 0.22 ) }
    dend_15 { pt3dadd( -59.9369, 34.4332, -41.8116, 0.22 ) }
    dend_15 { pt3dadd( -60.311, 34.3411, -41.7371, 0.22 ) }
    dend_15 { pt3dadd( -61.1341, 34.0856, -41.5253, 0.29 ) }
    dend_15 { pt3dadd( -61.6074, 33.9156, -41.3868, 0.22 ) }
    dend_15 { pt3dadd( -62.3115, 33.6727, -41.2238, 0.29 ) }
    dend_15 { pt3dadd( -63.0352, 33.4659, -41.1102, 0.15 ) }
    dend_15 { pt3dadd( -63.9522, 33.2715, -41.0017, 0.15 ) }
    dend_15 { pt3dadd( -64.3109, 33.2237, -40.9755, 0.44 ) }
    dend_15 { pt3dadd( -64.7596, 33.1943, -40.9665, 0.44 ) }
    dend_15 { pt3dadd( -66.0253, 33.1707, -41.0157, 0.22 ) }
    dend_15 { pt3dadd( -66.6327, 33.1893, -41.0497, 0.22 ) }
    dend_15 { pt3dadd( -67.1004, 33.2251, -41.0719, 0.52 ) }
    dend_15 { pt3dadd( -67.6569, 33.2991, -41.1142, 0.52 ) }
    dend_15 { pt3dadd( -68.3056, 33.4063, -41.1398, 0.22 ) }
    dend_15 { pt3dadd( -68.8008, 33.5107, -41.1221, 0.44 ) }
    dend_15 { pt3dadd( -69.7102, 33.7426, -40.9499, 0.44 ) }
    dend_15 { pt3dadd( -70.3315, 33.9493, -40.8022, 0.74 ) }
    dend_15 { pt3dadd( -71.0336, 34.2457, -40.5847, 0.88 ) }
    dend_15 { pt3dadd( -77.6988, 33.844, -39.0964, 0.88 ) }
    dend_15 { pt3dadd( -84.2769, 32.7827, -37.5744, 0.88 ) }
    dend_15 { pt3dadd( -91.104, 32.4775, -37.2568, 0.88 ) }
    dend_15 { pt3dadd( -97.8719, 32.8907, -38.1587, 0.88 ) }
    dend_15 { pt3dadd( -104.489, 33.322, -39.8373, 0.88 ) }
    dend_15 { pt3dadd( -111.091, 34.4023, -41.2256, 0.88 ) }
    dend_15 { pt3dadd( -117.226, 36.1622, -43.6258, 0.88 ) }
    dend_15 { pt3dadd( -123.071, 36.8663, -47.1052, 0.88 ) }
    dend_15 { pt3dadd( -128.922, 38.3713, -50.282, 0.88 ) }
    dend_15 { pt3dadd( -135.56, 38.7383, -51.8921, 0.88 ) }
    dend_15 { pt3dadd( -142.353, 38.1339, -52.4123, 0.88 ) }
    dend_15 { pt3dadd( -148.694, 36.4756, -54.2949, 0.88 ) }
    dend_15 { pt3dadd( -154.634, 34.8448, -57.2194, 0.88 ) }
    dend_15 { pt3dadd( -161.125, 34.2701, -59.2932, 0.88 ) }
    dend_15 { pt3dadd( -167.584, 33.8974, -61.5162, 0.88 ) }
    dend_15 { pt3dadd( -174.294, 33.6114, -62.816, 0.88 ) }
    dend_15 { pt3dadd( -181.115, 33.4192, -63.3013, 0.88 ) }
    dend_15 { pt3dadd( -187.796, 32.0173, -63.1571, 0.88 ) }
    dend_15 { pt3dadd( -194.491, 31.2755, -61.9762, 0.88 ) }
    dend_15 { pt3dadd( -200.837, 31.4407, -59.4278, 0.88 ) }
    dend_15 { pt3dadd( -206.84, 30.7383, -56.2254, 0.88 ) }
    dend_15 { pt3dadd( -212.169, 28.9422, -52.3635, 0.88 ) }
    dend_15 { pt3dadd( -216.955, 26.5549, -48.1558, 0.88 ) }
    dend_15 { pt3dadd( -222.209, 23.4422, -45.2263, 0.88 ) }
    dend_15 { pt3dadd( -226.901, 19.7926, -42.0349, 0.88 ) }
    dend_15 { pt3dadd( -230.503, 15.4008, -38.4791, 0.88 ) }
    dend_15 { pt3dadd( -233.327, 10.3475, -35.2042, 0.88 ) }
    dend_15 { pt3dadd( -235.038, 4.79228, -32.0614, 0.88 ) }
    dend_15 { pt3dadd( -235.782, -1.39077, -30.0543, 0.88 ) }
    dend_15 { pt3dadd( -236.975, -7.22058, -27.2434, 0.88 ) }
    dend_15 { pt3dadd( -238.981, -12.8218, -24.3795, 0.88 ) }
    dend_15 { pt3dadd( -240.858, -18.3442, -21.2683, 0.88 ) }
    dend_15 { pt3dadd( -242.204, -24.2733, -18.7768, 0.88 ) }
    dend_15 { pt3dadd( -243.082, -30.0505, -15.7374, 0.88 ) }
    dend_15 { pt3dadd( -244.227, -35.8495, -12.8364, 0.88 ) }
    dend_15 { pt3dadd( -245.107, -41.7123, -9.98645, 0.88 ) }
    dend_15 { pt3dadd( -247.004, -46.9471, -6.37445, 0.88 ) }
    dend_15 { pt3dadd( -248.385, -52.4164, -2.91687, 0.88 ) }
    dend_15 { pt3dadd( -250.575, -57.168, 1.2309, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -253.441, -62.2684, 4.3859, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -68.4644, 19.9874, -71.6918, 0.22 ) }
    dend_18 { pt3dadd( -71.4422, 16.9895, -76.578, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -68.4644, 19.9874, -71.6918, 0.22 ) }
    dend_17 { pt3dadd( -71.9152, 15.8256, -79.6304, 0.22 ) }
    dend_17 { pt3dadd( -77.0737, 11.3319, -86.3285, 0.22 ) }
    dend_17 { pt3dadd( -81.0057, 7.39815, -94.1668, 0.22 ) }
    dend_17 { pt3dadd( -84.6141, 2.60959, -101.63, 0.22 ) }
    dend_17 { pt3dadd( -86.4778, -1.22689, -110.261, 0.22 ) }
    dend_17 { pt3dadd( -88.4728, -6.25786, -118.158, 0.22 ) }
    dend_17 { pt3dadd( -89.0497, -11.6393, -126.044, 0.22 ) }
    dend_17 { pt3dadd( -91.1517, -17.9528, -132.814, 0.22 ) }
    dend_17 { pt3dadd( -93.4118, -23.4066, -140.318, 0.22 ) }
    dend_17 { pt3dadd( -97.1115, -28.3364, -147.632, 0.22 ) }
    dend_17 { pt3dadd( -100.842, -33.8532, -154.449, 0.22 ) }
    dend_17 { pt3dadd( -105.414, -39.6108, -160.471, 0.22 ) }
    dend_17 { pt3dadd( -110.66, -45.001, -166.307, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_25, dend_0, axon_0, dend_31, dend_26, dend_4, dend_1, axon_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_5 = new SectionList()
    dend_25 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_1 nseg = 3
    dend_35 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 7
    dend_5 nseg = 3
    dend_2 nseg = 13
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 7
    dend_33 nseg = 15
    dend_29 nseg = 3
    dend_28 nseg = 11
    dend_22 nseg = 5
    dend_11 nseg = 3
    dend_9 nseg = 9
    dend_43 nseg = 9
    dend_40 nseg = 11
    dend_38 nseg = 7
    dend_37 nseg = 9
    dend_24 nseg = 7
    dend_12 nseg = 7
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_42 nseg = 7
    dend_41 nseg = 7
    dend_19 nseg = 11
    dend_21 nseg = 7
    dend_20 nseg = 7
    dend_15 nseg = 15
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_DBC_f7446db64e_0_0


