// Cell: bNAC219_L23_DBC_8b03af6e83_0_0
/*
{
  "id" : "bNAC219_L23_DBC_8b03af6e83_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.900775, -9.8088, 0.590543, 2.2315", "-0.795054, -8.89395, 0.538155, 2.59468", "-0.689333, -7.97909, 0.485767, 3.40562", "-0.583612, -7.06424, 0.433379, 4.21656", "-0.477891, -6.14939, 0.380991, 4.76863", "-0.37217, -5.23453, 0.328603, 5.07118", "-0.26645, -4.31968, 0.276215, 5.37449", "-0.160729, -3.40482, 0.223827, 5.6778", "-0.0550076, -2.48997, 0.171439, 5.91116", "0.0507134, -1.57512, 0.119051, 6.0829", "0.156434, -0.660263, 0.0666633, 6.26003", "0.262155, 0.254591, 0.0142753, 6.44407", "0.367876, 1.16944, -0.0381126, 6.62807", "0.473597, 2.0843, -0.0905006, 6.73886", "0.579318, 2.99915, -0.142889, 6.60317", "0.685039, 3.91401, -0.195276, 6.29711", "0.79076, 4.82886, -0.247664, 5.46861", "0.896481, 5.74371, -0.300052, 4.56209", "1.0022, 6.65857, -0.35244, 3.66181", "1.10792, 7.57342, -0.404828, 2.68112", "1.21364, 8.48827, -0.457216, 1.67793" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.69856, 3.85573, 6.2591, 0.83", "5.16851, 5.04576, 6.32002, 0.83", "9.6149, 8.64545, 6.50429, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.488563, 7.24573, 4.0991, 2.22", "0.651981, 11.3119, -0.188216, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.91144, -9.98427, 2.0591, 2.22", "-2.44157, -11.9444, 2.22465, 1.94", "-3.01136, -14.0512, 2.40258, 2.22", "-3.6595, -16.4476, 2.60498, 1.38", "-4.03194, -17.8247, 2.72129, 1.38", "-4.42138, -19.2646, 2.8429, 1.66", "-4.86947, -20.9214, 2.98283, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.21364, 8.48827, -0.457216, 0.55", "2.93559, 23.3891, -0.457216, 0.55", "4.65753, 38.2899, -0.457216, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "9.6149, 8.64545, 6.50429, 0.28", "11.4577, 8.46075, 7.49927, 0.28", "12.6206, 8.44012, 8.06168, 0.55", "14.6243, 8.53401, 8.82665, 0.28", "15.3798, 8.60654, 9.06189, 0.55", "18.6079, 8.88901, 9.57558, 0.28", "20.667, 9.05656, 9.68261, 0.55", "23.0178, 9.31291, 9.52916, 0.55", "25.7288, 9.60295, 9.08616, 0.28", "27.0135, 9.75164, 8.81831, 0.55", "31.0783, 10.1558, 7.72819, 0.28", "32.6937, 10.2581, 7.24268, 0.83", "35.2189, 10.2634, 6.57257, 0.28", "36.5368, 10.2303, 6.26367, 0.83", "39.1348, 10.09, 5.80021, 0.28", "40.8409, 9.91294, 5.52307, 0.55", "43.7353, 9.53912, 5.1647, 0.28", "45.9716, 9.18297, 4.95367, 0.83", "49.1114, 8.65699, 4.54949, 0.28", "49.9749, 8.50496, 4.40941, 0.55", "54.6567, 7.57701, 3.50477, 0.28", "58.2698, 6.84237, 2.7425, 0.28", "60.1645, 6.47606, 2.24552, 0.55", "64.9403, 5.4725, 0.861759, 0.28", "66.2806, 5.17654, 0.434704, 0.55", "68.5423, 4.75536, -0.370554, 0.28", "69.4638, 4.60981, -0.695197, 0.55", "74.8683, 3.74756, -2.77447, 0.28", "76.3204, 3.53142, -3.25401, 0.83", "79.5528, 3.05603, -4.03218, 0.28", "81.3963, 2.78975, -4.36992, 0.55", "83.4496, 2.4662, -4.65908, 0.28", "84.1928, 2.32135, -4.78178, 0.55", "87.9162, 1.51736, -5.45881, 0.28", "89.1905, 1.2441, -5.68859, 0.83", "92.356, 0.60198, -6.2577, 0.28", "94.4453, 0.236338, -6.61656, 0.55", "98.8239, -0.192218, -7.73763, 0.28", "101.085, -0.323342, -8.3953, 0.28", "103.214, -0.339694, -9.10183, 0.55", "106.494, -0.218698, -10.164, 0.28", "108.614, -0.1501, -10.8657, 0.55", "115.126, -0.0210116, -13.1227, 0.28", "116.719, -0.0562506, -13.6505, 0.83", "118.945, -0.199976, -14.49, 0.28", "121.192, -0.433561, -15.3331, 0.55", "126.507, -1.27269, -17.361, 0.28", "128.438, -1.67527, -18.1274, 0.83", "135.507, -3.51313, -20.6864, 0.28", "137.334, -4.01305, -21.3354, 0.55", "140.86, -4.97811, -22.4991, 0.28", "144.751, -5.94723, -23.7013, 0.55", "147.141, -6.40932, -24.3713, 0.28", "149.602, -6.76689, -24.9998, 0.28", "151.578, -6.85907, -25.5236, 0.55", "154.987, -6.56518, -26.3004, 0.28", "155.928, -6.28298, -26.5981, 0.55", "158.032, -5.20714, -27.3087, 0.28", "159.196, -4.38228, -27.7526, 0.55", "160.54, -3.1763, -28.3269, 0.28", "162.135, -1.48933, -29.0843, 0.55", "165.478, 2.54542, -30.6435, 0.28", "166.205, 3.47684, -30.9647, 0.28", "167.839, 5.72565, -31.6961, 0.55", "170.159, 9.00322, -32.6573, 0.28", "170.776, 9.86054, -32.8567, 0.55", "172.342, 11.8535, -33.208, 0.28", "172.705, 12.268, -33.2636, 0.55", "174.228, 13.8909, -33.6638, 0.28", "174.895, 14.5462, -33.8966, 0.55", "175.879, 15.4542, -34.3244, 0.28", "176.795, 16.2364, -34.7372, 0.55", "179.112, 18.0892, -35.9584, 0.28", "180.589, 19.2404, -36.7158, 0.28", "181.442, 19.8761, -37.1407, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.6149, 8.64545, 6.50429, 0.28", "11.1222, 11.7195, 5.87028, 0.28", "11.8825, 13.27, 5.5505, 0.83", "12.8894, 15.3235, 5.12697, 0.28", "13.1704, 15.8966, 5.00877, 1.38" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.651981, 11.3119, -0.188216, 0.83", "0.818402, 14.1101, -0.686017, 0.83", "1.04162, 17.0159, -0.906092, 0.83", "1.15387, 18.35, -0.937874, 0.83", "1.63979, 23.1917, -0.842372, 1.66", "2.01673, 26.9487, -0.679783, 0.83", "2.4226, 30.1999, -0.420677, 0.83", "2.73124, 32.4362, -0.0423064, 0.83", "3.09894, 34.7604, 0.53936, 1.38", "3.57584, 37.3043, 1.27748, 0.83", "3.98231, 39.0005, 1.88334, 1.11", "4.67872, 41.7033, 2.74566, 0.83", "5.33971, 44.259, 3.67488, 0.83", "5.84995, 46.0656, 4.35109, 1.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.651981, 11.3119, -0.188216, 1.11", "-0.655674, 13.9169, -0.55571, 1.11", "-2.09307, 16.8499, -1.23784, 1.11", "-3.19122, 19.3544, -1.88771, 0.55", "-3.65575, 20.4953, -2.18168, 1.11", "-4.39361, 22.3762, -2.65202, 0.55", "-5.42836, 24.9672, -3.25383, 0.55", "-6.22341, 27.0049, -3.74782, 0.55", "-7.08233, 29.1804, -4.29191, 1.11", "-7.45479, 30.0893, -4.43523, 0.55", "-7.98435, 31.4734, -4.56864, 0.83", "-8.84359, 33.7609, -4.53398, 1.11", "-9.36315, 35.0771, -4.33803, 0.55", "-9.99315, 36.6631, -3.97424, 1.11", "-10.7705, 38.5519, -3.48123, 0.55", "-11.8033, 41.1316, -2.8096, 1.11", "-12.6063, 43.4144, -2.16784, 0.55", "-12.8045, 44.0239, -1.99364, 0.55", "-13.1183, 44.9856, -1.71027, 0.55", "-13.4882, 46.0779, -1.42121, 0.55", "-14.2799, 48.3491, -0.932109, 1.38", "-14.894, 49.9952, -0.620469, 0.55", "-15.4684, 51.5851, -0.320356, 0.55", "-15.7317, 52.3538, -0.144838, 0.28", "-16.1775, 53.6834, 0.174816, 0.55", "-16.3943, 54.4892, 0.350143, 0.28", "-16.7775, 56.0896, 0.631633, 1.11", "-17.2892, 58.3334, 0.932584, 0.28", "-17.5689, 59.7441, 1.08688, 0.83", "-18.1311, 62.541, 1.32344, 0.83", "-18.8489, 66.0478, 1.46315, 0.55", "-19.5228, 69.4191, 1.44917, 0.55", "-19.7746, 70.8173, 1.41239, 0.28", "-20.1001, 72.4502, 1.31976, 0.83", "-20.378, 73.803, 1.25893, 0.83", "-20.9632, 76.312, 1.17749, 0.55", "-21.8181, 79.5002, 1.15318, 0.55", "-22.4635, 81.9795, 1.15614, 0.55", "-23.0878, 84.3226, 1.19016, 0.55", "-23.9415, 87.4606, 1.30416, 0.55", "-24.4136, 89.2472, 1.43531, 0.55", "-25.0229, 91.3798, 1.75173, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.86947, -20.9214, 2.98283, 1.38", "-4.99567, -23.5771, 2.85927, 1.38", "-5.10713, -25.9228, 2.75013, 0.83", "-5.18044, -27.4655, 2.67835, 1.66", "-5.30193, -30.022, 2.5594, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.86947, -20.9214, 2.98283, 1.38", "-8.41311, -24.4712, 4.80059, 1.38", "-10.0176, -26.0767, 5.6145, 0.83", "-11.4385, -27.4785, 6.36366, 0.83", "-14.2748, -30.1681, 8.037, 0.83", "-16.0321, -31.8345, 9.07375, 0.83", "-18.0209, -33.7203, 10.247, 0.83", "-18.9452, -34.5925, 10.6952, 1.11", "-20.6466, -36.1344, 11.5743, 0.83", "-22.8235, -38.017, 12.9799, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.65753, 38.2899, -0.457216, 0.55", "6.37948, 53.1908, -0.457216, 0.55", "8.10142, 68.0916, -0.457216, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.1704, 15.8966, 5.00877, 0.55", "14.3016, 15.7237, 6.6101, 0.55", "15.3948, 15.4984, 8.13201, 0.55", "17.6957, 15.0491, 11.6554, 0.83", "18.9304, 14.8528, 13.6013, 0.28", "19.3978, 14.7691, 14.3665, 0.83", "20.5469, 14.5325, 16.343, 0.28", "21.2369, 14.4118, 17.5489, 0.55", "22.8992, 14.2004, 20.4964, 0.28", "23.8299, 13.9974, 22.1163, 0.83", "25.1199, 13.6659, 24.4615, 0.28", "26.2472, 13.3658, 26.5287, 0.55", "27.4624, 13.0547, 28.6915, 0.28", "28.4646, 12.7745, 30.5325, 0.55", "29.4823, 12.3645, 32.2567, 0.28", "30.4172, 11.8712, 33.949, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.1704, 15.8966, 5.00877, 0.28", "13.4296, 16.6244, 5.41687, 0.28", "13.6334, 17.1633, 5.65317, 0.83", "14.1215, 18.425, 6.11364, 0.28", "14.1215, 18.425, 6.11364, 0.55", "14.4212, 19.2686, 6.34074, 0.55", "14.817, 20.3868, 6.62252, 1.11", "15.4178, 22.2334, 6.98746, 0.55", "15.6789, 23.1912, 7.12555, 0.28", "15.8801, 24.0849, 7.18332, 0.83", "16.0697, 25.0448, 7.21003, 0.55", "16.2107, 25.9202, 7.20908, 0.83", "16.3907, 27.6511, 7.23451, 0.28", "16.4561, 28.6848, 7.215, 0.83", "16.5085, 30.0836, 7.17035, 0.28", "16.5162, 30.3242, 7.16254, 0.55", "16.5333, 30.9767, 7.13489, 0.28", "16.589, 32.1405, 7.12969, 0.55", "16.7587, 33.721, 7.17448, 0.28", "16.9472, 35.0999, 7.19993, 0.83", "17.1204, 36.2078, 7.23945, 0.28", "17.2547, 36.9084, 7.25891, 0.83", "17.6394, 38.5561, 7.24893, 0.28", "17.9369, 39.6501, 7.2231, 0.55", "18.3096, 40.84, 7.14376, 0.28", "18.6726, 41.8441, 6.96548, 0.55", "19.3349, 43.5369, 6.52333, 0.55", "19.9067, 44.884, 6.10465, 0.28", "20.5093, 46.2269, 5.63402, 0.55", "21.4651, 48.1817, 5.01107, 0.28", "22.2541, 49.6313, 4.54084, 0.83", "22.9304, 50.7792, 4.14122, 0.55", "23.7075, 51.9713, 3.78219, 0.28", "24.2877, 52.7824, 3.62052, 0.55", "25.3074, 54.1033, 3.56265, 0.55", "26.6222, 55.7553, 3.79702, 0.28", "26.8574, 56.047, 3.87689, 0.55", "27.8432, 57.2543, 4.27224, 0.28", "28.8109, 58.4551, 4.68518, 0.55", "29.6203, 59.4792, 5.05706, 0.28", "30.2489, 60.3378, 5.3281, 0.55", "31.0361, 61.4603, 5.7181, 0.28", "31.3878, 61.9643, 5.8181, 0.55", "32.0315, 62.8676, 5.83584, 0.28", "32.5649, 63.5821, 5.77858, 0.83", "33.3397, 64.5581, 5.60203, 0.28", "33.5779, 64.8445, 5.53255, 0.55", "35.0172, 66.5076, 5.15165, 0.28", "35.5195, 67.0851, 5.07989, 0.83", "36.5116, 68.2499, 4.98429, 0.28", "36.8492, 68.6493, 4.96767, 0.55", "37.6017, 69.5713, 4.95583, 0.28", "38.4904, 70.7069, 4.95483, 0.55", "39.4128, 71.9676, 5.00296, 0.28", "40.0747, 72.9296, 5.0174, 0.83", "40.6732, 73.8492, 4.89376, 0.83", "41.5601, 75.2708, 4.60631, 0.28", "41.8542, 75.7608, 4.47436, 0.83", "42.3385, 76.5964, 4.15836, 0.28", "42.8719, 77.5108, 3.71209, 0.55", "44.0974, 79.567, 2.66222, 0.28", "44.5762, 80.3521, 2.19616, 0.55", "44.8213, 80.7402, 1.95522, 0.28", "45.7338, 82.135, 1.10208, 0.55", "46.5656, 83.3395, 0.385228, 0.28", "47.172, 84.1622, -0.0446715, 0.83", "47.867, 85.0783, -0.382508, 0.28", "48.5141, 85.9092, -0.72432, 0.83", "49.3068, 86.9236, -1.1363, 0.28", "49.5872, 87.3059, -1.26677, 0.55", "50.028, 87.9347, -1.44296, 0.28", "50.6901, 88.9251, -1.70318, 0.55", "51.6066, 90.3754, -2.11169, 0.55", "52.3143, 91.5948, -2.54308, 0.28", "52.6674, 92.2126, -2.7991, 1.11", "53.1138, 93.0339, -3.1702, 1.11", "53.6104, 93.9843, -3.51582, 0.83", "54.3647, 95.4459, -3.92845, 0.28", "54.8636, 96.4315, -4.08849, 0.55", "55.3771, 97.3862, -4.18602, 0.28", "56.3877, 99.1636, -4.34953, 0.55", "57.6343, 101.327, -4.5523, 0.28", "58.0126, 101.962, -4.59242, 0.83", "58.4727, 102.705, -4.63828, 0.28", "59.4196, 104.147, -4.76883, 0.55", "60.4544, 105.685, -5.02875, 0.55", "61.7612, 107.568, -5.50154, 0.55", "62.4356, 108.503, -5.82498, 0.28", "63.3362, 109.8, -6.28669, 0.55", "64.061, 110.841, -6.65308, 0.28", "64.8367, 111.991, -7.01111, 0.55", "65.304, 112.679, -7.24882, 0.55", "66.4702, 114.553, -7.99381, 0.55", "67.0294, 115.549, -8.56424, 0.28", "67.5021, 116.477, -9.1854, 0.28", "67.8098, 117.114, -9.68493, 0.55", "68.9053, 119.586, -11.942, 0.55", "69.3853, 120.752, -13.1015, 0.55", "70.064, 122.744, -15.1487, 0.28", "70.1645, 123.071, -15.507, 0.28", "70.2972, 123.587, -16.0816, 0.55", "70.6583, 125.022, -17.5838, 0.55", "70.9331, 125.908, -18.3811, 0.83", "71.2316, 126.656, -19.0613, 0.83", "72.0304, 128.492, -20.826, 0.55", "72.2345, 128.879, -21.2681, 0.55", "72.8332, 129.843, -22.4709, 0.83", "73.7014, 131.044, -24.0918, 0.55", "74.5441, 132.173, -25.7653, 0.55", "75.4178, 133.278, -27.4381, 0.55", "76.158, 134.185, -28.7151, 1.11", "76.5738, 134.707, -29.4306, 0.28", "76.8672, 135.121, -29.9453, 0.55", "77.5278, 136.167, -31.0545, 0.55", "77.9356, 136.858, -31.6635, 1.11", "78.3759, 137.746, -32.4441, 0.55", "78.8368, 138.771, -33.3765, 0.55", "79.448, 140.041, -34.6669, 1.11", "80.396, 141.916, -36.6502, 0.55", "80.567, 142.276, -37.0249, 0.55", "81.4076, 144.34, -39.1499, 0.83", "81.6384, 144.955, -39.8042, 0.83", "82.3322, 146.885, -41.8971, 0.55", "82.4698, 147.237, -42.2885, 0.55", "82.744, 147.963, -43.0532, 0.28", "83.0218, 148.601, -43.7062, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "5.84995, 46.0656, 4.35109, 0.55", "6.45828, 46.7805, 5.6579, 0.55", "7.51772, 47.9769, 7.7596, 0.83", "8.38661, 49.003, 9.41082, 0.55", "9.65553, 50.6361, 11.8615, 1.11", "11.9018, 53.5843, 16.0385, 0.55", "12.2828, 54.1299, 16.7419, 0.55", "13.4945, 56.0726, 18.9736, 0.83", "14.2696, 57.4615, 20.3458, 0.55", "14.7328, 58.4151, 21.1496, 0.55", "15.4938, 60.1126, 22.1865, 0.28", "16.2547, 61.8689, 23.0412, 0.55", "17.2254, 64.1386, 24.1743, 0.55", "18.3383, 66.8207, 25.4688, 0.28", "19.1171, 68.608, 26.3498, 0.55", "19.7559, 69.9593, 27.0503, 0.55", "20.8725, 72.2147, 28.2389, 0.55", "21.4905, 73.2887, 28.9187, 0.28", "21.7222, 73.6701, 29.1858, 0.55", "22.4783, 74.8633, 30.066, 0.28", "23.4972, 76.4044, 31.2877, 0.55", "24.3536, 77.6187, 32.341, 0.55", "25.8704, 79.6122, 33.9979, 0.28", "26.2468, 80.092, 34.4011, 0.55", "27.1663, 81.3209, 35.4257, 0.28", "27.6852, 82.0324, 35.9706, 0.55", "29.1571, 84.2278, 37.382, 0.28", "30.0075, 85.6116, 38.0944, 0.55", "31.1703, 87.8327, 38.857, 0.28", "31.5707, 88.6509, 39.0678, 0.55", "32.327, 90.3765, 39.4725, 0.28", "32.7705, 91.5305, 39.6732, 0.55", "33.5665, 93.7043, 39.7905, 0.28", "34.1363, 95.2241, 39.8033, 0.28", "34.6737, 96.5875, 39.7377, 0.55", "35.6918, 99.097, 39.6352, 0.55", "36.854, 101.988, 39.5677, 0.28", "37.6344, 103.844, 39.4912, 0.28", "38.2782, 105.379, 39.2786, 0.55", "39.0106, 107.002, 38.9382, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.84995, 46.0656, 4.35109, 0.83", "5.66563, 48.197, 4.6909, 0.83", "5.54605, 49.5563, 4.8619, 0.83", "5.36254, 51.7973, 5.10151, 0.83", "5.22465, 53.854, 5.28874, 0.28", "5.14635, 55.4553, 5.41292, 0.83", "5.0816, 58.1608, 5.58899, 0.83", "5.123, 59.4632, 5.61762, 0.28", "5.17076, 60.1798, 5.63263, 0.83", "5.28708, 61.3842, 5.65691, 0.55", "5.43261, 62.5907, 5.70781, 0.83", "5.56363, 63.7187, 5.73525, 0.55", "5.81723, 65.2045, 5.79187, 0.83", "6.07763, 66.7153, 5.87356, 0.83", "6.43254, 68.4954, 5.95822, 0.83", "6.84693, 70.4777, 6.04152, 0.55", "7.12528, 71.8725, 6.09364, 0.83", "7.69118, 74.6508, 6.16538, 0.55", "8.01266, 76.1989, 6.19984, 0.55", "8.44934, 78.2247, 6.22579, 0.55", "8.77691, 79.7776, 6.24845, 0.55", "9.28261, 82.2224, 6.25318, 0.55", "9.7276, 84.8093, 6.24766, 1.11", "9.91918, 86.4443, 6.25401, 0.55", "10.0809, 88.363, 6.19868, 0.83", "10.1536, 90.3857, 6.09007, 1.11", "10.1525, 91.7084, 5.98611, 0.55", "10.1097, 93.5176, 5.80313, 0.83", "9.97516, 95.4531, 5.56246, 0.83", "9.74854, 97.8865, 5.17823, 0.55", "9.60925, 98.9801, 4.98155, 1.11", "9.28809, 101.177, 4.54179, 1.11" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-25.0229, 91.3798, 1.75173, 0.28", "-24.3367, 94.0293, 1.88358, 0.28", "-24.1536, 95.1734, 1.7051, 0.55", "-23.983, 96.5355, 1.45545, 0.28", "-23.9456, 97.4129, 1.38015, 0.55", "-23.9455, 99.0066, 1.33024, 0.28", "-23.9612, 99.8784, 1.26504, 0.55", "-24.2052, 102.74, 0.937756, 0.28", "-24.2952, 103.763, 0.777535, 0.55", "-24.543, 106.715, 0.0961522, 0.28", "-24.6536, 108.093, -0.265972, 0.83", "-24.7773, 110.912, -1.01105, 0.28", "-24.8487, 112.849, -1.36346, 0.28", "-24.9099, 114.153, -1.4934, 0.55", "-25.0312, 116.519, -1.70803, 0.28", "-25.0873, 117.532, -1.78281, 0.55", "-25.3545, 120.53, -1.77768, 0.55", "-25.7981, 124.435, -1.44168, 0.28", "-26.1253, 126.695, -1.1405, 0.55", "-26.5265, 128.961, -0.733539, 0.28", "-26.6887, 129.813, -0.548757, 0.55", "-27.008, 131.238, -0.274521, 0.28", "-27.2074, 131.82, -0.195884, 0.55", "-27.6594, 133.076, -0.122699, 0.28", "-27.9408, 133.908, -0.0515468, 0.55", "-28.2079, 134.74, 0.0351757, 0.28", "-28.6511, 136.162, 0.179187, 0.55", "-29.1697, 137.87, 0.336683, 0.55", "-30.2471, 141.492, 0.662757, 0.28", "-30.9025, 143.923, 0.870272, 0.28", "-31.0544, 144.525, 0.92789, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-25.0229, 91.3798, 1.75173, 0.28", "-24.9326, 94.4214, 1.26702, 0.28", "-24.9303, 95.5383, 1.19398, 0.55", "-24.9804, 96.3719, 1.17927, 0.28", "-25.1145, 97.2167, 1.23983, 0.55", "-25.6206, 99.2743, 1.56258, 0.28", "-25.9621, 100.557, 1.8028, 0.55", "-26.2016, 101.342, 1.96778, 0.28", "-26.5348, 102.503, 2.15007, 0.55", "-27.1003, 104.723, 2.43078, 0.55", "-27.3479, 106.043, 2.5791, 0.28", "-27.735, 108.502, 2.78488, 0.83", "-27.9597, 111.201, 2.9812, 0.28", "-27.9863, 112.6, 3.02636, 0.28", "-27.9662, 113.46, 3.06326, 0.83", "-27.7931, 115.777, 3.24791, 0.28", "-27.6726, 117.473, 3.50418, 0.28", "-27.6439, 118.518, 3.77758, 0.28", "-27.6775, 119.61, 4.15349, 0.83", "-27.9725, 122.217, 5.24162, 0.28", "-28.2274, 123.791, 5.93032, 0.55", "-28.4998, 125.119, 6.54391, 0.28", "-28.7275, 126.365, 7.1058, 0.55", "-28.8648, 127.07, 7.38652, 0.55", "-29.3289, 129.639, 8.23569, 0.55", "-29.675, 131.962, 8.87896, 0.55", "-29.777, 132.596, 9.04491, 0.55", "-30.1397, 134.811, 9.61248, 0.55", "-30.5316, 136.967, 10.0756, 0.55", "-30.9307, 138.957, 10.4933, 0.55", "-31.3253, 140.975, 10.8596, 0.83", "-31.6664, 142.622, 11.2161, 0.55", "-31.9715, 144.015, 11.5487, 0.83", "-32.5171, 146.136, 12.1106, 0.28", "-33.0409, 148.102, 12.6514, 0.55", "-33.6603, 150.079, 13.1295, 0.55", "-34.0933, 151.546, 13.3395, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-5.30193, -30.022, 2.5594, 0.83", "-3.78507, -30.9179, 2.19783, 0.83", "-2.21105, -31.6742, 2.14202, 0.83", "0.260047, -32.7135, 2.21129, 0.83", "2.81029, -33.8021, 2.4757, 0.83", "5.77545, -35.0621, 2.83689, 0.83", "8.2785, -36.1323, 3.2042, 0.83", "13.1509, -38.1413, 4.13869, 0.55", "15.671, -39.1581, 4.71696, 0.55", "19.8139, -40.7549, 5.81836, 0.55", "22.4045, -41.814, 6.64692, 0.55", "23.7523, -42.4294, 7.1297, 0.83", "25.191, -43.0996, 7.6606, 0.55", "26.3442, -43.7446, 7.99743, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.30193, -30.022, 2.5594, 1.11", "-4.82568, -34.2901, 4.09968, 1.11", "-4.6995, -35.421, 4.50778, 1.11", "-4.29633, -39.0343, 5.81173, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-22.8235, -38.017, 12.9799, 0.83", "-23.519, -39.1792, 13.4176, 0.83", "-24.3401, -40.5515, 13.9345, 1.11", "-25.1229, -41.8597, 14.4272, 0.83", "-26.1059, -43.5026, 15.046, 0.83", "-27.1679, -45.2775, 15.7144, 1.11", "-27.3299, -45.5483, 15.8164, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-22.8235, -38.017, 12.9799, 0.55", "-24.1667, -38.0021, 13.0907, 0.55", "-27.2127, -37.9684, 13.342, 0.55", "-29.3158, -37.9451, 13.5155, 0.55", "-30.5352, -37.9316, 13.6161, 0.83", "-32.9678, -37.9047, 13.8167, 0.55", "-34.3648, -37.8892, 13.932, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "9.28809, 101.177, 4.54179, 0.55", "8.80465, 104.324, 3.99757, 0.55", "8.40485, 106.814, 3.87709, 0.55", "7.83259, 109.852, 3.92869, 0.55", "7.35915, 112.329, 4.21371, 0.55", "6.87898, 115.27, 4.69544, 0.55", "6.37179, 118.469, 5.39335, 0.55", "5.5362, 123.442, 7.10244, 0.55", "5.25638, 125.331, 7.96697, 0.55", "4.88824, 128.455, 9.70649, 0.55", "4.82443, 130.323, 10.8885, 0.55", "4.95211, 132.755, 12.5142, 0.55", "5.17734, 135.035, 13.9789, 0.55", "5.30226, 136.139, 14.5384, 0.28", "5.51285, 138.063, 15.367, 0.55", "5.78927, 141.006, 16.3908, 0.28", "5.90047, 142.54, 16.9253, 0.55", "6.04859, 144.944, 17.663, 0.28", "6.07402, 146.123, 18.0305, 0.55", "6.1074, 148.279, 18.7486, 0.55", "6.14599, 152.056, 20.1294, 0.55", "6.18993, 154.616, 21.102, 0.55", "6.29887, 157.547, 22.1676, 0.55", "6.6329, 161.448, 23.2254, 0.28", "6.88978, 163.664, 23.5622, 0.55", "7.24019, 165.886, 23.5849, 0.28", "7.396, 166.763, 23.466, 0.55", "7.89057, 169.722, 22.8198, 0.55", "8.66655, 174.923, 21.3116, 0.55", "8.94563, 177.348, 20.4465, 0.55", "9.15103, 180.376, 19.3214, 0.55", "9.23026, 183.149, 18.2819, 0.55", "9.13965, 186.327, 17.2062, 0.55", "8.89485, 189.64, 16.2751, 0.55", "8.67214, 191.483, 15.8153, 0.55", "8.29348, 193.984, 15.1366, 0.28", "8.09277, 194.916, 14.8521, 0.28", "7.59081, 196.989, 14.1352, 0.55", "6.96203, 199.587, 13.1444, 0.55", "6.04504, 203.004, 11.7268, 0.28", "5.48637, 205.025, 10.8609, 0.55", "5.1424, 206.226, 10.2993, 0.55", "4.57315, 208.28, 9.24675, 0.28", "4.19802, 209.663, 8.44188, 0.55", "3.13167, 212.525, 6.52385, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "9.28809, 101.177, 4.54179, 0.55", "8.73893, 103.327, 3.5625, 0.55", "8.08797, 105.875, 2.40166, 0.55", "7.77003, 107.12, 1.8347, 0.28", "7.40621, 108.544, 1.1859, 0.83", "6.62966, 111.583, -0.198874, 0.55", "6.37299, 112.588, -0.656583, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-34.0933, 151.546, 13.3395, 0.28", "-34.4763, 153.217, 13.5896, 0.28", "-34.9312, 154.893, 13.7359, 0.28", "-35.4902, 156.843, 13.9165, 0.55", "-35.9328, 158.534, 14.2239, 0.83", "-36.499, 160.814, 14.7746, 0.28", "-36.8408, 162.347, 15.1745, 0.55", "-37.1727, 163.84, 15.647, 0.28", "-37.5152, 165.345, 16.169, 0.83", "-38.1143, 168.122, 17.2738, 0.83", "-38.6115, 170.281, 18.1652, 0.28", "-38.9169, 171.487, 19.0928, 0.55", "-39.3322, 172.807, 20.5181, 0.28", "-39.6471, 173.693, 21.6277, 0.55", "-40.1976, 174.995, 23.4614, 0.28", "-40.5318, 175.617, 24.5208, 0.55", "-42.7198, 178.957, 32.1226, 0.28", "-43.1369, 179.469, 33.6572, 0.83", "-43.68, 180.013, 35.9786, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-34.0933, 151.546, 13.3395, 0.28", "-34.6414, 152.711, 14.8375, 0.28", "-35.0695, 153.669, 15.9797, 0.55", "-35.7491, 155.219, 17.7197, 0.28", "-35.8666, 155.487, 18.0205, 0.55", "-36.1727, 156.186, 18.8043, 0.28", "-36.4797, 156.886, 19.5902, 0.55", "-36.9613, 158.111, 20.8188, 0.28", "-37.3708, 159.18, 21.6844, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "26.3442, -43.7446, 7.99743, 0.55", "27.274, -43.8633, 6.59444, 0.55", "27.8234, -43.8445, 5.62045, 0.55", "30.0093, -43.5877, 1.34399, 0.55", "30.5604, -43.4934, 0.208795, 0.55", "31.9578, -43.3357, -2.53941, 0.83", "32.7104, -43.2906, -3.93169, 0.55", "34.0453, -43.1905, -6.29254, 0.55", "35.2446, -43.1567, -8.30432, 0.83", "36.2463, -43.1897, -9.75684, 0.55", "37.563, -43.3777, -11.585, 0.55", "38.8382, -43.7341, -13.1513, 0.55", "39.7805, -44.1032, -14.1449, 0.83", "40.931, -44.6287, -15.1869, 0.55", "41.691, -44.9991, -15.8308, 0.55", "43.3134, -45.8387, -17.1805, 0.55", "44.7459, -46.5837, -18.4605, 0.55", "45.8439, -47.2398, -19.4553, 2.49", "45.8587, -47.2498, -19.4692, 2.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "26.3442, -43.7446, 7.99743, 0.83", "27.0834, -44.8723, 8.16654, 0.83", "27.8146, -46.5932, 8.28771, 0.83", "28.4942, -48.6974, 8.3543, 0.28", "28.8416, -49.7352, 8.36267, 0.83", "29.331, -51.2104, 8.41379, 0.83", "29.8527, -52.6981, 8.47667, 0.28", "30.5312, -54.9149, 8.55897, 0.55", "31.0288, -56.3585, 8.5889, 0.55", "31.8226, -57.854, 8.90064, 0.55", "32.9212, -59.2754, 9.51484, 0.28", "34.1799, -60.6486, 10.3542, 0.55", "34.963, -61.3611, 10.9734, 0.55", "36.6447, -62.7393, 12.4376, 0.55", "41.2225, -66.2113, 16.6447, 0.55", "42.6189, -67.21, 18.0183, 0.55", "43.6695, -67.8896, 19.0873, 0.55", "45.7077, -69.1334, 21.3632, 0.55", "47.5307, -70.2485, 23.5489, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-4.29633, -39.0343, 5.81173, 0.55", "-3.80073, -39.9508, 5.97541, 0.55", "-3.23797, -41.1783, 6.24433, 0.83", "-2.78974, -42.2017, 6.46469, 0.28", "-2.49243, -42.957, 6.66276, 0.83", "-1.90193, -44.6984, 7.27994, 0.28", "-1.67163, -45.4018, 7.54306, 0.83", "-1.23141, -46.6603, 8.03386, 0.55", "-1.02552, -47.2875, 8.30663, 0.55", "-0.650638, -48.6661, 8.9357, 0.55", "-0.229297, -50.5381, 9.82956, 0.28", "-0.0724013, -51.4234, 10.2349, 0.83", "0.134432, -52.4292, 10.7441, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-4.29633, -39.0343, 5.81173, 0.83", "-3.65408, -40.1371, 5.10024, 0.83", "-2.91708, -41.4025, 4.28377, 1.11", "-1.96511, -43.0372, 3.22916, 0.55", "-0.632662, -45.3251, 1.75305, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-27.3299, -45.5483, 15.8164, 0.28", "-28.0362, -47.1483, 16.0495, 0.28", "-28.2559, -47.5925, 16.1233, 0.83", "-29.4209, -49.4801, 16.4591, 0.83", "-30.292, -50.6186, 16.6734, 0.55", "-31.6153, -52.1111, 16.9622, 0.83", "-32.5412, -53.0604, 17.1457, 0.83", "-33.1809, -53.5807, 17.2734, 0.83", "-34.4856, -54.3432, 17.5067, 0.28", "-35.5222, -54.7391, 17.6623, 0.55", "-36.0668, -54.8515, 17.7192, 0.28", "-36.7683, -54.9202, 17.7763, 0.55", "-38.1586, -55.0957, 17.6992, 0.28", "-39.3577, -55.349, 17.5196, 0.55", "-39.8943, -55.5012, 17.4009, 0.28", "-41.5706, -56.0776, 16.9446, 0.55", "-43.6329, -56.9365, 16.6092, 0.55", "-46.5899, -58.5224, 16.4437, 0.55", "-47.8711, -59.498, 16.5676, 0.55", "-48.6052, -60.2782, 16.7792, 0.28", "-48.9214, -60.7147, 16.9274, 0.83", "-51.5358, -65.1484, 18.5869, 0.55", "-52.0957, -66.2008, 19.0479, 0.83", "-53.3794, -68.6556, 20.2244, 0.83", "-54.4917, -70.6963, 21.1466, 0.28", "-55.2156, -71.946, 21.6477, 0.28", "-56.141, -73.4008, 22.1902, 0.55", "-57.9456, -76.042, 22.9765, 0.28", "-58.8768, -77.2739, 23.3877, 0.55", "-59.5229, -78.0328, 23.669, 0.55", "-60.7523, -79.259, 24.1712, 0.83", "-62.7265, -80.9145, 24.8574, 0.55", "-63.992, -81.8324, 25.2105, 0.55", "-65.4239, -82.621, 25.4174, 0.28", "-66.8269, -83.1942, 25.508, 0.55", "-67.747, -83.4753, 25.4843, 0.55", "-69.5084, -83.9008, 25.304, 0.28", "-70.6025, -84.1468, 25.183, 0.55", "-72.4117, -84.5537, 25.0667, 0.28", "-73.8699, -84.9165, 25.0165, 0.83", "-76.1032, -85.517, 24.9838, 0.28", "-78.0326, -86.1418, 24.9884, 0.83", "-80.2291, -86.9544, 25.0735, 0.28", "-81.3926, -87.4441, 25.1192, 0.55", "-82.3875, -87.9712, 25.1644, 0.28", "-83.9016, -88.9036, 25.2641, 0.55", "-85.2259, -89.8218, 25.3696, 0.28", "-86.6046, -90.9325, 25.5321, 0.55", "-87.4923, -91.7457, 25.654, 0.28", "-89.1124, -93.3537, 25.9445, 0.83", "-90.7834, -95.1573, 26.3427, 0.55", "-91.2282, -95.6833, 26.4757, 0.55", "-93.0778, -97.8944, 27.1602, 0.28", "-94.1616, -99.2695, 27.6581, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-27.3299, -45.5483, 15.8164, 0.55", "-29.2482, -47.8535, 15.6029, 0.55", "-30.0291, -48.7428, 15.6237, 0.55", "-31.4977, -50.2115, 15.5281, 0.83", "-32.898, -51.5676, 15.3845, 0.55", "-33.4689, -52.1692, 15.2725, 0.83", "-35.2462, -54.1772, 14.8334, 0.55", "-36.3586, -55.4225, 14.5526, 1.11", "-38.0979, -57.4576, 13.934, 0.55", "-38.9197, -58.4357, 13.5954, 1.11", "-40.5026, -60.4092, 12.8282, 0.55", "-40.9853, -61.0548, 12.5604, 1.11", "-42.3627, -63.0746, 11.7423, 0.28", "-42.7066, -63.5175, 11.5681, 0.55", "-43.817, -64.8158, 11.0868, 0.28", "-44.4037, -65.4077, 10.8475, 0.55", "-45.255, -66.1831, 10.5052, 0.55", "-47.2878, -68.017, 9.63113, 0.55", "-48.8456, -69.556, 8.83181, 1.11", "-50.4925, -71.2729, 7.87817, 0.55", "-51.1949, -72.0439, 7.44374, 1.11", "-52.5893, -73.5752, 6.56683, 0.28", "-53.0709, -74.0709, 6.27431, 0.83", "-54.8928, -75.9214, 5.15353, 0.28", "-55.5914, -76.6354, 4.76332, 0.83", "-56.7331, -77.7239, 4.14092, 0.83", "-58.7985, -79.4331, 3.09076, 0.28", "-60.1743, -80.4986, 2.42857, 0.83", "-62.8344, -82.4318, 1.18444, 0.28", "-64.0152, -83.2091, 0.673051, 0.83", "-65.6245, -84.2683, -0.0637772, 0.28", "-67.3658, -85.3378, -0.882416, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.37299, 112.588, -0.656583, 0.55", "5.61939, 114.384, -0.991347, 0.55", "5.09396, 115.736, -1.21007, 0.55", "4.56981, 117.362, -1.42906, 0.83", "4.07136, 119.107, -1.63169, 0.28", "3.58789, 120.825, -1.80743, 0.55", "3.29502, 121.933, -1.89036, 0.83", "2.81985, 123.959, -1.99311, 0.28", "2.48528, 126.075, -2.0978, 0.55", "2.36919, 127.263, -2.14499, 0.55", "2.31414, 128.315, -2.17092, 0.55", "2.2706, 130.193, -2.21579, 0.28", "2.27343, 131.508, -2.23995, 0.55", "2.32537, 133.613, -2.34201, 0.28", "2.35224, 134.27, -2.38929, 0.55", "2.5277, 136.289, -2.59415, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.37299, 112.588, -0.656583, 0.28", "4.21388, 112.2, -0.462727, 0.28", "3.28918, 112.034, -0.379702, 0.28", "2.12076, 111.824, -0.274794, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "45.8587, -47.2498, -19.4692, 0.28", "47.0574, -48.6768, -21.1132, 0.28", "47.3135, -48.9654, -21.5096, 0.55", "48.2329, -49.9165, -22.8495, 0.28", "49.0135, -50.6446, -23.9516, 0.55", "49.8078, -51.287, -25.032, 0.55", "51.3421, -52.406, -26.9581, 0.28", "52.0505, -52.8128, -27.8047, 0.55", "53.0257, -53.3406, -28.9403, 0.28", "53.6124, -53.6409, -29.5186, 0.55", "55.9428, -54.834, -31.5492, 0.28", "56.9473, -55.3878, -32.4228, 0.83", "58.8924, -56.5748, -34.0797, 0.28", "59.4288, -56.9245, -34.5505, 1.38", "61.7055, -58.4855, -36.7382, 0.28", "62.0626, -58.7406, -37.0836, 0.55", "63.9141, -60.0995, -38.8783, 0.28", "64.5275, -60.5576, -39.4831, 1.66", "66.3967, -61.9776, -41.3126, 0.28", "67.1024, -62.5336, -42.0588, 0.55", "67.9324, -63.2091, -43.0373, 0.28", "68.3385, -63.5089, -43.5066, 0.55", "69.1381, -63.9821, -44.375, 0.28", "69.3734, -64.1175, -44.7812, 0.83", "70.2678, -64.7043, -47.1754, 0.28", "70.4699, -64.8611, -47.919, 0.55", "71.0348, -65.2623, -50.3114, 0.28", "71.3667, -65.5143, -51.8465, 1.11", "72.8171, -66.553, -57.9113, 0.28", "73.176, -66.7954, -59.2021, 0.55", "73.7941, -67.1972, -61.225, 0.28", "74.5993, -67.7709, -63.6453, 0.83", "75.5309, -68.4878, -66.1405, 0.28", "76.3407, -69.1108, -68.0987, 0.83", "79.2757, -71.063, -73.7505, 0.28", "79.6368, -71.2963, -74.3985, 0.55", "81.1245, -72.2547, -77.0004, 0.28", "81.3854, -72.4361, -77.4686, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "45.8587, -47.2498, -19.4692, 0.28", "48.2436, -46.4321, -19.1507, 0.28", "49.4956, -45.989, -19.5045, 0.55", "50.5949, -45.5881, -19.9927, 0.28", "51.273, -45.3635, -20.3098, 0.55", "53.9488, -44.5558, -21.6074, 0.28", "56.0091, -44.0533, -22.5762, 0.83", "60.4712, -43.0431, -25.1729, 0.28", "60.9713, -42.9382, -25.5091, 0.55", "62.1959, -42.7297, -26.4493, 0.28", "62.7672, -42.6532, -26.9619, 0.83", "64.0268, -42.5167, -28.4711, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "47.5307, -70.2485, 23.5489, 0.55", "49.4516, -72.2538, 23.3315, 0.55", "50.4179, -73.266, 23.2392, 0.55", "52.8601, -75.6757, 23.2275, 0.28", "55.3136, -77.9761, 23.2984, 0.83", "57.6681, -80.1835, 23.3664, 0.28", "59.2876, -81.7019, 23.4132, 0.28", "59.8566, -82.2711, 23.4349, 0.55", "62.1837, -84.3637, 23.6918, 0.28", "62.7183, -84.7926, 23.8396, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "47.5307, -70.2485, 23.5489, 0.28", "47.8058, -72.315, 23.8069, 0.28", "47.9829, -73.645, 23.973, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.632662, -45.3251, 1.75305, 0.55", "-0.12688, -47.1022, 1.77052, 0.55", "0.576389, -48.8274, 1.83286, 0.55", "0.884179, -49.4122, 1.92411, 0.55", "1.55783, -50.705, 2.173, 0.28", "1.97885, -51.464, 2.34901, 0.83", "3.26623, -53.7128, 2.87562, 0.28", "4.27537, -55.3454, 3.37805, 0.83", "6.18914, -58.5682, 4.39992, 0.28", "6.67592, -59.4488, 4.70686, 0.83", "7.8826, -61.7733, 5.53045, 0.28", "8.4161, -62.9156, 5.91613, 0.83", "9.32072, -65.12, 6.63019, 0.28", "10.3871, -68.0987, 7.57856, 0.83", "11.1304, -70.5212, 8.2603, 0.55", "11.458, -71.64, 8.57236, 0.55", "11.753, -72.7583, 8.86523, 1.11", "12.5114, -75.5256, 9.5858, 0.55", "12.9781, -76.9967, 9.89737, 0.28", "13.0944, -77.2502, 9.94535, 0.55", "13.9763, -79.1111, 10.1271, 0.28", "14.431, -79.9219, 10.1896, 0.83", "15.376, -81.372, 10.2373, 0.28", "16.1463, -82.3515, 10.2336, 0.55", "17.712, -84.2177, 10.2337, 0.55", "19.6704, -86.5109, 10.1888, 0.55", "21.1199, -88.1758, 10.0929, 0.55", "21.8222, -88.9833, 10.0486, 0.55", "24.4074, -91.7632, 9.83273, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.632662, -45.3251, 1.75305, 0.55", "-1.43171, -46.4901, 1.28963, 0.55", "-1.64103, -47.0052, 1.10408, 0.83", "-1.84256, -47.7185, 0.894103, 0.55", "-1.98079, -48.358, 0.733903, 0.83", "-2.23166, -49.5186, 0.443171, 0.28", "-2.36521, -50.1364, 0.288398, 0.83", "-2.60435, -51.9364, -0.120543, 0.83", "-2.71477, -53.2951, -0.43029, 0.28", "-2.73331, -54.425, -0.668813, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "2.5277, 136.289, -2.59415, 0.55", "1.15435, 139.477, -3.00235, 0.55", "-0.0134066, 141.769, -3.38484, 0.55", "-0.962931, 143.419, -3.78284, 0.55", "-2.23628, 145.472, -4.44024, 0.28", "-3.91315, 148.348, -5.43922, 0.55", "-4.91795, 150.034, -6.08675, 0.55", "-6.53856, 152.815, -7.28982, 0.28", "-7.68929, 154.791, -8.16656, 1.11", "-8.63917, 156.638, -9.06112, 0.55", "-9.80698, 159.231, -10.5124, 0.55", "-11.0568, 162.022, -12.2247, 0.55", "-11.6092, 163.617, -13.2091, 0.28", "-11.8633, 164.632, -13.9404, 0.55", "-12.8828, 168.265, -16.851, 0.28", "-13.2359, 169.31, -17.7082, 0.83", "-14.0898, 171.633, -19.5942, 0.55", "-14.9009, 173.671, -21.2254, 0.55", "-16.625, 177.763, -24.3126, 0.55", "-17.7916, 180.396, -26.1526, 0.28", "-19.0132, 183.053, -27.8363, 0.28", "-19.9535, 185.192, -29.1371, 0.55", "-21.6649, 189.386, -31.643, 0.28", "-22.7071, 191.806, -33.0431, 0.55", "-23.8138, 194.577, -34.4367, 0.55", "-24.4958, 196.448, -35.3455, 0.28", "-25.078, 197.951, -36.116, 0.55", "-26.1629, 200.596, -37.4217, 0.28", "-26.9641, 202.797, -38.3295, 0.55", "-27.5798, 204.642, -39.0754, 0.28", "-27.9051, 205.804, -39.5712, 0.55", "-28.4459, 207.925, -40.5797, 0.28", "-28.6623, 208.818, -41.0158, 0.55", "-29.0003, 210.617, -41.9869, 0.55", "-29.2774, 212.882, -43.5196, 0.55", "-29.5289, 215.803, -45.9189, 0.28", "-29.5527, 216.487, -46.5377, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "2.5277, 136.289, -2.59415, 0.55", "2.47748, 136.946, -2.82164, 0.55", "2.24736, 139.96, -3.86429, 0.55", "2.13345, 141.452, -4.3804, 0.28", "1.99203, 143.304, -5.02113, 0.83", "1.73526, 146.667, -6.18452, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.73331, -54.425, -0.668813, 0.83", "-2.86123, -57.3204, -0.844886, 0.83", "-2.91924, -58.6061, -0.910261, 1.11", "-3.01851, -61.131, -1.17113, 0.55", "-3.14944, -64.7209, -1.6365, 1.11", "-3.31314, -66.8894, -1.91811, 0.55", "-3.59962, -69.4206, -2.36338, 0.55", "-3.78866, -71.2104, -2.79691, 0.83", "-4.08478, -73.698, -3.58269, 0.28", "-4.08478, -73.698, -3.58269, 0.83", "-4.78367, -76.3334, -5.02125, 0.83", "-5.68643, -79.4902, -6.9791, 0.28", "-6.10987, -80.9516, -7.9391, 0.83", "-6.83463, -82.9694, -9.13854, 0.83", "-7.88651, -85.6056, -10.632, 0.28", "-8.16365, -86.2613, -11.0014, 0.83", "-8.68884, -87.4327, -11.663, 0.83", "-9.29787, -88.6407, -12.2428, 0.83", "-10.5337, -91.0177, -13.32, 0.83", "-12.39, -94.9567, -14.9821, 0.28", "-12.6594, -95.6579, -15.2556, 0.55", "-13.3072, -97.5975, -16.0927, 0.28", "-13.8568, -99.2925, -16.8652, 0.83", "-14.4802, -101.433, -17.9123, 0.28", "-14.8056, -102.738, -18.5362, 0.83", "-15.1733, -104.741, -19.2712, 0.83", "-15.3897, -107.596, -19.8467, 0.28", "-15.3853, -108.725, -19.8952, 0.55", "-15.2284, -110.562, -19.7314, 0.28", "-14.9041, -113.088, -19.2052, 0.83", "-14.3936, -116.318, -17.9943, 0.28", "-13.1715, -122.49, -15.0224, 0.83", "-12.7658, -124.679, -13.8554, 0.28", "-12.5568, -126.689, -12.8238, 0.83", "-12.3935, -128.383, -11.8875, 0.83", "-12.1528, -132.358, -9.70534, 0.28", "-12.2394, -133.394, -9.21224, 0.83", "-12.7696, -136.034, -8.34708, 0.83", "-13.4497, -139.459, -6.83849, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.73331, -54.425, -0.668813, 0.28", "-0.759825, -56.6306, -1.41884, 0.28", "0.681971, -58.2421, -1.9668, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.73526, 146.667, -6.18452, 0.55", "1.43764, 148.702, -6.73369, 0.55", "1.142, 150.564, -7.2151, 0.55", "0.892227, 152.615, -7.8635, 0.28", "0.673596, 153.96, -8.27165, 0.28", "0.510676, 154.709, -8.51224, 0.55", "0.141335, 156.392, -9.05311, 0.28", "-0.185081, 157.756, -9.64908, 0.55", "-0.872871, 159.917, -10.7938, 0.28", "-1.46527, 161.501, -11.7005, 0.55", "-2.18228, 163.285, -12.7873, 0.55", "-3.02055, 165.18, -14.0384, 0.83", "-4.42553, 168.03, -16.0147, 0.55", "-4.90685, 168.978, -16.7431, 0.28", "-5.23714, 169.623, -17.2371, 0.28", "-5.44588, 170.068, -17.6152, 0.55", "-6.17896, 171.625, -18.927, 0.28", "-6.47844, 172.223, -19.4254, 0.55", "-7.15172, 173.649, -20.4304, 0.28", "-7.71351, 174.756, -21.0919, 0.55", "-9.16667, 177.219, -22.3218, 0.28", "-9.79875, 178.122, -22.6673, 0.55", "-10.9241, 179.549, -23.208, 0.28", "-12.1356, 180.871, -23.7328, 0.55", "-14.0405, 182.731, -24.2455, 0.28", "-15.3647, 183.923, -24.4921, 0.83", "-17.0483, 185.388, -24.7669, 0.55", "-20.1766, 188.071, -25.3881, 0.28", "-21.221, 188.949, -25.6061, 0.55", "-24.0462, 191.327, -26.3817, 0.28", "-25.4323, 192.544, -26.9057, 0.55", "-27.2906, 194.282, -27.6251, 0.28", "-27.8973, 194.891, -27.8232, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "1.73526, 146.667, -6.18452, 0.55", "1.79621, 147.507, -6.28084, 0.55", "1.89762, 149.147, -6.47337, 0.28", "1.9778, 150.16, -6.65296, 0.55", "2.08897, 151.529, -6.91759, 0.28", "2.20273, 152.539, -7.13422, 0.55", "2.34569, 153.756, -7.40152, 0.28", "2.58694, 155.556, -7.89505, 0.55", "2.8084, 157.341, -8.44593, 0.28", "2.92747, 158.524, -8.81389, 0.55", "3.05404, 160.188, -9.30536, 0.28", "3.13449, 161.552, -9.70604, 0.55", "3.20425, 163.989, -10.375, 0.28", "3.21514, 165.418, -10.7212, 0.55", "3.2084, 167.021, -11.0856, 0.28", "3.21855, 168.229, -11.3546, 0.28", "3.22549, 168.974, -11.5054, 0.28", "3.32718, 170.979, -11.9304, 0.55", "3.43702, 172.419, -12.2091, 0.55", "3.6192, 174.113, -12.5324, 0.28", "3.6869, 174.921, -12.7298, 0.28", "3.77338, 175.904, -12.9932, 0.28", "3.87415, 177.057, -13.3258, 0.28", "3.95584, 178.276, -13.717, 0.83", "3.9134, 179.861, -14.2335, 0.28", "3.70339, 181.601, -14.678, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-13.4497, -139.459, -6.83849, 0.55", "-13.5748, -141.82, -6.88079, 0.55", "-13.6516, -142.74, -6.89792, 0.55", "-13.7346, -143.883, -6.86481, 0.83", "-13.7444, -145.426, -6.8363, 0.83", "-13.7587, -146.474, -6.81506, 0.55", "-13.7477, -148.031, -6.72315, 0.83", "-13.6807, -149.863, -6.57055, 0.83", "-13.573, -151.752, -6.39205, 0.55", "-13.4139, -153.947, -6.20351, 0.55", "-13.2035, -156.689, -5.93471, 0.83", "-12.9961, -159.158, -5.67365, 0.83", "-12.8352, -160.985, -5.46731, 0.83", "-12.5712, -163.394, -5.21382, 0.83", "-12.4268, -165.078, -5.06597, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.4497, -139.459, -6.83849, 0.55", "-17.4124, -139.979, -6.67224, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.4268, -165.078, -5.06597, 0.83", "-12.3049, -167.405, -4.18329, 0.83", "-12.2454, -169.204, -3.37673, 0.83", "-12.2578, -171.987, -2.02736, 0.83", "-12.2974, -173.872, -1.16281, 0.28", "-12.3317, -176.292, -0.0572501, 0.83", "-12.3407, -179.126, 1.14391, 0.83", "-12.3459, -181.04, 1.94887, 0.28", "-12.4276, -182.871, 2.67293, 0.83", "-12.5497, -184.595, 3.21793, 0.55", "-12.6532, -186.661, 3.64284, 0.83", "-12.7641, -189.427, 3.95887, 0.83", "-12.8338, -191.554, 4.06542, 0.55", "-12.924, -193.754, 4.1112, 0.83", "-13.0897, -196.834, 4.10936, 0.83", "-13.3483, -199.759, 4.20931, 0.55", "-13.5151, -201.146, 4.26974, 0.55", "-13.8978, -203.766, 4.46279, 0.83", "-14.3429, -206.306, 4.66425, 0.83", "-14.7407, -208.37, 4.9564, 0.83", "-15.4982, -211.547, 5.62674, 0.55", "-15.7319, -212.379, 5.84161, 0.55", "-16.1538, -213.876, 6.32708, 0.55", "-16.6302, -215.43, 6.93933, 0.83", "-17.5861, -218.762, 8.36148, 0.55", "-18.0578, -220.39, 8.9071, 0.83", "-18.5026, -221.921, 9.23453, 0.83", "-19.1231, -224.03, 9.55211, 0.28", "-19.4076, -224.977, 9.64819, 0.28", "-20.2836, -227.848, 9.91559, 0.83", "-21.4674, -231.418, 10.0165, 0.55", "-21.9053, -232.851, 10.0743, 0.55", "-22.2833, -234.055, 10.0933, 0.28", "-22.5554, -234.803, 10.0892, 0.55", "-23.7248, -237.273, 10.1084, 0.28", "-24.4711, -238.485, 10.1576, 0.83", "-25.076, -239.462, 10.3293, 0.83", "-26.3242, -241.242, 10.5891, 0.28", "-27.3437, -242.512, 10.6615, 0.83", "-28.9068, -244.165, 10.4577, 0.28", "-29.1222, -244.327, 10.3834, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.4268, -165.078, -5.06597, 0.55", "-8.89978, -165.922, -3.71029, 0.55", "-7.00824, -166.288, -3.19495, 0.28", "-6.51373, -166.367, -3.10388, 0.83", "-3.31507, -166.72, -2.74688, 0.55", "-3.07622, -166.726, -2.72832, 0.83", "-1.72359, -166.757, -2.62319, 0.28", "-0.140376, -166.719, -2.63695, 0.55", "0.576243, -166.637, -2.61232, 0.55", "1.56711, -166.443, -2.67779, 0.28", "3.11624, -165.893, -3.20847, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_DBC_8b03af6e83_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_31
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_6
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.4499999309967165)
    connect dend_25(0), soma_0(0.4499999309967165)
    connect dend_0(0), soma_0(0.4499999309967165)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.900775, -9.8088, 0.590543, 2.2315 ) }
    soma_0 { pt3dadd( -0.795054, -8.89395, 0.538155, 2.59468 ) }
    soma_0 { pt3dadd( -0.689333, -7.97909, 0.485767, 3.40562 ) }
    soma_0 { pt3dadd( -0.583612, -7.06424, 0.433379, 4.21656 ) }
    soma_0 { pt3dadd( -0.477891, -6.14939, 0.380991, 4.76863 ) }
    soma_0 { pt3dadd( -0.37217, -5.23453, 0.328603, 5.07118 ) }
    soma_0 { pt3dadd( -0.26645, -4.31968, 0.276215, 5.37449 ) }
    soma_0 { pt3dadd( -0.160729, -3.40482, 0.223827, 5.6778 ) }
    soma_0 { pt3dadd( -0.0550076, -2.48997, 0.171439, 5.91116 ) }
    soma_0 { pt3dadd( 0.0507134, -1.57512, 0.119051, 6.0829 ) }
    soma_0 { pt3dadd( 0.156434, -0.660263, 0.0666633, 6.26003 ) }
    soma_0 { pt3dadd( 0.262155, 0.254591, 0.0142753, 6.44407 ) }
    soma_0 { pt3dadd( 0.367876, 1.16944, -0.0381126, 6.62807 ) }
    soma_0 { pt3dadd( 0.473597, 2.0843, -0.0905006, 6.73886 ) }
    soma_0 { pt3dadd( 0.579318, 2.99915, -0.142889, 6.60317 ) }
    soma_0 { pt3dadd( 0.685039, 3.91401, -0.195276, 6.29711 ) }
    soma_0 { pt3dadd( 0.79076, 4.82886, -0.247664, 5.46861 ) }
    soma_0 { pt3dadd( 0.896481, 5.74371, -0.300052, 4.56209 ) }
    soma_0 { pt3dadd( 1.0022, 6.65857, -0.35244, 3.66181 ) }
    soma_0 { pt3dadd( 1.10792, 7.57342, -0.404828, 2.68112 ) }
    soma_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 1.67793 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.69856, 3.85573, 6.2591, 0.83 ) }
    dend_42 { pt3dadd( 5.16851, 5.04576, 6.32002, 0.83 ) }
    dend_42 { pt3dadd( 9.6149, 8.64545, 6.50429, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 24/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.488563, 7.24573, 4.0991, 2.22 ) }
    dend_25 { pt3dadd( 0.651981, 11.3119, -0.188216, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.91144, -9.98427, 2.0591, 2.22 ) }
    dend_0 { pt3dadd( -2.44157, -11.9444, 2.22465, 1.94 ) }
    dend_0 { pt3dadd( -3.01136, -14.0512, 2.40258, 2.22 ) }
    dend_0 { pt3dadd( -3.6595, -16.4476, 2.60498, 1.38 ) }
    dend_0 { pt3dadd( -4.03194, -17.8247, 2.72129, 1.38 ) }
    dend_0 { pt3dadd( -4.42138, -19.2646, 2.8429, 1.66 ) }
    dend_0 { pt3dadd( -4.86947, -20.9214, 2.98283, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 2.93559, 23.3891, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 36/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 9.6149, 8.64545, 6.50429, 0.28 ) }
    dend_46 { pt3dadd( 11.4577, 8.46075, 7.49927, 0.28 ) }
    dend_46 { pt3dadd( 12.6206, 8.44012, 8.06168, 0.55 ) }
    dend_46 { pt3dadd( 14.6243, 8.53401, 8.82665, 0.28 ) }
    dend_46 { pt3dadd( 15.3798, 8.60654, 9.06189, 0.55 ) }
    dend_46 { pt3dadd( 18.6079, 8.88901, 9.57558, 0.28 ) }
    dend_46 { pt3dadd( 20.667, 9.05656, 9.68261, 0.55 ) }
    dend_46 { pt3dadd( 23.0178, 9.31291, 9.52916, 0.55 ) }
    dend_46 { pt3dadd( 25.7288, 9.60295, 9.08616, 0.28 ) }
    dend_46 { pt3dadd( 27.0135, 9.75164, 8.81831, 0.55 ) }
    dend_46 { pt3dadd( 31.0783, 10.1558, 7.72819, 0.28 ) }
    dend_46 { pt3dadd( 32.6937, 10.2581, 7.24268, 0.83 ) }
    dend_46 { pt3dadd( 35.2189, 10.2634, 6.57257, 0.28 ) }
    dend_46 { pt3dadd( 36.5368, 10.2303, 6.26367, 0.83 ) }
    dend_46 { pt3dadd( 39.1348, 10.09, 5.80021, 0.28 ) }
    dend_46 { pt3dadd( 40.8409, 9.91294, 5.52307, 0.55 ) }
    dend_46 { pt3dadd( 43.7353, 9.53912, 5.1647, 0.28 ) }
    dend_46 { pt3dadd( 45.9716, 9.18297, 4.95367, 0.83 ) }
    dend_46 { pt3dadd( 49.1114, 8.65699, 4.54949, 0.28 ) }
    dend_46 { pt3dadd( 49.9749, 8.50496, 4.40941, 0.55 ) }
    dend_46 { pt3dadd( 54.6567, 7.57701, 3.50477, 0.28 ) }
    dend_46 { pt3dadd( 58.2698, 6.84237, 2.7425, 0.28 ) }
    dend_46 { pt3dadd( 60.1645, 6.47606, 2.24552, 0.55 ) }
    dend_46 { pt3dadd( 64.9403, 5.4725, 0.861759, 0.28 ) }
    dend_46 { pt3dadd( 66.2806, 5.17654, 0.434704, 0.55 ) }
    dend_46 { pt3dadd( 68.5423, 4.75536, -0.370554, 0.28 ) }
    dend_46 { pt3dadd( 69.4638, 4.60981, -0.695197, 0.55 ) }
    dend_46 { pt3dadd( 74.8683, 3.74756, -2.77447, 0.28 ) }
    dend_46 { pt3dadd( 76.3204, 3.53142, -3.25401, 0.83 ) }
    dend_46 { pt3dadd( 79.5528, 3.05603, -4.03218, 0.28 ) }
    dend_46 { pt3dadd( 81.3963, 2.78975, -4.36992, 0.55 ) }
    dend_46 { pt3dadd( 83.4496, 2.4662, -4.65908, 0.28 ) }
    dend_46 { pt3dadd( 84.1928, 2.32135, -4.78178, 0.55 ) }
    dend_46 { pt3dadd( 87.9162, 1.51736, -5.45881, 0.28 ) }
    dend_46 { pt3dadd( 89.1905, 1.2441, -5.68859, 0.83 ) }
    dend_46 { pt3dadd( 92.356, 0.60198, -6.2577, 0.28 ) }
    dend_46 { pt3dadd( 94.4453, 0.236338, -6.61656, 0.55 ) }
    dend_46 { pt3dadd( 98.8239, -0.192218, -7.73763, 0.28 ) }
    dend_46 { pt3dadd( 101.085, -0.323342, -8.3953, 0.28 ) }
    dend_46 { pt3dadd( 103.214, -0.339694, -9.10183, 0.55 ) }
    dend_46 { pt3dadd( 106.494, -0.218698, -10.164, 0.28 ) }
    dend_46 { pt3dadd( 108.614, -0.1501, -10.8657, 0.55 ) }
    dend_46 { pt3dadd( 115.126, -0.0210116, -13.1227, 0.28 ) }
    dend_46 { pt3dadd( 116.719, -0.0562506, -13.6505, 0.83 ) }
    dend_46 { pt3dadd( 118.945, -0.199976, -14.49, 0.28 ) }
    dend_46 { pt3dadd( 121.192, -0.433561, -15.3331, 0.55 ) }
    dend_46 { pt3dadd( 126.507, -1.27269, -17.361, 0.28 ) }
    dend_46 { pt3dadd( 128.438, -1.67527, -18.1274, 0.83 ) }
    dend_46 { pt3dadd( 135.507, -3.51313, -20.6864, 0.28 ) }
    dend_46 { pt3dadd( 137.334, -4.01305, -21.3354, 0.55 ) }
    dend_46 { pt3dadd( 140.86, -4.97811, -22.4991, 0.28 ) }
    dend_46 { pt3dadd( 144.751, -5.94723, -23.7013, 0.55 ) }
    dend_46 { pt3dadd( 147.141, -6.40932, -24.3713, 0.28 ) }
    dend_46 { pt3dadd( 149.602, -6.76689, -24.9998, 0.28 ) }
    dend_46 { pt3dadd( 151.578, -6.85907, -25.5236, 0.55 ) }
    dend_46 { pt3dadd( 154.987, -6.56518, -26.3004, 0.28 ) }
    dend_46 { pt3dadd( 155.928, -6.28298, -26.5981, 0.55 ) }
    dend_46 { pt3dadd( 158.032, -5.20714, -27.3087, 0.28 ) }
    dend_46 { pt3dadd( 159.196, -4.38228, -27.7526, 0.55 ) }
    dend_46 { pt3dadd( 160.54, -3.1763, -28.3269, 0.28 ) }
    dend_46 { pt3dadd( 162.135, -1.48933, -29.0843, 0.55 ) }
    dend_46 { pt3dadd( 165.478, 2.54542, -30.6435, 0.28 ) }
    dend_46 { pt3dadd( 166.205, 3.47684, -30.9647, 0.28 ) }
    dend_46 { pt3dadd( 167.839, 5.72565, -31.6961, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( 170.159, 9.00322, -32.6573, 0.28 ) }
    dend_46 { pt3dadd( 170.776, 9.86054, -32.8567, 0.55 ) }
    dend_46 { pt3dadd( 172.342, 11.8535, -33.208, 0.28 ) }
    dend_46 { pt3dadd( 172.705, 12.268, -33.2636, 0.55 ) }
    dend_46 { pt3dadd( 174.228, 13.8909, -33.6638, 0.28 ) }
    dend_46 { pt3dadd( 174.895, 14.5462, -33.8966, 0.55 ) }
    dend_46 { pt3dadd( 175.879, 15.4542, -34.3244, 0.28 ) }
    dend_46 { pt3dadd( 176.795, 16.2364, -34.7372, 0.55 ) }
    dend_46 { pt3dadd( 179.112, 18.0892, -35.9584, 0.28 ) }
    dend_46 { pt3dadd( 180.589, 19.2404, -36.7158, 0.28 ) }
    dend_46 { pt3dadd( 181.442, 19.8761, -37.1407, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.6149, 8.64545, 6.50429, 0.28 ) }
    dend_43 { pt3dadd( 11.1222, 11.7195, 5.87028, 0.28 ) }
    dend_43 { pt3dadd( 11.8825, 13.27, 5.5505, 0.83 ) }
    dend_43 { pt3dadd( 12.8894, 15.3235, 5.12697, 0.28 ) }
    dend_43 { pt3dadd( 13.1704, 15.8966, 5.00877, 1.38 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 16/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.651981, 11.3119, -0.188216, 0.83 ) }
    dend_31 { pt3dadd( 0.818402, 14.1101, -0.686017, 0.83 ) }
    dend_31 { pt3dadd( 1.04162, 17.0159, -0.906092, 0.83 ) }
    dend_31 { pt3dadd( 1.15387, 18.35, -0.937874, 0.83 ) }
    dend_31 { pt3dadd( 1.63979, 23.1917, -0.842372, 1.66 ) }
    dend_31 { pt3dadd( 2.01673, 26.9487, -0.679783, 0.83 ) }
    dend_31 { pt3dadd( 2.4226, 30.1999, -0.420677, 0.83 ) }
    dend_31 { pt3dadd( 2.73124, 32.4362, -0.0423064, 0.83 ) }
    dend_31 { pt3dadd( 3.09894, 34.7604, 0.53936, 1.38 ) }
    dend_31 { pt3dadd( 3.57584, 37.3043, 1.27748, 0.83 ) }
    dend_31 { pt3dadd( 3.98231, 39.0005, 1.88334, 1.11 ) }
    dend_31 { pt3dadd( 4.67872, 41.7033, 2.74566, 0.83 ) }
    dend_31 { pt3dadd( 5.33971, 44.259, 3.67488, 0.83 ) }
    dend_31 { pt3dadd( 5.84995, 46.0656, 4.35109, 1.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.651981, 11.3119, -0.188216, 1.11 ) }
    dend_26 { pt3dadd( -0.655674, 13.9169, -0.55571, 1.11 ) }
    dend_26 { pt3dadd( -2.09307, 16.8499, -1.23784, 1.11 ) }
    dend_26 { pt3dadd( -3.19122, 19.3544, -1.88771, 0.55 ) }
    dend_26 { pt3dadd( -3.65575, 20.4953, -2.18168, 1.11 ) }
    dend_26 { pt3dadd( -4.39361, 22.3762, -2.65202, 0.55 ) }
    dend_26 { pt3dadd( -5.42836, 24.9672, -3.25383, 0.55 ) }
    dend_26 { pt3dadd( -6.22341, 27.0049, -3.74782, 0.55 ) }
    dend_26 { pt3dadd( -7.08233, 29.1804, -4.29191, 1.11 ) }
    dend_26 { pt3dadd( -7.45479, 30.0893, -4.43523, 0.55 ) }
    dend_26 { pt3dadd( -7.98435, 31.4734, -4.56864, 0.83 ) }
    dend_26 { pt3dadd( -8.84359, 33.7609, -4.53398, 1.11 ) }
    dend_26 { pt3dadd( -9.36315, 35.0771, -4.33803, 0.55 ) }
    dend_26 { pt3dadd( -9.99315, 36.6631, -3.97424, 1.11 ) }
    dend_26 { pt3dadd( -10.7705, 38.5519, -3.48123, 0.55 ) }
    dend_26 { pt3dadd( -11.8033, 41.1316, -2.8096, 1.11 ) }
    dend_26 { pt3dadd( -12.6063, 43.4144, -2.16784, 0.55 ) }
    dend_26 { pt3dadd( -12.8045, 44.0239, -1.99364, 0.55 ) }
    dend_26 { pt3dadd( -13.1183, 44.9856, -1.71027, 0.55 ) }
    dend_26 { pt3dadd( -13.4882, 46.0779, -1.42121, 0.55 ) }
    dend_26 { pt3dadd( -14.2799, 48.3491, -0.932109, 1.38 ) }
    dend_26 { pt3dadd( -14.894, 49.9952, -0.620469, 0.55 ) }
    dend_26 { pt3dadd( -15.4684, 51.5851, -0.320356, 0.55 ) }
    dend_26 { pt3dadd( -15.7317, 52.3538, -0.144838, 0.28 ) }
    dend_26 { pt3dadd( -16.1775, 53.6834, 0.174816, 0.55 ) }
    dend_26 { pt3dadd( -16.3943, 54.4892, 0.350143, 0.28 ) }
    dend_26 { pt3dadd( -16.7775, 56.0896, 0.631633, 1.11 ) }
    dend_26 { pt3dadd( -17.2892, 58.3334, 0.932584, 0.28 ) }
    dend_26 { pt3dadd( -17.5689, 59.7441, 1.08688, 0.83 ) }
    dend_26 { pt3dadd( -18.1311, 62.541, 1.32344, 0.83 ) }
    dend_26 { pt3dadd( -18.8489, 66.0478, 1.46315, 0.55 ) }
    dend_26 { pt3dadd( -19.5228, 69.4191, 1.44917, 0.55 ) }
    dend_26 { pt3dadd( -19.7746, 70.8173, 1.41239, 0.28 ) }
    dend_26 { pt3dadd( -20.1001, 72.4502, 1.31976, 0.83 ) }
    dend_26 { pt3dadd( -20.378, 73.803, 1.25893, 0.83 ) }
    dend_26 { pt3dadd( -20.9632, 76.312, 1.17749, 0.55 ) }
    dend_26 { pt3dadd( -21.8181, 79.5002, 1.15318, 0.55 ) }
    dend_26 { pt3dadd( -22.4635, 81.9795, 1.15614, 0.55 ) }
    dend_26 { pt3dadd( -23.0878, 84.3226, 1.19016, 0.55 ) }
    dend_26 { pt3dadd( -23.9415, 87.4606, 1.30416, 0.55 ) }
    dend_26 { pt3dadd( -24.4136, 89.2472, 1.43531, 0.55 ) }
    dend_26 { pt3dadd( -25.0229, 91.3798, 1.75173, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.86947, -20.9214, 2.98283, 1.38 ) }
    dend_6 { pt3dadd( -4.99567, -23.5771, 2.85927, 1.38 ) }
    dend_6 { pt3dadd( -5.10713, -25.9228, 2.75013, 0.83 ) }
    dend_6 { pt3dadd( -5.18044, -27.4655, 2.67835, 1.66 ) }
    dend_6 { pt3dadd( -5.30193, -30.022, 2.5594, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.86947, -20.9214, 2.98283, 1.38 ) }
    dend_1 { pt3dadd( -8.41311, -24.4712, 4.80059, 1.38 ) }
    dend_1 { pt3dadd( -10.0176, -26.0767, 5.6145, 0.83 ) }
    dend_1 { pt3dadd( -11.4385, -27.4785, 6.36366, 0.83 ) }
    dend_1 { pt3dadd( -14.2748, -30.1681, 8.037, 0.83 ) }
    dend_1 { pt3dadd( -16.0321, -31.8345, 9.07375, 0.83 ) }
    dend_1 { pt3dadd( -18.0209, -33.7203, 10.247, 0.83 ) }
    dend_1 { pt3dadd( -18.9452, -34.5925, 10.6952, 1.11 ) }
    dend_1 { pt3dadd( -20.6466, -36.1344, 11.5743, 0.83 ) }
    dend_1 { pt3dadd( -22.8235, -38.017, 12.9799, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 6.37948, 53.1908, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 8.10142, 68.0916, -0.457216, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.1704, 15.8966, 5.00877, 0.55 ) }
    dend_45 { pt3dadd( 14.3016, 15.7237, 6.6101, 0.55 ) }
    dend_45 { pt3dadd( 15.3948, 15.4984, 8.13201, 0.55 ) }
    dend_45 { pt3dadd( 17.6957, 15.0491, 11.6554, 0.83 ) }
    dend_45 { pt3dadd( 18.9304, 14.8528, 13.6013, 0.28 ) }
    dend_45 { pt3dadd( 19.3978, 14.7691, 14.3665, 0.83 ) }
    dend_45 { pt3dadd( 20.5469, 14.5325, 16.343, 0.28 ) }
    dend_45 { pt3dadd( 21.2369, 14.4118, 17.5489, 0.55 ) }
    dend_45 { pt3dadd( 22.8992, 14.2004, 20.4964, 0.28 ) }
    dend_45 { pt3dadd( 23.8299, 13.9974, 22.1163, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( 25.1199, 13.6659, 24.4615, 0.28 ) }
    dend_45 { pt3dadd( 26.2472, 13.3658, 26.5287, 0.55 ) }
    dend_45 { pt3dadd( 27.4624, 13.0547, 28.6915, 0.28 ) }
    dend_45 { pt3dadd( 28.4646, 12.7745, 30.5325, 0.55 ) }
    dend_45 { pt3dadd( 29.4823, 12.3645, 32.2567, 0.28 ) }
    dend_45 { pt3dadd( 30.4172, 11.8712, 33.949, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.1704, 15.8966, 5.00877, 0.28 ) }
    dend_44 { pt3dadd( 13.4296, 16.6244, 5.41687, 0.28 ) }
    dend_44 { pt3dadd( 13.6334, 17.1633, 5.65317, 0.83 ) }
    dend_44 { pt3dadd( 14.1215, 18.425, 6.11364, 0.28 ) }
    dend_44 { pt3dadd( 14.1215, 18.425, 6.11364, 0.55 ) }
    dend_44 { pt3dadd( 14.4212, 19.2686, 6.34074, 0.55 ) }
    dend_44 { pt3dadd( 14.817, 20.3868, 6.62252, 1.11 ) }
    dend_44 { pt3dadd( 15.4178, 22.2334, 6.98746, 0.55 ) }
    dend_44 { pt3dadd( 15.6789, 23.1912, 7.12555, 0.28 ) }
    dend_44 { pt3dadd( 15.8801, 24.0849, 7.18332, 0.83 ) }
    dend_44 { pt3dadd( 16.0697, 25.0448, 7.21003, 0.55 ) }
    dend_44 { pt3dadd( 16.2107, 25.9202, 7.20908, 0.83 ) }
    dend_44 { pt3dadd( 16.3907, 27.6511, 7.23451, 0.28 ) }
    dend_44 { pt3dadd( 16.4561, 28.6848, 7.215, 0.83 ) }
    dend_44 { pt3dadd( 16.5085, 30.0836, 7.17035, 0.28 ) }
    dend_44 { pt3dadd( 16.5162, 30.3242, 7.16254, 0.55 ) }
    dend_44 { pt3dadd( 16.5333, 30.9767, 7.13489, 0.28 ) }
    dend_44 { pt3dadd( 16.589, 32.1405, 7.12969, 0.55 ) }
    dend_44 { pt3dadd( 16.7587, 33.721, 7.17448, 0.28 ) }
    dend_44 { pt3dadd( 16.9472, 35.0999, 7.19993, 0.83 ) }
    dend_44 { pt3dadd( 17.1204, 36.2078, 7.23945, 0.28 ) }
    dend_44 { pt3dadd( 17.2547, 36.9084, 7.25891, 0.83 ) }
    dend_44 { pt3dadd( 17.6394, 38.5561, 7.24893, 0.28 ) }
    dend_44 { pt3dadd( 17.9369, 39.6501, 7.2231, 0.55 ) }
    dend_44 { pt3dadd( 18.3096, 40.84, 7.14376, 0.28 ) }
    dend_44 { pt3dadd( 18.6726, 41.8441, 6.96548, 0.55 ) }
    dend_44 { pt3dadd( 19.3349, 43.5369, 6.52333, 0.55 ) }
    dend_44 { pt3dadd( 19.9067, 44.884, 6.10465, 0.28 ) }
    dend_44 { pt3dadd( 20.5093, 46.2269, 5.63402, 0.55 ) }
    dend_44 { pt3dadd( 21.4651, 48.1817, 5.01107, 0.28 ) }
    dend_44 { pt3dadd( 22.2541, 49.6313, 4.54084, 0.83 ) }
    dend_44 { pt3dadd( 22.9304, 50.7792, 4.14122, 0.55 ) }
    dend_44 { pt3dadd( 23.7075, 51.9713, 3.78219, 0.28 ) }
    dend_44 { pt3dadd( 24.2877, 52.7824, 3.62052, 0.55 ) }
    dend_44 { pt3dadd( 25.3074, 54.1033, 3.56265, 0.55 ) }
    dend_44 { pt3dadd( 26.6222, 55.7553, 3.79702, 0.28 ) }
    dend_44 { pt3dadd( 26.8574, 56.047, 3.87689, 0.55 ) }
    dend_44 { pt3dadd( 27.8432, 57.2543, 4.27224, 0.28 ) }
    dend_44 { pt3dadd( 28.8109, 58.4551, 4.68518, 0.55 ) }
    dend_44 { pt3dadd( 29.6203, 59.4792, 5.05706, 0.28 ) }
    dend_44 { pt3dadd( 30.2489, 60.3378, 5.3281, 0.55 ) }
    dend_44 { pt3dadd( 31.0361, 61.4603, 5.7181, 0.28 ) }
    dend_44 { pt3dadd( 31.3878, 61.9643, 5.8181, 0.55 ) }
    dend_44 { pt3dadd( 32.0315, 62.8676, 5.83584, 0.28 ) }
    dend_44 { pt3dadd( 32.5649, 63.5821, 5.77858, 0.83 ) }
    dend_44 { pt3dadd( 33.3397, 64.5581, 5.60203, 0.28 ) }
    dend_44 { pt3dadd( 33.5779, 64.8445, 5.53255, 0.55 ) }
    dend_44 { pt3dadd( 35.0172, 66.5076, 5.15165, 0.28 ) }
    dend_44 { pt3dadd( 35.5195, 67.0851, 5.07989, 0.83 ) }
    dend_44 { pt3dadd( 36.5116, 68.2499, 4.98429, 0.28 ) }
    dend_44 { pt3dadd( 36.8492, 68.6493, 4.96767, 0.55 ) }
    dend_44 { pt3dadd( 37.6017, 69.5713, 4.95583, 0.28 ) }
    dend_44 { pt3dadd( 38.4904, 70.7069, 4.95483, 0.55 ) }
    dend_44 { pt3dadd( 39.4128, 71.9676, 5.00296, 0.28 ) }
    dend_44 { pt3dadd( 40.0747, 72.9296, 5.0174, 0.83 ) }
    dend_44 { pt3dadd( 40.6732, 73.8492, 4.89376, 0.83 ) }
    dend_44 { pt3dadd( 41.5601, 75.2708, 4.60631, 0.28 ) }
    dend_44 { pt3dadd( 41.8542, 75.7608, 4.47436, 0.83 ) }
    dend_44 { pt3dadd( 42.3385, 76.5964, 4.15836, 0.28 ) }
    dend_44 { pt3dadd( 42.8719, 77.5108, 3.71209, 0.55 ) }
    dend_44 { pt3dadd( 44.0974, 79.567, 2.66222, 0.28 ) }
    dend_44 { pt3dadd( 44.5762, 80.3521, 2.19616, 0.55 ) }
    dend_44 { pt3dadd( 44.8213, 80.7402, 1.95522, 0.28 ) }
    dend_44 { pt3dadd( 45.7338, 82.135, 1.10208, 0.55 ) }
    dend_44 { pt3dadd( 46.5656, 83.3395, 0.385228, 0.28 ) }
    dend_44 { pt3dadd( 47.172, 84.1622, -0.0446715, 0.83 ) }
    dend_44 { pt3dadd( 47.867, 85.0783, -0.382508, 0.28 ) }
    dend_44 { pt3dadd( 48.5141, 85.9092, -0.72432, 0.83 ) }
    dend_44 { pt3dadd( 49.3068, 86.9236, -1.1363, 0.28 ) }
    dend_44 { pt3dadd( 49.5872, 87.3059, -1.26677, 0.55 ) }
    dend_44 { pt3dadd( 50.028, 87.9347, -1.44296, 0.28 ) }
    dend_44 { pt3dadd( 50.6901, 88.9251, -1.70318, 0.55 ) }
    dend_44 { pt3dadd( 51.6066, 90.3754, -2.11169, 0.55 ) }
    dend_44 { pt3dadd( 52.3143, 91.5948, -2.54308, 0.28 ) }
    dend_44 { pt3dadd( 52.6674, 92.2126, -2.7991, 1.11 ) }
    dend_44 { pt3dadd( 53.1138, 93.0339, -3.1702, 1.11 ) }
    dend_44 { pt3dadd( 53.6104, 93.9843, -3.51582, 0.83 ) }
    dend_44 { pt3dadd( 54.3647, 95.4459, -3.92845, 0.28 ) }
    dend_44 { pt3dadd( 54.8636, 96.4315, -4.08849, 0.55 ) }
    dend_44 { pt3dadd( 55.3771, 97.3862, -4.18602, 0.28 ) }
    dend_44 { pt3dadd( 56.3877, 99.1636, -4.34953, 0.55 ) }
    dend_44 { pt3dadd( 57.6343, 101.327, -4.5523, 0.28 ) }
    dend_44 { pt3dadd( 58.0126, 101.962, -4.59242, 0.83 ) }
    dend_44 { pt3dadd( 58.4727, 102.705, -4.63828, 0.28 ) }
    dend_44 { pt3dadd( 59.4196, 104.147, -4.76883, 0.55 ) }
    dend_44 { pt3dadd( 60.4544, 105.685, -5.02875, 0.55 ) }
    dend_44 { pt3dadd( 61.7612, 107.568, -5.50154, 0.55 ) }
    dend_44 { pt3dadd( 62.4356, 108.503, -5.82498, 0.28 ) }
    dend_44 { pt3dadd( 63.3362, 109.8, -6.28669, 0.55 ) }
    dend_44 { pt3dadd( 64.061, 110.841, -6.65308, 0.28 ) }
    dend_44 { pt3dadd( 64.8367, 111.991, -7.01111, 0.55 ) }
    dend_44 { pt3dadd( 65.304, 112.679, -7.24882, 0.55 ) }
    dend_44 { pt3dadd( 66.4702, 114.553, -7.99381, 0.55 ) }
    dend_44 { pt3dadd( 67.0294, 115.549, -8.56424, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( 67.5021, 116.477, -9.1854, 0.28 ) }
    dend_44 { pt3dadd( 67.8098, 117.114, -9.68493, 0.55 ) }
    dend_44 { pt3dadd( 68.9053, 119.586, -11.942, 0.55 ) }
    dend_44 { pt3dadd( 69.3853, 120.752, -13.1015, 0.55 ) }
    dend_44 { pt3dadd( 70.064, 122.744, -15.1487, 0.28 ) }
    dend_44 { pt3dadd( 70.1645, 123.071, -15.507, 0.28 ) }
    dend_44 { pt3dadd( 70.2972, 123.587, -16.0816, 0.55 ) }
    dend_44 { pt3dadd( 70.6583, 125.022, -17.5838, 0.55 ) }
    dend_44 { pt3dadd( 70.9331, 125.908, -18.3811, 0.83 ) }
    dend_44 { pt3dadd( 71.2316, 126.656, -19.0613, 0.83 ) }
    dend_44 { pt3dadd( 72.0304, 128.492, -20.826, 0.55 ) }
    dend_44 { pt3dadd( 72.2345, 128.879, -21.2681, 0.55 ) }
    dend_44 { pt3dadd( 72.8332, 129.843, -22.4709, 0.83 ) }
    dend_44 { pt3dadd( 73.7014, 131.044, -24.0918, 0.55 ) }
    dend_44 { pt3dadd( 74.5441, 132.173, -25.7653, 0.55 ) }
    dend_44 { pt3dadd( 75.4178, 133.278, -27.4381, 0.55 ) }
    dend_44 { pt3dadd( 76.158, 134.185, -28.7151, 1.11 ) }
    dend_44 { pt3dadd( 76.5738, 134.707, -29.4306, 0.28 ) }
    dend_44 { pt3dadd( 76.8672, 135.121, -29.9453, 0.55 ) }
    dend_44 { pt3dadd( 77.5278, 136.167, -31.0545, 0.55 ) }
    dend_44 { pt3dadd( 77.9356, 136.858, -31.6635, 1.11 ) }
    dend_44 { pt3dadd( 78.3759, 137.746, -32.4441, 0.55 ) }
    dend_44 { pt3dadd( 78.8368, 138.771, -33.3765, 0.55 ) }
    dend_44 { pt3dadd( 79.448, 140.041, -34.6669, 1.11 ) }
    dend_44 { pt3dadd( 80.396, 141.916, -36.6502, 0.55 ) }
    dend_44 { pt3dadd( 80.567, 142.276, -37.0249, 0.55 ) }
    dend_44 { pt3dadd( 81.4076, 144.34, -39.1499, 0.83 ) }
    dend_44 { pt3dadd( 81.6384, 144.955, -39.8042, 0.83 ) }
    dend_44 { pt3dadd( 82.3322, 146.885, -41.8971, 0.55 ) }
    dend_44 { pt3dadd( 82.4698, 147.237, -42.2885, 0.55 ) }
    dend_44 { pt3dadd( 82.744, 147.963, -43.0532, 0.28 ) }
    dend_44 { pt3dadd( 83.0218, 148.601, -43.7062, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_31 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 5.84995, 46.0656, 4.35109, 0.55 ) }
    dend_41 { pt3dadd( 6.45828, 46.7805, 5.6579, 0.55 ) }
    dend_41 { pt3dadd( 7.51772, 47.9769, 7.7596, 0.83 ) }
    dend_41 { pt3dadd( 8.38661, 49.003, 9.41082, 0.55 ) }
    dend_41 { pt3dadd( 9.65553, 50.6361, 11.8615, 1.11 ) }
    dend_41 { pt3dadd( 11.9018, 53.5843, 16.0385, 0.55 ) }
    dend_41 { pt3dadd( 12.2828, 54.1299, 16.7419, 0.55 ) }
    dend_41 { pt3dadd( 13.4945, 56.0726, 18.9736, 0.83 ) }
    dend_41 { pt3dadd( 14.2696, 57.4615, 20.3458, 0.55 ) }
    dend_41 { pt3dadd( 14.7328, 58.4151, 21.1496, 0.55 ) }
    dend_41 { pt3dadd( 15.4938, 60.1126, 22.1865, 0.28 ) }
    dend_41 { pt3dadd( 16.2547, 61.8689, 23.0412, 0.55 ) }
    dend_41 { pt3dadd( 17.2254, 64.1386, 24.1743, 0.55 ) }
    dend_41 { pt3dadd( 18.3383, 66.8207, 25.4688, 0.28 ) }
    dend_41 { pt3dadd( 19.1171, 68.608, 26.3498, 0.55 ) }
    dend_41 { pt3dadd( 19.7559, 69.9593, 27.0503, 0.55 ) }
    dend_41 { pt3dadd( 20.8725, 72.2147, 28.2389, 0.55 ) }
    dend_41 { pt3dadd( 21.4905, 73.2887, 28.9187, 0.28 ) }
    dend_41 { pt3dadd( 21.7222, 73.6701, 29.1858, 0.55 ) }
    dend_41 { pt3dadd( 22.4783, 74.8633, 30.066, 0.28 ) }
    dend_41 { pt3dadd( 23.4972, 76.4044, 31.2877, 0.55 ) }
    dend_41 { pt3dadd( 24.3536, 77.6187, 32.341, 0.55 ) }
    dend_41 { pt3dadd( 25.8704, 79.6122, 33.9979, 0.28 ) }
    dend_41 { pt3dadd( 26.2468, 80.092, 34.4011, 0.55 ) }
    dend_41 { pt3dadd( 27.1663, 81.3209, 35.4257, 0.28 ) }
    dend_41 { pt3dadd( 27.6852, 82.0324, 35.9706, 0.55 ) }
    dend_41 { pt3dadd( 29.1571, 84.2278, 37.382, 0.28 ) }
    dend_41 { pt3dadd( 30.0075, 85.6116, 38.0944, 0.55 ) }
    dend_41 { pt3dadd( 31.1703, 87.8327, 38.857, 0.28 ) }
    dend_41 { pt3dadd( 31.5707, 88.6509, 39.0678, 0.55 ) }
    dend_41 { pt3dadd( 32.327, 90.3765, 39.4725, 0.28 ) }
    dend_41 { pt3dadd( 32.7705, 91.5305, 39.6732, 0.55 ) }
    dend_41 { pt3dadd( 33.5665, 93.7043, 39.7905, 0.28 ) }
    dend_41 { pt3dadd( 34.1363, 95.2241, 39.8033, 0.28 ) }
    dend_41 { pt3dadd( 34.6737, 96.5875, 39.7377, 0.55 ) }
    dend_41 { pt3dadd( 35.6918, 99.097, 39.6352, 0.55 ) }
    dend_41 { pt3dadd( 36.854, 101.988, 39.5677, 0.28 ) }
    dend_41 { pt3dadd( 37.6344, 103.844, 39.4912, 0.28 ) }
    dend_41 { pt3dadd( 38.2782, 105.379, 39.2786, 0.55 ) }
    dend_41 { pt3dadd( 39.0106, 107.002, 38.9382, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.84995, 46.0656, 4.35109, 0.83 ) }
    dend_32 { pt3dadd( 5.66563, 48.197, 4.6909, 0.83 ) }
    dend_32 { pt3dadd( 5.54605, 49.5563, 4.8619, 0.83 ) }
    dend_32 { pt3dadd( 5.36254, 51.7973, 5.10151, 0.83 ) }
    dend_32 { pt3dadd( 5.22465, 53.854, 5.28874, 0.28 ) }
    dend_32 { pt3dadd( 5.14635, 55.4553, 5.41292, 0.83 ) }
    dend_32 { pt3dadd( 5.0816, 58.1608, 5.58899, 0.83 ) }
    dend_32 { pt3dadd( 5.123, 59.4632, 5.61762, 0.28 ) }
    dend_32 { pt3dadd( 5.17076, 60.1798, 5.63263, 0.83 ) }
    dend_32 { pt3dadd( 5.28708, 61.3842, 5.65691, 0.55 ) }
    dend_32 { pt3dadd( 5.43261, 62.5907, 5.70781, 0.83 ) }
    dend_32 { pt3dadd( 5.56363, 63.7187, 5.73525, 0.55 ) }
    dend_32 { pt3dadd( 5.81723, 65.2045, 5.79187, 0.83 ) }
    dend_32 { pt3dadd( 6.07763, 66.7153, 5.87356, 0.83 ) }
    dend_32 { pt3dadd( 6.43254, 68.4954, 5.95822, 0.83 ) }
    dend_32 { pt3dadd( 6.84693, 70.4777, 6.04152, 0.55 ) }
    dend_32 { pt3dadd( 7.12528, 71.8725, 6.09364, 0.83 ) }
    dend_32 { pt3dadd( 7.69118, 74.6508, 6.16538, 0.55 ) }
    dend_32 { pt3dadd( 8.01266, 76.1989, 6.19984, 0.55 ) }
    dend_32 { pt3dadd( 8.44934, 78.2247, 6.22579, 0.55 ) }
    dend_32 { pt3dadd( 8.77691, 79.7776, 6.24845, 0.55 ) }
    dend_32 { pt3dadd( 9.28261, 82.2224, 6.25318, 0.55 ) }
    dend_32 { pt3dadd( 9.7276, 84.8093, 6.24766, 1.11 ) }
    dend_32 { pt3dadd( 9.91918, 86.4443, 6.25401, 0.55 ) }
    dend_32 { pt3dadd( 10.0809, 88.363, 6.19868, 0.83 ) }
    dend_32 { pt3dadd( 10.1536, 90.3857, 6.09007, 1.11 ) }
    dend_32 { pt3dadd( 10.1525, 91.7084, 5.98611, 0.55 ) }
    dend_32 { pt3dadd( 10.1097, 93.5176, 5.80313, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( 9.97516, 95.4531, 5.56246, 0.83 ) }
    dend_32 { pt3dadd( 9.74854, 97.8865, 5.17823, 0.55 ) }
    dend_32 { pt3dadd( 9.60925, 98.9801, 4.98155, 1.11 ) }
    dend_32 { pt3dadd( 9.28809, 101.177, 4.54179, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -25.0229, 91.3798, 1.75173, 0.28 ) }
    dend_30 { pt3dadd( -24.3367, 94.0293, 1.88358, 0.28 ) }
    dend_30 { pt3dadd( -24.1536, 95.1734, 1.7051, 0.55 ) }
    dend_30 { pt3dadd( -23.983, 96.5355, 1.45545, 0.28 ) }
    dend_30 { pt3dadd( -23.9456, 97.4129, 1.38015, 0.55 ) }
    dend_30 { pt3dadd( -23.9455, 99.0066, 1.33024, 0.28 ) }
    dend_30 { pt3dadd( -23.9612, 99.8784, 1.26504, 0.55 ) }
    dend_30 { pt3dadd( -24.2052, 102.74, 0.937756, 0.28 ) }
    dend_30 { pt3dadd( -24.2952, 103.763, 0.777535, 0.55 ) }
    dend_30 { pt3dadd( -24.543, 106.715, 0.0961522, 0.28 ) }
    dend_30 { pt3dadd( -24.6536, 108.093, -0.265972, 0.83 ) }
    dend_30 { pt3dadd( -24.7773, 110.912, -1.01105, 0.28 ) }
    dend_30 { pt3dadd( -24.8487, 112.849, -1.36346, 0.28 ) }
    dend_30 { pt3dadd( -24.9099, 114.153, -1.4934, 0.55 ) }
    dend_30 { pt3dadd( -25.0312, 116.519, -1.70803, 0.28 ) }
    dend_30 { pt3dadd( -25.0873, 117.532, -1.78281, 0.55 ) }
    dend_30 { pt3dadd( -25.3545, 120.53, -1.77768, 0.55 ) }
    dend_30 { pt3dadd( -25.7981, 124.435, -1.44168, 0.28 ) }
    dend_30 { pt3dadd( -26.1253, 126.695, -1.1405, 0.55 ) }
    dend_30 { pt3dadd( -26.5265, 128.961, -0.733539, 0.28 ) }
    dend_30 { pt3dadd( -26.6887, 129.813, -0.548757, 0.55 ) }
    dend_30 { pt3dadd( -27.008, 131.238, -0.274521, 0.28 ) }
    dend_30 { pt3dadd( -27.2074, 131.82, -0.195884, 0.55 ) }
    dend_30 { pt3dadd( -27.6594, 133.076, -0.122699, 0.28 ) }
    dend_30 { pt3dadd( -27.9408, 133.908, -0.0515468, 0.55 ) }
    dend_30 { pt3dadd( -28.2079, 134.74, 0.0351757, 0.28 ) }
    dend_30 { pt3dadd( -28.6511, 136.162, 0.179187, 0.55 ) }
    dend_30 { pt3dadd( -29.1697, 137.87, 0.336683, 0.55 ) }
    dend_30 { pt3dadd( -30.2471, 141.492, 0.662757, 0.28 ) }
    dend_30 { pt3dadd( -30.9025, 143.923, 0.870272, 0.28 ) }
    dend_30 { pt3dadd( -31.0544, 144.525, 0.92789, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -25.0229, 91.3798, 1.75173, 0.28 ) }
    dend_27 { pt3dadd( -24.9326, 94.4214, 1.26702, 0.28 ) }
    dend_27 { pt3dadd( -24.9303, 95.5383, 1.19398, 0.55 ) }
    dend_27 { pt3dadd( -24.9804, 96.3719, 1.17927, 0.28 ) }
    dend_27 { pt3dadd( -25.1145, 97.2167, 1.23983, 0.55 ) }
    dend_27 { pt3dadd( -25.6206, 99.2743, 1.56258, 0.28 ) }
    dend_27 { pt3dadd( -25.9621, 100.557, 1.8028, 0.55 ) }
    dend_27 { pt3dadd( -26.2016, 101.342, 1.96778, 0.28 ) }
    dend_27 { pt3dadd( -26.5348, 102.503, 2.15007, 0.55 ) }
    dend_27 { pt3dadd( -27.1003, 104.723, 2.43078, 0.55 ) }
    dend_27 { pt3dadd( -27.3479, 106.043, 2.5791, 0.28 ) }
    dend_27 { pt3dadd( -27.735, 108.502, 2.78488, 0.83 ) }
    dend_27 { pt3dadd( -27.9597, 111.201, 2.9812, 0.28 ) }
    dend_27 { pt3dadd( -27.9863, 112.6, 3.02636, 0.28 ) }
    dend_27 { pt3dadd( -27.9662, 113.46, 3.06326, 0.83 ) }
    dend_27 { pt3dadd( -27.7931, 115.777, 3.24791, 0.28 ) }
    dend_27 { pt3dadd( -27.6726, 117.473, 3.50418, 0.28 ) }
    dend_27 { pt3dadd( -27.6439, 118.518, 3.77758, 0.28 ) }
    dend_27 { pt3dadd( -27.6775, 119.61, 4.15349, 0.83 ) }
    dend_27 { pt3dadd( -27.9725, 122.217, 5.24162, 0.28 ) }
    dend_27 { pt3dadd( -28.2274, 123.791, 5.93032, 0.55 ) }
    dend_27 { pt3dadd( -28.4998, 125.119, 6.54391, 0.28 ) }
    dend_27 { pt3dadd( -28.7275, 126.365, 7.1058, 0.55 ) }
    dend_27 { pt3dadd( -28.8648, 127.07, 7.38652, 0.55 ) }
    dend_27 { pt3dadd( -29.3289, 129.639, 8.23569, 0.55 ) }
    dend_27 { pt3dadd( -29.675, 131.962, 8.87896, 0.55 ) }
    dend_27 { pt3dadd( -29.777, 132.596, 9.04491, 0.55 ) }
    dend_27 { pt3dadd( -30.1397, 134.811, 9.61248, 0.55 ) }
    dend_27 { pt3dadd( -30.5316, 136.967, 10.0756, 0.55 ) }
    dend_27 { pt3dadd( -30.9307, 138.957, 10.4933, 0.55 ) }
    dend_27 { pt3dadd( -31.3253, 140.975, 10.8596, 0.83 ) }
    dend_27 { pt3dadd( -31.6664, 142.622, 11.2161, 0.55 ) }
    dend_27 { pt3dadd( -31.9715, 144.015, 11.5487, 0.83 ) }
    dend_27 { pt3dadd( -32.5171, 146.136, 12.1106, 0.28 ) }
    dend_27 { pt3dadd( -33.0409, 148.102, 12.6514, 0.55 ) }
    dend_27 { pt3dadd( -33.6603, 150.079, 13.1295, 0.55 ) }
    dend_27 { pt3dadd( -34.0933, 151.546, 13.3395, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_6 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -5.30193, -30.022, 2.5594, 0.83 ) }
    dend_18 { pt3dadd( -3.78507, -30.9179, 2.19783, 0.83 ) }
    dend_18 { pt3dadd( -2.21105, -31.6742, 2.14202, 0.83 ) }
    dend_18 { pt3dadd( 0.260047, -32.7135, 2.21129, 0.83 ) }
    dend_18 { pt3dadd( 2.81029, -33.8021, 2.4757, 0.83 ) }
    dend_18 { pt3dadd( 5.77545, -35.0621, 2.83689, 0.83 ) }
    dend_18 { pt3dadd( 8.2785, -36.1323, 3.2042, 0.83 ) }
    dend_18 { pt3dadd( 13.1509, -38.1413, 4.13869, 0.55 ) }
    dend_18 { pt3dadd( 15.671, -39.1581, 4.71696, 0.55 ) }
    dend_18 { pt3dadd( 19.8139, -40.7549, 5.81836, 0.55 ) }
    dend_18 { pt3dadd( 22.4045, -41.814, 6.64692, 0.55 ) }
    dend_18 { pt3dadd( 23.7523, -42.4294, 7.1297, 0.83 ) }
    dend_18 { pt3dadd( 25.191, -43.0996, 7.6606, 0.55 ) }
    dend_18 { pt3dadd( 26.3442, -43.7446, 7.99743, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 86/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.30193, -30.022, 2.5594, 1.11 ) }
    dend_7 { pt3dadd( -4.82568, -34.2901, 4.09968, 1.11 ) }
    dend_7 { pt3dadd( -4.6995, -35.421, 4.50778, 1.11 ) }
    dend_7 { pt3dadd( -4.29633, -39.0343, 5.81173, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -22.8235, -38.017, 12.9799, 0.83 ) }
    dend_3 { pt3dadd( -23.519, -39.1792, 13.4176, 0.83 ) }
    dend_3 { pt3dadd( -24.3401, -40.5515, 13.9345, 1.11 ) }
    dend_3 { pt3dadd( -25.1229, -41.8597, 14.4272, 0.83 ) }
    dend_3 { pt3dadd( -26.1059, -43.5026, 15.046, 0.83 ) }
    dend_3 { pt3dadd( -27.1679, -45.2775, 15.7144, 1.11 ) }
    dend_3 { pt3dadd( -27.3299, -45.5483, 15.8164, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -22.8235, -38.017, 12.9799, 0.55 ) }
    dend_2 { pt3dadd( -24.1667, -38.0021, 13.0907, 0.55 ) }
    dend_2 { pt3dadd( -27.2127, -37.9684, 13.342, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( -29.3158, -37.9451, 13.5155, 0.55 ) }
    dend_2 { pt3dadd( -30.5352, -37.9316, 13.6161, 0.83 ) }
    dend_2 { pt3dadd( -32.9678, -37.9047, 13.8167, 0.55 ) }
    dend_2 { pt3dadd( -34.3648, -37.8892, 13.932, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 4/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 9.28809, 101.177, 4.54179, 0.55 ) }
    dend_40 { pt3dadd( 8.80465, 104.324, 3.99757, 0.55 ) }
    dend_40 { pt3dadd( 8.40485, 106.814, 3.87709, 0.55 ) }
    dend_40 { pt3dadd( 7.83259, 109.852, 3.92869, 0.55 ) }
    dend_40 { pt3dadd( 7.35915, 112.329, 4.21371, 0.55 ) }
    dend_40 { pt3dadd( 6.87898, 115.27, 4.69544, 0.55 ) }
    dend_40 { pt3dadd( 6.37179, 118.469, 5.39335, 0.55 ) }
    dend_40 { pt3dadd( 5.5362, 123.442, 7.10244, 0.55 ) }
    dend_40 { pt3dadd( 5.25638, 125.331, 7.96697, 0.55 ) }
    dend_40 { pt3dadd( 4.88824, 128.455, 9.70649, 0.55 ) }
    dend_40 { pt3dadd( 4.82443, 130.323, 10.8885, 0.55 ) }
    dend_40 { pt3dadd( 4.95211, 132.755, 12.5142, 0.55 ) }
    dend_40 { pt3dadd( 5.17734, 135.035, 13.9789, 0.55 ) }
    dend_40 { pt3dadd( 5.30226, 136.139, 14.5384, 0.28 ) }
    dend_40 { pt3dadd( 5.51285, 138.063, 15.367, 0.55 ) }
    dend_40 { pt3dadd( 5.78927, 141.006, 16.3908, 0.28 ) }
    dend_40 { pt3dadd( 5.90047, 142.54, 16.9253, 0.55 ) }
    dend_40 { pt3dadd( 6.04859, 144.944, 17.663, 0.28 ) }
    dend_40 { pt3dadd( 6.07402, 146.123, 18.0305, 0.55 ) }
    dend_40 { pt3dadd( 6.1074, 148.279, 18.7486, 0.55 ) }
    dend_40 { pt3dadd( 6.14599, 152.056, 20.1294, 0.55 ) }
    dend_40 { pt3dadd( 6.18993, 154.616, 21.102, 0.55 ) }
    dend_40 { pt3dadd( 6.29887, 157.547, 22.1676, 0.55 ) }
    dend_40 { pt3dadd( 6.6329, 161.448, 23.2254, 0.28 ) }
    dend_40 { pt3dadd( 6.88978, 163.664, 23.5622, 0.55 ) }
    dend_40 { pt3dadd( 7.24019, 165.886, 23.5849, 0.28 ) }
    dend_40 { pt3dadd( 7.396, 166.763, 23.466, 0.55 ) }
    dend_40 { pt3dadd( 7.89057, 169.722, 22.8198, 0.55 ) }
    dend_40 { pt3dadd( 8.66655, 174.923, 21.3116, 0.55 ) }
    dend_40 { pt3dadd( 8.94563, 177.348, 20.4465, 0.55 ) }
    dend_40 { pt3dadd( 9.15103, 180.376, 19.3214, 0.55 ) }
    dend_40 { pt3dadd( 9.23026, 183.149, 18.2819, 0.55 ) }
    dend_40 { pt3dadd( 9.13965, 186.327, 17.2062, 0.55 ) }
    dend_40 { pt3dadd( 8.89485, 189.64, 16.2751, 0.55 ) }
    dend_40 { pt3dadd( 8.67214, 191.483, 15.8153, 0.55 ) }
    dend_40 { pt3dadd( 8.29348, 193.984, 15.1366, 0.28 ) }
    dend_40 { pt3dadd( 8.09277, 194.916, 14.8521, 0.28 ) }
    dend_40 { pt3dadd( 7.59081, 196.989, 14.1352, 0.55 ) }
    dend_40 { pt3dadd( 6.96203, 199.587, 13.1444, 0.55 ) }
    dend_40 { pt3dadd( 6.04504, 203.004, 11.7268, 0.28 ) }
    dend_40 { pt3dadd( 5.48637, 205.025, 10.8609, 0.55 ) }
    dend_40 { pt3dadd( 5.1424, 206.226, 10.2993, 0.55 ) }
    dend_40 { pt3dadd( 4.57315, 208.28, 9.24675, 0.28 ) }
    dend_40 { pt3dadd( 4.19802, 209.663, 8.44188, 0.55 ) }
    dend_40 { pt3dadd( 3.13167, 212.525, 6.52385, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 49/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 9.28809, 101.177, 4.54179, 0.55 ) }
    dend_33 { pt3dadd( 8.73893, 103.327, 3.5625, 0.55 ) }
    dend_33 { pt3dadd( 8.08797, 105.875, 2.40166, 0.55 ) }
    dend_33 { pt3dadd( 7.77003, 107.12, 1.8347, 0.28 ) }
    dend_33 { pt3dadd( 7.40621, 108.544, 1.1859, 0.83 ) }
    dend_33 { pt3dadd( 6.62966, 111.583, -0.198874, 0.55 ) }
    dend_33 { pt3dadd( 6.37299, 112.588, -0.656583, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -34.0933, 151.546, 13.3395, 0.28 ) }
    dend_29 { pt3dadd( -34.4763, 153.217, 13.5896, 0.28 ) }
    dend_29 { pt3dadd( -34.9312, 154.893, 13.7359, 0.28 ) }
    dend_29 { pt3dadd( -35.4902, 156.843, 13.9165, 0.55 ) }
    dend_29 { pt3dadd( -35.9328, 158.534, 14.2239, 0.83 ) }
    dend_29 { pt3dadd( -36.499, 160.814, 14.7746, 0.28 ) }
    dend_29 { pt3dadd( -36.8408, 162.347, 15.1745, 0.55 ) }
    dend_29 { pt3dadd( -37.1727, 163.84, 15.647, 0.28 ) }
    dend_29 { pt3dadd( -37.5152, 165.345, 16.169, 0.83 ) }
    dend_29 { pt3dadd( -38.1143, 168.122, 17.2738, 0.83 ) }
    dend_29 { pt3dadd( -38.6115, 170.281, 18.1652, 0.28 ) }
    dend_29 { pt3dadd( -38.9169, 171.487, 19.0928, 0.55 ) }
    dend_29 { pt3dadd( -39.3322, 172.807, 20.5181, 0.28 ) }
    dend_29 { pt3dadd( -39.6471, 173.693, 21.6277, 0.55 ) }
    dend_29 { pt3dadd( -40.1976, 174.995, 23.4614, 0.28 ) }
    dend_29 { pt3dadd( -40.5318, 175.617, 24.5208, 0.55 ) }
    dend_29 { pt3dadd( -42.7198, 178.957, 32.1226, 0.28 ) }
    dend_29 { pt3dadd( -43.1369, 179.469, 33.6572, 0.83 ) }
    dend_29 { pt3dadd( -43.68, 180.013, 35.9786, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -34.0933, 151.546, 13.3395, 0.28 ) }
    dend_28 { pt3dadd( -34.6414, 152.711, 14.8375, 0.28 ) }
    dend_28 { pt3dadd( -35.0695, 153.669, 15.9797, 0.55 ) }
    dend_28 { pt3dadd( -35.7491, 155.219, 17.7197, 0.28 ) }
    dend_28 { pt3dadd( -35.8666, 155.487, 18.0205, 0.55 ) }
    dend_28 { pt3dadd( -36.1727, 156.186, 18.8043, 0.28 ) }
    dend_28 { pt3dadd( -36.4797, 156.886, 19.5902, 0.55 ) }
    dend_28 { pt3dadd( -36.9613, 158.111, 20.8188, 0.28 ) }
    dend_28 { pt3dadd( -37.3708, 159.18, 21.6844, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 26.3442, -43.7446, 7.99743, 0.55 ) }
    dend_22 { pt3dadd( 27.274, -43.8633, 6.59444, 0.55 ) }
    dend_22 { pt3dadd( 27.8234, -43.8445, 5.62045, 0.55 ) }
    dend_22 { pt3dadd( 30.0093, -43.5877, 1.34399, 0.55 ) }
    dend_22 { pt3dadd( 30.5604, -43.4934, 0.208795, 0.55 ) }
    dend_22 { pt3dadd( 31.9578, -43.3357, -2.53941, 0.83 ) }
    dend_22 { pt3dadd( 32.7104, -43.2906, -3.93169, 0.55 ) }
    dend_22 { pt3dadd( 34.0453, -43.1905, -6.29254, 0.55 ) }
    dend_22 { pt3dadd( 35.2446, -43.1567, -8.30432, 0.83 ) }
    dend_22 { pt3dadd( 36.2463, -43.1897, -9.75684, 0.55 ) }
    dend_22 { pt3dadd( 37.563, -43.3777, -11.585, 0.55 ) }
    dend_22 { pt3dadd( 38.8382, -43.7341, -13.1513, 0.55 ) }
    dend_22 { pt3dadd( 39.7805, -44.1032, -14.1449, 0.83 ) }
    dend_22 { pt3dadd( 40.931, -44.6287, -15.1869, 0.55 ) }
    dend_22 { pt3dadd( 41.691, -44.9991, -15.8308, 0.55 ) }
    dend_22 { pt3dadd( 43.3134, -45.8387, -17.1805, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( 44.7459, -46.5837, -18.4605, 0.55 ) }
    dend_22 { pt3dadd( 45.8439, -47.2398, -19.4553, 2.49 ) }
    dend_22 { pt3dadd( 45.8587, -47.2498, -19.4692, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 3/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 26.3442, -43.7446, 7.99743, 0.83 ) }
    dend_19 { pt3dadd( 27.0834, -44.8723, 8.16654, 0.83 ) }
    dend_19 { pt3dadd( 27.8146, -46.5932, 8.28771, 0.83 ) }
    dend_19 { pt3dadd( 28.4942, -48.6974, 8.3543, 0.28 ) }
    dend_19 { pt3dadd( 28.8416, -49.7352, 8.36267, 0.83 ) }
    dend_19 { pt3dadd( 29.331, -51.2104, 8.41379, 0.83 ) }
    dend_19 { pt3dadd( 29.8527, -52.6981, 8.47667, 0.28 ) }
    dend_19 { pt3dadd( 30.5312, -54.9149, 8.55897, 0.55 ) }
    dend_19 { pt3dadd( 31.0288, -56.3585, 8.5889, 0.55 ) }
    dend_19 { pt3dadd( 31.8226, -57.854, 8.90064, 0.55 ) }
    dend_19 { pt3dadd( 32.9212, -59.2754, 9.51484, 0.28 ) }
    dend_19 { pt3dadd( 34.1799, -60.6486, 10.3542, 0.55 ) }
    dend_19 { pt3dadd( 34.963, -61.3611, 10.9734, 0.55 ) }
    dend_19 { pt3dadd( 36.6447, -62.7393, 12.4376, 0.55 ) }
    dend_19 { pt3dadd( 41.2225, -66.2113, 16.6447, 0.55 ) }
    dend_19 { pt3dadd( 42.6189, -67.21, 18.0183, 0.55 ) }
    dend_19 { pt3dadd( 43.6695, -67.8896, 19.0873, 0.55 ) }
    dend_19 { pt3dadd( 45.7077, -69.1334, 21.3632, 0.55 ) }
    dend_19 { pt3dadd( 47.5307, -70.2485, 23.5489, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -4.29633, -39.0343, 5.81173, 0.55 ) }
    dend_17 { pt3dadd( -3.80073, -39.9508, 5.97541, 0.55 ) }
    dend_17 { pt3dadd( -3.23797, -41.1783, 6.24433, 0.83 ) }
    dend_17 { pt3dadd( -2.78974, -42.2017, 6.46469, 0.28 ) }
    dend_17 { pt3dadd( -2.49243, -42.957, 6.66276, 0.83 ) }
    dend_17 { pt3dadd( -1.90193, -44.6984, 7.27994, 0.28 ) }
    dend_17 { pt3dadd( -1.67163, -45.4018, 7.54306, 0.83 ) }
    dend_17 { pt3dadd( -1.23141, -46.6603, 8.03386, 0.55 ) }
    dend_17 { pt3dadd( -1.02552, -47.2875, 8.30663, 0.55 ) }
    dend_17 { pt3dadd( -0.650638, -48.6661, 8.9357, 0.55 ) }
    dend_17 { pt3dadd( -0.229297, -50.5381, 9.82956, 0.28 ) }
    dend_17 { pt3dadd( -0.0724013, -51.4234, 10.2349, 0.83 ) }
    dend_17 { pt3dadd( 0.134432, -52.4292, 10.7441, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -4.29633, -39.0343, 5.81173, 0.83 ) }
    dend_8 { pt3dadd( -3.65408, -40.1371, 5.10024, 0.83 ) }
    dend_8 { pt3dadd( -2.91708, -41.4025, 4.28377, 1.11 ) }
    dend_8 { pt3dadd( -1.96511, -43.0372, 3.22916, 0.55 ) }
    dend_8 { pt3dadd( -0.632662, -45.3251, 1.75305, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -27.3299, -45.5483, 15.8164, 0.28 ) }
    dend_5 { pt3dadd( -28.0362, -47.1483, 16.0495, 0.28 ) }
    dend_5 { pt3dadd( -28.2559, -47.5925, 16.1233, 0.83 ) }
    dend_5 { pt3dadd( -29.4209, -49.4801, 16.4591, 0.83 ) }
    dend_5 { pt3dadd( -30.292, -50.6186, 16.6734, 0.55 ) }
    dend_5 { pt3dadd( -31.6153, -52.1111, 16.9622, 0.83 ) }
    dend_5 { pt3dadd( -32.5412, -53.0604, 17.1457, 0.83 ) }
    dend_5 { pt3dadd( -33.1809, -53.5807, 17.2734, 0.83 ) }
    dend_5 { pt3dadd( -34.4856, -54.3432, 17.5067, 0.28 ) }
    dend_5 { pt3dadd( -35.5222, -54.7391, 17.6623, 0.55 ) }
    dend_5 { pt3dadd( -36.0668, -54.8515, 17.7192, 0.28 ) }
    dend_5 { pt3dadd( -36.7683, -54.9202, 17.7763, 0.55 ) }
    dend_5 { pt3dadd( -38.1586, -55.0957, 17.6992, 0.28 ) }
    dend_5 { pt3dadd( -39.3577, -55.349, 17.5196, 0.55 ) }
    dend_5 { pt3dadd( -39.8943, -55.5012, 17.4009, 0.28 ) }
    dend_5 { pt3dadd( -41.5706, -56.0776, 16.9446, 0.55 ) }
    dend_5 { pt3dadd( -43.6329, -56.9365, 16.6092, 0.55 ) }
    dend_5 { pt3dadd( -46.5899, -58.5224, 16.4437, 0.55 ) }
    dend_5 { pt3dadd( -47.8711, -59.498, 16.5676, 0.55 ) }
    dend_5 { pt3dadd( -48.6052, -60.2782, 16.7792, 0.28 ) }
    dend_5 { pt3dadd( -48.9214, -60.7147, 16.9274, 0.83 ) }
    dend_5 { pt3dadd( -51.5358, -65.1484, 18.5869, 0.55 ) }
    dend_5 { pt3dadd( -52.0957, -66.2008, 19.0479, 0.83 ) }
    dend_5 { pt3dadd( -53.3794, -68.6556, 20.2244, 0.83 ) }
    dend_5 { pt3dadd( -54.4917, -70.6963, 21.1466, 0.28 ) }
    dend_5 { pt3dadd( -55.2156, -71.946, 21.6477, 0.28 ) }
    dend_5 { pt3dadd( -56.141, -73.4008, 22.1902, 0.55 ) }
    dend_5 { pt3dadd( -57.9456, -76.042, 22.9765, 0.28 ) }
    dend_5 { pt3dadd( -58.8768, -77.2739, 23.3877, 0.55 ) }
    dend_5 { pt3dadd( -59.5229, -78.0328, 23.669, 0.55 ) }
    dend_5 { pt3dadd( -60.7523, -79.259, 24.1712, 0.83 ) }
    dend_5 { pt3dadd( -62.7265, -80.9145, 24.8574, 0.55 ) }
    dend_5 { pt3dadd( -63.992, -81.8324, 25.2105, 0.55 ) }
    dend_5 { pt3dadd( -65.4239, -82.621, 25.4174, 0.28 ) }
    dend_5 { pt3dadd( -66.8269, -83.1942, 25.508, 0.55 ) }
    dend_5 { pt3dadd( -67.747, -83.4753, 25.4843, 0.55 ) }
    dend_5 { pt3dadd( -69.5084, -83.9008, 25.304, 0.28 ) }
    dend_5 { pt3dadd( -70.6025, -84.1468, 25.183, 0.55 ) }
    dend_5 { pt3dadd( -72.4117, -84.5537, 25.0667, 0.28 ) }
    dend_5 { pt3dadd( -73.8699, -84.9165, 25.0165, 0.83 ) }
    dend_5 { pt3dadd( -76.1032, -85.517, 24.9838, 0.28 ) }
    dend_5 { pt3dadd( -78.0326, -86.1418, 24.9884, 0.83 ) }
    dend_5 { pt3dadd( -80.2291, -86.9544, 25.0735, 0.28 ) }
    dend_5 { pt3dadd( -81.3926, -87.4441, 25.1192, 0.55 ) }
    dend_5 { pt3dadd( -82.3875, -87.9712, 25.1644, 0.28 ) }
    dend_5 { pt3dadd( -83.9016, -88.9036, 25.2641, 0.55 ) }
    dend_5 { pt3dadd( -85.2259, -89.8218, 25.3696, 0.28 ) }
    dend_5 { pt3dadd( -86.6046, -90.9325, 25.5321, 0.55 ) }
    dend_5 { pt3dadd( -87.4923, -91.7457, 25.654, 0.28 ) }
    dend_5 { pt3dadd( -89.1124, -93.3537, 25.9445, 0.83 ) }
    dend_5 { pt3dadd( -90.7834, -95.1573, 26.3427, 0.55 ) }
    dend_5 { pt3dadd( -91.2282, -95.6833, 26.4757, 0.55 ) }
    dend_5 { pt3dadd( -93.0778, -97.8944, 27.1602, 0.28 ) }
    dend_5 { pt3dadd( -94.1616, -99.2695, 27.6581, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 94/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -27.3299, -45.5483, 15.8164, 0.55 ) }
    dend_4 { pt3dadd( -29.2482, -47.8535, 15.6029, 0.55 ) }
    dend_4 { pt3dadd( -30.0291, -48.7428, 15.6237, 0.55 ) }
    dend_4 { pt3dadd( -31.4977, -50.2115, 15.5281, 0.83 ) }
    dend_4 { pt3dadd( -32.898, -51.5676, 15.3845, 0.55 ) }
    dend_4 { pt3dadd( -33.4689, -52.1692, 15.2725, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -35.2462, -54.1772, 14.8334, 0.55 ) }
    dend_4 { pt3dadd( -36.3586, -55.4225, 14.5526, 1.11 ) }
    dend_4 { pt3dadd( -38.0979, -57.4576, 13.934, 0.55 ) }
    dend_4 { pt3dadd( -38.9197, -58.4357, 13.5954, 1.11 ) }
    dend_4 { pt3dadd( -40.5026, -60.4092, 12.8282, 0.55 ) }
    dend_4 { pt3dadd( -40.9853, -61.0548, 12.5604, 1.11 ) }
    dend_4 { pt3dadd( -42.3627, -63.0746, 11.7423, 0.28 ) }
    dend_4 { pt3dadd( -42.7066, -63.5175, 11.5681, 0.55 ) }
    dend_4 { pt3dadd( -43.817, -64.8158, 11.0868, 0.28 ) }
    dend_4 { pt3dadd( -44.4037, -65.4077, 10.8475, 0.55 ) }
    dend_4 { pt3dadd( -45.255, -66.1831, 10.5052, 0.55 ) }
    dend_4 { pt3dadd( -47.2878, -68.017, 9.63113, 0.55 ) }
    dend_4 { pt3dadd( -48.8456, -69.556, 8.83181, 1.11 ) }
    dend_4 { pt3dadd( -50.4925, -71.2729, 7.87817, 0.55 ) }
    dend_4 { pt3dadd( -51.1949, -72.0439, 7.44374, 1.11 ) }
    dend_4 { pt3dadd( -52.5893, -73.5752, 6.56683, 0.28 ) }
    dend_4 { pt3dadd( -53.0709, -74.0709, 6.27431, 0.83 ) }
    dend_4 { pt3dadd( -54.8928, -75.9214, 5.15353, 0.28 ) }
    dend_4 { pt3dadd( -55.5914, -76.6354, 4.76332, 0.83 ) }
    dend_4 { pt3dadd( -56.7331, -77.7239, 4.14092, 0.83 ) }
    dend_4 { pt3dadd( -58.7985, -79.4331, 3.09076, 0.28 ) }
    dend_4 { pt3dadd( -60.1743, -80.4986, 2.42857, 0.83 ) }
    dend_4 { pt3dadd( -62.8344, -82.4318, 1.18444, 0.28 ) }
    dend_4 { pt3dadd( -64.0152, -83.2091, 0.673051, 0.83 ) }
    dend_4 { pt3dadd( -65.6245, -84.2683, -0.0637772, 0.28 ) }
    dend_4 { pt3dadd( -67.3658, -85.3378, -0.882416, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 26/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.37299, 112.588, -0.656583, 0.55 ) }
    dend_35 { pt3dadd( 5.61939, 114.384, -0.991347, 0.55 ) }
    dend_35 { pt3dadd( 5.09396, 115.736, -1.21007, 0.55 ) }
    dend_35 { pt3dadd( 4.56981, 117.362, -1.42906, 0.83 ) }
    dend_35 { pt3dadd( 4.07136, 119.107, -1.63169, 0.28 ) }
    dend_35 { pt3dadd( 3.58789, 120.825, -1.80743, 0.55 ) }
    dend_35 { pt3dadd( 3.29502, 121.933, -1.89036, 0.83 ) }
    dend_35 { pt3dadd( 2.81985, 123.959, -1.99311, 0.28 ) }
    dend_35 { pt3dadd( 2.48528, 126.075, -2.0978, 0.55 ) }
    dend_35 { pt3dadd( 2.36919, 127.263, -2.14499, 0.55 ) }
    dend_35 { pt3dadd( 2.31414, 128.315, -2.17092, 0.55 ) }
    dend_35 { pt3dadd( 2.2706, 130.193, -2.21579, 0.28 ) }
    dend_35 { pt3dadd( 2.27343, 131.508, -2.23995, 0.55 ) }
    dend_35 { pt3dadd( 2.32537, 133.613, -2.34201, 0.28 ) }
    dend_35 { pt3dadd( 2.35224, 134.27, -2.38929, 0.55 ) }
    dend_35 { pt3dadd( 2.5277, 136.289, -2.59415, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 42/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.37299, 112.588, -0.656583, 0.28 ) }
    dend_34 { pt3dadd( 4.21388, 112.2, -0.462727, 0.28 ) }
    dend_34 { pt3dadd( 3.28918, 112.034, -0.379702, 0.28 ) }
    dend_34 { pt3dadd( 2.12076, 111.824, -0.274794, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 45.8587, -47.2498, -19.4692, 0.28 ) }
    dend_24 { pt3dadd( 47.0574, -48.6768, -21.1132, 0.28 ) }
    dend_24 { pt3dadd( 47.3135, -48.9654, -21.5096, 0.55 ) }
    dend_24 { pt3dadd( 48.2329, -49.9165, -22.8495, 0.28 ) }
    dend_24 { pt3dadd( 49.0135, -50.6446, -23.9516, 0.55 ) }
    dend_24 { pt3dadd( 49.8078, -51.287, -25.032, 0.55 ) }
    dend_24 { pt3dadd( 51.3421, -52.406, -26.9581, 0.28 ) }
    dend_24 { pt3dadd( 52.0505, -52.8128, -27.8047, 0.55 ) }
    dend_24 { pt3dadd( 53.0257, -53.3406, -28.9403, 0.28 ) }
    dend_24 { pt3dadd( 53.6124, -53.6409, -29.5186, 0.55 ) }
    dend_24 { pt3dadd( 55.9428, -54.834, -31.5492, 0.28 ) }
    dend_24 { pt3dadd( 56.9473, -55.3878, -32.4228, 0.83 ) }
    dend_24 { pt3dadd( 58.8924, -56.5748, -34.0797, 0.28 ) }
    dend_24 { pt3dadd( 59.4288, -56.9245, -34.5505, 1.38 ) }
    dend_24 { pt3dadd( 61.7055, -58.4855, -36.7382, 0.28 ) }
    dend_24 { pt3dadd( 62.0626, -58.7406, -37.0836, 0.55 ) }
    dend_24 { pt3dadd( 63.9141, -60.0995, -38.8783, 0.28 ) }
    dend_24 { pt3dadd( 64.5275, -60.5576, -39.4831, 1.66 ) }
    dend_24 { pt3dadd( 66.3967, -61.9776, -41.3126, 0.28 ) }
    dend_24 { pt3dadd( 67.1024, -62.5336, -42.0588, 0.55 ) }
    dend_24 { pt3dadd( 67.9324, -63.2091, -43.0373, 0.28 ) }
    dend_24 { pt3dadd( 68.3385, -63.5089, -43.5066, 0.55 ) }
    dend_24 { pt3dadd( 69.1381, -63.9821, -44.375, 0.28 ) }
    dend_24 { pt3dadd( 69.3734, -64.1175, -44.7812, 0.83 ) }
    dend_24 { pt3dadd( 70.2678, -64.7043, -47.1754, 0.28 ) }
    dend_24 { pt3dadd( 70.4699, -64.8611, -47.919, 0.55 ) }
    dend_24 { pt3dadd( 71.0348, -65.2623, -50.3114, 0.28 ) }
    dend_24 { pt3dadd( 71.3667, -65.5143, -51.8465, 1.11 ) }
    dend_24 { pt3dadd( 72.8171, -66.553, -57.9113, 0.28 ) }
    dend_24 { pt3dadd( 73.176, -66.7954, -59.2021, 0.55 ) }
    dend_24 { pt3dadd( 73.7941, -67.1972, -61.225, 0.28 ) }
    dend_24 { pt3dadd( 74.5993, -67.7709, -63.6453, 0.83 ) }
    dend_24 { pt3dadd( 75.5309, -68.4878, -66.1405, 0.28 ) }
    dend_24 { pt3dadd( 76.3407, -69.1108, -68.0987, 0.83 ) }
    dend_24 { pt3dadd( 79.2757, -71.063, -73.7505, 0.28 ) }
    dend_24 { pt3dadd( 79.6368, -71.2963, -74.3985, 0.55 ) }
    dend_24 { pt3dadd( 81.1245, -72.2547, -77.0004, 0.28 ) }
    dend_24 { pt3dadd( 81.3854, -72.4361, -77.4686, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 45.8587, -47.2498, -19.4692, 0.28 ) }
    dend_23 { pt3dadd( 48.2436, -46.4321, -19.1507, 0.28 ) }
    dend_23 { pt3dadd( 49.4956, -45.989, -19.5045, 0.55 ) }
    dend_23 { pt3dadd( 50.5949, -45.5881, -19.9927, 0.28 ) }
    dend_23 { pt3dadd( 51.273, -45.3635, -20.3098, 0.55 ) }
    dend_23 { pt3dadd( 53.9488, -44.5558, -21.6074, 0.28 ) }
    dend_23 { pt3dadd( 56.0091, -44.0533, -22.5762, 0.83 ) }
    dend_23 { pt3dadd( 60.4712, -43.0431, -25.1729, 0.28 ) }
    dend_23 { pt3dadd( 60.9713, -42.9382, -25.5091, 0.55 ) }
    dend_23 { pt3dadd( 62.1959, -42.7297, -26.4493, 0.28 ) }
    dend_23 { pt3dadd( 62.7672, -42.6532, -26.9619, 0.83 ) }
    dend_23 { pt3dadd( 64.0268, -42.5167, -28.4711, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 47.5307, -70.2485, 23.5489, 0.55 ) }
    dend_21 { pt3dadd( 49.4516, -72.2538, 23.3315, 0.55 ) }
    dend_21 { pt3dadd( 50.4179, -73.266, 23.2392, 0.55 ) }
    dend_21 { pt3dadd( 52.8601, -75.6757, 23.2275, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 55.3136, -77.9761, 23.2984, 0.83 ) }
    dend_21 { pt3dadd( 57.6681, -80.1835, 23.3664, 0.28 ) }
    dend_21 { pt3dadd( 59.2876, -81.7019, 23.4132, 0.28 ) }
    dend_21 { pt3dadd( 59.8566, -82.2711, 23.4349, 0.55 ) }
    dend_21 { pt3dadd( 62.1837, -84.3637, 23.6918, 0.28 ) }
    dend_21 { pt3dadd( 62.7183, -84.7926, 23.8396, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 47.5307, -70.2485, 23.5489, 0.28 ) }
    dend_20 { pt3dadd( 47.8058, -72.315, 23.8069, 0.28 ) }
    dend_20 { pt3dadd( 47.9829, -73.645, 23.973, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.632662, -45.3251, 1.75305, 0.55 ) }
    dend_16 { pt3dadd( -0.12688, -47.1022, 1.77052, 0.55 ) }
    dend_16 { pt3dadd( 0.576389, -48.8274, 1.83286, 0.55 ) }
    dend_16 { pt3dadd( 0.884179, -49.4122, 1.92411, 0.55 ) }
    dend_16 { pt3dadd( 1.55783, -50.705, 2.173, 0.28 ) }
    dend_16 { pt3dadd( 1.97885, -51.464, 2.34901, 0.83 ) }
    dend_16 { pt3dadd( 3.26623, -53.7128, 2.87562, 0.28 ) }
    dend_16 { pt3dadd( 4.27537, -55.3454, 3.37805, 0.83 ) }
    dend_16 { pt3dadd( 6.18914, -58.5682, 4.39992, 0.28 ) }
    dend_16 { pt3dadd( 6.67592, -59.4488, 4.70686, 0.83 ) }
    dend_16 { pt3dadd( 7.8826, -61.7733, 5.53045, 0.28 ) }
    dend_16 { pt3dadd( 8.4161, -62.9156, 5.91613, 0.83 ) }
    dend_16 { pt3dadd( 9.32072, -65.12, 6.63019, 0.28 ) }
    dend_16 { pt3dadd( 10.3871, -68.0987, 7.57856, 0.83 ) }
    dend_16 { pt3dadd( 11.1304, -70.5212, 8.2603, 0.55 ) }
    dend_16 { pt3dadd( 11.458, -71.64, 8.57236, 0.55 ) }
    dend_16 { pt3dadd( 11.753, -72.7583, 8.86523, 1.11 ) }
    dend_16 { pt3dadd( 12.5114, -75.5256, 9.5858, 0.55 ) }
    dend_16 { pt3dadd( 12.9781, -76.9967, 9.89737, 0.28 ) }
    dend_16 { pt3dadd( 13.0944, -77.2502, 9.94535, 0.55 ) }
    dend_16 { pt3dadd( 13.9763, -79.1111, 10.1271, 0.28 ) }
    dend_16 { pt3dadd( 14.431, -79.9219, 10.1896, 0.83 ) }
    dend_16 { pt3dadd( 15.376, -81.372, 10.2373, 0.28 ) }
    dend_16 { pt3dadd( 16.1463, -82.3515, 10.2336, 0.55 ) }
    dend_16 { pt3dadd( 17.712, -84.2177, 10.2337, 0.55 ) }
    dend_16 { pt3dadd( 19.6704, -86.5109, 10.1888, 0.55 ) }
    dend_16 { pt3dadd( 21.1199, -88.1758, 10.0929, 0.55 ) }
    dend_16 { pt3dadd( 21.8222, -88.9833, 10.0486, 0.55 ) }
    dend_16 { pt3dadd( 24.4074, -91.7632, 9.83273, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.632662, -45.3251, 1.75305, 0.55 ) }
    dend_9 { pt3dadd( -1.43171, -46.4901, 1.28963, 0.55 ) }
    dend_9 { pt3dadd( -1.64103, -47.0052, 1.10408, 0.83 ) }
    dend_9 { pt3dadd( -1.84256, -47.7185, 0.894103, 0.55 ) }
    dend_9 { pt3dadd( -1.98079, -48.358, 0.733903, 0.83 ) }
    dend_9 { pt3dadd( -2.23166, -49.5186, 0.443171, 0.28 ) }
    dend_9 { pt3dadd( -2.36521, -50.1364, 0.288398, 0.83 ) }
    dend_9 { pt3dadd( -2.60435, -51.9364, -0.120543, 0.83 ) }
    dend_9 { pt3dadd( -2.71477, -53.2951, -0.43029, 0.28 ) }
    dend_9 { pt3dadd( -2.73331, -54.425, -0.668813, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 48/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 2.5277, 136.289, -2.59415, 0.55 ) }
    dend_39 { pt3dadd( 1.15435, 139.477, -3.00235, 0.55 ) }
    dend_39 { pt3dadd( -0.0134066, 141.769, -3.38484, 0.55 ) }
    dend_39 { pt3dadd( -0.962931, 143.419, -3.78284, 0.55 ) }
    dend_39 { pt3dadd( -2.23628, 145.472, -4.44024, 0.28 ) }
    dend_39 { pt3dadd( -3.91315, 148.348, -5.43922, 0.55 ) }
    dend_39 { pt3dadd( -4.91795, 150.034, -6.08675, 0.55 ) }
    dend_39 { pt3dadd( -6.53856, 152.815, -7.28982, 0.28 ) }
    dend_39 { pt3dadd( -7.68929, 154.791, -8.16656, 1.11 ) }
    dend_39 { pt3dadd( -8.63917, 156.638, -9.06112, 0.55 ) }
    dend_39 { pt3dadd( -9.80698, 159.231, -10.5124, 0.55 ) }
    dend_39 { pt3dadd( -11.0568, 162.022, -12.2247, 0.55 ) }
    dend_39 { pt3dadd( -11.6092, 163.617, -13.2091, 0.28 ) }
    dend_39 { pt3dadd( -11.8633, 164.632, -13.9404, 0.55 ) }
    dend_39 { pt3dadd( -12.8828, 168.265, -16.851, 0.28 ) }
    dend_39 { pt3dadd( -13.2359, 169.31, -17.7082, 0.83 ) }
    dend_39 { pt3dadd( -14.0898, 171.633, -19.5942, 0.55 ) }
    dend_39 { pt3dadd( -14.9009, 173.671, -21.2254, 0.55 ) }
    dend_39 { pt3dadd( -16.625, 177.763, -24.3126, 0.55 ) }
    dend_39 { pt3dadd( -17.7916, 180.396, -26.1526, 0.28 ) }
    dend_39 { pt3dadd( -19.0132, 183.053, -27.8363, 0.28 ) }
    dend_39 { pt3dadd( -19.9535, 185.192, -29.1371, 0.55 ) }
    dend_39 { pt3dadd( -21.6649, 189.386, -31.643, 0.28 ) }
    dend_39 { pt3dadd( -22.7071, 191.806, -33.0431, 0.55 ) }
    dend_39 { pt3dadd( -23.8138, 194.577, -34.4367, 0.55 ) }
    dend_39 { pt3dadd( -24.4958, 196.448, -35.3455, 0.28 ) }
    dend_39 { pt3dadd( -25.078, 197.951, -36.116, 0.55 ) }
    dend_39 { pt3dadd( -26.1629, 200.596, -37.4217, 0.28 ) }
    dend_39 { pt3dadd( -26.9641, 202.797, -38.3295, 0.55 ) }
    dend_39 { pt3dadd( -27.5798, 204.642, -39.0754, 0.28 ) }
    dend_39 { pt3dadd( -27.9051, 205.804, -39.5712, 0.55 ) }
    dend_39 { pt3dadd( -28.4459, 207.925, -40.5797, 0.28 ) }
    dend_39 { pt3dadd( -28.6623, 208.818, -41.0158, 0.55 ) }
    dend_39 { pt3dadd( -29.0003, 210.617, -41.9869, 0.55 ) }
    dend_39 { pt3dadd( -29.2774, 212.882, -43.5196, 0.55 ) }
    dend_39 { pt3dadd( -29.5289, 215.803, -45.9189, 0.28 ) }
    dend_39 { pt3dadd( -29.5527, 216.487, -46.5377, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 2.5277, 136.289, -2.59415, 0.55 ) }
    dend_36 { pt3dadd( 2.47748, 136.946, -2.82164, 0.55 ) }
    dend_36 { pt3dadd( 2.24736, 139.96, -3.86429, 0.55 ) }
    dend_36 { pt3dadd( 2.13345, 141.452, -4.3804, 0.28 ) }
    dend_36 { pt3dadd( 1.99203, 143.304, -5.02113, 0.83 ) }
    dend_36 { pt3dadd( 1.73526, 146.667, -6.18452, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 91/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.73331, -54.425, -0.668813, 0.83 ) }
    dend_11 { pt3dadd( -2.86123, -57.3204, -0.844886, 0.83 ) }
    dend_11 { pt3dadd( -2.91924, -58.6061, -0.910261, 1.11 ) }
    dend_11 { pt3dadd( -3.01851, -61.131, -1.17113, 0.55 ) }
    dend_11 { pt3dadd( -3.14944, -64.7209, -1.6365, 1.11 ) }
    dend_11 { pt3dadd( -3.31314, -66.8894, -1.91811, 0.55 ) }
    dend_11 { pt3dadd( -3.59962, -69.4206, -2.36338, 0.55 ) }
    dend_11 { pt3dadd( -3.78866, -71.2104, -2.79691, 0.83 ) }
    dend_11 { pt3dadd( -4.08478, -73.698, -3.58269, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( -4.08478, -73.698, -3.58269, 0.83 ) }
    dend_11 { pt3dadd( -4.78367, -76.3334, -5.02125, 0.83 ) }
    dend_11 { pt3dadd( -5.68643, -79.4902, -6.9791, 0.28 ) }
    dend_11 { pt3dadd( -6.10987, -80.9516, -7.9391, 0.83 ) }
    dend_11 { pt3dadd( -6.83463, -82.9694, -9.13854, 0.83 ) }
    dend_11 { pt3dadd( -7.88651, -85.6056, -10.632, 0.28 ) }
    dend_11 { pt3dadd( -8.16365, -86.2613, -11.0014, 0.83 ) }
    dend_11 { pt3dadd( -8.68884, -87.4327, -11.663, 0.83 ) }
    dend_11 { pt3dadd( -9.29787, -88.6407, -12.2428, 0.83 ) }
    dend_11 { pt3dadd( -10.5337, -91.0177, -13.32, 0.83 ) }
    dend_11 { pt3dadd( -12.39, -94.9567, -14.9821, 0.28 ) }
    dend_11 { pt3dadd( -12.6594, -95.6579, -15.2556, 0.55 ) }
    dend_11 { pt3dadd( -13.3072, -97.5975, -16.0927, 0.28 ) }
    dend_11 { pt3dadd( -13.8568, -99.2925, -16.8652, 0.83 ) }
    dend_11 { pt3dadd( -14.4802, -101.433, -17.9123, 0.28 ) }
    dend_11 { pt3dadd( -14.8056, -102.738, -18.5362, 0.83 ) }
    dend_11 { pt3dadd( -15.1733, -104.741, -19.2712, 0.83 ) }
    dend_11 { pt3dadd( -15.3897, -107.596, -19.8467, 0.28 ) }
    dend_11 { pt3dadd( -15.3853, -108.725, -19.8952, 0.55 ) }
    dend_11 { pt3dadd( -15.2284, -110.562, -19.7314, 0.28 ) }
    dend_11 { pt3dadd( -14.9041, -113.088, -19.2052, 0.83 ) }
    dend_11 { pt3dadd( -14.3936, -116.318, -17.9943, 0.28 ) }
    dend_11 { pt3dadd( -13.1715, -122.49, -15.0224, 0.83 ) }
    dend_11 { pt3dadd( -12.7658, -124.679, -13.8554, 0.28 ) }
    dend_11 { pt3dadd( -12.5568, -126.689, -12.8238, 0.83 ) }
    dend_11 { pt3dadd( -12.3935, -128.383, -11.8875, 0.83 ) }
    dend_11 { pt3dadd( -12.1528, -132.358, -9.70534, 0.28 ) }
    dend_11 { pt3dadd( -12.2394, -133.394, -9.21224, 0.83 ) }
    dend_11 { pt3dadd( -12.7696, -136.034, -8.34708, 0.83 ) }
    dend_11 { pt3dadd( -13.4497, -139.459, -6.83849, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.73331, -54.425, -0.668813, 0.28 ) }
    dend_10 { pt3dadd( -0.759825, -56.6306, -1.41884, 0.28 ) }
    dend_10 { pt3dadd( 0.681971, -58.2421, -1.9668, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 33/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.73526, 146.667, -6.18452, 0.55 ) }
    dend_38 { pt3dadd( 1.43764, 148.702, -6.73369, 0.55 ) }
    dend_38 { pt3dadd( 1.142, 150.564, -7.2151, 0.55 ) }
    dend_38 { pt3dadd( 0.892227, 152.615, -7.8635, 0.28 ) }
    dend_38 { pt3dadd( 0.673596, 153.96, -8.27165, 0.28 ) }
    dend_38 { pt3dadd( 0.510676, 154.709, -8.51224, 0.55 ) }
    dend_38 { pt3dadd( 0.141335, 156.392, -9.05311, 0.28 ) }
    dend_38 { pt3dadd( -0.185081, 157.756, -9.64908, 0.55 ) }
    dend_38 { pt3dadd( -0.872871, 159.917, -10.7938, 0.28 ) }
    dend_38 { pt3dadd( -1.46527, 161.501, -11.7005, 0.55 ) }
    dend_38 { pt3dadd( -2.18228, 163.285, -12.7873, 0.55 ) }
    dend_38 { pt3dadd( -3.02055, 165.18, -14.0384, 0.83 ) }
    dend_38 { pt3dadd( -4.42553, 168.03, -16.0147, 0.55 ) }
    dend_38 { pt3dadd( -4.90685, 168.978, -16.7431, 0.28 ) }
    dend_38 { pt3dadd( -5.23714, 169.623, -17.2371, 0.28 ) }
    dend_38 { pt3dadd( -5.44588, 170.068, -17.6152, 0.55 ) }
    dend_38 { pt3dadd( -6.17896, 171.625, -18.927, 0.28 ) }
    dend_38 { pt3dadd( -6.47844, 172.223, -19.4254, 0.55 ) }
    dend_38 { pt3dadd( -7.15172, 173.649, -20.4304, 0.28 ) }
    dend_38 { pt3dadd( -7.71351, 174.756, -21.0919, 0.55 ) }
    dend_38 { pt3dadd( -9.16667, 177.219, -22.3218, 0.28 ) }
    dend_38 { pt3dadd( -9.79875, 178.122, -22.6673, 0.55 ) }
    dend_38 { pt3dadd( -10.9241, 179.549, -23.208, 0.28 ) }
    dend_38 { pt3dadd( -12.1356, 180.871, -23.7328, 0.55 ) }
    dend_38 { pt3dadd( -14.0405, 182.731, -24.2455, 0.28 ) }
    dend_38 { pt3dadd( -15.3647, 183.923, -24.4921, 0.83 ) }
    dend_38 { pt3dadd( -17.0483, 185.388, -24.7669, 0.55 ) }
    dend_38 { pt3dadd( -20.1766, 188.071, -25.3881, 0.28 ) }
    dend_38 { pt3dadd( -21.221, 188.949, -25.6061, 0.55 ) }
    dend_38 { pt3dadd( -24.0462, 191.327, -26.3817, 0.28 ) }
    dend_38 { pt3dadd( -25.4323, 192.544, -26.9057, 0.55 ) }
    dend_38 { pt3dadd( -27.2906, 194.282, -27.6251, 0.28 ) }
    dend_38 { pt3dadd( -27.8973, 194.891, -27.8232, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 1.73526, 146.667, -6.18452, 0.55 ) }
    dend_37 { pt3dadd( 1.79621, 147.507, -6.28084, 0.55 ) }
    dend_37 { pt3dadd( 1.89762, 149.147, -6.47337, 0.28 ) }
    dend_37 { pt3dadd( 1.9778, 150.16, -6.65296, 0.55 ) }
    dend_37 { pt3dadd( 2.08897, 151.529, -6.91759, 0.28 ) }
    dend_37 { pt3dadd( 2.20273, 152.539, -7.13422, 0.55 ) }
    dend_37 { pt3dadd( 2.34569, 153.756, -7.40152, 0.28 ) }
    dend_37 { pt3dadd( 2.58694, 155.556, -7.89505, 0.55 ) }
    dend_37 { pt3dadd( 2.8084, 157.341, -8.44593, 0.28 ) }
    dend_37 { pt3dadd( 2.92747, 158.524, -8.81389, 0.55 ) }
    dend_37 { pt3dadd( 3.05404, 160.188, -9.30536, 0.28 ) }
    dend_37 { pt3dadd( 3.13449, 161.552, -9.70604, 0.55 ) }
    dend_37 { pt3dadd( 3.20425, 163.989, -10.375, 0.28 ) }
    dend_37 { pt3dadd( 3.21514, 165.418, -10.7212, 0.55 ) }
    dend_37 { pt3dadd( 3.2084, 167.021, -11.0856, 0.28 ) }
    dend_37 { pt3dadd( 3.21855, 168.229, -11.3546, 0.28 ) }
    dend_37 { pt3dadd( 3.22549, 168.974, -11.5054, 0.28 ) }
    dend_37 { pt3dadd( 3.32718, 170.979, -11.9304, 0.55 ) }
    dend_37 { pt3dadd( 3.43702, 172.419, -12.2091, 0.55 ) }
    dend_37 { pt3dadd( 3.6192, 174.113, -12.5324, 0.28 ) }
    dend_37 { pt3dadd( 3.6869, 174.921, -12.7298, 0.28 ) }
    dend_37 { pt3dadd( 3.77338, 175.904, -12.9932, 0.28 ) }
    dend_37 { pt3dadd( 3.87415, 177.057, -13.3258, 0.28 ) }
    dend_37 { pt3dadd( 3.95584, 178.276, -13.717, 0.83 ) }
    dend_37 { pt3dadd( 3.9134, 179.861, -14.2335, 0.28 ) }
    dend_37 { pt3dadd( 3.70339, 181.601, -14.678, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -13.4497, -139.459, -6.83849, 0.55 ) }
    dend_13 { pt3dadd( -13.5748, -141.82, -6.88079, 0.55 ) }
    dend_13 { pt3dadd( -13.6516, -142.74, -6.89792, 0.55 ) }
    dend_13 { pt3dadd( -13.7346, -143.883, -6.86481, 0.83 ) }
    dend_13 { pt3dadd( -13.7444, -145.426, -6.8363, 0.83 ) }
    dend_13 { pt3dadd( -13.7587, -146.474, -6.81506, 0.55 ) }
    dend_13 { pt3dadd( -13.7477, -148.031, -6.72315, 0.83 ) }
    dend_13 { pt3dadd( -13.6807, -149.863, -6.57055, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( -13.573, -151.752, -6.39205, 0.55 ) }
    dend_13 { pt3dadd( -13.4139, -153.947, -6.20351, 0.55 ) }
    dend_13 { pt3dadd( -13.2035, -156.689, -5.93471, 0.83 ) }
    dend_13 { pt3dadd( -12.9961, -159.158, -5.67365, 0.83 ) }
    dend_13 { pt3dadd( -12.8352, -160.985, -5.46731, 0.83 ) }
    dend_13 { pt3dadd( -12.5712, -163.394, -5.21382, 0.83 ) }
    dend_13 { pt3dadd( -12.4268, -165.078, -5.06597, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.4497, -139.459, -6.83849, 0.55 ) }
    dend_12 { pt3dadd( -17.4124, -139.979, -6.67224, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.4268, -165.078, -5.06597, 0.83 ) }
    dend_15 { pt3dadd( -12.3049, -167.405, -4.18329, 0.83 ) }
    dend_15 { pt3dadd( -12.2454, -169.204, -3.37673, 0.83 ) }
    dend_15 { pt3dadd( -12.2578, -171.987, -2.02736, 0.83 ) }
    dend_15 { pt3dadd( -12.2974, -173.872, -1.16281, 0.28 ) }
    dend_15 { pt3dadd( -12.3317, -176.292, -0.0572501, 0.83 ) }
    dend_15 { pt3dadd( -12.3407, -179.126, 1.14391, 0.83 ) }
    dend_15 { pt3dadd( -12.3459, -181.04, 1.94887, 0.28 ) }
    dend_15 { pt3dadd( -12.4276, -182.871, 2.67293, 0.83 ) }
    dend_15 { pt3dadd( -12.5497, -184.595, 3.21793, 0.55 ) }
    dend_15 { pt3dadd( -12.6532, -186.661, 3.64284, 0.83 ) }
    dend_15 { pt3dadd( -12.7641, -189.427, 3.95887, 0.83 ) }
    dend_15 { pt3dadd( -12.8338, -191.554, 4.06542, 0.55 ) }
    dend_15 { pt3dadd( -12.924, -193.754, 4.1112, 0.83 ) }
    dend_15 { pt3dadd( -13.0897, -196.834, 4.10936, 0.83 ) }
    dend_15 { pt3dadd( -13.3483, -199.759, 4.20931, 0.55 ) }
    dend_15 { pt3dadd( -13.5151, -201.146, 4.26974, 0.55 ) }
    dend_15 { pt3dadd( -13.8978, -203.766, 4.46279, 0.83 ) }
    dend_15 { pt3dadd( -14.3429, -206.306, 4.66425, 0.83 ) }
    dend_15 { pt3dadd( -14.7407, -208.37, 4.9564, 0.83 ) }
    dend_15 { pt3dadd( -15.4982, -211.547, 5.62674, 0.55 ) }
    dend_15 { pt3dadd( -15.7319, -212.379, 5.84161, 0.55 ) }
    dend_15 { pt3dadd( -16.1538, -213.876, 6.32708, 0.55 ) }
    dend_15 { pt3dadd( -16.6302, -215.43, 6.93933, 0.83 ) }
    dend_15 { pt3dadd( -17.5861, -218.762, 8.36148, 0.55 ) }
    dend_15 { pt3dadd( -18.0578, -220.39, 8.9071, 0.83 ) }
    dend_15 { pt3dadd( -18.5026, -221.921, 9.23453, 0.83 ) }
    dend_15 { pt3dadd( -19.1231, -224.03, 9.55211, 0.28 ) }
    dend_15 { pt3dadd( -19.4076, -224.977, 9.64819, 0.28 ) }
    dend_15 { pt3dadd( -20.2836, -227.848, 9.91559, 0.83 ) }
    dend_15 { pt3dadd( -21.4674, -231.418, 10.0165, 0.55 ) }
    dend_15 { pt3dadd( -21.9053, -232.851, 10.0743, 0.55 ) }
    dend_15 { pt3dadd( -22.2833, -234.055, 10.0933, 0.28 ) }
    dend_15 { pt3dadd( -22.5554, -234.803, 10.0892, 0.55 ) }
    dend_15 { pt3dadd( -23.7248, -237.273, 10.1084, 0.28 ) }
    dend_15 { pt3dadd( -24.4711, -238.485, 10.1576, 0.83 ) }
    dend_15 { pt3dadd( -25.076, -239.462, 10.3293, 0.83 ) }
    dend_15 { pt3dadd( -26.3242, -241.242, 10.5891, 0.28 ) }
    dend_15 { pt3dadd( -27.3437, -242.512, 10.6615, 0.83 ) }
    dend_15 { pt3dadd( -28.9068, -244.165, 10.4577, 0.28 ) }
    dend_15 { pt3dadd( -29.1222, -244.327, 10.3834, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.4268, -165.078, -5.06597, 0.55 ) }
    dend_14 { pt3dadd( -8.89978, -165.922, -3.71029, 0.55 ) }
    dend_14 { pt3dadd( -7.00824, -166.288, -3.19495, 0.28 ) }
    dend_14 { pt3dadd( -6.51373, -166.367, -3.10388, 0.83 ) }
    dend_14 { pt3dadd( -3.31507, -166.72, -2.74688, 0.55 ) }
    dend_14 { pt3dadd( -3.07622, -166.726, -2.72832, 0.83 ) }
    dend_14 { pt3dadd( -1.72359, -166.757, -2.62319, 0.28 ) }
    dend_14 { pt3dadd( -0.140376, -166.719, -2.63695, 0.55 ) }
    dend_14 { pt3dadd( 0.576243, -166.637, -2.61232, 0.55 ) }
    dend_14 { pt3dadd( 1.56711, -166.443, -2.67779, 0.28 ) }
    dend_14 { pt3dadd( 3.11624, -165.893, -3.20847, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_44 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_40 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_39 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_15 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_43 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_10 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_28 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 9
    dend_26 nseg = 5
    dend_44 nseg = 9
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_40 nseg = 5
    dend_29 nseg = 3
    dend_19 nseg = 3
    dend_5 nseg = 5
    dend_4 nseg = 3
    dend_24 nseg = 3
    dend_16 nseg = 3
    dend_39 nseg = 5
    dend_11 nseg = 5
    dend_38 nseg = 3
    dend_15 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_DBC_8b03af6e83_0_0


