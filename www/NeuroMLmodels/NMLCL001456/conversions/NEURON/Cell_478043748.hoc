// Cell: Cell_478043748
/*
{
  "id" : "Cell_478043748",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "336.561, 226.205, 30.6354, 10.2828", "341.703, 226.205, 30.6354, 10.2828", "346.844, 226.205, 30.6354, 10.2828" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "341.703, 226.205, 30.6354, 1.0", "347.544, 240.021, 30.6354, 1.0", "353.385, 253.837, 30.6354, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "343.863, 229.072, 25.87, 0.2288", "344.469, 229.875, 25.11, 0.2844", "344.212, 230.779, 24.7736, 0.2924", "343.938, 231.883, 24.5344, 0.3088", "344.007, 233.023, 24.395, 0.3328", "344.508, 233.997, 24.4575, 0.408" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "342.326, 232.089, 32.7188, 1.4238", "342.444, 233.209, 33.2777, 0.3352", "342.424, 234.335, 33.8005, 0.3826", "342.316, 235.457, 34.27, 0.496", "342.145, 236.575, 34.6654, 0.5818", "341.637, 237.598, 34.9238, 0.6596", "341.126, 238.622, 35.1114, 0.7404", "340.615, 239.645, 35.2492, 0.9694", "340.103, 240.669, 35.3553, 1.0094", "339.95, 241.788, 35.5074, 0.891", "339.812, 242.908, 35.7, 0.9206", "339.686, 244.043, 35.8806, 0.911", "339.564, 245.181, 36.0287, 0.976", "339.354, 246.304, 36.1438, 0.9232", "338.872, 247.343, 36.2225, 0.9804", "338.394, 248.382, 36.2706, 0.7914", "337.94, 249.432, 36.3042, 0.7296", "337.487, 250.482, 36.3395, 0.5872" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "346.385, 226.843, 29.8063, 0.2288", "347.516, 226.996, 29.8449, 0.371", "348.586, 227.384, 29.8402, 0.4818", "349.392, 228.178, 29.888, 0.5208", "350.445, 228.479, 30.0482, 0.714", "351.583, 228.501, 30.2184, 0.7158", "352.721, 228.62, 30.3551, 0.6174", "353.858, 228.754, 30.4598, 0.4714", "354.995, 228.876, 30.5292, 0.482", "356.139, 228.902, 30.5617, 0.5092", "357.267, 228.715, 30.5673, 0.5224", "358.396, 228.528, 30.5707, 0.4988", "359.51, 228.777, 30.5858, 0.4602", "360.637, 228.909, 30.5656, 0.363" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "346.187, 223.929, 31.5202, 0.2288", "347.185, 223.43, 32.0205, 0.4584", "348.15, 222.953, 32.2689, 0.5424", "349.092, 222.343, 32.4803, 0.4386", "349.85, 221.515, 32.7345, 0.3624", "350.384, 220.624, 32.8647, 0.344", "350.881, 219.686, 32.879, 0.3996", "351.446, 218.73, 32.9854, 0.5238", "351.691, 217.788, 33.2998, 0.653", "352.145, 216.953, 33.773, 0.6964", "353.066, 216.36, 34.1872, 0.5842", "354.131, 216.097, 34.4512, 0.6256", "355.233, 215.853, 34.65, 0.6352", "356.359, 215.721, 34.8505, 0.522", "357.434, 215.881, 35.1375, 0.4904", "358.414, 216.297, 35.5496, 0.4816", "359.456, 216.715, 35.9752, 0.4514", "360.49, 217.198, 36.3737, 0.4624", "361.423, 217.842, 36.7581, 0.6168", "362.221, 218.592, 37.1823, 0.709", "363.23, 218.826, 37.6471, 0.6788", "364.293, 218.517, 37.9915, 0.6846", "365.325, 218.096, 38.1928, 0.6228", "366.4, 218.01, 38.4672, 0.6316", "367.355, 218.361, 38.8769, 0.5068", "368.125, 219.164, 39.2238, 0.5038", "368.786, 220.095, 39.5374, 0.5324", "369.487, 220.949, 39.9232, 0.42", "370.384, 221.584, 40.1736, 0.3278", "371.418, 222.056, 40.409, 0.2792", "372.484, 222.444, 40.693, 0.283", "373.54, 222.8, 41.0802, 0.29", "374.566, 223.109, 41.5979, 0.3044", "375.608, 223.485, 42.1652, 0.3246", "376.654, 223.873, 42.7664, 0.3928", "377.557, 224.525, 43.3608, 0.3706", "378.465, 225.218, 43.8396, 0.364" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "344.805, 228.39, 37.1955, 0.2288", "345.569, 228.929, 39.1023, 0.2748", "346.333, 229.467, 39.9426, 0.275", "347.096, 230.006, 40.9321, 0.2754", "348.15, 230.333, 41.8174, 0.2762", "349.201, 230.337, 42.4374, 0.2776", "350.237, 230.505, 43.1206, 0.2802", "350.97, 231.195, 43.892, 0.285", "351.626, 231.814, 44.7877, 0.2938", "352.586, 232.052, 45.7212, 0.31", "353.515, 232.016, 46.73, 0.3422", "354.354, 232.608, 47.6392, 0.3902", "355.217, 233.282, 48.2756, 0.536", "356.294, 233.448, 48.79, 0.5316", "357.346, 233.153, 49.3052, 0.4836", "358.297, 232.609, 49.8635, 0.3594", "359.078, 231.878, 50.4832, 0.3", "359.708, 231.01, 51.165, 0.2746", "359.964, 230.134, 51.9585, 0.2746", "360.335, 229.19, 52.7139, 0.2746", "361.076, 228.398, 53.2031, 0.2746", "361.908, 227.638, 53.5046, 0.2746", "362.924, 227.146, 53.7211, 0.2746", "363.97, 226.689, 53.9092, 0.2746", "364.849, 226.002, 54.1517, 0.2746", "365.703, 225.258, 54.4606, 0.2746", "366.579, 224.527, 54.8052, 0.2746", "367.388, 223.753, 55.2272, 0.2748", "368.036, 222.953, 55.7953, 0.2748", "368.783, 222.124, 56.3573, 0.2752", "369.576, 221.301, 56.8456, 0.2756", "370.513, 220.69, 57.3434, 0.2766", "371.492, 220.172, 57.8763, 0.2782", "372.311, 219.6, 58.5136, 0.2814", "373.38, 219.359, 59.1083, 0.287", "374.471, 219.078, 59.5336, 0.2988", "375.464, 218.628, 59.9995, 0.3142", "376.558, 218.428, 60.457, 0.3734", "377.652, 218.179, 60.8818, 0.3338" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "337.271, 223.715, 29.8186, 0.2288", "336.276, 223.156, 29.5949, 0.4634", "335.281, 222.597, 29.493, 0.528", "334.358, 221.921, 29.3913, 0.5272", "333.443, 221.235, 29.2883, 0.6536", "332.398, 220.768, 29.1808, 0.725" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "338.894, 222.593, 30.6043, 0.2288", "338.191, 221.69, 30.6093, 0.6038", "337.489, 220.786, 30.611, 0.5126", "336.786, 219.884, 30.6144, 0.4642", "336.086, 218.98, 30.6211, 0.4756", "335.473, 218.017, 30.6331, 0.6918", "334.944, 217.003, 30.6499, 0.8322", "334.393, 216.001, 30.6793, 0.9838", "333.801, 215.025, 30.7258, 0.8768", "333.422, 213.965, 30.7961, 0.7332", "333.264, 212.846, 30.8865, 0.6586", "333.325, 211.734, 30.8694, 0.7328", "332.993, 210.693, 30.7462, 0.7556", "332.109, 210.029, 30.5995, 0.8962", "331.079, 209.534, 30.4514, 0.9082", "330.044, 209.075, 30.259, 0.9934", "329.025, 208.612, 30.0163, 0.8466", "328.155, 207.895, 29.8152, 0.6818", "327.352, 207.08, 29.6769, 0.5398", "326.454, 206.374, 29.5884, 0.6276", "325.522, 205.713, 29.5456, 0.6868", "324.665, 204.957, 29.547, 0.6144", "323.84, 204.164, 29.5812, 0.6776", "322.958, 203.438, 29.6383, 0.7508", "322.053, 202.737, 29.7102, 0.6432", "321.026, 202.288, 29.8396, 0.4804", "319.963, 201.919, 30.0177, 0.458", "318.884, 201.552, 30.1605, 0.433", "317.801, 201.184, 30.2498, 0.536", "316.738, 200.764, 30.2739, 0.4586", "315.687, 200.319, 30.2347, 0.473", "314.752, 199.682, 30.1258, 0.4202", "313.9, 198.939, 29.965, 0.4802", "312.97, 198.304, 29.8886, 0.5108", "312.031, 197.661, 29.8718, 0.5018", "310.952, 197.397, 29.7861, 0.5754", "309.815, 197.364, 29.7455, 0.732", "308.698, 197.133, 29.7368, 0.6942", "307.585, 196.882, 29.7385, 0.6152", "306.534, 196.458, 29.6607, 0.7406", "305.49, 196.014, 29.5229, 0.7984" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000486239424281,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "353.385, 253.837, 30.6354, 1.0", "359.226, 267.653, 30.6354, 1.0", "365.068, 281.469, 30.6354, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "344.508, 233.997, 24.4575, 0.408", "344.64, 235.236, 24.778, 0.4576", "344.066, 236.186, 24.4576, 0.3872", "343.342, 237.072, 24.3336, 0.3464", "342.255, 237.324, 24.1383, 0.386", "341.197, 237.7, 23.8307, 0.3584", "340.116, 237.975, 23.4142, 0.3402", "339.016, 238.059, 22.879, 0.3748", "337.907, 238.056, 22.2827, 0.3362", "336.803, 237.809, 21.7093, 0.305", "335.717, 237.491, 21.1694, 0.2796", "334.887, 236.901, 20.5632, 0.305", "333.823, 236.744, 19.2469, 0.2288" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "344.508, 233.997, 24.4575, 0.408", "344.816, 234.395, 24.5944, 0.3984", "345.598, 235.217, 24.7931, 0.4178", "346.454, 235.969, 24.9914, 0.5026", "347.281, 236.74, 25.2014, 0.6502", "347.941, 237.629, 25.4102, 0.5144", "348.378, 238.677, 25.5729, 0.419", "348.84, 239.701, 25.6304, 0.3978", "349.532, 240.544, 25.5339, 0.5188", "350.487, 241.109, 25.3676, 0.6508", "351.516, 241.604, 25.2087, 0.657", "352.417, 242.292, 25.0758, 0.6838", "353.109, 243.19, 24.9826, 0.6584", "353.302, 244.226, 24.995, 0.5178", "353.447, 245.286, 24.9819, 0.4822", "354.038, 246.224, 24.8971, 0.4678", "354.78, 247.095, 24.7879, 0.4192", "355.586, 247.902, 24.6607, 0.4362", "356.486, 248.589, 24.4823, 0.4052", "357.432, 249.195, 24.2417, 0.4228", "358.434, 249.734, 24.0213, 0.5478", "359.405, 250.333, 23.8446, 0.5606", "359.626, 251.331, 23.6974, 0.5022", "359.348, 252.435, 23.5707, 0.5646", "358.742, 253.394, 23.4566, 0.5376", "358.236, 254.413, 23.3295, 0.4946", "358.375, 255.44, 23.0783, 0.3798", "359.078, 256.31, 22.8372, 0.3376", "359.708, 257.244, 22.5752, 0.3462", "360.268, 258.223, 22.2974, 0.3976", "360.424, 259.296, 22.1863, 0.5496", "360.815, 260.359, 22.1258, 0.5578", "361.566, 261.198, 22.0205, 0.5268", "362.033, 262.214, 21.8417, 0.465", "362.21, 263.34, 21.6587, 0.3718", "362.061, 264.473, 21.4889, 0.3242" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "337.487, 250.482, 36.3395, 0.5872", "337.001, 251.174, 36.3852, 0.6864", "336.342, 252.11, 36.4482, 0.7088", "335.958, 253.179, 36.5361, 0.8482", "335.664, 254.284, 36.6472, 0.8596", "335.195, 255.312, 36.8211, 0.7078", "334.583, 256.245, 37.0723, 0.579", "333.76, 256.87, 37.441, 0.5152", "332.92, 257.524, 37.8627, 0.4616", "332.341, 258.428, 38.0335, 0.506", "331.724, 259.298, 37.9851, 0.5782", "331.126, 260.237, 37.8356, 0.5306", "330.533, 261.213, 37.7392, 0.4088", "329.956, 262.184, 37.7628, 0.3456" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "337.487, 250.482, 36.3395, 0.5872", "337.822, 251.616, 34.2331, 0.4576", "338.095, 252.705, 34.6987, 0.4608", "338.536, 253.727, 34.9101, 0.4734", "338.943, 254.777, 35.1403, 0.6668", "339.212, 255.88, 35.3833, 0.6586", "339.564, 256.958, 35.6121, 0.594", "340.001, 258.012, 35.8039, 0.714", "340.297, 259.107, 35.9369, 0.6862", "340.436, 260.243, 36.0052, 0.7066", "340.37, 261.374, 36.0203, 0.6242", "340.049, 262.468, 35.9943, 0.5976", "339.949, 263.582, 35.9324, 0.6224", "340.349, 264.579, 35.7658, 0.5362", "340.777, 265.611, 35.569, 0.5606", "341.165, 266.686, 35.4138, 0.6272", "341.562, 267.759, 35.3086, 0.648", "341.959, 268.832, 35.2528, 0.4972", "342.353, 269.905, 35.2461, 0.4506", "342.471, 271.029, 35.285, 0.3776", "342.471, 272.172, 35.3522, 0.4064", "342.447, 273.314, 35.4519, 0.348", "342.346, 274.44, 35.6205, 0.3258", "342.316, 275.569, 35.842, 0.3234", "342.571, 276.671, 36.0573, 0.3608", "342.896, 277.767, 36.2519, 0.4558", "342.982, 278.889, 36.4566, 0.5078", "342.982, 280.02, 36.668, 0.519", "342.896, 281.155, 36.8416, 0.4972", "342.742, 282.288, 36.9611, 0.4338", "342.583, 283.421, 37.0384, 0.4284", "342.529, 284.524, 36.9961, 0.5594", "342.753, 285.622, 36.9065, 0.5758", "343.049, 286.681, 36.9331, 0.561", "343.505, 287.706, 37.0252, 0.5242", "343.764, 288.81, 37.1193, 0.5022", "343.414, 289.862, 37.1955, 0.4664", "343.493, 290.952, 37.2218, 0.3744", "343.993, 291.978, 37.2618, 0.328", "344.506, 293.001, 37.3153, 0.3274", "345.019, 294.024, 37.3982, 0.368", "345.56, 295.023, 37.5561, 0.4688", "346.122, 295.985, 37.812, 0.5332", "346.688, 296.945, 38.1298, 0.5616", "347.252, 297.905, 38.4667, 0.5968", "347.512, 299.014, 38.698, 0.5178", "347.712, 300.139, 38.8156, 0.3852", "347.91, 301.263, 38.8354, 0.301", "348.109, 302.388, 38.7792, 0.2764", "348.2, 303.527, 38.6826, 0.2778", "347.977, 304.647, 38.596, 0.2806", "347.747, 305.766, 38.5235, 0.2858", "347.517, 306.885, 38.4507, 0.2954", "347.54, 308.02, 38.295, 0.313", "347.673, 309.135, 38.0383, 0.3468", "347.806, 310.25, 37.702, 0.4034", "347.938, 311.365, 37.3103, 0.538", "347.825, 312.492, 36.9107, 0.6444", "347.677, 313.615, 36.5257, 0.8506", "347.527, 314.738, 36.1721, 0.7302", "347.378, 315.863, 35.8537, 0.6608", "347.219, 316.991, 35.5897, 0.4704", "347.056, 318.12, 35.3777, 0.417", "346.895, 319.25, 35.2089, 0.4656", "346.734, 320.379, 35.0764, 0.5264" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "360.637, 228.909, 30.5656, 0.363", "360.82, 229.43, 29.9824, 0.6864", "361.195, 230.497, 29.2802, 0.4908", "361.613, 231.536, 28.9688, 0.4374", "362.044, 232.571, 28.5869, 0.3592", "362.454, 233.632, 28.2136, 0.3416", "362.859, 234.702, 27.8703, 0.3772", "363.48, 235.576, 27.4529, 0.3408", "364.221, 236.372, 26.98, 0.3128", "365.056, 237.133, 26.5486, 0.2994", "365.908, 237.893, 26.179, 0.3152", "366.816, 238.587, 25.8682, 0.3756", "367.701, 239.31, 25.5943, 0.3378", "368.112, 240.286, 25.252, 0.3074", "368.04, 241.402, 24.9229, 0.288", "368.014, 242.543, 24.5998, 0.3006", "368.427, 243.571, 24.231, 0.3174", "368.951, 244.563, 23.8199, 0.3798", "369.518, 245.516, 23.3714, 0.3454", "370.12, 246.461, 22.929, 0.3224", "370.777, 247.39, 22.5448, 0.3108", "371.546, 248.182, 22.1577, 0.3672", "372.135, 249.147, 21.8701, 0.322", "372.295, 250.267, 21.6491, 0.2796", "372.599, 251.364, 21.4825, 0.2288", "373.204, 252.314, 21.5113, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "360.637, 228.909, 30.5656, 0.363", "361.004, 228.574, 30.5208, 0.3068", "361.839, 227.835, 30.5497, 0.2872", "362.801, 227.311, 30.7504, 0.2978", "363.811, 226.847, 31.0792, 0.3186", "364.911, 226.654, 31.4742, 0.3516", "365.974, 226.292, 31.9122, 0.4388", "366.689, 225.487, 32.3974, 0.4754", "367.408, 224.614, 32.8415, 0.464", "368.339, 224.002, 33.2592, 0.3702", "369.453, 223.914, 33.6314, 0.32", "370.493, 223.48, 33.9287, 0.313", "371.451, 222.856, 34.1664, 0.3402", "372.467, 222.451, 34.4596, 0.4226", "373.558, 222.264, 34.6108, 0.422", "374.579, 222.738, 34.7934, 0.4784", "375.671, 222.977, 35.0216, 0.5324", "376.75, 222.817, 35.3116, 0.42", "377.771, 223.271, 35.5384, 0.3282", "378.566, 224.034, 35.5933, 0.2796", "379.533, 224.628, 35.5953, 0.284", "380.572, 225.093, 35.6079, 0.2918", "381.639, 225.449, 35.6924, 0.3076", "382.713, 225.792, 35.8154, 0.3304", "383.768, 226.034, 35.8823, 0.405", "384.832, 225.727, 35.912, 0.3868", "385.934, 225.475, 36.0329, 0.4246", "387.053, 225.329, 36.2284, 0.3764", "388.165, 225.146, 36.4843, 0.4044", "389.269, 224.907, 36.7898, 0.3444", "390.344, 224.55, 37.1078, 0.3192", "391.385, 224.078, 37.3912, 0.3112", "392.461, 223.733, 37.6547, 0.3382", "393.573, 223.571, 37.9378, 0.413", "394.696, 223.455, 38.206, 0.4328", "395.84, 223.431, 38.4135, 0.3594", "396.98, 223.461, 38.5801, 0.3", "398.117, 223.602, 38.7192, 0.2746", "398.986, 224.265, 38.9458, 0.2746", "399.66, 225.158, 39.0488, 0.2746", "400.401, 226.017, 39.2081, 0.2746", "401.161, 226.853, 39.4268, 0.2746", "402.036, 227.586, 39.6567, 0.2746", "402.988, 228.221, 39.8686, 0.2746", "403.835, 228.974, 40.1159, 0.2748", "404.558, 229.822, 40.4418, 0.275", "405.228, 230.747, 40.7392, 0.2752", "405.897, 231.669, 41.0015, 0.276", "406.789, 232.329, 41.326, 0.277", "407.876, 232.604, 41.6707, 0.2792", "409.02, 232.573, 41.9594, 0.2832", "410.161, 232.513, 42.2134, 0.2908", "411.299, 232.439, 42.4735, 0.3044", "412.41, 232.297, 42.8114, 0.3306", "413.521, 232.194, 43.2046, 0.3752", "414.635, 232.366, 43.6338, 0.4762", "415.747, 232.517, 44.0938, 0.5762", "416.867, 232.39, 44.5726, 0.497", "417.978, 232.225, 45.054, 0.4922", "419.1, 232.286, 45.5235, 0.48", "420.214, 232.428, 45.9729, 0.4726", "421.296, 232.572, 46.4237, 0.386", "422.28, 232.63, 46.9414, 0.3502", "423.384, 232.748, 47.3245, 0.3644", "424.366, 233.195, 47.4328, 0.4564", "425.285, 233.678, 47.315, 0.5386", "426.371, 234.027, 47.1598, 0.4314", "427.377, 234.496, 47.056, 0.3504", "428.247, 235.167, 47.0742, 0.3156", "429.254, 235.699, 47.1512, 0.3762", "430.321, 236.099, 47.2408, 0.3388", "431.321, 236.387, 47.2172, 0.3094", "431.822, 237.007, 47.1377, 0.2916", "432.352, 237.609, 47.2822, 0.3074", "433.352, 237.91, 47.5297, 0.33", "434.409, 238.318, 47.7176, 0.4038", "435.43, 238.787, 47.7862, 0.385", "436.438, 239.3, 47.7747, 0.4202", "437.365, 239.89, 47.6504, 0.3744", "438.191, 240.616, 47.5328, 0.371", "439.16, 241.136, 47.5378, 0.4266", "440.279, 241.277, 47.6171, 0.4578", "441.423, 241.254, 47.7428, 0.4078", "442.566, 241.206, 47.9044, 0.3794", "443.702, 241.263, 48.123, 0.473", "444.816, 241.445, 48.4134, 0.3944", "445.913, 241.732, 48.755, 0.3278", "446.983, 242.129, 49.1221, 0.279", "448.045, 242.522, 49.5482, 0.2828", "449.074, 242.806, 50.113, 0.2894", "450.132, 242.991, 50.7788, 0.3032", "451.239, 243.084, 51.4758, 0.3226", "452.361, 243.131, 52.1872, 0.389", "453.488, 243.094, 52.9068, 0.3636", "454.616, 243.029, 53.6304, 0.35", "455.645, 242.744, 54.4292, 0.3926", "456.614, 242.38, 55.3423, 0.3704", "457.531, 242.268, 56.4085, 0.3634", "458.473, 242.25, 57.5803, 0.4124", "459.561, 242.319, 58.681, 0.4318", "460.616, 242.586, 59.7279, 0.3574", "461.603, 242.455, 60.7866, 0.2966", "462.449, 241.891, 61.8178, 0.2684", "463.143, 241.168, 62.8158, 0.2626", "463.987, 240.876, 63.8226, 0.2542", "465.115, 240.866, 64.6229, 0.2288", "466.161, 241.323, 65.6662, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "378.465, 225.218, 43.8396, 0.364", "378.743, 225.217, 44.3097, 0.4134", "379.776, 225.212, 44.8549, 0.4336", "380.894, 225.139, 45.3726, 0.3608", "381.996, 225.01, 45.7898, 0.3026", "382.996, 225.2, 46.1653, 0.2794", "383.82, 225.85, 46.6276, 0.2836", "384.76, 226.43, 47.0282, 0.291", "385.812, 226.435, 47.4348, 0.3062", "386.583, 226.84, 47.9623, 0.328", "387.254, 227.522, 48.2219, 0.3988", "388.258, 228.022, 48.4392, 0.3832", "389.355, 228.103, 48.5996, 0.3808", "390.344, 227.704, 48.7606, 0.4754", "391.273, 227.125, 48.9866, 0.399", "392.35, 226.98, 49.222, 0.336", "393.483, 227.055, 49.513, 0.2942", "394.615, 227.19, 49.8016, 0.3116", "395.594, 226.832, 50.1052, 0.3392", "396.531, 226.196, 50.451, 0.4146", "397.522, 225.659, 50.8438, 0.4358", "398.463, 225.233, 51.3764, 0.365", "399.505, 224.868, 51.9229, 0.3104", "400.595, 224.598, 52.4555, 0.2938", "401.665, 224.261, 52.9556, 0.3112", "402.569, 223.582, 53.3683, 0.3382", "403.467, 222.91, 53.7558, 0.413", "404.457, 222.334, 54.0408, 0.4328", "405.54, 221.993, 54.2357, 0.3594", "406.616, 221.674, 54.483, 0.3", "407.691, 221.353, 54.7728, 0.2746", "408.746, 220.946, 55.0771, 0.2746", "409.712, 220.335, 55.3389, 0.2746", "410.671, 219.711, 55.5778, 0.2746", "411.608, 219.054, 55.7953, 0.2746", "412.571, 218.438, 55.9952, 0.2746", "413.646, 218.065, 56.2215, 0.2746", "414.737, 218.163, 56.5737, 0.2746", "415.743, 218.475, 57.0685, 0.2746", "416.824, 218.832, 57.5481, 0.2748", "417.939, 219.094, 57.9799, 0.2748", "419.051, 219.353, 58.3862, 0.2752", "420.145, 219.578, 58.8526, 0.2756", "421.236, 219.782, 59.3656, 0.2766", "422.286, 219.776, 59.9785, 0.2782", "423.314, 219.719, 60.6805, 0.2814", "424.206, 219.384, 61.4664, 0.287", "425.321, 219.406, 62.0858, 0.2988", "426.332, 219.741, 62.4047, 0.3142", "427.381, 220.131, 62.6388, 0.3734", "428.421, 220.235, 62.9451, 0.3338", "429.39, 220.074, 63.3595, 0.3", "430.375, 219.715, 63.7112, 0.2746", "431.397, 219.498, 63.8462, 0.2746", "432.393, 219.775, 63.8448, 0.2746", "433.394, 220.169, 63.7941, 0.2744", "434.465, 220.26, 63.8862, 0.2744", "435.223, 220.497, 64.2785, 0.2742", "435.958, 221.04, 64.8586, 0.274", "436.917, 221.628, 65.4315, 0.2736", "437.947, 221.947, 65.8202, 0.2728", "438.849, 221.494, 66.01, 0.2712", "439.76, 220.873, 66.1503, 0.2684", "440.673, 220.647, 66.3883, 0.2626", "441.698, 220.401, 66.6291, 0.2542", "442.506, 220.495, 66.5204, 0.2288", "443.266, 221.175, 65.6662, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "378.465, 225.218, 43.8396, 0.364", "378.773, 224.92, 43.2474, 0.4576", "379.657, 224.27, 42.8154, 0.4994", "380.737, 224.004, 42.6922, 0.4612", "381.812, 223.993, 42.5076, 0.365", "382.829, 223.844, 42.2402, 0.3104", "383.909, 223.772, 42.1408, 0.2938", "384.97, 223.619, 42.184, 0.3112", "386.091, 223.426, 42.2338, 0.3382", "386.977, 223.101, 42.0549, 0.413", "388.008, 222.947, 41.774, 0.4328", "389.138, 222.883, 41.5629, 0.3594", "390.044, 222.279, 41.3666, 0.3002", "390.959, 221.673, 41.1068, 0.2748", "392.035, 221.433, 40.8534, 0.275", "393.168, 221.504, 40.7148, 0.2754", "394.29, 221.366, 40.7128, 0.2762", "395.223, 220.785, 40.8587, 0.2776", "395.996, 219.951, 41.0648, 0.2802", "396.632, 219.002, 41.3017, 0.285", "397.319, 218.101, 41.6007, 0.2938", "398.375, 217.887, 41.7892, 0.31", "399.223, 217.455, 42.2008, 0.3422", "399.9, 216.595, 42.6798, 0.3902", "400.681, 215.831, 43.1878, 0.536", "401.657, 215.234, 43.6078, 0.5316", "402.53, 214.532, 43.9704, 0.4836", "403.15, 213.596, 44.3167, 0.3594", "403.672, 212.647, 44.6379, 0.3002", "404.055, 211.585, 44.8748, 0.2748", "404.77, 210.736, 45.0632, 0.2752", "405.741, 210.137, 45.1758, 0.2756", "406.76, 209.623, 45.201, 0.2766", "407.812, 209.23, 45.1139, 0.2784", "408.897, 208.965, 44.9274, 0.2818", "409.917, 208.521, 44.7356, 0.2878", "410.845, 207.852, 44.6104, 0.3002", "411.665, 207.072, 44.5589, 0.3168", "412.355, 206.16, 44.5802, 0.3784", "413.096, 205.314, 44.7059, 0.343", "413.866, 204.52, 44.9518, 0.317", "414.553, 203.646, 45.2519, 0.3058", "415.108, 202.665, 45.5353, 0.3346", "415.612, 201.67, 45.6893, 0.3754", "416.294, 200.802, 45.7008, 0.5122", "417.17, 200.09, 45.6994, 0.469", "418.13, 199.483, 45.7114, 0.4566", "419.122, 198.92, 45.6918, 0.5632", "420.1, 198.335, 45.6803, 0.5904", "421.079, 197.751, 45.6943, 0.551", "422.1, 197.261, 45.6582, 0.6864", "423.105, 196.74, 45.5524, 0.612", "424.034, 196.081, 45.4241, 0.6816", "424.922, 195.411, 45.3622, 0.7176", "425.91, 195.026, 45.3944, 0.5496", "426.816, 194.606, 45.2455, 0.4624", "427.609, 193.988, 44.8843, 0.357", "428.398, 193.315, 44.4156, 0.345", "429.311, 192.742, 43.9239, 0.3474", "430.316, 192.227, 43.5246, 0.4604", "431.234, 191.558, 43.2606, 0.3728", "432.174, 191.726, 43.3404, 0.2796", "433.191, 191.411, 44.1549, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "377.652, 218.179, 60.8818, 0.3338", "378.272, 218.038, 61.6249, 0.2288", "379.316, 217.703, 61.4258, 0.2742", "380.267, 217.136, 61.3673, 0.274", "380.867, 216.194, 61.1705, 0.2736", "381.384, 215.373, 60.7085, 0.2728", "382.04, 215.225, 59.9488, 0.2712", "383.039, 215.555, 59.1732, 0.2684", "384.055, 216.019, 58.4783, 0.2626", "385.168, 216.233, 57.9387, 0.2542", "386.275, 216.46, 57.6688, 0.2288", "387.4, 216.596, 57.7408, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "377.652, 218.179, 60.8818, 0.3338", "377.935, 218.737, 61.1596, 0.3", "378.885, 219.075, 61.5082, 0.2746", "379.911, 219.547, 61.7518, 0.2744", "380.872, 219.989, 62.0032, 0.2744", "381.227, 220.993, 62.1734, 0.2742", "381.943, 221.775, 62.4022, 0.274", "382.375, 222.606, 62.7113, 0.2736", "382.883, 223.449, 63.0316, 0.2728", "383.362, 224.11, 63.0708, 0.2712", "384.04, 224.733, 63.1406, 0.2684", "384.549, 225.184, 63.4203, 0.2626", "385.51, 225.671, 63.541, 0.2542", "386.316, 226.327, 63.5656, 0.2288", "386.443, 227.427, 63.56, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "332.398, 220.768, 29.1808, 0.725", "331.815, 220.082, 30.8781, 0.4576", "330.887, 219.534, 31.0405, 0.3866", "329.772, 219.337, 31.1212, 0.3516", "328.868, 218.705, 31.1058, 0.3646", "328.44, 217.892, 30.8582, 0.469", "327.646, 217.076, 30.6648, 0.5024", "326.821, 216.507, 30.7555, 0.655", "325.969, 215.794, 30.933, 0.726", "325.285, 214.924, 31.054, 0.7424", "324.664, 213.981, 31.2609, 0.6454", "323.793, 213.298, 31.5871, 0.626", "322.773, 212.961, 31.9992, 0.4988", "321.68, 212.881, 32.4397, 0.4776", "320.693, 212.479, 32.846, 0.5398", "319.852, 211.757, 33.1282, 0.8476", "318.836, 211.333, 33.4009, 0.943", "317.783, 211.126, 33.6764, 0.6818", "316.658, 210.966, 33.8282, 0.4924", "315.591, 210.582, 33.8892, 0.5416", "314.535, 210.145, 33.9125, 0.5182", "313.471, 209.726, 33.908, 0.5744", "312.447, 209.226, 33.8545, 0.6522", "311.488, 208.608, 33.7865, 0.6966", "310.587, 207.908, 33.7506, 0.5766", "309.632, 207.29, 33.7271, 0.649", "308.607, 206.784, 33.6927, 0.4974", "307.604, 206.237, 33.6347, 0.4598", "306.65, 205.615, 33.5504, 0.3526", "305.878, 205.017, 33.3239, 0.3342", "304.967, 204.515, 33.0896, 0.3398", "303.862, 204.274, 32.9848, 0.3862", "302.78, 204.232, 33.1038, 0.5274", "301.803, 204.155, 33.4891, 0.5204", "300.915, 203.815, 34.0718, 0.4394", "299.872, 203.525, 34.5982, 0.391", "298.788, 203.714, 34.9096, 0.4942", "297.665, 203.812, 35.0462, 0.4346", "296.661, 204.296, 35.0498, 0.398", "295.917, 205.116, 35.1036, 0.4292", "295.012, 205.807, 35.1599, 0.464", "294.173, 206.582, 35.2503, 0.4122", "293.342, 207.369, 35.3791, 0.4232", "292.533, 208.176, 35.5303, 0.3802", "291.926, 209.128, 35.74, 0.3802", "291.388, 210.125, 35.975, 0.4506", "290.781, 211.093, 36.1973, 0.4684", "290.094, 212.008, 36.4123, 0.5898", "289.505, 212.989, 36.626, 0.6162", "288.918, 213.971, 36.848, 0.4858", "287.837, 214.327, 37.0938, 0.4284", "286.845, 214.724, 37.5183, 0.3414", "285.939, 215.216, 38.1142, 0.314", "284.877, 215.62, 38.6949, 0.3002", "283.743, 215.738, 39.2641, 0.3242", "282.637, 215.856, 39.9003, 0.356", "281.608, 215.787, 40.6574, 0.4766", "280.781, 215.615, 41.5853, 0.4012", "280.026, 215.266, 42.5989, 0.34", "279.01, 214.793, 43.4638, 0.3016", "277.986, 214.391, 44.1868, 0.3254", "277.272, 213.568, 44.8087, 0.3658", "276.771, 212.544, 45.2858, 0.4588", "276.189, 211.57, 45.6663, 0.5432", "275.447, 210.728, 46.0272, 0.4398", "274.557, 210.026, 46.3784, 0.3656", "273.573, 209.466, 46.6598, 0.3452", "272.568, 209.191, 47.0086, 0.4254", "271.583, 208.867, 47.4785, 0.457", "270.579, 208.389, 47.973, 0.3988", "269.576, 207.866, 48.424, 0.399", "268.573, 207.316, 48.8046, 0.334", "267.576, 206.781, 49.1616, 0.3002", "266.591, 206.242, 49.5062, 0.2752", "265.634, 205.643, 49.8294, 0.2756", "264.642, 205.092, 50.1074, 0.2766", "263.577, 204.707, 50.2936, 0.2782", "262.595, 204.183, 50.4692, 0.2814", "261.678, 203.529, 50.6839, 0.2872", "260.713, 202.956, 50.9312, 0.299", "259.709, 202.454, 51.2064, 0.3146", "258.746, 201.875, 51.4111, 0.3744", "257.799, 201.249, 51.5178, 0.3358", "256.82, 200.698, 51.627, 0.3036", "255.765, 200.302, 51.7577, 0.2814", "254.642, 200.155, 51.8636, 0.287", "253.499, 200.12, 51.9322, 0.2988", "252.356, 200.111, 51.9708, 0.3142", "251.214, 200.063, 51.9954, 0.3734", "250.084, 199.906, 52.031, 0.3338", "248.96, 199.706, 52.0923, 0.3", "247.843, 199.463, 52.1732, 0.2746", "246.73, 199.201, 52.2732, 0.2746", "245.711, 198.712, 52.3953, 0.2746", "244.713, 198.152, 52.5392, 0.2746", "243.642, 197.766, 52.7058, 0.2746", "242.633, 197.715, 53.0426, 0.2746", "241.543, 197.776, 53.4554, 0.2746", "240.407, 197.805, 53.8661, 0.2746", "239.266, 197.832, 54.2489, 0.2746", "238.132, 197.954, 54.5919, 0.2744", "237.07, 198.288, 54.9587, 0.2744", "236.402, 199.143, 55.3151, 0.2742", "236.165, 200.257, 55.6156, 0.274", "235.766, 201.311, 55.9457, 0.2736", "235.339, 202.351, 56.3077, 0.2728", "234.879, 203.398, 56.6409, 0.2712", "234.417, 204.443, 56.9383, 0.2684", "233.901, 205.444, 57.2698, 0.2626", "233.34, 206.418, 57.629, 0.2542", "232.429, 207.057, 57.997, 0.2288", "231.707, 207.896, 58.8731, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "332.398, 220.768, 29.1808, 0.725", "330.698, 220.744, 28.8882, 0.6648", "329.652, 221.097, 28.6194, 0.4866", "328.642, 221.624, 28.3441, 0.405", "327.54, 221.917, 28.0874, 0.4186", "326.496, 221.484, 27.8313, 0.5584", "325.502, 221.03, 27.4812, 0.7188", "324.441, 220.702, 27.0942, 0.809", "323.308, 220.633, 26.7385, 0.8398", "322.173, 220.57, 26.4088, 0.872", "321.22, 219.943, 26.1523, 0.8234", "320.086, 219.801, 25.9684, 0.5722" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "305.49, 196.014, 29.5229, 0.7984", "304.773, 195.367, 29.3054, 0.6098", "303.947, 194.609, 29.122, 0.552", "303.064, 193.902, 29.0298, 0.3994", "302.03, 193.468, 28.9918, 0.337", "300.982, 193.023, 28.9671, 0.296", "299.997, 192.444, 28.9201, 0.3152", "299.112, 191.766, 28.7725, 0.3458", "298.344, 191.037, 28.4701, 0.427", "297.503, 190.308, 28.1453, 0.4584", "296.616, 189.589, 27.874, 0.4092", "295.658, 188.972, 27.6999, 0.382", "294.665, 188.402, 27.6406, 0.4776", "293.603, 188.108, 27.7539, 0.403", "292.596, 187.667, 27.8596, 0.3436", "291.893, 186.809, 27.9638, 0.3078", "291.694, 185.731, 28.1915, 0.3386", "291.265, 184.907, 28.6527, 0.3822", "290.288, 184.325, 29.0584, 0.5274", "289.195, 184.095, 29.3286, 0.4848", "288.122, 183.779, 29.6814, 0.5474", "287.112, 183.358, 30.1179, 0.433", "286.077, 182.919, 30.5547, 0.4246", "285.025, 182.477, 30.9512, 0.3346", "283.958, 182.127, 31.3869, 0.3012", "282.959, 181.619, 31.8452, 0.2768", "281.907, 181.367, 32.3257, 0.2788", "280.775, 181.495, 32.7373, 0.2824", "279.663, 181.536, 33.1402, 0.289", "278.618, 181.141, 33.5208, 0.3024", "277.647, 180.546, 33.8192, 0.321", "276.602, 180.082, 34.0416, 0.3858", "275.583, 179.571, 34.228, 0.358", "274.566, 179.109, 34.452, 0.3396", "273.54, 178.718, 34.669, 0.3734", "272.646, 178.026, 34.8253, 0.334", "271.694, 177.425, 35.0053, 0.3002", "270.742, 176.824, 35.1823, 0.2748", "269.842, 176.144, 35.2895, 0.275", "268.997, 175.379, 35.257, 0.2754", "268.099, 174.695, 35.0932, 0.2762", "267.146, 174.109, 34.8054, 0.2774", "266.189, 173.571, 34.4005, 0.2798", "265.193, 173.198, 33.9161, 0.2844", "264.111, 173.074, 33.432, 0.2926", "263.04, 172.826, 33.1044, 0.3092", "262.049, 172.29, 32.9476, 0.3334", "261.096, 171.679, 32.9221, 0.41", "260.16, 171.047, 32.9941, 0.3976", "259.251, 170.379, 33.0285, 0.4384", "258.374, 169.668, 32.9792, 0.4328", "257.517, 168.915, 32.8868, 0.3594", "256.652, 168.166, 32.776, 0.3", "255.758, 167.452, 32.6542, 0.2748", "254.816, 166.815, 32.5119, 0.2748", "253.823, 166.281, 32.3361, 0.2752", "252.791, 165.812, 32.1616, 0.2756", "251.736, 165.371, 32.0286, 0.2766", "250.713, 164.869, 31.9553, 0.2782", "249.75, 164.267, 31.9505, 0.2814", "248.716, 163.838, 31.9463, 0.287", "247.609, 163.584, 31.8903, 0.2988", "246.488, 163.368, 31.8021, 0.3142", "245.362, 163.176, 31.7044, 0.3734", "244.239, 162.954, 31.5997, 0.3338", "243.142, 162.636, 31.4866, 0.3", "242.057, 162.275, 31.3653, 0.2746", "240.947, 162.016, 31.2172, 0.2746", "239.821, 161.818, 31.029, 0.2746", "238.71, 161.691, 30.7552, 0.2746", "237.619, 161.63, 30.3752, 0.2746", "236.511, 161.534, 29.9606, 0.2748", "235.384, 161.377, 29.5862, 0.2748", "234.251, 161.234, 29.272, 0.2752", "233.115, 161.187, 29.0088, 0.2756", "231.978, 161.187, 28.7949, 0.2766", "230.842, 161.1, 28.6429, 0.2784", "229.711, 160.931, 28.5488, 0.2816", "228.592, 160.701, 28.511, 0.2874", "227.523, 160.353, 28.5586, 0.2994", "226.457, 159.97, 28.6409, 0.3152", "225.378, 159.641, 28.646, 0.3756", "224.306, 159.284, 28.572, 0.3378", "223.258, 158.834, 28.4788, 0.3074", "222.246, 158.302, 28.3878, 0.288", "221.318, 157.64, 28.3063, 0.3008", "220.437, 156.911, 28.2464, 0.3178", "219.559, 156.182, 28.1915, 0.3802", "218.546, 155.779, 28.0759, 0.3464", "217.437, 155.696, 28.0176, 0.3242", "216.375, 155.693, 28.1198, 0.3144", "215.258, 155.693, 28.1747, 0.3738", "214.122, 155.693, 28.1394, 0.3346", "212.98, 155.693, 28.0678, 0.3014", "211.839, 155.779, 27.9725, 0.2772", "210.745, 156.075, 27.8072, 0.2792", "209.963, 156.592, 27.4213, 0.2834", "208.907, 156.945, 27.0941, 0.2906", "207.867, 157.325, 26.9481, 0.3056", "206.826, 157.782, 26.8227, 0.3268", "205.784, 158.228, 26.6892, 0.3966", "204.669, 158.412, 26.574, 0.3788", "203.559, 158.682, 26.5148, 0.3728", "202.796, 159.516, 26.4918, 0.4604", "202.099, 160.424, 26.4972, 0.3728", "201.7, 161.486, 26.5904, 0.2796", "201.485, 162.561, 27.172, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "305.49, 196.014, 29.5229, 0.7984", "304.446, 194.854, 28.6152, 0.2288", "303.647, 194.038, 28.6734, 0.5322", "302.867, 193.251, 28.7484, 0.5294", "302.372, 192.223, 28.7865, 0.4548", "301.795, 191.239, 28.763, 0.4266", "301.057, 190.396, 28.6367, 0.526", "300.473, 189.563, 28.2993, 0.6594", "299.91, 188.609, 27.8998, 0.6962", "299.339, 187.641, 27.5705, 0.6432", "298.46, 186.949, 27.3811, 0.4466", "297.535, 186.301, 27.2283, 0.3302", "296.704, 185.605, 26.9835, 0.2834", "296.129, 184.702, 26.6523, 0.2908", "295.733, 183.724, 26.2613, 0.306", "295.503, 182.614, 25.9893, 0.3272", "295.279, 181.522, 25.8599, 0.3988", "294.914, 180.449, 25.7618, 0.3758", "294.326, 179.486, 25.6973, 0.4032", "293.535, 178.664, 25.6981, 0.342", "292.615, 178.029, 25.7713, 0.315", "291.698, 177.43, 25.8875, 0.3022", "291.079, 176.485, 25.9528, 0.3266", "290.531, 175.49, 25.9617, 0.3664", "289.802, 174.634, 25.9174, 0.4674", "288.954, 173.878, 25.8495, 0.523", "288.109, 173.118, 25.8323, 0.5776", "287.298, 172.321, 25.8551, 0.458", "286.523, 171.481, 25.8861, 0.3926", "285.576, 170.943, 25.9146, 0.427", "284.491, 170.597, 25.9309, 0.4226", "283.638, 169.895, 25.924, 0.5154", "283.145, 168.881, 25.8889, 0.426", "282.971, 167.761, 25.8333, 0.3866", "282.792, 166.637, 25.7617, 0.3852", "282.305, 165.636, 25.6292, 0.4942", "281.56, 164.807, 25.4273, 0.6108", "280.576, 164.271, 25.2344, 0.5572", "279.588, 163.706, 25.0835, 0.6226", "278.618, 163.099, 24.9733, 0.6296", "277.576, 162.64, 24.8999, 0.5114", "276.503, 162.243, 24.8563, 0.4706", "275.38, 162.108, 24.8254, 0.4454", "274.237, 162.104, 24.7736, 0.3826", "273.165, 162.378, 24.7558, 0.344", "272.293, 161.942, 24.7246, 0.352", "271.513, 161.121, 24.6019, 0.4378", "270.676, 160.381, 24.3692, 0.481", "269.644, 159.959, 24.0847, 0.4384", "268.62, 159.627, 23.6883, 0.4978", "267.852, 158.783, 23.3622, 0.3932", "267.432, 157.723, 23.1063, 0.3254", "267.448, 156.594, 22.828, 0.2746", "267.717, 155.508, 22.5462, 0.2746", "267.19, 154.526, 22.3666, 0.2746", "266.48, 153.703, 22.1524, 0.2746", "266.039, 153.01, 21.6792, 0.2748", "265.334, 152.671, 21.1056, 0.275", "264.456, 152.376, 20.88, 0.2752", "263.536, 152.009, 20.7426, 0.2758", "262.98, 151.209, 20.4672, 0.2768", "262.096, 150.808, 20.3517, 0.2796", "261.055, 150.426, 20.3811, 0.2796", "260.297, 149.798, 20.2124, 0.305", "259.321, 149.229, 19.7058, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "362.061, 264.473, 21.4889, 0.3242", "361.519, 265.309, 20.4904, 0.4576", "361.577, 266.417, 20.4438, 0.3712", "362.269, 267.312, 20.4296, 0.3232", "362.866, 268.286, 20.4229, 0.3122", "363.384, 269.307, 20.4187, 0.37", "363.562, 270.432, 20.4168, 0.3276", "363.324, 271.546, 20.417, 0.2882", "362.958, 272.591, 20.516, 0.2542", "362.728, 273.704, 20.5482, 0.2288", "363.13, 274.751, 20.3792, 0.2288" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "362.061, 264.473, 21.4889, 0.3242", "363.102, 264.158, 21.2068, 0.3142", "364.204, 263.86, 21.0137, 0.3734", "365.286, 264.119, 20.9857, 0.334", "366.409, 264.218, 21.0558, 0.3002", "367.553, 264.207, 21.1122, 0.275", "368.696, 264.189, 21.1463, 0.2752", "369.84, 264.17, 21.1543, 0.2758", "370.96, 264.118, 21.0364, 0.2768", "372.079, 264.06, 20.8264, 0.2796", "373.221, 263.997, 20.6511, 0.2796", "374.364, 263.935, 20.5212, 0.305", "375.493, 263.762, 20.3792, 0.2288" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "329.956, 262.184, 37.7628, 0.3456", "329.646, 262.636, 37.891, 0.3536", "329.014, 263.554, 38.1755, 0.4488", "328.495, 264.556, 38.5319, 0.4628", "328.019, 265.583, 38.9026, 0.592", "327.612, 266.648, 39.2333, 0.559", "327.221, 267.721, 39.5184, 0.6768", "326.885, 268.814, 39.7505, 0.7132", "326.141, 269.664, 39.9904, 0.7476" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "329.956, 262.184, 37.7628, 0.3456", "329.474, 262.272, 37.081, 0.2288", "328.359, 262.388, 36.9351, 0.2984", "327.225, 262.398, 36.9155, 0.3196", "326.096, 262.524, 36.8813, 0.3538", "325.009, 262.865, 36.7928, 0.4418", "323.976, 263.318, 36.6248, 0.487", "322.93, 263.686, 36.3835, 0.4552", "321.82, 263.935, 36.1194, 0.5004", "320.868, 264.46, 35.7941, 0.5368", "320.17, 265.316, 35.478, 0.6044", "319.404, 266.105, 35.2845, 0.502", "318.454, 266.494, 35.0403, 0.5014", "317.5, 266.934, 34.7239, 0.4968", "316.669, 267.682, 34.5008, 0.5046", "315.915, 268.529, 34.3064, 0.4402", "315.181, 269.378, 34.0203, 0.4762", "314.281, 270.015, 33.6378, 0.4734", "313.243, 270.329, 33.1652, 0.5772", "312.802, 271.189, 32.5839, 0.699", "312.461, 272.25, 31.9903, 0.809", "311.405, 272.545, 31.4874, 0.6612", "310.35, 272.966, 31.1254, 0.722", "309.387, 273.577, 30.7955, 0.5824", "308.704, 274.411, 30.382, 0.6322", "307.881, 274.767, 29.7889, 0.5994", "306.783, 275.035, 29.2785, 0.4594", "305.895, 275.681, 28.9764, 0.355", "305.028, 276.356, 28.6292, 0.3242", "304.221, 277.097, 28.2778, 0.3924", "303.361, 277.836, 28.0913, 0.3684", "302.456, 278.499, 28.0123, 0.3664", "301.411, 278.604, 27.9553, 0.3866", "300.384, 278.223, 27.7747, 0.5354", "299.267, 278.171, 27.5089, 0.5008", "298.155, 278.285, 27.1962, 0.5708", "297.064, 278.626, 26.8796, 0.5068", "296.015, 279.027, 26.5264, 0.4132", "295.049, 279.539, 26.0812, 0.3474", "294.086, 280.06, 25.5934, 0.388", "293.081, 280.524, 25.1031, 0.362", "292.146, 281.062, 24.6344, 0.3468", "291.659, 282.045, 24.2497, 0.3866", "291.102, 282.978, 23.9807, 0.3592", "290.25, 283.741, 23.8091, 0.3418", "289.35, 284.443, 23.7014, 0.3776", "288.415, 285.104, 23.6261, 0.3418", "287.505, 285.795, 23.5572, 0.3146", "286.608, 286.504, 23.4713, 0.3014", "285.668, 287.153, 23.3463, 0.3264", "284.719, 287.784, 23.1725, 0.3602", "283.91, 288.56, 22.9386, 0.4844", "283.243, 289.449, 22.626, 0.4156", "282.395, 290.108, 22.2617, 0.368", "281.303, 290.28, 21.9822, 0.3492", "280.253, 289.93, 21.7569, 0.433", "279.185, 289.545, 21.5353, 0.471", "278.053, 289.478, 21.3524, 0.4258", "276.977, 289.783, 21.151, 0.4438", "276.165, 290.525, 20.8981, 0.4426", "275.513, 291.456, 20.6772, 0.3774", "274.78, 292.333, 20.5069, 0.3348", "273.953, 293.122, 20.3836, 0.3336", "272.878, 293.46, 20.2974, 0.4106", "271.74, 293.566, 20.2442, 0.3974", "270.743, 294.065, 20.1425, 0.4442", "269.747, 294.603, 20.0072, 0.4136", "268.696, 294.996, 19.9728, 0.4692", "267.611, 295.32, 20.0064, 0.4844", "266.471, 295.357, 20.0337, 0.4818", "265.342, 295.522, 20.0499, 0.3978", "264.693, 296.384, 19.9586, 0.397", "264.677, 297.511, 19.8347, 0.3304", "264.677, 298.655, 19.7499, 0.2938", "264.677, 299.799, 19.7145, 0.2626", "264.677, 300.943, 19.7312, 0.2542", "264.87, 302.056, 19.8477, 0.2288", "265.135, 303.143, 20.3792, 0.2288" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "346.734, 320.379, 35.0764, 0.5264", "346.096, 321.657, 35.0372, 0.5524", "345.586, 322.678, 35.0557, 0.5632", "345.076, 323.698, 35.1075, 0.5374", "344.569, 324.722, 35.1579, 0.7098", "344.071, 325.751, 35.1686, 0.6486", "343.573, 326.778, 35.138, 0.7826", "343.083, 327.811, 35.0745, 0.7436", "342.612, 328.852, 34.9992, 0.6936", "342.15, 329.899, 34.9261, 0.4936", "341.688, 330.945, 34.8622, 0.4142", "341.208, 331.983, 34.8132, 0.4544", "340.676, 332.996, 34.7808, 0.535", "340.107, 333.987, 34.7642, 0.425", "339.536, 334.979, 34.7592, 0.3374", "339.013, 335.994, 34.764, 0.2966", "338.69, 337.08, 34.7774, 0.3162", "338.548, 338.216, 34.7998, 0.3474", "338.408, 339.35, 34.8317, 0.4298", "338.266, 340.485, 34.8748, 0.465", "338.092, 341.616, 34.935, 0.414", "337.79, 342.713, 35.0258, 0.4266", "337.37, 343.774, 35.1551, 0.3876", "336.952, 344.836, 35.3161, 0.389", "336.545, 345.902, 35.5026, 0.4906", "336.245, 346.996, 35.7157, 0.427", "336.061, 348.116, 35.9542, 0.3888", "335.878, 349.236, 36.2029, 0.3888", "335.697, 350.357, 36.4498, 0.5026", "335.505, 351.479, 36.6716, 0.619", "335.298, 352.604, 36.8399, 0.6078", "335.086, 353.727, 36.9533, 0.544", "334.874, 354.852, 37.0244, 0.6354", "334.661, 355.976, 37.0675, 0.7012", "334.446, 357.1, 37.0961, 0.6406", "334.221, 358.221, 37.123, 0.7282", "333.997, 359.343, 37.158, 0.8346", "333.773, 360.465, 37.2075, 0.8478", "333.66, 361.597, 37.277, 0.6198", "333.721, 362.738, 37.3708, 0.5094", "333.681, 363.87, 37.5029, 0.6174", "333.341, 364.952, 37.6902, 0.6738", "332.928, 365.978, 37.9789, 0.789", "332.602, 366.999, 38.3897, 0.7234", "332.404, 368.075, 38.8332, 0.5832", "332.219, 369.169, 39.2622, 0.4132", "332.298, 370.222, 39.5833, 0.3476", "332.779, 371.244, 39.7267, 0.3884", "333.133, 372.318, 39.7603, 0.3614", "332.895, 373.388, 39.7398, 0.3518", "332.499, 374.46, 39.704, 0.3664", "332.129, 375.543, 39.6774, 0.466", "331.811, 376.634, 39.6444, 0.5264", "331.517, 377.732, 39.6007, 0.5554", "331.297, 378.829, 39.6455, 0.5546", "331.124, 379.914, 39.8138, 0.5892", "330.819, 380.998, 40.0067, 0.479", "330.458, 382.08, 40.1831, 0.433", "330.371, 383.195, 40.2741, 0.496", "330.432, 384.316, 40.2623, 0.5784", "330.622, 385.435, 40.2209, 0.6696", "330.877, 386.551, 40.2046, 0.6792", "331.043, 387.678, 40.2662, 0.5572", "331.076, 388.808, 40.4393, 0.551", "331.06, 389.935, 40.7131, 0.616", "330.825, 391.025, 41.0634, 0.5948", "330.528, 392.106, 41.4504, 0.5558", "330.34, 393.219, 41.8247, 0.4834", "330.196, 394.345, 42.1641, 0.5768", "330.159, 395.483, 42.411, 0.5612", "330.159, 396.625, 42.5681, 0.5334", "330.159, 397.765, 42.7056, 0.4772", "330.159, 398.896, 42.875, 0.3944", "330.159, 400.029, 43.071, 0.3656", "330.159, 401.171, 43.2368, 0.393", "330.159, 402.314, 43.3717, 0.51", "330.159, 403.454, 43.5221, 0.6338", "330.026, 404.582, 43.6957, 0.629", "329.848, 405.706, 43.8869, 0.6134", "329.799, 406.834, 44.095, 0.617", "329.95, 407.957, 44.3184, 0.6954", "330.108, 409.084, 44.5309, 0.7216", "330.159, 410.225, 44.7, 0.6614", "330.159, 411.369, 44.8263, 0.6216", "330.328, 412.465, 44.8756, 0.6556", "330.558, 413.557, 44.8809, 0.6522", "330.617, 414.698, 44.9319, 0.5128", "330.499, 415.786, 45.1055, 0.4418", "330.272, 416.758, 45.481, 0.5436", "329.971, 417.765, 45.9152, 0.5146", "329.946, 418.801, 46.1586, 0.6034", "330.121, 419.893, 46.3795, 0.5326", "330.085, 421.026, 46.5338, 0.6304", "330.002, 422.167, 46.6351, 0.6132", "329.864, 423.27, 46.8112, 0.6316", "329.712, 424.368, 47.0882, 0.6502", "329.426, 425.456, 47.3242, 0.7586", "329.103, 426.542, 47.5045, 0.8308", "328.625, 427.561, 47.7644, 0.9024", "328.191, 428.586, 48.1253, 0.8814", "327.999, 429.613, 48.6245, 0.6716", "327.883, 430.691, 49.1966, 0.656", "327.842, 431.823, 49.7403, 0.6454", "327.493, 432.894, 50.2471, 0.5348", "326.648, 433.649, 50.5932, 0.5444" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "346.734, 320.379, 35.0764, 0.5264", "347.148, 320.564, 34.72, 0.2288", "348.191, 321.029, 34.6951, 0.2816", "349.238, 321.494, 34.6853, 0.2874", "350.242, 322.041, 34.6713, 0.2996", "351.234, 322.61, 34.652, 0.3156", "352.226, 323.181, 34.6251, 0.3764", "353.217, 323.752, 34.5873, 0.3394", "354.082, 324.498, 34.5335, 0.3102", "354.883, 325.315, 34.4579, 0.2932", "355.678, 326.137, 34.3563, 0.31", "356.474, 326.959, 34.2269, 0.335", "357.308, 327.716, 34.0029, 0.412", "358.148, 328.445, 33.684, 0.4072", "358.99, 329.171, 33.3018, 0.4274", "359.89, 329.846, 32.9059, 0.5514", "360.921, 330.338, 32.5808, 0.591", "361.958, 330.821, 32.3196, 0.444", "362.995, 331.303, 32.1121, 0.3254", "364.025, 331.801, 31.9348, 0.2746", "364.766, 332.627, 31.6828, 0.2746", "365.49, 333.47, 31.3664, 0.2746", "366.216, 334.312, 31.0061, 0.2746", "366.875, 335.237, 30.6796, 0.2746", "367.457, 336.22, 30.4455, 0.2746", "368.036, 337.207, 30.3005, 0.2746", "368.621, 338.19, 30.2378, 0.2746", "369.45, 338.976, 30.238, 0.2748", "370.378, 339.644, 30.2842, 0.275", "371.456, 340.029, 30.3618, 0.2752", "372.555, 340.342, 30.4646, 0.2758", "373.67, 340.596, 30.5981, 0.277", "374.589, 341.224, 30.844, 0.2792", "375.505, 341.856, 31.1685, 0.2828", "376.422, 342.486, 31.537, 0.291", "377.38, 343.096, 31.8724, 0.2994", "378.367, 343.676, 32.1174, 0.3474", "379.353, 344.256, 32.2792, 0.2796", "380.339, 344.836, 32.4052, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "320.086, 219.801, 25.9684, 0.5722", "319.314, 220.225, 25.8171, 0.432", "318.321, 220.711, 25.6232, 0.4218", "317.25, 221.025, 25.4673, 0.564", "316.234, 221.497, 25.4275, 0.7318", "315.24, 222.033, 25.3962, 0.8208", "314.569, 222.613, 25.2015, 0.9212", "313.698, 223.278, 24.9981, 0.7342", "312.759, 223.922, 24.853, 0.5976" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "320.086, 219.801, 25.9684, 0.5722", "320.086, 218.752, 25.3915, 0.4576", "320.015, 217.644, 24.6741, 0.3748", "319.962, 216.577, 24.4001, 0.3288", "320.264, 215.658, 23.9091, 0.3274", "320.5, 214.674, 23.2933, 0.3748", "320.29, 213.603, 22.7688, 0.4504", "319.556, 212.754, 22.3856, 0.6488", "318.515, 212.415, 22.0105, 0.7346", "317.484, 211.933, 21.7086, 0.8894", "316.601, 211.211, 21.488, 0.968", "316.426, 210.157, 21.4185, 0.7542", "316.118, 209.059, 21.2815, 0.7288", "315.698, 208.051, 20.9931, 0.7118", "315.345, 207.05, 20.5745, 0.7626", "315.048, 206.064, 19.2469, 0.4576" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "326.141, 269.664, 39.9904, 0.7476", "326.026, 270.724, 40.222, 0.516", "325.904, 271.857, 40.4533, 0.3746", "325.781, 272.989, 40.6846, 0.3182", "325.659, 274.122, 40.9128, 0.357", "325.535, 275.254, 41.1328, 0.419", "325.391, 276.384, 41.3361, 0.584", "325.096, 277.476, 41.5125, 0.6462", "324.585, 278.5, 41.6464, 0.5714", "324.073, 279.523, 41.7519, 0.44", "323.562, 280.547, 41.8435, 0.3916", "322.98, 281.523, 41.9395, 0.4966", "322.245, 282.399, 42.0594, 0.433", "321.512, 283.276, 42.2103, 0.4248", "320.797, 284.157, 42.4161, 0.335", "320.116, 285.044, 42.7073, 0.3022", "319.437, 285.931, 43.0539, 0.2786", "318.802, 286.856, 43.4129, 0.282", "318.289, 287.875, 43.7209, 0.2882", "317.836, 288.925, 43.962, 0.2996", "317.383, 289.975, 44.1482, 0.322", "316.941, 291.029, 44.303, 0.3582", "316.534, 292.086, 44.4786, 0.4508", "316.165, 293.141, 44.7054, 0.4988", "315.796, 294.196, 44.963, 0.502", "315.432, 295.261, 45.1993, 0.4662", "315.083, 296.344, 45.3172, 0.374", "314.75, 297.417, 45.2844, 0.3284", "314.418, 298.491, 45.1391, 0.322", "314.047, 299.557, 44.94, 0.388", "313.574, 300.595, 44.7678, 0.3606", "313.042, 301.608, 44.672, 0.3506", "312.51, 302.621, 44.6617, 0.3636", "311.979, 303.631, 44.7429, 0.4622", "311.452, 304.634, 44.9324, 0.5134", "310.928, 305.625, 45.2189, 0.56", "310.406, 306.617, 45.5633, 0.424", "309.919, 307.633, 45.9172, 0.3354", "309.499, 308.697, 46.2269, 0.2928", "309.095, 309.767, 46.4878, 0.3096", "308.691, 310.836, 46.7093, 0.3342", "308.25, 311.888, 46.9196, 0.4116", "307.713, 312.881, 47.1663, 0.4006", "307.125, 313.833, 47.4656, 0.4438", "306.536, 314.788, 47.801, 0.4428", "306.079, 315.802, 48.1253, 0.378", "305.859, 316.925, 48.3809, 0.3344", "305.669, 318.051, 48.5666, 0.3392", "305.478, 319.179, 48.6898, 0.3912", "305.273, 320.305, 48.7645, 0.5064", "304.95, 321.394, 48.8048, 0.6276", "304.465, 322.43, 48.8228, 0.6164", "303.98, 323.466, 48.8303, 0.5964", "303.566, 324.528, 48.8278, 0.5548", "303.266, 325.632, 48.8144, 0.7294", "302.974, 326.738, 48.7959, 0.7454", "302.681, 327.843, 48.7777, 0.6672", "302.409, 328.954, 48.767, 0.5878", "302.201, 330.078, 48.7729, 0.581", "302.036, 331.211, 48.8032, 0.5732", "301.872, 332.342, 48.8603, 0.7644", "301.707, 333.475, 48.9462, 0.806", "301.531, 334.603, 49.0753, 0.7998", "301.328, 335.716, 49.2797, 0.7364", "301.109, 336.815, 49.5608, 0.642", "300.889, 337.915, 49.8896, 0.5834", "300.616, 339.005, 50.23, 0.5954", "300.146, 340.031, 50.5243, 0.4902", "299.517, 340.987, 50.736, 0.4558", "298.889, 341.943, 50.8754, 0.5272", "298.275, 342.908, 50.9617, 0.6906", "297.725, 343.909, 51.0191, 0.6148", "297.233, 344.942, 51.0684, 0.4812", "296.742, 345.974, 51.1227, 0.4282", "296.262, 347.012, 51.1871, 0.529", "295.881, 348.086, 51.2585, 0.665", "295.616, 349.199, 51.3344, 0.7064", "295.353, 350.312, 51.4164, 0.6618", "295.138, 351.431, 51.5253, 0.4822", "295.015, 352.556, 51.6897, 0.392", "294.928, 353.677, 51.8997, 0.4184", "294.851, 354.801, 52.1254, 0.4426", "294.882, 355.93, 52.3132, 0.3776", "295.039, 357.063, 52.4135, 0.3338", "295.208, 358.154, 52.372, 0.338", "295.398, 359.217, 52.1811, 0.389", "295.602, 360.322, 51.97, 0.5028", "295.838, 361.431, 51.8594, 0.6202", "296.105, 362.524, 51.9036, 0.6054", "296.374, 363.617, 52.0761, 0.5628", "296.64, 364.71, 52.3429, 0.5572", "296.902, 365.804, 52.6568, 0.419", "297.085, 366.933, 52.9138, 0.326", "297.25, 368.066, 53.0925, 0.2756", "297.414, 369.198, 53.2045, 0.2766", "297.578, 370.33, 53.2703, 0.2782", "297.734, 371.462, 53.31, 0.2814", "297.771, 372.607, 53.3422, 0.287", "297.789, 373.75, 53.3845, 0.2988", "297.807, 374.895, 53.4439, 0.3142", "297.826, 376.037, 53.5251, 0.3736", "297.844, 377.181, 53.6332, 0.3342", "297.846, 378.322, 53.7958, 0.3004", "297.826, 379.449, 54.0459, 0.2756", "297.803, 380.576, 54.3589, 0.2764", "297.783, 381.703, 54.7131, 0.2778", "297.756, 382.829, 55.0858, 0.2806", "297.645, 383.961, 55.435, 0.2858", "297.471, 385.09, 55.736, 0.2952", "297.297, 386.219, 55.995, 0.3138", "297.124, 387.348, 56.2257, 0.343", "296.97, 388.476, 56.4407, 0.4218", "297.079, 389.606, 56.6728, 0.4488", "297.229, 390.73, 56.9229, 0.3902", "297.379, 391.853, 57.1816, 0.352", "297.512, 392.979, 57.4347, 0.3964", "297.447, 394.119, 57.6332, 0.3776", "297.327, 395.258, 57.773, 0.3766", "297.208, 396.395, 57.8651, 0.438", "297.088, 397.533, 57.9253, 0.4738", "296.979, 398.671, 57.9695, 0.461", "296.993, 399.815, 58.0138, 0.3644", "297.065, 400.957, 58.0734, 0.3094", "297.135, 402.099, 58.154, 0.292", "297.194, 403.241, 58.2616, 0.3066", "297.095, 404.373, 58.4268, 0.336", "296.793, 405.457, 58.6765, 0.3788", "296.491, 406.54, 58.9856, 0.5138", "296.187, 407.624, 59.3281, 0.4958", "295.865, 408.713, 59.6607, 0.3916", "295.517, 409.804, 59.9388, 0.3124", "295.169, 410.893, 60.1703, 0.2988", "294.823, 411.983, 60.3683, 0.3142", "294.503, 413.076, 60.5567, 0.3738", "294.426, 414.2, 60.802, 0.3344", "294.359, 415.323, 61.0957, 0.301", "294.293, 416.447, 61.4211, 0.2766", "294.221, 417.571, 61.754, 0.2782", "294.074, 418.698, 62.0491, 0.2814", "293.812, 419.811, 62.2563, 0.287", "293.549, 420.926, 62.3854, 0.2988", "293.288, 422.039, 62.4565, 0.3144", "293.052, 423.155, 62.4876, 0.3738", "293.023, 424.299, 62.496, 0.3346", "293.095, 425.441, 62.496, 0.3014", "293.165, 426.583, 62.496, 0.2772", "293.228, 427.724, 62.496, 0.2792", "293.213, 428.867, 62.496, 0.2834", "293.092, 430.006, 62.496, 0.2906", "292.974, 431.143, 62.496, 0.3056", "292.854, 432.281, 62.496, 0.3266", "292.727, 433.418, 62.496, 0.3976", "292.525, 434.543, 62.496, 0.3734", "292.183, 435.634, 62.496, 0.3988", "291.842, 436.727, 62.496, 0.3338", "291.501, 437.818, 62.496, 0.3", "291.177, 438.914, 62.496, 0.2746", "290.96, 440.037, 62.496, 0.2746", "290.772, 441.165, 62.496, 0.2746", "290.584, 442.294, 62.496, 0.2746", "290.396, 443.422, 62.496, 0.2746", "290.217, 444.553, 62.4957, 0.2746", "290.092, 445.69, 62.4957, 0.2746", "289.971, 446.827, 62.4957, 0.2746", "289.853, 447.965, 62.4954, 0.2746", "289.733, 449.102, 62.4952, 0.2746", "289.647, 450.241, 62.4952, 0.2746", "289.785, 451.375, 62.4946, 0.2746", "289.974, 452.505, 62.4938, 0.2748", "290.161, 453.633, 62.4926, 0.275", "290.349, 454.762, 62.4929, 0.2754", "290.513, 455.892, 62.4926, 0.2762", "290.53, 457.036, 62.4876, 0.2776", "290.605, 458.175, 62.475, 0.2802", "290.892, 459.27, 62.4733, 0.2852", "291.457, 460.207, 62.5436, 0.294", "292.227, 460.992, 62.4789, 0.3114", "292.967, 461.736, 62.2765, 0.3386" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "326.141, 269.664, 39.9904, 0.7476", "324.648, 269.961, 41.0334, 0.2288", "323.741, 270.609, 41.3381, 0.3556", "322.864, 271.332, 41.4316, 0.4464", "321.987, 272.05, 41.5352, 0.4894", "321.13, 272.795, 41.6881, 0.4896", "320.251, 273.52, 41.8452, 0.4184", "319.328, 274.195, 41.9866, 0.4064", "318.312, 274.703, 42.1266, 0.4866", "317.247, 275.109, 42.2822, 0.5956", "316.161, 275.442, 42.46, 0.5342", "315.071, 275.758, 42.6583, 0.5544", "314.079, 276.291, 42.8221, 0.6282", "313.078, 276.776, 42.8893, 0.5886", "312.06, 277.189, 43.0046, 0.6844", "311.154, 277.755, 43.2446, 0.7274", "310.344, 278.527, 43.4913, 0.7748", "309.394, 279.142, 43.687, 0.561", "308.364, 279.638, 43.832, 0.4844", "307.321, 280.094, 43.8945, 0.3932", "306.234, 280.237, 43.8242, 0.4352", "305.132, 280.48, 43.7413, 0.4032", "304.208, 281.034, 43.8029, 0.419", "303.333, 281.747, 43.9099, 0.5408", "302.5, 282.529, 44.0166, 0.5466", "301.648, 283.293, 44.121, 0.4812", "300.78, 284.038, 44.2196, 0.5012", "299.91, 284.78, 44.3016, 0.5398", "299.039, 285.524, 44.3733, 0.6038", "298.052, 286.091, 44.4587, 0.5306", "297.009, 286.558, 44.5623, 0.4102", "295.971, 286.999, 44.7423, 0.3418", "294.957, 287.421, 45.0251, 0.3776", "293.88, 287.56, 45.3779, 0.3416", "292.747, 287.608, 45.649, 0.3144", "291.802, 288.119, 45.7442, 0.3012", "290.845, 288.731, 45.8002, 0.3246", "289.936, 289.407, 45.9012, 0.3632", "289.042, 290.073, 46.0816, 0.46", "288.23, 290.861, 46.214, 0.5154", "287.441, 291.686, 46.3397, 0.534", "286.681, 292.503, 46.573, 0.52", "286.015, 293.366, 46.9056, 0.5004", "285.233, 294.19, 47.2189, 0.4336", "284.115, 294.284, 47.4802, 0.4578", "283.005, 294.018, 47.7098, 0.4696", "281.978, 294.492, 47.9088, 0.4234", "280.918, 294.873, 48.1482, 0.439", "279.953, 295.436, 48.4361, 0.4338", "279.131, 296.23, 48.7038, 0.3612", "278.255, 296.949, 48.9902, 0.3036", "277.342, 297.6, 49.3049, 0.2812", "276.289, 298.041, 49.5634, 0.287", "275.204, 298.405, 49.7462, 0.2976", "274.09, 298.654, 49.8831, 0.318", "273.017, 298.925, 50.0654, 0.3508", "271.905, 298.793, 50.1362, 0.4374", "270.926, 298.204, 50.1774, 0.4726", "269.898, 297.707, 50.1914, 0.459", "268.851, 297.283, 50.1558, 0.3606", "267.738, 297.021, 50.1385, 0.3026", "266.641, 296.714, 50.1511, 0.2794", "265.621, 296.214, 50.2398, 0.2834", "264.642, 295.644, 50.3874, 0.2908", "263.654, 295.071, 50.5537, 0.3058", "262.681, 294.478, 50.7167, 0.3268", "261.756, 293.803, 50.843, 0.398", "260.863, 293.092, 50.9331, 0.3744", "260.053, 292.284, 50.9942, 0.4006", "259.268, 291.452, 51.0406, 0.337", "258.52, 290.586, 51.0854, 0.3058", "257.781, 289.713, 51.1372, 0.2852", "257.052, 288.832, 51.2078, 0.2942", "256.279, 288.024, 51.3262, 0.3118", "255.346, 287.455, 51.5284, 0.3394", "254.492, 286.739, 51.641, 0.415", "253.722, 285.94, 51.7409, 0.4364", "252.766, 285.354, 51.9366, 0.3662", "251.765, 284.865, 52.1996, 0.3124", "250.668, 284.615, 52.5014, 0.2988", "249.56, 284.386, 52.8158, 0.3142", "248.468, 284.054, 53.1126, 0.3734", "247.388, 283.679, 53.3624, 0.3338", "246.305, 283.306, 53.5634, 0.3", "245.223, 282.95, 53.7564, 0.2746", "244.142, 282.628, 54.0005, 0.2746", "243.052, 282.328, 54.2811, 0.2746", "241.94, 282.062, 54.553, 0.2746", "240.844, 281.746, 54.8344, 0.2746", "239.808, 281.283, 55.1625, 0.2746", "238.772, 280.865, 55.557, 0.2746", "237.664, 280.733, 56.0241, 0.2746", "236.549, 280.71, 56.5662, 0.2746", "235.447, 280.681, 57.192, 0.2746", "234.345, 280.664, 57.8799, 0.2746", "233.219, 280.676, 58.5771, 0.2746", "232.086, 280.695, 59.2637, 0.2746", "230.994, 280.693, 59.9886, 0.2746", "230.172, 280.652, 60.9078, 0.2746", "229.325, 280.791, 61.922, 0.2746", "228.251, 281.125, 62.8544, 0.2746", "227.148, 281.398, 63.6975, 0.2746", "226.054, 281.697, 64.4745, 0.2746", "225.079, 281.938, 65.3055, 0.2746", "224.341, 282.383, 66.2544, 0.2746", "223.943, 283.193, 67.2882, 0.2746", "223.881, 284.219, 68.308, 0.2746", "224.616, 285.08, 69.1351, 0.2746", "225.574, 285.693, 69.8046, 0.2744", "226.288, 286.582, 70.3598, 0.2744", "226.847, 287.554, 70.8968, 0.2742", "227.234, 288.495, 71.6024, 0.274", "227.313, 289.539, 72.4606, 0.2736", "227.313, 290.484, 73.4964, 0.2728", "226.987, 291.218, 74.713, 0.2712", "226.067, 291.578, 75.9307, 0.2684", "225.195, 291.606, 77.1672, 0.2626", "224.18, 291.606, 78.2832, 0.2542", "223.073, 291.606, 79.1829, 0.2288", "221.936, 291.72, 80.36, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "326.648, 433.649, 50.5932, 0.5444", "326.096, 434.796, 51.0874, 0.4338", "326.036, 435.931, 51.4786, 0.3952", "326.023, 437.076, 51.7549, 0.4302", "325.974, 438.216, 51.9406, 0.4358", "325.76, 439.323, 52.0876, 0.5052", "325.342, 440.376, 52.2519, 0.5768", "325.077, 441.469, 52.4138, 0.5278", "324.959, 442.598, 52.5851, 0.4042", "324.698, 443.695, 52.694, 0.3356", "324.337, 444.758, 52.7223, 0.3424", "324.04, 445.859, 52.7671, 0.391", "323.759, 446.956, 52.8567, 0.5362", "323.457, 448.036, 53.0032, 0.5368", "323.157, 449.106, 53.2036, 0.4698", "323.027, 450.187, 53.3294, 0.448", "322.931, 451.268, 53.3086, 0.5966", "322.388, 452.248, 53.2199, 0.6406", "321.721, 453.173, 53.0925, 0.7018", "321.12, 454.145, 52.9346, 0.6858", "320.618, 455.16, 52.7363, 0.599", "320.259, 456.228, 52.4899, 0.4846", "319.983, 457.327, 52.2368, 0.5062", "319.773, 458.451, 52.0086, 0.5548", "319.471, 459.543, 51.777, 0.6028", "319.03, 460.579, 51.5088, 0.668", "318.533, 461.597, 51.2355, 0.676", "318.004, 462.61, 51.0014, 0.5516", "317.523, 463.643, 50.7903, 0.5394", "317.157, 464.71, 50.5616, 0.6006", "316.819, 465.791, 50.3359, 0.536", "316.45, 466.871, 50.1539, 0.5946", "315.908, 467.863, 50.0262, 0.5224", "315.221, 468.779, 49.9467, 0.5816", "314.822, 469.81, 49.9106, 0.6684", "314.68, 470.945, 49.912, 0.7128", "314.531, 472.08, 49.9402, 0.6736", "314.372, 473.212, 49.9884, 0.5054", "314.21, 474.345, 50.0578, 0.4288", "314.133, 475.483, 50.1561, 0.5166", "314.133, 476.627, 50.2866, 0.4786", "314.133, 477.768, 50.4641, 0.468", "314.133, 478.87, 50.7469, 0.6154", "314.132, 479.947, 51.1409, 0.5352", "314.117, 481.061, 51.5315, 0.5006", "314.077, 482.205, 51.8454, 0.5702", "313.832, 483.308, 52.078, 0.7356", "313.427, 484.378, 52.2276, 0.865", "312.974, 485.412, 52.3519, 0.8228", "312.48, 486.417, 52.4927, 0.7404", "312.055, 487.464, 52.6103, 0.6074", "311.995, 488.566, 52.694, 0.4948", "311.911, 489.63, 52.621, 0.55", "311.294, 490.504, 52.395, 0.5156", "310.414, 491.191, 52.0831, 0.4282", "310.4, 492.054, 51.6424, 0.3824", "311.122, 492.858, 51.2305, 0.4186", "311.187, 493.849, 51.0849, 0.5832", "310.493, 494.714, 51.0686, 0.6448", "310.062, 495.723, 50.9905, 0.5694" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "326.648, 433.649, 50.5932, 0.5444", "326.359, 433.955, 49.261, 0.2288", "325.664, 434.247, 48.8398, 0.2728", "324.654, 433.752, 48.7225, 0.2712", "323.572, 433.417, 48.6195, 0.2684", "322.664, 433.279, 48.7141, 0.2626", "321.78, 433.218, 48.9073, 0.2542", "320.926, 432.489, 49.0322, 0.2288", "319.974, 431.896, 48.9835, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "312.759, 223.922, 24.853, 0.5976", "311.902, 224.002, 25.9403, 0.2288", "311.961, 223.746, 27.9498, 0.3916", "312.402, 223.622, 28.9254, 0.3686", "312.361, 222.77, 29.7612, 0.3588", "311.82, 221.941, 30.2229, 0.41", "310.932, 221.283, 30.5284, 0.3976", "310.052, 220.734, 30.9232, 0.4384", "309.243, 220.06, 31.3642, 0.4328", "308.21, 219.57, 31.7458, 0.3596", "307.146, 219.167, 32.167, 0.3006", "306.075, 218.856, 32.6687, 0.2756", "305.074, 218.577, 33.2657, 0.2764", "304.033, 218.793, 33.8873, 0.278", "303.026, 219.242, 34.4574, 0.2808", "301.905, 219.388, 34.8754, 0.2862", "300.835, 219.706, 35.2528, 0.296", "299.924, 219.868, 35.7048, 0.3154", "298.95, 219.564, 36.1866, 0.3446", "297.861, 219.769, 36.6825, 0.432", "296.78, 220.007, 37.205, 0.4322", "295.698, 219.903, 37.7378, 0.5328", "294.634, 219.655, 38.2914, 0.4604", "293.529, 219.548, 38.8206, 0.4406", "292.428, 219.645, 39.3137, 0.5338", "291.35, 219.943, 39.765, 0.5334", "290.316, 220.392, 40.1338, 0.4574", "289.241, 220.679, 40.369, 0.455", "288.185, 220.458, 40.4429, 0.463", "287.158, 220.006, 40.4718, 0.4176", "286.065, 219.729, 40.5754, 0.3976", "284.949, 219.538, 40.7649, 0.506", "283.87, 219.216, 41.0446, 0.458", "282.887, 218.693, 41.4198, 0.4348", "282.045, 217.974, 41.8659, 0.529", "281.318, 217.133, 42.3374, 0.495", "280.749, 216.17, 42.7832, 0.5304", "280.104, 215.233, 43.1424, 0.5764", "279.332, 214.509, 43.4258, 0.5274", "278.262, 214.641, 43.6579, 0.4028", "277.57, 215.102, 43.8659, 0.3346", "276.471, 215.276, 44.1636, 0.3334", "275.428, 215.645, 44.5452, 0.4102", "274.493, 216.254, 44.9806, 0.3978", "273.645, 217.014, 45.4017, 0.4388", "272.861, 217.833, 45.8156, 0.4334", "272.038, 218.535, 46.2988, 0.3604", "271.013, 218.861, 46.8026, 0.302", "269.894, 218.885, 47.2886, 0.2784", "268.786, 218.885, 47.7988, 0.2816", "267.652, 218.885, 48.2812, 0.2874", "266.535, 219.002, 48.7474, 0.2994", "265.478, 219.359, 49.2215, 0.3152", "264.413, 219.701, 49.6675, 0.3756", "263.299, 219.846, 50.0195, 0.3378", "262.37, 220.274, 50.4364, 0.3074", "262.07, 221.206, 51.0339, 0.288", "261.448, 221.858, 51.7818, 0.3008", "260.553, 222.281, 52.6994, 0.3178", "260.103, 222.971, 53.7869, 0.3804", "259.726, 223.722, 54.9945, 0.3464", "259.204, 224.624, 56.0848, 0.3244", "258.628, 225.606, 56.9097, 0.3146", "257.965, 226.399, 57.6853, 0.3742", "257.309, 227.187, 58.4256, 0.3354", "256.536, 227.992, 59.0332, 0.3026", "255.778, 228.848, 59.4608, 0.2796", "255.049, 229.729, 59.7719, 0.2838", "254.349, 230.635, 60.0037, 0.2916", "253.672, 231.556, 60.1616, 0.307", "253.013, 232.492, 60.2722, 0.3304", "252.284, 233.363, 60.4153, 0.3982", "251.498, 234.15, 60.6357, 0.4068", "250.552, 234.79, 60.8345, 0.305", "249.566, 235.37, 61.1374, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "312.759, 223.922, 24.853, 0.5976", "311.727, 224.329, 24.8919, 0.467", "310.686, 224.684, 25.0905, 0.5456", "309.635, 224.97, 25.4311, 0.5074", "308.609, 225.357, 25.8622, 0.4142", "307.919, 225.948, 26.0055, 0.3492", "306.82, 226.199, 26.1639, 0.3912", "305.743, 226.299, 26.3912, 0.368", "304.872, 227.026, 26.5824, 0.358" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "292.967, 461.736, 62.2765, 0.3386", "293.277, 462.022, 62.1524, 0.4136", "294.239, 462.505, 62.1863, 0.434", "295.25, 462.958, 62.3465, 0.3616", "296.221, 463.526, 62.5901, 0.3042", "297.239, 464.025, 62.8659, 0.2826", "298.289, 464.478, 63.1098, 0.2892", "299.28, 465.042, 63.3069, 0.3028", "300.292, 465.568, 63.4676, 0.3218", "301.345, 466.015, 63.6084, 0.3874", "302.381, 466.479, 63.7798, 0.3608", "303.388, 466.972, 64.0192, 0.3448", "304.423, 467.431, 64.2698, 0.383", "305.483, 467.862, 64.4902, 0.3518", "306.553, 468.261, 64.6828, 0.3332", "307.635, 468.636, 64.8586, 0.3364", "308.691, 469.064, 65.0446, 0.3874", "309.688, 469.589, 65.2775, 0.4934", "310.683, 470.099, 65.5701, 0.633", "311.646, 470.571, 65.9607, 0.4826", "312.684, 470.956, 66.365, 0.3596", "313.629, 471.109, 66.5042, 0.2906", "314.585, 470.825, 66.449, 0.3056", "315.262, 470.066, 66.6148, 0.3266", "315.996, 469.448, 67.0121, 0.3976", "316.887, 468.804, 67.4596, 0.3736", "317.796, 468.147, 67.9039, 0.399" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "292.967, 461.736, 62.2765, 0.3386", "293.188, 462.253, 61.8836, 0.2288", "293.484, 463.27, 62.1678, 0.2746", "293.387, 464.394, 62.2625, 0.2746", "292.979, 465.439, 62.2418, 0.2746", "292.464, 466.457, 62.1807, 0.2746", "291.966, 467.475, 62.0553, 0.2746", "291.562, 468.532, 61.9189, 0.2746", "291.364, 469.649, 61.8436, 0.2746", "291.236, 470.779, 61.7994, 0.2746", "291.236, 471.916, 61.7168, 0.2748", "291.236, 473.054, 61.5994, 0.2748", "291.236, 474.196, 61.4673, 0.2752", "291.236, 475.339, 61.3242, 0.2756", "291.236, 476.482, 61.1755, 0.2766", "291.236, 477.626, 61.0453, 0.2784", "291.224, 478.769, 60.9269, 0.2818", "291.092, 479.897, 60.8026, 0.2878", "290.647, 480.941, 60.6567, 0.3", "289.915, 481.806, 60.4705, 0.3164", "289.035, 482.511, 60.1919, 0.3778", "288.359, 483.329, 59.7657, 0.3422", "288.247, 484.371, 59.2466, 0.315", "288.611, 485.439, 58.7261, 0.3036", "289.026, 486.478, 58.1885, 0.3232", "289.105, 487.537, 57.6136, 0.3902", "288.919, 488.624, 57.052, 0.3646", "288.745, 489.75, 56.5757, 0.3592", "288.497, 490.855, 56.1537, 0.3738", "288.186, 491.878, 55.6889, 0.5106", "288.169, 492.939, 55.2544, 0.4586", "288.297, 494.038, 55.0043, 0.4744", "288.161, 495.139, 54.8285, 0.4164", "288.059, 496.262, 54.6104, 0.504", "288.04, 497.388, 54.3427, 0.405", "288.076, 498.514, 54.0313, 0.3472", "288.142, 499.639, 53.6687, 0.3148", "288.234, 500.769, 53.2848, 0.351", "288.357, 501.904, 52.9273, 0.4064", "288.471, 503.035, 52.5871, 0.5672", "288.557, 504.139, 52.204, 0.5838", "288.687, 505.232, 51.7782, 0.607", "288.888, 506.3, 51.4987, 0.4588", "288.885, 507.408, 51.2532, 0.4256", "288.181, 507.802, 50.846, 0.3362", "287.081, 507.856, 50.4764, 0.305", "286.233, 508.548, 50.2088, 0.2796", "285.781, 509.573, 50.0912, 0.305", "285.284, 510.58, 49.8156, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "310.062, 495.723, 50.9905, 0.5694", "309.766, 496.758, 51.044, 0.4346", "309.433, 497.797, 51.2173, 0.3894", "308.868, 498.771, 51.333, 0.4554", "308.254, 499.666, 51.266, 0.537", "307.503, 500.513, 51.2126, 0.4286", "306.961, 501.432, 51.2103, 0.3436", "306.905, 502.517, 51.0602, 0.3092", "307.07, 503.629, 50.8648, 0.3334", "306.835, 504.7, 50.7013, 0.4102", "306.202, 505.642, 50.5924, 0.3978", "305.576, 506.588, 50.5193, 0.4386", "304.991, 507.569, 50.4188, 0.4332", "304.452, 508.573, 50.2995, 0.3602", "303.958, 509.599, 50.1472, 0.3016", "303.519, 510.65, 49.9691, 0.2778", "303.089, 511.703, 49.7787, 0.2804", "302.398, 512.513, 49.546, 0.2854", "301.461, 513.116, 49.3402, 0.2946", "300.575, 513.823, 49.2576, 0.3124", "299.701, 514.548, 49.2411, 0.3406", "298.788, 515.23, 49.2279, 0.4174", "297.876, 515.901, 49.273, 0.441", "296.937, 516.533, 49.3886, 0.3748", "295.93, 517.059, 49.4791, 0.3282", "294.876, 517.471, 49.5664, 0.329", "293.822, 517.801, 49.7434, 0.3648", "292.797, 518.225, 49.9134, 0.4932", "291.796, 518.762, 49.9808, 0.4316", "290.903, 519.433, 50.0394, 0.3982", "289.878, 519.79, 50.1024, 0.4012", "289.074, 520.458, 50.0612, 0.5508", "288.568, 521.467, 50.0388, 0.5848", "287.771, 522.274, 49.9974, 0.4576", "286.658, 522.485, 49.8156, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "310.062, 495.723, 50.9905, 0.5694", "310.51, 496.377, 49.0311, 0.4576", "311.127, 497.299, 48.2518, 0.6072", "311.493, 498.376, 47.9637, 0.5086", "312.0, 499.398, 47.6123, 0.5072", "312.545, 500.214, 47.0196, 0.5386", "312.437, 501.265, 46.2834, 0.4316", "312.298, 502.385, 45.5193, 0.3502", "312.161, 503.506, 44.7605, 0.3164", "311.799, 504.466, 43.916, 0.3728", "311.398, 505.359, 43.0158, 0.356", "310.928, 506.0, 40.7582, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "304.872, 227.026, 26.5824, 0.358", "305.437, 226.517, 26.8873, 0.2288", "305.255, 226.221, 25.2133, 0.3328", "304.243, 226.07, 24.4921, 0.3722", "303.391, 225.349, 23.7921, 0.5062", "302.575, 224.564, 23.1153, 0.458", "301.728, 223.852, 22.4313, 0.436", "300.863, 223.193, 21.749, 0.5254", "300.012, 222.555, 21.0829, 0.517", "299.204, 221.926, 20.3986, 0.4322", "298.345, 221.32, 19.7369, 0.3814", "297.31, 220.841, 19.2669, 0.4576", "296.273, 220.717, 19.2469, 0.4576" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "304.872, 227.026, 26.5824, 0.358", "303.991, 227.628, 26.6902, 0.4074", "303.102, 228.348, 26.7152, 0.3978", "302.26, 229.115, 26.6778, 0.4136", "301.216, 229.581, 26.5933, 0.5086", "300.15, 229.99, 26.4515, 0.5942", "299.105, 230.387, 26.2034, 0.7362", "298.051, 230.706, 25.8707, 0.623", "296.94, 230.836, 25.5147, 0.6378", "295.851, 231.143, 25.2241, 0.72", "294.975, 231.876, 24.9975, 0.8348", "294.26, 232.756, 24.83, 0.772", "293.891, 233.839, 24.7118, 0.621", "293.484, 234.899, 24.6143, 0.5078", "292.743, 235.743, 24.4648, 0.4054", "291.855, 236.394, 24.2484, 0.3798", "291.038, 237.157, 24.1028, 0.4504", "290.028, 237.595, 23.9252, 0.4656", "288.902, 237.544, 23.7626, 0.5972", "287.829, 237.452, 23.56, 0.5688", "286.889, 237.966, 23.4471, 0.6936", "286.221, 238.839, 23.4792, 0.7514", "285.497, 239.724, 23.5229, 0.7842", "284.683, 240.521, 23.568, 0.7488", "283.894, 241.331, 23.601, 0.694", "283.342, 242.328, 23.6135, 0.5378", "282.767, 243.279, 23.5451, 0.5144", "281.93, 243.966, 23.4656, 0.5518", "280.982, 244.545, 23.444, 0.4572", "280.111, 245.212, 23.3131, 0.3914", "279.24, 245.91, 23.1276, 0.4236", "278.408, 246.688, 22.9625, 0.4212", "277.685, 247.571, 22.8359, 0.489", "276.846, 248.333, 22.7433, 0.4926", "275.838, 248.858, 22.6834, 0.6356", "274.816, 249.374, 22.6632, 0.6954", "273.859, 249.995, 22.6632, 0.66", "272.875, 250.575, 22.6698, 0.6178", "271.811, 250.983, 22.6803, 0.6548", "270.773, 251.457, 22.6948, 0.6208", "270.013, 252.275, 22.7149, 0.5986", "269.345, 253.204, 22.7435, 0.5886", "268.433, 253.863, 22.7846, 0.6466", "267.463, 254.468, 22.8409, 0.6118", "266.688, 255.295, 22.9139, 0.551", "265.965, 256.182, 23.0137, 0.6506", "265.2, 257.007, 23.1953, 0.7194", "264.43, 257.831, 23.4368, 0.7228", "263.827, 258.793, 23.6735, 0.6454", "262.959, 259.5, 23.8793, 0.4508", "261.863, 259.728, 24.1186, 0.3378", "260.84, 260.165, 24.3946, 0.2988", "259.94, 260.865, 24.5961, 0.3142", "259.019, 261.544, 24.7341, 0.3734", "258.033, 262.121, 24.8238, 0.3338", "257.125, 262.818, 24.8713, 0.3", "256.221, 263.519, 24.8849, 0.2746", "255.319, 264.222, 24.8839, 0.2746", "254.416, 264.924, 24.8889, 0.2746", "253.658, 265.779, 24.9169, 0.2746", "253.143, 266.797, 24.9833, 0.2748", "252.633, 267.817, 25.0769, 0.275", "252.123, 268.839, 25.1862, 0.2754", "251.696, 269.899, 25.2889, 0.276", "251.379, 270.999, 25.3641, 0.2772", "251.066, 272.098, 25.4124, 0.2796", "250.751, 273.199, 25.4374, 0.2838", "250.438, 274.298, 25.4461, 0.2918", "249.815, 275.257, 25.4445, 0.3062", "249.158, 276.194, 25.4379, 0.3354", "248.501, 277.131, 25.4285, 0.3778", "247.843, 278.066, 25.4156, 0.5118", "247.59, 279.181, 25.3976, 0.492", "247.403, 280.31, 25.3718, 0.3848", "247.215, 281.438, 25.3355, 0.3002", "247.026, 282.567, 25.2859, 0.2748", "246.839, 283.695, 25.222, 0.275" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "317.796, 468.147, 67.9039, 0.399", "317.507, 469.04, 68.3931, 0.3342", "317.124, 470.075, 68.8136, 0.3006", "316.618, 471.012, 68.8856, 0.2756", "316.477, 471.711, 68.5213, 0.2766", "317.099, 472.623, 68.2248, 0.2784", "317.903, 473.418, 68.0028, 0.2816", "318.083, 474.542, 67.804, 0.2874", "317.84, 475.659, 67.6421, 0.2994", "317.622, 476.781, 67.5209, 0.3152", "317.279, 477.872, 67.4108, 0.3756", "317.008, 478.963, 67.2252, 0.3378", "316.934, 479.994, 66.8872, 0.3074", "316.88, 481.0, 66.4488, 0.288", "316.88, 481.992, 66.0887, 0.3004", "316.785, 482.767, 66.166, 0.3172", "316.333, 483.52, 66.4748, 0.3792", "315.604, 484.39, 66.7164, 0.3446", "315.048, 485.343, 66.8265, 0.3198", "314.682, 486.415, 66.8324, 0.3124", "314.273, 487.482, 66.7509, 0.3392", "313.749, 488.463, 66.5378, 0.4206", "313.085, 489.364, 66.2903, 0.4174", "312.764, 490.404, 66.1315, 0.4746", "312.834, 491.532, 65.9935, 0.5018", "313.029, 492.65, 65.8577, 0.4782", "313.286, 493.764, 65.7507, 0.5656", "313.614, 494.859, 65.667, 0.547", "313.98, 495.943, 65.5903, 0.476", "314.221, 497.055, 65.5183, 0.52", "314.471, 498.145, 65.5071, 0.4356", "314.591, 499.195, 65.4024, 0.3996", "314.49, 500.223, 65.123, 0.4326", "314.229, 501.286, 64.8043, 0.4688", "313.812, 502.329, 64.6136, 0.428", "313.161, 503.224, 64.4445, 0.4178", "312.812, 504.259, 64.4319, 0.54", "312.728, 505.368, 64.5865, 0.539", "312.465, 506.432, 64.876, 0.4972", "312.384, 507.565, 65.1361, 0.3842", "312.326, 508.707, 65.3394, 0.3482", "312.303, 509.846, 65.4606, 0.3534", "312.301, 510.979, 65.485, 0.4718", "312.286, 512.119, 65.4716, 0.3922", "312.203, 513.236, 65.5617, 0.3236", "312.305, 514.361, 65.7622, 0.2712", "312.651, 515.445, 66.0162, 0.2684", "312.491, 516.563, 66.2337, 0.2626", "312.327, 517.695, 66.4471, 0.2542", "312.301, 518.809, 66.7411, 0.2288", "312.301, 519.739, 67.9305, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "317.796, 468.147, 67.9039, 0.399", "318.411, 467.882, 68.1419, 0.6864", "319.069, 467.316, 68.6526, 0.4452", "319.75, 466.464, 68.8078, 0.3274", "320.493, 466.118, 68.6818, 0.2784", "321.249, 465.702, 68.462, 0.2816", "321.868, 465.224, 68.6263, 0.2874", "322.196, 465.017, 69.211, 0.2994", "323.046, 464.654, 69.9745, 0.3152", "323.991, 464.236, 70.6871, 0.3754", "324.927, 463.876, 71.1301, 0.3378", "325.837, 463.411, 71.3852, 0.3072", "326.379, 462.987, 71.7934, 0.2876", "326.858, 462.604, 72.4847, 0.2998", "327.67, 462.02, 73.2693, 0.316", "328.708, 461.665, 73.9516, 0.377", "329.758, 461.769, 74.6348, 0.3408", "330.759, 461.523, 75.3298, 0.3124", "331.155, 460.534, 75.9315, 0.2988", "332.03, 460.211, 76.5506, 0.3142", "333.172, 460.208, 76.9468, 0.3734", "334.285, 460.205, 77.107, 0.3338", "335.39, 460.096, 77.2386, 0.3", "336.504, 459.849, 77.2584, 0.2746", "337.629, 459.661, 77.173, 0.2746", "338.717, 459.72, 76.9138, 0.2746", "339.604, 459.751, 76.4476, 0.2748", "340.523, 459.751, 75.9086, 0.2748", "341.652, 459.751, 75.511, 0.2752", "342.757, 459.751, 75.346, 0.2756", "343.361, 459.751, 75.6697, 0.2766", "343.462, 459.897, 76.4635, 0.2784", "343.954, 460.389, 77.3923, 0.2818", "344.859, 461.016, 78.05, 0.2878", "345.688, 461.775, 78.426, 0.3002", "346.392, 462.645, 78.5128, 0.3166", "346.622, 463.71, 78.3465, 0.3782", "346.645, 464.839, 78.0402, 0.3428", "346.656, 465.971, 77.6989, 0.3164", "346.674, 467.111, 77.4166, 0.3058", "346.717, 468.253, 77.2002, 0.3274", "346.997, 469.35, 77.0294, 0.3978", "347.131, 470.449, 76.8463, 0.3812", "347.401, 471.542, 76.7822, 0.3772", "348.064, 472.424, 76.8838, 0.4688", "348.545, 473.454, 77.0204, 0.387", "348.997, 474.504, 77.1677, 0.3136", "349.648, 475.442, 77.3237, 0.2542", "350.13, 476.419, 77.5835, 0.2288", "351.224, 476.693, 78.12, 0.2288" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "246.839, 283.695, 25.222, 0.275", "246.76, 284.088, 25.1243, 0.2754", "246.539, 285.197, 24.9651, 0.2762", "246.317, 286.305, 24.7702, 0.2774", "246.093, 287.414, 24.5631, 0.2798", "245.81, 288.507, 24.3866, 0.2844", "245.306, 289.513, 24.3473, 0.2928", "244.803, 290.521, 24.4098, 0.3094", "244.293, 291.528, 24.5316, 0.3338", "243.743, 292.526, 24.6178, 0.4108", "243.188, 293.497, 24.5912, 0.3988", "242.745, 294.485, 24.4323, 0.4408", "242.168, 295.431, 24.2322, 0.4372", "241.386, 296.257, 24.1322, 0.3674", "240.588, 297.016, 24.2209, 0.3148", "239.764, 297.705, 24.492, 0.3032", "238.923, 298.435, 24.8279, 0.3226", "238.237, 299.35, 25.1173, 0.389", "237.551, 300.266, 25.3412, 0.3638", "236.867, 301.183, 25.4936, 0.3502", "236.212, 302.12, 25.5903, 0.393", "235.613, 303.094, 25.6623, 0.371", "235.013, 304.068, 25.7415, 0.3648", "234.414, 305.043, 25.8456, 0.415", "233.815, 306.009, 25.9985, 0.4366", "233.218, 306.948, 26.2512, 0.3664", "232.621, 307.887, 26.567, 0.313", "231.978, 308.798, 26.8996, 0.2986", "231.145, 309.568, 27.1777, 0.32", "230.229, 310.248, 27.3601, 0.3546", "229.405, 311.038, 27.4407, 0.4428", "228.697, 311.889, 27.3922, 0.49", "228.268, 312.849, 27.2415, 0.4552", "228.12, 313.951, 27.2279, 0.5284", "227.864, 315.007, 27.3342, 0.4522", "227.272, 315.98, 27.4619, 0.424", "226.587, 316.897, 27.5796, 0.5094", "225.901, 317.812, 27.6812, 0.458", "225.215, 318.728, 27.7546, 0.4656", "224.597, 319.684, 27.7861, 0.4362", "224.11, 320.719, 27.7964, 0.3658", "223.628, 321.756, 27.8048, 0.3118", "223.145, 322.793, 27.8162, 0.2964", "222.706, 323.848, 27.8321, 0.316", "222.362, 324.938, 27.8543, 0.3472", "222.08, 326.047, 27.8861, 0.4294", "221.868, 327.17, 27.9308, 0.4644", "221.574, 328.267, 27.9909, 0.4124", "221.061, 329.288, 28.0689, 0.425", "220.384, 330.185, 28.1932, 0.3772", "219.57, 330.967, 28.3928, 0.4058", "218.889, 331.875, 28.6182, 0.3464", "218.375, 332.894, 28.845, 0.3244", "218.122, 333.98, 29.1057, 0.3144", "218.122, 335.1, 29.4288, 0.3742", "218.033, 336.207, 29.794, 0.3352", "217.814, 337.306, 30.1619, 0.3024", "217.594, 338.407, 30.5133, 0.2792", "217.375, 339.506, 30.8249, 0.2832", "217.121, 340.603, 31.0223, 0.2906", "216.814, 341.691, 31.0257, 0.3038", "216.499, 342.77, 30.863, 0.331", "216.184, 343.848, 30.585, 0.369", "215.842, 344.922, 30.2473, 0.5002", "215.463, 345.989, 29.9048, 0.447", "215.082, 347.056, 29.5926, 0.4148", "214.701, 348.123, 29.3272, 0.491", "214.302, 349.189, 29.1312, 0.4292", "213.776, 350.183, 29.0595, 0.3868", "213.022, 350.966, 29.1592, 0.4136", "212.279, 351.715, 29.2625, 0.4102", "211.823, 352.691, 29.2762, 0.433", "211.706, 353.81, 29.3364, 0.5618", "211.662, 354.931, 29.4672, 0.6102", "211.375, 356.009, 29.6075, 0.4806", "210.851, 357.023, 29.7035, 0.3892", "210.271, 358.009, 29.7578, 0.413", "209.723, 359.012, 29.764, 0.4328", "209.349, 360.085, 29.7002, 0.3594", "209.208, 361.216, 29.5669, 0.3", "209.436, 362.317, 29.3712, 0.2748", "209.714, 363.416, 29.078, 0.2748", "209.81, 364.506, 28.6353, 0.2752", "209.842, 365.587, 28.0624, 0.2756", "209.764, 366.622, 27.3786, 0.2766", "209.425, 367.466, 26.5812, 0.2782", "209.194, 368.467, 25.8448, 0.2814", "209.061, 369.572, 25.2774, 0.2872", "208.961, 370.701, 24.9433, 0.2988", "208.9, 371.834, 24.9025, 0.3144", "208.708, 372.886, 25.1996, 0.374", "208.192, 373.454, 25.8897, 0.335", "207.304, 373.964, 26.6986, 0.302", "206.217, 374.198, 27.4569, 0.2782", "205.271, 374.614, 28.2055, 0.2814", "204.742, 375.588, 28.7983, 0.287", "204.29, 376.637, 29.1788, 0.2986", "203.893, 377.708, 29.3339, 0.314", "203.438, 378.735, 29.2726, 0.3732", "202.803, 379.683, 29.1444, 0.3334", "202.161, 380.628, 28.961, 0.299", "201.52, 381.574, 28.7101, 0.2728", "200.943, 382.427, 28.2498, 0.2712", "200.365, 383.278, 27.6525, 0.2684", "199.788, 384.129, 26.9777, 0.2626", "199.177, 385.088, 26.405, 0.2542", "198.568, 386.055, 25.9709, 0.2288", "197.959, 387.023, 25.4612, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "246.839, 283.695, 25.222, 0.275", "246.237, 283.99, 25.5942, 0.2288", "245.214, 284.492, 25.7967, 0.2814", "244.211, 285.032, 25.8882, 0.2872", "243.275, 285.69, 25.9719, 0.2978", "242.355, 286.371, 26.044, 0.3186", "241.423, 287.033, 26.1086, 0.352", "240.476, 287.672, 26.1672, 0.4394", "239.493, 288.258, 26.2204, 0.4764", "238.506, 288.829, 26.292, 0.4658", "237.534, 289.398, 26.4349, 0.3732", "236.624, 290.034, 26.6056, 0.327", "235.842, 290.859, 26.6881, 0.3194", "235.028, 291.651, 26.74, 0.3834", "234.152, 292.37, 26.8222, 0.352", "233.24, 293.056, 26.8936, 0.3346", "232.345, 293.755, 26.913, 0.3334", "231.587, 294.58, 26.8488, 0.41", "230.795, 295.346, 26.7641, 0.3976", "229.834, 295.924, 26.7801, 0.4384", "229.062, 296.695, 26.8877, 0.4328", "228.489, 297.684, 26.9999, 0.3594", "227.973, 298.705, 27.1125, 0.3", "227.462, 299.728, 27.2232, 0.2746", "226.911, 300.73, 27.3208, 0.2746", "226.283, 301.685, 27.3988, 0.2748", "225.63, 302.619, 27.4938, 0.2748", "224.992, 303.544, 27.6584, 0.275", "224.31, 304.438, 27.8548, 0.2754", "223.55, 305.292, 28.012, 0.2762", "222.752, 306.112, 28.121, 0.2778", "221.911, 306.887, 28.1828, 0.2804", "220.997, 307.56, 28.2008, 0.2854", "219.963, 308.044, 28.1845, 0.2946", "219.045, 308.658, 28.1492, 0.3114", "218.352, 309.54, 28.0599, 0.3448", "217.529, 310.268, 27.9304, 0.3954", "216.558, 310.871, 27.8407, 0.5444", "215.639, 311.532, 27.8484, 0.5532", "214.783, 312.26, 27.9814, 0.4948", "214.066, 313.126, 28.1831, 0.52", "213.466, 314.1, 28.4124, 0.6052", "212.958, 315.121, 28.6614, 0.5756", "212.525, 316.18, 28.9195, 0.5178", "212.018, 317.159, 29.2538, 0.4236", "211.658, 318.186, 29.6601, 0.4148", "211.742, 319.259, 30.1339, 0.5092", "212.264, 320.184, 30.679, 0.6036", "212.937, 321.08, 31.1965, 0.7124", "213.743, 321.878, 31.6338, 0.7782", "214.646, 322.579, 32.0006, 0.6454", "215.408, 323.414, 32.3128, 0.492", "216.032, 324.372, 32.6306, 0.4436", "216.555, 325.347, 33.0784, 0.581", "217.087, 326.281, 33.7131, 0.648", "217.677, 327.154, 34.5321, 0.5394", "218.027, 328.166, 35.4556, 0.5532", "218.336, 329.084, 36.5543, 0.4494", "217.979, 329.973, 37.6967, 0.4266", "217.126, 330.154, 38.8965, 0.4774", "216.645, 330.11, 40.2231, 0.5762", "216.519, 329.225, 41.4506, 0.5084", "215.781, 328.379, 43.4, 0.4576" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_23", "dend_20", "dend_17", "dend_14", "dend_3", "dend_0", "dend_44", "dend_41", "dend_31", "dend_24", "dend_22", "dend_21", "dend_19", "dend_18", "dend_16", "dend_15", "dend_13", "dend_4", "dend_2", "dend_1", "dend_43", "dend_42", "dend_33", "dend_32", "dend_26", "dend_25", "dend_6", "dend_5", "dend_35", "dend_34", "dend_28", "dend_27", "dend_12", "dend_7", "dend_37", "dend_36", "dend_30", "dend_29", "dend_11", "dend_8", "dend_39", "dend_38", "dend_10", "dend_9" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20713",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.0174046"
  }, {
    "group" : "axon",
    "value" : "2.0174046"
  }, {
    "group" : "dend",
    "value" : "2.0174046"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "77.32611"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.813545E-11",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.108290575",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.7029497E-9",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.08075542",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.59926695",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.0405801E-7",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0061705797",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "6.6073175E-5",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.6876587E-4",
    "erev" : "-97.63376"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.8808437E-5",
    "erev" : "-97.63376"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0072074E-7",
    "erev" : "-97.63376"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.8602509E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.005146585",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478043748",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478043748

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_3
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_40, dend_23, dend_20, dend_17, dend_14, dend_3, dend_0, dend_44, dend_41, dend_31, dend_24, dend_22, dend_21, dend_19, dend_18, dend_16, dend_15, dend_13, dend_4, dend_2, dend_1, dend_43, dend_42, dend_33, dend_32, dend_26, dend_25, dend_6, dend_5, dend_35, dend_34, dend_28, dend_27, dend_12, dend_7, dend_37, dend_36, dend_30, dend_29, dend_11, dend_8, dend_39, dend_38, dend_10, dend_9]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_20713, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_20713
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478043748
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000486239424281)
    connect dend_40(0), soma_0(0.5000486239424281)
    connect dend_23(0), soma_0(0.5000486239424281)
    connect dend_20(0), soma_0(0.5000486239424281)
    connect dend_17(0), soma_0(0.5000486239424281)
    connect dend_14(0), soma_0(0.5000486239424281)
    connect dend_3(0), soma_0(0.5000486239424281)
    connect dend_0(0), soma_0(0.5000486239424281)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 336.561, 226.205, 30.6354, 10.2828 ) }
    soma_0 { pt3dadd( 341.703, 226.205, 30.6354, 10.2828 ) }
    soma_0 { pt3dadd( 346.844, 226.205, 30.6354, 10.2828 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 341.703, 226.205, 30.6354, 1.0 ) }
    axon_0 { pt3dadd( 347.544, 240.021, 30.6354, 1.0 ) }
    axon_0 { pt3dadd( 353.385, 253.837, 30.6354, 1.0 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 6/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 343.863, 229.072, 25.87, 0.2288 ) }
    dend_40 { pt3dadd( 344.469, 229.875, 25.11, 0.2844 ) }
    dend_40 { pt3dadd( 344.212, 230.779, 24.7736, 0.2924 ) }
    dend_40 { pt3dadd( 343.938, 231.883, 24.5344, 0.3088 ) }
    dend_40 { pt3dadd( 344.007, 233.023, 24.395, 0.3328 ) }
    dend_40 { pt3dadd( 344.508, 233.997, 24.4575, 0.408 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 12/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 342.326, 232.089, 32.7188, 1.4238 ) }
    dend_23 { pt3dadd( 342.444, 233.209, 33.2777, 0.3352 ) }
    dend_23 { pt3dadd( 342.424, 234.335, 33.8005, 0.3826 ) }
    dend_23 { pt3dadd( 342.316, 235.457, 34.27, 0.496 ) }
    dend_23 { pt3dadd( 342.145, 236.575, 34.6654, 0.5818 ) }
    dend_23 { pt3dadd( 341.637, 237.598, 34.9238, 0.6596 ) }
    dend_23 { pt3dadd( 341.126, 238.622, 35.1114, 0.7404 ) }
    dend_23 { pt3dadd( 340.615, 239.645, 35.2492, 0.9694 ) }
    dend_23 { pt3dadd( 340.103, 240.669, 35.3553, 1.0094 ) }
    dend_23 { pt3dadd( 339.95, 241.788, 35.5074, 0.891 ) }
    dend_23 { pt3dadd( 339.812, 242.908, 35.7, 0.9206 ) }
    dend_23 { pt3dadd( 339.686, 244.043, 35.8806, 0.911 ) }
    dend_23 { pt3dadd( 339.564, 245.181, 36.0287, 0.976 ) }
    dend_23 { pt3dadd( 339.354, 246.304, 36.1438, 0.9232 ) }
    dend_23 { pt3dadd( 338.872, 247.343, 36.2225, 0.9804 ) }
    dend_23 { pt3dadd( 338.394, 248.382, 36.2706, 0.7914 ) }
    dend_23 { pt3dadd( 337.94, 249.432, 36.3042, 0.7296 ) }
    dend_23 { pt3dadd( 337.487, 250.482, 36.3395, 0.5872 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 30/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 346.385, 226.843, 29.8063, 0.2288 ) }
    dend_20 { pt3dadd( 347.516, 226.996, 29.8449, 0.371 ) }
    dend_20 { pt3dadd( 348.586, 227.384, 29.8402, 0.4818 ) }
    dend_20 { pt3dadd( 349.392, 228.178, 29.888, 0.5208 ) }
    dend_20 { pt3dadd( 350.445, 228.479, 30.0482, 0.714 ) }
    dend_20 { pt3dadd( 351.583, 228.501, 30.2184, 0.7158 ) }
    dend_20 { pt3dadd( 352.721, 228.62, 30.3551, 0.6174 ) }
    dend_20 { pt3dadd( 353.858, 228.754, 30.4598, 0.4714 ) }
    dend_20 { pt3dadd( 354.995, 228.876, 30.5292, 0.482 ) }
    dend_20 { pt3dadd( 356.139, 228.902, 30.5617, 0.5092 ) }
    dend_20 { pt3dadd( 357.267, 228.715, 30.5673, 0.5224 ) }
    dend_20 { pt3dadd( 358.396, 228.528, 30.5707, 0.4988 ) }
    dend_20 { pt3dadd( 359.51, 228.777, 30.5858, 0.4602 ) }
    dend_20 { pt3dadd( 360.637, 228.909, 30.5656, 0.363 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 44/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 346.187, 223.929, 31.5202, 0.2288 ) }
    dend_17 { pt3dadd( 347.185, 223.43, 32.0205, 0.4584 ) }
    dend_17 { pt3dadd( 348.15, 222.953, 32.2689, 0.5424 ) }
    dend_17 { pt3dadd( 349.092, 222.343, 32.4803, 0.4386 ) }
    dend_17 { pt3dadd( 349.85, 221.515, 32.7345, 0.3624 ) }
    dend_17 { pt3dadd( 350.384, 220.624, 32.8647, 0.344 ) }
    dend_17 { pt3dadd( 350.881, 219.686, 32.879, 0.3996 ) }
    dend_17 { pt3dadd( 351.446, 218.73, 32.9854, 0.5238 ) }
    dend_17 { pt3dadd( 351.691, 217.788, 33.2998, 0.653 ) }
    dend_17 { pt3dadd( 352.145, 216.953, 33.773, 0.6964 ) }
    dend_17 { pt3dadd( 353.066, 216.36, 34.1872, 0.5842 ) }
    dend_17 { pt3dadd( 354.131, 216.097, 34.4512, 0.6256 ) }
    dend_17 { pt3dadd( 355.233, 215.853, 34.65, 0.6352 ) }
    dend_17 { pt3dadd( 356.359, 215.721, 34.8505, 0.522 ) }
    dend_17 { pt3dadd( 357.434, 215.881, 35.1375, 0.4904 ) }
    dend_17 { pt3dadd( 358.414, 216.297, 35.5496, 0.4816 ) }
    dend_17 { pt3dadd( 359.456, 216.715, 35.9752, 0.4514 ) }
    dend_17 { pt3dadd( 360.49, 217.198, 36.3737, 0.4624 ) }
    dend_17 { pt3dadd( 361.423, 217.842, 36.7581, 0.6168 ) }
    dend_17 { pt3dadd( 362.221, 218.592, 37.1823, 0.709 ) }
    dend_17 { pt3dadd( 363.23, 218.826, 37.6471, 0.6788 ) }
    dend_17 { pt3dadd( 364.293, 218.517, 37.9915, 0.6846 ) }
    dend_17 { pt3dadd( 365.325, 218.096, 38.1928, 0.6228 ) }
    dend_17 { pt3dadd( 366.4, 218.01, 38.4672, 0.6316 ) }
    dend_17 { pt3dadd( 367.355, 218.361, 38.8769, 0.5068 ) }
    dend_17 { pt3dadd( 368.125, 219.164, 39.2238, 0.5038 ) }
    dend_17 { pt3dadd( 368.786, 220.095, 39.5374, 0.5324 ) }
    dend_17 { pt3dadd( 369.487, 220.949, 39.9232, 0.42 ) }
    dend_17 { pt3dadd( 370.384, 221.584, 40.1736, 0.3278 ) }
    dend_17 { pt3dadd( 371.418, 222.056, 40.409, 0.2792 ) }
    dend_17 { pt3dadd( 372.484, 222.444, 40.693, 0.283 ) }
    dend_17 { pt3dadd( 373.54, 222.8, 41.0802, 0.29 ) }
    dend_17 { pt3dadd( 374.566, 223.109, 41.5979, 0.3044 ) }
    dend_17 { pt3dadd( 375.608, 223.485, 42.1652, 0.3246 ) }
    dend_17 { pt3dadd( 376.654, 223.873, 42.7664, 0.3928 ) }
    dend_17 { pt3dadd( 377.557, 224.525, 43.3608, 0.3706 ) }
    dend_17 { pt3dadd( 378.465, 225.218, 43.8396, 0.364 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 81/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 344.805, 228.39, 37.1955, 0.2288 ) }
    dend_14 { pt3dadd( 345.569, 228.929, 39.1023, 0.2748 ) }
    dend_14 { pt3dadd( 346.333, 229.467, 39.9426, 0.275 ) }
    dend_14 { pt3dadd( 347.096, 230.006, 40.9321, 0.2754 ) }
    dend_14 { pt3dadd( 348.15, 230.333, 41.8174, 0.2762 ) }
    dend_14 { pt3dadd( 349.201, 230.337, 42.4374, 0.2776 ) }
    dend_14 { pt3dadd( 350.237, 230.505, 43.1206, 0.2802 ) }
    dend_14 { pt3dadd( 350.97, 231.195, 43.892, 0.285 ) }
    dend_14 { pt3dadd( 351.626, 231.814, 44.7877, 0.2938 ) }
    dend_14 { pt3dadd( 352.586, 232.052, 45.7212, 0.31 ) }
    dend_14 { pt3dadd( 353.515, 232.016, 46.73, 0.3422 ) }
    dend_14 { pt3dadd( 354.354, 232.608, 47.6392, 0.3902 ) }
    dend_14 { pt3dadd( 355.217, 233.282, 48.2756, 0.536 ) }
    dend_14 { pt3dadd( 356.294, 233.448, 48.79, 0.5316 ) }
    dend_14 { pt3dadd( 357.346, 233.153, 49.3052, 0.4836 ) }
    dend_14 { pt3dadd( 358.297, 232.609, 49.8635, 0.3594 ) }
    dend_14 { pt3dadd( 359.078, 231.878, 50.4832, 0.3 ) }
    dend_14 { pt3dadd( 359.708, 231.01, 51.165, 0.2746 ) }
    dend_14 { pt3dadd( 359.964, 230.134, 51.9585, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_14 { pt3dadd( 360.335, 229.19, 52.7139, 0.2746 ) }
    dend_14 { pt3dadd( 361.076, 228.398, 53.2031, 0.2746 ) }
    dend_14 { pt3dadd( 361.908, 227.638, 53.5046, 0.2746 ) }
    dend_14 { pt3dadd( 362.924, 227.146, 53.7211, 0.2746 ) }
    dend_14 { pt3dadd( 363.97, 226.689, 53.9092, 0.2746 ) }
    dend_14 { pt3dadd( 364.849, 226.002, 54.1517, 0.2746 ) }
    dend_14 { pt3dadd( 365.703, 225.258, 54.4606, 0.2746 ) }
    dend_14 { pt3dadd( 366.579, 224.527, 54.8052, 0.2746 ) }
    dend_14 { pt3dadd( 367.388, 223.753, 55.2272, 0.2748 ) }
    dend_14 { pt3dadd( 368.036, 222.953, 55.7953, 0.2748 ) }
    dend_14 { pt3dadd( 368.783, 222.124, 56.3573, 0.2752 ) }
    dend_14 { pt3dadd( 369.576, 221.301, 56.8456, 0.2756 ) }
    dend_14 { pt3dadd( 370.513, 220.69, 57.3434, 0.2766 ) }
    dend_14 { pt3dadd( 371.492, 220.172, 57.8763, 0.2782 ) }
    dend_14 { pt3dadd( 372.311, 219.6, 58.5136, 0.2814 ) }
    dend_14 { pt3dadd( 373.38, 219.359, 59.1083, 0.287 ) }
    dend_14 { pt3dadd( 374.471, 219.078, 59.5336, 0.2988 ) }
    dend_14 { pt3dadd( 375.464, 218.628, 59.9995, 0.3142 ) }
    dend_14 { pt3dadd( 376.558, 218.428, 60.457, 0.3734 ) }
    dend_14 { pt3dadd( 377.652, 218.179, 60.8818, 0.3338 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 20/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 337.271, 223.715, 29.8186, 0.2288 ) }
    dend_3 { pt3dadd( 336.276, 223.156, 29.5949, 0.4634 ) }
    dend_3 { pt3dadd( 335.281, 222.597, 29.493, 0.528 ) }
    dend_3 { pt3dadd( 334.358, 221.921, 29.3913, 0.5272 ) }
    dend_3 { pt3dadd( 333.443, 221.235, 29.2883, 0.6536 ) }
    dend_3 { pt3dadd( 332.398, 220.768, 29.1808, 0.725 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 338.894, 222.593, 30.6043, 0.2288 ) }
    dend_0 { pt3dadd( 338.191, 221.69, 30.6093, 0.6038 ) }
    dend_0 { pt3dadd( 337.489, 220.786, 30.611, 0.5126 ) }
    dend_0 { pt3dadd( 336.786, 219.884, 30.6144, 0.4642 ) }
    dend_0 { pt3dadd( 336.086, 218.98, 30.6211, 0.4756 ) }
    dend_0 { pt3dadd( 335.473, 218.017, 30.6331, 0.6918 ) }
    dend_0 { pt3dadd( 334.944, 217.003, 30.6499, 0.8322 ) }
    dend_0 { pt3dadd( 334.393, 216.001, 30.6793, 0.9838 ) }
    dend_0 { pt3dadd( 333.801, 215.025, 30.7258, 0.8768 ) }
    dend_0 { pt3dadd( 333.422, 213.965, 30.7961, 0.7332 ) }
    dend_0 { pt3dadd( 333.264, 212.846, 30.8865, 0.6586 ) }
    dend_0 { pt3dadd( 333.325, 211.734, 30.8694, 0.7328 ) }
    dend_0 { pt3dadd( 332.993, 210.693, 30.7462, 0.7556 ) }
    dend_0 { pt3dadd( 332.109, 210.029, 30.5995, 0.8962 ) }
    dend_0 { pt3dadd( 331.079, 209.534, 30.4514, 0.9082 ) }
    dend_0 { pt3dadd( 330.044, 209.075, 30.259, 0.9934 ) }
    dend_0 { pt3dadd( 329.025, 208.612, 30.0163, 0.8466 ) }
    dend_0 { pt3dadd( 328.155, 207.895, 29.8152, 0.6818 ) }
    dend_0 { pt3dadd( 327.352, 207.08, 29.6769, 0.5398 ) }
    dend_0 { pt3dadd( 326.454, 206.374, 29.5884, 0.6276 ) }
    dend_0 { pt3dadd( 325.522, 205.713, 29.5456, 0.6868 ) }
    dend_0 { pt3dadd( 324.665, 204.957, 29.547, 0.6144 ) }
    dend_0 { pt3dadd( 323.84, 204.164, 29.5812, 0.6776 ) }
    dend_0 { pt3dadd( 322.958, 203.438, 29.6383, 0.7508 ) }
    dend_0 { pt3dadd( 322.053, 202.737, 29.7102, 0.6432 ) }
    dend_0 { pt3dadd( 321.026, 202.288, 29.8396, 0.4804 ) }
    dend_0 { pt3dadd( 319.963, 201.919, 30.0177, 0.458 ) }
    dend_0 { pt3dadd( 318.884, 201.552, 30.1605, 0.433 ) }
    dend_0 { pt3dadd( 317.801, 201.184, 30.2498, 0.536 ) }
    dend_0 { pt3dadd( 316.738, 200.764, 30.2739, 0.4586 ) }
    dend_0 { pt3dadd( 315.687, 200.319, 30.2347, 0.473 ) }
    dend_0 { pt3dadd( 314.752, 199.682, 30.1258, 0.4202 ) }
    dend_0 { pt3dadd( 313.9, 198.939, 29.965, 0.4802 ) }
    dend_0 { pt3dadd( 312.97, 198.304, 29.8886, 0.5108 ) }
    dend_0 { pt3dadd( 312.031, 197.661, 29.8718, 0.5018 ) }
    dend_0 { pt3dadd( 310.952, 197.397, 29.7861, 0.5754 ) }
    dend_0 { pt3dadd( 309.815, 197.364, 29.7455, 0.732 ) }
    dend_0 { pt3dadd( 308.698, 197.133, 29.7368, 0.6942 ) }
    dend_0 { pt3dadd( 307.585, 196.882, 29.7385, 0.6152 ) }
    dend_0 { pt3dadd( 306.534, 196.458, 29.6607, 0.7406 ) }
    dend_0 { pt3dadd( 305.49, 196.014, 29.5229, 0.7984 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 353.385, 253.837, 30.6354, 1.0 ) }
    axon_1 { pt3dadd( 359.226, 267.653, 30.6354, 1.0 ) }
    axon_1 { pt3dadd( 365.068, 281.469, 30.6354, 1.0 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 70/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 344.508, 233.997, 24.4575, 0.408 ) }
    dend_44 { pt3dadd( 344.64, 235.236, 24.778, 0.4576 ) }
    dend_44 { pt3dadd( 344.066, 236.186, 24.4576, 0.3872 ) }
    dend_44 { pt3dadd( 343.342, 237.072, 24.3336, 0.3464 ) }
    dend_44 { pt3dadd( 342.255, 237.324, 24.1383, 0.386 ) }
    dend_44 { pt3dadd( 341.197, 237.7, 23.8307, 0.3584 ) }
    dend_44 { pt3dadd( 340.116, 237.975, 23.4142, 0.3402 ) }
    dend_44 { pt3dadd( 339.016, 238.059, 22.879, 0.3748 ) }
    dend_44 { pt3dadd( 337.907, 238.056, 22.2827, 0.3362 ) }
    dend_44 { pt3dadd( 336.803, 237.809, 21.7093, 0.305 ) }
    dend_44 { pt3dadd( 335.717, 237.491, 21.1694, 0.2796 ) }
    dend_44 { pt3dadd( 334.887, 236.901, 20.5632, 0.305 ) }
    dend_44 { pt3dadd( 333.823, 236.744, 19.2469, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 83/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 344.508, 233.997, 24.4575, 0.408 ) }
    dend_41 { pt3dadd( 344.816, 234.395, 24.5944, 0.3984 ) }
    dend_41 { pt3dadd( 345.598, 235.217, 24.7931, 0.4178 ) }
    dend_41 { pt3dadd( 346.454, 235.969, 24.9914, 0.5026 ) }
    dend_41 { pt3dadd( 347.281, 236.74, 25.2014, 0.6502 ) }
    dend_41 { pt3dadd( 347.941, 237.629, 25.4102, 0.5144 ) }
    dend_41 { pt3dadd( 348.378, 238.677, 25.5729, 0.419 ) }
    dend_41 { pt3dadd( 348.84, 239.701, 25.6304, 0.3978 ) }
    dend_41 { pt3dadd( 349.532, 240.544, 25.5339, 0.5188 ) }
    dend_41 { pt3dadd( 350.487, 241.109, 25.3676, 0.6508 ) }
    dend_41 { pt3dadd( 351.516, 241.604, 25.2087, 0.657 ) }
    dend_41 { pt3dadd( 352.417, 242.292, 25.0758, 0.6838 ) }
    dend_41 { pt3dadd( 353.109, 243.19, 24.9826, 0.6584 ) }
    dend_41 { pt3dadd( 353.302, 244.226, 24.995, 0.5178 ) }
    dend_41 { pt3dadd( 353.447, 245.286, 24.9819, 0.4822 ) }
    dend_41 { pt3dadd( 354.038, 246.224, 24.8971, 0.4678 ) }
    dend_41 { pt3dadd( 354.78, 247.095, 24.7879, 0.4192 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_41 { pt3dadd( 355.586, 247.902, 24.6607, 0.4362 ) }
    dend_41 { pt3dadd( 356.486, 248.589, 24.4823, 0.4052 ) }
    dend_41 { pt3dadd( 357.432, 249.195, 24.2417, 0.4228 ) }
    dend_41 { pt3dadd( 358.434, 249.734, 24.0213, 0.5478 ) }
    dend_41 { pt3dadd( 359.405, 250.333, 23.8446, 0.5606 ) }
    dend_41 { pt3dadd( 359.626, 251.331, 23.6974, 0.5022 ) }
    dend_41 { pt3dadd( 359.348, 252.435, 23.5707, 0.5646 ) }
    dend_41 { pt3dadd( 358.742, 253.394, 23.4566, 0.5376 ) }
    dend_41 { pt3dadd( 358.236, 254.413, 23.3295, 0.4946 ) }
    dend_41 { pt3dadd( 358.375, 255.44, 23.0783, 0.3798 ) }
    dend_41 { pt3dadd( 359.078, 256.31, 22.8372, 0.3376 ) }
    dend_41 { pt3dadd( 359.708, 257.244, 22.5752, 0.3462 ) }
    dend_41 { pt3dadd( 360.268, 258.223, 22.2974, 0.3976 ) }
    dend_41 { pt3dadd( 360.424, 259.296, 22.1863, 0.5496 ) }
    dend_41 { pt3dadd( 360.815, 260.359, 22.1258, 0.5578 ) }
    dend_41 { pt3dadd( 361.566, 261.198, 22.0205, 0.5268 ) }
    dend_41 { pt3dadd( 362.033, 262.214, 21.8417, 0.465 ) }
    dend_41 { pt3dadd( 362.21, 263.34, 21.6587, 0.3718 ) }
    dend_41 { pt3dadd( 362.061, 264.473, 21.4889, 0.3242 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 19/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 337.487, 250.482, 36.3395, 0.5872 ) }
    dend_31 { pt3dadd( 337.001, 251.174, 36.3852, 0.6864 ) }
    dend_31 { pt3dadd( 336.342, 252.11, 36.4482, 0.7088 ) }
    dend_31 { pt3dadd( 335.958, 253.179, 36.5361, 0.8482 ) }
    dend_31 { pt3dadd( 335.664, 254.284, 36.6472, 0.8596 ) }
    dend_31 { pt3dadd( 335.195, 255.312, 36.8211, 0.7078 ) }
    dend_31 { pt3dadd( 334.583, 256.245, 37.0723, 0.579 ) }
    dend_31 { pt3dadd( 333.76, 256.87, 37.441, 0.5152 ) }
    dend_31 { pt3dadd( 332.92, 257.524, 37.8627, 0.4616 ) }
    dend_31 { pt3dadd( 332.341, 258.428, 38.0335, 0.506 ) }
    dend_31 { pt3dadd( 331.724, 259.298, 37.9851, 0.5782 ) }
    dend_31 { pt3dadd( 331.126, 260.237, 37.8356, 0.5306 ) }
    dend_31 { pt3dadd( 330.533, 261.213, 37.7392, 0.4088 ) }
    dend_31 { pt3dadd( 329.956, 262.184, 37.7628, 0.3456 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 33/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 337.487, 250.482, 36.3395, 0.5872 ) }
    dend_24 { pt3dadd( 337.822, 251.616, 34.2331, 0.4576 ) }
    dend_24 { pt3dadd( 338.095, 252.705, 34.6987, 0.4608 ) }
    dend_24 { pt3dadd( 338.536, 253.727, 34.9101, 0.4734 ) }
    dend_24 { pt3dadd( 338.943, 254.777, 35.1403, 0.6668 ) }
    dend_24 { pt3dadd( 339.212, 255.88, 35.3833, 0.6586 ) }
    dend_24 { pt3dadd( 339.564, 256.958, 35.6121, 0.594 ) }
    dend_24 { pt3dadd( 340.001, 258.012, 35.8039, 0.714 ) }
    dend_24 { pt3dadd( 340.297, 259.107, 35.9369, 0.6862 ) }
    dend_24 { pt3dadd( 340.436, 260.243, 36.0052, 0.7066 ) }
    dend_24 { pt3dadd( 340.37, 261.374, 36.0203, 0.6242 ) }
    dend_24 { pt3dadd( 340.049, 262.468, 35.9943, 0.5976 ) }
    dend_24 { pt3dadd( 339.949, 263.582, 35.9324, 0.6224 ) }
    dend_24 { pt3dadd( 340.349, 264.579, 35.7658, 0.5362 ) }
    dend_24 { pt3dadd( 340.777, 265.611, 35.569, 0.5606 ) }
    dend_24 { pt3dadd( 341.165, 266.686, 35.4138, 0.6272 ) }
    dend_24 { pt3dadd( 341.562, 267.759, 35.3086, 0.648 ) }
    dend_24 { pt3dadd( 341.959, 268.832, 35.2528, 0.4972 ) }
    dend_24 { pt3dadd( 342.353, 269.905, 35.2461, 0.4506 ) }
    dend_24 { pt3dadd( 342.471, 271.029, 35.285, 0.3776 ) }
    dend_24 { pt3dadd( 342.471, 272.172, 35.3522, 0.4064 ) }
    dend_24 { pt3dadd( 342.447, 273.314, 35.4519, 0.348 ) }
    dend_24 { pt3dadd( 342.346, 274.44, 35.6205, 0.3258 ) }
    dend_24 { pt3dadd( 342.316, 275.569, 35.842, 0.3234 ) }
    dend_24 { pt3dadd( 342.571, 276.671, 36.0573, 0.3608 ) }
    dend_24 { pt3dadd( 342.896, 277.767, 36.2519, 0.4558 ) }
    dend_24 { pt3dadd( 342.982, 278.889, 36.4566, 0.5078 ) }
    dend_24 { pt3dadd( 342.982, 280.02, 36.668, 0.519 ) }
    dend_24 { pt3dadd( 342.896, 281.155, 36.8416, 0.4972 ) }
    dend_24 { pt3dadd( 342.742, 282.288, 36.9611, 0.4338 ) }
    dend_24 { pt3dadd( 342.583, 283.421, 37.0384, 0.4284 ) }
    dend_24 { pt3dadd( 342.529, 284.524, 36.9961, 0.5594 ) }
    dend_24 { pt3dadd( 342.753, 285.622, 36.9065, 0.5758 ) }
    dend_24 { pt3dadd( 343.049, 286.681, 36.9331, 0.561 ) }
    dend_24 { pt3dadd( 343.505, 287.706, 37.0252, 0.5242 ) }
    dend_24 { pt3dadd( 343.764, 288.81, 37.1193, 0.5022 ) }
    dend_24 { pt3dadd( 343.414, 289.862, 37.1955, 0.4664 ) }
    dend_24 { pt3dadd( 343.493, 290.952, 37.2218, 0.3744 ) }
    dend_24 { pt3dadd( 343.993, 291.978, 37.2618, 0.328 ) }
    dend_24 { pt3dadd( 344.506, 293.001, 37.3153, 0.3274 ) }
    dend_24 { pt3dadd( 345.019, 294.024, 37.3982, 0.368 ) }
    dend_24 { pt3dadd( 345.56, 295.023, 37.5561, 0.4688 ) }
    dend_24 { pt3dadd( 346.122, 295.985, 37.812, 0.5332 ) }
    dend_24 { pt3dadd( 346.688, 296.945, 38.1298, 0.5616 ) }
    dend_24 { pt3dadd( 347.252, 297.905, 38.4667, 0.5968 ) }
    dend_24 { pt3dadd( 347.512, 299.014, 38.698, 0.5178 ) }
    dend_24 { pt3dadd( 347.712, 300.139, 38.8156, 0.3852 ) }
    dend_24 { pt3dadd( 347.91, 301.263, 38.8354, 0.301 ) }
    dend_24 { pt3dadd( 348.109, 302.388, 38.7792, 0.2764 ) }
    dend_24 { pt3dadd( 348.2, 303.527, 38.6826, 0.2778 ) }
    dend_24 { pt3dadd( 347.977, 304.647, 38.596, 0.2806 ) }
    dend_24 { pt3dadd( 347.747, 305.766, 38.5235, 0.2858 ) }
    dend_24 { pt3dadd( 347.517, 306.885, 38.4507, 0.2954 ) }
    dend_24 { pt3dadd( 347.54, 308.02, 38.295, 0.313 ) }
    dend_24 { pt3dadd( 347.673, 309.135, 38.0383, 0.3468 ) }
    dend_24 { pt3dadd( 347.806, 310.25, 37.702, 0.4034 ) }
    dend_24 { pt3dadd( 347.938, 311.365, 37.3103, 0.538 ) }
    dend_24 { pt3dadd( 347.825, 312.492, 36.9107, 0.6444 ) }
    dend_24 { pt3dadd( 347.677, 313.615, 36.5257, 0.8506 ) }
    dend_24 { pt3dadd( 347.527, 314.738, 36.1721, 0.7302 ) }
    dend_24 { pt3dadd( 347.378, 315.863, 35.8537, 0.6608 ) }
    dend_24 { pt3dadd( 347.219, 316.991, 35.5897, 0.4704 ) }
    dend_24 { pt3dadd( 347.056, 318.12, 35.3777, 0.417 ) }
    dend_24 { pt3dadd( 346.895, 319.25, 35.2089, 0.4656 ) }
    dend_24 { pt3dadd( 346.734, 320.379, 35.0764, 0.5264 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 98/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 360.637, 228.909, 30.5656, 0.363 ) }
    dend_22 { pt3dadd( 360.82, 229.43, 29.9824, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_22 { pt3dadd( 361.195, 230.497, 29.2802, 0.4908 ) }
    dend_22 { pt3dadd( 361.613, 231.536, 28.9688, 0.4374 ) }
    dend_22 { pt3dadd( 362.044, 232.571, 28.5869, 0.3592 ) }
    dend_22 { pt3dadd( 362.454, 233.632, 28.2136, 0.3416 ) }
    dend_22 { pt3dadd( 362.859, 234.702, 27.8703, 0.3772 ) }
    dend_22 { pt3dadd( 363.48, 235.576, 27.4529, 0.3408 ) }
    dend_22 { pt3dadd( 364.221, 236.372, 26.98, 0.3128 ) }
    dend_22 { pt3dadd( 365.056, 237.133, 26.5486, 0.2994 ) }
    dend_22 { pt3dadd( 365.908, 237.893, 26.179, 0.3152 ) }
    dend_22 { pt3dadd( 366.816, 238.587, 25.8682, 0.3756 ) }
    dend_22 { pt3dadd( 367.701, 239.31, 25.5943, 0.3378 ) }
    dend_22 { pt3dadd( 368.112, 240.286, 25.252, 0.3074 ) }
    dend_22 { pt3dadd( 368.04, 241.402, 24.9229, 0.288 ) }
    dend_22 { pt3dadd( 368.014, 242.543, 24.5998, 0.3006 ) }
    dend_22 { pt3dadd( 368.427, 243.571, 24.231, 0.3174 ) }
    dend_22 { pt3dadd( 368.951, 244.563, 23.8199, 0.3798 ) }
    dend_22 { pt3dadd( 369.518, 245.516, 23.3714, 0.3454 ) }
    dend_22 { pt3dadd( 370.12, 246.461, 22.929, 0.3224 ) }
    dend_22 { pt3dadd( 370.777, 247.39, 22.5448, 0.3108 ) }
    dend_22 { pt3dadd( 371.546, 248.182, 22.1577, 0.3672 ) }
    dend_22 { pt3dadd( 372.135, 249.147, 21.8701, 0.322 ) }
    dend_22 { pt3dadd( 372.295, 250.267, 21.6491, 0.2796 ) }
    dend_22 { pt3dadd( 372.599, 251.364, 21.4825, 0.2288 ) }
    dend_22 { pt3dadd( 373.204, 252.314, 21.5113, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 24/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 360.637, 228.909, 30.5656, 0.363 ) }
    dend_21 { pt3dadd( 361.004, 228.574, 30.5208, 0.3068 ) }
    dend_21 { pt3dadd( 361.839, 227.835, 30.5497, 0.2872 ) }
    dend_21 { pt3dadd( 362.801, 227.311, 30.7504, 0.2978 ) }
    dend_21 { pt3dadd( 363.811, 226.847, 31.0792, 0.3186 ) }
    dend_21 { pt3dadd( 364.911, 226.654, 31.4742, 0.3516 ) }
    dend_21 { pt3dadd( 365.974, 226.292, 31.9122, 0.4388 ) }
    dend_21 { pt3dadd( 366.689, 225.487, 32.3974, 0.4754 ) }
    dend_21 { pt3dadd( 367.408, 224.614, 32.8415, 0.464 ) }
    dend_21 { pt3dadd( 368.339, 224.002, 33.2592, 0.3702 ) }
    dend_21 { pt3dadd( 369.453, 223.914, 33.6314, 0.32 ) }
    dend_21 { pt3dadd( 370.493, 223.48, 33.9287, 0.313 ) }
    dend_21 { pt3dadd( 371.451, 222.856, 34.1664, 0.3402 ) }
    dend_21 { pt3dadd( 372.467, 222.451, 34.4596, 0.4226 ) }
    dend_21 { pt3dadd( 373.558, 222.264, 34.6108, 0.422 ) }
    dend_21 { pt3dadd( 374.579, 222.738, 34.7934, 0.4784 ) }
    dend_21 { pt3dadd( 375.671, 222.977, 35.0216, 0.5324 ) }
    dend_21 { pt3dadd( 376.75, 222.817, 35.3116, 0.42 ) }
    dend_21 { pt3dadd( 377.771, 223.271, 35.5384, 0.3282 ) }
    dend_21 { pt3dadd( 378.566, 224.034, 35.5933, 0.2796 ) }
    dend_21 { pt3dadd( 379.533, 224.628, 35.5953, 0.284 ) }
    dend_21 { pt3dadd( 380.572, 225.093, 35.6079, 0.2918 ) }
    dend_21 { pt3dadd( 381.639, 225.449, 35.6924, 0.3076 ) }
    dend_21 { pt3dadd( 382.713, 225.792, 35.8154, 0.3304 ) }
    dend_21 { pt3dadd( 383.768, 226.034, 35.8823, 0.405 ) }
    dend_21 { pt3dadd( 384.832, 225.727, 35.912, 0.3868 ) }
    dend_21 { pt3dadd( 385.934, 225.475, 36.0329, 0.4246 ) }
    dend_21 { pt3dadd( 387.053, 225.329, 36.2284, 0.3764 ) }
    dend_21 { pt3dadd( 388.165, 225.146, 36.4843, 0.4044 ) }
    dend_21 { pt3dadd( 389.269, 224.907, 36.7898, 0.3444 ) }
    dend_21 { pt3dadd( 390.344, 224.55, 37.1078, 0.3192 ) }
    dend_21 { pt3dadd( 391.385, 224.078, 37.3912, 0.3112 ) }
    dend_21 { pt3dadd( 392.461, 223.733, 37.6547, 0.3382 ) }
    dend_21 { pt3dadd( 393.573, 223.571, 37.9378, 0.413 ) }
    dend_21 { pt3dadd( 394.696, 223.455, 38.206, 0.4328 ) }
    dend_21 { pt3dadd( 395.84, 223.431, 38.4135, 0.3594 ) }
    dend_21 { pt3dadd( 396.98, 223.461, 38.5801, 0.3 ) }
    dend_21 { pt3dadd( 398.117, 223.602, 38.7192, 0.2746 ) }
    dend_21 { pt3dadd( 398.986, 224.265, 38.9458, 0.2746 ) }
    dend_21 { pt3dadd( 399.66, 225.158, 39.0488, 0.2746 ) }
    dend_21 { pt3dadd( 400.401, 226.017, 39.2081, 0.2746 ) }
    dend_21 { pt3dadd( 401.161, 226.853, 39.4268, 0.2746 ) }
    dend_21 { pt3dadd( 402.036, 227.586, 39.6567, 0.2746 ) }
    dend_21 { pt3dadd( 402.988, 228.221, 39.8686, 0.2746 ) }
    dend_21 { pt3dadd( 403.835, 228.974, 40.1159, 0.2748 ) }
    dend_21 { pt3dadd( 404.558, 229.822, 40.4418, 0.275 ) }
    dend_21 { pt3dadd( 405.228, 230.747, 40.7392, 0.2752 ) }
    dend_21 { pt3dadd( 405.897, 231.669, 41.0015, 0.276 ) }
    dend_21 { pt3dadd( 406.789, 232.329, 41.326, 0.277 ) }
    dend_21 { pt3dadd( 407.876, 232.604, 41.6707, 0.2792 ) }
    dend_21 { pt3dadd( 409.02, 232.573, 41.9594, 0.2832 ) }
    dend_21 { pt3dadd( 410.161, 232.513, 42.2134, 0.2908 ) }
    dend_21 { pt3dadd( 411.299, 232.439, 42.4735, 0.3044 ) }
    dend_21 { pt3dadd( 412.41, 232.297, 42.8114, 0.3306 ) }
    dend_21 { pt3dadd( 413.521, 232.194, 43.2046, 0.3752 ) }
    dend_21 { pt3dadd( 414.635, 232.366, 43.6338, 0.4762 ) }
    dend_21 { pt3dadd( 415.747, 232.517, 44.0938, 0.5762 ) }
    dend_21 { pt3dadd( 416.867, 232.39, 44.5726, 0.497 ) }
    dend_21 { pt3dadd( 417.978, 232.225, 45.054, 0.4922 ) }
    dend_21 { pt3dadd( 419.1, 232.286, 45.5235, 0.48 ) }
    dend_21 { pt3dadd( 420.214, 232.428, 45.9729, 0.4726 ) }
    dend_21 { pt3dadd( 421.296, 232.572, 46.4237, 0.386 ) }
    dend_21 { pt3dadd( 422.28, 232.63, 46.9414, 0.3502 ) }
    dend_21 { pt3dadd( 423.384, 232.748, 47.3245, 0.3644 ) }
    dend_21 { pt3dadd( 424.366, 233.195, 47.4328, 0.4564 ) }
    dend_21 { pt3dadd( 425.285, 233.678, 47.315, 0.5386 ) }
    dend_21 { pt3dadd( 426.371, 234.027, 47.1598, 0.4314 ) }
    dend_21 { pt3dadd( 427.377, 234.496, 47.056, 0.3504 ) }
    dend_21 { pt3dadd( 428.247, 235.167, 47.0742, 0.3156 ) }
    dend_21 { pt3dadd( 429.254, 235.699, 47.1512, 0.3762 ) }
    dend_21 { pt3dadd( 430.321, 236.099, 47.2408, 0.3388 ) }
    dend_21 { pt3dadd( 431.321, 236.387, 47.2172, 0.3094 ) }
    dend_21 { pt3dadd( 431.822, 237.007, 47.1377, 0.2916 ) }
    dend_21 { pt3dadd( 432.352, 237.609, 47.2822, 0.3074 ) }
    dend_21 { pt3dadd( 433.352, 237.91, 47.5297, 0.33 ) }
    dend_21 { pt3dadd( 434.409, 238.318, 47.7176, 0.4038 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( 435.43, 238.787, 47.7862, 0.385 ) }
    dend_21 { pt3dadd( 436.438, 239.3, 47.7747, 0.4202 ) }
    dend_21 { pt3dadd( 437.365, 239.89, 47.6504, 0.3744 ) }
    dend_21 { pt3dadd( 438.191, 240.616, 47.5328, 0.371 ) }
    dend_21 { pt3dadd( 439.16, 241.136, 47.5378, 0.4266 ) }
    dend_21 { pt3dadd( 440.279, 241.277, 47.6171, 0.4578 ) }
    dend_21 { pt3dadd( 441.423, 241.254, 47.7428, 0.4078 ) }
    dend_21 { pt3dadd( 442.566, 241.206, 47.9044, 0.3794 ) }
    dend_21 { pt3dadd( 443.702, 241.263, 48.123, 0.473 ) }
    dend_21 { pt3dadd( 444.816, 241.445, 48.4134, 0.3944 ) }
    dend_21 { pt3dadd( 445.913, 241.732, 48.755, 0.3278 ) }
    dend_21 { pt3dadd( 446.983, 242.129, 49.1221, 0.279 ) }
    dend_21 { pt3dadd( 448.045, 242.522, 49.5482, 0.2828 ) }
    dend_21 { pt3dadd( 449.074, 242.806, 50.113, 0.2894 ) }
    dend_21 { pt3dadd( 450.132, 242.991, 50.7788, 0.3032 ) }
    dend_21 { pt3dadd( 451.239, 243.084, 51.4758, 0.3226 ) }
    dend_21 { pt3dadd( 452.361, 243.131, 52.1872, 0.389 ) }
    dend_21 { pt3dadd( 453.488, 243.094, 52.9068, 0.3636 ) }
    dend_21 { pt3dadd( 454.616, 243.029, 53.6304, 0.35 ) }
    dend_21 { pt3dadd( 455.645, 242.744, 54.4292, 0.3926 ) }
    dend_21 { pt3dadd( 456.614, 242.38, 55.3423, 0.3704 ) }
    dend_21 { pt3dadd( 457.531, 242.268, 56.4085, 0.3634 ) }
    dend_21 { pt3dadd( 458.473, 242.25, 57.5803, 0.4124 ) }
    dend_21 { pt3dadd( 459.561, 242.319, 58.681, 0.4318 ) }
    dend_21 { pt3dadd( 460.616, 242.586, 59.7279, 0.3574 ) }
    dend_21 { pt3dadd( 461.603, 242.455, 60.7866, 0.2966 ) }
    dend_21 { pt3dadd( 462.449, 241.891, 61.8178, 0.2684 ) }
    dend_21 { pt3dadd( 463.143, 241.168, 62.8158, 0.2626 ) }
    dend_21 { pt3dadd( 463.987, 240.876, 63.8226, 0.2542 ) }
    dend_21 { pt3dadd( 465.115, 240.866, 64.6229, 0.2288 ) }
    dend_21 { pt3dadd( 466.161, 241.323, 65.6662, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 378.465, 225.218, 43.8396, 0.364 ) }
    dend_19 { pt3dadd( 378.743, 225.217, 44.3097, 0.4134 ) }
    dend_19 { pt3dadd( 379.776, 225.212, 44.8549, 0.4336 ) }
    dend_19 { pt3dadd( 380.894, 225.139, 45.3726, 0.3608 ) }
    dend_19 { pt3dadd( 381.996, 225.01, 45.7898, 0.3026 ) }
    dend_19 { pt3dadd( 382.996, 225.2, 46.1653, 0.2794 ) }
    dend_19 { pt3dadd( 383.82, 225.85, 46.6276, 0.2836 ) }
    dend_19 { pt3dadd( 384.76, 226.43, 47.0282, 0.291 ) }
    dend_19 { pt3dadd( 385.812, 226.435, 47.4348, 0.3062 ) }
    dend_19 { pt3dadd( 386.583, 226.84, 47.9623, 0.328 ) }
    dend_19 { pt3dadd( 387.254, 227.522, 48.2219, 0.3988 ) }
    dend_19 { pt3dadd( 388.258, 228.022, 48.4392, 0.3832 ) }
    dend_19 { pt3dadd( 389.355, 228.103, 48.5996, 0.3808 ) }
    dend_19 { pt3dadd( 390.344, 227.704, 48.7606, 0.4754 ) }
    dend_19 { pt3dadd( 391.273, 227.125, 48.9866, 0.399 ) }
    dend_19 { pt3dadd( 392.35, 226.98, 49.222, 0.336 ) }
    dend_19 { pt3dadd( 393.483, 227.055, 49.513, 0.2942 ) }
    dend_19 { pt3dadd( 394.615, 227.19, 49.8016, 0.3116 ) }
    dend_19 { pt3dadd( 395.594, 226.832, 50.1052, 0.3392 ) }
    dend_19 { pt3dadd( 396.531, 226.196, 50.451, 0.4146 ) }
    dend_19 { pt3dadd( 397.522, 225.659, 50.8438, 0.4358 ) }
    dend_19 { pt3dadd( 398.463, 225.233, 51.3764, 0.365 ) }
    dend_19 { pt3dadd( 399.505, 224.868, 51.9229, 0.3104 ) }
    dend_19 { pt3dadd( 400.595, 224.598, 52.4555, 0.2938 ) }
    dend_19 { pt3dadd( 401.665, 224.261, 52.9556, 0.3112 ) }
    dend_19 { pt3dadd( 402.569, 223.582, 53.3683, 0.3382 ) }
    dend_19 { pt3dadd( 403.467, 222.91, 53.7558, 0.413 ) }
    dend_19 { pt3dadd( 404.457, 222.334, 54.0408, 0.4328 ) }
    dend_19 { pt3dadd( 405.54, 221.993, 54.2357, 0.3594 ) }
    dend_19 { pt3dadd( 406.616, 221.674, 54.483, 0.3 ) }
    dend_19 { pt3dadd( 407.691, 221.353, 54.7728, 0.2746 ) }
    dend_19 { pt3dadd( 408.746, 220.946, 55.0771, 0.2746 ) }
    dend_19 { pt3dadd( 409.712, 220.335, 55.3389, 0.2746 ) }
    dend_19 { pt3dadd( 410.671, 219.711, 55.5778, 0.2746 ) }
    dend_19 { pt3dadd( 411.608, 219.054, 55.7953, 0.2746 ) }
    dend_19 { pt3dadd( 412.571, 218.438, 55.9952, 0.2746 ) }
    dend_19 { pt3dadd( 413.646, 218.065, 56.2215, 0.2746 ) }
    dend_19 { pt3dadd( 414.737, 218.163, 56.5737, 0.2746 ) }
    dend_19 { pt3dadd( 415.743, 218.475, 57.0685, 0.2746 ) }
    dend_19 { pt3dadd( 416.824, 218.832, 57.5481, 0.2748 ) }
    dend_19 { pt3dadd( 417.939, 219.094, 57.9799, 0.2748 ) }
    dend_19 { pt3dadd( 419.051, 219.353, 58.3862, 0.2752 ) }
    dend_19 { pt3dadd( 420.145, 219.578, 58.8526, 0.2756 ) }
    dend_19 { pt3dadd( 421.236, 219.782, 59.3656, 0.2766 ) }
    dend_19 { pt3dadd( 422.286, 219.776, 59.9785, 0.2782 ) }
    dend_19 { pt3dadd( 423.314, 219.719, 60.6805, 0.2814 ) }
    dend_19 { pt3dadd( 424.206, 219.384, 61.4664, 0.287 ) }
    dend_19 { pt3dadd( 425.321, 219.406, 62.0858, 0.2988 ) }
    dend_19 { pt3dadd( 426.332, 219.741, 62.4047, 0.3142 ) }
    dend_19 { pt3dadd( 427.381, 220.131, 62.6388, 0.3734 ) }
    dend_19 { pt3dadd( 428.421, 220.235, 62.9451, 0.3338 ) }
    dend_19 { pt3dadd( 429.39, 220.074, 63.3595, 0.3 ) }
    dend_19 { pt3dadd( 430.375, 219.715, 63.7112, 0.2746 ) }
    dend_19 { pt3dadd( 431.397, 219.498, 63.8462, 0.2746 ) }
    dend_19 { pt3dadd( 432.393, 219.775, 63.8448, 0.2746 ) }
    dend_19 { pt3dadd( 433.394, 220.169, 63.7941, 0.2744 ) }
    dend_19 { pt3dadd( 434.465, 220.26, 63.8862, 0.2744 ) }
    dend_19 { pt3dadd( 435.223, 220.497, 64.2785, 0.2742 ) }
    dend_19 { pt3dadd( 435.958, 221.04, 64.8586, 0.274 ) }
    dend_19 { pt3dadd( 436.917, 221.628, 65.4315, 0.2736 ) }
    dend_19 { pt3dadd( 437.947, 221.947, 65.8202, 0.2728 ) }
    dend_19 { pt3dadd( 438.849, 221.494, 66.01, 0.2712 ) }
    dend_19 { pt3dadd( 439.76, 220.873, 66.1503, 0.2684 ) }
    dend_19 { pt3dadd( 440.673, 220.647, 66.3883, 0.2626 ) }
    dend_19 { pt3dadd( 441.698, 220.401, 66.6291, 0.2542 ) }
    dend_19 { pt3dadd( 442.506, 220.495, 66.5204, 0.2288 ) }
    dend_19 { pt3dadd( 443.266, 221.175, 65.6662, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 98/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 378.465, 225.218, 43.8396, 0.364 ) }
    dend_18 { pt3dadd( 378.773, 224.92, 43.2474, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_18 { pt3dadd( 379.657, 224.27, 42.8154, 0.4994 ) }
    dend_18 { pt3dadd( 380.737, 224.004, 42.6922, 0.4612 ) }
    dend_18 { pt3dadd( 381.812, 223.993, 42.5076, 0.365 ) }
    dend_18 { pt3dadd( 382.829, 223.844, 42.2402, 0.3104 ) }
    dend_18 { pt3dadd( 383.909, 223.772, 42.1408, 0.2938 ) }
    dend_18 { pt3dadd( 384.97, 223.619, 42.184, 0.3112 ) }
    dend_18 { pt3dadd( 386.091, 223.426, 42.2338, 0.3382 ) }
    dend_18 { pt3dadd( 386.977, 223.101, 42.0549, 0.413 ) }
    dend_18 { pt3dadd( 388.008, 222.947, 41.774, 0.4328 ) }
    dend_18 { pt3dadd( 389.138, 222.883, 41.5629, 0.3594 ) }
    dend_18 { pt3dadd( 390.044, 222.279, 41.3666, 0.3002 ) }
    dend_18 { pt3dadd( 390.959, 221.673, 41.1068, 0.2748 ) }
    dend_18 { pt3dadd( 392.035, 221.433, 40.8534, 0.275 ) }
    dend_18 { pt3dadd( 393.168, 221.504, 40.7148, 0.2754 ) }
    dend_18 { pt3dadd( 394.29, 221.366, 40.7128, 0.2762 ) }
    dend_18 { pt3dadd( 395.223, 220.785, 40.8587, 0.2776 ) }
    dend_18 { pt3dadd( 395.996, 219.951, 41.0648, 0.2802 ) }
    dend_18 { pt3dadd( 396.632, 219.002, 41.3017, 0.285 ) }
    dend_18 { pt3dadd( 397.319, 218.101, 41.6007, 0.2938 ) }
    dend_18 { pt3dadd( 398.375, 217.887, 41.7892, 0.31 ) }
    dend_18 { pt3dadd( 399.223, 217.455, 42.2008, 0.3422 ) }
    dend_18 { pt3dadd( 399.9, 216.595, 42.6798, 0.3902 ) }
    dend_18 { pt3dadd( 400.681, 215.831, 43.1878, 0.536 ) }
    dend_18 { pt3dadd( 401.657, 215.234, 43.6078, 0.5316 ) }
    dend_18 { pt3dadd( 402.53, 214.532, 43.9704, 0.4836 ) }
    dend_18 { pt3dadd( 403.15, 213.596, 44.3167, 0.3594 ) }
    dend_18 { pt3dadd( 403.672, 212.647, 44.6379, 0.3002 ) }
    dend_18 { pt3dadd( 404.055, 211.585, 44.8748, 0.2748 ) }
    dend_18 { pt3dadd( 404.77, 210.736, 45.0632, 0.2752 ) }
    dend_18 { pt3dadd( 405.741, 210.137, 45.1758, 0.2756 ) }
    dend_18 { pt3dadd( 406.76, 209.623, 45.201, 0.2766 ) }
    dend_18 { pt3dadd( 407.812, 209.23, 45.1139, 0.2784 ) }
    dend_18 { pt3dadd( 408.897, 208.965, 44.9274, 0.2818 ) }
    dend_18 { pt3dadd( 409.917, 208.521, 44.7356, 0.2878 ) }
    dend_18 { pt3dadd( 410.845, 207.852, 44.6104, 0.3002 ) }
    dend_18 { pt3dadd( 411.665, 207.072, 44.5589, 0.3168 ) }
    dend_18 { pt3dadd( 412.355, 206.16, 44.5802, 0.3784 ) }
    dend_18 { pt3dadd( 413.096, 205.314, 44.7059, 0.343 ) }
    dend_18 { pt3dadd( 413.866, 204.52, 44.9518, 0.317 ) }
    dend_18 { pt3dadd( 414.553, 203.646, 45.2519, 0.3058 ) }
    dend_18 { pt3dadd( 415.108, 202.665, 45.5353, 0.3346 ) }
    dend_18 { pt3dadd( 415.612, 201.67, 45.6893, 0.3754 ) }
    dend_18 { pt3dadd( 416.294, 200.802, 45.7008, 0.5122 ) }
    dend_18 { pt3dadd( 417.17, 200.09, 45.6994, 0.469 ) }
    dend_18 { pt3dadd( 418.13, 199.483, 45.7114, 0.4566 ) }
    dend_18 { pt3dadd( 419.122, 198.92, 45.6918, 0.5632 ) }
    dend_18 { pt3dadd( 420.1, 198.335, 45.6803, 0.5904 ) }
    dend_18 { pt3dadd( 421.079, 197.751, 45.6943, 0.551 ) }
    dend_18 { pt3dadd( 422.1, 197.261, 45.6582, 0.6864 ) }
    dend_18 { pt3dadd( 423.105, 196.74, 45.5524, 0.612 ) }
    dend_18 { pt3dadd( 424.034, 196.081, 45.4241, 0.6816 ) }
    dend_18 { pt3dadd( 424.922, 195.411, 45.3622, 0.7176 ) }
    dend_18 { pt3dadd( 425.91, 195.026, 45.3944, 0.5496 ) }
    dend_18 { pt3dadd( 426.816, 194.606, 45.2455, 0.4624 ) }
    dend_18 { pt3dadd( 427.609, 193.988, 44.8843, 0.357 ) }
    dend_18 { pt3dadd( 428.398, 193.315, 44.4156, 0.345 ) }
    dend_18 { pt3dadd( 429.311, 192.742, 43.9239, 0.3474 ) }
    dend_18 { pt3dadd( 430.316, 192.227, 43.5246, 0.4604 ) }
    dend_18 { pt3dadd( 431.234, 191.558, 43.2606, 0.3728 ) }
    dend_18 { pt3dadd( 432.174, 191.726, 43.3404, 0.2796 ) }
    dend_18 { pt3dadd( 433.191, 191.411, 44.1549, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 61/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 377.652, 218.179, 60.8818, 0.3338 ) }
    dend_16 { pt3dadd( 378.272, 218.038, 61.6249, 0.2288 ) }
    dend_16 { pt3dadd( 379.316, 217.703, 61.4258, 0.2742 ) }
    dend_16 { pt3dadd( 380.267, 217.136, 61.3673, 0.274 ) }
    dend_16 { pt3dadd( 380.867, 216.194, 61.1705, 0.2736 ) }
    dend_16 { pt3dadd( 381.384, 215.373, 60.7085, 0.2728 ) }
    dend_16 { pt3dadd( 382.04, 215.225, 59.9488, 0.2712 ) }
    dend_16 { pt3dadd( 383.039, 215.555, 59.1732, 0.2684 ) }
    dend_16 { pt3dadd( 384.055, 216.019, 58.4783, 0.2626 ) }
    dend_16 { pt3dadd( 385.168, 216.233, 57.9387, 0.2542 ) }
    dend_16 { pt3dadd( 386.275, 216.46, 57.6688, 0.2288 ) }
    dend_16 { pt3dadd( 387.4, 216.596, 57.7408, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 377.652, 218.179, 60.8818, 0.3338 ) }
    dend_15 { pt3dadd( 377.935, 218.737, 61.1596, 0.3 ) }
    dend_15 { pt3dadd( 378.885, 219.075, 61.5082, 0.2746 ) }
    dend_15 { pt3dadd( 379.911, 219.547, 61.7518, 0.2744 ) }
    dend_15 { pt3dadd( 380.872, 219.989, 62.0032, 0.2744 ) }
    dend_15 { pt3dadd( 381.227, 220.993, 62.1734, 0.2742 ) }
    dend_15 { pt3dadd( 381.943, 221.775, 62.4022, 0.274 ) }
    dend_15 { pt3dadd( 382.375, 222.606, 62.7113, 0.2736 ) }
    dend_15 { pt3dadd( 382.883, 223.449, 63.0316, 0.2728 ) }
    dend_15 { pt3dadd( 383.362, 224.11, 63.0708, 0.2712 ) }
    dend_15 { pt3dadd( 384.04, 224.733, 63.1406, 0.2684 ) }
    dend_15 { pt3dadd( 384.549, 225.184, 63.4203, 0.2626 ) }
    dend_15 { pt3dadd( 385.51, 225.671, 63.541, 0.2542 ) }
    dend_15 { pt3dadd( 386.316, 226.327, 63.5656, 0.2288 ) }
    dend_15 { pt3dadd( 386.443, 227.427, 63.56, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_3 (entry count 88/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 332.398, 220.768, 29.1808, 0.725 ) }
    dend_13 { pt3dadd( 331.815, 220.082, 30.8781, 0.4576 ) }
    dend_13 { pt3dadd( 330.887, 219.534, 31.0405, 0.3866 ) }
    dend_13 { pt3dadd( 329.772, 219.337, 31.1212, 0.3516 ) }
    dend_13 { pt3dadd( 328.868, 218.705, 31.1058, 0.3646 ) }
    dend_13 { pt3dadd( 328.44, 217.892, 30.8582, 0.469 ) }
    dend_13 { pt3dadd( 327.646, 217.076, 30.6648, 0.5024 ) }
    dend_13 { pt3dadd( 326.821, 216.507, 30.7555, 0.655 ) }
    dend_13 { pt3dadd( 325.969, 215.794, 30.933, 0.726 ) }
    dend_13 { pt3dadd( 325.285, 214.924, 31.054, 0.7424 ) }
    dend_13 { pt3dadd( 324.664, 213.981, 31.2609, 0.6454 ) }
    dend_13 { pt3dadd( 323.793, 213.298, 31.5871, 0.626 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_13 { pt3dadd( 322.773, 212.961, 31.9992, 0.4988 ) }
    dend_13 { pt3dadd( 321.68, 212.881, 32.4397, 0.4776 ) }
    dend_13 { pt3dadd( 320.693, 212.479, 32.846, 0.5398 ) }
    dend_13 { pt3dadd( 319.852, 211.757, 33.1282, 0.8476 ) }
    dend_13 { pt3dadd( 318.836, 211.333, 33.4009, 0.943 ) }
    dend_13 { pt3dadd( 317.783, 211.126, 33.6764, 0.6818 ) }
    dend_13 { pt3dadd( 316.658, 210.966, 33.8282, 0.4924 ) }
    dend_13 { pt3dadd( 315.591, 210.582, 33.8892, 0.5416 ) }
    dend_13 { pt3dadd( 314.535, 210.145, 33.9125, 0.5182 ) }
    dend_13 { pt3dadd( 313.471, 209.726, 33.908, 0.5744 ) }
    dend_13 { pt3dadd( 312.447, 209.226, 33.8545, 0.6522 ) }
    dend_13 { pt3dadd( 311.488, 208.608, 33.7865, 0.6966 ) }
    dend_13 { pt3dadd( 310.587, 207.908, 33.7506, 0.5766 ) }
    dend_13 { pt3dadd( 309.632, 207.29, 33.7271, 0.649 ) }
    dend_13 { pt3dadd( 308.607, 206.784, 33.6927, 0.4974 ) }
    dend_13 { pt3dadd( 307.604, 206.237, 33.6347, 0.4598 ) }
    dend_13 { pt3dadd( 306.65, 205.615, 33.5504, 0.3526 ) }
    dend_13 { pt3dadd( 305.878, 205.017, 33.3239, 0.3342 ) }
    dend_13 { pt3dadd( 304.967, 204.515, 33.0896, 0.3398 ) }
    dend_13 { pt3dadd( 303.862, 204.274, 32.9848, 0.3862 ) }
    dend_13 { pt3dadd( 302.78, 204.232, 33.1038, 0.5274 ) }
    dend_13 { pt3dadd( 301.803, 204.155, 33.4891, 0.5204 ) }
    dend_13 { pt3dadd( 300.915, 203.815, 34.0718, 0.4394 ) }
    dend_13 { pt3dadd( 299.872, 203.525, 34.5982, 0.391 ) }
    dend_13 { pt3dadd( 298.788, 203.714, 34.9096, 0.4942 ) }
    dend_13 { pt3dadd( 297.665, 203.812, 35.0462, 0.4346 ) }
    dend_13 { pt3dadd( 296.661, 204.296, 35.0498, 0.398 ) }
    dend_13 { pt3dadd( 295.917, 205.116, 35.1036, 0.4292 ) }
    dend_13 { pt3dadd( 295.012, 205.807, 35.1599, 0.464 ) }
    dend_13 { pt3dadd( 294.173, 206.582, 35.2503, 0.4122 ) }
    dend_13 { pt3dadd( 293.342, 207.369, 35.3791, 0.4232 ) }
    dend_13 { pt3dadd( 292.533, 208.176, 35.5303, 0.3802 ) }
    dend_13 { pt3dadd( 291.926, 209.128, 35.74, 0.3802 ) }
    dend_13 { pt3dadd( 291.388, 210.125, 35.975, 0.4506 ) }
    dend_13 { pt3dadd( 290.781, 211.093, 36.1973, 0.4684 ) }
    dend_13 { pt3dadd( 290.094, 212.008, 36.4123, 0.5898 ) }
    dend_13 { pt3dadd( 289.505, 212.989, 36.626, 0.6162 ) }
    dend_13 { pt3dadd( 288.918, 213.971, 36.848, 0.4858 ) }
    dend_13 { pt3dadd( 287.837, 214.327, 37.0938, 0.4284 ) }
    dend_13 { pt3dadd( 286.845, 214.724, 37.5183, 0.3414 ) }
    dend_13 { pt3dadd( 285.939, 215.216, 38.1142, 0.314 ) }
    dend_13 { pt3dadd( 284.877, 215.62, 38.6949, 0.3002 ) }
    dend_13 { pt3dadd( 283.743, 215.738, 39.2641, 0.3242 ) }
    dend_13 { pt3dadd( 282.637, 215.856, 39.9003, 0.356 ) }
    dend_13 { pt3dadd( 281.608, 215.787, 40.6574, 0.4766 ) }
    dend_13 { pt3dadd( 280.781, 215.615, 41.5853, 0.4012 ) }
    dend_13 { pt3dadd( 280.026, 215.266, 42.5989, 0.34 ) }
    dend_13 { pt3dadd( 279.01, 214.793, 43.4638, 0.3016 ) }
    dend_13 { pt3dadd( 277.986, 214.391, 44.1868, 0.3254 ) }
    dend_13 { pt3dadd( 277.272, 213.568, 44.8087, 0.3658 ) }
    dend_13 { pt3dadd( 276.771, 212.544, 45.2858, 0.4588 ) }
    dend_13 { pt3dadd( 276.189, 211.57, 45.6663, 0.5432 ) }
    dend_13 { pt3dadd( 275.447, 210.728, 46.0272, 0.4398 ) }
    dend_13 { pt3dadd( 274.557, 210.026, 46.3784, 0.3656 ) }
    dend_13 { pt3dadd( 273.573, 209.466, 46.6598, 0.3452 ) }
    dend_13 { pt3dadd( 272.568, 209.191, 47.0086, 0.4254 ) }
    dend_13 { pt3dadd( 271.583, 208.867, 47.4785, 0.457 ) }
    dend_13 { pt3dadd( 270.579, 208.389, 47.973, 0.3988 ) }
    dend_13 { pt3dadd( 269.576, 207.866, 48.424, 0.399 ) }
    dend_13 { pt3dadd( 268.573, 207.316, 48.8046, 0.334 ) }
    dend_13 { pt3dadd( 267.576, 206.781, 49.1616, 0.3002 ) }
    dend_13 { pt3dadd( 266.591, 206.242, 49.5062, 0.2752 ) }
    dend_13 { pt3dadd( 265.634, 205.643, 49.8294, 0.2756 ) }
    dend_13 { pt3dadd( 264.642, 205.092, 50.1074, 0.2766 ) }
    dend_13 { pt3dadd( 263.577, 204.707, 50.2936, 0.2782 ) }
    dend_13 { pt3dadd( 262.595, 204.183, 50.4692, 0.2814 ) }
    dend_13 { pt3dadd( 261.678, 203.529, 50.6839, 0.2872 ) }
    dend_13 { pt3dadd( 260.713, 202.956, 50.9312, 0.299 ) }
    dend_13 { pt3dadd( 259.709, 202.454, 51.2064, 0.3146 ) }
    dend_13 { pt3dadd( 258.746, 201.875, 51.4111, 0.3744 ) }
    dend_13 { pt3dadd( 257.799, 201.249, 51.5178, 0.3358 ) }
    dend_13 { pt3dadd( 256.82, 200.698, 51.627, 0.3036 ) }
    dend_13 { pt3dadd( 255.765, 200.302, 51.7577, 0.2814 ) }
    dend_13 { pt3dadd( 254.642, 200.155, 51.8636, 0.287 ) }
    dend_13 { pt3dadd( 253.499, 200.12, 51.9322, 0.2988 ) }
    dend_13 { pt3dadd( 252.356, 200.111, 51.9708, 0.3142 ) }
    dend_13 { pt3dadd( 251.214, 200.063, 51.9954, 0.3734 ) }
    dend_13 { pt3dadd( 250.084, 199.906, 52.031, 0.3338 ) }
    dend_13 { pt3dadd( 248.96, 199.706, 52.0923, 0.3 ) }
    dend_13 { pt3dadd( 247.843, 199.463, 52.1732, 0.2746 ) }
    dend_13 { pt3dadd( 246.73, 199.201, 52.2732, 0.2746 ) }
    dend_13 { pt3dadd( 245.711, 198.712, 52.3953, 0.2746 ) }
    dend_13 { pt3dadd( 244.713, 198.152, 52.5392, 0.2746 ) }
    dend_13 { pt3dadd( 243.642, 197.766, 52.7058, 0.2746 ) }
    dend_13 { pt3dadd( 242.633, 197.715, 53.0426, 0.2746 ) }
    dend_13 { pt3dadd( 241.543, 197.776, 53.4554, 0.2746 ) }
    dend_13 { pt3dadd( 240.407, 197.805, 53.8661, 0.2746 ) }
    dend_13 { pt3dadd( 239.266, 197.832, 54.2489, 0.2746 ) }
    dend_13 { pt3dadd( 238.132, 197.954, 54.5919, 0.2744 ) }
    dend_13 { pt3dadd( 237.07, 198.288, 54.9587, 0.2744 ) }
    dend_13 { pt3dadd( 236.402, 199.143, 55.3151, 0.2742 ) }
    dend_13 { pt3dadd( 236.165, 200.257, 55.6156, 0.274 ) }
    dend_13 { pt3dadd( 235.766, 201.311, 55.9457, 0.2736 ) }
    dend_13 { pt3dadd( 235.339, 202.351, 56.3077, 0.2728 ) }
    dend_13 { pt3dadd( 234.879, 203.398, 56.6409, 0.2712 ) }
    dend_13 { pt3dadd( 234.417, 204.443, 56.9383, 0.2684 ) }
    dend_13 { pt3dadd( 233.901, 205.444, 57.2698, 0.2626 ) }
    dend_13 { pt3dadd( 233.34, 206.418, 57.629, 0.2542 ) }
    dend_13 { pt3dadd( 232.429, 207.057, 57.997, 0.2288 ) }
    dend_13 { pt3dadd( 231.707, 207.896, 58.8731, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 0/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 332.398, 220.768, 29.1808, 0.725 ) }
    dend_4 { pt3dadd( 330.698, 220.744, 28.8882, 0.6648 ) }
    dend_4 { pt3dadd( 329.652, 221.097, 28.6194, 0.4866 ) }
    dend_4 { pt3dadd( 328.642, 221.624, 28.3441, 0.405 ) }
    dend_4 { pt3dadd( 327.54, 221.917, 28.0874, 0.4186 ) }
    dend_4 { pt3dadd( 326.496, 221.484, 27.8313, 0.5584 ) }
    dend_4 { pt3dadd( 325.502, 221.03, 27.4812, 0.7188 ) }
    dend_4 { pt3dadd( 324.441, 220.702, 27.0942, 0.809 ) }
    dend_4 { pt3dadd( 323.308, 220.633, 26.7385, 0.8398 ) }
    dend_4 { pt3dadd( 322.173, 220.57, 26.4088, 0.872 ) }
    dend_4 { pt3dadd( 321.22, 219.943, 26.1523, 0.8234 ) }
    dend_4 { pt3dadd( 320.086, 219.801, 25.9684, 0.5722 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 305.49, 196.014, 29.5229, 0.7984 ) }
    dend_2 { pt3dadd( 304.773, 195.367, 29.3054, 0.6098 ) }
    dend_2 { pt3dadd( 303.947, 194.609, 29.122, 0.552 ) }
    dend_2 { pt3dadd( 303.064, 193.902, 29.0298, 0.3994 ) }
    dend_2 { pt3dadd( 302.03, 193.468, 28.9918, 0.337 ) }
    dend_2 { pt3dadd( 300.982, 193.023, 28.9671, 0.296 ) }
    dend_2 { pt3dadd( 299.997, 192.444, 28.9201, 0.3152 ) }
    dend_2 { pt3dadd( 299.112, 191.766, 28.7725, 0.3458 ) }
    dend_2 { pt3dadd( 298.344, 191.037, 28.4701, 0.427 ) }
    dend_2 { pt3dadd( 297.503, 190.308, 28.1453, 0.4584 ) }
    dend_2 { pt3dadd( 296.616, 189.589, 27.874, 0.4092 ) }
    dend_2 { pt3dadd( 295.658, 188.972, 27.6999, 0.382 ) }
    dend_2 { pt3dadd( 294.665, 188.402, 27.6406, 0.4776 ) }
    dend_2 { pt3dadd( 293.603, 188.108, 27.7539, 0.403 ) }
    dend_2 { pt3dadd( 292.596, 187.667, 27.8596, 0.3436 ) }
    dend_2 { pt3dadd( 291.893, 186.809, 27.9638, 0.3078 ) }
    dend_2 { pt3dadd( 291.694, 185.731, 28.1915, 0.3386 ) }
    dend_2 { pt3dadd( 291.265, 184.907, 28.6527, 0.3822 ) }
    dend_2 { pt3dadd( 290.288, 184.325, 29.0584, 0.5274 ) }
    dend_2 { pt3dadd( 289.195, 184.095, 29.3286, 0.4848 ) }
    dend_2 { pt3dadd( 288.122, 183.779, 29.6814, 0.5474 ) }
    dend_2 { pt3dadd( 287.112, 183.358, 30.1179, 0.433 ) }
    dend_2 { pt3dadd( 286.077, 182.919, 30.5547, 0.4246 ) }
    dend_2 { pt3dadd( 285.025, 182.477, 30.9512, 0.3346 ) }
    dend_2 { pt3dadd( 283.958, 182.127, 31.3869, 0.3012 ) }
    dend_2 { pt3dadd( 282.959, 181.619, 31.8452, 0.2768 ) }
    dend_2 { pt3dadd( 281.907, 181.367, 32.3257, 0.2788 ) }
    dend_2 { pt3dadd( 280.775, 181.495, 32.7373, 0.2824 ) }
    dend_2 { pt3dadd( 279.663, 181.536, 33.1402, 0.289 ) }
    dend_2 { pt3dadd( 278.618, 181.141, 33.5208, 0.3024 ) }
    dend_2 { pt3dadd( 277.647, 180.546, 33.8192, 0.321 ) }
    dend_2 { pt3dadd( 276.602, 180.082, 34.0416, 0.3858 ) }
    dend_2 { pt3dadd( 275.583, 179.571, 34.228, 0.358 ) }
    dend_2 { pt3dadd( 274.566, 179.109, 34.452, 0.3396 ) }
    dend_2 { pt3dadd( 273.54, 178.718, 34.669, 0.3734 ) }
    dend_2 { pt3dadd( 272.646, 178.026, 34.8253, 0.334 ) }
    dend_2 { pt3dadd( 271.694, 177.425, 35.0053, 0.3002 ) }
    dend_2 { pt3dadd( 270.742, 176.824, 35.1823, 0.2748 ) }
    dend_2 { pt3dadd( 269.842, 176.144, 35.2895, 0.275 ) }
    dend_2 { pt3dadd( 268.997, 175.379, 35.257, 0.2754 ) }
    dend_2 { pt3dadd( 268.099, 174.695, 35.0932, 0.2762 ) }
    dend_2 { pt3dadd( 267.146, 174.109, 34.8054, 0.2774 ) }
    dend_2 { pt3dadd( 266.189, 173.571, 34.4005, 0.2798 ) }
    dend_2 { pt3dadd( 265.193, 173.198, 33.9161, 0.2844 ) }
    dend_2 { pt3dadd( 264.111, 173.074, 33.432, 0.2926 ) }
    dend_2 { pt3dadd( 263.04, 172.826, 33.1044, 0.3092 ) }
    dend_2 { pt3dadd( 262.049, 172.29, 32.9476, 0.3334 ) }
    dend_2 { pt3dadd( 261.096, 171.679, 32.9221, 0.41 ) }
    dend_2 { pt3dadd( 260.16, 171.047, 32.9941, 0.3976 ) }
    dend_2 { pt3dadd( 259.251, 170.379, 33.0285, 0.4384 ) }
    dend_2 { pt3dadd( 258.374, 169.668, 32.9792, 0.4328 ) }
    dend_2 { pt3dadd( 257.517, 168.915, 32.8868, 0.3594 ) }
    dend_2 { pt3dadd( 256.652, 168.166, 32.776, 0.3 ) }
    dend_2 { pt3dadd( 255.758, 167.452, 32.6542, 0.2748 ) }
    dend_2 { pt3dadd( 254.816, 166.815, 32.5119, 0.2748 ) }
    dend_2 { pt3dadd( 253.823, 166.281, 32.3361, 0.2752 ) }
    dend_2 { pt3dadd( 252.791, 165.812, 32.1616, 0.2756 ) }
    dend_2 { pt3dadd( 251.736, 165.371, 32.0286, 0.2766 ) }
    dend_2 { pt3dadd( 250.713, 164.869, 31.9553, 0.2782 ) }
    dend_2 { pt3dadd( 249.75, 164.267, 31.9505, 0.2814 ) }
    dend_2 { pt3dadd( 248.716, 163.838, 31.9463, 0.287 ) }
    dend_2 { pt3dadd( 247.609, 163.584, 31.8903, 0.2988 ) }
    dend_2 { pt3dadd( 246.488, 163.368, 31.8021, 0.3142 ) }
    dend_2 { pt3dadd( 245.362, 163.176, 31.7044, 0.3734 ) }
    dend_2 { pt3dadd( 244.239, 162.954, 31.5997, 0.3338 ) }
    dend_2 { pt3dadd( 243.142, 162.636, 31.4866, 0.3 ) }
    dend_2 { pt3dadd( 242.057, 162.275, 31.3653, 0.2746 ) }
    dend_2 { pt3dadd( 240.947, 162.016, 31.2172, 0.2746 ) }
    dend_2 { pt3dadd( 239.821, 161.818, 31.029, 0.2746 ) }
    dend_2 { pt3dadd( 238.71, 161.691, 30.7552, 0.2746 ) }
    dend_2 { pt3dadd( 237.619, 161.63, 30.3752, 0.2746 ) }
    dend_2 { pt3dadd( 236.511, 161.534, 29.9606, 0.2748 ) }
    dend_2 { pt3dadd( 235.384, 161.377, 29.5862, 0.2748 ) }
    dend_2 { pt3dadd( 234.251, 161.234, 29.272, 0.2752 ) }
    dend_2 { pt3dadd( 233.115, 161.187, 29.0088, 0.2756 ) }
    dend_2 { pt3dadd( 231.978, 161.187, 28.7949, 0.2766 ) }
    dend_2 { pt3dadd( 230.842, 161.1, 28.6429, 0.2784 ) }
    dend_2 { pt3dadd( 229.711, 160.931, 28.5488, 0.2816 ) }
    dend_2 { pt3dadd( 228.592, 160.701, 28.511, 0.2874 ) }
    dend_2 { pt3dadd( 227.523, 160.353, 28.5586, 0.2994 ) }
    dend_2 { pt3dadd( 226.457, 159.97, 28.6409, 0.3152 ) }
    dend_2 { pt3dadd( 225.378, 159.641, 28.646, 0.3756 ) }
    dend_2 { pt3dadd( 224.306, 159.284, 28.572, 0.3378 ) }
    dend_2 { pt3dadd( 223.258, 158.834, 28.4788, 0.3074 ) }
    dend_2 { pt3dadd( 222.246, 158.302, 28.3878, 0.288 ) }
    dend_2 { pt3dadd( 221.318, 157.64, 28.3063, 0.3008 ) }
    dend_2 { pt3dadd( 220.437, 156.911, 28.2464, 0.3178 ) }
    dend_2 { pt3dadd( 219.559, 156.182, 28.1915, 0.3802 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 218.546, 155.779, 28.0759, 0.3464 ) }
    dend_2 { pt3dadd( 217.437, 155.696, 28.0176, 0.3242 ) }
    dend_2 { pt3dadd( 216.375, 155.693, 28.1198, 0.3144 ) }
    dend_2 { pt3dadd( 215.258, 155.693, 28.1747, 0.3738 ) }
    dend_2 { pt3dadd( 214.122, 155.693, 28.1394, 0.3346 ) }
    dend_2 { pt3dadd( 212.98, 155.693, 28.0678, 0.3014 ) }
    dend_2 { pt3dadd( 211.839, 155.779, 27.9725, 0.2772 ) }
    dend_2 { pt3dadd( 210.745, 156.075, 27.8072, 0.2792 ) }
    dend_2 { pt3dadd( 209.963, 156.592, 27.4213, 0.2834 ) }
    dend_2 { pt3dadd( 208.907, 156.945, 27.0941, 0.2906 ) }
    dend_2 { pt3dadd( 207.867, 157.325, 26.9481, 0.3056 ) }
    dend_2 { pt3dadd( 206.826, 157.782, 26.8227, 0.3268 ) }
    dend_2 { pt3dadd( 205.784, 158.228, 26.6892, 0.3966 ) }
    dend_2 { pt3dadd( 204.669, 158.412, 26.574, 0.3788 ) }
    dend_2 { pt3dadd( 203.559, 158.682, 26.5148, 0.3728 ) }
    dend_2 { pt3dadd( 202.796, 159.516, 26.4918, 0.4604 ) }
    dend_2 { pt3dadd( 202.099, 160.424, 26.4972, 0.3728 ) }
    dend_2 { pt3dadd( 201.7, 161.486, 26.5904, 0.2796 ) }
    dend_2 { pt3dadd( 201.485, 162.561, 27.172, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 305.49, 196.014, 29.5229, 0.7984 ) }
    dend_1 { pt3dadd( 304.446, 194.854, 28.6152, 0.2288 ) }
    dend_1 { pt3dadd( 303.647, 194.038, 28.6734, 0.5322 ) }
    dend_1 { pt3dadd( 302.867, 193.251, 28.7484, 0.5294 ) }
    dend_1 { pt3dadd( 302.372, 192.223, 28.7865, 0.4548 ) }
    dend_1 { pt3dadd( 301.795, 191.239, 28.763, 0.4266 ) }
    dend_1 { pt3dadd( 301.057, 190.396, 28.6367, 0.526 ) }
    dend_1 { pt3dadd( 300.473, 189.563, 28.2993, 0.6594 ) }
    dend_1 { pt3dadd( 299.91, 188.609, 27.8998, 0.6962 ) }
    dend_1 { pt3dadd( 299.339, 187.641, 27.5705, 0.6432 ) }
    dend_1 { pt3dadd( 298.46, 186.949, 27.3811, 0.4466 ) }
    dend_1 { pt3dadd( 297.535, 186.301, 27.2283, 0.3302 ) }
    dend_1 { pt3dadd( 296.704, 185.605, 26.9835, 0.2834 ) }
    dend_1 { pt3dadd( 296.129, 184.702, 26.6523, 0.2908 ) }
    dend_1 { pt3dadd( 295.733, 183.724, 26.2613, 0.306 ) }
    dend_1 { pt3dadd( 295.503, 182.614, 25.9893, 0.3272 ) }
    dend_1 { pt3dadd( 295.279, 181.522, 25.8599, 0.3988 ) }
    dend_1 { pt3dadd( 294.914, 180.449, 25.7618, 0.3758 ) }
    dend_1 { pt3dadd( 294.326, 179.486, 25.6973, 0.4032 ) }
    dend_1 { pt3dadd( 293.535, 178.664, 25.6981, 0.342 ) }
    dend_1 { pt3dadd( 292.615, 178.029, 25.7713, 0.315 ) }
    dend_1 { pt3dadd( 291.698, 177.43, 25.8875, 0.3022 ) }
    dend_1 { pt3dadd( 291.079, 176.485, 25.9528, 0.3266 ) }
    dend_1 { pt3dadd( 290.531, 175.49, 25.9617, 0.3664 ) }
    dend_1 { pt3dadd( 289.802, 174.634, 25.9174, 0.4674 ) }
    dend_1 { pt3dadd( 288.954, 173.878, 25.8495, 0.523 ) }
    dend_1 { pt3dadd( 288.109, 173.118, 25.8323, 0.5776 ) }
    dend_1 { pt3dadd( 287.298, 172.321, 25.8551, 0.458 ) }
    dend_1 { pt3dadd( 286.523, 171.481, 25.8861, 0.3926 ) }
    dend_1 { pt3dadd( 285.576, 170.943, 25.9146, 0.427 ) }
    dend_1 { pt3dadd( 284.491, 170.597, 25.9309, 0.4226 ) }
    dend_1 { pt3dadd( 283.638, 169.895, 25.924, 0.5154 ) }
    dend_1 { pt3dadd( 283.145, 168.881, 25.8889, 0.426 ) }
    dend_1 { pt3dadd( 282.971, 167.761, 25.8333, 0.3866 ) }
    dend_1 { pt3dadd( 282.792, 166.637, 25.7617, 0.3852 ) }
    dend_1 { pt3dadd( 282.305, 165.636, 25.6292, 0.4942 ) }
    dend_1 { pt3dadd( 281.56, 164.807, 25.4273, 0.6108 ) }
    dend_1 { pt3dadd( 280.576, 164.271, 25.2344, 0.5572 ) }
    dend_1 { pt3dadd( 279.588, 163.706, 25.0835, 0.6226 ) }
    dend_1 { pt3dadd( 278.618, 163.099, 24.9733, 0.6296 ) }
    dend_1 { pt3dadd( 277.576, 162.64, 24.8999, 0.5114 ) }
    dend_1 { pt3dadd( 276.503, 162.243, 24.8563, 0.4706 ) }
    dend_1 { pt3dadd( 275.38, 162.108, 24.8254, 0.4454 ) }
    dend_1 { pt3dadd( 274.237, 162.104, 24.7736, 0.3826 ) }
    dend_1 { pt3dadd( 273.165, 162.378, 24.7558, 0.344 ) }
    dend_1 { pt3dadd( 272.293, 161.942, 24.7246, 0.352 ) }
    dend_1 { pt3dadd( 271.513, 161.121, 24.6019, 0.4378 ) }
    dend_1 { pt3dadd( 270.676, 160.381, 24.3692, 0.481 ) }
    dend_1 { pt3dadd( 269.644, 159.959, 24.0847, 0.4384 ) }
    dend_1 { pt3dadd( 268.62, 159.627, 23.6883, 0.4978 ) }
    dend_1 { pt3dadd( 267.852, 158.783, 23.3622, 0.3932 ) }
    dend_1 { pt3dadd( 267.432, 157.723, 23.1063, 0.3254 ) }
    dend_1 { pt3dadd( 267.448, 156.594, 22.828, 0.2746 ) }
    dend_1 { pt3dadd( 267.717, 155.508, 22.5462, 0.2746 ) }
    dend_1 { pt3dadd( 267.19, 154.526, 22.3666, 0.2746 ) }
    dend_1 { pt3dadd( 266.48, 153.703, 22.1524, 0.2746 ) }
    dend_1 { pt3dadd( 266.039, 153.01, 21.6792, 0.2748 ) }
    dend_1 { pt3dadd( 265.334, 152.671, 21.1056, 0.275 ) }
    dend_1 { pt3dadd( 264.456, 152.376, 20.88, 0.2752 ) }
    dend_1 { pt3dadd( 263.536, 152.009, 20.7426, 0.2758 ) }
    dend_1 { pt3dadd( 262.98, 151.209, 20.4672, 0.2768 ) }
    dend_1 { pt3dadd( 262.096, 150.808, 20.3517, 0.2796 ) }
    dend_1 { pt3dadd( 261.055, 150.426, 20.3811, 0.2796 ) }
    dend_1 { pt3dadd( 260.297, 149.798, 20.2124, 0.305 ) }
    dend_1 { pt3dadd( 259.321, 149.229, 19.7058, 0.2288 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 84/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 362.061, 264.473, 21.4889, 0.3242 ) }
    dend_43 { pt3dadd( 361.519, 265.309, 20.4904, 0.4576 ) }
    dend_43 { pt3dadd( 361.577, 266.417, 20.4438, 0.3712 ) }
    dend_43 { pt3dadd( 362.269, 267.312, 20.4296, 0.3232 ) }
    dend_43 { pt3dadd( 362.866, 268.286, 20.4229, 0.3122 ) }
    dend_43 { pt3dadd( 363.384, 269.307, 20.4187, 0.37 ) }
    dend_43 { pt3dadd( 363.562, 270.432, 20.4168, 0.3276 ) }
    dend_43 { pt3dadd( 363.324, 271.546, 20.417, 0.2882 ) }
    dend_43 { pt3dadd( 362.958, 272.591, 20.516, 0.2542 ) }
    dend_43 { pt3dadd( 362.728, 273.704, 20.5482, 0.2288 ) }
    dend_43 { pt3dadd( 363.13, 274.751, 20.3792, 0.2288 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 95/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 362.061, 264.473, 21.4889, 0.3242 ) }
    dend_42 { pt3dadd( 363.102, 264.158, 21.2068, 0.3142 ) }
    dend_42 { pt3dadd( 364.204, 263.86, 21.0137, 0.3734 ) }
    dend_42 { pt3dadd( 365.286, 264.119, 20.9857, 0.334 ) }
    dend_42 { pt3dadd( 366.409, 264.218, 21.0558, 0.3002 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_42 { pt3dadd( 367.553, 264.207, 21.1122, 0.275 ) }
    dend_42 { pt3dadd( 368.696, 264.189, 21.1463, 0.2752 ) }
    dend_42 { pt3dadd( 369.84, 264.17, 21.1543, 0.2758 ) }
    dend_42 { pt3dadd( 370.96, 264.118, 21.0364, 0.2768 ) }
    dend_42 { pt3dadd( 372.079, 264.06, 20.8264, 0.2796 ) }
    dend_42 { pt3dadd( 373.221, 263.997, 20.6511, 0.2796 ) }
    dend_42 { pt3dadd( 374.364, 263.935, 20.5212, 0.305 ) }
    dend_42 { pt3dadd( 375.493, 263.762, 20.3792, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 8/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 329.956, 262.184, 37.7628, 0.3456 ) }
    dend_33 { pt3dadd( 329.646, 262.636, 37.891, 0.3536 ) }
    dend_33 { pt3dadd( 329.014, 263.554, 38.1755, 0.4488 ) }
    dend_33 { pt3dadd( 328.495, 264.556, 38.5319, 0.4628 ) }
    dend_33 { pt3dadd( 328.019, 265.583, 38.9026, 0.592 ) }
    dend_33 { pt3dadd( 327.612, 266.648, 39.2333, 0.559 ) }
    dend_33 { pt3dadd( 327.221, 267.721, 39.5184, 0.6768 ) }
    dend_33 { pt3dadd( 326.885, 268.814, 39.7505, 0.7132 ) }
    dend_33 { pt3dadd( 326.141, 269.664, 39.9904, 0.7476 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 329.956, 262.184, 37.7628, 0.3456 ) }
    dend_32 { pt3dadd( 329.474, 262.272, 37.081, 0.2288 ) }
    dend_32 { pt3dadd( 328.359, 262.388, 36.9351, 0.2984 ) }
    dend_32 { pt3dadd( 327.225, 262.398, 36.9155, 0.3196 ) }
    dend_32 { pt3dadd( 326.096, 262.524, 36.8813, 0.3538 ) }
    dend_32 { pt3dadd( 325.009, 262.865, 36.7928, 0.4418 ) }
    dend_32 { pt3dadd( 323.976, 263.318, 36.6248, 0.487 ) }
    dend_32 { pt3dadd( 322.93, 263.686, 36.3835, 0.4552 ) }
    dend_32 { pt3dadd( 321.82, 263.935, 36.1194, 0.5004 ) }
    dend_32 { pt3dadd( 320.868, 264.46, 35.7941, 0.5368 ) }
    dend_32 { pt3dadd( 320.17, 265.316, 35.478, 0.6044 ) }
    dend_32 { pt3dadd( 319.404, 266.105, 35.2845, 0.502 ) }
    dend_32 { pt3dadd( 318.454, 266.494, 35.0403, 0.5014 ) }
    dend_32 { pt3dadd( 317.5, 266.934, 34.7239, 0.4968 ) }
    dend_32 { pt3dadd( 316.669, 267.682, 34.5008, 0.5046 ) }
    dend_32 { pt3dadd( 315.915, 268.529, 34.3064, 0.4402 ) }
    dend_32 { pt3dadd( 315.181, 269.378, 34.0203, 0.4762 ) }
    dend_32 { pt3dadd( 314.281, 270.015, 33.6378, 0.4734 ) }
    dend_32 { pt3dadd( 313.243, 270.329, 33.1652, 0.5772 ) }
    dend_32 { pt3dadd( 312.802, 271.189, 32.5839, 0.699 ) }
    dend_32 { pt3dadd( 312.461, 272.25, 31.9903, 0.809 ) }
    dend_32 { pt3dadd( 311.405, 272.545, 31.4874, 0.6612 ) }
    dend_32 { pt3dadd( 310.35, 272.966, 31.1254, 0.722 ) }
    dend_32 { pt3dadd( 309.387, 273.577, 30.7955, 0.5824 ) }
    dend_32 { pt3dadd( 308.704, 274.411, 30.382, 0.6322 ) }
    dend_32 { pt3dadd( 307.881, 274.767, 29.7889, 0.5994 ) }
    dend_32 { pt3dadd( 306.783, 275.035, 29.2785, 0.4594 ) }
    dend_32 { pt3dadd( 305.895, 275.681, 28.9764, 0.355 ) }
    dend_32 { pt3dadd( 305.028, 276.356, 28.6292, 0.3242 ) }
    dend_32 { pt3dadd( 304.221, 277.097, 28.2778, 0.3924 ) }
    dend_32 { pt3dadd( 303.361, 277.836, 28.0913, 0.3684 ) }
    dend_32 { pt3dadd( 302.456, 278.499, 28.0123, 0.3664 ) }
    dend_32 { pt3dadd( 301.411, 278.604, 27.9553, 0.3866 ) }
    dend_32 { pt3dadd( 300.384, 278.223, 27.7747, 0.5354 ) }
    dend_32 { pt3dadd( 299.267, 278.171, 27.5089, 0.5008 ) }
    dend_32 { pt3dadd( 298.155, 278.285, 27.1962, 0.5708 ) }
    dend_32 { pt3dadd( 297.064, 278.626, 26.8796, 0.5068 ) }
    dend_32 { pt3dadd( 296.015, 279.027, 26.5264, 0.4132 ) }
    dend_32 { pt3dadd( 295.049, 279.539, 26.0812, 0.3474 ) }
    dend_32 { pt3dadd( 294.086, 280.06, 25.5934, 0.388 ) }
    dend_32 { pt3dadd( 293.081, 280.524, 25.1031, 0.362 ) }
    dend_32 { pt3dadd( 292.146, 281.062, 24.6344, 0.3468 ) }
    dend_32 { pt3dadd( 291.659, 282.045, 24.2497, 0.3866 ) }
    dend_32 { pt3dadd( 291.102, 282.978, 23.9807, 0.3592 ) }
    dend_32 { pt3dadd( 290.25, 283.741, 23.8091, 0.3418 ) }
    dend_32 { pt3dadd( 289.35, 284.443, 23.7014, 0.3776 ) }
    dend_32 { pt3dadd( 288.415, 285.104, 23.6261, 0.3418 ) }
    dend_32 { pt3dadd( 287.505, 285.795, 23.5572, 0.3146 ) }
    dend_32 { pt3dadd( 286.608, 286.504, 23.4713, 0.3014 ) }
    dend_32 { pt3dadd( 285.668, 287.153, 23.3463, 0.3264 ) }
    dend_32 { pt3dadd( 284.719, 287.784, 23.1725, 0.3602 ) }
    dend_32 { pt3dadd( 283.91, 288.56, 22.9386, 0.4844 ) }
    dend_32 { pt3dadd( 283.243, 289.449, 22.626, 0.4156 ) }
    dend_32 { pt3dadd( 282.395, 290.108, 22.2617, 0.368 ) }
    dend_32 { pt3dadd( 281.303, 290.28, 21.9822, 0.3492 ) }
    dend_32 { pt3dadd( 280.253, 289.93, 21.7569, 0.433 ) }
    dend_32 { pt3dadd( 279.185, 289.545, 21.5353, 0.471 ) }
    dend_32 { pt3dadd( 278.053, 289.478, 21.3524, 0.4258 ) }
    dend_32 { pt3dadd( 276.977, 289.783, 21.151, 0.4438 ) }
    dend_32 { pt3dadd( 276.165, 290.525, 20.8981, 0.4426 ) }
    dend_32 { pt3dadd( 275.513, 291.456, 20.6772, 0.3774 ) }
    dend_32 { pt3dadd( 274.78, 292.333, 20.5069, 0.3348 ) }
    dend_32 { pt3dadd( 273.953, 293.122, 20.3836, 0.3336 ) }
    dend_32 { pt3dadd( 272.878, 293.46, 20.2974, 0.4106 ) }
    dend_32 { pt3dadd( 271.74, 293.566, 20.2442, 0.3974 ) }
    dend_32 { pt3dadd( 270.743, 294.065, 20.1425, 0.4442 ) }
    dend_32 { pt3dadd( 269.747, 294.603, 20.0072, 0.4136 ) }
    dend_32 { pt3dadd( 268.696, 294.996, 19.9728, 0.4692 ) }
    dend_32 { pt3dadd( 267.611, 295.32, 20.0064, 0.4844 ) }
    dend_32 { pt3dadd( 266.471, 295.357, 20.0337, 0.4818 ) }
    dend_32 { pt3dadd( 265.342, 295.522, 20.0499, 0.3978 ) }
    dend_32 { pt3dadd( 264.693, 296.384, 19.9586, 0.397 ) }
    dend_32 { pt3dadd( 264.677, 297.511, 19.8347, 0.3304 ) }
    dend_32 { pt3dadd( 264.677, 298.655, 19.7499, 0.2938 ) }
    dend_32 { pt3dadd( 264.677, 299.799, 19.7145, 0.2626 ) }
    dend_32 { pt3dadd( 264.677, 300.943, 19.7312, 0.2542 ) }
    dend_32 { pt3dadd( 264.87, 302.056, 19.8477, 0.2288 ) }
    dend_32 { pt3dadd( 265.135, 303.143, 20.3792, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 346.734, 320.379, 35.0764, 0.5264 ) }
    dend_26 { pt3dadd( 346.096, 321.657, 35.0372, 0.5524 ) }
    dend_26 { pt3dadd( 345.586, 322.678, 35.0557, 0.5632 ) }
    dend_26 { pt3dadd( 345.076, 323.698, 35.1075, 0.5374 ) }
    dend_26 { pt3dadd( 344.569, 324.722, 35.1579, 0.7098 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( 344.071, 325.751, 35.1686, 0.6486 ) }
    dend_26 { pt3dadd( 343.573, 326.778, 35.138, 0.7826 ) }
    dend_26 { pt3dadd( 343.083, 327.811, 35.0745, 0.7436 ) }
    dend_26 { pt3dadd( 342.612, 328.852, 34.9992, 0.6936 ) }
    dend_26 { pt3dadd( 342.15, 329.899, 34.9261, 0.4936 ) }
    dend_26 { pt3dadd( 341.688, 330.945, 34.8622, 0.4142 ) }
    dend_26 { pt3dadd( 341.208, 331.983, 34.8132, 0.4544 ) }
    dend_26 { pt3dadd( 340.676, 332.996, 34.7808, 0.535 ) }
    dend_26 { pt3dadd( 340.107, 333.987, 34.7642, 0.425 ) }
    dend_26 { pt3dadd( 339.536, 334.979, 34.7592, 0.3374 ) }
    dend_26 { pt3dadd( 339.013, 335.994, 34.764, 0.2966 ) }
    dend_26 { pt3dadd( 338.69, 337.08, 34.7774, 0.3162 ) }
    dend_26 { pt3dadd( 338.548, 338.216, 34.7998, 0.3474 ) }
    dend_26 { pt3dadd( 338.408, 339.35, 34.8317, 0.4298 ) }
    dend_26 { pt3dadd( 338.266, 340.485, 34.8748, 0.465 ) }
    dend_26 { pt3dadd( 338.092, 341.616, 34.935, 0.414 ) }
    dend_26 { pt3dadd( 337.79, 342.713, 35.0258, 0.4266 ) }
    dend_26 { pt3dadd( 337.37, 343.774, 35.1551, 0.3876 ) }
    dend_26 { pt3dadd( 336.952, 344.836, 35.3161, 0.389 ) }
    dend_26 { pt3dadd( 336.545, 345.902, 35.5026, 0.4906 ) }
    dend_26 { pt3dadd( 336.245, 346.996, 35.7157, 0.427 ) }
    dend_26 { pt3dadd( 336.061, 348.116, 35.9542, 0.3888 ) }
    dend_26 { pt3dadd( 335.878, 349.236, 36.2029, 0.3888 ) }
    dend_26 { pt3dadd( 335.697, 350.357, 36.4498, 0.5026 ) }
    dend_26 { pt3dadd( 335.505, 351.479, 36.6716, 0.619 ) }
    dend_26 { pt3dadd( 335.298, 352.604, 36.8399, 0.6078 ) }
    dend_26 { pt3dadd( 335.086, 353.727, 36.9533, 0.544 ) }
    dend_26 { pt3dadd( 334.874, 354.852, 37.0244, 0.6354 ) }
    dend_26 { pt3dadd( 334.661, 355.976, 37.0675, 0.7012 ) }
    dend_26 { pt3dadd( 334.446, 357.1, 37.0961, 0.6406 ) }
    dend_26 { pt3dadd( 334.221, 358.221, 37.123, 0.7282 ) }
    dend_26 { pt3dadd( 333.997, 359.343, 37.158, 0.8346 ) }
    dend_26 { pt3dadd( 333.773, 360.465, 37.2075, 0.8478 ) }
    dend_26 { pt3dadd( 333.66, 361.597, 37.277, 0.6198 ) }
    dend_26 { pt3dadd( 333.721, 362.738, 37.3708, 0.5094 ) }
    dend_26 { pt3dadd( 333.681, 363.87, 37.5029, 0.6174 ) }
    dend_26 { pt3dadd( 333.341, 364.952, 37.6902, 0.6738 ) }
    dend_26 { pt3dadd( 332.928, 365.978, 37.9789, 0.789 ) }
    dend_26 { pt3dadd( 332.602, 366.999, 38.3897, 0.7234 ) }
    dend_26 { pt3dadd( 332.404, 368.075, 38.8332, 0.5832 ) }
    dend_26 { pt3dadd( 332.219, 369.169, 39.2622, 0.4132 ) }
    dend_26 { pt3dadd( 332.298, 370.222, 39.5833, 0.3476 ) }
    dend_26 { pt3dadd( 332.779, 371.244, 39.7267, 0.3884 ) }
    dend_26 { pt3dadd( 333.133, 372.318, 39.7603, 0.3614 ) }
    dend_26 { pt3dadd( 332.895, 373.388, 39.7398, 0.3518 ) }
    dend_26 { pt3dadd( 332.499, 374.46, 39.704, 0.3664 ) }
    dend_26 { pt3dadd( 332.129, 375.543, 39.6774, 0.466 ) }
    dend_26 { pt3dadd( 331.811, 376.634, 39.6444, 0.5264 ) }
    dend_26 { pt3dadd( 331.517, 377.732, 39.6007, 0.5554 ) }
    dend_26 { pt3dadd( 331.297, 378.829, 39.6455, 0.5546 ) }
    dend_26 { pt3dadd( 331.124, 379.914, 39.8138, 0.5892 ) }
    dend_26 { pt3dadd( 330.819, 380.998, 40.0067, 0.479 ) }
    dend_26 { pt3dadd( 330.458, 382.08, 40.1831, 0.433 ) }
    dend_26 { pt3dadd( 330.371, 383.195, 40.2741, 0.496 ) }
    dend_26 { pt3dadd( 330.432, 384.316, 40.2623, 0.5784 ) }
    dend_26 { pt3dadd( 330.622, 385.435, 40.2209, 0.6696 ) }
    dend_26 { pt3dadd( 330.877, 386.551, 40.2046, 0.6792 ) }
    dend_26 { pt3dadd( 331.043, 387.678, 40.2662, 0.5572 ) }
    dend_26 { pt3dadd( 331.076, 388.808, 40.4393, 0.551 ) }
    dend_26 { pt3dadd( 331.06, 389.935, 40.7131, 0.616 ) }
    dend_26 { pt3dadd( 330.825, 391.025, 41.0634, 0.5948 ) }
    dend_26 { pt3dadd( 330.528, 392.106, 41.4504, 0.5558 ) }
    dend_26 { pt3dadd( 330.34, 393.219, 41.8247, 0.4834 ) }
    dend_26 { pt3dadd( 330.196, 394.345, 42.1641, 0.5768 ) }
    dend_26 { pt3dadd( 330.159, 395.483, 42.411, 0.5612 ) }
    dend_26 { pt3dadd( 330.159, 396.625, 42.5681, 0.5334 ) }
    dend_26 { pt3dadd( 330.159, 397.765, 42.7056, 0.4772 ) }
    dend_26 { pt3dadd( 330.159, 398.896, 42.875, 0.3944 ) }
    dend_26 { pt3dadd( 330.159, 400.029, 43.071, 0.3656 ) }
    dend_26 { pt3dadd( 330.159, 401.171, 43.2368, 0.393 ) }
    dend_26 { pt3dadd( 330.159, 402.314, 43.3717, 0.51 ) }
    dend_26 { pt3dadd( 330.159, 403.454, 43.5221, 0.6338 ) }
    dend_26 { pt3dadd( 330.026, 404.582, 43.6957, 0.629 ) }
    dend_26 { pt3dadd( 329.848, 405.706, 43.8869, 0.6134 ) }
    dend_26 { pt3dadd( 329.799, 406.834, 44.095, 0.617 ) }
    dend_26 { pt3dadd( 329.95, 407.957, 44.3184, 0.6954 ) }
    dend_26 { pt3dadd( 330.108, 409.084, 44.5309, 0.7216 ) }
    dend_26 { pt3dadd( 330.159, 410.225, 44.7, 0.6614 ) }
    dend_26 { pt3dadd( 330.159, 411.369, 44.8263, 0.6216 ) }
    dend_26 { pt3dadd( 330.328, 412.465, 44.8756, 0.6556 ) }
    dend_26 { pt3dadd( 330.558, 413.557, 44.8809, 0.6522 ) }
    dend_26 { pt3dadd( 330.617, 414.698, 44.9319, 0.5128 ) }
    dend_26 { pt3dadd( 330.499, 415.786, 45.1055, 0.4418 ) }
    dend_26 { pt3dadd( 330.272, 416.758, 45.481, 0.5436 ) }
    dend_26 { pt3dadd( 329.971, 417.765, 45.9152, 0.5146 ) }
    dend_26 { pt3dadd( 329.946, 418.801, 46.1586, 0.6034 ) }
    dend_26 { pt3dadd( 330.121, 419.893, 46.3795, 0.5326 ) }
    dend_26 { pt3dadd( 330.085, 421.026, 46.5338, 0.6304 ) }
    dend_26 { pt3dadd( 330.002, 422.167, 46.6351, 0.6132 ) }
    dend_26 { pt3dadd( 329.864, 423.27, 46.8112, 0.6316 ) }
    dend_26 { pt3dadd( 329.712, 424.368, 47.0882, 0.6502 ) }
    dend_26 { pt3dadd( 329.426, 425.456, 47.3242, 0.7586 ) }
    dend_26 { pt3dadd( 329.103, 426.542, 47.5045, 0.8308 ) }
    dend_26 { pt3dadd( 328.625, 427.561, 47.7644, 0.9024 ) }
    dend_26 { pt3dadd( 328.191, 428.586, 48.1253, 0.8814 ) }
    dend_26 { pt3dadd( 327.999, 429.613, 48.6245, 0.6716 ) }
    dend_26 { pt3dadd( 327.883, 430.691, 49.1966, 0.656 ) }
    dend_26 { pt3dadd( 327.842, 431.823, 49.7403, 0.6454 ) }
    dend_26 { pt3dadd( 327.493, 432.894, 50.2471, 0.5348 ) }
    dend_26 { pt3dadd( 326.648, 433.649, 50.5932, 0.5444 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 0/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 346.734, 320.379, 35.0764, 0.5264 ) }
    dend_25 { pt3dadd( 347.148, 320.564, 34.72, 0.2288 ) }
    dend_25 { pt3dadd( 348.191, 321.029, 34.6951, 0.2816 ) }
    dend_25 { pt3dadd( 349.238, 321.494, 34.6853, 0.2874 ) }
    dend_25 { pt3dadd( 350.242, 322.041, 34.6713, 0.2996 ) }
    dend_25 { pt3dadd( 351.234, 322.61, 34.652, 0.3156 ) }
    dend_25 { pt3dadd( 352.226, 323.181, 34.6251, 0.3764 ) }
    dend_25 { pt3dadd( 353.217, 323.752, 34.5873, 0.3394 ) }
    dend_25 { pt3dadd( 354.082, 324.498, 34.5335, 0.3102 ) }
    dend_25 { pt3dadd( 354.883, 325.315, 34.4579, 0.2932 ) }
    dend_25 { pt3dadd( 355.678, 326.137, 34.3563, 0.31 ) }
    dend_25 { pt3dadd( 356.474, 326.959, 34.2269, 0.335 ) }
    dend_25 { pt3dadd( 357.308, 327.716, 34.0029, 0.412 ) }
    dend_25 { pt3dadd( 358.148, 328.445, 33.684, 0.4072 ) }
    dend_25 { pt3dadd( 358.99, 329.171, 33.3018, 0.4274 ) }
    dend_25 { pt3dadd( 359.89, 329.846, 32.9059, 0.5514 ) }
    dend_25 { pt3dadd( 360.921, 330.338, 32.5808, 0.591 ) }
    dend_25 { pt3dadd( 361.958, 330.821, 32.3196, 0.444 ) }
    dend_25 { pt3dadd( 362.995, 331.303, 32.1121, 0.3254 ) }
    dend_25 { pt3dadd( 364.025, 331.801, 31.9348, 0.2746 ) }
    dend_25 { pt3dadd( 364.766, 332.627, 31.6828, 0.2746 ) }
    dend_25 { pt3dadd( 365.49, 333.47, 31.3664, 0.2746 ) }
    dend_25 { pt3dadd( 366.216, 334.312, 31.0061, 0.2746 ) }
    dend_25 { pt3dadd( 366.875, 335.237, 30.6796, 0.2746 ) }
    dend_25 { pt3dadd( 367.457, 336.22, 30.4455, 0.2746 ) }
    dend_25 { pt3dadd( 368.036, 337.207, 30.3005, 0.2746 ) }
    dend_25 { pt3dadd( 368.621, 338.19, 30.2378, 0.2746 ) }
    dend_25 { pt3dadd( 369.45, 338.976, 30.238, 0.2748 ) }
    dend_25 { pt3dadd( 370.378, 339.644, 30.2842, 0.275 ) }
    dend_25 { pt3dadd( 371.456, 340.029, 30.3618, 0.2752 ) }
    dend_25 { pt3dadd( 372.555, 340.342, 30.4646, 0.2758 ) }
    dend_25 { pt3dadd( 373.67, 340.596, 30.5981, 0.277 ) }
    dend_25 { pt3dadd( 374.589, 341.224, 30.844, 0.2792 ) }
    dend_25 { pt3dadd( 375.505, 341.856, 31.1685, 0.2828 ) }
    dend_25 { pt3dadd( 376.422, 342.486, 31.537, 0.291 ) }
    dend_25 { pt3dadd( 377.38, 343.096, 31.8724, 0.2994 ) }
    dend_25 { pt3dadd( 378.367, 343.676, 32.1174, 0.3474 ) }
    dend_25 { pt3dadd( 379.353, 344.256, 32.2792, 0.2796 ) }
    dend_25 { pt3dadd( 380.339, 344.836, 32.4052, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 39/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 320.086, 219.801, 25.9684, 0.5722 ) }
    dend_6 { pt3dadd( 319.314, 220.225, 25.8171, 0.432 ) }
    dend_6 { pt3dadd( 318.321, 220.711, 25.6232, 0.4218 ) }
    dend_6 { pt3dadd( 317.25, 221.025, 25.4673, 0.564 ) }
    dend_6 { pt3dadd( 316.234, 221.497, 25.4275, 0.7318 ) }
    dend_6 { pt3dadd( 315.24, 222.033, 25.3962, 0.8208 ) }
    dend_6 { pt3dadd( 314.569, 222.613, 25.2015, 0.9212 ) }
    dend_6 { pt3dadd( 313.698, 223.278, 24.9981, 0.7342 ) }
    dend_6 { pt3dadd( 312.759, 223.922, 24.853, 0.5976 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 48/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 320.086, 219.801, 25.9684, 0.5722 ) }
    dend_5 { pt3dadd( 320.086, 218.752, 25.3915, 0.4576 ) }
    dend_5 { pt3dadd( 320.015, 217.644, 24.6741, 0.3748 ) }
    dend_5 { pt3dadd( 319.962, 216.577, 24.4001, 0.3288 ) }
    dend_5 { pt3dadd( 320.264, 215.658, 23.9091, 0.3274 ) }
    dend_5 { pt3dadd( 320.5, 214.674, 23.2933, 0.3748 ) }
    dend_5 { pt3dadd( 320.29, 213.603, 22.7688, 0.4504 ) }
    dend_5 { pt3dadd( 319.556, 212.754, 22.3856, 0.6488 ) }
    dend_5 { pt3dadd( 318.515, 212.415, 22.0105, 0.7346 ) }
    dend_5 { pt3dadd( 317.484, 211.933, 21.7086, 0.8894 ) }
    dend_5 { pt3dadd( 316.601, 211.211, 21.488, 0.968 ) }
    dend_5 { pt3dadd( 316.426, 210.157, 21.4185, 0.7542 ) }
    dend_5 { pt3dadd( 316.118, 209.059, 21.2815, 0.7288 ) }
    dend_5 { pt3dadd( 315.698, 208.051, 20.9931, 0.7118 ) }
    dend_5 { pt3dadd( 315.345, 207.05, 20.5745, 0.7626 ) }
    dend_5 { pt3dadd( 315.048, 206.064, 19.2469, 0.4576 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 64/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 326.141, 269.664, 39.9904, 0.7476 ) }
    dend_35 { pt3dadd( 326.026, 270.724, 40.222, 0.516 ) }
    dend_35 { pt3dadd( 325.904, 271.857, 40.4533, 0.3746 ) }
    dend_35 { pt3dadd( 325.781, 272.989, 40.6846, 0.3182 ) }
    dend_35 { pt3dadd( 325.659, 274.122, 40.9128, 0.357 ) }
    dend_35 { pt3dadd( 325.535, 275.254, 41.1328, 0.419 ) }
    dend_35 { pt3dadd( 325.391, 276.384, 41.3361, 0.584 ) }
    dend_35 { pt3dadd( 325.096, 277.476, 41.5125, 0.6462 ) }
    dend_35 { pt3dadd( 324.585, 278.5, 41.6464, 0.5714 ) }
    dend_35 { pt3dadd( 324.073, 279.523, 41.7519, 0.44 ) }
    dend_35 { pt3dadd( 323.562, 280.547, 41.8435, 0.3916 ) }
    dend_35 { pt3dadd( 322.98, 281.523, 41.9395, 0.4966 ) }
    dend_35 { pt3dadd( 322.245, 282.399, 42.0594, 0.433 ) }
    dend_35 { pt3dadd( 321.512, 283.276, 42.2103, 0.4248 ) }
    dend_35 { pt3dadd( 320.797, 284.157, 42.4161, 0.335 ) }
    dend_35 { pt3dadd( 320.116, 285.044, 42.7073, 0.3022 ) }
    dend_35 { pt3dadd( 319.437, 285.931, 43.0539, 0.2786 ) }
    dend_35 { pt3dadd( 318.802, 286.856, 43.4129, 0.282 ) }
    dend_35 { pt3dadd( 318.289, 287.875, 43.7209, 0.2882 ) }
    dend_35 { pt3dadd( 317.836, 288.925, 43.962, 0.2996 ) }
    dend_35 { pt3dadd( 317.383, 289.975, 44.1482, 0.322 ) }
    dend_35 { pt3dadd( 316.941, 291.029, 44.303, 0.3582 ) }
    dend_35 { pt3dadd( 316.534, 292.086, 44.4786, 0.4508 ) }
    dend_35 { pt3dadd( 316.165, 293.141, 44.7054, 0.4988 ) }
    dend_35 { pt3dadd( 315.796, 294.196, 44.963, 0.502 ) }
    dend_35 { pt3dadd( 315.432, 295.261, 45.1993, 0.4662 ) }
    dend_35 { pt3dadd( 315.083, 296.344, 45.3172, 0.374 ) }
    dend_35 { pt3dadd( 314.75, 297.417, 45.2844, 0.3284 ) }
    dend_35 { pt3dadd( 314.418, 298.491, 45.1391, 0.322 ) }
    dend_35 { pt3dadd( 314.047, 299.557, 44.94, 0.388 ) }
    dend_35 { pt3dadd( 313.574, 300.595, 44.7678, 0.3606 ) }
    dend_35 { pt3dadd( 313.042, 301.608, 44.672, 0.3506 ) }
    dend_35 { pt3dadd( 312.51, 302.621, 44.6617, 0.3636 ) }
    dend_35 { pt3dadd( 311.979, 303.631, 44.7429, 0.4622 ) }
    dend_35 { pt3dadd( 311.452, 304.634, 44.9324, 0.5134 ) }
    dend_35 { pt3dadd( 310.928, 305.625, 45.2189, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_35 { pt3dadd( 310.406, 306.617, 45.5633, 0.424 ) }
    dend_35 { pt3dadd( 309.919, 307.633, 45.9172, 0.3354 ) }
    dend_35 { pt3dadd( 309.499, 308.697, 46.2269, 0.2928 ) }
    dend_35 { pt3dadd( 309.095, 309.767, 46.4878, 0.3096 ) }
    dend_35 { pt3dadd( 308.691, 310.836, 46.7093, 0.3342 ) }
    dend_35 { pt3dadd( 308.25, 311.888, 46.9196, 0.4116 ) }
    dend_35 { pt3dadd( 307.713, 312.881, 47.1663, 0.4006 ) }
    dend_35 { pt3dadd( 307.125, 313.833, 47.4656, 0.4438 ) }
    dend_35 { pt3dadd( 306.536, 314.788, 47.801, 0.4428 ) }
    dend_35 { pt3dadd( 306.079, 315.802, 48.1253, 0.378 ) }
    dend_35 { pt3dadd( 305.859, 316.925, 48.3809, 0.3344 ) }
    dend_35 { pt3dadd( 305.669, 318.051, 48.5666, 0.3392 ) }
    dend_35 { pt3dadd( 305.478, 319.179, 48.6898, 0.3912 ) }
    dend_35 { pt3dadd( 305.273, 320.305, 48.7645, 0.5064 ) }
    dend_35 { pt3dadd( 304.95, 321.394, 48.8048, 0.6276 ) }
    dend_35 { pt3dadd( 304.465, 322.43, 48.8228, 0.6164 ) }
    dend_35 { pt3dadd( 303.98, 323.466, 48.8303, 0.5964 ) }
    dend_35 { pt3dadd( 303.566, 324.528, 48.8278, 0.5548 ) }
    dend_35 { pt3dadd( 303.266, 325.632, 48.8144, 0.7294 ) }
    dend_35 { pt3dadd( 302.974, 326.738, 48.7959, 0.7454 ) }
    dend_35 { pt3dadd( 302.681, 327.843, 48.7777, 0.6672 ) }
    dend_35 { pt3dadd( 302.409, 328.954, 48.767, 0.5878 ) }
    dend_35 { pt3dadd( 302.201, 330.078, 48.7729, 0.581 ) }
    dend_35 { pt3dadd( 302.036, 331.211, 48.8032, 0.5732 ) }
    dend_35 { pt3dadd( 301.872, 332.342, 48.8603, 0.7644 ) }
    dend_35 { pt3dadd( 301.707, 333.475, 48.9462, 0.806 ) }
    dend_35 { pt3dadd( 301.531, 334.603, 49.0753, 0.7998 ) }
    dend_35 { pt3dadd( 301.328, 335.716, 49.2797, 0.7364 ) }
    dend_35 { pt3dadd( 301.109, 336.815, 49.5608, 0.642 ) }
    dend_35 { pt3dadd( 300.889, 337.915, 49.8896, 0.5834 ) }
    dend_35 { pt3dadd( 300.616, 339.005, 50.23, 0.5954 ) }
    dend_35 { pt3dadd( 300.146, 340.031, 50.5243, 0.4902 ) }
    dend_35 { pt3dadd( 299.517, 340.987, 50.736, 0.4558 ) }
    dend_35 { pt3dadd( 298.889, 341.943, 50.8754, 0.5272 ) }
    dend_35 { pt3dadd( 298.275, 342.908, 50.9617, 0.6906 ) }
    dend_35 { pt3dadd( 297.725, 343.909, 51.0191, 0.6148 ) }
    dend_35 { pt3dadd( 297.233, 344.942, 51.0684, 0.4812 ) }
    dend_35 { pt3dadd( 296.742, 345.974, 51.1227, 0.4282 ) }
    dend_35 { pt3dadd( 296.262, 347.012, 51.1871, 0.529 ) }
    dend_35 { pt3dadd( 295.881, 348.086, 51.2585, 0.665 ) }
    dend_35 { pt3dadd( 295.616, 349.199, 51.3344, 0.7064 ) }
    dend_35 { pt3dadd( 295.353, 350.312, 51.4164, 0.6618 ) }
    dend_35 { pt3dadd( 295.138, 351.431, 51.5253, 0.4822 ) }
    dend_35 { pt3dadd( 295.015, 352.556, 51.6897, 0.392 ) }
    dend_35 { pt3dadd( 294.928, 353.677, 51.8997, 0.4184 ) }
    dend_35 { pt3dadd( 294.851, 354.801, 52.1254, 0.4426 ) }
    dend_35 { pt3dadd( 294.882, 355.93, 52.3132, 0.3776 ) }
    dend_35 { pt3dadd( 295.039, 357.063, 52.4135, 0.3338 ) }
    dend_35 { pt3dadd( 295.208, 358.154, 52.372, 0.338 ) }
    dend_35 { pt3dadd( 295.398, 359.217, 52.1811, 0.389 ) }
    dend_35 { pt3dadd( 295.602, 360.322, 51.97, 0.5028 ) }
    dend_35 { pt3dadd( 295.838, 361.431, 51.8594, 0.6202 ) }
    dend_35 { pt3dadd( 296.105, 362.524, 51.9036, 0.6054 ) }
    dend_35 { pt3dadd( 296.374, 363.617, 52.0761, 0.5628 ) }
    dend_35 { pt3dadd( 296.64, 364.71, 52.3429, 0.5572 ) }
    dend_35 { pt3dadd( 296.902, 365.804, 52.6568, 0.419 ) }
    dend_35 { pt3dadd( 297.085, 366.933, 52.9138, 0.326 ) }
    dend_35 { pt3dadd( 297.25, 368.066, 53.0925, 0.2756 ) }
    dend_35 { pt3dadd( 297.414, 369.198, 53.2045, 0.2766 ) }
    dend_35 { pt3dadd( 297.578, 370.33, 53.2703, 0.2782 ) }
    dend_35 { pt3dadd( 297.734, 371.462, 53.31, 0.2814 ) }
    dend_35 { pt3dadd( 297.771, 372.607, 53.3422, 0.287 ) }
    dend_35 { pt3dadd( 297.789, 373.75, 53.3845, 0.2988 ) }
    dend_35 { pt3dadd( 297.807, 374.895, 53.4439, 0.3142 ) }
    dend_35 { pt3dadd( 297.826, 376.037, 53.5251, 0.3736 ) }
    dend_35 { pt3dadd( 297.844, 377.181, 53.6332, 0.3342 ) }
    dend_35 { pt3dadd( 297.846, 378.322, 53.7958, 0.3004 ) }
    dend_35 { pt3dadd( 297.826, 379.449, 54.0459, 0.2756 ) }
    dend_35 { pt3dadd( 297.803, 380.576, 54.3589, 0.2764 ) }
    dend_35 { pt3dadd( 297.783, 381.703, 54.7131, 0.2778 ) }
    dend_35 { pt3dadd( 297.756, 382.829, 55.0858, 0.2806 ) }
    dend_35 { pt3dadd( 297.645, 383.961, 55.435, 0.2858 ) }
    dend_35 { pt3dadd( 297.471, 385.09, 55.736, 0.2952 ) }
    dend_35 { pt3dadd( 297.297, 386.219, 55.995, 0.3138 ) }
    dend_35 { pt3dadd( 297.124, 387.348, 56.2257, 0.343 ) }
    dend_35 { pt3dadd( 296.97, 388.476, 56.4407, 0.4218 ) }
    dend_35 { pt3dadd( 297.079, 389.606, 56.6728, 0.4488 ) }
    dend_35 { pt3dadd( 297.229, 390.73, 56.9229, 0.3902 ) }
    dend_35 { pt3dadd( 297.379, 391.853, 57.1816, 0.352 ) }
    dend_35 { pt3dadd( 297.512, 392.979, 57.4347, 0.3964 ) }
    dend_35 { pt3dadd( 297.447, 394.119, 57.6332, 0.3776 ) }
    dend_35 { pt3dadd( 297.327, 395.258, 57.773, 0.3766 ) }
    dend_35 { pt3dadd( 297.208, 396.395, 57.8651, 0.438 ) }
    dend_35 { pt3dadd( 297.088, 397.533, 57.9253, 0.4738 ) }
    dend_35 { pt3dadd( 296.979, 398.671, 57.9695, 0.461 ) }
    dend_35 { pt3dadd( 296.993, 399.815, 58.0138, 0.3644 ) }
    dend_35 { pt3dadd( 297.065, 400.957, 58.0734, 0.3094 ) }
    dend_35 { pt3dadd( 297.135, 402.099, 58.154, 0.292 ) }
    dend_35 { pt3dadd( 297.194, 403.241, 58.2616, 0.3066 ) }
    dend_35 { pt3dadd( 297.095, 404.373, 58.4268, 0.336 ) }
    dend_35 { pt3dadd( 296.793, 405.457, 58.6765, 0.3788 ) }
    dend_35 { pt3dadd( 296.491, 406.54, 58.9856, 0.5138 ) }
    dend_35 { pt3dadd( 296.187, 407.624, 59.3281, 0.4958 ) }
    dend_35 { pt3dadd( 295.865, 408.713, 59.6607, 0.3916 ) }
    dend_35 { pt3dadd( 295.517, 409.804, 59.9388, 0.3124 ) }
    dend_35 { pt3dadd( 295.169, 410.893, 60.1703, 0.2988 ) }
    dend_35 { pt3dadd( 294.823, 411.983, 60.3683, 0.3142 ) }
    dend_35 { pt3dadd( 294.503, 413.076, 60.5567, 0.3738 ) }
    dend_35 { pt3dadd( 294.426, 414.2, 60.802, 0.3344 ) }
    dend_35 { pt3dadd( 294.359, 415.323, 61.0957, 0.301 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_35 { pt3dadd( 294.293, 416.447, 61.4211, 0.2766 ) }
    dend_35 { pt3dadd( 294.221, 417.571, 61.754, 0.2782 ) }
    dend_35 { pt3dadd( 294.074, 418.698, 62.0491, 0.2814 ) }
    dend_35 { pt3dadd( 293.812, 419.811, 62.2563, 0.287 ) }
    dend_35 { pt3dadd( 293.549, 420.926, 62.3854, 0.2988 ) }
    dend_35 { pt3dadd( 293.288, 422.039, 62.4565, 0.3144 ) }
    dend_35 { pt3dadd( 293.052, 423.155, 62.4876, 0.3738 ) }
    dend_35 { pt3dadd( 293.023, 424.299, 62.496, 0.3346 ) }
    dend_35 { pt3dadd( 293.095, 425.441, 62.496, 0.3014 ) }
    dend_35 { pt3dadd( 293.165, 426.583, 62.496, 0.2772 ) }
    dend_35 { pt3dadd( 293.228, 427.724, 62.496, 0.2792 ) }
    dend_35 { pt3dadd( 293.213, 428.867, 62.496, 0.2834 ) }
    dend_35 { pt3dadd( 293.092, 430.006, 62.496, 0.2906 ) }
    dend_35 { pt3dadd( 292.974, 431.143, 62.496, 0.3056 ) }
    dend_35 { pt3dadd( 292.854, 432.281, 62.496, 0.3266 ) }
    dend_35 { pt3dadd( 292.727, 433.418, 62.496, 0.3976 ) }
    dend_35 { pt3dadd( 292.525, 434.543, 62.496, 0.3734 ) }
    dend_35 { pt3dadd( 292.183, 435.634, 62.496, 0.3988 ) }
    dend_35 { pt3dadd( 291.842, 436.727, 62.496, 0.3338 ) }
    dend_35 { pt3dadd( 291.501, 437.818, 62.496, 0.3 ) }
    dend_35 { pt3dadd( 291.177, 438.914, 62.496, 0.2746 ) }
    dend_35 { pt3dadd( 290.96, 440.037, 62.496, 0.2746 ) }
    dend_35 { pt3dadd( 290.772, 441.165, 62.496, 0.2746 ) }
    dend_35 { pt3dadd( 290.584, 442.294, 62.496, 0.2746 ) }
    dend_35 { pt3dadd( 290.396, 443.422, 62.496, 0.2746 ) }
    dend_35 { pt3dadd( 290.217, 444.553, 62.4957, 0.2746 ) }
    dend_35 { pt3dadd( 290.092, 445.69, 62.4957, 0.2746 ) }
    dend_35 { pt3dadd( 289.971, 446.827, 62.4957, 0.2746 ) }
    dend_35 { pt3dadd( 289.853, 447.965, 62.4954, 0.2746 ) }
    dend_35 { pt3dadd( 289.733, 449.102, 62.4952, 0.2746 ) }
    dend_35 { pt3dadd( 289.647, 450.241, 62.4952, 0.2746 ) }
    dend_35 { pt3dadd( 289.785, 451.375, 62.4946, 0.2746 ) }
    dend_35 { pt3dadd( 289.974, 452.505, 62.4938, 0.2748 ) }
    dend_35 { pt3dadd( 290.161, 453.633, 62.4926, 0.275 ) }
    dend_35 { pt3dadd( 290.349, 454.762, 62.4929, 0.2754 ) }
    dend_35 { pt3dadd( 290.513, 455.892, 62.4926, 0.2762 ) }
    dend_35 { pt3dadd( 290.53, 457.036, 62.4876, 0.2776 ) }
    dend_35 { pt3dadd( 290.605, 458.175, 62.475, 0.2802 ) }
    dend_35 { pt3dadd( 290.892, 459.27, 62.4733, 0.2852 ) }
    dend_35 { pt3dadd( 291.457, 460.207, 62.5436, 0.294 ) }
    dend_35 { pt3dadd( 292.227, 460.992, 62.4789, 0.3114 ) }
    dend_35 { pt3dadd( 292.967, 461.736, 62.2765, 0.3386 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 42/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 326.141, 269.664, 39.9904, 0.7476 ) }
    dend_34 { pt3dadd( 324.648, 269.961, 41.0334, 0.2288 ) }
    dend_34 { pt3dadd( 323.741, 270.609, 41.3381, 0.3556 ) }
    dend_34 { pt3dadd( 322.864, 271.332, 41.4316, 0.4464 ) }
    dend_34 { pt3dadd( 321.987, 272.05, 41.5352, 0.4894 ) }
    dend_34 { pt3dadd( 321.13, 272.795, 41.6881, 0.4896 ) }
    dend_34 { pt3dadd( 320.251, 273.52, 41.8452, 0.4184 ) }
    dend_34 { pt3dadd( 319.328, 274.195, 41.9866, 0.4064 ) }
    dend_34 { pt3dadd( 318.312, 274.703, 42.1266, 0.4866 ) }
    dend_34 { pt3dadd( 317.247, 275.109, 42.2822, 0.5956 ) }
    dend_34 { pt3dadd( 316.161, 275.442, 42.46, 0.5342 ) }
    dend_34 { pt3dadd( 315.071, 275.758, 42.6583, 0.5544 ) }
    dend_34 { pt3dadd( 314.079, 276.291, 42.8221, 0.6282 ) }
    dend_34 { pt3dadd( 313.078, 276.776, 42.8893, 0.5886 ) }
    dend_34 { pt3dadd( 312.06, 277.189, 43.0046, 0.6844 ) }
    dend_34 { pt3dadd( 311.154, 277.755, 43.2446, 0.7274 ) }
    dend_34 { pt3dadd( 310.344, 278.527, 43.4913, 0.7748 ) }
    dend_34 { pt3dadd( 309.394, 279.142, 43.687, 0.561 ) }
    dend_34 { pt3dadd( 308.364, 279.638, 43.832, 0.4844 ) }
    dend_34 { pt3dadd( 307.321, 280.094, 43.8945, 0.3932 ) }
    dend_34 { pt3dadd( 306.234, 280.237, 43.8242, 0.4352 ) }
    dend_34 { pt3dadd( 305.132, 280.48, 43.7413, 0.4032 ) }
    dend_34 { pt3dadd( 304.208, 281.034, 43.8029, 0.419 ) }
    dend_34 { pt3dadd( 303.333, 281.747, 43.9099, 0.5408 ) }
    dend_34 { pt3dadd( 302.5, 282.529, 44.0166, 0.5466 ) }
    dend_34 { pt3dadd( 301.648, 283.293, 44.121, 0.4812 ) }
    dend_34 { pt3dadd( 300.78, 284.038, 44.2196, 0.5012 ) }
    dend_34 { pt3dadd( 299.91, 284.78, 44.3016, 0.5398 ) }
    dend_34 { pt3dadd( 299.039, 285.524, 44.3733, 0.6038 ) }
    dend_34 { pt3dadd( 298.052, 286.091, 44.4587, 0.5306 ) }
    dend_34 { pt3dadd( 297.009, 286.558, 44.5623, 0.4102 ) }
    dend_34 { pt3dadd( 295.971, 286.999, 44.7423, 0.3418 ) }
    dend_34 { pt3dadd( 294.957, 287.421, 45.0251, 0.3776 ) }
    dend_34 { pt3dadd( 293.88, 287.56, 45.3779, 0.3416 ) }
    dend_34 { pt3dadd( 292.747, 287.608, 45.649, 0.3144 ) }
    dend_34 { pt3dadd( 291.802, 288.119, 45.7442, 0.3012 ) }
    dend_34 { pt3dadd( 290.845, 288.731, 45.8002, 0.3246 ) }
    dend_34 { pt3dadd( 289.936, 289.407, 45.9012, 0.3632 ) }
    dend_34 { pt3dadd( 289.042, 290.073, 46.0816, 0.46 ) }
    dend_34 { pt3dadd( 288.23, 290.861, 46.214, 0.5154 ) }
    dend_34 { pt3dadd( 287.441, 291.686, 46.3397, 0.534 ) }
    dend_34 { pt3dadd( 286.681, 292.503, 46.573, 0.52 ) }
    dend_34 { pt3dadd( 286.015, 293.366, 46.9056, 0.5004 ) }
    dend_34 { pt3dadd( 285.233, 294.19, 47.2189, 0.4336 ) }
    dend_34 { pt3dadd( 284.115, 294.284, 47.4802, 0.4578 ) }
    dend_34 { pt3dadd( 283.005, 294.018, 47.7098, 0.4696 ) }
    dend_34 { pt3dadd( 281.978, 294.492, 47.9088, 0.4234 ) }
    dend_34 { pt3dadd( 280.918, 294.873, 48.1482, 0.439 ) }
    dend_34 { pt3dadd( 279.953, 295.436, 48.4361, 0.4338 ) }
    dend_34 { pt3dadd( 279.131, 296.23, 48.7038, 0.3612 ) }
    dend_34 { pt3dadd( 278.255, 296.949, 48.9902, 0.3036 ) }
    dend_34 { pt3dadd( 277.342, 297.6, 49.3049, 0.2812 ) }
    dend_34 { pt3dadd( 276.289, 298.041, 49.5634, 0.287 ) }
    dend_34 { pt3dadd( 275.204, 298.405, 49.7462, 0.2976 ) }
    dend_34 { pt3dadd( 274.09, 298.654, 49.8831, 0.318 ) }
    dend_34 { pt3dadd( 273.017, 298.925, 50.0654, 0.3508 ) }
    dend_34 { pt3dadd( 271.905, 298.793, 50.1362, 0.4374 ) }
    dend_34 { pt3dadd( 270.926, 298.204, 50.1774, 0.4726 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_34 { pt3dadd( 269.898, 297.707, 50.1914, 0.459 ) }
    dend_34 { pt3dadd( 268.851, 297.283, 50.1558, 0.3606 ) }
    dend_34 { pt3dadd( 267.738, 297.021, 50.1385, 0.3026 ) }
    dend_34 { pt3dadd( 266.641, 296.714, 50.1511, 0.2794 ) }
    dend_34 { pt3dadd( 265.621, 296.214, 50.2398, 0.2834 ) }
    dend_34 { pt3dadd( 264.642, 295.644, 50.3874, 0.2908 ) }
    dend_34 { pt3dadd( 263.654, 295.071, 50.5537, 0.3058 ) }
    dend_34 { pt3dadd( 262.681, 294.478, 50.7167, 0.3268 ) }
    dend_34 { pt3dadd( 261.756, 293.803, 50.843, 0.398 ) }
    dend_34 { pt3dadd( 260.863, 293.092, 50.9331, 0.3744 ) }
    dend_34 { pt3dadd( 260.053, 292.284, 50.9942, 0.4006 ) }
    dend_34 { pt3dadd( 259.268, 291.452, 51.0406, 0.337 ) }
    dend_34 { pt3dadd( 258.52, 290.586, 51.0854, 0.3058 ) }
    dend_34 { pt3dadd( 257.781, 289.713, 51.1372, 0.2852 ) }
    dend_34 { pt3dadd( 257.052, 288.832, 51.2078, 0.2942 ) }
    dend_34 { pt3dadd( 256.279, 288.024, 51.3262, 0.3118 ) }
    dend_34 { pt3dadd( 255.346, 287.455, 51.5284, 0.3394 ) }
    dend_34 { pt3dadd( 254.492, 286.739, 51.641, 0.415 ) }
    dend_34 { pt3dadd( 253.722, 285.94, 51.7409, 0.4364 ) }
    dend_34 { pt3dadd( 252.766, 285.354, 51.9366, 0.3662 ) }
    dend_34 { pt3dadd( 251.765, 284.865, 52.1996, 0.3124 ) }
    dend_34 { pt3dadd( 250.668, 284.615, 52.5014, 0.2988 ) }
    dend_34 { pt3dadd( 249.56, 284.386, 52.8158, 0.3142 ) }
    dend_34 { pt3dadd( 248.468, 284.054, 53.1126, 0.3734 ) }
    dend_34 { pt3dadd( 247.388, 283.679, 53.3624, 0.3338 ) }
    dend_34 { pt3dadd( 246.305, 283.306, 53.5634, 0.3 ) }
    dend_34 { pt3dadd( 245.223, 282.95, 53.7564, 0.2746 ) }
    dend_34 { pt3dadd( 244.142, 282.628, 54.0005, 0.2746 ) }
    dend_34 { pt3dadd( 243.052, 282.328, 54.2811, 0.2746 ) }
    dend_34 { pt3dadd( 241.94, 282.062, 54.553, 0.2746 ) }
    dend_34 { pt3dadd( 240.844, 281.746, 54.8344, 0.2746 ) }
    dend_34 { pt3dadd( 239.808, 281.283, 55.1625, 0.2746 ) }
    dend_34 { pt3dadd( 238.772, 280.865, 55.557, 0.2746 ) }
    dend_34 { pt3dadd( 237.664, 280.733, 56.0241, 0.2746 ) }
    dend_34 { pt3dadd( 236.549, 280.71, 56.5662, 0.2746 ) }
    dend_34 { pt3dadd( 235.447, 280.681, 57.192, 0.2746 ) }
    dend_34 { pt3dadd( 234.345, 280.664, 57.8799, 0.2746 ) }
    dend_34 { pt3dadd( 233.219, 280.676, 58.5771, 0.2746 ) }
    dend_34 { pt3dadd( 232.086, 280.695, 59.2637, 0.2746 ) }
    dend_34 { pt3dadd( 230.994, 280.693, 59.9886, 0.2746 ) }
    dend_34 { pt3dadd( 230.172, 280.652, 60.9078, 0.2746 ) }
    dend_34 { pt3dadd( 229.325, 280.791, 61.922, 0.2746 ) }
    dend_34 { pt3dadd( 228.251, 281.125, 62.8544, 0.2746 ) }
    dend_34 { pt3dadd( 227.148, 281.398, 63.6975, 0.2746 ) }
    dend_34 { pt3dadd( 226.054, 281.697, 64.4745, 0.2746 ) }
    dend_34 { pt3dadd( 225.079, 281.938, 65.3055, 0.2746 ) }
    dend_34 { pt3dadd( 224.341, 282.383, 66.2544, 0.2746 ) }
    dend_34 { pt3dadd( 223.943, 283.193, 67.2882, 0.2746 ) }
    dend_34 { pt3dadd( 223.881, 284.219, 68.308, 0.2746 ) }
    dend_34 { pt3dadd( 224.616, 285.08, 69.1351, 0.2746 ) }
    dend_34 { pt3dadd( 225.574, 285.693, 69.8046, 0.2744 ) }
    dend_34 { pt3dadd( 226.288, 286.582, 70.3598, 0.2744 ) }
    dend_34 { pt3dadd( 226.847, 287.554, 70.8968, 0.2742 ) }
    dend_34 { pt3dadd( 227.234, 288.495, 71.6024, 0.274 ) }
    dend_34 { pt3dadd( 227.313, 289.539, 72.4606, 0.2736 ) }
    dend_34 { pt3dadd( 227.313, 290.484, 73.4964, 0.2728 ) }
    dend_34 { pt3dadd( 226.987, 291.218, 74.713, 0.2712 ) }
    dend_34 { pt3dadd( 226.067, 291.578, 75.9307, 0.2684 ) }
    dend_34 { pt3dadd( 225.195, 291.606, 77.1672, 0.2626 ) }
    dend_34 { pt3dadd( 224.18, 291.606, 78.2832, 0.2542 ) }
    dend_34 { pt3dadd( 223.073, 291.606, 79.1829, 0.2288 ) }
    dend_34 { pt3dadd( 221.936, 291.72, 80.36, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 62/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 326.648, 433.649, 50.5932, 0.5444 ) }
    dend_28 { pt3dadd( 326.096, 434.796, 51.0874, 0.4338 ) }
    dend_28 { pt3dadd( 326.036, 435.931, 51.4786, 0.3952 ) }
    dend_28 { pt3dadd( 326.023, 437.076, 51.7549, 0.4302 ) }
    dend_28 { pt3dadd( 325.974, 438.216, 51.9406, 0.4358 ) }
    dend_28 { pt3dadd( 325.76, 439.323, 52.0876, 0.5052 ) }
    dend_28 { pt3dadd( 325.342, 440.376, 52.2519, 0.5768 ) }
    dend_28 { pt3dadd( 325.077, 441.469, 52.4138, 0.5278 ) }
    dend_28 { pt3dadd( 324.959, 442.598, 52.5851, 0.4042 ) }
    dend_28 { pt3dadd( 324.698, 443.695, 52.694, 0.3356 ) }
    dend_28 { pt3dadd( 324.337, 444.758, 52.7223, 0.3424 ) }
    dend_28 { pt3dadd( 324.04, 445.859, 52.7671, 0.391 ) }
    dend_28 { pt3dadd( 323.759, 446.956, 52.8567, 0.5362 ) }
    dend_28 { pt3dadd( 323.457, 448.036, 53.0032, 0.5368 ) }
    dend_28 { pt3dadd( 323.157, 449.106, 53.2036, 0.4698 ) }
    dend_28 { pt3dadd( 323.027, 450.187, 53.3294, 0.448 ) }
    dend_28 { pt3dadd( 322.931, 451.268, 53.3086, 0.5966 ) }
    dend_28 { pt3dadd( 322.388, 452.248, 53.2199, 0.6406 ) }
    dend_28 { pt3dadd( 321.721, 453.173, 53.0925, 0.7018 ) }
    dend_28 { pt3dadd( 321.12, 454.145, 52.9346, 0.6858 ) }
    dend_28 { pt3dadd( 320.618, 455.16, 52.7363, 0.599 ) }
    dend_28 { pt3dadd( 320.259, 456.228, 52.4899, 0.4846 ) }
    dend_28 { pt3dadd( 319.983, 457.327, 52.2368, 0.5062 ) }
    dend_28 { pt3dadd( 319.773, 458.451, 52.0086, 0.5548 ) }
    dend_28 { pt3dadd( 319.471, 459.543, 51.777, 0.6028 ) }
    dend_28 { pt3dadd( 319.03, 460.579, 51.5088, 0.668 ) }
    dend_28 { pt3dadd( 318.533, 461.597, 51.2355, 0.676 ) }
    dend_28 { pt3dadd( 318.004, 462.61, 51.0014, 0.5516 ) }
    dend_28 { pt3dadd( 317.523, 463.643, 50.7903, 0.5394 ) }
    dend_28 { pt3dadd( 317.157, 464.71, 50.5616, 0.6006 ) }
    dend_28 { pt3dadd( 316.819, 465.791, 50.3359, 0.536 ) }
    dend_28 { pt3dadd( 316.45, 466.871, 50.1539, 0.5946 ) }
    dend_28 { pt3dadd( 315.908, 467.863, 50.0262, 0.5224 ) }
    dend_28 { pt3dadd( 315.221, 468.779, 49.9467, 0.5816 ) }
    dend_28 { pt3dadd( 314.822, 469.81, 49.9106, 0.6684 ) }
    dend_28 { pt3dadd( 314.68, 470.945, 49.912, 0.7128 ) }
    dend_28 { pt3dadd( 314.531, 472.08, 49.9402, 0.6736 ) }
    dend_28 { pt3dadd( 314.372, 473.212, 49.9884, 0.5054 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 314.21, 474.345, 50.0578, 0.4288 ) }
    dend_28 { pt3dadd( 314.133, 475.483, 50.1561, 0.5166 ) }
    dend_28 { pt3dadd( 314.133, 476.627, 50.2866, 0.4786 ) }
    dend_28 { pt3dadd( 314.133, 477.768, 50.4641, 0.468 ) }
    dend_28 { pt3dadd( 314.133, 478.87, 50.7469, 0.6154 ) }
    dend_28 { pt3dadd( 314.132, 479.947, 51.1409, 0.5352 ) }
    dend_28 { pt3dadd( 314.117, 481.061, 51.5315, 0.5006 ) }
    dend_28 { pt3dadd( 314.077, 482.205, 51.8454, 0.5702 ) }
    dend_28 { pt3dadd( 313.832, 483.308, 52.078, 0.7356 ) }
    dend_28 { pt3dadd( 313.427, 484.378, 52.2276, 0.865 ) }
    dend_28 { pt3dadd( 312.974, 485.412, 52.3519, 0.8228 ) }
    dend_28 { pt3dadd( 312.48, 486.417, 52.4927, 0.7404 ) }
    dend_28 { pt3dadd( 312.055, 487.464, 52.6103, 0.6074 ) }
    dend_28 { pt3dadd( 311.995, 488.566, 52.694, 0.4948 ) }
    dend_28 { pt3dadd( 311.911, 489.63, 52.621, 0.55 ) }
    dend_28 { pt3dadd( 311.294, 490.504, 52.395, 0.5156 ) }
    dend_28 { pt3dadd( 310.414, 491.191, 52.0831, 0.4282 ) }
    dend_28 { pt3dadd( 310.4, 492.054, 51.6424, 0.3824 ) }
    dend_28 { pt3dadd( 311.122, 492.858, 51.2305, 0.4186 ) }
    dend_28 { pt3dadd( 311.187, 493.849, 51.0849, 0.5832 ) }
    dend_28 { pt3dadd( 310.493, 494.714, 51.0686, 0.6448 ) }
    dend_28 { pt3dadd( 310.062, 495.723, 50.9905, 0.5694 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 22/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 326.648, 433.649, 50.5932, 0.5444 ) }
    dend_27 { pt3dadd( 326.359, 433.955, 49.261, 0.2288 ) }
    dend_27 { pt3dadd( 325.664, 434.247, 48.8398, 0.2728 ) }
    dend_27 { pt3dadd( 324.654, 433.752, 48.7225, 0.2712 ) }
    dend_27 { pt3dadd( 323.572, 433.417, 48.6195, 0.2684 ) }
    dend_27 { pt3dadd( 322.664, 433.279, 48.7141, 0.2626 ) }
    dend_27 { pt3dadd( 321.78, 433.218, 48.9073, 0.2542 ) }
    dend_27 { pt3dadd( 320.926, 432.489, 49.0322, 0.2288 ) }
    dend_27 { pt3dadd( 319.974, 431.896, 48.9835, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 31/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 312.759, 223.922, 24.853, 0.5976 ) }
    dend_12 { pt3dadd( 311.902, 224.002, 25.9403, 0.2288 ) }
    dend_12 { pt3dadd( 311.961, 223.746, 27.9498, 0.3916 ) }
    dend_12 { pt3dadd( 312.402, 223.622, 28.9254, 0.3686 ) }
    dend_12 { pt3dadd( 312.361, 222.77, 29.7612, 0.3588 ) }
    dend_12 { pt3dadd( 311.82, 221.941, 30.2229, 0.41 ) }
    dend_12 { pt3dadd( 310.932, 221.283, 30.5284, 0.3976 ) }
    dend_12 { pt3dadd( 310.052, 220.734, 30.9232, 0.4384 ) }
    dend_12 { pt3dadd( 309.243, 220.06, 31.3642, 0.4328 ) }
    dend_12 { pt3dadd( 308.21, 219.57, 31.7458, 0.3596 ) }
    dend_12 { pt3dadd( 307.146, 219.167, 32.167, 0.3006 ) }
    dend_12 { pt3dadd( 306.075, 218.856, 32.6687, 0.2756 ) }
    dend_12 { pt3dadd( 305.074, 218.577, 33.2657, 0.2764 ) }
    dend_12 { pt3dadd( 304.033, 218.793, 33.8873, 0.278 ) }
    dend_12 { pt3dadd( 303.026, 219.242, 34.4574, 0.2808 ) }
    dend_12 { pt3dadd( 301.905, 219.388, 34.8754, 0.2862 ) }
    dend_12 { pt3dadd( 300.835, 219.706, 35.2528, 0.296 ) }
    dend_12 { pt3dadd( 299.924, 219.868, 35.7048, 0.3154 ) }
    dend_12 { pt3dadd( 298.95, 219.564, 36.1866, 0.3446 ) }
    dend_12 { pt3dadd( 297.861, 219.769, 36.6825, 0.432 ) }
    dend_12 { pt3dadd( 296.78, 220.007, 37.205, 0.4322 ) }
    dend_12 { pt3dadd( 295.698, 219.903, 37.7378, 0.5328 ) }
    dend_12 { pt3dadd( 294.634, 219.655, 38.2914, 0.4604 ) }
    dend_12 { pt3dadd( 293.529, 219.548, 38.8206, 0.4406 ) }
    dend_12 { pt3dadd( 292.428, 219.645, 39.3137, 0.5338 ) }
    dend_12 { pt3dadd( 291.35, 219.943, 39.765, 0.5334 ) }
    dend_12 { pt3dadd( 290.316, 220.392, 40.1338, 0.4574 ) }
    dend_12 { pt3dadd( 289.241, 220.679, 40.369, 0.455 ) }
    dend_12 { pt3dadd( 288.185, 220.458, 40.4429, 0.463 ) }
    dend_12 { pt3dadd( 287.158, 220.006, 40.4718, 0.4176 ) }
    dend_12 { pt3dadd( 286.065, 219.729, 40.5754, 0.3976 ) }
    dend_12 { pt3dadd( 284.949, 219.538, 40.7649, 0.506 ) }
    dend_12 { pt3dadd( 283.87, 219.216, 41.0446, 0.458 ) }
    dend_12 { pt3dadd( 282.887, 218.693, 41.4198, 0.4348 ) }
    dend_12 { pt3dadd( 282.045, 217.974, 41.8659, 0.529 ) }
    dend_12 { pt3dadd( 281.318, 217.133, 42.3374, 0.495 ) }
    dend_12 { pt3dadd( 280.749, 216.17, 42.7832, 0.5304 ) }
    dend_12 { pt3dadd( 280.104, 215.233, 43.1424, 0.5764 ) }
    dend_12 { pt3dadd( 279.332, 214.509, 43.4258, 0.5274 ) }
    dend_12 { pt3dadd( 278.262, 214.641, 43.6579, 0.4028 ) }
    dend_12 { pt3dadd( 277.57, 215.102, 43.8659, 0.3346 ) }
    dend_12 { pt3dadd( 276.471, 215.276, 44.1636, 0.3334 ) }
    dend_12 { pt3dadd( 275.428, 215.645, 44.5452, 0.4102 ) }
    dend_12 { pt3dadd( 274.493, 216.254, 44.9806, 0.3978 ) }
    dend_12 { pt3dadd( 273.645, 217.014, 45.4017, 0.4388 ) }
    dend_12 { pt3dadd( 272.861, 217.833, 45.8156, 0.4334 ) }
    dend_12 { pt3dadd( 272.038, 218.535, 46.2988, 0.3604 ) }
    dend_12 { pt3dadd( 271.013, 218.861, 46.8026, 0.302 ) }
    dend_12 { pt3dadd( 269.894, 218.885, 47.2886, 0.2784 ) }
    dend_12 { pt3dadd( 268.786, 218.885, 47.7988, 0.2816 ) }
    dend_12 { pt3dadd( 267.652, 218.885, 48.2812, 0.2874 ) }
    dend_12 { pt3dadd( 266.535, 219.002, 48.7474, 0.2994 ) }
    dend_12 { pt3dadd( 265.478, 219.359, 49.2215, 0.3152 ) }
    dend_12 { pt3dadd( 264.413, 219.701, 49.6675, 0.3756 ) }
    dend_12 { pt3dadd( 263.299, 219.846, 50.0195, 0.3378 ) }
    dend_12 { pt3dadd( 262.37, 220.274, 50.4364, 0.3074 ) }
    dend_12 { pt3dadd( 262.07, 221.206, 51.0339, 0.288 ) }
    dend_12 { pt3dadd( 261.448, 221.858, 51.7818, 0.3008 ) }
    dend_12 { pt3dadd( 260.553, 222.281, 52.6994, 0.3178 ) }
    dend_12 { pt3dadd( 260.103, 222.971, 53.7869, 0.3804 ) }
    dend_12 { pt3dadd( 259.726, 223.722, 54.9945, 0.3464 ) }
    dend_12 { pt3dadd( 259.204, 224.624, 56.0848, 0.3244 ) }
    dend_12 { pt3dadd( 258.628, 225.606, 56.9097, 0.3146 ) }
    dend_12 { pt3dadd( 257.965, 226.399, 57.6853, 0.3742 ) }
    dend_12 { pt3dadd( 257.309, 227.187, 58.4256, 0.3354 ) }
    dend_12 { pt3dadd( 256.536, 227.992, 59.0332, 0.3026 ) }
    dend_12 { pt3dadd( 255.778, 228.848, 59.4608, 0.2796 ) }
    dend_12 { pt3dadd( 255.049, 229.729, 59.7719, 0.2838 ) }
    dend_12 { pt3dadd( 254.349, 230.635, 60.0037, 0.2916 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( 253.672, 231.556, 60.1616, 0.307 ) }
    dend_12 { pt3dadd( 253.013, 232.492, 60.2722, 0.3304 ) }
    dend_12 { pt3dadd( 252.284, 233.363, 60.4153, 0.3982 ) }
    dend_12 { pt3dadd( 251.498, 234.15, 60.6357, 0.4068 ) }
    dend_12 { pt3dadd( 250.552, 234.79, 60.8345, 0.305 ) }
    dend_12 { pt3dadd( 249.566, 235.37, 61.1374, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 6/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 312.759, 223.922, 24.853, 0.5976 ) }
    dend_7 { pt3dadd( 311.727, 224.329, 24.8919, 0.467 ) }
    dend_7 { pt3dadd( 310.686, 224.684, 25.0905, 0.5456 ) }
    dend_7 { pt3dadd( 309.635, 224.97, 25.4311, 0.5074 ) }
    dend_7 { pt3dadd( 308.609, 225.357, 25.8622, 0.4142 ) }
    dend_7 { pt3dadd( 307.919, 225.948, 26.0055, 0.3492 ) }
    dend_7 { pt3dadd( 306.82, 226.199, 26.1639, 0.3912 ) }
    dend_7 { pt3dadd( 305.743, 226.299, 26.3912, 0.368 ) }
    dend_7 { pt3dadd( 304.872, 227.026, 26.5824, 0.358 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 15/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 292.967, 461.736, 62.2765, 0.3386 ) }
    dend_37 { pt3dadd( 293.277, 462.022, 62.1524, 0.4136 ) }
    dend_37 { pt3dadd( 294.239, 462.505, 62.1863, 0.434 ) }
    dend_37 { pt3dadd( 295.25, 462.958, 62.3465, 0.3616 ) }
    dend_37 { pt3dadd( 296.221, 463.526, 62.5901, 0.3042 ) }
    dend_37 { pt3dadd( 297.239, 464.025, 62.8659, 0.2826 ) }
    dend_37 { pt3dadd( 298.289, 464.478, 63.1098, 0.2892 ) }
    dend_37 { pt3dadd( 299.28, 465.042, 63.3069, 0.3028 ) }
    dend_37 { pt3dadd( 300.292, 465.568, 63.4676, 0.3218 ) }
    dend_37 { pt3dadd( 301.345, 466.015, 63.6084, 0.3874 ) }
    dend_37 { pt3dadd( 302.381, 466.479, 63.7798, 0.3608 ) }
    dend_37 { pt3dadd( 303.388, 466.972, 64.0192, 0.3448 ) }
    dend_37 { pt3dadd( 304.423, 467.431, 64.2698, 0.383 ) }
    dend_37 { pt3dadd( 305.483, 467.862, 64.4902, 0.3518 ) }
    dend_37 { pt3dadd( 306.553, 468.261, 64.6828, 0.3332 ) }
    dend_37 { pt3dadd( 307.635, 468.636, 64.8586, 0.3364 ) }
    dend_37 { pt3dadd( 308.691, 469.064, 65.0446, 0.3874 ) }
    dend_37 { pt3dadd( 309.688, 469.589, 65.2775, 0.4934 ) }
    dend_37 { pt3dadd( 310.683, 470.099, 65.5701, 0.633 ) }
    dend_37 { pt3dadd( 311.646, 470.571, 65.9607, 0.4826 ) }
    dend_37 { pt3dadd( 312.684, 470.956, 66.365, 0.3596 ) }
    dend_37 { pt3dadd( 313.629, 471.109, 66.5042, 0.2906 ) }
    dend_37 { pt3dadd( 314.585, 470.825, 66.449, 0.3056 ) }
    dend_37 { pt3dadd( 315.262, 470.066, 66.6148, 0.3266 ) }
    dend_37 { pt3dadd( 315.996, 469.448, 67.0121, 0.3976 ) }
    dend_37 { pt3dadd( 316.887, 468.804, 67.4596, 0.3736 ) }
    dend_37 { pt3dadd( 317.796, 468.147, 67.9039, 0.399 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 42/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 292.967, 461.736, 62.2765, 0.3386 ) }
    dend_36 { pt3dadd( 293.188, 462.253, 61.8836, 0.2288 ) }
    dend_36 { pt3dadd( 293.484, 463.27, 62.1678, 0.2746 ) }
    dend_36 { pt3dadd( 293.387, 464.394, 62.2625, 0.2746 ) }
    dend_36 { pt3dadd( 292.979, 465.439, 62.2418, 0.2746 ) }
    dend_36 { pt3dadd( 292.464, 466.457, 62.1807, 0.2746 ) }
    dend_36 { pt3dadd( 291.966, 467.475, 62.0553, 0.2746 ) }
    dend_36 { pt3dadd( 291.562, 468.532, 61.9189, 0.2746 ) }
    dend_36 { pt3dadd( 291.364, 469.649, 61.8436, 0.2746 ) }
    dend_36 { pt3dadd( 291.236, 470.779, 61.7994, 0.2746 ) }
    dend_36 { pt3dadd( 291.236, 471.916, 61.7168, 0.2748 ) }
    dend_36 { pt3dadd( 291.236, 473.054, 61.5994, 0.2748 ) }
    dend_36 { pt3dadd( 291.236, 474.196, 61.4673, 0.2752 ) }
    dend_36 { pt3dadd( 291.236, 475.339, 61.3242, 0.2756 ) }
    dend_36 { pt3dadd( 291.236, 476.482, 61.1755, 0.2766 ) }
    dend_36 { pt3dadd( 291.236, 477.626, 61.0453, 0.2784 ) }
    dend_36 { pt3dadd( 291.224, 478.769, 60.9269, 0.2818 ) }
    dend_36 { pt3dadd( 291.092, 479.897, 60.8026, 0.2878 ) }
    dend_36 { pt3dadd( 290.647, 480.941, 60.6567, 0.3 ) }
    dend_36 { pt3dadd( 289.915, 481.806, 60.4705, 0.3164 ) }
    dend_36 { pt3dadd( 289.035, 482.511, 60.1919, 0.3778 ) }
    dend_36 { pt3dadd( 288.359, 483.329, 59.7657, 0.3422 ) }
    dend_36 { pt3dadd( 288.247, 484.371, 59.2466, 0.315 ) }
    dend_36 { pt3dadd( 288.611, 485.439, 58.7261, 0.3036 ) }
    dend_36 { pt3dadd( 289.026, 486.478, 58.1885, 0.3232 ) }
    dend_36 { pt3dadd( 289.105, 487.537, 57.6136, 0.3902 ) }
    dend_36 { pt3dadd( 288.919, 488.624, 57.052, 0.3646 ) }
    dend_36 { pt3dadd( 288.745, 489.75, 56.5757, 0.3592 ) }
    dend_36 { pt3dadd( 288.497, 490.855, 56.1537, 0.3738 ) }
    dend_36 { pt3dadd( 288.186, 491.878, 55.6889, 0.5106 ) }
    dend_36 { pt3dadd( 288.169, 492.939, 55.2544, 0.4586 ) }
    dend_36 { pt3dadd( 288.297, 494.038, 55.0043, 0.4744 ) }
    dend_36 { pt3dadd( 288.161, 495.139, 54.8285, 0.4164 ) }
    dend_36 { pt3dadd( 288.059, 496.262, 54.6104, 0.504 ) }
    dend_36 { pt3dadd( 288.04, 497.388, 54.3427, 0.405 ) }
    dend_36 { pt3dadd( 288.076, 498.514, 54.0313, 0.3472 ) }
    dend_36 { pt3dadd( 288.142, 499.639, 53.6687, 0.3148 ) }
    dend_36 { pt3dadd( 288.234, 500.769, 53.2848, 0.351 ) }
    dend_36 { pt3dadd( 288.357, 501.904, 52.9273, 0.4064 ) }
    dend_36 { pt3dadd( 288.471, 503.035, 52.5871, 0.5672 ) }
    dend_36 { pt3dadd( 288.557, 504.139, 52.204, 0.5838 ) }
    dend_36 { pt3dadd( 288.687, 505.232, 51.7782, 0.607 ) }
    dend_36 { pt3dadd( 288.888, 506.3, 51.4987, 0.4588 ) }
    dend_36 { pt3dadd( 288.885, 507.408, 51.2532, 0.4256 ) }
    dend_36 { pt3dadd( 288.181, 507.802, 50.846, 0.3362 ) }
    dend_36 { pt3dadd( 287.081, 507.856, 50.4764, 0.305 ) }
    dend_36 { pt3dadd( 286.233, 508.548, 50.2088, 0.2796 ) }
    dend_36 { pt3dadd( 285.781, 509.573, 50.0912, 0.305 ) }
    dend_36 { pt3dadd( 285.284, 510.58, 49.8156, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 91/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 310.062, 495.723, 50.9905, 0.5694 ) }
    dend_30 { pt3dadd( 309.766, 496.758, 51.044, 0.4346 ) }
    dend_30 { pt3dadd( 309.433, 497.797, 51.2173, 0.3894 ) }
    dend_30 { pt3dadd( 308.868, 498.771, 51.333, 0.4554 ) }
    dend_30 { pt3dadd( 308.254, 499.666, 51.266, 0.537 ) }
    dend_30 { pt3dadd( 307.503, 500.513, 51.2126, 0.4286 ) }
    dend_30 { pt3dadd( 306.961, 501.432, 51.2103, 0.3436 ) }
    dend_30 { pt3dadd( 306.905, 502.517, 51.0602, 0.3092 ) }
    dend_30 { pt3dadd( 307.07, 503.629, 50.8648, 0.3334 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_30 { pt3dadd( 306.835, 504.7, 50.7013, 0.4102 ) }
    dend_30 { pt3dadd( 306.202, 505.642, 50.5924, 0.3978 ) }
    dend_30 { pt3dadd( 305.576, 506.588, 50.5193, 0.4386 ) }
    dend_30 { pt3dadd( 304.991, 507.569, 50.4188, 0.4332 ) }
    dend_30 { pt3dadd( 304.452, 508.573, 50.2995, 0.3602 ) }
    dend_30 { pt3dadd( 303.958, 509.599, 50.1472, 0.3016 ) }
    dend_30 { pt3dadd( 303.519, 510.65, 49.9691, 0.2778 ) }
    dend_30 { pt3dadd( 303.089, 511.703, 49.7787, 0.2804 ) }
    dend_30 { pt3dadd( 302.398, 512.513, 49.546, 0.2854 ) }
    dend_30 { pt3dadd( 301.461, 513.116, 49.3402, 0.2946 ) }
    dend_30 { pt3dadd( 300.575, 513.823, 49.2576, 0.3124 ) }
    dend_30 { pt3dadd( 299.701, 514.548, 49.2411, 0.3406 ) }
    dend_30 { pt3dadd( 298.788, 515.23, 49.2279, 0.4174 ) }
    dend_30 { pt3dadd( 297.876, 515.901, 49.273, 0.441 ) }
    dend_30 { pt3dadd( 296.937, 516.533, 49.3886, 0.3748 ) }
    dend_30 { pt3dadd( 295.93, 517.059, 49.4791, 0.3282 ) }
    dend_30 { pt3dadd( 294.876, 517.471, 49.5664, 0.329 ) }
    dend_30 { pt3dadd( 293.822, 517.801, 49.7434, 0.3648 ) }
    dend_30 { pt3dadd( 292.797, 518.225, 49.9134, 0.4932 ) }
    dend_30 { pt3dadd( 291.796, 518.762, 49.9808, 0.4316 ) }
    dend_30 { pt3dadd( 290.903, 519.433, 50.0394, 0.3982 ) }
    dend_30 { pt3dadd( 289.878, 519.79, 50.1024, 0.4012 ) }
    dend_30 { pt3dadd( 289.074, 520.458, 50.0612, 0.5508 ) }
    dend_30 { pt3dadd( 288.568, 521.467, 50.0388, 0.5848 ) }
    dend_30 { pt3dadd( 287.771, 522.274, 49.9974, 0.4576 ) }
    dend_30 { pt3dadd( 286.658, 522.485, 49.8156, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 26/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 310.062, 495.723, 50.9905, 0.5694 ) }
    dend_29 { pt3dadd( 310.51, 496.377, 49.0311, 0.4576 ) }
    dend_29 { pt3dadd( 311.127, 497.299, 48.2518, 0.6072 ) }
    dend_29 { pt3dadd( 311.493, 498.376, 47.9637, 0.5086 ) }
    dend_29 { pt3dadd( 312.0, 499.398, 47.6123, 0.5072 ) }
    dend_29 { pt3dadd( 312.545, 500.214, 47.0196, 0.5386 ) }
    dend_29 { pt3dadd( 312.437, 501.265, 46.2834, 0.4316 ) }
    dend_29 { pt3dadd( 312.298, 502.385, 45.5193, 0.3502 ) }
    dend_29 { pt3dadd( 312.161, 503.506, 44.7605, 0.3164 ) }
    dend_29 { pt3dadd( 311.799, 504.466, 43.916, 0.3728 ) }
    dend_29 { pt3dadd( 311.398, 505.359, 43.0158, 0.356 ) }
    dend_29 { pt3dadd( 310.928, 506.0, 40.7582, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 38/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 304.872, 227.026, 26.5824, 0.358 ) }
    dend_11 { pt3dadd( 305.437, 226.517, 26.8873, 0.2288 ) }
    dend_11 { pt3dadd( 305.255, 226.221, 25.2133, 0.3328 ) }
    dend_11 { pt3dadd( 304.243, 226.07, 24.4921, 0.3722 ) }
    dend_11 { pt3dadd( 303.391, 225.349, 23.7921, 0.5062 ) }
    dend_11 { pt3dadd( 302.575, 224.564, 23.1153, 0.458 ) }
    dend_11 { pt3dadd( 301.728, 223.852, 22.4313, 0.436 ) }
    dend_11 { pt3dadd( 300.863, 223.193, 21.749, 0.5254 ) }
    dend_11 { pt3dadd( 300.012, 222.555, 21.0829, 0.517 ) }
    dend_11 { pt3dadd( 299.204, 221.926, 20.3986, 0.4322 ) }
    dend_11 { pt3dadd( 298.345, 221.32, 19.7369, 0.3814 ) }
    dend_11 { pt3dadd( 297.31, 220.841, 19.2669, 0.4576 ) }
    dend_11 { pt3dadd( 296.273, 220.717, 19.2469, 0.4576 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 304.872, 227.026, 26.5824, 0.358 ) }
    dend_8 { pt3dadd( 303.991, 227.628, 26.6902, 0.4074 ) }
    dend_8 { pt3dadd( 303.102, 228.348, 26.7152, 0.3978 ) }
    dend_8 { pt3dadd( 302.26, 229.115, 26.6778, 0.4136 ) }
    dend_8 { pt3dadd( 301.216, 229.581, 26.5933, 0.5086 ) }
    dend_8 { pt3dadd( 300.15, 229.99, 26.4515, 0.5942 ) }
    dend_8 { pt3dadd( 299.105, 230.387, 26.2034, 0.7362 ) }
    dend_8 { pt3dadd( 298.051, 230.706, 25.8707, 0.623 ) }
    dend_8 { pt3dadd( 296.94, 230.836, 25.5147, 0.6378 ) }
    dend_8 { pt3dadd( 295.851, 231.143, 25.2241, 0.72 ) }
    dend_8 { pt3dadd( 294.975, 231.876, 24.9975, 0.8348 ) }
    dend_8 { pt3dadd( 294.26, 232.756, 24.83, 0.772 ) }
    dend_8 { pt3dadd( 293.891, 233.839, 24.7118, 0.621 ) }
    dend_8 { pt3dadd( 293.484, 234.899, 24.6143, 0.5078 ) }
    dend_8 { pt3dadd( 292.743, 235.743, 24.4648, 0.4054 ) }
    dend_8 { pt3dadd( 291.855, 236.394, 24.2484, 0.3798 ) }
    dend_8 { pt3dadd( 291.038, 237.157, 24.1028, 0.4504 ) }
    dend_8 { pt3dadd( 290.028, 237.595, 23.9252, 0.4656 ) }
    dend_8 { pt3dadd( 288.902, 237.544, 23.7626, 0.5972 ) }
    dend_8 { pt3dadd( 287.829, 237.452, 23.56, 0.5688 ) }
    dend_8 { pt3dadd( 286.889, 237.966, 23.4471, 0.6936 ) }
    dend_8 { pt3dadd( 286.221, 238.839, 23.4792, 0.7514 ) }
    dend_8 { pt3dadd( 285.497, 239.724, 23.5229, 0.7842 ) }
    dend_8 { pt3dadd( 284.683, 240.521, 23.568, 0.7488 ) }
    dend_8 { pt3dadd( 283.894, 241.331, 23.601, 0.694 ) }
    dend_8 { pt3dadd( 283.342, 242.328, 23.6135, 0.5378 ) }
    dend_8 { pt3dadd( 282.767, 243.279, 23.5451, 0.5144 ) }
    dend_8 { pt3dadd( 281.93, 243.966, 23.4656, 0.5518 ) }
    dend_8 { pt3dadd( 280.982, 244.545, 23.444, 0.4572 ) }
    dend_8 { pt3dadd( 280.111, 245.212, 23.3131, 0.3914 ) }
    dend_8 { pt3dadd( 279.24, 245.91, 23.1276, 0.4236 ) }
    dend_8 { pt3dadd( 278.408, 246.688, 22.9625, 0.4212 ) }
    dend_8 { pt3dadd( 277.685, 247.571, 22.8359, 0.489 ) }
    dend_8 { pt3dadd( 276.846, 248.333, 22.7433, 0.4926 ) }
    dend_8 { pt3dadd( 275.838, 248.858, 22.6834, 0.6356 ) }
    dend_8 { pt3dadd( 274.816, 249.374, 22.6632, 0.6954 ) }
    dend_8 { pt3dadd( 273.859, 249.995, 22.6632, 0.66 ) }
    dend_8 { pt3dadd( 272.875, 250.575, 22.6698, 0.6178 ) }
    dend_8 { pt3dadd( 271.811, 250.983, 22.6803, 0.6548 ) }
    dend_8 { pt3dadd( 270.773, 251.457, 22.6948, 0.6208 ) }
    dend_8 { pt3dadd( 270.013, 252.275, 22.7149, 0.5986 ) }
    dend_8 { pt3dadd( 269.345, 253.204, 22.7435, 0.5886 ) }
    dend_8 { pt3dadd( 268.433, 253.863, 22.7846, 0.6466 ) }
    dend_8 { pt3dadd( 267.463, 254.468, 22.8409, 0.6118 ) }
    dend_8 { pt3dadd( 266.688, 255.295, 22.9139, 0.551 ) }
    dend_8 { pt3dadd( 265.965, 256.182, 23.0137, 0.6506 ) }
    dend_8 { pt3dadd( 265.2, 257.007, 23.1953, 0.7194 ) }
    dend_8 { pt3dadd( 264.43, 257.831, 23.4368, 0.7228 ) }
    dend_8 { pt3dadd( 263.827, 258.793, 23.6735, 0.6454 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_8 { pt3dadd( 262.959, 259.5, 23.8793, 0.4508 ) }
    dend_8 { pt3dadd( 261.863, 259.728, 24.1186, 0.3378 ) }
    dend_8 { pt3dadd( 260.84, 260.165, 24.3946, 0.2988 ) }
    dend_8 { pt3dadd( 259.94, 260.865, 24.5961, 0.3142 ) }
    dend_8 { pt3dadd( 259.019, 261.544, 24.7341, 0.3734 ) }
    dend_8 { pt3dadd( 258.033, 262.121, 24.8238, 0.3338 ) }
    dend_8 { pt3dadd( 257.125, 262.818, 24.8713, 0.3 ) }
    dend_8 { pt3dadd( 256.221, 263.519, 24.8849, 0.2746 ) }
    dend_8 { pt3dadd( 255.319, 264.222, 24.8839, 0.2746 ) }
    dend_8 { pt3dadd( 254.416, 264.924, 24.8889, 0.2746 ) }
    dend_8 { pt3dadd( 253.658, 265.779, 24.9169, 0.2746 ) }
    dend_8 { pt3dadd( 253.143, 266.797, 24.9833, 0.2748 ) }
    dend_8 { pt3dadd( 252.633, 267.817, 25.0769, 0.275 ) }
    dend_8 { pt3dadd( 252.123, 268.839, 25.1862, 0.2754 ) }
    dend_8 { pt3dadd( 251.696, 269.899, 25.2889, 0.276 ) }
    dend_8 { pt3dadd( 251.379, 270.999, 25.3641, 0.2772 ) }
    dend_8 { pt3dadd( 251.066, 272.098, 25.4124, 0.2796 ) }
    dend_8 { pt3dadd( 250.751, 273.199, 25.4374, 0.2838 ) }
    dend_8 { pt3dadd( 250.438, 274.298, 25.4461, 0.2918 ) }
    dend_8 { pt3dadd( 249.815, 275.257, 25.4445, 0.3062 ) }
    dend_8 { pt3dadd( 249.158, 276.194, 25.4379, 0.3354 ) }
    dend_8 { pt3dadd( 248.501, 277.131, 25.4285, 0.3778 ) }
    dend_8 { pt3dadd( 247.843, 278.066, 25.4156, 0.5118 ) }
    dend_8 { pt3dadd( 247.59, 279.181, 25.3976, 0.492 ) }
    dend_8 { pt3dadd( 247.403, 280.31, 25.3718, 0.3848 ) }
    dend_8 { pt3dadd( 247.215, 281.438, 25.3355, 0.3002 ) }
    dend_8 { pt3dadd( 247.026, 282.567, 25.2859, 0.2748 ) }
    dend_8 { pt3dadd( 246.839, 283.695, 25.222, 0.275 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 317.796, 468.147, 67.9039, 0.399 ) }
    dend_39 { pt3dadd( 317.507, 469.04, 68.3931, 0.3342 ) }
    dend_39 { pt3dadd( 317.124, 470.075, 68.8136, 0.3006 ) }
    dend_39 { pt3dadd( 316.618, 471.012, 68.8856, 0.2756 ) }
    dend_39 { pt3dadd( 316.477, 471.711, 68.5213, 0.2766 ) }
    dend_39 { pt3dadd( 317.099, 472.623, 68.2248, 0.2784 ) }
    dend_39 { pt3dadd( 317.903, 473.418, 68.0028, 0.2816 ) }
    dend_39 { pt3dadd( 318.083, 474.542, 67.804, 0.2874 ) }
    dend_39 { pt3dadd( 317.84, 475.659, 67.6421, 0.2994 ) }
    dend_39 { pt3dadd( 317.622, 476.781, 67.5209, 0.3152 ) }
    dend_39 { pt3dadd( 317.279, 477.872, 67.4108, 0.3756 ) }
    dend_39 { pt3dadd( 317.008, 478.963, 67.2252, 0.3378 ) }
    dend_39 { pt3dadd( 316.934, 479.994, 66.8872, 0.3074 ) }
    dend_39 { pt3dadd( 316.88, 481.0, 66.4488, 0.288 ) }
    dend_39 { pt3dadd( 316.88, 481.992, 66.0887, 0.3004 ) }
    dend_39 { pt3dadd( 316.785, 482.767, 66.166, 0.3172 ) }
    dend_39 { pt3dadd( 316.333, 483.52, 66.4748, 0.3792 ) }
    dend_39 { pt3dadd( 315.604, 484.39, 66.7164, 0.3446 ) }
    dend_39 { pt3dadd( 315.048, 485.343, 66.8265, 0.3198 ) }
    dend_39 { pt3dadd( 314.682, 486.415, 66.8324, 0.3124 ) }
    dend_39 { pt3dadd( 314.273, 487.482, 66.7509, 0.3392 ) }
    dend_39 { pt3dadd( 313.749, 488.463, 66.5378, 0.4206 ) }
    dend_39 { pt3dadd( 313.085, 489.364, 66.2903, 0.4174 ) }
    dend_39 { pt3dadd( 312.764, 490.404, 66.1315, 0.4746 ) }
    dend_39 { pt3dadd( 312.834, 491.532, 65.9935, 0.5018 ) }
    dend_39 { pt3dadd( 313.029, 492.65, 65.8577, 0.4782 ) }
    dend_39 { pt3dadd( 313.286, 493.764, 65.7507, 0.5656 ) }
    dend_39 { pt3dadd( 313.614, 494.859, 65.667, 0.547 ) }
    dend_39 { pt3dadd( 313.98, 495.943, 65.5903, 0.476 ) }
    dend_39 { pt3dadd( 314.221, 497.055, 65.5183, 0.52 ) }
    dend_39 { pt3dadd( 314.471, 498.145, 65.5071, 0.4356 ) }
    dend_39 { pt3dadd( 314.591, 499.195, 65.4024, 0.3996 ) }
    dend_39 { pt3dadd( 314.49, 500.223, 65.123, 0.4326 ) }
    dend_39 { pt3dadd( 314.229, 501.286, 64.8043, 0.4688 ) }
    dend_39 { pt3dadd( 313.812, 502.329, 64.6136, 0.428 ) }
    dend_39 { pt3dadd( 313.161, 503.224, 64.4445, 0.4178 ) }
    dend_39 { pt3dadd( 312.812, 504.259, 64.4319, 0.54 ) }
    dend_39 { pt3dadd( 312.728, 505.368, 64.5865, 0.539 ) }
    dend_39 { pt3dadd( 312.465, 506.432, 64.876, 0.4972 ) }
    dend_39 { pt3dadd( 312.384, 507.565, 65.1361, 0.3842 ) }
    dend_39 { pt3dadd( 312.326, 508.707, 65.3394, 0.3482 ) }
    dend_39 { pt3dadd( 312.303, 509.846, 65.4606, 0.3534 ) }
    dend_39 { pt3dadd( 312.301, 510.979, 65.485, 0.4718 ) }
    dend_39 { pt3dadd( 312.286, 512.119, 65.4716, 0.3922 ) }
    dend_39 { pt3dadd( 312.203, 513.236, 65.5617, 0.3236 ) }
    dend_39 { pt3dadd( 312.305, 514.361, 65.7622, 0.2712 ) }
    dend_39 { pt3dadd( 312.651, 515.445, 66.0162, 0.2684 ) }
    dend_39 { pt3dadd( 312.491, 516.563, 66.2337, 0.2626 ) }
    dend_39 { pt3dadd( 312.327, 517.695, 66.4471, 0.2542 ) }
    dend_39 { pt3dadd( 312.301, 518.809, 66.7411, 0.2288 ) }
    dend_39 { pt3dadd( 312.301, 519.739, 67.9305, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 317.796, 468.147, 67.9039, 0.399 ) }
    dend_38 { pt3dadd( 318.411, 467.882, 68.1419, 0.6864 ) }
    dend_38 { pt3dadd( 319.069, 467.316, 68.6526, 0.4452 ) }
    dend_38 { pt3dadd( 319.75, 466.464, 68.8078, 0.3274 ) }
    dend_38 { pt3dadd( 320.493, 466.118, 68.6818, 0.2784 ) }
    dend_38 { pt3dadd( 321.249, 465.702, 68.462, 0.2816 ) }
    dend_38 { pt3dadd( 321.868, 465.224, 68.6263, 0.2874 ) }
    dend_38 { pt3dadd( 322.196, 465.017, 69.211, 0.2994 ) }
    dend_38 { pt3dadd( 323.046, 464.654, 69.9745, 0.3152 ) }
    dend_38 { pt3dadd( 323.991, 464.236, 70.6871, 0.3754 ) }
    dend_38 { pt3dadd( 324.927, 463.876, 71.1301, 0.3378 ) }
    dend_38 { pt3dadd( 325.837, 463.411, 71.3852, 0.3072 ) }
    dend_38 { pt3dadd( 326.379, 462.987, 71.7934, 0.2876 ) }
    dend_38 { pt3dadd( 326.858, 462.604, 72.4847, 0.2998 ) }
    dend_38 { pt3dadd( 327.67, 462.02, 73.2693, 0.316 ) }
    dend_38 { pt3dadd( 328.708, 461.665, 73.9516, 0.377 ) }
    dend_38 { pt3dadd( 329.758, 461.769, 74.6348, 0.3408 ) }
    dend_38 { pt3dadd( 330.759, 461.523, 75.3298, 0.3124 ) }
    dend_38 { pt3dadd( 331.155, 460.534, 75.9315, 0.2988 ) }
    dend_38 { pt3dadd( 332.03, 460.211, 76.5506, 0.3142 ) }
    dend_38 { pt3dadd( 333.172, 460.208, 76.9468, 0.3734 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_38 { pt3dadd( 334.285, 460.205, 77.107, 0.3338 ) }
    dend_38 { pt3dadd( 335.39, 460.096, 77.2386, 0.3 ) }
    dend_38 { pt3dadd( 336.504, 459.849, 77.2584, 0.2746 ) }
    dend_38 { pt3dadd( 337.629, 459.661, 77.173, 0.2746 ) }
    dend_38 { pt3dadd( 338.717, 459.72, 76.9138, 0.2746 ) }
    dend_38 { pt3dadd( 339.604, 459.751, 76.4476, 0.2748 ) }
    dend_38 { pt3dadd( 340.523, 459.751, 75.9086, 0.2748 ) }
    dend_38 { pt3dadd( 341.652, 459.751, 75.511, 0.2752 ) }
    dend_38 { pt3dadd( 342.757, 459.751, 75.346, 0.2756 ) }
    dend_38 { pt3dadd( 343.361, 459.751, 75.6697, 0.2766 ) }
    dend_38 { pt3dadd( 343.462, 459.897, 76.4635, 0.2784 ) }
    dend_38 { pt3dadd( 343.954, 460.389, 77.3923, 0.2818 ) }
    dend_38 { pt3dadd( 344.859, 461.016, 78.05, 0.2878 ) }
    dend_38 { pt3dadd( 345.688, 461.775, 78.426, 0.3002 ) }
    dend_38 { pt3dadd( 346.392, 462.645, 78.5128, 0.3166 ) }
    dend_38 { pt3dadd( 346.622, 463.71, 78.3465, 0.3782 ) }
    dend_38 { pt3dadd( 346.645, 464.839, 78.0402, 0.3428 ) }
    dend_38 { pt3dadd( 346.656, 465.971, 77.6989, 0.3164 ) }
    dend_38 { pt3dadd( 346.674, 467.111, 77.4166, 0.3058 ) }
    dend_38 { pt3dadd( 346.717, 468.253, 77.2002, 0.3274 ) }
    dend_38 { pt3dadd( 346.997, 469.35, 77.0294, 0.3978 ) }
    dend_38 { pt3dadd( 347.131, 470.449, 76.8463, 0.3812 ) }
    dend_38 { pt3dadd( 347.401, 471.542, 76.7822, 0.3772 ) }
    dend_38 { pt3dadd( 348.064, 472.424, 76.8838, 0.4688 ) }
    dend_38 { pt3dadd( 348.545, 473.454, 77.0204, 0.387 ) }
    dend_38 { pt3dadd( 348.997, 474.504, 77.1677, 0.3136 ) }
    dend_38 { pt3dadd( 349.648, 475.442, 77.3237, 0.2542 ) }
    dend_38 { pt3dadd( 350.13, 476.419, 77.5835, 0.2288 ) }
    dend_38 { pt3dadd( 351.224, 476.693, 78.12, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 246.839, 283.695, 25.222, 0.275 ) }
    dend_10 { pt3dadd( 246.76, 284.088, 25.1243, 0.2754 ) }
    dend_10 { pt3dadd( 246.539, 285.197, 24.9651, 0.2762 ) }
    dend_10 { pt3dadd( 246.317, 286.305, 24.7702, 0.2774 ) }
    dend_10 { pt3dadd( 246.093, 287.414, 24.5631, 0.2798 ) }
    dend_10 { pt3dadd( 245.81, 288.507, 24.3866, 0.2844 ) }
    dend_10 { pt3dadd( 245.306, 289.513, 24.3473, 0.2928 ) }
    dend_10 { pt3dadd( 244.803, 290.521, 24.4098, 0.3094 ) }
    dend_10 { pt3dadd( 244.293, 291.528, 24.5316, 0.3338 ) }
    dend_10 { pt3dadd( 243.743, 292.526, 24.6178, 0.4108 ) }
    dend_10 { pt3dadd( 243.188, 293.497, 24.5912, 0.3988 ) }
    dend_10 { pt3dadd( 242.745, 294.485, 24.4323, 0.4408 ) }
    dend_10 { pt3dadd( 242.168, 295.431, 24.2322, 0.4372 ) }
    dend_10 { pt3dadd( 241.386, 296.257, 24.1322, 0.3674 ) }
    dend_10 { pt3dadd( 240.588, 297.016, 24.2209, 0.3148 ) }
    dend_10 { pt3dadd( 239.764, 297.705, 24.492, 0.3032 ) }
    dend_10 { pt3dadd( 238.923, 298.435, 24.8279, 0.3226 ) }
    dend_10 { pt3dadd( 238.237, 299.35, 25.1173, 0.389 ) }
    dend_10 { pt3dadd( 237.551, 300.266, 25.3412, 0.3638 ) }
    dend_10 { pt3dadd( 236.867, 301.183, 25.4936, 0.3502 ) }
    dend_10 { pt3dadd( 236.212, 302.12, 25.5903, 0.393 ) }
    dend_10 { pt3dadd( 235.613, 303.094, 25.6623, 0.371 ) }
    dend_10 { pt3dadd( 235.013, 304.068, 25.7415, 0.3648 ) }
    dend_10 { pt3dadd( 234.414, 305.043, 25.8456, 0.415 ) }
    dend_10 { pt3dadd( 233.815, 306.009, 25.9985, 0.4366 ) }
    dend_10 { pt3dadd( 233.218, 306.948, 26.2512, 0.3664 ) }
    dend_10 { pt3dadd( 232.621, 307.887, 26.567, 0.313 ) }
    dend_10 { pt3dadd( 231.978, 308.798, 26.8996, 0.2986 ) }
    dend_10 { pt3dadd( 231.145, 309.568, 27.1777, 0.32 ) }
    dend_10 { pt3dadd( 230.229, 310.248, 27.3601, 0.3546 ) }
    dend_10 { pt3dadd( 229.405, 311.038, 27.4407, 0.4428 ) }
    dend_10 { pt3dadd( 228.697, 311.889, 27.3922, 0.49 ) }
    dend_10 { pt3dadd( 228.268, 312.849, 27.2415, 0.4552 ) }
    dend_10 { pt3dadd( 228.12, 313.951, 27.2279, 0.5284 ) }
    dend_10 { pt3dadd( 227.864, 315.007, 27.3342, 0.4522 ) }
    dend_10 { pt3dadd( 227.272, 315.98, 27.4619, 0.424 ) }
    dend_10 { pt3dadd( 226.587, 316.897, 27.5796, 0.5094 ) }
    dend_10 { pt3dadd( 225.901, 317.812, 27.6812, 0.458 ) }
    dend_10 { pt3dadd( 225.215, 318.728, 27.7546, 0.4656 ) }
    dend_10 { pt3dadd( 224.597, 319.684, 27.7861, 0.4362 ) }
    dend_10 { pt3dadd( 224.11, 320.719, 27.7964, 0.3658 ) }
    dend_10 { pt3dadd( 223.628, 321.756, 27.8048, 0.3118 ) }
    dend_10 { pt3dadd( 223.145, 322.793, 27.8162, 0.2964 ) }
    dend_10 { pt3dadd( 222.706, 323.848, 27.8321, 0.316 ) }
    dend_10 { pt3dadd( 222.362, 324.938, 27.8543, 0.3472 ) }
    dend_10 { pt3dadd( 222.08, 326.047, 27.8861, 0.4294 ) }
    dend_10 { pt3dadd( 221.868, 327.17, 27.9308, 0.4644 ) }
    dend_10 { pt3dadd( 221.574, 328.267, 27.9909, 0.4124 ) }
    dend_10 { pt3dadd( 221.061, 329.288, 28.0689, 0.425 ) }
    dend_10 { pt3dadd( 220.384, 330.185, 28.1932, 0.3772 ) }
    dend_10 { pt3dadd( 219.57, 330.967, 28.3928, 0.4058 ) }
    dend_10 { pt3dadd( 218.889, 331.875, 28.6182, 0.3464 ) }
    dend_10 { pt3dadd( 218.375, 332.894, 28.845, 0.3244 ) }
    dend_10 { pt3dadd( 218.122, 333.98, 29.1057, 0.3144 ) }
    dend_10 { pt3dadd( 218.122, 335.1, 29.4288, 0.3742 ) }
    dend_10 { pt3dadd( 218.033, 336.207, 29.794, 0.3352 ) }
    dend_10 { pt3dadd( 217.814, 337.306, 30.1619, 0.3024 ) }
    dend_10 { pt3dadd( 217.594, 338.407, 30.5133, 0.2792 ) }
    dend_10 { pt3dadd( 217.375, 339.506, 30.8249, 0.2832 ) }
    dend_10 { pt3dadd( 217.121, 340.603, 31.0223, 0.2906 ) }
    dend_10 { pt3dadd( 216.814, 341.691, 31.0257, 0.3038 ) }
    dend_10 { pt3dadd( 216.499, 342.77, 30.863, 0.331 ) }
    dend_10 { pt3dadd( 216.184, 343.848, 30.585, 0.369 ) }
    dend_10 { pt3dadd( 215.842, 344.922, 30.2473, 0.5002 ) }
    dend_10 { pt3dadd( 215.463, 345.989, 29.9048, 0.447 ) }
    dend_10 { pt3dadd( 215.082, 347.056, 29.5926, 0.4148 ) }
    dend_10 { pt3dadd( 214.701, 348.123, 29.3272, 0.491 ) }
    dend_10 { pt3dadd( 214.302, 349.189, 29.1312, 0.4292 ) }
    dend_10 { pt3dadd( 213.776, 350.183, 29.0595, 0.3868 ) }
    dend_10 { pt3dadd( 213.022, 350.966, 29.1592, 0.4136 ) }
    dend_10 { pt3dadd( 212.279, 351.715, 29.2625, 0.4102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_10 { pt3dadd( 211.823, 352.691, 29.2762, 0.433 ) }
    dend_10 { pt3dadd( 211.706, 353.81, 29.3364, 0.5618 ) }
    dend_10 { pt3dadd( 211.662, 354.931, 29.4672, 0.6102 ) }
    dend_10 { pt3dadd( 211.375, 356.009, 29.6075, 0.4806 ) }
    dend_10 { pt3dadd( 210.851, 357.023, 29.7035, 0.3892 ) }
    dend_10 { pt3dadd( 210.271, 358.009, 29.7578, 0.413 ) }
    dend_10 { pt3dadd( 209.723, 359.012, 29.764, 0.4328 ) }
    dend_10 { pt3dadd( 209.349, 360.085, 29.7002, 0.3594 ) }
    dend_10 { pt3dadd( 209.208, 361.216, 29.5669, 0.3 ) }
    dend_10 { pt3dadd( 209.436, 362.317, 29.3712, 0.2748 ) }
    dend_10 { pt3dadd( 209.714, 363.416, 29.078, 0.2748 ) }
    dend_10 { pt3dadd( 209.81, 364.506, 28.6353, 0.2752 ) }
    dend_10 { pt3dadd( 209.842, 365.587, 28.0624, 0.2756 ) }
    dend_10 { pt3dadd( 209.764, 366.622, 27.3786, 0.2766 ) }
    dend_10 { pt3dadd( 209.425, 367.466, 26.5812, 0.2782 ) }
    dend_10 { pt3dadd( 209.194, 368.467, 25.8448, 0.2814 ) }
    dend_10 { pt3dadd( 209.061, 369.572, 25.2774, 0.2872 ) }
    dend_10 { pt3dadd( 208.961, 370.701, 24.9433, 0.2988 ) }
    dend_10 { pt3dadd( 208.9, 371.834, 24.9025, 0.3144 ) }
    dend_10 { pt3dadd( 208.708, 372.886, 25.1996, 0.374 ) }
    dend_10 { pt3dadd( 208.192, 373.454, 25.8897, 0.335 ) }
    dend_10 { pt3dadd( 207.304, 373.964, 26.6986, 0.302 ) }
    dend_10 { pt3dadd( 206.217, 374.198, 27.4569, 0.2782 ) }
    dend_10 { pt3dadd( 205.271, 374.614, 28.2055, 0.2814 ) }
    dend_10 { pt3dadd( 204.742, 375.588, 28.7983, 0.287 ) }
    dend_10 { pt3dadd( 204.29, 376.637, 29.1788, 0.2986 ) }
    dend_10 { pt3dadd( 203.893, 377.708, 29.3339, 0.314 ) }
    dend_10 { pt3dadd( 203.438, 378.735, 29.2726, 0.3732 ) }
    dend_10 { pt3dadd( 202.803, 379.683, 29.1444, 0.3334 ) }
    dend_10 { pt3dadd( 202.161, 380.628, 28.961, 0.299 ) }
    dend_10 { pt3dadd( 201.52, 381.574, 28.7101, 0.2728 ) }
    dend_10 { pt3dadd( 200.943, 382.427, 28.2498, 0.2712 ) }
    dend_10 { pt3dadd( 200.365, 383.278, 27.6525, 0.2684 ) }
    dend_10 { pt3dadd( 199.788, 384.129, 26.9777, 0.2626 ) }
    dend_10 { pt3dadd( 199.177, 385.088, 26.405, 0.2542 ) }
    dend_10 { pt3dadd( 198.568, 386.055, 25.9709, 0.2288 ) }
    dend_10 { pt3dadd( 197.959, 387.023, 25.4612, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 37/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 246.839, 283.695, 25.222, 0.275 ) }
    dend_9 { pt3dadd( 246.237, 283.99, 25.5942, 0.2288 ) }
    dend_9 { pt3dadd( 245.214, 284.492, 25.7967, 0.2814 ) }
    dend_9 { pt3dadd( 244.211, 285.032, 25.8882, 0.2872 ) }
    dend_9 { pt3dadd( 243.275, 285.69, 25.9719, 0.2978 ) }
    dend_9 { pt3dadd( 242.355, 286.371, 26.044, 0.3186 ) }
    dend_9 { pt3dadd( 241.423, 287.033, 26.1086, 0.352 ) }
    dend_9 { pt3dadd( 240.476, 287.672, 26.1672, 0.4394 ) }
    dend_9 { pt3dadd( 239.493, 288.258, 26.2204, 0.4764 ) }
    dend_9 { pt3dadd( 238.506, 288.829, 26.292, 0.4658 ) }
    dend_9 { pt3dadd( 237.534, 289.398, 26.4349, 0.3732 ) }
    dend_9 { pt3dadd( 236.624, 290.034, 26.6056, 0.327 ) }
    dend_9 { pt3dadd( 235.842, 290.859, 26.6881, 0.3194 ) }
    dend_9 { pt3dadd( 235.028, 291.651, 26.74, 0.3834 ) }
    dend_9 { pt3dadd( 234.152, 292.37, 26.8222, 0.352 ) }
    dend_9 { pt3dadd( 233.24, 293.056, 26.8936, 0.3346 ) }
    dend_9 { pt3dadd( 232.345, 293.755, 26.913, 0.3334 ) }
    dend_9 { pt3dadd( 231.587, 294.58, 26.8488, 0.41 ) }
    dend_9 { pt3dadd( 230.795, 295.346, 26.7641, 0.3976 ) }
    dend_9 { pt3dadd( 229.834, 295.924, 26.7801, 0.4384 ) }
    dend_9 { pt3dadd( 229.062, 296.695, 26.8877, 0.4328 ) }
    dend_9 { pt3dadd( 228.489, 297.684, 26.9999, 0.3594 ) }
    dend_9 { pt3dadd( 227.973, 298.705, 27.1125, 0.3 ) }
    dend_9 { pt3dadd( 227.462, 299.728, 27.2232, 0.2746 ) }
    dend_9 { pt3dadd( 226.911, 300.73, 27.3208, 0.2746 ) }
    dend_9 { pt3dadd( 226.283, 301.685, 27.3988, 0.2748 ) }
    dend_9 { pt3dadd( 225.63, 302.619, 27.4938, 0.2748 ) }
    dend_9 { pt3dadd( 224.992, 303.544, 27.6584, 0.275 ) }
    dend_9 { pt3dadd( 224.31, 304.438, 27.8548, 0.2754 ) }
    dend_9 { pt3dadd( 223.55, 305.292, 28.012, 0.2762 ) }
    dend_9 { pt3dadd( 222.752, 306.112, 28.121, 0.2778 ) }
    dend_9 { pt3dadd( 221.911, 306.887, 28.1828, 0.2804 ) }
    dend_9 { pt3dadd( 220.997, 307.56, 28.2008, 0.2854 ) }
    dend_9 { pt3dadd( 219.963, 308.044, 28.1845, 0.2946 ) }
    dend_9 { pt3dadd( 219.045, 308.658, 28.1492, 0.3114 ) }
    dend_9 { pt3dadd( 218.352, 309.54, 28.0599, 0.3448 ) }
    dend_9 { pt3dadd( 217.529, 310.268, 27.9304, 0.3954 ) }
    dend_9 { pt3dadd( 216.558, 310.871, 27.8407, 0.5444 ) }
    dend_9 { pt3dadd( 215.639, 311.532, 27.8484, 0.5532 ) }
    dend_9 { pt3dadd( 214.783, 312.26, 27.9814, 0.4948 ) }
    dend_9 { pt3dadd( 214.066, 313.126, 28.1831, 0.52 ) }
    dend_9 { pt3dadd( 213.466, 314.1, 28.4124, 0.6052 ) }
    dend_9 { pt3dadd( 212.958, 315.121, 28.6614, 0.5756 ) }
    dend_9 { pt3dadd( 212.525, 316.18, 28.9195, 0.5178 ) }
    dend_9 { pt3dadd( 212.018, 317.159, 29.2538, 0.4236 ) }
    dend_9 { pt3dadd( 211.658, 318.186, 29.6601, 0.4148 ) }
    dend_9 { pt3dadd( 211.742, 319.259, 30.1339, 0.5092 ) }
    dend_9 { pt3dadd( 212.264, 320.184, 30.679, 0.6036 ) }
    dend_9 { pt3dadd( 212.937, 321.08, 31.1965, 0.7124 ) }
    dend_9 { pt3dadd( 213.743, 321.878, 31.6338, 0.7782 ) }
    dend_9 { pt3dadd( 214.646, 322.579, 32.0006, 0.6454 ) }
    dend_9 { pt3dadd( 215.408, 323.414, 32.3128, 0.492 ) }
    dend_9 { pt3dadd( 216.032, 324.372, 32.6306, 0.4436 ) }
    dend_9 { pt3dadd( 216.555, 325.347, 33.0784, 0.581 ) }
    dend_9 { pt3dadd( 217.087, 326.281, 33.7131, 0.648 ) }
    dend_9 { pt3dadd( 217.677, 327.154, 34.5321, 0.5394 ) }
    dend_9 { pt3dadd( 218.027, 328.166, 35.4556, 0.5532 ) }
    dend_9 { pt3dadd( 218.336, 329.084, 36.5543, 0.4494 ) }
    dend_9 { pt3dadd( 217.979, 329.973, 37.6967, 0.4266 ) }
    dend_9 { pt3dadd( 217.126, 330.154, 38.8965, 0.4774 ) }
    dend_9 { pt3dadd( 216.645, 330.11, 40.2231, 0.5762 ) }
    dend_9 { pt3dadd( 216.519, 329.225, 41.4506, 0.5084 ) }
    dend_9 { pt3dadd( 215.781, 328.379, 43.4, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_40, dend_23, dend_20, dend_17, dend_14, dend_3, dend_0, dend_44, dend_41, dend_31, dend_24, dend_22, dend_21, dend_19, dend_18, dend_16, dend_15, dend_13, dend_4, dend_2, dend_1, dend_43, dend_42, dend_33, dend_32, dend_26, dend_25, dend_6, dend_5, dend_35, dend_34, dend_28, dend_27, dend_12, dend_7, dend_37, dend_36, dend_30, dend_29, dend_11, dend_8, dend_39, dend_38, dend_10, dend_9]}
    dend = new SectionList()
    dend_40 dend.append()
    dend_23 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_14 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_44 dend.append()
    dend_41 dend.append()
    dend_31 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_43 dend.append()
    dend_42 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_39 dend.append()
    dend_38 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_20713, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_20713 = new SectionList()
    soma_0 OneSecGrp_SectionRef_20713.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_9 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.0174046  // units: uF/cm2
    forsec axon cm = 2.0174046  // units: uF/cm2
    forsec dend cm = 2.0174046  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 77.32611  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.813545E-11  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.108290575  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 1.7029497E-9  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.08075542  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.59926695  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 1.0405801E-7  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0061705797  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 6.6073175E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.6876587E-4  // units: S cm-2
        e_pas_nml2 = -97.63376  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.8808437E-5  // units: S cm-2
        e_pas_nml2 = -97.63376  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0072074E-7  // units: S cm-2
        e_pas_nml2 = -97.63376  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.8602509E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.005146585  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478043748
    forsec soma {
        insert CaDynamics_478043748
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_14 nseg = 3
    dend_0 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 7
    dend_19 nseg = 3
    dend_18 nseg = 3
    dend_13 nseg = 7
    dend_2 nseg = 7
    dend_1 nseg = 3
    dend_32 nseg = 5
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_35 nseg = 11
    dend_34 nseg = 7
    dend_28 nseg = 3
    dend_12 nseg = 5
    dend_36 nseg = 3
    dend_8 nseg = 5
    dend_39 nseg = 3
    dend_38 nseg = 3
    dend_10 nseg = 7
    dend_9 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478043748


