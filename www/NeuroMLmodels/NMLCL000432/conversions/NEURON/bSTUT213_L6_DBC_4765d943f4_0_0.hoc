// Cell: bSTUT213_L6_DBC_4765d943f4_0_0
/*
{
  "id" : "bSTUT213_L6_DBC_4765d943f4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.997, 10.9227, 2.76", "-5.98572, 9.95629, 9.45641, 2.16", "-8.88802, 12.2582, 5.98366, 2.52", "-10.9942, 13.762, 3.71533, 2.52", "-12.526, 14.76, 2.25633, 2.52", "-13.3316, 15.2367, 1.54767, 2.52", "-14.3039, 15.7438, 0.804117, 2.28", "-16.8946, 17.0092, -0.840525, 1.92", "-18.0033, 17.4864, -1.36033, 1.92", "-20.4033, 18.3825, -2.3527, 1.8", "-21.8438, 18.9001, -2.86803, 1.8", "-24.9582, 19.8834, -3.83367, 1.56", "-27.3787, 20.5618, -4.48359, 1.92", "-29.4661, 21.0446, -4.96186, 1.92", "-30.9573, 21.2361, -5.23106, 1.92", "-32.8629, 21.2651, -5.49338, 1.92", "-36.5083, 21.0617, -5.97624, 1.8", "-37.1261, 20.975, -6.06882, 1.8", "-38.4191, 20.6988, -6.26297, 1.8", "-41.4848, 19.8933, -6.79503, 1.32", "-42.5693, 19.5863, -7.03813, 1.32", "-44.6608, 18.9845, -7.69982, 1.92", "-45.476, 18.9239, -8.17629, 1.92", "-46.0623, 19.416, -9.09253, 1.92", "-46.3282, 19.7644, -9.67187, 1.92", "-46.61, 20.1855, -10.3743, 1.92", "-46.9949, 20.4414, -11.002, 1.92", "-47.6159, 20.551, -11.7649, 1.92", "-49.4501, 20.5265, -13.8152, 1.44", "-50.8313, 20.4375, -15.2594, 1.44", "-51.5322, 20.3609, -15.9468, 1.44", "-53.3374, 20.0567, -17.6382, 1.44", "-54.5272, 19.7826, -18.7198, 1.8", "-55.4576, 19.5007, -19.5571, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 13.302, 1.77275, 1.32", "-2.86214, 15.4445, 0.974278, 1.32", "-2.70057, 17.7102, 0.230406, 1.32", "-2.61817, 18.9407, -0.131105, 1.32", "-2.53428, 20.2669, -0.47242, 1.32", "-2.48428, 21.0944, -0.65666, 1.32", "-2.41333, 22.0408, -0.836483, 1.32", "-2.31842, 23.1976, -0.947757, 1.32", "-2.25101, 23.9226, -0.92108, 1.32", "-2.11415, 25.2726, -0.818857, 1.08", "-1.95228, 26.7137, -0.679032, 1.56", "-1.77914, 28.2438, -0.494965, 1.56", "-1.62117, 29.5776, -0.303021, 1.56", "-1.18631, 32.6344, 0.222028, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 10.6575, 11.3727, 1.8", "-6.4188, 11.5787, 11.7034, 1.8", "-7.04202, 12.5563, 12.0785, 1.8", "-8.26133, 14.3243, 12.8918, 1.56", "-8.61129, 14.8317, 13.1252, 1.56", "-9.41071, 15.9909, 13.6584, 1.44", "-10.2443, 17.1996, 14.2144, 0.96", "-10.5983, 17.71, 14.4736, 0.96", "-12.0632, 19.7018, 15.5795, 1.92", "-16.1609, 25.7035, 18.4824, 1.92", "-21.5087, 30.2815, 21.792, 1.92", "-27.7273, 34.4394, 23.884, 1.92", "-33.3856, 39.5281, 25.5688, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -11.6362, 11.5527, 2.64", "1.57815, -13.413, 11.4264, 2.64", "1.75007, -15.4646, 11.2804, 2.64", "1.87687, -16.9778, 11.1728, 2.64", "1.9951, -18.3887, 11.0724, 2.64", "2.23568, -21.2595, 10.8682, 2.4", "2.47806, -24.1519, 10.6624, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -12.446, 13.0827, 2.16", "5.05112, -13.2768, 12.8104, 2.16", "5.77115, -15.9187, 12.117, 2.16", "6.31987, -17.8091, 11.7126, 2.16", "7.26447, -21.0632, 11.0164, 2.16", "7.95899, -23.4559, 10.5045, 2.16", "8.46257, -25.1907, 10.1333, 2.16", "9.79388, -29.7092, 9.15167, 2.52", "10.7347, -33.2194, 8.39241, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 12.9843, 11.8327, 2.52", "-0.123726, 16.682, 11.8327, 2.52", "0.355881, 20.3235, 11.8327, 2.52", "0.786561, 23.5935, 11.8327, 2.52", "1.00432, 25.2469, 11.8327, 2.52", "1.26967, 27.2616, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.29094", "6.433, -28.5011, -0.0046052, 1.29094", "9.697, -43.1416, -0.0046052, 1.29094" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-55.4576, 19.5007, -19.5571, 1.2", "-56.7233, 22.058, -18.8113, 1.2", "-58.1635, 23.98, -18.1317, 1.2", "-59.244, 24.8392, -17.7414, 1.2", "-59.9598, 25.3135, -17.5045, 1.56", "-60.4176, 25.5402, -17.4416, 1.56", "-61.2355, 25.8647, -17.4089, 1.56", "-63.5282, 26.4946, -17.405, 0.96", "-67.1251, 27.2509, -17.5934, 1.56", "-67.4831, 27.3174, -17.6198, 1.56", "-71.9955, 28.0472, -18.079, 1.08", "-73.3892, 28.2263, -18.2802, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-55.4576, 19.5007, -19.5571, 1.08", "-56.9355, 19.3402, -20.7146, 1.08", "-58.4593, 19.0006, -22.0717, 1.56", "-61.4963, 17.957, -25.5061, 0.84", "-62.5707, 17.4459, -27.0966, 0.84", "-62.8974, 17.2426, -27.6911, 0.84", "-63.685, 16.6516, -29.3642, 0.84", "-64.3069, 15.9388, -31.2893, 0.84", "-64.882, 14.8814, -33.8882, 0.84", "-65.2293, 13.7617, -36.1678, 0.84", "-65.4228, 13.02, -37.5471, 0.84", "-65.654, 12.2764, -38.8965, 0.84", "-65.8912, 11.6901, -39.8982, 0.84", "-66.4142, 10.7178, -41.2981, 0.84", "-67.0265, 9.82149, -42.2463, 0.84", "-67.4481, 9.32199, -42.6676, 0.84", "-68.408, 8.36981, -43.3722, 0.84", "-69.1265, 7.7501, -43.7719, 0.84", "-70.2842, 6.8526, -44.2753, 0.84", "-71.7181, 5.68977, -44.8338, 0.84", "-73.2622, 4.27978, -45.4238, 0.84", "-74.2218, 3.20963, -45.8016, 0.84", "-75.3141, 1.74962, -46.29, 0.84", "-76.9833, -0.901135, -47.2379, 0.84", "-78.2505, -3.35025, -48.1371, 1.32", "-79.1169, -5.36152, -48.8592, 0.6", "-79.9384, -7.73854, -49.6826, 1.2", "-80.4756, -9.73303, -50.3884, 0.72", "-80.8265, -11.6234, -51.0924, 0.72", "-80.9432, -12.8436, -51.5955, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-1.18631, 32.6344, 0.222028, 1.32", "-0.716616, 33.6298, 0.699597, 1.32", "0.346086, 36.0707, 1.70698, 0.96", "0.774297, 37.2066, 2.10823, 0.96", "1.12444, 38.3944, 2.45648, 1.2", "1.27116, 39.073, 2.61668, 1.2", "1.36906, 39.6717, 2.73843, 1.2", "1.39131, 40.3432, 2.81821, 1.44", "1.24612, 41.2649, 2.81944, 1.08", "0.908555, 42.4359, 2.82041, 1.08", "0.438216, 43.7099, 2.82125, 1.56", "0.289058, 44.0573, 2.82137, 1.56", "-0.170796, 44.9979, 2.82115, 1.56", "-0.84189, 46.2076, 2.81945, 1.56", "-0.90212, 46.3009, 2.81906, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-33.3856, 39.5281, 25.5688, 1.2", "-41.0659, 47.4378, 29.6054, 1.2", "-46.8881, 55.686, 35.6041, 1.2", "-54.8045, 63.4306, 39.4887, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-33.3856, 39.5281, 25.5688, 1.44", "-39.2134, 46.1014, 28.5166, 1.2", "-43.935, 53.2308, 32.1611, 1.2", "-49.1781, 60.3036, 35.1105, 1.2", "-55.1365, 67.0508, 37.3059, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.47806, -24.1519, 10.6624, 1.2", "2.17459, -27.0215, 10.1747, 1.2", "2.0283, -28.7393, 9.87919, 1.2", "1.90349, -30.6736, 9.55172, 1.2", "1.81754, -32.383, 9.27004, 1.2", "1.78401, -33.6013, 9.07795, 1.2", "1.76552, -34.5134, 8.93363, 1.2", "1.79185, -35.2035, 8.81074, 1.2", "1.85897, -36.0976, 8.65738, 1.2", "1.92836, -36.6237, 8.589, 1.2", "2.10187, -37.6213, 8.48534, 1.2", "2.2203, -38.3514, 8.42145, 1.2", "2.29649, -39.1343, 8.37161, 1.2", "2.2889, -39.7627, 8.34427, 1.2", "2.15973, -41.0062, 8.31363, 1.2", "2.07709, -41.5281, 8.30736, 1.2", "1.86457, -42.6419, 8.29921, 1.2", "1.49843, -44.5322, 8.29547, 1.68", "1.03638, -46.832, 8.29068, 1.08", "0.637773, -48.8459, 8.28394, 0.72", "0.456656, -49.8752, 8.27891, 1.92", "0.067464, -52.5645, 8.26311, 0.96", "-0.148167, -54.5448, 8.25091, 0.84", "-0.214617, -55.6787, 8.24221, 1.44", "-0.220514, -57.173, 8.22997, 1.08", "-0.171351, -58.5792, 8.22125, 1.08", "-0.040737, -60.8407, 8.21358, 0.72", "0.023385, -61.8066, 8.21548, 1.44", "0.094097, -63.1747, 8.21997, 1.44", "0.154521, -65.0124, 8.22834, 0.72", "0.163629, -65.7315, 8.23241, 1.2", "0.159592, -67.0511, 8.24082, 1.2", "0.163121, -68.0731, 8.24694, 1.56", "0.14598, -69.4822, 8.21771, 1.32", "0.092227, -71.0724, 8.15404, 0.84", "0.060564, -72.9353, 8.04943, 1.56", "0.059775, -74.0365, 7.97909, 1.56", "0.078104, -76.0004, 7.84432, 0.96", "0.106085, -77.8109, 7.71367, 0.96", "0.117146, -79.2071, 7.61208, 1.32", "0.071659, -80.9189, 7.4971, 1.32", "-0.08478, -83.2923, 7.36535, 0.72", "-0.167562, -84.0932, 7.32947, 1.56", "-0.288047, -84.8891, 7.29561, 1.56", "-0.574459, -86.4297, 7.23682, 0.96", "-0.9105, -87.7564, 7.16961, 1.68", "-1.51899, -89.832, 6.99777, 1.08", "-2.02411, -91.5131, 6.81546, 0.96", "-2.61853, -93.6623, 6.55273, 1.44", "-2.91303, -94.8251, 6.39986, 1.08", "-3.34719, -96.6747, 6.12615, 0.84", "-3.70547, -98.3367, 5.84585, 1.44", "-3.87448, -99.16, 5.69766, 1.44", "-4.1712, -100.785, 5.41015, 0.72", "-4.35556, -101.974, 5.19535, 0.72", "-4.65905, -104.115, 4.79909, 1.32", "-4.87365, -105.699, 4.48427, 0.96", "-4.99638, -106.377, 4.35108, 0.96", "-5.14812, -107.133, 4.18147, 0.96", "-5.39168, -108.1, 3.93468, 0.96", "-5.55118, -108.664, 3.79219, 0.96", "-5.7938, -109.426, 3.57607, 0.96", "-6.0603, -110.225, 3.34082, 0.96", "-6.86689, -112.599, 2.643, 1.44", "-7.78998, -115.333, 1.86968, 0.48", "-8.21474, -116.658, 1.52147, 1.56", "-9.02936, -119.374, 0.853565, 0.84", "-9.23106, -120.114, 0.667771, 0.84", "-9.54686, -121.425, 0.335195, 0.84", "-9.76149, -122.508, 0.0817408, 0.84", "-9.92631, -123.574, -0.133433, 0.84", "-10.078, -124.601, -0.31278, 0.84", "-10.4549, -127.387, -0.723912, 0.6", "-10.6763, -128.926, -0.964899, 1.08", "-11.0058, -131.063, -1.32055, 0.72", "-11.3427, -133.051, -1.65902, 0.6", "-11.5271, -133.998, -1.81359, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.47806, -24.1519, 10.6624, 1.92", "2.52638, -27.2545, 10.4626, 1.92", "2.57928, -30.6511, 10.2438, 1.92", "2.63894, -34.4817, 9.99702, 2.28", "2.67061, -36.5155, 9.86601, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "10.7347, -33.2194, 8.39241, 1.32", "13.5363, -34.7324, 8.848, 1.32", "15.4387, -35.5462, 9.20914, 1.32", "16.9939, -36.1135, 9.5317, 1.32", "18.6715, -36.6747, 9.90004, 1.32", "20.9136, -37.3541, 10.4299, 1.32", "22.0952, -37.7131, 10.7274, 1.32", "25.1755, -38.6124, 11.6344, 1.08", "26.1531, -38.8871, 11.9468, 1.08", "26.5574, -39.0048, 12.0839, 1.08", "28.7177, -39.692, 12.8588, 1.44", "30.3711, -40.3539, 13.4439, 1.08", "31.2012, -40.7766, 13.734, 1.08", "33.1762, -41.9198, 14.3686, 1.08", "34.4588, -42.6617, 14.738, 0.84", "35.7432, -43.4076, 15.0658, 0.84", "37.2899, -44.2227, 15.4064, 0.84", "38.5463, -44.8548, 15.6702, 0.84", "41.6117, -46.3584, 16.1699, 1.2", "43.3554, -47.1846, 16.3526, 0.84", "44.8556, -47.8071, 16.4218, 0.84", "47.7985, -48.864, 16.4386, 0.96", "50.6982, -49.8683, 16.4182, 0.72", "53.9351, -50.9712, 16.3263, 1.2", "55.7265, -51.5874, 16.2035, 1.2", "57.6191, -52.1712, 15.9857, 0.6", "58.5005, -52.4106, 15.8389, 0.6", "68.8135, -54.9327, 15.9848, 0.6", "78.5349, -59.236, 15.3976, 0.6", "88.952, -61.2563, 15.5446, 0.6", "99.5439, -61.6367, 15.7842, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.7347, -33.2194, 8.39241, 1.8", "10.9292, -35.8886, 8.36481, 1.8", "11.2164, -38.61, 8.33833, 1.8", "11.4423, -40.1981, 8.32465, 1.8", "11.5702, -40.9772, 8.30151, 1.8", "11.7682, -42.1026, 8.25229, 1.8", "11.9612, -43.1379, 8.23588, 1.8", "12.164, -43.983, 8.24752, 1.8", "12.4477, -45.3528, 8.30392, 1.8", "12.572, -46.262, 8.34715, 1.8", "12.6992, -47.5438, 8.41457, 1.8", "12.8565, -49.9148, 8.44302, 1.8", "12.9155, -51.129, 8.42689, 1.8", "13.0148, -53.5682, 8.3501, 2.16", "13.1233, -55.4451, 8.24337, 1.92", "13.1938, -56.2238, 8.18034, 1.92", "13.6261, -60.6555, 7.70184, 2.16", "13.8182, -62.4097, 7.43696, 2.16", "13.9821, -63.5953, 7.23456, 2.16", "14.4053, -65.8902, 6.8057, 1.92", "14.741, -67.3344, 6.52069, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.26967, 27.2616, 11.8327, 1.8", "2.07522, 28.8667, 12.4517, 1.8", "2.80845, 30.3276, 13.0152, 1.8", "3.57576, 31.8565, 13.6048, 1.8", "4.4782, 33.6546, 14.2982, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.760647", "12.961, -57.7822, -0.0046052, 0.760647", "16.225, -72.4228, -0.0046052, 0.760647" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-73.3892, 28.2263, -18.2802, 1.68", "-73.7603, 28.2184, -18.3236, 1.68", "-78.1253, 28.3624, -18.7885, 1.2", "-81.5597, 28.6986, -19.1315, 1.68", "-83.0758, 28.9275, -19.2889, 1.68", "-85.2866, 29.4082, -19.5564, 1.2", "-89.1563, 30.4129, -20.11, 1.2", "-91.3511, 31.1234, -20.5923, 0.84", "-93.5143, 32.07, -21.3484, 1.32", "-94.7662, 32.7024, -21.9796, 1.32", "-96.7988, 33.7741, -23.2467, 0.84", "-97.6716, 34.244, -23.8994, 0.84", "-100.748, 35.9408, -26.5203, 0.84", "-103.082, 37.2002, -28.5939, 0.84", "-104.633, 38.0584, -29.9801, 0.84", "-105.829, 38.7301, -30.9657, 0.84", "-107.428, 39.6175, -32.114, 0.84", "-109.024, 40.5511, -33.0743, 0.84", "-111.294, 42.0493, -34.1888, 0.84", "-112.854, 43.1511, -34.8507, 0.84", "-115.005, 44.739, -35.6976, 0.84", "-117.68, 46.8372, -36.7801, 0.84", "-119.081, 48.0079, -37.345, 0.84", "-121.926, 50.4452, -38.5481, 1.32", "-123.928, 52.1704, -39.4323, 1.32", "-126.606, 54.6314, -40.6632, 0.96", "-128.59, 56.5913, -41.6687, 0.96", "-129.719, 57.6818, -42.2343, 0.96", "-131.27, 59.0576, -43.023, 0.96", "-132.652, 60.1006, -43.6753, 0.96", "-136.445, 62.6437, -45.3005, 0.72", "-137.835, 63.4437, -45.8306, 0.72", "-143.301, 66.1147, -47.618, 1.08", "-144.878, 66.7971, -48.0815, 1.08", "-149.924, 69.0196, -49.3264, 1.08", "-152.536, 70.1842, -49.9662, 1.08", "-155.431, 71.6268, -50.678, 1.08", "-157.958, 73.0731, -51.3344, 1.08", "-158.85, 73.6592, -51.6167, 1.08", "-162.671, 76.4254, -52.9912, 1.08", "-165.56, 78.6885, -54.2128, 1.08", "-171.018, 82.9625, -56.6926, 1.44", "-172.472, 84.0619, -57.3775, 1.44", "-176.023, 86.4069, -58.9783, 1.2", "-177.467, 87.189, -59.4863, 1.2", "-179.489, 88.048, -60.0019, 1.2", "-185.266, 90.1202, -60.9776, 1.08", "-188.866, 91.2344, -61.5087, 1.08", "-193.314, 92.6193, -62.0818, 1.08", "-199.663, 94.5489, -62.8196, 0.72", "-203.804, 95.7755, -63.305, 0.72", "-207.114, 96.7354, -63.6859, 1.08", "-211.171, 97.7906, -64.1243, 0.84", "-213.51, 98.2156, -64.3937, 0.84", "-215.163, 98.3915, -64.629, 0.84", "-217.142, 98.5057, -64.9855, 0.84", "-220.557, 98.508, -65.507, 0.84", "-225.444, 98.2172, -65.969, 0.84", "-232.888, 97.3092, -66.2439, 0.6", "-233.959, 97.1306, -66.2788, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-73.3892, 28.2263, -18.2802, 1.32", "-73.7631, 29.294, -19.1177, 1.32", "-74.2994, 30.7458, -20.3438, 0.84", "-74.9086, 32.508, -21.9565, 1.44", "-75.853, 34.9668, -24.4552, 1.08", "-76.5041, 36.37, -25.955, 1.08", "-76.7622, 36.8391, -26.4808, 1.08", "-77.7951, 38.3578, -28.3957, 1.56", "-79.0058, 39.6895, -30.2804, 0.96", "-80.0044, 40.5086, -31.544, 0.96", "-81.2247, 41.2036, -32.5539, 0.96", "-82.1965, 41.5909, -33.0865, 0.96", "-83.1215, 41.8634, -33.4556, 0.96", "-84.0325, 42.0435, -33.6911, 0.96", "-85.3245, 42.2953, -33.9315, 0.96", "-88.0604, 42.885, -34.4226, 0.72", "-90.4635, 43.3415, -34.8675, 0.72", "-92.2527, 43.6641, -35.1881, 0.72", "-93.6003, 43.8808, -35.4323, 0.72", "-95.2733, 44.1346, -35.7495, 0.72", "-97.8407, 44.558, -36.2789, 0.72", "-100.595, 45.084, -36.8648, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.90212, 46.3009, 2.81906, 1.32", "-1.59887, 47.6612, 3.31091, 1.32", "-2.58104, 49.4106, 3.86754, 1.32", "-3.91824, 51.8, 4.58731, 1.08", "-4.74421, 53.34, 5.02223, 1.08", "-5.21356, 54.283, 5.26561, 1.08", "-5.89181, 55.7413, 5.61026, 1.08", "-6.65368, 57.3571, 5.88438, 1.08", "-7.01208, 58.1078, 5.99123, 1.08", "-7.43805, 59.0503, 6.07817, 1.08", "-8.00933, 60.2515, 6.18049, 1.08", "-8.45071, 61.0424, 6.25596, 1.08", "-8.95623, 61.7012, 6.32974, 1.08", "-9.58939, 62.2459, 6.40044, 1.08", "-10.5592, 62.9436, 6.4877, 1.08", "-11.7806, 63.7826, 6.61477, 1.08", "-12.8586, 64.5522, 6.74339, 1.08", "-14.0116, 65.5088, 6.90502, 1.08", "-15.0454, 66.7307, 6.91596, 0.96", "-15.3517, 67.6136, 6.75897, 0.96", "-15.4444, 68.9665, 6.36723, 0.96", "-15.4031, 70.073, 6.01542, 0.96", "-15.32, 71.0286, 5.70364, 0.96", "-14.9104, 74.6758, 4.4896, 0.72", "-14.7599, 76.1847, 3.95654, 0.72", "-14.6983, 77.4831, 3.49099, 0.72", "-14.6882, 78.874, 3.02986, 0.72", "-14.7504, 81.2284, 2.39051, 0.72", "-14.8112, 82.4002, 2.15528, 0.72", "-14.9167, 83.5015, 2.0505, 0.72", "-15.1258, 85.0883, 1.84738, 0.72", "-15.4627, 87.5354, 1.49762, 0.72", "-15.7726, 89.286, 1.23882, 0.72", "-16.1223, 90.7478, 1.02632, 0.72", "-16.8053, 92.9933, 0.704817, 1.2", "-18.2545, 96.4211, 0.243163, 1.08", "-19.1921, 97.9307, 0.0751955, 1.08", "-20.2386, 99.2342, -0.0366678, 1.08", "-21.0334, 100.13, -0.0722795, 1.08", "-21.774, 100.922, -0.10243, 0.72", "-23.8914, 103.141, -0.214313, 1.2", "-26.1634, 105.503, -0.281044, 1.08", "-28.076, 107.541, -0.329714, 1.44", "-29.0152, 108.696, -0.35241, 1.44", "-30.4294, 110.871, -0.390378, 1.2", "-31.2041, 112.416, -0.408992, 1.2", "-32.0171, 114.716, -0.395228, 1.08", "-32.6231, 117.376, -0.312863, 1.08", "-33.0787, 120.015, -0.135083, 0.96", "-33.4524, 122.66, 0.122241, 0.96", "-33.6037, 124.041, 0.315861, 1.2", "-33.7351, 125.7, 0.467711, 0.72", "-33.8124, 129.0, 0.537945, 1.2", "-33.81, 129.875, 0.484465, 1.2", "-33.8847, 131.603, 0.281149, 1.2", "-34.095, 133.305, -0.0140324, 1.2", "-34.7355, 136.568, -0.767845, 1.2", "-35.1807, 138.024, -1.20376, 1.2", "-35.6033, 138.925, -1.52335, 1.2", "-36.8459, 140.723, -2.11108, 0.96", "-37.8825, 141.759, -2.3465, 1.2", "-38.5682, 142.341, -2.40607, 1.2", "-39.7344, 143.264, -2.40101, 1.2", "-40.4645, 143.857, -2.39716, 1.2", "-42.2579, 145.454, -2.38592, 1.2", "-44.2782, 147.606, -2.37127, 1.2", "-45.3509, 148.966, -2.3632, 1.2", "-46.0388, 149.938, -2.35847, 1.2", "-46.7792, 151.146, -2.35363, 1.2", "-47.4059, 152.314, -2.34982, 1.2", "-48.381, 154.568, -2.34446, 0.84", "-49.2374, 156.852, -2.31434, 1.32", "-50.4431, 160.263, -2.23774, 0.84", "-51.038, 161.976, -2.18481, 0.84", "-51.5048, 163.318, -2.13307, 0.84", "-52.1314, 165.146, -2.05022, 0.84", "-52.8932, 167.232, -1.89747, 0.84", "-53.3853, 168.4, -1.78301, 0.84", "-54.1442, 169.783, -1.69893, 0.84", "-54.7036, 170.557, -1.68853, 0.84", "-55.7768, 171.728, -1.72771, 1.2", "-57.5261, 173.309, -1.90118, 0.84", "-59.1594, 174.589, -2.0961, 0.84", "-61.0777, 175.895, -2.30697, 1.2", "-62.6577, 176.671, -2.45197, 0.6", "-64.5845, 177.506, -2.63587, 0.6", "-66.636, 178.239, -2.8393, 1.08", "-68.9954, 178.907, -3.08251, 0.48", "-70.3445, 179.187, -3.1573, 0.48", "-74.2975, 179.781, -3.02641, 0.84", "-80.5149, 190.463, -1.5744, 0.84", "-86.6206, 201.313, -1.8101, 0.84", "-91.2521, 212.897, -2.24019, 0.84", "-96.2221, 224.157, -4.24213, 0.84", "-100.857, 235.584, -6.13964, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.90212, 46.3009, 2.81906, 1.32", "-4.04557, 49.5533, 2.03206, 1.32", "-5.11468, 50.7288, 1.67155, 1.32", "-6.37962, 52.2876, 1.13355, 1.32", "-7.59521, 54.06, 0.463708, 1.32", "-8.26899, 55.1413, 0.0452291, 1.32", "-9.2147, 57.0305, -0.654058, 1.32", "-9.80218, 58.993, -1.42414, 1.32", "-10.1339, 61.3212, -2.30075, 1.56", "-10.0443, 63.6364, -3.13464, 1.56", "-9.85641, 64.4604, -3.38435, 1.56", "-8.5629, 67.7178, -4.27941, 1.2", "-7.93012, 68.8118, -4.54855, 1.2", "-6.77353, 70.3129, -4.9275, 1.2", "-4.82391, 72.3226, -5.51381, 1.08", "-3.33156, 73.6251, -5.95759, 1.08", "-2.38135, 74.3649, -6.2987, 1.08", "-1.47162, 75.0372, -6.7203, 1.08", "-0.555889, 75.8133, -7.27579, 1.08", "1.09947, 77.5015, -8.5904, 1.8", "1.40112, 77.9241, -8.93433, 1.8", "2.47184, 80.2234, -10.7585, 1.32", "2.82924, 81.5663, -11.7935, 1.32", "2.89078, 83.2881, -13.071, 1.08", "2.76286, 83.7838, -13.4091, 1.08", "2.10878, 85.0198, -14.1202, 1.08", "1.26651, 86.3217, -14.7896, 1.44", "0.558474, 87.2708, -15.2384, 1.44", "-0.31285, 88.4182, -15.7934, 1.44", "-1.05202, 89.4269, -16.3378, 1.44", "-2.47398, 91.6635, -17.6551, 0.84", "-3.17496, 93.0046, -18.4623, 0.84", "-4.24251, 95.7848, -20.201, 1.44", "-4.67836, 97.3767, -21.0206, 1.44", "-5.11977, 99.7732, -22.0309, 0.96", "-5.4976, 102.238, -23.0413, 0.96", "-5.68556, 103.494, -23.53, 0.96", "-5.84484, 105.36, -24.1109, 0.72", "-5.67829, 110.279, -25.0323, 1.2", "-5.44063, 112.405, -25.1905, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-54.8045, 63.4306, 39.4887, 0.6", "-61.0432, 71.476, 43.0964, 0.6", "-66.3089, 80.7947, 44.877, 0.6", "-70.2846, 90.411, 47.9945, 0.6", "-75.6737, 99.016, 51.7392, 0.6", "-79.9269, 107.995, 56.0654, 0.6", "-84.8642, 116.615, 60.3593, 0.6", "-90.3792, 125.503, 63.1776, 0.6", "-97.5156, 133.307, 65.3361, 0.6", "-104.419, 141.013, 68.3982, 0.6", "-109.549, 149.497, 72.7229, 0.6", "-115.362, 158.42, 74.7196, 0.6", "-119.779, 167.99, 77.3387, 0.6", "-124.639, 177.004, 80.888, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-54.8045, 63.4306, 39.4887, 0.84", "-59.1591, 66.7649, 43.3865, 0.6", "-63.2841, 71.1975, 46.3928, 0.6", "-66.5665, 76.6859, 48.6968, 0.6", "-69.6223, 82.4789, 50.5634, 0.6", "-72.7133, 88.0182, 53.0083, 0.6", "-77.1159, 92.3502, 55.7524, 0.6", "-81.6227, 97.0003, 57.7326, 0.6", "-85.9005, 101.772, 59.9289, 0.6", "-90.102, 106.79, 61.7153, 0.6", "-93.9993, 111.951, 63.7773, 0.6", "-98.2731, 117.197, 64.4211, 0.6", "-102.111, 122.78, 65.1003, 0.6", "-105.552, 128.66, 65.4453, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-11.5271, -133.998, -1.81359, 0.96", "-13.4461, -133.561, -1.43464, 0.96", "-14.9064, -133.229, -1.14625, 0.96", "-15.9443, -132.993, -0.941303, 0.72", "-16.7082, -132.82, -0.790449, 0.72", "-17.3569, -132.672, -0.662351, 0.72", "-18.4612, -132.421, -0.44428, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-11.5271, -133.998, -1.81359, 0.96", "-12.8042, -139.305, -3.50257, 0.96", "-13.2002, -141.208, -4.5965, 0.96", "-13.5058, -143.402, -5.9612, 1.32", "-13.7673, -146.265, -7.60966, 0.6", "-13.7754, -147.967, -8.68224, 0.6", "-13.6873, -149.991, -9.93135, 1.2", "-13.1927, -156.425, -13.7151, 1.2", "-12.9966, -158.593, -15.0316, 1.56", "-12.6468, -161.691, -16.8834, 0.96", "-11.8528, -167.295, -19.979, 0.6", "-11.4862, -169.842, -21.1765, 1.08", "-11.1848, -172.187, -22.2045, 0.72", "-11.1306, -173.402, -22.6634, 0.72", "-11.1858, -175.081, -23.3463, 1.08", "-11.3564, -176.91, -24.0814, 0.72", "-11.6995, -179.005, -24.7965, 0.72", "-12.7638, -184.501, -26.7347, 0.48", "-13.1905, -186.487, -27.4297, 1.56", "-14.0619, -189.95, -28.5686, 1.08", "-14.4763, -191.322, -28.9842, 0.72", "-15.3735, -193.971, -29.6817, 1.08", "-16.2532, -196.442, -30.2957, 0.72", "-16.7089, -197.73, -30.5419, 0.72", "-17.7288, -200.866, -31.2378, 1.2", "-18.4468, -203.355, -31.8516, 0.72", "-18.7448, -204.483, -32.1476, 0.72", "-19.4371, -207.867, -33.009, 0.72", "-19.5748, -209.844, -33.6573, 1.08", "-19.5486, -211.566, -34.2361, 0.96", "-19.462, -212.855, -34.6547, 0.96", "-19.317, -214.342, -35.0937, 0.96", "-19.0163, -217.087, -35.7872, 0.96", "-18.3263, -223.075, -37.0002, 1.2", "-17.7671, -227.241, -37.7988, 0.6", "-17.3114, -230.018, -38.2594, 0.6", "-17.0081, -231.586, -38.4472, 0.6", "-16.6229, -233.358, -38.556, 0.6", "-16.4129, -234.575, -38.5313, 0.6", "-16.2966, -235.572, -38.4237, 0.6", "-16.1282, -236.972, -38.2915, 0.6", "-15.7287, -240.165, -38.1651, 0.6", "-15.5992, -241.259, -38.1623, 0.6", "-14.9005, -247.529, -38.2963, 0.96", "-14.5922, -250.526, -38.3995, 0.48", "-14.4317, -252.416, -38.4864, 0.48", "-14.1727, -256.88, -38.738, 0.72", "-14.0674, -259.54, -38.8996, 0.48", "-14.0288, -261.648, -38.9445, 1.2", "-14.0778, -265.624, -38.8963, 0.84", "-14.2109, -268.027, -38.8015, 1.32", "-14.5559, -271.464, -38.5926, 0.84", "-14.9417, -274.094, -38.3711, 1.44", "-16.0623, -279.977, -37.8281, 0.48", "-16.7252, -282.999, -37.5305, 0.48", "-17.7828, -286.898, -37.1675, 0.48", "-18.5446, -289.207, -36.9838, 0.48", "-19.4254, -291.324, -36.8635, 0.96", "-21.8691, -295.904, -36.8149, 0.48", "-22.3985, -296.759, -36.8472, 0.84", "-24.2335, -299.354, -36.9621, 0.6", "-25.6303, -300.981, -37.0728, 0.84", "-27.3061, -302.666, -37.2423, 0.6", "-29.2392, -304.262, -37.5387, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "2.67061, -36.5155, 9.86601, 0.96", "1.97649, -37.9958, 10.0677, 0.96", "1.42292, -39.5702, 10.2205, 0.96", "1.26332, -40.1733, 10.3524, 0.96", "0.978264, -41.2637, 10.7087, 0.96", "0.706702, -42.2517, 11.1102, 0.96", "0.386286, -43.3677, 11.675, 0.96", "-0.063862, -45.1163, 12.7066, 1.32", "-0.633911, -47.2795, 14.1087, 0.84", "-0.98666, -48.7051, 15.0883, 0.84", "-1.20073, -49.6623, 15.791, 0.84", "-1.66451, -51.7094, 17.4231, 1.32", "-1.99337, -52.9061, 18.4804, 1.32", "-2.36056, -53.9765, 19.5102, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.67061, -36.5155, 9.86601, 1.44", "2.65444, -41.038, 10.1629, 1.44", "2.62142, -44.274, 10.3607, 1.44", "2.59815, -46.211, 10.4659, 1.44", "2.51307, -50.2601, 10.6721, 1.8", "2.47762, -51.9477, 10.758, 1.8", "2.44263, -53.6131, 10.8428, 1.8", "2.38709, -55.002, 10.8801, 1.8", "2.24794, -57.8503, 10.9679, 1.56", "2.09533, -60.8858, 11.066, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "14.741, -67.3344, 6.52069, 1.56", "16.3034, -68.9605, 6.60066, 1.56", "17.2443, -69.9566, 6.64822, 1.56", "18.4099, -71.1874, 6.70725, 1.2", "19.1126, -71.9273, 6.74292, 1.2", "20.1649, -73.0265, 6.79663, 1.56", "21.6726, -74.6327, 6.87249, 1.2", "22.3551, -75.3874, 6.90585, 1.8", "23.0762, -76.1963, 6.94069, 1.8", "24.4798, -77.8125, 7.02117, 1.08", "25.4685, -78.9778, 7.08542, 1.68", "26.6041, -80.3552, 7.14667, 1.32", "27.3426, -81.2801, 7.17915, 1.32", "27.7969, -81.8584, 7.19525, 1.32", "28.863, -83.2676, 7.22257, 1.08", "29.5996, -84.2941, 7.21533, 1.56", "30.6949, -85.9245, 7.20245, 1.2", "31.0782, -86.5196, 7.19811, 1.2", "31.4408, -87.0923, 7.20394, 1.2", "32.1485, -88.2131, 7.23213, 1.68", "32.7363, -89.1437, 7.29455, 1.2", "33.4807, -90.305, 7.42591, 0.96", "33.9691, -91.0102, 7.53861, 0.96", "35.2638, -92.7283, 7.84716, 0.84", "35.9218, -93.5559, 8.01322, 0.84", "36.9494, -94.7745, 8.28733, 1.44", "37.4937, -95.3937, 8.4382, 1.44", "38.4815, -96.5004, 8.68323, 1.44", "39.0534, -97.1777, 8.82386, 0.96", "39.6767, -97.9711, 8.96353, 1.44", "39.8979, -98.2595, 9.00701, 1.44", "40.461, -99.0106, 9.08964, 1.44", "40.8948, -99.6173, 9.15005, 1.44", "41.6898, -100.756, 9.24653, 1.08", "42.4199, -101.767, 9.31812, 1.08", "42.8598, -102.325, 9.35035, 1.08", "43.7393, -103.349, 9.40609, 1.44", "44.1745, -103.821, 9.43557, 1.44", "45.2933, -105.03, 9.52531, 0.84", "46.0153, -105.828, 9.58858, 1.56", "47.2306, -107.226, 9.70263, 1.08", "47.8186, -107.917, 9.75997, 1.32", "49.5785, -109.818, 9.93319, 1.08", "50.4683, -110.711, 10.0303, 1.08", "51.2384, -111.435, 10.1192, 1.08", "52.3741, -112.426, 10.2509, 1.08", "53.154, -113.075, 10.3134, 1.08", "55.5155, -114.969, 10.4148, 1.44", "57.1362, -116.234, 10.4221, 1.08", "58.1408, -117.025, 10.4013, 1.08", "59.7495, -118.358, 10.3502, 1.08", "61.5797, -119.906, 10.2627, 0.72", "62.9677, -121.154, 10.161, 1.32", "63.9464, -122.162, 10.0369, 0.84", "64.5506, -122.826, 9.92642, 0.84", "65.5678, -124.083, 9.70573, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "14.741, -67.3344, 6.52069, 1.68", "14.8788, -69.7963, 6.56634, 1.68", "15.0574, -71.9698, 6.60265, 1.68", "15.194, -73.2162, 6.61959, 1.68", "15.6872, -76.8118, 6.65477, 1.32", "16.0573, -79.2014, 6.6691, 1.56", "16.4765, -82.2876, 6.68286, 1.56", "16.6324, -83.4505, 6.68016, 1.56", "16.8099, -85.2348, 6.67795, 1.56", "16.9451, -87.3835, 6.67758, 1.56", "17.0592, -90.4321, 6.67689, 1.2", "17.1567, -94.7203, 6.67076, 1.56", "17.2045, -97.706, 6.68845, 1.2", "17.2789, -101.458, 6.73657, 1.2", "17.3286, -103.632, 6.75492, 1.56", "17.3927, -106.139, 6.74728, 1.56", "17.4741, -108.161, 6.70663, 1.56", "17.6919, -111.278, 6.66054, 1.2", "17.8688, -113.986, 6.63937, 1.56", "18.0388, -117.063, 6.63353, 1.44", "18.1141, -119.219, 6.64049, 1.44", "18.1283, -120.769, 6.65254, 1.44", "18.1348, -125.985, 6.70497, 1.08", "18.1352, -128.793, 6.66795, 1.08", "18.1623, -131.313, 6.57955, 1.44", "18.1955, -132.437, 6.52282, 1.44", "18.2751, -134.074, 6.40046, 1.44", "18.4277, -136.408, 6.12573, 1.44", "18.7291, -139.695, 5.48669, 1.32", "19.0333, -141.973, 4.98154, 1.32", "19.2187, -143.181, 4.69439, 1.32", "19.3578, -144.182, 4.46696, 1.32", "19.5592, -145.944, 4.10917, 1.32", "19.6415, -146.996, 3.94023, 1.32", "19.734, -148.23, 3.79218, 1.32", "19.9193, -150.823, 3.47116, 1.8", "20.0729, -153.318, 3.14868, 1.8", "20.2029, -155.486, 2.92963, 1.8", "20.316, -157.652, 2.7634, 1.8", "20.4543, -161.175, 2.56839, 1.56", "20.5404, -164.754, 2.43445, 1.56", "20.5548, -166.47, 2.40177, 1.56", "20.5596, -170.128, 2.40837, 1.32", "20.5503, -171.844, 2.44539, 1.32", "20.4982, -174.921, 2.57768, 1.8", "20.4053, -177.618, 2.76458, 1.8", "20.3448, -180.381, 2.98291, 1.56", "20.3753, -182.986, 3.14557, 1.56", "20.4608, -184.739, 3.20791, 1.56", "20.5677, -186.006, 3.24757, 1.56", "20.6912, -187.305, 3.26917, 1.56", "20.8614, -189.182, 3.26686, 1.56", "21.033, -191.494, 3.22584, 1.2", "21.1314, -193.712, 3.1339, 1.2", "21.1632, -195.241, 3.04833, 1.2", "21.1414, -198.093, 2.84402, 1.56", "21.0757, -200.836, 2.60015, 1.56", "21.0261, -202.545, 2.42597, 1.56", "21.002, -204.795, 2.18436, 1.56", "21.0037, -206.934, 1.93498, 1.56", "21.0777, -211.152, 1.4086, 1.56", "21.2672, -215.999, 0.754745, 1.32", "21.4534, -220.036, 0.164824, 1.32", "21.5552, -222.21, -0.15823, 0.84", "21.6582, -224.443, -0.487668, 1.32", "21.7887, -227.095, -0.882762, 1.08", "21.9505, -229.581, -1.28077, 1.44", "22.1185, -232.203, -1.74393, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "4.4782, 33.6546, 14.2982, 1.2", "2.50219, 37.0787, 15.1871, 1.2", "1.75718, 38.6416, 15.6811, 1.2", "1.20856, 40.004, 16.1573, 1.2", "0.354505, 42.7971, 17.3221, 1.2", "0.0217227, 44.3014, 17.9906, 1.2", "-0.192762, 45.7472, 18.6466, 1.08", "-0.254838, 48.0506, 19.7831, 1.56", "-0.202178, 49.5995, 20.554, 1.56", "0.105111, 53.0148, 22.1811, 1.2", "0.405825, 55.2135, 23.1379, 0.96", "0.719486, 57.6213, 24.0544, 1.32", "0.815512, 58.7198, 24.4391, 1.32", "0.864617, 59.9437, 24.8158, 1.32", "0.888231, 61.7683, 25.2789, 1.32", "0.878202, 62.7916, 25.4959, 1.32", "0.883074, 64.7883, 25.9272, 1.2", "0.952276, 66.8646, 26.4356, 1.56", "1.01934, 68.2513, 26.7965, 1.2", "1.17328, 70.387, 27.3991, 1.68", "1.51713, 73.2853, 28.2822, 1.2", "1.73111, 74.445, 28.6567, 1.44", "2.3016, 76.3677, 29.2922, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.4782, 33.6546, 14.2982, 1.44", "4.43206, 37.8893, 13.8769, 1.44", "4.4109, 39.831, 13.6838, 1.44", "4.38645, 42.0757, 13.4604, 1.44", "4.3583, 44.659, 13.2034, 1.44", "4.32423, 47.7865, 12.8923, 1.8", "4.2954, 50.4323, 12.629, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-2.36056, -53.9765, 19.5102, 0.96", "-3.12735, -56.8377, 20.1962, 0.96", "-3.66141, -58.5941, 20.5638, 0.96", "-3.99757, -59.7314, 20.7692, 0.96", "-4.25624, -60.594, 20.9193, 0.96", "-4.54953, -61.5744, 21.0775, 0.96", "-5.02987, -63.3502, 21.3433, 0.6", "-5.2065, -63.8947, 21.4089, 0.6", "-5.53194, -64.8637, 21.5482, 1.08", "-6.23387, -66.8844, 21.9119, 0.72", "-6.77497, -68.3998, 22.2163, 0.72", "-7.64101, -70.7357, 22.7031, 0.72", "-8.53735, -72.9633, 23.1735, 1.2", "-9.0802, -74.1687, 23.4279, 1.08", "-9.82251, -75.5962, 23.7274, 0.48", "-10.774, -77.2502, 24.0485, 0.48", "-11.8973, -79.0675, 24.3723, 1.44", "-12.7776, -80.439, 24.5751, 0.84", "-13.2344, -81.2202, 24.6612, 1.08", "-13.9234, -82.4862, 24.7634, 1.08", "-14.7921, -84.2577, 24.8745, 1.44", "-15.3811, -85.5812, 24.9642, 0.84", "-15.7604, -86.5601, 25.0625, 1.32", "-16.2933, -88.2136, 25.2661, 0.72", "-16.5458, -89.0364, 25.3828, 0.72", "-16.7877, -89.7697, 25.5141, 0.72", "-17.2835, -90.8238, 25.7626, 0.72", "-18.13, -91.9354, 26.1079, 1.08", "-18.9718, -92.8303, 26.4312, 0.6", "-20.0838, -93.734, 26.8192, 1.08", "-20.9498, -94.2994, 27.1025, 0.96", "-22.4453, -95.0441, 27.542, 0.84", "-24.0296, -95.558, 27.9263, 0.84", "-27.0103, -103.011, 28.6181, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-2.36056, -53.9765, 19.5102, 0.84", "-3.22439, -55.6125, 20.0454, 0.84", "-3.83047, -56.7821, 20.4056, 0.84", "-4.0939, -57.3379, 20.5635, 0.84", "-4.98131, -59.4352, 21.1494, 0.48", "-5.42643, -60.593, 21.4598, 0.48", "-6.11959, -62.5932, 21.9514, 0.84", "-6.48273, -63.8539, 22.2102, 0.84", "-6.7906, -65.0535, 22.4019, 0.84", "-7.37618, -67.7331, 22.75, 0.84", "-7.54922, -68.7447, 22.8525, 0.84", "-7.78271, -70.5559, 23.0239, 0.6", "-7.91892, -71.7122, 23.1074, 1.08", "-8.14904, -73.2485, 23.1771, 1.08", "-8.36076, -74.3679, 23.2073, 1.56", "-8.66711, -75.7091, 23.1978, 1.56", "-8.93399, -76.7653, 23.1897, 1.08", "-9.4604, -78.6566, 23.1832, 0.72", "-9.82391, -79.8657, 23.1827, 1.32", "-10.1613, -80.8901, 23.1816, 1.32", "-10.6912, -82.3203, 23.1625, 0.72", "-11.2778, -83.8022, 23.1166, 0.72", "-15.0221, -92.5571, 23.6686, 0.72", "-17.8911, -101.578, 24.9811, 0.72", "-21.5652, -110.208, 26.7018, 0.72", "-25.2301, -118.849, 28.3889, 0.72", "-28.2896, -127.452, 31.157, 0.72", "-30.4614, -135.728, 35.368, 0.72", "-31.7094, -144.675, 38.5225, 0.72", "-31.3867, -154.073, 40.4255, 0.72", "-31.1374, -163.297, 43.0318, 0.72", "-31.4287, -172.722, 44.7894, 0.72", "-32.4723, -182.244, 44.4613, 0.72", "-33.6118, -191.733, 43.773, 0.72", "-33.8484, -201.305, 44.4052, 0.72", "-33.9112, -210.722, 46.2336, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "2.09533, -60.8858, 11.066, 1.08", "2.91272, -61.9107, 6.7194, 1.08", "3.56207, -62.8461, 3.78655, 1.08", "3.74444, -63.187, 2.96934, 1.08", "3.86027, -63.5553, 2.23591, 1.08", "3.91879, -63.8031, 1.80665, 1.08", "4.10325, -64.9085, 0.074674, 1.44", "4.13997, -65.8277, -1.09448, 1.44", "4.06102, -66.8954, -2.2904, 1.44", "3.83544, -68.6099, -4.08569, 1.44", "3.72036, -69.2743, -4.71586, 1.44", "3.37352, -71.0369, -6.17999, 1.2", "2.73185, -73.8704, -8.21347, 1.2", "2.28737, -75.8036, -9.51464, 1.68", "1.78103, -77.8903, -10.9175, 0.72", "1.37435, -79.4585, -11.9317, 0.72", "0.829499, -81.1771, -13.1383, 1.44", "0.354082, -82.3976, -14.074, 1.44", "-0.742995, -84.6095, -16.2371, 0.96", "-1.98634, -86.5541, -18.9604, 1.68", "-2.46682, -87.1636, -20.0744, 1.68", "-3.57851, -88.4004, -22.8643, 1.68", "-4.43649, -89.2869, -25.1321, 1.68", "-5.7731, -90.6595, -28.7556, 1.68", "-7.23307, -92.1934, -32.6589, 1.68", "-8.31609, -93.3663, -35.4993, 1.2", "-9.41319, -94.657, -38.3364, 0.84", "-9.87111, -95.2888, -39.4936, 1.44", "-10.2843, -95.9532, -40.4962, 0.72", "-11.2207, -97.6171, -42.5858, 1.32", "-12.6523, -100.407, -45.5986, 0.6", "-12.9862, -101.107, -46.3018, 0.6", "-13.4449, -102.061, -47.2117, 0.96", "-13.8408, -102.862, -48.0096, 0.96", "-15.4017, -106.012, -51.39, 0.6", "-15.8893, -107.171, -52.6252, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "2.09533, -60.8858, 11.066, 1.32", "2.0939, -61.0569, 11.0411, 1.32", "2.17579, -65.5532, 10.3944, 1.32", "2.37508, -70.7858, 9.67061, 1.68", "2.52762, -74.1183, 9.24816, 2.04", "2.66164, -77.0716, 8.90571, 1.68", "2.77128, -79.5094, 8.64847, 1.68", "2.84801, -80.9837, 8.52008, 1.68", "2.96683, -82.9543, 8.39305, 1.68", "3.11563, -85.9466, 8.26893, 2.04", "3.17178, -87.6656, 8.26258, 1.68", "3.19061, -89.8994, 8.31239, 1.68", "3.19863, -92.3014, 8.42683, 1.68", "3.2346, -95.026, 8.59067, 1.56", "3.30325, -97.5497, 8.7541, 1.56", "3.51844, -102.622, 9.08578, 1.56", "3.74497, -106.754, 9.35349, 1.8", "4.17567, -113.361, 9.76981, 1.56", "4.63025, -119.975, 10.1567, 1.44", "4.81869, -122.788, 10.3086, 1.92", "5.02464, -126.197, 10.4685, 1.8", "5.13681, -128.822, 10.5717, 1.68", "5.18626, -132.096, 10.6966, 2.04", "4.89865, -145.474, 10.9682, 1.8", "4.67331, -149.548, 10.9965, 1.8", "4.50618, -151.756, 10.9905, 1.68", "4.30623, -153.84, 10.966, 1.68", "3.64872, -159.601, 10.8436, 1.68", "3.21124, -162.737, 10.6658, 1.68", "2.79547, -165.364, 10.4123, 1.68", "2.26691, -168.826, 10.0477, 1.32", "1.67911, -172.98, 9.60566, 1.32", "1.11434, -177.315, 9.15177, 1.32", "0.322085, -184.233, 8.44981, 1.32", "-0.152334, -188.918, 8.03003, 1.8", "-0.457191, -192.042, 7.79284, 1.8", "-0.68966, -194.553, 7.64515, 1.8", "-0.87082, -196.761, 7.56954, 1.8", "-1.16448, -200.862, 7.58583, 1.68", "-1.53144, -206.754, 7.71236, 2.04", "-1.77914, -211.403, 7.72657, 2.04", "-1.96411, -215.22, 7.70823, 1.8", "-2.16048, -220.071, 7.65606, 1.56", "-2.3197, -224.998, 7.58219, 1.92", "-2.56222, -231.249, 7.47941, 1.56", "-2.79419, -236.112, 7.37386, 1.32", "-3.10636, -241.6, 7.19034, 1.32", "-3.27593, -244.206, 7.11329, 1.32", "-3.42335, -246.482, 7.05911, 1.2", "-3.80331, -251.748, 7.00786, 1.68", "-4.14549, -256.608, 7.19014, 1.68", "-4.41645, -259.728, 7.35587, 1.68", "-4.66369, -262.384, 7.49026, 1.68", "-4.96815, -265.339, 7.65757, 1.68", "-5.07575, -266.595, 7.73343, 1.68", "-5.23563, -274.671, 8.24116, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "65.5678, -124.083, 9.70573, 0.84", "67.4699, -123.711, 9.89615, 0.84", "68.9729, -123.387, 10.0924, 0.84", "70.152, -123.128, 10.281, 1.32", "72.1023, -122.708, 10.6664, 1.32", "73.6469, -122.378, 11.0242, 1.68", "75.5786, -121.92, 11.5076, 1.2", "76.6013, -121.67, 11.8284, 0.96", "77.9391, -121.271, 12.3257, 1.44", "79.5469, -120.677, 12.9947, 0.84", "80.3097, -120.31, 13.3667, 0.84", "81.0639, -119.846, 13.8222, 0.84", "81.57, -119.412, 14.2389, 0.84", "82.1403, -118.804, 14.7813, 0.84", "82.6184, -118.118, 15.3418, 0.84", "83.102, -117.18, 16.0523, 1.08", "83.6201, -116.064, 16.901, 0.72", "84.2841, -114.672, 18.0814, 1.2", "91.0114, -111.857, 19.1195, 1.2", "97.4382, -108.232, 19.3822, 1.2", "103.487, -104.009, 18.8062, 1.2", "108.65, -98.6956, 19.3579, 1.2", "114.601, -94.3274, 19.886, 1.2", "120.052, -89.3231, 20.4158, 1.2", "125.597, -84.4871, 19.4567, 1.2", "131.028, -79.4491, 18.9547, 1.2", "135.839, -73.7675, 18.8978, 1.2", "140.015, -67.6627, 17.888, 1.2", "143.715, -61.1662, 17.815, 1.2", "146.309, -54.1424, 17.3353, 1.2", "148.921, -47.1214, 16.934, 1.2", "151.508, -40.1161, 16.2, 1.2", "155.303, -33.6775, 16.1726, 1.2", "158.926, -27.1417, 15.855, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "65.5678, -124.083, 9.70573, 0.84", "66.8641, -126.531, 10.1559, 0.84", "68.2691, -129.081, 10.6055, 0.6", "69.1819, -130.759, 10.8772, 1.32", "70.6174, -133.397, 11.3043, 0.84", "71.5458, -135.103, 11.5805, 0.72", "72.2851, -136.462, 11.8005, 1.08", "73.2104, -138.241, 12.0626, 0.72", "74.0736, -139.936, 12.3875, 1.2", "80.0984, -148.898, 13.3857, 1.2", "86.5113, -157.241, 15.9111, 1.2", "92.746, -164.875, 20.3199, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "22.1185, -232.203, -1.74393, 0.96", "24.5705, -234.675, -0.653844, 0.96", "26.002, -236.309, 0.108075, 0.96", "28.6217, -239.459, 1.63422, 1.44", "30.5802, -241.735, 2.8251, 0.96", "32.1135, -243.526, 3.766, 0.96", "33.3682, -245.034, 4.54187, 0.96", "34.4482, -246.416, 5.24232, 0.96", "35.7374, -248.176, 6.20163, 1.08", "37.339, -250.603, 7.48829, 1.08", "38.1221, -251.818, 8.10222, 1.08", "38.829, -252.866, 8.58718, 1.08", "40.5349, -255.404, 9.85781, 1.08", "42.065, -257.948, 11.2055, 0.84", "43.0493, -260.065, 12.3886, 1.2", "43.5686, -261.742, 13.34, 1.2", "43.8981, -263.127, 14.1543, 1.2", "44.5731, -266.513, 16.2232, 0.96", "44.8549, -268.294, 17.3275, 0.96", "45.1782, -269.942, 18.3193, 0.96", "45.6178, -272.054, 19.5271, 0.72", "45.8626, -273.376, 20.2323, 0.72", "46.2903, -275.284, 21.1778, 0.72", "47.0936, -277.687, 22.14, 1.2", "48.6778, -281.227, 23.5972, 0.84", "49.4718, -282.694, 24.2227, 0.84", "50.3591, -284.237, 24.9447, 0.84", "55.3484, -293.204, 29.6139, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "22.1185, -232.203, -1.74393, 1.32", "22.6755, -235.351, -1.70252, 1.32", "22.9626, -237.303, -1.68966, 1.32", "23.1943, -239.204, -1.67951, 1.32", "23.3232, -240.622, -1.66825, 1.32", "23.6053, -243.641, -1.65869, 1.68", "23.8821, -246.16, -1.66879, 1.68", "24.0748, -248.006, -1.75105, 1.68", "24.2613, -249.745, -1.84997, 1.68", "24.5733, -252.675, -2.04076, 1.2", "24.7787, -254.604, -2.18346, 1.2", "25.1264, -257.516, -2.42995, 1.2", "25.5723, -260.828, -2.77872, 1.56", "25.8171, -262.492, -2.97771, 1.56", "26.0386, -263.926, -3.16213, 1.56", "26.2914, -265.435, -3.3686, 1.56", "26.7221, -268.052, -3.60619, 1.44", "27.157, -270.704, -3.81006, 1.44", "27.3844, -271.906, -3.87182, 1.44", "27.676, -273.365, -3.93764, 1.44", "28.0424, -275.04, -3.99102, 1.44", "28.7286, -277.754, -4.00215, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.3016, 76.3677, 29.2922, 1.44", "1.17941, 74.9939, 29.3861, 1.44", "0.738863, 74.5227, 29.4479, 1.2", "-0.20982, 73.6976, 29.5805, 0.96", "-1.06349, 72.9551, 29.6999, 0.96", "-1.65174, 72.4434, 29.7821, 0.96", "-2.2778, 71.8989, 29.8697, 0.96", "-2.90819, 71.2874, 29.8806, 0.96", "-4.10577, 70.2437, 29.9432, 1.2", "-10.306, 64.5114, 29.2936, 1.2", "-15.8804, 58.105, 29.3396, 1.2", "-21.4641, 51.7669, 28.4861, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "2.3016, 76.3677, 29.2922, 0.96", "3.33498, 74.5995, 29.5823, 0.96", "4.52395, 72.565, 29.9162, 0.96", "5.40828, 71.0519, 30.1645, 1.2", "5.89787, 70.2141, 30.302, 1.2", "7.5137, 67.4493, 30.7557, 0.84", "8.23802, 66.2099, 30.9591, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.2954, 50.4323, 12.629, 1.44", "5.59607, 54.0044, 13.2481, 1.44", "6.58504, 56.8099, 13.701, 1.44", "7.08526, 58.2797, 13.9358, 1.44", "8.20203, 61.6963, 14.537, 1.44", "9.54728, 65.7403, 15.3356, 1.32", "10.3999, 68.0587, 15.7253, 1.32", "11.4955, 70.6066, 16.065, 1.32", "12.4934, 72.6635, 16.3012, 1.56", "13.5643, 74.6181, 16.4732, 1.56", "15.1264, 77.1344, 16.628, 1.32", "18.0418, 81.2976, 16.8421, 1.32", "19.9118, 83.6955, 16.9491, 1.32", "21.5458, 85.6252, 16.9159, 1.32", "23.3783, 87.6873, 16.7647, 1.56", "24.4122, 88.8733, 16.6056, 1.56", "26.9212, 91.828, 16.0963, 1.2", "28.2536, 93.4333, 15.8282, 1.2", "30.8563, 96.6345, 15.2313, 1.44", "32.2309, 98.3875, 14.8418, 1.92", "34.8717, 102.035, 14.1637, 1.56", "36.5085, 104.46, 13.7962, 1.32", "38.8654, 108.268, 13.3317, 1.32", "40.7254, 111.494, 13.1332, 1.32", "42.5413, 114.868, 13.167, 1.56", "44.8982, 119.785, 13.4428, 1.2", "45.6084, 121.53, 13.6405, 1.2", "45.9836, 122.774, 13.8279, 1.2", "46.3111, 124.453, 14.1568, 0.96", "46.4472, 125.538, 14.4095, 1.32", "46.6759, 128.725, 15.2065, 0.96", "46.7322, 130.291, 15.4978, 0.96", "46.7859, 131.882, 15.7538, 0.96", "46.9923, 134.893, 16.2506, 1.32", "47.1591, 136.363, 16.5002, 1.32", "47.5598, 138.581, 16.9477, 0.84", "48.1653, 140.861, 17.5135, 1.08", "48.9037, 143.078, 18.2141, 1.08", "50.1088, 146.217, 19.3579, 0.84", "50.732, 147.741, 19.8587, 1.2", "51.4757, 149.427, 20.4644, 0.84", "52.3458, 151.224, 21.1786, 1.2", "53.7144, 153.929, 22.3416, 0.96", "54.1671, 154.865, 22.7458, 0.96", "55.9014, 159.281, 24.2628, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "4.2954, 50.4323, 12.629, 1.08", "5.83418, 52.6589, 12.6803, 1.08", "7.66914, 55.4286, 12.7298, 1.08", "8.22317, 56.2818, 12.7424, 1.08", "8.75324, 57.1151, 12.7107, 1.08", "9.69418, 58.5945, 12.6544, 1.32", "11.092, 60.7923, 12.5708, 0.96", "11.9735, 62.1656, 12.4782, 1.44", "12.5707, 63.1169, 12.392, 1.44", "13.7578, 65.0851, 12.1816, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.23563, -274.671, 8.24116, 1.08", "-5.57241, -277.253, 9.15312, 1.08", "-5.8052, -278.95, 9.76391, 1.08", "-6.20567, -281.367, 10.6318, 1.08", "-6.46652, -282.849, 11.1637, 1.08", "-6.80319, -284.572, 11.7909, 1.08", "-7.05432, -285.75, 12.246, 1.08", "-7.24031, -286.493, 12.5349, 1.08", "-7.594, -287.584, 12.9715, 1.08", "-8.33618, -289.467, 13.6761, 0.84", "-8.76254, -290.427, 14.0311, 0.84", "-9.43197, -291.786, 14.4951, 1.32", "-10.4135, -293.627, 15.0709, 1.32", "-11.8286, -296.23, 15.8238, 0.96", "-12.7821, -298.011, 16.2778, 0.96", "-13.4404, -299.318, 16.5904, 1.2", "-14.6039, -301.901, 17.1708, 1.2", "-15.302, -303.673, 17.5584, 1.44", "-16.0168, -305.787, 18.0411, 1.2", "-16.6289, -308.02, 18.5433, 1.2", "-17.3509, -310.989, 19.2176, 1.2", "-17.5821, -312.065, 19.4592, 1.2", "-17.8166, -313.825, 19.883, 1.2", "-17.8753, -314.814, 20.1379, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-5.23563, -274.671, 8.24116, 0.96", "-4.46449, -279.13, 7.03922, 0.96", "-4.00646, -281.973, 6.28946, 1.32", "-3.92374, -283.11, 6.09227, 1.32", "-3.82114, -284.522, 5.84769, 1.32", "-3.59059, -287.693, 5.29813, 1.56", "-3.41958, -290.045, 4.89048, 1.56", "-3.33422, -291.782, 4.62186, 1.56", "-3.27978, -296.567, 4.35506, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "28.7286, -277.754, -4.00215, 0.96", "28.7419, -279.239, -3.39164, 0.96", "28.7105, -280.576, -2.87428, 0.96", "28.6354, -281.911, -2.34694, 1.44", "28.4508, -284.866, -1.13824, 1.08", "28.3709, -286.243, -0.589808, 1.08", "28.2947, -288.347, 0.201349, 1.08", "28.3091, -289.335, 0.559261, 1.08", "28.435, -291.889, 1.42274, 0.84", "28.597, -293.994, 2.0454, 0.84", "28.7238, -295.329, 2.34582, 0.84", "28.9236, -296.834, 2.64895, 0.84", "29.1471, -298.242, 2.89805, 0.84", "29.3146, -299.399, 3.06622, 0.84", "29.3941, -300.22, 3.13777, 0.84", "29.4414, -301.164, 3.19783, 0.84", "29.4015, -302.42, 3.3099, 0.84", "29.2262, -303.515, 3.43968, 0.84", "28.9637, -304.442, 3.56388, 0.84", "28.3702, -306.056, 3.83503, 0.6", "26.5402, -314.374, 5.12288, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "28.7286, -277.754, -4.00215, 0.84", "28.8508, -280.174, -4.10638, 0.84", "28.9046, -281.913, -4.20474, 0.84", "28.9183, -283.766, -4.35098, 0.84", "28.8395, -287.597, -4.68305, 1.2", "28.7964, -288.491, -4.76161, 1.2", "28.5279, -292.47, -5.11679, 0.96", "28.2106, -295.816, -5.45356, 1.32", "27.8217, -300.063, -5.90296, 1.08", "27.645, -302.456, -6.1963, 1.08", "27.5476, -304.22, -6.42781, 1.08", "27.5449, -305.535, -6.62078, 1.08", "27.5866, -306.434, -6.75537, 1.08", "27.8652, -309.958, -7.28244, 0.84", "28.4083, -314.515, -7.97035, 1.2", "28.6053, -315.8, -8.17201, 1.2", "29.7776, -322.454, -9.24141, 0.84", "30.4586, -326.203, -9.83878, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.23802, 66.2099, 30.9591, 0.72", "7.93434, 65.5634, 30.8128, 0.72", "7.67241, 65.0058, 30.6867, 0.48", "7.35667, 64.3336, 30.5346, 0.96", "7.13282, 63.857, 30.4269, 0.96", "4.84013, 59.4138, 28.8958, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "8.23802, 66.2099, 30.9591, 0.72", "8.61924, 64.8391, 31.081, 0.72", "8.81465, 63.8743, 31.1804, 1.08", "9.10794, 62.2121, 31.2852, 0.72", "9.24239, 61.0116, 31.2816, 0.72", "9.3373, 59.3023, 31.1647, 0.72", "9.42195, 57.9005, 31.0234, 1.2", "9.41558, 57.236, 30.9493, 1.2", "9.32465, 55.7942, 30.765, 0.84", "9.14382, 54.0079, 30.4794, 0.84", "9.01786, 52.5576, 30.0906, 1.32", "8.94728, 51.6209, 29.7092, 1.08", "8.33566, 42.5708, 28.642, 1.08", "7.20041, 33.5451, 27.8386, 1.08", "5.83405, 24.8098, 25.6083, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "55.9014, 159.281, 24.2628, 0.6", "56.3975, 160.062, 24.5565, 0.6", "56.9041, 160.859, 24.8563, 0.6", "57.5616, 161.894, 25.2456, 0.6", "58.6239, 163.566, 25.8744, 0.6", "59.3129, 164.651, 26.2822, 0.6", "60.0138, 165.755, 26.6972, 0.48", "63.2069, 173.317, 27.8117, 0.48", "66.9239, 180.7, 28.2283, 0.48", "70.8799, 187.713, 30.076, 0.48", "76.2152, 193.923, 30.9135, 0.48", "81.3814, 200.338, 31.0371, 0.48", "86.9403, 206.324, 31.9722, 0.48", "91.1551, 213.433, 31.8927, 0.48", "93.826, 221.138, 30.3988, 0.48", "95.5248, 229.252, 29.8303, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "55.9014, 159.281, 24.2628, 0.84", "57.4672, 162.312, 24.1303, 0.84", "58.3508, 164.023, 24.0555, 0.84", "59.2925, 165.847, 23.9759, 0.36", "60.1875, 167.58, 23.9001, 0.6", "60.9108, 168.98, 23.8389, 0.6", "62.1982, 171.473, 23.73, 0.6", "68.2245, 181.653, 21.7238, 0.6", "73.681, 191.934, 18.7912, 0.6", "80.4933, 201.24, 15.6071, 0.6", "86.7025, 210.89, 12.1719, 0.6", "90.8251, 221.076, 7.35235, 0.6", "94.8139, 232.207, 5.08504, 0.6", "99.8223, 243.083, 3.94315, 0.6", "104.465, 254.15, 3.02964, 0.6", "107.294, 265.577, 0.441776, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "13.7578, 65.0851, 12.1816, 1.08", "13.015, 66.9836, 12.5333, 1.08", "12.5364, 67.8899, 12.7846, 1.08", "11.8404, 69.2077, 13.1499, 1.08", "11.0677, 70.6708, 13.5555, 0.96", "9.94776, 72.7912, 14.1432, 0.96", "9.02206, 74.544, 14.6291, 0.84", "7.68058, 76.6388, 15.4155, 1.08", "1.7364, 85.4466, 16.5413, 1.08", "-2.99388, 94.9355, 18.0786, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.7578, 65.0851, 12.1816, 0.96", "15.1808, 66.0527, 11.7295, 0.96", "15.826, 66.4777, 11.493, 0.96", "16.8425, 67.1742, 11.091, 0.96", "18.0442, 68.0467, 10.5026, 0.84", "18.6746, 68.5149, 10.1692, 0.84", "19.6801, 69.2606, 9.61094, 0.84", "20.1463, 69.5815, 9.32186, 0.84", "20.9001, 70.0734, 8.83993, 0.84", "22.4533, 70.964, 7.90181, 1.2", "22.7513, 71.1063, 7.75373, 1.2", "23.5628, 71.4173, 7.43416, 1.2", "24.8218, 71.7714, 7.08442, 1.2", "25.2251, 71.8525, 7.00951, 1.2", "26.8097, 72.0944, 6.7925, 1.2", "28.0649, 72.2692, 6.66901, 0.96", "29.3088, 72.4668, 6.54838, 0.96", "30.7285, 72.6692, 6.42053, 0.96", "32.1371, 72.8652, 6.2944, 1.32", "34.2611, 73.181, 6.09749, 0.84", "36.1003, 73.4714, 5.91648, 1.2", "37.3881, 73.6977, 5.84531, 1.2", "38.6362, 73.962, 5.83803, 0.96", "39.6835, 74.228, 5.90659, 1.2", "40.4633, 74.4407, 6.02248, 1.2", "40.9768, 74.5882, 6.13977, 1.2", "43.5921, 75.4377, 6.89725, 1.2", "44.6343, 75.8415, 7.22679, 1.2", "45.51, 76.2526, 7.51347, 1.2", "47.2044, 77.055, 8.06707, 1.08", "47.9713, 77.3865, 8.29769, 1.44", "49.4327, 77.908, 8.56677, 1.08", "50.5604, 78.2361, 8.59303, 1.08", "51.4205, 78.4828, 8.53336, 1.08", "52.8717, 78.9511, 8.32463, 1.08", "54.4756, 79.4917, 7.9898, 1.44", "56.9643, 80.3379, 7.33258, 1.08", "58.5888, 80.9493, 6.81976, 0.84", "59.8103, 81.4918, 6.41182, 1.2", "61.039, 82.0906, 5.98517, 1.2", "62.4064, 82.8577, 5.4465, 0.84", "63.4053, 83.472, 5.04174, 1.08", "65.5506, 84.7852, 4.23995, 0.72", "67.6725, 85.9885, 3.42786, 0.72", "69.0235, 86.6316, 2.91446, 1.2", "71.0158, 87.484, 2.16811, 0.72", "71.7182, 87.766, 1.92188, 0.72", "73.1888, 88.3083, 1.46043, 0.96", "74.741, 88.8271, 1.01981, 0.96", "77.488, 89.8361, 0.351901, 0.72", "78.9002, 90.4773, 0.0661396, 0.6", "80.0372, 91.0669, -0.115348, 0.6", "81.4981, 91.9606, -0.343228, 1.2", "81.9323, 92.2754, -0.405722, 1.2", "83.7053, 93.6823, -0.598363, 0.72", "84.5337, 94.4225, -0.675283, 0.72", "85.1131, 94.9275, -0.726737, 0.72", "86.4969, 96.187, -0.903822, 0.6", "86.7241, 96.393, -0.937452, 0.6", "87.8703, 97.4147, -1.18464, 0.96", "88.6401, 98.1205, -1.43809, 0.72", "89.1414, 98.6069, -1.64111, 0.96", "91.0763, 100.599, -2.53455, 0.72", "92.191, 101.795, -3.09955, 0.72", "93.6719, 103.366, -3.91484, 1.2", "95.2376, 104.962, -4.73945, 0.72", "96.3137, 105.978, -5.24688, 0.72", "97.652, 107.137, -5.81586, 0.72", "98.1771, 107.539, -5.99493, 0.72", "99.8084, 108.715, -6.39527, 1.08", "101.693, 109.952, -6.6026, 0.72", "103.051, 110.791, -6.63259, 1.08", "103.405, 111.011, -6.62162, 1.08", "104.894, 111.894, -6.56188, 0.72", "105.773, 112.423, -6.54808, 0.72", "107.419, 113.456, -6.58482, 1.08", "108.069, 113.855, -6.65187, 1.08", "109.356, 114.607, -6.82401, 0.84", "111.728, 115.929, -7.17436, 0.84", "113.739, 116.974, -7.45275, 0.6", "115.305, 117.684, -7.60726, 1.08", "116.058, 117.978, -7.64299, 1.08", "118.031, 118.704, -7.60808, 0.72", "119.015, 119.053, -7.52118, 0.72", "121.076, 119.806, -7.13043, 1.08", "122.873, 120.451, -6.65804, 0.84", "123.818, 120.806, -6.37361, 1.08", "125.232, 121.384, -5.93402, 0.84", "125.959, 121.686, -5.71709, 0.84", "127.831, 122.444, -5.23893, 0.6", "128.755, 122.775, -5.05478, 0.6", "130.173, 123.228, -4.84007, 0.96", "130.765, 123.357, -4.77362, 0.96", "132.554, 123.533, -4.61233, 0.72", "133.964, 123.576, -4.49488, 0.72", "135.109, 123.561, -4.45856, 0.72", "135.396, 123.566, -4.46348, 0.72", "136.439, 123.658, -4.57006, 0.72", "138.135, 123.918, -4.93588, 0.72", "138.609, 124.023, -5.11223, 0.72", "140.38, 124.465, -5.94238, 0.6", "141.35, 124.716, -6.4584, 0.96", "143.028, 125.078, -7.37479, 0.96", "144.099, 125.311, -8.00565, 0.96", "145.877, 125.648, -9.13456, 0.72", "147.487, 125.886, -10.1587, 0.72", "149.022, 126.005, -11.1153, 1.2", "150.466, 126.029, -11.9908, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-17.8753, -314.814, 20.1379, 0.48", "-17.865, -317.149, 20.3086, 0.48", "-17.8558, -319.24, 20.4615, 0.48", "-17.8479, -321.029, 20.5924, 0.84", "-17.8411, -322.577, 20.7055, 0.84", "-17.8345, -324.071, 20.8148, 0.6", "-19.0637, -332.762, 20.2901, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-17.8753, -314.814, 20.1379, 0.84", "-17.1651, -317.151, 20.6408, 0.84", "-16.6303, -319.06, 21.0303, 0.84", "-16.1673, -320.931, 21.3799, 1.08", "-15.6152, -323.262, 21.7684, 0.84", "-15.2371, -324.878, 22.0219, 0.84", "-14.891, -326.405, 22.2447, 0.84", "-14.7206, -327.27, 22.3561, 0.84", "-14.2775, -329.965, 22.6239, 1.32", "-14.0866, -331.489, 22.7466, 1.32", "-13.8565, -334.276, 22.9489, 1.2", "-13.7791, -335.903, 23.0602, 0.96", "-13.7246, -337.92, 23.2308, 1.32", "-13.7111, -339.75, 23.4192, 1.32", "-13.7588, -341.99, 23.7142, 1.08", "-13.9545, -346.725, 24.3813, 1.08", "-14.1044, -349.195, 24.748, 0.84", "-14.2427, -351.302, 25.0949, 1.2", "-14.3981, -353.629, 25.5248, 1.08", "-14.5085, -355.507, 25.915, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-3.27978, -296.567, 4.35506, 0.96", "-4.62791, -299.089, 4.08837, 0.96", "-5.18591, -300.214, 4.12233, 0.96", "-5.70789, -301.209, 4.17014, 0.96", "-6.33203, -302.404, 4.22456, 0.96", "-7.02925, -303.689, 4.2845, 0.96", "-8.49945, -306.52, 4.45184, 1.44", "-9.68504, -309.035, 4.75103, 0.96", "-11.6008, -313.278, 5.36891, 1.44", "-12.1812, -314.633, 5.58656, 0.96", "-13.2976, -317.343, 6.03389, 1.56", "-14.5226, -320.502, 6.53184, 1.2", "-16.0205, -324.873, 7.16196, 0.96", "-16.5999, -326.813, 7.43158, 1.44", "-17.3989, -329.908, 7.86611, 0.96", "-18.2411, -333.29, 8.2677, 1.32", "-19.109, -336.873, 8.55144, 0.96", "-19.7808, -339.559, 8.62561, 0.96", "-20.1342, -341.12, 8.60528, 0.96", "-20.3964, -342.447, 8.57586, 0.96", "-21.0213, -346.002, 8.46692, 1.32", "-21.5242, -349.144, 8.35037, 0.96", "-22.1624, -353.629, 8.21691, 1.44", "-22.5724, -356.905, 8.15702, 0.84", "-22.809, -359.259, 8.18236, 1.2", "-22.9194, -360.473, 8.2545, 1.2", "-22.9796, -361.29, 8.34998, 0.84", "-23.2338, -364.435, 8.91377, 1.2", "-23.5576, -367.323, 9.58685, 1.2", "-23.8879, -369.276, 10.0769, 0.96", "-24.5765, -372.495, 10.8786, 0.96", "-25.3354, -375.492, 11.5185, 1.32", "-26.0901, -377.969, 11.9695, 1.68", "-27.0543, -380.532, 12.3182, 1.2", "-28.5254, -383.75, 12.5693, 0.96", "-30.0552, -386.54, 12.5175, 0.96", "-31.7255, -388.937, 12.1256, 0.84", "-32.9652, -390.149, 11.6498, 0.84", "-34.3364, -390.743, 10.8789, 0.84", "-35.5345, -389.975, 9.98749, 0.84", "-36.1402, -389.212, 9.48891, 0.84", "-36.6744, -388.252, 9.03474, 0.84", "-37.1573, -387.029, 8.66371, 1.08", "-37.6519, -385.327, 8.28496, 0.84", "-37.9432, -383.9, 8.12152, 0.6", "-39.8583, -393.923, 9.34979, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.27978, -296.567, 4.35506, 1.08", "-3.18138, -299.757, 4.54503, 1.08", "-3.06446, -303.217, 4.72679, 1.44", "-3.03845, -304.769, 4.7983, 0.84", "-3.01743, -307.024, 4.88798, 1.32", "-3.00498, -308.558, 4.9431, 1.32", "-2.98737, -311.213, 4.99199, 1.32", "-3.01197, -312.919, 4.98195, 1.32", "-3.0309, -314.78, 4.95803, 1.32", "-3.12991, -318.215, 4.89986, 1.44", "-3.19261, -319.901, 4.86911, 1.44", "-3.43027, -325.207, 4.77419, 1.44", "-3.5063, -326.533, 4.75144, 1.44", "-3.64056, -328.826, 4.71772, 1.08", "-3.84123, -333.407, 4.67116, 1.08", "-3.94449, -335.762, 4.65972, 0.84", "-4.05481, -338.479, 4.68022, 1.32", "-4.10243, -340.629, 4.73086, 1.32", "-4.12509, -343.968, 4.82513, 0.96", "-4.10937, -345.704, 4.89253, 1.44", "-4.05941, -348.25, 4.9407, 1.44", "-4.05953, -350.946, 4.93804, 1.2", "-4.13744, -353.638, 4.883, 1.08", "-4.24189, -355.781, 4.80432, 1.08", "-4.40459, -357.801, 4.70178, 1.68", "-4.69914, -360.997, 4.5164, 1.2", "-4.81138, -362.318, 4.43597, 1.2", "-4.99883, -364.961, 4.28089, 1.44", "-5.12453, -367.28, 4.14804, 1.44", "-5.19992, -370.14, 4.00751, 1.44", "-5.20718, -372.606, 3.92135, 1.44", "-5.12524, -375.434, 3.89723, 1.8", "-5.00956, -378.366, 3.86585, 1.32", "-4.92753, -380.084, 3.84459, 1.08", "-4.83015, -382.489, 3.80861, 1.56", "-4.72118, -385.273, 3.75251, 1.56", "-4.6646, -386.825, 3.71675, 1.56", "-4.61935, -388.255, 3.68367, 1.56", "-4.56412, -390.438, 3.64275, 1.56", "-4.50287, -392.283, 3.62814, 1.56", "-4.38813, -394.41, 3.61057, 1.32", "-4.32762, -395.37, 3.6039, 1.32", "-4.2892, -396.789, 3.58391, 1.32", "-4.26929, -398.355, 3.55844, 1.32", "-4.24166, -400.679, 3.48528, 1.32", "-4.22412, -402.422, 3.43056, 1.32", "-4.23496, -404.469, 3.36465, 1.68", "-4.35353, -409.81, 3.16162, 1.32", "-4.4181, -411.486, 3.08479, 1.32", "-4.52158, -413.406, 2.97719, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "30.4586, -326.203, -9.83878, 0.96", "31.8544, -326.874, -9.48691, 0.96", "32.5545, -327.2, -9.31276, 1.32", "34.0026, -327.887, -8.95675, 0.96", "35.0846, -328.429, -8.68131, 1.32", "36.4501, -329.161, -8.36798, 1.2", "37.1431, -329.518, -8.22734, 1.2", "37.814, -329.85, -8.11333, 1.2", "38.2783, -330.09, -8.03503, 1.2", "38.8096, -330.374, -7.96566, 1.2", "40.3588, -331.167, -7.8487, 0.96", "41.439, -331.693, -7.85956, 1.32", "42.0722, -331.974, -7.88823, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "30.4586, -326.203, -9.83878, 1.08", "30.9248, -330.373, -9.75503, 1.08", "31.2612, -334.147, -9.65857, 0.72", "31.3952, -336.002, -9.67716, 0.72", "31.6538, -340.489, -9.79464, 1.2", "31.8395, -344.147, -9.91788, 0.84", "31.9314, -346.358, -9.99181, 0.84", "31.9864, -347.977, -10.0762, 0.84", "32.1204, -352.221, -10.304, 0.6", "32.2161, -354.581, -10.4281, 0.6", "32.4297, -357.723, -10.611, 1.2", "32.736, -361.304, -10.8743, 1.2", "33.0426, -364.316, -11.1187, 0.84", "33.3116, -366.82, -11.3127, 0.84", "33.7166, -370.795, -11.5988, 1.08", "34.0296, -374.241, -11.9064, 0.72", "34.2583, -377.298, -12.2482, 1.08", "34.3944, -379.405, -12.5257, 1.08", "34.4783, -381.382, -12.8023, 1.08", "34.5367, -384.937, -13.2897, 0.72", "34.5439, -387.228, -13.5972, 0.72", "34.5345, -389.435, -13.7741, 1.08", "34.5366, -391.107, -13.7956, 1.08", "34.5618, -392.235, -13.7517, 1.08", "34.5971, -395.353, -13.5779, 0.72", "34.5946, -397.095, -13.474, 0.72", "34.5458, -400.973, -13.3055, 1.2", "34.4851, -404.85, -13.2045, 1.2", "34.391, -409.939, -13.188, 1.2", "34.3008, -414.844, -13.3013, 0.84", "34.2448, -416.782, -13.3939, 1.32", "34.1428, -418.928, -13.5485, 1.32", "34.0858, -419.928, -13.665, 1.32", "33.9378, -422.15, -13.9694, 0.96", "33.7933, -424.133, -14.2348, 1.56", "33.7041, -426.193, -14.4792, 1.56", "33.6606, -427.93, -14.6846, 1.08", "33.6101, -429.616, -14.8704, 1.08", "33.5202, -433.064, -15.2989, 0.84", "33.5269, -434.671, -15.534, 1.44", "33.6401, -437.654, -16.0566, 1.08", "33.7861, -439.506, -16.4547, 1.08", "34.0566, -442.446, -17.1219, 0.72", "34.3666, -445.961, -17.8973, 1.08", "34.524, -447.8, -18.3685, 1.08", "34.7011, -449.889, -18.9472, 0.96", "34.9926, -453.432, -19.9216, 0.72", "35.1334, -455.2, -20.4641, 0.72", "35.2489, -456.455, -20.9145, 0.72", "35.5018, -460.182, -22.3683, 0.72", "35.5227, -461.654, -22.9616, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.84013, 59.4138, 28.8958, 0.6", "0.765964, 50.7353, 26.6789, 0.6", "-3.1776, 41.7456, 25.825, 0.6", "-6.48958, 32.7103, 23.6969, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.84013, 59.4138, 28.8958, 0.84", "-0.800456, 49.5546, 24.7804, 0.6", "-8.76843, 40.8953, 22.248, 0.6", "-16.4762, 31.7798, 20.5828, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.99388, 94.9355, 18.0786, 0.6", "-8.90507, 104.904, 21.9481, 0.6", "-16.6219, 113.384, 26.0135, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-2.99388, 94.9355, 18.0786, 0.84", "-8.77818, 105.69, 18.6967, 0.6", "-12.7963, 117.276, 18.5902, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-14.5085, -355.507, 25.915, 0.6", "-15.7072, -355.017, 27.4519, 0.6", "-17.199, -354.408, 29.3647, 0.6", "-17.8998, -354.121, 30.2634, 0.6", "-18.7411, -353.778, 31.3421, 0.96", "-25.6945, -349.926, 38.6214, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-14.5085, -355.507, 25.915, 0.96", "-14.8809, -357.017, 26.1634, 0.96", "-15.2461, -358.498, 26.4069, 0.72", "-15.8428, -360.918, 26.8048, 0.72", "-18.3248, -371.692, 30.6893, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-4.52158, -413.406, 2.97719, 0.84", "-3.39211, -415.271, 2.25146, 0.84", "-2.21686, -416.961, 1.5519, 0.84", "-1.91329, -417.421, 1.3453, 0.84", "-1.18856, -418.616, 0.766632, 0.84", "-0.306764, -420.217, -0.00829673, 0.6", "0.435779, -421.646, -0.683208, 1.08", "0.952118, -422.738, -1.18835, 1.08", "1.74193, -424.41, -1.95183, 0.72", "2.38905, -425.848, -2.55894, 0.72", "2.74471, -426.722, -2.9393, 0.72", "3.03703, -427.441, -3.30858, 0.72", "3.32783, -428.213, -3.72141, 1.2", "4.04992, -430.123, -4.7085, 0.84", "5.03445, -432.555, -5.89654, 1.08", "6.13183, -435.264, -7.16097, 1.08", "7.21054, -437.99, -8.42135, 0.84", "7.65958, -439.198, -8.95163, 0.84", "8.18464, -440.647, -9.55239, 1.32", "8.83695, -442.514, -10.239, 0.84", "9.08889, -443.196, -10.466, 0.84", "9.53322, -444.335, -10.7612, 1.32", "10.2256, -446.088, -11.2099, 0.84", "10.7239, -447.263, -11.6267, 1.44", "11.5658, -449.292, -12.5424, 1.2", "11.9362, -450.195, -13.0218, 1.2", "12.416, -451.383, -13.6825, 1.44", "13.025, -452.921, -14.5634, 1.08", "14.0841, -455.723, -16.1698, 0.84", "14.6231, -457.223, -17.0006, 1.44", "15.1354, -458.797, -17.8306, 0.96", "15.4493, -459.968, -18.3822, 0.96", "15.6468, -460.891, -18.7524, 1.44", "15.9411, -463.009, -19.4676, 0.96", "15.9858, -463.578, -19.6321, 0.96", "16.1032, -465.741, -20.2196, 1.44", "16.199, -468.046, -20.8669, 0.84", "16.2841, -470.655, -21.7364, 1.44", "16.3443, -473.356, -22.729, 0.84", "16.3503, -474.137, -23.0478, 0.84", "16.3839, -476.206, -23.9781, 1.44", "16.4831, -479.09, -25.3707, 1.44", "16.577, -482.254, -26.941, 1.08", "16.6375, -483.941, -27.8129, 0.72", "16.7166, -485.656, -28.7379, 1.32", "16.7616, -487.174, -29.584, 0.72", "16.7495, -487.942, -30.0217, 0.72", "16.6192, -490.0, -31.1723, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-4.52158, -413.406, 2.97719, 1.08", "-4.77115, -415.454, 2.81395, 1.08", "-4.88203, -416.809, 2.74207, 1.08", "-4.96324, -417.784, 2.73868, 1.08", "-5.12583, -419.623, 2.62119, 1.08", "-5.29776, -421.847, 2.35824, 1.44", "-5.43229, -423.991, 2.05078, 0.96", "-5.48626, -425.766, 1.76675, 0.96", "-5.49161, -427.499, 1.43892, 0.96", "-5.46702, -430.769, 0.849666, 0.96", "-5.42613, -432.905, 0.514942, 0.84", "-5.38538, -434.163, 0.354769, 1.44", "-5.33667, -436.105, 0.156365, 1.08", "-5.28271, -437.662, 0.0475652, 1.08", "-5.18231, -439.969, -0.0467438, 1.56", "-5.02028, -443.556, -0.003075, 1.32", "-4.9534, -445.343, 0.0275436, 0.96", "-4.90302, -447.123, 0.0415824, 1.32", "-4.81227, -450.44, 0.0447209, 1.08", "-4.7518, -452.532, 0.00976843, 0.72", "-4.7146, -454.369, -0.061835, 1.32", "-4.6795, -456.936, -0.15007, 1.08", "-4.66517, -458.981, -0.200115, 1.56", "-4.65467, -461.326, -0.226732, 0.84", "-4.64763, -464.182, -0.250292, 0.6", "-4.64234, -465.414, -0.258894, 1.08", "-4.63738, -468.029, -0.278782, 1.2", "-4.62101, -470.373, -0.292149, 0.72", "-4.60837, -471.154, -0.299534, 0.72", "-4.52988, -474.894, -0.360714, 1.32", "-4.49484, -475.58, -0.376021, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "42.0722, -331.974, -7.88823, 0.96", "43.5811, -330.879, -8.2376, 0.96", "44.1881, -330.438, -8.37814, 0.96", "44.9274, -329.901, -8.54933, 0.84", "46.7062, -328.609, -8.96121, 0.84", "47.7833, -327.827, -9.21061, 1.08", "48.7223, -327.145, -9.42804, 1.08", "55.0336, -321.842, -10.842, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "42.0722, -331.974, -7.88823, 0.6", "43.5425, -333.658, -7.36816, 0.6", "45.39, -335.806, -6.51431, 1.08", "47.3018, -338.194, -5.50868, 0.96", "48.3661, -339.538, -4.94929, 0.96", "49.4758, -340.939, -4.36604, 1.32", "51.5045, -343.5, -3.29979, 1.08", "52.3513, -344.601, -2.77098, 1.08", "54.0157, -346.792, -1.56292, 1.08", "55.5171, -348.854, -0.445265, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "35.5227, -461.654, -22.9616, 0.72", "35.2123, -463.469, -23.2056, 0.72", "34.9698, -465.202, -23.4092, 0.72", "34.6186, -467.576, -23.689, 0.72", "34.3597, -469.148, -23.844, 0.72", "34.243, -469.87, -23.9167, 0.72", "33.8785, -472.358, -24.1738, 0.6", "33.6833, -473.663, -24.2751, 0.6", "33.5091, -474.798, -24.3446, 0.6", "33.2112, -476.753, -24.4154, 0.48", "33.0254, -477.855, -24.4633, 0.48", "32.5893, -480.186, -24.5697, 0.84", "31.9703, -482.814, -24.6687, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "35.5227, -461.654, -22.9616, 0.72", "36.2673, -463.623, -23.2953, 0.72", "37.3155, -466.395, -23.765, 1.2", "37.6642, -467.317, -23.9213, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-4.49484, -475.58, -0.376021, 0.48", "-6.73266, -477.084, -0.852072, 0.48", "-7.13609, -477.327, -0.946835, 0.48", "-8.41792, -478.196, -1.25677, 0.48", "-9.88781, -479.347, -1.48296, 0.48", "-10.5517, -479.914, -1.53246, 0.48", "-12.3245, -481.461, -1.60823, 0.96", "-14.4278, -483.314, -1.60299, 0.6", "-16.0159, -484.786, -1.54606, 0.6", "-18.3999, -487.072, -1.37993, 1.08", "-20.1217, -488.762, -1.19747, 0.84", "-21.2186, -489.898, -1.03328, 0.84", "-22.508, -491.385, -0.740428, 1.2", "-23.9282, -493.028, -0.326684, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-4.49484, -475.58, -0.376021, 0.84", "-4.19277, -478.282, -0.678055, 0.84", "-4.14265, -479.564, -0.822875, 0.84", "-4.1199, -480.697, -0.937444, 0.84", "-4.06411, -483.582, -1.23514, 0.84", "-4.04016, -484.652, -1.34216, 0.84", "-3.98552, -487.142, -1.58053, 1.44", "-3.95726, -488.981, -1.76944, 1.08", "-3.95245, -491.074, -1.96047, 1.08", "-3.97791, -493.065, -2.10423, 0.84", "-3.99602, -494.314, -2.15306, 0.84", "-3.97011, -495.419, -2.17568, 1.08", "-3.83219, -496.889, -2.18671, 0.6", "-3.66693, -498.074, -2.17893, 0.6", "-3.48974, -499.311, -2.1409, 0.6", "-3.23213, -500.948, -2.10468, 1.2", "-2.94955, -502.588, -2.10575, 1.2", "-2.76629, -503.725, -2.12738, 1.2", "-2.58545, -505.01, -2.16934, 0.96", "-2.47666, -505.864, -2.20168, 1.44", "-2.31371, -507.557, -2.27027, 1.44", "-2.15949, -509.971, -2.3713, 0.96", "-2.0463, -512.631, -2.476, 1.32", "-2.00237, -513.734, -2.51338, 1.32", "-1.9126, -516.205, -2.5802, 0.84", "-1.86708, -518.237, -2.62571, 1.32", "-1.85268, -519.342, -2.63076, 1.32", "-1.84392, -520.64, -2.66101, 1.32", "-1.8306, -523.154, -2.75416, 1.32", "-1.84434, -524.808, -2.83216, 0.96", "-1.87507, -526.13, -2.90598, 0.96", "-1.91861, -529.102, -3.08561, 1.44", "-1.94033, -530.925, -3.21632, 1.08", "-1.98311, -532.389, -3.34168, 1.08", "-2.04224, -533.855, -3.5047, 1.08", "-2.08882, -535.647, -3.71721, 1.08", "-2.12175, -537.571, -3.9482, 1.08", "-2.17389, -540.292, -4.30731, 1.08", "-2.21706, -544.33, -4.86991, 0.96", "-2.28476, -550.53, -5.77373, 1.32", "-2.30619, -552.57, -6.08172, 0.84", "-2.32236, -553.785, -6.26764, 0.84", "-2.35468, -555.438, -6.51555, 0.84", "-2.38493, -556.7, -6.68899, 0.84", "-2.44317, -559.182, -6.98577, 0.84", "-2.50811, -560.416, -7.10411, 0.84", "-2.59162, -561.439, -7.19504, 0.84", "-2.70076, -562.509, -7.27234, 1.2", "-2.90221, -564.521, -7.38453, 0.72", "-3.09954, -566.086, -7.47156, 1.32", "-3.26292, -567.329, -7.5869, 0.84", "-3.46981, -568.779, -7.73811, 1.56", "-4.02339, -572.311, -8.19917, 0.84", "-4.25573, -573.623, -8.39658, 1.32", "-4.74444, -575.984, -8.79148, 0.84", "-5.54026, -579.488, -9.40072, 0.6", "-5.78228, -580.529, -9.57917, 1.08", "-6.24574, -582.48, -9.90251, 0.84", "-6.64483, -584.101, -10.179, 1.44", "-7.08274, -585.795, -10.4561, 0.96", "-7.42421, -587.194, -10.6616, 0.72", "-7.77798, -588.54, -10.7848, 0.72", "-8.39828, -591.064, -11.009, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "55.5171, -348.854, -0.445265, 0.84", "58.4444, -348.137, -0.813639, 0.84", "59.7297, -347.821, -0.975374, 0.84", "62.7537, -347.08, -1.35592, 0.72", "64.664, -346.612, -1.59632, 0.72", "76.2197, -345.628, -4.08517, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "55.5171, -348.854, -0.445265, 0.72", "56.8627, -350.799, -0.507372, 0.72", "58.2894, -352.862, -0.573222, 0.84", "58.8917, -353.733, -0.601027, 0.84", "60.1529, -355.556, -0.659236, 0.6", "61.026, -356.818, -0.699538, 0.6", "61.9389, -358.138, -0.741675, 0.6", "69.0639, -366.288, -0.893656, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "31.9703, -482.814, -24.6687, 0.48", "27.5001, -483.358, -22.9691, 0.48", "26.4602, -483.484, -22.5737, 1.08", "25.3894, -483.614, -22.1666, 0.48", "24.0459, -483.778, -21.6557, 0.96", "22.9094, -483.916, -21.2237, 0.48", "20.6915, -484.185, -20.3804, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "31.9703, -482.814, -24.6687, 0.96", "31.4024, -484.247, -25.5515, 0.96", "30.4097, -486.777, -26.9814, 0.48", "30.048, -487.771, -27.4898, 0.48", "29.3802, -489.807, -28.4961, 0.84", "28.9134, -491.288, -29.2236, 0.6", "28.6956, -492.005, -29.5741, 0.6", "28.2404, -493.563, -30.4006, 0.96", "27.9496, -494.604, -30.9688, 0.96", "27.381, -496.605, -32.177, 0.72", "26.8348, -498.536, -33.4701, 0.72", "26.3649, -500.058, -34.7349, 1.2", "25.915, -501.488, -36.0221, 1.2", "25.6303, -502.349, -36.8733, 1.2", "25.2517, -503.368, -37.9962, 1.08", "24.7244, -504.649, -39.5946, 0.84", "24.1589, -505.982, -41.5492, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "37.6642, -467.317, -23.9213, 0.72", "38.9057, -467.645, -25.4696, 0.72", "39.6487, -467.841, -26.3961, 0.72", "40.1268, -467.968, -26.9924, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "37.6642, -467.317, -23.9213, 0.48", "37.8268, -470.295, -23.8108, 0.48", "37.8469, -471.974, -23.7004, 0.96", "37.8331, -472.752, -23.6301, 0.96", "37.7591, -474.64, -23.4215, 0.48", "37.6952, -475.781, -23.2753, 0.48", "37.5854, -477.646, -23.0298, 0.96", "37.4453, -479.51, -22.7577, 0.96", "37.3372, -480.744, -22.5614, 0.96", "37.129, -482.588, -22.2371, 1.32", "36.8759, -484.435, -21.8797, 0.96", "36.7785, -485.159, -21.7441, 0.96", "36.6805, -486.029, -21.6008, 0.96", "36.5584, -487.46, -21.3983, 1.32", "36.4833, -488.969, -21.2429, 0.96", "36.4645, -490.62, -21.1405, 0.6", "36.4576, -491.85, -21.1638, 0.6", "36.4182, -493.378, -21.3778, 1.32", "36.3479, -494.977, -21.8007, 0.84", "36.2811, -496.307, -22.2573, 0.84", "36.2589, -496.908, -22.4962, 0.84", "36.1658, -499.304, -23.5312, 0.84", "36.0584, -501.802, -24.6555, 1.44", "35.895, -504.457, -25.8225, 0.96", "35.8184, -505.585, -26.2367, 0.96", "35.7046, -507.119, -26.6523, 0.96", "35.6349, -508.24, -26.8355, 0.96", "35.5924, -509.39, -26.8675, 0.96", "35.4901, -512.1, -26.6109, 0.72", "35.3704, -514.878, -26.1209, 1.08", "35.2818, -516.71, -25.7118, 0.72", "35.195, -518.426, -25.2733, 1.2", "35.1131, -520.403, -24.7419, 0.96", "35.0225, -523.504, -23.8822, 1.44", "34.9863, -525.621, -23.2946, 0.96", "34.9333, -526.839, -23.0068, 0.72", "34.7412, -529.888, -22.3867, 1.08", "34.5744, -531.721, -22.0677, 0.6", "34.4608, -532.929, -21.8588, 0.6", "34.3234, -534.404, -21.5994, 1.2", "34.0275, -537.793, -20.892, 0.72", "33.8791, -539.198, -20.5778, 1.08", "33.6084, -541.334, -20.0323, 0.96", "33.3043, -543.429, -19.4394, 0.72", "33.1393, -544.622, -19.0834, 0.72", "32.7773, -547.522, -18.1422, 0.72", "32.5531, -549.687, -17.3111, 0.72", "32.4376, -550.633, -16.9538, 1.2", "32.213, -551.978, -16.4987, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L6_DBC_4765d943f4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.997, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -5.98572, 9.95629, 9.45641, 2.16 ) }
    dend_73 { pt3dadd( -8.88802, 12.2582, 5.98366, 2.52 ) }
    dend_73 { pt3dadd( -10.9942, 13.762, 3.71533, 2.52 ) }
    dend_73 { pt3dadd( -12.526, 14.76, 2.25633, 2.52 ) }
    dend_73 { pt3dadd( -13.3316, 15.2367, 1.54767, 2.52 ) }
    dend_73 { pt3dadd( -14.3039, 15.7438, 0.804117, 2.28 ) }
    dend_73 { pt3dadd( -16.8946, 17.0092, -0.840525, 1.92 ) }
    dend_73 { pt3dadd( -18.0033, 17.4864, -1.36033, 1.92 ) }
    dend_73 { pt3dadd( -20.4033, 18.3825, -2.3527, 1.8 ) }
    dend_73 { pt3dadd( -21.8438, 18.9001, -2.86803, 1.8 ) }
    dend_73 { pt3dadd( -24.9582, 19.8834, -3.83367, 1.56 ) }
    dend_73 { pt3dadd( -27.3787, 20.5618, -4.48359, 1.92 ) }
    dend_73 { pt3dadd( -29.4661, 21.0446, -4.96186, 1.92 ) }
    dend_73 { pt3dadd( -30.9573, 21.2361, -5.23106, 1.92 ) }
    dend_73 { pt3dadd( -32.8629, 21.2651, -5.49338, 1.92 ) }
    dend_73 { pt3dadd( -36.5083, 21.0617, -5.97624, 1.8 ) }
    dend_73 { pt3dadd( -37.1261, 20.975, -6.06882, 1.8 ) }
    dend_73 { pt3dadd( -38.4191, 20.6988, -6.26297, 1.8 ) }
    dend_73 { pt3dadd( -41.4848, 19.8933, -6.79503, 1.32 ) }
    dend_73 { pt3dadd( -42.5693, 19.5863, -7.03813, 1.32 ) }
    dend_73 { pt3dadd( -44.6608, 18.9845, -7.69982, 1.92 ) }
    dend_73 { pt3dadd( -45.476, 18.9239, -8.17629, 1.92 ) }
    dend_73 { pt3dadd( -46.0623, 19.416, -9.09253, 1.92 ) }
    dend_73 { pt3dadd( -46.3282, 19.7644, -9.67187, 1.92 ) }
    dend_73 { pt3dadd( -46.61, 20.1855, -10.3743, 1.92 ) }
    dend_73 { pt3dadd( -46.9949, 20.4414, -11.002, 1.92 ) }
    dend_73 { pt3dadd( -47.6159, 20.551, -11.7649, 1.92 ) }
    dend_73 { pt3dadd( -49.4501, 20.5265, -13.8152, 1.44 ) }
    dend_73 { pt3dadd( -50.8313, 20.4375, -15.2594, 1.44 ) }
    dend_73 { pt3dadd( -51.5322, 20.3609, -15.9468, 1.44 ) }
    dend_73 { pt3dadd( -53.3374, 20.0567, -17.6382, 1.44 ) }
    dend_73 { pt3dadd( -54.5272, 19.7826, -18.7198, 1.8 ) }
    dend_73 { pt3dadd( -55.4576, 19.5007, -19.5571, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 13.302, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.86214, 15.4445, 0.974278, 1.32 ) }
    dend_69 { pt3dadd( -2.70057, 17.7102, 0.230406, 1.32 ) }
    dend_69 { pt3dadd( -2.61817, 18.9407, -0.131105, 1.32 ) }
    dend_69 { pt3dadd( -2.53428, 20.2669, -0.47242, 1.32 ) }
    dend_69 { pt3dadd( -2.48428, 21.0944, -0.65666, 1.32 ) }
    dend_69 { pt3dadd( -2.41333, 22.0408, -0.836483, 1.32 ) }
    dend_69 { pt3dadd( -2.31842, 23.1976, -0.947757, 1.32 ) }
    dend_69 { pt3dadd( -2.25101, 23.9226, -0.92108, 1.32 ) }
    dend_69 { pt3dadd( -2.11415, 25.2726, -0.818857, 1.08 ) }
    dend_69 { pt3dadd( -1.95228, 26.7137, -0.679032, 1.56 ) }
    dend_69 { pt3dadd( -1.77914, 28.2438, -0.494965, 1.56 ) }
    dend_69 { pt3dadd( -1.62117, 29.5776, -0.303021, 1.56 ) }
    dend_69 { pt3dadd( -1.18631, 32.6344, 0.222028, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 10.6575, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.4188, 11.5787, 11.7034, 1.8 ) }
    dend_64 { pt3dadd( -7.04202, 12.5563, 12.0785, 1.8 ) }
    dend_64 { pt3dadd( -8.26133, 14.3243, 12.8918, 1.56 ) }
    dend_64 { pt3dadd( -8.61129, 14.8317, 13.1252, 1.56 ) }
    dend_64 { pt3dadd( -9.41071, 15.9909, 13.6584, 1.44 ) }
    dend_64 { pt3dadd( -10.2443, 17.1996, 14.2144, 0.96 ) }
    dend_64 { pt3dadd( -10.5983, 17.71, 14.4736, 0.96 ) }
    dend_64 { pt3dadd( -12.0632, 19.7018, 15.5795, 1.92 ) }
    dend_64 { pt3dadd( -16.1609, 25.7035, 18.4824, 1.92 ) }
    dend_64 { pt3dadd( -21.5087, 30.2815, 21.792, 1.92 ) }
    dend_64 { pt3dadd( -27.7273, 34.4394, 23.884, 1.92 ) }
    dend_64 { pt3dadd( -33.3856, 39.5281, 25.5688, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -11.6362, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.57815, -13.413, 11.4264, 2.64 ) }
    dend_41 { pt3dadd( 1.75007, -15.4646, 11.2804, 2.64 ) }
    dend_41 { pt3dadd( 1.87687, -16.9778, 11.1728, 2.64 ) }
    dend_41 { pt3dadd( 1.9951, -18.3887, 11.0724, 2.64 ) }
    dend_41 { pt3dadd( 2.23568, -21.2595, 10.8682, 2.4 ) }
    dend_41 { pt3dadd( 2.47806, -24.1519, 10.6624, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -12.446, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 5.05112, -13.2768, 12.8104, 2.16 ) }
    dend_18 { pt3dadd( 5.77115, -15.9187, 12.117, 2.16 ) }
    dend_18 { pt3dadd( 6.31987, -17.8091, 11.7126, 2.16 ) }
    dend_18 { pt3dadd( 7.26447, -21.0632, 11.0164, 2.16 ) }
    dend_18 { pt3dadd( 7.95899, -23.4559, 10.5045, 2.16 ) }
    dend_18 { pt3dadd( 8.46257, -25.1907, 10.1333, 2.16 ) }
    dend_18 { pt3dadd( 9.79388, -29.7092, 9.15167, 2.52 ) }
    dend_18 { pt3dadd( 10.7347, -33.2194, 8.39241, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 12.9843, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.123726, 16.682, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.355881, 20.3235, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 0.786561, 23.5935, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.00432, 25.2469, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.26967, 27.2616, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.29094 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.29094 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.29094 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -55.4576, 19.5007, -19.5571, 1.2 ) }
    dend_75 { pt3dadd( -56.7233, 22.058, -18.8113, 1.2 ) }
    dend_75 { pt3dadd( -58.1635, 23.98, -18.1317, 1.2 ) }
    dend_75 { pt3dadd( -59.244, 24.8392, -17.7414, 1.2 ) }
    dend_75 { pt3dadd( -59.9598, 25.3135, -17.5045, 1.56 ) }
    dend_75 { pt3dadd( -60.4176, 25.5402, -17.4416, 1.56 ) }
    dend_75 { pt3dadd( -61.2355, 25.8647, -17.4089, 1.56 ) }
    dend_75 { pt3dadd( -63.5282, 26.4946, -17.405, 0.96 ) }
    dend_75 { pt3dadd( -67.1251, 27.2509, -17.5934, 1.56 ) }
    dend_75 { pt3dadd( -67.4831, 27.3174, -17.6198, 1.56 ) }
    dend_75 { pt3dadd( -71.9955, 28.0472, -18.079, 1.08 ) }
    dend_75 { pt3dadd( -73.3892, 28.2263, -18.2802, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -55.4576, 19.5007, -19.5571, 1.08 ) }
    dend_74 { pt3dadd( -56.9355, 19.3402, -20.7146, 1.08 ) }
    dend_74 { pt3dadd( -58.4593, 19.0006, -22.0717, 1.56 ) }
    dend_74 { pt3dadd( -61.4963, 17.957, -25.5061, 0.84 ) }
    dend_74 { pt3dadd( -62.5707, 17.4459, -27.0966, 0.84 ) }
    dend_74 { pt3dadd( -62.8974, 17.2426, -27.6911, 0.84 ) }
    dend_74 { pt3dadd( -63.685, 16.6516, -29.3642, 0.84 ) }
    dend_74 { pt3dadd( -64.3069, 15.9388, -31.2893, 0.84 ) }
    dend_74 { pt3dadd( -64.882, 14.8814, -33.8882, 0.84 ) }
    dend_74 { pt3dadd( -65.2293, 13.7617, -36.1678, 0.84 ) }
    dend_74 { pt3dadd( -65.4228, 13.02, -37.5471, 0.84 ) }
    dend_74 { pt3dadd( -65.654, 12.2764, -38.8965, 0.84 ) }
    dend_74 { pt3dadd( -65.8912, 11.6901, -39.8982, 0.84 ) }
    dend_74 { pt3dadd( -66.4142, 10.7178, -41.2981, 0.84 ) }
    dend_74 { pt3dadd( -67.0265, 9.82149, -42.2463, 0.84 ) }
    dend_74 { pt3dadd( -67.4481, 9.32199, -42.6676, 0.84 ) }
    dend_74 { pt3dadd( -68.408, 8.36981, -43.3722, 0.84 ) }
    dend_74 { pt3dadd( -69.1265, 7.7501, -43.7719, 0.84 ) }
    dend_74 { pt3dadd( -70.2842, 6.8526, -44.2753, 0.84 ) }
    dend_74 { pt3dadd( -71.7181, 5.68977, -44.8338, 0.84 ) }
    dend_74 { pt3dadd( -73.2622, 4.27978, -45.4238, 0.84 ) }
    dend_74 { pt3dadd( -74.2218, 3.20963, -45.8016, 0.84 ) }
    dend_74 { pt3dadd( -75.3141, 1.74962, -46.29, 0.84 ) }
    dend_74 { pt3dadd( -76.9833, -0.901135, -47.2379, 0.84 ) }
    dend_74 { pt3dadd( -78.2505, -3.35025, -48.1371, 1.32 ) }
    dend_74 { pt3dadd( -79.1169, -5.36152, -48.8592, 0.6 ) }
    dend_74 { pt3dadd( -79.9384, -7.73854, -49.6826, 1.2 ) }
    dend_74 { pt3dadd( -80.4756, -9.73303, -50.3884, 0.72 ) }
    dend_74 { pt3dadd( -80.8265, -11.6234, -51.0924, 0.72 ) }
    dend_74 { pt3dadd( -80.9432, -12.8436, -51.5955, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -1.18631, 32.6344, 0.222028, 1.32 ) }
    dend_70 { pt3dadd( -0.716616, 33.6298, 0.699597, 1.32 ) }
    dend_70 { pt3dadd( 0.346086, 36.0707, 1.70698, 0.96 ) }
    dend_70 { pt3dadd( 0.774297, 37.2066, 2.10823, 0.96 ) }
    dend_70 { pt3dadd( 1.12444, 38.3944, 2.45648, 1.2 ) }
    dend_70 { pt3dadd( 1.27116, 39.073, 2.61668, 1.2 ) }
    dend_70 { pt3dadd( 1.36906, 39.6717, 2.73843, 1.2 ) }
    dend_70 { pt3dadd( 1.39131, 40.3432, 2.81821, 1.44 ) }
    dend_70 { pt3dadd( 1.24612, 41.2649, 2.81944, 1.08 ) }
    dend_70 { pt3dadd( 0.908555, 42.4359, 2.82041, 1.08 ) }
    dend_70 { pt3dadd( 0.438216, 43.7099, 2.82125, 1.56 ) }
    dend_70 { pt3dadd( 0.289058, 44.0573, 2.82137, 1.56 ) }
    dend_70 { pt3dadd( -0.170796, 44.9979, 2.82115, 1.56 ) }
    dend_70 { pt3dadd( -0.84189, 46.2076, 2.81945, 1.56 ) }
    dend_70 { pt3dadd( -0.90212, 46.3009, 2.81906, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -33.3856, 39.5281, 25.5688, 1.2 ) }
    dend_66 { pt3dadd( -41.0659, 47.4378, 29.6054, 1.2 ) }
    dend_66 { pt3dadd( -46.8881, 55.686, 35.6041, 1.2 ) }
    dend_66 { pt3dadd( -54.8045, 63.4306, 39.4887, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -33.3856, 39.5281, 25.5688, 1.44 ) }
    dend_65 { pt3dadd( -39.2134, 46.1014, 28.5166, 1.2 ) }
    dend_65 { pt3dadd( -43.935, 53.2308, 32.1611, 1.2 ) }
    dend_65 { pt3dadd( -49.1781, 60.3036, 35.1105, 1.2 ) }
    dend_65 { pt3dadd( -55.1365, 67.0508, 37.3059, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.47806, -24.1519, 10.6624, 1.2 ) }
    dend_61 { pt3dadd( 2.17459, -27.0215, 10.1747, 1.2 ) }
    dend_61 { pt3dadd( 2.0283, -28.7393, 9.87919, 1.2 ) }
    dend_61 { pt3dadd( 1.90349, -30.6736, 9.55172, 1.2 ) }
    dend_61 { pt3dadd( 1.81754, -32.383, 9.27004, 1.2 ) }
    dend_61 { pt3dadd( 1.78401, -33.6013, 9.07795, 1.2 ) }
    dend_61 { pt3dadd( 1.76552, -34.5134, 8.93363, 1.2 ) }
    dend_61 { pt3dadd( 1.79185, -35.2035, 8.81074, 1.2 ) }
    dend_61 { pt3dadd( 1.85897, -36.0976, 8.65738, 1.2 ) }
    dend_61 { pt3dadd( 1.92836, -36.6237, 8.589, 1.2 ) }
    dend_61 { pt3dadd( 2.10187, -37.6213, 8.48534, 1.2 ) }
    dend_61 { pt3dadd( 2.2203, -38.3514, 8.42145, 1.2 ) }
    dend_61 { pt3dadd( 2.29649, -39.1343, 8.37161, 1.2 ) }
    dend_61 { pt3dadd( 2.2889, -39.7627, 8.34427, 1.2 ) }
    dend_61 { pt3dadd( 2.15973, -41.0062, 8.31363, 1.2 ) }
    dend_61 { pt3dadd( 2.07709, -41.5281, 8.30736, 1.2 ) }
    dend_61 { pt3dadd( 1.86457, -42.6419, 8.29921, 1.2 ) }
    dend_61 { pt3dadd( 1.49843, -44.5322, 8.29547, 1.68 ) }
    dend_61 { pt3dadd( 1.03638, -46.832, 8.29068, 1.08 ) }
    dend_61 { pt3dadd( 0.637773, -48.8459, 8.28394, 0.72 ) }
    dend_61 { pt3dadd( 0.456656, -49.8752, 8.27891, 1.92 ) }
    dend_61 { pt3dadd( 0.067464, -52.5645, 8.26311, 0.96 ) }
    dend_61 { pt3dadd( -0.148167, -54.5448, 8.25091, 0.84 ) }
    dend_61 { pt3dadd( -0.214617, -55.6787, 8.24221, 1.44 ) }
    dend_61 { pt3dadd( -0.220514, -57.173, 8.22997, 1.08 ) }
    dend_61 { pt3dadd( -0.171351, -58.5792, 8.22125, 1.08 ) }
    dend_61 { pt3dadd( -0.040737, -60.8407, 8.21358, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( 0.023385, -61.8066, 8.21548, 1.44 ) }
    dend_61 { pt3dadd( 0.094097, -63.1747, 8.21997, 1.44 ) }
    dend_61 { pt3dadd( 0.154521, -65.0124, 8.22834, 0.72 ) }
    dend_61 { pt3dadd( 0.163629, -65.7315, 8.23241, 1.2 ) }
    dend_61 { pt3dadd( 0.159592, -67.0511, 8.24082, 1.2 ) }
    dend_61 { pt3dadd( 0.163121, -68.0731, 8.24694, 1.56 ) }
    dend_61 { pt3dadd( 0.14598, -69.4822, 8.21771, 1.32 ) }
    dend_61 { pt3dadd( 0.092227, -71.0724, 8.15404, 0.84 ) }
    dend_61 { pt3dadd( 0.060564, -72.9353, 8.04943, 1.56 ) }
    dend_61 { pt3dadd( 0.059775, -74.0365, 7.97909, 1.56 ) }
    dend_61 { pt3dadd( 0.078104, -76.0004, 7.84432, 0.96 ) }
    dend_61 { pt3dadd( 0.106085, -77.8109, 7.71367, 0.96 ) }
    dend_61 { pt3dadd( 0.117146, -79.2071, 7.61208, 1.32 ) }
    dend_61 { pt3dadd( 0.071659, -80.9189, 7.4971, 1.32 ) }
    dend_61 { pt3dadd( -0.08478, -83.2923, 7.36535, 0.72 ) }
    dend_61 { pt3dadd( -0.167562, -84.0932, 7.32947, 1.56 ) }
    dend_61 { pt3dadd( -0.288047, -84.8891, 7.29561, 1.56 ) }
    dend_61 { pt3dadd( -0.574459, -86.4297, 7.23682, 0.96 ) }
    dend_61 { pt3dadd( -0.9105, -87.7564, 7.16961, 1.68 ) }
    dend_61 { pt3dadd( -1.51899, -89.832, 6.99777, 1.08 ) }
    dend_61 { pt3dadd( -2.02411, -91.5131, 6.81546, 0.96 ) }
    dend_61 { pt3dadd( -2.61853, -93.6623, 6.55273, 1.44 ) }
    dend_61 { pt3dadd( -2.91303, -94.8251, 6.39986, 1.08 ) }
    dend_61 { pt3dadd( -3.34719, -96.6747, 6.12615, 0.84 ) }
    dend_61 { pt3dadd( -3.70547, -98.3367, 5.84585, 1.44 ) }
    dend_61 { pt3dadd( -3.87448, -99.16, 5.69766, 1.44 ) }
    dend_61 { pt3dadd( -4.1712, -100.785, 5.41015, 0.72 ) }
    dend_61 { pt3dadd( -4.35556, -101.974, 5.19535, 0.72 ) }
    dend_61 { pt3dadd( -4.65905, -104.115, 4.79909, 1.32 ) }
    dend_61 { pt3dadd( -4.87365, -105.699, 4.48427, 0.96 ) }
    dend_61 { pt3dadd( -4.99638, -106.377, 4.35108, 0.96 ) }
    dend_61 { pt3dadd( -5.14812, -107.133, 4.18147, 0.96 ) }
    dend_61 { pt3dadd( -5.39168, -108.1, 3.93468, 0.96 ) }
    dend_61 { pt3dadd( -5.55118, -108.664, 3.79219, 0.96 ) }
    dend_61 { pt3dadd( -5.7938, -109.426, 3.57607, 0.96 ) }
    dend_61 { pt3dadd( -6.0603, -110.225, 3.34082, 0.96 ) }
    dend_61 { pt3dadd( -6.86689, -112.599, 2.643, 1.44 ) }
    dend_61 { pt3dadd( -7.78998, -115.333, 1.86968, 0.48 ) }
    dend_61 { pt3dadd( -8.21474, -116.658, 1.52147, 1.56 ) }
    dend_61 { pt3dadd( -9.02936, -119.374, 0.853565, 0.84 ) }
    dend_61 { pt3dadd( -9.23106, -120.114, 0.667771, 0.84 ) }
    dend_61 { pt3dadd( -9.54686, -121.425, 0.335195, 0.84 ) }
    dend_61 { pt3dadd( -9.76149, -122.508, 0.0817408, 0.84 ) }
    dend_61 { pt3dadd( -9.92631, -123.574, -0.133433, 0.84 ) }
    dend_61 { pt3dadd( -10.078, -124.601, -0.31278, 0.84 ) }
    dend_61 { pt3dadd( -10.4549, -127.387, -0.723912, 0.6 ) }
    dend_61 { pt3dadd( -10.6763, -128.926, -0.964899, 1.08 ) }
    dend_61 { pt3dadd( -11.0058, -131.063, -1.32055, 0.72 ) }
    dend_61 { pt3dadd( -11.3427, -133.051, -1.65902, 0.6 ) }
    dend_61 { pt3dadd( -11.5271, -133.998, -1.81359, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.47806, -24.1519, 10.6624, 1.92 ) }
    dend_42 { pt3dadd( 2.52638, -27.2545, 10.4626, 1.92 ) }
    dend_42 { pt3dadd( 2.57928, -30.6511, 10.2438, 1.92 ) }
    dend_42 { pt3dadd( 2.63894, -34.4817, 9.99702, 2.28 ) }
    dend_42 { pt3dadd( 2.67061, -36.5155, 9.86601, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 10.7347, -33.2194, 8.39241, 1.32 ) }
    dend_40 { pt3dadd( 13.5363, -34.7324, 8.848, 1.32 ) }
    dend_40 { pt3dadd( 15.4387, -35.5462, 9.20914, 1.32 ) }
    dend_40 { pt3dadd( 16.9939, -36.1135, 9.5317, 1.32 ) }
    dend_40 { pt3dadd( 18.6715, -36.6747, 9.90004, 1.32 ) }
    dend_40 { pt3dadd( 20.9136, -37.3541, 10.4299, 1.32 ) }
    dend_40 { pt3dadd( 22.0952, -37.7131, 10.7274, 1.32 ) }
    dend_40 { pt3dadd( 25.1755, -38.6124, 11.6344, 1.08 ) }
    dend_40 { pt3dadd( 26.1531, -38.8871, 11.9468, 1.08 ) }
    dend_40 { pt3dadd( 26.5574, -39.0048, 12.0839, 1.08 ) }
    dend_40 { pt3dadd( 28.7177, -39.692, 12.8588, 1.44 ) }
    dend_40 { pt3dadd( 30.3711, -40.3539, 13.4439, 1.08 ) }
    dend_40 { pt3dadd( 31.2012, -40.7766, 13.734, 1.08 ) }
    dend_40 { pt3dadd( 33.1762, -41.9198, 14.3686, 1.08 ) }
    dend_40 { pt3dadd( 34.4588, -42.6617, 14.738, 0.84 ) }
    dend_40 { pt3dadd( 35.7432, -43.4076, 15.0658, 0.84 ) }
    dend_40 { pt3dadd( 37.2899, -44.2227, 15.4064, 0.84 ) }
    dend_40 { pt3dadd( 38.5463, -44.8548, 15.6702, 0.84 ) }
    dend_40 { pt3dadd( 41.6117, -46.3584, 16.1699, 1.2 ) }
    dend_40 { pt3dadd( 43.3554, -47.1846, 16.3526, 0.84 ) }
    dend_40 { pt3dadd( 44.8556, -47.8071, 16.4218, 0.84 ) }
    dend_40 { pt3dadd( 47.7985, -48.864, 16.4386, 0.96 ) }
    dend_40 { pt3dadd( 50.6982, -49.8683, 16.4182, 0.72 ) }
    dend_40 { pt3dadd( 53.9351, -50.9712, 16.3263, 1.2 ) }
    dend_40 { pt3dadd( 55.7265, -51.5874, 16.2035, 1.2 ) }
    dend_40 { pt3dadd( 57.6191, -52.1712, 15.9857, 0.6 ) }
    dend_40 { pt3dadd( 58.5005, -52.4106, 15.8389, 0.6 ) }
    dend_40 { pt3dadd( 68.8135, -54.9327, 15.9848, 0.6 ) }
    dend_40 { pt3dadd( 78.5349, -59.236, 15.3976, 0.6 ) }
    dend_40 { pt3dadd( 88.952, -61.2563, 15.5446, 0.6 ) }
    dend_40 { pt3dadd( 99.5439, -61.6367, 15.7842, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.7347, -33.2194, 8.39241, 1.8 ) }
    dend_19 { pt3dadd( 10.9292, -35.8886, 8.36481, 1.8 ) }
    dend_19 { pt3dadd( 11.2164, -38.61, 8.33833, 1.8 ) }
    dend_19 { pt3dadd( 11.4423, -40.1981, 8.32465, 1.8 ) }
    dend_19 { pt3dadd( 11.5702, -40.9772, 8.30151, 1.8 ) }
    dend_19 { pt3dadd( 11.7682, -42.1026, 8.25229, 1.8 ) }
    dend_19 { pt3dadd( 11.9612, -43.1379, 8.23588, 1.8 ) }
    dend_19 { pt3dadd( 12.164, -43.983, 8.24752, 1.8 ) }
    dend_19 { pt3dadd( 12.4477, -45.3528, 8.30392, 1.8 ) }
    dend_19 { pt3dadd( 12.572, -46.262, 8.34715, 1.8 ) }
    dend_19 { pt3dadd( 12.6992, -47.5438, 8.41457, 1.8 ) }
    dend_19 { pt3dadd( 12.8565, -49.9148, 8.44302, 1.8 ) }
    dend_19 { pt3dadd( 12.9155, -51.129, 8.42689, 1.8 ) }
    dend_19 { pt3dadd( 13.0148, -53.5682, 8.3501, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 13.1233, -55.4451, 8.24337, 1.92 ) }
    dend_19 { pt3dadd( 13.1938, -56.2238, 8.18034, 1.92 ) }
    dend_19 { pt3dadd( 13.6261, -60.6555, 7.70184, 2.16 ) }
    dend_19 { pt3dadd( 13.8182, -62.4097, 7.43696, 2.16 ) }
    dend_19 { pt3dadd( 13.9821, -63.5953, 7.23456, 2.16 ) }
    dend_19 { pt3dadd( 14.4053, -65.8902, 6.8057, 1.92 ) }
    dend_19 { pt3dadd( 14.741, -67.3344, 6.52069, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.26967, 27.2616, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 2.07522, 28.8667, 12.4517, 1.8 ) }
    dend_1 { pt3dadd( 2.80845, 30.3276, 13.0152, 1.8 ) }
    dend_1 { pt3dadd( 3.57576, 31.8565, 13.6048, 1.8 ) }
    dend_1 { pt3dadd( 4.4782, 33.6546, 14.2982, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.760647 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.760647 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.760647 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -73.3892, 28.2263, -18.2802, 1.68 ) }
    dend_77 { pt3dadd( -73.7603, 28.2184, -18.3236, 1.68 ) }
    dend_77 { pt3dadd( -78.1253, 28.3624, -18.7885, 1.2 ) }
    dend_77 { pt3dadd( -81.5597, 28.6986, -19.1315, 1.68 ) }
    dend_77 { pt3dadd( -83.0758, 28.9275, -19.2889, 1.68 ) }
    dend_77 { pt3dadd( -85.2866, 29.4082, -19.5564, 1.2 ) }
    dend_77 { pt3dadd( -89.1563, 30.4129, -20.11, 1.2 ) }
    dend_77 { pt3dadd( -91.3511, 31.1234, -20.5923, 0.84 ) }
    dend_77 { pt3dadd( -93.5143, 32.07, -21.3484, 1.32 ) }
    dend_77 { pt3dadd( -94.7662, 32.7024, -21.9796, 1.32 ) }
    dend_77 { pt3dadd( -96.7988, 33.7741, -23.2467, 0.84 ) }
    dend_77 { pt3dadd( -97.6716, 34.244, -23.8994, 0.84 ) }
    dend_77 { pt3dadd( -100.748, 35.9408, -26.5203, 0.84 ) }
    dend_77 { pt3dadd( -103.082, 37.2002, -28.5939, 0.84 ) }
    dend_77 { pt3dadd( -104.633, 38.0584, -29.9801, 0.84 ) }
    dend_77 { pt3dadd( -105.829, 38.7301, -30.9657, 0.84 ) }
    dend_77 { pt3dadd( -107.428, 39.6175, -32.114, 0.84 ) }
    dend_77 { pt3dadd( -109.024, 40.5511, -33.0743, 0.84 ) }
    dend_77 { pt3dadd( -111.294, 42.0493, -34.1888, 0.84 ) }
    dend_77 { pt3dadd( -112.854, 43.1511, -34.8507, 0.84 ) }
    dend_77 { pt3dadd( -115.005, 44.739, -35.6976, 0.84 ) }
    dend_77 { pt3dadd( -117.68, 46.8372, -36.7801, 0.84 ) }
    dend_77 { pt3dadd( -119.081, 48.0079, -37.345, 0.84 ) }
    dend_77 { pt3dadd( -121.926, 50.4452, -38.5481, 1.32 ) }
    dend_77 { pt3dadd( -123.928, 52.1704, -39.4323, 1.32 ) }
    dend_77 { pt3dadd( -126.606, 54.6314, -40.6632, 0.96 ) }
    dend_77 { pt3dadd( -128.59, 56.5913, -41.6687, 0.96 ) }
    dend_77 { pt3dadd( -129.719, 57.6818, -42.2343, 0.96 ) }
    dend_77 { pt3dadd( -131.27, 59.0576, -43.023, 0.96 ) }
    dend_77 { pt3dadd( -132.652, 60.1006, -43.6753, 0.96 ) }
    dend_77 { pt3dadd( -136.445, 62.6437, -45.3005, 0.72 ) }
    dend_77 { pt3dadd( -137.835, 63.4437, -45.8306, 0.72 ) }
    dend_77 { pt3dadd( -143.301, 66.1147, -47.618, 1.08 ) }
    dend_77 { pt3dadd( -144.878, 66.7971, -48.0815, 1.08 ) }
    dend_77 { pt3dadd( -149.924, 69.0196, -49.3264, 1.08 ) }
    dend_77 { pt3dadd( -152.536, 70.1842, -49.9662, 1.08 ) }
    dend_77 { pt3dadd( -155.431, 71.6268, -50.678, 1.08 ) }
    dend_77 { pt3dadd( -157.958, 73.0731, -51.3344, 1.08 ) }
    dend_77 { pt3dadd( -158.85, 73.6592, -51.6167, 1.08 ) }
    dend_77 { pt3dadd( -162.671, 76.4254, -52.9912, 1.08 ) }
    dend_77 { pt3dadd( -165.56, 78.6885, -54.2128, 1.08 ) }
    dend_77 { pt3dadd( -171.018, 82.9625, -56.6926, 1.44 ) }
    dend_77 { pt3dadd( -172.472, 84.0619, -57.3775, 1.44 ) }
    dend_77 { pt3dadd( -176.023, 86.4069, -58.9783, 1.2 ) }
    dend_77 { pt3dadd( -177.467, 87.189, -59.4863, 1.2 ) }
    dend_77 { pt3dadd( -179.489, 88.048, -60.0019, 1.2 ) }
    dend_77 { pt3dadd( -185.266, 90.1202, -60.9776, 1.08 ) }
    dend_77 { pt3dadd( -188.866, 91.2344, -61.5087, 1.08 ) }
    dend_77 { pt3dadd( -193.314, 92.6193, -62.0818, 1.08 ) }
    dend_77 { pt3dadd( -199.663, 94.5489, -62.8196, 0.72 ) }
    dend_77 { pt3dadd( -203.804, 95.7755, -63.305, 0.72 ) }
    dend_77 { pt3dadd( -207.114, 96.7354, -63.6859, 1.08 ) }
    dend_77 { pt3dadd( -211.171, 97.7906, -64.1243, 0.84 ) }
    dend_77 { pt3dadd( -213.51, 98.2156, -64.3937, 0.84 ) }
    dend_77 { pt3dadd( -215.163, 98.3915, -64.629, 0.84 ) }
    dend_77 { pt3dadd( -217.142, 98.5057, -64.9855, 0.84 ) }
    dend_77 { pt3dadd( -220.557, 98.508, -65.507, 0.84 ) }
    dend_77 { pt3dadd( -225.444, 98.2172, -65.969, 0.84 ) }
    dend_77 { pt3dadd( -232.888, 97.3092, -66.2439, 0.6 ) }
    dend_77 { pt3dadd( -233.959, 97.1306, -66.2788, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -73.3892, 28.2263, -18.2802, 1.32 ) }
    dend_76 { pt3dadd( -73.7631, 29.294, -19.1177, 1.32 ) }
    dend_76 { pt3dadd( -74.2994, 30.7458, -20.3438, 0.84 ) }
    dend_76 { pt3dadd( -74.9086, 32.508, -21.9565, 1.44 ) }
    dend_76 { pt3dadd( -75.853, 34.9668, -24.4552, 1.08 ) }
    dend_76 { pt3dadd( -76.5041, 36.37, -25.955, 1.08 ) }
    dend_76 { pt3dadd( -76.7622, 36.8391, -26.4808, 1.08 ) }
    dend_76 { pt3dadd( -77.7951, 38.3578, -28.3957, 1.56 ) }
    dend_76 { pt3dadd( -79.0058, 39.6895, -30.2804, 0.96 ) }
    dend_76 { pt3dadd( -80.0044, 40.5086, -31.544, 0.96 ) }
    dend_76 { pt3dadd( -81.2247, 41.2036, -32.5539, 0.96 ) }
    dend_76 { pt3dadd( -82.1965, 41.5909, -33.0865, 0.96 ) }
    dend_76 { pt3dadd( -83.1215, 41.8634, -33.4556, 0.96 ) }
    dend_76 { pt3dadd( -84.0325, 42.0435, -33.6911, 0.96 ) }
    dend_76 { pt3dadd( -85.3245, 42.2953, -33.9315, 0.96 ) }
    dend_76 { pt3dadd( -88.0604, 42.885, -34.4226, 0.72 ) }
    dend_76 { pt3dadd( -90.4635, 43.3415, -34.8675, 0.72 ) }
    dend_76 { pt3dadd( -92.2527, 43.6641, -35.1881, 0.72 ) }
    dend_76 { pt3dadd( -93.6003, 43.8808, -35.4323, 0.72 ) }
    dend_76 { pt3dadd( -95.2733, 44.1346, -35.7495, 0.72 ) }
    dend_76 { pt3dadd( -97.8407, 44.558, -36.2789, 0.72 ) }
    dend_76 { pt3dadd( -100.595, 45.084, -36.8648, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.90212, 46.3009, 2.81906, 1.32 ) }
    dend_72 { pt3dadd( -1.59887, 47.6612, 3.31091, 1.32 ) }
    dend_72 { pt3dadd( -2.58104, 49.4106, 3.86754, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -3.91824, 51.8, 4.58731, 1.08 ) }
    dend_72 { pt3dadd( -4.74421, 53.34, 5.02223, 1.08 ) }
    dend_72 { pt3dadd( -5.21356, 54.283, 5.26561, 1.08 ) }
    dend_72 { pt3dadd( -5.89181, 55.7413, 5.61026, 1.08 ) }
    dend_72 { pt3dadd( -6.65368, 57.3571, 5.88438, 1.08 ) }
    dend_72 { pt3dadd( -7.01208, 58.1078, 5.99123, 1.08 ) }
    dend_72 { pt3dadd( -7.43805, 59.0503, 6.07817, 1.08 ) }
    dend_72 { pt3dadd( -8.00933, 60.2515, 6.18049, 1.08 ) }
    dend_72 { pt3dadd( -8.45071, 61.0424, 6.25596, 1.08 ) }
    dend_72 { pt3dadd( -8.95623, 61.7012, 6.32974, 1.08 ) }
    dend_72 { pt3dadd( -9.58939, 62.2459, 6.40044, 1.08 ) }
    dend_72 { pt3dadd( -10.5592, 62.9436, 6.4877, 1.08 ) }
    dend_72 { pt3dadd( -11.7806, 63.7826, 6.61477, 1.08 ) }
    dend_72 { pt3dadd( -12.8586, 64.5522, 6.74339, 1.08 ) }
    dend_72 { pt3dadd( -14.0116, 65.5088, 6.90502, 1.08 ) }
    dend_72 { pt3dadd( -15.0454, 66.7307, 6.91596, 0.96 ) }
    dend_72 { pt3dadd( -15.3517, 67.6136, 6.75897, 0.96 ) }
    dend_72 { pt3dadd( -15.4444, 68.9665, 6.36723, 0.96 ) }
    dend_72 { pt3dadd( -15.4031, 70.073, 6.01542, 0.96 ) }
    dend_72 { pt3dadd( -15.32, 71.0286, 5.70364, 0.96 ) }
    dend_72 { pt3dadd( -14.9104, 74.6758, 4.4896, 0.72 ) }
    dend_72 { pt3dadd( -14.7599, 76.1847, 3.95654, 0.72 ) }
    dend_72 { pt3dadd( -14.6983, 77.4831, 3.49099, 0.72 ) }
    dend_72 { pt3dadd( -14.6882, 78.874, 3.02986, 0.72 ) }
    dend_72 { pt3dadd( -14.7504, 81.2284, 2.39051, 0.72 ) }
    dend_72 { pt3dadd( -14.8112, 82.4002, 2.15528, 0.72 ) }
    dend_72 { pt3dadd( -14.9167, 83.5015, 2.0505, 0.72 ) }
    dend_72 { pt3dadd( -15.1258, 85.0883, 1.84738, 0.72 ) }
    dend_72 { pt3dadd( -15.4627, 87.5354, 1.49762, 0.72 ) }
    dend_72 { pt3dadd( -15.7726, 89.286, 1.23882, 0.72 ) }
    dend_72 { pt3dadd( -16.1223, 90.7478, 1.02632, 0.72 ) }
    dend_72 { pt3dadd( -16.8053, 92.9933, 0.704817, 1.2 ) }
    dend_72 { pt3dadd( -18.2545, 96.4211, 0.243163, 1.08 ) }
    dend_72 { pt3dadd( -19.1921, 97.9307, 0.0751955, 1.08 ) }
    dend_72 { pt3dadd( -20.2386, 99.2342, -0.0366678, 1.08 ) }
    dend_72 { pt3dadd( -21.0334, 100.13, -0.0722795, 1.08 ) }
    dend_72 { pt3dadd( -21.774, 100.922, -0.10243, 0.72 ) }
    dend_72 { pt3dadd( -23.8914, 103.141, -0.214313, 1.2 ) }
    dend_72 { pt3dadd( -26.1634, 105.503, -0.281044, 1.08 ) }
    dend_72 { pt3dadd( -28.076, 107.541, -0.329714, 1.44 ) }
    dend_72 { pt3dadd( -29.0152, 108.696, -0.35241, 1.44 ) }
    dend_72 { pt3dadd( -30.4294, 110.871, -0.390378, 1.2 ) }
    dend_72 { pt3dadd( -31.2041, 112.416, -0.408992, 1.2 ) }
    dend_72 { pt3dadd( -32.0171, 114.716, -0.395228, 1.08 ) }
    dend_72 { pt3dadd( -32.6231, 117.376, -0.312863, 1.08 ) }
    dend_72 { pt3dadd( -33.0787, 120.015, -0.135083, 0.96 ) }
    dend_72 { pt3dadd( -33.4524, 122.66, 0.122241, 0.96 ) }
    dend_72 { pt3dadd( -33.6037, 124.041, 0.315861, 1.2 ) }
    dend_72 { pt3dadd( -33.7351, 125.7, 0.467711, 0.72 ) }
    dend_72 { pt3dadd( -33.8124, 129.0, 0.537945, 1.2 ) }
    dend_72 { pt3dadd( -33.81, 129.875, 0.484465, 1.2 ) }
    dend_72 { pt3dadd( -33.8847, 131.603, 0.281149, 1.2 ) }
    dend_72 { pt3dadd( -34.095, 133.305, -0.0140324, 1.2 ) }
    dend_72 { pt3dadd( -34.7355, 136.568, -0.767845, 1.2 ) }
    dend_72 { pt3dadd( -35.1807, 138.024, -1.20376, 1.2 ) }
    dend_72 { pt3dadd( -35.6033, 138.925, -1.52335, 1.2 ) }
    dend_72 { pt3dadd( -36.8459, 140.723, -2.11108, 0.96 ) }
    dend_72 { pt3dadd( -37.8825, 141.759, -2.3465, 1.2 ) }
    dend_72 { pt3dadd( -38.5682, 142.341, -2.40607, 1.2 ) }
    dend_72 { pt3dadd( -39.7344, 143.264, -2.40101, 1.2 ) }
    dend_72 { pt3dadd( -40.4645, 143.857, -2.39716, 1.2 ) }
    dend_72 { pt3dadd( -42.2579, 145.454, -2.38592, 1.2 ) }
    dend_72 { pt3dadd( -44.2782, 147.606, -2.37127, 1.2 ) }
    dend_72 { pt3dadd( -45.3509, 148.966, -2.3632, 1.2 ) }
    dend_72 { pt3dadd( -46.0388, 149.938, -2.35847, 1.2 ) }
    dend_72 { pt3dadd( -46.7792, 151.146, -2.35363, 1.2 ) }
    dend_72 { pt3dadd( -47.4059, 152.314, -2.34982, 1.2 ) }
    dend_72 { pt3dadd( -48.381, 154.568, -2.34446, 0.84 ) }
    dend_72 { pt3dadd( -49.2374, 156.852, -2.31434, 1.32 ) }
    dend_72 { pt3dadd( -50.4431, 160.263, -2.23774, 0.84 ) }
    dend_72 { pt3dadd( -51.038, 161.976, -2.18481, 0.84 ) }
    dend_72 { pt3dadd( -51.5048, 163.318, -2.13307, 0.84 ) }
    dend_72 { pt3dadd( -52.1314, 165.146, -2.05022, 0.84 ) }
    dend_72 { pt3dadd( -52.8932, 167.232, -1.89747, 0.84 ) }
    dend_72 { pt3dadd( -53.3853, 168.4, -1.78301, 0.84 ) }
    dend_72 { pt3dadd( -54.1442, 169.783, -1.69893, 0.84 ) }
    dend_72 { pt3dadd( -54.7036, 170.557, -1.68853, 0.84 ) }
    dend_72 { pt3dadd( -55.7768, 171.728, -1.72771, 1.2 ) }
    dend_72 { pt3dadd( -57.5261, 173.309, -1.90118, 0.84 ) }
    dend_72 { pt3dadd( -59.1594, 174.589, -2.0961, 0.84 ) }
    dend_72 { pt3dadd( -61.0777, 175.895, -2.30697, 1.2 ) }
    dend_72 { pt3dadd( -62.6577, 176.671, -2.45197, 0.6 ) }
    dend_72 { pt3dadd( -64.5845, 177.506, -2.63587, 0.6 ) }
    dend_72 { pt3dadd( -66.636, 178.239, -2.8393, 1.08 ) }
    dend_72 { pt3dadd( -68.9954, 178.907, -3.08251, 0.48 ) }
    dend_72 { pt3dadd( -70.3445, 179.187, -3.1573, 0.48 ) }
    dend_72 { pt3dadd( -74.2975, 179.781, -3.02641, 0.84 ) }
    dend_72 { pt3dadd( -80.5149, 190.463, -1.5744, 0.84 ) }
    dend_72 { pt3dadd( -86.6206, 201.313, -1.8101, 0.84 ) }
    dend_72 { pt3dadd( -91.2521, 212.897, -2.24019, 0.84 ) }
    dend_72 { pt3dadd( -96.2221, 224.157, -4.24213, 0.84 ) }
    dend_72 { pt3dadd( -100.857, 235.584, -6.13964, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.90212, 46.3009, 2.81906, 1.32 ) }
    dend_71 { pt3dadd( -4.04557, 49.5533, 2.03206, 1.32 ) }
    dend_71 { pt3dadd( -5.11468, 50.7288, 1.67155, 1.32 ) }
    dend_71 { pt3dadd( -6.37962, 52.2876, 1.13355, 1.32 ) }
    dend_71 { pt3dadd( -7.59521, 54.06, 0.463708, 1.32 ) }
    dend_71 { pt3dadd( -8.26899, 55.1413, 0.0452291, 1.32 ) }
    dend_71 { pt3dadd( -9.2147, 57.0305, -0.654058, 1.32 ) }
    dend_71 { pt3dadd( -9.80218, 58.993, -1.42414, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -10.1339, 61.3212, -2.30075, 1.56 ) }
    dend_71 { pt3dadd( -10.0443, 63.6364, -3.13464, 1.56 ) }
    dend_71 { pt3dadd( -9.85641, 64.4604, -3.38435, 1.56 ) }
    dend_71 { pt3dadd( -8.5629, 67.7178, -4.27941, 1.2 ) }
    dend_71 { pt3dadd( -7.93012, 68.8118, -4.54855, 1.2 ) }
    dend_71 { pt3dadd( -6.77353, 70.3129, -4.9275, 1.2 ) }
    dend_71 { pt3dadd( -4.82391, 72.3226, -5.51381, 1.08 ) }
    dend_71 { pt3dadd( -3.33156, 73.6251, -5.95759, 1.08 ) }
    dend_71 { pt3dadd( -2.38135, 74.3649, -6.2987, 1.08 ) }
    dend_71 { pt3dadd( -1.47162, 75.0372, -6.7203, 1.08 ) }
    dend_71 { pt3dadd( -0.555889, 75.8133, -7.27579, 1.08 ) }
    dend_71 { pt3dadd( 1.09947, 77.5015, -8.5904, 1.8 ) }
    dend_71 { pt3dadd( 1.40112, 77.9241, -8.93433, 1.8 ) }
    dend_71 { pt3dadd( 2.47184, 80.2234, -10.7585, 1.32 ) }
    dend_71 { pt3dadd( 2.82924, 81.5663, -11.7935, 1.32 ) }
    dend_71 { pt3dadd( 2.89078, 83.2881, -13.071, 1.08 ) }
    dend_71 { pt3dadd( 2.76286, 83.7838, -13.4091, 1.08 ) }
    dend_71 { pt3dadd( 2.10878, 85.0198, -14.1202, 1.08 ) }
    dend_71 { pt3dadd( 1.26651, 86.3217, -14.7896, 1.44 ) }
    dend_71 { pt3dadd( 0.558474, 87.2708, -15.2384, 1.44 ) }
    dend_71 { pt3dadd( -0.31285, 88.4182, -15.7934, 1.44 ) }
    dend_71 { pt3dadd( -1.05202, 89.4269, -16.3378, 1.44 ) }
    dend_71 { pt3dadd( -2.47398, 91.6635, -17.6551, 0.84 ) }
    dend_71 { pt3dadd( -3.17496, 93.0046, -18.4623, 0.84 ) }
    dend_71 { pt3dadd( -4.24251, 95.7848, -20.201, 1.44 ) }
    dend_71 { pt3dadd( -4.67836, 97.3767, -21.0206, 1.44 ) }
    dend_71 { pt3dadd( -5.11977, 99.7732, -22.0309, 0.96 ) }
    dend_71 { pt3dadd( -5.4976, 102.238, -23.0413, 0.96 ) }
    dend_71 { pt3dadd( -5.68556, 103.494, -23.53, 0.96 ) }
    dend_71 { pt3dadd( -5.84484, 105.36, -24.1109, 0.72 ) }
    dend_71 { pt3dadd( -5.67829, 110.279, -25.0323, 1.2 ) }
    dend_71 { pt3dadd( -5.44063, 112.405, -25.1905, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -54.8045, 63.4306, 39.4887, 0.6 ) }
    dend_68 { pt3dadd( -61.0432, 71.476, 43.0964, 0.6 ) }
    dend_68 { pt3dadd( -66.3089, 80.7947, 44.877, 0.6 ) }
    dend_68 { pt3dadd( -70.2846, 90.411, 47.9945, 0.6 ) }
    dend_68 { pt3dadd( -75.6737, 99.016, 51.7392, 0.6 ) }
    dend_68 { pt3dadd( -79.9269, 107.995, 56.0654, 0.6 ) }
    dend_68 { pt3dadd( -84.8642, 116.615, 60.3593, 0.6 ) }
    dend_68 { pt3dadd( -90.3792, 125.503, 63.1776, 0.6 ) }
    dend_68 { pt3dadd( -97.5156, 133.307, 65.3361, 0.6 ) }
    dend_68 { pt3dadd( -104.419, 141.013, 68.3982, 0.6 ) }
    dend_68 { pt3dadd( -109.549, 149.497, 72.7229, 0.6 ) }
    dend_68 { pt3dadd( -115.362, 158.42, 74.7196, 0.6 ) }
    dend_68 { pt3dadd( -119.779, 167.99, 77.3387, 0.6 ) }
    dend_68 { pt3dadd( -124.639, 177.004, 80.888, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -54.8045, 63.4306, 39.4887, 0.84 ) }
    dend_67 { pt3dadd( -59.1591, 66.7649, 43.3865, 0.6 ) }
    dend_67 { pt3dadd( -63.2841, 71.1975, 46.3928, 0.6 ) }
    dend_67 { pt3dadd( -66.5665, 76.6859, 48.6968, 0.6 ) }
    dend_67 { pt3dadd( -69.6223, 82.4789, 50.5634, 0.6 ) }
    dend_67 { pt3dadd( -72.7133, 88.0182, 53.0083, 0.6 ) }
    dend_67 { pt3dadd( -77.1159, 92.3502, 55.7524, 0.6 ) }
    dend_67 { pt3dadd( -81.6227, 97.0003, 57.7326, 0.6 ) }
    dend_67 { pt3dadd( -85.9005, 101.772, 59.9289, 0.6 ) }
    dend_67 { pt3dadd( -90.102, 106.79, 61.7153, 0.6 ) }
    dend_67 { pt3dadd( -93.9993, 111.951, 63.7773, 0.6 ) }
    dend_67 { pt3dadd( -98.2731, 117.197, 64.4211, 0.6 ) }
    dend_67 { pt3dadd( -102.111, 122.78, 65.1003, 0.6 ) }
    dend_67 { pt3dadd( -105.552, 128.66, 65.4453, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -11.5271, -133.998, -1.81359, 0.96 ) }
    dend_63 { pt3dadd( -13.4461, -133.561, -1.43464, 0.96 ) }
    dend_63 { pt3dadd( -14.9064, -133.229, -1.14625, 0.96 ) }
    dend_63 { pt3dadd( -15.9443, -132.993, -0.941303, 0.72 ) }
    dend_63 { pt3dadd( -16.7082, -132.82, -0.790449, 0.72 ) }
    dend_63 { pt3dadd( -17.3569, -132.672, -0.662351, 0.72 ) }
    dend_63 { pt3dadd( -18.4612, -132.421, -0.44428, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -11.5271, -133.998, -1.81359, 0.96 ) }
    dend_62 { pt3dadd( -12.8042, -139.305, -3.50257, 0.96 ) }
    dend_62 { pt3dadd( -13.2002, -141.208, -4.5965, 0.96 ) }
    dend_62 { pt3dadd( -13.5058, -143.402, -5.9612, 1.32 ) }
    dend_62 { pt3dadd( -13.7673, -146.265, -7.60966, 0.6 ) }
    dend_62 { pt3dadd( -13.7754, -147.967, -8.68224, 0.6 ) }
    dend_62 { pt3dadd( -13.6873, -149.991, -9.93135, 1.2 ) }
    dend_62 { pt3dadd( -13.1927, -156.425, -13.7151, 1.2 ) }
    dend_62 { pt3dadd( -12.9966, -158.593, -15.0316, 1.56 ) }
    dend_62 { pt3dadd( -12.6468, -161.691, -16.8834, 0.96 ) }
    dend_62 { pt3dadd( -11.8528, -167.295, -19.979, 0.6 ) }
    dend_62 { pt3dadd( -11.4862, -169.842, -21.1765, 1.08 ) }
    dend_62 { pt3dadd( -11.1848, -172.187, -22.2045, 0.72 ) }
    dend_62 { pt3dadd( -11.1306, -173.402, -22.6634, 0.72 ) }
    dend_62 { pt3dadd( -11.1858, -175.081, -23.3463, 1.08 ) }
    dend_62 { pt3dadd( -11.3564, -176.91, -24.0814, 0.72 ) }
    dend_62 { pt3dadd( -11.6995, -179.005, -24.7965, 0.72 ) }
    dend_62 { pt3dadd( -12.7638, -184.501, -26.7347, 0.48 ) }
    dend_62 { pt3dadd( -13.1905, -186.487, -27.4297, 1.56 ) }
    dend_62 { pt3dadd( -14.0619, -189.95, -28.5686, 1.08 ) }
    dend_62 { pt3dadd( -14.4763, -191.322, -28.9842, 0.72 ) }
    dend_62 { pt3dadd( -15.3735, -193.971, -29.6817, 1.08 ) }
    dend_62 { pt3dadd( -16.2532, -196.442, -30.2957, 0.72 ) }
    dend_62 { pt3dadd( -16.7089, -197.73, -30.5419, 0.72 ) }
    dend_62 { pt3dadd( -17.7288, -200.866, -31.2378, 1.2 ) }
    dend_62 { pt3dadd( -18.4468, -203.355, -31.8516, 0.72 ) }
    dend_62 { pt3dadd( -18.7448, -204.483, -32.1476, 0.72 ) }
    dend_62 { pt3dadd( -19.4371, -207.867, -33.009, 0.72 ) }
    dend_62 { pt3dadd( -19.5748, -209.844, -33.6573, 1.08 ) }
    dend_62 { pt3dadd( -19.5486, -211.566, -34.2361, 0.96 ) }
    dend_62 { pt3dadd( -19.462, -212.855, -34.6547, 0.96 ) }
    dend_62 { pt3dadd( -19.317, -214.342, -35.0937, 0.96 ) }
    dend_62 { pt3dadd( -19.0163, -217.087, -35.7872, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -18.3263, -223.075, -37.0002, 1.2 ) }
    dend_62 { pt3dadd( -17.7671, -227.241, -37.7988, 0.6 ) }
    dend_62 { pt3dadd( -17.3114, -230.018, -38.2594, 0.6 ) }
    dend_62 { pt3dadd( -17.0081, -231.586, -38.4472, 0.6 ) }
    dend_62 { pt3dadd( -16.6229, -233.358, -38.556, 0.6 ) }
    dend_62 { pt3dadd( -16.4129, -234.575, -38.5313, 0.6 ) }
    dend_62 { pt3dadd( -16.2966, -235.572, -38.4237, 0.6 ) }
    dend_62 { pt3dadd( -16.1282, -236.972, -38.2915, 0.6 ) }
    dend_62 { pt3dadd( -15.7287, -240.165, -38.1651, 0.6 ) }
    dend_62 { pt3dadd( -15.5992, -241.259, -38.1623, 0.6 ) }
    dend_62 { pt3dadd( -14.9005, -247.529, -38.2963, 0.96 ) }
    dend_62 { pt3dadd( -14.5922, -250.526, -38.3995, 0.48 ) }
    dend_62 { pt3dadd( -14.4317, -252.416, -38.4864, 0.48 ) }
    dend_62 { pt3dadd( -14.1727, -256.88, -38.738, 0.72 ) }
    dend_62 { pt3dadd( -14.0674, -259.54, -38.8996, 0.48 ) }
    dend_62 { pt3dadd( -14.0288, -261.648, -38.9445, 1.2 ) }
    dend_62 { pt3dadd( -14.0778, -265.624, -38.8963, 0.84 ) }
    dend_62 { pt3dadd( -14.2109, -268.027, -38.8015, 1.32 ) }
    dend_62 { pt3dadd( -14.5559, -271.464, -38.5926, 0.84 ) }
    dend_62 { pt3dadd( -14.9417, -274.094, -38.3711, 1.44 ) }
    dend_62 { pt3dadd( -16.0623, -279.977, -37.8281, 0.48 ) }
    dend_62 { pt3dadd( -16.7252, -282.999, -37.5305, 0.48 ) }
    dend_62 { pt3dadd( -17.7828, -286.898, -37.1675, 0.48 ) }
    dend_62 { pt3dadd( -18.5446, -289.207, -36.9838, 0.48 ) }
    dend_62 { pt3dadd( -19.4254, -291.324, -36.8635, 0.96 ) }
    dend_62 { pt3dadd( -21.8691, -295.904, -36.8149, 0.48 ) }
    dend_62 { pt3dadd( -22.3985, -296.759, -36.8472, 0.84 ) }
    dend_62 { pt3dadd( -24.2335, -299.354, -36.9621, 0.6 ) }
    dend_62 { pt3dadd( -25.6303, -300.981, -37.0728, 0.84 ) }
    dend_62 { pt3dadd( -27.3061, -302.666, -37.2423, 0.6 ) }
    dend_62 { pt3dadd( -29.2392, -304.262, -37.5387, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 2.67061, -36.5155, 9.86601, 0.96 ) }
    dend_58 { pt3dadd( 1.97649, -37.9958, 10.0677, 0.96 ) }
    dend_58 { pt3dadd( 1.42292, -39.5702, 10.2205, 0.96 ) }
    dend_58 { pt3dadd( 1.26332, -40.1733, 10.3524, 0.96 ) }
    dend_58 { pt3dadd( 0.978264, -41.2637, 10.7087, 0.96 ) }
    dend_58 { pt3dadd( 0.706702, -42.2517, 11.1102, 0.96 ) }
    dend_58 { pt3dadd( 0.386286, -43.3677, 11.675, 0.96 ) }
    dend_58 { pt3dadd( -0.063862, -45.1163, 12.7066, 1.32 ) }
    dend_58 { pt3dadd( -0.633911, -47.2795, 14.1087, 0.84 ) }
    dend_58 { pt3dadd( -0.98666, -48.7051, 15.0883, 0.84 ) }
    dend_58 { pt3dadd( -1.20073, -49.6623, 15.791, 0.84 ) }
    dend_58 { pt3dadd( -1.66451, -51.7094, 17.4231, 1.32 ) }
    dend_58 { pt3dadd( -1.99337, -52.9061, 18.4804, 1.32 ) }
    dend_58 { pt3dadd( -2.36056, -53.9765, 19.5102, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.67061, -36.5155, 9.86601, 1.44 ) }
    dend_43 { pt3dadd( 2.65444, -41.038, 10.1629, 1.44 ) }
    dend_43 { pt3dadd( 2.62142, -44.274, 10.3607, 1.44 ) }
    dend_43 { pt3dadd( 2.59815, -46.211, 10.4659, 1.44 ) }
    dend_43 { pt3dadd( 2.51307, -50.2601, 10.6721, 1.8 ) }
    dend_43 { pt3dadd( 2.47762, -51.9477, 10.758, 1.8 ) }
    dend_43 { pt3dadd( 2.44263, -53.6131, 10.8428, 1.8 ) }
    dend_43 { pt3dadd( 2.38709, -55.002, 10.8801, 1.8 ) }
    dend_43 { pt3dadd( 2.24794, -57.8503, 10.9679, 1.56 ) }
    dend_43 { pt3dadd( 2.09533, -60.8858, 11.066, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 14.741, -67.3344, 6.52069, 1.56 ) }
    dend_37 { pt3dadd( 16.3034, -68.9605, 6.60066, 1.56 ) }
    dend_37 { pt3dadd( 17.2443, -69.9566, 6.64822, 1.56 ) }
    dend_37 { pt3dadd( 18.4099, -71.1874, 6.70725, 1.2 ) }
    dend_37 { pt3dadd( 19.1126, -71.9273, 6.74292, 1.2 ) }
    dend_37 { pt3dadd( 20.1649, -73.0265, 6.79663, 1.56 ) }
    dend_37 { pt3dadd( 21.6726, -74.6327, 6.87249, 1.2 ) }
    dend_37 { pt3dadd( 22.3551, -75.3874, 6.90585, 1.8 ) }
    dend_37 { pt3dadd( 23.0762, -76.1963, 6.94069, 1.8 ) }
    dend_37 { pt3dadd( 24.4798, -77.8125, 7.02117, 1.08 ) }
    dend_37 { pt3dadd( 25.4685, -78.9778, 7.08542, 1.68 ) }
    dend_37 { pt3dadd( 26.6041, -80.3552, 7.14667, 1.32 ) }
    dend_37 { pt3dadd( 27.3426, -81.2801, 7.17915, 1.32 ) }
    dend_37 { pt3dadd( 27.7969, -81.8584, 7.19525, 1.32 ) }
    dend_37 { pt3dadd( 28.863, -83.2676, 7.22257, 1.08 ) }
    dend_37 { pt3dadd( 29.5996, -84.2941, 7.21533, 1.56 ) }
    dend_37 { pt3dadd( 30.6949, -85.9245, 7.20245, 1.2 ) }
    dend_37 { pt3dadd( 31.0782, -86.5196, 7.19811, 1.2 ) }
    dend_37 { pt3dadd( 31.4408, -87.0923, 7.20394, 1.2 ) }
    dend_37 { pt3dadd( 32.1485, -88.2131, 7.23213, 1.68 ) }
    dend_37 { pt3dadd( 32.7363, -89.1437, 7.29455, 1.2 ) }
    dend_37 { pt3dadd( 33.4807, -90.305, 7.42591, 0.96 ) }
    dend_37 { pt3dadd( 33.9691, -91.0102, 7.53861, 0.96 ) }
    dend_37 { pt3dadd( 35.2638, -92.7283, 7.84716, 0.84 ) }
    dend_37 { pt3dadd( 35.9218, -93.5559, 8.01322, 0.84 ) }
    dend_37 { pt3dadd( 36.9494, -94.7745, 8.28733, 1.44 ) }
    dend_37 { pt3dadd( 37.4937, -95.3937, 8.4382, 1.44 ) }
    dend_37 { pt3dadd( 38.4815, -96.5004, 8.68323, 1.44 ) }
    dend_37 { pt3dadd( 39.0534, -97.1777, 8.82386, 0.96 ) }
    dend_37 { pt3dadd( 39.6767, -97.9711, 8.96353, 1.44 ) }
    dend_37 { pt3dadd( 39.8979, -98.2595, 9.00701, 1.44 ) }
    dend_37 { pt3dadd( 40.461, -99.0106, 9.08964, 1.44 ) }
    dend_37 { pt3dadd( 40.8948, -99.6173, 9.15005, 1.44 ) }
    dend_37 { pt3dadd( 41.6898, -100.756, 9.24653, 1.08 ) }
    dend_37 { pt3dadd( 42.4199, -101.767, 9.31812, 1.08 ) }
    dend_37 { pt3dadd( 42.8598, -102.325, 9.35035, 1.08 ) }
    dend_37 { pt3dadd( 43.7393, -103.349, 9.40609, 1.44 ) }
    dend_37 { pt3dadd( 44.1745, -103.821, 9.43557, 1.44 ) }
    dend_37 { pt3dadd( 45.2933, -105.03, 9.52531, 0.84 ) }
    dend_37 { pt3dadd( 46.0153, -105.828, 9.58858, 1.56 ) }
    dend_37 { pt3dadd( 47.2306, -107.226, 9.70263, 1.08 ) }
    dend_37 { pt3dadd( 47.8186, -107.917, 9.75997, 1.32 ) }
    dend_37 { pt3dadd( 49.5785, -109.818, 9.93319, 1.08 ) }
    dend_37 { pt3dadd( 50.4683, -110.711, 10.0303, 1.08 ) }
    dend_37 { pt3dadd( 51.2384, -111.435, 10.1192, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 52.3741, -112.426, 10.2509, 1.08 ) }
    dend_37 { pt3dadd( 53.154, -113.075, 10.3134, 1.08 ) }
    dend_37 { pt3dadd( 55.5155, -114.969, 10.4148, 1.44 ) }
    dend_37 { pt3dadd( 57.1362, -116.234, 10.4221, 1.08 ) }
    dend_37 { pt3dadd( 58.1408, -117.025, 10.4013, 1.08 ) }
    dend_37 { pt3dadd( 59.7495, -118.358, 10.3502, 1.08 ) }
    dend_37 { pt3dadd( 61.5797, -119.906, 10.2627, 0.72 ) }
    dend_37 { pt3dadd( 62.9677, -121.154, 10.161, 1.32 ) }
    dend_37 { pt3dadd( 63.9464, -122.162, 10.0369, 0.84 ) }
    dend_37 { pt3dadd( 64.5506, -122.826, 9.92642, 0.84 ) }
    dend_37 { pt3dadd( 65.5678, -124.083, 9.70573, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 14.741, -67.3344, 6.52069, 1.68 ) }
    dend_20 { pt3dadd( 14.8788, -69.7963, 6.56634, 1.68 ) }
    dend_20 { pt3dadd( 15.0574, -71.9698, 6.60265, 1.68 ) }
    dend_20 { pt3dadd( 15.194, -73.2162, 6.61959, 1.68 ) }
    dend_20 { pt3dadd( 15.6872, -76.8118, 6.65477, 1.32 ) }
    dend_20 { pt3dadd( 16.0573, -79.2014, 6.6691, 1.56 ) }
    dend_20 { pt3dadd( 16.4765, -82.2876, 6.68286, 1.56 ) }
    dend_20 { pt3dadd( 16.6324, -83.4505, 6.68016, 1.56 ) }
    dend_20 { pt3dadd( 16.8099, -85.2348, 6.67795, 1.56 ) }
    dend_20 { pt3dadd( 16.9451, -87.3835, 6.67758, 1.56 ) }
    dend_20 { pt3dadd( 17.0592, -90.4321, 6.67689, 1.2 ) }
    dend_20 { pt3dadd( 17.1567, -94.7203, 6.67076, 1.56 ) }
    dend_20 { pt3dadd( 17.2045, -97.706, 6.68845, 1.2 ) }
    dend_20 { pt3dadd( 17.2789, -101.458, 6.73657, 1.2 ) }
    dend_20 { pt3dadd( 17.3286, -103.632, 6.75492, 1.56 ) }
    dend_20 { pt3dadd( 17.3927, -106.139, 6.74728, 1.56 ) }
    dend_20 { pt3dadd( 17.4741, -108.161, 6.70663, 1.56 ) }
    dend_20 { pt3dadd( 17.6919, -111.278, 6.66054, 1.2 ) }
    dend_20 { pt3dadd( 17.8688, -113.986, 6.63937, 1.56 ) }
    dend_20 { pt3dadd( 18.0388, -117.063, 6.63353, 1.44 ) }
    dend_20 { pt3dadd( 18.1141, -119.219, 6.64049, 1.44 ) }
    dend_20 { pt3dadd( 18.1283, -120.769, 6.65254, 1.44 ) }
    dend_20 { pt3dadd( 18.1348, -125.985, 6.70497, 1.08 ) }
    dend_20 { pt3dadd( 18.1352, -128.793, 6.66795, 1.08 ) }
    dend_20 { pt3dadd( 18.1623, -131.313, 6.57955, 1.44 ) }
    dend_20 { pt3dadd( 18.1955, -132.437, 6.52282, 1.44 ) }
    dend_20 { pt3dadd( 18.2751, -134.074, 6.40046, 1.44 ) }
    dend_20 { pt3dadd( 18.4277, -136.408, 6.12573, 1.44 ) }
    dend_20 { pt3dadd( 18.7291, -139.695, 5.48669, 1.32 ) }
    dend_20 { pt3dadd( 19.0333, -141.973, 4.98154, 1.32 ) }
    dend_20 { pt3dadd( 19.2187, -143.181, 4.69439, 1.32 ) }
    dend_20 { pt3dadd( 19.3578, -144.182, 4.46696, 1.32 ) }
    dend_20 { pt3dadd( 19.5592, -145.944, 4.10917, 1.32 ) }
    dend_20 { pt3dadd( 19.6415, -146.996, 3.94023, 1.32 ) }
    dend_20 { pt3dadd( 19.734, -148.23, 3.79218, 1.32 ) }
    dend_20 { pt3dadd( 19.9193, -150.823, 3.47116, 1.8 ) }
    dend_20 { pt3dadd( 20.0729, -153.318, 3.14868, 1.8 ) }
    dend_20 { pt3dadd( 20.2029, -155.486, 2.92963, 1.8 ) }
    dend_20 { pt3dadd( 20.316, -157.652, 2.7634, 1.8 ) }
    dend_20 { pt3dadd( 20.4543, -161.175, 2.56839, 1.56 ) }
    dend_20 { pt3dadd( 20.5404, -164.754, 2.43445, 1.56 ) }
    dend_20 { pt3dadd( 20.5548, -166.47, 2.40177, 1.56 ) }
    dend_20 { pt3dadd( 20.5596, -170.128, 2.40837, 1.32 ) }
    dend_20 { pt3dadd( 20.5503, -171.844, 2.44539, 1.32 ) }
    dend_20 { pt3dadd( 20.4982, -174.921, 2.57768, 1.8 ) }
    dend_20 { pt3dadd( 20.4053, -177.618, 2.76458, 1.8 ) }
    dend_20 { pt3dadd( 20.3448, -180.381, 2.98291, 1.56 ) }
    dend_20 { pt3dadd( 20.3753, -182.986, 3.14557, 1.56 ) }
    dend_20 { pt3dadd( 20.4608, -184.739, 3.20791, 1.56 ) }
    dend_20 { pt3dadd( 20.5677, -186.006, 3.24757, 1.56 ) }
    dend_20 { pt3dadd( 20.6912, -187.305, 3.26917, 1.56 ) }
    dend_20 { pt3dadd( 20.8614, -189.182, 3.26686, 1.56 ) }
    dend_20 { pt3dadd( 21.033, -191.494, 3.22584, 1.2 ) }
    dend_20 { pt3dadd( 21.1314, -193.712, 3.1339, 1.2 ) }
    dend_20 { pt3dadd( 21.1632, -195.241, 3.04833, 1.2 ) }
    dend_20 { pt3dadd( 21.1414, -198.093, 2.84402, 1.56 ) }
    dend_20 { pt3dadd( 21.0757, -200.836, 2.60015, 1.56 ) }
    dend_20 { pt3dadd( 21.0261, -202.545, 2.42597, 1.56 ) }
    dend_20 { pt3dadd( 21.002, -204.795, 2.18436, 1.56 ) }
    dend_20 { pt3dadd( 21.0037, -206.934, 1.93498, 1.56 ) }
    dend_20 { pt3dadd( 21.0777, -211.152, 1.4086, 1.56 ) }
    dend_20 { pt3dadd( 21.2672, -215.999, 0.754745, 1.32 ) }
    dend_20 { pt3dadd( 21.4534, -220.036, 0.164824, 1.32 ) }
    dend_20 { pt3dadd( 21.5552, -222.21, -0.15823, 0.84 ) }
    dend_20 { pt3dadd( 21.6582, -224.443, -0.487668, 1.32 ) }
    dend_20 { pt3dadd( 21.7887, -227.095, -0.882762, 1.08 ) }
    dend_20 { pt3dadd( 21.9505, -229.581, -1.28077, 1.44 ) }
    dend_20 { pt3dadd( 22.1185, -232.203, -1.74393, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 4.4782, 33.6546, 14.2982, 1.2 ) }
    dend_11 { pt3dadd( 2.50219, 37.0787, 15.1871, 1.2 ) }
    dend_11 { pt3dadd( 1.75718, 38.6416, 15.6811, 1.2 ) }
    dend_11 { pt3dadd( 1.20856, 40.004, 16.1573, 1.2 ) }
    dend_11 { pt3dadd( 0.354505, 42.7971, 17.3221, 1.2 ) }
    dend_11 { pt3dadd( 0.0217227, 44.3014, 17.9906, 1.2 ) }
    dend_11 { pt3dadd( -0.192762, 45.7472, 18.6466, 1.08 ) }
    dend_11 { pt3dadd( -0.254838, 48.0506, 19.7831, 1.56 ) }
    dend_11 { pt3dadd( -0.202178, 49.5995, 20.554, 1.56 ) }
    dend_11 { pt3dadd( 0.105111, 53.0148, 22.1811, 1.2 ) }
    dend_11 { pt3dadd( 0.405825, 55.2135, 23.1379, 0.96 ) }
    dend_11 { pt3dadd( 0.719486, 57.6213, 24.0544, 1.32 ) }
    dend_11 { pt3dadd( 0.815512, 58.7198, 24.4391, 1.32 ) }
    dend_11 { pt3dadd( 0.864617, 59.9437, 24.8158, 1.32 ) }
    dend_11 { pt3dadd( 0.888231, 61.7683, 25.2789, 1.32 ) }
    dend_11 { pt3dadd( 0.878202, 62.7916, 25.4959, 1.32 ) }
    dend_11 { pt3dadd( 0.883074, 64.7883, 25.9272, 1.2 ) }
    dend_11 { pt3dadd( 0.952276, 66.8646, 26.4356, 1.56 ) }
    dend_11 { pt3dadd( 1.01934, 68.2513, 26.7965, 1.2 ) }
    dend_11 { pt3dadd( 1.17328, 70.387, 27.3991, 1.68 ) }
    dend_11 { pt3dadd( 1.51713, 73.2853, 28.2822, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 1.73111, 74.445, 28.6567, 1.44 ) }
    dend_11 { pt3dadd( 2.3016, 76.3677, 29.2922, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.4782, 33.6546, 14.2982, 1.44 ) }
    dend_2 { pt3dadd( 4.43206, 37.8893, 13.8769, 1.44 ) }
    dend_2 { pt3dadd( 4.4109, 39.831, 13.6838, 1.44 ) }
    dend_2 { pt3dadd( 4.38645, 42.0757, 13.4604, 1.44 ) }
    dend_2 { pt3dadd( 4.3583, 44.659, 13.2034, 1.44 ) }
    dend_2 { pt3dadd( 4.32423, 47.7865, 12.8923, 1.8 ) }
    dend_2 { pt3dadd( 4.2954, 50.4323, 12.629, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -2.36056, -53.9765, 19.5102, 0.96 ) }
    dend_60 { pt3dadd( -3.12735, -56.8377, 20.1962, 0.96 ) }
    dend_60 { pt3dadd( -3.66141, -58.5941, 20.5638, 0.96 ) }
    dend_60 { pt3dadd( -3.99757, -59.7314, 20.7692, 0.96 ) }
    dend_60 { pt3dadd( -4.25624, -60.594, 20.9193, 0.96 ) }
    dend_60 { pt3dadd( -4.54953, -61.5744, 21.0775, 0.96 ) }
    dend_60 { pt3dadd( -5.02987, -63.3502, 21.3433, 0.6 ) }
    dend_60 { pt3dadd( -5.2065, -63.8947, 21.4089, 0.6 ) }
    dend_60 { pt3dadd( -5.53194, -64.8637, 21.5482, 1.08 ) }
    dend_60 { pt3dadd( -6.23387, -66.8844, 21.9119, 0.72 ) }
    dend_60 { pt3dadd( -6.77497, -68.3998, 22.2163, 0.72 ) }
    dend_60 { pt3dadd( -7.64101, -70.7357, 22.7031, 0.72 ) }
    dend_60 { pt3dadd( -8.53735, -72.9633, 23.1735, 1.2 ) }
    dend_60 { pt3dadd( -9.0802, -74.1687, 23.4279, 1.08 ) }
    dend_60 { pt3dadd( -9.82251, -75.5962, 23.7274, 0.48 ) }
    dend_60 { pt3dadd( -10.774, -77.2502, 24.0485, 0.48 ) }
    dend_60 { pt3dadd( -11.8973, -79.0675, 24.3723, 1.44 ) }
    dend_60 { pt3dadd( -12.7776, -80.439, 24.5751, 0.84 ) }
    dend_60 { pt3dadd( -13.2344, -81.2202, 24.6612, 1.08 ) }
    dend_60 { pt3dadd( -13.9234, -82.4862, 24.7634, 1.08 ) }
    dend_60 { pt3dadd( -14.7921, -84.2577, 24.8745, 1.44 ) }
    dend_60 { pt3dadd( -15.3811, -85.5812, 24.9642, 0.84 ) }
    dend_60 { pt3dadd( -15.7604, -86.5601, 25.0625, 1.32 ) }
    dend_60 { pt3dadd( -16.2933, -88.2136, 25.2661, 0.72 ) }
    dend_60 { pt3dadd( -16.5458, -89.0364, 25.3828, 0.72 ) }
    dend_60 { pt3dadd( -16.7877, -89.7697, 25.5141, 0.72 ) }
    dend_60 { pt3dadd( -17.2835, -90.8238, 25.7626, 0.72 ) }
    dend_60 { pt3dadd( -18.13, -91.9354, 26.1079, 1.08 ) }
    dend_60 { pt3dadd( -18.9718, -92.8303, 26.4312, 0.6 ) }
    dend_60 { pt3dadd( -20.0838, -93.734, 26.8192, 1.08 ) }
    dend_60 { pt3dadd( -20.9498, -94.2994, 27.1025, 0.96 ) }
    dend_60 { pt3dadd( -22.4453, -95.0441, 27.542, 0.84 ) }
    dend_60 { pt3dadd( -24.0296, -95.558, 27.9263, 0.84 ) }
    dend_60 { pt3dadd( -27.0103, -103.011, 28.6181, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -2.36056, -53.9765, 19.5102, 0.84 ) }
    dend_59 { pt3dadd( -3.22439, -55.6125, 20.0454, 0.84 ) }
    dend_59 { pt3dadd( -3.83047, -56.7821, 20.4056, 0.84 ) }
    dend_59 { pt3dadd( -4.0939, -57.3379, 20.5635, 0.84 ) }
    dend_59 { pt3dadd( -4.98131, -59.4352, 21.1494, 0.48 ) }
    dend_59 { pt3dadd( -5.42643, -60.593, 21.4598, 0.48 ) }
    dend_59 { pt3dadd( -6.11959, -62.5932, 21.9514, 0.84 ) }
    dend_59 { pt3dadd( -6.48273, -63.8539, 22.2102, 0.84 ) }
    dend_59 { pt3dadd( -6.7906, -65.0535, 22.4019, 0.84 ) }
    dend_59 { pt3dadd( -7.37618, -67.7331, 22.75, 0.84 ) }
    dend_59 { pt3dadd( -7.54922, -68.7447, 22.8525, 0.84 ) }
    dend_59 { pt3dadd( -7.78271, -70.5559, 23.0239, 0.6 ) }
    dend_59 { pt3dadd( -7.91892, -71.7122, 23.1074, 1.08 ) }
    dend_59 { pt3dadd( -8.14904, -73.2485, 23.1771, 1.08 ) }
    dend_59 { pt3dadd( -8.36076, -74.3679, 23.2073, 1.56 ) }
    dend_59 { pt3dadd( -8.66711, -75.7091, 23.1978, 1.56 ) }
    dend_59 { pt3dadd( -8.93399, -76.7653, 23.1897, 1.08 ) }
    dend_59 { pt3dadd( -9.4604, -78.6566, 23.1832, 0.72 ) }
    dend_59 { pt3dadd( -9.82391, -79.8657, 23.1827, 1.32 ) }
    dend_59 { pt3dadd( -10.1613, -80.8901, 23.1816, 1.32 ) }
    dend_59 { pt3dadd( -10.6912, -82.3203, 23.1625, 0.72 ) }
    dend_59 { pt3dadd( -11.2778, -83.8022, 23.1166, 0.72 ) }
    dend_59 { pt3dadd( -15.0221, -92.5571, 23.6686, 0.72 ) }
    dend_59 { pt3dadd( -17.8911, -101.578, 24.9811, 0.72 ) }
    dend_59 { pt3dadd( -21.5652, -110.208, 26.7018, 0.72 ) }
    dend_59 { pt3dadd( -25.2301, -118.849, 28.3889, 0.72 ) }
    dend_59 { pt3dadd( -28.2896, -127.452, 31.157, 0.72 ) }
    dend_59 { pt3dadd( -30.4614, -135.728, 35.368, 0.72 ) }
    dend_59 { pt3dadd( -31.7094, -144.675, 38.5225, 0.72 ) }
    dend_59 { pt3dadd( -31.3867, -154.073, 40.4255, 0.72 ) }
    dend_59 { pt3dadd( -31.1374, -163.297, 43.0318, 0.72 ) }
    dend_59 { pt3dadd( -31.4287, -172.722, 44.7894, 0.72 ) }
    dend_59 { pt3dadd( -32.4723, -182.244, 44.4613, 0.72 ) }
    dend_59 { pt3dadd( -33.6118, -191.733, 43.773, 0.72 ) }
    dend_59 { pt3dadd( -33.8484, -201.305, 44.4052, 0.72 ) }
    dend_59 { pt3dadd( -33.9112, -210.722, 46.2336, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 2.09533, -60.8858, 11.066, 1.08 ) }
    dend_57 { pt3dadd( 2.91272, -61.9107, 6.7194, 1.08 ) }
    dend_57 { pt3dadd( 3.56207, -62.8461, 3.78655, 1.08 ) }
    dend_57 { pt3dadd( 3.74444, -63.187, 2.96934, 1.08 ) }
    dend_57 { pt3dadd( 3.86027, -63.5553, 2.23591, 1.08 ) }
    dend_57 { pt3dadd( 3.91879, -63.8031, 1.80665, 1.08 ) }
    dend_57 { pt3dadd( 4.10325, -64.9085, 0.074674, 1.44 ) }
    dend_57 { pt3dadd( 4.13997, -65.8277, -1.09448, 1.44 ) }
    dend_57 { pt3dadd( 4.06102, -66.8954, -2.2904, 1.44 ) }
    dend_57 { pt3dadd( 3.83544, -68.6099, -4.08569, 1.44 ) }
    dend_57 { pt3dadd( 3.72036, -69.2743, -4.71586, 1.44 ) }
    dend_57 { pt3dadd( 3.37352, -71.0369, -6.17999, 1.2 ) }
    dend_57 { pt3dadd( 2.73185, -73.8704, -8.21347, 1.2 ) }
    dend_57 { pt3dadd( 2.28737, -75.8036, -9.51464, 1.68 ) }
    dend_57 { pt3dadd( 1.78103, -77.8903, -10.9175, 0.72 ) }
    dend_57 { pt3dadd( 1.37435, -79.4585, -11.9317, 0.72 ) }
    dend_57 { pt3dadd( 0.829499, -81.1771, -13.1383, 1.44 ) }
    dend_57 { pt3dadd( 0.354082, -82.3976, -14.074, 1.44 ) }
    dend_57 { pt3dadd( -0.742995, -84.6095, -16.2371, 0.96 ) }
    dend_57 { pt3dadd( -1.98634, -86.5541, -18.9604, 1.68 ) }
    dend_57 { pt3dadd( -2.46682, -87.1636, -20.0744, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( -3.57851, -88.4004, -22.8643, 1.68 ) }
    dend_57 { pt3dadd( -4.43649, -89.2869, -25.1321, 1.68 ) }
    dend_57 { pt3dadd( -5.7731, -90.6595, -28.7556, 1.68 ) }
    dend_57 { pt3dadd( -7.23307, -92.1934, -32.6589, 1.68 ) }
    dend_57 { pt3dadd( -8.31609, -93.3663, -35.4993, 1.2 ) }
    dend_57 { pt3dadd( -9.41319, -94.657, -38.3364, 0.84 ) }
    dend_57 { pt3dadd( -9.87111, -95.2888, -39.4936, 1.44 ) }
    dend_57 { pt3dadd( -10.2843, -95.9532, -40.4962, 0.72 ) }
    dend_57 { pt3dadd( -11.2207, -97.6171, -42.5858, 1.32 ) }
    dend_57 { pt3dadd( -12.6523, -100.407, -45.5986, 0.6 ) }
    dend_57 { pt3dadd( -12.9862, -101.107, -46.3018, 0.6 ) }
    dend_57 { pt3dadd( -13.4449, -102.061, -47.2117, 0.96 ) }
    dend_57 { pt3dadd( -13.8408, -102.862, -48.0096, 0.96 ) }
    dend_57 { pt3dadd( -15.4017, -106.012, -51.39, 0.6 ) }
    dend_57 { pt3dadd( -15.8893, -107.171, -52.6252, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 2.09533, -60.8858, 11.066, 1.32 ) }
    dend_44 { pt3dadd( 2.0939, -61.0569, 11.0411, 1.32 ) }
    dend_44 { pt3dadd( 2.17579, -65.5532, 10.3944, 1.32 ) }
    dend_44 { pt3dadd( 2.37508, -70.7858, 9.67061, 1.68 ) }
    dend_44 { pt3dadd( 2.52762, -74.1183, 9.24816, 2.04 ) }
    dend_44 { pt3dadd( 2.66164, -77.0716, 8.90571, 1.68 ) }
    dend_44 { pt3dadd( 2.77128, -79.5094, 8.64847, 1.68 ) }
    dend_44 { pt3dadd( 2.84801, -80.9837, 8.52008, 1.68 ) }
    dend_44 { pt3dadd( 2.96683, -82.9543, 8.39305, 1.68 ) }
    dend_44 { pt3dadd( 3.11563, -85.9466, 8.26893, 2.04 ) }
    dend_44 { pt3dadd( 3.17178, -87.6656, 8.26258, 1.68 ) }
    dend_44 { pt3dadd( 3.19061, -89.8994, 8.31239, 1.68 ) }
    dend_44 { pt3dadd( 3.19863, -92.3014, 8.42683, 1.68 ) }
    dend_44 { pt3dadd( 3.2346, -95.026, 8.59067, 1.56 ) }
    dend_44 { pt3dadd( 3.30325, -97.5497, 8.7541, 1.56 ) }
    dend_44 { pt3dadd( 3.51844, -102.622, 9.08578, 1.56 ) }
    dend_44 { pt3dadd( 3.74497, -106.754, 9.35349, 1.8 ) }
    dend_44 { pt3dadd( 4.17567, -113.361, 9.76981, 1.56 ) }
    dend_44 { pt3dadd( 4.63025, -119.975, 10.1567, 1.44 ) }
    dend_44 { pt3dadd( 4.81869, -122.788, 10.3086, 1.92 ) }
    dend_44 { pt3dadd( 5.02464, -126.197, 10.4685, 1.8 ) }
    dend_44 { pt3dadd( 5.13681, -128.822, 10.5717, 1.68 ) }
    dend_44 { pt3dadd( 5.18626, -132.096, 10.6966, 2.04 ) }
    dend_44 { pt3dadd( 4.89865, -145.474, 10.9682, 1.8 ) }
    dend_44 { pt3dadd( 4.67331, -149.548, 10.9965, 1.8 ) }
    dend_44 { pt3dadd( 4.50618, -151.756, 10.9905, 1.68 ) }
    dend_44 { pt3dadd( 4.30623, -153.84, 10.966, 1.68 ) }
    dend_44 { pt3dadd( 3.64872, -159.601, 10.8436, 1.68 ) }
    dend_44 { pt3dadd( 3.21124, -162.737, 10.6658, 1.68 ) }
    dend_44 { pt3dadd( 2.79547, -165.364, 10.4123, 1.68 ) }
    dend_44 { pt3dadd( 2.26691, -168.826, 10.0477, 1.32 ) }
    dend_44 { pt3dadd( 1.67911, -172.98, 9.60566, 1.32 ) }
    dend_44 { pt3dadd( 1.11434, -177.315, 9.15177, 1.32 ) }
    dend_44 { pt3dadd( 0.322085, -184.233, 8.44981, 1.32 ) }
    dend_44 { pt3dadd( -0.152334, -188.918, 8.03003, 1.8 ) }
    dend_44 { pt3dadd( -0.457191, -192.042, 7.79284, 1.8 ) }
    dend_44 { pt3dadd( -0.68966, -194.553, 7.64515, 1.8 ) }
    dend_44 { pt3dadd( -0.87082, -196.761, 7.56954, 1.8 ) }
    dend_44 { pt3dadd( -1.16448, -200.862, 7.58583, 1.68 ) }
    dend_44 { pt3dadd( -1.53144, -206.754, 7.71236, 2.04 ) }
    dend_44 { pt3dadd( -1.77914, -211.403, 7.72657, 2.04 ) }
    dend_44 { pt3dadd( -1.96411, -215.22, 7.70823, 1.8 ) }
    dend_44 { pt3dadd( -2.16048, -220.071, 7.65606, 1.56 ) }
    dend_44 { pt3dadd( -2.3197, -224.998, 7.58219, 1.92 ) }
    dend_44 { pt3dadd( -2.56222, -231.249, 7.47941, 1.56 ) }
    dend_44 { pt3dadd( -2.79419, -236.112, 7.37386, 1.32 ) }
    dend_44 { pt3dadd( -3.10636, -241.6, 7.19034, 1.32 ) }
    dend_44 { pt3dadd( -3.27593, -244.206, 7.11329, 1.32 ) }
    dend_44 { pt3dadd( -3.42335, -246.482, 7.05911, 1.2 ) }
    dend_44 { pt3dadd( -3.80331, -251.748, 7.00786, 1.68 ) }
    dend_44 { pt3dadd( -4.14549, -256.608, 7.19014, 1.68 ) }
    dend_44 { pt3dadd( -4.41645, -259.728, 7.35587, 1.68 ) }
    dend_44 { pt3dadd( -4.66369, -262.384, 7.49026, 1.68 ) }
    dend_44 { pt3dadd( -4.96815, -265.339, 7.65757, 1.68 ) }
    dend_44 { pt3dadd( -5.07575, -266.595, 7.73343, 1.68 ) }
    dend_44 { pt3dadd( -5.23563, -274.671, 8.24116, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 65.5678, -124.083, 9.70573, 0.84 ) }
    dend_39 { pt3dadd( 67.4699, -123.711, 9.89615, 0.84 ) }
    dend_39 { pt3dadd( 68.9729, -123.387, 10.0924, 0.84 ) }
    dend_39 { pt3dadd( 70.152, -123.128, 10.281, 1.32 ) }
    dend_39 { pt3dadd( 72.1023, -122.708, 10.6664, 1.32 ) }
    dend_39 { pt3dadd( 73.6469, -122.378, 11.0242, 1.68 ) }
    dend_39 { pt3dadd( 75.5786, -121.92, 11.5076, 1.2 ) }
    dend_39 { pt3dadd( 76.6013, -121.67, 11.8284, 0.96 ) }
    dend_39 { pt3dadd( 77.9391, -121.271, 12.3257, 1.44 ) }
    dend_39 { pt3dadd( 79.5469, -120.677, 12.9947, 0.84 ) }
    dend_39 { pt3dadd( 80.3097, -120.31, 13.3667, 0.84 ) }
    dend_39 { pt3dadd( 81.0639, -119.846, 13.8222, 0.84 ) }
    dend_39 { pt3dadd( 81.57, -119.412, 14.2389, 0.84 ) }
    dend_39 { pt3dadd( 82.1403, -118.804, 14.7813, 0.84 ) }
    dend_39 { pt3dadd( 82.6184, -118.118, 15.3418, 0.84 ) }
    dend_39 { pt3dadd( 83.102, -117.18, 16.0523, 1.08 ) }
    dend_39 { pt3dadd( 83.6201, -116.064, 16.901, 0.72 ) }
    dend_39 { pt3dadd( 84.2841, -114.672, 18.0814, 1.2 ) }
    dend_39 { pt3dadd( 91.0114, -111.857, 19.1195, 1.2 ) }
    dend_39 { pt3dadd( 97.4382, -108.232, 19.3822, 1.2 ) }
    dend_39 { pt3dadd( 103.487, -104.009, 18.8062, 1.2 ) }
    dend_39 { pt3dadd( 108.65, -98.6956, 19.3579, 1.2 ) }
    dend_39 { pt3dadd( 114.601, -94.3274, 19.886, 1.2 ) }
    dend_39 { pt3dadd( 120.052, -89.3231, 20.4158, 1.2 ) }
    dend_39 { pt3dadd( 125.597, -84.4871, 19.4567, 1.2 ) }
    dend_39 { pt3dadd( 131.028, -79.4491, 18.9547, 1.2 ) }
    dend_39 { pt3dadd( 135.839, -73.7675, 18.8978, 1.2 ) }
    dend_39 { pt3dadd( 140.015, -67.6627, 17.888, 1.2 ) }
    dend_39 { pt3dadd( 143.715, -61.1662, 17.815, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 146.309, -54.1424, 17.3353, 1.2 ) }
    dend_39 { pt3dadd( 148.921, -47.1214, 16.934, 1.2 ) }
    dend_39 { pt3dadd( 151.508, -40.1161, 16.2, 1.2 ) }
    dend_39 { pt3dadd( 155.303, -33.6775, 16.1726, 1.2 ) }
    dend_39 { pt3dadd( 158.926, -27.1417, 15.855, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 65.5678, -124.083, 9.70573, 0.84 ) }
    dend_38 { pt3dadd( 66.8641, -126.531, 10.1559, 0.84 ) }
    dend_38 { pt3dadd( 68.2691, -129.081, 10.6055, 0.6 ) }
    dend_38 { pt3dadd( 69.1819, -130.759, 10.8772, 1.32 ) }
    dend_38 { pt3dadd( 70.6174, -133.397, 11.3043, 0.84 ) }
    dend_38 { pt3dadd( 71.5458, -135.103, 11.5805, 0.72 ) }
    dend_38 { pt3dadd( 72.2851, -136.462, 11.8005, 1.08 ) }
    dend_38 { pt3dadd( 73.2104, -138.241, 12.0626, 0.72 ) }
    dend_38 { pt3dadd( 74.0736, -139.936, 12.3875, 1.2 ) }
    dend_38 { pt3dadd( 80.0984, -148.898, 13.3857, 1.2 ) }
    dend_38 { pt3dadd( 86.5113, -157.241, 15.9111, 1.2 ) }
    dend_38 { pt3dadd( 92.746, -164.875, 20.3199, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 22.1185, -232.203, -1.74393, 0.96 ) }
    dend_36 { pt3dadd( 24.5705, -234.675, -0.653844, 0.96 ) }
    dend_36 { pt3dadd( 26.002, -236.309, 0.108075, 0.96 ) }
    dend_36 { pt3dadd( 28.6217, -239.459, 1.63422, 1.44 ) }
    dend_36 { pt3dadd( 30.5802, -241.735, 2.8251, 0.96 ) }
    dend_36 { pt3dadd( 32.1135, -243.526, 3.766, 0.96 ) }
    dend_36 { pt3dadd( 33.3682, -245.034, 4.54187, 0.96 ) }
    dend_36 { pt3dadd( 34.4482, -246.416, 5.24232, 0.96 ) }
    dend_36 { pt3dadd( 35.7374, -248.176, 6.20163, 1.08 ) }
    dend_36 { pt3dadd( 37.339, -250.603, 7.48829, 1.08 ) }
    dend_36 { pt3dadd( 38.1221, -251.818, 8.10222, 1.08 ) }
    dend_36 { pt3dadd( 38.829, -252.866, 8.58718, 1.08 ) }
    dend_36 { pt3dadd( 40.5349, -255.404, 9.85781, 1.08 ) }
    dend_36 { pt3dadd( 42.065, -257.948, 11.2055, 0.84 ) }
    dend_36 { pt3dadd( 43.0493, -260.065, 12.3886, 1.2 ) }
    dend_36 { pt3dadd( 43.5686, -261.742, 13.34, 1.2 ) }
    dend_36 { pt3dadd( 43.8981, -263.127, 14.1543, 1.2 ) }
    dend_36 { pt3dadd( 44.5731, -266.513, 16.2232, 0.96 ) }
    dend_36 { pt3dadd( 44.8549, -268.294, 17.3275, 0.96 ) }
    dend_36 { pt3dadd( 45.1782, -269.942, 18.3193, 0.96 ) }
    dend_36 { pt3dadd( 45.6178, -272.054, 19.5271, 0.72 ) }
    dend_36 { pt3dadd( 45.8626, -273.376, 20.2323, 0.72 ) }
    dend_36 { pt3dadd( 46.2903, -275.284, 21.1778, 0.72 ) }
    dend_36 { pt3dadd( 47.0936, -277.687, 22.14, 1.2 ) }
    dend_36 { pt3dadd( 48.6778, -281.227, 23.5972, 0.84 ) }
    dend_36 { pt3dadd( 49.4718, -282.694, 24.2227, 0.84 ) }
    dend_36 { pt3dadd( 50.3591, -284.237, 24.9447, 0.84 ) }
    dend_36 { pt3dadd( 55.3484, -293.204, 29.6139, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 22.1185, -232.203, -1.74393, 1.32 ) }
    dend_21 { pt3dadd( 22.6755, -235.351, -1.70252, 1.32 ) }
    dend_21 { pt3dadd( 22.9626, -237.303, -1.68966, 1.32 ) }
    dend_21 { pt3dadd( 23.1943, -239.204, -1.67951, 1.32 ) }
    dend_21 { pt3dadd( 23.3232, -240.622, -1.66825, 1.32 ) }
    dend_21 { pt3dadd( 23.6053, -243.641, -1.65869, 1.68 ) }
    dend_21 { pt3dadd( 23.8821, -246.16, -1.66879, 1.68 ) }
    dend_21 { pt3dadd( 24.0748, -248.006, -1.75105, 1.68 ) }
    dend_21 { pt3dadd( 24.2613, -249.745, -1.84997, 1.68 ) }
    dend_21 { pt3dadd( 24.5733, -252.675, -2.04076, 1.2 ) }
    dend_21 { pt3dadd( 24.7787, -254.604, -2.18346, 1.2 ) }
    dend_21 { pt3dadd( 25.1264, -257.516, -2.42995, 1.2 ) }
    dend_21 { pt3dadd( 25.5723, -260.828, -2.77872, 1.56 ) }
    dend_21 { pt3dadd( 25.8171, -262.492, -2.97771, 1.56 ) }
    dend_21 { pt3dadd( 26.0386, -263.926, -3.16213, 1.56 ) }
    dend_21 { pt3dadd( 26.2914, -265.435, -3.3686, 1.56 ) }
    dend_21 { pt3dadd( 26.7221, -268.052, -3.60619, 1.44 ) }
    dend_21 { pt3dadd( 27.157, -270.704, -3.81006, 1.44 ) }
    dend_21 { pt3dadd( 27.3844, -271.906, -3.87182, 1.44 ) }
    dend_21 { pt3dadd( 27.676, -273.365, -3.93764, 1.44 ) }
    dend_21 { pt3dadd( 28.0424, -275.04, -3.99102, 1.44 ) }
    dend_21 { pt3dadd( 28.7286, -277.754, -4.00215, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.3016, 76.3677, 29.2922, 1.44 ) }
    dend_17 { pt3dadd( 1.17941, 74.9939, 29.3861, 1.44 ) }
    dend_17 { pt3dadd( 0.738863, 74.5227, 29.4479, 1.2 ) }
    dend_17 { pt3dadd( -0.20982, 73.6976, 29.5805, 0.96 ) }
    dend_17 { pt3dadd( -1.06349, 72.9551, 29.6999, 0.96 ) }
    dend_17 { pt3dadd( -1.65174, 72.4434, 29.7821, 0.96 ) }
    dend_17 { pt3dadd( -2.2778, 71.8989, 29.8697, 0.96 ) }
    dend_17 { pt3dadd( -2.90819, 71.2874, 29.8806, 0.96 ) }
    dend_17 { pt3dadd( -4.10577, 70.2437, 29.9432, 1.2 ) }
    dend_17 { pt3dadd( -10.306, 64.5114, 29.2936, 1.2 ) }
    dend_17 { pt3dadd( -15.8804, 58.105, 29.3396, 1.2 ) }
    dend_17 { pt3dadd( -21.4641, 51.7669, 28.4861, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 2.3016, 76.3677, 29.2922, 0.96 ) }
    dend_12 { pt3dadd( 3.33498, 74.5995, 29.5823, 0.96 ) }
    dend_12 { pt3dadd( 4.52395, 72.565, 29.9162, 0.96 ) }
    dend_12 { pt3dadd( 5.40828, 71.0519, 30.1645, 1.2 ) }
    dend_12 { pt3dadd( 5.89787, 70.2141, 30.302, 1.2 ) }
    dend_12 { pt3dadd( 7.5137, 67.4493, 30.7557, 0.84 ) }
    dend_12 { pt3dadd( 8.23802, 66.2099, 30.9591, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.2954, 50.4323, 12.629, 1.44 ) }
    dend_8 { pt3dadd( 5.59607, 54.0044, 13.2481, 1.44 ) }
    dend_8 { pt3dadd( 6.58504, 56.8099, 13.701, 1.44 ) }
    dend_8 { pt3dadd( 7.08526, 58.2797, 13.9358, 1.44 ) }
    dend_8 { pt3dadd( 8.20203, 61.6963, 14.537, 1.44 ) }
    dend_8 { pt3dadd( 9.54728, 65.7403, 15.3356, 1.32 ) }
    dend_8 { pt3dadd( 10.3999, 68.0587, 15.7253, 1.32 ) }
    dend_8 { pt3dadd( 11.4955, 70.6066, 16.065, 1.32 ) }
    dend_8 { pt3dadd( 12.4934, 72.6635, 16.3012, 1.56 ) }
    dend_8 { pt3dadd( 13.5643, 74.6181, 16.4732, 1.56 ) }
    dend_8 { pt3dadd( 15.1264, 77.1344, 16.628, 1.32 ) }
    dend_8 { pt3dadd( 18.0418, 81.2976, 16.8421, 1.32 ) }
    dend_8 { pt3dadd( 19.9118, 83.6955, 16.9491, 1.32 ) }
    dend_8 { pt3dadd( 21.5458, 85.6252, 16.9159, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 23.3783, 87.6873, 16.7647, 1.56 ) }
    dend_8 { pt3dadd( 24.4122, 88.8733, 16.6056, 1.56 ) }
    dend_8 { pt3dadd( 26.9212, 91.828, 16.0963, 1.2 ) }
    dend_8 { pt3dadd( 28.2536, 93.4333, 15.8282, 1.2 ) }
    dend_8 { pt3dadd( 30.8563, 96.6345, 15.2313, 1.44 ) }
    dend_8 { pt3dadd( 32.2309, 98.3875, 14.8418, 1.92 ) }
    dend_8 { pt3dadd( 34.8717, 102.035, 14.1637, 1.56 ) }
    dend_8 { pt3dadd( 36.5085, 104.46, 13.7962, 1.32 ) }
    dend_8 { pt3dadd( 38.8654, 108.268, 13.3317, 1.32 ) }
    dend_8 { pt3dadd( 40.7254, 111.494, 13.1332, 1.32 ) }
    dend_8 { pt3dadd( 42.5413, 114.868, 13.167, 1.56 ) }
    dend_8 { pt3dadd( 44.8982, 119.785, 13.4428, 1.2 ) }
    dend_8 { pt3dadd( 45.6084, 121.53, 13.6405, 1.2 ) }
    dend_8 { pt3dadd( 45.9836, 122.774, 13.8279, 1.2 ) }
    dend_8 { pt3dadd( 46.3111, 124.453, 14.1568, 0.96 ) }
    dend_8 { pt3dadd( 46.4472, 125.538, 14.4095, 1.32 ) }
    dend_8 { pt3dadd( 46.6759, 128.725, 15.2065, 0.96 ) }
    dend_8 { pt3dadd( 46.7322, 130.291, 15.4978, 0.96 ) }
    dend_8 { pt3dadd( 46.7859, 131.882, 15.7538, 0.96 ) }
    dend_8 { pt3dadd( 46.9923, 134.893, 16.2506, 1.32 ) }
    dend_8 { pt3dadd( 47.1591, 136.363, 16.5002, 1.32 ) }
    dend_8 { pt3dadd( 47.5598, 138.581, 16.9477, 0.84 ) }
    dend_8 { pt3dadd( 48.1653, 140.861, 17.5135, 1.08 ) }
    dend_8 { pt3dadd( 48.9037, 143.078, 18.2141, 1.08 ) }
    dend_8 { pt3dadd( 50.1088, 146.217, 19.3579, 0.84 ) }
    dend_8 { pt3dadd( 50.732, 147.741, 19.8587, 1.2 ) }
    dend_8 { pt3dadd( 51.4757, 149.427, 20.4644, 0.84 ) }
    dend_8 { pt3dadd( 52.3458, 151.224, 21.1786, 1.2 ) }
    dend_8 { pt3dadd( 53.7144, 153.929, 22.3416, 0.96 ) }
    dend_8 { pt3dadd( 54.1671, 154.865, 22.7458, 0.96 ) }
    dend_8 { pt3dadd( 55.9014, 159.281, 24.2628, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 4.2954, 50.4323, 12.629, 1.08 ) }
    dend_3 { pt3dadd( 5.83418, 52.6589, 12.6803, 1.08 ) }
    dend_3 { pt3dadd( 7.66914, 55.4286, 12.7298, 1.08 ) }
    dend_3 { pt3dadd( 8.22317, 56.2818, 12.7424, 1.08 ) }
    dend_3 { pt3dadd( 8.75324, 57.1151, 12.7107, 1.08 ) }
    dend_3 { pt3dadd( 9.69418, 58.5945, 12.6544, 1.32 ) }
    dend_3 { pt3dadd( 11.092, 60.7923, 12.5708, 0.96 ) }
    dend_3 { pt3dadd( 11.9735, 62.1656, 12.4782, 1.44 ) }
    dend_3 { pt3dadd( 12.5707, 63.1169, 12.392, 1.44 ) }
    dend_3 { pt3dadd( 13.7578, 65.0851, 12.1816, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.23563, -274.671, 8.24116, 1.08 ) }
    dend_52 { pt3dadd( -5.57241, -277.253, 9.15312, 1.08 ) }
    dend_52 { pt3dadd( -5.8052, -278.95, 9.76391, 1.08 ) }
    dend_52 { pt3dadd( -6.20567, -281.367, 10.6318, 1.08 ) }
    dend_52 { pt3dadd( -6.46652, -282.849, 11.1637, 1.08 ) }
    dend_52 { pt3dadd( -6.80319, -284.572, 11.7909, 1.08 ) }
    dend_52 { pt3dadd( -7.05432, -285.75, 12.246, 1.08 ) }
    dend_52 { pt3dadd( -7.24031, -286.493, 12.5349, 1.08 ) }
    dend_52 { pt3dadd( -7.594, -287.584, 12.9715, 1.08 ) }
    dend_52 { pt3dadd( -8.33618, -289.467, 13.6761, 0.84 ) }
    dend_52 { pt3dadd( -8.76254, -290.427, 14.0311, 0.84 ) }
    dend_52 { pt3dadd( -9.43197, -291.786, 14.4951, 1.32 ) }
    dend_52 { pt3dadd( -10.4135, -293.627, 15.0709, 1.32 ) }
    dend_52 { pt3dadd( -11.8286, -296.23, 15.8238, 0.96 ) }
    dend_52 { pt3dadd( -12.7821, -298.011, 16.2778, 0.96 ) }
    dend_52 { pt3dadd( -13.4404, -299.318, 16.5904, 1.2 ) }
    dend_52 { pt3dadd( -14.6039, -301.901, 17.1708, 1.2 ) }
    dend_52 { pt3dadd( -15.302, -303.673, 17.5584, 1.44 ) }
    dend_52 { pt3dadd( -16.0168, -305.787, 18.0411, 1.2 ) }
    dend_52 { pt3dadd( -16.6289, -308.02, 18.5433, 1.2 ) }
    dend_52 { pt3dadd( -17.3509, -310.989, 19.2176, 1.2 ) }
    dend_52 { pt3dadd( -17.5821, -312.065, 19.4592, 1.2 ) }
    dend_52 { pt3dadd( -17.8166, -313.825, 19.883, 1.2 ) }
    dend_52 { pt3dadd( -17.8753, -314.814, 20.1379, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -5.23563, -274.671, 8.24116, 0.96 ) }
    dend_45 { pt3dadd( -4.46449, -279.13, 7.03922, 0.96 ) }
    dend_45 { pt3dadd( -4.00646, -281.973, 6.28946, 1.32 ) }
    dend_45 { pt3dadd( -3.92374, -283.11, 6.09227, 1.32 ) }
    dend_45 { pt3dadd( -3.82114, -284.522, 5.84769, 1.32 ) }
    dend_45 { pt3dadd( -3.59059, -287.693, 5.29813, 1.56 ) }
    dend_45 { pt3dadd( -3.41958, -290.045, 4.89048, 1.56 ) }
    dend_45 { pt3dadd( -3.33422, -291.782, 4.62186, 1.56 ) }
    dend_45 { pt3dadd( -3.27978, -296.567, 4.35506, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 28.7286, -277.754, -4.00215, 0.96 ) }
    dend_35 { pt3dadd( 28.7419, -279.239, -3.39164, 0.96 ) }
    dend_35 { pt3dadd( 28.7105, -280.576, -2.87428, 0.96 ) }
    dend_35 { pt3dadd( 28.6354, -281.911, -2.34694, 1.44 ) }
    dend_35 { pt3dadd( 28.4508, -284.866, -1.13824, 1.08 ) }
    dend_35 { pt3dadd( 28.3709, -286.243, -0.589808, 1.08 ) }
    dend_35 { pt3dadd( 28.2947, -288.347, 0.201349, 1.08 ) }
    dend_35 { pt3dadd( 28.3091, -289.335, 0.559261, 1.08 ) }
    dend_35 { pt3dadd( 28.435, -291.889, 1.42274, 0.84 ) }
    dend_35 { pt3dadd( 28.597, -293.994, 2.0454, 0.84 ) }
    dend_35 { pt3dadd( 28.7238, -295.329, 2.34582, 0.84 ) }
    dend_35 { pt3dadd( 28.9236, -296.834, 2.64895, 0.84 ) }
    dend_35 { pt3dadd( 29.1471, -298.242, 2.89805, 0.84 ) }
    dend_35 { pt3dadd( 29.3146, -299.399, 3.06622, 0.84 ) }
    dend_35 { pt3dadd( 29.3941, -300.22, 3.13777, 0.84 ) }
    dend_35 { pt3dadd( 29.4414, -301.164, 3.19783, 0.84 ) }
    dend_35 { pt3dadd( 29.4015, -302.42, 3.3099, 0.84 ) }
    dend_35 { pt3dadd( 29.2262, -303.515, 3.43968, 0.84 ) }
    dend_35 { pt3dadd( 28.9637, -304.442, 3.56388, 0.84 ) }
    dend_35 { pt3dadd( 28.3702, -306.056, 3.83503, 0.6 ) }
    dend_35 { pt3dadd( 26.5402, -314.374, 5.12288, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 28.7286, -277.754, -4.00215, 0.84 ) }
    dend_22 { pt3dadd( 28.8508, -280.174, -4.10638, 0.84 ) }
    dend_22 { pt3dadd( 28.9046, -281.913, -4.20474, 0.84 ) }
    dend_22 { pt3dadd( 28.9183, -283.766, -4.35098, 0.84 ) }
    dend_22 { pt3dadd( 28.8395, -287.597, -4.68305, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 28.7964, -288.491, -4.76161, 1.2 ) }
    dend_22 { pt3dadd( 28.5279, -292.47, -5.11679, 0.96 ) }
    dend_22 { pt3dadd( 28.2106, -295.816, -5.45356, 1.32 ) }
    dend_22 { pt3dadd( 27.8217, -300.063, -5.90296, 1.08 ) }
    dend_22 { pt3dadd( 27.645, -302.456, -6.1963, 1.08 ) }
    dend_22 { pt3dadd( 27.5476, -304.22, -6.42781, 1.08 ) }
    dend_22 { pt3dadd( 27.5449, -305.535, -6.62078, 1.08 ) }
    dend_22 { pt3dadd( 27.5866, -306.434, -6.75537, 1.08 ) }
    dend_22 { pt3dadd( 27.8652, -309.958, -7.28244, 0.84 ) }
    dend_22 { pt3dadd( 28.4083, -314.515, -7.97035, 1.2 ) }
    dend_22 { pt3dadd( 28.6053, -315.8, -8.17201, 1.2 ) }
    dend_22 { pt3dadd( 29.7776, -322.454, -9.24141, 0.84 ) }
    dend_22 { pt3dadd( 30.4586, -326.203, -9.83878, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.23802, 66.2099, 30.9591, 0.72 ) }
    dend_14 { pt3dadd( 7.93434, 65.5634, 30.8128, 0.72 ) }
    dend_14 { pt3dadd( 7.67241, 65.0058, 30.6867, 0.48 ) }
    dend_14 { pt3dadd( 7.35667, 64.3336, 30.5346, 0.96 ) }
    dend_14 { pt3dadd( 7.13282, 63.857, 30.4269, 0.96 ) }
    dend_14 { pt3dadd( 4.84013, 59.4138, 28.8958, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 8.23802, 66.2099, 30.9591, 0.72 ) }
    dend_13 { pt3dadd( 8.61924, 64.8391, 31.081, 0.72 ) }
    dend_13 { pt3dadd( 8.81465, 63.8743, 31.1804, 1.08 ) }
    dend_13 { pt3dadd( 9.10794, 62.2121, 31.2852, 0.72 ) }
    dend_13 { pt3dadd( 9.24239, 61.0116, 31.2816, 0.72 ) }
    dend_13 { pt3dadd( 9.3373, 59.3023, 31.1647, 0.72 ) }
    dend_13 { pt3dadd( 9.42195, 57.9005, 31.0234, 1.2 ) }
    dend_13 { pt3dadd( 9.41558, 57.236, 30.9493, 1.2 ) }
    dend_13 { pt3dadd( 9.32465, 55.7942, 30.765, 0.84 ) }
    dend_13 { pt3dadd( 9.14382, 54.0079, 30.4794, 0.84 ) }
    dend_13 { pt3dadd( 9.01786, 52.5576, 30.0906, 1.32 ) }
    dend_13 { pt3dadd( 8.94728, 51.6209, 29.7092, 1.08 ) }
    dend_13 { pt3dadd( 8.33566, 42.5708, 28.642, 1.08 ) }
    dend_13 { pt3dadd( 7.20041, 33.5451, 27.8386, 1.08 ) }
    dend_13 { pt3dadd( 5.83405, 24.8098, 25.6083, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 55.9014, 159.281, 24.2628, 0.6 ) }
    dend_10 { pt3dadd( 56.3975, 160.062, 24.5565, 0.6 ) }
    dend_10 { pt3dadd( 56.9041, 160.859, 24.8563, 0.6 ) }
    dend_10 { pt3dadd( 57.5616, 161.894, 25.2456, 0.6 ) }
    dend_10 { pt3dadd( 58.6239, 163.566, 25.8744, 0.6 ) }
    dend_10 { pt3dadd( 59.3129, 164.651, 26.2822, 0.6 ) }
    dend_10 { pt3dadd( 60.0138, 165.755, 26.6972, 0.48 ) }
    dend_10 { pt3dadd( 63.2069, 173.317, 27.8117, 0.48 ) }
    dend_10 { pt3dadd( 66.9239, 180.7, 28.2283, 0.48 ) }
    dend_10 { pt3dadd( 70.8799, 187.713, 30.076, 0.48 ) }
    dend_10 { pt3dadd( 76.2152, 193.923, 30.9135, 0.48 ) }
    dend_10 { pt3dadd( 81.3814, 200.338, 31.0371, 0.48 ) }
    dend_10 { pt3dadd( 86.9403, 206.324, 31.9722, 0.48 ) }
    dend_10 { pt3dadd( 91.1551, 213.433, 31.8927, 0.48 ) }
    dend_10 { pt3dadd( 93.826, 221.138, 30.3988, 0.48 ) }
    dend_10 { pt3dadd( 95.5248, 229.252, 29.8303, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 55.9014, 159.281, 24.2628, 0.84 ) }
    dend_9 { pt3dadd( 57.4672, 162.312, 24.1303, 0.84 ) }
    dend_9 { pt3dadd( 58.3508, 164.023, 24.0555, 0.84 ) }
    dend_9 { pt3dadd( 59.2925, 165.847, 23.9759, 0.36 ) }
    dend_9 { pt3dadd( 60.1875, 167.58, 23.9001, 0.6 ) }
    dend_9 { pt3dadd( 60.9108, 168.98, 23.8389, 0.6 ) }
    dend_9 { pt3dadd( 62.1982, 171.473, 23.73, 0.6 ) }
    dend_9 { pt3dadd( 68.2245, 181.653, 21.7238, 0.6 ) }
    dend_9 { pt3dadd( 73.681, 191.934, 18.7912, 0.6 ) }
    dend_9 { pt3dadd( 80.4933, 201.24, 15.6071, 0.6 ) }
    dend_9 { pt3dadd( 86.7025, 210.89, 12.1719, 0.6 ) }
    dend_9 { pt3dadd( 90.8251, 221.076, 7.35235, 0.6 ) }
    dend_9 { pt3dadd( 94.8139, 232.207, 5.08504, 0.6 ) }
    dend_9 { pt3dadd( 99.8223, 243.083, 3.94315, 0.6 ) }
    dend_9 { pt3dadd( 104.465, 254.15, 3.02964, 0.6 ) }
    dend_9 { pt3dadd( 107.294, 265.577, 0.441776, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 13.7578, 65.0851, 12.1816, 1.08 ) }
    dend_5 { pt3dadd( 13.015, 66.9836, 12.5333, 1.08 ) }
    dend_5 { pt3dadd( 12.5364, 67.8899, 12.7846, 1.08 ) }
    dend_5 { pt3dadd( 11.8404, 69.2077, 13.1499, 1.08 ) }
    dend_5 { pt3dadd( 11.0677, 70.6708, 13.5555, 0.96 ) }
    dend_5 { pt3dadd( 9.94776, 72.7912, 14.1432, 0.96 ) }
    dend_5 { pt3dadd( 9.02206, 74.544, 14.6291, 0.84 ) }
    dend_5 { pt3dadd( 7.68058, 76.6388, 15.4155, 1.08 ) }
    dend_5 { pt3dadd( 1.7364, 85.4466, 16.5413, 1.08 ) }
    dend_5 { pt3dadd( -2.99388, 94.9355, 18.0786, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.7578, 65.0851, 12.1816, 0.96 ) }
    dend_4 { pt3dadd( 15.1808, 66.0527, 11.7295, 0.96 ) }
    dend_4 { pt3dadd( 15.826, 66.4777, 11.493, 0.96 ) }
    dend_4 { pt3dadd( 16.8425, 67.1742, 11.091, 0.96 ) }
    dend_4 { pt3dadd( 18.0442, 68.0467, 10.5026, 0.84 ) }
    dend_4 { pt3dadd( 18.6746, 68.5149, 10.1692, 0.84 ) }
    dend_4 { pt3dadd( 19.6801, 69.2606, 9.61094, 0.84 ) }
    dend_4 { pt3dadd( 20.1463, 69.5815, 9.32186, 0.84 ) }
    dend_4 { pt3dadd( 20.9001, 70.0734, 8.83993, 0.84 ) }
    dend_4 { pt3dadd( 22.4533, 70.964, 7.90181, 1.2 ) }
    dend_4 { pt3dadd( 22.7513, 71.1063, 7.75373, 1.2 ) }
    dend_4 { pt3dadd( 23.5628, 71.4173, 7.43416, 1.2 ) }
    dend_4 { pt3dadd( 24.8218, 71.7714, 7.08442, 1.2 ) }
    dend_4 { pt3dadd( 25.2251, 71.8525, 7.00951, 1.2 ) }
    dend_4 { pt3dadd( 26.8097, 72.0944, 6.7925, 1.2 ) }
    dend_4 { pt3dadd( 28.0649, 72.2692, 6.66901, 0.96 ) }
    dend_4 { pt3dadd( 29.3088, 72.4668, 6.54838, 0.96 ) }
    dend_4 { pt3dadd( 30.7285, 72.6692, 6.42053, 0.96 ) }
    dend_4 { pt3dadd( 32.1371, 72.8652, 6.2944, 1.32 ) }
    dend_4 { pt3dadd( 34.2611, 73.181, 6.09749, 0.84 ) }
    dend_4 { pt3dadd( 36.1003, 73.4714, 5.91648, 1.2 ) }
    dend_4 { pt3dadd( 37.3881, 73.6977, 5.84531, 1.2 ) }
    dend_4 { pt3dadd( 38.6362, 73.962, 5.83803, 0.96 ) }
    dend_4 { pt3dadd( 39.6835, 74.228, 5.90659, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 40.4633, 74.4407, 6.02248, 1.2 ) }
    dend_4 { pt3dadd( 40.9768, 74.5882, 6.13977, 1.2 ) }
    dend_4 { pt3dadd( 43.5921, 75.4377, 6.89725, 1.2 ) }
    dend_4 { pt3dadd( 44.6343, 75.8415, 7.22679, 1.2 ) }
    dend_4 { pt3dadd( 45.51, 76.2526, 7.51347, 1.2 ) }
    dend_4 { pt3dadd( 47.2044, 77.055, 8.06707, 1.08 ) }
    dend_4 { pt3dadd( 47.9713, 77.3865, 8.29769, 1.44 ) }
    dend_4 { pt3dadd( 49.4327, 77.908, 8.56677, 1.08 ) }
    dend_4 { pt3dadd( 50.5604, 78.2361, 8.59303, 1.08 ) }
    dend_4 { pt3dadd( 51.4205, 78.4828, 8.53336, 1.08 ) }
    dend_4 { pt3dadd( 52.8717, 78.9511, 8.32463, 1.08 ) }
    dend_4 { pt3dadd( 54.4756, 79.4917, 7.9898, 1.44 ) }
    dend_4 { pt3dadd( 56.9643, 80.3379, 7.33258, 1.08 ) }
    dend_4 { pt3dadd( 58.5888, 80.9493, 6.81976, 0.84 ) }
    dend_4 { pt3dadd( 59.8103, 81.4918, 6.41182, 1.2 ) }
    dend_4 { pt3dadd( 61.039, 82.0906, 5.98517, 1.2 ) }
    dend_4 { pt3dadd( 62.4064, 82.8577, 5.4465, 0.84 ) }
    dend_4 { pt3dadd( 63.4053, 83.472, 5.04174, 1.08 ) }
    dend_4 { pt3dadd( 65.5506, 84.7852, 4.23995, 0.72 ) }
    dend_4 { pt3dadd( 67.6725, 85.9885, 3.42786, 0.72 ) }
    dend_4 { pt3dadd( 69.0235, 86.6316, 2.91446, 1.2 ) }
    dend_4 { pt3dadd( 71.0158, 87.484, 2.16811, 0.72 ) }
    dend_4 { pt3dadd( 71.7182, 87.766, 1.92188, 0.72 ) }
    dend_4 { pt3dadd( 73.1888, 88.3083, 1.46043, 0.96 ) }
    dend_4 { pt3dadd( 74.741, 88.8271, 1.01981, 0.96 ) }
    dend_4 { pt3dadd( 77.488, 89.8361, 0.351901, 0.72 ) }
    dend_4 { pt3dadd( 78.9002, 90.4773, 0.0661396, 0.6 ) }
    dend_4 { pt3dadd( 80.0372, 91.0669, -0.115348, 0.6 ) }
    dend_4 { pt3dadd( 81.4981, 91.9606, -0.343228, 1.2 ) }
    dend_4 { pt3dadd( 81.9323, 92.2754, -0.405722, 1.2 ) }
    dend_4 { pt3dadd( 83.7053, 93.6823, -0.598363, 0.72 ) }
    dend_4 { pt3dadd( 84.5337, 94.4225, -0.675283, 0.72 ) }
    dend_4 { pt3dadd( 85.1131, 94.9275, -0.726737, 0.72 ) }
    dend_4 { pt3dadd( 86.4969, 96.187, -0.903822, 0.6 ) }
    dend_4 { pt3dadd( 86.7241, 96.393, -0.937452, 0.6 ) }
    dend_4 { pt3dadd( 87.8703, 97.4147, -1.18464, 0.96 ) }
    dend_4 { pt3dadd( 88.6401, 98.1205, -1.43809, 0.72 ) }
    dend_4 { pt3dadd( 89.1414, 98.6069, -1.64111, 0.96 ) }
    dend_4 { pt3dadd( 91.0763, 100.599, -2.53455, 0.72 ) }
    dend_4 { pt3dadd( 92.191, 101.795, -3.09955, 0.72 ) }
    dend_4 { pt3dadd( 93.6719, 103.366, -3.91484, 1.2 ) }
    dend_4 { pt3dadd( 95.2376, 104.962, -4.73945, 0.72 ) }
    dend_4 { pt3dadd( 96.3137, 105.978, -5.24688, 0.72 ) }
    dend_4 { pt3dadd( 97.652, 107.137, -5.81586, 0.72 ) }
    dend_4 { pt3dadd( 98.1771, 107.539, -5.99493, 0.72 ) }
    dend_4 { pt3dadd( 99.8084, 108.715, -6.39527, 1.08 ) }
    dend_4 { pt3dadd( 101.693, 109.952, -6.6026, 0.72 ) }
    dend_4 { pt3dadd( 103.051, 110.791, -6.63259, 1.08 ) }
    dend_4 { pt3dadd( 103.405, 111.011, -6.62162, 1.08 ) }
    dend_4 { pt3dadd( 104.894, 111.894, -6.56188, 0.72 ) }
    dend_4 { pt3dadd( 105.773, 112.423, -6.54808, 0.72 ) }
    dend_4 { pt3dadd( 107.419, 113.456, -6.58482, 1.08 ) }
    dend_4 { pt3dadd( 108.069, 113.855, -6.65187, 1.08 ) }
    dend_4 { pt3dadd( 109.356, 114.607, -6.82401, 0.84 ) }
    dend_4 { pt3dadd( 111.728, 115.929, -7.17436, 0.84 ) }
    dend_4 { pt3dadd( 113.739, 116.974, -7.45275, 0.6 ) }
    dend_4 { pt3dadd( 115.305, 117.684, -7.60726, 1.08 ) }
    dend_4 { pt3dadd( 116.058, 117.978, -7.64299, 1.08 ) }
    dend_4 { pt3dadd( 118.031, 118.704, -7.60808, 0.72 ) }
    dend_4 { pt3dadd( 119.015, 119.053, -7.52118, 0.72 ) }
    dend_4 { pt3dadd( 121.076, 119.806, -7.13043, 1.08 ) }
    dend_4 { pt3dadd( 122.873, 120.451, -6.65804, 0.84 ) }
    dend_4 { pt3dadd( 123.818, 120.806, -6.37361, 1.08 ) }
    dend_4 { pt3dadd( 125.232, 121.384, -5.93402, 0.84 ) }
    dend_4 { pt3dadd( 125.959, 121.686, -5.71709, 0.84 ) }
    dend_4 { pt3dadd( 127.831, 122.444, -5.23893, 0.6 ) }
    dend_4 { pt3dadd( 128.755, 122.775, -5.05478, 0.6 ) }
    dend_4 { pt3dadd( 130.173, 123.228, -4.84007, 0.96 ) }
    dend_4 { pt3dadd( 130.765, 123.357, -4.77362, 0.96 ) }
    dend_4 { pt3dadd( 132.554, 123.533, -4.61233, 0.72 ) }
    dend_4 { pt3dadd( 133.964, 123.576, -4.49488, 0.72 ) }
    dend_4 { pt3dadd( 135.109, 123.561, -4.45856, 0.72 ) }
    dend_4 { pt3dadd( 135.396, 123.566, -4.46348, 0.72 ) }
    dend_4 { pt3dadd( 136.439, 123.658, -4.57006, 0.72 ) }
    dend_4 { pt3dadd( 138.135, 123.918, -4.93588, 0.72 ) }
    dend_4 { pt3dadd( 138.609, 124.023, -5.11223, 0.72 ) }
    dend_4 { pt3dadd( 140.38, 124.465, -5.94238, 0.6 ) }
    dend_4 { pt3dadd( 141.35, 124.716, -6.4584, 0.96 ) }
    dend_4 { pt3dadd( 143.028, 125.078, -7.37479, 0.96 ) }
    dend_4 { pt3dadd( 144.099, 125.311, -8.00565, 0.96 ) }
    dend_4 { pt3dadd( 145.877, 125.648, -9.13456, 0.72 ) }
    dend_4 { pt3dadd( 147.487, 125.886, -10.1587, 0.72 ) }
    dend_4 { pt3dadd( 149.022, 126.005, -11.1153, 1.2 ) }
    dend_4 { pt3dadd( 150.466, 126.029, -11.9908, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -17.8753, -314.814, 20.1379, 0.48 ) }
    dend_56 { pt3dadd( -17.865, -317.149, 20.3086, 0.48 ) }
    dend_56 { pt3dadd( -17.8558, -319.24, 20.4615, 0.48 ) }
    dend_56 { pt3dadd( -17.8479, -321.029, 20.5924, 0.84 ) }
    dend_56 { pt3dadd( -17.8411, -322.577, 20.7055, 0.84 ) }
    dend_56 { pt3dadd( -17.8345, -324.071, 20.8148, 0.6 ) }
    dend_56 { pt3dadd( -19.0637, -332.762, 20.2901, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -17.8753, -314.814, 20.1379, 0.84 ) }
    dend_53 { pt3dadd( -17.1651, -317.151, 20.6408, 0.84 ) }
    dend_53 { pt3dadd( -16.6303, -319.06, 21.0303, 0.84 ) }
    dend_53 { pt3dadd( -16.1673, -320.931, 21.3799, 1.08 ) }
    dend_53 { pt3dadd( -15.6152, -323.262, 21.7684, 0.84 ) }
    dend_53 { pt3dadd( -15.2371, -324.878, 22.0219, 0.84 ) }
    dend_53 { pt3dadd( -14.891, -326.405, 22.2447, 0.84 ) }
    dend_53 { pt3dadd( -14.7206, -327.27, 22.3561, 0.84 ) }
    dend_53 { pt3dadd( -14.2775, -329.965, 22.6239, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( -14.0866, -331.489, 22.7466, 1.32 ) }
    dend_53 { pt3dadd( -13.8565, -334.276, 22.9489, 1.2 ) }
    dend_53 { pt3dadd( -13.7791, -335.903, 23.0602, 0.96 ) }
    dend_53 { pt3dadd( -13.7246, -337.92, 23.2308, 1.32 ) }
    dend_53 { pt3dadd( -13.7111, -339.75, 23.4192, 1.32 ) }
    dend_53 { pt3dadd( -13.7588, -341.99, 23.7142, 1.08 ) }
    dend_53 { pt3dadd( -13.9545, -346.725, 24.3813, 1.08 ) }
    dend_53 { pt3dadd( -14.1044, -349.195, 24.748, 0.84 ) }
    dend_53 { pt3dadd( -14.2427, -351.302, 25.0949, 1.2 ) }
    dend_53 { pt3dadd( -14.3981, -353.629, 25.5248, 1.08 ) }
    dend_53 { pt3dadd( -14.5085, -355.507, 25.915, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -3.27978, -296.567, 4.35506, 0.96 ) }
    dend_51 { pt3dadd( -4.62791, -299.089, 4.08837, 0.96 ) }
    dend_51 { pt3dadd( -5.18591, -300.214, 4.12233, 0.96 ) }
    dend_51 { pt3dadd( -5.70789, -301.209, 4.17014, 0.96 ) }
    dend_51 { pt3dadd( -6.33203, -302.404, 4.22456, 0.96 ) }
    dend_51 { pt3dadd( -7.02925, -303.689, 4.2845, 0.96 ) }
    dend_51 { pt3dadd( -8.49945, -306.52, 4.45184, 1.44 ) }
    dend_51 { pt3dadd( -9.68504, -309.035, 4.75103, 0.96 ) }
    dend_51 { pt3dadd( -11.6008, -313.278, 5.36891, 1.44 ) }
    dend_51 { pt3dadd( -12.1812, -314.633, 5.58656, 0.96 ) }
    dend_51 { pt3dadd( -13.2976, -317.343, 6.03389, 1.56 ) }
    dend_51 { pt3dadd( -14.5226, -320.502, 6.53184, 1.2 ) }
    dend_51 { pt3dadd( -16.0205, -324.873, 7.16196, 0.96 ) }
    dend_51 { pt3dadd( -16.5999, -326.813, 7.43158, 1.44 ) }
    dend_51 { pt3dadd( -17.3989, -329.908, 7.86611, 0.96 ) }
    dend_51 { pt3dadd( -18.2411, -333.29, 8.2677, 1.32 ) }
    dend_51 { pt3dadd( -19.109, -336.873, 8.55144, 0.96 ) }
    dend_51 { pt3dadd( -19.7808, -339.559, 8.62561, 0.96 ) }
    dend_51 { pt3dadd( -20.1342, -341.12, 8.60528, 0.96 ) }
    dend_51 { pt3dadd( -20.3964, -342.447, 8.57586, 0.96 ) }
    dend_51 { pt3dadd( -21.0213, -346.002, 8.46692, 1.32 ) }
    dend_51 { pt3dadd( -21.5242, -349.144, 8.35037, 0.96 ) }
    dend_51 { pt3dadd( -22.1624, -353.629, 8.21691, 1.44 ) }
    dend_51 { pt3dadd( -22.5724, -356.905, 8.15702, 0.84 ) }
    dend_51 { pt3dadd( -22.809, -359.259, 8.18236, 1.2 ) }
    dend_51 { pt3dadd( -22.9194, -360.473, 8.2545, 1.2 ) }
    dend_51 { pt3dadd( -22.9796, -361.29, 8.34998, 0.84 ) }
    dend_51 { pt3dadd( -23.2338, -364.435, 8.91377, 1.2 ) }
    dend_51 { pt3dadd( -23.5576, -367.323, 9.58685, 1.2 ) }
    dend_51 { pt3dadd( -23.8879, -369.276, 10.0769, 0.96 ) }
    dend_51 { pt3dadd( -24.5765, -372.495, 10.8786, 0.96 ) }
    dend_51 { pt3dadd( -25.3354, -375.492, 11.5185, 1.32 ) }
    dend_51 { pt3dadd( -26.0901, -377.969, 11.9695, 1.68 ) }
    dend_51 { pt3dadd( -27.0543, -380.532, 12.3182, 1.2 ) }
    dend_51 { pt3dadd( -28.5254, -383.75, 12.5693, 0.96 ) }
    dend_51 { pt3dadd( -30.0552, -386.54, 12.5175, 0.96 ) }
    dend_51 { pt3dadd( -31.7255, -388.937, 12.1256, 0.84 ) }
    dend_51 { pt3dadd( -32.9652, -390.149, 11.6498, 0.84 ) }
    dend_51 { pt3dadd( -34.3364, -390.743, 10.8789, 0.84 ) }
    dend_51 { pt3dadd( -35.5345, -389.975, 9.98749, 0.84 ) }
    dend_51 { pt3dadd( -36.1402, -389.212, 9.48891, 0.84 ) }
    dend_51 { pt3dadd( -36.6744, -388.252, 9.03474, 0.84 ) }
    dend_51 { pt3dadd( -37.1573, -387.029, 8.66371, 1.08 ) }
    dend_51 { pt3dadd( -37.6519, -385.327, 8.28496, 0.84 ) }
    dend_51 { pt3dadd( -37.9432, -383.9, 8.12152, 0.6 ) }
    dend_51 { pt3dadd( -39.8583, -393.923, 9.34979, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.27978, -296.567, 4.35506, 1.08 ) }
    dend_46 { pt3dadd( -3.18138, -299.757, 4.54503, 1.08 ) }
    dend_46 { pt3dadd( -3.06446, -303.217, 4.72679, 1.44 ) }
    dend_46 { pt3dadd( -3.03845, -304.769, 4.7983, 0.84 ) }
    dend_46 { pt3dadd( -3.01743, -307.024, 4.88798, 1.32 ) }
    dend_46 { pt3dadd( -3.00498, -308.558, 4.9431, 1.32 ) }
    dend_46 { pt3dadd( -2.98737, -311.213, 4.99199, 1.32 ) }
    dend_46 { pt3dadd( -3.01197, -312.919, 4.98195, 1.32 ) }
    dend_46 { pt3dadd( -3.0309, -314.78, 4.95803, 1.32 ) }
    dend_46 { pt3dadd( -3.12991, -318.215, 4.89986, 1.44 ) }
    dend_46 { pt3dadd( -3.19261, -319.901, 4.86911, 1.44 ) }
    dend_46 { pt3dadd( -3.43027, -325.207, 4.77419, 1.44 ) }
    dend_46 { pt3dadd( -3.5063, -326.533, 4.75144, 1.44 ) }
    dend_46 { pt3dadd( -3.64056, -328.826, 4.71772, 1.08 ) }
    dend_46 { pt3dadd( -3.84123, -333.407, 4.67116, 1.08 ) }
    dend_46 { pt3dadd( -3.94449, -335.762, 4.65972, 0.84 ) }
    dend_46 { pt3dadd( -4.05481, -338.479, 4.68022, 1.32 ) }
    dend_46 { pt3dadd( -4.10243, -340.629, 4.73086, 1.32 ) }
    dend_46 { pt3dadd( -4.12509, -343.968, 4.82513, 0.96 ) }
    dend_46 { pt3dadd( -4.10937, -345.704, 4.89253, 1.44 ) }
    dend_46 { pt3dadd( -4.05941, -348.25, 4.9407, 1.44 ) }
    dend_46 { pt3dadd( -4.05953, -350.946, 4.93804, 1.2 ) }
    dend_46 { pt3dadd( -4.13744, -353.638, 4.883, 1.08 ) }
    dend_46 { pt3dadd( -4.24189, -355.781, 4.80432, 1.08 ) }
    dend_46 { pt3dadd( -4.40459, -357.801, 4.70178, 1.68 ) }
    dend_46 { pt3dadd( -4.69914, -360.997, 4.5164, 1.2 ) }
    dend_46 { pt3dadd( -4.81138, -362.318, 4.43597, 1.2 ) }
    dend_46 { pt3dadd( -4.99883, -364.961, 4.28089, 1.44 ) }
    dend_46 { pt3dadd( -5.12453, -367.28, 4.14804, 1.44 ) }
    dend_46 { pt3dadd( -5.19992, -370.14, 4.00751, 1.44 ) }
    dend_46 { pt3dadd( -5.20718, -372.606, 3.92135, 1.44 ) }
    dend_46 { pt3dadd( -5.12524, -375.434, 3.89723, 1.8 ) }
    dend_46 { pt3dadd( -5.00956, -378.366, 3.86585, 1.32 ) }
    dend_46 { pt3dadd( -4.92753, -380.084, 3.84459, 1.08 ) }
    dend_46 { pt3dadd( -4.83015, -382.489, 3.80861, 1.56 ) }
    dend_46 { pt3dadd( -4.72118, -385.273, 3.75251, 1.56 ) }
    dend_46 { pt3dadd( -4.6646, -386.825, 3.71675, 1.56 ) }
    dend_46 { pt3dadd( -4.61935, -388.255, 3.68367, 1.56 ) }
    dend_46 { pt3dadd( -4.56412, -390.438, 3.64275, 1.56 ) }
    dend_46 { pt3dadd( -4.50287, -392.283, 3.62814, 1.56 ) }
    dend_46 { pt3dadd( -4.38813, -394.41, 3.61057, 1.32 ) }
    dend_46 { pt3dadd( -4.32762, -395.37, 3.6039, 1.32 ) }
    dend_46 { pt3dadd( -4.2892, -396.789, 3.58391, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( -4.26929, -398.355, 3.55844, 1.32 ) }
    dend_46 { pt3dadd( -4.24166, -400.679, 3.48528, 1.32 ) }
    dend_46 { pt3dadd( -4.22412, -402.422, 3.43056, 1.32 ) }
    dend_46 { pt3dadd( -4.23496, -404.469, 3.36465, 1.68 ) }
    dend_46 { pt3dadd( -4.35353, -409.81, 3.16162, 1.32 ) }
    dend_46 { pt3dadd( -4.4181, -411.486, 3.08479, 1.32 ) }
    dend_46 { pt3dadd( -4.52158, -413.406, 2.97719, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 30.4586, -326.203, -9.83878, 0.96 ) }
    dend_30 { pt3dadd( 31.8544, -326.874, -9.48691, 0.96 ) }
    dend_30 { pt3dadd( 32.5545, -327.2, -9.31276, 1.32 ) }
    dend_30 { pt3dadd( 34.0026, -327.887, -8.95675, 0.96 ) }
    dend_30 { pt3dadd( 35.0846, -328.429, -8.68131, 1.32 ) }
    dend_30 { pt3dadd( 36.4501, -329.161, -8.36798, 1.2 ) }
    dend_30 { pt3dadd( 37.1431, -329.518, -8.22734, 1.2 ) }
    dend_30 { pt3dadd( 37.814, -329.85, -8.11333, 1.2 ) }
    dend_30 { pt3dadd( 38.2783, -330.09, -8.03503, 1.2 ) }
    dend_30 { pt3dadd( 38.8096, -330.374, -7.96566, 1.2 ) }
    dend_30 { pt3dadd( 40.3588, -331.167, -7.8487, 0.96 ) }
    dend_30 { pt3dadd( 41.439, -331.693, -7.85956, 1.32 ) }
    dend_30 { pt3dadd( 42.0722, -331.974, -7.88823, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 30.4586, -326.203, -9.83878, 1.08 ) }
    dend_23 { pt3dadd( 30.9248, -330.373, -9.75503, 1.08 ) }
    dend_23 { pt3dadd( 31.2612, -334.147, -9.65857, 0.72 ) }
    dend_23 { pt3dadd( 31.3952, -336.002, -9.67716, 0.72 ) }
    dend_23 { pt3dadd( 31.6538, -340.489, -9.79464, 1.2 ) }
    dend_23 { pt3dadd( 31.8395, -344.147, -9.91788, 0.84 ) }
    dend_23 { pt3dadd( 31.9314, -346.358, -9.99181, 0.84 ) }
    dend_23 { pt3dadd( 31.9864, -347.977, -10.0762, 0.84 ) }
    dend_23 { pt3dadd( 32.1204, -352.221, -10.304, 0.6 ) }
    dend_23 { pt3dadd( 32.2161, -354.581, -10.4281, 0.6 ) }
    dend_23 { pt3dadd( 32.4297, -357.723, -10.611, 1.2 ) }
    dend_23 { pt3dadd( 32.736, -361.304, -10.8743, 1.2 ) }
    dend_23 { pt3dadd( 33.0426, -364.316, -11.1187, 0.84 ) }
    dend_23 { pt3dadd( 33.3116, -366.82, -11.3127, 0.84 ) }
    dend_23 { pt3dadd( 33.7166, -370.795, -11.5988, 1.08 ) }
    dend_23 { pt3dadd( 34.0296, -374.241, -11.9064, 0.72 ) }
    dend_23 { pt3dadd( 34.2583, -377.298, -12.2482, 1.08 ) }
    dend_23 { pt3dadd( 34.3944, -379.405, -12.5257, 1.08 ) }
    dend_23 { pt3dadd( 34.4783, -381.382, -12.8023, 1.08 ) }
    dend_23 { pt3dadd( 34.5367, -384.937, -13.2897, 0.72 ) }
    dend_23 { pt3dadd( 34.5439, -387.228, -13.5972, 0.72 ) }
    dend_23 { pt3dadd( 34.5345, -389.435, -13.7741, 1.08 ) }
    dend_23 { pt3dadd( 34.5366, -391.107, -13.7956, 1.08 ) }
    dend_23 { pt3dadd( 34.5618, -392.235, -13.7517, 1.08 ) }
    dend_23 { pt3dadd( 34.5971, -395.353, -13.5779, 0.72 ) }
    dend_23 { pt3dadd( 34.5946, -397.095, -13.474, 0.72 ) }
    dend_23 { pt3dadd( 34.5458, -400.973, -13.3055, 1.2 ) }
    dend_23 { pt3dadd( 34.4851, -404.85, -13.2045, 1.2 ) }
    dend_23 { pt3dadd( 34.391, -409.939, -13.188, 1.2 ) }
    dend_23 { pt3dadd( 34.3008, -414.844, -13.3013, 0.84 ) }
    dend_23 { pt3dadd( 34.2448, -416.782, -13.3939, 1.32 ) }
    dend_23 { pt3dadd( 34.1428, -418.928, -13.5485, 1.32 ) }
    dend_23 { pt3dadd( 34.0858, -419.928, -13.665, 1.32 ) }
    dend_23 { pt3dadd( 33.9378, -422.15, -13.9694, 0.96 ) }
    dend_23 { pt3dadd( 33.7933, -424.133, -14.2348, 1.56 ) }
    dend_23 { pt3dadd( 33.7041, -426.193, -14.4792, 1.56 ) }
    dend_23 { pt3dadd( 33.6606, -427.93, -14.6846, 1.08 ) }
    dend_23 { pt3dadd( 33.6101, -429.616, -14.8704, 1.08 ) }
    dend_23 { pt3dadd( 33.5202, -433.064, -15.2989, 0.84 ) }
    dend_23 { pt3dadd( 33.5269, -434.671, -15.534, 1.44 ) }
    dend_23 { pt3dadd( 33.6401, -437.654, -16.0566, 1.08 ) }
    dend_23 { pt3dadd( 33.7861, -439.506, -16.4547, 1.08 ) }
    dend_23 { pt3dadd( 34.0566, -442.446, -17.1219, 0.72 ) }
    dend_23 { pt3dadd( 34.3666, -445.961, -17.8973, 1.08 ) }
    dend_23 { pt3dadd( 34.524, -447.8, -18.3685, 1.08 ) }
    dend_23 { pt3dadd( 34.7011, -449.889, -18.9472, 0.96 ) }
    dend_23 { pt3dadd( 34.9926, -453.432, -19.9216, 0.72 ) }
    dend_23 { pt3dadd( 35.1334, -455.2, -20.4641, 0.72 ) }
    dend_23 { pt3dadd( 35.2489, -456.455, -20.9145, 0.72 ) }
    dend_23 { pt3dadd( 35.5018, -460.182, -22.3683, 0.72 ) }
    dend_23 { pt3dadd( 35.5227, -461.654, -22.9616, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.84013, 59.4138, 28.8958, 0.6 ) }
    dend_16 { pt3dadd( 0.765964, 50.7353, 26.6789, 0.6 ) }
    dend_16 { pt3dadd( -3.1776, 41.7456, 25.825, 0.6 ) }
    dend_16 { pt3dadd( -6.48958, 32.7103, 23.6969, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.84013, 59.4138, 28.8958, 0.84 ) }
    dend_15 { pt3dadd( -0.800456, 49.5546, 24.7804, 0.6 ) }
    dend_15 { pt3dadd( -8.76843, 40.8953, 22.248, 0.6 ) }
    dend_15 { pt3dadd( -16.4762, 31.7798, 20.5828, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.99388, 94.9355, 18.0786, 0.6 ) }
    dend_7 { pt3dadd( -8.90507, 104.904, 21.9481, 0.6 ) }
    dend_7 { pt3dadd( -16.6219, 113.384, 26.0135, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -2.99388, 94.9355, 18.0786, 0.84 ) }
    dend_6 { pt3dadd( -8.77818, 105.69, 18.6967, 0.6 ) }
    dend_6 { pt3dadd( -12.7963, 117.276, 18.5902, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -14.5085, -355.507, 25.915, 0.6 ) }
    dend_55 { pt3dadd( -15.7072, -355.017, 27.4519, 0.6 ) }
    dend_55 { pt3dadd( -17.199, -354.408, 29.3647, 0.6 ) }
    dend_55 { pt3dadd( -17.8998, -354.121, 30.2634, 0.6 ) }
    dend_55 { pt3dadd( -18.7411, -353.778, 31.3421, 0.96 ) }
    dend_55 { pt3dadd( -25.6945, -349.926, 38.6214, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -14.5085, -355.507, 25.915, 0.96 ) }
    dend_54 { pt3dadd( -14.8809, -357.017, 26.1634, 0.96 ) }
    dend_54 { pt3dadd( -15.2461, -358.498, 26.4069, 0.72 ) }
    dend_54 { pt3dadd( -15.8428, -360.918, 26.8048, 0.72 ) }
    dend_54 { pt3dadd( -18.3248, -371.692, 30.6893, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -4.52158, -413.406, 2.97719, 0.84 ) }
    dend_50 { pt3dadd( -3.39211, -415.271, 2.25146, 0.84 ) }
    dend_50 { pt3dadd( -2.21686, -416.961, 1.5519, 0.84 ) }
    dend_50 { pt3dadd( -1.91329, -417.421, 1.3453, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( -1.18856, -418.616, 0.766632, 0.84 ) }
    dend_50 { pt3dadd( -0.306764, -420.217, -0.00829673, 0.6 ) }
    dend_50 { pt3dadd( 0.435779, -421.646, -0.683208, 1.08 ) }
    dend_50 { pt3dadd( 0.952118, -422.738, -1.18835, 1.08 ) }
    dend_50 { pt3dadd( 1.74193, -424.41, -1.95183, 0.72 ) }
    dend_50 { pt3dadd( 2.38905, -425.848, -2.55894, 0.72 ) }
    dend_50 { pt3dadd( 2.74471, -426.722, -2.9393, 0.72 ) }
    dend_50 { pt3dadd( 3.03703, -427.441, -3.30858, 0.72 ) }
    dend_50 { pt3dadd( 3.32783, -428.213, -3.72141, 1.2 ) }
    dend_50 { pt3dadd( 4.04992, -430.123, -4.7085, 0.84 ) }
    dend_50 { pt3dadd( 5.03445, -432.555, -5.89654, 1.08 ) }
    dend_50 { pt3dadd( 6.13183, -435.264, -7.16097, 1.08 ) }
    dend_50 { pt3dadd( 7.21054, -437.99, -8.42135, 0.84 ) }
    dend_50 { pt3dadd( 7.65958, -439.198, -8.95163, 0.84 ) }
    dend_50 { pt3dadd( 8.18464, -440.647, -9.55239, 1.32 ) }
    dend_50 { pt3dadd( 8.83695, -442.514, -10.239, 0.84 ) }
    dend_50 { pt3dadd( 9.08889, -443.196, -10.466, 0.84 ) }
    dend_50 { pt3dadd( 9.53322, -444.335, -10.7612, 1.32 ) }
    dend_50 { pt3dadd( 10.2256, -446.088, -11.2099, 0.84 ) }
    dend_50 { pt3dadd( 10.7239, -447.263, -11.6267, 1.44 ) }
    dend_50 { pt3dadd( 11.5658, -449.292, -12.5424, 1.2 ) }
    dend_50 { pt3dadd( 11.9362, -450.195, -13.0218, 1.2 ) }
    dend_50 { pt3dadd( 12.416, -451.383, -13.6825, 1.44 ) }
    dend_50 { pt3dadd( 13.025, -452.921, -14.5634, 1.08 ) }
    dend_50 { pt3dadd( 14.0841, -455.723, -16.1698, 0.84 ) }
    dend_50 { pt3dadd( 14.6231, -457.223, -17.0006, 1.44 ) }
    dend_50 { pt3dadd( 15.1354, -458.797, -17.8306, 0.96 ) }
    dend_50 { pt3dadd( 15.4493, -459.968, -18.3822, 0.96 ) }
    dend_50 { pt3dadd( 15.6468, -460.891, -18.7524, 1.44 ) }
    dend_50 { pt3dadd( 15.9411, -463.009, -19.4676, 0.96 ) }
    dend_50 { pt3dadd( 15.9858, -463.578, -19.6321, 0.96 ) }
    dend_50 { pt3dadd( 16.1032, -465.741, -20.2196, 1.44 ) }
    dend_50 { pt3dadd( 16.199, -468.046, -20.8669, 0.84 ) }
    dend_50 { pt3dadd( 16.2841, -470.655, -21.7364, 1.44 ) }
    dend_50 { pt3dadd( 16.3443, -473.356, -22.729, 0.84 ) }
    dend_50 { pt3dadd( 16.3503, -474.137, -23.0478, 0.84 ) }
    dend_50 { pt3dadd( 16.3839, -476.206, -23.9781, 1.44 ) }
    dend_50 { pt3dadd( 16.4831, -479.09, -25.3707, 1.44 ) }
    dend_50 { pt3dadd( 16.577, -482.254, -26.941, 1.08 ) }
    dend_50 { pt3dadd( 16.6375, -483.941, -27.8129, 0.72 ) }
    dend_50 { pt3dadd( 16.7166, -485.656, -28.7379, 1.32 ) }
    dend_50 { pt3dadd( 16.7616, -487.174, -29.584, 0.72 ) }
    dend_50 { pt3dadd( 16.7495, -487.942, -30.0217, 0.72 ) }
    dend_50 { pt3dadd( 16.6192, -490.0, -31.1723, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -4.52158, -413.406, 2.97719, 1.08 ) }
    dend_47 { pt3dadd( -4.77115, -415.454, 2.81395, 1.08 ) }
    dend_47 { pt3dadd( -4.88203, -416.809, 2.74207, 1.08 ) }
    dend_47 { pt3dadd( -4.96324, -417.784, 2.73868, 1.08 ) }
    dend_47 { pt3dadd( -5.12583, -419.623, 2.62119, 1.08 ) }
    dend_47 { pt3dadd( -5.29776, -421.847, 2.35824, 1.44 ) }
    dend_47 { pt3dadd( -5.43229, -423.991, 2.05078, 0.96 ) }
    dend_47 { pt3dadd( -5.48626, -425.766, 1.76675, 0.96 ) }
    dend_47 { pt3dadd( -5.49161, -427.499, 1.43892, 0.96 ) }
    dend_47 { pt3dadd( -5.46702, -430.769, 0.849666, 0.96 ) }
    dend_47 { pt3dadd( -5.42613, -432.905, 0.514942, 0.84 ) }
    dend_47 { pt3dadd( -5.38538, -434.163, 0.354769, 1.44 ) }
    dend_47 { pt3dadd( -5.33667, -436.105, 0.156365, 1.08 ) }
    dend_47 { pt3dadd( -5.28271, -437.662, 0.0475652, 1.08 ) }
    dend_47 { pt3dadd( -5.18231, -439.969, -0.0467438, 1.56 ) }
    dend_47 { pt3dadd( -5.02028, -443.556, -0.003075, 1.32 ) }
    dend_47 { pt3dadd( -4.9534, -445.343, 0.0275436, 0.96 ) }
    dend_47 { pt3dadd( -4.90302, -447.123, 0.0415824, 1.32 ) }
    dend_47 { pt3dadd( -4.81227, -450.44, 0.0447209, 1.08 ) }
    dend_47 { pt3dadd( -4.7518, -452.532, 0.00976843, 0.72 ) }
    dend_47 { pt3dadd( -4.7146, -454.369, -0.061835, 1.32 ) }
    dend_47 { pt3dadd( -4.6795, -456.936, -0.15007, 1.08 ) }
    dend_47 { pt3dadd( -4.66517, -458.981, -0.200115, 1.56 ) }
    dend_47 { pt3dadd( -4.65467, -461.326, -0.226732, 0.84 ) }
    dend_47 { pt3dadd( -4.64763, -464.182, -0.250292, 0.6 ) }
    dend_47 { pt3dadd( -4.64234, -465.414, -0.258894, 1.08 ) }
    dend_47 { pt3dadd( -4.63738, -468.029, -0.278782, 1.2 ) }
    dend_47 { pt3dadd( -4.62101, -470.373, -0.292149, 0.72 ) }
    dend_47 { pt3dadd( -4.60837, -471.154, -0.299534, 0.72 ) }
    dend_47 { pt3dadd( -4.52988, -474.894, -0.360714, 1.32 ) }
    dend_47 { pt3dadd( -4.49484, -475.58, -0.376021, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 42.0722, -331.974, -7.88823, 0.96 ) }
    dend_34 { pt3dadd( 43.5811, -330.879, -8.2376, 0.96 ) }
    dend_34 { pt3dadd( 44.1881, -330.438, -8.37814, 0.96 ) }
    dend_34 { pt3dadd( 44.9274, -329.901, -8.54933, 0.84 ) }
    dend_34 { pt3dadd( 46.7062, -328.609, -8.96121, 0.84 ) }
    dend_34 { pt3dadd( 47.7833, -327.827, -9.21061, 1.08 ) }
    dend_34 { pt3dadd( 48.7223, -327.145, -9.42804, 1.08 ) }
    dend_34 { pt3dadd( 55.0336, -321.842, -10.842, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 42.0722, -331.974, -7.88823, 0.6 ) }
    dend_31 { pt3dadd( 43.5425, -333.658, -7.36816, 0.6 ) }
    dend_31 { pt3dadd( 45.39, -335.806, -6.51431, 1.08 ) }
    dend_31 { pt3dadd( 47.3018, -338.194, -5.50868, 0.96 ) }
    dend_31 { pt3dadd( 48.3661, -339.538, -4.94929, 0.96 ) }
    dend_31 { pt3dadd( 49.4758, -340.939, -4.36604, 1.32 ) }
    dend_31 { pt3dadd( 51.5045, -343.5, -3.29979, 1.08 ) }
    dend_31 { pt3dadd( 52.3513, -344.601, -2.77098, 1.08 ) }
    dend_31 { pt3dadd( 54.0157, -346.792, -1.56292, 1.08 ) }
    dend_31 { pt3dadd( 55.5171, -348.854, -0.445265, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 35.5227, -461.654, -22.9616, 0.72 ) }
    dend_27 { pt3dadd( 35.2123, -463.469, -23.2056, 0.72 ) }
    dend_27 { pt3dadd( 34.9698, -465.202, -23.4092, 0.72 ) }
    dend_27 { pt3dadd( 34.6186, -467.576, -23.689, 0.72 ) }
    dend_27 { pt3dadd( 34.3597, -469.148, -23.844, 0.72 ) }
    dend_27 { pt3dadd( 34.243, -469.87, -23.9167, 0.72 ) }
    dend_27 { pt3dadd( 33.8785, -472.358, -24.1738, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 33.6833, -473.663, -24.2751, 0.6 ) }
    dend_27 { pt3dadd( 33.5091, -474.798, -24.3446, 0.6 ) }
    dend_27 { pt3dadd( 33.2112, -476.753, -24.4154, 0.48 ) }
    dend_27 { pt3dadd( 33.0254, -477.855, -24.4633, 0.48 ) }
    dend_27 { pt3dadd( 32.5893, -480.186, -24.5697, 0.84 ) }
    dend_27 { pt3dadd( 31.9703, -482.814, -24.6687, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 35.5227, -461.654, -22.9616, 0.72 ) }
    dend_24 { pt3dadd( 36.2673, -463.623, -23.2953, 0.72 ) }
    dend_24 { pt3dadd( 37.3155, -466.395, -23.765, 1.2 ) }
    dend_24 { pt3dadd( 37.6642, -467.317, -23.9213, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -4.49484, -475.58, -0.376021, 0.48 ) }
    dend_49 { pt3dadd( -6.73266, -477.084, -0.852072, 0.48 ) }
    dend_49 { pt3dadd( -7.13609, -477.327, -0.946835, 0.48 ) }
    dend_49 { pt3dadd( -8.41792, -478.196, -1.25677, 0.48 ) }
    dend_49 { pt3dadd( -9.88781, -479.347, -1.48296, 0.48 ) }
    dend_49 { pt3dadd( -10.5517, -479.914, -1.53246, 0.48 ) }
    dend_49 { pt3dadd( -12.3245, -481.461, -1.60823, 0.96 ) }
    dend_49 { pt3dadd( -14.4278, -483.314, -1.60299, 0.6 ) }
    dend_49 { pt3dadd( -16.0159, -484.786, -1.54606, 0.6 ) }
    dend_49 { pt3dadd( -18.3999, -487.072, -1.37993, 1.08 ) }
    dend_49 { pt3dadd( -20.1217, -488.762, -1.19747, 0.84 ) }
    dend_49 { pt3dadd( -21.2186, -489.898, -1.03328, 0.84 ) }
    dend_49 { pt3dadd( -22.508, -491.385, -0.740428, 1.2 ) }
    dend_49 { pt3dadd( -23.9282, -493.028, -0.326684, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -4.49484, -475.58, -0.376021, 0.84 ) }
    dend_48 { pt3dadd( -4.19277, -478.282, -0.678055, 0.84 ) }
    dend_48 { pt3dadd( -4.14265, -479.564, -0.822875, 0.84 ) }
    dend_48 { pt3dadd( -4.1199, -480.697, -0.937444, 0.84 ) }
    dend_48 { pt3dadd( -4.06411, -483.582, -1.23514, 0.84 ) }
    dend_48 { pt3dadd( -4.04016, -484.652, -1.34216, 0.84 ) }
    dend_48 { pt3dadd( -3.98552, -487.142, -1.58053, 1.44 ) }
    dend_48 { pt3dadd( -3.95726, -488.981, -1.76944, 1.08 ) }
    dend_48 { pt3dadd( -3.95245, -491.074, -1.96047, 1.08 ) }
    dend_48 { pt3dadd( -3.97791, -493.065, -2.10423, 0.84 ) }
    dend_48 { pt3dadd( -3.99602, -494.314, -2.15306, 0.84 ) }
    dend_48 { pt3dadd( -3.97011, -495.419, -2.17568, 1.08 ) }
    dend_48 { pt3dadd( -3.83219, -496.889, -2.18671, 0.6 ) }
    dend_48 { pt3dadd( -3.66693, -498.074, -2.17893, 0.6 ) }
    dend_48 { pt3dadd( -3.48974, -499.311, -2.1409, 0.6 ) }
    dend_48 { pt3dadd( -3.23213, -500.948, -2.10468, 1.2 ) }
    dend_48 { pt3dadd( -2.94955, -502.588, -2.10575, 1.2 ) }
    dend_48 { pt3dadd( -2.76629, -503.725, -2.12738, 1.2 ) }
    dend_48 { pt3dadd( -2.58545, -505.01, -2.16934, 0.96 ) }
    dend_48 { pt3dadd( -2.47666, -505.864, -2.20168, 1.44 ) }
    dend_48 { pt3dadd( -2.31371, -507.557, -2.27027, 1.44 ) }
    dend_48 { pt3dadd( -2.15949, -509.971, -2.3713, 0.96 ) }
    dend_48 { pt3dadd( -2.0463, -512.631, -2.476, 1.32 ) }
    dend_48 { pt3dadd( -2.00237, -513.734, -2.51338, 1.32 ) }
    dend_48 { pt3dadd( -1.9126, -516.205, -2.5802, 0.84 ) }
    dend_48 { pt3dadd( -1.86708, -518.237, -2.62571, 1.32 ) }
    dend_48 { pt3dadd( -1.85268, -519.342, -2.63076, 1.32 ) }
    dend_48 { pt3dadd( -1.84392, -520.64, -2.66101, 1.32 ) }
    dend_48 { pt3dadd( -1.8306, -523.154, -2.75416, 1.32 ) }
    dend_48 { pt3dadd( -1.84434, -524.808, -2.83216, 0.96 ) }
    dend_48 { pt3dadd( -1.87507, -526.13, -2.90598, 0.96 ) }
    dend_48 { pt3dadd( -1.91861, -529.102, -3.08561, 1.44 ) }
    dend_48 { pt3dadd( -1.94033, -530.925, -3.21632, 1.08 ) }
    dend_48 { pt3dadd( -1.98311, -532.389, -3.34168, 1.08 ) }
    dend_48 { pt3dadd( -2.04224, -533.855, -3.5047, 1.08 ) }
    dend_48 { pt3dadd( -2.08882, -535.647, -3.71721, 1.08 ) }
    dend_48 { pt3dadd( -2.12175, -537.571, -3.9482, 1.08 ) }
    dend_48 { pt3dadd( -2.17389, -540.292, -4.30731, 1.08 ) }
    dend_48 { pt3dadd( -2.21706, -544.33, -4.86991, 0.96 ) }
    dend_48 { pt3dadd( -2.28476, -550.53, -5.77373, 1.32 ) }
    dend_48 { pt3dadd( -2.30619, -552.57, -6.08172, 0.84 ) }
    dend_48 { pt3dadd( -2.32236, -553.785, -6.26764, 0.84 ) }
    dend_48 { pt3dadd( -2.35468, -555.438, -6.51555, 0.84 ) }
    dend_48 { pt3dadd( -2.38493, -556.7, -6.68899, 0.84 ) }
    dend_48 { pt3dadd( -2.44317, -559.182, -6.98577, 0.84 ) }
    dend_48 { pt3dadd( -2.50811, -560.416, -7.10411, 0.84 ) }
    dend_48 { pt3dadd( -2.59162, -561.439, -7.19504, 0.84 ) }
    dend_48 { pt3dadd( -2.70076, -562.509, -7.27234, 1.2 ) }
    dend_48 { pt3dadd( -2.90221, -564.521, -7.38453, 0.72 ) }
    dend_48 { pt3dadd( -3.09954, -566.086, -7.47156, 1.32 ) }
    dend_48 { pt3dadd( -3.26292, -567.329, -7.5869, 0.84 ) }
    dend_48 { pt3dadd( -3.46981, -568.779, -7.73811, 1.56 ) }
    dend_48 { pt3dadd( -4.02339, -572.311, -8.19917, 0.84 ) }
    dend_48 { pt3dadd( -4.25573, -573.623, -8.39658, 1.32 ) }
    dend_48 { pt3dadd( -4.74444, -575.984, -8.79148, 0.84 ) }
    dend_48 { pt3dadd( -5.54026, -579.488, -9.40072, 0.6 ) }
    dend_48 { pt3dadd( -5.78228, -580.529, -9.57917, 1.08 ) }
    dend_48 { pt3dadd( -6.24574, -582.48, -9.90251, 0.84 ) }
    dend_48 { pt3dadd( -6.64483, -584.101, -10.179, 1.44 ) }
    dend_48 { pt3dadd( -7.08274, -585.795, -10.4561, 0.96 ) }
    dend_48 { pt3dadd( -7.42421, -587.194, -10.6616, 0.72 ) }
    dend_48 { pt3dadd( -7.77798, -588.54, -10.7848, 0.72 ) }
    dend_48 { pt3dadd( -8.39828, -591.064, -11.009, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 55.5171, -348.854, -0.445265, 0.84 ) }
    dend_33 { pt3dadd( 58.4444, -348.137, -0.813639, 0.84 ) }
    dend_33 { pt3dadd( 59.7297, -347.821, -0.975374, 0.84 ) }
    dend_33 { pt3dadd( 62.7537, -347.08, -1.35592, 0.72 ) }
    dend_33 { pt3dadd( 64.664, -346.612, -1.59632, 0.72 ) }
    dend_33 { pt3dadd( 76.2197, -345.628, -4.08517, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 55.5171, -348.854, -0.445265, 0.72 ) }
    dend_32 { pt3dadd( 56.8627, -350.799, -0.507372, 0.72 ) }
    dend_32 { pt3dadd( 58.2894, -352.862, -0.573222, 0.84 ) }
    dend_32 { pt3dadd( 58.8917, -353.733, -0.601027, 0.84 ) }
    dend_32 { pt3dadd( 60.1529, -355.556, -0.659236, 0.6 ) }
    dend_32 { pt3dadd( 61.026, -356.818, -0.699538, 0.6 ) }
    dend_32 { pt3dadd( 61.9389, -358.138, -0.741675, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 69.0639, -366.288, -0.893656, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 31.9703, -482.814, -24.6687, 0.48 ) }
    dend_29 { pt3dadd( 27.5001, -483.358, -22.9691, 0.48 ) }
    dend_29 { pt3dadd( 26.4602, -483.484, -22.5737, 1.08 ) }
    dend_29 { pt3dadd( 25.3894, -483.614, -22.1666, 0.48 ) }
    dend_29 { pt3dadd( 24.0459, -483.778, -21.6557, 0.96 ) }
    dend_29 { pt3dadd( 22.9094, -483.916, -21.2237, 0.48 ) }
    dend_29 { pt3dadd( 20.6915, -484.185, -20.3804, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 31.9703, -482.814, -24.6687, 0.96 ) }
    dend_28 { pt3dadd( 31.4024, -484.247, -25.5515, 0.96 ) }
    dend_28 { pt3dadd( 30.4097, -486.777, -26.9814, 0.48 ) }
    dend_28 { pt3dadd( 30.048, -487.771, -27.4898, 0.48 ) }
    dend_28 { pt3dadd( 29.3802, -489.807, -28.4961, 0.84 ) }
    dend_28 { pt3dadd( 28.9134, -491.288, -29.2236, 0.6 ) }
    dend_28 { pt3dadd( 28.6956, -492.005, -29.5741, 0.6 ) }
    dend_28 { pt3dadd( 28.2404, -493.563, -30.4006, 0.96 ) }
    dend_28 { pt3dadd( 27.9496, -494.604, -30.9688, 0.96 ) }
    dend_28 { pt3dadd( 27.381, -496.605, -32.177, 0.72 ) }
    dend_28 { pt3dadd( 26.8348, -498.536, -33.4701, 0.72 ) }
    dend_28 { pt3dadd( 26.3649, -500.058, -34.7349, 1.2 ) }
    dend_28 { pt3dadd( 25.915, -501.488, -36.0221, 1.2 ) }
    dend_28 { pt3dadd( 25.6303, -502.349, -36.8733, 1.2 ) }
    dend_28 { pt3dadd( 25.2517, -503.368, -37.9962, 1.08 ) }
    dend_28 { pt3dadd( 24.7244, -504.649, -39.5946, 0.84 ) }
    dend_28 { pt3dadd( 24.1589, -505.982, -41.5492, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 37.6642, -467.317, -23.9213, 0.72 ) }
    dend_26 { pt3dadd( 38.9057, -467.645, -25.4696, 0.72 ) }
    dend_26 { pt3dadd( 39.6487, -467.841, -26.3961, 0.72 ) }
    dend_26 { pt3dadd( 40.1268, -467.968, -26.9924, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 37.6642, -467.317, -23.9213, 0.48 ) }
    dend_25 { pt3dadd( 37.8268, -470.295, -23.8108, 0.48 ) }
    dend_25 { pt3dadd( 37.8469, -471.974, -23.7004, 0.96 ) }
    dend_25 { pt3dadd( 37.8331, -472.752, -23.6301, 0.96 ) }
    dend_25 { pt3dadd( 37.7591, -474.64, -23.4215, 0.48 ) }
    dend_25 { pt3dadd( 37.6952, -475.781, -23.2753, 0.48 ) }
    dend_25 { pt3dadd( 37.5854, -477.646, -23.0298, 0.96 ) }
    dend_25 { pt3dadd( 37.4453, -479.51, -22.7577, 0.96 ) }
    dend_25 { pt3dadd( 37.3372, -480.744, -22.5614, 0.96 ) }
    dend_25 { pt3dadd( 37.129, -482.588, -22.2371, 1.32 ) }
    dend_25 { pt3dadd( 36.8759, -484.435, -21.8797, 0.96 ) }
    dend_25 { pt3dadd( 36.7785, -485.159, -21.7441, 0.96 ) }
    dend_25 { pt3dadd( 36.6805, -486.029, -21.6008, 0.96 ) }
    dend_25 { pt3dadd( 36.5584, -487.46, -21.3983, 1.32 ) }
    dend_25 { pt3dadd( 36.4833, -488.969, -21.2429, 0.96 ) }
    dend_25 { pt3dadd( 36.4645, -490.62, -21.1405, 0.6 ) }
    dend_25 { pt3dadd( 36.4576, -491.85, -21.1638, 0.6 ) }
    dend_25 { pt3dadd( 36.4182, -493.378, -21.3778, 1.32 ) }
    dend_25 { pt3dadd( 36.3479, -494.977, -21.8007, 0.84 ) }
    dend_25 { pt3dadd( 36.2811, -496.307, -22.2573, 0.84 ) }
    dend_25 { pt3dadd( 36.2589, -496.908, -22.4962, 0.84 ) }
    dend_25 { pt3dadd( 36.1658, -499.304, -23.5312, 0.84 ) }
    dend_25 { pt3dadd( 36.0584, -501.802, -24.6555, 1.44 ) }
    dend_25 { pt3dadd( 35.895, -504.457, -25.8225, 0.96 ) }
    dend_25 { pt3dadd( 35.8184, -505.585, -26.2367, 0.96 ) }
    dend_25 { pt3dadd( 35.7046, -507.119, -26.6523, 0.96 ) }
    dend_25 { pt3dadd( 35.6349, -508.24, -26.8355, 0.96 ) }
    dend_25 { pt3dadd( 35.5924, -509.39, -26.8675, 0.96 ) }
    dend_25 { pt3dadd( 35.4901, -512.1, -26.6109, 0.72 ) }
    dend_25 { pt3dadd( 35.3704, -514.878, -26.1209, 1.08 ) }
    dend_25 { pt3dadd( 35.2818, -516.71, -25.7118, 0.72 ) }
    dend_25 { pt3dadd( 35.195, -518.426, -25.2733, 1.2 ) }
    dend_25 { pt3dadd( 35.1131, -520.403, -24.7419, 0.96 ) }
    dend_25 { pt3dadd( 35.0225, -523.504, -23.8822, 1.44 ) }
    dend_25 { pt3dadd( 34.9863, -525.621, -23.2946, 0.96 ) }
    dend_25 { pt3dadd( 34.9333, -526.839, -23.0068, 0.72 ) }
    dend_25 { pt3dadd( 34.7412, -529.888, -22.3867, 1.08 ) }
    dend_25 { pt3dadd( 34.5744, -531.721, -22.0677, 0.6 ) }
    dend_25 { pt3dadd( 34.4608, -532.929, -21.8588, 0.6 ) }
    dend_25 { pt3dadd( 34.3234, -534.404, -21.5994, 1.2 ) }
    dend_25 { pt3dadd( 34.0275, -537.793, -20.892, 0.72 ) }
    dend_25 { pt3dadd( 33.8791, -539.198, -20.5778, 1.08 ) }
    dend_25 { pt3dadd( 33.6084, -541.334, -20.0323, 0.96 ) }
    dend_25 { pt3dadd( 33.3043, -543.429, -19.4394, 0.72 ) }
    dend_25 { pt3dadd( 33.1393, -544.622, -19.0834, 0.72 ) }
    dend_25 { pt3dadd( 32.7773, -547.522, -18.1422, 0.72 ) }
    dend_25 { pt3dadd( 32.5531, -549.687, -17.3111, 0.72 ) }
    dend_25 { pt3dadd( 32.4376, -550.633, -16.9538, 1.2 ) }
    dend_25 { pt3dadd( 32.213, -551.978, -16.4987, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_61 nseg = 5
    dend_40 nseg = 5
    dend_77 nseg = 9
    dend_76 nseg = 3
    dend_72 nseg = 11
    dend_71 nseg = 5
    dend_68 nseg = 7
    dend_67 nseg = 5
    dend_62 nseg = 9
    dend_37 nseg = 3
    dend_20 nseg = 9
    dend_11 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 9
    dend_57 nseg = 5
    dend_44 nseg = 11
    dend_39 nseg = 7
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_8 nseg = 7
    dend_52 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 7
    dend_4 nseg = 7
    dend_53 nseg = 3
    dend_51 nseg = 7
    dend_46 nseg = 5
    dend_23 nseg = 7
    dend_50 nseg = 5
    dend_47 nseg = 3
    dend_48 nseg = 5
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L6_DBC_4765d943f4_0_0


