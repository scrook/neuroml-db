// Cell: bAC217_L23_BTC_65225ca4f8_0_0
/*
{
  "id" : "bAC217_L23_BTC_65225ca4f8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.414762, -11.6197, -1.62187, 2.64004", "0.384603, -10.5465, -1.46411, 4.71198", "0.354444, -9.47334, -1.30636, 5.74801", "0.324285, -8.40018, -1.1486, 7.28344", "0.294125, -7.32702, -0.990848, 9.16307", "0.263966, -6.25385, -0.833093, 10.6182", "0.233807, -5.18069, -0.675338, 11.6398", "0.203648, -4.10753, -0.517583, 12.315", "0.173489, -3.03436, -0.359828, 12.8408", "0.14333, -1.9612, -0.202073, 12.9638", "0.113171, -0.888035, -0.0443183, 12.9997", "0.083012, 0.185129, 0.113437, 12.9186", "0.052853, 1.25829, 0.271192, 12.6149", "0.0226939, 2.33146, 0.428947, 11.9889", "-0.00746517, 3.40462, 0.586702, 11.363", "-0.0376242, 4.47778, 0.744457, 10.7371", "-0.0677833, 5.55095, 0.902211, 10.104", "-0.0979424, 6.62411, 1.05997, 9.17803", "-0.128101, 7.69727, 1.21772, 8.07035", "-0.15826, 8.77044, 1.37548, 6.54703", "-0.18842, 9.8436, 1.53323, 5.23645" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.765137, 10.6536, 2.31562, 3.33", "-0.828206, 13.1812, 2.31562, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.87486, 4.4481, -11.9444, 1.11", "3.91665, 6.36133, -12.3817, 1.11", "5.21385, 8.47209, -13.0318, 0.83", "6.63922, 10.2951, -13.9863, 1.11", "7.96156, 11.6169, -15.1915, 0.56", "8.53351, 12.1886, -15.7128, 0.56", "9.10295, 12.7578, -16.2318, 0.83", "9.94805, 13.4642, -17.0607, 0.83", "11.6798, 14.6115, -18.9925, 0.56", "13.9104, 15.7406, -21.6904, 0.28", "18.6821, 20.6188, -26.5694, 0.28", "24.0735, 23.9951, -31.9314, 0.28", "29.4459, 27.4854, -37.2462, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.09513, -3.0174, -11.7344, 1.11", "-2.99842, -5.29369, -13.2424, 0.83", "-3.97664, -7.75881, -14.8755, 0.83", "-4.7415, -9.68632, -16.1524, 0.83", "-5.80741, -12.3724, -17.9319, 1.39", "-9.59318, -19.5031, -20.9132, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.62514, -12.5514, 1.00562, 2.78", "-2.13859, -14.5073, -2.01537, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.604862, -12.2154, 2.12562, 1.39", "1.54315, -14.3518, 3.26848, 1.39", "5.02548, -23.5235, 6.6074, 1.39", "6.93143, -28.5965, 7.98227, 1.39", "8.24051, -31.8029, 8.66149, 1.39", "10.4461, -37.0095, 9.67391, 1.11", "12.3719, -41.5557, 10.558, 1.39", "15.9953, -50.2871, 11.9271, 1.11", "17.9451, -55.0005, 12.2687, 1.11", "20.8478, -61.9844, 12.313, 1.11", "22.4861, -65.678, 12.2142, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.80514, 7.3776, 5.69562, 1.39", "-5.65326, 9.24772, 5.58068, 1.39", "-9.07871, 16.8008, 5.11644, 1.39", "-11.2854, 21.6664, 4.81738, 1.39", "-12.5854, 24.5331, 4.64119, 1.11", "-15.6825, 31.362, 4.22146, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.18842, 9.8436, 1.53323, 0.83", "-0.609797, 24.8377, 1.53323, 0.83", "-1.03117, 39.8318, 1.53323, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.828206, 13.1812, 2.31562, 1.39", "-1.95522, 15.4324, 2.99347, 1.39", "-4.24936, 20.0147, 4.37329, 1.39", "-6.84375, 25.1969, 5.93371, 1.39" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.828206, 13.1812, 2.31562, 1.39", "-0.405108, 15.6777, 5.47643, 1.39", "-0.135687, 17.8963, 8.4854, 1.11", "0.0215837, 19.1914, 10.2419, 1.11", "0.210523, 20.7472, 12.352, 1.39", "0.480784, 22.9728, 15.3703, 1.11", "0.653108, 24.3918, 17.2949, 0.83", "0.621593, 25.7917, 19.6617, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "29.4459, 27.4854, -37.2462, 0.28", "35.2659, 33.1316, -43.1452, 0.28", "40.7624, 40.6234, -47.1147, 0.28", "44.8554, 48.9232, -51.3596, 0.28", "48.886, 58.0249, -53.605, 0.28", "54.0564, 66.2669, -56.4541, 0.28", "60.012, 74.0218, -58.9537, 0.28", "66.5072, 80.8388, -62.4618, 0.28", "74.2559, 86.5402, -65.1053, 0.28", "81.7848, 92.1549, -68.4872, 0.28", "89.879, 95.9969, -72.7666, 0.28", "97.1009, 101.979, -76.2421, 0.28", "104.027, 108.544, -79.3149, 0.28", "110.398, 115.77, -82.2243, 0.28", "117.016, 121.714, -86.8327, 0.28", "123.744, 126.827, -92.1589, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "29.4459, 27.4854, -37.2462, 0.28", "36.5777, 33.6297, -43.9786, 0.28", "42.4253, 40.3054, -51.4495, 0.28", "48.2866, 46.8215, -59.0367, 0.28", "53.3749, 53.7943, -66.8113, 0.28", "56.9935, 59.6285, -76.1103, 0.28", "60.6155, 65.577, -85.3421, 0.28", "63.1563, 70.4956, -95.4437, 0.28", "63.4039, 76.377, -105.395, 0.28", "63.3519, 84.7762, -113.547, 0.28", "64.337, 92.7303, -122.037, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-9.59318, -19.5031, -20.9132, 0.83", "-15.0563, -30.9748, -27.4018, 0.83", "-20.3929, -43.5904, -31.7197, 0.83", "-25.362, -55.3257, -38.1719, 0.83", "-30.3189, -66.0921, -46.009, 0.83", "-32.9224, -76.3788, -55.3867, 0.83", "-34.7811, -85.0058, -66.3239, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-9.59318, -19.5031, -20.9132, 0.83", "-13.9268, -28.6397, -25.9872, 0.83", "-17.1404, -38.597, -30.4563, 0.83", "-21.9118, -47.5725, -35.3971, 0.83", "-25.5149, -55.8616, -42.0988, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.13859, -14.5073, -2.01537, 1.94", "-3.29676, -26.4488, 2.43821, 1.94", "-3.98949, -33.5914, 5.10201, 1.94", "-4.46697, -38.5145, 6.9381, 1.94" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "22.4861, -65.678, 12.2142, 0.83", "24.6126, -67.6124, 16.0069, 0.83", "28.8893, -71.1126, 22.4623, 0.83", "30.8482, -72.602, 25.4526, 0.83", "34.3375, -75.318, 31.5249, 0.83", "35.989, -76.6623, 34.6593, 0.83", "37.1901, -77.6397, 37.0095, 0.28", "39.1561, -79.1582, 40.6489, 1.39", "42.9936, -82.3357, 47.7253, 1.11", "48.5138, -87.1431, 58.2876, 0.56", "50.8658, -89.2951, 63.0633, 2.5", "52.3681, -90.7977, 66.2544, 2.5", "54.2706, -92.8901, 70.574, 0.28", "55.4708, -94.3168, 73.4317, 1.11", "56.1314, -95.148, 74.8477, 1.11", "60.1438, -100.285, 82.8429, 0.28", "60.5156, -100.771, 83.5741, 0.56", "62.2641, -103.11, 87.0774, 0.28", "64.6018, -106.145, 91.786, 3.33", "67.1135, -109.211, 96.2841, 0.28", "67.4043, -109.541, 96.686, 0.56", "71.5051, -114.084, 101.132, 0.28", "71.8435, -114.458, 101.458, 0.83", "74.8269, -117.708, 103.96, 0.28", "76.6009, -119.57, 105.251, 1.39", "86.6366, -129.633, 111.934, 0.28", "88.7966, -131.736, 113.272, 2.5", "92.9575, -135.634, 115.548, 0.28", "93.7882, -136.401, 115.943, 0.83", "98.2679, -140.404, 117.609, 0.28", "99.4173, -141.349, 117.919, 1.11", "103.838, -144.509, 118.579, 0.28", "105.568, -145.696, 118.79, 1.11", "109.205, -148.046, 119.022, 0.28", "111.237, -149.37, 119.109, 1.39", "119.924, -155.132, 119.0, 0.28", "120.705, -155.648, 118.981, 1.39" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "22.4861, -65.678, 12.2142, 0.83", "24.99, -71.919, 14.2256, 0.83", "26.6381, -76.2251, 15.6378, 0.83", "27.591, -78.754, 16.4348, 0.83", "28.7533, -81.7748, 17.3247, 0.83", "30.082, -85.2818, 18.2892, 0.83", "31.9097, -89.6685, 19.3942, 0.83", "34.8078, -95.5385, 20.9794, 0.83", "35.7888, -97.4333, 21.4373, 1.11", "37.0016, -99.8071, 21.9728, 0.83", "38.1595, -102.026, 22.427, 1.11", "42.6741, -110.112, 24.0789, 0.83", "44.2725, -112.622, 24.6477, 0.28", "44.4791, -112.907, 24.7164, 0.83", "45.367, -114.103, 25.0102, 0.28", "48.9147, -118.82, 26.2227, 0.83", "51.3887, -122.109, 27.0571, 0.56", "52.6537, -123.947, 27.5505, 0.83", "53.668, -125.537, 27.9747, 0.56", "55.882, -129.252, 28.9686, 1.11", "57.2615, -131.741, 29.6864, 0.56", "58.036, -133.311, 30.139, 0.83", "59.5034, -136.74, 31.1266, 0.28", "59.7861, -137.467, 31.3371, 0.83", "61.7894, -142.843, 32.8874, 1.94", "62.7235, -145.321, 33.5958, 1.11", "63.8629, -148.276, 34.3687, 0.56", "64.9699, -150.863, 35.0618, 0.83", "66.1512, -153.44, 35.7287, 0.56", "68.6143, -158.455, 37.0111, 1.39", "69.9138, -161.051, 37.6289, 0.56", "70.7497, -162.643, 37.9912, 0.83", "73.2485, -167.162, 39.1382, 0.28", "73.5956, -167.772, 39.3142, 0.83", "75.606, -171.269, 40.3831, 2.22", "81.3154, -181.035, 43.5993, 0.28", "83.192, -184.394, 44.7307, 1.39", "84.856, -187.575, 45.8609, 0.56", "86.3023, -190.574, 46.9481, 0.28", "86.9282, -191.948, 47.4853, 0.83", "88.2146, -194.985, 48.7802, 0.28", "90.4252, -200.564, 51.2759, 1.39", "92.1009, -205.231, 53.178, 0.28", "92.3325, -205.953, 53.4569, 0.83", "93.0599, -208.517, 54.4063, 0.28", "93.2789, -209.461, 54.7272, 0.83", "93.7686, -212.276, 55.549, 0.28", "94.0511, -214.354, 56.0978, 1.94", "94.4545, -218.855, 57.1213, 0.28", "94.5493, -220.661, 57.5155, 0.83", "94.8994, -224.143, 58.2722, 0.28", "95.1268, -225.715, 58.6157, 0.83", "95.4495, -227.837, 59.0688, 0.56", "96.3207, -232.904, 60.1126, 0.28", "96.5904, -234.181, 60.3441, 1.67", "98.5807, -241.645, 61.9991, 0.28", "98.997, -242.817, 62.3334, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.6825, 31.362, 4.22146, 0.83", "-16.8039, 32.4831, 5.97171, 0.83", "-18.4777, 34.0581, 8.64449, 0.83", "-22.2092, 38.3077, 15.7127, 0.83", "-22.7142, 38.9409, 16.8617, 0.83", "-24.183, 40.888, 20.4092, 0.83", "-26.3389, 43.8499, 25.9144, 0.83", "-27.7428, 45.6651, 29.557, 0.83", "-29.5218, 47.9796, 34.4291, 0.83", "-32.2725, 51.6643, 41.8164, 0.56", "-32.7196, 52.3791, 43.1013, 0.83", "-33.7683, 54.5632, 46.3995, 0.83", "-35.0237, 57.1793, 49.8765, 1.11", "-36.6, 60.0374, 53.1644, 0.28", "-37.4933, 61.3077, 54.3909, 1.11", "-39.8904, 64.0385, 56.507, 0.56", "-42.2778, 66.0724, 58.0291, 0.28", "-46.8668, 68.493, 60.045, 0.56", "-48.193, 68.9617, 60.5086, 0.56", "-52.9043, 70.2089, 61.9485, 2.22", "-58.5638, 71.2707, 63.8397, 0.28", "-62.4219, 71.7357, 65.0867, 0.83", "-69.3271, 72.3028, 67.2727, 0.28", "-70.8218, 72.4182, 67.7055, 0.56", "-72.627, 72.4893, 68.2229, 0.83", "-77.0136, 72.4889, 69.4442, 0.83", "-79.1919, 72.4685, 70.144, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.6825, 31.362, 4.22146, 0.83", "-19.4966, 32.1123, 5.14456, 0.83", "-22.1142, 32.5486, 5.65952, 0.56", "-24.1634, 32.8492, 6.01137, 0.56", "-27.5311, 33.4896, 6.71692, 0.56", "-28.6896, 33.7212, 6.99153, 0.56", "-32.0107, 34.5147, 7.80775, 0.56", "-33.6075, 34.9902, 8.32343, 0.56", "-34.1288, 35.1826, 8.51537, 0.56", "-38.0941, 37.1331, 10.126, 0.56", "-40.4669, 38.5657, 11.1074, 0.56", "-43.4429, 40.525, 12.4268, 0.56", "-45.8159, 42.2842, 13.6019, 0.56", "-48.8358, 44.6333, 15.1778, 0.83", "-51.7929, 47.0557, 16.7129, 1.11", "-52.8418, 47.9864, 17.224, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.03117, 39.8318, 1.53323, 0.647035", "-1.45255, 54.8258, 1.53323, 0.647035", "-1.87393, 69.8199, 1.53323, 0.647035" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-6.84375, 25.1969, 5.93371, 0.83", "-7.22177, 26.2077, 7.1937, 0.83", "-7.46245, 26.8049, 7.93982, 1.11", "-8.1932, 28.896, 11.0395, 0.56", "-8.54215, 29.9344, 12.5078, 0.83", "-8.81374, 30.8359, 13.7035, 0.83", "-9.21488, 32.2299, 15.5151, 0.83", "-9.54333, 33.4865, 17.0924, 1.39", "-10.4809, 37.4184, 21.7695, 0.83", "-10.75, 38.8578, 23.4459, 1.11", "-11.8621, 46.3019, 31.709, 0.28", "-12.1902, 48.6986, 34.3145, 1.67", "-12.6079, 51.8969, 37.6852, 0.28", "-12.7246, 52.7419, 38.5648, 0.83", "-13.1916, 56.4541, 42.1233, 0.28", "-13.4438, 58.6123, 44.1509, 0.28", "-13.6109, 60.0983, 45.4645, 0.83", "-13.7587, 61.135, 46.4175, 0.28", "-13.9929, 61.9647, 47.4666, 0.56", "-15.5235, 66.0558, 53.5784, 0.28", "-15.8862, 66.9697, 55.2788, 0.83", "-16.5988, 68.7365, 59.0311, 0.56", "-16.796, 69.3487, 60.3368, 1.39", "-17.7338, 72.627, 67.559, 0.28", "-17.8411, 73.1137, 68.5865, 1.39", "-18.459, 75.9205, 74.5203, 0.28", "-18.5481, 76.4781, 75.5223, 1.11", "-18.8956, 78.9828, 79.3222, 0.28", "-18.9387, 79.3212, 79.7593, 0.83", "-19.8692, 87.3056, 88.2, 0.28", "-20.0726, 88.89, 89.7545, 1.67", "-20.6809, 92.9202, 93.2271, 0.28", "-20.7505, 93.3898, 93.6286, 0.83", "-20.9853, 94.6301, 94.6363, 0.28", "-21.1325, 95.3124, 95.172, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.84375, 25.1969, 5.93371, 1.11", "-10.0195, 30.2673, 3.97082, 1.11", "-12.3148, 33.9318, 2.55219, 1.11", "-13.747, 36.2185, 1.66696, 1.11", "-16.1036, 39.9811, 0.210355, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.621593, 25.7917, 19.6617, 0.56", "-0.343381, 28.6709, 23.2444, 0.56", "-0.829965, 31.3706, 27.2401, 0.83", "-0.96928, 32.8039, 29.5453, 0.56", "-0.98283, 35.6347, 34.0551, 1.11", "-0.903205, 38.8183, 39.0054, 0.56", "-0.806868, 40.8826, 42.1115, 1.39", "-0.234795, 44.8658, 47.888, 0.28", "0.150112, 46.9872, 50.9877, 1.67", "0.765155, 49.903, 55.2466, 0.28", "0.882757, 50.5899, 56.0935, 0.56", "1.08725, 52.2702, 57.6984, 0.28", "1.12392, 52.6782, 58.0427, 0.83", "1.27564, 55.2128, 59.9681, 0.28", "1.41896, 57.2444, 61.4847, 1.67", "2.32278, 69.1352, 70.1828, 0.28", "2.52319, 72.0363, 72.3461, 2.22", "2.80851, 77.2484, 76.1862, 0.28", "2.84757, 78.1564, 76.849, 0.83", "2.98179, 82.2625, 79.776, 0.28", "2.9811, 83.8025, 80.8047, 0.56", "2.81244, 89.4441, 84.1809, 0.28", "2.64776, 91.286, 85.1895, 1.11", "2.25085, 94.4214, 86.6172, 0.28", "2.07266, 95.7158, 87.147, 0.83", "1.50552, 98.7703, 88.1489, 0.28", "0.724368, 102.654, 89.253, 1.11", "-1.20208, 111.505, 91.261, 0.28", "-1.52904, 112.737, 91.535, 0.28", "-2.04066, 114.407, 91.8956, 1.11", "-4.04071, 120.489, 93.2026, 0.28", "-4.21191, 120.951, 93.2965, 0.28", "-5.37935, 123.736, 93.7163, 1.39", "-6.9291, 126.451, 94.1886, 0.28", "-8.07625, 128.345, 94.6611, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "0.621593, 25.7917, 19.6617, 0.28", "1.35292, 29.6079, 22.2432, 0.28", "1.55853, 30.5878, 23.0117, 0.83", "2.02132, 32.2785, 24.4691, 1.11", "2.58139, 34.0951, 26.0367, 0.83", "2.84288, 34.847, 26.6681, 0.28", "3.03367, 35.3646, 27.1155, 0.28", "4.15313, 37.7907, 29.3886, 1.39", "5.18304, 39.6676, 31.4219, 0.83", "6.36753, 41.6533, 33.6301, 0.28", "6.88089, 42.4216, 34.4729, 0.83", "8.23808, 44.3381, 36.5159, 0.28", "9.75982, 46.2624, 38.552, 1.39", "11.5561, 48.3162, 40.6529, 0.28", "13.1296, 49.9503, 42.3019, 0.28", "14.3343, 51.0658, 43.4222, 0.56", "15.3041, 51.8552, 44.3651, 0.83", "17.3367, 53.3272, 46.279, 0.28", "17.6326, 53.5208, 46.5525, 0.83", "19.6184, 54.7264, 48.7604, 0.28", "20.5488, 55.2515, 49.9217, 0.83", "24.4136, 57.3526, 55.1672, 0.28", "24.8945, 57.6068, 55.8483, 1.39", "26.8176, 58.6745, 58.7359, 1.94", "30.4634, 60.792, 64.3494, 0.28", "30.9432, 61.1122, 65.1355, 0.56", "32.4849, 62.3212, 67.6083, 0.28", "33.0491, 62.834, 68.4419, 1.11", "34.7786, 64.5794, 71.0257, 0.28", "35.409, 65.3362, 72.0087, 1.39", "37.1896, 67.811, 74.5917, 0.28", "38.9729, 70.83, 77.2967, 0.56", "39.6377, 72.1477, 78.3077, 0.56", "40.5628, 74.227, 79.7109, 0.83", "41.5355, 76.7576, 81.1147, 0.28", "42.2386, 78.8627, 82.1296, 1.39", "43.4103, 83.0053, 83.7406, 0.28", "43.7056, 84.4996, 84.2471, 0.56", "44.0146, 86.3133, 84.8232, 0.28", "44.428, 88.7955, 85.6472, 1.39", "44.7254, 90.6547, 86.3554, 0.28", "44.8582, 91.5708, 86.7815, 0.56", "45.7099, 97.4755, 89.8771, 0.28", "45.8554, 98.4573, 90.4434, 1.39", "46.6175, 103.001, 93.2751, 0.28", "46.9816, 105.004, 94.5624, 0.83", "47.9878, 110.562, 97.9587, 0.28", "48.1026, 111.166, 98.3085, 0.56", "48.6091, 114.169, 99.6778, 0.28", "48.7469, 115.107, 100.016, 0.28", "49.0448, 117.331, 100.671, 1.39", "50.0111, 124.883, 102.504, 0.28", "50.2743, 127.172, 102.931, 1.11", "51.0467, 135.086, 104.192, 0.28", "51.1275, 136.11, 104.309, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-25.5149, -55.8616, -42.0988, 0.28", "-29.6932, -65.1967, -47.5288, 0.28", "-33.116, -75.4445, -51.8894, 0.28", "-36.6519, -85.0742, -57.3112, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.5149, -55.8616, -42.0988, 0.28", "-28.9221, -66.7285, -48.3019, 0.28", "-31.1141, -77.633, -54.9662, 0.28", "-30.8296, -88.5042, -62.0066, 0.28", "-28.6981, -97.4527, -70.9252, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.46697, -38.5145, 6.9381, 0.83", "-5.37881, -41.6386, 5.90555, 0.83", "-5.75624, -43.7681, 5.23826, 1.11", "-6.31502, -47.9131, 3.62884, 1.11", "-6.75032, -51.6038, 2.16973, 1.11", "-7.06385, -54.2621, 1.11876, 1.11", "-7.89894, -61.3423, -1.68044, 1.11", "-8.14197, -64.4509, -2.96743, 0.83", "-8.31484, -69.9857, -5.19859, 0.83", "-8.19058, -73.5296, -6.49121, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.46697, -38.5145, 6.9381, 1.11", "-4.50082, -40.2812, 9.3543, 1.11", "-4.4661, -41.0789, 10.6153, 1.11", "-4.44942, -42.569, 13.0344, 1.11", "-4.55101, -44.1986, 15.6537, 1.11", "-4.85964, -47.6593, 21.2379, 1.11", "-5.08954, -49.6033, 24.421, 1.11", "-5.35514, -51.2656, 27.2928, 0.83", "-5.47478, -52.0333, 28.6571, 0.83", "-5.64624, -53.717, 31.6498, 0.83", "-5.64308, -54.6908, 33.2257, 0.83", "-5.57376, -57.0249, 36.6653, 0.56", "-5.45191, -58.2987, 38.4884, 0.56", "-5.30477, -59.025, 39.524, 0.28", "-4.74676, -60.7273, 42.0069, 1.67", "-3.38692, -64.197, 47.4949, 0.28", "-3.02011, -65.0913, 49.127, 1.94", "-2.74618, -65.7204, 50.4353, 3.33", "-2.32756, -66.7599, 52.9807, 0.83", "-1.92664, -67.9133, 56.0833, 0.28", "-1.32362, -70.1881, 62.292, 2.22", "-0.737084, -72.6715, 69.1705, 0.28", "-0.564215, -73.4919, 71.511, 1.94", "-0.182606, -75.8893, 78.6214, 0.28", "-0.147082, -76.2731, 79.7837, 1.94", "-0.0644226, -77.5153, 83.647, 0.28", "-0.0486788, -77.6966, 84.1589, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-52.8418, 47.9864, 17.224, 0.28", "-54.3445, 50.0585, 17.6343, 0.28", "-55.4638, 51.5418, 18.0117, 0.56", "-56.2139, 52.5014, 18.2711, 0.83", "-57.1987, 53.4472, 18.6429, 1.67", "-58.5002, 54.6129, 19.0486, 0.56", "-59.2057, 55.2293, 19.241, 0.56", "-60.8228, 56.5141, 19.7082, 0.28", "-61.3197, 56.8926, 19.8498, 0.83", "-67.1737, 61.3037, 21.4543, 0.28", "-68.8896, 62.5958, 21.8874, 1.11", "-70.1962, 63.5633, 22.1513, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-52.8418, 47.9864, 17.224, 0.28", "-59.1393, 46.5437, 18.7698, 0.28", "-61.1158, 46.1074, 19.2995, 0.56", "-63.3055, 45.6261, 20.04, 0.28", "-64.4348, 45.3588, 20.4511, 0.56", "-67.8502, 44.5035, 21.9594, 0.28", "-70.2476, 43.954, 23.1006, 0.56", "-70.9967, 43.8349, 23.5698, 0.28", "-74.2435, 43.9293, 25.9276, 0.56", "-75.2934, 44.1439, 26.7261, 0.56", "-79.5729, 46.0046, 28.7343, 0.28", "-81.0911, 46.9412, 29.0239, 0.56", "-83.2105, 48.442, 28.9697, 1.67", "-89.4742, 53.1543, 28.053, 0.28", "-91.3631, 54.6833, 27.6097, 1.39", "-102.471, 64.0807, 24.1532, 0.28", "-103.376, 64.8716, 23.7627, 0.83", "-109.246, 69.808, 20.7201, 0.28", "-110.012, 70.4103, 20.2245, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-16.1036, 39.9811, 0.210355, 0.56", "-17.1992, 42.7141, -0.345542, 0.56", "-17.7068, 43.9801, -0.603051, 0.83", "-18.253, 45.3427, -0.880215, 0.28", "-18.7683, 46.6281, -1.14165, 0.56", "-20.3098, 50.4733, -1.92377, 0.56", "-21.5376, 53.536, -2.54674, 0.56", "-25.0818, 62.8247, -3.47407, 0.56" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-16.1036, 39.9811, 0.210355, 0.83", "-17.2892, 47.5656, -5.46653, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.19058, -73.5296, -6.49121, 0.83", "-10.2591, -77.1326, -7.57758, 0.83", "-12.7455, -83.0981, -9.39524, 0.83", "-13.8559, -85.9612, -10.2654, 0.83", "-15.0236, -88.9722, -11.1805, 0.83", "-17.3276, -94.9132, -12.9863, 0.83", "-19.1408, -99.5881, -14.4073, 0.83", "-21.2953, -106.738, -16.6118, 0.83", "-22.1634, -110.773, -17.9468, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-8.19058, -73.5296, -6.49121, 0.83", "-8.95698, -80.6978, -4.98468, 0.83", "-9.19666, -83.9399, -4.27528, 0.83", "-9.24944, -85.1707, -3.95216, 0.56", "-9.41987, -90.3527, -2.40454, 0.56", "-9.43674, -91.8901, -1.92999, 0.56", "-9.43351, -96.2149, -0.601651, 0.56", "-9.40323, -99.5239, 0.337004, 0.56", "-9.36706, -102.501, 1.34195, 0.56", "-9.44515, -105.476, 2.4475, 0.28", "-9.59684, -107.392, 3.2115, 0.83", "-9.77346, -109.047, 3.85605, 0.83", "-10.475, -113.862, 5.60714, 0.28", "-10.8381, -115.949, 6.24655, 0.83", "-12.2186, -123.344, 8.20302, 0.28", "-12.4747, -124.704, 8.51613, 1.11", "-13.1529, -128.833, 9.39749, 0.28", "-13.4598, -131.303, 9.86597, 1.39", "-13.7943, -139.098, 11.1437, 0.28", "-13.7639, -139.946, 11.2782, 1.39", "-13.4855, -141.626, 11.5556, 1.94", "-12.2131, -146.555, 12.5117, 0.28", "-11.7348, -147.883, 12.8061, 1.11", "-9.98137, -151.684, 13.7218, 0.28", "-9.67606, -152.217, 13.8614, 0.83", "-6.22025, -157.885, 15.1139, 0.28", "-5.44514, -159.067, 15.3312, 0.28", "-4.71599, -160.091, 15.3912, 0.56", "-3.83363, -161.302, 15.2929, 0.28", "-3.30471, -161.968, 15.0502, 0.83", "-1.14907, -164.228, 13.6484, 0.28", "-0.974975, -164.371, 13.4892, 0.56", "0.175548, -165.247, 12.3853, 0.28", "0.978078, -165.836, 11.6203, 0.56", "3.92534, -167.843, 9.13539, 0.28", "4.11584, -167.967, 8.97653, 0.56", "5.59188, -168.962, 7.78283, 0.28", "6.59671, -169.634, 6.97259, 0.83", "9.83174, -171.738, 4.40225, 0.28", "13.7373, -174.199, 1.31523, 0.28", "14.9205, -174.895, 0.283316, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-25.0818, 62.8247, -3.47407, 0.56", "-29.6388, 72.0374, -5.27017, 0.56", "-35.4387, 80.626, -6.02613, 0.56", "-39.564, 90.1861, -7.07949, 0.56", "-44.2687, 99.2075, -9.31309, 0.56", "-50.5358, 107.273, -10.9771, 0.56", "-56.7844, 115.478, -11.9806, 0.56", "-62.5537, 124.038, -13.133, 0.56", "-68.5466, 132.521, -13.2065, 0.56", "-72.9573, 141.94, -12.0598, 0.56", "-78.2908, 150.857, -12.7879, 0.56", "-84.5884, 159.081, -12.3007, 0.56", "-90.9768, 167.195, -13.0769, 0.56", "-97.0591, 175.301, -15.1802, 0.56", "-103.067, 183.004, -18.4956, 0.56", "-109.526, 190.715, -20.8096, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-25.0818, 62.8247, -3.47407, 0.28", "-27.4768, 70.8298, -4.52409, 0.56", "-30.5392, 78.6486, -5.00249, 0.56", "-33.6168, 86.4733, -4.62046, 0.56", "-37.0166, 94.1204, -5.29207, 0.56", "-40.1467, 101.708, -7.00166, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.2892, 47.5656, -5.46653, 0.56", "-18.8749, 49.2606, -8.49496, 0.56", "-19.7668, 50.2851, -10.1388, 0.56", "-20.6756, 51.2813, -11.6856, 0.28", "-22.3028, 52.9223, -14.1936, 0.83", "-25.8248, 56.4451, -19.6031, 0.56", "-26.7656, 57.4409, -21.0335, 0.56", "-27.5054, 58.2385, -22.1124, 0.56", "-28.1844, 59.0236, -23.1064, 0.56", "-28.8401, 59.9801, -24.1233, 0.56", "-30.8433, 63.3373, -27.0032, 0.56", "-31.6766, 64.6536, -27.9338, 0.56", "-32.3063, 65.6868, -28.7112, 0.56", "-32.8907, 66.7612, -29.5153, 0.83", "-34.614, 70.5419, -32.1544, 0.28", "-35.2715, 72.2222, -33.2307, 0.56", "-38.2387, 78.9494, -40.4271, 0.56", "-40.641, 86.4791, -47.0871, 0.56", "-42.6841, 94.4551, -53.3831, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.2892, 47.5656, -5.46653, 0.56", "-17.0726, 49.0868, -6.07646, 0.56", "-16.8626, 51.2123, -6.993, 0.56", "-16.7226, 53.1482, -7.86251, 0.56", "-16.6492, 55.3201, -8.84746, 0.56", "-16.5841, 59.9456, -10.9175, 0.56", "-16.6092, 63.1188, -12.2903, 0.56", "-16.6702, 65.2141, -13.2351, 0.56", "-16.7473, 67.5283, -14.2595, 0.56", "-16.8201, 68.7216, -14.7438, 0.56", "-16.9547, 70.3997, -15.3766, 0.56", "-17.1782, 72.3592, -16.1625, 0.56", "-17.5343, 75.3994, -17.2665, 0.56", "-17.61, 76.4013, -17.6438, 0.28", "-17.6714, 77.3979, -18.0257, 0.56", "-17.77, 80.6087, -19.3261, 0.56", "-17.8607, 83.6308, -20.6716, 0.56", "-19.1577, 92.2781, -23.9213, 0.56", "-18.5085, 100.723, -27.7526, 0.56", "-17.3897, 109.299, -31.1939, 0.56", "-17.3887, 117.089, -36.1615, 0.56", "-16.362, 125.93, -38.9825, 0.56", "-15.3674, 134.975, -41.1787, 0.56", "-13.474, 143.495, -44.3952, 0.56", "-10.873, 152.36, -45.8086, 0.56", "-7.64331, 160.986, -47.2511, 0.56", "-3.29562, 168.987, -48.9659, 0.56", "2.17924, 176.035, -51.1673, 0.56", "6.86155, 184.001, -51.9292, 0.56", "11.3551, 192.11, -52.4644, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-22.1634, -110.773, -17.9468, 0.83", "-23.4782, -115.624, -15.9358, 0.83", "-24.3742, -118.457, -15.3777, 0.83", "-24.9989, -120.472, -15.141, 0.83", "-25.4947, -122.034, -15.0494, 0.83", "-25.9948, -123.62, -15.0227, 0.83", "-26.994, -126.765, -15.0333, 0.83", "-29.4333, -133.921, -15.4251, 0.83", "-30.8369, -138.102, -15.6732, 0.83", "-32.8923, -144.396, -16.0367, 0.83", "-33.9716, -147.812, -16.2645, 1.11", "-35.0254, -151.414, -16.5347, 0.83", "-36.134, -155.482, -16.8541, 0.83", "-37.4288, -160.652, -17.2015, 0.83", "-37.9689, -162.943, -17.3418, 0.83", "-39.4018, -169.766, -17.6521, 0.83", "-39.6591, -171.1, -17.7038, 0.83", "-40.9682, -176.833, -18.0267, 0.83", "-41.4038, -178.674, -18.1763, 0.83", "-43.2417, -185.726, -18.9277, 0.83", "-45.7342, -194.78, -19.947, 0.83", "-46.6002, -197.812, -20.2903, 0.83", "-49.1138, -206.297, -21.34, 0.83", "-50.1572, -209.673, -21.8185, 0.83", "-51.4997, -213.564, -22.4299, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-22.1634, -110.773, -17.9468, 0.83", "-23.9178, -111.737, -19.3515, 0.83", "-25.3163, -112.622, -20.3309, 0.83", "-29.0959, -114.902, -23.1749, 0.56", "-30.1393, -115.495, -23.9807, 0.56", "-31.4293, -116.181, -25.0248, 0.56", "-33.3214, -117.186, -26.5563, 0.56", "-35.2678, -118.223, -28.3165, 0.56", "-37.0903, -119.224, -30.0146, 0.56", "-39.3122, -120.352, -31.759, 0.56", "-40.7751, -121.035, -33.036, 0.83", "-48.4419, -124.568, -38.6588, 0.83", "-57.2167, -126.441, -43.2997, 0.83", "-65.3295, -127.424, -49.218, 0.83", "-73.2495, -129.192, -55.2309, 0.83", "-80.9082, -131.031, -61.555, 0.83", "-88.6947, -130.58, -67.9507, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-51.4997, -213.564, -22.4299, 0.56", "-52.3082, -218.097, -23.182, 0.56", "-52.9113, -221.478, -23.743, 0.56", "-53.1331, -222.722, -23.9494, 0.56", "-53.8668, -226.836, -24.6319, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-51.4997, -213.564, -22.4299, 0.56", "-51.3258, -214.423, -21.2111, 0.56", "-51.1868, -215.311, -20.0413, 0.56", "-50.7771, -218.276, -16.2785, 0.56", "-50.6646, -219.443, -14.8906, 0.28", "-50.6328, -219.714, -14.5644, 0.83", "-50.4514, -221.27, -12.6993, 0.28", "-50.3935, -221.844, -11.9441, 0.56", "-50.3325, -222.79, -10.6164, 0.28", "-50.3249, -223.452, -9.76263, 0.56", "-50.3581, -224.77, -8.17522, 0.28", "-50.3421, -225.055, -7.8658, 0.56", "-50.1532, -226.362, -6.56896, 0.28", "-49.8281, -227.75, -5.29607, 1.11", "-49.6478, -228.442, -4.73466, 1.11", "-49.2091, -230.1, -3.51074, 0.56", "-48.1238, -234.506, -0.494122, 0.28", "-47.8873, -235.39, 0.0877753, 1.39", "-47.2747, -237.504, 1.37106, 0.28", "-46.8965, -238.724, 2.07421, 1.11", "-46.2101, -240.978, 3.40676, 0.28", "-45.9571, -241.866, 3.97021, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-53.8668, -226.836, -24.6319, 0.56", "-54.8568, -229.648, -24.6831, 0.56", "-55.5711, -231.865, -24.7939, 0.56", "-56.3054, -234.215, -24.9459, 0.56", "-57.5608, -238.234, -25.2058, 0.56", "-57.9575, -239.505, -25.288, 0.56", "-59.1798, -243.418, -25.541, 0.56", "-59.5344, -244.694, -25.6431, 0.56", "-59.7943, -245.702, -25.7426, 0.56", "-61.2899, -254.492, -25.2741, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-53.8668, -226.836, -24.6319, 0.28", "-54.2226, -229.483, -23.0537, 0.28", "-54.4154, -230.457, -22.377, 0.56", "-54.7548, -232.182, -21.1609, 0.28", "-54.9721, -233.32, -20.2857, 0.28", "-55.2654, -234.857, -19.1047, 0.28", "-55.6518, -236.881, -17.5484, 0.56", "-56.2251, -239.136, -15.8685, 0.28", "-56.5954, -240.6, -14.7204, 0.28", "-56.8953, -241.963, -13.6556, 0.56", "-56.8978, -251.221, -8.52165, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BTC_65225ca4f8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.450000697082259)
    connect dend_25(0), soma_0(0.450000697082259)
    connect dend_20(0), soma_0(0.450000697082259)
    connect dend_8(0), soma_0(0.450000697082259)
    connect dend_5(0), soma_0(0.450000697082259)
    connect dend_0(0), soma_0(0.450000697082259)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.414762, -11.6197, -1.62187, 2.64004 ) }
    soma_0 { pt3dadd( 0.384603, -10.5465, -1.46411, 4.71198 ) }
    soma_0 { pt3dadd( 0.354444, -9.47334, -1.30636, 5.74801 ) }
    soma_0 { pt3dadd( 0.324285, -8.40018, -1.1486, 7.28344 ) }
    soma_0 { pt3dadd( 0.294125, -7.32702, -0.990848, 9.16307 ) }
    soma_0 { pt3dadd( 0.263966, -6.25385, -0.833093, 10.6182 ) }
    soma_0 { pt3dadd( 0.233807, -5.18069, -0.675338, 11.6398 ) }
    soma_0 { pt3dadd( 0.203648, -4.10753, -0.517583, 12.315 ) }
    soma_0 { pt3dadd( 0.173489, -3.03436, -0.359828, 12.8408 ) }
    soma_0 { pt3dadd( 0.14333, -1.9612, -0.202073, 12.9638 ) }
    soma_0 { pt3dadd( 0.113171, -0.888035, -0.0443183, 12.9997 ) }
    soma_0 { pt3dadd( 0.083012, 0.185129, 0.113437, 12.9186 ) }
    soma_0 { pt3dadd( 0.052853, 1.25829, 0.271192, 12.6149 ) }
    soma_0 { pt3dadd( 0.0226939, 2.33146, 0.428947, 11.9889 ) }
    soma_0 { pt3dadd( -0.00746517, 3.40462, 0.586702, 11.363 ) }
    soma_0 { pt3dadd( -0.0376242, 4.47778, 0.744457, 10.7371 ) }
    soma_0 { pt3dadd( -0.0677833, 5.55095, 0.902211, 10.104 ) }
    soma_0 { pt3dadd( -0.0979424, 6.62411, 1.05997, 9.17803 ) }
    soma_0 { pt3dadd( -0.128101, 7.69727, 1.21772, 8.07035 ) }
    soma_0 { pt3dadd( -0.15826, 8.77044, 1.37548, 6.54703 ) }
    soma_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 5.23645 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.765137, 10.6536, 2.31562, 3.33 ) }
    dend_28 { pt3dadd( -0.828206, 13.1812, 2.31562, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.87486, 4.4481, -11.9444, 1.11 ) }
    dend_25 { pt3dadd( 3.91665, 6.36133, -12.3817, 1.11 ) }
    dend_25 { pt3dadd( 5.21385, 8.47209, -13.0318, 0.83 ) }
    dend_25 { pt3dadd( 6.63922, 10.2951, -13.9863, 1.11 ) }
    dend_25 { pt3dadd( 7.96156, 11.6169, -15.1915, 0.56 ) }
    dend_25 { pt3dadd( 8.53351, 12.1886, -15.7128, 0.56 ) }
    dend_25 { pt3dadd( 9.10295, 12.7578, -16.2318, 0.83 ) }
    dend_25 { pt3dadd( 9.94805, 13.4642, -17.0607, 0.83 ) }
    dend_25 { pt3dadd( 11.6798, 14.6115, -18.9925, 0.56 ) }
    dend_25 { pt3dadd( 13.9104, 15.7406, -21.6904, 0.28 ) }
    dend_25 { pt3dadd( 18.6821, 20.6188, -26.5694, 0.28 ) }
    dend_25 { pt3dadd( 24.0735, 23.9951, -31.9314, 0.28 ) }
    dend_25 { pt3dadd( 29.4459, 27.4854, -37.2462, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.09513, -3.0174, -11.7344, 1.11 ) }
    dend_20 { pt3dadd( -2.99842, -5.29369, -13.2424, 0.83 ) }
    dend_20 { pt3dadd( -3.97664, -7.75881, -14.8755, 0.83 ) }
    dend_20 { pt3dadd( -4.7415, -9.68632, -16.1524, 0.83 ) }
    dend_20 { pt3dadd( -5.80741, -12.3724, -17.9319, 1.39 ) }
    dend_20 { pt3dadd( -9.59318, -19.5031, -20.9132, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.62514, -12.5514, 1.00562, 2.78 ) }
    dend_8 { pt3dadd( -2.13859, -14.5073, -2.01537, 2.22 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.604862, -12.2154, 2.12562, 1.39 ) }
    dend_5 { pt3dadd( 1.54315, -14.3518, 3.26848, 1.39 ) }
    dend_5 { pt3dadd( 5.02548, -23.5235, 6.6074, 1.39 ) }
    dend_5 { pt3dadd( 6.93143, -28.5965, 7.98227, 1.39 ) }
    dend_5 { pt3dadd( 8.24051, -31.8029, 8.66149, 1.39 ) }
    dend_5 { pt3dadd( 10.4461, -37.0095, 9.67391, 1.11 ) }
    dend_5 { pt3dadd( 12.3719, -41.5557, 10.558, 1.39 ) }
    dend_5 { pt3dadd( 15.9953, -50.2871, 11.9271, 1.11 ) }
    dend_5 { pt3dadd( 17.9451, -55.0005, 12.2687, 1.11 ) }
    dend_5 { pt3dadd( 20.8478, -61.9844, 12.313, 1.11 ) }
    dend_5 { pt3dadd( 22.4861, -65.678, 12.2142, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.80514, 7.3776, 5.69562, 1.39 ) }
    dend_0 { pt3dadd( -5.65326, 9.24772, 5.58068, 1.39 ) }
    dend_0 { pt3dadd( -9.07871, 16.8008, 5.11644, 1.39 ) }
    dend_0 { pt3dadd( -11.2854, 21.6664, 4.81738, 1.39 ) }
    dend_0 { pt3dadd( -12.5854, 24.5331, 4.64119, 1.11 ) }
    dend_0 { pt3dadd( -15.6825, 31.362, 4.22146, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -0.609797, 24.8377, 1.53323, 0.83 ) }
    axon_0 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.828206, 13.1812, 2.31562, 1.39 ) }
    dend_32 { pt3dadd( -1.95522, 15.4324, 2.99347, 1.39 ) }
    dend_32 { pt3dadd( -4.24936, 20.0147, 4.37329, 1.39 ) }
    dend_32 { pt3dadd( -6.84375, 25.1969, 5.93371, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.828206, 13.1812, 2.31562, 1.39 ) }
    dend_29 { pt3dadd( -0.405108, 15.6777, 5.47643, 1.39 ) }
    dend_29 { pt3dadd( -0.135687, 17.8963, 8.4854, 1.11 ) }
    dend_29 { pt3dadd( 0.0215837, 19.1914, 10.2419, 1.11 ) }
    dend_29 { pt3dadd( 0.210523, 20.7472, 12.352, 1.39 ) }
    dend_29 { pt3dadd( 0.480784, 22.9728, 15.3703, 1.11 ) }
    dend_29 { pt3dadd( 0.653108, 24.3918, 17.2949, 0.83 ) }
    dend_29 { pt3dadd( 0.621593, 25.7917, 19.6617, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 29.4459, 27.4854, -37.2462, 0.28 ) }
    dend_27 { pt3dadd( 35.2659, 33.1316, -43.1452, 0.28 ) }
    dend_27 { pt3dadd( 40.7624, 40.6234, -47.1147, 0.28 ) }
    dend_27 { pt3dadd( 44.8554, 48.9232, -51.3596, 0.28 ) }
    dend_27 { pt3dadd( 48.886, 58.0249, -53.605, 0.28 ) }
    dend_27 { pt3dadd( 54.0564, 66.2669, -56.4541, 0.28 ) }
    dend_27 { pt3dadd( 60.012, 74.0218, -58.9537, 0.28 ) }
    dend_27 { pt3dadd( 66.5072, 80.8388, -62.4618, 0.28 ) }
    dend_27 { pt3dadd( 74.2559, 86.5402, -65.1053, 0.28 ) }
    dend_27 { pt3dadd( 81.7848, 92.1549, -68.4872, 0.28 ) }
    dend_27 { pt3dadd( 89.879, 95.9969, -72.7666, 0.28 ) }
    dend_27 { pt3dadd( 97.1009, 101.979, -76.2421, 0.28 ) }
    dend_27 { pt3dadd( 104.027, 108.544, -79.3149, 0.28 ) }
    dend_27 { pt3dadd( 110.398, 115.77, -82.2243, 0.28 ) }
    dend_27 { pt3dadd( 117.016, 121.714, -86.8327, 0.28 ) }
    dend_27 { pt3dadd( 123.744, 126.827, -92.1589, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 29.4459, 27.4854, -37.2462, 0.28 ) }
    dend_26 { pt3dadd( 36.5777, 33.6297, -43.9786, 0.28 ) }
    dend_26 { pt3dadd( 42.4253, 40.3054, -51.4495, 0.28 ) }
    dend_26 { pt3dadd( 48.2866, 46.8215, -59.0367, 0.28 ) }
    dend_26 { pt3dadd( 53.3749, 53.7943, -66.8113, 0.28 ) }
    dend_26 { pt3dadd( 56.9935, 59.6285, -76.1103, 0.28 ) }
    dend_26 { pt3dadd( 60.6155, 65.577, -85.3421, 0.28 ) }
    dend_26 { pt3dadd( 63.1563, 70.4956, -95.4437, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( 63.4039, 76.377, -105.395, 0.28 ) }
    dend_26 { pt3dadd( 63.3519, 84.7762, -113.547, 0.28 ) }
    dend_26 { pt3dadd( 64.337, 92.7303, -122.037, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -9.59318, -19.5031, -20.9132, 0.83 ) }
    dend_24 { pt3dadd( -15.0563, -30.9748, -27.4018, 0.83 ) }
    dend_24 { pt3dadd( -20.3929, -43.5904, -31.7197, 0.83 ) }
    dend_24 { pt3dadd( -25.362, -55.3257, -38.1719, 0.83 ) }
    dend_24 { pt3dadd( -30.3189, -66.0921, -46.009, 0.83 ) }
    dend_24 { pt3dadd( -32.9224, -76.3788, -55.3867, 0.83 ) }
    dend_24 { pt3dadd( -34.7811, -85.0058, -66.3239, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -9.59318, -19.5031, -20.9132, 0.83 ) }
    dend_21 { pt3dadd( -13.9268, -28.6397, -25.9872, 0.83 ) }
    dend_21 { pt3dadd( -17.1404, -38.597, -30.4563, 0.83 ) }
    dend_21 { pt3dadd( -21.9118, -47.5725, -35.3971, 0.83 ) }
    dend_21 { pt3dadd( -25.5149, -55.8616, -42.0988, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.13859, -14.5073, -2.01537, 1.94 ) }
    dend_9 { pt3dadd( -3.29676, -26.4488, 2.43821, 1.94 ) }
    dend_9 { pt3dadd( -3.98949, -33.5914, 5.10201, 1.94 ) }
    dend_9 { pt3dadd( -4.46697, -38.5145, 6.9381, 1.94 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 19/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 22.4861, -65.678, 12.2142, 0.83 ) }
    dend_7 { pt3dadd( 24.6126, -67.6124, 16.0069, 0.83 ) }
    dend_7 { pt3dadd( 28.8893, -71.1126, 22.4623, 0.83 ) }
    dend_7 { pt3dadd( 30.8482, -72.602, 25.4526, 0.83 ) }
    dend_7 { pt3dadd( 34.3375, -75.318, 31.5249, 0.83 ) }
    dend_7 { pt3dadd( 35.989, -76.6623, 34.6593, 0.83 ) }
    dend_7 { pt3dadd( 37.1901, -77.6397, 37.0095, 0.28 ) }
    dend_7 { pt3dadd( 39.1561, -79.1582, 40.6489, 1.39 ) }
    dend_7 { pt3dadd( 42.9936, -82.3357, 47.7253, 1.11 ) }
    dend_7 { pt3dadd( 48.5138, -87.1431, 58.2876, 0.56 ) }
    dend_7 { pt3dadd( 50.8658, -89.2951, 63.0633, 2.5 ) }
    dend_7 { pt3dadd( 52.3681, -90.7977, 66.2544, 2.5 ) }
    dend_7 { pt3dadd( 54.2706, -92.8901, 70.574, 0.28 ) }
    dend_7 { pt3dadd( 55.4708, -94.3168, 73.4317, 1.11 ) }
    dend_7 { pt3dadd( 56.1314, -95.148, 74.8477, 1.11 ) }
    dend_7 { pt3dadd( 60.1438, -100.285, 82.8429, 0.28 ) }
    dend_7 { pt3dadd( 60.5156, -100.771, 83.5741, 0.56 ) }
    dend_7 { pt3dadd( 62.2641, -103.11, 87.0774, 0.28 ) }
    dend_7 { pt3dadd( 64.6018, -106.145, 91.786, 3.33 ) }
    dend_7 { pt3dadd( 67.1135, -109.211, 96.2841, 0.28 ) }
    dend_7 { pt3dadd( 67.4043, -109.541, 96.686, 0.56 ) }
    dend_7 { pt3dadd( 71.5051, -114.084, 101.132, 0.28 ) }
    dend_7 { pt3dadd( 71.8435, -114.458, 101.458, 0.83 ) }
    dend_7 { pt3dadd( 74.8269, -117.708, 103.96, 0.28 ) }
    dend_7 { pt3dadd( 76.6009, -119.57, 105.251, 1.39 ) }
    dend_7 { pt3dadd( 86.6366, -129.633, 111.934, 0.28 ) }
    dend_7 { pt3dadd( 88.7966, -131.736, 113.272, 2.5 ) }
    dend_7 { pt3dadd( 92.9575, -135.634, 115.548, 0.28 ) }
    dend_7 { pt3dadd( 93.7882, -136.401, 115.943, 0.83 ) }
    dend_7 { pt3dadd( 98.2679, -140.404, 117.609, 0.28 ) }
    dend_7 { pt3dadd( 99.4173, -141.349, 117.919, 1.11 ) }
    dend_7 { pt3dadd( 103.838, -144.509, 118.579, 0.28 ) }
    dend_7 { pt3dadd( 105.568, -145.696, 118.79, 1.11 ) }
    dend_7 { pt3dadd( 109.205, -148.046, 119.022, 0.28 ) }
    dend_7 { pt3dadd( 111.237, -149.37, 119.109, 1.39 ) }
    dend_7 { pt3dadd( 119.924, -155.132, 119.0, 0.28 ) }
    dend_7 { pt3dadd( 120.705, -155.648, 118.981, 1.39 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 56/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 22.4861, -65.678, 12.2142, 0.83 ) }
    dend_6 { pt3dadd( 24.99, -71.919, 14.2256, 0.83 ) }
    dend_6 { pt3dadd( 26.6381, -76.2251, 15.6378, 0.83 ) }
    dend_6 { pt3dadd( 27.591, -78.754, 16.4348, 0.83 ) }
    dend_6 { pt3dadd( 28.7533, -81.7748, 17.3247, 0.83 ) }
    dend_6 { pt3dadd( 30.082, -85.2818, 18.2892, 0.83 ) }
    dend_6 { pt3dadd( 31.9097, -89.6685, 19.3942, 0.83 ) }
    dend_6 { pt3dadd( 34.8078, -95.5385, 20.9794, 0.83 ) }
    dend_6 { pt3dadd( 35.7888, -97.4333, 21.4373, 1.11 ) }
    dend_6 { pt3dadd( 37.0016, -99.8071, 21.9728, 0.83 ) }
    dend_6 { pt3dadd( 38.1595, -102.026, 22.427, 1.11 ) }
    dend_6 { pt3dadd( 42.6741, -110.112, 24.0789, 0.83 ) }
    dend_6 { pt3dadd( 44.2725, -112.622, 24.6477, 0.28 ) }
    dend_6 { pt3dadd( 44.4791, -112.907, 24.7164, 0.83 ) }
    dend_6 { pt3dadd( 45.367, -114.103, 25.0102, 0.28 ) }
    dend_6 { pt3dadd( 48.9147, -118.82, 26.2227, 0.83 ) }
    dend_6 { pt3dadd( 51.3887, -122.109, 27.0571, 0.56 ) }
    dend_6 { pt3dadd( 52.6537, -123.947, 27.5505, 0.83 ) }
    dend_6 { pt3dadd( 53.668, -125.537, 27.9747, 0.56 ) }
    dend_6 { pt3dadd( 55.882, -129.252, 28.9686, 1.11 ) }
    dend_6 { pt3dadd( 57.2615, -131.741, 29.6864, 0.56 ) }
    dend_6 { pt3dadd( 58.036, -133.311, 30.139, 0.83 ) }
    dend_6 { pt3dadd( 59.5034, -136.74, 31.1266, 0.28 ) }
    dend_6 { pt3dadd( 59.7861, -137.467, 31.3371, 0.83 ) }
    dend_6 { pt3dadd( 61.7894, -142.843, 32.8874, 1.94 ) }
    dend_6 { pt3dadd( 62.7235, -145.321, 33.5958, 1.11 ) }
    dend_6 { pt3dadd( 63.8629, -148.276, 34.3687, 0.56 ) }
    dend_6 { pt3dadd( 64.9699, -150.863, 35.0618, 0.83 ) }
    dend_6 { pt3dadd( 66.1512, -153.44, 35.7287, 0.56 ) }
    dend_6 { pt3dadd( 68.6143, -158.455, 37.0111, 1.39 ) }
    dend_6 { pt3dadd( 69.9138, -161.051, 37.6289, 0.56 ) }
    dend_6 { pt3dadd( 70.7497, -162.643, 37.9912, 0.83 ) }
    dend_6 { pt3dadd( 73.2485, -167.162, 39.1382, 0.28 ) }
    dend_6 { pt3dadd( 73.5956, -167.772, 39.3142, 0.83 ) }
    dend_6 { pt3dadd( 75.606, -171.269, 40.3831, 2.22 ) }
    dend_6 { pt3dadd( 81.3154, -181.035, 43.5993, 0.28 ) }
    dend_6 { pt3dadd( 83.192, -184.394, 44.7307, 1.39 ) }
    dend_6 { pt3dadd( 84.856, -187.575, 45.8609, 0.56 ) }
    dend_6 { pt3dadd( 86.3023, -190.574, 46.9481, 0.28 ) }
    dend_6 { pt3dadd( 86.9282, -191.948, 47.4853, 0.83 ) }
    dend_6 { pt3dadd( 88.2146, -194.985, 48.7802, 0.28 ) }
    dend_6 { pt3dadd( 90.4252, -200.564, 51.2759, 1.39 ) }
    dend_6 { pt3dadd( 92.1009, -205.231, 53.178, 0.28 ) }
    dend_6 { pt3dadd( 92.3325, -205.953, 53.4569, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 93.0599, -208.517, 54.4063, 0.28 ) }
    dend_6 { pt3dadd( 93.2789, -209.461, 54.7272, 0.83 ) }
    dend_6 { pt3dadd( 93.7686, -212.276, 55.549, 0.28 ) }
    dend_6 { pt3dadd( 94.0511, -214.354, 56.0978, 1.94 ) }
    dend_6 { pt3dadd( 94.4545, -218.855, 57.1213, 0.28 ) }
    dend_6 { pt3dadd( 94.5493, -220.661, 57.5155, 0.83 ) }
    dend_6 { pt3dadd( 94.8994, -224.143, 58.2722, 0.28 ) }
    dend_6 { pt3dadd( 95.1268, -225.715, 58.6157, 0.83 ) }
    dend_6 { pt3dadd( 95.4495, -227.837, 59.0688, 0.56 ) }
    dend_6 { pt3dadd( 96.3207, -232.904, 60.1126, 0.28 ) }
    dend_6 { pt3dadd( 96.5904, -234.181, 60.3441, 1.67 ) }
    dend_6 { pt3dadd( 98.5807, -241.645, 61.9991, 0.28 ) }
    dend_6 { pt3dadd( 98.997, -242.817, 62.3334, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.6825, 31.362, 4.22146, 0.83 ) }
    dend_4 { pt3dadd( -16.8039, 32.4831, 5.97171, 0.83 ) }
    dend_4 { pt3dadd( -18.4777, 34.0581, 8.64449, 0.83 ) }
    dend_4 { pt3dadd( -22.2092, 38.3077, 15.7127, 0.83 ) }
    dend_4 { pt3dadd( -22.7142, 38.9409, 16.8617, 0.83 ) }
    dend_4 { pt3dadd( -24.183, 40.888, 20.4092, 0.83 ) }
    dend_4 { pt3dadd( -26.3389, 43.8499, 25.9144, 0.83 ) }
    dend_4 { pt3dadd( -27.7428, 45.6651, 29.557, 0.83 ) }
    dend_4 { pt3dadd( -29.5218, 47.9796, 34.4291, 0.83 ) }
    dend_4 { pt3dadd( -32.2725, 51.6643, 41.8164, 0.56 ) }
    dend_4 { pt3dadd( -32.7196, 52.3791, 43.1013, 0.83 ) }
    dend_4 { pt3dadd( -33.7683, 54.5632, 46.3995, 0.83 ) }
    dend_4 { pt3dadd( -35.0237, 57.1793, 49.8765, 1.11 ) }
    dend_4 { pt3dadd( -36.6, 60.0374, 53.1644, 0.28 ) }
    dend_4 { pt3dadd( -37.4933, 61.3077, 54.3909, 1.11 ) }
    dend_4 { pt3dadd( -39.8904, 64.0385, 56.507, 0.56 ) }
    dend_4 { pt3dadd( -42.2778, 66.0724, 58.0291, 0.28 ) }
    dend_4 { pt3dadd( -46.8668, 68.493, 60.045, 0.56 ) }
    dend_4 { pt3dadd( -48.193, 68.9617, 60.5086, 0.56 ) }
    dend_4 { pt3dadd( -52.9043, 70.2089, 61.9485, 2.22 ) }
    dend_4 { pt3dadd( -58.5638, 71.2707, 63.8397, 0.28 ) }
    dend_4 { pt3dadd( -62.4219, 71.7357, 65.0867, 0.83 ) }
    dend_4 { pt3dadd( -69.3271, 72.3028, 67.2727, 0.28 ) }
    dend_4 { pt3dadd( -70.8218, 72.4182, 67.7055, 0.56 ) }
    dend_4 { pt3dadd( -72.627, 72.4893, 68.2229, 0.83 ) }
    dend_4 { pt3dadd( -77.0136, 72.4889, 69.4442, 0.83 ) }
    dend_4 { pt3dadd( -79.1919, 72.4685, 70.144, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.6825, 31.362, 4.22146, 0.83 ) }
    dend_1 { pt3dadd( -19.4966, 32.1123, 5.14456, 0.83 ) }
    dend_1 { pt3dadd( -22.1142, 32.5486, 5.65952, 0.56 ) }
    dend_1 { pt3dadd( -24.1634, 32.8492, 6.01137, 0.56 ) }
    dend_1 { pt3dadd( -27.5311, 33.4896, 6.71692, 0.56 ) }
    dend_1 { pt3dadd( -28.6896, 33.7212, 6.99153, 0.56 ) }
    dend_1 { pt3dadd( -32.0107, 34.5147, 7.80775, 0.56 ) }
    dend_1 { pt3dadd( -33.6075, 34.9902, 8.32343, 0.56 ) }
    dend_1 { pt3dadd( -34.1288, 35.1826, 8.51537, 0.56 ) }
    dend_1 { pt3dadd( -38.0941, 37.1331, 10.126, 0.56 ) }
    dend_1 { pt3dadd( -40.4669, 38.5657, 11.1074, 0.56 ) }
    dend_1 { pt3dadd( -43.4429, 40.525, 12.4268, 0.56 ) }
    dend_1 { pt3dadd( -45.8159, 42.2842, 13.6019, 0.56 ) }
    dend_1 { pt3dadd( -48.8358, 44.6333, 15.1778, 0.83 ) }
    dend_1 { pt3dadd( -51.7929, 47.0557, 16.7129, 1.11 ) }
    dend_1 { pt3dadd( -52.8418, 47.9864, 17.224, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.647035 ) }
    axon_1 { pt3dadd( -1.45255, 54.8258, 1.53323, 0.647035 ) }
    axon_1 { pt3dadd( -1.87393, 69.8199, 1.53323, 0.647035 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 59/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -6.84375, 25.1969, 5.93371, 0.83 ) }
    dend_40 { pt3dadd( -7.22177, 26.2077, 7.1937, 0.83 ) }
    dend_40 { pt3dadd( -7.46245, 26.8049, 7.93982, 1.11 ) }
    dend_40 { pt3dadd( -8.1932, 28.896, 11.0395, 0.56 ) }
    dend_40 { pt3dadd( -8.54215, 29.9344, 12.5078, 0.83 ) }
    dend_40 { pt3dadd( -8.81374, 30.8359, 13.7035, 0.83 ) }
    dend_40 { pt3dadd( -9.21488, 32.2299, 15.5151, 0.83 ) }
    dend_40 { pt3dadd( -9.54333, 33.4865, 17.0924, 1.39 ) }
    dend_40 { pt3dadd( -10.4809, 37.4184, 21.7695, 0.83 ) }
    dend_40 { pt3dadd( -10.75, 38.8578, 23.4459, 1.11 ) }
    dend_40 { pt3dadd( -11.8621, 46.3019, 31.709, 0.28 ) }
    dend_40 { pt3dadd( -12.1902, 48.6986, 34.3145, 1.67 ) }
    dend_40 { pt3dadd( -12.6079, 51.8969, 37.6852, 0.28 ) }
    dend_40 { pt3dadd( -12.7246, 52.7419, 38.5648, 0.83 ) }
    dend_40 { pt3dadd( -13.1916, 56.4541, 42.1233, 0.28 ) }
    dend_40 { pt3dadd( -13.4438, 58.6123, 44.1509, 0.28 ) }
    dend_40 { pt3dadd( -13.6109, 60.0983, 45.4645, 0.83 ) }
    dend_40 { pt3dadd( -13.7587, 61.135, 46.4175, 0.28 ) }
    dend_40 { pt3dadd( -13.9929, 61.9647, 47.4666, 0.56 ) }
    dend_40 { pt3dadd( -15.5235, 66.0558, 53.5784, 0.28 ) }
    dend_40 { pt3dadd( -15.8862, 66.9697, 55.2788, 0.83 ) }
    dend_40 { pt3dadd( -16.5988, 68.7365, 59.0311, 0.56 ) }
    dend_40 { pt3dadd( -16.796, 69.3487, 60.3368, 1.39 ) }
    dend_40 { pt3dadd( -17.7338, 72.627, 67.559, 0.28 ) }
    dend_40 { pt3dadd( -17.8411, 73.1137, 68.5865, 1.39 ) }
    dend_40 { pt3dadd( -18.459, 75.9205, 74.5203, 0.28 ) }
    dend_40 { pt3dadd( -18.5481, 76.4781, 75.5223, 1.11 ) }
    dend_40 { pt3dadd( -18.8956, 78.9828, 79.3222, 0.28 ) }
    dend_40 { pt3dadd( -18.9387, 79.3212, 79.7593, 0.83 ) }
    dend_40 { pt3dadd( -19.8692, 87.3056, 88.2, 0.28 ) }
    dend_40 { pt3dadd( -20.0726, 88.89, 89.7545, 1.67 ) }
    dend_40 { pt3dadd( -20.6809, 92.9202, 93.2271, 0.28 ) }
    dend_40 { pt3dadd( -20.7505, 93.3898, 93.6286, 0.83 ) }
    dend_40 { pt3dadd( -20.9853, 94.6301, 94.6363, 0.28 ) }
    dend_40 { pt3dadd( -21.1325, 95.3124, 95.172, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.84375, 25.1969, 5.93371, 1.11 ) }
    dend_33 { pt3dadd( -10.0195, 30.2673, 3.97082, 1.11 ) }
    dend_33 { pt3dadd( -12.3148, 33.9318, 2.55219, 1.11 ) }
    dend_33 { pt3dadd( -13.747, 36.2185, 1.66696, 1.11 ) }
    dend_33 { pt3dadd( -16.1036, 39.9811, 0.210355, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 99/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.621593, 25.7917, 19.6617, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( -0.343381, 28.6709, 23.2444, 0.56 ) }
    dend_31 { pt3dadd( -0.829965, 31.3706, 27.2401, 0.83 ) }
    dend_31 { pt3dadd( -0.96928, 32.8039, 29.5453, 0.56 ) }
    dend_31 { pt3dadd( -0.98283, 35.6347, 34.0551, 1.11 ) }
    dend_31 { pt3dadd( -0.903205, 38.8183, 39.0054, 0.56 ) }
    dend_31 { pt3dadd( -0.806868, 40.8826, 42.1115, 1.39 ) }
    dend_31 { pt3dadd( -0.234795, 44.8658, 47.888, 0.28 ) }
    dend_31 { pt3dadd( 0.150112, 46.9872, 50.9877, 1.67 ) }
    dend_31 { pt3dadd( 0.765155, 49.903, 55.2466, 0.28 ) }
    dend_31 { pt3dadd( 0.882757, 50.5899, 56.0935, 0.56 ) }
    dend_31 { pt3dadd( 1.08725, 52.2702, 57.6984, 0.28 ) }
    dend_31 { pt3dadd( 1.12392, 52.6782, 58.0427, 0.83 ) }
    dend_31 { pt3dadd( 1.27564, 55.2128, 59.9681, 0.28 ) }
    dend_31 { pt3dadd( 1.41896, 57.2444, 61.4847, 1.67 ) }
    dend_31 { pt3dadd( 2.32278, 69.1352, 70.1828, 0.28 ) }
    dend_31 { pt3dadd( 2.52319, 72.0363, 72.3461, 2.22 ) }
    dend_31 { pt3dadd( 2.80851, 77.2484, 76.1862, 0.28 ) }
    dend_31 { pt3dadd( 2.84757, 78.1564, 76.849, 0.83 ) }
    dend_31 { pt3dadd( 2.98179, 82.2625, 79.776, 0.28 ) }
    dend_31 { pt3dadd( 2.9811, 83.8025, 80.8047, 0.56 ) }
    dend_31 { pt3dadd( 2.81244, 89.4441, 84.1809, 0.28 ) }
    dend_31 { pt3dadd( 2.64776, 91.286, 85.1895, 1.11 ) }
    dend_31 { pt3dadd( 2.25085, 94.4214, 86.6172, 0.28 ) }
    dend_31 { pt3dadd( 2.07266, 95.7158, 87.147, 0.83 ) }
    dend_31 { pt3dadd( 1.50552, 98.7703, 88.1489, 0.28 ) }
    dend_31 { pt3dadd( 0.724368, 102.654, 89.253, 1.11 ) }
    dend_31 { pt3dadd( -1.20208, 111.505, 91.261, 0.28 ) }
    dend_31 { pt3dadd( -1.52904, 112.737, 91.535, 0.28 ) }
    dend_31 { pt3dadd( -2.04066, 114.407, 91.8956, 1.11 ) }
    dend_31 { pt3dadd( -4.04071, 120.489, 93.2026, 0.28 ) }
    dend_31 { pt3dadd( -4.21191, 120.951, 93.2965, 0.28 ) }
    dend_31 { pt3dadd( -5.37935, 123.736, 93.7163, 1.39 ) }
    dend_31 { pt3dadd( -6.9291, 126.451, 94.1886, 0.28 ) }
    dend_31 { pt3dadd( -8.07625, 128.345, 94.6611, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 34/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 0.621593, 25.7917, 19.6617, 0.28 ) }
    dend_30 { pt3dadd( 1.35292, 29.6079, 22.2432, 0.28 ) }
    dend_30 { pt3dadd( 1.55853, 30.5878, 23.0117, 0.83 ) }
    dend_30 { pt3dadd( 2.02132, 32.2785, 24.4691, 1.11 ) }
    dend_30 { pt3dadd( 2.58139, 34.0951, 26.0367, 0.83 ) }
    dend_30 { pt3dadd( 2.84288, 34.847, 26.6681, 0.28 ) }
    dend_30 { pt3dadd( 3.03367, 35.3646, 27.1155, 0.28 ) }
    dend_30 { pt3dadd( 4.15313, 37.7907, 29.3886, 1.39 ) }
    dend_30 { pt3dadd( 5.18304, 39.6676, 31.4219, 0.83 ) }
    dend_30 { pt3dadd( 6.36753, 41.6533, 33.6301, 0.28 ) }
    dend_30 { pt3dadd( 6.88089, 42.4216, 34.4729, 0.83 ) }
    dend_30 { pt3dadd( 8.23808, 44.3381, 36.5159, 0.28 ) }
    dend_30 { pt3dadd( 9.75982, 46.2624, 38.552, 1.39 ) }
    dend_30 { pt3dadd( 11.5561, 48.3162, 40.6529, 0.28 ) }
    dend_30 { pt3dadd( 13.1296, 49.9503, 42.3019, 0.28 ) }
    dend_30 { pt3dadd( 14.3343, 51.0658, 43.4222, 0.56 ) }
    dend_30 { pt3dadd( 15.3041, 51.8552, 44.3651, 0.83 ) }
    dend_30 { pt3dadd( 17.3367, 53.3272, 46.279, 0.28 ) }
    dend_30 { pt3dadd( 17.6326, 53.5208, 46.5525, 0.83 ) }
    dend_30 { pt3dadd( 19.6184, 54.7264, 48.7604, 0.28 ) }
    dend_30 { pt3dadd( 20.5488, 55.2515, 49.9217, 0.83 ) }
    dend_30 { pt3dadd( 24.4136, 57.3526, 55.1672, 0.28 ) }
    dend_30 { pt3dadd( 24.8945, 57.6068, 55.8483, 1.39 ) }
    dend_30 { pt3dadd( 26.8176, 58.6745, 58.7359, 1.94 ) }
    dend_30 { pt3dadd( 30.4634, 60.792, 64.3494, 0.28 ) }
    dend_30 { pt3dadd( 30.9432, 61.1122, 65.1355, 0.56 ) }
    dend_30 { pt3dadd( 32.4849, 62.3212, 67.6083, 0.28 ) }
    dend_30 { pt3dadd( 33.0491, 62.834, 68.4419, 1.11 ) }
    dend_30 { pt3dadd( 34.7786, 64.5794, 71.0257, 0.28 ) }
    dend_30 { pt3dadd( 35.409, 65.3362, 72.0087, 1.39 ) }
    dend_30 { pt3dadd( 37.1896, 67.811, 74.5917, 0.28 ) }
    dend_30 { pt3dadd( 38.9729, 70.83, 77.2967, 0.56 ) }
    dend_30 { pt3dadd( 39.6377, 72.1477, 78.3077, 0.56 ) }
    dend_30 { pt3dadd( 40.5628, 74.227, 79.7109, 0.83 ) }
    dend_30 { pt3dadd( 41.5355, 76.7576, 81.1147, 0.28 ) }
    dend_30 { pt3dadd( 42.2386, 78.8627, 82.1296, 1.39 ) }
    dend_30 { pt3dadd( 43.4103, 83.0053, 83.7406, 0.28 ) }
    dend_30 { pt3dadd( 43.7056, 84.4996, 84.2471, 0.56 ) }
    dend_30 { pt3dadd( 44.0146, 86.3133, 84.8232, 0.28 ) }
    dend_30 { pt3dadd( 44.428, 88.7955, 85.6472, 1.39 ) }
    dend_30 { pt3dadd( 44.7254, 90.6547, 86.3554, 0.28 ) }
    dend_30 { pt3dadd( 44.8582, 91.5708, 86.7815, 0.56 ) }
    dend_30 { pt3dadd( 45.7099, 97.4755, 89.8771, 0.28 ) }
    dend_30 { pt3dadd( 45.8554, 98.4573, 90.4434, 1.39 ) }
    dend_30 { pt3dadd( 46.6175, 103.001, 93.2751, 0.28 ) }
    dend_30 { pt3dadd( 46.9816, 105.004, 94.5624, 0.83 ) }
    dend_30 { pt3dadd( 47.9878, 110.562, 97.9587, 0.28 ) }
    dend_30 { pt3dadd( 48.1026, 111.166, 98.3085, 0.56 ) }
    dend_30 { pt3dadd( 48.6091, 114.169, 99.6778, 0.28 ) }
    dend_30 { pt3dadd( 48.7469, 115.107, 100.016, 0.28 ) }
    dend_30 { pt3dadd( 49.0448, 117.331, 100.671, 1.39 ) }
    dend_30 { pt3dadd( 50.0111, 124.883, 102.504, 0.28 ) }
    dend_30 { pt3dadd( 50.2743, 127.172, 102.931, 1.11 ) }
    dend_30 { pt3dadd( 51.0467, 135.086, 104.192, 0.28 ) }
    dend_30 { pt3dadd( 51.1275, 136.11, 104.309, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -25.5149, -55.8616, -42.0988, 0.28 ) }
    dend_23 { pt3dadd( -29.6932, -65.1967, -47.5288, 0.28 ) }
    dend_23 { pt3dadd( -33.116, -75.4445, -51.8894, 0.28 ) }
    dend_23 { pt3dadd( -36.6519, -85.0742, -57.3112, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 93/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.5149, -55.8616, -42.0988, 0.28 ) }
    dend_22 { pt3dadd( -28.9221, -66.7285, -48.3019, 0.28 ) }
    dend_22 { pt3dadd( -31.1141, -77.633, -54.9662, 0.28 ) }
    dend_22 { pt3dadd( -30.8296, -88.5042, -62.0066, 0.28 ) }
    dend_22 { pt3dadd( -28.6981, -97.4527, -70.9252, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.46697, -38.5145, 6.9381, 0.83 ) }
    dend_11 { pt3dadd( -5.37881, -41.6386, 5.90555, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( -5.75624, -43.7681, 5.23826, 1.11 ) }
    dend_11 { pt3dadd( -6.31502, -47.9131, 3.62884, 1.11 ) }
    dend_11 { pt3dadd( -6.75032, -51.6038, 2.16973, 1.11 ) }
    dend_11 { pt3dadd( -7.06385, -54.2621, 1.11876, 1.11 ) }
    dend_11 { pt3dadd( -7.89894, -61.3423, -1.68044, 1.11 ) }
    dend_11 { pt3dadd( -8.14197, -64.4509, -2.96743, 0.83 ) }
    dend_11 { pt3dadd( -8.31484, -69.9857, -5.19859, 0.83 ) }
    dend_11 { pt3dadd( -8.19058, -73.5296, -6.49121, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 8/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.46697, -38.5145, 6.9381, 1.11 ) }
    dend_10 { pt3dadd( -4.50082, -40.2812, 9.3543, 1.11 ) }
    dend_10 { pt3dadd( -4.4661, -41.0789, 10.6153, 1.11 ) }
    dend_10 { pt3dadd( -4.44942, -42.569, 13.0344, 1.11 ) }
    dend_10 { pt3dadd( -4.55101, -44.1986, 15.6537, 1.11 ) }
    dend_10 { pt3dadd( -4.85964, -47.6593, 21.2379, 1.11 ) }
    dend_10 { pt3dadd( -5.08954, -49.6033, 24.421, 1.11 ) }
    dend_10 { pt3dadd( -5.35514, -51.2656, 27.2928, 0.83 ) }
    dend_10 { pt3dadd( -5.47478, -52.0333, 28.6571, 0.83 ) }
    dend_10 { pt3dadd( -5.64624, -53.717, 31.6498, 0.83 ) }
    dend_10 { pt3dadd( -5.64308, -54.6908, 33.2257, 0.83 ) }
    dend_10 { pt3dadd( -5.57376, -57.0249, 36.6653, 0.56 ) }
    dend_10 { pt3dadd( -5.45191, -58.2987, 38.4884, 0.56 ) }
    dend_10 { pt3dadd( -5.30477, -59.025, 39.524, 0.28 ) }
    dend_10 { pt3dadd( -4.74676, -60.7273, 42.0069, 1.67 ) }
    dend_10 { pt3dadd( -3.38692, -64.197, 47.4949, 0.28 ) }
    dend_10 { pt3dadd( -3.02011, -65.0913, 49.127, 1.94 ) }
    dend_10 { pt3dadd( -2.74618, -65.7204, 50.4353, 3.33 ) }
    dend_10 { pt3dadd( -2.32756, -66.7599, 52.9807, 0.83 ) }
    dend_10 { pt3dadd( -1.92664, -67.9133, 56.0833, 0.28 ) }
    dend_10 { pt3dadd( -1.32362, -70.1881, 62.292, 2.22 ) }
    dend_10 { pt3dadd( -0.737084, -72.6715, 69.1705, 0.28 ) }
    dend_10 { pt3dadd( -0.564215, -73.4919, 71.511, 1.94 ) }
    dend_10 { pt3dadd( -0.182606, -75.8893, 78.6214, 0.28 ) }
    dend_10 { pt3dadd( -0.147082, -76.2731, 79.7837, 1.94 ) }
    dend_10 { pt3dadd( -0.0644226, -77.5153, 83.647, 0.28 ) }
    dend_10 { pt3dadd( -0.0486788, -77.6966, 84.1589, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -52.8418, 47.9864, 17.224, 0.28 ) }
    dend_3 { pt3dadd( -54.3445, 50.0585, 17.6343, 0.28 ) }
    dend_3 { pt3dadd( -55.4638, 51.5418, 18.0117, 0.56 ) }
    dend_3 { pt3dadd( -56.2139, 52.5014, 18.2711, 0.83 ) }
    dend_3 { pt3dadd( -57.1987, 53.4472, 18.6429, 1.67 ) }
    dend_3 { pt3dadd( -58.5002, 54.6129, 19.0486, 0.56 ) }
    dend_3 { pt3dadd( -59.2057, 55.2293, 19.241, 0.56 ) }
    dend_3 { pt3dadd( -60.8228, 56.5141, 19.7082, 0.28 ) }
    dend_3 { pt3dadd( -61.3197, 56.8926, 19.8498, 0.83 ) }
    dend_3 { pt3dadd( -67.1737, 61.3037, 21.4543, 0.28 ) }
    dend_3 { pt3dadd( -68.8896, 62.5958, 21.8874, 1.11 ) }
    dend_3 { pt3dadd( -70.1962, 63.5633, 22.1513, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -52.8418, 47.9864, 17.224, 0.28 ) }
    dend_2 { pt3dadd( -59.1393, 46.5437, 18.7698, 0.28 ) }
    dend_2 { pt3dadd( -61.1158, 46.1074, 19.2995, 0.56 ) }
    dend_2 { pt3dadd( -63.3055, 45.6261, 20.04, 0.28 ) }
    dend_2 { pt3dadd( -64.4348, 45.3588, 20.4511, 0.56 ) }
    dend_2 { pt3dadd( -67.8502, 44.5035, 21.9594, 0.28 ) }
    dend_2 { pt3dadd( -70.2476, 43.954, 23.1006, 0.56 ) }
    dend_2 { pt3dadd( -70.9967, 43.8349, 23.5698, 0.28 ) }
    dend_2 { pt3dadd( -74.2435, 43.9293, 25.9276, 0.56 ) }
    dend_2 { pt3dadd( -75.2934, 44.1439, 26.7261, 0.56 ) }
    dend_2 { pt3dadd( -79.5729, 46.0046, 28.7343, 0.28 ) }
    dend_2 { pt3dadd( -81.0911, 46.9412, 29.0239, 0.56 ) }
    dend_2 { pt3dadd( -83.2105, 48.442, 28.9697, 1.67 ) }
    dend_2 { pt3dadd( -89.4742, 53.1543, 28.053, 0.28 ) }
    dend_2 { pt3dadd( -91.3631, 54.6833, 27.6097, 1.39 ) }
    dend_2 { pt3dadd( -102.471, 64.0807, 24.1532, 0.28 ) }
    dend_2 { pt3dadd( -103.376, 64.8716, 23.7627, 0.83 ) }
    dend_2 { pt3dadd( -109.246, 69.808, 20.7201, 0.28 ) }
    dend_2 { pt3dadd( -110.012, 70.4103, 20.2245, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -16.1036, 39.9811, 0.210355, 0.56 ) }
    dend_37 { pt3dadd( -17.1992, 42.7141, -0.345542, 0.56 ) }
    dend_37 { pt3dadd( -17.7068, 43.9801, -0.603051, 0.83 ) }
    dend_37 { pt3dadd( -18.253, 45.3427, -0.880215, 0.28 ) }
    dend_37 { pt3dadd( -18.7683, 46.6281, -1.14165, 0.56 ) }
    dend_37 { pt3dadd( -20.3098, 50.4733, -1.92377, 0.56 ) }
    dend_37 { pt3dadd( -21.5376, 53.536, -2.54674, 0.56 ) }
    dend_37 { pt3dadd( -25.0818, 62.8247, -3.47407, 0.56 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 74/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -16.1036, 39.9811, 0.210355, 0.83 ) }
    dend_34 { pt3dadd( -17.2892, 47.5656, -5.46653, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.19058, -73.5296, -6.49121, 0.83 ) }
    dend_13 { pt3dadd( -10.2591, -77.1326, -7.57758, 0.83 ) }
    dend_13 { pt3dadd( -12.7455, -83.0981, -9.39524, 0.83 ) }
    dend_13 { pt3dadd( -13.8559, -85.9612, -10.2654, 0.83 ) }
    dend_13 { pt3dadd( -15.0236, -88.9722, -11.1805, 0.83 ) }
    dend_13 { pt3dadd( -17.3276, -94.9132, -12.9863, 0.83 ) }
    dend_13 { pt3dadd( -19.1408, -99.5881, -14.4073, 0.83 ) }
    dend_13 { pt3dadd( -21.2953, -106.738, -16.6118, 0.83 ) }
    dend_13 { pt3dadd( -22.1634, -110.773, -17.9468, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -8.19058, -73.5296, -6.49121, 0.83 ) }
    dend_12 { pt3dadd( -8.95698, -80.6978, -4.98468, 0.83 ) }
    dend_12 { pt3dadd( -9.19666, -83.9399, -4.27528, 0.83 ) }
    dend_12 { pt3dadd( -9.24944, -85.1707, -3.95216, 0.56 ) }
    dend_12 { pt3dadd( -9.41987, -90.3527, -2.40454, 0.56 ) }
    dend_12 { pt3dadd( -9.43674, -91.8901, -1.92999, 0.56 ) }
    dend_12 { pt3dadd( -9.43351, -96.2149, -0.601651, 0.56 ) }
    dend_12 { pt3dadd( -9.40323, -99.5239, 0.337004, 0.56 ) }
    dend_12 { pt3dadd( -9.36706, -102.501, 1.34195, 0.56 ) }
    dend_12 { pt3dadd( -9.44515, -105.476, 2.4475, 0.28 ) }
    dend_12 { pt3dadd( -9.59684, -107.392, 3.2115, 0.83 ) }
    dend_12 { pt3dadd( -9.77346, -109.047, 3.85605, 0.83 ) }
    dend_12 { pt3dadd( -10.475, -113.862, 5.60714, 0.28 ) }
    dend_12 { pt3dadd( -10.8381, -115.949, 6.24655, 0.83 ) }
    dend_12 { pt3dadd( -12.2186, -123.344, 8.20302, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -12.4747, -124.704, 8.51613, 1.11 ) }
    dend_12 { pt3dadd( -13.1529, -128.833, 9.39749, 0.28 ) }
    dend_12 { pt3dadd( -13.4598, -131.303, 9.86597, 1.39 ) }
    dend_12 { pt3dadd( -13.7943, -139.098, 11.1437, 0.28 ) }
    dend_12 { pt3dadd( -13.7639, -139.946, 11.2782, 1.39 ) }
    dend_12 { pt3dadd( -13.4855, -141.626, 11.5556, 1.94 ) }
    dend_12 { pt3dadd( -12.2131, -146.555, 12.5117, 0.28 ) }
    dend_12 { pt3dadd( -11.7348, -147.883, 12.8061, 1.11 ) }
    dend_12 { pt3dadd( -9.98137, -151.684, 13.7218, 0.28 ) }
    dend_12 { pt3dadd( -9.67606, -152.217, 13.8614, 0.83 ) }
    dend_12 { pt3dadd( -6.22025, -157.885, 15.1139, 0.28 ) }
    dend_12 { pt3dadd( -5.44514, -159.067, 15.3312, 0.28 ) }
    dend_12 { pt3dadd( -4.71599, -160.091, 15.3912, 0.56 ) }
    dend_12 { pt3dadd( -3.83363, -161.302, 15.2929, 0.28 ) }
    dend_12 { pt3dadd( -3.30471, -161.968, 15.0502, 0.83 ) }
    dend_12 { pt3dadd( -1.14907, -164.228, 13.6484, 0.28 ) }
    dend_12 { pt3dadd( -0.974975, -164.371, 13.4892, 0.56 ) }
    dend_12 { pt3dadd( 0.175548, -165.247, 12.3853, 0.28 ) }
    dend_12 { pt3dadd( 0.978078, -165.836, 11.6203, 0.56 ) }
    dend_12 { pt3dadd( 3.92534, -167.843, 9.13539, 0.28 ) }
    dend_12 { pt3dadd( 4.11584, -167.967, 8.97653, 0.56 ) }
    dend_12 { pt3dadd( 5.59188, -168.962, 7.78283, 0.28 ) }
    dend_12 { pt3dadd( 6.59671, -169.634, 6.97259, 0.83 ) }
    dend_12 { pt3dadd( 9.83174, -171.738, 4.40225, 0.28 ) }
    dend_12 { pt3dadd( 13.7373, -174.199, 1.31523, 0.28 ) }
    dend_12 { pt3dadd( 14.9205, -174.895, 0.283316, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 26/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -25.0818, 62.8247, -3.47407, 0.56 ) }
    dend_39 { pt3dadd( -29.6388, 72.0374, -5.27017, 0.56 ) }
    dend_39 { pt3dadd( -35.4387, 80.626, -6.02613, 0.56 ) }
    dend_39 { pt3dadd( -39.564, 90.1861, -7.07949, 0.56 ) }
    dend_39 { pt3dadd( -44.2687, 99.2075, -9.31309, 0.56 ) }
    dend_39 { pt3dadd( -50.5358, 107.273, -10.9771, 0.56 ) }
    dend_39 { pt3dadd( -56.7844, 115.478, -11.9806, 0.56 ) }
    dend_39 { pt3dadd( -62.5537, 124.038, -13.133, 0.56 ) }
    dend_39 { pt3dadd( -68.5466, 132.521, -13.2065, 0.56 ) }
    dend_39 { pt3dadd( -72.9573, 141.94, -12.0598, 0.56 ) }
    dend_39 { pt3dadd( -78.2908, 150.857, -12.7879, 0.56 ) }
    dend_39 { pt3dadd( -84.5884, 159.081, -12.3007, 0.56 ) }
    dend_39 { pt3dadd( -90.9768, 167.195, -13.0769, 0.56 ) }
    dend_39 { pt3dadd( -97.0591, 175.301, -15.1802, 0.56 ) }
    dend_39 { pt3dadd( -103.067, 183.004, -18.4956, 0.56 ) }
    dend_39 { pt3dadd( -109.526, 190.715, -20.8096, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -25.0818, 62.8247, -3.47407, 0.28 ) }
    dend_38 { pt3dadd( -27.4768, 70.8298, -4.52409, 0.56 ) }
    dend_38 { pt3dadd( -30.5392, 78.6486, -5.00249, 0.56 ) }
    dend_38 { pt3dadd( -33.6168, 86.4733, -4.62046, 0.56 ) }
    dend_38 { pt3dadd( -37.0166, 94.1204, -5.29207, 0.56 ) }
    dend_38 { pt3dadd( -40.1467, 101.708, -7.00166, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.2892, 47.5656, -5.46653, 0.56 ) }
    dend_36 { pt3dadd( -18.8749, 49.2606, -8.49496, 0.56 ) }
    dend_36 { pt3dadd( -19.7668, 50.2851, -10.1388, 0.56 ) }
    dend_36 { pt3dadd( -20.6756, 51.2813, -11.6856, 0.28 ) }
    dend_36 { pt3dadd( -22.3028, 52.9223, -14.1936, 0.83 ) }
    dend_36 { pt3dadd( -25.8248, 56.4451, -19.6031, 0.56 ) }
    dend_36 { pt3dadd( -26.7656, 57.4409, -21.0335, 0.56 ) }
    dend_36 { pt3dadd( -27.5054, 58.2385, -22.1124, 0.56 ) }
    dend_36 { pt3dadd( -28.1844, 59.0236, -23.1064, 0.56 ) }
    dend_36 { pt3dadd( -28.8401, 59.9801, -24.1233, 0.56 ) }
    dend_36 { pt3dadd( -30.8433, 63.3373, -27.0032, 0.56 ) }
    dend_36 { pt3dadd( -31.6766, 64.6536, -27.9338, 0.56 ) }
    dend_36 { pt3dadd( -32.3063, 65.6868, -28.7112, 0.56 ) }
    dend_36 { pt3dadd( -32.8907, 66.7612, -29.5153, 0.83 ) }
    dend_36 { pt3dadd( -34.614, 70.5419, -32.1544, 0.28 ) }
    dend_36 { pt3dadd( -35.2715, 72.2222, -33.2307, 0.56 ) }
    dend_36 { pt3dadd( -38.2387, 78.9494, -40.4271, 0.56 ) }
    dend_36 { pt3dadd( -40.641, 86.4791, -47.0871, 0.56 ) }
    dend_36 { pt3dadd( -42.6841, 94.4551, -53.3831, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.2892, 47.5656, -5.46653, 0.56 ) }
    dend_35 { pt3dadd( -17.0726, 49.0868, -6.07646, 0.56 ) }
    dend_35 { pt3dadd( -16.8626, 51.2123, -6.993, 0.56 ) }
    dend_35 { pt3dadd( -16.7226, 53.1482, -7.86251, 0.56 ) }
    dend_35 { pt3dadd( -16.6492, 55.3201, -8.84746, 0.56 ) }
    dend_35 { pt3dadd( -16.5841, 59.9456, -10.9175, 0.56 ) }
    dend_35 { pt3dadd( -16.6092, 63.1188, -12.2903, 0.56 ) }
    dend_35 { pt3dadd( -16.6702, 65.2141, -13.2351, 0.56 ) }
    dend_35 { pt3dadd( -16.7473, 67.5283, -14.2595, 0.56 ) }
    dend_35 { pt3dadd( -16.8201, 68.7216, -14.7438, 0.56 ) }
    dend_35 { pt3dadd( -16.9547, 70.3997, -15.3766, 0.56 ) }
    dend_35 { pt3dadd( -17.1782, 72.3592, -16.1625, 0.56 ) }
    dend_35 { pt3dadd( -17.5343, 75.3994, -17.2665, 0.56 ) }
    dend_35 { pt3dadd( -17.61, 76.4013, -17.6438, 0.28 ) }
    dend_35 { pt3dadd( -17.6714, 77.3979, -18.0257, 0.56 ) }
    dend_35 { pt3dadd( -17.77, 80.6087, -19.3261, 0.56 ) }
    dend_35 { pt3dadd( -17.8607, 83.6308, -20.6716, 0.56 ) }
    dend_35 { pt3dadd( -19.1577, 92.2781, -23.9213, 0.56 ) }
    dend_35 { pt3dadd( -18.5085, 100.723, -27.7526, 0.56 ) }
    dend_35 { pt3dadd( -17.3897, 109.299, -31.1939, 0.56 ) }
    dend_35 { pt3dadd( -17.3887, 117.089, -36.1615, 0.56 ) }
    dend_35 { pt3dadd( -16.362, 125.93, -38.9825, 0.56 ) }
    dend_35 { pt3dadd( -15.3674, 134.975, -41.1787, 0.56 ) }
    dend_35 { pt3dadd( -13.474, 143.495, -44.3952, 0.56 ) }
    dend_35 { pt3dadd( -10.873, 152.36, -45.8086, 0.56 ) }
    dend_35 { pt3dadd( -7.64331, 160.986, -47.2511, 0.56 ) }
    dend_35 { pt3dadd( -3.29562, 168.987, -48.9659, 0.56 ) }
    dend_35 { pt3dadd( 2.17924, 176.035, -51.1673, 0.56 ) }
    dend_35 { pt3dadd( 6.86155, 184.001, -51.9292, 0.56 ) }
    dend_35 { pt3dadd( 11.3551, 192.11, -52.4644, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -22.1634, -110.773, -17.9468, 0.83 ) }
    dend_15 { pt3dadd( -23.4782, -115.624, -15.9358, 0.83 ) }
    dend_15 { pt3dadd( -24.3742, -118.457, -15.3777, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( -24.9989, -120.472, -15.141, 0.83 ) }
    dend_15 { pt3dadd( -25.4947, -122.034, -15.0494, 0.83 ) }
    dend_15 { pt3dadd( -25.9948, -123.62, -15.0227, 0.83 ) }
    dend_15 { pt3dadd( -26.994, -126.765, -15.0333, 0.83 ) }
    dend_15 { pt3dadd( -29.4333, -133.921, -15.4251, 0.83 ) }
    dend_15 { pt3dadd( -30.8369, -138.102, -15.6732, 0.83 ) }
    dend_15 { pt3dadd( -32.8923, -144.396, -16.0367, 0.83 ) }
    dend_15 { pt3dadd( -33.9716, -147.812, -16.2645, 1.11 ) }
    dend_15 { pt3dadd( -35.0254, -151.414, -16.5347, 0.83 ) }
    dend_15 { pt3dadd( -36.134, -155.482, -16.8541, 0.83 ) }
    dend_15 { pt3dadd( -37.4288, -160.652, -17.2015, 0.83 ) }
    dend_15 { pt3dadd( -37.9689, -162.943, -17.3418, 0.83 ) }
    dend_15 { pt3dadd( -39.4018, -169.766, -17.6521, 0.83 ) }
    dend_15 { pt3dadd( -39.6591, -171.1, -17.7038, 0.83 ) }
    dend_15 { pt3dadd( -40.9682, -176.833, -18.0267, 0.83 ) }
    dend_15 { pt3dadd( -41.4038, -178.674, -18.1763, 0.83 ) }
    dend_15 { pt3dadd( -43.2417, -185.726, -18.9277, 0.83 ) }
    dend_15 { pt3dadd( -45.7342, -194.78, -19.947, 0.83 ) }
    dend_15 { pt3dadd( -46.6002, -197.812, -20.2903, 0.83 ) }
    dend_15 { pt3dadd( -49.1138, -206.297, -21.34, 0.83 ) }
    dend_15 { pt3dadd( -50.1572, -209.673, -21.8185, 0.83 ) }
    dend_15 { pt3dadd( -51.4997, -213.564, -22.4299, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -22.1634, -110.773, -17.9468, 0.83 ) }
    dend_14 { pt3dadd( -23.9178, -111.737, -19.3515, 0.83 ) }
    dend_14 { pt3dadd( -25.3163, -112.622, -20.3309, 0.83 ) }
    dend_14 { pt3dadd( -29.0959, -114.902, -23.1749, 0.56 ) }
    dend_14 { pt3dadd( -30.1393, -115.495, -23.9807, 0.56 ) }
    dend_14 { pt3dadd( -31.4293, -116.181, -25.0248, 0.56 ) }
    dend_14 { pt3dadd( -33.3214, -117.186, -26.5563, 0.56 ) }
    dend_14 { pt3dadd( -35.2678, -118.223, -28.3165, 0.56 ) }
    dend_14 { pt3dadd( -37.0903, -119.224, -30.0146, 0.56 ) }
    dend_14 { pt3dadd( -39.3122, -120.352, -31.759, 0.56 ) }
    dend_14 { pt3dadd( -40.7751, -121.035, -33.036, 0.83 ) }
    dend_14 { pt3dadd( -48.4419, -124.568, -38.6588, 0.83 ) }
    dend_14 { pt3dadd( -57.2167, -126.441, -43.2997, 0.83 ) }
    dend_14 { pt3dadd( -65.3295, -127.424, -49.218, 0.83 ) }
    dend_14 { pt3dadd( -73.2495, -129.192, -55.2309, 0.83 ) }
    dend_14 { pt3dadd( -80.9082, -131.031, -61.555, 0.83 ) }
    dend_14 { pt3dadd( -88.6947, -130.58, -67.9507, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 39/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -51.4997, -213.564, -22.4299, 0.56 ) }
    dend_17 { pt3dadd( -52.3082, -218.097, -23.182, 0.56 ) }
    dend_17 { pt3dadd( -52.9113, -221.478, -23.743, 0.56 ) }
    dend_17 { pt3dadd( -53.1331, -222.722, -23.9494, 0.56 ) }
    dend_17 { pt3dadd( -53.8668, -226.836, -24.6319, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -51.4997, -213.564, -22.4299, 0.56 ) }
    dend_16 { pt3dadd( -51.3258, -214.423, -21.2111, 0.56 ) }
    dend_16 { pt3dadd( -51.1868, -215.311, -20.0413, 0.56 ) }
    dend_16 { pt3dadd( -50.7771, -218.276, -16.2785, 0.56 ) }
    dend_16 { pt3dadd( -50.6646, -219.443, -14.8906, 0.28 ) }
    dend_16 { pt3dadd( -50.6328, -219.714, -14.5644, 0.83 ) }
    dend_16 { pt3dadd( -50.4514, -221.27, -12.6993, 0.28 ) }
    dend_16 { pt3dadd( -50.3935, -221.844, -11.9441, 0.56 ) }
    dend_16 { pt3dadd( -50.3325, -222.79, -10.6164, 0.28 ) }
    dend_16 { pt3dadd( -50.3249, -223.452, -9.76263, 0.56 ) }
    dend_16 { pt3dadd( -50.3581, -224.77, -8.17522, 0.28 ) }
    dend_16 { pt3dadd( -50.3421, -225.055, -7.8658, 0.56 ) }
    dend_16 { pt3dadd( -50.1532, -226.362, -6.56896, 0.28 ) }
    dend_16 { pt3dadd( -49.8281, -227.75, -5.29607, 1.11 ) }
    dend_16 { pt3dadd( -49.6478, -228.442, -4.73466, 1.11 ) }
    dend_16 { pt3dadd( -49.2091, -230.1, -3.51074, 0.56 ) }
    dend_16 { pt3dadd( -48.1238, -234.506, -0.494122, 0.28 ) }
    dend_16 { pt3dadd( -47.8873, -235.39, 0.0877753, 1.39 ) }
    dend_16 { pt3dadd( -47.2747, -237.504, 1.37106, 0.28 ) }
    dend_16 { pt3dadd( -46.8965, -238.724, 2.07421, 1.11 ) }
    dend_16 { pt3dadd( -46.2101, -240.978, 3.40676, 0.28 ) }
    dend_16 { pt3dadd( -45.9571, -241.866, 3.97021, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -53.8668, -226.836, -24.6319, 0.56 ) }
    dend_19 { pt3dadd( -54.8568, -229.648, -24.6831, 0.56 ) }
    dend_19 { pt3dadd( -55.5711, -231.865, -24.7939, 0.56 ) }
    dend_19 { pt3dadd( -56.3054, -234.215, -24.9459, 0.56 ) }
    dend_19 { pt3dadd( -57.5608, -238.234, -25.2058, 0.56 ) }
    dend_19 { pt3dadd( -57.9575, -239.505, -25.288, 0.56 ) }
    dend_19 { pt3dadd( -59.1798, -243.418, -25.541, 0.56 ) }
    dend_19 { pt3dadd( -59.5344, -244.694, -25.6431, 0.56 ) }
    dend_19 { pt3dadd( -59.7943, -245.702, -25.7426, 0.56 ) }
    dend_19 { pt3dadd( -61.2899, -254.492, -25.2741, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -53.8668, -226.836, -24.6319, 0.28 ) }
    dend_18 { pt3dadd( -54.2226, -229.483, -23.0537, 0.28 ) }
    dend_18 { pt3dadd( -54.4154, -230.457, -22.377, 0.56 ) }
    dend_18 { pt3dadd( -54.7548, -232.182, -21.1609, 0.28 ) }
    dend_18 { pt3dadd( -54.9721, -233.32, -20.2857, 0.28 ) }
    dend_18 { pt3dadd( -55.2654, -234.857, -19.1047, 0.28 ) }
    dend_18 { pt3dadd( -55.6518, -236.881, -17.5484, 0.56 ) }
    dend_18 { pt3dadd( -56.2251, -239.136, -15.8685, 0.28 ) }
    dend_18 { pt3dadd( -56.5954, -240.6, -14.7204, 0.28 ) }
    dend_18 { pt3dadd( -56.8953, -241.963, -13.6556, 0.56 ) }
    dend_18 { pt3dadd( -56.8978, -251.221, -8.52165, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_13 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_14 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_32 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_9 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_18 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_25 nseg = 3
    dend_5 nseg = 3
    dend_27 nseg = 7
    dend_26 nseg = 5
    dend_24 nseg = 5
    dend_21 nseg = 3
    dend_7 nseg = 9
    dend_6 nseg = 11
    dend_4 nseg = 5
    dend_1 nseg = 3
    dend_40 nseg = 5
    dend_31 nseg = 7
    dend_30 nseg = 7
    dend_22 nseg = 3
    dend_10 nseg = 5
    dend_2 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 7
    dend_39 nseg = 7
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 9
    dend_15 nseg = 5
    dend_14 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BTC_65225ca4f8_0_0


