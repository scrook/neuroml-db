// Cell: cNAC187_L23_MC_2c0a7badf4_0_0
/*
{
  "id" : "cNAC187_L23_MC_2c0a7badf4_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.95886, -11.1162, -3.26687, 2.24062", "1.81316, -10.0989, -2.96355, 3.79206", "1.66746, -9.08156, -2.66023, 5.71887", "1.52175, -8.06425, -2.35691, 7.64568", "1.37605, -7.04694, -2.05359, 9.5329", "1.23035, -6.02963, -1.75027, 11.2315", "1.08464, -5.01232, -1.44695, 12.1892", "0.938938, -3.995, -1.14363, 13.0362", "0.793235, -2.97769, -0.84031, 13.126", "0.647532, -1.96038, -0.536989, 13.2053", "0.501828, -0.94307, -0.233669, 13.2847", "0.356125, 0.0742422, 0.0696518, 13.3558", "0.210422, 1.09155, 0.372972, 13.3989", "0.0647183, 2.10887, 0.676293, 13.0039", "-0.080985, 3.12618, 0.979613, 12.1764", "-0.226688, 4.14349, 1.28293, 11.0999", "-0.372392, 5.1608, 1.58625, 9.82961", "-0.518095, 6.17811, 1.88958, 8.55654", "-0.663798, 7.19542, 2.1929, 6.8354", "-0.809502, 8.21274, 2.49622, 4.23645", "-0.955205, 9.23005, 2.79954, 2.56974" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.15247, -10.7386, 5.33321, 2.67", "3.60411, -18.8835, 1.62955, 2.0", "4.68776, -22.4836, -0.00750001, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002781037023
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.29247, 10.2114, -1.16679, 3.33", "1.6892, 15.3516, -2.50354, 2.67", "1.9686, 18.9714, -3.44491, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002781037023
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.955205, 9.23005, 2.79954, 0.67", "-3.08186, 24.0785, 2.79954, 0.67", "-5.20851, 38.927, 2.79954, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "4.68776, -22.4836, -0.00750001, 2.0", "7.20898, -27.3963, -9.90291, 2.0", "8.81886, -30.5333, -16.2215, 2.0", "9.84788, -32.5385, -20.2602, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "4.68776, -22.4836, -0.00750001, 0.67", "3.8317, -23.5917, 1.24213, 0.67", "2.58051, -24.7935, 2.80014, 0.33", "1.63354, -25.703, 3.97934, 1.33", "-0.0209705, -27.2921, 6.03957, 0.67", "-1.34784, -28.5665, 7.69182, 0.67", "-3.14372, -30.2914, 9.92808, 0.67", "-4.26172, -31.2939, 11.4504, 0.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.9686, 18.9714, -3.44491, 2.0", "2.2186, 21.3114, 0.0550911, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.9686, 18.9714, -3.44491, 1.33", "7.3386, 21.7914, -26.0349, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.20851, 38.927, 2.79954, 0.33", "-7.33517, 53.7755, 2.79954, 0.33", "-9.46182, 68.624, 2.79954, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "9.84788, -32.5385, -20.2602, 1.33", "10.3172, -36.1197, -17.7018, 1.33", "10.8059, -39.8495, -15.0372, 1.33", "11.0825, -41.96, -13.5295, 1.33", "11.6658, -46.4113, -10.3495, 1.33", "12.0253, -49.1549, -8.38946, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "9.84788, -32.5385, -20.2602, 1.33", "16.5973, -34.786, -9.65897, 1.33", "17.882, -35.2139, -7.64098, 1.33", "20.4216, -36.0596, -3.65214, 1.33", "22.7169, -36.8239, -0.0469599, 1.33" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "2.2186, 21.3114, 0.0550911, 1.33", "1.46019, 23.7423, 1.1983, 1.33", "-0.639761, 28.421, 4.01786, 0.67", "-1.75891, 30.5124, 5.24769, 0.67", "-3.08762, 32.7, 6.44992, 0.67", "-4.96004, 34.9292, 8.00055, 0.67", "-8.48153, 38.6182, 10.9491, 0.67", "-12.0958, 41.7913, 14.0958, 0.67", "-13.2776, 42.6686, 15.018, 0.67", "-14.882, 43.7431, 16.3686, 0.67", "-19.397, 46.6374, 20.5881, 0.67", "-21.7053, 48.1342, 22.9068, 0.67", "-23.2993, 49.1322, 24.2737, 0.67", "-29.4074, 55.4176, 29.0888, 0.67", "-35.2542, 61.0627, 34.9153, 0.67", "-40.8359, 66.8737, 40.8379, 0.67", "-47.0632, 71.4033, 47.2178, 0.67", "-52.4793, 75.3657, 54.6316, 0.67", "-56.2226, 80.0213, 62.6512, 0.67", "-60.4531, 83.5499, 70.997, 0.67", "-64.8219, 85.995, 79.6535, 0.67", "-68.6725, 88.6616, 88.4887, 0.67", "-71.7816, 90.7568, 97.7593, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.2186, 21.3114, 0.0550911, 0.67", "5.31953, 22.9658, 0.532095, 0.67", "11.7681, 26.4061, 1.52406, 0.67", "18.0939, 29.7808, 2.49713, 0.67", "22.3305, 32.0411, 3.14883, 0.67", "24.0304, 32.948, 3.41032, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "7.3386, 21.7914, -26.0349, 1.33", "7.68382, 26.6186, -28.6489, 1.33", "9.35521, 38.0848, -35.1954, 1.33", "9.62271, 39.9199, -36.2432, 1.33", "10.1283, 43.3887, -38.2236, 1.33", "10.7354, 47.5537, -40.6016, 1.33", "11.3394, 51.6971, -42.9672, 0.67", "13.0822, 59.92, -47.5187, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.3386, 21.7914, -26.0349, 0.67", "14.1297, 25.5815, -28.5742, 0.67", "16.2363, 27.0096, -30.2937, 0.67", "19.7767, 29.4586, -33.9919, 0.67", "20.8952, 30.3275, -35.476, 0.67", "22.9579, 31.9715, -38.7647, 0.67", "27.2985, 35.6606, -46.4446, 0.67", "28.1984, 36.5326, -48.3608, 0.67", "29.2034, 37.6492, -50.8423, 0.67", "31.2151, 40.4574, -56.8132, 0.67", "33.0356, 43.1528, -62.4956, 1.33", "33.746, 44.1723, -64.6141, 0.67", "34.7854, 45.3345, -66.799, 0.33", "35.1027, 45.659, -67.3983, 0.67", "36.7222, 47.1466, -70.0675, 0.33", "37.7963, 47.9902, -71.5302, 0.33", "41.4437, 50.62, -76.1583, 1.33", "45.2437, 53.0718, -80.6722, 0.33", "46.1939, 53.6175, -81.9009, 1.33", "47.6037, 54.3918, -83.7801, 0.33", "48.4884, 54.8309, -84.9196, 0.67", "51.3331, 56.2953, -88.866, 0.33", "52.9091, 57.0327, -91.1854, 1.33", "57.8818, 59.2079, -98.9785, 0.33", "58.2352, 59.3485, -99.5304, 1.33", "59.8949, 59.9822, -101.971, 0.33", "61.2236, 60.4736, -103.783, 1.33", "66.3467, 62.4615, -109.951, 0.33", "67.7219, 63.0435, -111.546, 0.67", "68.7475, 63.5581, -112.504, 0.33", "70.687, 64.6515, -114.299, 0.33", "71.18, 64.9704, -114.761, 0.67", "72.3554, 65.7693, -115.64, 0.33", "73.7413, 67.0158, -116.235, 0.67", "74.9299, 68.1461, -116.783, 0.33", "75.7491, 69.135, -117.305, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "12.0253, -49.1549, -8.38946, 0.67", "11.7947, -52.1519, -9.6, 0.67", "11.2036, -59.8342, -12.703, 0.67" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "12.0253, -49.1549, -8.38946, 1.33", "8.08041, -49.5518, -10.9965, 1.33", "4.77167, -49.874, -13.3181, 1.33", "3.34019, -49.9477, -14.491, 0.67", "0.857356, -50.0834, -16.717, 1.33", "-3.64407, -50.4631, -20.9657, 0.67", "-8.01952, -51.1643, -25.4834, 0.67", "-9.18376, -51.4488, -27.2203, 0.67", "-10.9185, -51.9669, -30.3023, 0.67", "-11.8754, -52.2715, -32.2113, 0.67", "-12.513, -52.5275, -33.7697, 0.67", "-13.7666, -53.79, -37.6651, 1.33", "-15.1017, -56.8335, -44.9121, 2.0" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "22.7169, -36.8239, -0.0469599, 0.67", "26.13, -38.0639, -2.12301, 0.67", "28.993, -39.5193, -3.46676, 0.67", "32.0518, -41.2137, -4.71985, 0.67", "35.2049, -43.0114, -5.84832, 0.67", "39.4318, -45.5125, -7.44788, 0.67", "43.4876, -47.8771, -8.96032, 0.67", "46.4183, -49.868, -9.99041, 0.67", "51.3053, -53.4837, -11.4377, 0.67", "52.5634, -54.4701, -11.8134, 1.33", "55.8845, -57.1536, -12.9539, 0.67", "57.8524, -58.7657, -13.836, 0.67", "59.7524, -60.3499, -14.964, 0.67", "61.7634, -62.1022, -16.3369, 1.33", "64.7777, -65.0529, -18.4598, 0.67", "66.1247, -66.387, -19.4242, 1.33", "69.1143, -69.4529, -21.4419, 0.67", "70.3371, -70.7278, -22.2501, 0.33", "70.6508, -71.0195, -22.4357, 1.33", "71.9667, -72.077, -23.0509, 0.67", "73.2612, -73.0686, -23.3976, 0.33", "74.938, -74.3288, -23.6298, 1.33", "77.1606, -76.1366, -23.6452, 0.33", "78.0554, -76.9344, -23.6563, 0.33", "79.032, -77.9075, -23.6723, 0.67", "80.6669, -79.6972, -23.8227, 0.33", "81.935, -81.1357, -24.109, 1.33", "83.4756, -82.9538, -24.6186, 0.33", "84.7579, -84.5404, -25.1466, 0.33", "86.3339, -86.4106, -25.8358, 0.33", "87.8577, -88.1157, -26.6179, 1.33", "89.7925, -90.0331, -27.7028, 0.33", "90.25, -90.4266, -27.9889, 0.67", "91.5708, -91.4921, -28.9343, 0.33", "92.7684, -92.363, -29.7601, 0.67", "94.5941, -93.5566, -30.938, 0.33", "96.0469, -94.5417, -31.7266, 0.67", "98.5958, -96.2092, -32.9236, 0.33", "100.499, -97.4246, -33.7413, 0.67", "103.834, -99.5237, -34.979, 0.67", "105.436, -100.523, -35.4768, 1.33", "108.356, -102.311, -36.1218, 0.67", "110.343, -103.541, -36.4256, 0.67", "111.35, -104.176, -36.5698, 1.33", "113.793, -105.849, -36.9832, 0.33", "113.793, -105.849, -36.9832, 1.33", "115.311, -107.227, -37.5229, 0.33", "115.531, -107.453, -37.6184, 0.67", "118.547, -110.997, -38.9286, 0.33", "120.62, -113.648, -39.8094, 0.33", "122.037, -115.566, -40.3961, 2.0", "124.124, -118.292, -41.1416, 0.33", "124.738, -119.061, -41.3221, 1.33", "126.789, -121.632, -41.6546, 0.33", "127.614, -122.675, -41.6322, 0.33", "128.142, -123.239, -41.5808, 0.67", "129.394, -124.383, -41.4508, 0.33", "130.013, -124.802, -41.4427, 1.33", "132.49, -126.182, -41.4949, 0.33", "132.791, -126.316, -41.5104, 0.67", "135.079, -127.195, -41.66, 0.33", "137.404, -128.058, -41.839, 0.67", "139.603, -128.829, -42.0683, 0.33", "140.906, -129.224, -42.2478, 0.67", "143.231, -129.741, -42.6946, 0.33", "143.872, -129.892, -42.8194, 0.67" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "22.7169, -36.8239, -0.0469599, 0.67", "24.3818, -38.8062, -1.26635, 0.67", "25.6724, -40.2031, -1.97545, 0.67", "26.6132, -41.2642, -2.43278, 0.33", "28.047, -43.0156, -2.99153, 1.33", "31.4868, -46.4599, -3.58068, 0.67", "32.2965, -47.1304, -3.65126, 1.33", "34.7434, -48.919, -3.66703, 0.67", "35.8298, -49.7517, -3.68499, 0.67", "39.2137, -52.2009, -3.61546, 0.67", "44.1187, -55.8256, -3.00568, 0.67", "46.125, -57.4193, -2.55685, 0.67", "50.7802, -61.2507, -1.46472, 0.67", "54.5673, -64.4782, -0.585933, 0.67", "56.443, -66.178, -0.0759659, 0.67", "59.67, -69.5248, 0.999492, 0.67", "62.5267, -73.1129, 2.1, 0.67", "64.2916, -75.46, 3.00021, 0.67", "65.5142, -77.0199, 3.79302, 0.67", "67.1965, -78.9728, 5.1075, 0.67", "68.262, -80.2396, 5.89783, 0.67", "69.5738, -81.6743, 6.76836, 0.33", "71.0047, -83.4506, 8.18495, 0.67", "71.5385, -84.2357, 8.91701, 0.33", "72.8263, -85.9052, 10.937, 1.33", "75.9238, -90.4166, 19.3067, 1.33", "79.2435, -95.3916, 27.321, 1.33", "83.308, -101.041, 34.5021, 1.33", "86.1274, -107.187, 41.8698, 1.33", "89.5585, -112.29, 49.7551, 1.33", "93.4327, -118.317, 56.7312, 1.33", "98.8197, -124.265, 62.6985, 1.33", "103.566, -131.587, 67.5838, 1.33" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "24.0304, 32.948, 3.41032, 0.67", "27.0823, 34.0336, 4.4955, 0.67", "29.0337, 34.6159, 5.14021, 0.67", "32.8509, 35.699, 6.43654, 0.67", "35.3135, 36.3978, 7.27283, 0.67", "39.6759, 37.6356, 8.75428, 0.67", "44.2417, 38.9312, 10.3048, 0.67", "45.8838, 39.422, 10.8439, 0.67", "48.3177, 40.1775, 11.7278, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "24.0304, 32.948, 3.41032, 0.67", "27.1507, 35.2934, -0.698548, 0.67", "28.8339, 36.5585, -2.91499, 0.67", "29.5667, 37.1093, -3.87992, 0.67", "32.0855, 39.0026, -7.19672, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "13.0822, 59.92, -47.5187, 1.33", "13.8813, 62.5946, -49.3509, 1.33", "14.3972, 64.3212, -50.5338, 0.33", "15.9719, 69.5916, -54.1443, 1.34" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.0822, 59.92, -47.5187, 0.67", "7.40885, 73.4448, -35.1234, 0.67", "6.18841, 76.3724, -33.1006, 1.33", "4.99851, 79.4062, -31.5462, 0.67", "3.44758, 83.1871, -30.09, 0.67", "2.80615, 84.6511, -29.5967, 1.33", "1.66652, 87.1344, -28.9372, 0.67", "0.676323, 89.2985, -29.2461, 0.33", "-1.86566, 94.0123, -29.7905, 0.67", "-3.36252, 96.5232, -30.0929, 0.67", "-4.1235, 97.6825, -30.1557, 0.67", "-5.89418, 100.169, -30.3243, 0.67", "-6.90537, 101.482, -30.4292, 0.33", "-8.36708, 103.376, -30.7333, 0.33", "-9.5314, 104.616, -31.2292, 1.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "11.2036, -59.8342, -12.703, 0.67", "10.5635, -62.0527, -13.1737, 0.67", "8.75578, -67.0999, -14.3705, 0.67", "7.0588, -73.5286, -14.9439, 0.67", "6.01884, -80.6457, -15.2212, 0.67", "6.13605, -84.1197, -15.2172, 0.67", "6.45146, -87.5881, -15.1709, 0.67", "6.45146, -87.5881, -15.1709, 0.67", "8.21894, -95.1228, -15.173, 0.67", "9.54627, -98.9054, -14.9495, 0.67", "12.5396, -106.027, -14.2632, 0.67", "13.5375, -108.349, -14.0856, 1.33", "15.4133, -112.722, -13.733, 1.33", "16.5511, -115.798, -13.5017, 0.67", "17.1708, -117.862, -13.3755, 1.33", "17.9659, -121.24, -13.093, 1.33", "18.9757, -126.284, -12.5597, 1.33", "19.6223, -129.686, -12.1663, 1.33", "20.2549, -133.778, -11.6469, 1.33", "20.6351, -136.749, -11.2482, 0.67", "21.1506, -141.561, -10.5882, 1.33", "21.4241, -143.873, -10.2445, 0.67", "21.8483, -146.143, -9.90081, 0.67", "23.3857, -155.623, -7.11478, 0.67", "23.6873, -164.947, -3.51289, 0.67", "24.19, -174.096, 0.492966, 0.67", "24.7995, -182.135, 6.40895, 0.67", "26.0811, -190.357, 11.9549, 0.67", "26.2943, -198.492, 17.7663, 0.67", "26.1189, -207.705, 21.6498, 0.67", "24.8945, -216.319, 26.5807, 0.67" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "11.2036, -59.8342, -12.703, 0.67", "14.7095, -64.3409, -17.6088, 0.67", "16.2032, -66.225, -19.5347, 0.67", "19.082, -69.6733, -23.0971, 0.67", "21.7306, -72.6533, -26.1997, 1.33", "22.5871, -73.6827, -27.3059, 0.67", "23.4324, -74.6909, -28.3849, 0.67", "24.2734, -75.7802, -29.3687, 0.67", "25.2302, -76.8967, -30.5515, 1.33", "25.7773, -77.4605, -31.1715, 1.33", "28.4804, -80.7343, -34.767, 0.67", "29.4998, -82.3173, -36.4699, 0.67", "29.8868, -83.0066, -37.1664, 1.33", "30.9454, -85.4554, -39.4138, 0.33", "31.7396, -87.9538, -41.3839, 0.67", "32.4962, -91.3529, -43.6691, 0.67", "32.8699, -93.7472, -44.9683, 0.67", "33.007, -96.1181, -46.0414, 0.67", "33.1241, -99.3529, -47.2658, 2.0", "33.1707, -102.09, -48.0462, 0.33", "33.2515, -105.045, -48.6652, 0.67", "33.2762, -107.387, -48.9232, 1.33", "33.1446, -110.94, -49.3473, 0.67", "32.9598, -112.942, -49.6093, 0.33", "32.6897, -115.272, -49.8002, 0.33", "32.2097, -118.628, -50.121, 1.33", "31.6557, -121.911, -50.4581, 0.33", "30.8628, -127.061, -51.0065, 0.33", "30.4605, -130.077, -51.3232, 0.33", "30.0073, -133.516, -51.6625, 2.0", "29.6533, -138.853, -52.1451, 0.33", "29.663, -140.839, -52.295, 0.67", "29.8233, -143.811, -52.4347, 0.67", "30.1678, -146.48, -52.4297, 0.33", "30.3959, -147.829, -52.4705, 1.33", "31.0722, -150.892, -52.7055, 0.33", "31.282, -151.609, -52.686, 0.67", "31.9071, -154.068, -52.55, 0.33", "32.0265, -154.799, -52.4914, 0.33", "32.1128, -155.546, -52.4923, 0.67", "32.382, -157.922, -52.7035, 0.33", "32.4836, -159.341, -53.0075, 1.33", "32.6454, -161.29, -53.3856, 0.33", "32.7411, -161.944, -53.5001, 0.67", "33.1625, -165.451, -54.3343, 0.33", "33.2797, -167.928, -55.1242, 0.33", "33.2553, -170.226, -56.0102, 1.33", "33.2162, -173.044, -57.1806, 0.67", "33.2472, -174.994, -58.0585, 0.33", "33.2856, -177.492, -58.8109, 0.67", "33.4115, -180.721, -59.1725, 0.33", "33.4152, -181.051, -59.1723, 0.67", "33.5489, -182.409, -59.0173, 0.33", "33.8672, -184.309, -58.7375, 0.67", "34.8232, -189.799, -57.4428, 0.33", "35.176, -191.467, -56.8887, 1.33", "35.7449, -193.618, -56.1577, 0.33", "36.1044, -194.85, -55.8067, 0.67", "36.9796, -197.653, -55.184, 0.33", "37.9743, -200.793, -54.6807, 1.33", "38.8546, -203.559, -54.5295, 0.33", "39.2417, -204.889, -54.4574, 0.67", "40.051, -207.442, -54.3381, 0.33", "40.7342, -209.772, -54.2566, 0.67", "41.1982, -211.389, -54.2072, 0.33", "41.4178, -212.102, -54.1931, 0.67", "42.0568, -214.254, -54.1853, 0.33", "42.4896, -215.89, -54.1324, 0.67", "43.0111, -218.06, -54.0537, 0.33", "43.5961, -220.402, -53.9636, 0.67", "44.1948, -222.552, -53.8857, 0.33", "44.2888, -222.868, -53.872, 2.0" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-15.1017, -56.8335, -44.9121, 0.33", "-15.5745, -59.7655, -46.6003, 0.33", "-16.3085, -62.6783, -47.9222, 1.33", "-17.1633, -65.8229, -49.312, 0.33", "-17.4036, -66.9171, -49.754, 0.67", "-17.8535, -68.9626, -50.5281, 0.33", "-18.3382, -70.9107, -51.2312, 1.33", "-19.2174, -73.499, -52.0347, 0.33", "-20.0992, -76.209, -52.5762, 1.33", "-21.0447, -79.0077, -52.9692, 0.33", "-21.464, -80.4242, -53.1639, 0.33", "-21.9236, -82.0431, -53.3701, 1.33", "-22.5731, -84.5482, -53.6422, 0.33", "-23.5591, -88.127, -53.9278, 0.33", "-24.488, -91.2861, -54.2028, 0.67", "-25.1096, -93.3161, -54.4542, 0.33", "-25.638, -95.6387, -54.7955, 0.33", "-25.9129, -97.2888, -55.0716, 1.33", "-26.2044, -99.9147, -55.5697, 0.33", "-26.4289, -102.181, -56.0359, 0.67", "-26.5817, -104.614, -56.7254, 0.33", "-26.8807, -106.962, -57.821, 0.33", "-26.9523, -107.524, -58.1598, 0.67", "-27.2112, -109.246, -59.3626, 0.33", "-27.3759, -110.445, -60.2394, 0.33", "-28.0232, -114.228, -62.8791, 1.33", "-28.7747, -118.062, -65.5813, 0.67", "-29.2766, -120.122, -66.982, 0.33", "-29.2766, -120.122, -66.982, 1.33", "-29.6074, -122.082, -68.2462, 0.33", "-29.728, -123.515, -69.0328, 0.67", "-29.8045, -125.391, -69.8028, 0.33", "-29.8443, -126.013, -70.0225, 0.67", "-30.6074, -130.717, -72.2436, 0.33", "-31.042, -132.863, -73.395, 2.0", "-31.8964, -136.489, -75.5426, 0.33", "-32.2103, -137.653, -76.2849, 0.33", "-32.4482, -138.413, -76.7868, 0.67", "-33.5649, -141.615, -78.8576, 0.33", "-33.7526, -142.066, -79.1209, 0.67", "-34.318, -143.348, -80.0324, 0.33", "-35.9118, -146.535, -82.3201, 1.33" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-15.1017, -56.8335, -44.9121, 0.67", "-16.3397, -57.6038, -49.5141, 0.67", "-18.7457, -59.0783, -56.8142, 0.67", "-20.7716, -60.2163, -62.7579, 0.67", "-21.1731, -60.4394, -63.8833, 1.33", "-23.2843, -61.4789, -69.3964, 0.33", "-24.3626, -61.98, -71.9908, 0.67", "-25.9098, -62.7929, -75.8072, 1.33", "-28.6106, -64.1532, -80.4602, 0.33", "-29.1592, -64.3681, -81.2028, 0.67", "-30.3446, -64.7575, -82.76, 0.33", "-31.3833, -65.077, -84.0295, 0.33", "-32.0825, -65.3418, -84.9666, 1.33", "-35.9327, -66.7487, -89.7426, 0.33", "-36.6715, -67.0444, -90.6438, 1.33", "-40.0584, -68.4811, -95.1502, 0.33", "-41.0699, -68.9338, -96.569, 1.33", "-43.7549, -70.1352, -100.477, 0.33", "-45.0672, -70.7399, -102.338, 0.33", "-46.553, -71.366, -104.35, 1.33", "-49.1981, -72.3172, -107.75, 0.33", "-49.6065, -72.4578, -108.25, 0.67", "-52.1929, -73.2166, -111.427, 0.33", "-53.4433, -73.5112, -112.89, 2.0", "-56.9923, -74.2499, -117.128, 0.33", "-58.0863, -74.3816, -118.424, 1.33", "-60.6465, -74.4733, -121.405, 0.33", "-62.3918, -74.494, -123.565, 0.67", "-63.461, -74.4893, -124.93, 0.33", "-64.6327, -74.477, -126.511, 0.67", "-67.4809, -74.4207, -130.498, 0.33", "-68.2623, -74.4086, -131.788, 1.33", "-70.3056, -74.3168, -135.432, 0.33", "-70.8139, -74.2624, -136.516, 1.33", "-71.714, -74.1399, -138.633, 0.33", "-72.4935, -74.0438, -140.556, 0.67", "-75.574, -73.7585, -147.661, 0.33", "-76.2243, -73.6681, -149.034, 1.33", "-77.9866, -73.2848, -152.408, 0.33", "-78.6201, -73.1459, -153.57, 0.67", "-80.909, -72.7412, -157.389, 0.33", "-82.5165, -72.4896, -159.932, 0.67", "-85.2264, -71.9886, -163.926, 0.33", "-85.8294, -71.8632, -164.824, 1.33", "-88.2393, -71.3491, -168.39, 0.33", "-89.1653, -71.1163, -169.876, 1.33", "-91.9688, -70.2183, -174.836, 0.33", "-92.2576, -70.1102, -175.447, 0.67", "-93.4377, -69.6317, -178.082, 0.33", "-93.5164, -69.5996, -178.263, 0.67" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "48.3177, 40.1775, 11.7278, 0.67", "50.9477, 41.2775, 11.4278, 0.67", "59.7747, 45.8676, 10.4199, 0.67", "67.9327, 51.5771, 9.49877, 0.67", "75.1428, 58.2912, 7.78567, 0.67", "81.8431, 65.0737, 4.76846, 0.67", "89.035, 70.4802, 0.404175, 0.67", "96.4815, 74.5052, -4.92018, 0.67", "103.836, 76.8287, -11.2853, 0.67", "112.11, 80.5609, -15.4823, 0.67", "120.925, 83.9337, -18.7861, 0.67", "129.245, 87.0092, -23.4034, 0.67", "137.766, 91.2949, -26.4079, 0.67", "146.173, 95.635, -29.6475, 0.67", "154.585, 100.545, -31.9095, 0.67", "163.477, 105.014, -32.8916, 0.67", "171.791, 110.549, -33.3833, 0.67", "180.522, 115.264, -32.1394, 0.67", "188.958, 119.936, -29.4942, 0.67", "195.863, 125.901, -25.4019, 0.67", "203.291, 131.709, -22.0706, 0.67", "209.95, 138.701, -19.4727, 0.67", "216.682, 145.754, -17.2467, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "48.3177, 40.1775, 11.7278, 0.67", "47.5777, 42.1575, 12.0278, 0.67", "42.1387, 50.3986, 13.6094, 0.67", "35.0297, 57.2876, 15.0252, 0.67", "28.9124, 64.797, 17.5126, 0.67", "22.8185, 72.683, 18.3345, 0.67", "17.3542, 80.5377, 21.2406, 0.67", "12.0753, 88.8474, 22.9963, 0.67", "6.38141, 97.041, 23.6628, 0.67", "1.20215, 105.398, 25.4857, 0.67", "-3.70484, 113.962, 27.0953, 0.67", "-9.51431, 121.725, 29.541, 0.67", "-13.4723, 130.011, 33.4997, 0.67", "-17.4077, 137.401, 38.9687, 0.67", "-19.3691, 145.13, 45.0035, 0.67", "-20.1615, 152.617, 51.5846, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "32.0855, 39.0026, -7.19672, 0.67", "35.9165, 41.0936, -1.41566, 0.67", "37.4951, 41.9552, 0.966536, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "32.0855, 39.0026, -7.19672, 0.67", "33.2192, 40.8751, -8.02765, 0.67", "34.0418, 42.0578, -8.84634, 0.67", "36.4118, 44.9943, -10.6568, 0.67", "37.9091, 46.8866, -11.6409, 0.67", "39.5568, 49.1068, -12.5934, 0.67", "41.3218, 51.735, -13.506, 0.67", "44.2524, 56.3173, -15.0346, 0.67", "46.9538, 60.9395, -16.3594, 0.67", "48.2054, 63.3157, -16.8946, 0.67", "49.079, 65.3661, -17.4432, 1.33", "50.6503, 69.5065, -18.5945, 0.67", "51.3695, 71.6272, -19.1831, 2.0", "52.3801, 74.9818, -20.0193, 0.33", "52.7062, 76.2837, -20.4359, 0.67", "54.1664, 81.6583, -22.2348, 0.33", "54.9394, 84.3595, -23.2423, 0.33", "55.9749, 87.8038, -24.4587, 1.33", "56.494, 89.6269, -24.9786, 0.33", "57.1872, 92.1469, -25.6124, 0.33", "57.4628, 93.0316, -25.7768, 0.33", "58.2777, 95.6807, -26.1849, 0.67", "59.0065, 98.3783, -26.8176, 1.33", "59.897, 101.167, -27.5195, 0.33", "60.537, 102.899, -27.884, 0.67", "61.497, 105.319, -28.048, 0.33", "62.7118, 108.452, -28.1273, 0.67", "63.0976, 109.435, -28.1019, 1.33", "64.4862, 112.906, -28.0024, 0.33", "65.167, 114.425, -27.9514, 1.33", "67.2667, 119.084, -27.7576, 0.33", "68.9898, 122.961, -27.5489, 1.33", "69.8071, 124.717, -27.4014, 0.33", "69.9963, 125.151, -27.419, 0.67", "70.7854, 126.898, -27.712, 0.33", "70.941, 127.197, -27.7599, 0.67", "71.7739, 128.646, -28.0438, 0.33", "73.0241, 130.837, -28.2967, 1.33", "75.0772, 134.457, -28.7534, 0.33", "77.1955, 138.225, -29.2547, 0.33", "78.8484, 141.183, -29.6772, 1.33" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "15.9719, 69.5916, -54.1443, 0.67", "16.9121, 70.8127, -55.568, 0.67", "17.7205, 71.6188, -56.7788, 1.33", "19.0484, 72.7407, -58.7176, 0.67", "20.5851, 73.7727, -61.0839, 0.67", "23.5999, 74.9942, -66.0415, 0.67", "25.2027, 75.3815, -68.4505, 0.67", "26.3887, 75.5138, -70.1929, 0.33", "26.5836, 75.503, -70.4597, 1.33", "30.1602, 74.9159, -74.8558, 0.33", "34.0524, 74.0005, -79.1471, 1.33", "36.5545, 73.3561, -81.3885, 0.33", "37.4743, 73.1456, -82.1298, 0.67", "39.117, 72.8481, -83.4289, 0.33", "40.8458, 72.6702, -84.651, 0.33", "44.0611, 72.4617, -86.3733, 2.0", "47.0911, 72.5145, -87.6515, 0.33", "48.2235, 72.5408, -88.0602, 0.67", "53.1752, 72.4847, -90.024, 0.33", "57.1427, 72.2185, -91.499, 0.33", "60.2796, 71.8631, -92.8158, 1.33", "63.2115, 71.5033, -94.3909, 0.67", "67.3733, 70.8776, -97.0132, 0.33", "72.2958, 69.9962, -100.314, 1.33", "76.2637, 69.2286, -103.295, 0.33", "81.4041, 68.1182, -107.619, 1.33", "87.0473, 67.0579, -112.755, 0.33", "89.2794, 66.6793, -114.934, 0.33", "90.6793, 66.5135, -116.356, 1.33", "94.5521, 66.3246, -120.038, 0.33", "95.967, 66.3435, -121.407, 0.33", "97.3372, 66.4537, -122.431, 0.67", "101.791, 67.1329, -124.968, 0.33", "102.375, 67.2585, -125.333, 0.67", "103.765, 67.5838, -126.182, 0.33", "104.675, 67.8054, -126.659, 0.67", "107.432, 68.4579, -128.058, 0.33", "108.626, 68.6854, -128.604, 1.33", "113.757, 69.3073, -130.478, 0.33", "115.05, 69.3919, -130.922, 0.33", "116.638, 69.3646, -131.412, 0.67", "118.313, 69.2873, -131.814, 0.33", "119.319, 69.2224, -132.099, 0.67", "120.676, 69.1518, -132.474, 0.33", "122.58, 69.0744, -132.875, 0.33", "124.913, 68.9494, -133.398, 1.33", "128.602, 68.6797, -134.279, 0.33", "133.048, 68.2169, -135.408, 0.67", "135.27, 67.8519, -136.111, 0.33", "136.831, 67.5039, -136.688, 1.33", "139.865, 66.6062, -137.921, 0.33", "140.745, 66.3158, -138.301, 0.33", "141.881, 65.886, -138.846, 0.67", "145.976, 64.4176, -141.174, 0.33", "146.607, 64.1933, -141.624, 0.67", "148.139, 63.6716, -142.802, 0.33", "148.69, 63.5002, -143.264, 0.67", "151.796, 62.7237, -145.85, 0.33", "154.322, 62.2474, -147.918, 0.67", "157.151, 61.8184, -150.115, 0.33", "158.159, 61.6393, -150.96, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "15.9719, 69.5916, -54.1443, 0.33", "16.3389, 70.7386, -54.1443, 0.33", "17.132, 73.3689, -54.1443, 0.67", "17.5292, 75.02, -54.274, 0.67", "18.1363, 77.8011, -54.5988, 1.33", "18.803, 80.5627, -54.9788, 0.67", "19.3225, 82.4743, -55.2632, 0.33", "19.6794, 83.7827, -55.4807, 0.67", "20.4843, 86.7146, -56.0058, 0.33", "20.6947, 87.8824, -56.2041, 0.33", "20.815, 89.5534, -56.4644, 0.67", "20.8878, 90.963, -56.6387, 0.33", "21.1514, 94.2772, -56.9122, 0.33", "21.3534, 96.6785, -57.0034, 1.33", "21.5413, 99.5215, -57.0967, 0.33", "21.5421, 100.258, -57.1442, 0.67", "21.4685, 103.077, -57.3799, 0.67", "21.5102, 105.065, -57.6078, 0.67", "21.6913, 107.068, -57.899, 1.33", "21.8928, 109.723, -58.3378, 0.67", "22.0955, 112.216, -58.7837, 0.33", "22.367, 115.316, -59.3376, 0.67", "22.5769, 117.923, -59.7983, 0.33", "22.6335, 118.402, -59.8497, 0.67", "22.9636, 120.734, -59.8869, 0.33", "23.0836, 121.771, -59.7952, 0.67", "23.3101, 124.1, -59.4675, 0.33", "23.3502, 125.128, -59.2413, 0.67", "23.281, 128.16, -58.4603, 0.33", "23.2066, 129.859, -58.3145, 0.67", "23.137, 131.322, -58.6136, 0.67", "22.9356, 133.893, -59.373, 0.33", "22.7118, 135.666, -60.0059, 0.67", "22.4089, 137.726, -60.8148, 0.33", "21.5061, 144.443, -63.6856, 0.67", "21.1471, 148.2, -65.1654, 0.33", "20.8345, 152.652, -66.5975, 1.33", "20.6704, 154.392, -67.0072, 0.33", "20.5257, 156.473, -67.3246, 0.67", "20.4416, 158.412, -67.3944, 0.67", "20.2985, 161.25, -67.1828, 1.33", "20.1437, 163.84, -66.995, 0.67", "19.8514, 167.415, -66.9646, 0.67", "19.5826, 170.336, -66.9907, 0.67", "19.3071, 173.009, -67.1854, 1.33", "18.9782, 175.534, -67.3228, 0.33", "18.7438, 177.22, -67.3836, 0.33", "18.5316, 179.333, -67.6005, 0.33", "18.4882, 180.248, -67.7362, 0.67", "18.4798, 183.94, -68.3823, 0.33", "18.9916, 189.363, -69.4832, 1.33", "19.3977, 191.613, -69.9389, 0.33", "20.2438, 195.779, -70.6953, 0.67", "20.7777, 198.378, -71.0659, 0.33", "21.0467, 200.016, -71.298, 0.33", "21.3567, 202.077, -71.5922, 0.67", "21.5837, 204.118, -72.0622, 1.33", "21.724, 207.055, -72.6678, 0.67", "21.7222, 210.024, -73.1523, 0.33", "21.6583, 212.254, -73.5602, 1.33", "21.4087, 215.786, -74.1553, 0.33", "21.0483, 219.185, -74.7806, 0.33", "20.7826, 221.529, -75.2251, 1.33", "20.5655, 223.897, -75.6724, 0.33", "20.5204, 224.64, -75.7476, 0.67", "20.4337, 227.409, -75.8825, 0.33", "20.3647, 230.396, -75.92, 1.33", "20.4598, 232.633, -75.803, 0.33", "20.5651, 233.83, -75.7359, 0.67", "20.9114, 238.049, -75.4984, 0.33", "21.2725, 241.771, -75.3214, 0.67" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "44.2888, -222.868, -53.872, 0.33", "45.1363, -225.714, -53.5376, 0.33", "45.4483, -227.338, -53.3574, 2.0", "46.2338, -230.203, -53.1225, 0.33", "46.3249, -230.531, -53.1314, 0.67", "46.4695, -231.173, -53.1838, 0.67", "46.7256, -232.546, -53.4542, 0.33", "46.9157, -233.84, -53.8848, 0.67", "47.4033, -238.7, -55.6302, 0.33", "47.6033, -241.108, -56.5824, 0.67", "47.891, -244.234, -57.8751, 0.33", "48.2271, -247.391, -59.2604, 1.33", "48.5036, -249.516, -60.2622, 0.33", "48.6577, -250.901, -60.9689, 0.67" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "44.2888, -222.868, -53.872, 0.67", "44.8512, -220.526, -52.3136, 0.67", "45.259, -218.914, -51.1996, 0.33", "45.4747, -218.062, -50.6121, 1.33", "46.4515, -214.259, -48.0331, 0.67", "47.2432, -211.212, -46.0332, 0.67", "48.0995, -207.681, -43.8421, 0.33", "48.3087, -206.64, -43.2744, 0.33", "48.4087, -206.053, -42.9886, 0.67", "48.4933, -205.351, -42.7448, 0.33", "48.5898, -204.306, -42.6529, 0.67", "48.6449, -201.898, -42.6222, 0.33", "48.5973, -199.159, -42.7556, 0.67", "48.5437, -195.883, -42.7973, 0.33", "48.4811, -193.163, -42.8077, 0.67", "48.3971, -190.735, -42.7803, 0.33", "48.2742, -187.649, -42.6561, 0.67", "48.212, -185.308, -42.4141, 0.67", "48.1551, -183.481, -41.964, 0.67" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "216.682, 145.754, -17.2467, 0.33", "225.372, 150.553, -18.4445, 0.33", "234.85, 153.74, -18.6086, 0.33", "244.803, 154.701, -18.6672, 0.33", "254.74, 154.764, -17.5507, 0.33", "264.434, 156.645, -15.9723, 0.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "216.682, 145.754, -17.2467, 0.33", "224.74, 151.433, -18.9204, 0.33", "232.842, 156.901, -21.0339, 0.33", "240.822, 162.855, -21.9688, 0.33", "249.274, 167.924, -23.6634, 0.33", "257.945, 171.887, -26.681, 0.33" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "158.159, 61.6393, -150.96, 0.33", "159.349, 60.754, -152.792, 0.33", "159.512, 60.6064, -153.039, 0.67", "160.902, 59.134, -155.445, 0.33", "161.112, 58.912, -155.808, 1.33", "163.835, 56.0282, -160.52, 0.33", "164.044, 55.8062, -160.883, 0.67", "164.846, 54.8688, -162.493, 0.33", "166.202, 53.0689, -165.371, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "158.159, 61.6393, -150.96, 0.33", "159.668, 62.4778, -150.96, 0.33", "160.326, 62.8431, -150.96, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "21.2725, 241.771, -75.3214, 0.33", "21.2476, 242.959, -75.1799, 0.33", "21.2853, 244.324, -75.0326, 1.33", "21.3164, 246.341, -74.8329, 0.33", "21.4082, 249.865, -74.4697, 0.67", "21.4541, 251.352, -74.3176, 0.33", "21.5146, 253.284, -74.1296, 0.67", "21.5826, 254.648, -74.008, 0.33", "21.6421, 256.067, -73.9415, 0.33", "21.654, 257.096, -73.9407, 0.67", "21.7074, 258.424, -74.0053, 0.33", "21.7634, 260.425, -74.0248, 0.67", "21.7363, 263.076, -74.2585, 0.67", "21.7684, 265.14, -74.5533, 0.33", "21.8374, 266.807, -74.8556, 1.33", "21.8735, 269.149, -75.3811, 0.67", "21.841, 272.154, -76.1047, 0.33", "21.782, 276.893, -77.1865, 0.33", "21.7635, 278.979, -77.6361, 0.33", "21.7748, 280.287, -77.8859, 0.33", "21.826, 284.156, -78.5761, 0.67", "21.8797, 286.87, -79.0009, 0.67", "22.2378, 291.277, -79.5232, 0.33", "22.2965, 291.74, -79.539, 0.67", "22.5041, 293.399, -79.5841, 0.33", "22.8413, 295.371, -79.6091, 0.67", "23.2093, 296.763, -79.5785, 1.33", "24.4482, 300.458, -79.4734, 0.33", "24.6756, 301.089, -79.4493, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.2725, 241.771, -75.3214, 0.33", "24.2156, 242.517, -77.3627, 0.33", "26.0909, 242.971, -78.5043, 0.33", "30.3076, 244.08, -80.7068, 1.33", "33.2416, 244.725, -81.9947, 0.33", "34.3552, 244.924, -82.4079, 0.67", "37.2362, 245.417, -83.3381, 0.33", "39.692, 245.825, -84.1089, 0.33", "41.3911, 246.088, -84.5518, 1.33", "44.0037, 246.635, -84.8708, 0.33", "45.9095, 247.228, -85.2307, 0.33", "47.3606, 247.954, -85.6306, 0.67", "48.1573, 248.576, -85.9273, 0.67", "49.7894, 250.242, -87.1266, 1.33", "51.1041, 251.995, -88.4957, 0.33", "52.7685, 254.85, -90.7131, 0.67", "53.752, 256.679, -92.1161, 0.33", "54.0682, 257.209, -92.5328, 0.67", "56.8874, 260.67, -95.6146, 0.33", "57.6524, 261.463, -96.434, 0.33", "57.9355, 261.713, -96.7212, 0.67", "59.2119, 262.636, -97.786, 0.33", "60.6762, 263.658, -98.9617, 1.33", "64.3139, 266.207, -101.49, 0.33", "66.4695, 267.906, -102.971, 0.67", "68.0357, 269.349, -104.329, 0.33", "68.6069, 269.91, -104.862, 0.67", "69.892, 271.416, -106.291, 0.33", "70.3723, 272.167, -106.926, 0.67", "71.9729, 276.067, -109.596, 0.33", "72.8626, 278.456, -111.322, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_0", "apic_2", "apic_1", "dend_12", "dend_1", "apic_6", "apic_3", "dend_22", "dend_13", "dend_3", "dend_2", "apic_10", "apic_7", "apic_5", "apic_4", "dend_17", "dend_14", "dend_5", "dend_4", "apic_14", "apic_11", "apic_9", "apic_8", "dend_19", "dend_18", "dend_16", "dend_15", "dend_9", "dend_6", "apic_13", "apic_12", "dend_21", "dend_20", "dend_11", "dend_10", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_0", "apic_2", "apic_1", "dend_12", "dend_1", "apic_6", "apic_3", "dend_22", "dend_13", "dend_3", "dend_2", "apic_10", "apic_7", "apic_5", "apic_4", "dend_17", "dend_14", "dend_5", "dend_4", "apic_14", "apic_11", "apic_9", "apic_8", "dend_19", "dend_18", "dend_16", "dend_15", "dend_9", "dend_6", "apic_13", "apic_12", "dend_21", "dend_20", "dend_11", "dend_10", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_12", "dend_1", "axon_1", "axon_1", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_3", "apic_3", "apic_3", "apic_3", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_MC_2c0a7badf4_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_2
create apic_6
public apic_6
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_22, id: dend_22, parent: dend_12
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_2, apic_1, dend_12, dend_1, apic_6, apic_3, dend_22, dend_13, dend_3, dend_2, apic_10, apic_7, apic_5, apic_4, dend_17, dend_14, dend_5, dend_4, apic_14, apic_11, apic_9, apic_8, dend_19, dend_18, dend_16, dend_15, dend_9, dend_6, apic_13, apic_12, dend_21, dend_20, dend_11, dend_10, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_2, apic_1, dend_12, dend_1, apic_6, apic_3, dend_22, dend_13, dend_3, dend_2, apic_10, apic_7, apic_5, apic_4, dend_17, dend_14, dend_5, dend_4, apic_14, apic_11, apic_9, apic_8, dend_19, dend_18, dend_16, dend_15, dend_9, dend_6, apic_13, apic_12, dend_21, dend_20, dend_11, dend_10, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_12, dend_1, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4500002781037023)
    connect dend_0(0), soma_0(0.4500002781037023)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_22(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.95886, -11.1162, -3.26687, 2.24062 ) }
    soma_0 { pt3dadd( 1.81316, -10.0989, -2.96355, 3.79206 ) }
    soma_0 { pt3dadd( 1.66746, -9.08156, -2.66023, 5.71887 ) }
    soma_0 { pt3dadd( 1.52175, -8.06425, -2.35691, 7.64568 ) }
    soma_0 { pt3dadd( 1.37605, -7.04694, -2.05359, 9.5329 ) }
    soma_0 { pt3dadd( 1.23035, -6.02963, -1.75027, 11.2315 ) }
    soma_0 { pt3dadd( 1.08464, -5.01232, -1.44695, 12.1892 ) }
    soma_0 { pt3dadd( 0.938938, -3.995, -1.14363, 13.0362 ) }
    soma_0 { pt3dadd( 0.793235, -2.97769, -0.84031, 13.126 ) }
    soma_0 { pt3dadd( 0.647532, -1.96038, -0.536989, 13.2053 ) }
    soma_0 { pt3dadd( 0.501828, -0.94307, -0.233669, 13.2847 ) }
    soma_0 { pt3dadd( 0.356125, 0.0742422, 0.0696518, 13.3558 ) }
    soma_0 { pt3dadd( 0.210422, 1.09155, 0.372972, 13.3989 ) }
    soma_0 { pt3dadd( 0.0647183, 2.10887, 0.676293, 13.0039 ) }
    soma_0 { pt3dadd( -0.080985, 3.12618, 0.979613, 12.1764 ) }
    soma_0 { pt3dadd( -0.226688, 4.14349, 1.28293, 11.0999 ) }
    soma_0 { pt3dadd( -0.372392, 5.1608, 1.58625, 9.82961 ) }
    soma_0 { pt3dadd( -0.518095, 6.17811, 1.88958, 8.55654 ) }
    soma_0 { pt3dadd( -0.663798, 7.19542, 2.1929, 6.8354 ) }
    soma_0 { pt3dadd( -0.809502, 8.21274, 2.49622, 4.23645 ) }
    soma_0 { pt3dadd( -0.955205, 9.23005, 2.79954, 2.56974 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.15247, -10.7386, 5.33321, 2.67 ) }
    apic_0 { pt3dadd( 3.60411, -18.8835, 1.62955, 2.0 ) }
    apic_0 { pt3dadd( 4.68776, -22.4836, -0.00750001, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.29247, 10.2114, -1.16679, 3.33 ) }
    dend_0 { pt3dadd( 1.6892, 15.3516, -2.50354, 2.67 ) }
    dend_0 { pt3dadd( 1.9686, 18.9714, -3.44491, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 27/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.955205, 9.23005, 2.79954, 0.67 ) }
    axon_0 { pt3dadd( -3.08186, 24.0785, 2.79954, 0.67 ) }
    axon_0 { pt3dadd( -5.20851, 38.927, 2.79954, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 30/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 4.68776, -22.4836, -0.00750001, 2.0 ) }
    apic_2 { pt3dadd( 7.20898, -27.3963, -9.90291, 2.0 ) }
    apic_2 { pt3dadd( 8.81886, -30.5333, -16.2215, 2.0 ) }
    apic_2 { pt3dadd( 9.84788, -32.5385, -20.2602, 2.0 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 34/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 4.68776, -22.4836, -0.00750001, 0.67 ) }
    apic_1 { pt3dadd( 3.8317, -23.5917, 1.24213, 0.67 ) }
    apic_1 { pt3dadd( 2.58051, -24.7935, 2.80014, 0.33 ) }
    apic_1 { pt3dadd( 1.63354, -25.703, 3.97934, 1.33 ) }
    apic_1 { pt3dadd( -0.0209705, -27.2921, 6.03957, 0.67 ) }
    apic_1 { pt3dadd( -1.34784, -28.5665, 7.69182, 0.67 ) }
    apic_1 { pt3dadd( -3.14372, -30.2914, 9.92808, 0.67 ) }
    apic_1 { pt3dadd( -4.26172, -31.2939, 11.4504, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 42/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.9686, 18.9714, -3.44491, 2.0 ) }
    dend_12 { pt3dadd( 2.2186, 21.3114, 0.0550911, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.9686, 18.9714, -3.44491, 1.33 ) }
    dend_1 { pt3dadd( 7.3386, 21.7914, -26.0349, 1.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 46/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.20851, 38.927, 2.79954, 0.33 ) }
    axon_1 { pt3dadd( -7.33517, 53.7755, 2.79954, 0.33 ) }
    axon_1 { pt3dadd( -9.46182, 68.624, 2.79954, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_2 (entry count 49/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 9.84788, -32.5385, -20.2602, 1.33 ) }
    apic_6 { pt3dadd( 10.3172, -36.1197, -17.7018, 1.33 ) }
    apic_6 { pt3dadd( 10.8059, -39.8495, -15.0372, 1.33 ) }
    apic_6 { pt3dadd( 11.0825, -41.96, -13.5295, 1.33 ) }
    apic_6 { pt3dadd( 11.6658, -46.4113, -10.3495, 1.33 ) }
    apic_6 { pt3dadd( 12.0253, -49.1549, -8.38946, 1.33 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 55/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 9.84788, -32.5385, -20.2602, 1.33 ) }
    apic_3 { pt3dadd( 16.5973, -34.786, -9.65897, 1.33 ) }
    apic_3 { pt3dadd( 17.882, -35.2139, -7.64098, 1.33 ) }
    apic_3 { pt3dadd( 20.4216, -36.0596, -3.65214, 1.33 ) }
    apic_3 { pt3dadd( 22.7169, -36.8239, -0.0469599, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_12 (entry count 60/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 2.2186, 21.3114, 0.0550911, 1.33 ) }
    dend_22 { pt3dadd( 1.46019, 23.7423, 1.1983, 1.33 ) }
    dend_22 { pt3dadd( -0.639761, 28.421, 4.01786, 0.67 ) }
    dend_22 { pt3dadd( -1.75891, 30.5124, 5.24769, 0.67 ) }
    dend_22 { pt3dadd( -3.08762, 32.7, 6.44992, 0.67 ) }
    dend_22 { pt3dadd( -4.96004, 34.9292, 8.00055, 0.67 ) }
    dend_22 { pt3dadd( -8.48153, 38.6182, 10.9491, 0.67 ) }
    dend_22 { pt3dadd( -12.0958, 41.7913, 14.0958, 0.67 ) }
    dend_22 { pt3dadd( -13.2776, 42.6686, 15.018, 0.67 ) }
    dend_22 { pt3dadd( -14.882, 43.7431, 16.3686, 0.67 ) }
    dend_22 { pt3dadd( -19.397, 46.6374, 20.5881, 0.67 ) }
    dend_22 { pt3dadd( -21.7053, 48.1342, 22.9068, 0.67 ) }
    dend_22 { pt3dadd( -23.2993, 49.1322, 24.2737, 0.67 ) }
    dend_22 { pt3dadd( -29.4074, 55.4176, 29.0888, 0.67 ) }
    dend_22 { pt3dadd( -35.2542, 61.0627, 34.9153, 0.67 ) }
    dend_22 { pt3dadd( -40.8359, 66.8737, 40.8379, 0.67 ) }
    dend_22 { pt3dadd( -47.0632, 71.4033, 47.2178, 0.67 ) }
    dend_22 { pt3dadd( -52.4793, 75.3657, 54.6316, 0.67 ) }
    dend_22 { pt3dadd( -56.2226, 80.0213, 62.6512, 0.67 ) }
    dend_22 { pt3dadd( -60.4531, 83.5499, 70.997, 0.67 ) }
    dend_22 { pt3dadd( -64.8219, 85.995, 79.6535, 0.67 ) }
    dend_22 { pt3dadd( -68.6725, 88.6616, 88.4887, 0.67 ) }
    dend_22 { pt3dadd( -71.7816, 90.7568, 97.7593, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 83/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.2186, 21.3114, 0.0550911, 0.67 ) }
    dend_13 { pt3dadd( 5.31953, 22.9658, 0.532095, 0.67 ) }
    dend_13 { pt3dadd( 11.7681, 26.4061, 1.52406, 0.67 ) }
    dend_13 { pt3dadd( 18.0939, 29.7808, 2.49713, 0.67 ) }
    dend_13 { pt3dadd( 22.3305, 32.0411, 3.14883, 0.67 ) }
    dend_13 { pt3dadd( 24.0304, 32.948, 3.41032, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 7.3386, 21.7914, -26.0349, 1.33 ) }
    dend_3 { pt3dadd( 7.68382, 26.6186, -28.6489, 1.33 ) }
    dend_3 { pt3dadd( 9.35521, 38.0848, -35.1954, 1.33 ) }
    dend_3 { pt3dadd( 9.62271, 39.9199, -36.2432, 1.33 ) }
    dend_3 { pt3dadd( 10.1283, 43.3887, -38.2236, 1.33 ) }
    dend_3 { pt3dadd( 10.7354, 47.5537, -40.6016, 1.33 ) }
    dend_3 { pt3dadd( 11.3394, 51.6971, -42.9672, 0.67 ) }
    dend_3 { pt3dadd( 13.0822, 59.92, -47.5187, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.3386, 21.7914, -26.0349, 0.67 ) }
    dend_2 { pt3dadd( 14.1297, 25.5815, -28.5742, 0.67 ) }
    dend_2 { pt3dadd( 16.2363, 27.0096, -30.2937, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( 19.7767, 29.4586, -33.9919, 0.67 ) }
    dend_2 { pt3dadd( 20.8952, 30.3275, -35.476, 0.67 ) }
    dend_2 { pt3dadd( 22.9579, 31.9715, -38.7647, 0.67 ) }
    dend_2 { pt3dadd( 27.2985, 35.6606, -46.4446, 0.67 ) }
    dend_2 { pt3dadd( 28.1984, 36.5326, -48.3608, 0.67 ) }
    dend_2 { pt3dadd( 29.2034, 37.6492, -50.8423, 0.67 ) }
    dend_2 { pt3dadd( 31.2151, 40.4574, -56.8132, 0.67 ) }
    dend_2 { pt3dadd( 33.0356, 43.1528, -62.4956, 1.33 ) }
    dend_2 { pt3dadd( 33.746, 44.1723, -64.6141, 0.67 ) }
    dend_2 { pt3dadd( 34.7854, 45.3345, -66.799, 0.33 ) }
    dend_2 { pt3dadd( 35.1027, 45.659, -67.3983, 0.67 ) }
    dend_2 { pt3dadd( 36.7222, 47.1466, -70.0675, 0.33 ) }
    dend_2 { pt3dadd( 37.7963, 47.9902, -71.5302, 0.33 ) }
    dend_2 { pt3dadd( 41.4437, 50.62, -76.1583, 1.33 ) }
    dend_2 { pt3dadd( 45.2437, 53.0718, -80.6722, 0.33 ) }
    dend_2 { pt3dadd( 46.1939, 53.6175, -81.9009, 1.33 ) }
    dend_2 { pt3dadd( 47.6037, 54.3918, -83.7801, 0.33 ) }
    dend_2 { pt3dadd( 48.4884, 54.8309, -84.9196, 0.67 ) }
    dend_2 { pt3dadd( 51.3331, 56.2953, -88.866, 0.33 ) }
    dend_2 { pt3dadd( 52.9091, 57.0327, -91.1854, 1.33 ) }
    dend_2 { pt3dadd( 57.8818, 59.2079, -98.9785, 0.33 ) }
    dend_2 { pt3dadd( 58.2352, 59.3485, -99.5304, 1.33 ) }
    dend_2 { pt3dadd( 59.8949, 59.9822, -101.971, 0.33 ) }
    dend_2 { pt3dadd( 61.2236, 60.4736, -103.783, 1.33 ) }
    dend_2 { pt3dadd( 66.3467, 62.4615, -109.951, 0.33 ) }
    dend_2 { pt3dadd( 67.7219, 63.0435, -111.546, 0.67 ) }
    dend_2 { pt3dadd( 68.7475, 63.5581, -112.504, 0.33 ) }
    dend_2 { pt3dadd( 70.687, 64.6515, -114.299, 0.33 ) }
    dend_2 { pt3dadd( 71.18, 64.9704, -114.761, 0.67 ) }
    dend_2 { pt3dadd( 72.3554, 65.7693, -115.64, 0.33 ) }
    dend_2 { pt3dadd( 73.7413, 67.0158, -116.235, 0.67 ) }
    dend_2 { pt3dadd( 74.9299, 68.1461, -116.783, 0.33 ) }
    dend_2 { pt3dadd( 75.7491, 69.135, -117.305, 1.33 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 33/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 12.0253, -49.1549, -8.38946, 0.67 ) }
    apic_10 { pt3dadd( 11.7947, -52.1519, -9.6, 0.67 ) }
    apic_10 { pt3dadd( 11.2036, -59.8342, -12.703, 0.67 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 36/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 12.0253, -49.1549, -8.38946, 1.33 ) }
    apic_7 { pt3dadd( 8.08041, -49.5518, -10.9965, 1.33 ) }
    apic_7 { pt3dadd( 4.77167, -49.874, -13.3181, 1.33 ) }
    apic_7 { pt3dadd( 3.34019, -49.9477, -14.491, 0.67 ) }
    apic_7 { pt3dadd( 0.857356, -50.0834, -16.717, 1.33 ) }
    apic_7 { pt3dadd( -3.64407, -50.4631, -20.9657, 0.67 ) }
    apic_7 { pt3dadd( -8.01952, -51.1643, -25.4834, 0.67 ) }
    apic_7 { pt3dadd( -9.18376, -51.4488, -27.2203, 0.67 ) }
    apic_7 { pt3dadd( -10.9185, -51.9669, -30.3023, 0.67 ) }
    apic_7 { pt3dadd( -11.8754, -52.2715, -32.2113, 0.67 ) }
    apic_7 { pt3dadd( -12.513, -52.5275, -33.7697, 0.67 ) }
    apic_7 { pt3dadd( -13.7666, -53.79, -37.6651, 1.33 ) }
    apic_7 { pt3dadd( -15.1017, -56.8335, -44.9121, 2.0 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 49/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 22.7169, -36.8239, -0.0469599, 0.67 ) }
    apic_5 { pt3dadd( 26.13, -38.0639, -2.12301, 0.67 ) }
    apic_5 { pt3dadd( 28.993, -39.5193, -3.46676, 0.67 ) }
    apic_5 { pt3dadd( 32.0518, -41.2137, -4.71985, 0.67 ) }
    apic_5 { pt3dadd( 35.2049, -43.0114, -5.84832, 0.67 ) }
    apic_5 { pt3dadd( 39.4318, -45.5125, -7.44788, 0.67 ) }
    apic_5 { pt3dadd( 43.4876, -47.8771, -8.96032, 0.67 ) }
    apic_5 { pt3dadd( 46.4183, -49.868, -9.99041, 0.67 ) }
    apic_5 { pt3dadd( 51.3053, -53.4837, -11.4377, 0.67 ) }
    apic_5 { pt3dadd( 52.5634, -54.4701, -11.8134, 1.33 ) }
    apic_5 { pt3dadd( 55.8845, -57.1536, -12.9539, 0.67 ) }
    apic_5 { pt3dadd( 57.8524, -58.7657, -13.836, 0.67 ) }
    apic_5 { pt3dadd( 59.7524, -60.3499, -14.964, 0.67 ) }
    apic_5 { pt3dadd( 61.7634, -62.1022, -16.3369, 1.33 ) }
    apic_5 { pt3dadd( 64.7777, -65.0529, -18.4598, 0.67 ) }
    apic_5 { pt3dadd( 66.1247, -66.387, -19.4242, 1.33 ) }
    apic_5 { pt3dadd( 69.1143, -69.4529, -21.4419, 0.67 ) }
    apic_5 { pt3dadd( 70.3371, -70.7278, -22.2501, 0.33 ) }
    apic_5 { pt3dadd( 70.6508, -71.0195, -22.4357, 1.33 ) }
    apic_5 { pt3dadd( 71.9667, -72.077, -23.0509, 0.67 ) }
    apic_5 { pt3dadd( 73.2612, -73.0686, -23.3976, 0.33 ) }
    apic_5 { pt3dadd( 74.938, -74.3288, -23.6298, 1.33 ) }
    apic_5 { pt3dadd( 77.1606, -76.1366, -23.6452, 0.33 ) }
    apic_5 { pt3dadd( 78.0554, -76.9344, -23.6563, 0.33 ) }
    apic_5 { pt3dadd( 79.032, -77.9075, -23.6723, 0.67 ) }
    apic_5 { pt3dadd( 80.6669, -79.6972, -23.8227, 0.33 ) }
    apic_5 { pt3dadd( 81.935, -81.1357, -24.109, 1.33 ) }
    apic_5 { pt3dadd( 83.4756, -82.9538, -24.6186, 0.33 ) }
    apic_5 { pt3dadd( 84.7579, -84.5404, -25.1466, 0.33 ) }
    apic_5 { pt3dadd( 86.3339, -86.4106, -25.8358, 0.33 ) }
    apic_5 { pt3dadd( 87.8577, -88.1157, -26.6179, 1.33 ) }
    apic_5 { pt3dadd( 89.7925, -90.0331, -27.7028, 0.33 ) }
    apic_5 { pt3dadd( 90.25, -90.4266, -27.9889, 0.67 ) }
    apic_5 { pt3dadd( 91.5708, -91.4921, -28.9343, 0.33 ) }
    apic_5 { pt3dadd( 92.7684, -92.363, -29.7601, 0.67 ) }
    apic_5 { pt3dadd( 94.5941, -93.5566, -30.938, 0.33 ) }
    apic_5 { pt3dadd( 96.0469, -94.5417, -31.7266, 0.67 ) }
    apic_5 { pt3dadd( 98.5958, -96.2092, -32.9236, 0.33 ) }
    apic_5 { pt3dadd( 100.499, -97.4246, -33.7413, 0.67 ) }
    apic_5 { pt3dadd( 103.834, -99.5237, -34.979, 0.67 ) }
    apic_5 { pt3dadd( 105.436, -100.523, -35.4768, 1.33 ) }
    apic_5 { pt3dadd( 108.356, -102.311, -36.1218, 0.67 ) }
    apic_5 { pt3dadd( 110.343, -103.541, -36.4256, 0.67 ) }
    apic_5 { pt3dadd( 111.35, -104.176, -36.5698, 1.33 ) }
    apic_5 { pt3dadd( 113.793, -105.849, -36.9832, 0.33 ) }
    apic_5 { pt3dadd( 113.793, -105.849, -36.9832, 1.33 ) }
    apic_5 { pt3dadd( 115.311, -107.227, -37.5229, 0.33 ) }
    apic_5 { pt3dadd( 115.531, -107.453, -37.6184, 0.67 ) }
    apic_5 { pt3dadd( 118.547, -110.997, -38.9286, 0.33 ) }
    apic_5 { pt3dadd( 120.62, -113.648, -39.8094, 0.33 ) }
    apic_5 { pt3dadd( 122.037, -115.566, -40.3961, 2.0 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_5 { pt3dadd( 124.124, -118.292, -41.1416, 0.33 ) }
    apic_5 { pt3dadd( 124.738, -119.061, -41.3221, 1.33 ) }
    apic_5 { pt3dadd( 126.789, -121.632, -41.6546, 0.33 ) }
    apic_5 { pt3dadd( 127.614, -122.675, -41.6322, 0.33 ) }
    apic_5 { pt3dadd( 128.142, -123.239, -41.5808, 0.67 ) }
    apic_5 { pt3dadd( 129.394, -124.383, -41.4508, 0.33 ) }
    apic_5 { pt3dadd( 130.013, -124.802, -41.4427, 1.33 ) }
    apic_5 { pt3dadd( 132.49, -126.182, -41.4949, 0.33 ) }
    apic_5 { pt3dadd( 132.791, -126.316, -41.5104, 0.67 ) }
    apic_5 { pt3dadd( 135.079, -127.195, -41.66, 0.33 ) }
    apic_5 { pt3dadd( 137.404, -128.058, -41.839, 0.67 ) }
    apic_5 { pt3dadd( 139.603, -128.829, -42.0683, 0.33 ) }
    apic_5 { pt3dadd( 140.906, -129.224, -42.2478, 0.67 ) }
    apic_5 { pt3dadd( 143.231, -129.741, -42.6946, 0.33 ) }
    apic_5 { pt3dadd( 143.872, -129.892, -42.8194, 0.67 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 15/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 22.7169, -36.8239, -0.0469599, 0.67 ) }
    apic_4 { pt3dadd( 24.3818, -38.8062, -1.26635, 0.67 ) }
    apic_4 { pt3dadd( 25.6724, -40.2031, -1.97545, 0.67 ) }
    apic_4 { pt3dadd( 26.6132, -41.2642, -2.43278, 0.33 ) }
    apic_4 { pt3dadd( 28.047, -43.0156, -2.99153, 1.33 ) }
    apic_4 { pt3dadd( 31.4868, -46.4599, -3.58068, 0.67 ) }
    apic_4 { pt3dadd( 32.2965, -47.1304, -3.65126, 1.33 ) }
    apic_4 { pt3dadd( 34.7434, -48.919, -3.66703, 0.67 ) }
    apic_4 { pt3dadd( 35.8298, -49.7517, -3.68499, 0.67 ) }
    apic_4 { pt3dadd( 39.2137, -52.2009, -3.61546, 0.67 ) }
    apic_4 { pt3dadd( 44.1187, -55.8256, -3.00568, 0.67 ) }
    apic_4 { pt3dadd( 46.125, -57.4193, -2.55685, 0.67 ) }
    apic_4 { pt3dadd( 50.7802, -61.2507, -1.46472, 0.67 ) }
    apic_4 { pt3dadd( 54.5673, -64.4782, -0.585933, 0.67 ) }
    apic_4 { pt3dadd( 56.443, -66.178, -0.0759659, 0.67 ) }
    apic_4 { pt3dadd( 59.67, -69.5248, 0.999492, 0.67 ) }
    apic_4 { pt3dadd( 62.5267, -73.1129, 2.1, 0.67 ) }
    apic_4 { pt3dadd( 64.2916, -75.46, 3.00021, 0.67 ) }
    apic_4 { pt3dadd( 65.5142, -77.0199, 3.79302, 0.67 ) }
    apic_4 { pt3dadd( 67.1965, -78.9728, 5.1075, 0.67 ) }
    apic_4 { pt3dadd( 68.262, -80.2396, 5.89783, 0.67 ) }
    apic_4 { pt3dadd( 69.5738, -81.6743, 6.76836, 0.33 ) }
    apic_4 { pt3dadd( 71.0047, -83.4506, 8.18495, 0.67 ) }
    apic_4 { pt3dadd( 71.5385, -84.2357, 8.91701, 0.33 ) }
    apic_4 { pt3dadd( 72.8263, -85.9052, 10.937, 1.33 ) }
    apic_4 { pt3dadd( 75.9238, -90.4166, 19.3067, 1.33 ) }
    apic_4 { pt3dadd( 79.2435, -95.3916, 27.321, 1.33 ) }
    apic_4 { pt3dadd( 83.308, -101.041, 34.5021, 1.33 ) }
    apic_4 { pt3dadd( 86.1274, -107.187, 41.8698, 1.33 ) }
    apic_4 { pt3dadd( 89.5585, -112.29, 49.7551, 1.33 ) }
    apic_4 { pt3dadd( 93.4327, -118.317, 56.7312, 1.33 ) }
    apic_4 { pt3dadd( 98.8197, -124.265, 62.6985, 1.33 ) }
    apic_4 { pt3dadd( 103.566, -131.587, 67.5838, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 24.0304, 32.948, 3.41032, 0.67 ) }
    dend_17 { pt3dadd( 27.0823, 34.0336, 4.4955, 0.67 ) }
    dend_17 { pt3dadd( 29.0337, 34.6159, 5.14021, 0.67 ) }
    dend_17 { pt3dadd( 32.8509, 35.699, 6.43654, 0.67 ) }
    dend_17 { pt3dadd( 35.3135, 36.3978, 7.27283, 0.67 ) }
    dend_17 { pt3dadd( 39.6759, 37.6356, 8.75428, 0.67 ) }
    dend_17 { pt3dadd( 44.2417, 38.9312, 10.3048, 0.67 ) }
    dend_17 { pt3dadd( 45.8838, 39.422, 10.8439, 0.67 ) }
    dend_17 { pt3dadd( 48.3177, 40.1775, 11.7278, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 57/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 24.0304, 32.948, 3.41032, 0.67 ) }
    dend_14 { pt3dadd( 27.1507, 35.2934, -0.698548, 0.67 ) }
    dend_14 { pt3dadd( 28.8339, 36.5585, -2.91499, 0.67 ) }
    dend_14 { pt3dadd( 29.5667, 37.1093, -3.87992, 0.67 ) }
    dend_14 { pt3dadd( 32.0855, 39.0026, -7.19672, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 62/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 13.0822, 59.92, -47.5187, 1.33 ) }
    dend_5 { pt3dadd( 13.8813, 62.5946, -49.3509, 1.33 ) }
    dend_5 { pt3dadd( 14.3972, 64.3212, -50.5338, 0.33 ) }
    dend_5 { pt3dadd( 15.9719, 69.5916, -54.1443, 1.34 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 66/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.0822, 59.92, -47.5187, 0.67 ) }
    dend_4 { pt3dadd( 7.40885, 73.4448, -35.1234, 0.67 ) }
    dend_4 { pt3dadd( 6.18841, 76.3724, -33.1006, 1.33 ) }
    dend_4 { pt3dadd( 4.99851, 79.4062, -31.5462, 0.67 ) }
    dend_4 { pt3dadd( 3.44758, 83.1871, -30.09, 0.67 ) }
    dend_4 { pt3dadd( 2.80615, 84.6511, -29.5967, 1.33 ) }
    dend_4 { pt3dadd( 1.66652, 87.1344, -28.9372, 0.67 ) }
    dend_4 { pt3dadd( 0.676323, 89.2985, -29.2461, 0.33 ) }
    dend_4 { pt3dadd( -1.86566, 94.0123, -29.7905, 0.67 ) }
    dend_4 { pt3dadd( -3.36252, 96.5232, -30.0929, 0.67 ) }
    dend_4 { pt3dadd( -4.1235, 97.6825, -30.1557, 0.67 ) }
    dend_4 { pt3dadd( -5.89418, 100.169, -30.3243, 0.67 ) }
    dend_4 { pt3dadd( -6.90537, 101.482, -30.4292, 0.33 ) }
    dend_4 { pt3dadd( -8.36708, 103.376, -30.7333, 0.33 ) }
    dend_4 { pt3dadd( -9.5314, 104.616, -31.2292, 1.33 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 81/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 11.2036, -59.8342, -12.703, 0.67 ) }
    apic_14 { pt3dadd( 10.5635, -62.0527, -13.1737, 0.67 ) }
    apic_14 { pt3dadd( 8.75578, -67.0999, -14.3705, 0.67 ) }
    apic_14 { pt3dadd( 7.0588, -73.5286, -14.9439, 0.67 ) }
    apic_14 { pt3dadd( 6.01884, -80.6457, -15.2212, 0.67 ) }
    apic_14 { pt3dadd( 6.13605, -84.1197, -15.2172, 0.67 ) }
    apic_14 { pt3dadd( 6.45146, -87.5881, -15.1709, 0.67 ) }
    apic_14 { pt3dadd( 6.45146, -87.5881, -15.1709, 0.67 ) }
    apic_14 { pt3dadd( 8.21894, -95.1228, -15.173, 0.67 ) }
    apic_14 { pt3dadd( 9.54627, -98.9054, -14.9495, 0.67 ) }
    apic_14 { pt3dadd( 12.5396, -106.027, -14.2632, 0.67 ) }
    apic_14 { pt3dadd( 13.5375, -108.349, -14.0856, 1.33 ) }
    apic_14 { pt3dadd( 15.4133, -112.722, -13.733, 1.33 ) }
    apic_14 { pt3dadd( 16.5511, -115.798, -13.5017, 0.67 ) }
    apic_14 { pt3dadd( 17.1708, -117.862, -13.3755, 1.33 ) }
    apic_14 { pt3dadd( 17.9659, -121.24, -13.093, 1.33 ) }
    apic_14 { pt3dadd( 18.9757, -126.284, -12.5597, 1.33 ) }
    apic_14 { pt3dadd( 19.6223, -129.686, -12.1663, 1.33 ) }
    apic_14 { pt3dadd( 20.2549, -133.778, -11.6469, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_14 { pt3dadd( 20.6351, -136.749, -11.2482, 0.67 ) }
    apic_14 { pt3dadd( 21.1506, -141.561, -10.5882, 1.33 ) }
    apic_14 { pt3dadd( 21.4241, -143.873, -10.2445, 0.67 ) }
    apic_14 { pt3dadd( 21.8483, -146.143, -9.90081, 0.67 ) }
    apic_14 { pt3dadd( 23.3857, -155.623, -7.11478, 0.67 ) }
    apic_14 { pt3dadd( 23.6873, -164.947, -3.51289, 0.67 ) }
    apic_14 { pt3dadd( 24.19, -174.096, 0.492966, 0.67 ) }
    apic_14 { pt3dadd( 24.7995, -182.135, 6.40895, 0.67 ) }
    apic_14 { pt3dadd( 26.0811, -190.357, 11.9549, 0.67 ) }
    apic_14 { pt3dadd( 26.2943, -198.492, 17.7663, 0.67 ) }
    apic_14 { pt3dadd( 26.1189, -207.705, 21.6498, 0.67 ) }
    apic_14 { pt3dadd( 24.8945, -216.319, 26.5807, 0.67 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 12/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 11.2036, -59.8342, -12.703, 0.67 ) }
    apic_11 { pt3dadd( 14.7095, -64.3409, -17.6088, 0.67 ) }
    apic_11 { pt3dadd( 16.2032, -66.225, -19.5347, 0.67 ) }
    apic_11 { pt3dadd( 19.082, -69.6733, -23.0971, 0.67 ) }
    apic_11 { pt3dadd( 21.7306, -72.6533, -26.1997, 1.33 ) }
    apic_11 { pt3dadd( 22.5871, -73.6827, -27.3059, 0.67 ) }
    apic_11 { pt3dadd( 23.4324, -74.6909, -28.3849, 0.67 ) }
    apic_11 { pt3dadd( 24.2734, -75.7802, -29.3687, 0.67 ) }
    apic_11 { pt3dadd( 25.2302, -76.8967, -30.5515, 1.33 ) }
    apic_11 { pt3dadd( 25.7773, -77.4605, -31.1715, 1.33 ) }
    apic_11 { pt3dadd( 28.4804, -80.7343, -34.767, 0.67 ) }
    apic_11 { pt3dadd( 29.4998, -82.3173, -36.4699, 0.67 ) }
    apic_11 { pt3dadd( 29.8868, -83.0066, -37.1664, 1.33 ) }
    apic_11 { pt3dadd( 30.9454, -85.4554, -39.4138, 0.33 ) }
    apic_11 { pt3dadd( 31.7396, -87.9538, -41.3839, 0.67 ) }
    apic_11 { pt3dadd( 32.4962, -91.3529, -43.6691, 0.67 ) }
    apic_11 { pt3dadd( 32.8699, -93.7472, -44.9683, 0.67 ) }
    apic_11 { pt3dadd( 33.007, -96.1181, -46.0414, 0.67 ) }
    apic_11 { pt3dadd( 33.1241, -99.3529, -47.2658, 2.0 ) }
    apic_11 { pt3dadd( 33.1707, -102.09, -48.0462, 0.33 ) }
    apic_11 { pt3dadd( 33.2515, -105.045, -48.6652, 0.67 ) }
    apic_11 { pt3dadd( 33.2762, -107.387, -48.9232, 1.33 ) }
    apic_11 { pt3dadd( 33.1446, -110.94, -49.3473, 0.67 ) }
    apic_11 { pt3dadd( 32.9598, -112.942, -49.6093, 0.33 ) }
    apic_11 { pt3dadd( 32.6897, -115.272, -49.8002, 0.33 ) }
    apic_11 { pt3dadd( 32.2097, -118.628, -50.121, 1.33 ) }
    apic_11 { pt3dadd( 31.6557, -121.911, -50.4581, 0.33 ) }
    apic_11 { pt3dadd( 30.8628, -127.061, -51.0065, 0.33 ) }
    apic_11 { pt3dadd( 30.4605, -130.077, -51.3232, 0.33 ) }
    apic_11 { pt3dadd( 30.0073, -133.516, -51.6625, 2.0 ) }
    apic_11 { pt3dadd( 29.6533, -138.853, -52.1451, 0.33 ) }
    apic_11 { pt3dadd( 29.663, -140.839, -52.295, 0.67 ) }
    apic_11 { pt3dadd( 29.8233, -143.811, -52.4347, 0.67 ) }
    apic_11 { pt3dadd( 30.1678, -146.48, -52.4297, 0.33 ) }
    apic_11 { pt3dadd( 30.3959, -147.829, -52.4705, 1.33 ) }
    apic_11 { pt3dadd( 31.0722, -150.892, -52.7055, 0.33 ) }
    apic_11 { pt3dadd( 31.282, -151.609, -52.686, 0.67 ) }
    apic_11 { pt3dadd( 31.9071, -154.068, -52.55, 0.33 ) }
    apic_11 { pt3dadd( 32.0265, -154.799, -52.4914, 0.33 ) }
    apic_11 { pt3dadd( 32.1128, -155.546, -52.4923, 0.67 ) }
    apic_11 { pt3dadd( 32.382, -157.922, -52.7035, 0.33 ) }
    apic_11 { pt3dadd( 32.4836, -159.341, -53.0075, 1.33 ) }
    apic_11 { pt3dadd( 32.6454, -161.29, -53.3856, 0.33 ) }
    apic_11 { pt3dadd( 32.7411, -161.944, -53.5001, 0.67 ) }
    apic_11 { pt3dadd( 33.1625, -165.451, -54.3343, 0.33 ) }
    apic_11 { pt3dadd( 33.2797, -167.928, -55.1242, 0.33 ) }
    apic_11 { pt3dadd( 33.2553, -170.226, -56.0102, 1.33 ) }
    apic_11 { pt3dadd( 33.2162, -173.044, -57.1806, 0.67 ) }
    apic_11 { pt3dadd( 33.2472, -174.994, -58.0585, 0.33 ) }
    apic_11 { pt3dadd( 33.2856, -177.492, -58.8109, 0.67 ) }
    apic_11 { pt3dadd( 33.4115, -180.721, -59.1725, 0.33 ) }
    apic_11 { pt3dadd( 33.4152, -181.051, -59.1723, 0.67 ) }
    apic_11 { pt3dadd( 33.5489, -182.409, -59.0173, 0.33 ) }
    apic_11 { pt3dadd( 33.8672, -184.309, -58.7375, 0.67 ) }
    apic_11 { pt3dadd( 34.8232, -189.799, -57.4428, 0.33 ) }
    apic_11 { pt3dadd( 35.176, -191.467, -56.8887, 1.33 ) }
    apic_11 { pt3dadd( 35.7449, -193.618, -56.1577, 0.33 ) }
    apic_11 { pt3dadd( 36.1044, -194.85, -55.8067, 0.67 ) }
    apic_11 { pt3dadd( 36.9796, -197.653, -55.184, 0.33 ) }
    apic_11 { pt3dadd( 37.9743, -200.793, -54.6807, 1.33 ) }
    apic_11 { pt3dadd( 38.8546, -203.559, -54.5295, 0.33 ) }
    apic_11 { pt3dadd( 39.2417, -204.889, -54.4574, 0.67 ) }
    apic_11 { pt3dadd( 40.051, -207.442, -54.3381, 0.33 ) }
    apic_11 { pt3dadd( 40.7342, -209.772, -54.2566, 0.67 ) }
    apic_11 { pt3dadd( 41.1982, -211.389, -54.2072, 0.33 ) }
    apic_11 { pt3dadd( 41.4178, -212.102, -54.1931, 0.67 ) }
    apic_11 { pt3dadd( 42.0568, -214.254, -54.1853, 0.33 ) }
    apic_11 { pt3dadd( 42.4896, -215.89, -54.1324, 0.67 ) }
    apic_11 { pt3dadd( 43.0111, -218.06, -54.0537, 0.33 ) }
    apic_11 { pt3dadd( 43.5961, -220.402, -53.9636, 0.67 ) }
    apic_11 { pt3dadd( 44.1948, -222.552, -53.8857, 0.33 ) }
    apic_11 { pt3dadd( 44.2888, -222.868, -53.872, 2.0 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 84/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -15.1017, -56.8335, -44.9121, 0.33 ) }
    apic_9 { pt3dadd( -15.5745, -59.7655, -46.6003, 0.33 ) }
    apic_9 { pt3dadd( -16.3085, -62.6783, -47.9222, 1.33 ) }
    apic_9 { pt3dadd( -17.1633, -65.8229, -49.312, 0.33 ) }
    apic_9 { pt3dadd( -17.4036, -66.9171, -49.754, 0.67 ) }
    apic_9 { pt3dadd( -17.8535, -68.9626, -50.5281, 0.33 ) }
    apic_9 { pt3dadd( -18.3382, -70.9107, -51.2312, 1.33 ) }
    apic_9 { pt3dadd( -19.2174, -73.499, -52.0347, 0.33 ) }
    apic_9 { pt3dadd( -20.0992, -76.209, -52.5762, 1.33 ) }
    apic_9 { pt3dadd( -21.0447, -79.0077, -52.9692, 0.33 ) }
    apic_9 { pt3dadd( -21.464, -80.4242, -53.1639, 0.33 ) }
    apic_9 { pt3dadd( -21.9236, -82.0431, -53.3701, 1.33 ) }
    apic_9 { pt3dadd( -22.5731, -84.5482, -53.6422, 0.33 ) }
    apic_9 { pt3dadd( -23.5591, -88.127, -53.9278, 0.33 ) }
    apic_9 { pt3dadd( -24.488, -91.2861, -54.2028, 0.67 ) }
    apic_9 { pt3dadd( -25.1096, -93.3161, -54.4542, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_9 { pt3dadd( -25.638, -95.6387, -54.7955, 0.33 ) }
    apic_9 { pt3dadd( -25.9129, -97.2888, -55.0716, 1.33 ) }
    apic_9 { pt3dadd( -26.2044, -99.9147, -55.5697, 0.33 ) }
    apic_9 { pt3dadd( -26.4289, -102.181, -56.0359, 0.67 ) }
    apic_9 { pt3dadd( -26.5817, -104.614, -56.7254, 0.33 ) }
    apic_9 { pt3dadd( -26.8807, -106.962, -57.821, 0.33 ) }
    apic_9 { pt3dadd( -26.9523, -107.524, -58.1598, 0.67 ) }
    apic_9 { pt3dadd( -27.2112, -109.246, -59.3626, 0.33 ) }
    apic_9 { pt3dadd( -27.3759, -110.445, -60.2394, 0.33 ) }
    apic_9 { pt3dadd( -28.0232, -114.228, -62.8791, 1.33 ) }
    apic_9 { pt3dadd( -28.7747, -118.062, -65.5813, 0.67 ) }
    apic_9 { pt3dadd( -29.2766, -120.122, -66.982, 0.33 ) }
    apic_9 { pt3dadd( -29.2766, -120.122, -66.982, 1.33 ) }
    apic_9 { pt3dadd( -29.6074, -122.082, -68.2462, 0.33 ) }
    apic_9 { pt3dadd( -29.728, -123.515, -69.0328, 0.67 ) }
    apic_9 { pt3dadd( -29.8045, -125.391, -69.8028, 0.33 ) }
    apic_9 { pt3dadd( -29.8443, -126.013, -70.0225, 0.67 ) }
    apic_9 { pt3dadd( -30.6074, -130.717, -72.2436, 0.33 ) }
    apic_9 { pt3dadd( -31.042, -132.863, -73.395, 2.0 ) }
    apic_9 { pt3dadd( -31.8964, -136.489, -75.5426, 0.33 ) }
    apic_9 { pt3dadd( -32.2103, -137.653, -76.2849, 0.33 ) }
    apic_9 { pt3dadd( -32.4482, -138.413, -76.7868, 0.67 ) }
    apic_9 { pt3dadd( -33.5649, -141.615, -78.8576, 0.33 ) }
    apic_9 { pt3dadd( -33.7526, -142.066, -79.1209, 0.67 ) }
    apic_9 { pt3dadd( -34.318, -143.348, -80.0324, 0.33 ) }
    apic_9 { pt3dadd( -35.9118, -146.535, -82.3201, 1.33 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 26/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -15.1017, -56.8335, -44.9121, 0.67 ) }
    apic_8 { pt3dadd( -16.3397, -57.6038, -49.5141, 0.67 ) }
    apic_8 { pt3dadd( -18.7457, -59.0783, -56.8142, 0.67 ) }
    apic_8 { pt3dadd( -20.7716, -60.2163, -62.7579, 0.67 ) }
    apic_8 { pt3dadd( -21.1731, -60.4394, -63.8833, 1.33 ) }
    apic_8 { pt3dadd( -23.2843, -61.4789, -69.3964, 0.33 ) }
    apic_8 { pt3dadd( -24.3626, -61.98, -71.9908, 0.67 ) }
    apic_8 { pt3dadd( -25.9098, -62.7929, -75.8072, 1.33 ) }
    apic_8 { pt3dadd( -28.6106, -64.1532, -80.4602, 0.33 ) }
    apic_8 { pt3dadd( -29.1592, -64.3681, -81.2028, 0.67 ) }
    apic_8 { pt3dadd( -30.3446, -64.7575, -82.76, 0.33 ) }
    apic_8 { pt3dadd( -31.3833, -65.077, -84.0295, 0.33 ) }
    apic_8 { pt3dadd( -32.0825, -65.3418, -84.9666, 1.33 ) }
    apic_8 { pt3dadd( -35.9327, -66.7487, -89.7426, 0.33 ) }
    apic_8 { pt3dadd( -36.6715, -67.0444, -90.6438, 1.33 ) }
    apic_8 { pt3dadd( -40.0584, -68.4811, -95.1502, 0.33 ) }
    apic_8 { pt3dadd( -41.0699, -68.9338, -96.569, 1.33 ) }
    apic_8 { pt3dadd( -43.7549, -70.1352, -100.477, 0.33 ) }
    apic_8 { pt3dadd( -45.0672, -70.7399, -102.338, 0.33 ) }
    apic_8 { pt3dadd( -46.553, -71.366, -104.35, 1.33 ) }
    apic_8 { pt3dadd( -49.1981, -72.3172, -107.75, 0.33 ) }
    apic_8 { pt3dadd( -49.6065, -72.4578, -108.25, 0.67 ) }
    apic_8 { pt3dadd( -52.1929, -73.2166, -111.427, 0.33 ) }
    apic_8 { pt3dadd( -53.4433, -73.5112, -112.89, 2.0 ) }
    apic_8 { pt3dadd( -56.9923, -74.2499, -117.128, 0.33 ) }
    apic_8 { pt3dadd( -58.0863, -74.3816, -118.424, 1.33 ) }
    apic_8 { pt3dadd( -60.6465, -74.4733, -121.405, 0.33 ) }
    apic_8 { pt3dadd( -62.3918, -74.494, -123.565, 0.67 ) }
    apic_8 { pt3dadd( -63.461, -74.4893, -124.93, 0.33 ) }
    apic_8 { pt3dadd( -64.6327, -74.477, -126.511, 0.67 ) }
    apic_8 { pt3dadd( -67.4809, -74.4207, -130.498, 0.33 ) }
    apic_8 { pt3dadd( -68.2623, -74.4086, -131.788, 1.33 ) }
    apic_8 { pt3dadd( -70.3056, -74.3168, -135.432, 0.33 ) }
    apic_8 { pt3dadd( -70.8139, -74.2624, -136.516, 1.33 ) }
    apic_8 { pt3dadd( -71.714, -74.1399, -138.633, 0.33 ) }
    apic_8 { pt3dadd( -72.4935, -74.0438, -140.556, 0.67 ) }
    apic_8 { pt3dadd( -75.574, -73.7585, -147.661, 0.33 ) }
    apic_8 { pt3dadd( -76.2243, -73.6681, -149.034, 1.33 ) }
    apic_8 { pt3dadd( -77.9866, -73.2848, -152.408, 0.33 ) }
    apic_8 { pt3dadd( -78.6201, -73.1459, -153.57, 0.67 ) }
    apic_8 { pt3dadd( -80.909, -72.7412, -157.389, 0.33 ) }
    apic_8 { pt3dadd( -82.5165, -72.4896, -159.932, 0.67 ) }
    apic_8 { pt3dadd( -85.2264, -71.9886, -163.926, 0.33 ) }
    apic_8 { pt3dadd( -85.8294, -71.8632, -164.824, 1.33 ) }
    apic_8 { pt3dadd( -88.2393, -71.3491, -168.39, 0.33 ) }
    apic_8 { pt3dadd( -89.1653, -71.1163, -169.876, 1.33 ) }
    apic_8 { pt3dadd( -91.9688, -70.2183, -174.836, 0.33 ) }
    apic_8 { pt3dadd( -92.2576, -70.1102, -175.447, 0.67 ) }
    apic_8 { pt3dadd( -93.4377, -69.6317, -178.082, 0.33 ) }
    apic_8 { pt3dadd( -93.5164, -69.5996, -178.263, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 48.3177, 40.1775, 11.7278, 0.67 ) }
    dend_19 { pt3dadd( 50.9477, 41.2775, 11.4278, 0.67 ) }
    dend_19 { pt3dadd( 59.7747, 45.8676, 10.4199, 0.67 ) }
    dend_19 { pt3dadd( 67.9327, 51.5771, 9.49877, 0.67 ) }
    dend_19 { pt3dadd( 75.1428, 58.2912, 7.78567, 0.67 ) }
    dend_19 { pt3dadd( 81.8431, 65.0737, 4.76846, 0.67 ) }
    dend_19 { pt3dadd( 89.035, 70.4802, 0.404175, 0.67 ) }
    dend_19 { pt3dadd( 96.4815, 74.5052, -4.92018, 0.67 ) }
    dend_19 { pt3dadd( 103.836, 76.8287, -11.2853, 0.67 ) }
    dend_19 { pt3dadd( 112.11, 80.5609, -15.4823, 0.67 ) }
    dend_19 { pt3dadd( 120.925, 83.9337, -18.7861, 0.67 ) }
    dend_19 { pt3dadd( 129.245, 87.0092, -23.4034, 0.67 ) }
    dend_19 { pt3dadd( 137.766, 91.2949, -26.4079, 0.67 ) }
    dend_19 { pt3dadd( 146.173, 95.635, -29.6475, 0.67 ) }
    dend_19 { pt3dadd( 154.585, 100.545, -31.9095, 0.67 ) }
    dend_19 { pt3dadd( 163.477, 105.014, -32.8916, 0.67 ) }
    dend_19 { pt3dadd( 171.791, 110.549, -33.3833, 0.67 ) }
    dend_19 { pt3dadd( 180.522, 115.264, -32.1394, 0.67 ) }
    dend_19 { pt3dadd( 188.958, 119.936, -29.4942, 0.67 ) }
    dend_19 { pt3dadd( 195.863, 125.901, -25.4019, 0.67 ) }
    dend_19 { pt3dadd( 203.291, 131.709, -22.0706, 0.67 ) }
    dend_19 { pt3dadd( 209.95, 138.701, -19.4727, 0.67 ) }
    dend_19 { pt3dadd( 216.682, 145.754, -17.2467, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 99/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 48.3177, 40.1775, 11.7278, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_18 { pt3dadd( 47.5777, 42.1575, 12.0278, 0.67 ) }
    dend_18 { pt3dadd( 42.1387, 50.3986, 13.6094, 0.67 ) }
    dend_18 { pt3dadd( 35.0297, 57.2876, 15.0252, 0.67 ) }
    dend_18 { pt3dadd( 28.9124, 64.797, 17.5126, 0.67 ) }
    dend_18 { pt3dadd( 22.8185, 72.683, 18.3345, 0.67 ) }
    dend_18 { pt3dadd( 17.3542, 80.5377, 21.2406, 0.67 ) }
    dend_18 { pt3dadd( 12.0753, 88.8474, 22.9963, 0.67 ) }
    dend_18 { pt3dadd( 6.38141, 97.041, 23.6628, 0.67 ) }
    dend_18 { pt3dadd( 1.20215, 105.398, 25.4857, 0.67 ) }
    dend_18 { pt3dadd( -3.70484, 113.962, 27.0953, 0.67 ) }
    dend_18 { pt3dadd( -9.51431, 121.725, 29.541, 0.67 ) }
    dend_18 { pt3dadd( -13.4723, 130.011, 33.4997, 0.67 ) }
    dend_18 { pt3dadd( -17.4077, 137.401, 38.9687, 0.67 ) }
    dend_18 { pt3dadd( -19.3691, 145.13, 45.0035, 0.67 ) }
    dend_18 { pt3dadd( -20.1615, 152.617, 51.5846, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 15/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 32.0855, 39.0026, -7.19672, 0.67 ) }
    dend_16 { pt3dadd( 35.9165, 41.0936, -1.41566, 0.67 ) }
    dend_16 { pt3dadd( 37.4951, 41.9552, 0.966536, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 18/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 32.0855, 39.0026, -7.19672, 0.67 ) }
    dend_15 { pt3dadd( 33.2192, 40.8751, -8.02765, 0.67 ) }
    dend_15 { pt3dadd( 34.0418, 42.0578, -8.84634, 0.67 ) }
    dend_15 { pt3dadd( 36.4118, 44.9943, -10.6568, 0.67 ) }
    dend_15 { pt3dadd( 37.9091, 46.8866, -11.6409, 0.67 ) }
    dend_15 { pt3dadd( 39.5568, 49.1068, -12.5934, 0.67 ) }
    dend_15 { pt3dadd( 41.3218, 51.735, -13.506, 0.67 ) }
    dend_15 { pt3dadd( 44.2524, 56.3173, -15.0346, 0.67 ) }
    dend_15 { pt3dadd( 46.9538, 60.9395, -16.3594, 0.67 ) }
    dend_15 { pt3dadd( 48.2054, 63.3157, -16.8946, 0.67 ) }
    dend_15 { pt3dadd( 49.079, 65.3661, -17.4432, 1.33 ) }
    dend_15 { pt3dadd( 50.6503, 69.5065, -18.5945, 0.67 ) }
    dend_15 { pt3dadd( 51.3695, 71.6272, -19.1831, 2.0 ) }
    dend_15 { pt3dadd( 52.3801, 74.9818, -20.0193, 0.33 ) }
    dend_15 { pt3dadd( 52.7062, 76.2837, -20.4359, 0.67 ) }
    dend_15 { pt3dadd( 54.1664, 81.6583, -22.2348, 0.33 ) }
    dend_15 { pt3dadd( 54.9394, 84.3595, -23.2423, 0.33 ) }
    dend_15 { pt3dadd( 55.9749, 87.8038, -24.4587, 1.33 ) }
    dend_15 { pt3dadd( 56.494, 89.6269, -24.9786, 0.33 ) }
    dend_15 { pt3dadd( 57.1872, 92.1469, -25.6124, 0.33 ) }
    dend_15 { pt3dadd( 57.4628, 93.0316, -25.7768, 0.33 ) }
    dend_15 { pt3dadd( 58.2777, 95.6807, -26.1849, 0.67 ) }
    dend_15 { pt3dadd( 59.0065, 98.3783, -26.8176, 1.33 ) }
    dend_15 { pt3dadd( 59.897, 101.167, -27.5195, 0.33 ) }
    dend_15 { pt3dadd( 60.537, 102.899, -27.884, 0.67 ) }
    dend_15 { pt3dadd( 61.497, 105.319, -28.048, 0.33 ) }
    dend_15 { pt3dadd( 62.7118, 108.452, -28.1273, 0.67 ) }
    dend_15 { pt3dadd( 63.0976, 109.435, -28.1019, 1.33 ) }
    dend_15 { pt3dadd( 64.4862, 112.906, -28.0024, 0.33 ) }
    dend_15 { pt3dadd( 65.167, 114.425, -27.9514, 1.33 ) }
    dend_15 { pt3dadd( 67.2667, 119.084, -27.7576, 0.33 ) }
    dend_15 { pt3dadd( 68.9898, 122.961, -27.5489, 1.33 ) }
    dend_15 { pt3dadd( 69.8071, 124.717, -27.4014, 0.33 ) }
    dend_15 { pt3dadd( 69.9963, 125.151, -27.419, 0.67 ) }
    dend_15 { pt3dadd( 70.7854, 126.898, -27.712, 0.33 ) }
    dend_15 { pt3dadd( 70.941, 127.197, -27.7599, 0.67 ) }
    dend_15 { pt3dadd( 71.7739, 128.646, -28.0438, 0.33 ) }
    dend_15 { pt3dadd( 73.0241, 130.837, -28.2967, 1.33 ) }
    dend_15 { pt3dadd( 75.0772, 134.457, -28.7534, 0.33 ) }
    dend_15 { pt3dadd( 77.1955, 138.225, -29.2547, 0.33 ) }
    dend_15 { pt3dadd( 78.8484, 141.183, -29.6772, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 15.9719, 69.5916, -54.1443, 0.67 ) }
    dend_9 { pt3dadd( 16.9121, 70.8127, -55.568, 0.67 ) }
    dend_9 { pt3dadd( 17.7205, 71.6188, -56.7788, 1.33 ) }
    dend_9 { pt3dadd( 19.0484, 72.7407, -58.7176, 0.67 ) }
    dend_9 { pt3dadd( 20.5851, 73.7727, -61.0839, 0.67 ) }
    dend_9 { pt3dadd( 23.5999, 74.9942, -66.0415, 0.67 ) }
    dend_9 { pt3dadd( 25.2027, 75.3815, -68.4505, 0.67 ) }
    dend_9 { pt3dadd( 26.3887, 75.5138, -70.1929, 0.33 ) }
    dend_9 { pt3dadd( 26.5836, 75.503, -70.4597, 1.33 ) }
    dend_9 { pt3dadd( 30.1602, 74.9159, -74.8558, 0.33 ) }
    dend_9 { pt3dadd( 34.0524, 74.0005, -79.1471, 1.33 ) }
    dend_9 { pt3dadd( 36.5545, 73.3561, -81.3885, 0.33 ) }
    dend_9 { pt3dadd( 37.4743, 73.1456, -82.1298, 0.67 ) }
    dend_9 { pt3dadd( 39.117, 72.8481, -83.4289, 0.33 ) }
    dend_9 { pt3dadd( 40.8458, 72.6702, -84.651, 0.33 ) }
    dend_9 { pt3dadd( 44.0611, 72.4617, -86.3733, 2.0 ) }
    dend_9 { pt3dadd( 47.0911, 72.5145, -87.6515, 0.33 ) }
    dend_9 { pt3dadd( 48.2235, 72.5408, -88.0602, 0.67 ) }
    dend_9 { pt3dadd( 53.1752, 72.4847, -90.024, 0.33 ) }
    dend_9 { pt3dadd( 57.1427, 72.2185, -91.499, 0.33 ) }
    dend_9 { pt3dadd( 60.2796, 71.8631, -92.8158, 1.33 ) }
    dend_9 { pt3dadd( 63.2115, 71.5033, -94.3909, 0.67 ) }
    dend_9 { pt3dadd( 67.3733, 70.8776, -97.0132, 0.33 ) }
    dend_9 { pt3dadd( 72.2958, 69.9962, -100.314, 1.33 ) }
    dend_9 { pt3dadd( 76.2637, 69.2286, -103.295, 0.33 ) }
    dend_9 { pt3dadd( 81.4041, 68.1182, -107.619, 1.33 ) }
    dend_9 { pt3dadd( 87.0473, 67.0579, -112.755, 0.33 ) }
    dend_9 { pt3dadd( 89.2794, 66.6793, -114.934, 0.33 ) }
    dend_9 { pt3dadd( 90.6793, 66.5135, -116.356, 1.33 ) }
    dend_9 { pt3dadd( 94.5521, 66.3246, -120.038, 0.33 ) }
    dend_9 { pt3dadd( 95.967, 66.3435, -121.407, 0.33 ) }
    dend_9 { pt3dadd( 97.3372, 66.4537, -122.431, 0.67 ) }
    dend_9 { pt3dadd( 101.791, 67.1329, -124.968, 0.33 ) }
    dend_9 { pt3dadd( 102.375, 67.2585, -125.333, 0.67 ) }
    dend_9 { pt3dadd( 103.765, 67.5838, -126.182, 0.33 ) }
    dend_9 { pt3dadd( 104.675, 67.8054, -126.659, 0.67 ) }
    dend_9 { pt3dadd( 107.432, 68.4579, -128.058, 0.33 ) }
    dend_9 { pt3dadd( 108.626, 68.6854, -128.604, 1.33 ) }
    dend_9 { pt3dadd( 113.757, 69.3073, -130.478, 0.33 ) }
    dend_9 { pt3dadd( 115.05, 69.3919, -130.922, 0.33 ) }
    dend_9 { pt3dadd( 116.638, 69.3646, -131.412, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( 118.313, 69.2873, -131.814, 0.33 ) }
    dend_9 { pt3dadd( 119.319, 69.2224, -132.099, 0.67 ) }
    dend_9 { pt3dadd( 120.676, 69.1518, -132.474, 0.33 ) }
    dend_9 { pt3dadd( 122.58, 69.0744, -132.875, 0.33 ) }
    dend_9 { pt3dadd( 124.913, 68.9494, -133.398, 1.33 ) }
    dend_9 { pt3dadd( 128.602, 68.6797, -134.279, 0.33 ) }
    dend_9 { pt3dadd( 133.048, 68.2169, -135.408, 0.67 ) }
    dend_9 { pt3dadd( 135.27, 67.8519, -136.111, 0.33 ) }
    dend_9 { pt3dadd( 136.831, 67.5039, -136.688, 1.33 ) }
    dend_9 { pt3dadd( 139.865, 66.6062, -137.921, 0.33 ) }
    dend_9 { pt3dadd( 140.745, 66.3158, -138.301, 0.33 ) }
    dend_9 { pt3dadd( 141.881, 65.886, -138.846, 0.67 ) }
    dend_9 { pt3dadd( 145.976, 64.4176, -141.174, 0.33 ) }
    dend_9 { pt3dadd( 146.607, 64.1933, -141.624, 0.67 ) }
    dend_9 { pt3dadd( 148.139, 63.6716, -142.802, 0.33 ) }
    dend_9 { pt3dadd( 148.69, 63.5002, -143.264, 0.67 ) }
    dend_9 { pt3dadd( 151.796, 62.7237, -145.85, 0.33 ) }
    dend_9 { pt3dadd( 154.322, 62.2474, -147.918, 0.67 ) }
    dend_9 { pt3dadd( 157.151, 61.8184, -150.115, 0.33 ) }
    dend_9 { pt3dadd( 158.159, 61.6393, -150.96, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 20/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 15.9719, 69.5916, -54.1443, 0.33 ) }
    dend_6 { pt3dadd( 16.3389, 70.7386, -54.1443, 0.33 ) }
    dend_6 { pt3dadd( 17.132, 73.3689, -54.1443, 0.67 ) }
    dend_6 { pt3dadd( 17.5292, 75.02, -54.274, 0.67 ) }
    dend_6 { pt3dadd( 18.1363, 77.8011, -54.5988, 1.33 ) }
    dend_6 { pt3dadd( 18.803, 80.5627, -54.9788, 0.67 ) }
    dend_6 { pt3dadd( 19.3225, 82.4743, -55.2632, 0.33 ) }
    dend_6 { pt3dadd( 19.6794, 83.7827, -55.4807, 0.67 ) }
    dend_6 { pt3dadd( 20.4843, 86.7146, -56.0058, 0.33 ) }
    dend_6 { pt3dadd( 20.6947, 87.8824, -56.2041, 0.33 ) }
    dend_6 { pt3dadd( 20.815, 89.5534, -56.4644, 0.67 ) }
    dend_6 { pt3dadd( 20.8878, 90.963, -56.6387, 0.33 ) }
    dend_6 { pt3dadd( 21.1514, 94.2772, -56.9122, 0.33 ) }
    dend_6 { pt3dadd( 21.3534, 96.6785, -57.0034, 1.33 ) }
    dend_6 { pt3dadd( 21.5413, 99.5215, -57.0967, 0.33 ) }
    dend_6 { pt3dadd( 21.5421, 100.258, -57.1442, 0.67 ) }
    dend_6 { pt3dadd( 21.4685, 103.077, -57.3799, 0.67 ) }
    dend_6 { pt3dadd( 21.5102, 105.065, -57.6078, 0.67 ) }
    dend_6 { pt3dadd( 21.6913, 107.068, -57.899, 1.33 ) }
    dend_6 { pt3dadd( 21.8928, 109.723, -58.3378, 0.67 ) }
    dend_6 { pt3dadd( 22.0955, 112.216, -58.7837, 0.33 ) }
    dend_6 { pt3dadd( 22.367, 115.316, -59.3376, 0.67 ) }
    dend_6 { pt3dadd( 22.5769, 117.923, -59.7983, 0.33 ) }
    dend_6 { pt3dadd( 22.6335, 118.402, -59.8497, 0.67 ) }
    dend_6 { pt3dadd( 22.9636, 120.734, -59.8869, 0.33 ) }
    dend_6 { pt3dadd( 23.0836, 121.771, -59.7952, 0.67 ) }
    dend_6 { pt3dadd( 23.3101, 124.1, -59.4675, 0.33 ) }
    dend_6 { pt3dadd( 23.3502, 125.128, -59.2413, 0.67 ) }
    dend_6 { pt3dadd( 23.281, 128.16, -58.4603, 0.33 ) }
    dend_6 { pt3dadd( 23.2066, 129.859, -58.3145, 0.67 ) }
    dend_6 { pt3dadd( 23.137, 131.322, -58.6136, 0.67 ) }
    dend_6 { pt3dadd( 22.9356, 133.893, -59.373, 0.33 ) }
    dend_6 { pt3dadd( 22.7118, 135.666, -60.0059, 0.67 ) }
    dend_6 { pt3dadd( 22.4089, 137.726, -60.8148, 0.33 ) }
    dend_6 { pt3dadd( 21.5061, 144.443, -63.6856, 0.67 ) }
    dend_6 { pt3dadd( 21.1471, 148.2, -65.1654, 0.33 ) }
    dend_6 { pt3dadd( 20.8345, 152.652, -66.5975, 1.33 ) }
    dend_6 { pt3dadd( 20.6704, 154.392, -67.0072, 0.33 ) }
    dend_6 { pt3dadd( 20.5257, 156.473, -67.3246, 0.67 ) }
    dend_6 { pt3dadd( 20.4416, 158.412, -67.3944, 0.67 ) }
    dend_6 { pt3dadd( 20.2985, 161.25, -67.1828, 1.33 ) }
    dend_6 { pt3dadd( 20.1437, 163.84, -66.995, 0.67 ) }
    dend_6 { pt3dadd( 19.8514, 167.415, -66.9646, 0.67 ) }
    dend_6 { pt3dadd( 19.5826, 170.336, -66.9907, 0.67 ) }
    dend_6 { pt3dadd( 19.3071, 173.009, -67.1854, 1.33 ) }
    dend_6 { pt3dadd( 18.9782, 175.534, -67.3228, 0.33 ) }
    dend_6 { pt3dadd( 18.7438, 177.22, -67.3836, 0.33 ) }
    dend_6 { pt3dadd( 18.5316, 179.333, -67.6005, 0.33 ) }
    dend_6 { pt3dadd( 18.4882, 180.248, -67.7362, 0.67 ) }
    dend_6 { pt3dadd( 18.4798, 183.94, -68.3823, 0.33 ) }
    dend_6 { pt3dadd( 18.9916, 189.363, -69.4832, 1.33 ) }
    dend_6 { pt3dadd( 19.3977, 191.613, -69.9389, 0.33 ) }
    dend_6 { pt3dadd( 20.2438, 195.779, -70.6953, 0.67 ) }
    dend_6 { pt3dadd( 20.7777, 198.378, -71.0659, 0.33 ) }
    dend_6 { pt3dadd( 21.0467, 200.016, -71.298, 0.33 ) }
    dend_6 { pt3dadd( 21.3567, 202.077, -71.5922, 0.67 ) }
    dend_6 { pt3dadd( 21.5837, 204.118, -72.0622, 1.33 ) }
    dend_6 { pt3dadd( 21.724, 207.055, -72.6678, 0.67 ) }
    dend_6 { pt3dadd( 21.7222, 210.024, -73.1523, 0.33 ) }
    dend_6 { pt3dadd( 21.6583, 212.254, -73.5602, 1.33 ) }
    dend_6 { pt3dadd( 21.4087, 215.786, -74.1553, 0.33 ) }
    dend_6 { pt3dadd( 21.0483, 219.185, -74.7806, 0.33 ) }
    dend_6 { pt3dadd( 20.7826, 221.529, -75.2251, 1.33 ) }
    dend_6 { pt3dadd( 20.5655, 223.897, -75.6724, 0.33 ) }
    dend_6 { pt3dadd( 20.5204, 224.64, -75.7476, 0.67 ) }
    dend_6 { pt3dadd( 20.4337, 227.409, -75.8825, 0.33 ) }
    dend_6 { pt3dadd( 20.3647, 230.396, -75.92, 1.33 ) }
    dend_6 { pt3dadd( 20.4598, 232.633, -75.803, 0.33 ) }
    dend_6 { pt3dadd( 20.5651, 233.83, -75.7359, 0.67 ) }
    dend_6 { pt3dadd( 20.9114, 238.049, -75.4984, 0.33 ) }
    dend_6 { pt3dadd( 21.2725, 241.771, -75.3214, 0.67 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 91/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 44.2888, -222.868, -53.872, 0.33 ) }
    apic_13 { pt3dadd( 45.1363, -225.714, -53.5376, 0.33 ) }
    apic_13 { pt3dadd( 45.4483, -227.338, -53.3574, 2.0 ) }
    apic_13 { pt3dadd( 46.2338, -230.203, -53.1225, 0.33 ) }
    apic_13 { pt3dadd( 46.3249, -230.531, -53.1314, 0.67 ) }
    apic_13 { pt3dadd( 46.4695, -231.173, -53.1838, 0.67 ) }
    apic_13 { pt3dadd( 46.7256, -232.546, -53.4542, 0.33 ) }
    apic_13 { pt3dadd( 46.9157, -233.84, -53.8848, 0.67 ) }
    apic_13 { pt3dadd( 47.4033, -238.7, -55.6302, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_13 { pt3dadd( 47.6033, -241.108, -56.5824, 0.67 ) }
    apic_13 { pt3dadd( 47.891, -244.234, -57.8751, 0.33 ) }
    apic_13 { pt3dadd( 48.2271, -247.391, -59.2604, 1.33 ) }
    apic_13 { pt3dadd( 48.5036, -249.516, -60.2622, 0.33 ) }
    apic_13 { pt3dadd( 48.6577, -250.901, -60.9689, 0.67 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 5/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 44.2888, -222.868, -53.872, 0.67 ) }
    apic_12 { pt3dadd( 44.8512, -220.526, -52.3136, 0.67 ) }
    apic_12 { pt3dadd( 45.259, -218.914, -51.1996, 0.33 ) }
    apic_12 { pt3dadd( 45.4747, -218.062, -50.6121, 1.33 ) }
    apic_12 { pt3dadd( 46.4515, -214.259, -48.0331, 0.67 ) }
    apic_12 { pt3dadd( 47.2432, -211.212, -46.0332, 0.67 ) }
    apic_12 { pt3dadd( 48.0995, -207.681, -43.8421, 0.33 ) }
    apic_12 { pt3dadd( 48.3087, -206.64, -43.2744, 0.33 ) }
    apic_12 { pt3dadd( 48.4087, -206.053, -42.9886, 0.67 ) }
    apic_12 { pt3dadd( 48.4933, -205.351, -42.7448, 0.33 ) }
    apic_12 { pt3dadd( 48.5898, -204.306, -42.6529, 0.67 ) }
    apic_12 { pt3dadd( 48.6449, -201.898, -42.6222, 0.33 ) }
    apic_12 { pt3dadd( 48.5973, -199.159, -42.7556, 0.67 ) }
    apic_12 { pt3dadd( 48.5437, -195.883, -42.7973, 0.33 ) }
    apic_12 { pt3dadd( 48.4811, -193.163, -42.8077, 0.67 ) }
    apic_12 { pt3dadd( 48.3971, -190.735, -42.7803, 0.33 ) }
    apic_12 { pt3dadd( 48.2742, -187.649, -42.6561, 0.67 ) }
    apic_12 { pt3dadd( 48.212, -185.308, -42.4141, 0.67 ) }
    apic_12 { pt3dadd( 48.1551, -183.481, -41.964, 0.67 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 24/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 216.682, 145.754, -17.2467, 0.33 ) }
    dend_21 { pt3dadd( 225.372, 150.553, -18.4445, 0.33 ) }
    dend_21 { pt3dadd( 234.85, 153.74, -18.6086, 0.33 ) }
    dend_21 { pt3dadd( 244.803, 154.701, -18.6672, 0.33 ) }
    dend_21 { pt3dadd( 254.74, 154.764, -17.5507, 0.33 ) }
    dend_21 { pt3dadd( 264.434, 156.645, -15.9723, 0.33 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 30/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 216.682, 145.754, -17.2467, 0.33 ) }
    dend_20 { pt3dadd( 224.74, 151.433, -18.9204, 0.33 ) }
    dend_20 { pt3dadd( 232.842, 156.901, -21.0339, 0.33 ) }
    dend_20 { pt3dadd( 240.822, 162.855, -21.9688, 0.33 ) }
    dend_20 { pt3dadd( 249.274, 167.924, -23.6634, 0.33 ) }
    dend_20 { pt3dadd( 257.945, 171.887, -26.681, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 36/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 158.159, 61.6393, -150.96, 0.33 ) }
    dend_11 { pt3dadd( 159.349, 60.754, -152.792, 0.33 ) }
    dend_11 { pt3dadd( 159.512, 60.6064, -153.039, 0.67 ) }
    dend_11 { pt3dadd( 160.902, 59.134, -155.445, 0.33 ) }
    dend_11 { pt3dadd( 161.112, 58.912, -155.808, 1.33 ) }
    dend_11 { pt3dadd( 163.835, 56.0282, -160.52, 0.33 ) }
    dend_11 { pt3dadd( 164.044, 55.8062, -160.883, 0.67 ) }
    dend_11 { pt3dadd( 164.846, 54.8688, -162.493, 0.33 ) }
    dend_11 { pt3dadd( 166.202, 53.0689, -165.371, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 158.159, 61.6393, -150.96, 0.33 ) }
    dend_10 { pt3dadd( 159.668, 62.4778, -150.96, 0.33 ) }
    dend_10 { pt3dadd( 160.326, 62.8431, -150.96, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 48/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 21.2725, 241.771, -75.3214, 0.33 ) }
    dend_8 { pt3dadd( 21.2476, 242.959, -75.1799, 0.33 ) }
    dend_8 { pt3dadd( 21.2853, 244.324, -75.0326, 1.33 ) }
    dend_8 { pt3dadd( 21.3164, 246.341, -74.8329, 0.33 ) }
    dend_8 { pt3dadd( 21.4082, 249.865, -74.4697, 0.67 ) }
    dend_8 { pt3dadd( 21.4541, 251.352, -74.3176, 0.33 ) }
    dend_8 { pt3dadd( 21.5146, 253.284, -74.1296, 0.67 ) }
    dend_8 { pt3dadd( 21.5826, 254.648, -74.008, 0.33 ) }
    dend_8 { pt3dadd( 21.6421, 256.067, -73.9415, 0.33 ) }
    dend_8 { pt3dadd( 21.654, 257.096, -73.9407, 0.67 ) }
    dend_8 { pt3dadd( 21.7074, 258.424, -74.0053, 0.33 ) }
    dend_8 { pt3dadd( 21.7634, 260.425, -74.0248, 0.67 ) }
    dend_8 { pt3dadd( 21.7363, 263.076, -74.2585, 0.67 ) }
    dend_8 { pt3dadd( 21.7684, 265.14, -74.5533, 0.33 ) }
    dend_8 { pt3dadd( 21.8374, 266.807, -74.8556, 1.33 ) }
    dend_8 { pt3dadd( 21.8735, 269.149, -75.3811, 0.67 ) }
    dend_8 { pt3dadd( 21.841, 272.154, -76.1047, 0.33 ) }
    dend_8 { pt3dadd( 21.782, 276.893, -77.1865, 0.33 ) }
    dend_8 { pt3dadd( 21.7635, 278.979, -77.6361, 0.33 ) }
    dend_8 { pt3dadd( 21.7748, 280.287, -77.8859, 0.33 ) }
    dend_8 { pt3dadd( 21.826, 284.156, -78.5761, 0.67 ) }
    dend_8 { pt3dadd( 21.8797, 286.87, -79.0009, 0.67 ) }
    dend_8 { pt3dadd( 22.2378, 291.277, -79.5232, 0.33 ) }
    dend_8 { pt3dadd( 22.2965, 291.74, -79.539, 0.67 ) }
    dend_8 { pt3dadd( 22.5041, 293.399, -79.5841, 0.33 ) }
    dend_8 { pt3dadd( 22.8413, 295.371, -79.6091, 0.67 ) }
    dend_8 { pt3dadd( 23.2093, 296.763, -79.5785, 1.33 ) }
    dend_8 { pt3dadd( 24.4482, 300.458, -79.4734, 0.33 ) }
    dend_8 { pt3dadd( 24.6756, 301.089, -79.4493, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.2725, 241.771, -75.3214, 0.33 ) }
    dend_7 { pt3dadd( 24.2156, 242.517, -77.3627, 0.33 ) }
    dend_7 { pt3dadd( 26.0909, 242.971, -78.5043, 0.33 ) }
    dend_7 { pt3dadd( 30.3076, 244.08, -80.7068, 1.33 ) }
    dend_7 { pt3dadd( 33.2416, 244.725, -81.9947, 0.33 ) }
    dend_7 { pt3dadd( 34.3552, 244.924, -82.4079, 0.67 ) }
    dend_7 { pt3dadd( 37.2362, 245.417, -83.3381, 0.33 ) }
    dend_7 { pt3dadd( 39.692, 245.825, -84.1089, 0.33 ) }
    dend_7 { pt3dadd( 41.3911, 246.088, -84.5518, 1.33 ) }
    dend_7 { pt3dadd( 44.0037, 246.635, -84.8708, 0.33 ) }
    dend_7 { pt3dadd( 45.9095, 247.228, -85.2307, 0.33 ) }
    dend_7 { pt3dadd( 47.3606, 247.954, -85.6306, 0.67 ) }
    dend_7 { pt3dadd( 48.1573, 248.576, -85.9273, 0.67 ) }
    dend_7 { pt3dadd( 49.7894, 250.242, -87.1266, 1.33 ) }
    dend_7 { pt3dadd( 51.1041, 251.995, -88.4957, 0.33 ) }
    dend_7 { pt3dadd( 52.7685, 254.85, -90.7131, 0.67 ) }
    dend_7 { pt3dadd( 53.752, 256.679, -92.1161, 0.33 ) }
    dend_7 { pt3dadd( 54.0682, 257.209, -92.5328, 0.67 ) }
    dend_7 { pt3dadd( 56.8874, 260.67, -95.6146, 0.33 ) }
    dend_7 { pt3dadd( 57.6524, 261.463, -96.434, 0.33 ) }
    dend_7 { pt3dadd( 57.9355, 261.713, -96.7212, 0.67 ) }
    dend_7 { pt3dadd( 59.2119, 262.636, -97.786, 0.33 ) }
    dend_7 { pt3dadd( 60.6762, 263.658, -98.9617, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_7 { pt3dadd( 64.3139, 266.207, -101.49, 0.33 ) }
    dend_7 { pt3dadd( 66.4695, 267.906, -102.971, 0.67 ) }
    dend_7 { pt3dadd( 68.0357, 269.349, -104.329, 0.33 ) }
    dend_7 { pt3dadd( 68.6069, 269.91, -104.862, 0.67 ) }
    dend_7 { pt3dadd( 69.892, 271.416, -106.291, 0.33 ) }
    dend_7 { pt3dadd( 70.3723, 272.167, -106.926, 0.67 ) }
    dend_7 { pt3dadd( 71.9729, 276.067, -109.596, 0.33 ) }
    dend_7 { pt3dadd( 72.8626, 278.456, -111.322, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_2, apic_1, dend_12, dend_1, apic_6, apic_3, dend_22, dend_13, dend_3, dend_2, apic_10, apic_7, apic_5, apic_4, dend_17, dend_14, dend_5, dend_4, apic_14, apic_11, apic_9, apic_8, dend_19, dend_18, dend_16, dend_15, dend_9, dend_6, apic_13, apic_12, dend_21, dend_20, dend_11, dend_10, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_2, apic_1, dend_12, dend_1, apic_6, apic_3, dend_22, dend_13, dend_3, dend_2, apic_10, apic_7, apic_5, apic_4, dend_17, dend_14, dend_5, dend_4, apic_14, apic_11, apic_9, apic_8, dend_19, dend_18, dend_16, dend_15, dend_9, dend_6, apic_13, apic_12, dend_21, dend_20, dend_11, dend_10, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_22 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_5 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    apic_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_4 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_8 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_6 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    apic_12 OneSecGrp_SectionRef_35.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_8 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_5 = new SectionList()
    apic_2 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_13 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_3 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_16 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_16 = new SectionList()
    apic_10 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    apic_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_11 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_12, dend_1, axon_1, axon_1, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_12 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 7
    dend_3 nseg = 3
    dend_2 nseg = 7
    apic_7 nseg = 3
    apic_5 nseg = 9
    apic_4 nseg = 7
    dend_4 nseg = 3
    apic_14 nseg = 9
    apic_11 nseg = 9
    apic_9 nseg = 5
    apic_8 nseg = 7
    dend_19 nseg = 11
    dend_18 nseg = 7
    dend_15 nseg = 5
    dend_9 nseg = 9
    dend_6 nseg = 9
    apic_12 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_8 nseg = 3
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_MC_2c0a7badf4_0_0


