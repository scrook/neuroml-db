// Cell: cADpyr230_L4_SS_a8ef0f9d97_0_0
/*
{
  "id" : "cADpyr230_L4_SS_a8ef0f9d97_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.22921, 8.43818, 0.170204, 3.86713", "-2.03503, 7.55772, 0.189792, 6.97619", "-1.84085, 6.67725, 0.20938, 9.05853", "-1.64667, 5.79679, 0.228967, 10.4448", "-1.4525, 4.91633, 0.248555, 11.547", "-1.25832, 4.03586, 0.268143, 11.8847", "-1.06414, 3.1554, 0.287731, 11.8052", "-0.869961, 2.27493, 0.307319, 11.7257", "-0.675783, 1.39447, 0.326907, 11.6462", "-0.481605, 0.514006, 0.346495, 11.6622", "-0.287427, -0.366458, 0.366082, 11.8066", "-0.0932491, -1.24692, 0.38567, 11.8931", "0.100929, -2.12739, 0.405258, 11.7494", "0.295107, -3.00785, 0.424846, 11.5995", "0.489285, -3.88831, 0.444434, 11.4362", "0.683463, -4.76878, 0.464022, 11.0379", "0.877641, -5.64924, 0.48361, 10.4513", "1.07182, -6.5297, 0.503198, 9.62464", "1.266, -7.41017, 0.522785, 7.94147", "1.46018, -8.29063, 0.542373, 5.00417", "1.65435, -9.1711, 0.561961, 2.93148" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.40694, 8.40204, 2.61396, 2.66", "1.55943, 9.25381, 2.88742, 2.66", "1.55977, 15.7183, 2.04, 2.0", "1.55997, 19.6565, 1.52374, 2.0", "1.5601, 22.0845, 1.20545, 2.0", "1.56038, 27.3765, 0.511742, 2.0", "1.56072, 33.9351, -0.348018, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.01111, 5.81665, -4.4687, 1.33", "-4.94976, 5.74768, -4.41347, 1.33", "-8.88166, 6.11216, -7.91111, 1.33", "-12.4679, 6.44461, -11.1012, 1.33", "-14.5279, 6.63557, -12.9337, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.22832, -6.54955, -3.4678, 1.33", "-3.75718, -5.78291, -3.07704, 1.33", "-6.68501, -9.48571, 0.719219, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.0471281, -5.50466, -6.52533, 1.33", "0.0540611, -6.45841, -7.57593, 1.33", "12.1352, -14.2436, 5.79149, 0.67", "18.205, -17.8034, 11.8012, 0.67", "23.1228, -20.1971, 16.1124, 0.67", "26.4635, -21.6414, 18.7516, 0.67", "31.2201, -23.5278, 22.2252, 0.67", "36.6268, -25.2111, 25.3489, 0.67", "43.5255, -26.7087, 27.9701, 0.67", "49.9547, -27.8819, 29.9169, 0.67", "54.1035, -28.4233, 30.916, 0.67", "56.3111, -28.6294, 31.3778, 1.33", "61.1161, -29.0755, 32.1831, 0.67", "66.2758, -29.5944, 32.7853, 0.67", "76.7361, -30.9153, 33.634, 0.67", "83.9215, -32.2656, 34.3034, 0.67", "87.4496, -33.0366, 34.6627, 0.67", "89.0249, -33.4231, 34.9205, 0.67", "92.64, -34.4798, 35.7545, 0.67", "96.7573, -35.9902, 36.931, 0.67", "99.2186, -36.8642, 37.7223, 0.67", "101.267, -37.6916, 38.2915, 0.67", "107.782, -40.2828, 40.0576, 0.67", "111.474, -41.6733, 41.0079, 0.67", "120.317, -45.0314, 43.1904, 0.67", "127.304, -47.7408, 45.077, 0.67", "131.045, -49.4855, 46.1997, 0.67", "133.754, -50.9244, 47.0348, 0.67", "137.204, -52.9842, 47.9352, 0.67", "139.59, -54.527, 48.5741, 0.67", "145.338, -58.3638, 50.1364, 0.67", "153.102, -63.2298, 52.1587, 0.67", "159.234, -66.3125, 53.4891, 0.67", "163.755, -68.146, 54.2688, 0.67", "165.92, -68.8031, 54.4608, 0.33", "171.154, -69.635, 54.4351, 0.67", "174.442, -69.69, 54.0799, 0.67", "178.956, -69.0332, 53.3806, 0.67", "180.826, -68.6095, 53.1237, 0.67", "185.141, -67.3989, 52.6923, 0.67", "188.839, -66.3014, 52.2952, 0.33", "190.776, -65.7313, 52.0674, 0.67", "194.596, -64.5698, 51.6501, 0.33", "198.492, -63.0981, 51.2892, 0.67", "200.597, -62.1425, 51.165, 0.33", "204.139, -60.0661, 51.149, 0.33", "205.3, -59.3502, 51.1649, 0.67", "207.004, -58.2699, 51.4085, 0.33", "208.925, -57.1703, 51.9125, 0.67", "211.411, -55.8959, 52.6998, 0.67", "215.549, -53.8386, 54.0847, 0.67", "218.835, -52.1069, 55.3105, 0.33", "223.799, -49.6804, 57.3008, 0.67", "227.051, -48.1697, 58.7742, 0.33", "228.414, -47.6215, 59.4921, 0.33", "241.126, -49.7617, 63.9596, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.19789, 7.43767, -4.33335, 2.66", "1.8599, 6.3577, -3.68367, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992695277334
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.65435, -9.1711, 0.561961, 0.67", "4.88483, -23.8191, 0.561961, 0.67", "8.1153, -38.4671, 0.561961, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "1.56072, 33.9351, -0.348018, 2.0", "-9.96203, 38.6822, -4.22107, 0.67", "-14.6296, 40.9228, -5.48718, 0.67", "-19.6872, 43.003, -6.60881, 0.67", "-23.5452, 44.7265, -7.3315, 0.67", "-27.3679, 46.4363, -7.93614, 0.67", "-32.1091, 48.5828, -8.59731, 0.67", "-38.495, 51.7282, -8.97688, 0.67", "-45.1579, 55.2189, -9.29812, 0.67", "-52.3043, 59.1685, -9.64717, 0.67", "-58.087, 62.1254, -9.95588, 0.67", "-61.2997, 63.6568, -10.1499, 0.67", "-67.8951, 66.7167, -10.5892, 0.67", "-73.3335, 69.1932, -11.172, 0.67", "-80.592, 72.6592, -12.9048, 0.67", "-85.5586, 74.6719, -14.6534, 0.67", "-87.7069, 75.5867, -15.6254, 0.67", "-90.6242, 76.7682, -17.0568, 0.67", "-98.1006, 79.3879, -21.133, 0.67", "-106.97, 82.194, -26.6248, 0.67", "-109.271, 83.0858, -28.2733, 0.67", "-112.796, 84.5814, -30.917, 0.67", "-118.828, 86.8967, -35.6906, 0.67", "-122.026, 88.0294, -38.4344, 0.67", "-126.789, 90.0151, -42.7495, 0.67", "-130.726, 91.9679, -46.9009, 0.67", "-132.49, 92.8888, -49.1564, 1.33", "-135.279, 94.4418, -53.2419, 0.67", "-137.947, 96.2726, -57.3055, 0.33", "-140.742, 98.4609, -61.1917, 2.0", "-147.584, 103.92, -70.0189, 0.33", "-149.813, 105.771, -72.7439, 0.67", "-153.198, 108.701, -76.6887, 0.33", "-157.724, 112.492, -81.1776, 1.33", "-159.516, 113.836, -82.5957, 0.33", "-161.076, 114.938, -83.5559, 0.67", "-163.688, 116.836, -84.2925, 0.67", "-166.081, 118.547, -84.9303, 0.33", "-167.722, 119.6, -85.2374, 0.67", "-170.733, 121.476, -85.9252, 0.33", "-174.313, 123.638, -86.2801, 1.33", "-177.818, 125.702, -86.2796, 1.33", "-182.036, 128.303, -86.0889, 0.33", "-185.398, 130.674, -85.8298, 1.33", "-189.021, 133.458, -85.4373, 0.33", "-196.032, 138.995, -84.4655, 2.0", "-200.358, 142.742, -83.6652, 0.33", "-203.035, 145.311, -83.0399, 0.33", "-205.459, 147.721, -82.519, 0.67", "-207.08, 149.214, -82.3508, 0.33", "-208.943, 150.903, -82.3401, 0.33", "-210.784, 152.574, -82.6954, 0.33", "-212.441, 153.996, -83.0394, 0.67", "-216.32, 157.17, -83.8393, 0.33", "-219.427, 159.596, -84.4373, 0.67", "-222.936, 162.225, -85.0497, 0.33", "-225.193, 163.906, -85.6004, 1.33", "-227.476, 165.366, -86.3127, 0.67", "-230.019, 166.778, -87.0192, 0.67", "-232.788, 168.101, -87.6361, 0.67", "-235.546, 169.107, -88.2219, 0.33", "-241.615, 170.563, -89.3332, 1.33", "-246.901, 171.559, -90.1335, 0.33", "-252.183, 172.313, -90.7656, 0.33", "-256.108, 172.665, -91.3362, 0.67", "-259.661, 172.801, -91.8839, 0.33", "-262.64, 172.803, -92.317, 1.33", "-265.099, 172.664, -92.5987, 0.33", "-267.032, 172.439, -92.9295, 0.67", "-272.743, 171.475, -95.3839, 1.33", "-275.671, 170.835, -97.1862, 0.33", "-276.881, 170.537, -97.9919, 0.33", "-278.537, 170.137, -99.1025, 1.33", "-282.294, 169.234, -101.234, 0.33", "-291.238, 167.394, -105.817, 0.67", "-294.27, 166.959, -107.093, 0.33", "-298.837, 166.431, -108.878, 0.67", "-301.85, 166.102, -109.763, 0.33", "-307.714, 165.54, -111.074, 1.33", "-313.544, 165.058, -111.349, 0.33", "-315.067, 164.882, -111.024, 0.67", "-317.471, 164.581, -110.521, 0.33", "-320.614, 164.197, -110.568, 0.67" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.56072, 33.9351, -0.348018, 2.0", "-0.485135, 42.9346, -1.62438, 2.0" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-14.5279, 6.63557, -12.9337, 1.33", "-17.313, 5.20807, -11.7971, 0.67", "-20.7552, 3.33136, -11.2269, 0.67", "-25.1861, 0.268043, -10.5978, 1.33", "-28.9264, -2.65064, -10.2844, 0.67", "-30.791, -4.15194, -10.1195, 1.33", "-35.1666, -7.4421, -9.72268, 0.67", "-36.6015, -8.4686, -9.81307, 1.33", "-39.1931, -10.5662, -10.2472, 0.67", "-41.6975, -12.971, -10.8059, 1.33", "-44.8185, -16.1318, -11.2186, 0.67", "-47.8889, -19.1951, -10.9888, 0.67", "-51.8166, -23.1829, -10.0042, 0.67", "-55.0064, -26.3464, -8.8123, 1.33", "-56.8224, -28.0284, -7.94453, 0.33", "-62.0175, -32.8604, -4.57131, 1.33", "-68.1903, -38.5029, 0.842344, 0.67", "-69.9252, -39.95, 2.61407, 0.67", "-71.1945, -40.8869, 4.02152, 0.67", "-73.1152, -42.1402, 6.20598, 1.33", "-75.9928, -44.0858, 9.74526, 0.67", "-78.8874, -46.2528, 13.922, 0.67", "-80.5268, -47.4339, 16.0169, 0.33", "-81.1835, -47.9533, 16.9439, 0.33", "-82.0491, -48.6382, 17.965, 0.67", "-83.4234, -49.5912, 19.1867, 0.33", "-87.0808, -51.7836, 21.3854, 0.67", "-88.9323, -53.2345, 22.3283, 1.33", "-91.236, -55.3824, 23.5048, 0.67", "-96.8354, -60.7413, 26.1425, 0.67", "-98.8589, -62.6903, 27.0072, 0.67", "-100.419, -64.3191, 27.6661, 0.67", "-105.58, -70.5931, 30.1384, 0.67", "-107.022, -72.5296, 30.9028, 0.67", "-108.455, -74.7436, 31.8305, 0.33", "-108.787, -75.5318, 32.1744, 0.67", "-110.203, -79.5886, 34.0507, 0.33", "-111.415, -83.0197, 35.9379, 0.67", "-118.96, -91.3081, 41.453, 0.67" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-14.5279, 6.63557, -12.9337, 1.33", "-17.3699, 13.1208, -12.1605, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.68501, -9.48571, 0.719219, 1.33", "-10.1784, -11.2321, 5.17542, 0.67", "-10.8172, -11.7155, 6.24827, 0.67", "-12.6399, -13.3194, 10.1271, 0.67", "-13.3579, -14.0613, 12.0967, 0.67", "-14.21, -14.9419, 14.4342, 0.67", "-15.1961, -15.961, 17.1395, 0.67", "-16.3947, -16.9939, 20.1916, 0.67", "-18.6776, -19.4137, 26.8262, 0.67", "-20.4448, -22.1096, 32.9504, 0.67", "-26.1235, -25.3322, 42.0194, 0.67", "-33.6743, -26.8018, 50.1253, 0.67", "-42.8176, -25.679, 56.4513, 0.67", "-51.6377, -26.0527, 63.303, 0.67", "-59.6327, -24.5767, 70.9698, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.68501, -9.48571, 0.719219, 1.33", "-9.43007, -19.695, 0.747162, 0.67", "-10.6024, -23.192, 0.931492, 0.67", "-11.7031, -26.5466, 1.3242, 0.67", "-13.7951, -32.6714, 2.27038, 0.67", "-16.8731, -40.5589, 4.09845, 0.67", "-18.0153, -43.2522, 4.85054, 0.67", "-18.8131, -45.0097, 5.6883, 0.67", "-20.4324, -48.5999, 7.49791, 0.67", "-21.0694, -50.1451, 8.28929, 0.67", "-22.6849, -54.391, 10.326, 0.67", "-23.9142, -57.0622, 10.9831, 0.67", "-26.0731, -61.5197, 11.4788, 0.67", "-27.6655, -64.6813, 11.5276, 0.67", "-28.7549, -66.6229, 11.4052, 0.67", "-29.558, -68.2727, 11.2257, 0.67", "-34.0135, -78.2347, 9.70879, 0.67", "-35.4175, -81.6667, 9.21028, 0.67", "-36.4943, -84.359, 8.84913, 0.67", "-37.435, -86.8085, 8.54701, 0.67", "-39.6172, -92.4963, 7.81502, 0.67", "-40.7111, -95.2487, 7.46504, 0.67", "-43.4881, -102.208, 7.133, 0.67", "-45.2769, -105.932, 7.24222, 0.67", "-47.3078, -109.037, 7.37874, 0.67", "-49.9676, -111.943, 7.56341, 0.67", "-51.2165, -112.751, 7.59061, 0.67", "-57.6978, -115.129, 6.88285, 0.67", "-60.9843, -115.602, 6.08387, 0.67", "-66.2423, -115.691, 4.12436, 0.67", "-69.0285, -115.375, 2.7034, 0.67", "-74.0008, -114.026, -0.860797, 0.67", "-78.9266, -112.213, -5.13376, 0.67", "-80.7563, -111.302, -6.99676, 0.67", "-81.6711, -110.762, -8.04804, 0.67", "-83.2658, -109.876, -9.80412, 0.67", "-86.7455, -107.808, -13.3299, 0.33", "-88.6402, -106.857, -14.6236, 0.33", "-90.4645, -106.033, -15.3015, 0.33", "-93.9175, -104.521, -16.2635, 1.33", "-98.467, -102.931, -16.9597, 0.33", "-98.8331, -102.791, -17.0794, 0.67", "-100.61, -101.977, -17.8846, 0.33", "-100.918, -101.805, -18.0934, 0.67", "-102.151, -101.094, -19.0264, 0.33", "-103.294, -100.321, -20.1113, 1.33", "-109.059, -95.8794, -26.6546, 0.33", "-109.978, -95.1184, -27.8149, 0.67", "-111.29, -93.9085, -29.7614, 0.33", "-112.287, -92.9319, -31.3977, 0.67" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "1.8599, 6.3577, -3.68367, 2.66", "8.77604, 10.3716, -19.2355, 0.67", "9.38324, 10.7676, -20.5221, 1.33", "10.44, 11.6747, -23.0562, 0.67", "12.6468, 13.9033, -28.6198, 0.67", "13.6923, 15.0049, -31.1469, 1.33", "14.9502, 16.2371, -33.9459, 0.67", "17.0995, 19.1515, -38.3076, 2.0", "18.6735, 21.4435, -41.8948, 0.67", "19.1374, 22.009, -42.9561, 0.67", "20.9855, 23.6737, -46.8753, 0.67", "22.2706, 24.6311, -49.7724, 1.33", "23.7665, 25.5365, -53.0378, 1.33", "26.383, 26.8309, -58.2454, 0.67", "28.4763, 27.6483, -62.1781, 0.67", "31.7048, 28.8104, -68.6833, 1.33", "33.2803, 29.3472, -72.1883, 1.33", "35.2107, 29.9637, -76.5779, 1.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.8599, 6.3577, -3.68367, 2.66", "7.35414, 10.051, -8.72634, 2.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.1153, -38.4671, 0.561961, 0.46276", "11.3458, -53.1151, 0.561961, 0.46276", "14.5763, -67.7631, 0.561961, 0.46276" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-0.485135, 42.9346, -1.62438, 2.0", "3.14696, 46.4904, -4.09726, 0.67", "9.79809, 52.6321, -7.54176, 0.67", "10.9564, 53.5929, -8.0619, 0.67", "23.4782, 62.6482, -13.2615, 0.67", "27.417, 65.2445, -14.7353, 0.67", "32.9962, 68.8196, -16.694, 0.67", "38.8249, 72.3042, -18.2196, 0.67", "44.2581, 75.3267, -18.9692, 0.67", "50.1076, 78.4053, -19.4997, 0.67", "53.7735, 80.1703, -19.599, 0.67", "56.6489, 81.6115, -19.7878, 0.67", "60.925, 84.0256, -20.0236, 0.67", "65.3342, 87.2411, -20.2383, 0.67", "68.9064, 90.4372, -20.2079, 0.67", "71.5199, 92.8566, -20.1367, 0.67", "76.4553, 97.3499, -20.1818, 0.67", "81.4389, 101.403, -20.4489, 0.67", "84.2837, 103.514, -20.818, 0.67", "87.1279, 105.261, -21.2782, 0.67", "92.721, 107.821, -22.0606, 0.67", "95.5615, 108.667, -22.3454, 0.67", "100.059, 109.655, -22.7221, 0.67", "104.5, 110.544, -23.2234, 0.67", "109.858, 111.467, -23.8059, 0.67", "115.864, 112.545, -24.3348, 0.67", "122.246, 113.985, -24.8572, 0.67", "125.276, 114.71, -25.072, 0.33", "128.413, 115.587, -25.219, 0.67", "131.375, 116.48, -25.3338, 0.67", "134.023, 117.485, -25.5198, 0.33", "137.557, 118.734, -25.983, 0.33", "139.701, 119.667, -26.4674, 0.67", "150.309, 126.272, -30.9919, 0.67", "158.894, 134.781, -36.5137, 0.67", "168.583, 143.188, -39.9884, 0.67", "177.731, 152.457, -42.6359, 0.67", "187.098, 161.436, -45.5029, 0.67", "195.391, 171.582, -47.7158, 0.67", "202.063, 182.716, -50.5713, 0.67", "207.735, 193.675, -55.5039, 0.67", "213.446, 203.429, -62.4932, 0.67", "219.234, 211.314, -71.4895, 0.67", "221.963, 219.43, -81.6523, 0.67", "227.243, 228.564, -89.7335, 0.67", "233.666, 237.545, -97.1287, 0.67" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-0.485135, 42.9346, -1.62438, 2.0", "0.471373, 48.1144, 0.978004, 2.0", "1.275, 54.8713, 3.71498, 1.33", "1.98792, 59.9814, 5.6019, 1.33", "2.80175, 65.5152, 7.47498, 1.33", "3.23916, 69.846, 8.78927, 1.33", "3.74143, 77.2707, 10.7744, 1.33", "3.97537, 81.6547, 11.4512, 1.33", "4.01284, 84.8187, 11.6289, 1.33", "4.07846, 87.1452, 11.7657, 1.33", "4.54145, 92.3655, 12.1377, 1.33", "4.85727, 94.8008, 12.4167, 1.33", "5.69762, 101.298, 13.4001, 1.33", "6.11563, 105.523, 14.126, 1.33", "6.92069, 112.9, 15.3143, 1.33", "7.711, 118.72, 16.2354, 1.33", "8.81257, 126.235, 17.5951, 1.33", "9.45987, 130.963, 18.3429, 1.33", "9.78779, 133.757, 18.7329, 1.33", "10.7429, 141.33, 19.6103, 1.33", "11.0485, 144.434, 19.8843, 1.33", "11.8668, 150.714, 20.4036, 1.33", "13.2514, 158.474, 21.2714, 1.33", "14.2293, 163.325, 21.9411, 1.33", "15.6975, 170.659, 23.0954, 0.67", "16.5825, 175.928, 24.0219, 0.67", "17.1459, 179.026, 24.577, 0.67", "17.7846, 182.192, 25.1352, 0.67", "18.1231, 184.112, 25.6312, 0.67", "18.5144, 186.292, 26.1312, 0.67", "19.7373, 193.477, 27.3994, 0.67", "22.1438, 204.745, 29.5249, 0.67", "25.7669, 215.879, 29.9154, 0.67", "30.3853, 226.597, 30.9431, 0.67", "34.0815, 237.257, 34.1003, 0.67", "37.6604, 247.124, 39.3046, 0.67", "41.5197, 257.214, 43.8377, 0.67", "47.0117, 266.052, 49.2214, 0.67", "53.2749, 274.1, 54.989, 0.67", "57.9594, 282.426, 61.7702, 0.67", "63.8764, 290.874, 67.3273, 0.67", "68.471, 300.488, 72.1982, 0.67" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-17.3699, 13.1208, -12.1605, 1.33", "-21.2232, 17.6547, -11.475, 0.67", "-26.4468, 23.4359, -9.8042, 0.67", "-28.6955, 25.5966, -9.06364, 0.67", "-30.9204, 27.4379, -8.43215, 0.67", "-33.6978, 29.525, -7.71715, 0.67", "-34.7979, 30.3381, -7.45881, 0.67", "-44.1645, 36.9417, -5.05827, 0.67", "-47.3403, 39.2249, -4.0039, 0.67", "-50.2526, 41.0099, -2.84171, 0.67", "-51.3251, 41.5949, -2.37218, 0.67", "-54.191, 43.1341, -0.888035, 0.67", "-59.259, 45.663, 2.22118, 0.67", "-60.6467, 46.3752, 3.14282, 0.67", "-63.8211, 48.1406, 5.43715, 0.67", "-65.8815, 49.1817, 6.97901, 0.67", "-71.3878, 51.8356, 10.7515, 0.67", "-74.9907, 53.3191, 12.8335, 0.67", "-80.172, 55.4847, 15.6047, 0.67", "-86.4109, 58.4258, 19.1513, 0.67", "-90.7243, 60.7221, 21.7625, 0.67", "-95.3912, 63.2697, 25.055, 0.67", "-99.654, 65.5041, 28.3487, 0.67", "-104.166, 67.8733, 32.3016, 0.67", "-106.475, 68.8359, 34.8346, 0.67", "-108.0, 69.5824, 36.9146, 0.67", "-110.604, 71.1184, 41.9987, 0.67", "-111.57, 71.4891, 45.2167, 0.67", "-111.946, 71.6015, 47.8078, 0.33", "-112.503, 70.4759, 50.7598, 0.67", "-121.906, 74.8158, 58.9771, 0.67", "-129.709, 80.2886, 68.1395, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.3699, 13.1208, -12.1605, 1.33", "-17.6932, 15.3976, -13.3485, 0.67", "-17.912, 16.289, -13.7704, 0.67", "-19.6512, 21.659, -16.0125, 0.67", "-21.19, 25.8696, -17.6434, 0.67", "-22.0898, 28.0493, -18.4405, 0.67", "-23.6531, 31.5704, -19.5707, 0.67", "-24.943, 33.9624, -20.2266, 0.67", "-27.1109, 37.5543, -20.929, 0.67", "-27.8592, 38.6683, -21.0783, 0.67", "-28.8725, 39.9794, -21.3069, 0.67", "-31.1655, 42.7503, -21.8021, 0.67", "-32.6085, 44.6087, -22.2871, 0.67", "-33.8729, 46.4196, -23.088, 0.67", "-35.4048, 49.0657, -24.7709, 0.67", "-36.4426, 51.4959, -26.8381, 0.67", "-36.6573, 52.149, -27.5418, 0.67", "-37.3773, 54.5571, -30.8023, 0.67", "-37.8822, 56.5028, -33.6949, 0.67", "-38.2912, 57.805, -35.9525, 2.0", "-38.8933, 59.5742, -39.1534, 0.33", "-39.2551, 60.4723, -40.8729, 0.67", "-39.9441, 61.6234, -43.1686, 0.33", "-40.2353, 61.9964, -43.8869, 2.0", "-41.6499, 63.6209, -46.9829, 0.33", "-42.2243, 64.3088, -48.2612, 1.33", "-43.1996, 65.7694, -50.7515, 0.33", "-43.64, 66.6029, -52.0723, 1.33", "-44.0759, 67.6866, -53.7323, 0.33", "-44.4644, 68.871, -55.5462, 1.33", "-44.64, 69.9197, -57.0094, 0.33", "-44.7433, 71.2504, -59.0262, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-59.6327, -24.5767, 70.9698, 0.67", "-63.8338, -25.4335, 75.0788, 0.67", "-66.8165, -27.1621, 79.9143, 0.67", "-70.4255, -27.7842, 84.5892, 0.67", "-73.7703, -28.6176, 89.425, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-59.6327, -24.5767, 70.9698, 0.67", "-66.1455, -26.165, 80.4133, 0.67", "-73.3474, -30.4229, 88.421, 0.67", "-79.4662, -33.9137, 97.6131, 0.67", "-88.024, -35.8115, 105.182, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "35.2107, 29.9637, -76.5779, 1.33", "35.3844, 31.5425, -80.2068, 0.33", "35.2752, 35.1293, -88.457, 1.33", "34.9818, 37.5766, -95.1922, 0.33", "34.8358, 38.9452, -100.612, 1.33", "34.8957, 40.1883, -108.057, 1.33", "35.6536, 41.502, -121.701, 0.67", "36.7051, 41.1679, -134.562, 0.67", "37.5874, 40.5156, -140.976, 0.67", "38.6715, 39.8055, -148.579, 1.33", "39.6153, 39.3954, -154.483, 0.33", "40.7631, 38.8726, -161.34, 0.33", "41.4816, 38.5952, -165.697, 1.33", "43.84, 38.1761, -175.556, 0.67", "46.396, 38.3588, -186.539, 1.33", "47.1165, 38.6937, -190.116, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "35.2107, 29.9637, -76.5779, 1.33", "37.4263, 30.7444, -78.7464, 0.33", "38.9968, 31.3511, -80.3473, 0.67", "42.8267, 32.8319, -85.3099, 0.67", "45.2228, 33.7225, -90.0164, 0.67", "46.3421, 34.116, -92.987, 0.67", "47.2327, 34.4198, -95.7179, 0.67", "48.0237, 34.6876, -98.8108, 0.67", "49.8427, 35.1733, -107.274, 0.67", "51.4635, 35.4757, -116.945, 2.0", "52.3699, 35.6664, -123.982, 0.67", "52.8267, 35.7668, -128.088, 2.0", "53.4155, 35.866, -133.229, 0.33", "53.7738, 35.9273, -135.619, 2.0", "54.7166, 36.1937, -141.037, 0.33", "54.9617, 36.2828, -142.043, 1.33", "56.0785, 36.8854, -146.172, 0.33", "56.4155, 37.1362, -147.417, 0.67", "57.7666, 38.3345, -152.167, 0.33", "58.3296, 38.937, -154.209, 0.33", "59.5284, 40.3283, -158.789, 0.67", "60.107, 41.1093, -161.356, 0.33", "60.9523, 42.5338, -165.474, 1.33", "61.2197, 43.0661, -166.965, 0.67", "61.6874, 44.2327, -170.071, 0.67", "62.2669, 45.759, -174.432, 0.67", "62.8341, 47.2921, -179.007, 0.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "7.35414, 10.051, -8.72634, 2.66", "5.21242, 18.6611, -8.98603, 1.33", "3.60486, 25.1238, -9.18095, 1.33", "2.15432, 30.9553, -9.35683, 0.67", "1.14373, 35.0181, -9.47936, 1.33", "-0.885665, 43.1766, -9.72543, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.35414, 10.051, -8.72634, 2.66", "13.1311, 10.6702, -12.2038, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.885665, 43.1766, -9.72543, 1.33", "0.350747, 46.3806, -10.2277, 0.67", "2.66941, 53.1874, -11.2312, 0.67", "3.55867, 55.7778, -11.5959, 0.67", "4.86584, 59.307, -12.1768, 0.67", "6.47581, 63.4286, -13.1062, 1.33", "7.17929, 65.2545, -13.5785, 0.67", "8.16294, 67.9411, -14.3048, 0.67", "8.82431, 69.9315, -14.9993, 0.67", "9.27289, 72.179, -15.8168, 0.33", "9.74478, 75.6583, -17.0517, 1.33", "9.97213, 77.6643, -17.6186, 0.67", "10.171, 81.5569, -18.4075, 0.67", "9.81449, 86.6991, -18.9966, 0.33", "9.35972, 89.6144, -19.0792, 0.67", "8.81551, 92.3918, -18.9193, 2.66", "7.69106, 97.6354, -18.2391, 0.67", "7.34527, 99.0036, -18.053, 0.67", "6.7277, 101.359, -17.7615, 1.33", "6.25255, 103.037, -17.5225, 0.33", "5.87037, 104.215, -17.4286, 0.67", "4.97404, 106.489, -17.3888, 0.67", "2.96534, 111.359, -17.6143, 1.33", "1.62864, 115.307, -17.7129, 0.67", "0.461064, 119.082, -17.6098, 0.67", "-0.113735, 121.101, -17.5293, 0.33", "-0.55481, 122.911, -17.4395, 0.67", "-1.00863, 125.284, -17.2956, 0.67", "-1.73116, 130.883, -16.8813, 0.67", "-2.0975, 134.898, -16.5426, 0.67", "-2.13672, 138.511, -16.1144, 0.33", "-2.11553, 139.97, -15.9487, 0.67", "-2.01717, 141.972, -15.7623, 0.33", "-1.99891, 142.741, -15.7118, 0.33", "-1.93869, 145.173, -15.8011, 0.67", "-1.78803, 149.578, -16.1879, 0.33", "-1.78679, 152.286, -16.4656, 2.0", "-1.78302, 154.795, -16.6803, 0.33", "-1.68399, 157.573, -16.8867, 0.67", "-1.39664, 162.067, -17.1799, 0.33", "-1.19043, 164.349, -17.32, 0.33", "-1.05337, 165.963, -17.4594, 0.67", "-0.57611, 170.01, -17.5643, 0.33", "-0.300362, 171.712, -17.5138, 1.33", "0.37034, 174.236, -17.173, 0.33", "0.858742, 175.816, -16.6584, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.885665, 43.1766, -9.72543, 1.33", "-3.71746, 44.8488, -17.4962, 0.67", "-5.80177, 46.5657, -23.4546, 0.67", "-8.93962, 49.2332, -31.9903, 0.67", "-9.987, 50.1077, -34.5715, 1.33", "-12.7181, 52.3528, -40.718, 0.67", "-15.0156, 54.3082, -45.5964, 0.67", "-17.9821, 56.9294, -50.6407, 0.67", "-19.447, 58.3217, -52.8543, 0.33", "-21.2352, 59.6218, -54.8067, 0.67", "-22.6216, 60.4465, -56.0884, 0.33", "-24.2246, 61.3505, -57.4192, 0.33", "-25.3657, 61.8829, -58.267, 0.33", "-28.1542, 62.8996, -60.5454, 0.67", "-33.3545, 64.661, -65.1102, 0.33", "-37.4784, 66.0475, -68.9965, 1.33", "-41.5869, 67.4654, -72.9757, 0.33", "-42.9851, 67.9215, -74.403, 1.33", "-49.3036, 70.0704, -80.8681, 0.33", "-50.0757, 70.3127, -81.6649, 0.67", "-51.8665, 70.7713, -83.3369, 0.33", "-53.3403, 71.0731, -84.6831, 1.33", "-58.7901, 72.1729, -90.163, 0.67", "-61.5696, 72.8019, -93.0944, 1.33", "-66.5974, 74.1669, -98.5204, 0.33", "-67.9534, 74.5602, -99.9912, 0.33", "-71.633, 75.5605, -103.895, 1.33", "-75.7717, 76.8099, -108.145, 0.33", "-78.0185, 77.6696, -110.343, 1.33", "-82.5851, 79.5355, -114.693, 0.67", "-84.0193, 80.1167, -115.817, 0.33", "-88.8361, 81.7813, -118.942, 0.67", "-91.0644, 82.3327, -119.877, 0.33", "-94.0032, 82.7111, -120.941, 0.33", "-95.7589, 82.806, -121.811, 1.33", "-98.9437, 82.8082, -123.53, 0.33", "-100.238, 82.8079, -124.415, 0.33", "-103.617, 82.8667, -126.897, 0.67", "-109.274, 83.0134, -131.165, 0.33", "-115.311, 83.5157, -135.849, 0.33", "-116.207, 83.6655, -136.576, 1.33", "-120.736, 84.9585, -140.447, 0.33", "-123.588, 86.0465, -142.743, 0.33", "-125.17, 86.8669, -143.835, 1.33", "-127.805, 88.4612, -145.086, 0.33", "-129.113, 89.2087, -145.505, 1.33", "-132.732, 91.0869, -146.527, 0.67", "-134.851, 92.1008, -147.019, 0.67", "-136.355, 92.8115, -147.515, 1.33", "-140.474, 94.5705, -149.021, 0.67", "-142.864, 95.4288, -149.909, 1.33", "-144.924, 96.1365, -150.663, 0.33", "-146.744, 96.7412, -151.238, 1.33", "-149.644, 97.8458, -152.223, 0.33", "-151.488, 98.6461, -152.749, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "13.1311, 10.6702, -12.2038, 2.0", "16.2978, 9.72744, -9.55188, 0.67", "17.9656, 9.14131, -8.43337, 0.67", "22.0505, 7.96355, -5.64407, 0.67", "24.0966, 7.46315, -3.89155, 0.67", "27.5805, 6.45947, -0.810443, 0.67", "30.1043, 5.68095, 1.38176, 0.67", "32.0019, 5.31074, 2.89999, 0.67", "36.5926, 4.60868, 6.07229, 0.67", "44.3176, 3.41908, 10.3205, 0.67", "46.0438, 3.19902, 11.2895, 0.67", "47.2855, 3.02083, 11.9113, 0.67", "53.8653, 2.17948, 15.3652, 0.67", "55.4913, 2.02882, 16.2112, 1.33", "59.1833, 1.66469, 17.9853, 0.67", "64.6204, 1.20583, 20.5042, 0.67", "71.9311, 0.648967, 24.4339, 0.67", "74.5878, 0.396576, 26.0165, 0.67", "78.2801, -0.122728, 28.5826, 0.67", "80.4977, -0.358776, 30.1954, 0.67", "82.0469, -0.447508, 31.3523, 0.67", "85.3331, -0.635536, 33.5437, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.1311, 10.6702, -12.2038, 2.0", "16.6468, 10.7376, -11.3297, 0.67", "23.5152, 10.8694, -9.62212, 0.67", "27.491, 10.9457, -8.63368, 0.67", "35.8509, 11.1061, -6.55526, 0.67", "40.5115, 11.1955, -5.39656, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "85.3331, -0.635536, 33.5437, 0.67", "89.6036, -1.45285, 35.7038, 0.67", "91.5695, -1.8291, 36.6982, 0.67", "98.6344, -3.18121, 40.2718, 0.33", "107.248, -5.7922, 43.1944, 0.33", "115.725, -8.44211, 46.4608, 0.33", "123.901, -9.46325, 51.1153, 0.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "85.3331, -0.635536, 33.5437, 0.67", "89.8468, -0.222217, 35.9458, 0.67", "93.1896, 0.0794958, 37.2121, 0.67", "97.5611, 0.130176, 38.8528, 0.67", "104.494, -0.0813192, 41.3565, 0.67", "107.398, -0.366869, 42.3104, 0.67", "110.791, -0.787665, 43.3334, 0.67", "116.375, -1.26041, 44.9302, 0.67", "121.503, -2.04202, 46.1039, 0.67", "123.245, -2.41492, 46.3108, 0.67", "127.644, -3.26158, 46.3547, 0.67", "133.356, -3.9595, 46.292, 0.67", "138.422, -4.23586, 45.7594, 0.67", "144.083, -4.19476, 44.7641, 0.67", "147.809, -3.8519, 43.8528, 0.67", "155.144, -2.74932, 41.6208, 0.67", "160.43, -1.55475, 39.6786, 0.67", "165.433, -0.108662, 37.4495, 0.33", "168.01, 0.838911, 36.2036, 0.33", "169.883, 1.80476, 35.3273, 0.33", "172.936, 3.79161, 34.1056, 0.33", "173.809, 4.52476, 33.7696, 0.67", "175.152, 5.79181, 33.7007, 0.33", "176.768, 7.30612, 34.0667, 0.67", "179.194, 9.55266, 34.9161, 0.33", "182.736, 12.5504, 36.2762, 0.33", "183.999, 13.5595, 36.9489, 0.67", "190.523, 18.398, 40.8058, 0.67", "192.184, 19.5073, 41.8173, 0.67", "194.013, 20.6282, 42.9401, 0.67", "196.375, 21.9899, 44.5089, 0.67", "201.196, 24.2997, 47.7776, 0.33", "202.467, 24.8643, 48.6016, 0.67", "205.747, 26.228, 50.0383, 0.33", "207.495, 26.9815, 50.9368, 0.33", "220.527, 28.7378, 53.9286, 0.33" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "40.5115, 11.1955, -5.39656, 0.67", "48.3367, 11.1904, -11.2643, 0.67", "53.0444, 11.1221, -14.6539, 0.67", "55.7428, 11.1296, -16.3898, 0.67", "58.5436, 11.134, -18.0772, 1.33", "61.7277, 11.0461, -20.0413, 0.67", "62.9127, 10.9915, -20.7381, 0.67", "66.3907, 10.7985, -22.6653, 0.67", "69.0198, 10.6377, -24.2697, 1.33", "70.8372, 10.5249, -25.4793, 0.67", "74.6038, 10.5305, -28.228, 0.67", "77.5255, 10.5332, -30.3207, 1.33", "83.1071, 10.2664, -34.4309, 0.67", "83.8182, 10.1992, -35.01, 0.67", "86.8409, 9.96332, -37.7301, 0.67", "91.7798, 9.72989, -42.2968, 1.33", "94.1854, 9.7437, -44.6181, 0.67", "97.8059, 9.92385, -48.3593, 1.33", "103.144, 10.5282, -53.9101, 0.33", "105.534, 11.0257, -56.6477, 0.33", "106.016, 11.1835, -57.2542, 1.33", "108.746, 12.3337, -60.737, 0.33", "109.748, 12.8451, -62.0494, 1.33", "111.988, 14.0379, -64.9301, 0.33", "114.024, 14.9487, -67.3952, 0.67", "115.578, 15.289, -69.4159, 0.33", "116.353, 15.2784, -70.5089, 1.33", "118.275, 14.3496, -73.3141, 0.33", "119.4, 13.2081, -74.9415, 0.33", "119.857, 12.3554, -75.6024, 1.33", "121.25, 8.94508, -77.361, 0.33", "121.453, 8.2955, -77.6313, 0.67", "122.039, 6.16201, -78.4189, 0.33", "122.754, 3.43673, -79.2568, 1.33", "123.267, 1.64111, -79.8112, 0.33", "123.475, 0.973207, -79.9879, 0.67", "124.631, -2.63124, -80.6663, 0.33", "124.724, -2.93292, -80.7331, 0.67", "125.708, -6.29764, -81.7052, 0.33", "125.818, -6.63038, -81.8452, 0.67" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "40.5115, 11.1955, -5.39656, 0.67", "48.0522, 10.8039, -4.63288, 0.67", "55.9158, 10.3037, -3.93476, 0.67", "62.1671, 10.066, -3.39463, 0.67", "65.7064, 9.90695, -2.98762, 0.67", "75.0358, 9.5329, -1.93155, 0.67", "83.2327, 9.15392, -1.21787, 0.67", "93.8084, 8.61526, -0.0950552, 0.67", "100.788, 8.41968, 0.958386, 0.67", "109.936, 7.84553, 2.74825, 0.67", "113.017, 7.49496, 3.4553, 0.67", "117.737, 6.75077, 4.70137, 0.67", "128.604, 4.91592, 7.83657, 0.67", "134.029, 3.86492, 9.55547, 0.67", "141.835, 2.66427, 12.4298, 0.67", "148.035, 2.0813, 14.8801, 0.67", "150.478, 1.95573, 15.9062, 0.67", "154.148, 2.01838, 17.4545, 0.67", "165.509, 3.11679, 21.5204, 0.67", "175.597, 4.57778, 25.1558, 0.67", "177.92, 5.09201, 25.9644, 0.67", "180.719, 5.87023, 26.8183, 0.67", "186.15, 7.32331, 28.3787, 0.67", "191.646, 8.61055, 29.7649, 0.67", "194.008, 9.1579, 30.2384, 0.67", "197.906, 9.89019, 30.5754, 0.67", "203.551, 10.8416, 31.2713, 0.67", "207.445, 11.4701, 31.849, 0.33", "211.793, 12.1039, 32.5931, 0.67", "214.521, 12.484, 33.057, 0.67", "219.622, 13.2601, 33.8881, 0.67", "230.063, 14.7232, 35.4453, 0.67", "233.151, 15.0173, 35.8423, 0.67", "235.105, 15.1989, 36.0677, 1.33", "240.137, 15.4149, 36.536, 0.67", "243.622, 15.4374, 36.7894, 0.33", "249.546, 15.355, 37.2068, 0.67", "254.436, 15.2815, 37.3328, 0.33", "256.637, 15.2207, 37.5335, 0.33", "260.351, 15.2591, 38.15, 0.67", "263.045, 15.3927, 38.8711, 0.33", "269.421, 15.8578, 40.9307, 0.67", "270.878, 16.0636, 41.473, 0.67", "275.251, 16.9516, 43.3669, 0.33", "279.361, 17.724, 45.182, 0.33", "282.321, 18.3343, 46.5576, 0.67", "286.088, 19.0608, 48.319, 0.33", "289.871, 19.8966, 50.0616, 0.67", "294.316, 20.9467, 52.0003, 0.33", "297.027, 21.4672, 52.9477, 0.33", "311.71, 20.4215, 54.8905, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_4", "apic_1", "axon_1", "apic_3", "apic_2" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_21", "dend_16", "dend_15", "dend_0", "apic_4", "apic_1", "dend_25", "dend_22", "dend_18", "dend_17", "dend_12", "dend_1", "apic_3", "apic_2", "dend_24", "dend_23", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_2", "dend_11", "dend_10", "dend_6", "dend_3", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_4", "apic_1", "apic_3", "apic_2" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_4", "apic_1", "apic_3", "apic_2" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_21", "dend_16", "dend_15", "dend_0", "apic_4", "apic_1", "dend_25", "dend_22", "dend_18", "dend_17", "dend_12", "dend_1", "apic_3", "apic_2", "dend_24", "dend_23", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_2", "dend_11", "dend_10", "dend_6", "dend_3", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_21", "dend_16", "dend_15", "dend_0", "dend_25", "dend_22", "dend_18", "dend_17", "dend_12", "dend_1", "dend_24", "dend_23", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_2", "dend_11", "dend_10", "dend_6", "dend_3", "dend_8", "dend_7", "dend_5", "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_21", "dend_21", "dend_21", "dend_21", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "axon_1", "axon_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SS_a8ef0f9d97_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_4, apic_1, axon_1, apic_3, apic_2]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_4, apic_1, apic_3, apic_2]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_4, apic_1, apic_3, apic_2]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_21, dend_16, dend_15, dend_0, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.49999992695277334)
    connect dend_21(0), soma_0(0.49999992695277334)
    connect dend_16(0), soma_0(0.49999992695277334)
    connect dend_15(0), soma_0(0.49999992695277334)
    connect dend_0(0), soma_0(0.49999992695277334)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.22921, 8.43818, 0.170204, 3.86713 ) }
    soma_0 { pt3dadd( -2.03503, 7.55772, 0.189792, 6.97619 ) }
    soma_0 { pt3dadd( -1.84085, 6.67725, 0.20938, 9.05853 ) }
    soma_0 { pt3dadd( -1.64667, 5.79679, 0.228967, 10.4448 ) }
    soma_0 { pt3dadd( -1.4525, 4.91633, 0.248555, 11.547 ) }
    soma_0 { pt3dadd( -1.25832, 4.03586, 0.268143, 11.8847 ) }
    soma_0 { pt3dadd( -1.06414, 3.1554, 0.287731, 11.8052 ) }
    soma_0 { pt3dadd( -0.869961, 2.27493, 0.307319, 11.7257 ) }
    soma_0 { pt3dadd( -0.675783, 1.39447, 0.326907, 11.6462 ) }
    soma_0 { pt3dadd( -0.481605, 0.514006, 0.346495, 11.6622 ) }
    soma_0 { pt3dadd( -0.287427, -0.366458, 0.366082, 11.8066 ) }
    soma_0 { pt3dadd( -0.0932491, -1.24692, 0.38567, 11.8931 ) }
    soma_0 { pt3dadd( 0.100929, -2.12739, 0.405258, 11.7494 ) }
    soma_0 { pt3dadd( 0.295107, -3.00785, 0.424846, 11.5995 ) }
    soma_0 { pt3dadd( 0.489285, -3.88831, 0.444434, 11.4362 ) }
    soma_0 { pt3dadd( 0.683463, -4.76878, 0.464022, 11.0379 ) }
    soma_0 { pt3dadd( 0.877641, -5.64924, 0.48361, 10.4513 ) }
    soma_0 { pt3dadd( 1.07182, -6.5297, 0.503198, 9.62464 ) }
    soma_0 { pt3dadd( 1.266, -7.41017, 0.522785, 7.94147 ) }
    soma_0 { pt3dadd( 1.46018, -8.29063, 0.542373, 5.00417 ) }
    soma_0 { pt3dadd( 1.65435, -9.1711, 0.561961, 2.93148 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.40694, 8.40204, 2.61396, 2.66 ) }
    apic_0 { pt3dadd( 1.55943, 9.25381, 2.88742, 2.66 ) }
    apic_0 { pt3dadd( 1.55977, 15.7183, 2.04, 2.0 ) }
    apic_0 { pt3dadd( 1.55997, 19.6565, 1.52374, 2.0 ) }
    apic_0 { pt3dadd( 1.5601, 22.0845, 1.20545, 2.0 ) }
    apic_0 { pt3dadd( 1.56038, 27.3765, 0.511742, 2.0 ) }
    apic_0 { pt3dadd( 1.56072, 33.9351, -0.348018, 2.0 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 28/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.01111, 5.81665, -4.4687, 1.33 ) }
    dend_21 { pt3dadd( -4.94976, 5.74768, -4.41347, 1.33 ) }
    dend_21 { pt3dadd( -8.88166, 6.11216, -7.91111, 1.33 ) }
    dend_21 { pt3dadd( -12.4679, 6.44461, -11.1012, 1.33 ) }
    dend_21 { pt3dadd( -14.5279, 6.63557, -12.9337, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 33/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.22832, -6.54955, -3.4678, 1.33 ) }
    dend_16 { pt3dadd( -3.75718, -5.78291, -3.07704, 1.33 ) }
    dend_16 { pt3dadd( -6.68501, -9.48571, 0.719219, 1.33 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 36/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.0471281, -5.50466, -6.52533, 1.33 ) }
    dend_15 { pt3dadd( 0.0540611, -6.45841, -7.57593, 1.33 ) }
    dend_15 { pt3dadd( 12.1352, -14.2436, 5.79149, 0.67 ) }
    dend_15 { pt3dadd( 18.205, -17.8034, 11.8012, 0.67 ) }
    dend_15 { pt3dadd( 23.1228, -20.1971, 16.1124, 0.67 ) }
    dend_15 { pt3dadd( 26.4635, -21.6414, 18.7516, 0.67 ) }
    dend_15 { pt3dadd( 31.2201, -23.5278, 22.2252, 0.67 ) }
    dend_15 { pt3dadd( 36.6268, -25.2111, 25.3489, 0.67 ) }
    dend_15 { pt3dadd( 43.5255, -26.7087, 27.9701, 0.67 ) }
    dend_15 { pt3dadd( 49.9547, -27.8819, 29.9169, 0.67 ) }
    dend_15 { pt3dadd( 54.1035, -28.4233, 30.916, 0.67 ) }
    dend_15 { pt3dadd( 56.3111, -28.6294, 31.3778, 1.33 ) }
    dend_15 { pt3dadd( 61.1161, -29.0755, 32.1831, 0.67 ) }
    dend_15 { pt3dadd( 66.2758, -29.5944, 32.7853, 0.67 ) }
    dend_15 { pt3dadd( 76.7361, -30.9153, 33.634, 0.67 ) }
    dend_15 { pt3dadd( 83.9215, -32.2656, 34.3034, 0.67 ) }
    dend_15 { pt3dadd( 87.4496, -33.0366, 34.6627, 0.67 ) }
    dend_15 { pt3dadd( 89.0249, -33.4231, 34.9205, 0.67 ) }
    dend_15 { pt3dadd( 92.64, -34.4798, 35.7545, 0.67 ) }
    dend_15 { pt3dadd( 96.7573, -35.9902, 36.931, 0.67 ) }
    dend_15 { pt3dadd( 99.2186, -36.8642, 37.7223, 0.67 ) }
    dend_15 { pt3dadd( 101.267, -37.6916, 38.2915, 0.67 ) }
    dend_15 { pt3dadd( 107.782, -40.2828, 40.0576, 0.67 ) }
    dend_15 { pt3dadd( 111.474, -41.6733, 41.0079, 0.67 ) }
    dend_15 { pt3dadd( 120.317, -45.0314, 43.1904, 0.67 ) }
    dend_15 { pt3dadd( 127.304, -47.7408, 45.077, 0.67 ) }
    dend_15 { pt3dadd( 131.045, -49.4855, 46.1997, 0.67 ) }
    dend_15 { pt3dadd( 133.754, -50.9244, 47.0348, 0.67 ) }
    dend_15 { pt3dadd( 137.204, -52.9842, 47.9352, 0.67 ) }
    dend_15 { pt3dadd( 139.59, -54.527, 48.5741, 0.67 ) }
    dend_15 { pt3dadd( 145.338, -58.3638, 50.1364, 0.67 ) }
    dend_15 { pt3dadd( 153.102, -63.2298, 52.1587, 0.67 ) }
    dend_15 { pt3dadd( 159.234, -66.3125, 53.4891, 0.67 ) }
    dend_15 { pt3dadd( 163.755, -68.146, 54.2688, 0.67 ) }
    dend_15 { pt3dadd( 165.92, -68.8031, 54.4608, 0.33 ) }
    dend_15 { pt3dadd( 171.154, -69.635, 54.4351, 0.67 ) }
    dend_15 { pt3dadd( 174.442, -69.69, 54.0799, 0.67 ) }
    dend_15 { pt3dadd( 178.956, -69.0332, 53.3806, 0.67 ) }
    dend_15 { pt3dadd( 180.826, -68.6095, 53.1237, 0.67 ) }
    dend_15 { pt3dadd( 185.141, -67.3989, 52.6923, 0.67 ) }
    dend_15 { pt3dadd( 188.839, -66.3014, 52.2952, 0.33 ) }
    dend_15 { pt3dadd( 190.776, -65.7313, 52.0674, 0.67 ) }
    dend_15 { pt3dadd( 194.596, -64.5698, 51.6501, 0.33 ) }
    dend_15 { pt3dadd( 198.492, -63.0981, 51.2892, 0.67 ) }
    dend_15 { pt3dadd( 200.597, -62.1425, 51.165, 0.33 ) }
    dend_15 { pt3dadd( 204.139, -60.0661, 51.149, 0.33 ) }
    dend_15 { pt3dadd( 205.3, -59.3502, 51.1649, 0.67 ) }
    dend_15 { pt3dadd( 207.004, -58.2699, 51.4085, 0.33 ) }
    dend_15 { pt3dadd( 208.925, -57.1703, 51.9125, 0.67 ) }
    dend_15 { pt3dadd( 211.411, -55.8959, 52.6998, 0.67 ) }
    dend_15 { pt3dadd( 215.549, -53.8386, 54.0847, 0.67 ) }
    dend_15 { pt3dadd( 218.835, -52.1069, 55.3105, 0.33 ) }
    dend_15 { pt3dadd( 223.799, -49.6804, 57.3008, 0.67 ) }
    dend_15 { pt3dadd( 227.051, -48.1697, 58.7742, 0.33 ) }
    dend_15 { pt3dadd( 228.414, -47.6215, 59.4921, 0.33 ) }
    dend_15 { pt3dadd( 241.126, -49.7617, 63.9596, 0.33 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.19789, 7.43767, -4.33335, 2.66 ) }
    dend_0 { pt3dadd( 1.8599, 6.3577, -3.68367, 2.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.65435, -9.1711, 0.561961, 0.67 ) }
    axon_0 { pt3dadd( 4.88483, -23.8191, 0.561961, 0.67 ) }
    axon_0 { pt3dadd( 8.1153, -38.4671, 0.561961, 0.67 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 97/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 1.56072, 33.9351, -0.348018, 2.0 ) }
    apic_4 { pt3dadd( -9.96203, 38.6822, -4.22107, 0.67 ) }
    apic_4 { pt3dadd( -14.6296, 40.9228, -5.48718, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_4 { pt3dadd( -19.6872, 43.003, -6.60881, 0.67 ) }
    apic_4 { pt3dadd( -23.5452, 44.7265, -7.3315, 0.67 ) }
    apic_4 { pt3dadd( -27.3679, 46.4363, -7.93614, 0.67 ) }
    apic_4 { pt3dadd( -32.1091, 48.5828, -8.59731, 0.67 ) }
    apic_4 { pt3dadd( -38.495, 51.7282, -8.97688, 0.67 ) }
    apic_4 { pt3dadd( -45.1579, 55.2189, -9.29812, 0.67 ) }
    apic_4 { pt3dadd( -52.3043, 59.1685, -9.64717, 0.67 ) }
    apic_4 { pt3dadd( -58.087, 62.1254, -9.95588, 0.67 ) }
    apic_4 { pt3dadd( -61.2997, 63.6568, -10.1499, 0.67 ) }
    apic_4 { pt3dadd( -67.8951, 66.7167, -10.5892, 0.67 ) }
    apic_4 { pt3dadd( -73.3335, 69.1932, -11.172, 0.67 ) }
    apic_4 { pt3dadd( -80.592, 72.6592, -12.9048, 0.67 ) }
    apic_4 { pt3dadd( -85.5586, 74.6719, -14.6534, 0.67 ) }
    apic_4 { pt3dadd( -87.7069, 75.5867, -15.6254, 0.67 ) }
    apic_4 { pt3dadd( -90.6242, 76.7682, -17.0568, 0.67 ) }
    apic_4 { pt3dadd( -98.1006, 79.3879, -21.133, 0.67 ) }
    apic_4 { pt3dadd( -106.97, 82.194, -26.6248, 0.67 ) }
    apic_4 { pt3dadd( -109.271, 83.0858, -28.2733, 0.67 ) }
    apic_4 { pt3dadd( -112.796, 84.5814, -30.917, 0.67 ) }
    apic_4 { pt3dadd( -118.828, 86.8967, -35.6906, 0.67 ) }
    apic_4 { pt3dadd( -122.026, 88.0294, -38.4344, 0.67 ) }
    apic_4 { pt3dadd( -126.789, 90.0151, -42.7495, 0.67 ) }
    apic_4 { pt3dadd( -130.726, 91.9679, -46.9009, 0.67 ) }
    apic_4 { pt3dadd( -132.49, 92.8888, -49.1564, 1.33 ) }
    apic_4 { pt3dadd( -135.279, 94.4418, -53.2419, 0.67 ) }
    apic_4 { pt3dadd( -137.947, 96.2726, -57.3055, 0.33 ) }
    apic_4 { pt3dadd( -140.742, 98.4609, -61.1917, 2.0 ) }
    apic_4 { pt3dadd( -147.584, 103.92, -70.0189, 0.33 ) }
    apic_4 { pt3dadd( -149.813, 105.771, -72.7439, 0.67 ) }
    apic_4 { pt3dadd( -153.198, 108.701, -76.6887, 0.33 ) }
    apic_4 { pt3dadd( -157.724, 112.492, -81.1776, 1.33 ) }
    apic_4 { pt3dadd( -159.516, 113.836, -82.5957, 0.33 ) }
    apic_4 { pt3dadd( -161.076, 114.938, -83.5559, 0.67 ) }
    apic_4 { pt3dadd( -163.688, 116.836, -84.2925, 0.67 ) }
    apic_4 { pt3dadd( -166.081, 118.547, -84.9303, 0.33 ) }
    apic_4 { pt3dadd( -167.722, 119.6, -85.2374, 0.67 ) }
    apic_4 { pt3dadd( -170.733, 121.476, -85.9252, 0.33 ) }
    apic_4 { pt3dadd( -174.313, 123.638, -86.2801, 1.33 ) }
    apic_4 { pt3dadd( -177.818, 125.702, -86.2796, 1.33 ) }
    apic_4 { pt3dadd( -182.036, 128.303, -86.0889, 0.33 ) }
    apic_4 { pt3dadd( -185.398, 130.674, -85.8298, 1.33 ) }
    apic_4 { pt3dadd( -189.021, 133.458, -85.4373, 0.33 ) }
    apic_4 { pt3dadd( -196.032, 138.995, -84.4655, 2.0 ) }
    apic_4 { pt3dadd( -200.358, 142.742, -83.6652, 0.33 ) }
    apic_4 { pt3dadd( -203.035, 145.311, -83.0399, 0.33 ) }
    apic_4 { pt3dadd( -205.459, 147.721, -82.519, 0.67 ) }
    apic_4 { pt3dadd( -207.08, 149.214, -82.3508, 0.33 ) }
    apic_4 { pt3dadd( -208.943, 150.903, -82.3401, 0.33 ) }
    apic_4 { pt3dadd( -210.784, 152.574, -82.6954, 0.33 ) }
    apic_4 { pt3dadd( -212.441, 153.996, -83.0394, 0.67 ) }
    apic_4 { pt3dadd( -216.32, 157.17, -83.8393, 0.33 ) }
    apic_4 { pt3dadd( -219.427, 159.596, -84.4373, 0.67 ) }
    apic_4 { pt3dadd( -222.936, 162.225, -85.0497, 0.33 ) }
    apic_4 { pt3dadd( -225.193, 163.906, -85.6004, 1.33 ) }
    apic_4 { pt3dadd( -227.476, 165.366, -86.3127, 0.67 ) }
    apic_4 { pt3dadd( -230.019, 166.778, -87.0192, 0.67 ) }
    apic_4 { pt3dadd( -232.788, 168.101, -87.6361, 0.67 ) }
    apic_4 { pt3dadd( -235.546, 169.107, -88.2219, 0.33 ) }
    apic_4 { pt3dadd( -241.615, 170.563, -89.3332, 1.33 ) }
    apic_4 { pt3dadd( -246.901, 171.559, -90.1335, 0.33 ) }
    apic_4 { pt3dadd( -252.183, 172.313, -90.7656, 0.33 ) }
    apic_4 { pt3dadd( -256.108, 172.665, -91.3362, 0.67 ) }
    apic_4 { pt3dadd( -259.661, 172.801, -91.8839, 0.33 ) }
    apic_4 { pt3dadd( -262.64, 172.803, -92.317, 1.33 ) }
    apic_4 { pt3dadd( -265.099, 172.664, -92.5987, 0.33 ) }
    apic_4 { pt3dadd( -267.032, 172.439, -92.9295, 0.67 ) }
    apic_4 { pt3dadd( -272.743, 171.475, -95.3839, 1.33 ) }
    apic_4 { pt3dadd( -275.671, 170.835, -97.1862, 0.33 ) }
    apic_4 { pt3dadd( -276.881, 170.537, -97.9919, 0.33 ) }
    apic_4 { pt3dadd( -278.537, 170.137, -99.1025, 1.33 ) }
    apic_4 { pt3dadd( -282.294, 169.234, -101.234, 0.33 ) }
    apic_4 { pt3dadd( -291.238, 167.394, -105.817, 0.67 ) }
    apic_4 { pt3dadd( -294.27, 166.959, -107.093, 0.33 ) }
    apic_4 { pt3dadd( -298.837, 166.431, -108.878, 0.67 ) }
    apic_4 { pt3dadd( -301.85, 166.102, -109.763, 0.33 ) }
    apic_4 { pt3dadd( -307.714, 165.54, -111.074, 1.33 ) }
    apic_4 { pt3dadd( -313.544, 165.058, -111.349, 0.33 ) }
    apic_4 { pt3dadd( -315.067, 164.882, -111.024, 0.67 ) }
    apic_4 { pt3dadd( -317.471, 164.581, -110.521, 0.33 ) }
    apic_4 { pt3dadd( -320.614, 164.197, -110.568, 0.67 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 80/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.56072, 33.9351, -0.348018, 2.0 ) }
    apic_1 { pt3dadd( -0.485135, 42.9346, -1.62438, 2.0 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 82/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -14.5279, 6.63557, -12.9337, 1.33 ) }
    dend_25 { pt3dadd( -17.313, 5.20807, -11.7971, 0.67 ) }
    dend_25 { pt3dadd( -20.7552, 3.33136, -11.2269, 0.67 ) }
    dend_25 { pt3dadd( -25.1861, 0.268043, -10.5978, 1.33 ) }
    dend_25 { pt3dadd( -28.9264, -2.65064, -10.2844, 0.67 ) }
    dend_25 { pt3dadd( -30.791, -4.15194, -10.1195, 1.33 ) }
    dend_25 { pt3dadd( -35.1666, -7.4421, -9.72268, 0.67 ) }
    dend_25 { pt3dadd( -36.6015, -8.4686, -9.81307, 1.33 ) }
    dend_25 { pt3dadd( -39.1931, -10.5662, -10.2472, 0.67 ) }
    dend_25 { pt3dadd( -41.6975, -12.971, -10.8059, 1.33 ) }
    dend_25 { pt3dadd( -44.8185, -16.1318, -11.2186, 0.67 ) }
    dend_25 { pt3dadd( -47.8889, -19.1951, -10.9888, 0.67 ) }
    dend_25 { pt3dadd( -51.8166, -23.1829, -10.0042, 0.67 ) }
    dend_25 { pt3dadd( -55.0064, -26.3464, -8.8123, 1.33 ) }
    dend_25 { pt3dadd( -56.8224, -28.0284, -7.94453, 0.33 ) }
    dend_25 { pt3dadd( -62.0175, -32.8604, -4.57131, 1.33 ) }
    dend_25 { pt3dadd( -68.1903, -38.5029, 0.842344, 0.67 ) }
    dend_25 { pt3dadd( -69.9252, -39.95, 2.61407, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -71.1945, -40.8869, 4.02152, 0.67 ) }
    dend_25 { pt3dadd( -73.1152, -42.1402, 6.20598, 1.33 ) }
    dend_25 { pt3dadd( -75.9928, -44.0858, 9.74526, 0.67 ) }
    dend_25 { pt3dadd( -78.8874, -46.2528, 13.922, 0.67 ) }
    dend_25 { pt3dadd( -80.5268, -47.4339, 16.0169, 0.33 ) }
    dend_25 { pt3dadd( -81.1835, -47.9533, 16.9439, 0.33 ) }
    dend_25 { pt3dadd( -82.0491, -48.6382, 17.965, 0.67 ) }
    dend_25 { pt3dadd( -83.4234, -49.5912, 19.1867, 0.33 ) }
    dend_25 { pt3dadd( -87.0808, -51.7836, 21.3854, 0.67 ) }
    dend_25 { pt3dadd( -88.9323, -53.2345, 22.3283, 1.33 ) }
    dend_25 { pt3dadd( -91.236, -55.3824, 23.5048, 0.67 ) }
    dend_25 { pt3dadd( -96.8354, -60.7413, 26.1425, 0.67 ) }
    dend_25 { pt3dadd( -98.8589, -62.6903, 27.0072, 0.67 ) }
    dend_25 { pt3dadd( -100.419, -64.3191, 27.6661, 0.67 ) }
    dend_25 { pt3dadd( -105.58, -70.5931, 30.1384, 0.67 ) }
    dend_25 { pt3dadd( -107.022, -72.5296, 30.9028, 0.67 ) }
    dend_25 { pt3dadd( -108.455, -74.7436, 31.8305, 0.33 ) }
    dend_25 { pt3dadd( -108.787, -75.5318, 32.1744, 0.67 ) }
    dend_25 { pt3dadd( -110.203, -79.5886, 34.0507, 0.33 ) }
    dend_25 { pt3dadd( -111.415, -83.0197, 35.9379, 0.67 ) }
    dend_25 { pt3dadd( -118.96, -91.3081, 41.453, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -14.5279, 6.63557, -12.9337, 1.33 ) }
    dend_22 { pt3dadd( -17.3699, 13.1208, -12.1605, 1.33 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.68501, -9.48571, 0.719219, 1.33 ) }
    dend_18 { pt3dadd( -10.1784, -11.2321, 5.17542, 0.67 ) }
    dend_18 { pt3dadd( -10.8172, -11.7155, 6.24827, 0.67 ) }
    dend_18 { pt3dadd( -12.6399, -13.3194, 10.1271, 0.67 ) }
    dend_18 { pt3dadd( -13.3579, -14.0613, 12.0967, 0.67 ) }
    dend_18 { pt3dadd( -14.21, -14.9419, 14.4342, 0.67 ) }
    dend_18 { pt3dadd( -15.1961, -15.961, 17.1395, 0.67 ) }
    dend_18 { pt3dadd( -16.3947, -16.9939, 20.1916, 0.67 ) }
    dend_18 { pt3dadd( -18.6776, -19.4137, 26.8262, 0.67 ) }
    dend_18 { pt3dadd( -20.4448, -22.1096, 32.9504, 0.67 ) }
    dend_18 { pt3dadd( -26.1235, -25.3322, 42.0194, 0.67 ) }
    dend_18 { pt3dadd( -33.6743, -26.8018, 50.1253, 0.67 ) }
    dend_18 { pt3dadd( -42.8176, -25.679, 56.4513, 0.67 ) }
    dend_18 { pt3dadd( -51.6377, -26.0527, 63.303, 0.67 ) }
    dend_18 { pt3dadd( -59.6327, -24.5767, 70.9698, 0.67 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 38/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.68501, -9.48571, 0.719219, 1.33 ) }
    dend_17 { pt3dadd( -9.43007, -19.695, 0.747162, 0.67 ) }
    dend_17 { pt3dadd( -10.6024, -23.192, 0.931492, 0.67 ) }
    dend_17 { pt3dadd( -11.7031, -26.5466, 1.3242, 0.67 ) }
    dend_17 { pt3dadd( -13.7951, -32.6714, 2.27038, 0.67 ) }
    dend_17 { pt3dadd( -16.8731, -40.5589, 4.09845, 0.67 ) }
    dend_17 { pt3dadd( -18.0153, -43.2522, 4.85054, 0.67 ) }
    dend_17 { pt3dadd( -18.8131, -45.0097, 5.6883, 0.67 ) }
    dend_17 { pt3dadd( -20.4324, -48.5999, 7.49791, 0.67 ) }
    dend_17 { pt3dadd( -21.0694, -50.1451, 8.28929, 0.67 ) }
    dend_17 { pt3dadd( -22.6849, -54.391, 10.326, 0.67 ) }
    dend_17 { pt3dadd( -23.9142, -57.0622, 10.9831, 0.67 ) }
    dend_17 { pt3dadd( -26.0731, -61.5197, 11.4788, 0.67 ) }
    dend_17 { pt3dadd( -27.6655, -64.6813, 11.5276, 0.67 ) }
    dend_17 { pt3dadd( -28.7549, -66.6229, 11.4052, 0.67 ) }
    dend_17 { pt3dadd( -29.558, -68.2727, 11.2257, 0.67 ) }
    dend_17 { pt3dadd( -34.0135, -78.2347, 9.70879, 0.67 ) }
    dend_17 { pt3dadd( -35.4175, -81.6667, 9.21028, 0.67 ) }
    dend_17 { pt3dadd( -36.4943, -84.359, 8.84913, 0.67 ) }
    dend_17 { pt3dadd( -37.435, -86.8085, 8.54701, 0.67 ) }
    dend_17 { pt3dadd( -39.6172, -92.4963, 7.81502, 0.67 ) }
    dend_17 { pt3dadd( -40.7111, -95.2487, 7.46504, 0.67 ) }
    dend_17 { pt3dadd( -43.4881, -102.208, 7.133, 0.67 ) }
    dend_17 { pt3dadd( -45.2769, -105.932, 7.24222, 0.67 ) }
    dend_17 { pt3dadd( -47.3078, -109.037, 7.37874, 0.67 ) }
    dend_17 { pt3dadd( -49.9676, -111.943, 7.56341, 0.67 ) }
    dend_17 { pt3dadd( -51.2165, -112.751, 7.59061, 0.67 ) }
    dend_17 { pt3dadd( -57.6978, -115.129, 6.88285, 0.67 ) }
    dend_17 { pt3dadd( -60.9843, -115.602, 6.08387, 0.67 ) }
    dend_17 { pt3dadd( -66.2423, -115.691, 4.12436, 0.67 ) }
    dend_17 { pt3dadd( -69.0285, -115.375, 2.7034, 0.67 ) }
    dend_17 { pt3dadd( -74.0008, -114.026, -0.860797, 0.67 ) }
    dend_17 { pt3dadd( -78.9266, -112.213, -5.13376, 0.67 ) }
    dend_17 { pt3dadd( -80.7563, -111.302, -6.99676, 0.67 ) }
    dend_17 { pt3dadd( -81.6711, -110.762, -8.04804, 0.67 ) }
    dend_17 { pt3dadd( -83.2658, -109.876, -9.80412, 0.67 ) }
    dend_17 { pt3dadd( -86.7455, -107.808, -13.3299, 0.33 ) }
    dend_17 { pt3dadd( -88.6402, -106.857, -14.6236, 0.33 ) }
    dend_17 { pt3dadd( -90.4645, -106.033, -15.3015, 0.33 ) }
    dend_17 { pt3dadd( -93.9175, -104.521, -16.2635, 1.33 ) }
    dend_17 { pt3dadd( -98.467, -102.931, -16.9597, 0.33 ) }
    dend_17 { pt3dadd( -98.8331, -102.791, -17.0794, 0.67 ) }
    dend_17 { pt3dadd( -100.61, -101.977, -17.8846, 0.33 ) }
    dend_17 { pt3dadd( -100.918, -101.805, -18.0934, 0.67 ) }
    dend_17 { pt3dadd( -102.151, -101.094, -19.0264, 0.33 ) }
    dend_17 { pt3dadd( -103.294, -100.321, -20.1113, 1.33 ) }
    dend_17 { pt3dadd( -109.059, -95.8794, -26.6546, 0.33 ) }
    dend_17 { pt3dadd( -109.978, -95.1184, -27.8149, 0.67 ) }
    dend_17 { pt3dadd( -111.29, -93.9085, -29.7614, 0.33 ) }
    dend_17 { pt3dadd( -112.287, -92.9319, -31.3977, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 88/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 1.8599, 6.3577, -3.68367, 2.66 ) }
    dend_12 { pt3dadd( 8.77604, 10.3716, -19.2355, 0.67 ) }
    dend_12 { pt3dadd( 9.38324, 10.7676, -20.5221, 1.33 ) }
    dend_12 { pt3dadd( 10.44, 11.6747, -23.0562, 0.67 ) }
    dend_12 { pt3dadd( 12.6468, 13.9033, -28.6198, 0.67 ) }
    dend_12 { pt3dadd( 13.6923, 15.0049, -31.1469, 1.33 ) }
    dend_12 { pt3dadd( 14.9502, 16.2371, -33.9459, 0.67 ) }
    dend_12 { pt3dadd( 17.0995, 19.1515, -38.3076, 2.0 ) }
    dend_12 { pt3dadd( 18.6735, 21.4435, -41.8948, 0.67 ) }
    dend_12 { pt3dadd( 19.1374, 22.009, -42.9561, 0.67 ) }
    dend_12 { pt3dadd( 20.9855, 23.6737, -46.8753, 0.67 ) }
    dend_12 { pt3dadd( 22.2706, 24.6311, -49.7724, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 23.7665, 25.5365, -53.0378, 1.33 ) }
    dend_12 { pt3dadd( 26.383, 26.8309, -58.2454, 0.67 ) }
    dend_12 { pt3dadd( 28.4763, 27.6483, -62.1781, 0.67 ) }
    dend_12 { pt3dadd( 31.7048, 28.8104, -68.6833, 1.33 ) }
    dend_12 { pt3dadd( 33.2803, 29.3472, -72.1883, 1.33 ) }
    dend_12 { pt3dadd( 35.2107, 29.9637, -76.5779, 1.33 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 6/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.8599, 6.3577, -3.68367, 2.66 ) }
    dend_1 { pt3dadd( 7.35414, 10.051, -8.72634, 2.66 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.1153, -38.4671, 0.561961, 0.46276 ) }
    axon_1 { pt3dadd( 11.3458, -53.1151, 0.561961, 0.46276 ) }
    axon_1 { pt3dadd( 14.5763, -67.7631, 0.561961, 0.46276 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 11/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -0.485135, 42.9346, -1.62438, 2.0 ) }
    apic_3 { pt3dadd( 3.14696, 46.4904, -4.09726, 0.67 ) }
    apic_3 { pt3dadd( 9.79809, 52.6321, -7.54176, 0.67 ) }
    apic_3 { pt3dadd( 10.9564, 53.5929, -8.0619, 0.67 ) }
    apic_3 { pt3dadd( 23.4782, 62.6482, -13.2615, 0.67 ) }
    apic_3 { pt3dadd( 27.417, 65.2445, -14.7353, 0.67 ) }
    apic_3 { pt3dadd( 32.9962, 68.8196, -16.694, 0.67 ) }
    apic_3 { pt3dadd( 38.8249, 72.3042, -18.2196, 0.67 ) }
    apic_3 { pt3dadd( 44.2581, 75.3267, -18.9692, 0.67 ) }
    apic_3 { pt3dadd( 50.1076, 78.4053, -19.4997, 0.67 ) }
    apic_3 { pt3dadd( 53.7735, 80.1703, -19.599, 0.67 ) }
    apic_3 { pt3dadd( 56.6489, 81.6115, -19.7878, 0.67 ) }
    apic_3 { pt3dadd( 60.925, 84.0256, -20.0236, 0.67 ) }
    apic_3 { pt3dadd( 65.3342, 87.2411, -20.2383, 0.67 ) }
    apic_3 { pt3dadd( 68.9064, 90.4372, -20.2079, 0.67 ) }
    apic_3 { pt3dadd( 71.5199, 92.8566, -20.1367, 0.67 ) }
    apic_3 { pt3dadd( 76.4553, 97.3499, -20.1818, 0.67 ) }
    apic_3 { pt3dadd( 81.4389, 101.403, -20.4489, 0.67 ) }
    apic_3 { pt3dadd( 84.2837, 103.514, -20.818, 0.67 ) }
    apic_3 { pt3dadd( 87.1279, 105.261, -21.2782, 0.67 ) }
    apic_3 { pt3dadd( 92.721, 107.821, -22.0606, 0.67 ) }
    apic_3 { pt3dadd( 95.5615, 108.667, -22.3454, 0.67 ) }
    apic_3 { pt3dadd( 100.059, 109.655, -22.7221, 0.67 ) }
    apic_3 { pt3dadd( 104.5, 110.544, -23.2234, 0.67 ) }
    apic_3 { pt3dadd( 109.858, 111.467, -23.8059, 0.67 ) }
    apic_3 { pt3dadd( 115.864, 112.545, -24.3348, 0.67 ) }
    apic_3 { pt3dadd( 122.246, 113.985, -24.8572, 0.67 ) }
    apic_3 { pt3dadd( 125.276, 114.71, -25.072, 0.33 ) }
    apic_3 { pt3dadd( 128.413, 115.587, -25.219, 0.67 ) }
    apic_3 { pt3dadd( 131.375, 116.48, -25.3338, 0.67 ) }
    apic_3 { pt3dadd( 134.023, 117.485, -25.5198, 0.33 ) }
    apic_3 { pt3dadd( 137.557, 118.734, -25.983, 0.33 ) }
    apic_3 { pt3dadd( 139.701, 119.667, -26.4674, 0.67 ) }
    apic_3 { pt3dadd( 150.309, 126.272, -30.9919, 0.67 ) }
    apic_3 { pt3dadd( 158.894, 134.781, -36.5137, 0.67 ) }
    apic_3 { pt3dadd( 168.583, 143.188, -39.9884, 0.67 ) }
    apic_3 { pt3dadd( 177.731, 152.457, -42.6359, 0.67 ) }
    apic_3 { pt3dadd( 187.098, 161.436, -45.5029, 0.67 ) }
    apic_3 { pt3dadd( 195.391, 171.582, -47.7158, 0.67 ) }
    apic_3 { pt3dadd( 202.063, 182.716, -50.5713, 0.67 ) }
    apic_3 { pt3dadd( 207.735, 193.675, -55.5039, 0.67 ) }
    apic_3 { pt3dadd( 213.446, 203.429, -62.4932, 0.67 ) }
    apic_3 { pt3dadd( 219.234, 211.314, -71.4895, 0.67 ) }
    apic_3 { pt3dadd( 221.963, 219.43, -81.6523, 0.67 ) }
    apic_3 { pt3dadd( 227.243, 228.564, -89.7335, 0.67 ) }
    apic_3 { pt3dadd( 233.666, 237.545, -97.1287, 0.67 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 57/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -0.485135, 42.9346, -1.62438, 2.0 ) }
    apic_2 { pt3dadd( 0.471373, 48.1144, 0.978004, 2.0 ) }
    apic_2 { pt3dadd( 1.275, 54.8713, 3.71498, 1.33 ) }
    apic_2 { pt3dadd( 1.98792, 59.9814, 5.6019, 1.33 ) }
    apic_2 { pt3dadd( 2.80175, 65.5152, 7.47498, 1.33 ) }
    apic_2 { pt3dadd( 3.23916, 69.846, 8.78927, 1.33 ) }
    apic_2 { pt3dadd( 3.74143, 77.2707, 10.7744, 1.33 ) }
    apic_2 { pt3dadd( 3.97537, 81.6547, 11.4512, 1.33 ) }
    apic_2 { pt3dadd( 4.01284, 84.8187, 11.6289, 1.33 ) }
    apic_2 { pt3dadd( 4.07846, 87.1452, 11.7657, 1.33 ) }
    apic_2 { pt3dadd( 4.54145, 92.3655, 12.1377, 1.33 ) }
    apic_2 { pt3dadd( 4.85727, 94.8008, 12.4167, 1.33 ) }
    apic_2 { pt3dadd( 5.69762, 101.298, 13.4001, 1.33 ) }
    apic_2 { pt3dadd( 6.11563, 105.523, 14.126, 1.33 ) }
    apic_2 { pt3dadd( 6.92069, 112.9, 15.3143, 1.33 ) }
    apic_2 { pt3dadd( 7.711, 118.72, 16.2354, 1.33 ) }
    apic_2 { pt3dadd( 8.81257, 126.235, 17.5951, 1.33 ) }
    apic_2 { pt3dadd( 9.45987, 130.963, 18.3429, 1.33 ) }
    apic_2 { pt3dadd( 9.78779, 133.757, 18.7329, 1.33 ) }
    apic_2 { pt3dadd( 10.7429, 141.33, 19.6103, 1.33 ) }
    apic_2 { pt3dadd( 11.0485, 144.434, 19.8843, 1.33 ) }
    apic_2 { pt3dadd( 11.8668, 150.714, 20.4036, 1.33 ) }
    apic_2 { pt3dadd( 13.2514, 158.474, 21.2714, 1.33 ) }
    apic_2 { pt3dadd( 14.2293, 163.325, 21.9411, 1.33 ) }
    apic_2 { pt3dadd( 15.6975, 170.659, 23.0954, 0.67 ) }
    apic_2 { pt3dadd( 16.5825, 175.928, 24.0219, 0.67 ) }
    apic_2 { pt3dadd( 17.1459, 179.026, 24.577, 0.67 ) }
    apic_2 { pt3dadd( 17.7846, 182.192, 25.1352, 0.67 ) }
    apic_2 { pt3dadd( 18.1231, 184.112, 25.6312, 0.67 ) }
    apic_2 { pt3dadd( 18.5144, 186.292, 26.1312, 0.67 ) }
    apic_2 { pt3dadd( 19.7373, 193.477, 27.3994, 0.67 ) }
    apic_2 { pt3dadd( 22.1438, 204.745, 29.5249, 0.67 ) }
    apic_2 { pt3dadd( 25.7669, 215.879, 29.9154, 0.67 ) }
    apic_2 { pt3dadd( 30.3853, 226.597, 30.9431, 0.67 ) }
    apic_2 { pt3dadd( 34.0815, 237.257, 34.1003, 0.67 ) }
    apic_2 { pt3dadd( 37.6604, 247.124, 39.3046, 0.67 ) }
    apic_2 { pt3dadd( 41.5197, 257.214, 43.8377, 0.67 ) }
    apic_2 { pt3dadd( 47.0117, 266.052, 49.2214, 0.67 ) }
    apic_2 { pt3dadd( 53.2749, 274.1, 54.989, 0.67 ) }
    apic_2 { pt3dadd( 57.9594, 282.426, 61.7702, 0.67 ) }
    apic_2 { pt3dadd( 63.8764, 290.874, 67.3273, 0.67 ) }
    apic_2 { pt3dadd( 68.471, 300.488, 72.1982, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 99/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -17.3699, 13.1208, -12.1605, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_24 { pt3dadd( -21.2232, 17.6547, -11.475, 0.67 ) }
    dend_24 { pt3dadd( -26.4468, 23.4359, -9.8042, 0.67 ) }
    dend_24 { pt3dadd( -28.6955, 25.5966, -9.06364, 0.67 ) }
    dend_24 { pt3dadd( -30.9204, 27.4379, -8.43215, 0.67 ) }
    dend_24 { pt3dadd( -33.6978, 29.525, -7.71715, 0.67 ) }
    dend_24 { pt3dadd( -34.7979, 30.3381, -7.45881, 0.67 ) }
    dend_24 { pt3dadd( -44.1645, 36.9417, -5.05827, 0.67 ) }
    dend_24 { pt3dadd( -47.3403, 39.2249, -4.0039, 0.67 ) }
    dend_24 { pt3dadd( -50.2526, 41.0099, -2.84171, 0.67 ) }
    dend_24 { pt3dadd( -51.3251, 41.5949, -2.37218, 0.67 ) }
    dend_24 { pt3dadd( -54.191, 43.1341, -0.888035, 0.67 ) }
    dend_24 { pt3dadd( -59.259, 45.663, 2.22118, 0.67 ) }
    dend_24 { pt3dadd( -60.6467, 46.3752, 3.14282, 0.67 ) }
    dend_24 { pt3dadd( -63.8211, 48.1406, 5.43715, 0.67 ) }
    dend_24 { pt3dadd( -65.8815, 49.1817, 6.97901, 0.67 ) }
    dend_24 { pt3dadd( -71.3878, 51.8356, 10.7515, 0.67 ) }
    dend_24 { pt3dadd( -74.9907, 53.3191, 12.8335, 0.67 ) }
    dend_24 { pt3dadd( -80.172, 55.4847, 15.6047, 0.67 ) }
    dend_24 { pt3dadd( -86.4109, 58.4258, 19.1513, 0.67 ) }
    dend_24 { pt3dadd( -90.7243, 60.7221, 21.7625, 0.67 ) }
    dend_24 { pt3dadd( -95.3912, 63.2697, 25.055, 0.67 ) }
    dend_24 { pt3dadd( -99.654, 65.5041, 28.3487, 0.67 ) }
    dend_24 { pt3dadd( -104.166, 67.8733, 32.3016, 0.67 ) }
    dend_24 { pt3dadd( -106.475, 68.8359, 34.8346, 0.67 ) }
    dend_24 { pt3dadd( -108.0, 69.5824, 36.9146, 0.67 ) }
    dend_24 { pt3dadd( -110.604, 71.1184, 41.9987, 0.67 ) }
    dend_24 { pt3dadd( -111.57, 71.4891, 45.2167, 0.67 ) }
    dend_24 { pt3dadd( -111.946, 71.6015, 47.8078, 0.33 ) }
    dend_24 { pt3dadd( -112.503, 70.4759, 50.7598, 0.67 ) }
    dend_24 { pt3dadd( -121.906, 74.8158, 58.9771, 0.67 ) }
    dend_24 { pt3dadd( -129.709, 80.2886, 68.1395, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 31/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.3699, 13.1208, -12.1605, 1.33 ) }
    dend_23 { pt3dadd( -17.6932, 15.3976, -13.3485, 0.67 ) }
    dend_23 { pt3dadd( -17.912, 16.289, -13.7704, 0.67 ) }
    dend_23 { pt3dadd( -19.6512, 21.659, -16.0125, 0.67 ) }
    dend_23 { pt3dadd( -21.19, 25.8696, -17.6434, 0.67 ) }
    dend_23 { pt3dadd( -22.0898, 28.0493, -18.4405, 0.67 ) }
    dend_23 { pt3dadd( -23.6531, 31.5704, -19.5707, 0.67 ) }
    dend_23 { pt3dadd( -24.943, 33.9624, -20.2266, 0.67 ) }
    dend_23 { pt3dadd( -27.1109, 37.5543, -20.929, 0.67 ) }
    dend_23 { pt3dadd( -27.8592, 38.6683, -21.0783, 0.67 ) }
    dend_23 { pt3dadd( -28.8725, 39.9794, -21.3069, 0.67 ) }
    dend_23 { pt3dadd( -31.1655, 42.7503, -21.8021, 0.67 ) }
    dend_23 { pt3dadd( -32.6085, 44.6087, -22.2871, 0.67 ) }
    dend_23 { pt3dadd( -33.8729, 46.4196, -23.088, 0.67 ) }
    dend_23 { pt3dadd( -35.4048, 49.0657, -24.7709, 0.67 ) }
    dend_23 { pt3dadd( -36.4426, 51.4959, -26.8381, 0.67 ) }
    dend_23 { pt3dadd( -36.6573, 52.149, -27.5418, 0.67 ) }
    dend_23 { pt3dadd( -37.3773, 54.5571, -30.8023, 0.67 ) }
    dend_23 { pt3dadd( -37.8822, 56.5028, -33.6949, 0.67 ) }
    dend_23 { pt3dadd( -38.2912, 57.805, -35.9525, 2.0 ) }
    dend_23 { pt3dadd( -38.8933, 59.5742, -39.1534, 0.33 ) }
    dend_23 { pt3dadd( -39.2551, 60.4723, -40.8729, 0.67 ) }
    dend_23 { pt3dadd( -39.9441, 61.6234, -43.1686, 0.33 ) }
    dend_23 { pt3dadd( -40.2353, 61.9964, -43.8869, 2.0 ) }
    dend_23 { pt3dadd( -41.6499, 63.6209, -46.9829, 0.33 ) }
    dend_23 { pt3dadd( -42.2243, 64.3088, -48.2612, 1.33 ) }
    dend_23 { pt3dadd( -43.1996, 65.7694, -50.7515, 0.33 ) }
    dend_23 { pt3dadd( -43.64, 66.6029, -52.0723, 1.33 ) }
    dend_23 { pt3dadd( -44.0759, 67.6866, -53.7323, 0.33 ) }
    dend_23 { pt3dadd( -44.4644, 68.871, -55.5462, 1.33 ) }
    dend_23 { pt3dadd( -44.64, 69.9197, -57.0094, 0.33 ) }
    dend_23 { pt3dadd( -44.7433, 71.2504, -59.0262, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -59.6327, -24.5767, 70.9698, 0.67 ) }
    dend_20 { pt3dadd( -63.8338, -25.4335, 75.0788, 0.67 ) }
    dend_20 { pt3dadd( -66.8165, -27.1621, 79.9143, 0.67 ) }
    dend_20 { pt3dadd( -70.4255, -27.7842, 84.5892, 0.67 ) }
    dend_20 { pt3dadd( -73.7703, -28.6176, 89.425, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -59.6327, -24.5767, 70.9698, 0.67 ) }
    dend_19 { pt3dadd( -66.1455, -26.165, 80.4133, 0.67 ) }
    dend_19 { pt3dadd( -73.3474, -30.4229, 88.421, 0.67 ) }
    dend_19 { pt3dadd( -79.4662, -33.9137, 97.6131, 0.67 ) }
    dend_19 { pt3dadd( -88.024, -35.8115, 105.182, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 73/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 35.2107, 29.9637, -76.5779, 1.33 ) }
    dend_14 { pt3dadd( 35.3844, 31.5425, -80.2068, 0.33 ) }
    dend_14 { pt3dadd( 35.2752, 35.1293, -88.457, 1.33 ) }
    dend_14 { pt3dadd( 34.9818, 37.5766, -95.1922, 0.33 ) }
    dend_14 { pt3dadd( 34.8358, 38.9452, -100.612, 1.33 ) }
    dend_14 { pt3dadd( 34.8957, 40.1883, -108.057, 1.33 ) }
    dend_14 { pt3dadd( 35.6536, 41.502, -121.701, 0.67 ) }
    dend_14 { pt3dadd( 36.7051, 41.1679, -134.562, 0.67 ) }
    dend_14 { pt3dadd( 37.5874, 40.5156, -140.976, 0.67 ) }
    dend_14 { pt3dadd( 38.6715, 39.8055, -148.579, 1.33 ) }
    dend_14 { pt3dadd( 39.6153, 39.3954, -154.483, 0.33 ) }
    dend_14 { pt3dadd( 40.7631, 38.8726, -161.34, 0.33 ) }
    dend_14 { pt3dadd( 41.4816, 38.5952, -165.697, 1.33 ) }
    dend_14 { pt3dadd( 43.84, 38.1761, -175.556, 0.67 ) }
    dend_14 { pt3dadd( 46.396, 38.3588, -186.539, 1.33 ) }
    dend_14 { pt3dadd( 47.1165, 38.6937, -190.116, 0.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 89/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 35.2107, 29.9637, -76.5779, 1.33 ) }
    dend_13 { pt3dadd( 37.4263, 30.7444, -78.7464, 0.33 ) }
    dend_13 { pt3dadd( 38.9968, 31.3511, -80.3473, 0.67 ) }
    dend_13 { pt3dadd( 42.8267, 32.8319, -85.3099, 0.67 ) }
    dend_13 { pt3dadd( 45.2228, 33.7225, -90.0164, 0.67 ) }
    dend_13 { pt3dadd( 46.3421, 34.116, -92.987, 0.67 ) }
    dend_13 { pt3dadd( 47.2327, 34.4198, -95.7179, 0.67 ) }
    dend_13 { pt3dadd( 48.0237, 34.6876, -98.8108, 0.67 ) }
    dend_13 { pt3dadd( 49.8427, 35.1733, -107.274, 0.67 ) }
    dend_13 { pt3dadd( 51.4635, 35.4757, -116.945, 2.0 ) }
    dend_13 { pt3dadd( 52.3699, 35.6664, -123.982, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_13 { pt3dadd( 52.8267, 35.7668, -128.088, 2.0 ) }
    dend_13 { pt3dadd( 53.4155, 35.866, -133.229, 0.33 ) }
    dend_13 { pt3dadd( 53.7738, 35.9273, -135.619, 2.0 ) }
    dend_13 { pt3dadd( 54.7166, 36.1937, -141.037, 0.33 ) }
    dend_13 { pt3dadd( 54.9617, 36.2828, -142.043, 1.33 ) }
    dend_13 { pt3dadd( 56.0785, 36.8854, -146.172, 0.33 ) }
    dend_13 { pt3dadd( 56.4155, 37.1362, -147.417, 0.67 ) }
    dend_13 { pt3dadd( 57.7666, 38.3345, -152.167, 0.33 ) }
    dend_13 { pt3dadd( 58.3296, 38.937, -154.209, 0.33 ) }
    dend_13 { pt3dadd( 59.5284, 40.3283, -158.789, 0.67 ) }
    dend_13 { pt3dadd( 60.107, 41.1093, -161.356, 0.33 ) }
    dend_13 { pt3dadd( 60.9523, 42.5338, -165.474, 1.33 ) }
    dend_13 { pt3dadd( 61.2197, 43.0661, -166.965, 0.67 ) }
    dend_13 { pt3dadd( 61.6874, 44.2327, -170.071, 0.67 ) }
    dend_13 { pt3dadd( 62.2669, 45.759, -174.432, 0.67 ) }
    dend_13 { pt3dadd( 62.8341, 47.2921, -179.007, 0.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 16/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 7.35414, 10.051, -8.72634, 2.66 ) }
    dend_9 { pt3dadd( 5.21242, 18.6611, -8.98603, 1.33 ) }
    dend_9 { pt3dadd( 3.60486, 25.1238, -9.18095, 1.33 ) }
    dend_9 { pt3dadd( 2.15432, 30.9553, -9.35683, 0.67 ) }
    dend_9 { pt3dadd( 1.14373, 35.0181, -9.47936, 1.33 ) }
    dend_9 { pt3dadd( -0.885665, 43.1766, -9.72543, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 22/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.35414, 10.051, -8.72634, 2.66 ) }
    dend_2 { pt3dadd( 13.1311, 10.6702, -12.2038, 2.0 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 24/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.885665, 43.1766, -9.72543, 1.33 ) }
    dend_11 { pt3dadd( 0.350747, 46.3806, -10.2277, 0.67 ) }
    dend_11 { pt3dadd( 2.66941, 53.1874, -11.2312, 0.67 ) }
    dend_11 { pt3dadd( 3.55867, 55.7778, -11.5959, 0.67 ) }
    dend_11 { pt3dadd( 4.86584, 59.307, -12.1768, 0.67 ) }
    dend_11 { pt3dadd( 6.47581, 63.4286, -13.1062, 1.33 ) }
    dend_11 { pt3dadd( 7.17929, 65.2545, -13.5785, 0.67 ) }
    dend_11 { pt3dadd( 8.16294, 67.9411, -14.3048, 0.67 ) }
    dend_11 { pt3dadd( 8.82431, 69.9315, -14.9993, 0.67 ) }
    dend_11 { pt3dadd( 9.27289, 72.179, -15.8168, 0.33 ) }
    dend_11 { pt3dadd( 9.74478, 75.6583, -17.0517, 1.33 ) }
    dend_11 { pt3dadd( 9.97213, 77.6643, -17.6186, 0.67 ) }
    dend_11 { pt3dadd( 10.171, 81.5569, -18.4075, 0.67 ) }
    dend_11 { pt3dadd( 9.81449, 86.6991, -18.9966, 0.33 ) }
    dend_11 { pt3dadd( 9.35972, 89.6144, -19.0792, 0.67 ) }
    dend_11 { pt3dadd( 8.81551, 92.3918, -18.9193, 2.66 ) }
    dend_11 { pt3dadd( 7.69106, 97.6354, -18.2391, 0.67 ) }
    dend_11 { pt3dadd( 7.34527, 99.0036, -18.053, 0.67 ) }
    dend_11 { pt3dadd( 6.7277, 101.359, -17.7615, 1.33 ) }
    dend_11 { pt3dadd( 6.25255, 103.037, -17.5225, 0.33 ) }
    dend_11 { pt3dadd( 5.87037, 104.215, -17.4286, 0.67 ) }
    dend_11 { pt3dadd( 4.97404, 106.489, -17.3888, 0.67 ) }
    dend_11 { pt3dadd( 2.96534, 111.359, -17.6143, 1.33 ) }
    dend_11 { pt3dadd( 1.62864, 115.307, -17.7129, 0.67 ) }
    dend_11 { pt3dadd( 0.461064, 119.082, -17.6098, 0.67 ) }
    dend_11 { pt3dadd( -0.113735, 121.101, -17.5293, 0.33 ) }
    dend_11 { pt3dadd( -0.55481, 122.911, -17.4395, 0.67 ) }
    dend_11 { pt3dadd( -1.00863, 125.284, -17.2956, 0.67 ) }
    dend_11 { pt3dadd( -1.73116, 130.883, -16.8813, 0.67 ) }
    dend_11 { pt3dadd( -2.0975, 134.898, -16.5426, 0.67 ) }
    dend_11 { pt3dadd( -2.13672, 138.511, -16.1144, 0.33 ) }
    dend_11 { pt3dadd( -2.11553, 139.97, -15.9487, 0.67 ) }
    dend_11 { pt3dadd( -2.01717, 141.972, -15.7623, 0.33 ) }
    dend_11 { pt3dadd( -1.99891, 142.741, -15.7118, 0.33 ) }
    dend_11 { pt3dadd( -1.93869, 145.173, -15.8011, 0.67 ) }
    dend_11 { pt3dadd( -1.78803, 149.578, -16.1879, 0.33 ) }
    dend_11 { pt3dadd( -1.78679, 152.286, -16.4656, 2.0 ) }
    dend_11 { pt3dadd( -1.78302, 154.795, -16.6803, 0.33 ) }
    dend_11 { pt3dadd( -1.68399, 157.573, -16.8867, 0.67 ) }
    dend_11 { pt3dadd( -1.39664, 162.067, -17.1799, 0.33 ) }
    dend_11 { pt3dadd( -1.19043, 164.349, -17.32, 0.33 ) }
    dend_11 { pt3dadd( -1.05337, 165.963, -17.4594, 0.67 ) }
    dend_11 { pt3dadd( -0.57611, 170.01, -17.5643, 0.33 ) }
    dend_11 { pt3dadd( -0.300362, 171.712, -17.5138, 1.33 ) }
    dend_11 { pt3dadd( 0.37034, 174.236, -17.173, 0.33 ) }
    dend_11 { pt3dadd( 0.858742, 175.816, -16.6584, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 70/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.885665, 43.1766, -9.72543, 1.33 ) }
    dend_10 { pt3dadd( -3.71746, 44.8488, -17.4962, 0.67 ) }
    dend_10 { pt3dadd( -5.80177, 46.5657, -23.4546, 0.67 ) }
    dend_10 { pt3dadd( -8.93962, 49.2332, -31.9903, 0.67 ) }
    dend_10 { pt3dadd( -9.987, 50.1077, -34.5715, 1.33 ) }
    dend_10 { pt3dadd( -12.7181, 52.3528, -40.718, 0.67 ) }
    dend_10 { pt3dadd( -15.0156, 54.3082, -45.5964, 0.67 ) }
    dend_10 { pt3dadd( -17.9821, 56.9294, -50.6407, 0.67 ) }
    dend_10 { pt3dadd( -19.447, 58.3217, -52.8543, 0.33 ) }
    dend_10 { pt3dadd( -21.2352, 59.6218, -54.8067, 0.67 ) }
    dend_10 { pt3dadd( -22.6216, 60.4465, -56.0884, 0.33 ) }
    dend_10 { pt3dadd( -24.2246, 61.3505, -57.4192, 0.33 ) }
    dend_10 { pt3dadd( -25.3657, 61.8829, -58.267, 0.33 ) }
    dend_10 { pt3dadd( -28.1542, 62.8996, -60.5454, 0.67 ) }
    dend_10 { pt3dadd( -33.3545, 64.661, -65.1102, 0.33 ) }
    dend_10 { pt3dadd( -37.4784, 66.0475, -68.9965, 1.33 ) }
    dend_10 { pt3dadd( -41.5869, 67.4654, -72.9757, 0.33 ) }
    dend_10 { pt3dadd( -42.9851, 67.9215, -74.403, 1.33 ) }
    dend_10 { pt3dadd( -49.3036, 70.0704, -80.8681, 0.33 ) }
    dend_10 { pt3dadd( -50.0757, 70.3127, -81.6649, 0.67 ) }
    dend_10 { pt3dadd( -51.8665, 70.7713, -83.3369, 0.33 ) }
    dend_10 { pt3dadd( -53.3403, 71.0731, -84.6831, 1.33 ) }
    dend_10 { pt3dadd( -58.7901, 72.1729, -90.163, 0.67 ) }
    dend_10 { pt3dadd( -61.5696, 72.8019, -93.0944, 1.33 ) }
    dend_10 { pt3dadd( -66.5974, 74.1669, -98.5204, 0.33 ) }
    dend_10 { pt3dadd( -67.9534, 74.5602, -99.9912, 0.33 ) }
    dend_10 { pt3dadd( -71.633, 75.5605, -103.895, 1.33 ) }
    dend_10 { pt3dadd( -75.7717, 76.8099, -108.145, 0.33 ) }
    dend_10 { pt3dadd( -78.0185, 77.6696, -110.343, 1.33 ) }
    dend_10 { pt3dadd( -82.5851, 79.5355, -114.693, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_10 { pt3dadd( -84.0193, 80.1167, -115.817, 0.33 ) }
    dend_10 { pt3dadd( -88.8361, 81.7813, -118.942, 0.67 ) }
    dend_10 { pt3dadd( -91.0644, 82.3327, -119.877, 0.33 ) }
    dend_10 { pt3dadd( -94.0032, 82.7111, -120.941, 0.33 ) }
    dend_10 { pt3dadd( -95.7589, 82.806, -121.811, 1.33 ) }
    dend_10 { pt3dadd( -98.9437, 82.8082, -123.53, 0.33 ) }
    dend_10 { pt3dadd( -100.238, 82.8079, -124.415, 0.33 ) }
    dend_10 { pt3dadd( -103.617, 82.8667, -126.897, 0.67 ) }
    dend_10 { pt3dadd( -109.274, 83.0134, -131.165, 0.33 ) }
    dend_10 { pt3dadd( -115.311, 83.5157, -135.849, 0.33 ) }
    dend_10 { pt3dadd( -116.207, 83.6655, -136.576, 1.33 ) }
    dend_10 { pt3dadd( -120.736, 84.9585, -140.447, 0.33 ) }
    dend_10 { pt3dadd( -123.588, 86.0465, -142.743, 0.33 ) }
    dend_10 { pt3dadd( -125.17, 86.8669, -143.835, 1.33 ) }
    dend_10 { pt3dadd( -127.805, 88.4612, -145.086, 0.33 ) }
    dend_10 { pt3dadd( -129.113, 89.2087, -145.505, 1.33 ) }
    dend_10 { pt3dadd( -132.732, 91.0869, -146.527, 0.67 ) }
    dend_10 { pt3dadd( -134.851, 92.1008, -147.019, 0.67 ) }
    dend_10 { pt3dadd( -136.355, 92.8115, -147.515, 1.33 ) }
    dend_10 { pt3dadd( -140.474, 94.5705, -149.021, 0.67 ) }
    dend_10 { pt3dadd( -142.864, 95.4288, -149.909, 1.33 ) }
    dend_10 { pt3dadd( -144.924, 96.1365, -150.663, 0.33 ) }
    dend_10 { pt3dadd( -146.744, 96.7412, -151.238, 1.33 ) }
    dend_10 { pt3dadd( -149.644, 97.8458, -152.223, 0.33 ) }
    dend_10 { pt3dadd( -151.488, 98.6461, -152.749, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 25/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 13.1311, 10.6702, -12.2038, 2.0 ) }
    dend_6 { pt3dadd( 16.2978, 9.72744, -9.55188, 0.67 ) }
    dend_6 { pt3dadd( 17.9656, 9.14131, -8.43337, 0.67 ) }
    dend_6 { pt3dadd( 22.0505, 7.96355, -5.64407, 0.67 ) }
    dend_6 { pt3dadd( 24.0966, 7.46315, -3.89155, 0.67 ) }
    dend_6 { pt3dadd( 27.5805, 6.45947, -0.810443, 0.67 ) }
    dend_6 { pt3dadd( 30.1043, 5.68095, 1.38176, 0.67 ) }
    dend_6 { pt3dadd( 32.0019, 5.31074, 2.89999, 0.67 ) }
    dend_6 { pt3dadd( 36.5926, 4.60868, 6.07229, 0.67 ) }
    dend_6 { pt3dadd( 44.3176, 3.41908, 10.3205, 0.67 ) }
    dend_6 { pt3dadd( 46.0438, 3.19902, 11.2895, 0.67 ) }
    dend_6 { pt3dadd( 47.2855, 3.02083, 11.9113, 0.67 ) }
    dend_6 { pt3dadd( 53.8653, 2.17948, 15.3652, 0.67 ) }
    dend_6 { pt3dadd( 55.4913, 2.02882, 16.2112, 1.33 ) }
    dend_6 { pt3dadd( 59.1833, 1.66469, 17.9853, 0.67 ) }
    dend_6 { pt3dadd( 64.6204, 1.20583, 20.5042, 0.67 ) }
    dend_6 { pt3dadd( 71.9311, 0.648967, 24.4339, 0.67 ) }
    dend_6 { pt3dadd( 74.5878, 0.396576, 26.0165, 0.67 ) }
    dend_6 { pt3dadd( 78.2801, -0.122728, 28.5826, 0.67 ) }
    dend_6 { pt3dadd( 80.4977, -0.358776, 30.1954, 0.67 ) }
    dend_6 { pt3dadd( 82.0469, -0.447508, 31.3523, 0.67 ) }
    dend_6 { pt3dadd( 85.3331, -0.635536, 33.5437, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 47/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.1311, 10.6702, -12.2038, 2.0 ) }
    dend_3 { pt3dadd( 16.6468, 10.7376, -11.3297, 0.67 ) }
    dend_3 { pt3dadd( 23.5152, 10.8694, -9.62212, 0.67 ) }
    dend_3 { pt3dadd( 27.491, 10.9457, -8.63368, 0.67 ) }
    dend_3 { pt3dadd( 35.8509, 11.1061, -6.55526, 0.67 ) }
    dend_3 { pt3dadd( 40.5115, 11.1955, -5.39656, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 85.3331, -0.635536, 33.5437, 0.67 ) }
    dend_8 { pt3dadd( 89.6036, -1.45285, 35.7038, 0.67 ) }
    dend_8 { pt3dadd( 91.5695, -1.8291, 36.6982, 0.67 ) }
    dend_8 { pt3dadd( 98.6344, -3.18121, 40.2718, 0.33 ) }
    dend_8 { pt3dadd( 107.248, -5.7922, 43.1944, 0.33 ) }
    dend_8 { pt3dadd( 115.725, -8.44211, 46.4608, 0.33 ) }
    dend_8 { pt3dadd( 123.901, -9.46325, 51.1153, 0.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 60/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 85.3331, -0.635536, 33.5437, 0.67 ) }
    dend_7 { pt3dadd( 89.8468, -0.222217, 35.9458, 0.67 ) }
    dend_7 { pt3dadd( 93.1896, 0.0794958, 37.2121, 0.67 ) }
    dend_7 { pt3dadd( 97.5611, 0.130176, 38.8528, 0.67 ) }
    dend_7 { pt3dadd( 104.494, -0.0813192, 41.3565, 0.67 ) }
    dend_7 { pt3dadd( 107.398, -0.366869, 42.3104, 0.67 ) }
    dend_7 { pt3dadd( 110.791, -0.787665, 43.3334, 0.67 ) }
    dend_7 { pt3dadd( 116.375, -1.26041, 44.9302, 0.67 ) }
    dend_7 { pt3dadd( 121.503, -2.04202, 46.1039, 0.67 ) }
    dend_7 { pt3dadd( 123.245, -2.41492, 46.3108, 0.67 ) }
    dend_7 { pt3dadd( 127.644, -3.26158, 46.3547, 0.67 ) }
    dend_7 { pt3dadd( 133.356, -3.9595, 46.292, 0.67 ) }
    dend_7 { pt3dadd( 138.422, -4.23586, 45.7594, 0.67 ) }
    dend_7 { pt3dadd( 144.083, -4.19476, 44.7641, 0.67 ) }
    dend_7 { pt3dadd( 147.809, -3.8519, 43.8528, 0.67 ) }
    dend_7 { pt3dadd( 155.144, -2.74932, 41.6208, 0.67 ) }
    dend_7 { pt3dadd( 160.43, -1.55475, 39.6786, 0.67 ) }
    dend_7 { pt3dadd( 165.433, -0.108662, 37.4495, 0.33 ) }
    dend_7 { pt3dadd( 168.01, 0.838911, 36.2036, 0.33 ) }
    dend_7 { pt3dadd( 169.883, 1.80476, 35.3273, 0.33 ) }
    dend_7 { pt3dadd( 172.936, 3.79161, 34.1056, 0.33 ) }
    dend_7 { pt3dadd( 173.809, 4.52476, 33.7696, 0.67 ) }
    dend_7 { pt3dadd( 175.152, 5.79181, 33.7007, 0.33 ) }
    dend_7 { pt3dadd( 176.768, 7.30612, 34.0667, 0.67 ) }
    dend_7 { pt3dadd( 179.194, 9.55266, 34.9161, 0.33 ) }
    dend_7 { pt3dadd( 182.736, 12.5504, 36.2762, 0.33 ) }
    dend_7 { pt3dadd( 183.999, 13.5595, 36.9489, 0.67 ) }
    dend_7 { pt3dadd( 190.523, 18.398, 40.8058, 0.67 ) }
    dend_7 { pt3dadd( 192.184, 19.5073, 41.8173, 0.67 ) }
    dend_7 { pt3dadd( 194.013, 20.6282, 42.9401, 0.67 ) }
    dend_7 { pt3dadd( 196.375, 21.9899, 44.5089, 0.67 ) }
    dend_7 { pt3dadd( 201.196, 24.2997, 47.7776, 0.33 ) }
    dend_7 { pt3dadd( 202.467, 24.8643, 48.6016, 0.67 ) }
    dend_7 { pt3dadd( 205.747, 26.228, 50.0383, 0.33 ) }
    dend_7 { pt3dadd( 207.495, 26.9815, 50.9368, 0.33 ) }
    dend_7 { pt3dadd( 220.527, 28.7378, 53.9286, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 40.5115, 11.1955, -5.39656, 0.67 ) }
    dend_5 { pt3dadd( 48.3367, 11.1904, -11.2643, 0.67 ) }
    dend_5 { pt3dadd( 53.0444, 11.1221, -14.6539, 0.67 ) }
    dend_5 { pt3dadd( 55.7428, 11.1296, -16.3898, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_5 { pt3dadd( 58.5436, 11.134, -18.0772, 1.33 ) }
    dend_5 { pt3dadd( 61.7277, 11.0461, -20.0413, 0.67 ) }
    dend_5 { pt3dadd( 62.9127, 10.9915, -20.7381, 0.67 ) }
    dend_5 { pt3dadd( 66.3907, 10.7985, -22.6653, 0.67 ) }
    dend_5 { pt3dadd( 69.0198, 10.6377, -24.2697, 1.33 ) }
    dend_5 { pt3dadd( 70.8372, 10.5249, -25.4793, 0.67 ) }
    dend_5 { pt3dadd( 74.6038, 10.5305, -28.228, 0.67 ) }
    dend_5 { pt3dadd( 77.5255, 10.5332, -30.3207, 1.33 ) }
    dend_5 { pt3dadd( 83.1071, 10.2664, -34.4309, 0.67 ) }
    dend_5 { pt3dadd( 83.8182, 10.1992, -35.01, 0.67 ) }
    dend_5 { pt3dadd( 86.8409, 9.96332, -37.7301, 0.67 ) }
    dend_5 { pt3dadd( 91.7798, 9.72989, -42.2968, 1.33 ) }
    dend_5 { pt3dadd( 94.1854, 9.7437, -44.6181, 0.67 ) }
    dend_5 { pt3dadd( 97.8059, 9.92385, -48.3593, 1.33 ) }
    dend_5 { pt3dadd( 103.144, 10.5282, -53.9101, 0.33 ) }
    dend_5 { pt3dadd( 105.534, 11.0257, -56.6477, 0.33 ) }
    dend_5 { pt3dadd( 106.016, 11.1835, -57.2542, 1.33 ) }
    dend_5 { pt3dadd( 108.746, 12.3337, -60.737, 0.33 ) }
    dend_5 { pt3dadd( 109.748, 12.8451, -62.0494, 1.33 ) }
    dend_5 { pt3dadd( 111.988, 14.0379, -64.9301, 0.33 ) }
    dend_5 { pt3dadd( 114.024, 14.9487, -67.3952, 0.67 ) }
    dend_5 { pt3dadd( 115.578, 15.289, -69.4159, 0.33 ) }
    dend_5 { pt3dadd( 116.353, 15.2784, -70.5089, 1.33 ) }
    dend_5 { pt3dadd( 118.275, 14.3496, -73.3141, 0.33 ) }
    dend_5 { pt3dadd( 119.4, 13.2081, -74.9415, 0.33 ) }
    dend_5 { pt3dadd( 119.857, 12.3554, -75.6024, 1.33 ) }
    dend_5 { pt3dadd( 121.25, 8.94508, -77.361, 0.33 ) }
    dend_5 { pt3dadd( 121.453, 8.2955, -77.6313, 0.67 ) }
    dend_5 { pt3dadd( 122.039, 6.16201, -78.4189, 0.33 ) }
    dend_5 { pt3dadd( 122.754, 3.43673, -79.2568, 1.33 ) }
    dend_5 { pt3dadd( 123.267, 1.64111, -79.8112, 0.33 ) }
    dend_5 { pt3dadd( 123.475, 0.973207, -79.9879, 0.67 ) }
    dend_5 { pt3dadd( 124.631, -2.63124, -80.6663, 0.33 ) }
    dend_5 { pt3dadd( 124.724, -2.93292, -80.7331, 0.67 ) }
    dend_5 { pt3dadd( 125.708, -6.29764, -81.7052, 0.33 ) }
    dend_5 { pt3dadd( 125.818, -6.63038, -81.8452, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 36/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 40.5115, 11.1955, -5.39656, 0.67 ) }
    dend_4 { pt3dadd( 48.0522, 10.8039, -4.63288, 0.67 ) }
    dend_4 { pt3dadd( 55.9158, 10.3037, -3.93476, 0.67 ) }
    dend_4 { pt3dadd( 62.1671, 10.066, -3.39463, 0.67 ) }
    dend_4 { pt3dadd( 65.7064, 9.90695, -2.98762, 0.67 ) }
    dend_4 { pt3dadd( 75.0358, 9.5329, -1.93155, 0.67 ) }
    dend_4 { pt3dadd( 83.2327, 9.15392, -1.21787, 0.67 ) }
    dend_4 { pt3dadd( 93.8084, 8.61526, -0.0950552, 0.67 ) }
    dend_4 { pt3dadd( 100.788, 8.41968, 0.958386, 0.67 ) }
    dend_4 { pt3dadd( 109.936, 7.84553, 2.74825, 0.67 ) }
    dend_4 { pt3dadd( 113.017, 7.49496, 3.4553, 0.67 ) }
    dend_4 { pt3dadd( 117.737, 6.75077, 4.70137, 0.67 ) }
    dend_4 { pt3dadd( 128.604, 4.91592, 7.83657, 0.67 ) }
    dend_4 { pt3dadd( 134.029, 3.86492, 9.55547, 0.67 ) }
    dend_4 { pt3dadd( 141.835, 2.66427, 12.4298, 0.67 ) }
    dend_4 { pt3dadd( 148.035, 2.0813, 14.8801, 0.67 ) }
    dend_4 { pt3dadd( 150.478, 1.95573, 15.9062, 0.67 ) }
    dend_4 { pt3dadd( 154.148, 2.01838, 17.4545, 0.67 ) }
    dend_4 { pt3dadd( 165.509, 3.11679, 21.5204, 0.67 ) }
    dend_4 { pt3dadd( 175.597, 4.57778, 25.1558, 0.67 ) }
    dend_4 { pt3dadd( 177.92, 5.09201, 25.9644, 0.67 ) }
    dend_4 { pt3dadd( 180.719, 5.87023, 26.8183, 0.67 ) }
    dend_4 { pt3dadd( 186.15, 7.32331, 28.3787, 0.67 ) }
    dend_4 { pt3dadd( 191.646, 8.61055, 29.7649, 0.67 ) }
    dend_4 { pt3dadd( 194.008, 9.1579, 30.2384, 0.67 ) }
    dend_4 { pt3dadd( 197.906, 9.89019, 30.5754, 0.67 ) }
    dend_4 { pt3dadd( 203.551, 10.8416, 31.2713, 0.67 ) }
    dend_4 { pt3dadd( 207.445, 11.4701, 31.849, 0.33 ) }
    dend_4 { pt3dadd( 211.793, 12.1039, 32.5931, 0.67 ) }
    dend_4 { pt3dadd( 214.521, 12.484, 33.057, 0.67 ) }
    dend_4 { pt3dadd( 219.622, 13.2601, 33.8881, 0.67 ) }
    dend_4 { pt3dadd( 230.063, 14.7232, 35.4453, 0.67 ) }
    dend_4 { pt3dadd( 233.151, 15.0173, 35.8423, 0.67 ) }
    dend_4 { pt3dadd( 235.105, 15.1989, 36.0677, 1.33 ) }
    dend_4 { pt3dadd( 240.137, 15.4149, 36.536, 0.67 ) }
    dend_4 { pt3dadd( 243.622, 15.4374, 36.7894, 0.33 ) }
    dend_4 { pt3dadd( 249.546, 15.355, 37.2068, 0.67 ) }
    dend_4 { pt3dadd( 254.436, 15.2815, 37.3328, 0.33 ) }
    dend_4 { pt3dadd( 256.637, 15.2207, 37.5335, 0.33 ) }
    dend_4 { pt3dadd( 260.351, 15.2591, 38.15, 0.67 ) }
    dend_4 { pt3dadd( 263.045, 15.3927, 38.8711, 0.33 ) }
    dend_4 { pt3dadd( 269.421, 15.8578, 40.9307, 0.67 ) }
    dend_4 { pt3dadd( 270.878, 16.0636, 41.473, 0.67 ) }
    dend_4 { pt3dadd( 275.251, 16.9516, 43.3669, 0.33 ) }
    dend_4 { pt3dadd( 279.361, 17.724, 45.182, 0.33 ) }
    dend_4 { pt3dadd( 282.321, 18.3343, 46.5576, 0.67 ) }
    dend_4 { pt3dadd( 286.088, 19.0608, 48.319, 0.33 ) }
    dend_4 { pt3dadd( 289.871, 19.8966, 50.0616, 0.67 ) }
    dend_4 { pt3dadd( 294.316, 20.9467, 52.0003, 0.33 ) }
    dend_4 { pt3dadd( 297.027, 21.4672, 52.9477, 0.33 ) }
    dend_4 { pt3dadd( 311.71, 20.4215, 54.8905, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_4, apic_1, axon_1, apic_3, apic_2]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_4, apic_1, apic_3, apic_2]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_4, apic_1, apic_3, apic_2]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_21, dend_16, dend_15, dend_0, apic_4, apic_1, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, apic_3, apic_2, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()
    dend_13 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_21, dend_16, dend_15, dend_0, dend_25, dend_22, dend_18, dend_17, dend_12, dend_1, dend_24, dend_23, dend_20, dend_19, dend_14, dend_13, dend_9, dend_2, dend_11, dend_10, dend_6, dend_3, dend_8, dend_7, dend_5, dend_4]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_8 = new SectionList()
    apic_4 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_3 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    apic_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    apic_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_21, dend_21, dend_21, dend_21, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 13
    apic_4 nseg = 19
    dend_25 nseg = 9
    dend_18 nseg = 5
    dend_17 nseg = 9
    dend_12 nseg = 5
    apic_3 nseg = 17
    apic_2 nseg = 15
    dend_24 nseg = 9
    dend_23 nseg = 5
    dend_19 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 5
    dend_11 nseg = 7
    dend_10 nseg = 11
    dend_6 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_5 nseg = 7
    dend_4 nseg = 15
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SS_a8ef0f9d97_0_0


