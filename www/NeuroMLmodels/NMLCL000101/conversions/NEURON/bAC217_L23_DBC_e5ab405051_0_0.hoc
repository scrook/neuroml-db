// Cell: bAC217_L23_DBC_e5ab405051_0_0
/*
{
  "id" : "bAC217_L23_DBC_e5ab405051_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.900775, -9.8088, 0.590543, 2.2315", "-0.795054, -8.89395, 0.538155, 2.59468", "-0.689333, -7.97909, 0.485767, 3.40562", "-0.583612, -7.06424, 0.433379, 4.21656", "-0.477891, -6.14939, 0.380991, 4.76863", "-0.37217, -5.23453, 0.328603, 5.07118", "-0.26645, -4.31968, 0.276215, 5.37449", "-0.160729, -3.40482, 0.223827, 5.6778", "-0.0550076, -2.48997, 0.171439, 5.91116", "0.0507134, -1.57512, 0.119051, 6.0829", "0.156434, -0.660263, 0.0666633, 6.26003", "0.262155, 0.254591, 0.0142753, 6.44407", "0.367876, 1.16944, -0.0381126, 6.62807", "0.473597, 2.0843, -0.0905006, 6.73886", "0.579318, 2.99915, -0.142889, 6.60317", "0.685039, 3.91401, -0.195276, 6.29711", "0.79076, 4.82886, -0.247664, 5.46861", "0.896481, 5.74371, -0.300052, 4.56209", "1.0022, 6.65857, -0.35244, 3.66181", "1.10792, 7.57342, -0.404828, 2.68112", "1.21364, 8.48827, -0.457216, 1.67793" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.69856, 3.64501, 6.2591, 0.83", "5.55575, 5.07337, 6.33607, 0.83", "11.1736, 9.39398, 6.56888, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.488563, 6.86551, 4.0991, 2.22", "0.680597, 11.4048, -0.938958, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.91144, -9.50299, 2.0591, 2.22", "-3.05283, -13.5122, 2.41554, 1.94", "-4.2796, -17.8213, 2.79863, 2.22", "-5.67508, -22.723, 3.23441, 1.38", "-6.47696, -25.5396, 3.48482, 1.38", "-7.31543, -28.4848, 3.74666, 1.66", "-8.28018, -31.8735, 4.04793, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.21364, 8.48827, -0.457216, 0.55", "2.93559, 23.3891, -0.457216, 0.55", "4.65753, 38.2899, -0.457216, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "11.1736, 9.39398, 6.56888, 0.28", "12.3804, 9.25485, 7.42913, 0.28", "13.1525, 9.22552, 7.91959, 0.55", "14.5054, 9.24413, 8.61305, 0.28", "15.0216, 9.27144, 8.83476, 0.55", "17.263, 9.3283, 9.44048, 0.28", "18.7085, 9.33753, 9.67348, 0.55", "20.3834, 9.36821, 9.74233, 0.55", "22.3347, 9.37742, 9.63612, 0.28", "23.2643, 9.38442, 9.54452, 0.55", "26.2203, 9.3418, 9.0897, 0.28", "27.3957, 9.28154, 8.87644, 0.83", "29.2176, 9.09166, 8.61587, 0.28", "30.1634, 8.97207, 8.5109, 0.83", "32.0125, 8.69857, 8.41087, 0.28", "33.22, 8.46452, 8.37008, 0.55", "35.2558, 8.02802, 8.38409, 0.28", "36.82, 7.65139, 8.44563, 0.83", "39.0228, 7.09617, 8.4584, 0.28", "39.6303, 6.93611, 8.4422, 0.55", "42.9295, 5.9869, 8.2601, 0.28", "45.4795, 5.2366, 8.07603, 0.28", "46.8251, 4.84756, 7.91021, 0.55", "50.2221, 3.80237, 7.40618, 0.28", "51.1775, 3.49622, 7.23865, 0.55", "52.8007, 3.02467, 6.8914, 0.28", "53.4632, 2.85022, 6.75052, 0.55", "57.3617, 1.80654, 5.80237, 0.28", "58.404, 1.54317, 5.60186, 0.83", "60.7028, 0.98513, 5.35733, 0.28", "62.0061, 0.67906, 5.29167, 0.55", "63.4497, 0.327488, 5.28125, 0.28", "63.972, 0.180209, 5.26679, 0.55", "66.5889, -0.615145, 5.15619, 0.28", "67.4845, -0.885921, 5.11956, 0.83", "69.7112, -1.53393, 5.02719, 0.28", "71.1829, -1.92141, 4.97392, 0.55", "74.3141, -2.53926, 4.58097, 0.28", "75.942, -2.80478, 4.31674, 0.28", "77.4877, -2.99071, 3.99956, 0.55", "79.8751, -3.17738, 3.51916, 0.28", "81.4184, -3.30569, 3.19867, 0.55", "86.1631, -3.76296, 2.14897, 0.28", "87.3181, -3.91733, 1.91384, 0.83", "88.9348, -4.20474, 1.52051, 0.28", "90.5609, -4.5535, 1.1326, 0.55", "94.3943, -5.5726, 0.211394, 0.28", "95.7838, -6.01054, -0.137173, 0.83", "100.831, -7.83584, -1.21595, 0.28", "102.133, -8.32318, -1.48439, 0.55", "104.639, -9.25637, -1.94033, 0.28", "107.404, -10.2153, -2.39275, 0.55", "109.104, -10.7097, -2.63205, 0.28", "110.857, -11.1347, -2.84375, 0.28", "112.277, -11.3475, -3.04058, 0.55", "114.743, -11.4017, -3.32282, 0.28", "115.442, -11.2896, -3.47286, 0.55", "117.033, -10.7458, -3.87051, 0.28", "117.929, -10.2959, -4.14191, 0.55", "118.983, -9.61257, -4.51605, 0.28", "120.254, -8.63735, -5.03075, 0.55", "122.946, -6.25811, -6.1242, 0.28", "123.532, -5.70315, -6.35326, 0.28", "124.861, -4.35303, -6.88545, 0.55", "126.746, -2.37301, -7.59292, 0.28", "127.243, -1.85128, -7.74067, 0.55", "128.481, -0.636061, -7.99509, 0.28", "128.763, -0.383862, -8.03273, 0.55", "129.953, 0.582656, -8.29924, 0.28", "130.476, 0.96411, -8.45233, 0.55", "131.25, 1.48043, -8.73307, 0.28", "131.968, 1.91784, -9.00023, 0.55", "133.79, 2.92546, -9.79106, 0.28", "134.949, 3.54956, -10.2784, 0.28", "135.615, 3.89164, -10.5491, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "11.1736, 9.39398, 6.56888, 0.28", "12.3421, 11.1223, 6.03999, 0.28", "12.9315, 11.9941, 5.77323, 0.83", "13.7121, 13.1486, 5.41993, 0.28", "13.93, 13.4709, 5.32132, 1.38" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.680597, 11.4048, -0.938958, 0.83", "0.912817, 13.5377, -1.32467, 0.83", "1.11578, 15.7575, -1.48606, 0.83", "1.19854, 16.7778, -1.50487, 0.83", "1.50434, 20.4849, -1.3923, 1.66", "1.71872, 23.3626, -1.23757, 0.83", "1.9344, 25.8558, -0.992927, 0.83", "2.05356, 27.5739, -0.664581, 0.83", "2.16456, 29.3629, -0.167693, 1.38", "2.3166, 31.3236, 0.472653, 0.83", "2.45605, 32.6337, 1.00905, 1.11", "2.74199, 34.7206, 1.79778, 0.83", "2.98489, 36.6955, 2.63094, 0.83", "3.18436, 38.0924, 3.24573, 1.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.680597, 11.4048, -0.938958, 1.11", "-1.04595, 14.9315, -0.292692, 1.11", "-3.14006, 18.9226, 0.0847577, 1.11", "-4.81984, 22.3342, 0.232479, 0.55", "-5.54022, 23.8879, 0.276609, 1.11", "-6.68368, 26.4477, 0.346576, 0.55", "-8.24799, 29.9706, 0.511976, 0.55", "-9.47037, 32.7426, 0.603508, 0.55", "-10.7996, 35.7035, 0.688279, 1.11", "-11.3112, 36.9343, 0.835236, 0.55", "-11.9838, 38.8015, 1.13474, 0.83", "-12.893, 41.8676, 1.92734, 1.11", "-13.3204, 43.6187, 2.61471, 0.55", "-13.7486, 45.719, 3.60048, 1.11", "-14.2485, 48.2159, 4.8663, 0.55", "-14.8974, 51.6259, 6.57228, 1.11", "-15.3031, 54.6386, 8.05966, 0.55", "-15.3897, 55.4426, 8.44857, 0.55", "-15.5216, 56.7106, 9.07336, 0.55", "-15.7112, 58.1534, 9.75289, 0.55", "-16.2133, 61.1621, 11.0465, 1.38", "-16.6567, 63.3466, 11.9611, 0.55", "-17.063, 65.4563, 12.83, 0.55", "-17.2201, 66.4738, 13.2766, 0.28", "-17.4686, 68.2324, 14.0615, 0.55", "-17.5678, 69.2991, 14.4766, 0.28", "-17.7549, 71.4221, 15.1861, 1.11", "-18.0536, 74.4055, 16.0489, 0.28", "-18.2155, 76.2835, 16.5188, 0.83", "-18.5955, 80.0122, 17.372, 0.83", "-19.2001, 84.6995, 18.261, 0.55", "-19.8682, 89.2169, 18.9244, 0.55", "-20.1339, 91.0925, 19.1421, 0.28", "-20.5181, 93.2871, 19.3588, 0.83", "-20.8348, 95.1041, 19.5635, 0.83", "-21.4845, 98.4724, 20.0313, 0.55", "-22.3881, 102.747, 20.8016, 0.55", "-23.0516, 106.07, 21.4132, 0.55", "-23.6737, 109.208, 22.0394, 0.55", "-24.4791, 113.406, 22.9735, 0.55", "-24.8731, 115.79, 23.5756, 0.55", "-25.2843, 118.625, 24.5208, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.28018, -31.8735, 4.04793, 1.38", "-8.5102, -35.7358, 3.82048, 1.38", "-8.71336, -39.1471, 3.61959, 0.83", "-8.84698, -41.3907, 3.48746, 1.66", "-9.0684, -45.1087, 3.26851, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.28018, -31.8735, 4.04793, 1.38", "-13.6455, -36.6559, 5.45389, 1.38", "-16.0713, -38.8198, 6.07806, 0.83", "-18.2315, -40.7069, 6.66685, 0.83", "-22.6179, -44.3138, 8.07019, 0.83", "-25.3356, -46.5485, 8.93966, 0.83", "-28.4113, -49.0775, 9.92365, 0.83", "-29.8023, -50.2558, 10.25, 1.11", "-32.3866, -52.3355, 10.9172, 0.83", "-35.8078, -54.8515, 12.1388, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.65753, 38.2899, -0.457216, 0.55", "6.37948, 53.1908, -0.457216, 0.55", "8.10142, 68.0916, -0.457216, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "13.93, 13.4709, 5.32132, 0.55", "14.918, 13.3642, 6.84742, 0.55", "15.8706, 13.2083, 8.30168, 0.55", "17.8674, 12.9238, 11.6566, 0.83", "18.9394, 12.8143, 13.5055, 0.28", "19.3439, 12.7665, 14.2322, 0.83", "20.334, 12.6286, 16.1084, 0.28", "20.929, 12.5658, 17.2515, 0.55", "22.365, 12.4871, 20.0401, 0.28", "23.1658, 12.3667, 21.5779, 0.83", "24.2701, 12.1626, 23.8043, 0.28", "25.2341, 11.9764, 25.7667, 0.55", "26.2759, 11.782, 27.821, 0.28", "27.1322, 11.6048, 29.5694, 0.55", "27.9997, 11.3049, 31.2174, 0.28", "28.7877, 10.9344, 32.8374, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "13.93, 13.4709, 5.32132, 0.28", "14.3142, 14.5169, 5.79325, 0.28", "14.6288, 15.2742, 6.05311, 0.83", "15.4, 17.0228, 6.53429, 0.28", "15.4, 17.0228, 6.53429, 0.55", "15.8945, 18.175, 6.73692, 0.55", "16.5519, 19.6978, 6.97825, 1.11", "17.5834, 22.1936, 7.22436, 0.55", "18.0575, 23.4812, 7.26892, 0.28", "18.4546, 24.6699, 7.20145, 0.83", "18.8507, 25.9409, 7.07348, 0.55", "19.1721, 27.0972, 6.91418, 0.83", "19.6623, 29.4015, 6.61499, 0.28", "19.9027, 30.7738, 6.37823, 0.83", "20.1807, 32.6302, 6.02415, 0.28", "20.2268, 32.9496, 5.96277, 0.55", "20.3474, 33.8147, 5.78639, 0.28", "20.5893, 35.3659, 5.53923, 0.55", "21.04, 37.4746, 5.29745, 0.28", "21.4933, 39.3065, 5.07659, 0.83", "21.8843, 40.7806, 4.93077, 0.28", "22.1677, 41.7088, 4.83639, 0.83", "22.9429, 43.87, 4.55206, 0.28", "23.5209, 45.2956, 4.34592, 0.55", "24.2296, 46.8281, 4.06111, 0.28", "24.919, 48.0884, 3.67598, 0.55", "26.1812, 50.1729, 2.8399, 0.55", "27.2628, 51.8102, 2.09123, 0.28", "28.3977, 53.4257, 1.27771, 0.55", "30.1483, 55.7838, 0.19824, 0.28", "31.5615, 57.5215, -0.595675, 0.83", "32.759, 58.885, -1.25081, 0.55", "34.0967, 60.3066, -1.83596, 0.28", "35.0627, 61.2884, -2.10681, 0.55", "36.6996, 62.9295, -2.2435, 0.55", "38.7398, 65.0531, -1.97627, 0.28", "39.0965, 65.437, -1.87451, 0.55", "40.5768, 67.0413, -1.35999, 0.28", "42.027, 68.6432, -0.823554, 0.55", "43.2374, 70.016, -0.34206, 0.28", "44.1899, 71.1625, -0.00672829, 0.55", "45.3787, 72.674, 0.473726, 0.28", "45.9256, 73.3344, 0.583943, 0.55", "46.9573, 74.4768, 0.558519, 0.28", "47.8224, 75.3601, 0.444148, 0.83", "49.0895, 76.5374, 0.160762, 0.28", "49.4802, 76.8772, 0.0553269, 0.55", "51.8239, 78.8504, -0.51267, 0.28", "52.6289, 79.5501, -0.624658, 0.83", "54.2127, 80.976, -0.786549, 0.28", "54.7488, 81.4691, -0.820016, 0.55", "55.9431, 82.6172, -0.866249, 0.28", "57.3575, 84.0387, -0.912822, 0.55", "58.8267, 85.6361, -0.910157, 0.28", "59.8931, 86.8542, -0.948808, 0.83", "60.8924, 87.9887, -1.18583, 0.83", "62.4026, 89.7228, -1.69571, 0.28", "62.9135, 90.3139, -1.92008, 0.83", "63.7791, 91.3012, -2.43393, 0.28", "64.7516, 92.3565, -3.13608, 0.55", "66.9848, 94.7153, -4.77392, 0.28", "67.8663, 95.5987, -5.48805, 0.55", "68.3161, 96.0317, -5.85392, 0.28", "69.9745, 97.5881, -7.14383, 0.55", "71.4647, 98.932, -8.21998, 0.28", "72.5242, 99.8604, -8.86281, 0.83", "73.7032, 100.926, -9.37696, 0.28", "74.8034, 101.883, -9.88907, 0.83", "76.1493, 103.052, -10.5062, 0.28", "76.6255, 103.5, -10.7083, 0.55", "77.3723, 104.25, -10.9914, 0.28", "78.4991, 105.438, -11.4206, 0.55", "80.0799, 107.178, -12.0994, 0.55", "81.3383, 108.626, -12.8074, 0.28", "81.9757, 109.351, -13.2198, 1.11", "82.7969, 110.31, -13.8162, 1.11", "83.7019, 111.442, -14.3936, 0.83", "85.056, 113.214, -15.1174, 0.28", "85.9311, 114.439, -15.4422, 0.55", "86.8097, 115.636, -15.6696, 0.28", "88.5189, 117.864, -16.0552, 0.55", "90.6235, 120.573, -16.5262, 0.28", "91.2548, 121.371, -16.6343, 0.83", "92.018, 122.304, -16.7557, 0.28", "93.5838, 124.097, -17.0368, 0.55", "95.3135, 125.978, -17.5, 0.55", "97.5195, 128.238, -18.2743, 0.55", "98.669, 129.335, -18.777, 0.28", "100.217, 130.857, -19.5005, 0.55", "101.462, 132.081, -20.0751, 0.28", "102.791, 133.446, -20.65, 0.55", "103.596, 134.257, -21.026, 0.55", "105.658, 136.453, -22.2111, 0.55", "106.704, 137.584, -23.0988, 0.28", "107.628, 138.622, -24.0625, 0.28", "108.254, 139.318, -24.83, 0.55", "110.609, 141.95, -28.2768, 0.55", "111.687, 143.174, -30.0438, 0.55", "113.343, 145.262, -33.1872, 0.28", "113.604, 145.601, -33.7368, 0.28", "113.981, 146.135, -34.6227, 0.55", "114.998, 147.647, -36.9544, 0.55", "115.674, 148.607, -38.2002, 0.83", "116.339, 149.408, -39.2469, 0.83", "118.085, 151.343, -41.9339, 0.55", "118.518, 151.731, -42.5904, 0.55", "119.744, 152.658, -44.3471, 0.83", "121.471, 153.772, -46.6794, 0.55", "123.161, 154.777, -49.0753, 0.55", "124.893, 155.749, -51.4584, 0.55", "126.326, 156.566, -53.2745, 1.11", "127.133, 157.043, -54.2949, 0.28", "127.711, 157.438, -55.0385, 0.55", "129.017, 158.493, -56.6682, 0.55", "129.815, 159.223, -57.5781, 1.11", "130.72, 160.171, -58.7633, 0.55", "131.706, 161.263, -60.1861, 0.55", "133.01, 162.578, -62.1292, 1.11", "135.018, 164.496, -65.0967, 0.55", "135.386, 164.866, -65.6605, 0.55", "137.297, 167.014, -68.8918, 0.83", "137.842, 167.65, -69.8884, 0.83", "139.52, 169.643, -73.079, 0.55", "139.844, 170.003, -73.672, 0.55", "140.489, 170.756, -74.8375, 0.28", "141.104, 171.418, -75.8267, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.18436, 38.0924, 3.24573, 0.55", "2.93748, 38.944, 4.83808, 0.55", "2.61833, 40.3649, 7.44891, 0.83", "2.40431, 41.575, 9.5195, 0.55", "2.06978, 43.4905, 12.574, 1.11", "1.58275, 46.9349, 17.826, 0.55", "1.50457, 47.5683, 18.7097, 0.55", "1.26435, 49.8078, 21.5055, 0.83", "1.14994, 51.3962, 23.2344, 0.55", "1.09503, 52.4787, 24.2464, 0.55", "1.19053, 54.384, 25.6345, 0.28", "1.40456, 56.3434, 26.8476, 0.55", "1.65085, 58.8768, 28.4339, 0.55", "1.93807, 61.868, 30.2445, 0.28", "2.15289, 63.8625, 31.4924, 0.55", "2.34044, 65.3727, 32.5006, 0.55", "2.68886, 67.8947, 34.234, 0.55", "2.86319, 69.1025, 35.2226, 0.28", "2.92008, 69.533, 35.6058, 0.55", "3.09927, 70.882, 36.8669, 0.28", "3.31622, 72.6293, 38.6032, 0.55", "3.47952, 74.0114, 40.0915, 0.55", "3.899, 76.2774, 42.5378, 0.28", "4.00785, 76.8231, 43.138, 0.55", "4.24967, 78.2199, 44.639, 0.28", "4.40807, 79.026, 45.4538, 0.55", "4.94789, 81.4976, 47.6294, 0.28", "5.32889, 83.0454, 48.7834, 0.55", "5.99405, 85.5075, 50.1454, 0.28", "6.25777, 86.4105, 50.563, 0.55", "6.75598, 88.3121, 51.3491, 0.28", "7.07523, 89.5796, 51.7686, 0.55", "7.80699, 91.9527, 52.287, 0.28", "8.37568, 93.6082, 52.5925, 0.28", "8.96029, 95.0894, 52.8107, 0.55", "10.0519, 97.8169, 53.248, 0.55", "11.2668, 100.962, 53.7928, 0.28", "12.1006, 102.98, 54.1333, 0.28", "12.8847, 104.64, 54.2727, 0.55", "13.8369, 106.389, 54.344, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.18436, 38.0924, 3.24573, 0.83", "2.73446, 41.0764, 3.53216, 0.83", "2.46922, 42.9781, 3.65112, 0.83", "2.07327, 46.1121, 3.79659, 0.83", "1.7692, 48.988, 3.90169, 0.28", "1.58384, 51.2272, 3.96947, 0.83", "1.38125, 55.0107, 4.07391, 0.83", "1.4132, 56.8318, 4.08613, 0.28", "1.46541, 57.8345, 4.1052, 0.83", "1.60305, 59.5202, 4.15525, 0.55", "1.76644, 61.2105, 4.25728, 0.83", "1.92308, 62.7901, 4.32241, 0.55", "2.22945, 64.8731, 4.47956, 0.83", "2.53154, 66.9919, 4.67375, 0.83", "2.95957, 69.4891, 4.91241, 0.83", "3.46838, 72.2702, 5.17339, 0.55", "3.81171, 74.2264, 5.34106, 0.83", "4.52851, 78.1223, 5.63723, 0.55", "4.93929, 80.2931, 5.798, 0.55", "5.50901, 83.1336, 5.99072, 0.55", "5.93442, 85.3109, 6.1384, 0.55", "6.60702, 88.7375, 6.32315, 0.55", "7.2009, 92.361, 6.45604, 1.11", "7.44814, 94.6494, 6.50553, 0.55", "7.6854, 97.3317, 6.44385, 0.83", "7.82845, 100.155, 6.25765, 1.11", "7.87298, 101.999, 6.06472, 0.55", "7.89914, 104.52, 5.72292, 0.83", "7.8297, 107.214, 5.24828, 0.83", "7.70726, 110.596, 4.50894, 0.55", "7.61378, 112.114, 4.12375, 1.11", "7.39324, 115.163, 3.26665, 1.11" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-25.2843, 118.625, 24.5208, 0.28", "-24.4163, 121.188, 24.6215, 0.28", "-24.2369, 122.323, 24.4796, 0.55", "-24.0828, 123.679, 24.2923, 0.28", "-24.0225, 124.545, 24.2809, 0.55", "-23.9471, 126.111, 24.3689, 0.28", "-23.9349, 126.972, 24.3864, 0.55", "-24.1227, 129.816, 24.4053, 0.28", "-24.2083, 130.837, 24.3713, 0.55", "-24.5234, 133.805, 24.0576, 0.28", "-24.6817, 135.196, 23.8669, 0.83", "-24.9077, 138.038, 23.4347, 0.28", "-24.9916, 139.974, 23.2867, 0.28", "-25.0218, 141.266, 23.2953, 0.55", "-25.0787, 143.609, 23.3352, 0.28", "-25.1009, 144.611, 23.3704, 0.55", "-25.182, 147.553, 23.7301, 0.55", "-25.2601, 151.352, 24.5516, 0.28", "-25.3347, 153.542, 25.156, 0.55", "-25.442, 155.73, 25.8903, 0.28", "-25.4817, 156.548, 26.2011, 0.55", "-25.6074, 157.923, 26.7052, 0.28", "-25.7377, 158.49, 26.9043, 0.55", "-26.0752, 159.724, 27.249, 0.28", "-26.273, 160.539, 27.4925, 0.55", "-26.4512, 161.351, 27.7457, 0.28", "-26.7446, 162.74, 28.1696, 0.55", "-27.0893, 164.409, 28.6588, 0.55", "-27.8015, 167.949, 29.6802, 0.28", "-28.218, 170.325, 30.3298, 0.28", "-28.3089, 170.912, 30.4928, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-25.2843, 118.625, 24.5208, 0.28", "-25.2282, 121.515, 24.2671, 0.28", "-25.1957, 122.568, 24.2812, 0.55", "-25.2034, 123.351, 24.3479, 0.28", "-25.2585, 124.139, 24.5162, 0.55", "-25.4895, 126.048, 25.1546, 0.28", "-25.6424, 127.235, 25.5981, 0.55", "-25.7568, 127.961, 25.8976, 0.28", "-25.9306, 129.038, 26.2764, 0.55", "-26.2234, 131.104, 26.9113, 0.55", "-26.3237, 132.332, 27.2378, 0.28", "-26.4698, 134.625, 27.7533, 0.83", "-26.4588, 137.14, 28.2152, 0.28", "-26.3929, 138.447, 28.3685, 0.28", "-26.3156, 139.248, 28.457, 0.83", "-25.9661, 141.398, 28.7272, 0.28", "-25.6698, 142.961, 29.0376, 0.28", "-25.4846, 143.915, 29.3513, 0.28", "-25.3147, 144.905, 29.7858, 0.83", "-25.0322, 147.255, 31.0791, 0.28", "-24.9196, 148.673, 31.9183, 0.55", "-24.8645, 149.868, 32.678, 0.28", "-24.7927, 150.988, 33.3675, 0.55", "-24.7739, 151.627, 33.7271, 0.55", "-24.7389, 153.967, 34.8654, 0.55", "-24.6877, 156.091, 35.753, 0.55", "-24.6843, 156.672, 35.9894, 0.55", "-24.6827, 158.704, 36.8067, 0.55", "-24.7509, 160.689, 37.536, 0.55", "-24.8515, 162.524, 38.2146, 0.55", "-24.9663, 164.39, 38.8469, 0.83", "-25.0553, 165.907, 39.4225, 0.55", "-25.1339, 167.188, 39.9441, 0.83", "-25.3063, 169.135, 40.8198, 0.28", "-25.475, 170.939, 41.6566, 0.55", "-25.7543, 172.761, 42.4741, 0.55", "-25.9925, 174.125, 42.9387, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-9.0684, -45.1087, 3.26851, 0.83", "-7.92377, -45.8893, 2.39803, 0.83", "-6.6239, -46.5763, 1.78009, 0.83", "-4.52527, -47.5394, 0.95443, 0.83", "-2.29724, -48.5643, 0.266447, 0.83", "0.311098, -49.7555, -0.487023, 0.83", "2.53297, -50.7724, -1.07008, 0.83", "6.933, -52.706, -2.01198, 0.55", "9.24078, -53.695, -2.41633, 0.55", "13.0873, -55.269, -2.94688, 0.55", "15.5353, -56.3181, -3.16297, 0.55", "16.8229, -56.9245, -3.2355, 0.83", "18.2018, -57.5848, -3.30054, 0.55", "19.2731, -58.2002, -3.43596, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.0684, -45.1087, 3.26851, 1.11", "-8.6066, -48.5936, 4.49761, 1.11", "-8.48424, -49.5169, 4.82327, 1.11", "-8.09329, -52.4671, 5.86378, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-35.8078, -54.8515, 12.1388, 0.83", "-36.6572, -56.0758, 12.4746, 0.83", "-37.6601, -57.5216, 12.8712, 1.11", "-38.6161, -58.8997, 13.2492, 0.83", "-39.8167, -60.6305, 13.7239, 0.83", "-41.1137, -62.5002, 14.2368, 1.11", "-41.3116, -62.7855, 14.315, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-35.8078, -54.8515, 12.1388, 0.55", "-37.2426, -54.8058, 12.1904, 0.55", "-40.4964, -54.7022, 12.3076, 0.55", "-42.7429, -54.6307, 12.3885, 0.55", "-44.0454, -54.5892, 12.4354, 0.83", "-46.6439, -54.5065, 12.5289, 0.55", "-48.1362, -54.459, 12.5827, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.39324, 115.163, 3.26665, 0.55", "7.05228, 117.76, 2.66472, 0.55", "6.70567, 119.819, 2.44862, 0.55", "6.1712, 122.33, 2.3369, 0.55", "5.68092, 124.38, 2.45095, 0.55", "5.13975, 126.817, 2.72463, 0.55", "4.52911, 129.47, 3.17317, 0.55", "3.41471, 133.6, 4.39163, 0.55", "2.98021, 135.171, 5.04503, 0.55", "2.28002, 137.775, 6.40791, 0.55", "1.96579, 139.336, 7.37471, 0.55", "1.71845, 141.372, 8.74944, 0.55", "1.58819, 143.282, 10.0088, 0.55", "1.5686, 144.205, 10.4945, 0.28", "1.55773, 145.814, 11.2151, 0.55", "1.55109, 148.27, 12.101, 0.28", "1.51952, 149.549, 12.5569, 0.55", "1.46782, 151.553, 13.1812, 0.28", "1.40118, 152.536, 13.4827, 0.55", "1.25894, 154.332, 14.0708, 0.55", "0.968273, 157.48, 15.2012, 0.55", "0.779023, 159.614, 16.0022, 0.55", "0.621788, 162.059, 16.8903, 0.55", "0.645416, 165.311, 17.8037, 0.28", "0.768814, 167.157, 18.1115, 0.55", "1.03459, 169.006, 18.1709, 0.28", "1.17997, 169.735, 18.0891, 0.55", "1.69315, 172.191, 17.5987, 0.55", "2.59043, 176.503, 16.4016, 0.55", "2.97091, 178.51, 15.6892, 0.55", "3.33337, 181.014, 14.733, 0.55", "3.57457, 183.305, 13.8277, 0.55", "3.67365, 185.929, 12.8521, 0.55", "3.61099, 188.664, 11.9668, 0.55", "3.49093, 190.184, 11.5065, 0.55", "3.27399, 192.247, 10.8199, 0.28", "3.14882, 193.013, 10.5253, 0.28", "2.84003, 194.718, 9.78738, 0.55", "2.47181, 196.853, 8.7841, 0.55", "1.93392, 199.659, 7.34927, 0.28", "1.60742, 201.318, 6.47411, 0.55", "1.41263, 202.303, 5.9116, 0.55", "1.11415, 203.986, 4.87509, 0.28", "0.939353, 205.12, 4.09708, 0.55", "0.381658, 207.457, 2.21445, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "7.39324, 115.163, 3.26665, 0.55", "6.85431, 117.222, 2.23454, 0.55", "6.21548, 119.662, 1.0111, 0.55", "5.90347, 120.854, 0.413556, 0.28", "5.54642, 122.218, -0.270226, 0.83", "4.78435, 125.128, -1.7297, 0.55", "4.53246, 126.091, -2.21209, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-25.9925, 174.125, 42.9387, 0.28", "-26.1447, 175.484, 43.3768, 0.28", "-26.3846, 176.858, 43.7509, 0.28", "-26.6852, 178.457, 44.2029, 0.55", "-26.8693, 179.828, 44.7062, 0.83", "-27.0543, 181.664, 45.4876, 0.28", "-27.1385, 182.895, 46.0263, 0.55", "-27.1965, 184.086, 46.6184, 0.28", "-27.2488, 185.283, 47.255, 0.83", "-27.2787, 187.479, 48.5359, 0.83", "-27.3187, 189.183, 49.5673, 0.28", "-27.2437, 190.099, 50.5027, 0.55", "-27.1139, 191.065, 51.8844, 0.28", "-27.0137, 191.701, 52.9473, 0.55", "-26.8818, 192.62, 54.7, 0.28", "-26.8261, 193.044, 55.7074, 0.55", "-26.3156, 195.165, 62.7928, 0.28", "-26.2013, 195.46, 64.2041, 0.83", "-25.9692, 195.713, 66.2967, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-25.9925, 174.125, 42.9387, 0.28", "-25.3533, 175.661, 45.2577, 0.28", "-24.8767, 176.927, 47.0384, 0.55", "-24.1818, 178.984, 49.7795, 0.28", "-24.0617, 179.339, 50.2533, 0.55", "-23.7487, 180.266, 51.4881, 0.28", "-23.4348, 181.195, 52.7261, 0.55", "-22.9437, 182.828, 54.6704, 0.28", "-22.6776, 184.265, 56.1111, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "19.2731, -58.2002, -3.43596, 0.55", "19.2317, -58.3269, -4.90927, 0.55", "19.1373, -58.3265, -5.88589, 0.55", "18.5661, -58.1707, -10.0637, 0.55", "18.3944, -58.1064, -11.1585, 0.55", "18.0219, -58.012, -13.8395, 0.83", "17.864, -57.9949, -15.2194, 0.55", "17.6394, -57.949, -17.5894, 0.55", "17.4905, -57.9552, -19.6388, 0.83", "17.4786, -58.0131, -21.1856, 0.55", "17.4989, -58.2104, -23.1575, 0.55", "17.6153, -58.5482, -24.9169, 0.55", "17.7801, -58.8871, -26.0971, 0.83", "18.0649, -59.3645, -27.4134, 0.55", "18.2745, -59.6996, -28.2505, 0.55", "18.7328, -60.4558, -30.0187, 0.55", "19.0931, -61.1259, -31.6434, 0.55", "19.3595, -61.7103, -32.8968, 2.49", "19.3628, -61.7191, -32.914, 2.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "19.2731, -58.2002, -3.43596, 0.83", "19.7197, -58.9216, -3.57809, 0.83", "20.1288, -60.0092, -3.76086, 0.83", "20.4796, -61.3314, -3.97036, 0.28", "20.6527, -61.9827, -4.09157, 0.83", "20.9076, -62.9101, -4.23957, 0.83", "21.1843, -63.8464, -4.39031, 0.28", "21.5354, -65.2392, -4.59308, 0.55", "21.7899, -66.1462, -4.75508, 0.55", "22.2977, -67.103, -4.83843, 0.55", "23.0736, -68.0322, -4.8303, 0.28", "24.0097, -68.944, -4.73497, 0.55", "24.6245, -69.4273, -4.61524, 0.55", "25.9881, -70.3763, -4.27528, 0.55", "29.7728, -72.7954, -3.21302, 0.55", "30.955, -73.4996, -2.83453, 0.55", "31.857, -73.9863, -2.52706, 0.55", "33.6673, -74.8925, -1.81015, 0.55", "35.3293, -75.7109, -1.08084, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.09329, -52.4671, 5.86378, 0.55", "-7.67532, -53.2059, 5.99193, 0.55", "-7.20002, -54.1953, 6.20647, 0.83", "-6.82142, -55.0199, 6.38231, 0.28", "-6.56984, -55.6287, 6.54228, 0.83", "-6.06812, -57.0337, 7.04715, 0.28", "-5.87223, -57.6013, 7.2628, 0.83", "-5.49784, -58.6172, 7.66519, 0.55", "-5.32234, -59.1238, 7.88958, 0.55", "-5.00165, -60.2371, 8.40845, 0.55", "-4.6396, -61.7487, 9.14731, 0.28", "-4.5042, -62.463, 9.48261, 0.83", "-4.32583, -63.2754, 9.90415, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.09329, -52.4671, 5.86378, 0.83", "-7.39362, -53.4836, 5.24175, 0.83", "-6.59072, -54.65, 4.52795, 1.11", "-5.55363, -56.1567, 3.60594, 0.55", "-4.10205, -58.2655, 2.31544, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-41.3116, -62.7855, 14.315, 0.28", "-41.8162, -63.9271, 14.4427, 0.28", "-41.9751, -64.2449, 14.4776, 0.83", "-42.8142, -65.6096, 14.5759, 0.83", "-43.4387, -66.4437, 14.5956, 0.55", "-44.3831, -67.5492, 14.5757, 0.83", "-45.0411, -68.2584, 14.5392, 0.83", "-45.4999, -68.654, 14.5002, 0.83", "-46.4358, -69.2555, 14.3708, 0.28", "-47.1766, -69.5902, 14.2257, 0.55", "-47.5613, -69.7019, 14.1225, 0.28", "-48.0542, -69.7942, 13.9706, 0.55", "-48.9751, -70.0225, 13.5452, 0.28", "-49.7337, -70.3009, 13.1125, 0.55", "-50.0611, -70.4561, 12.8972, 0.28", "-51.0561, -71.0191, 12.1771, 0.55", "-52.3415, -71.7948, 11.4599, 0.55", "-54.2658, -73.124, 10.6822, 0.55", "-55.1482, -73.8824, 10.508, 0.55", "-55.6884, -74.4576, 10.5266, 0.28", "-55.9347, -74.77, 10.5839, 0.83", "-58.0745, -77.8855, 11.4376, 0.55", "-58.5604, -78.6144, 11.7028, 0.83", "-59.7079, -80.3037, 12.3959, 0.83", "-60.6765, -81.7163, 12.9217, 0.28", "-61.2804, -82.5904, 13.1885, 0.28", "-62.028, -83.6177, 13.4484, 0.55", "-63.4127, -85.5102, 13.7506, 0.28", "-64.1324, -86.3951, 13.8963, 0.55", "-64.6333, -86.9427, 13.9846, 0.55", "-65.5828, -87.8364, 14.1073, 0.83", "-67.0815, -89.0645, 14.1898, 0.55", "-68.0211, -89.7601, 14.1689, 0.55", "-69.0354, -90.3914, 13.9885, 0.28", "-70.0024, -90.8816, 13.7149, 0.55", "-70.6151, -91.1448, 13.4692, 0.55", "-71.7522, -91.5831, 12.8959, 0.28", "-72.4564, -91.8435, 12.5317, 0.55", "-73.6451, -92.2662, 11.9861, 0.28", "-74.6148, -92.6271, 11.5795, 0.83", "-76.1115, -93.207, 10.9913, 0.28", "-77.4111, -93.7785, 10.5166, 0.83", "-78.9108, -94.4922, 10.041, 0.28", "-79.7038, -94.9115, 9.79568, 0.55", "-80.3807, -95.3448, 9.60161, 0.28", "-81.4161, -96.0919, 9.34077, 0.55", "-82.3241, -96.8151, 9.13593, 0.28", "-83.2804, -97.6708, 8.97459, 0.55", "-83.8983, -98.2884, 8.89279, 0.28", "-85.0425, -99.4953, 8.80262, 0.83", "-86.2471, -100.832, 8.79151, 0.55", "-86.5742, -101.217, 8.8117, 0.55", "-87.972, -102.823, 8.98692, 0.28", "-88.817, -103.811, 9.16347, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-41.3116, -62.7855, 14.315, 0.55", "-43.1503, -65.8959, 13.5707, 0.55", "-43.9697, -67.0798, 13.3686, 0.55", "-45.4355, -69.1003, 12.7876, 0.83", "-46.8019, -70.9874, 12.1653, 0.55", "-47.3225, -71.8259, 11.8683, 0.83", "-48.8789, -74.615, 10.8856, 0.55", "-49.8497, -76.3488, 10.2608, 1.11", "-51.2489, -79.2037, 9.1175, 0.55", "-51.8798, -80.5828, 8.53267, 1.11", "-53.0172, -83.3701, 7.30882, 0.55", "-53.3402, -84.279, 6.91182, 1.11", "-54.219, -87.092, 5.77176, 0.28", "-54.4606, -87.7158, 5.50178, 0.55", "-55.2989, -89.5576, 4.67965, 0.28", "-55.7562, -90.4176, 4.23462, 0.55", "-56.427, -91.567, 3.57064, 0.55", "-57.9935, -94.3045, 1.91983, 0.55", "-59.1048, -96.5881, 0.554451, 1.11", "-60.2061, -99.1323, -0.979439, 0.55", "-60.6561, -100.269, -1.6522, 1.11", "-61.5404, -102.53, -3.00308, 0.28", "-61.8541, -103.27, -3.46798, 0.83", "-63.0329, -106.043, -5.24871, 0.28", "-63.5099, -107.102, -5.88815, 0.83", "-64.303, -108.738, -6.93892, 0.83", "-65.7993, -111.378, -8.83239, 0.28", "-66.8233, -113.042, -10.0745, 0.83", "-68.8328, -116.104, -12.4732, 0.28", "-69.7548, -117.359, -13.5172, 0.83", "-70.9861, -119.08, -14.9826, 0.28", "-72.3086, -120.856, -16.6127, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.53246, 126.091, -2.21209, 0.55", "3.4285, 128.315, -2.43629, 0.55", "2.65948, 129.992, -2.57183, 0.55", "1.88451, 132.01, -2.70324, 0.83", "1.14337, 134.177, -2.81745, 0.28", "0.428707, 136.312, -2.90085, 0.55", "-5.0047E-4, 137.688, -2.91975, 0.83", "-0.695687, 140.206, -2.90522, 0.28", "-1.21183, 142.841, -2.92479, 0.55", "-1.40604, 144.323, -2.9377, 0.55", "-1.51246, 145.636, -2.93986, 0.55", "-1.63124, 147.982, -2.95479, 0.28", "-1.66961, 149.626, -2.96369, 0.55", "-1.68459, 152.26, -3.07119, 0.28", "-1.67913, 153.083, -3.12722, 0.55", "-1.55616, 155.613, -3.39842, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.53246, 126.091, -2.21209, 0.28", "2.92726, 125.776, -2.04014, 0.28", "2.23979, 125.642, -1.96649, 0.28", "1.37112, 125.472, -1.87344, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "19.3628, -61.7191, -32.914, 0.28", "19.2359, -63.824, -35.7157, 0.28", "19.1654, -64.2557, -36.3647, 0.55", "18.9842, -65.6822, -38.6108, 0.28", "18.8578, -66.7815, -40.4855, 0.55", "18.7607, -67.7619, -42.356, 0.55", "18.7149, -69.4741, -45.8038, 0.28", "18.7258, -70.1109, -47.3578, 0.55", "18.7665, -70.9406, -49.467, 0.28", "18.8878, -71.4064, -50.6231, 0.55", "19.6186, -73.2314, -54.9251, 0.28", "19.9379, -74.0718, -56.7745, 0.83", "20.5969, -75.8523, -60.3088, 0.28", "20.7673, -76.3751, -61.2967, 1.38", "21.3187, -78.7166, -65.6905, 0.28", "21.4038, -79.0982, -66.3813, 0.55", "21.844, -81.1259, -69.9644, 0.28", "21.9807, -81.8095, -71.162, 1.66", "22.4119, -83.9239, -74.7947, 0.28", "22.5244, -84.7545, -76.2251, 0.55", "22.5638, -85.7705, -78.0157, 0.28", "22.5898, -86.2248, -78.8837, 0.55", "22.6847, -86.9543, -80.5418, 0.28", "22.5714, -87.1781, -81.194, 0.83", "21.352, -88.2074, -84.5935, 0.28", "20.8888, -88.4923, -85.5804, 0.55", "19.298, -89.2675, -88.6836, 0.28", "18.2435, -89.7575, -90.6467, 1.11", "14.2327, -91.7523, -98.529, 0.28", "13.4353, -92.2062, -100.252, 0.55", "12.248, -92.9474, -103.002, 0.28", "10.9058, -93.9612, -106.348, 0.83", "9.6416, -95.1777, -109.882, 0.28", "8.73964, -96.2148, -112.724, 0.83", "6.8001, -99.4199, -121.477, 0.28", "6.60523, -99.8003, -122.502, 0.55", "5.86546, -101.358, -126.655, 0.28", "5.72562, -101.65, -127.395, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "19.3628, -61.7191, -32.914, 0.28", "21.2508, -60.8946, -34.3521, 0.28", "21.8896, -60.4943, -35.4863, 0.55", "22.3299, -60.1472, -36.6118, 0.28", "22.5925, -59.9559, -37.3163, 0.55", "23.6038, -59.279, -40.1249, 0.28", "24.4122, -58.8678, -42.2581, 0.83", "25.8332, -58.0941, -47.2353, 0.28", "25.9627, -58.0193, -47.8254, 0.55", "26.2047, -57.8916, -49.3524, 0.28", "26.2693, -57.8582, -50.1172, 0.83", "26.1589, -57.8478, -52.0767, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "35.3293, -75.7109, -1.08084, 0.55", "37.2363, -77.3969, -1.84614, 0.55", "38.1959, -78.2526, -2.21602, 0.55", "40.6237, -80.3425, -2.90436, 0.28", "43.0624, -82.3569, -3.48684, 0.83", "45.4027, -84.2899, -4.0458, 0.28", "47.0123, -85.6195, -4.43026, 0.28", "47.5788, -86.1198, -4.56978, 0.55", "49.8945, -88.0015, -4.92125, 0.28", "50.4276, -88.4114, -4.90521, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "35.3293, -75.7109, -1.08084, 0.28", "35.6686, -77.6055, -0.720662, 0.28", "35.887, -78.8248, -0.488841, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-4.10205, -58.2655, 2.31544, 0.55", "-3.38956, -60.5596, 2.40109, 0.55", "-2.41314, -62.785, 2.56225, 0.55", "-1.99336, -63.5387, 2.71745, 0.55", "-1.07823, -65.2047, 3.12408, 0.28", "-0.508627, -66.1827, 3.40538, 0.83", "1.23288, -69.0798, 4.24882, 0.28", "2.58905, -71.1823, 5.03002, 0.83", "5.15749, -75.3334, 6.60691, 0.28", "5.80806, -76.4678, 7.07265, 0.83", "7.41799, -79.463, 8.31413, 0.28", "8.12985, -80.9354, 8.89377, 0.83", "9.33623, -83.7779, 9.96165, 0.28", "10.7558, -87.6201, 11.3701, 0.83", "11.7489, -90.7459, 12.3845, 0.55", "12.1864, -92.1897, 12.848, 0.55", "12.5813, -93.6332, 13.2828, 1.11", "13.5972, -97.2046, 14.3555, 0.55", "14.2291, -99.1029, 14.8336, 0.28", "14.3871, -99.4296, 14.911, 0.55", "15.5989, -101.829, 15.2498, 0.28", "16.2238, -102.874, 15.3803, 0.83", "17.5256, -104.742, 15.5367, 0.28", "18.5869, -106.002, 15.6038, 0.55", "20.7415, -108.403, 15.7487, 0.55", "23.4396, -111.353, 15.8685, 0.55", "25.4409, -113.495, 15.8715, 0.55", "26.4104, -114.534, 15.876, 0.55", "29.9805, -118.109, 15.8182, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.10205, -58.2655, 2.31544, 0.55", "-4.89168, -59.4885, 1.72127, 0.55", "-5.08689, -60.0275, 1.49862, 0.83", "-5.26745, -60.7728, 1.25305, 0.55", "-5.38691, -61.4404, 1.06898, 0.83", "-5.6037, -62.6519, 0.734929, 0.28", "-5.71911, -63.2969, 0.557096, 0.83", "-5.89794, -65.174, 0.104442, 0.83", "-5.9566, -66.5902, -0.22912, 0.28", "-5.92826, -67.7669, -0.4761, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.55616, 155.613, -3.39842, 0.55", "-2.70103, 158.164, -3.97434, 0.55", "-3.6585, 159.994, -4.4946, 0.55", "-4.41665, 161.311, -4.99065, 0.55", "-5.40771, 162.948, -5.75929, 0.28", "-6.69314, 165.245, -6.88206, 0.55", "-7.45385, 166.591, -7.59568, 0.55", "-8.654, 168.814, -8.87869, 0.28", "-9.50221, 170.393, -9.80843, 1.11", "-10.177, 171.873, -10.7177, 0.55", "-10.9517, 173.957, -12.1274, 0.55", "-11.7529, 176.2, -13.7687, 0.55", "-12.075, 177.486, -14.6827, 0.28", "-12.1803, 178.308, -15.3344, 0.55", "-12.5964, 181.248, -17.9307, 0.28", "-12.7623, 182.093, -18.7048, 0.83", "-13.1922, 183.968, -20.4215, 0.55", "-13.625, 185.612, -21.9191, 0.55", "-14.6071, 188.909, -24.7865, 0.55", "-15.3127, 191.028, -26.5198, 0.28", "-16.0923, 193.163, -28.1326, 0.28", "-16.6939, 194.883, -29.3777, 0.55", "-17.7709, 198.258, -31.7584, 0.28", "-18.4461, 200.204, -33.1036, 0.55", "-19.1843, 202.432, -34.4541, 0.55", "-19.634, 203.937, -35.3275, 0.28", "-20.0169, 205.146, -36.0689, 0.55", "-20.7495, 207.272, -37.3425, 0.28", "-21.3064, 209.042, -38.2353, 0.55", "-21.7293, 210.527, -38.9613, 0.28", "-21.9391, 211.463, -39.4292, 0.55", "-22.2594, 213.175, -40.3599, 0.28", "-22.3828, 213.897, -40.7592, 0.55", "-22.5334, 215.352, -41.6236, 0.55", "-22.5444, 217.191, -42.9437, 0.55", "-22.3954, 219.569, -44.9794, 0.28", "-22.3211, 220.127, -45.4973, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.55616, 155.613, -3.39842, 0.55", "-1.61634, 156.238, -3.6215, 0.55", "-1.89216, 159.099, -4.64387, 0.55", "-2.02869, 160.515, -5.14994, 0.28", "-2.19819, 162.274, -5.77821, 0.83", "-2.50594, 165.466, -6.91898, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.92826, -67.7669, -0.4761, 0.83", "-5.98122, -70.1786, -0.599964, 0.83", "-6.00806, -71.2493, -0.644205, 1.11", "-6.02448, -73.3532, -0.841972, 0.55", "-6.02215, -76.3452, -1.20227, 1.11", "-6.09316, -78.1531, -1.43547, 0.55", "-6.23693, -80.2652, -1.82459, 0.55", "-6.30572, -81.7595, -2.19898, 0.83", "-6.39711, -83.8383, -2.88231, 0.28", "-6.39711, -83.8383, -2.88231, 0.83", "-6.71542, -86.0487, -4.19435, 0.83", "-7.11086, -88.6988, -5.97876, 0.28", "-7.28905, -89.9262, -6.85177, 0.83", "-7.67773, -91.6209, -7.9742, 0.83", "-8.28872, -93.835, -9.39633, 0.28", "-8.45435, -94.3859, -9.75105, 0.83", "-8.77571, -95.3702, -10.3917, 0.83", "-9.18328, -96.3849, -10.9765, 0.83", "-10.0288, -98.3813, -12.0794, 0.83", "-11.2876, -101.687, -13.7674, 0.28", "-11.4633, -102.275, -14.0378, 0.55", "-11.8517, -103.901, -14.8374, 0.28", "-12.1695, -105.322, -15.5683, 0.83", "-12.4976, -107.117, -16.54, 0.28", "-12.6534, -108.21, -17.1102, 0.83", "-12.8194, -109.886, -17.7711, 0.83", "-12.8769, -112.268, -18.2537, 0.28", "-12.8547, -113.208, -18.2751, 0.55", "-12.7336, -114.734, -18.0751, 0.28", "-12.5281, -116.829, -17.5228, 0.83", "-12.2795, -119.502, -16.3385, 0.28", "-11.7112, -124.603, -13.4676, 0.83", "-11.5537, -126.411, -12.3576, 0.28", "-11.5419, -128.073, -11.4017, 0.83", "-11.5551, -129.473, -10.5412, 0.83", "-11.7054, -132.761, -8.56014, 0.28", "-11.859, -133.619, -8.13534, 0.83", "-12.4455, -135.812, -7.44343, 0.83", "-13.2689, -138.655, -6.21355, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.92826, -67.7669, -0.4761, 0.28", "-4.43865, -69.3284, -1.15811, 0.28", "-3.35037, -70.4692, -1.65638, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.50594, 165.466, -6.91898, 0.55", "-2.95706, 167.202, -7.24382, 0.55", "-3.38142, 168.79, -7.51535, 0.55", "-3.82899, 170.542, -7.93881, 0.28", "-4.16142, 171.69, -8.18276, 0.28", "-4.38517, 172.329, -8.31474, 0.55", "-4.89072, 173.764, -8.61035, 0.28", "-5.37941, 174.929, -8.96972, 0.55", "-6.36601, 176.773, -9.64247, 0.28", "-7.1861, 178.125, -10.1596, 0.55", "-8.17424, 179.648, -10.7778, 0.55", "-9.32168, 181.266, -11.4865, 0.83", "-11.1999, 183.698, -12.5782, 0.55", "-11.8618, 184.508, -12.9947, 0.28", "-12.3138, 185.058, -13.2758, 0.28", "-12.6234, 185.438, -13.5072, 0.55", "-13.7047, 186.77, -14.3068, 0.28", "-14.1328, 187.28, -14.6031, 0.55", "-15.054, 188.498, -15.1733, 0.28", "-15.7586, 189.442, -15.5043, 0.55", "-17.4063, 191.538, -15.9689, 0.28", "-18.0541, 192.305, -16.0169, 0.55", "-19.1799, 193.515, -16.0429, 0.28", "-20.3702, 194.635, -16.0258, 0.55", "-22.1286, 196.208, -15.7442, 0.28", "-23.311, 197.215, -15.4592, 0.83", "-24.8001, 198.45, -15.0654, 0.55", "-27.6067, 200.714, -14.4252, 0.28", "-28.5473, 201.455, -14.2203, 0.55", "-31.159, 203.463, -13.8188, 0.28", "-32.4922, 204.493, -13.7392, 0.55", "-34.286, 205.963, -13.6455, 0.28", "-34.8586, 206.479, -13.5843, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.50594, 165.466, -6.91898, 0.55", "-2.53237, 166.992, -7.11618, 0.55", "-2.61431, 169.972, -7.48446, 0.28", "-2.7196, 171.814, -7.81939, 0.55", "-2.88659, 174.305, -8.30626, 0.28", "-2.99342, 176.143, -8.73668, 0.55", "-3.12215, 178.357, -9.27173, 0.28", "-3.39903, 181.637, -10.2389, 0.55", "-3.77858, 184.888, -11.2604, 0.28", "-4.07248, 187.044, -11.9053, 0.55", "-4.50886, 190.076, -12.7226, 0.28", "-4.89619, 192.56, -13.3592, 0.55", "-5.63014, 196.998, -14.3345, 0.28", "-6.04231, 199.597, -14.8031, 0.55", "-6.49985, 202.514, -15.2707, 0.28", "-6.81604, 204.711, -15.635, 0.28", "-6.9904, 206.068, -15.8395, 0.28", "-7.36904, 209.714, -16.5251, 0.55", "-7.55494, 212.334, -17.0284, 0.55", "-7.69396, 215.416, -17.6832, 0.28", "-7.84331, 216.887, -18.0307, 0.28", "-8.04975, 218.676, -18.4914, 0.28", "-8.32351, 220.777, -19.0636, 0.28", "-8.69921, 222.998, -19.6914, 0.83", "-9.4052, 225.886, -20.3248, 0.28", "-10.2482, 229.052, -20.6362, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-13.2689, -138.655, -6.21355, 0.55", "-13.3655, -141.0, -6.23259, 0.55", "-13.4315, -141.915, -6.24717, 0.55", "-13.5136, -143.05, -6.20705, 0.83", "-13.5165, -144.583, -6.14554, 0.83", "-13.5266, -145.623, -6.10364, 0.55", "-13.5231, -147.168, -5.97245, 0.83", "-13.4741, -148.986, -5.76021, 0.83", "-13.3892, -150.858, -5.51083, 0.55", "-13.2515, -153.035, -5.2324, 0.55", "-13.0755, -155.753, -4.84798, 0.83", "-12.9031, -158.2, -4.47829, 0.83", "-12.771, -160.011, -4.18957, 0.83", "-12.5397, -162.398, -3.81578, 0.83", "-12.4121, -164.067, -3.5937, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-13.2689, -138.655, -6.21355, 0.55", "-16.6787, -139.166, -8.51161, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.4121, -164.067, -3.5937, 0.83", "-12.2518, -166.234, -2.72345, 0.83", "-12.1614, -167.91, -1.92899, 0.83", "-12.1232, -170.505, -0.600081, 0.83", "-12.1281, -172.262, 0.251799, 0.28", "-12.1183, -174.519, 1.3411, 0.83", "-12.0766, -177.16, 2.52511, 0.83", "-12.0477, -178.945, 3.31861, 0.28", "-12.0953, -180.653, 4.03301, 0.83", "-12.1848, -182.26, 4.57203, 0.55", "-12.251, -184.185, 4.99445, 0.83", "-12.3137, -186.761, 5.31244, 0.83", "-12.3472, -188.741, 5.42335, 0.55", "-12.3997, -190.788, 5.47508, 0.83", "-12.5122, -193.656, 5.48315, 0.83", "-12.7176, -196.38, 5.59076, 0.55", "-12.8582, -197.673, 5.65473, 0.55", "-13.1898, -200.115, 5.85307, 0.83", "-13.5836, -202.485, 6.05966, 0.83", "-13.9385, -204.411, 6.35338, 0.83", "-14.626, -207.379, 7.02205, 0.55", "-14.8404, -208.156, 7.23579, 0.55", "-15.2273, -209.557, 7.71712, 0.55", "-15.666, -211.011, 8.32293, 0.83", "-16.5423, -214.129, 9.72864, 0.55", "-16.9756, -215.651, 10.2694, 0.83", "-17.3849, -217.082, 10.5963, 0.83", "-17.9569, -219.053, 10.916, 0.28", "-18.2197, -219.938, 11.014, 0.28", "-19.0297, -222.62, 11.2879, 0.83", "-20.1303, -225.957, 11.4023, 0.55", "-20.5354, -227.296, 11.465, 0.55", "-20.886, -228.421, 11.4887, 0.28", "-21.1401, -229.12, 11.4881, 0.55", "-22.2448, -231.432, 11.5191, 0.28", "-22.9555, -232.569, 11.5739, 0.83", "-23.5311, -233.486, 11.7475, 0.83", "-24.723, -235.159, 12.0122, 0.28", "-25.7, -236.353, 12.0912, 0.83", "-27.204, -237.909, 11.9032, 0.28", "-27.4125, -238.063, 11.8319, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-12.4121, -164.067, -3.5937, 0.55", "-9.46023, -164.845, -1.00872, 0.55", "-7.80268, -165.181, 0.169163, 0.28", "-7.35398, -165.254, 0.434179, 0.83", "-4.37015, -165.574, 1.91778, 0.55", "-4.14453, -165.577, 2.02003, 0.83", "-2.86681, -165.598, 2.59912, 0.28", "-1.32319, -165.551, 3.1416, 0.55", "-0.635475, -165.466, 3.41506, 0.55", "0.350364, -165.27, 3.69389, 0.28", "2.04212, -164.732, 3.70586, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_DBC_e5ab405051_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_31
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_6
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.4499999309967165)
    connect dend_25(0), soma_0(0.4499999309967165)
    connect dend_0(0), soma_0(0.4499999309967165)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.900775, -9.8088, 0.590543, 2.2315 ) }
    soma_0 { pt3dadd( -0.795054, -8.89395, 0.538155, 2.59468 ) }
    soma_0 { pt3dadd( -0.689333, -7.97909, 0.485767, 3.40562 ) }
    soma_0 { pt3dadd( -0.583612, -7.06424, 0.433379, 4.21656 ) }
    soma_0 { pt3dadd( -0.477891, -6.14939, 0.380991, 4.76863 ) }
    soma_0 { pt3dadd( -0.37217, -5.23453, 0.328603, 5.07118 ) }
    soma_0 { pt3dadd( -0.26645, -4.31968, 0.276215, 5.37449 ) }
    soma_0 { pt3dadd( -0.160729, -3.40482, 0.223827, 5.6778 ) }
    soma_0 { pt3dadd( -0.0550076, -2.48997, 0.171439, 5.91116 ) }
    soma_0 { pt3dadd( 0.0507134, -1.57512, 0.119051, 6.0829 ) }
    soma_0 { pt3dadd( 0.156434, -0.660263, 0.0666633, 6.26003 ) }
    soma_0 { pt3dadd( 0.262155, 0.254591, 0.0142753, 6.44407 ) }
    soma_0 { pt3dadd( 0.367876, 1.16944, -0.0381126, 6.62807 ) }
    soma_0 { pt3dadd( 0.473597, 2.0843, -0.0905006, 6.73886 ) }
    soma_0 { pt3dadd( 0.579318, 2.99915, -0.142889, 6.60317 ) }
    soma_0 { pt3dadd( 0.685039, 3.91401, -0.195276, 6.29711 ) }
    soma_0 { pt3dadd( 0.79076, 4.82886, -0.247664, 5.46861 ) }
    soma_0 { pt3dadd( 0.896481, 5.74371, -0.300052, 4.56209 ) }
    soma_0 { pt3dadd( 1.0022, 6.65857, -0.35244, 3.66181 ) }
    soma_0 { pt3dadd( 1.10792, 7.57342, -0.404828, 2.68112 ) }
    soma_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 1.67793 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.69856, 3.64501, 6.2591, 0.83 ) }
    dend_42 { pt3dadd( 5.55575, 5.07337, 6.33607, 0.83 ) }
    dend_42 { pt3dadd( 11.1736, 9.39398, 6.56888, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 24/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.488563, 6.86551, 4.0991, 2.22 ) }
    dend_25 { pt3dadd( 0.680597, 11.4048, -0.938958, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.91144, -9.50299, 2.0591, 2.22 ) }
    dend_0 { pt3dadd( -3.05283, -13.5122, 2.41554, 1.94 ) }
    dend_0 { pt3dadd( -4.2796, -17.8213, 2.79863, 2.22 ) }
    dend_0 { pt3dadd( -5.67508, -22.723, 3.23441, 1.38 ) }
    dend_0 { pt3dadd( -6.47696, -25.5396, 3.48482, 1.38 ) }
    dend_0 { pt3dadd( -7.31543, -28.4848, 3.74666, 1.66 ) }
    dend_0 { pt3dadd( -8.28018, -31.8735, 4.04793, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 2.93559, 23.3891, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 36/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 11.1736, 9.39398, 6.56888, 0.28 ) }
    dend_46 { pt3dadd( 12.3804, 9.25485, 7.42913, 0.28 ) }
    dend_46 { pt3dadd( 13.1525, 9.22552, 7.91959, 0.55 ) }
    dend_46 { pt3dadd( 14.5054, 9.24413, 8.61305, 0.28 ) }
    dend_46 { pt3dadd( 15.0216, 9.27144, 8.83476, 0.55 ) }
    dend_46 { pt3dadd( 17.263, 9.3283, 9.44048, 0.28 ) }
    dend_46 { pt3dadd( 18.7085, 9.33753, 9.67348, 0.55 ) }
    dend_46 { pt3dadd( 20.3834, 9.36821, 9.74233, 0.55 ) }
    dend_46 { pt3dadd( 22.3347, 9.37742, 9.63612, 0.28 ) }
    dend_46 { pt3dadd( 23.2643, 9.38442, 9.54452, 0.55 ) }
    dend_46 { pt3dadd( 26.2203, 9.3418, 9.0897, 0.28 ) }
    dend_46 { pt3dadd( 27.3957, 9.28154, 8.87644, 0.83 ) }
    dend_46 { pt3dadd( 29.2176, 9.09166, 8.61587, 0.28 ) }
    dend_46 { pt3dadd( 30.1634, 8.97207, 8.5109, 0.83 ) }
    dend_46 { pt3dadd( 32.0125, 8.69857, 8.41087, 0.28 ) }
    dend_46 { pt3dadd( 33.22, 8.46452, 8.37008, 0.55 ) }
    dend_46 { pt3dadd( 35.2558, 8.02802, 8.38409, 0.28 ) }
    dend_46 { pt3dadd( 36.82, 7.65139, 8.44563, 0.83 ) }
    dend_46 { pt3dadd( 39.0228, 7.09617, 8.4584, 0.28 ) }
    dend_46 { pt3dadd( 39.6303, 6.93611, 8.4422, 0.55 ) }
    dend_46 { pt3dadd( 42.9295, 5.9869, 8.2601, 0.28 ) }
    dend_46 { pt3dadd( 45.4795, 5.2366, 8.07603, 0.28 ) }
    dend_46 { pt3dadd( 46.8251, 4.84756, 7.91021, 0.55 ) }
    dend_46 { pt3dadd( 50.2221, 3.80237, 7.40618, 0.28 ) }
    dend_46 { pt3dadd( 51.1775, 3.49622, 7.23865, 0.55 ) }
    dend_46 { pt3dadd( 52.8007, 3.02467, 6.8914, 0.28 ) }
    dend_46 { pt3dadd( 53.4632, 2.85022, 6.75052, 0.55 ) }
    dend_46 { pt3dadd( 57.3617, 1.80654, 5.80237, 0.28 ) }
    dend_46 { pt3dadd( 58.404, 1.54317, 5.60186, 0.83 ) }
    dend_46 { pt3dadd( 60.7028, 0.98513, 5.35733, 0.28 ) }
    dend_46 { pt3dadd( 62.0061, 0.67906, 5.29167, 0.55 ) }
    dend_46 { pt3dadd( 63.4497, 0.327488, 5.28125, 0.28 ) }
    dend_46 { pt3dadd( 63.972, 0.180209, 5.26679, 0.55 ) }
    dend_46 { pt3dadd( 66.5889, -0.615145, 5.15619, 0.28 ) }
    dend_46 { pt3dadd( 67.4845, -0.885921, 5.11956, 0.83 ) }
    dend_46 { pt3dadd( 69.7112, -1.53393, 5.02719, 0.28 ) }
    dend_46 { pt3dadd( 71.1829, -1.92141, 4.97392, 0.55 ) }
    dend_46 { pt3dadd( 74.3141, -2.53926, 4.58097, 0.28 ) }
    dend_46 { pt3dadd( 75.942, -2.80478, 4.31674, 0.28 ) }
    dend_46 { pt3dadd( 77.4877, -2.99071, 3.99956, 0.55 ) }
    dend_46 { pt3dadd( 79.8751, -3.17738, 3.51916, 0.28 ) }
    dend_46 { pt3dadd( 81.4184, -3.30569, 3.19867, 0.55 ) }
    dend_46 { pt3dadd( 86.1631, -3.76296, 2.14897, 0.28 ) }
    dend_46 { pt3dadd( 87.3181, -3.91733, 1.91384, 0.83 ) }
    dend_46 { pt3dadd( 88.9348, -4.20474, 1.52051, 0.28 ) }
    dend_46 { pt3dadd( 90.5609, -4.5535, 1.1326, 0.55 ) }
    dend_46 { pt3dadd( 94.3943, -5.5726, 0.211394, 0.28 ) }
    dend_46 { pt3dadd( 95.7838, -6.01054, -0.137173, 0.83 ) }
    dend_46 { pt3dadd( 100.831, -7.83584, -1.21595, 0.28 ) }
    dend_46 { pt3dadd( 102.133, -8.32318, -1.48439, 0.55 ) }
    dend_46 { pt3dadd( 104.639, -9.25637, -1.94033, 0.28 ) }
    dend_46 { pt3dadd( 107.404, -10.2153, -2.39275, 0.55 ) }
    dend_46 { pt3dadd( 109.104, -10.7097, -2.63205, 0.28 ) }
    dend_46 { pt3dadd( 110.857, -11.1347, -2.84375, 0.28 ) }
    dend_46 { pt3dadd( 112.277, -11.3475, -3.04058, 0.55 ) }
    dend_46 { pt3dadd( 114.743, -11.4017, -3.32282, 0.28 ) }
    dend_46 { pt3dadd( 115.442, -11.2896, -3.47286, 0.55 ) }
    dend_46 { pt3dadd( 117.033, -10.7458, -3.87051, 0.28 ) }
    dend_46 { pt3dadd( 117.929, -10.2959, -4.14191, 0.55 ) }
    dend_46 { pt3dadd( 118.983, -9.61257, -4.51605, 0.28 ) }
    dend_46 { pt3dadd( 120.254, -8.63735, -5.03075, 0.55 ) }
    dend_46 { pt3dadd( 122.946, -6.25811, -6.1242, 0.28 ) }
    dend_46 { pt3dadd( 123.532, -5.70315, -6.35326, 0.28 ) }
    dend_46 { pt3dadd( 124.861, -4.35303, -6.88545, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( 126.746, -2.37301, -7.59292, 0.28 ) }
    dend_46 { pt3dadd( 127.243, -1.85128, -7.74067, 0.55 ) }
    dend_46 { pt3dadd( 128.481, -0.636061, -7.99509, 0.28 ) }
    dend_46 { pt3dadd( 128.763, -0.383862, -8.03273, 0.55 ) }
    dend_46 { pt3dadd( 129.953, 0.582656, -8.29924, 0.28 ) }
    dend_46 { pt3dadd( 130.476, 0.96411, -8.45233, 0.55 ) }
    dend_46 { pt3dadd( 131.25, 1.48043, -8.73307, 0.28 ) }
    dend_46 { pt3dadd( 131.968, 1.91784, -9.00023, 0.55 ) }
    dend_46 { pt3dadd( 133.79, 2.92546, -9.79106, 0.28 ) }
    dend_46 { pt3dadd( 134.949, 3.54956, -10.2784, 0.28 ) }
    dend_46 { pt3dadd( 135.615, 3.89164, -10.5491, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 11.1736, 9.39398, 6.56888, 0.28 ) }
    dend_43 { pt3dadd( 12.3421, 11.1223, 6.03999, 0.28 ) }
    dend_43 { pt3dadd( 12.9315, 11.9941, 5.77323, 0.83 ) }
    dend_43 { pt3dadd( 13.7121, 13.1486, 5.41993, 0.28 ) }
    dend_43 { pt3dadd( 13.93, 13.4709, 5.32132, 1.38 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 16/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.680597, 11.4048, -0.938958, 0.83 ) }
    dend_31 { pt3dadd( 0.912817, 13.5377, -1.32467, 0.83 ) }
    dend_31 { pt3dadd( 1.11578, 15.7575, -1.48606, 0.83 ) }
    dend_31 { pt3dadd( 1.19854, 16.7778, -1.50487, 0.83 ) }
    dend_31 { pt3dadd( 1.50434, 20.4849, -1.3923, 1.66 ) }
    dend_31 { pt3dadd( 1.71872, 23.3626, -1.23757, 0.83 ) }
    dend_31 { pt3dadd( 1.9344, 25.8558, -0.992927, 0.83 ) }
    dend_31 { pt3dadd( 2.05356, 27.5739, -0.664581, 0.83 ) }
    dend_31 { pt3dadd( 2.16456, 29.3629, -0.167693, 1.38 ) }
    dend_31 { pt3dadd( 2.3166, 31.3236, 0.472653, 0.83 ) }
    dend_31 { pt3dadd( 2.45605, 32.6337, 1.00905, 1.11 ) }
    dend_31 { pt3dadd( 2.74199, 34.7206, 1.79778, 0.83 ) }
    dend_31 { pt3dadd( 2.98489, 36.6955, 2.63094, 0.83 ) }
    dend_31 { pt3dadd( 3.18436, 38.0924, 3.24573, 1.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.680597, 11.4048, -0.938958, 1.11 ) }
    dend_26 { pt3dadd( -1.04595, 14.9315, -0.292692, 1.11 ) }
    dend_26 { pt3dadd( -3.14006, 18.9226, 0.0847577, 1.11 ) }
    dend_26 { pt3dadd( -4.81984, 22.3342, 0.232479, 0.55 ) }
    dend_26 { pt3dadd( -5.54022, 23.8879, 0.276609, 1.11 ) }
    dend_26 { pt3dadd( -6.68368, 26.4477, 0.346576, 0.55 ) }
    dend_26 { pt3dadd( -8.24799, 29.9706, 0.511976, 0.55 ) }
    dend_26 { pt3dadd( -9.47037, 32.7426, 0.603508, 0.55 ) }
    dend_26 { pt3dadd( -10.7996, 35.7035, 0.688279, 1.11 ) }
    dend_26 { pt3dadd( -11.3112, 36.9343, 0.835236, 0.55 ) }
    dend_26 { pt3dadd( -11.9838, 38.8015, 1.13474, 0.83 ) }
    dend_26 { pt3dadd( -12.893, 41.8676, 1.92734, 1.11 ) }
    dend_26 { pt3dadd( -13.3204, 43.6187, 2.61471, 0.55 ) }
    dend_26 { pt3dadd( -13.7486, 45.719, 3.60048, 1.11 ) }
    dend_26 { pt3dadd( -14.2485, 48.2159, 4.8663, 0.55 ) }
    dend_26 { pt3dadd( -14.8974, 51.6259, 6.57228, 1.11 ) }
    dend_26 { pt3dadd( -15.3031, 54.6386, 8.05966, 0.55 ) }
    dend_26 { pt3dadd( -15.3897, 55.4426, 8.44857, 0.55 ) }
    dend_26 { pt3dadd( -15.5216, 56.7106, 9.07336, 0.55 ) }
    dend_26 { pt3dadd( -15.7112, 58.1534, 9.75289, 0.55 ) }
    dend_26 { pt3dadd( -16.2133, 61.1621, 11.0465, 1.38 ) }
    dend_26 { pt3dadd( -16.6567, 63.3466, 11.9611, 0.55 ) }
    dend_26 { pt3dadd( -17.063, 65.4563, 12.83, 0.55 ) }
    dend_26 { pt3dadd( -17.2201, 66.4738, 13.2766, 0.28 ) }
    dend_26 { pt3dadd( -17.4686, 68.2324, 14.0615, 0.55 ) }
    dend_26 { pt3dadd( -17.5678, 69.2991, 14.4766, 0.28 ) }
    dend_26 { pt3dadd( -17.7549, 71.4221, 15.1861, 1.11 ) }
    dend_26 { pt3dadd( -18.0536, 74.4055, 16.0489, 0.28 ) }
    dend_26 { pt3dadd( -18.2155, 76.2835, 16.5188, 0.83 ) }
    dend_26 { pt3dadd( -18.5955, 80.0122, 17.372, 0.83 ) }
    dend_26 { pt3dadd( -19.2001, 84.6995, 18.261, 0.55 ) }
    dend_26 { pt3dadd( -19.8682, 89.2169, 18.9244, 0.55 ) }
    dend_26 { pt3dadd( -20.1339, 91.0925, 19.1421, 0.28 ) }
    dend_26 { pt3dadd( -20.5181, 93.2871, 19.3588, 0.83 ) }
    dend_26 { pt3dadd( -20.8348, 95.1041, 19.5635, 0.83 ) }
    dend_26 { pt3dadd( -21.4845, 98.4724, 20.0313, 0.55 ) }
    dend_26 { pt3dadd( -22.3881, 102.747, 20.8016, 0.55 ) }
    dend_26 { pt3dadd( -23.0516, 106.07, 21.4132, 0.55 ) }
    dend_26 { pt3dadd( -23.6737, 109.208, 22.0394, 0.55 ) }
    dend_26 { pt3dadd( -24.4791, 113.406, 22.9735, 0.55 ) }
    dend_26 { pt3dadd( -24.8731, 115.79, 23.5756, 0.55 ) }
    dend_26 { pt3dadd( -25.2843, 118.625, 24.5208, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.28018, -31.8735, 4.04793, 1.38 ) }
    dend_6 { pt3dadd( -8.5102, -35.7358, 3.82048, 1.38 ) }
    dend_6 { pt3dadd( -8.71336, -39.1471, 3.61959, 0.83 ) }
    dend_6 { pt3dadd( -8.84698, -41.3907, 3.48746, 1.66 ) }
    dend_6 { pt3dadd( -9.0684, -45.1087, 3.26851, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.28018, -31.8735, 4.04793, 1.38 ) }
    dend_1 { pt3dadd( -13.6455, -36.6559, 5.45389, 1.38 ) }
    dend_1 { pt3dadd( -16.0713, -38.8198, 6.07806, 0.83 ) }
    dend_1 { pt3dadd( -18.2315, -40.7069, 6.66685, 0.83 ) }
    dend_1 { pt3dadd( -22.6179, -44.3138, 8.07019, 0.83 ) }
    dend_1 { pt3dadd( -25.3356, -46.5485, 8.93966, 0.83 ) }
    dend_1 { pt3dadd( -28.4113, -49.0775, 9.92365, 0.83 ) }
    dend_1 { pt3dadd( -29.8023, -50.2558, 10.25, 1.11 ) }
    dend_1 { pt3dadd( -32.3866, -52.3355, 10.9172, 0.83 ) }
    dend_1 { pt3dadd( -35.8078, -54.8515, 12.1388, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 6.37948, 53.1908, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 8.10142, 68.0916, -0.457216, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 13.93, 13.4709, 5.32132, 0.55 ) }
    dend_45 { pt3dadd( 14.918, 13.3642, 6.84742, 0.55 ) }
    dend_45 { pt3dadd( 15.8706, 13.2083, 8.30168, 0.55 ) }
    dend_45 { pt3dadd( 17.8674, 12.9238, 11.6566, 0.83 ) }
    dend_45 { pt3dadd( 18.9394, 12.8143, 13.5055, 0.28 ) }
    dend_45 { pt3dadd( 19.3439, 12.7665, 14.2322, 0.83 ) }
    dend_45 { pt3dadd( 20.334, 12.6286, 16.1084, 0.28 ) }
    dend_45 { pt3dadd( 20.929, 12.5658, 17.2515, 0.55 ) }
    dend_45 { pt3dadd( 22.365, 12.4871, 20.0401, 0.28 ) }
    dend_45 { pt3dadd( 23.1658, 12.3667, 21.5779, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( 24.2701, 12.1626, 23.8043, 0.28 ) }
    dend_45 { pt3dadd( 25.2341, 11.9764, 25.7667, 0.55 ) }
    dend_45 { pt3dadd( 26.2759, 11.782, 27.821, 0.28 ) }
    dend_45 { pt3dadd( 27.1322, 11.6048, 29.5694, 0.55 ) }
    dend_45 { pt3dadd( 27.9997, 11.3049, 31.2174, 0.28 ) }
    dend_45 { pt3dadd( 28.7877, 10.9344, 32.8374, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 13.93, 13.4709, 5.32132, 0.28 ) }
    dend_44 { pt3dadd( 14.3142, 14.5169, 5.79325, 0.28 ) }
    dend_44 { pt3dadd( 14.6288, 15.2742, 6.05311, 0.83 ) }
    dend_44 { pt3dadd( 15.4, 17.0228, 6.53429, 0.28 ) }
    dend_44 { pt3dadd( 15.4, 17.0228, 6.53429, 0.55 ) }
    dend_44 { pt3dadd( 15.8945, 18.175, 6.73692, 0.55 ) }
    dend_44 { pt3dadd( 16.5519, 19.6978, 6.97825, 1.11 ) }
    dend_44 { pt3dadd( 17.5834, 22.1936, 7.22436, 0.55 ) }
    dend_44 { pt3dadd( 18.0575, 23.4812, 7.26892, 0.28 ) }
    dend_44 { pt3dadd( 18.4546, 24.6699, 7.20145, 0.83 ) }
    dend_44 { pt3dadd( 18.8507, 25.9409, 7.07348, 0.55 ) }
    dend_44 { pt3dadd( 19.1721, 27.0972, 6.91418, 0.83 ) }
    dend_44 { pt3dadd( 19.6623, 29.4015, 6.61499, 0.28 ) }
    dend_44 { pt3dadd( 19.9027, 30.7738, 6.37823, 0.83 ) }
    dend_44 { pt3dadd( 20.1807, 32.6302, 6.02415, 0.28 ) }
    dend_44 { pt3dadd( 20.2268, 32.9496, 5.96277, 0.55 ) }
    dend_44 { pt3dadd( 20.3474, 33.8147, 5.78639, 0.28 ) }
    dend_44 { pt3dadd( 20.5893, 35.3659, 5.53923, 0.55 ) }
    dend_44 { pt3dadd( 21.04, 37.4746, 5.29745, 0.28 ) }
    dend_44 { pt3dadd( 21.4933, 39.3065, 5.07659, 0.83 ) }
    dend_44 { pt3dadd( 21.8843, 40.7806, 4.93077, 0.28 ) }
    dend_44 { pt3dadd( 22.1677, 41.7088, 4.83639, 0.83 ) }
    dend_44 { pt3dadd( 22.9429, 43.87, 4.55206, 0.28 ) }
    dend_44 { pt3dadd( 23.5209, 45.2956, 4.34592, 0.55 ) }
    dend_44 { pt3dadd( 24.2296, 46.8281, 4.06111, 0.28 ) }
    dend_44 { pt3dadd( 24.919, 48.0884, 3.67598, 0.55 ) }
    dend_44 { pt3dadd( 26.1812, 50.1729, 2.8399, 0.55 ) }
    dend_44 { pt3dadd( 27.2628, 51.8102, 2.09123, 0.28 ) }
    dend_44 { pt3dadd( 28.3977, 53.4257, 1.27771, 0.55 ) }
    dend_44 { pt3dadd( 30.1483, 55.7838, 0.19824, 0.28 ) }
    dend_44 { pt3dadd( 31.5615, 57.5215, -0.595675, 0.83 ) }
    dend_44 { pt3dadd( 32.759, 58.885, -1.25081, 0.55 ) }
    dend_44 { pt3dadd( 34.0967, 60.3066, -1.83596, 0.28 ) }
    dend_44 { pt3dadd( 35.0627, 61.2884, -2.10681, 0.55 ) }
    dend_44 { pt3dadd( 36.6996, 62.9295, -2.2435, 0.55 ) }
    dend_44 { pt3dadd( 38.7398, 65.0531, -1.97627, 0.28 ) }
    dend_44 { pt3dadd( 39.0965, 65.437, -1.87451, 0.55 ) }
    dend_44 { pt3dadd( 40.5768, 67.0413, -1.35999, 0.28 ) }
    dend_44 { pt3dadd( 42.027, 68.6432, -0.823554, 0.55 ) }
    dend_44 { pt3dadd( 43.2374, 70.016, -0.34206, 0.28 ) }
    dend_44 { pt3dadd( 44.1899, 71.1625, -0.00672829, 0.55 ) }
    dend_44 { pt3dadd( 45.3787, 72.674, 0.473726, 0.28 ) }
    dend_44 { pt3dadd( 45.9256, 73.3344, 0.583943, 0.55 ) }
    dend_44 { pt3dadd( 46.9573, 74.4768, 0.558519, 0.28 ) }
    dend_44 { pt3dadd( 47.8224, 75.3601, 0.444148, 0.83 ) }
    dend_44 { pt3dadd( 49.0895, 76.5374, 0.160762, 0.28 ) }
    dend_44 { pt3dadd( 49.4802, 76.8772, 0.0553269, 0.55 ) }
    dend_44 { pt3dadd( 51.8239, 78.8504, -0.51267, 0.28 ) }
    dend_44 { pt3dadd( 52.6289, 79.5501, -0.624658, 0.83 ) }
    dend_44 { pt3dadd( 54.2127, 80.976, -0.786549, 0.28 ) }
    dend_44 { pt3dadd( 54.7488, 81.4691, -0.820016, 0.55 ) }
    dend_44 { pt3dadd( 55.9431, 82.6172, -0.866249, 0.28 ) }
    dend_44 { pt3dadd( 57.3575, 84.0387, -0.912822, 0.55 ) }
    dend_44 { pt3dadd( 58.8267, 85.6361, -0.910157, 0.28 ) }
    dend_44 { pt3dadd( 59.8931, 86.8542, -0.948808, 0.83 ) }
    dend_44 { pt3dadd( 60.8924, 87.9887, -1.18583, 0.83 ) }
    dend_44 { pt3dadd( 62.4026, 89.7228, -1.69571, 0.28 ) }
    dend_44 { pt3dadd( 62.9135, 90.3139, -1.92008, 0.83 ) }
    dend_44 { pt3dadd( 63.7791, 91.3012, -2.43393, 0.28 ) }
    dend_44 { pt3dadd( 64.7516, 92.3565, -3.13608, 0.55 ) }
    dend_44 { pt3dadd( 66.9848, 94.7153, -4.77392, 0.28 ) }
    dend_44 { pt3dadd( 67.8663, 95.5987, -5.48805, 0.55 ) }
    dend_44 { pt3dadd( 68.3161, 96.0317, -5.85392, 0.28 ) }
    dend_44 { pt3dadd( 69.9745, 97.5881, -7.14383, 0.55 ) }
    dend_44 { pt3dadd( 71.4647, 98.932, -8.21998, 0.28 ) }
    dend_44 { pt3dadd( 72.5242, 99.8604, -8.86281, 0.83 ) }
    dend_44 { pt3dadd( 73.7032, 100.926, -9.37696, 0.28 ) }
    dend_44 { pt3dadd( 74.8034, 101.883, -9.88907, 0.83 ) }
    dend_44 { pt3dadd( 76.1493, 103.052, -10.5062, 0.28 ) }
    dend_44 { pt3dadd( 76.6255, 103.5, -10.7083, 0.55 ) }
    dend_44 { pt3dadd( 77.3723, 104.25, -10.9914, 0.28 ) }
    dend_44 { pt3dadd( 78.4991, 105.438, -11.4206, 0.55 ) }
    dend_44 { pt3dadd( 80.0799, 107.178, -12.0994, 0.55 ) }
    dend_44 { pt3dadd( 81.3383, 108.626, -12.8074, 0.28 ) }
    dend_44 { pt3dadd( 81.9757, 109.351, -13.2198, 1.11 ) }
    dend_44 { pt3dadd( 82.7969, 110.31, -13.8162, 1.11 ) }
    dend_44 { pt3dadd( 83.7019, 111.442, -14.3936, 0.83 ) }
    dend_44 { pt3dadd( 85.056, 113.214, -15.1174, 0.28 ) }
    dend_44 { pt3dadd( 85.9311, 114.439, -15.4422, 0.55 ) }
    dend_44 { pt3dadd( 86.8097, 115.636, -15.6696, 0.28 ) }
    dend_44 { pt3dadd( 88.5189, 117.864, -16.0552, 0.55 ) }
    dend_44 { pt3dadd( 90.6235, 120.573, -16.5262, 0.28 ) }
    dend_44 { pt3dadd( 91.2548, 121.371, -16.6343, 0.83 ) }
    dend_44 { pt3dadd( 92.018, 122.304, -16.7557, 0.28 ) }
    dend_44 { pt3dadd( 93.5838, 124.097, -17.0368, 0.55 ) }
    dend_44 { pt3dadd( 95.3135, 125.978, -17.5, 0.55 ) }
    dend_44 { pt3dadd( 97.5195, 128.238, -18.2743, 0.55 ) }
    dend_44 { pt3dadd( 98.669, 129.335, -18.777, 0.28 ) }
    dend_44 { pt3dadd( 100.217, 130.857, -19.5005, 0.55 ) }
    dend_44 { pt3dadd( 101.462, 132.081, -20.0751, 0.28 ) }
    dend_44 { pt3dadd( 102.791, 133.446, -20.65, 0.55 ) }
    dend_44 { pt3dadd( 103.596, 134.257, -21.026, 0.55 ) }
    dend_44 { pt3dadd( 105.658, 136.453, -22.2111, 0.55 ) }
    dend_44 { pt3dadd( 106.704, 137.584, -23.0988, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( 107.628, 138.622, -24.0625, 0.28 ) }
    dend_44 { pt3dadd( 108.254, 139.318, -24.83, 0.55 ) }
    dend_44 { pt3dadd( 110.609, 141.95, -28.2768, 0.55 ) }
    dend_44 { pt3dadd( 111.687, 143.174, -30.0438, 0.55 ) }
    dend_44 { pt3dadd( 113.343, 145.262, -33.1872, 0.28 ) }
    dend_44 { pt3dadd( 113.604, 145.601, -33.7368, 0.28 ) }
    dend_44 { pt3dadd( 113.981, 146.135, -34.6227, 0.55 ) }
    dend_44 { pt3dadd( 114.998, 147.647, -36.9544, 0.55 ) }
    dend_44 { pt3dadd( 115.674, 148.607, -38.2002, 0.83 ) }
    dend_44 { pt3dadd( 116.339, 149.408, -39.2469, 0.83 ) }
    dend_44 { pt3dadd( 118.085, 151.343, -41.9339, 0.55 ) }
    dend_44 { pt3dadd( 118.518, 151.731, -42.5904, 0.55 ) }
    dend_44 { pt3dadd( 119.744, 152.658, -44.3471, 0.83 ) }
    dend_44 { pt3dadd( 121.471, 153.772, -46.6794, 0.55 ) }
    dend_44 { pt3dadd( 123.161, 154.777, -49.0753, 0.55 ) }
    dend_44 { pt3dadd( 124.893, 155.749, -51.4584, 0.55 ) }
    dend_44 { pt3dadd( 126.326, 156.566, -53.2745, 1.11 ) }
    dend_44 { pt3dadd( 127.133, 157.043, -54.2949, 0.28 ) }
    dend_44 { pt3dadd( 127.711, 157.438, -55.0385, 0.55 ) }
    dend_44 { pt3dadd( 129.017, 158.493, -56.6682, 0.55 ) }
    dend_44 { pt3dadd( 129.815, 159.223, -57.5781, 1.11 ) }
    dend_44 { pt3dadd( 130.72, 160.171, -58.7633, 0.55 ) }
    dend_44 { pt3dadd( 131.706, 161.263, -60.1861, 0.55 ) }
    dend_44 { pt3dadd( 133.01, 162.578, -62.1292, 1.11 ) }
    dend_44 { pt3dadd( 135.018, 164.496, -65.0967, 0.55 ) }
    dend_44 { pt3dadd( 135.386, 164.866, -65.6605, 0.55 ) }
    dend_44 { pt3dadd( 137.297, 167.014, -68.8918, 0.83 ) }
    dend_44 { pt3dadd( 137.842, 167.65, -69.8884, 0.83 ) }
    dend_44 { pt3dadd( 139.52, 169.643, -73.079, 0.55 ) }
    dend_44 { pt3dadd( 139.844, 170.003, -73.672, 0.55 ) }
    dend_44 { pt3dadd( 140.489, 170.756, -74.8375, 0.28 ) }
    dend_44 { pt3dadd( 141.104, 171.418, -75.8267, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_31 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.18436, 38.0924, 3.24573, 0.55 ) }
    dend_41 { pt3dadd( 2.93748, 38.944, 4.83808, 0.55 ) }
    dend_41 { pt3dadd( 2.61833, 40.3649, 7.44891, 0.83 ) }
    dend_41 { pt3dadd( 2.40431, 41.575, 9.5195, 0.55 ) }
    dend_41 { pt3dadd( 2.06978, 43.4905, 12.574, 1.11 ) }
    dend_41 { pt3dadd( 1.58275, 46.9349, 17.826, 0.55 ) }
    dend_41 { pt3dadd( 1.50457, 47.5683, 18.7097, 0.55 ) }
    dend_41 { pt3dadd( 1.26435, 49.8078, 21.5055, 0.83 ) }
    dend_41 { pt3dadd( 1.14994, 51.3962, 23.2344, 0.55 ) }
    dend_41 { pt3dadd( 1.09503, 52.4787, 24.2464, 0.55 ) }
    dend_41 { pt3dadd( 1.19053, 54.384, 25.6345, 0.28 ) }
    dend_41 { pt3dadd( 1.40456, 56.3434, 26.8476, 0.55 ) }
    dend_41 { pt3dadd( 1.65085, 58.8768, 28.4339, 0.55 ) }
    dend_41 { pt3dadd( 1.93807, 61.868, 30.2445, 0.28 ) }
    dend_41 { pt3dadd( 2.15289, 63.8625, 31.4924, 0.55 ) }
    dend_41 { pt3dadd( 2.34044, 65.3727, 32.5006, 0.55 ) }
    dend_41 { pt3dadd( 2.68886, 67.8947, 34.234, 0.55 ) }
    dend_41 { pt3dadd( 2.86319, 69.1025, 35.2226, 0.28 ) }
    dend_41 { pt3dadd( 2.92008, 69.533, 35.6058, 0.55 ) }
    dend_41 { pt3dadd( 3.09927, 70.882, 36.8669, 0.28 ) }
    dend_41 { pt3dadd( 3.31622, 72.6293, 38.6032, 0.55 ) }
    dend_41 { pt3dadd( 3.47952, 74.0114, 40.0915, 0.55 ) }
    dend_41 { pt3dadd( 3.899, 76.2774, 42.5378, 0.28 ) }
    dend_41 { pt3dadd( 4.00785, 76.8231, 43.138, 0.55 ) }
    dend_41 { pt3dadd( 4.24967, 78.2199, 44.639, 0.28 ) }
    dend_41 { pt3dadd( 4.40807, 79.026, 45.4538, 0.55 ) }
    dend_41 { pt3dadd( 4.94789, 81.4976, 47.6294, 0.28 ) }
    dend_41 { pt3dadd( 5.32889, 83.0454, 48.7834, 0.55 ) }
    dend_41 { pt3dadd( 5.99405, 85.5075, 50.1454, 0.28 ) }
    dend_41 { pt3dadd( 6.25777, 86.4105, 50.563, 0.55 ) }
    dend_41 { pt3dadd( 6.75598, 88.3121, 51.3491, 0.28 ) }
    dend_41 { pt3dadd( 7.07523, 89.5796, 51.7686, 0.55 ) }
    dend_41 { pt3dadd( 7.80699, 91.9527, 52.287, 0.28 ) }
    dend_41 { pt3dadd( 8.37568, 93.6082, 52.5925, 0.28 ) }
    dend_41 { pt3dadd( 8.96029, 95.0894, 52.8107, 0.55 ) }
    dend_41 { pt3dadd( 10.0519, 97.8169, 53.248, 0.55 ) }
    dend_41 { pt3dadd( 11.2668, 100.962, 53.7928, 0.28 ) }
    dend_41 { pt3dadd( 12.1006, 102.98, 54.1333, 0.28 ) }
    dend_41 { pt3dadd( 12.8847, 104.64, 54.2727, 0.55 ) }
    dend_41 { pt3dadd( 13.8369, 106.389, 54.344, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.18436, 38.0924, 3.24573, 0.83 ) }
    dend_32 { pt3dadd( 2.73446, 41.0764, 3.53216, 0.83 ) }
    dend_32 { pt3dadd( 2.46922, 42.9781, 3.65112, 0.83 ) }
    dend_32 { pt3dadd( 2.07327, 46.1121, 3.79659, 0.83 ) }
    dend_32 { pt3dadd( 1.7692, 48.988, 3.90169, 0.28 ) }
    dend_32 { pt3dadd( 1.58384, 51.2272, 3.96947, 0.83 ) }
    dend_32 { pt3dadd( 1.38125, 55.0107, 4.07391, 0.83 ) }
    dend_32 { pt3dadd( 1.4132, 56.8318, 4.08613, 0.28 ) }
    dend_32 { pt3dadd( 1.46541, 57.8345, 4.1052, 0.83 ) }
    dend_32 { pt3dadd( 1.60305, 59.5202, 4.15525, 0.55 ) }
    dend_32 { pt3dadd( 1.76644, 61.2105, 4.25728, 0.83 ) }
    dend_32 { pt3dadd( 1.92308, 62.7901, 4.32241, 0.55 ) }
    dend_32 { pt3dadd( 2.22945, 64.8731, 4.47956, 0.83 ) }
    dend_32 { pt3dadd( 2.53154, 66.9919, 4.67375, 0.83 ) }
    dend_32 { pt3dadd( 2.95957, 69.4891, 4.91241, 0.83 ) }
    dend_32 { pt3dadd( 3.46838, 72.2702, 5.17339, 0.55 ) }
    dend_32 { pt3dadd( 3.81171, 74.2264, 5.34106, 0.83 ) }
    dend_32 { pt3dadd( 4.52851, 78.1223, 5.63723, 0.55 ) }
    dend_32 { pt3dadd( 4.93929, 80.2931, 5.798, 0.55 ) }
    dend_32 { pt3dadd( 5.50901, 83.1336, 5.99072, 0.55 ) }
    dend_32 { pt3dadd( 5.93442, 85.3109, 6.1384, 0.55 ) }
    dend_32 { pt3dadd( 6.60702, 88.7375, 6.32315, 0.55 ) }
    dend_32 { pt3dadd( 7.2009, 92.361, 6.45604, 1.11 ) }
    dend_32 { pt3dadd( 7.44814, 94.6494, 6.50553, 0.55 ) }
    dend_32 { pt3dadd( 7.6854, 97.3317, 6.44385, 0.83 ) }
    dend_32 { pt3dadd( 7.82845, 100.155, 6.25765, 1.11 ) }
    dend_32 { pt3dadd( 7.87298, 101.999, 6.06472, 0.55 ) }
    dend_32 { pt3dadd( 7.89914, 104.52, 5.72292, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( 7.8297, 107.214, 5.24828, 0.83 ) }
    dend_32 { pt3dadd( 7.70726, 110.596, 4.50894, 0.55 ) }
    dend_32 { pt3dadd( 7.61378, 112.114, 4.12375, 1.11 ) }
    dend_32 { pt3dadd( 7.39324, 115.163, 3.26665, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -25.2843, 118.625, 24.5208, 0.28 ) }
    dend_30 { pt3dadd( -24.4163, 121.188, 24.6215, 0.28 ) }
    dend_30 { pt3dadd( -24.2369, 122.323, 24.4796, 0.55 ) }
    dend_30 { pt3dadd( -24.0828, 123.679, 24.2923, 0.28 ) }
    dend_30 { pt3dadd( -24.0225, 124.545, 24.2809, 0.55 ) }
    dend_30 { pt3dadd( -23.9471, 126.111, 24.3689, 0.28 ) }
    dend_30 { pt3dadd( -23.9349, 126.972, 24.3864, 0.55 ) }
    dend_30 { pt3dadd( -24.1227, 129.816, 24.4053, 0.28 ) }
    dend_30 { pt3dadd( -24.2083, 130.837, 24.3713, 0.55 ) }
    dend_30 { pt3dadd( -24.5234, 133.805, 24.0576, 0.28 ) }
    dend_30 { pt3dadd( -24.6817, 135.196, 23.8669, 0.83 ) }
    dend_30 { pt3dadd( -24.9077, 138.038, 23.4347, 0.28 ) }
    dend_30 { pt3dadd( -24.9916, 139.974, 23.2867, 0.28 ) }
    dend_30 { pt3dadd( -25.0218, 141.266, 23.2953, 0.55 ) }
    dend_30 { pt3dadd( -25.0787, 143.609, 23.3352, 0.28 ) }
    dend_30 { pt3dadd( -25.1009, 144.611, 23.3704, 0.55 ) }
    dend_30 { pt3dadd( -25.182, 147.553, 23.7301, 0.55 ) }
    dend_30 { pt3dadd( -25.2601, 151.352, 24.5516, 0.28 ) }
    dend_30 { pt3dadd( -25.3347, 153.542, 25.156, 0.55 ) }
    dend_30 { pt3dadd( -25.442, 155.73, 25.8903, 0.28 ) }
    dend_30 { pt3dadd( -25.4817, 156.548, 26.2011, 0.55 ) }
    dend_30 { pt3dadd( -25.6074, 157.923, 26.7052, 0.28 ) }
    dend_30 { pt3dadd( -25.7377, 158.49, 26.9043, 0.55 ) }
    dend_30 { pt3dadd( -26.0752, 159.724, 27.249, 0.28 ) }
    dend_30 { pt3dadd( -26.273, 160.539, 27.4925, 0.55 ) }
    dend_30 { pt3dadd( -26.4512, 161.351, 27.7457, 0.28 ) }
    dend_30 { pt3dadd( -26.7446, 162.74, 28.1696, 0.55 ) }
    dend_30 { pt3dadd( -27.0893, 164.409, 28.6588, 0.55 ) }
    dend_30 { pt3dadd( -27.8015, 167.949, 29.6802, 0.28 ) }
    dend_30 { pt3dadd( -28.218, 170.325, 30.3298, 0.28 ) }
    dend_30 { pt3dadd( -28.3089, 170.912, 30.4928, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -25.2843, 118.625, 24.5208, 0.28 ) }
    dend_27 { pt3dadd( -25.2282, 121.515, 24.2671, 0.28 ) }
    dend_27 { pt3dadd( -25.1957, 122.568, 24.2812, 0.55 ) }
    dend_27 { pt3dadd( -25.2034, 123.351, 24.3479, 0.28 ) }
    dend_27 { pt3dadd( -25.2585, 124.139, 24.5162, 0.55 ) }
    dend_27 { pt3dadd( -25.4895, 126.048, 25.1546, 0.28 ) }
    dend_27 { pt3dadd( -25.6424, 127.235, 25.5981, 0.55 ) }
    dend_27 { pt3dadd( -25.7568, 127.961, 25.8976, 0.28 ) }
    dend_27 { pt3dadd( -25.9306, 129.038, 26.2764, 0.55 ) }
    dend_27 { pt3dadd( -26.2234, 131.104, 26.9113, 0.55 ) }
    dend_27 { pt3dadd( -26.3237, 132.332, 27.2378, 0.28 ) }
    dend_27 { pt3dadd( -26.4698, 134.625, 27.7533, 0.83 ) }
    dend_27 { pt3dadd( -26.4588, 137.14, 28.2152, 0.28 ) }
    dend_27 { pt3dadd( -26.3929, 138.447, 28.3685, 0.28 ) }
    dend_27 { pt3dadd( -26.3156, 139.248, 28.457, 0.83 ) }
    dend_27 { pt3dadd( -25.9661, 141.398, 28.7272, 0.28 ) }
    dend_27 { pt3dadd( -25.6698, 142.961, 29.0376, 0.28 ) }
    dend_27 { pt3dadd( -25.4846, 143.915, 29.3513, 0.28 ) }
    dend_27 { pt3dadd( -25.3147, 144.905, 29.7858, 0.83 ) }
    dend_27 { pt3dadd( -25.0322, 147.255, 31.0791, 0.28 ) }
    dend_27 { pt3dadd( -24.9196, 148.673, 31.9183, 0.55 ) }
    dend_27 { pt3dadd( -24.8645, 149.868, 32.678, 0.28 ) }
    dend_27 { pt3dadd( -24.7927, 150.988, 33.3675, 0.55 ) }
    dend_27 { pt3dadd( -24.7739, 151.627, 33.7271, 0.55 ) }
    dend_27 { pt3dadd( -24.7389, 153.967, 34.8654, 0.55 ) }
    dend_27 { pt3dadd( -24.6877, 156.091, 35.753, 0.55 ) }
    dend_27 { pt3dadd( -24.6843, 156.672, 35.9894, 0.55 ) }
    dend_27 { pt3dadd( -24.6827, 158.704, 36.8067, 0.55 ) }
    dend_27 { pt3dadd( -24.7509, 160.689, 37.536, 0.55 ) }
    dend_27 { pt3dadd( -24.8515, 162.524, 38.2146, 0.55 ) }
    dend_27 { pt3dadd( -24.9663, 164.39, 38.8469, 0.83 ) }
    dend_27 { pt3dadd( -25.0553, 165.907, 39.4225, 0.55 ) }
    dend_27 { pt3dadd( -25.1339, 167.188, 39.9441, 0.83 ) }
    dend_27 { pt3dadd( -25.3063, 169.135, 40.8198, 0.28 ) }
    dend_27 { pt3dadd( -25.475, 170.939, 41.6566, 0.55 ) }
    dend_27 { pt3dadd( -25.7543, 172.761, 42.4741, 0.55 ) }
    dend_27 { pt3dadd( -25.9925, 174.125, 42.9387, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_6 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -9.0684, -45.1087, 3.26851, 0.83 ) }
    dend_18 { pt3dadd( -7.92377, -45.8893, 2.39803, 0.83 ) }
    dend_18 { pt3dadd( -6.6239, -46.5763, 1.78009, 0.83 ) }
    dend_18 { pt3dadd( -4.52527, -47.5394, 0.95443, 0.83 ) }
    dend_18 { pt3dadd( -2.29724, -48.5643, 0.266447, 0.83 ) }
    dend_18 { pt3dadd( 0.311098, -49.7555, -0.487023, 0.83 ) }
    dend_18 { pt3dadd( 2.53297, -50.7724, -1.07008, 0.83 ) }
    dend_18 { pt3dadd( 6.933, -52.706, -2.01198, 0.55 ) }
    dend_18 { pt3dadd( 9.24078, -53.695, -2.41633, 0.55 ) }
    dend_18 { pt3dadd( 13.0873, -55.269, -2.94688, 0.55 ) }
    dend_18 { pt3dadd( 15.5353, -56.3181, -3.16297, 0.55 ) }
    dend_18 { pt3dadd( 16.8229, -56.9245, -3.2355, 0.83 ) }
    dend_18 { pt3dadd( 18.2018, -57.5848, -3.30054, 0.55 ) }
    dend_18 { pt3dadd( 19.2731, -58.2002, -3.43596, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 86/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.0684, -45.1087, 3.26851, 1.11 ) }
    dend_7 { pt3dadd( -8.6066, -48.5936, 4.49761, 1.11 ) }
    dend_7 { pt3dadd( -8.48424, -49.5169, 4.82327, 1.11 ) }
    dend_7 { pt3dadd( -8.09329, -52.4671, 5.86378, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -35.8078, -54.8515, 12.1388, 0.83 ) }
    dend_3 { pt3dadd( -36.6572, -56.0758, 12.4746, 0.83 ) }
    dend_3 { pt3dadd( -37.6601, -57.5216, 12.8712, 1.11 ) }
    dend_3 { pt3dadd( -38.6161, -58.8997, 13.2492, 0.83 ) }
    dend_3 { pt3dadd( -39.8167, -60.6305, 13.7239, 0.83 ) }
    dend_3 { pt3dadd( -41.1137, -62.5002, 14.2368, 1.11 ) }
    dend_3 { pt3dadd( -41.3116, -62.7855, 14.315, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -35.8078, -54.8515, 12.1388, 0.55 ) }
    dend_2 { pt3dadd( -37.2426, -54.8058, 12.1904, 0.55 ) }
    dend_2 { pt3dadd( -40.4964, -54.7022, 12.3076, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( -42.7429, -54.6307, 12.3885, 0.55 ) }
    dend_2 { pt3dadd( -44.0454, -54.5892, 12.4354, 0.83 ) }
    dend_2 { pt3dadd( -46.6439, -54.5065, 12.5289, 0.55 ) }
    dend_2 { pt3dadd( -48.1362, -54.459, 12.5827, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 4/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.39324, 115.163, 3.26665, 0.55 ) }
    dend_40 { pt3dadd( 7.05228, 117.76, 2.66472, 0.55 ) }
    dend_40 { pt3dadd( 6.70567, 119.819, 2.44862, 0.55 ) }
    dend_40 { pt3dadd( 6.1712, 122.33, 2.3369, 0.55 ) }
    dend_40 { pt3dadd( 5.68092, 124.38, 2.45095, 0.55 ) }
    dend_40 { pt3dadd( 5.13975, 126.817, 2.72463, 0.55 ) }
    dend_40 { pt3dadd( 4.52911, 129.47, 3.17317, 0.55 ) }
    dend_40 { pt3dadd( 3.41471, 133.6, 4.39163, 0.55 ) }
    dend_40 { pt3dadd( 2.98021, 135.171, 5.04503, 0.55 ) }
    dend_40 { pt3dadd( 2.28002, 137.775, 6.40791, 0.55 ) }
    dend_40 { pt3dadd( 1.96579, 139.336, 7.37471, 0.55 ) }
    dend_40 { pt3dadd( 1.71845, 141.372, 8.74944, 0.55 ) }
    dend_40 { pt3dadd( 1.58819, 143.282, 10.0088, 0.55 ) }
    dend_40 { pt3dadd( 1.5686, 144.205, 10.4945, 0.28 ) }
    dend_40 { pt3dadd( 1.55773, 145.814, 11.2151, 0.55 ) }
    dend_40 { pt3dadd( 1.55109, 148.27, 12.101, 0.28 ) }
    dend_40 { pt3dadd( 1.51952, 149.549, 12.5569, 0.55 ) }
    dend_40 { pt3dadd( 1.46782, 151.553, 13.1812, 0.28 ) }
    dend_40 { pt3dadd( 1.40118, 152.536, 13.4827, 0.55 ) }
    dend_40 { pt3dadd( 1.25894, 154.332, 14.0708, 0.55 ) }
    dend_40 { pt3dadd( 0.968273, 157.48, 15.2012, 0.55 ) }
    dend_40 { pt3dadd( 0.779023, 159.614, 16.0022, 0.55 ) }
    dend_40 { pt3dadd( 0.621788, 162.059, 16.8903, 0.55 ) }
    dend_40 { pt3dadd( 0.645416, 165.311, 17.8037, 0.28 ) }
    dend_40 { pt3dadd( 0.768814, 167.157, 18.1115, 0.55 ) }
    dend_40 { pt3dadd( 1.03459, 169.006, 18.1709, 0.28 ) }
    dend_40 { pt3dadd( 1.17997, 169.735, 18.0891, 0.55 ) }
    dend_40 { pt3dadd( 1.69315, 172.191, 17.5987, 0.55 ) }
    dend_40 { pt3dadd( 2.59043, 176.503, 16.4016, 0.55 ) }
    dend_40 { pt3dadd( 2.97091, 178.51, 15.6892, 0.55 ) }
    dend_40 { pt3dadd( 3.33337, 181.014, 14.733, 0.55 ) }
    dend_40 { pt3dadd( 3.57457, 183.305, 13.8277, 0.55 ) }
    dend_40 { pt3dadd( 3.67365, 185.929, 12.8521, 0.55 ) }
    dend_40 { pt3dadd( 3.61099, 188.664, 11.9668, 0.55 ) }
    dend_40 { pt3dadd( 3.49093, 190.184, 11.5065, 0.55 ) }
    dend_40 { pt3dadd( 3.27399, 192.247, 10.8199, 0.28 ) }
    dend_40 { pt3dadd( 3.14882, 193.013, 10.5253, 0.28 ) }
    dend_40 { pt3dadd( 2.84003, 194.718, 9.78738, 0.55 ) }
    dend_40 { pt3dadd( 2.47181, 196.853, 8.7841, 0.55 ) }
    dend_40 { pt3dadd( 1.93392, 199.659, 7.34927, 0.28 ) }
    dend_40 { pt3dadd( 1.60742, 201.318, 6.47411, 0.55 ) }
    dend_40 { pt3dadd( 1.41263, 202.303, 5.9116, 0.55 ) }
    dend_40 { pt3dadd( 1.11415, 203.986, 4.87509, 0.28 ) }
    dend_40 { pt3dadd( 0.939353, 205.12, 4.09708, 0.55 ) }
    dend_40 { pt3dadd( 0.381658, 207.457, 2.21445, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 49/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 7.39324, 115.163, 3.26665, 0.55 ) }
    dend_33 { pt3dadd( 6.85431, 117.222, 2.23454, 0.55 ) }
    dend_33 { pt3dadd( 6.21548, 119.662, 1.0111, 0.55 ) }
    dend_33 { pt3dadd( 5.90347, 120.854, 0.413556, 0.28 ) }
    dend_33 { pt3dadd( 5.54642, 122.218, -0.270226, 0.83 ) }
    dend_33 { pt3dadd( 4.78435, 125.128, -1.7297, 0.55 ) }
    dend_33 { pt3dadd( 4.53246, 126.091, -2.21209, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -25.9925, 174.125, 42.9387, 0.28 ) }
    dend_29 { pt3dadd( -26.1447, 175.484, 43.3768, 0.28 ) }
    dend_29 { pt3dadd( -26.3846, 176.858, 43.7509, 0.28 ) }
    dend_29 { pt3dadd( -26.6852, 178.457, 44.2029, 0.55 ) }
    dend_29 { pt3dadd( -26.8693, 179.828, 44.7062, 0.83 ) }
    dend_29 { pt3dadd( -27.0543, 181.664, 45.4876, 0.28 ) }
    dend_29 { pt3dadd( -27.1385, 182.895, 46.0263, 0.55 ) }
    dend_29 { pt3dadd( -27.1965, 184.086, 46.6184, 0.28 ) }
    dend_29 { pt3dadd( -27.2488, 185.283, 47.255, 0.83 ) }
    dend_29 { pt3dadd( -27.2787, 187.479, 48.5359, 0.83 ) }
    dend_29 { pt3dadd( -27.3187, 189.183, 49.5673, 0.28 ) }
    dend_29 { pt3dadd( -27.2437, 190.099, 50.5027, 0.55 ) }
    dend_29 { pt3dadd( -27.1139, 191.065, 51.8844, 0.28 ) }
    dend_29 { pt3dadd( -27.0137, 191.701, 52.9473, 0.55 ) }
    dend_29 { pt3dadd( -26.8818, 192.62, 54.7, 0.28 ) }
    dend_29 { pt3dadd( -26.8261, 193.044, 55.7074, 0.55 ) }
    dend_29 { pt3dadd( -26.3156, 195.165, 62.7928, 0.28 ) }
    dend_29 { pt3dadd( -26.2013, 195.46, 64.2041, 0.83 ) }
    dend_29 { pt3dadd( -25.9692, 195.713, 66.2967, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -25.9925, 174.125, 42.9387, 0.28 ) }
    dend_28 { pt3dadd( -25.3533, 175.661, 45.2577, 0.28 ) }
    dend_28 { pt3dadd( -24.8767, 176.927, 47.0384, 0.55 ) }
    dend_28 { pt3dadd( -24.1818, 178.984, 49.7795, 0.28 ) }
    dend_28 { pt3dadd( -24.0617, 179.339, 50.2533, 0.55 ) }
    dend_28 { pt3dadd( -23.7487, 180.266, 51.4881, 0.28 ) }
    dend_28 { pt3dadd( -23.4348, 181.195, 52.7261, 0.55 ) }
    dend_28 { pt3dadd( -22.9437, 182.828, 54.6704, 0.28 ) }
    dend_28 { pt3dadd( -22.6776, 184.265, 56.1111, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 19.2731, -58.2002, -3.43596, 0.55 ) }
    dend_22 { pt3dadd( 19.2317, -58.3269, -4.90927, 0.55 ) }
    dend_22 { pt3dadd( 19.1373, -58.3265, -5.88589, 0.55 ) }
    dend_22 { pt3dadd( 18.5661, -58.1707, -10.0637, 0.55 ) }
    dend_22 { pt3dadd( 18.3944, -58.1064, -11.1585, 0.55 ) }
    dend_22 { pt3dadd( 18.0219, -58.012, -13.8395, 0.83 ) }
    dend_22 { pt3dadd( 17.864, -57.9949, -15.2194, 0.55 ) }
    dend_22 { pt3dadd( 17.6394, -57.949, -17.5894, 0.55 ) }
    dend_22 { pt3dadd( 17.4905, -57.9552, -19.6388, 0.83 ) }
    dend_22 { pt3dadd( 17.4786, -58.0131, -21.1856, 0.55 ) }
    dend_22 { pt3dadd( 17.4989, -58.2104, -23.1575, 0.55 ) }
    dend_22 { pt3dadd( 17.6153, -58.5482, -24.9169, 0.55 ) }
    dend_22 { pt3dadd( 17.7801, -58.8871, -26.0971, 0.83 ) }
    dend_22 { pt3dadd( 18.0649, -59.3645, -27.4134, 0.55 ) }
    dend_22 { pt3dadd( 18.2745, -59.6996, -28.2505, 0.55 ) }
    dend_22 { pt3dadd( 18.7328, -60.4558, -30.0187, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( 19.0931, -61.1259, -31.6434, 0.55 ) }
    dend_22 { pt3dadd( 19.3595, -61.7103, -32.8968, 2.49 ) }
    dend_22 { pt3dadd( 19.3628, -61.7191, -32.914, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 3/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 19.2731, -58.2002, -3.43596, 0.83 ) }
    dend_19 { pt3dadd( 19.7197, -58.9216, -3.57809, 0.83 ) }
    dend_19 { pt3dadd( 20.1288, -60.0092, -3.76086, 0.83 ) }
    dend_19 { pt3dadd( 20.4796, -61.3314, -3.97036, 0.28 ) }
    dend_19 { pt3dadd( 20.6527, -61.9827, -4.09157, 0.83 ) }
    dend_19 { pt3dadd( 20.9076, -62.9101, -4.23957, 0.83 ) }
    dend_19 { pt3dadd( 21.1843, -63.8464, -4.39031, 0.28 ) }
    dend_19 { pt3dadd( 21.5354, -65.2392, -4.59308, 0.55 ) }
    dend_19 { pt3dadd( 21.7899, -66.1462, -4.75508, 0.55 ) }
    dend_19 { pt3dadd( 22.2977, -67.103, -4.83843, 0.55 ) }
    dend_19 { pt3dadd( 23.0736, -68.0322, -4.8303, 0.28 ) }
    dend_19 { pt3dadd( 24.0097, -68.944, -4.73497, 0.55 ) }
    dend_19 { pt3dadd( 24.6245, -69.4273, -4.61524, 0.55 ) }
    dend_19 { pt3dadd( 25.9881, -70.3763, -4.27528, 0.55 ) }
    dend_19 { pt3dadd( 29.7728, -72.7954, -3.21302, 0.55 ) }
    dend_19 { pt3dadd( 30.955, -73.4996, -2.83453, 0.55 ) }
    dend_19 { pt3dadd( 31.857, -73.9863, -2.52706, 0.55 ) }
    dend_19 { pt3dadd( 33.6673, -74.8925, -1.81015, 0.55 ) }
    dend_19 { pt3dadd( 35.3293, -75.7109, -1.08084, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.09329, -52.4671, 5.86378, 0.55 ) }
    dend_17 { pt3dadd( -7.67532, -53.2059, 5.99193, 0.55 ) }
    dend_17 { pt3dadd( -7.20002, -54.1953, 6.20647, 0.83 ) }
    dend_17 { pt3dadd( -6.82142, -55.0199, 6.38231, 0.28 ) }
    dend_17 { pt3dadd( -6.56984, -55.6287, 6.54228, 0.83 ) }
    dend_17 { pt3dadd( -6.06812, -57.0337, 7.04715, 0.28 ) }
    dend_17 { pt3dadd( -5.87223, -57.6013, 7.2628, 0.83 ) }
    dend_17 { pt3dadd( -5.49784, -58.6172, 7.66519, 0.55 ) }
    dend_17 { pt3dadd( -5.32234, -59.1238, 7.88958, 0.55 ) }
    dend_17 { pt3dadd( -5.00165, -60.2371, 8.40845, 0.55 ) }
    dend_17 { pt3dadd( -4.6396, -61.7487, 9.14731, 0.28 ) }
    dend_17 { pt3dadd( -4.5042, -62.463, 9.48261, 0.83 ) }
    dend_17 { pt3dadd( -4.32583, -63.2754, 9.90415, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.09329, -52.4671, 5.86378, 0.83 ) }
    dend_8 { pt3dadd( -7.39362, -53.4836, 5.24175, 0.83 ) }
    dend_8 { pt3dadd( -6.59072, -54.65, 4.52795, 1.11 ) }
    dend_8 { pt3dadd( -5.55363, -56.1567, 3.60594, 0.55 ) }
    dend_8 { pt3dadd( -4.10205, -58.2655, 2.31544, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -41.3116, -62.7855, 14.315, 0.28 ) }
    dend_5 { pt3dadd( -41.8162, -63.9271, 14.4427, 0.28 ) }
    dend_5 { pt3dadd( -41.9751, -64.2449, 14.4776, 0.83 ) }
    dend_5 { pt3dadd( -42.8142, -65.6096, 14.5759, 0.83 ) }
    dend_5 { pt3dadd( -43.4387, -66.4437, 14.5956, 0.55 ) }
    dend_5 { pt3dadd( -44.3831, -67.5492, 14.5757, 0.83 ) }
    dend_5 { pt3dadd( -45.0411, -68.2584, 14.5392, 0.83 ) }
    dend_5 { pt3dadd( -45.4999, -68.654, 14.5002, 0.83 ) }
    dend_5 { pt3dadd( -46.4358, -69.2555, 14.3708, 0.28 ) }
    dend_5 { pt3dadd( -47.1766, -69.5902, 14.2257, 0.55 ) }
    dend_5 { pt3dadd( -47.5613, -69.7019, 14.1225, 0.28 ) }
    dend_5 { pt3dadd( -48.0542, -69.7942, 13.9706, 0.55 ) }
    dend_5 { pt3dadd( -48.9751, -70.0225, 13.5452, 0.28 ) }
    dend_5 { pt3dadd( -49.7337, -70.3009, 13.1125, 0.55 ) }
    dend_5 { pt3dadd( -50.0611, -70.4561, 12.8972, 0.28 ) }
    dend_5 { pt3dadd( -51.0561, -71.0191, 12.1771, 0.55 ) }
    dend_5 { pt3dadd( -52.3415, -71.7948, 11.4599, 0.55 ) }
    dend_5 { pt3dadd( -54.2658, -73.124, 10.6822, 0.55 ) }
    dend_5 { pt3dadd( -55.1482, -73.8824, 10.508, 0.55 ) }
    dend_5 { pt3dadd( -55.6884, -74.4576, 10.5266, 0.28 ) }
    dend_5 { pt3dadd( -55.9347, -74.77, 10.5839, 0.83 ) }
    dend_5 { pt3dadd( -58.0745, -77.8855, 11.4376, 0.55 ) }
    dend_5 { pt3dadd( -58.5604, -78.6144, 11.7028, 0.83 ) }
    dend_5 { pt3dadd( -59.7079, -80.3037, 12.3959, 0.83 ) }
    dend_5 { pt3dadd( -60.6765, -81.7163, 12.9217, 0.28 ) }
    dend_5 { pt3dadd( -61.2804, -82.5904, 13.1885, 0.28 ) }
    dend_5 { pt3dadd( -62.028, -83.6177, 13.4484, 0.55 ) }
    dend_5 { pt3dadd( -63.4127, -85.5102, 13.7506, 0.28 ) }
    dend_5 { pt3dadd( -64.1324, -86.3951, 13.8963, 0.55 ) }
    dend_5 { pt3dadd( -64.6333, -86.9427, 13.9846, 0.55 ) }
    dend_5 { pt3dadd( -65.5828, -87.8364, 14.1073, 0.83 ) }
    dend_5 { pt3dadd( -67.0815, -89.0645, 14.1898, 0.55 ) }
    dend_5 { pt3dadd( -68.0211, -89.7601, 14.1689, 0.55 ) }
    dend_5 { pt3dadd( -69.0354, -90.3914, 13.9885, 0.28 ) }
    dend_5 { pt3dadd( -70.0024, -90.8816, 13.7149, 0.55 ) }
    dend_5 { pt3dadd( -70.6151, -91.1448, 13.4692, 0.55 ) }
    dend_5 { pt3dadd( -71.7522, -91.5831, 12.8959, 0.28 ) }
    dend_5 { pt3dadd( -72.4564, -91.8435, 12.5317, 0.55 ) }
    dend_5 { pt3dadd( -73.6451, -92.2662, 11.9861, 0.28 ) }
    dend_5 { pt3dadd( -74.6148, -92.6271, 11.5795, 0.83 ) }
    dend_5 { pt3dadd( -76.1115, -93.207, 10.9913, 0.28 ) }
    dend_5 { pt3dadd( -77.4111, -93.7785, 10.5166, 0.83 ) }
    dend_5 { pt3dadd( -78.9108, -94.4922, 10.041, 0.28 ) }
    dend_5 { pt3dadd( -79.7038, -94.9115, 9.79568, 0.55 ) }
    dend_5 { pt3dadd( -80.3807, -95.3448, 9.60161, 0.28 ) }
    dend_5 { pt3dadd( -81.4161, -96.0919, 9.34077, 0.55 ) }
    dend_5 { pt3dadd( -82.3241, -96.8151, 9.13593, 0.28 ) }
    dend_5 { pt3dadd( -83.2804, -97.6708, 8.97459, 0.55 ) }
    dend_5 { pt3dadd( -83.8983, -98.2884, 8.89279, 0.28 ) }
    dend_5 { pt3dadd( -85.0425, -99.4953, 8.80262, 0.83 ) }
    dend_5 { pt3dadd( -86.2471, -100.832, 8.79151, 0.55 ) }
    dend_5 { pt3dadd( -86.5742, -101.217, 8.8117, 0.55 ) }
    dend_5 { pt3dadd( -87.972, -102.823, 8.98692, 0.28 ) }
    dend_5 { pt3dadd( -88.817, -103.811, 9.16347, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 94/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -41.3116, -62.7855, 14.315, 0.55 ) }
    dend_4 { pt3dadd( -43.1503, -65.8959, 13.5707, 0.55 ) }
    dend_4 { pt3dadd( -43.9697, -67.0798, 13.3686, 0.55 ) }
    dend_4 { pt3dadd( -45.4355, -69.1003, 12.7876, 0.83 ) }
    dend_4 { pt3dadd( -46.8019, -70.9874, 12.1653, 0.55 ) }
    dend_4 { pt3dadd( -47.3225, -71.8259, 11.8683, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -48.8789, -74.615, 10.8856, 0.55 ) }
    dend_4 { pt3dadd( -49.8497, -76.3488, 10.2608, 1.11 ) }
    dend_4 { pt3dadd( -51.2489, -79.2037, 9.1175, 0.55 ) }
    dend_4 { pt3dadd( -51.8798, -80.5828, 8.53267, 1.11 ) }
    dend_4 { pt3dadd( -53.0172, -83.3701, 7.30882, 0.55 ) }
    dend_4 { pt3dadd( -53.3402, -84.279, 6.91182, 1.11 ) }
    dend_4 { pt3dadd( -54.219, -87.092, 5.77176, 0.28 ) }
    dend_4 { pt3dadd( -54.4606, -87.7158, 5.50178, 0.55 ) }
    dend_4 { pt3dadd( -55.2989, -89.5576, 4.67965, 0.28 ) }
    dend_4 { pt3dadd( -55.7562, -90.4176, 4.23462, 0.55 ) }
    dend_4 { pt3dadd( -56.427, -91.567, 3.57064, 0.55 ) }
    dend_4 { pt3dadd( -57.9935, -94.3045, 1.91983, 0.55 ) }
    dend_4 { pt3dadd( -59.1048, -96.5881, 0.554451, 1.11 ) }
    dend_4 { pt3dadd( -60.2061, -99.1323, -0.979439, 0.55 ) }
    dend_4 { pt3dadd( -60.6561, -100.269, -1.6522, 1.11 ) }
    dend_4 { pt3dadd( -61.5404, -102.53, -3.00308, 0.28 ) }
    dend_4 { pt3dadd( -61.8541, -103.27, -3.46798, 0.83 ) }
    dend_4 { pt3dadd( -63.0329, -106.043, -5.24871, 0.28 ) }
    dend_4 { pt3dadd( -63.5099, -107.102, -5.88815, 0.83 ) }
    dend_4 { pt3dadd( -64.303, -108.738, -6.93892, 0.83 ) }
    dend_4 { pt3dadd( -65.7993, -111.378, -8.83239, 0.28 ) }
    dend_4 { pt3dadd( -66.8233, -113.042, -10.0745, 0.83 ) }
    dend_4 { pt3dadd( -68.8328, -116.104, -12.4732, 0.28 ) }
    dend_4 { pt3dadd( -69.7548, -117.359, -13.5172, 0.83 ) }
    dend_4 { pt3dadd( -70.9861, -119.08, -14.9826, 0.28 ) }
    dend_4 { pt3dadd( -72.3086, -120.856, -16.6127, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 26/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.53246, 126.091, -2.21209, 0.55 ) }
    dend_35 { pt3dadd( 3.4285, 128.315, -2.43629, 0.55 ) }
    dend_35 { pt3dadd( 2.65948, 129.992, -2.57183, 0.55 ) }
    dend_35 { pt3dadd( 1.88451, 132.01, -2.70324, 0.83 ) }
    dend_35 { pt3dadd( 1.14337, 134.177, -2.81745, 0.28 ) }
    dend_35 { pt3dadd( 0.428707, 136.312, -2.90085, 0.55 ) }
    dend_35 { pt3dadd( -5.0047E-4, 137.688, -2.91975, 0.83 ) }
    dend_35 { pt3dadd( -0.695687, 140.206, -2.90522, 0.28 ) }
    dend_35 { pt3dadd( -1.21183, 142.841, -2.92479, 0.55 ) }
    dend_35 { pt3dadd( -1.40604, 144.323, -2.9377, 0.55 ) }
    dend_35 { pt3dadd( -1.51246, 145.636, -2.93986, 0.55 ) }
    dend_35 { pt3dadd( -1.63124, 147.982, -2.95479, 0.28 ) }
    dend_35 { pt3dadd( -1.66961, 149.626, -2.96369, 0.55 ) }
    dend_35 { pt3dadd( -1.68459, 152.26, -3.07119, 0.28 ) }
    dend_35 { pt3dadd( -1.67913, 153.083, -3.12722, 0.55 ) }
    dend_35 { pt3dadd( -1.55616, 155.613, -3.39842, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 42/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.53246, 126.091, -2.21209, 0.28 ) }
    dend_34 { pt3dadd( 2.92726, 125.776, -2.04014, 0.28 ) }
    dend_34 { pt3dadd( 2.23979, 125.642, -1.96649, 0.28 ) }
    dend_34 { pt3dadd( 1.37112, 125.472, -1.87344, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 19.3628, -61.7191, -32.914, 0.28 ) }
    dend_24 { pt3dadd( 19.2359, -63.824, -35.7157, 0.28 ) }
    dend_24 { pt3dadd( 19.1654, -64.2557, -36.3647, 0.55 ) }
    dend_24 { pt3dadd( 18.9842, -65.6822, -38.6108, 0.28 ) }
    dend_24 { pt3dadd( 18.8578, -66.7815, -40.4855, 0.55 ) }
    dend_24 { pt3dadd( 18.7607, -67.7619, -42.356, 0.55 ) }
    dend_24 { pt3dadd( 18.7149, -69.4741, -45.8038, 0.28 ) }
    dend_24 { pt3dadd( 18.7258, -70.1109, -47.3578, 0.55 ) }
    dend_24 { pt3dadd( 18.7665, -70.9406, -49.467, 0.28 ) }
    dend_24 { pt3dadd( 18.8878, -71.4064, -50.6231, 0.55 ) }
    dend_24 { pt3dadd( 19.6186, -73.2314, -54.9251, 0.28 ) }
    dend_24 { pt3dadd( 19.9379, -74.0718, -56.7745, 0.83 ) }
    dend_24 { pt3dadd( 20.5969, -75.8523, -60.3088, 0.28 ) }
    dend_24 { pt3dadd( 20.7673, -76.3751, -61.2967, 1.38 ) }
    dend_24 { pt3dadd( 21.3187, -78.7166, -65.6905, 0.28 ) }
    dend_24 { pt3dadd( 21.4038, -79.0982, -66.3813, 0.55 ) }
    dend_24 { pt3dadd( 21.844, -81.1259, -69.9644, 0.28 ) }
    dend_24 { pt3dadd( 21.9807, -81.8095, -71.162, 1.66 ) }
    dend_24 { pt3dadd( 22.4119, -83.9239, -74.7947, 0.28 ) }
    dend_24 { pt3dadd( 22.5244, -84.7545, -76.2251, 0.55 ) }
    dend_24 { pt3dadd( 22.5638, -85.7705, -78.0157, 0.28 ) }
    dend_24 { pt3dadd( 22.5898, -86.2248, -78.8837, 0.55 ) }
    dend_24 { pt3dadd( 22.6847, -86.9543, -80.5418, 0.28 ) }
    dend_24 { pt3dadd( 22.5714, -87.1781, -81.194, 0.83 ) }
    dend_24 { pt3dadd( 21.352, -88.2074, -84.5935, 0.28 ) }
    dend_24 { pt3dadd( 20.8888, -88.4923, -85.5804, 0.55 ) }
    dend_24 { pt3dadd( 19.298, -89.2675, -88.6836, 0.28 ) }
    dend_24 { pt3dadd( 18.2435, -89.7575, -90.6467, 1.11 ) }
    dend_24 { pt3dadd( 14.2327, -91.7523, -98.529, 0.28 ) }
    dend_24 { pt3dadd( 13.4353, -92.2062, -100.252, 0.55 ) }
    dend_24 { pt3dadd( 12.248, -92.9474, -103.002, 0.28 ) }
    dend_24 { pt3dadd( 10.9058, -93.9612, -106.348, 0.83 ) }
    dend_24 { pt3dadd( 9.6416, -95.1777, -109.882, 0.28 ) }
    dend_24 { pt3dadd( 8.73964, -96.2148, -112.724, 0.83 ) }
    dend_24 { pt3dadd( 6.8001, -99.4199, -121.477, 0.28 ) }
    dend_24 { pt3dadd( 6.60523, -99.8003, -122.502, 0.55 ) }
    dend_24 { pt3dadd( 5.86546, -101.358, -126.655, 0.28 ) }
    dend_24 { pt3dadd( 5.72562, -101.65, -127.395, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 19.3628, -61.7191, -32.914, 0.28 ) }
    dend_23 { pt3dadd( 21.2508, -60.8946, -34.3521, 0.28 ) }
    dend_23 { pt3dadd( 21.8896, -60.4943, -35.4863, 0.55 ) }
    dend_23 { pt3dadd( 22.3299, -60.1472, -36.6118, 0.28 ) }
    dend_23 { pt3dadd( 22.5925, -59.9559, -37.3163, 0.55 ) }
    dend_23 { pt3dadd( 23.6038, -59.279, -40.1249, 0.28 ) }
    dend_23 { pt3dadd( 24.4122, -58.8678, -42.2581, 0.83 ) }
    dend_23 { pt3dadd( 25.8332, -58.0941, -47.2353, 0.28 ) }
    dend_23 { pt3dadd( 25.9627, -58.0193, -47.8254, 0.55 ) }
    dend_23 { pt3dadd( 26.2047, -57.8916, -49.3524, 0.28 ) }
    dend_23 { pt3dadd( 26.2693, -57.8582, -50.1172, 0.83 ) }
    dend_23 { pt3dadd( 26.1589, -57.8478, -52.0767, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 35.3293, -75.7109, -1.08084, 0.55 ) }
    dend_21 { pt3dadd( 37.2363, -77.3969, -1.84614, 0.55 ) }
    dend_21 { pt3dadd( 38.1959, -78.2526, -2.21602, 0.55 ) }
    dend_21 { pt3dadd( 40.6237, -80.3425, -2.90436, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 43.0624, -82.3569, -3.48684, 0.83 ) }
    dend_21 { pt3dadd( 45.4027, -84.2899, -4.0458, 0.28 ) }
    dend_21 { pt3dadd( 47.0123, -85.6195, -4.43026, 0.28 ) }
    dend_21 { pt3dadd( 47.5788, -86.1198, -4.56978, 0.55 ) }
    dend_21 { pt3dadd( 49.8945, -88.0015, -4.92125, 0.28 ) }
    dend_21 { pt3dadd( 50.4276, -88.4114, -4.90521, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 35.3293, -75.7109, -1.08084, 0.28 ) }
    dend_20 { pt3dadd( 35.6686, -77.6055, -0.720662, 0.28 ) }
    dend_20 { pt3dadd( 35.887, -78.8248, -0.488841, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -4.10205, -58.2655, 2.31544, 0.55 ) }
    dend_16 { pt3dadd( -3.38956, -60.5596, 2.40109, 0.55 ) }
    dend_16 { pt3dadd( -2.41314, -62.785, 2.56225, 0.55 ) }
    dend_16 { pt3dadd( -1.99336, -63.5387, 2.71745, 0.55 ) }
    dend_16 { pt3dadd( -1.07823, -65.2047, 3.12408, 0.28 ) }
    dend_16 { pt3dadd( -0.508627, -66.1827, 3.40538, 0.83 ) }
    dend_16 { pt3dadd( 1.23288, -69.0798, 4.24882, 0.28 ) }
    dend_16 { pt3dadd( 2.58905, -71.1823, 5.03002, 0.83 ) }
    dend_16 { pt3dadd( 5.15749, -75.3334, 6.60691, 0.28 ) }
    dend_16 { pt3dadd( 5.80806, -76.4678, 7.07265, 0.83 ) }
    dend_16 { pt3dadd( 7.41799, -79.463, 8.31413, 0.28 ) }
    dend_16 { pt3dadd( 8.12985, -80.9354, 8.89377, 0.83 ) }
    dend_16 { pt3dadd( 9.33623, -83.7779, 9.96165, 0.28 ) }
    dend_16 { pt3dadd( 10.7558, -87.6201, 11.3701, 0.83 ) }
    dend_16 { pt3dadd( 11.7489, -90.7459, 12.3845, 0.55 ) }
    dend_16 { pt3dadd( 12.1864, -92.1897, 12.848, 0.55 ) }
    dend_16 { pt3dadd( 12.5813, -93.6332, 13.2828, 1.11 ) }
    dend_16 { pt3dadd( 13.5972, -97.2046, 14.3555, 0.55 ) }
    dend_16 { pt3dadd( 14.2291, -99.1029, 14.8336, 0.28 ) }
    dend_16 { pt3dadd( 14.3871, -99.4296, 14.911, 0.55 ) }
    dend_16 { pt3dadd( 15.5989, -101.829, 15.2498, 0.28 ) }
    dend_16 { pt3dadd( 16.2238, -102.874, 15.3803, 0.83 ) }
    dend_16 { pt3dadd( 17.5256, -104.742, 15.5367, 0.28 ) }
    dend_16 { pt3dadd( 18.5869, -106.002, 15.6038, 0.55 ) }
    dend_16 { pt3dadd( 20.7415, -108.403, 15.7487, 0.55 ) }
    dend_16 { pt3dadd( 23.4396, -111.353, 15.8685, 0.55 ) }
    dend_16 { pt3dadd( 25.4409, -113.495, 15.8715, 0.55 ) }
    dend_16 { pt3dadd( 26.4104, -114.534, 15.876, 0.55 ) }
    dend_16 { pt3dadd( 29.9805, -118.109, 15.8182, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.10205, -58.2655, 2.31544, 0.55 ) }
    dend_9 { pt3dadd( -4.89168, -59.4885, 1.72127, 0.55 ) }
    dend_9 { pt3dadd( -5.08689, -60.0275, 1.49862, 0.83 ) }
    dend_9 { pt3dadd( -5.26745, -60.7728, 1.25305, 0.55 ) }
    dend_9 { pt3dadd( -5.38691, -61.4404, 1.06898, 0.83 ) }
    dend_9 { pt3dadd( -5.6037, -62.6519, 0.734929, 0.28 ) }
    dend_9 { pt3dadd( -5.71911, -63.2969, 0.557096, 0.83 ) }
    dend_9 { pt3dadd( -5.89794, -65.174, 0.104442, 0.83 ) }
    dend_9 { pt3dadd( -5.9566, -66.5902, -0.22912, 0.28 ) }
    dend_9 { pt3dadd( -5.92826, -67.7669, -0.4761, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 48/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.55616, 155.613, -3.39842, 0.55 ) }
    dend_39 { pt3dadd( -2.70103, 158.164, -3.97434, 0.55 ) }
    dend_39 { pt3dadd( -3.6585, 159.994, -4.4946, 0.55 ) }
    dend_39 { pt3dadd( -4.41665, 161.311, -4.99065, 0.55 ) }
    dend_39 { pt3dadd( -5.40771, 162.948, -5.75929, 0.28 ) }
    dend_39 { pt3dadd( -6.69314, 165.245, -6.88206, 0.55 ) }
    dend_39 { pt3dadd( -7.45385, 166.591, -7.59568, 0.55 ) }
    dend_39 { pt3dadd( -8.654, 168.814, -8.87869, 0.28 ) }
    dend_39 { pt3dadd( -9.50221, 170.393, -9.80843, 1.11 ) }
    dend_39 { pt3dadd( -10.177, 171.873, -10.7177, 0.55 ) }
    dend_39 { pt3dadd( -10.9517, 173.957, -12.1274, 0.55 ) }
    dend_39 { pt3dadd( -11.7529, 176.2, -13.7687, 0.55 ) }
    dend_39 { pt3dadd( -12.075, 177.486, -14.6827, 0.28 ) }
    dend_39 { pt3dadd( -12.1803, 178.308, -15.3344, 0.55 ) }
    dend_39 { pt3dadd( -12.5964, 181.248, -17.9307, 0.28 ) }
    dend_39 { pt3dadd( -12.7623, 182.093, -18.7048, 0.83 ) }
    dend_39 { pt3dadd( -13.1922, 183.968, -20.4215, 0.55 ) }
    dend_39 { pt3dadd( -13.625, 185.612, -21.9191, 0.55 ) }
    dend_39 { pt3dadd( -14.6071, 188.909, -24.7865, 0.55 ) }
    dend_39 { pt3dadd( -15.3127, 191.028, -26.5198, 0.28 ) }
    dend_39 { pt3dadd( -16.0923, 193.163, -28.1326, 0.28 ) }
    dend_39 { pt3dadd( -16.6939, 194.883, -29.3777, 0.55 ) }
    dend_39 { pt3dadd( -17.7709, 198.258, -31.7584, 0.28 ) }
    dend_39 { pt3dadd( -18.4461, 200.204, -33.1036, 0.55 ) }
    dend_39 { pt3dadd( -19.1843, 202.432, -34.4541, 0.55 ) }
    dend_39 { pt3dadd( -19.634, 203.937, -35.3275, 0.28 ) }
    dend_39 { pt3dadd( -20.0169, 205.146, -36.0689, 0.55 ) }
    dend_39 { pt3dadd( -20.7495, 207.272, -37.3425, 0.28 ) }
    dend_39 { pt3dadd( -21.3064, 209.042, -38.2353, 0.55 ) }
    dend_39 { pt3dadd( -21.7293, 210.527, -38.9613, 0.28 ) }
    dend_39 { pt3dadd( -21.9391, 211.463, -39.4292, 0.55 ) }
    dend_39 { pt3dadd( -22.2594, 213.175, -40.3599, 0.28 ) }
    dend_39 { pt3dadd( -22.3828, 213.897, -40.7592, 0.55 ) }
    dend_39 { pt3dadd( -22.5334, 215.352, -41.6236, 0.55 ) }
    dend_39 { pt3dadd( -22.5444, 217.191, -42.9437, 0.55 ) }
    dend_39 { pt3dadd( -22.3954, 219.569, -44.9794, 0.28 ) }
    dend_39 { pt3dadd( -22.3211, 220.127, -45.4973, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.55616, 155.613, -3.39842, 0.55 ) }
    dend_36 { pt3dadd( -1.61634, 156.238, -3.6215, 0.55 ) }
    dend_36 { pt3dadd( -1.89216, 159.099, -4.64387, 0.55 ) }
    dend_36 { pt3dadd( -2.02869, 160.515, -5.14994, 0.28 ) }
    dend_36 { pt3dadd( -2.19819, 162.274, -5.77821, 0.83 ) }
    dend_36 { pt3dadd( -2.50594, 165.466, -6.91898, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 91/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.92826, -67.7669, -0.4761, 0.83 ) }
    dend_11 { pt3dadd( -5.98122, -70.1786, -0.599964, 0.83 ) }
    dend_11 { pt3dadd( -6.00806, -71.2493, -0.644205, 1.11 ) }
    dend_11 { pt3dadd( -6.02448, -73.3532, -0.841972, 0.55 ) }
    dend_11 { pt3dadd( -6.02215, -76.3452, -1.20227, 1.11 ) }
    dend_11 { pt3dadd( -6.09316, -78.1531, -1.43547, 0.55 ) }
    dend_11 { pt3dadd( -6.23693, -80.2652, -1.82459, 0.55 ) }
    dend_11 { pt3dadd( -6.30572, -81.7595, -2.19898, 0.83 ) }
    dend_11 { pt3dadd( -6.39711, -83.8383, -2.88231, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( -6.39711, -83.8383, -2.88231, 0.83 ) }
    dend_11 { pt3dadd( -6.71542, -86.0487, -4.19435, 0.83 ) }
    dend_11 { pt3dadd( -7.11086, -88.6988, -5.97876, 0.28 ) }
    dend_11 { pt3dadd( -7.28905, -89.9262, -6.85177, 0.83 ) }
    dend_11 { pt3dadd( -7.67773, -91.6209, -7.9742, 0.83 ) }
    dend_11 { pt3dadd( -8.28872, -93.835, -9.39633, 0.28 ) }
    dend_11 { pt3dadd( -8.45435, -94.3859, -9.75105, 0.83 ) }
    dend_11 { pt3dadd( -8.77571, -95.3702, -10.3917, 0.83 ) }
    dend_11 { pt3dadd( -9.18328, -96.3849, -10.9765, 0.83 ) }
    dend_11 { pt3dadd( -10.0288, -98.3813, -12.0794, 0.83 ) }
    dend_11 { pt3dadd( -11.2876, -101.687, -13.7674, 0.28 ) }
    dend_11 { pt3dadd( -11.4633, -102.275, -14.0378, 0.55 ) }
    dend_11 { pt3dadd( -11.8517, -103.901, -14.8374, 0.28 ) }
    dend_11 { pt3dadd( -12.1695, -105.322, -15.5683, 0.83 ) }
    dend_11 { pt3dadd( -12.4976, -107.117, -16.54, 0.28 ) }
    dend_11 { pt3dadd( -12.6534, -108.21, -17.1102, 0.83 ) }
    dend_11 { pt3dadd( -12.8194, -109.886, -17.7711, 0.83 ) }
    dend_11 { pt3dadd( -12.8769, -112.268, -18.2537, 0.28 ) }
    dend_11 { pt3dadd( -12.8547, -113.208, -18.2751, 0.55 ) }
    dend_11 { pt3dadd( -12.7336, -114.734, -18.0751, 0.28 ) }
    dend_11 { pt3dadd( -12.5281, -116.829, -17.5228, 0.83 ) }
    dend_11 { pt3dadd( -12.2795, -119.502, -16.3385, 0.28 ) }
    dend_11 { pt3dadd( -11.7112, -124.603, -13.4676, 0.83 ) }
    dend_11 { pt3dadd( -11.5537, -126.411, -12.3576, 0.28 ) }
    dend_11 { pt3dadd( -11.5419, -128.073, -11.4017, 0.83 ) }
    dend_11 { pt3dadd( -11.5551, -129.473, -10.5412, 0.83 ) }
    dend_11 { pt3dadd( -11.7054, -132.761, -8.56014, 0.28 ) }
    dend_11 { pt3dadd( -11.859, -133.619, -8.13534, 0.83 ) }
    dend_11 { pt3dadd( -12.4455, -135.812, -7.44343, 0.83 ) }
    dend_11 { pt3dadd( -13.2689, -138.655, -6.21355, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.92826, -67.7669, -0.4761, 0.28 ) }
    dend_10 { pt3dadd( -4.43865, -69.3284, -1.15811, 0.28 ) }
    dend_10 { pt3dadd( -3.35037, -70.4692, -1.65638, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 33/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.50594, 165.466, -6.91898, 0.55 ) }
    dend_38 { pt3dadd( -2.95706, 167.202, -7.24382, 0.55 ) }
    dend_38 { pt3dadd( -3.38142, 168.79, -7.51535, 0.55 ) }
    dend_38 { pt3dadd( -3.82899, 170.542, -7.93881, 0.28 ) }
    dend_38 { pt3dadd( -4.16142, 171.69, -8.18276, 0.28 ) }
    dend_38 { pt3dadd( -4.38517, 172.329, -8.31474, 0.55 ) }
    dend_38 { pt3dadd( -4.89072, 173.764, -8.61035, 0.28 ) }
    dend_38 { pt3dadd( -5.37941, 174.929, -8.96972, 0.55 ) }
    dend_38 { pt3dadd( -6.36601, 176.773, -9.64247, 0.28 ) }
    dend_38 { pt3dadd( -7.1861, 178.125, -10.1596, 0.55 ) }
    dend_38 { pt3dadd( -8.17424, 179.648, -10.7778, 0.55 ) }
    dend_38 { pt3dadd( -9.32168, 181.266, -11.4865, 0.83 ) }
    dend_38 { pt3dadd( -11.1999, 183.698, -12.5782, 0.55 ) }
    dend_38 { pt3dadd( -11.8618, 184.508, -12.9947, 0.28 ) }
    dend_38 { pt3dadd( -12.3138, 185.058, -13.2758, 0.28 ) }
    dend_38 { pt3dadd( -12.6234, 185.438, -13.5072, 0.55 ) }
    dend_38 { pt3dadd( -13.7047, 186.77, -14.3068, 0.28 ) }
    dend_38 { pt3dadd( -14.1328, 187.28, -14.6031, 0.55 ) }
    dend_38 { pt3dadd( -15.054, 188.498, -15.1733, 0.28 ) }
    dend_38 { pt3dadd( -15.7586, 189.442, -15.5043, 0.55 ) }
    dend_38 { pt3dadd( -17.4063, 191.538, -15.9689, 0.28 ) }
    dend_38 { pt3dadd( -18.0541, 192.305, -16.0169, 0.55 ) }
    dend_38 { pt3dadd( -19.1799, 193.515, -16.0429, 0.28 ) }
    dend_38 { pt3dadd( -20.3702, 194.635, -16.0258, 0.55 ) }
    dend_38 { pt3dadd( -22.1286, 196.208, -15.7442, 0.28 ) }
    dend_38 { pt3dadd( -23.311, 197.215, -15.4592, 0.83 ) }
    dend_38 { pt3dadd( -24.8001, 198.45, -15.0654, 0.55 ) }
    dend_38 { pt3dadd( -27.6067, 200.714, -14.4252, 0.28 ) }
    dend_38 { pt3dadd( -28.5473, 201.455, -14.2203, 0.55 ) }
    dend_38 { pt3dadd( -31.159, 203.463, -13.8188, 0.28 ) }
    dend_38 { pt3dadd( -32.4922, 204.493, -13.7392, 0.55 ) }
    dend_38 { pt3dadd( -34.286, 205.963, -13.6455, 0.28 ) }
    dend_38 { pt3dadd( -34.8586, 206.479, -13.5843, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.50594, 165.466, -6.91898, 0.55 ) }
    dend_37 { pt3dadd( -2.53237, 166.992, -7.11618, 0.55 ) }
    dend_37 { pt3dadd( -2.61431, 169.972, -7.48446, 0.28 ) }
    dend_37 { pt3dadd( -2.7196, 171.814, -7.81939, 0.55 ) }
    dend_37 { pt3dadd( -2.88659, 174.305, -8.30626, 0.28 ) }
    dend_37 { pt3dadd( -2.99342, 176.143, -8.73668, 0.55 ) }
    dend_37 { pt3dadd( -3.12215, 178.357, -9.27173, 0.28 ) }
    dend_37 { pt3dadd( -3.39903, 181.637, -10.2389, 0.55 ) }
    dend_37 { pt3dadd( -3.77858, 184.888, -11.2604, 0.28 ) }
    dend_37 { pt3dadd( -4.07248, 187.044, -11.9053, 0.55 ) }
    dend_37 { pt3dadd( -4.50886, 190.076, -12.7226, 0.28 ) }
    dend_37 { pt3dadd( -4.89619, 192.56, -13.3592, 0.55 ) }
    dend_37 { pt3dadd( -5.63014, 196.998, -14.3345, 0.28 ) }
    dend_37 { pt3dadd( -6.04231, 199.597, -14.8031, 0.55 ) }
    dend_37 { pt3dadd( -6.49985, 202.514, -15.2707, 0.28 ) }
    dend_37 { pt3dadd( -6.81604, 204.711, -15.635, 0.28 ) }
    dend_37 { pt3dadd( -6.9904, 206.068, -15.8395, 0.28 ) }
    dend_37 { pt3dadd( -7.36904, 209.714, -16.5251, 0.55 ) }
    dend_37 { pt3dadd( -7.55494, 212.334, -17.0284, 0.55 ) }
    dend_37 { pt3dadd( -7.69396, 215.416, -17.6832, 0.28 ) }
    dend_37 { pt3dadd( -7.84331, 216.887, -18.0307, 0.28 ) }
    dend_37 { pt3dadd( -8.04975, 218.676, -18.4914, 0.28 ) }
    dend_37 { pt3dadd( -8.32351, 220.777, -19.0636, 0.28 ) }
    dend_37 { pt3dadd( -8.69921, 222.998, -19.6914, 0.83 ) }
    dend_37 { pt3dadd( -9.4052, 225.886, -20.3248, 0.28 ) }
    dend_37 { pt3dadd( -10.2482, 229.052, -20.6362, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -13.2689, -138.655, -6.21355, 0.55 ) }
    dend_13 { pt3dadd( -13.3655, -141.0, -6.23259, 0.55 ) }
    dend_13 { pt3dadd( -13.4315, -141.915, -6.24717, 0.55 ) }
    dend_13 { pt3dadd( -13.5136, -143.05, -6.20705, 0.83 ) }
    dend_13 { pt3dadd( -13.5165, -144.583, -6.14554, 0.83 ) }
    dend_13 { pt3dadd( -13.5266, -145.623, -6.10364, 0.55 ) }
    dend_13 { pt3dadd( -13.5231, -147.168, -5.97245, 0.83 ) }
    dend_13 { pt3dadd( -13.4741, -148.986, -5.76021, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( -13.3892, -150.858, -5.51083, 0.55 ) }
    dend_13 { pt3dadd( -13.2515, -153.035, -5.2324, 0.55 ) }
    dend_13 { pt3dadd( -13.0755, -155.753, -4.84798, 0.83 ) }
    dend_13 { pt3dadd( -12.9031, -158.2, -4.47829, 0.83 ) }
    dend_13 { pt3dadd( -12.771, -160.011, -4.18957, 0.83 ) }
    dend_13 { pt3dadd( -12.5397, -162.398, -3.81578, 0.83 ) }
    dend_13 { pt3dadd( -12.4121, -164.067, -3.5937, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -13.2689, -138.655, -6.21355, 0.55 ) }
    dend_12 { pt3dadd( -16.6787, -139.166, -8.51161, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.4121, -164.067, -3.5937, 0.83 ) }
    dend_15 { pt3dadd( -12.2518, -166.234, -2.72345, 0.83 ) }
    dend_15 { pt3dadd( -12.1614, -167.91, -1.92899, 0.83 ) }
    dend_15 { pt3dadd( -12.1232, -170.505, -0.600081, 0.83 ) }
    dend_15 { pt3dadd( -12.1281, -172.262, 0.251799, 0.28 ) }
    dend_15 { pt3dadd( -12.1183, -174.519, 1.3411, 0.83 ) }
    dend_15 { pt3dadd( -12.0766, -177.16, 2.52511, 0.83 ) }
    dend_15 { pt3dadd( -12.0477, -178.945, 3.31861, 0.28 ) }
    dend_15 { pt3dadd( -12.0953, -180.653, 4.03301, 0.83 ) }
    dend_15 { pt3dadd( -12.1848, -182.26, 4.57203, 0.55 ) }
    dend_15 { pt3dadd( -12.251, -184.185, 4.99445, 0.83 ) }
    dend_15 { pt3dadd( -12.3137, -186.761, 5.31244, 0.83 ) }
    dend_15 { pt3dadd( -12.3472, -188.741, 5.42335, 0.55 ) }
    dend_15 { pt3dadd( -12.3997, -190.788, 5.47508, 0.83 ) }
    dend_15 { pt3dadd( -12.5122, -193.656, 5.48315, 0.83 ) }
    dend_15 { pt3dadd( -12.7176, -196.38, 5.59076, 0.55 ) }
    dend_15 { pt3dadd( -12.8582, -197.673, 5.65473, 0.55 ) }
    dend_15 { pt3dadd( -13.1898, -200.115, 5.85307, 0.83 ) }
    dend_15 { pt3dadd( -13.5836, -202.485, 6.05966, 0.83 ) }
    dend_15 { pt3dadd( -13.9385, -204.411, 6.35338, 0.83 ) }
    dend_15 { pt3dadd( -14.626, -207.379, 7.02205, 0.55 ) }
    dend_15 { pt3dadd( -14.8404, -208.156, 7.23579, 0.55 ) }
    dend_15 { pt3dadd( -15.2273, -209.557, 7.71712, 0.55 ) }
    dend_15 { pt3dadd( -15.666, -211.011, 8.32293, 0.83 ) }
    dend_15 { pt3dadd( -16.5423, -214.129, 9.72864, 0.55 ) }
    dend_15 { pt3dadd( -16.9756, -215.651, 10.2694, 0.83 ) }
    dend_15 { pt3dadd( -17.3849, -217.082, 10.5963, 0.83 ) }
    dend_15 { pt3dadd( -17.9569, -219.053, 10.916, 0.28 ) }
    dend_15 { pt3dadd( -18.2197, -219.938, 11.014, 0.28 ) }
    dend_15 { pt3dadd( -19.0297, -222.62, 11.2879, 0.83 ) }
    dend_15 { pt3dadd( -20.1303, -225.957, 11.4023, 0.55 ) }
    dend_15 { pt3dadd( -20.5354, -227.296, 11.465, 0.55 ) }
    dend_15 { pt3dadd( -20.886, -228.421, 11.4887, 0.28 ) }
    dend_15 { pt3dadd( -21.1401, -229.12, 11.4881, 0.55 ) }
    dend_15 { pt3dadd( -22.2448, -231.432, 11.5191, 0.28 ) }
    dend_15 { pt3dadd( -22.9555, -232.569, 11.5739, 0.83 ) }
    dend_15 { pt3dadd( -23.5311, -233.486, 11.7475, 0.83 ) }
    dend_15 { pt3dadd( -24.723, -235.159, 12.0122, 0.28 ) }
    dend_15 { pt3dadd( -25.7, -236.353, 12.0912, 0.83 ) }
    dend_15 { pt3dadd( -27.204, -237.909, 11.9032, 0.28 ) }
    dend_15 { pt3dadd( -27.4125, -238.063, 11.8319, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -12.4121, -164.067, -3.5937, 0.55 ) }
    dend_14 { pt3dadd( -9.46023, -164.845, -1.00872, 0.55 ) }
    dend_14 { pt3dadd( -7.80268, -165.181, 0.169163, 0.28 ) }
    dend_14 { pt3dadd( -7.35398, -165.254, 0.434179, 0.83 ) }
    dend_14 { pt3dadd( -4.37015, -165.574, 1.91778, 0.55 ) }
    dend_14 { pt3dadd( -4.14453, -165.577, 2.02003, 0.83 ) }
    dend_14 { pt3dadd( -2.86681, -165.598, 2.59912, 0.28 ) }
    dend_14 { pt3dadd( -1.32319, -165.551, 3.1416, 0.55 ) }
    dend_14 { pt3dadd( -0.635475, -165.466, 3.41506, 0.55 ) }
    dend_14 { pt3dadd( 0.350364, -165.27, 3.69389, 0.28 ) }
    dend_14 { pt3dadd( 2.04212, -164.732, 3.70586, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_44 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_40 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_39 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_15 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_43 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_10 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_28 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 7
    dend_26 nseg = 5
    dend_44 nseg = 11
    dend_41 nseg = 5
    dend_32 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_40 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 3
    dend_24 nseg = 5
    dend_16 nseg = 3
    dend_39 nseg = 5
    dend_11 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_DBC_e5ab405051_0_0


