// Cell: cADpyr230_L4_SS_1afeb14f17_0_0
/*
{
  "id" : "cADpyr230_L4_SS_1afeb14f17_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.984759, -9.9799, -6.80323, 1.93637", "0.950247, -9.05028, -6.21218, 2.81477", "0.915735, -8.12066, -5.62113, 4.57156", "0.881223, -7.19104, -5.03008, 6.17758", "0.846711, -6.26142, -4.43903, 7.6644", "0.812198, -5.3318, -3.84798, 9.12262", "0.777686, -4.40218, -3.25693, 11.196", "0.743174, -3.47256, -2.66588, 13.4803", "0.708662, -2.54294, -2.07483, 13.9561", "0.674149, -1.61332, -1.48378, 14.1583", "0.639637, -0.683698, -0.892734, 13.7907", "0.605125, 0.245922, -0.301684, 12.8718", "0.570613, 1.17554, 0.289365, 11.9528", "0.5361, 2.10516, 0.880415, 11.5126", "0.501588, 3.03478, 1.47146, 11.1452", "0.467076, 3.9644, 2.06251, 10.5903", "0.432564, 4.89402, 2.65356, 9.88317", "0.398051, 5.82364, 3.24461, 9.18042", "0.363539, 6.75327, 3.83566, 8.47766", "0.329027, 7.68289, 4.42671, 6.39115", "0.294515, 8.61251, 5.01776, 3.6597" ]
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "2.97119, 6.54307, 4.4499, 1.11", "3.7763, 8.48807, 5.76564, 1.11", "4.40963, 10.0888, 5.87809, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "6.13723, 0.0864947, -6.88472, 2.22", "6.58345, 0.135312, -7.36003, 2.22", "7.22068, 1.63232, -9.62403, 1.94", "8.00133, 3.46625, -12.3976, 1.66", "8.27108, 4.09995, -13.3559, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.920203, 7.50212, 3.77249, 1.11", "-0.943382, 7.70109, 3.87445, 1.11", "-2.09306, 10.3168, 4.28141, 1.11", "-3.43134, 13.1715, 4.80384, 1.11", "-5.05728, 16.1509, 5.55271, 1.11", "-6.84845, 19.433, 6.37768, 1.11", "-8.87647, 23.1492, 7.31173, 0.83", "-9.66117, 24.4961, 7.69189, 0.83", "-10.7628, 26.272, 8.2864, 1.11", "-12.5961, 29.2709, 9.25097, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-2.71774, -8.88919, -3.03191, 3.32", "-3.57704, -11.4949, -3.86679, 3.32", "-3.85122, -16.9578, -4.10904, 2.22", "-4.17352, -23.3795, -4.3938, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.25136, -5.52239, -4.57593, 1.11", "-5.01895, -4.55189, -3.7497, 1.11", "-8.85331, -5.26467, -3.63372, 1.11", "-12.1338, -5.53796, -3.53088, 1.11", "-15.0312, -5.77934, -3.44004, 1.11", "-19.9265, -6.18717, -3.28657, 1.11", "-23.7583, -6.50639, -3.16643, 0.83", "-27.8797, -6.54568, -3.0401, 0.83", "-30.93, -6.20669, -2.96217, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999095343688
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.294515, 8.61251, 5.01776, 0.67", "-0.261977, 23.6022, 5.01776, 0.67", "-0.818469, 38.5919, 5.01776, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.40963, 10.0888, 5.87809, 1.11", "6.24008, 11.6592, 8.13778, 0.83", "7.17794, 12.4447, 9.25215, 0.83", "9.52601, 14.2633, 11.9189, 0.83", "12.0965, 16.1633, 14.8387, 0.83", "13.0086, 16.7802, 15.8311, 0.55", "14.2656, 17.6306, 17.1988, 0.83", "16.2107, 18.9034, 19.203, 0.83", "17.0848, 19.4223, 20.1302, 0.55", "19.2739, 20.5124, 22.347, 0.55", "20.4659, 21.0444, 23.4096, 0.55", "23.926, 24.5332, 29.1615, 0.55", "27.0836, 28.5599, 34.7498, 0.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "4.40963, 10.0888, 5.87809, 1.11", "5.13119, 11.7717, 6.39345, 0.55", "5.51857, 13.1297, 6.59206, 0.55", "6.20777, 15.2671, 6.73943, 0.28", "6.51592, 16.1488, 6.81205, 0.55", "7.05674, 17.5134, 6.96858, 0.28", "7.72715, 19.2149, 7.23051, 0.55", "8.47323, 21.1964, 7.61091, 0.55", "9.32497, 23.4754, 7.94836, 0.55", "9.91906, 25.1838, 8.07047, 0.55", "10.8737, 27.9085, 8.15757, 0.55", "11.477, 29.6251, 8.1654, 0.28", "11.9792, 30.9709, 8.11691, 0.55", "12.8668, 33.3508, 8.12984, 0.55", "13.5041, 35.2381, 8.19294, 0.55", "14.7707, 38.7278, 8.42322, 0.55", "15.2601, 39.9253, 8.5622, 0.55", "16.7438, 42.7927, 9.10369, 0.55", "19.0758, 46.6958, 10.1369, 0.83", "20.3363, 48.4758, 10.7198, 0.55", "22.2369, 50.7585, 11.5066, 0.83", "23.8873, 52.478, 12.0937, 0.83", "26.2989, 54.7094, 12.7805, 0.83", "28.1296, 56.2647, 13.2076, 0.83", "30.4692, 58.0445, 13.5547, 0.83", "32.5323, 59.5542, 13.8639, 0.83", "34.2298, 60.7964, 14.1338, 0.83", "36.5145, 62.4682, 14.488, 0.83", "40.0308, 65.0983, 15.1352, 0.55", "42.3805, 66.8084, 15.5497, 0.55", "43.3081, 67.5097, 15.7228, 0.55", "44.8836, 68.6776, 15.8867, 0.55", "46.1706, 69.6625, 15.8725, 0.28", "47.7463, 70.9143, 15.5649, 0.55", "50.0225, 72.723, 14.6405, 0.55", "51.0863, 73.6074, 14.0288, 0.55", "53.1953, 75.2606, 12.6027, 0.83", "54.0824, 75.9872, 11.8306, 0.55", "54.6942, 76.5417, 11.2016, 0.83", "60.583, 83.5094, 13.132, 0.83", "66.2319, 90.714, 14.948, 0.83", "72.9641, 96.3064, 18.0362, 0.83", "80.2808, 101.221, 20.8822, 0.83" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "8.27108, 4.09995, -13.3559, 1.66", "10.3719, 2.70496, -15.0927, 1.38" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "8.27108, 4.09995, -13.3559, 1.66", "8.68923, 6.76391, -14.8063, 1.11", "9.28826, 10.5802, -16.8842, 1.11", "9.59939, 12.5624, -17.9634, 1.11" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-12.5961, 29.2709, 9.25097, 0.83", "-12.3711, 32.537, 10.7099, 0.83", "-12.2095, 35.0119, 11.7592, 0.83", "-11.8502, 38.5052, 13.0363, 0.83", "-11.4375, 43.0331, 14.6439, 0.83", "-11.2918, 45.9594, 15.628, 0.55", "-11.2056, 47.8923, 16.2181, 0.83", "-11.0839, 50.0374, 16.8329, 0.83", "-10.7687, 54.5403, 18.0737, 0.83", "-10.5232, 59.1559, 19.3105, 0.83", "-10.3401, 63.4099, 20.2103, 0.83", "-10.1659, 66.3532, 20.7714, 0.83", "-9.95074, 70.572, 21.6165, 0.83", "-9.84365, 72.9155, 22.1218, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-12.5961, 29.2709, 9.25097, 0.83", "-14.1117, 29.9895, 8.66951, 0.55", "-15.2126, 30.4383, 8.19964, 0.55", "-16.1904, 30.7916, 7.76948, 0.28", "-17.2006, 31.0676, 7.34197, 0.55", "-19.5969, 31.5516, 6.36776, 0.55", "-21.0514, 31.7411, 5.77305, 0.28", "-21.3444, 31.7385, 5.64992, 0.55", "-22.2122, 31.6646, 5.34268, 0.55", "-24.3907, 31.4397, 4.74228, 0.55", "-26.3747, 31.2199, 4.28305, 0.55", "-27.5277, 31.1031, 4.14383, 0.55", "-28.8382, 31.0664, 4.09016, 0.55", "-30.9772, 31.0904, 4.06679, 0.28", "-33.1185, 31.1085, 4.07596, 0.55", "-35.6432, 31.1129, 4.0664, 0.55", "-38.6447, 31.1583, 4.05743, 0.28", "-40.0856, 31.1972, 4.01307, 0.55", "-41.6781, 31.2691, 3.92514, 0.55", "-44.6057, 31.3956, 3.72937, 0.55", "-47.5649, 31.4866, 3.49687, 0.55", "-50.3639, 31.6366, 3.29683, 0.28", "-51.8679, 31.6811, 3.15281, 0.28", "-53.5206, 31.6689, 3.03199, 0.55", "-55.789, 31.6542, 2.89418, 0.55", "-57.7069, 31.6432, 2.79185, 0.55", "-60.5065, 31.5599, 2.59761, 0.55", "-63.2614, 31.2811, 2.28723, 0.55", "-65.9859, 30.9883, 2.0055, 0.55", "-67.8284, 30.7496, 1.76936, 0.55", "-68.9348, 30.5962, 1.61086, 0.55", "-71.1862, 30.253, 1.2568, 0.55", "-73.8469, 29.7406, 0.72262, 0.55", "-76.2295, 29.2341, 0.201148, 0.55", "-79.1487, 28.4639, -0.480846, 0.55", "-81.8456, 27.5916, -1.12398, 0.55", "-83.1951, 27.0158, -1.45727, 0.28", "-84.3134, 26.4635, -1.72176, 0.55", "-85.9766, 25.5361, -2.12991, 0.55", "-86.7684, 25.0048, -2.33988, 0.28", "-88.0907, 24.1355, -2.64635, 0.28", "-90.6709, 22.5762, -3.19227, 0.55", "-93.4339, 20.9766, -3.70704, 0.28", "-94.963, 20.1189, -4.02546, 0.28", "-95.7709, 19.6383, -4.18427, 0.55", "-99.2636, 17.5608, -4.82124, 0.55", "-100.017, 17.076, -4.95698, 0.55", "-101.888, 15.6919, -5.26378, 0.55", "-103.509, 14.2568, -5.50784, 0.55", "-105.291, 12.521, -5.77581, 0.55", "-106.845, 10.8365, -5.99611, 0.55", "-107.873, 9.55194, -6.17782, 0.55", "-109.898, 7.26983, -6.7407, 0.55", "-110.673, 6.46738, -7.02653, 0.55", "-111.544, 5.65559, -7.42878, 0.28", "-112.901, 4.54965, -8.16676, 0.55", "-114.727, 3.18551, -9.26436, 0.55", "-117.222, 1.65356, -10.8283, 0.55", "-118.953, 0.795194, -11.9447, 0.55", "-120.618, -0.0151548, -13.0172, 0.28", "-121.387, -0.361046, -13.4726, 0.55", "-122.401, -0.820198, -13.9782, 0.28", "-123.226, -1.23522, -14.2712, 0.55", "-124.271, -1.86786, -14.5075, 0.28", "-125.3, -2.49921, -14.6907, 0.55", "-127.91, -4.2609, -15.0086, 0.55", "-130.133, -5.84142, -15.1868, 0.28", "-130.868, -6.41811, -15.2014, 0.55", "-131.937, -7.31583, -15.1546, 0.28", "-133.263, -8.48164, -14.9947, 0.55", "-141.098, -10.7538, -15.0103, 0.55", "-148.712, -13.7041, -15.2893, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-4.17352, -23.3795, -4.3938, 2.49", "-5.04838, -24.8558, -4.46245, 1.38" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.17352, -23.3795, -4.3938, 2.49", "-1.93033, -24.0256, -6.01184, 1.38", "-0.177913, -24.3589, -7.17517, 1.38", "2.63419, -24.8683, -8.99527, 0.83", "3.62858, -25.0341, -9.64704, 0.83", "7.03478, -25.2926, -12.1054, 0.55", "8.97862, -25.3848, -13.5269, 0.83", "11.3305, -25.3613, -15.2952, 0.55", "12.8368, -25.2636, -16.3375, 0.55", "14.567, -25.074, -17.4498, 0.55", "18.7116, -24.7189, -20.0352, 0.55", "20.9161, -24.6284, -21.3786, 0.28", "21.8722, -24.657, -21.9394, 0.55", "23.9443, -24.7842, -23.1665, 0.55", "25.4537, -24.9833, -24.0773, 0.28", "27.0544, -25.3346, -25.0251, 0.55", "30.2482, -26.1692, -26.8956, 0.55", "32.3024, -26.6409, -28.2717, 0.55", "35.525, -27.3747, -30.6042, 0.55", "37.8211, -27.9492, -32.3323, 0.55", "38.7695, -28.2008, -33.019, 0.55", "40.8881, -28.8362, -34.6699, 0.55", "43.1377, -29.6543, -36.4871, 0.55", "45.4806, -30.5585, -38.4727, 0.55", "46.6342, -31.0617, -39.4135, 0.55", "48.0719, -31.6589, -40.5792, 0.55", "50.5138, -32.7174, -42.5937, 0.28", "51.7231, -33.2356, -43.4481, 0.55", "52.4362, -33.4068, -43.8715, 0.55", "53.6193, -33.4437, -44.5496, 0.55", "55.4551, -33.3066, -45.546, 0.55", "58.566, -33.0065, -47.2878, 0.55", "61.0991, -32.648, -48.7149, 0.83", "64.0636, -32.2336, -50.4653, 0.55", "67.006, -31.9527, -52.4205, 0.55", "68.6614, -31.879, -53.6347, 0.55", "71.747, -31.9884, -56.094, 0.55", "73.8216, -32.2704, -58.0111, 0.83", "74.7778, -32.5204, -58.9606, 0.55", "76.7708, -33.2463, -61.0099, 0.83", "77.6538, -33.6025, -61.9726, 0.55", "79.4537, -34.3452, -63.9369, 0.83", "81.3141, -35.1518, -65.9278, 0.55", "82.6126, -35.7921, -67.3677, 0.55", "85.416, -37.2487, -70.6639, 0.28", "86.8415, -38.0377, -72.3337, 0.55", "87.825, -38.6617, -73.4864, 0.55", "89.6732, -40.0579, -75.5682, 0.28", "90.6833, -40.9724, -76.6292, 0.55", "91.7667, -42.1284, -77.5703, 0.28", "93.4423, -44.1057, -78.4454, 0.55", "94.6166, -45.5475, -78.9402, 0.55", "95.9135, -47.2026, -79.3606, 0.55", "97.6632, -49.3566, -79.5447, 0.55", "100.575, -52.6535, -79.4032, 0.28", "102.005, -54.1773, -79.1071, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-30.93, -6.20669, -2.96217, 0.83", "-35.1456, -4.69732, -1.9308, 0.83", "-36.9727, -3.85861, -1.28469, 0.83", "-40.2187, -2.14782, -0.0474859, 0.83", "-42.761, -0.703184, 0.92754, 0.83", "-44.3396, 0.242394, 1.51071, 0.83", "-49.5729, 3.37714, 3.44401, 0.83", "-53.0913, 5.59192, 4.91523, 0.83", "-55.8272, 7.4597, 6.2126, 0.55", "-56.6341, 8.04256, 6.65249, 0.83", "-58.7789, 9.89534, 7.8666, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-30.93, -6.20669, -2.96217, 0.83", "-34.3132, -6.5411, -3.89974, 0.55", "-35.5346, -6.76723, -4.25393, 0.28", "-36.2775, -6.91801, -4.50301, 0.55", "-38.0907, -7.37216, -5.28892, 0.28", "-40.6391, -8.28713, -6.50677, 0.55", "-43.7246, -9.55843, -7.94059, 0.55", "-45.4438, -10.2888, -8.70673, 0.83", "-47.8212, -11.3479, -9.66115, 0.55", "-50.794, -12.569, -10.8001, 0.55", "-54.4458, -13.8848, -12.0671, 0.55", "-58.1027, -15.0901, -13.173, 0.55", "-61.1203, -15.8063, -13.9638, 0.55", "-65.2904, -16.3692, -14.8887, 0.55", "-68.2501, -16.4573, -15.4677, 0.28", "-70.7345, -16.342, -15.9109, 0.55", "-72.8083, -16.0952, -16.3394, 0.55", "-75.9287, -15.6192, -17.0701, 0.55", "-77.7908, -15.4029, -17.5482, 0.55", "-81.1637, -15.047, -18.4647, 0.28", "-85.1655, -14.83, -19.5738, 0.55", "-88.184, -14.7217, -20.4985, 0.55", "-91.2746, -14.6848, -21.4734, 0.28", "-94.1691, -14.7398, -22.402, 0.55", "-95.6088, -14.767, -22.8547, 0.28", "-96.8723, -14.7973, -23.2179, 0.55", "-97.565, -14.7658, -23.402, 0.28", "-98.9845, -14.7734, -23.795, 0.55", "-100.939, -14.785, -24.3767, 0.28", "-103.399, -14.7691, -25.1957, 0.55", "-106.089, -14.7798, -25.9166, 0.28", "-109.334, -14.8655, -26.8128, 0.28", "-112.428, -14.9582, -27.6538, 0.55", "-114.421, -14.989, -28.2322, 0.28", "-117.564, -15.0176, -29.1648, 0.55", "-121.348, -15.0658, -30.4992, 0.55", "-125.702, -14.9112, -32.0677, 0.28", "-127.465, -14.9321, -32.8439, 0.55", "-128.913, -14.9635, -33.5161, 0.28", "-130.599, -15.0512, -34.2988, 0.55", "-133.117, -15.2788, -35.4693, 0.55", "-136.045, -15.6997, -36.9056, 0.55", "-140.269, -16.336, -38.625, 0.28", "-140.926, -16.459, -38.9034, 0.55", "-146.265, -17.6129, -40.9824, 0.55", "-148.343, -18.0322, -41.7943, 0.28", "-149.875, -18.3422, -42.3679, 0.55", "-152.333, -18.9157, -43.4002, 0.55", "-155.396, -19.6197, -44.6989, 0.28", "-158.932, -20.4861, -46.359, 0.55", "-162.529, -21.4722, -48.3541, 0.28", "-163.629, -21.7449, -48.9976, 0.83", "-166.869, -22.5598, -50.9771, 0.28", "-167.705, -22.7999, -51.5213, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.818469, 38.5919, 5.01776, 0.67", "-1.37496, 53.5815, 5.01776, 0.67", "-1.93145, 68.5712, 5.01776, 0.67" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "27.0836, 28.5599, 34.7498, 0.55", "29.0572, 31.7845, 42.8304, 0.55", "30.1754, 33.4893, 51.4938, 0.55", "29.6852, 34.7499, 60.2867, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "27.0836, 28.5599, 34.7498, 0.55", "32.4565, 31.6908, 38.6795, 0.55", "37.5775, 35.0948, 42.7269, 0.55", "42.0802, 38.8423, 47.1947, 0.55" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "10.3719, 2.70496, -15.0927, 1.38", "13.0627, 0.975254, -30.0181, 0.83", "13.3971, 0.760314, -31.8728, 0.83", "14.1463, 0.27876, -36.028, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "10.3719, 2.70496, -15.0927, 1.38", "14.1478, 3.18747, -15.1607, 0.55", "18.4548, 3.52414, -15.1686, 0.55", "21.7034, 3.65338, -15.1252, 0.55", "26.8737, 3.89391, -14.9355, 0.55", "30.1655, 4.17389, -14.6821, 0.55", "33.5657, 4.66409, -14.338, 0.55", "36.6906, 5.38637, -13.904, 0.55", "38.5744, 6.06888, -13.5165, 0.55", "41.8666, 7.75006, -12.6725, 0.55", "45.2165, 9.93664, -11.6671, 0.28", "48.7763, 12.5417, -10.3634, 0.55", "52.0839, 15.3172, -9.05117, 0.55", "56.1426, 18.9685, -7.17928, 0.55", "57.5743, 20.3123, -6.46425, 0.55", "59.0747, 21.681, -5.65431, 0.55", "62.9724, 25.0961, -3.41877, 0.55", "64.2679, 26.0436, -2.73106, 0.55", "66.9756, 27.7995, -1.42275, 0.83", "68.4045, 28.627, -0.842953, 0.28", "71.3793, 30.2349, 0.230234, 0.55", "73.3268, 31.1852, 0.72763, 0.55", "80.8459, 34.7866, 1.83351, 0.55", "84.4916, 36.457, 2.0412, 0.55", "86.853, 37.5597, 2.04398, 0.55", "89.7789, 38.8481, 1.92595, 0.55", "93.7646, 40.6047, 1.7511, 0.55", "96.7076, 41.8229, 1.6837, 0.83", "100.594, 43.3837, 1.88308, 0.55", "104.763, 44.5563, 2.4021, 0.55", "107.494, 45.0576, 3.02766, 0.55", "111.644, 45.2961, 4.37034, 0.55", "113.23, 45.1877, 5.01551, 0.55", "117.528, 44.1744, 6.8614, 0.55", "121.447, 42.6493, 8.71795, 0.55", "123.366, 41.6667, 9.57483, 0.55", "126.553, 39.7465, 10.9936, 0.55", "128.418, 38.5196, 11.6916, 0.55", "130.02, 37.4207, 12.3009, 0.55", "132.366, 35.7966, 13.1716, 0.55", "134.968, 34.2452, 14.1991, 0.55", "137.19, 32.9343, 15.1877, 0.55", "140.07, 31.2678, 16.5562, 0.55", "142.511, 30.0154, 17.7439, 0.55", "144.424, 29.1042, 18.6802, 0.28", "146.511, 28.0731, 19.6614, 0.55", "148.591, 26.9338, 20.7135, 0.55", "159.54, 25.9685, 24.3999, 0.55", "171.001, 25.4139, 26.0748, 0.55", "182.084, 26.5825, 29.3487, 0.55", "193.21, 28.0736, 32.3501, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.59939, 12.5624, -17.9634, 1.11", "8.61401, 15.7767, -20.3655, 0.83", "7.58307, 19.1397, -22.8786, 0.83", "5.62873, 25.5148, -27.6428, 1.11" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "9.59939, 12.5624, -17.9634, 1.11", "11.0468, 14.3551, -18.8907, 0.83", "13.7777, 16.822, -19.7588, 0.83", "17.7137, 19.6984, -20.5139, 0.83", "19.2615, 20.694, -20.6717, 0.83", "23.4274, 23.4361, -20.8998, 0.83", "27.5738, 26.1654, -21.1268, 0.83", "31.4139, 28.3897, -21.2015, 0.83", "34.5993, 29.9915, -21.0999, 0.83", "39.0756, 32.1225, -20.5442, 0.83", "42.3099, 33.728, -20.0201, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.84365, 72.9155, 22.1218, 0.83", "-10.531, 74.6468, 20.7021, 0.55", "-11.3759, 76.6324, 19.0521, 0.83", "-12.8157, 79.5742, 16.3083, 0.55", "-14.3591, 82.3409, 13.4131, 0.55", "-15.4238, 84.2002, 11.3756, 0.55", "-16.0737, 85.2965, 10.1322, 0.28", "-16.8673, 86.4692, 8.61768, 0.55", "-18.1488, 88.0738, 6.27995, 0.28", "-18.8695, 88.8663, 5.11835, 0.55", "-20.354, 90.4262, 3.12371, 0.83", "-21.1687, 91.3232, 2.11562, 0.55", "-22.3855, 92.6867, 0.69675, 0.83", "-24.3734, 95.2131, -1.64135, 0.55", "-25.4329, 96.6593, -2.86808, 0.55", "-26.8492, 98.4452, -4.38991, 0.55", "-28.5172, 100.341, -6.11088, 0.83", "-30.7596, 102.883, -8.48972, 0.55", "-32.3582, 104.642, -10.1617, 0.55", "-34.1741, 106.484, -12.0372, 0.55", "-35.6598, 108.09, -13.6018, 0.55", "-37.183, 109.796, -15.0258, 0.83", "-38.517, 111.38, -16.1293, 0.55", "-39.4933, 112.571, -16.8665, 0.55", "-41.2835, 114.733, -18.0972, 0.83", "-43.2603, 117.334, -19.4416, 0.55", "-44.8295, 119.513, -20.5311, 0.55", "-47.5324, 123.16, -22.4463, 0.55", "-48.2751, 124.161, -22.9834, 0.28", "-48.9815, 125.109, -23.5476, 0.55", "-49.8893, 126.308, -24.2952, 0.28", "-50.9577, 127.76, -25.2592, 0.55", "-52.8247, 130.529, -27.1585, 0.55", "-53.9986, 132.548, -28.5135, 0.55", "-55.2656, 134.812, -30.1955, 0.28", "-55.8682, 135.853, -31.0325, 0.28", "-57.1691, 137.953, -32.8236, 0.55", "-58.6164, 140.114, -34.9708, 0.28", "-60.4168, 142.573, -37.6728, 0.55", "-62.3195, 144.746, -40.7288, 0.28", "-63.7792, 146.083, -43.0742, 0.55", "-64.3048, 146.474, -43.8873, 0.55", "-66.831, 147.734, -47.5955, 0.28", "-67.7184, 148.011, -48.8428, 0.55", "-71.7327, 148.546, -54.0808, 0.28", "-73.345, 148.665, -56.1487, 0.55", "-74.3692, 148.703, -57.4794, 0.55", "-78.3146, 148.76, -62.5091, 0.28", "-80.6914, 148.596, -65.2779, 0.55", "-82.0485, 148.385, -66.8373, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.84365, 72.9155, 22.1218, 0.83", "-9.49425, 74.8293, 21.3445, 0.55", "-9.02501, 77.6709, 20.3596, 0.55", "-8.7082, 80.1454, 19.6503, 0.55", "-8.43813, 82.6994, 18.9453, 0.55", "-8.17412, 84.781, 18.4235, 0.55", "-7.74666, 87.5271, 17.805, 0.83", "-7.23553, 90.1657, 17.2592, 0.55", "-6.46814, 93.3111, 16.6772, 0.55", "-5.83439, 95.5878, 16.4216, 0.55", "-4.96275, 98.3259, 16.303, 0.83", "-4.18202, 100.59, 16.269, 0.55", "-3.48008, 102.48, 16.2332, 0.55", "-2.87359, 103.849, 16.2412, 0.55", "-1.37027, 106.951, 16.4392, 0.55", "-0.717463, 108.231, 16.6172, 0.55", "0.0233169, 109.746, 16.8668, 0.55", "0.779028, 111.37, 17.2268, 0.55", "2.18482, 114.465, 18.1191, 0.28", "3.37367, 116.882, 18.8711, 0.55", "4.37329, 118.799, 19.5129, 0.28", "5.06311, 120.121, 20.0419, 0.55", "6.00672, 121.97, 20.9206, 0.28", "6.9347, 123.662, 21.8292, 0.55", "9.40249, 132.31, 22.8589, 0.55", "13.335, 140.327, 24.1279, 0.55", "17.3747, 148.078, 26.3013, 0.55", "22.6183, 154.873, 28.9003, 0.55", "28.7047, 161.354, 29.99, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-148.712, -13.7041, -15.2893, 0.55", "-159.674, -18.6702, -12.4726, 0.55", "-168.887, -25.1665, -7.32018, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-148.712, -13.7041, -15.2893, 0.55", "-156.878, -15.9095, -17.6956, 0.55", "-165.185, -18.3243, -19.2966, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-5.04838, -24.8558, -4.46245, 1.38", "-4.9482, -26.3868, -6.71419, 0.83", "-4.84507, -27.8498, -9.09452, 0.83", "-4.74964, -29.109, -11.0738, 0.55", "-4.64888, -30.4088, -13.14, 0.55", "-4.59677, -31.5544, -14.8974, 0.83", "-4.62467, -32.8917, -16.7915, 0.55", "-4.80103, -35.1676, -19.5517, 0.55", "-4.83502, -35.9499, -20.4104, 1.11", "-4.78501, -37.9557, -22.3707, 0.55", "-4.74595, -38.8845, -23.1789, 0.83", "-4.53694, -41.969, -25.5888, 0.55", "-4.17651, -45.031, -27.9357, 0.55", "-3.90908, -46.8394, -29.3498, 0.28", "-3.72104, -47.818, -30.1776, 0.55", "-3.39141, -49.1804, -31.3591, 0.28", "-2.9848, -50.4572, -32.6169, 0.55", "-2.25321, -52.2934, -34.6084, 0.55", "-1.68009, -53.6918, -36.2224, 0.55", "-1.11214, -54.9759, -37.6101, 0.55", "-0.305864, -56.69, -39.409, 0.83", "0.421695, -58.239, -40.9684, 0.55", "0.720342, -58.9584, -41.6572, 0.55", "1.09046, -59.9314, -42.4866, 0.55", "1.54828, -61.3943, -43.687, 0.55", "1.88418, -62.539, -44.6335, 0.55", "2.4383, -64.8756, -46.5839, 0.55", "2.65113, -66.104, -47.5782, 0.55", "2.70187, -66.5274, -47.9344, 0.83", "2.79251, -68.1141, -49.3047, 0.55", "2.77133, -69.4216, -50.4331, 0.83", "2.78158, -70.775, -51.5947, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-5.04838, -24.8558, -4.46245, 1.38", "-5.75696, -28.1444, -5.39984, 1.38", "-6.55948, -31.869, -6.46151, 1.38", "-7.05782, -34.1818, -7.12077, 1.38", "-7.51014, -36.2811, -7.71916, 1.38" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "102.005, -54.1773, -79.1071, 0.55", "103.411, -56.528, -82.2401, 0.55", "104.686, -58.6598, -85.0815, 0.28", "106.134, -61.0791, -88.306, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "102.005, -54.1773, -79.1071, 0.55", "104.216, -53.7776, -79.1256, 0.55", "107.337, -53.0606, -79.3414, 0.55", "108.52, -52.7848, -79.4503, 0.55", "111.637, -51.901, -79.7559, 0.55", "113.619, -51.3577, -79.922, 0.28", "116.3, -50.6478, -80.1691, 0.55", "118.276, -50.1431, -80.4281, 0.28", "119.168, -49.9155, -80.5762, 0.28", "122.505, -49.1979, -81.0538, 0.55", "125.421, -48.7479, -81.3718, 0.55", "127.647, -48.5062, -81.5099, 0.55", "129.186, -48.4398, -81.5379, 0.28", "130.381, -48.4555, -81.5102, 0.55", "132.46, -48.5526, -81.3646, 0.28", "133.834, -48.7312, -81.1734, 0.55", "136.825, -49.1994, -80.5342, 0.55", "138.802, -49.6449, -79.8161, 0.28", "140.388, -50.1269, -79.0871, 0.55", "143.25, -51.1742, -77.6079, 0.55", "145.079, -51.933, -76.5637, 0.28", "146.533, -52.6303, -75.6829, 0.55", "149.711, -54.363, -73.7288, 0.55", "151.395, -55.3407, -72.4989, 0.55", "152.464, -55.9662, -71.5902, 0.55", "153.444, -56.468, -70.7314, 0.28", "154.362, -56.7994, -69.9608, 0.55", "156.275, -57.3424, -68.5282, 0.28", "158.893, -57.78, -66.732, 0.55", "161.05, -57.9642, -65.1474, 0.28", "163.07, -58.0599, -63.6348, 0.55", "165.101, -58.0705, -62.125, 0.55", "167.881, -57.9387, -60.102, 0.55", "171.083, -57.7272, -57.8867, 0.55", "172.882, -57.5894, -56.8278, 0.28", "173.654, -57.5311, -56.4161, 0.55", "175.059, -57.4742, -55.7744, 0.55", "177.798, -57.3252, -54.5988, 0.28", "179.329, -57.2213, -54.0028, 0.55", "181.908, -57.2321, -53.3155, 0.28", "184.009, -57.3427, -52.9165, 0.55", "186.61, -57.5256, -52.5487, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-58.7789, 9.89534, 7.8666, 0.55", "-61.0369, 10.6344, 6.99688, 0.55", "-62.6572, 11.1509, 6.37354, 0.83", "-64.8993, 11.9241, 5.28599, 0.55", "-66.9105, 12.6387, 4.22919, 0.55", "-69.4429, 13.5953, 2.70351, 0.55", "-73.8196, 15.3457, -0.182394, 0.55", "-76.9942, 16.7488, -2.64213, 0.55", "-79.861, 18.171, -5.18956, 0.28", "-80.4267, 18.4997, -5.80008, 0.55", "-82.8951, 20.0751, -8.88761, 0.55", "-84.437, 21.1823, -11.1221, 0.55", "-86.2728, 22.7219, -14.2449, 0.28", "-86.7355, 23.1258, -15.0562, 0.55", "-87.9128, 24.0615, -16.9349, 0.28", "-89.0608, 25.0411, -18.8103, 0.55", "-89.6463, 25.6078, -19.7733, 0.55", "-91.9136, 27.9376, -23.2663, 0.55", "-93.7076, 29.8668, -25.9097, 0.55", "-94.8108, 31.1467, -27.5995, 0.28", "-95.943, 32.6239, -29.5031, 0.55", "-96.8174, 33.9026, -31.1846, 0.55", "-98.1422, 35.7458, -33.8269, 0.55", "-99.4108, 37.4407, -36.3794, 0.28", "-99.7219, 37.8589, -37.0975, 0.55", "-100.661, 39.1838, -39.7526, 0.28", "-101.416, 40.1729, -42.1261, 0.55", "-102.375, 41.5782, -46.0979, 0.55", "-102.601, 42.0409, -47.4443, 0.55", "-103.08, 43.0269, -50.5355, 0.28", "-103.361, 43.512, -52.0842, 0.55", "-103.701, 43.9741, -53.7852, 0.55", "-104.46, 44.949, -57.4872, 0.55", "-105.204, 45.8626, -60.7106, 1.11", "-106.749, 47.3933, -66.5615, 0.28", "-107.405, 47.9594, -68.6889, 0.55", "-108.661, 48.93, -73.0812, 0.55", "-109.15, 49.3161, -74.8136, 0.28", "-109.956, 49.9676, -77.5435, 0.55", "-111.361, 51.2809, -82.5398, 0.28", "-111.645, 51.6317, -83.6501, 0.55", "-113.078, 54.3122, -91.7228, 0.28", "-113.872, 56.8154, -98.6991, 0.28", "-113.911, 57.0752, -99.471, 0.83", "-113.93, 58.1105, -102.617, 0.28", "-113.881, 58.5928, -103.927, 0.83", "-113.598, 60.4309, -108.844, 0.28", "-113.481, 61.3003, -110.953, 0.83", "-113.372, 62.8898, -114.674, 0.28", "-113.415, 63.6492, -116.534, 0.55", "-113.638, 64.5491, -118.665, 0.28", "-114.013, 65.4272, -120.623, 0.83", "-114.446, 66.2268, -122.325, 0.28", "-115.029, 67.1046, -124.228, 0.55", "-118.067, 70.8097, -132.711, 0.28", "-118.902, 71.6432, -134.818, 0.28", "-119.855, 72.3775, -137.047, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-58.7789, 9.89534, 7.8666, 0.55", "-60.7959, 10.1063, 9.40937, 0.83", "-62.1197, 10.3454, 10.5712, 0.28", "-63.1786, 10.6771, 11.5472, 0.83", "-63.9427, 10.9815, 12.2162, 0.55", "-68.3188, 12.821, 15.9154, 0.83", "-71.0791, 13.8659, 18.2777, 0.55", "-73.4419, 14.5303, 20.1704, 0.55", "-74.6478, 14.8546, 21.2987, 0.28", "-75.6469, 15.172, 22.3492, 0.55", "-76.5218, 15.4814, 23.3823, 0.55", "-78.9793, 16.4856, 26.387, 0.28", "-79.6003, 16.7099, 27.2117, 0.83", "-82.9481, 17.7824, 31.5118, 0.28", "-83.3751, 17.9028, 32.0913, 0.55", "-86.1476, 18.7427, 36.2099, 0.28", "-86.7657, 18.9791, 37.1934, 0.83", "-93.2122, 19.5503, 47.1334, 0.83", "-98.9469, 18.8364, 57.4841, 0.83", "-105.591, 16.9299, 67.1129, 0.83", "-113.106, 15.5199, 76.17, 0.83", "-119.97, 11.792, 85.1002, 0.83", "-125.179, 9.90824, 95.5789, 0.83", "-130.921, 9.39734, 105.939, 0.83", "-138.032, 9.70644, 115.424, 0.83", "-144.081, 8.02052, 125.477, 0.83", "-148.718, 4.38365, 135.768, 0.83", "-153.607, -0.933304, 145.2, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "29.6852, 34.7499, 60.2867, 0.55", "29.6003, 38.3891, 69.1298, 0.55", "28.3155, 41.9638, 77.9041, 0.55", "26.0092, 45.0855, 86.6333, 0.55", "23.6781, 46.4331, 95.7791, 0.55", "21.0547, 46.9787, 104.925, 0.55", "19.1741, 47.6158, 114.247, 0.55", "18.4995, 49.0914, 123.643, 0.55", "16.2086, 50.5324, 132.785, 0.55", "14.4091, 52.0991, 142.018, 0.55", "13.503, 54.5927, 151.187, 0.55", "10.8864, 55.3502, 160.32, 0.55", "8.78113, 56.831, 169.501, 0.55", "4.62871, 57.6093, 178.044, 0.55", "0.740254, 60.0192, 186.419, 0.55", "-2.27262, 63.5743, 194.767, 0.55", "-4.10919, 66.4272, 203.693, 0.55" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "29.6852, 34.7499, 60.2867, 0.55", "31.4915, 36.1085, 70.5642, 0.55", "31.6116, 35.7873, 81.0769, 0.55", "32.6609, 36.9653, 91.4799, 0.55", "31.8309, 37.8976, 101.926, 0.55", "31.9296, 38.6995, 112.415, 0.55", "32.3162, 39.5865, 122.891, 0.55" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "42.0802, 38.8423, 47.1947, 0.55", "50.0968, 44.963, 52.398, 0.55", "58.3372, 50.6639, 57.7048, 0.55", "67.4342, 54.7263, 63.0469, 0.55", "77.6365, 56.3776, 67.5407, 0.55", "87.5409, 58.4468, 72.5119, 0.55", "97.8593, 58.9986, 76.9773, 0.55", "107.208, 57.2728, 82.9799, 0.55", "115.205, 55.9709, 90.7752, 0.55", "124.67, 54.9495, 96.7571, 0.55", "133.501, 53.6644, 103.595, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "42.0802, 38.8423, 47.1947, 0.55", "50.4504, 42.6028, 55.278, 0.55", "59.5803, 43.8291, 63.2799, 0.55", "68.5054, 43.638, 71.5922, 0.55", "78.1217, 41.9751, 78.9172, 0.55", "87.2329, 40.9078, 86.9592, 0.55" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "14.1463, 0.27876, -36.028, 1.11", "17.0174, 0.615134, -34.8568, 0.55", "18.925, 0.642834, -34.1289, 0.83", "21.1384, 0.607784, -33.381, 0.55", "23.3461, 0.480144, -32.7882, 0.55", "26.4169, 0.358087, -32.0737, 0.55", "30.1856, 0.259584, -31.3124, 0.55", "32.8651, 0.251606, -30.8516, 0.55", "35.4141, 0.282162, -30.4338, 0.55", "40.3221, 0.311262, -29.6425, 0.55", "44.7311, 0.398697, -29.0256, 0.55", "48.2293, 0.574874, -28.5676, 0.55", "52.5544, 0.986854, -28.0819, 0.55", "55.5369, 1.36991, -27.7409, 0.55", "57.5259, 1.66332, -27.5206, 0.83", "59.508, 2.0488, -27.3166, 0.55", "61.6036, 2.51905, -27.1468, 0.55", "63.2717, 2.96918, -27.0308, 0.83", "66.3025, 4.10108, -26.847, 0.55", "68.8028, 5.22368, -26.6781, 0.55", "70.6616, 6.10685, -26.4349, 0.55", "73.0197, 7.24339, -26.0584, 0.55", "75.383, 8.36126, -25.7263, 0.55", "79.7312, 10.5353, -25.2223, 0.55", "82.8931, 12.124, -24.9223, 0.55", "86.1486, 13.7479, -24.9409, 0.55", "87.6564, 14.4619, -25.084, 0.28", "90.3191, 15.6616, -26.0011, 0.55", "92.0711, 16.3047, -27.1799, 0.28", "93.307, 16.6535, -28.2102, 0.55", "96.7085, 17.6094, -31.6948, 0.28", "98.6289, 18.0867, -33.816, 0.55", "103.155, 19.1129, -38.7609, 0.55", "105.676, 19.6107, -41.5364, 0.55", "108.59, 20.0949, -44.627, 0.28", "111.936, 20.6219, -47.6011, 0.55", "113.605, 20.9426, -47.8612, 0.55", "116.182, 21.7512, -45.922, 0.28", "117.559, 22.1443, -44.7385, 0.55", "120.441, 23.0367, -41.9561, 0.55", "131.532, 26.4167, -30.4287, 0.55", "132.019, 26.551, -29.9107, 0.55", "132.665, 26.7357, -29.2179, 0.83", "134.82, 27.2979, -26.9736, 0.55", "135.898, 27.546, -26.0599, 0.28", "136.552, 27.628, -25.7865, 0.55", "140.069, 27.8354, -26.2271, 0.55", "142.1, 27.9483, -26.4876, 0.55", "144.669, 28.1102, -26.8229, 0.55", "147.224, 28.3069, -27.153, 0.55", "149.538, 28.3623, -27.4111, 0.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "14.1463, 0.27876, -36.028, 1.11", "15.7617, 2.26539, -35.7033, 0.83", "16.6454, 3.35214, -35.5257, 0.83", "18.3597, 5.46023, -35.1811, 0.83", "19.409, 6.75061, -34.9702, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.62873, 25.5148, -27.6428, 1.11", "4.47833, 30.2051, -31.5291, 0.55", "4.11522, 31.9616, -33.0786, 0.55", "3.35802, 37.0734, -37.4996, 0.55", "2.48561, 42.3684, -42.1158, 0.55", "1.86897, 46.1542, -45.4586, 0.55", "1.73387, 47.0614, -46.2514, 0.55", "1.27683, 50.8917, -49.6999, 0.55", "0.820057, 54.7483, -53.2071, 0.55", "0.444535, 59.928, -57.7391, 0.55", "0.206476, 64.8145, -61.7014, 0.55", "0.133484, 66.5891, -63.1967, 0.28", "0.0595485, 69.2561, -65.4335, 0.55", "0.0470042, 70.8141, -66.7643, 0.55", "0.284073, 76.202, -71.5444, 0.55", "0.870173, 81.1072, -75.8011, 0.55", "1.53326, 86.6176, -80.6399, 0.55", "1.70884, 88.4041, -82.2066, 0.55", "2.05679, 92.5165, -85.7002, 0.55", "2.142, 94.2044, -87.1252, 0.28", "2.0112, 96.2142, -88.8059, 0.55", "1.77361, 99.9294, -91.8508, 0.55", "1.6237, 101.883, -93.2673, 0.28", "1.49964, 102.759, -93.8619, 0.55", "1.18646, 104.529, -94.8857, 0.28", "0.650733, 107.37, -96.6422, 0.55", "0.444493, 109.029, -97.7038, 0.28", "0.504738, 110.941, -98.8218, 0.83", "0.684516, 112.15, -99.6072, 0.28", "1.25997, 114.902, -101.428, 0.55", "1.80793, 117.426, -103.047, 0.28", "2.02617, 118.718, -103.82, 0.55", "2.42795, 120.72, -105.019, 0.28", "3.00895, 122.845, -106.472, 0.55", "3.81271, 125.11, -108.316, 0.28", "4.33923, 126.298, -109.285, 0.55", "5.29904, 128.458, -111.247, 0.55", "6.40025, 131.153, -113.82, 0.28", "7.09438, 132.982, -115.679, 0.83", "8.40181, 136.448, -119.117, 0.28", "9.01585, 138.079, -120.729, 0.55", "10.2825, 141.736, -124.029, 0.55", "10.7963, 143.427, -125.412, 0.28", "11.1292, 144.878, -126.442, 0.55", "11.4595, 146.329, -127.236, 0.55", "11.7241, 147.862, -127.897, 0.28", "12.0912, 150.481, -128.982, 0.55", "12.7056, 154.94, -130.582, 0.28", "12.9277, 156.692, -131.294, 0.55", "13.2028, 158.795, -132.088, 0.28", "13.826, 163.169, -133.874, 0.55", "14.1709, 165.263, -134.778, 0.28", "14.4761, 167.034, -135.623, 0.55", "15.3061, 170.972, -137.584, 0.28", "16.1384, 174.365, -139.363, 0.55", "17.3579, 178.497, -141.667, 0.28", "18.2284, 180.76, -142.917, 0.28", "19.1423, 182.996, -144.113, 0.55", "20.059, 185.092, -145.355, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "5.62873, 25.5148, -27.6428, 1.11", "5.27424, 27.1499, -26.6438, 1.11", "4.55005, 31.1403, -24.3485, 0.55", "4.38179, 32.4267, -23.6607, 0.55", "3.9919, 35.5609, -21.8917, 0.55", "3.74336, 38.0863, -20.4535, 0.55", "3.46254, 42.2761, -18.0537, 0.83", "3.47514, 44.1062, -16.9605, 0.55", "3.6734, 47.0405, -14.9539, 0.83", "3.90058, 49.4935, -13.1294, 0.55", "4.00284, 50.7992, -12.1028, 0.55", "4.22905, 53.0109, -10.0779, 0.83", "4.62278, 55.2917, -7.47155, 0.55", "5.05282, 57.6119, -4.48188, 0.55", "5.37382, 58.9857, -2.46789, 0.55", "5.73554, 60.3529, -0.311708, 0.55", "5.99322, 61.4906, 1.65472, 0.83", "6.59017, 63.7146, 5.68895, 0.55", "6.95379, 64.8988, 7.88076, 0.55", "7.50705, 66.7012, 11.1211, 0.55", "7.87909, 68.0902, 13.6543, 0.55", "8.23896, 69.5682, 16.146, 0.55", "8.58594, 71.3736, 18.7158, 0.55", "8.75691, 73.3541, 21.1105, 0.55", "8.86577, 74.6476, 22.5375, 0.55", "8.97895, 76.0904, 23.8031, 0.55", "9.15318, 78.8369, 25.8205, 0.55", "9.25169, 80.95, 27.2129, 0.55", "9.25293, 83.1084, 28.1561, 0.55", "9.30248, 86.7154, 29.0943, 0.55", "9.46238, 90.2586, 29.6581, 0.55", "9.70773, 93.325, 29.9551, 0.55", "9.98386, 96.4151, 30.1299, 0.55", "10.8736, 105.154, 30.5168, 0.55", "11.1969, 107.331, 30.6392, 0.55", "11.3972, 108.367, 30.7311, 0.55", "12.1948, 111.394, 31.3703, 0.55", "13.2275, 114.097, 32.2578, 0.55", "13.4785, 114.647, 32.5343, 0.55", "14.896, 117.409, 34.468, 0.55", "15.5578, 118.827, 35.458, 0.28", "16.3881, 120.825, 36.7821, 0.55", "17.4839, 123.997, 38.8305, 0.55", "18.0206, 126.193, 40.2463, 0.55", "18.2126, 127.537, 41.1184, 0.28", "18.2135, 129.673, 42.5578, 0.55", "18.0269, 131.62, 43.821, 0.55", "17.6472, 134.034, 45.3023, 0.55", "17.1128, 136.252, 46.4965, 0.55", "16.6365, 137.878, 47.2513, 0.55", "15.9136, 140.289, 48.1481, 0.55", "15.3722, 142.498, 48.7786, 0.83", "14.9717, 144.49, 49.2198, 0.28", "14.7227, 146.238, 49.4688, 0.55", "14.5009, 148.43, 49.6956, 0.55", "14.3537, 150.679, 49.9186, 0.28", "14.2722, 152.879, 50.0928, 0.55", "14.1698, 155.248, 50.3502, 0.28", "14.1223, 157.252, 50.6451, 0.55", "14.2042, 159.471, 51.0804, 0.55", "14.3577, 160.854, 51.3757, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "42.3099, 33.728, -20.0201, 0.83", "43.8112, 36.9533, -22.5289, 0.83", "44.8215, 39.1239, -24.2173, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "42.3099, 33.728, -20.0201, 0.83", "45.1345, 34.8567, -19.7597, 0.55", "46.6147, 35.4298, -19.7499, 0.55", "48.1869, 36.0385, -19.7394, 0.55", "51.1948, 37.203, -19.7195, 0.55", "53.2978, 38.0172, -19.7056, 0.83", "57.2184, 39.5351, -19.6796, 0.28", "60.4727, 41.1777, -19.3896, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.78158, -70.775, -51.5947, 0.55", "1.98569, -69.4033, -51.6905, 0.55", "1.27381, -67.3686, -52.058, 0.28", "0.82155, -66.0759, -52.2914, 0.55", "0.238212, -64.4086, -52.5926, 0.28", "0.100181, -64.0141, -52.6638, 0.55", "-0.563315, -62.1177, -53.0063, 0.28", "-0.772666, -60.8923, -53.0565, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.78158, -70.775, -51.5947, 0.55", "3.2621, -72.4032, -51.0315, 0.28", "3.73097, -73.9919, -50.4819, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.51014, -36.2811, -7.71916, 1.38", "-8.56552, -39.6919, -8.72317, 1.11", "-8.8638, -40.8201, -9.15762, 1.11", "-9.37145, -42.7401, -9.897, 1.11", "-9.87736, -44.6536, -10.6339, 1.11", "-10.6552, -47.5954, -11.7667, 1.11", "-11.5679, -51.0477, -13.0962, 1.11", "-12.6019, -54.3966, -14.1273, 1.66" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-7.51014, -36.2811, -7.71916, 1.38", "-8.46328, -36.7893, -7.99666, 0.83", "-9.16171, -37.2199, -8.21848, 0.83", "-10.5196, -38.1625, -8.66651, 0.83", "-12.4235, -39.6207, -9.26592, 0.55", "-14.0537, -40.8949, -9.75771, 0.55", "-15.3552, -41.9007, -10.1528, 0.55", "-16.8223, -42.9606, -10.6099, 0.28", "-17.3946, -43.357, -10.7571, 0.55", "-19.8436, -44.8213, -11.1672, 0.55", "-21.6422, -45.7303, -11.4181, 0.55", "-24.2893, -46.9306, -11.7808, 0.55", "-26.3676, -47.7452, -12.0583, 0.55", "-29.4518, -48.8549, -12.4579, 0.55", "-32.5954, -49.9339, -12.9877, 0.55", "-35.4265, -50.8867, -13.6021, 0.55", "-36.9709, -51.4697, -13.9948, 0.55", "-39.2633, -52.4905, -14.6604, 0.55", "-41.8348, -53.8564, -15.5001, 0.55", "-45.0124, -55.7855, -16.7315, 0.55", "-46.4088, -56.8098, -17.2955, 0.55", "-47.6733, -57.7758, -17.7545, 0.55", "-49.7059, -59.3844, -18.5042, 0.55", "-52.7513, -61.9949, -19.5603, 0.55", "-54.4972, -63.5383, -20.1156, 0.28", "-55.9486, -64.8682, -20.5371, 0.55", "-57.9239, -66.5347, -21.1145, 0.55", "-59.3918, -67.6347, -21.4475, 0.28", "-60.8229, -68.5865, -21.6756, 0.83", "-62.0465, -69.2713, -21.7776, 0.55", "-63.5188, -69.947, -21.8119, 0.83", "-66.2043, -71.0638, -21.772, 0.55", "-69.6329, -72.5348, -21.3166, 0.55", "-71.1644, -73.133, -21.031, 0.55", "-72.2193, -73.5737, -20.7113, 0.55", "-74.1158, -74.4067, -19.922, 0.55", "-76.9579, -75.7397, -18.5829, 0.83", "-80.1401, -77.3486, -16.9495, 0.55", "-81.8762, -78.2836, -16.1044, 0.55", "-84.9699, -80.101, -14.3867, 0.55", "-86.2888, -80.915, -13.5773, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "32.3162, 39.5865, 122.891, 0.55", "37.1401, 37.7794, 131.141, 0.55", "43.5012, 35.7486, 138.229, 0.55", "49.9561, 32.7175, 144.887, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "32.3162, 39.5865, 122.891, 0.55", "30.6272, 42.5785, 137.85, 0.55", "26.975, 45.8078, 152.412, 0.55", "24.3943, 47.2346, 167.46, 0.55", "18.6845, 51.333, 181.134, 0.55", "11.1625, 57.2237, 193.232, 0.55", "6.15205, 62.3641, 206.848, 0.55", "1.85807, 65.4109, 221.272, 0.55" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "133.501, 53.6644, 103.595, 0.55", "142.785, 53.3553, 111.995, 0.55", "152.306, 52.8287, 120.112, 0.55", "161.824, 54.2612, 128.142, 0.55", "172.325, 55.0011, 134.941, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "133.501, 53.6644, 103.595, 0.55", "140.347, 57.4991, 102.329, 0.55", "147.465, 60.6787, 100.868, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "87.2329, 40.9078, 86.9592, 0.55", "94.7405, 41.3226, 93.4173, 0.55", "103.052, 40.9424, 98.8029, 0.55", "111.834, 41.431, 103.375, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "87.2329, 40.9078, 86.9592, 0.55", "97.7648, 41.1898, 95.2312, 0.55", "107.158, 40.6262, 104.765, 0.55", "115.861, 38.8428, 114.791, 0.55", "122.63, 35.3091, 125.802, 0.55", "130.505, 31.1286, 135.817, 0.55", "138.008, 26.0725, 145.724, 0.55", "146.256, 19.3062, 153.922, 0.55" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "149.538, 28.3623, -27.4111, 0.55", "149.411, 28.9204, -29.2124, 0.55", "149.314, 29.3436, -30.5787, 0.83", "149.129, 30.1552, -33.1984, 0.28", "148.944, 30.9645, -35.8108, 0.83" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "149.538, 28.3623, -27.4111, 0.55", "150.484, 27.5211, -28.1566, 0.55", "152.397, 26.0789, -29.5952, 0.28", "153.692, 25.1618, -30.5003, 0.55", "155.627, 23.8316, -31.7642, 0.55", "156.472, 23.2855, -32.2724, 0.83", "157.973, 22.2816, -33.2239, 0.55", "158.876, 21.6862, -33.7846, 0.55", "159.824, 21.0862, -34.3374, 0.28", "160.368, 20.7525, -34.6437, 0.55", "162.414, 19.4727, -35.8968, 0.55", "163.884, 18.521, -36.8987, 0.28", "165.218, 17.5871, -37.9771, 0.55", "165.762, 17.1938, -38.4899, 0.28", "167.268, 16.0725, -39.9912, 0.55", "169.464, 14.5263, -42.2725, 0.28", "170.424, 13.8815, -43.2669, 0.55", "172.768, 12.5114, -45.5523, 0.55", "174.234, 11.7307, -46.854, 0.28", "175.431, 11.0693, -47.8992, 0.55", "177.306, 10.0586, -49.483, 0.28", "178.291, 9.63324, -50.1326, 0.55", "179.149, 9.29473, -50.6508, 0.55", "182.381, 8.53064, -51.6876, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "19.409, 6.75061, -34.9702, 0.83", "16.493, 8.35682, -42.0949, 0.83", "14.773, 10.6924, -48.7848, 0.55", "13.8584, 12.2793, -52.607, 0.55", "13.1685, 13.4994, -55.3417, 0.55", "11.4316, 16.787, -62.1564, 0.83", "8.46289, 22.4038, -72.8631, 1.11", "5.19514, 29.5457, -84.8767, 0.83", "4.11477, 32.3757, -88.9141, 0.83", "3.66198, 33.6908, -90.589, 0.83", "2.26682, 38.0861, -95.721, 1.38", "1.30953, 41.1032, -98.8299, 0.55", "-0.749501, 47.0601, -104.124, 0.83", "-1.47389, 48.6831, -105.502, 0.83", "-4.22692, 54.9698, -110.696, 0.55", "-5.20435, 57.4167, -112.674, 0.83", "-5.78291, 59.066, -114.077, 0.55", "-7.35507, 64.7851, -119.264, 0.83", "-8.16845, 68.7182, -122.864, 0.83", "-8.44517, 70.7806, -124.683, 0.83", "-8.50614, 74.0782, -127.289, 0.83", "-7.69722, 83.3697, -134.09, 0.55", "-6.71396, 88.254, -137.303, 0.83", "-5.91244, 90.79, -138.775, 0.83", "-4.5123, 94.5146, -140.713, 0.83", "-2.68225, 98.8697, -142.642, 0.83", "-1.35843, 101.922, -143.535, 0.83", "-0.243205, 104.398, -143.873, 0.83", "2.55145, 110.678, -144.653, 0.83", "4.21325, 114.756, -145.227, 0.83", "6.11498, 119.178, -146.031, 0.83", "7.13324, 121.757, -146.509, 0.55", "8.30625, 125.319, -147.179, 0.83", "9.21149, 128.788, -147.911, 0.83", "9.7274, 130.769, -148.432, 0.83", "10.7387, 135.327, -149.938, 0.83", "11.1824, 138.207, -150.987, 0.83", "11.5926, 141.036, -152.044, 0.83", "12.4177, 146.541, -154.131, 0.83", "13.4697, 152.981, -156.526, 0.83", "14.0923, 156.267, -157.751, 0.83", "15.3908, 162.707, -160.011, 0.83", "15.8837, 164.604, -160.705, 0.83", "17.2601, 169.06, -162.287, 0.83", "18.0278, 171.342, -162.992, 0.83", "19.0119, 174.468, -163.874, 0.55", "19.4167, 175.528, -164.246, 0.55", "21.6781, 179.825, -165.838, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "19.409, 6.75061, -34.9702, 0.83", "19.9609, 7.17474, -37.3479, 0.55", "20.7455, 8.26602, -42.5088, 0.83", "21.0627, 8.81019, -45.4559, 0.55", "21.6129, 9.70244, -50.7937, 0.83", "21.9262, 10.3121, -54.0694, 0.55", "22.2467, 10.9342, -57.1385, 0.83", "22.8132, 12.7324, -65.5788, 0.83", "22.9401, 13.2271, -67.8984, 0.55", "22.9571, 13.534, -69.2619, 0.83", "22.6637, 15.3714, -77.7278, 0.28", "22.5552, 15.6741, -79.0867, 0.55", "21.4249, 17.8178, -89.2019, 0.55", "21.2719, 18.0443, -90.3252, 0.55", "19.9483, 19.6574, -98.3781, 0.28", "19.4484, 20.0666, -100.77, 0.55", "17.4076, 21.0714, -108.618, 0.28", "16.846, 21.2911, -110.499, 0.55", "14.8758, 21.9844, -116.137, 0.83", "14.0843, 22.3301, -118.198, 0.28", "13.0949, 22.7468, -120.43, 0.55", "11.1492, 23.6556, -124.444, 0.28", "9.64062, 24.3913, -126.973, 0.83", "7.70659, 25.5071, -129.98, 0.55", "5.24684, 26.8856, -133.345, 0.28", "4.04162, 27.6597, -135.046, 0.55", "1.12089, 29.6106, -139.053, 0.28", "0.137454, 30.2788, -140.439, 0.55", "-2.12295, 31.7223, -143.748, 0.28", "-2.90839, 32.2279, -145.017, 0.83", "-5.96146, 34.2167, -150.273, 0.28", "-7.17989, 35.0317, -152.471, 0.55", "-9.66049, 36.6602, -157.13, 0.28", "-10.1883, 37.028, -158.279, 0.55", "-13.6884, 39.4054, -166.268, 0.28", "-14.5894, 40.0486, -168.406, 0.55", "-15.493, 40.687, -170.622, 0.28", "-16.8367, 41.6903, -174.249, 0.55", "-20.6107, 44.5103, -185.032, 0.28", "-21.2218, 45.0013, -186.923, 0.83" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "14.3577, 160.854, 51.3757, 0.55", "16.7418, 162.273, 48.6081, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "14.3577, 160.854, 51.3757, 0.55", "14.9906, 162.56, 53.604, 0.55", "15.7449, 163.966, 56.3542, 0.28", "16.5756, 165.45, 59.2955, 0.55", "16.9698, 166.403, 61.1314, 0.28", "17.5956, 167.949, 64.4272, 0.55", "18.2331, 169.879, 68.7782, 0.28", "18.4069, 171.33, 72.4995, 0.55", "18.3274, 172.134, 74.5533, 0.28", "17.874, 173.561, 77.9002, 0.55", "16.81, 176.442, 83.3785, 0.28", "16.3596, 177.542, 85.0774, 0.55", "15.3193, 179.59, 87.5607, 0.55", "14.4037, 181.053, 89.1227, 0.55", "13.0163, 183.08, 91.3456, 0.28", "11.9646, 184.743, 92.5928, 0.55", "12.5683, 190.274, 106.646, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "44.8215, 39.1239, -24.2173, 0.83", "46.827, 43.1708, -26.2711, 0.55", "47.8395, 45.0302, -27.499, 0.83", "48.9328, 47.0658, -28.6291, 0.83", "50.0441, 49.3474, -29.7543, 0.55", "50.727, 50.6554, -30.3595, 0.83", "52.3238, 53.6247, -31.6289, 0.55", "53.8539, 56.546, -32.6883, 0.83", "56.5944, 62.1785, -34.6115, 0.83", "57.4265, 64.0442, -35.1362, 0.83", "59.522, 68.6889, -36.0938, 0.83", "60.5826, 71.1492, -36.4184, 0.83", "62.1242, 74.8226, -36.5834, 0.83", "63.4174, 78.1295, -36.653, 0.83", "64.9517, 82.4085, -36.7348, 0.83", "66.8105, 87.689, -36.7764, 0.83", "68.1532, 91.911, -36.7256, 0.83", "69.3497, 95.6329, -36.661, 0.83", "70.9643, 100.404, -36.5287, 0.83", "72.4692, 105.212, -36.4403, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "44.8215, 39.1239, -24.2173, 0.83", "45.9045, 39.1367, -24.0093, 0.28", "46.7796, 39.1592, -23.9463, 0.55", "48.1836, 39.2242, -24.0066, 0.28", "50.8727, 39.3107, -24.2763, 0.55", "53.0955, 39.2929, -24.5687, 0.55", "54.5746, 39.2086, -24.8315, 0.28", "56.6004, 38.9317, -25.3029, 0.55", "58.4698, 38.5181, -25.8253, 0.28", "59.4618, 38.2081, -26.1681, 0.55", "60.5043, 37.7894, -26.6326, 0.28", "61.9122, 37.0513, -27.3041, 0.55", "64.0539, 35.6978, -28.2433, 0.28", "64.9718, 34.9856, -28.6324, 0.55", "65.9595, 34.1494, -29.0592, 0.28", "67.1163, 33.157, -29.5876, 0.55", "68.4837, 31.9705, -30.2393, 0.28", "70.4317, 30.0884, -31.2094, 0.28", "71.0342, 29.3615, -31.6124, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.73097, -73.9919, -50.4819, 0.83", "4.65294, -75.1188, -50.646, 0.55", "5.49206, -76.2615, -50.7615, 0.55", "6.64641, -77.8608, -50.885, 0.55", "7.4111, -78.964, -51.0714, 0.55", "7.94566, -79.7194, -51.2969, 0.55", "8.61166, -80.652, -51.6398, 0.55", "9.36582, -81.7666, -52.1376, 0.28", "9.70848, -82.2716, -52.4035, 0.55", "10.8772, -84.0665, -53.5352, 0.28", "11.7778, -85.3966, -54.5433, 0.28", "12.1476, -85.8973, -54.9831, 0.83" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.73097, -73.9919, -50.4819, 0.83", "4.03892, -75.4956, -51.314, 1.11", "4.24579, -76.5248, -52.0795, 0.28", "4.42347, -77.548, -52.9171, 0.83", "4.74119, -79.1243, -54.2109, 0.83", "5.65425, -83.062, -57.342, 0.28", "5.82441, -83.5426, -57.7319, 0.83", "6.9351, -85.94, -59.8771, 0.28", "7.38465, -86.7296, -60.6793, 0.55", "8.48339, -88.3707, -62.4425, 0.55", "9.10359, -89.2306, -63.4084, 0.55", "10.8197, -91.6963, -66.1255, 0.55", "11.3421, -92.5405, -67.0006, 0.55", "12.4827, -94.6535, -69.2582, 0.28", "12.7812, -95.5697, -70.3094, 0.55", "12.9763, -96.998, -71.9942, 0.55", "13.0021, -98.501, -73.6005, 0.55", "12.7641, -100.373, -75.3409, 0.55", "12.2652, -102.562, -77.4687, 0.55", "11.6926, -104.804, -79.6312, 0.28", "11.3175, -106.267, -81.1066, 0.55", "10.8768, -108.309, -83.126, 0.55", "10.5283, -109.745, -84.5465, 0.55", "9.29579, -115.059, -89.8939, 0.55", "9.06595, -116.348, -91.1378, 0.55", "8.8031, -118.135, -92.9189, 0.28", "8.62425, -119.315, -94.0384, 0.55", "8.39506, -121.196, -95.9112, 0.55", "8.17649, -123.684, -98.3131, 0.28", "8.13382, -124.437, -98.9937, 0.55", "8.03773, -125.934, -100.385, 0.28", "7.93389, -129.015, -103.419, 0.55", "7.86549, -133.315, -107.979, 0.28", "7.94359, -134.656, -109.459, 0.55", "8.0844, -136.178, -111.231, 0.28", "8.21284, -137.02, -112.24, 0.55", "8.80427, -138.843, -114.486, 0.28", "9.69217, -140.23, -116.565, 0.55", "10.7856, -141.376, -118.329, 0.28", "11.3782, -141.84, -119.182, 0.55", "12.5057, -142.558, -120.768, 0.55", "14.2623, -143.426, -123.053, 0.55", "16.6217, -144.401, -126.073, 0.55", "18.1709, -144.977, -128.073, 0.28", "19.5496, -145.507, -130.185, 0.55", "20.7609, -145.984, -132.205, 0.28", "21.6725, -146.386, -133.877, 0.55", "23.0036, -147.19, -136.893, 0.28", "23.5945, -147.71, -138.411, 0.55", "24.5778, -149.064, -141.917, 0.28", "24.747, -149.482, -142.816, 0.28", "25.0029, -150.301, -144.504, 0.55", "25.5703, -152.826, -149.541, 0.28", "25.6926, -153.495, -150.811, 0.55", "26.0688, -156.513, -156.409, 0.28", "26.2255, -158.374, -159.563, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-12.6019, -54.3966, -14.1273, 1.66", "-14.4125, -57.5322, -19.4235, 1.38", "-15.9724, -60.2334, -23.986, 1.38", "-17.4705, -62.8278, -28.3681, 1.11", "-18.3952, -64.4293, -31.073, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-12.6019, -54.3966, -14.1273, 1.66", "-17.8305, -54.8314, -16.3261, 0.83", "-20.6401, -55.1947, -17.7929, 0.55", "-22.6058, -55.5253, -18.84, 0.55", "-28.25, -56.9837, -21.8972, 0.55", "-33.6439, -58.4979, -24.862, 0.55", "-34.8592, -58.8839, -25.5115, 0.55", "-38.9832, -60.416, -27.9027, 0.55", "-41.7263, -61.493, -29.4319, 0.55", "-47.7321, -64.0428, -32.4203, 0.55", "-51.3832, -65.8713, -33.9855, 0.55", "-54.2375, -67.3727, -35.039, 0.55", "-57.3585, -68.9327, -36.0008, 0.55", "-61.4398, -70.7303, -36.7341, 0.55", "-63.2119, -71.3836, -36.8913, 0.28", "-63.8962, -71.5846, -36.8751, 0.55", "-67.4503, -72.6445, -36.5466, 0.55", "-71.312, -73.6995, -36.0641, 0.55", "-76.0601, -74.8319, -35.2826, 0.55", "-79.353, -75.6052, -34.7125, 0.55", "-80.4649, -75.8211, -34.5449, 0.28", "-83.9848, -76.4787, -34.1367, 0.55", "-86.1948, -76.7962, -33.954, 0.28", "-88.6082, -77.0325, -33.785, 0.28", "-92.6325, -77.3399, -33.6221, 0.55", "-94.6581, -77.5183, -33.5331, 0.55", "-98.441, -77.7524, -33.1253, 0.55", "-102.681, -77.8176, -32.4805, 0.28", "-105.442, -77.8346, -31.9564, 0.55", "-107.342, -77.874, -31.5744, 0.28", "-109.905, -77.8575, -31.052, 0.55", "-113.796, -77.9181, -30.3967, 0.28", "-116.725, -77.9227, -30.1059, 0.55", "-118.328, -77.9822, -30.1818, 0.28", "-120.374, -78.0615, -30.5597, 0.83", "-123.317, -78.4305, -31.6387, 0.28", "-125.013, -78.7704, -32.4519, 0.55", "-127.361, -79.4355, -33.7517, 0.28", "-128.426, -79.8653, -34.3679, 0.55", "-129.738, -80.5298, -35.089, 0.28", "-132.008, -81.8743, -36.4282, 0.55", "-133.968, -83.1508, -37.6655, 0.28", "-134.447, -83.4236, -37.9845, 0.55", "-135.96, -84.2655, -39.1415, 0.28", "-137.586, -85.1012, -40.4678, 0.55", "-140.845, -86.6988, -43.3225, 0.28", "-142.188, -87.3503, -44.525, 0.83", "-146.286, -89.1752, -48.4087, 0.28", "-148.38, -89.9662, -50.3333, 0.55", "-148.696, -90.0625, -50.6075, 1.11", "-150.169, -90.4628, -51.8335, 0.28", "-152.247, -90.9411, -53.4388, 0.55", "-154.922, -91.4825, -55.3742, 0.28", "-155.871, -91.6574, -56.0067, 0.55", "-160.48, -92.3853, -58.8523, 0.28", "-162.57, -92.6892, -60.1482, 0.55", "-164.993, -92.9939, -61.6289, 0.28", "-166.946, -93.2786, -62.869, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-86.2888, -80.915, -13.5773, 0.55", "-86.9462, -81.2717, -12.7729, 0.55", "-87.2848, -81.4499, -12.37, 0.28", "-87.9303, -81.7988, -11.5783, 0.55", "-89.2078, -82.5366, -9.95094, 0.28", "-89.6989, -82.8351, -9.36239, 0.55", "-90.8314, -83.5435, -8.07126, 0.28", "-91.0943, -83.7157, -7.76901, 0.55", "-91.5204, -83.993, -7.28108, 0.55", "-92.1621, -84.439, -6.57776, 0.55", "-92.8769, -84.9647, -5.94121, 0.28", "-93.1486, -85.1866, -5.68905, 0.28", "-93.7402, -85.7623, -5.32217, 0.55", "-95.8948, -87.0346, -3.1395, 0.55", "-97.9547, -88.2711, -0.848545, 0.55", "-99.9824, -88.7995, 1.70953, 0.55", "-101.695, -89.7219, 4.39255, 0.55", "-103.49, -90.8384, 6.94923, 0.55", "-105.701, -92.2294, 9.00247, 0.55", "-107.32, -93.9983, 11.3187, 0.55", "-108.739, -95.858, 13.6981, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-86.2888, -80.915, -13.5773, 0.55", "-88.1773, -80.4873, -13.7842, 0.55", "-90.5228, -79.9561, -14.0411, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "172.325, 55.0011, 134.941, 0.55", "179.668, 55.2977, 140.43, 0.55", "185.635, 55.7401, 147.383, 0.55", "190.661, 56.9349, 154.966, 0.55", "194.671, 59.6965, 162.762, 0.55", "197.985, 63.0456, 170.663, 0.55", "201.244, 65.7551, 178.816, 0.55", "205.239, 69.9681, 185.978, 0.55", "209.068, 75.0054, 192.711, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "172.325, 55.0011, 134.941, 0.55", "181.24, 55.4508, 140.929, 0.55", "189.527, 55.6957, 147.77, 0.55", "197.29, 54.8219, 155.147, 0.55", "204.73, 53.3071, 162.752, 0.55", "212.06, 52.3828, 170.554, 0.55", "219.603, 50.7325, 178.028, 0.55", "228.047, 48.0134, 184.105, 0.55", "236.289, 45.5741, 190.562, 0.55" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "21.6781, 179.825, -165.838, 0.83", "20.6316, 182.885, -167.63, 0.55", "19.5469, 185.485, -169.274, 0.28", "18.1811, 188.403, -171.203, 0.55", "17.1068, 190.382, -172.731, 0.55", "15.3851, 193.413, -175.221, 0.55", "14.613, 194.772, -176.338, 0.55", "13.033, 197.121, -178.487, 0.28", "12.6725, 197.579, -178.96, 0.55", "10.3749, 200.118, -181.863, 0.55", "8.32358, 202.258, -184.675, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "21.6781, 179.825, -165.838, 0.83", "24.5827, 182.417, -166.114, 0.83", "26.1917, 184.192, -166.488, 0.55", "27.608, 186.014, -166.835, 0.83", "28.605, 187.343, -167.076, 0.55", "29.9089, 189.13, -167.357, 0.83", "31.7406, 191.914, -167.772, 0.83", "33.2176, 194.823, -168.252, 0.55", "34.1225, 196.851, -168.463, 0.83", "34.9977, 199.299, -168.67, 0.83", "35.4754, 200.898, -168.8, 0.28", "36.1031, 203.124, -168.868, 0.55", "37.1705, 206.253, -168.882, 0.55", "38.0342, 208.457, -168.737, 0.55", "39.1688, 210.817, -168.594, 0.28", "40.1982, 212.662, -168.526, 0.55", "41.8777, 215.326, -168.488, 0.55", "44.3024, 218.857, -168.537, 0.83", "46.356, 221.737, -168.646, 0.83", "48.3159, 224.476, -168.861, 0.83", "50.4503, 227.469, -169.282, 0.55", "51.7615, 229.427, -169.688, 0.83", "53.0718, 231.579, -170.26, 0.28", "53.5979, 232.536, -170.524, 0.55", "54.3491, 234.147, -171.05, 0.28", "55.6844, 237.646, -172.121, 0.55", "56.0252, 238.664, -172.41, 0.55", "56.6897, 240.58, -172.873, 0.28", "57.127, 241.733, -173.167, 0.55", "58.8975, 245.781, -174.237, 0.28", "59.5709, 247.132, -174.603, 0.55", "60.3584, 248.596, -174.997, 0.28", "61.5117, 251.031, -175.784, 0.55", "63.1107, 254.629, -177.037, 0.28", "63.9592, 256.842, -177.831, 0.55", "64.6771, 258.74, -178.552, 0.28", "65.4078, 260.864, -179.499, 0.55", "66.5169, 264.49, -181.154, 0.28", "66.7112, 265.301, -181.529, 0.55", "67.3014, 268.632, -182.873, 0.28", "67.523, 270.412, -183.634, 0.83", "67.8, 272.739, -184.649, 0.28", "68.0635, 274.332, -185.439, 0.55" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "72.4692, 105.212, -36.4403, 0.83", "73.4995, 108.363, -35.5676, 0.83", "74.2769, 111.289, -34.6782, 0.83", "75.1501, 114.829, -33.5194, 0.83", "76.1457, 118.642, -32.1999, 0.83", "77.3475, 123.172, -30.5644, 0.83", "78.6077, 127.94, -28.8335, 0.83", "79.7251, 132.769, -26.9825, 0.83", "80.6875, 136.779, -25.4925, 0.83", "81.6937, 140.575, -24.213, 0.83", "82.4217, 142.808, -23.6163, 0.55", "83.0276, 144.385, -23.3532, 0.83", "83.9623, 146.488, -23.2461, 0.55", "86.0305, 150.409, -23.633, 0.83", "88.1568, 154.216, -24.5102, 0.83", "90.7058, 158.703, -25.8614, 0.83", "92.6242, 161.917, -26.7922, 0.83", "95.3784, 166.48, -27.9864, 0.83", "98.1769, 171.158, -29.1564, 0.55", "100.125, 174.374, -30.0279, 0.55", "102.702, 178.484, -31.4677, 0.55", "105.512, 183.097, -33.2393, 0.55", "107.206, 185.924, -34.3264, 0.55", "108.233, 187.662, -35.0567, 0.55", "112.732, 195.338, -38.589, 0.55", "115.153, 199.412, -40.8988, 0.55", "116.056, 200.963, -41.9864, 0.28", "116.913, 202.515, -43.1944, 0.55", "118.788, 205.906, -45.7679, 0.55", "119.739, 207.743, -46.9432, 0.55", "120.499, 209.493, -47.7429, 0.28", "121.244, 211.356, -48.2791, 0.55", "122.63, 215.2, -48.982, 0.28", "123.257, 217.361, -48.9471, 0.55", "123.713, 219.47, -48.4491, 0.28", "123.962, 221.028, -47.7178, 0.55", "124.245, 223.998, -45.7862, 0.28", "124.317, 225.39, -44.7055, 0.55", "124.261, 226.693, -43.4741, 0.28", "124.16, 227.65, -42.4706, 0.55", "123.771, 230.899, -38.8053, 0.28", "123.6, 232.466, -36.8674, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "72.4692, 105.212, -36.4403, 0.83", "71.069, 107.214, -36.6556, 0.55", "70.4057, 108.162, -36.7576, 0.28", "69.7532, 109.095, -36.8579, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.3952, -64.4293, -31.073, 1.11", "-16.5861, -67.9256, -31.6738, 0.83", "-14.9952, -71.2835, -32.3354, 0.83", "-13.6996, -74.9817, -33.1038, 0.55", "-13.3894, -76.016, -33.3415, 0.83", "-12.4017, -79.3548, -34.1207, 0.83", "-11.91, -80.9304, -34.5244, 0.83", "-11.5086, -82.5843, -35.0122, 0.28", "-10.654, -86.7176, -36.3115, 0.83", "-10.4535, -87.8699, -36.7091, 0.28", "-10.159, -89.1231, -37.1321, 0.55", "-9.49418, -91.4579, -37.8312, 0.55", "-9.20967, -92.334, -38.1066, 0.55", "-8.73549, -93.6169, -38.5449, 0.83", "-7.85703, -95.8761, -39.2795, 0.55", "-6.95878, -98.4581, -40.0591, 0.55", "-6.5518, -99.6804, -40.4303, 0.55", "-5.57942, -102.666, -41.4401, 0.55", "-5.18771, -103.848, -41.9375, 0.28", "-4.41895, -106.156, -43.0623, 0.55", "-4.1703, -107.079, -43.5848, 0.55", "-3.78894, -108.819, -44.6736, 0.55", "-2.94981, -113.128, -47.6015, 0.55", "-2.72101, -114.639, -48.7618, 0.28", "-2.62972, -115.285, -49.2981, 0.55", "-2.21318, -118.469, -52.1421, 0.83", "-2.05347, -119.889, -53.42, 0.55", "-1.89447, -121.537, -54.9655, 0.55", "-1.73218, -123.366, -56.6383, 0.28", "-1.68846, -124.005, -57.1845, 0.55", "-1.57817, -125.384, -58.4294, 0.55", "-1.46675, -126.683, -59.6449, 0.55", "-1.41813, -128.437, -61.2191, 0.55", "-1.34858, -129.906, -62.5015, 0.83", "-1.28821, -131.507, -63.6845, 0.55", "-1.21341, -133.121, -64.7661, 0.55", "-1.12843, -134.636, -65.6399, 0.55", "-0.909487, -137.083, -66.8798, 0.55", "-0.614378, -139.19, -67.7524, 0.55", "-0.281678, -140.929, -68.3826, 0.83", "0.144114, -142.954, -69.0198, 0.55", "0.690251, -145.548, -69.7717, 0.55", "1.35051, -148.118, -70.5337, 0.55", "2.05745, -150.475, -71.2286, 0.55", "2.70818, -152.451, -71.8693, 0.28", "3.07878, -153.466, -72.301, 0.55", "3.39462, -154.311, -72.7311, 0.28", "3.99301, -155.713, -73.6643, 0.55", "4.5094, -156.895, -74.5398, 0.28", "4.9716, -157.959, -75.4556, 0.83", "5.92041, -160.023, -77.3005, 0.55", "6.45898, -161.136, -78.3213, 0.55", "7.41669, -163.097, -80.1865, 0.83", "7.79667, -163.839, -80.9329, 0.28", "8.41264, -165.05, -82.1912, 0.55", "9.25418, -166.52, -83.7501, 0.28", "9.82279, -167.42, -84.7708, 0.55", "10.602, -168.57, -86.0893, 0.28", "11.0403, -169.276, -86.8474, 0.83", "11.8643, -170.605, -88.2473, 0.55", "12.5015, -171.589, -89.2559, 0.55", "13.5788, -173.242, -90.91, 0.83", "14.6921, -174.919, -92.4891, 0.28", "15.7439, -176.352, -93.7034, 0.55", "16.585, -177.364, -94.5411, 0.28", "17.0758, -177.904, -94.9763, 0.55", "18.3395, -179.291, -96.0096, 0.28", "18.9206, -179.851, -96.4084, 0.55", "20.7922, -181.379, -97.6418, 0.28", "21.8509, -182.02, -98.1575, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-18.3952, -64.4293, -31.073, 1.11", "-19.0875, -64.5952, -31.6639, 0.83", "-20.107, -64.9726, -32.7058, 0.55", "-21.5219, -65.3366, -34.1367, 0.55", "-22.8736, -65.4407, -35.4197, 0.55", "-25.1165, -65.3784, -37.409, 0.55", "-26.6601, -65.3646, -38.7109, 0.83", "-28.0775, -65.5059, -40.1706, 0.83", "-28.9567, -65.7324, -41.4269, 0.83", "-29.9301, -66.0112, -42.9417, 0.83", "-31.2048, -66.2795, -45.0293, 0.83", "-32.4906, -66.5075, -47.0707, 0.83", "-34.3894, -66.8478, -50.3464, 0.83", "-35.762, -67.5257, -53.215, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-108.739, -95.858, 13.6981, 0.55", "-118.034, -95.412, 18.7309, 0.55", "-127.513, -96.2262, 23.382, 0.55", "-136.698, -99.979, 27.1938, 0.55", "-145.922, -103.343, 31.2561, 0.55", "-154.214, -107.171, 36.7387, 0.55", "-161.992, -110.415, 43.2534, 0.55", "-168.885, -115.06, 49.9774, 0.55", "-174.743, -119.485, 57.7657, 0.55", "-180.101, -123.623, 66.0551, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-108.739, -95.858, 13.6981, 0.55", "-112.179, -101.58, 19.2044, 0.55", "-114.848, -106.83, 25.5274, 0.55", "-116.095, -112.783, 31.697, 0.55", "-115.876, -118.745, 37.9765, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-35.762, -67.5257, -53.215, 0.83", "-41.4827, -65.0698, -59.5821, 0.83", "-46.1325, -63.6319, -64.5218, 0.83", "-50.8209, -62.6284, -69.2451, 0.55", "-54.2726, -62.0708, -72.5668, 0.55", "-55.7149, -61.8921, -73.8268, 0.55", "-59.4278, -61.5544, -76.8822, 0.83", "-60.5529, -61.6069, -77.6505, 0.83", "-66.1767, -62.5679, -81.216, 0.83", "-68.793, -63.2341, -82.8337, 0.83", "-72.0663, -64.0355, -84.9577, 0.83", "-76.242, -64.761, -88.0651, 0.83", "-79.2535, -65.0032, -90.6775, 1.11", "-81.5352, -65.242, -93.0436, 0.55", "-82.7974, -65.4094, -94.5663, 0.55", "-85.8287, -65.6926, -98.5733, 0.83", "-90.7343, -65.709, -105.519, 0.83", "-94.0637, -65.4843, -110.332, 0.83", "-97.5752, -65.1162, -115.521, 0.55", "-99.6231, -64.9698, -118.742, 0.83", "-100.649, -64.893, -120.428, 0.55", "-102.037, -64.8215, -122.898, 0.55", "-105.21, -64.7378, -128.351, 0.55", "-106.601, -64.6913, -130.518, 1.11", "-111.829, -64.0841, -139.301, 0.83", "-113.731, -63.6922, -142.783, 0.55", "-115.925, -62.9001, -147.351, 0.55", "-117.34, -62.2811, -150.548, 0.83", "-120.441, -60.6738, -157.55, 0.55", "-123.554, -58.9707, -164.421, 0.83", "-125.299, -57.9212, -168.772, 0.83", "-127.757, -56.8835, -175.029, 0.55", "-130.594, -56.1672, -181.516, 0.55", "-132.151, -55.9283, -184.655, 0.55", "-133.433, -55.885, -186.749, 0.55", "-140.736, -56.5138, -196.17, 0.55", "-143.773, -57.0205, -199.586, 0.55", "-147.268, -57.8074, -202.98, 0.55", "-152.034, -58.8853, -207.016, 0.55", "-153.693, -59.3667, -208.256, 0.28", "-155.587, -60.1938, -209.36, 0.55", "-158.466, -62.0481, -210.394, 0.28", "-160.378, -63.624, -211.169, 0.55", "-162.592, -66.1927, -212.039, 0.28", "-164.124, -68.4651, -212.478, 0.83", "-165.214, -70.164, -212.776, 0.83", "-166.846, -72.9697, -213.192, 0.28", "-168.175, -75.4876, -213.471, 0.55", "-169.492, -77.9626, -213.713, 0.28", "-170.815, -80.4994, -214.196, 0.55", "-171.939, -82.3983, -214.707, 0.28", "-172.499, -83.2724, -214.945, 0.55", "-173.675, -85.1054, -215.4, 0.28", "-174.089, -85.7453, -215.57, 0.55", "-176.284, -88.7866, -216.55, 0.28", "-177.519, -90.442, -217.159, 0.83", "-178.586, -91.719, -217.635, 0.28", "-179.39, -92.571, -217.936, 0.55", "-181.478, -94.6861, -218.661, 0.28", "-183.498, -96.6316, -219.282, 0.55", "-185.547, -98.465, -219.725, 0.55", "-187.067, -99.719, -220.101, 0.55", "-188.53, -100.828, -220.492, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-35.762, -67.5257, -53.215, 0.83", "-34.9819, -69.6109, -53.1361, 0.55", "-34.5685, -70.7209, -53.151, 0.83", "-34.1977, -71.8159, -53.2739, 0.55", "-33.764, -73.4478, -53.5091, 0.83", "-33.2965, -75.2984, -53.8567, 0.55", "-32.7399, -77.81, -54.3442, 0.55", "-32.5118, -79.051, -54.6428, 0.83", "-32.2156, -81.3174, -55.2441, 0.55", "-31.8781, -84.6606, -56.1758, 0.55", "-31.7375, -86.6301, -56.7738, 0.55", "-31.5869, -89.422, -57.7067, 0.55", "-31.5504, -91.3419, -58.3525, 0.28", "-31.5175, -93.9805, -59.133, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_60", "dend_35", "dend_28", "dend_5", "dend_0", "dend_62", "dend_61", "dend_49", "dend_36", "dend_32", "dend_29", "dend_9", "dend_6", "dend_2", "dend_1", "dend_72", "dend_63", "dend_51", "dend_50", "dend_44", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_23", "dend_10", "dend_8", "dend_7", "dend_4", "dend_3", "dend_76", "dend_73", "dend_67", "dend_64", "dend_57", "dend_52", "dend_48", "dend_45", "dend_39", "dend_38", "dend_27", "dend_24", "dend_16", "dend_11", "dend_75", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_59", "dend_58", "dend_54", "dend_53", "dend_47", "dend_46", "dend_41", "dend_40", "dend_26", "dend_25", "dend_18", "dend_17", "dend_13", "dend_12", "dend_71", "dend_70", "dend_56", "dend_55", "dend_43", "dend_42", "dend_22", "dend_19", "dend_15", "dend_14", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_60", "dend_35", "dend_28", "dend_5", "dend_0", "dend_62", "dend_61", "dend_49", "dend_36", "dend_32", "dend_29", "dend_9", "dend_6", "dend_2", "dend_1", "dend_72", "dend_63", "dend_51", "dend_50", "dend_44", "dend_37", "dend_34", "dend_33", "dend_31", "dend_30", "dend_23", "dend_10", "dend_8", "dend_7", "dend_4", "dend_3", "dend_76", "dend_73", "dend_67", "dend_64", "dend_57", "dend_52", "dend_48", "dend_45", "dend_39", "dend_38", "dend_27", "dend_24", "dend_16", "dend_11", "dend_75", "dend_74", "dend_69", "dend_68", "dend_66", "dend_65", "dend_59", "dend_58", "dend_54", "dend_53", "dend_47", "dend_46", "dend_41", "dend_40", "dend_26", "dend_25", "dend_18", "dend_17", "dend_13", "dend_12", "dend_71", "dend_70", "dend_56", "dend_55", "dend_43", "dend_42", "dend_22", "dend_19", "dend_15", "dend_14", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_60", "dend_60", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_49", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_72", "dend_72", "dend_72", "dend_63", "dend_63", "dend_63", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.022874",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039967",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999904",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.071165994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "5.5999997E-5",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.097243994",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.42883396",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004779",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.283745",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0029709998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.999812",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "8.6000003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.001612",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.7899998E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0068679997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_230_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr230_L4_SS_1afeb14f17_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_49, id: dend_49, parent: dend_35
create dend_49
public dend_49
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_72, id: dend_72, parent: dend_62
create dend_72
public dend_72
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_9
create dend_23
public dend_23
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_76, id: dend_76, parent: dend_72
create dend_76
public dend_76
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_51
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_60, dend_60, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_60(0), soma_0(0.4999999095343688)
    connect dend_35(0), soma_0(0.4999999095343688)
    connect dend_28(0), soma_0(0.4999999095343688)
    connect dend_5(0), soma_0(0.4999999095343688)
    connect dend_0(0), soma_0(0.4999999095343688)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_49(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_72(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_76(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.984759, -9.9799, -6.80323, 1.93637 ) }
    soma_0 { pt3dadd( 0.950247, -9.05028, -6.21218, 2.81477 ) }
    soma_0 { pt3dadd( 0.915735, -8.12066, -5.62113, 4.57156 ) }
    soma_0 { pt3dadd( 0.881223, -7.19104, -5.03008, 6.17758 ) }
    soma_0 { pt3dadd( 0.846711, -6.26142, -4.43903, 7.6644 ) }
    soma_0 { pt3dadd( 0.812198, -5.3318, -3.84798, 9.12262 ) }
    soma_0 { pt3dadd( 0.777686, -4.40218, -3.25693, 11.196 ) }
    soma_0 { pt3dadd( 0.743174, -3.47256, -2.66588, 13.4803 ) }
    soma_0 { pt3dadd( 0.708662, -2.54294, -2.07483, 13.9561 ) }
    soma_0 { pt3dadd( 0.674149, -1.61332, -1.48378, 14.1583 ) }
    soma_0 { pt3dadd( 0.639637, -0.683698, -0.892734, 13.7907 ) }
    soma_0 { pt3dadd( 0.605125, 0.245922, -0.301684, 12.8718 ) }
    soma_0 { pt3dadd( 0.570613, 1.17554, 0.289365, 11.9528 ) }
    soma_0 { pt3dadd( 0.5361, 2.10516, 0.880415, 11.5126 ) }
    soma_0 { pt3dadd( 0.501588, 3.03478, 1.47146, 11.1452 ) }
    soma_0 { pt3dadd( 0.467076, 3.9644, 2.06251, 10.5903 ) }
    soma_0 { pt3dadd( 0.432564, 4.89402, 2.65356, 9.88317 ) }
    soma_0 { pt3dadd( 0.398051, 5.82364, 3.24461, 9.18042 ) }
    soma_0 { pt3dadd( 0.363539, 6.75327, 3.83566, 8.47766 ) }
    soma_0 { pt3dadd( 0.329027, 7.68289, 4.42671, 6.39115 ) }
    soma_0 { pt3dadd( 0.294515, 8.61251, 5.01776, 3.6597 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 21/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 2.97119, 6.54307, 4.4499, 1.11 ) }
    dend_60 { pt3dadd( 3.7763, 8.48807, 5.76564, 1.11 ) }
    dend_60 { pt3dadd( 4.40963, 10.0888, 5.87809, 1.11 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 6.13723, 0.0864947, -6.88472, 2.22 ) }
    dend_35 { pt3dadd( 6.58345, 0.135312, -7.36003, 2.22 ) }
    dend_35 { pt3dadd( 7.22068, 1.63232, -9.62403, 1.94 ) }
    dend_35 { pt3dadd( 8.00133, 3.46625, -12.3976, 1.66 ) }
    dend_35 { pt3dadd( 8.27108, 4.09995, -13.3559, 1.66 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.920203, 7.50212, 3.77249, 1.11 ) }
    dend_28 { pt3dadd( -0.943382, 7.70109, 3.87445, 1.11 ) }
    dend_28 { pt3dadd( -2.09306, 10.3168, 4.28141, 1.11 ) }
    dend_28 { pt3dadd( -3.43134, 13.1715, 4.80384, 1.11 ) }
    dend_28 { pt3dadd( -5.05728, 16.1509, 5.55271, 1.11 ) }
    dend_28 { pt3dadd( -6.84845, 19.433, 6.37768, 1.11 ) }
    dend_28 { pt3dadd( -8.87647, 23.1492, 7.31173, 0.83 ) }
    dend_28 { pt3dadd( -9.66117, 24.4961, 7.69189, 0.83 ) }
    dend_28 { pt3dadd( -10.7628, 26.272, 8.2864, 1.11 ) }
    dend_28 { pt3dadd( -12.5961, 29.2709, 9.25097, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 39/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -2.71774, -8.88919, -3.03191, 3.32 ) }
    dend_5 { pt3dadd( -3.57704, -11.4949, -3.86679, 3.32 ) }
    dend_5 { pt3dadd( -3.85122, -16.9578, -4.10904, 2.22 ) }
    dend_5 { pt3dadd( -4.17352, -23.3795, -4.3938, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.25136, -5.52239, -4.57593, 1.11 ) }
    dend_0 { pt3dadd( -5.01895, -4.55189, -3.7497, 1.11 ) }
    dend_0 { pt3dadd( -8.85331, -5.26467, -3.63372, 1.11 ) }
    dend_0 { pt3dadd( -12.1338, -5.53796, -3.53088, 1.11 ) }
    dend_0 { pt3dadd( -15.0312, -5.77934, -3.44004, 1.11 ) }
    dend_0 { pt3dadd( -19.9265, -6.18717, -3.28657, 1.11 ) }
    dend_0 { pt3dadd( -23.7583, -6.50639, -3.16643, 0.83 ) }
    dend_0 { pt3dadd( -27.8797, -6.54568, -3.0401, 0.83 ) }
    dend_0 { pt3dadd( -30.93, -6.20669, -2.96217, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 52/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.294515, 8.61251, 5.01776, 0.67 ) }
    axon_0 { pt3dadd( -0.261977, 23.6022, 5.01776, 0.67 ) }
    axon_0 { pt3dadd( -0.818469, 38.5919, 5.01776, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 55/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.40963, 10.0888, 5.87809, 1.11 ) }
    dend_62 { pt3dadd( 6.24008, 11.6592, 8.13778, 0.83 ) }
    dend_62 { pt3dadd( 7.17794, 12.4447, 9.25215, 0.83 ) }
    dend_62 { pt3dadd( 9.52601, 14.2633, 11.9189, 0.83 ) }
    dend_62 { pt3dadd( 12.0965, 16.1633, 14.8387, 0.83 ) }
    dend_62 { pt3dadd( 13.0086, 16.7802, 15.8311, 0.55 ) }
    dend_62 { pt3dadd( 14.2656, 17.6306, 17.1988, 0.83 ) }
    dend_62 { pt3dadd( 16.2107, 18.9034, 19.203, 0.83 ) }
    dend_62 { pt3dadd( 17.0848, 19.4223, 20.1302, 0.55 ) }
    dend_62 { pt3dadd( 19.2739, 20.5124, 22.347, 0.55 ) }
    dend_62 { pt3dadd( 20.4659, 21.0444, 23.4096, 0.55 ) }
    dend_62 { pt3dadd( 23.926, 24.5332, 29.1615, 0.55 ) }
    dend_62 { pt3dadd( 27.0836, 28.5599, 34.7498, 0.55 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 4.40963, 10.0888, 5.87809, 1.11 ) }
    dend_61 { pt3dadd( 5.13119, 11.7717, 6.39345, 0.55 ) }
    dend_61 { pt3dadd( 5.51857, 13.1297, 6.59206, 0.55 ) }
    dend_61 { pt3dadd( 6.20777, 15.2671, 6.73943, 0.28 ) }
    dend_61 { pt3dadd( 6.51592, 16.1488, 6.81205, 0.55 ) }
    dend_61 { pt3dadd( 7.05674, 17.5134, 6.96858, 0.28 ) }
    dend_61 { pt3dadd( 7.72715, 19.2149, 7.23051, 0.55 ) }
    dend_61 { pt3dadd( 8.47323, 21.1964, 7.61091, 0.55 ) }
    dend_61 { pt3dadd( 9.32497, 23.4754, 7.94836, 0.55 ) }
    dend_61 { pt3dadd( 9.91906, 25.1838, 8.07047, 0.55 ) }
    dend_61 { pt3dadd( 10.8737, 27.9085, 8.15757, 0.55 ) }
    dend_61 { pt3dadd( 11.477, 29.6251, 8.1654, 0.28 ) }
    dend_61 { pt3dadd( 11.9792, 30.9709, 8.11691, 0.55 ) }
    dend_61 { pt3dadd( 12.8668, 33.3508, 8.12984, 0.55 ) }
    dend_61 { pt3dadd( 13.5041, 35.2381, 8.19294, 0.55 ) }
    dend_61 { pt3dadd( 14.7707, 38.7278, 8.42322, 0.55 ) }
    dend_61 { pt3dadd( 15.2601, 39.9253, 8.5622, 0.55 ) }
    dend_61 { pt3dadd( 16.7438, 42.7927, 9.10369, 0.55 ) }
    dend_61 { pt3dadd( 19.0758, 46.6958, 10.1369, 0.83 ) }
    dend_61 { pt3dadd( 20.3363, 48.4758, 10.7198, 0.55 ) }
    dend_61 { pt3dadd( 22.2369, 50.7585, 11.5066, 0.83 ) }
    dend_61 { pt3dadd( 23.8873, 52.478, 12.0937, 0.83 ) }
    dend_61 { pt3dadd( 26.2989, 54.7094, 12.7805, 0.83 ) }
    dend_61 { pt3dadd( 28.1296, 56.2647, 13.2076, 0.83 ) }
    dend_61 { pt3dadd( 30.4692, 58.0445, 13.5547, 0.83 ) }
    dend_61 { pt3dadd( 32.5323, 59.5542, 13.8639, 0.83 ) }
    dend_61 { pt3dadd( 34.2298, 60.7964, 14.1338, 0.83 ) }
    dend_61 { pt3dadd( 36.5145, 62.4682, 14.488, 0.83 ) }
    dend_61 { pt3dadd( 40.0308, 65.0983, 15.1352, 0.55 ) }
    dend_61 { pt3dadd( 42.3805, 66.8084, 15.5497, 0.55 ) }
    dend_61 { pt3dadd( 43.3081, 67.5097, 15.7228, 0.55 ) }
    dend_61 { pt3dadd( 44.8836, 68.6776, 15.8867, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_61 { pt3dadd( 46.1706, 69.6625, 15.8725, 0.28 ) }
    dend_61 { pt3dadd( 47.7463, 70.9143, 15.5649, 0.55 ) }
    dend_61 { pt3dadd( 50.0225, 72.723, 14.6405, 0.55 ) }
    dend_61 { pt3dadd( 51.0863, 73.6074, 14.0288, 0.55 ) }
    dend_61 { pt3dadd( 53.1953, 75.2606, 12.6027, 0.83 ) }
    dend_61 { pt3dadd( 54.0824, 75.9872, 11.8306, 0.55 ) }
    dend_61 { pt3dadd( 54.6942, 76.5417, 11.2016, 0.83 ) }
    dend_61 { pt3dadd( 60.583, 83.5094, 13.132, 0.83 ) }
    dend_61 { pt3dadd( 66.2319, 90.714, 14.948, 0.83 ) }
    dend_61 { pt3dadd( 72.9641, 96.3064, 18.0362, 0.83 ) }
    dend_61 { pt3dadd( 80.2808, 101.221, 20.8822, 0.83 ) }
    // Section: dend_49, id: dend_49, parent: dend_35 (entry count 11/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 8.27108, 4.09995, -13.3559, 1.66 ) }
    dend_49 { pt3dadd( 10.3719, 2.70496, -15.0927, 1.38 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 13/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 8.27108, 4.09995, -13.3559, 1.66 ) }
    dend_36 { pt3dadd( 8.68923, 6.76391, -14.8063, 1.11 ) }
    dend_36 { pt3dadd( 9.28826, 10.5802, -16.8842, 1.11 ) }
    dend_36 { pt3dadd( 9.59939, 12.5624, -17.9634, 1.11 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -12.5961, 29.2709, 9.25097, 0.83 ) }
    dend_32 { pt3dadd( -12.3711, 32.537, 10.7099, 0.83 ) }
    dend_32 { pt3dadd( -12.2095, 35.0119, 11.7592, 0.83 ) }
    dend_32 { pt3dadd( -11.8502, 38.5052, 13.0363, 0.83 ) }
    dend_32 { pt3dadd( -11.4375, 43.0331, 14.6439, 0.83 ) }
    dend_32 { pt3dadd( -11.2918, 45.9594, 15.628, 0.55 ) }
    dend_32 { pt3dadd( -11.2056, 47.8923, 16.2181, 0.83 ) }
    dend_32 { pt3dadd( -11.0839, 50.0374, 16.8329, 0.83 ) }
    dend_32 { pt3dadd( -10.7687, 54.5403, 18.0737, 0.83 ) }
    dend_32 { pt3dadd( -10.5232, 59.1559, 19.3105, 0.83 ) }
    dend_32 { pt3dadd( -10.3401, 63.4099, 20.2103, 0.83 ) }
    dend_32 { pt3dadd( -10.1659, 66.3532, 20.7714, 0.83 ) }
    dend_32 { pt3dadd( -9.95074, 70.572, 21.6165, 0.83 ) }
    dend_32 { pt3dadd( -9.84365, 72.9155, 22.1218, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -12.5961, 29.2709, 9.25097, 0.83 ) }
    dend_29 { pt3dadd( -14.1117, 29.9895, 8.66951, 0.55 ) }
    dend_29 { pt3dadd( -15.2126, 30.4383, 8.19964, 0.55 ) }
    dend_29 { pt3dadd( -16.1904, 30.7916, 7.76948, 0.28 ) }
    dend_29 { pt3dadd( -17.2006, 31.0676, 7.34197, 0.55 ) }
    dend_29 { pt3dadd( -19.5969, 31.5516, 6.36776, 0.55 ) }
    dend_29 { pt3dadd( -21.0514, 31.7411, 5.77305, 0.28 ) }
    dend_29 { pt3dadd( -21.3444, 31.7385, 5.64992, 0.55 ) }
    dend_29 { pt3dadd( -22.2122, 31.6646, 5.34268, 0.55 ) }
    dend_29 { pt3dadd( -24.3907, 31.4397, 4.74228, 0.55 ) }
    dend_29 { pt3dadd( -26.3747, 31.2199, 4.28305, 0.55 ) }
    dend_29 { pt3dadd( -27.5277, 31.1031, 4.14383, 0.55 ) }
    dend_29 { pt3dadd( -28.8382, 31.0664, 4.09016, 0.55 ) }
    dend_29 { pt3dadd( -30.9772, 31.0904, 4.06679, 0.28 ) }
    dend_29 { pt3dadd( -33.1185, 31.1085, 4.07596, 0.55 ) }
    dend_29 { pt3dadd( -35.6432, 31.1129, 4.0664, 0.55 ) }
    dend_29 { pt3dadd( -38.6447, 31.1583, 4.05743, 0.28 ) }
    dend_29 { pt3dadd( -40.0856, 31.1972, 4.01307, 0.55 ) }
    dend_29 { pt3dadd( -41.6781, 31.2691, 3.92514, 0.55 ) }
    dend_29 { pt3dadd( -44.6057, 31.3956, 3.72937, 0.55 ) }
    dend_29 { pt3dadd( -47.5649, 31.4866, 3.49687, 0.55 ) }
    dend_29 { pt3dadd( -50.3639, 31.6366, 3.29683, 0.28 ) }
    dend_29 { pt3dadd( -51.8679, 31.6811, 3.15281, 0.28 ) }
    dend_29 { pt3dadd( -53.5206, 31.6689, 3.03199, 0.55 ) }
    dend_29 { pt3dadd( -55.789, 31.6542, 2.89418, 0.55 ) }
    dend_29 { pt3dadd( -57.7069, 31.6432, 2.79185, 0.55 ) }
    dend_29 { pt3dadd( -60.5065, 31.5599, 2.59761, 0.55 ) }
    dend_29 { pt3dadd( -63.2614, 31.2811, 2.28723, 0.55 ) }
    dend_29 { pt3dadd( -65.9859, 30.9883, 2.0055, 0.55 ) }
    dend_29 { pt3dadd( -67.8284, 30.7496, 1.76936, 0.55 ) }
    dend_29 { pt3dadd( -68.9348, 30.5962, 1.61086, 0.55 ) }
    dend_29 { pt3dadd( -71.1862, 30.253, 1.2568, 0.55 ) }
    dend_29 { pt3dadd( -73.8469, 29.7406, 0.72262, 0.55 ) }
    dend_29 { pt3dadd( -76.2295, 29.2341, 0.201148, 0.55 ) }
    dend_29 { pt3dadd( -79.1487, 28.4639, -0.480846, 0.55 ) }
    dend_29 { pt3dadd( -81.8456, 27.5916, -1.12398, 0.55 ) }
    dend_29 { pt3dadd( -83.1951, 27.0158, -1.45727, 0.28 ) }
    dend_29 { pt3dadd( -84.3134, 26.4635, -1.72176, 0.55 ) }
    dend_29 { pt3dadd( -85.9766, 25.5361, -2.12991, 0.55 ) }
    dend_29 { pt3dadd( -86.7684, 25.0048, -2.33988, 0.28 ) }
    dend_29 { pt3dadd( -88.0907, 24.1355, -2.64635, 0.28 ) }
    dend_29 { pt3dadd( -90.6709, 22.5762, -3.19227, 0.55 ) }
    dend_29 { pt3dadd( -93.4339, 20.9766, -3.70704, 0.28 ) }
    dend_29 { pt3dadd( -94.963, 20.1189, -4.02546, 0.28 ) }
    dend_29 { pt3dadd( -95.7709, 19.6383, -4.18427, 0.55 ) }
    dend_29 { pt3dadd( -99.2636, 17.5608, -4.82124, 0.55 ) }
    dend_29 { pt3dadd( -100.017, 17.076, -4.95698, 0.55 ) }
    dend_29 { pt3dadd( -101.888, 15.6919, -5.26378, 0.55 ) }
    dend_29 { pt3dadd( -103.509, 14.2568, -5.50784, 0.55 ) }
    dend_29 { pt3dadd( -105.291, 12.521, -5.77581, 0.55 ) }
    dend_29 { pt3dadd( -106.845, 10.8365, -5.99611, 0.55 ) }
    dend_29 { pt3dadd( -107.873, 9.55194, -6.17782, 0.55 ) }
    dend_29 { pt3dadd( -109.898, 7.26983, -6.7407, 0.55 ) }
    dend_29 { pt3dadd( -110.673, 6.46738, -7.02653, 0.55 ) }
    dend_29 { pt3dadd( -111.544, 5.65559, -7.42878, 0.28 ) }
    dend_29 { pt3dadd( -112.901, 4.54965, -8.16676, 0.55 ) }
    dend_29 { pt3dadd( -114.727, 3.18551, -9.26436, 0.55 ) }
    dend_29 { pt3dadd( -117.222, 1.65356, -10.8283, 0.55 ) }
    dend_29 { pt3dadd( -118.953, 0.795194, -11.9447, 0.55 ) }
    dend_29 { pt3dadd( -120.618, -0.0151548, -13.0172, 0.28 ) }
    dend_29 { pt3dadd( -121.387, -0.361046, -13.4726, 0.55 ) }
    dend_29 { pt3dadd( -122.401, -0.820198, -13.9782, 0.28 ) }
    dend_29 { pt3dadd( -123.226, -1.23522, -14.2712, 0.55 ) }
    dend_29 { pt3dadd( -124.271, -1.86786, -14.5075, 0.28 ) }
    dend_29 { pt3dadd( -125.3, -2.49921, -14.6907, 0.55 ) }
    dend_29 { pt3dadd( -127.91, -4.2609, -15.0086, 0.55 ) }
    dend_29 { pt3dadd( -130.133, -5.84142, -15.1868, 0.28 ) }
    dend_29 { pt3dadd( -130.868, -6.41811, -15.2014, 0.55 ) }
    dend_29 { pt3dadd( -131.937, -7.31583, -15.1546, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_29 { pt3dadd( -133.263, -8.48164, -14.9947, 0.55 ) }
    dend_29 { pt3dadd( -141.098, -10.7538, -15.0103, 0.55 ) }
    dend_29 { pt3dadd( -148.712, -13.7041, -15.2893, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 3/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -4.17352, -23.3795, -4.3938, 2.49 ) }
    dend_9 { pt3dadd( -5.04838, -24.8558, -4.46245, 1.38 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 5/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.17352, -23.3795, -4.3938, 2.49 ) }
    dend_6 { pt3dadd( -1.93033, -24.0256, -6.01184, 1.38 ) }
    dend_6 { pt3dadd( -0.177913, -24.3589, -7.17517, 1.38 ) }
    dend_6 { pt3dadd( 2.63419, -24.8683, -8.99527, 0.83 ) }
    dend_6 { pt3dadd( 3.62858, -25.0341, -9.64704, 0.83 ) }
    dend_6 { pt3dadd( 7.03478, -25.2926, -12.1054, 0.55 ) }
    dend_6 { pt3dadd( 8.97862, -25.3848, -13.5269, 0.83 ) }
    dend_6 { pt3dadd( 11.3305, -25.3613, -15.2952, 0.55 ) }
    dend_6 { pt3dadd( 12.8368, -25.2636, -16.3375, 0.55 ) }
    dend_6 { pt3dadd( 14.567, -25.074, -17.4498, 0.55 ) }
    dend_6 { pt3dadd( 18.7116, -24.7189, -20.0352, 0.55 ) }
    dend_6 { pt3dadd( 20.9161, -24.6284, -21.3786, 0.28 ) }
    dend_6 { pt3dadd( 21.8722, -24.657, -21.9394, 0.55 ) }
    dend_6 { pt3dadd( 23.9443, -24.7842, -23.1665, 0.55 ) }
    dend_6 { pt3dadd( 25.4537, -24.9833, -24.0773, 0.28 ) }
    dend_6 { pt3dadd( 27.0544, -25.3346, -25.0251, 0.55 ) }
    dend_6 { pt3dadd( 30.2482, -26.1692, -26.8956, 0.55 ) }
    dend_6 { pt3dadd( 32.3024, -26.6409, -28.2717, 0.55 ) }
    dend_6 { pt3dadd( 35.525, -27.3747, -30.6042, 0.55 ) }
    dend_6 { pt3dadd( 37.8211, -27.9492, -32.3323, 0.55 ) }
    dend_6 { pt3dadd( 38.7695, -28.2008, -33.019, 0.55 ) }
    dend_6 { pt3dadd( 40.8881, -28.8362, -34.6699, 0.55 ) }
    dend_6 { pt3dadd( 43.1377, -29.6543, -36.4871, 0.55 ) }
    dend_6 { pt3dadd( 45.4806, -30.5585, -38.4727, 0.55 ) }
    dend_6 { pt3dadd( 46.6342, -31.0617, -39.4135, 0.55 ) }
    dend_6 { pt3dadd( 48.0719, -31.6589, -40.5792, 0.55 ) }
    dend_6 { pt3dadd( 50.5138, -32.7174, -42.5937, 0.28 ) }
    dend_6 { pt3dadd( 51.7231, -33.2356, -43.4481, 0.55 ) }
    dend_6 { pt3dadd( 52.4362, -33.4068, -43.8715, 0.55 ) }
    dend_6 { pt3dadd( 53.6193, -33.4437, -44.5496, 0.55 ) }
    dend_6 { pt3dadd( 55.4551, -33.3066, -45.546, 0.55 ) }
    dend_6 { pt3dadd( 58.566, -33.0065, -47.2878, 0.55 ) }
    dend_6 { pt3dadd( 61.0991, -32.648, -48.7149, 0.83 ) }
    dend_6 { pt3dadd( 64.0636, -32.2336, -50.4653, 0.55 ) }
    dend_6 { pt3dadd( 67.006, -31.9527, -52.4205, 0.55 ) }
    dend_6 { pt3dadd( 68.6614, -31.879, -53.6347, 0.55 ) }
    dend_6 { pt3dadd( 71.747, -31.9884, -56.094, 0.55 ) }
    dend_6 { pt3dadd( 73.8216, -32.2704, -58.0111, 0.83 ) }
    dend_6 { pt3dadd( 74.7778, -32.5204, -58.9606, 0.55 ) }
    dend_6 { pt3dadd( 76.7708, -33.2463, -61.0099, 0.83 ) }
    dend_6 { pt3dadd( 77.6538, -33.6025, -61.9726, 0.55 ) }
    dend_6 { pt3dadd( 79.4537, -34.3452, -63.9369, 0.83 ) }
    dend_6 { pt3dadd( 81.3141, -35.1518, -65.9278, 0.55 ) }
    dend_6 { pt3dadd( 82.6126, -35.7921, -67.3677, 0.55 ) }
    dend_6 { pt3dadd( 85.416, -37.2487, -70.6639, 0.28 ) }
    dend_6 { pt3dadd( 86.8415, -38.0377, -72.3337, 0.55 ) }
    dend_6 { pt3dadd( 87.825, -38.6617, -73.4864, 0.55 ) }
    dend_6 { pt3dadd( 89.6732, -40.0579, -75.5682, 0.28 ) }
    dend_6 { pt3dadd( 90.6833, -40.9724, -76.6292, 0.55 ) }
    dend_6 { pt3dadd( 91.7667, -42.1284, -77.5703, 0.28 ) }
    dend_6 { pt3dadd( 93.4423, -44.1057, -78.4454, 0.55 ) }
    dend_6 { pt3dadd( 94.6166, -45.5475, -78.9402, 0.55 ) }
    dend_6 { pt3dadd( 95.9135, -47.2026, -79.3606, 0.55 ) }
    dend_6 { pt3dadd( 97.6632, -49.3566, -79.5447, 0.55 ) }
    dend_6 { pt3dadd( 100.575, -52.6535, -79.4032, 0.28 ) }
    dend_6 { pt3dadd( 102.005, -54.1773, -79.1071, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 61/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -30.93, -6.20669, -2.96217, 0.83 ) }
    dend_2 { pt3dadd( -35.1456, -4.69732, -1.9308, 0.83 ) }
    dend_2 { pt3dadd( -36.9727, -3.85861, -1.28469, 0.83 ) }
    dend_2 { pt3dadd( -40.2187, -2.14782, -0.0474859, 0.83 ) }
    dend_2 { pt3dadd( -42.761, -0.703184, 0.92754, 0.83 ) }
    dend_2 { pt3dadd( -44.3396, 0.242394, 1.51071, 0.83 ) }
    dend_2 { pt3dadd( -49.5729, 3.37714, 3.44401, 0.83 ) }
    dend_2 { pt3dadd( -53.0913, 5.59192, 4.91523, 0.83 ) }
    dend_2 { pt3dadd( -55.8272, 7.4597, 6.2126, 0.55 ) }
    dend_2 { pt3dadd( -56.6341, 8.04256, 6.65249, 0.83 ) }
    dend_2 { pt3dadd( -58.7789, 9.89534, 7.8666, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 72/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -30.93, -6.20669, -2.96217, 0.83 ) }
    dend_1 { pt3dadd( -34.3132, -6.5411, -3.89974, 0.55 ) }
    dend_1 { pt3dadd( -35.5346, -6.76723, -4.25393, 0.28 ) }
    dend_1 { pt3dadd( -36.2775, -6.91801, -4.50301, 0.55 ) }
    dend_1 { pt3dadd( -38.0907, -7.37216, -5.28892, 0.28 ) }
    dend_1 { pt3dadd( -40.6391, -8.28713, -6.50677, 0.55 ) }
    dend_1 { pt3dadd( -43.7246, -9.55843, -7.94059, 0.55 ) }
    dend_1 { pt3dadd( -45.4438, -10.2888, -8.70673, 0.83 ) }
    dend_1 { pt3dadd( -47.8212, -11.3479, -9.66115, 0.55 ) }
    dend_1 { pt3dadd( -50.794, -12.569, -10.8001, 0.55 ) }
    dend_1 { pt3dadd( -54.4458, -13.8848, -12.0671, 0.55 ) }
    dend_1 { pt3dadd( -58.1027, -15.0901, -13.173, 0.55 ) }
    dend_1 { pt3dadd( -61.1203, -15.8063, -13.9638, 0.55 ) }
    dend_1 { pt3dadd( -65.2904, -16.3692, -14.8887, 0.55 ) }
    dend_1 { pt3dadd( -68.2501, -16.4573, -15.4677, 0.28 ) }
    dend_1 { pt3dadd( -70.7345, -16.342, -15.9109, 0.55 ) }
    dend_1 { pt3dadd( -72.8083, -16.0952, -16.3394, 0.55 ) }
    dend_1 { pt3dadd( -75.9287, -15.6192, -17.0701, 0.55 ) }
    dend_1 { pt3dadd( -77.7908, -15.4029, -17.5482, 0.55 ) }
    dend_1 { pt3dadd( -81.1637, -15.047, -18.4647, 0.28 ) }
    dend_1 { pt3dadd( -85.1655, -14.83, -19.5738, 0.55 ) }
    dend_1 { pt3dadd( -88.184, -14.7217, -20.4985, 0.55 ) }
    dend_1 { pt3dadd( -91.2746, -14.6848, -21.4734, 0.28 ) }
    dend_1 { pt3dadd( -94.1691, -14.7398, -22.402, 0.55 ) }
    dend_1 { pt3dadd( -95.6088, -14.767, -22.8547, 0.28 ) }
    dend_1 { pt3dadd( -96.8723, -14.7973, -23.2179, 0.55 ) }
    dend_1 { pt3dadd( -97.565, -14.7658, -23.402, 0.28 ) }
    dend_1 { pt3dadd( -98.9845, -14.7734, -23.795, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( -100.939, -14.785, -24.3767, 0.28 ) }
    dend_1 { pt3dadd( -103.399, -14.7691, -25.1957, 0.55 ) }
    dend_1 { pt3dadd( -106.089, -14.7798, -25.9166, 0.28 ) }
    dend_1 { pt3dadd( -109.334, -14.8655, -26.8128, 0.28 ) }
    dend_1 { pt3dadd( -112.428, -14.9582, -27.6538, 0.55 ) }
    dend_1 { pt3dadd( -114.421, -14.989, -28.2322, 0.28 ) }
    dend_1 { pt3dadd( -117.564, -15.0176, -29.1648, 0.55 ) }
    dend_1 { pt3dadd( -121.348, -15.0658, -30.4992, 0.55 ) }
    dend_1 { pt3dadd( -125.702, -14.9112, -32.0677, 0.28 ) }
    dend_1 { pt3dadd( -127.465, -14.9321, -32.8439, 0.55 ) }
    dend_1 { pt3dadd( -128.913, -14.9635, -33.5161, 0.28 ) }
    dend_1 { pt3dadd( -130.599, -15.0512, -34.2988, 0.55 ) }
    dend_1 { pt3dadd( -133.117, -15.2788, -35.4693, 0.55 ) }
    dend_1 { pt3dadd( -136.045, -15.6997, -36.9056, 0.55 ) }
    dend_1 { pt3dadd( -140.269, -16.336, -38.625, 0.28 ) }
    dend_1 { pt3dadd( -140.926, -16.459, -38.9034, 0.55 ) }
    dend_1 { pt3dadd( -146.265, -17.6129, -40.9824, 0.55 ) }
    dend_1 { pt3dadd( -148.343, -18.0322, -41.7943, 0.28 ) }
    dend_1 { pt3dadd( -149.875, -18.3422, -42.3679, 0.55 ) }
    dend_1 { pt3dadd( -152.333, -18.9157, -43.4002, 0.55 ) }
    dend_1 { pt3dadd( -155.396, -19.6197, -44.6989, 0.28 ) }
    dend_1 { pt3dadd( -158.932, -20.4861, -46.359, 0.55 ) }
    dend_1 { pt3dadd( -162.529, -21.4722, -48.3541, 0.28 ) }
    dend_1 { pt3dadd( -163.629, -21.7449, -48.9976, 0.83 ) }
    dend_1 { pt3dadd( -166.869, -22.5598, -50.9771, 0.28 ) }
    dend_1 { pt3dadd( -167.705, -22.7999, -51.5213, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.818469, 38.5919, 5.01776, 0.67 ) }
    axon_1 { pt3dadd( -1.37496, 53.5815, 5.01776, 0.67 ) }
    axon_1 { pt3dadd( -1.93145, 68.5712, 5.01776, 0.67 ) }
    // Section: dend_72, id: dend_72, parent: dend_62 (entry count 29/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 27.0836, 28.5599, 34.7498, 0.55 ) }
    dend_72 { pt3dadd( 29.0572, 31.7845, 42.8304, 0.55 ) }
    dend_72 { pt3dadd( 30.1754, 33.4893, 51.4938, 0.55 ) }
    dend_72 { pt3dadd( 29.6852, 34.7499, 60.2867, 0.55 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 33/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 27.0836, 28.5599, 34.7498, 0.55 ) }
    dend_63 { pt3dadd( 32.4565, 31.6908, 38.6795, 0.55 ) }
    dend_63 { pt3dadd( 37.5775, 35.0948, 42.7269, 0.55 ) }
    dend_63 { pt3dadd( 42.0802, 38.8423, 47.1947, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 37/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 10.3719, 2.70496, -15.0927, 1.38 ) }
    dend_51 { pt3dadd( 13.0627, 0.975254, -30.0181, 0.83 ) }
    dend_51 { pt3dadd( 13.3971, 0.760314, -31.8728, 0.83 ) }
    dend_51 { pt3dadd( 14.1463, 0.27876, -36.028, 1.11 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 41/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 10.3719, 2.70496, -15.0927, 1.38 ) }
    dend_50 { pt3dadd( 14.1478, 3.18747, -15.1607, 0.55 ) }
    dend_50 { pt3dadd( 18.4548, 3.52414, -15.1686, 0.55 ) }
    dend_50 { pt3dadd( 21.7034, 3.65338, -15.1252, 0.55 ) }
    dend_50 { pt3dadd( 26.8737, 3.89391, -14.9355, 0.55 ) }
    dend_50 { pt3dadd( 30.1655, 4.17389, -14.6821, 0.55 ) }
    dend_50 { pt3dadd( 33.5657, 4.66409, -14.338, 0.55 ) }
    dend_50 { pt3dadd( 36.6906, 5.38637, -13.904, 0.55 ) }
    dend_50 { pt3dadd( 38.5744, 6.06888, -13.5165, 0.55 ) }
    dend_50 { pt3dadd( 41.8666, 7.75006, -12.6725, 0.55 ) }
    dend_50 { pt3dadd( 45.2165, 9.93664, -11.6671, 0.28 ) }
    dend_50 { pt3dadd( 48.7763, 12.5417, -10.3634, 0.55 ) }
    dend_50 { pt3dadd( 52.0839, 15.3172, -9.05117, 0.55 ) }
    dend_50 { pt3dadd( 56.1426, 18.9685, -7.17928, 0.55 ) }
    dend_50 { pt3dadd( 57.5743, 20.3123, -6.46425, 0.55 ) }
    dend_50 { pt3dadd( 59.0747, 21.681, -5.65431, 0.55 ) }
    dend_50 { pt3dadd( 62.9724, 25.0961, -3.41877, 0.55 ) }
    dend_50 { pt3dadd( 64.2679, 26.0436, -2.73106, 0.55 ) }
    dend_50 { pt3dadd( 66.9756, 27.7995, -1.42275, 0.83 ) }
    dend_50 { pt3dadd( 68.4045, 28.627, -0.842953, 0.28 ) }
    dend_50 { pt3dadd( 71.3793, 30.2349, 0.230234, 0.55 ) }
    dend_50 { pt3dadd( 73.3268, 31.1852, 0.72763, 0.55 ) }
    dend_50 { pt3dadd( 80.8459, 34.7866, 1.83351, 0.55 ) }
    dend_50 { pt3dadd( 84.4916, 36.457, 2.0412, 0.55 ) }
    dend_50 { pt3dadd( 86.853, 37.5597, 2.04398, 0.55 ) }
    dend_50 { pt3dadd( 89.7789, 38.8481, 1.92595, 0.55 ) }
    dend_50 { pt3dadd( 93.7646, 40.6047, 1.7511, 0.55 ) }
    dend_50 { pt3dadd( 96.7076, 41.8229, 1.6837, 0.83 ) }
    dend_50 { pt3dadd( 100.594, 43.3837, 1.88308, 0.55 ) }
    dend_50 { pt3dadd( 104.763, 44.5563, 2.4021, 0.55 ) }
    dend_50 { pt3dadd( 107.494, 45.0576, 3.02766, 0.55 ) }
    dend_50 { pt3dadd( 111.644, 45.2961, 4.37034, 0.55 ) }
    dend_50 { pt3dadd( 113.23, 45.1877, 5.01551, 0.55 ) }
    dend_50 { pt3dadd( 117.528, 44.1744, 6.8614, 0.55 ) }
    dend_50 { pt3dadd( 121.447, 42.6493, 8.71795, 0.55 ) }
    dend_50 { pt3dadd( 123.366, 41.6667, 9.57483, 0.55 ) }
    dend_50 { pt3dadd( 126.553, 39.7465, 10.9936, 0.55 ) }
    dend_50 { pt3dadd( 128.418, 38.5196, 11.6916, 0.55 ) }
    dend_50 { pt3dadd( 130.02, 37.4207, 12.3009, 0.55 ) }
    dend_50 { pt3dadd( 132.366, 35.7966, 13.1716, 0.55 ) }
    dend_50 { pt3dadd( 134.968, 34.2452, 14.1991, 0.55 ) }
    dend_50 { pt3dadd( 137.19, 32.9343, 15.1877, 0.55 ) }
    dend_50 { pt3dadd( 140.07, 31.2678, 16.5562, 0.55 ) }
    dend_50 { pt3dadd( 142.511, 30.0154, 17.7439, 0.55 ) }
    dend_50 { pt3dadd( 144.424, 29.1042, 18.6802, 0.28 ) }
    dend_50 { pt3dadd( 146.511, 28.0731, 19.6614, 0.55 ) }
    dend_50 { pt3dadd( 148.591, 26.9338, 20.7135, 0.55 ) }
    dend_50 { pt3dadd( 159.54, 25.9685, 24.3999, 0.55 ) }
    dend_50 { pt3dadd( 171.001, 25.4139, 26.0748, 0.55 ) }
    dend_50 { pt3dadd( 182.084, 26.5825, 29.3487, 0.55 ) }
    dend_50 { pt3dadd( 193.21, 28.0736, 32.3501, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 92/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.59939, 12.5624, -17.9634, 1.11 ) }
    dend_44 { pt3dadd( 8.61401, 15.7767, -20.3655, 0.83 ) }
    dend_44 { pt3dadd( 7.58307, 19.1397, -22.8786, 0.83 ) }
    dend_44 { pt3dadd( 5.62873, 25.5148, -27.6428, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 96/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 9.59939, 12.5624, -17.9634, 1.11 ) }
    dend_37 { pt3dadd( 11.0468, 14.3551, -18.8907, 0.83 ) }
    dend_37 { pt3dadd( 13.7777, 16.822, -19.7588, 0.83 ) }
    dend_37 { pt3dadd( 17.7137, 19.6984, -20.5139, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_37 { pt3dadd( 19.2615, 20.694, -20.6717, 0.83 ) }
    dend_37 { pt3dadd( 23.4274, 23.4361, -20.8998, 0.83 ) }
    dend_37 { pt3dadd( 27.5738, 26.1654, -21.1268, 0.83 ) }
    dend_37 { pt3dadd( 31.4139, 28.3897, -21.2015, 0.83 ) }
    dend_37 { pt3dadd( 34.5993, 29.9915, -21.0999, 0.83 ) }
    dend_37 { pt3dadd( 39.0756, 32.1225, -20.5442, 0.83 ) }
    dend_37 { pt3dadd( 42.3099, 33.728, -20.0201, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 7/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.84365, 72.9155, 22.1218, 0.83 ) }
    dend_34 { pt3dadd( -10.531, 74.6468, 20.7021, 0.55 ) }
    dend_34 { pt3dadd( -11.3759, 76.6324, 19.0521, 0.83 ) }
    dend_34 { pt3dadd( -12.8157, 79.5742, 16.3083, 0.55 ) }
    dend_34 { pt3dadd( -14.3591, 82.3409, 13.4131, 0.55 ) }
    dend_34 { pt3dadd( -15.4238, 84.2002, 11.3756, 0.55 ) }
    dend_34 { pt3dadd( -16.0737, 85.2965, 10.1322, 0.28 ) }
    dend_34 { pt3dadd( -16.8673, 86.4692, 8.61768, 0.55 ) }
    dend_34 { pt3dadd( -18.1488, 88.0738, 6.27995, 0.28 ) }
    dend_34 { pt3dadd( -18.8695, 88.8663, 5.11835, 0.55 ) }
    dend_34 { pt3dadd( -20.354, 90.4262, 3.12371, 0.83 ) }
    dend_34 { pt3dadd( -21.1687, 91.3232, 2.11562, 0.55 ) }
    dend_34 { pt3dadd( -22.3855, 92.6867, 0.69675, 0.83 ) }
    dend_34 { pt3dadd( -24.3734, 95.2131, -1.64135, 0.55 ) }
    dend_34 { pt3dadd( -25.4329, 96.6593, -2.86808, 0.55 ) }
    dend_34 { pt3dadd( -26.8492, 98.4452, -4.38991, 0.55 ) }
    dend_34 { pt3dadd( -28.5172, 100.341, -6.11088, 0.83 ) }
    dend_34 { pt3dadd( -30.7596, 102.883, -8.48972, 0.55 ) }
    dend_34 { pt3dadd( -32.3582, 104.642, -10.1617, 0.55 ) }
    dend_34 { pt3dadd( -34.1741, 106.484, -12.0372, 0.55 ) }
    dend_34 { pt3dadd( -35.6598, 108.09, -13.6018, 0.55 ) }
    dend_34 { pt3dadd( -37.183, 109.796, -15.0258, 0.83 ) }
    dend_34 { pt3dadd( -38.517, 111.38, -16.1293, 0.55 ) }
    dend_34 { pt3dadd( -39.4933, 112.571, -16.8665, 0.55 ) }
    dend_34 { pt3dadd( -41.2835, 114.733, -18.0972, 0.83 ) }
    dend_34 { pt3dadd( -43.2603, 117.334, -19.4416, 0.55 ) }
    dend_34 { pt3dadd( -44.8295, 119.513, -20.5311, 0.55 ) }
    dend_34 { pt3dadd( -47.5324, 123.16, -22.4463, 0.55 ) }
    dend_34 { pt3dadd( -48.2751, 124.161, -22.9834, 0.28 ) }
    dend_34 { pt3dadd( -48.9815, 125.109, -23.5476, 0.55 ) }
    dend_34 { pt3dadd( -49.8893, 126.308, -24.2952, 0.28 ) }
    dend_34 { pt3dadd( -50.9577, 127.76, -25.2592, 0.55 ) }
    dend_34 { pt3dadd( -52.8247, 130.529, -27.1585, 0.55 ) }
    dend_34 { pt3dadd( -53.9986, 132.548, -28.5135, 0.55 ) }
    dend_34 { pt3dadd( -55.2656, 134.812, -30.1955, 0.28 ) }
    dend_34 { pt3dadd( -55.8682, 135.853, -31.0325, 0.28 ) }
    dend_34 { pt3dadd( -57.1691, 137.953, -32.8236, 0.55 ) }
    dend_34 { pt3dadd( -58.6164, 140.114, -34.9708, 0.28 ) }
    dend_34 { pt3dadd( -60.4168, 142.573, -37.6728, 0.55 ) }
    dend_34 { pt3dadd( -62.3195, 144.746, -40.7288, 0.28 ) }
    dend_34 { pt3dadd( -63.7792, 146.083, -43.0742, 0.55 ) }
    dend_34 { pt3dadd( -64.3048, 146.474, -43.8873, 0.55 ) }
    dend_34 { pt3dadd( -66.831, 147.734, -47.5955, 0.28 ) }
    dend_34 { pt3dadd( -67.7184, 148.011, -48.8428, 0.55 ) }
    dend_34 { pt3dadd( -71.7327, 148.546, -54.0808, 0.28 ) }
    dend_34 { pt3dadd( -73.345, 148.665, -56.1487, 0.55 ) }
    dend_34 { pt3dadd( -74.3692, 148.703, -57.4794, 0.55 ) }
    dend_34 { pt3dadd( -78.3146, 148.76, -62.5091, 0.28 ) }
    dend_34 { pt3dadd( -80.6914, 148.596, -65.2779, 0.55 ) }
    dend_34 { pt3dadd( -82.0485, 148.385, -66.8373, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.84365, 72.9155, 22.1218, 0.83 ) }
    dend_33 { pt3dadd( -9.49425, 74.8293, 21.3445, 0.55 ) }
    dend_33 { pt3dadd( -9.02501, 77.6709, 20.3596, 0.55 ) }
    dend_33 { pt3dadd( -8.7082, 80.1454, 19.6503, 0.55 ) }
    dend_33 { pt3dadd( -8.43813, 82.6994, 18.9453, 0.55 ) }
    dend_33 { pt3dadd( -8.17412, 84.781, 18.4235, 0.55 ) }
    dend_33 { pt3dadd( -7.74666, 87.5271, 17.805, 0.83 ) }
    dend_33 { pt3dadd( -7.23553, 90.1657, 17.2592, 0.55 ) }
    dend_33 { pt3dadd( -6.46814, 93.3111, 16.6772, 0.55 ) }
    dend_33 { pt3dadd( -5.83439, 95.5878, 16.4216, 0.55 ) }
    dend_33 { pt3dadd( -4.96275, 98.3259, 16.303, 0.83 ) }
    dend_33 { pt3dadd( -4.18202, 100.59, 16.269, 0.55 ) }
    dend_33 { pt3dadd( -3.48008, 102.48, 16.2332, 0.55 ) }
    dend_33 { pt3dadd( -2.87359, 103.849, 16.2412, 0.55 ) }
    dend_33 { pt3dadd( -1.37027, 106.951, 16.4392, 0.55 ) }
    dend_33 { pt3dadd( -0.717463, 108.231, 16.6172, 0.55 ) }
    dend_33 { pt3dadd( 0.0233169, 109.746, 16.8668, 0.55 ) }
    dend_33 { pt3dadd( 0.779028, 111.37, 17.2268, 0.55 ) }
    dend_33 { pt3dadd( 2.18482, 114.465, 18.1191, 0.28 ) }
    dend_33 { pt3dadd( 3.37367, 116.882, 18.8711, 0.55 ) }
    dend_33 { pt3dadd( 4.37329, 118.799, 19.5129, 0.28 ) }
    dend_33 { pt3dadd( 5.06311, 120.121, 20.0419, 0.55 ) }
    dend_33 { pt3dadd( 6.00672, 121.97, 20.9206, 0.28 ) }
    dend_33 { pt3dadd( 6.9347, 123.662, 21.8292, 0.55 ) }
    dend_33 { pt3dadd( 9.40249, 132.31, 22.8589, 0.55 ) }
    dend_33 { pt3dadd( 13.335, 140.327, 24.1279, 0.55 ) }
    dend_33 { pt3dadd( 17.3747, 148.078, 26.3013, 0.55 ) }
    dend_33 { pt3dadd( 22.6183, 154.873, 28.9003, 0.55 ) }
    dend_33 { pt3dadd( 28.7047, 161.354, 29.99, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -148.712, -13.7041, -15.2893, 0.55 ) }
    dend_31 { pt3dadd( -159.674, -18.6702, -12.4726, 0.55 ) }
    dend_31 { pt3dadd( -168.887, -25.1665, -7.32018, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -148.712, -13.7041, -15.2893, 0.55 ) }
    dend_30 { pt3dadd( -156.878, -15.9095, -17.6956, 0.55 ) }
    dend_30 { pt3dadd( -165.185, -18.3243, -19.2966, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_9 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -5.04838, -24.8558, -4.46245, 1.38 ) }
    dend_23 { pt3dadd( -4.9482, -26.3868, -6.71419, 0.83 ) }
    dend_23 { pt3dadd( -4.84507, -27.8498, -9.09452, 0.83 ) }
    dend_23 { pt3dadd( -4.74964, -29.109, -11.0738, 0.55 ) }
    dend_23 { pt3dadd( -4.64888, -30.4088, -13.14, 0.55 ) }
    dend_23 { pt3dadd( -4.59677, -31.5544, -14.8974, 0.83 ) }
    dend_23 { pt3dadd( -4.62467, -32.8917, -16.7915, 0.55 ) }
    dend_23 { pt3dadd( -4.80103, -35.1676, -19.5517, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( -4.83502, -35.9499, -20.4104, 1.11 ) }
    dend_23 { pt3dadd( -4.78501, -37.9557, -22.3707, 0.55 ) }
    dend_23 { pt3dadd( -4.74595, -38.8845, -23.1789, 0.83 ) }
    dend_23 { pt3dadd( -4.53694, -41.969, -25.5888, 0.55 ) }
    dend_23 { pt3dadd( -4.17651, -45.031, -27.9357, 0.55 ) }
    dend_23 { pt3dadd( -3.90908, -46.8394, -29.3498, 0.28 ) }
    dend_23 { pt3dadd( -3.72104, -47.818, -30.1776, 0.55 ) }
    dend_23 { pt3dadd( -3.39141, -49.1804, -31.3591, 0.28 ) }
    dend_23 { pt3dadd( -2.9848, -50.4572, -32.6169, 0.55 ) }
    dend_23 { pt3dadd( -2.25321, -52.2934, -34.6084, 0.55 ) }
    dend_23 { pt3dadd( -1.68009, -53.6918, -36.2224, 0.55 ) }
    dend_23 { pt3dadd( -1.11214, -54.9759, -37.6101, 0.55 ) }
    dend_23 { pt3dadd( -0.305864, -56.69, -39.409, 0.83 ) }
    dend_23 { pt3dadd( 0.421695, -58.239, -40.9684, 0.55 ) }
    dend_23 { pt3dadd( 0.720342, -58.9584, -41.6572, 0.55 ) }
    dend_23 { pt3dadd( 1.09046, -59.9314, -42.4866, 0.55 ) }
    dend_23 { pt3dadd( 1.54828, -61.3943, -43.687, 0.55 ) }
    dend_23 { pt3dadd( 1.88418, -62.539, -44.6335, 0.55 ) }
    dend_23 { pt3dadd( 2.4383, -64.8756, -46.5839, 0.55 ) }
    dend_23 { pt3dadd( 2.65113, -66.104, -47.5782, 0.55 ) }
    dend_23 { pt3dadd( 2.70187, -66.5274, -47.9344, 0.83 ) }
    dend_23 { pt3dadd( 2.79251, -68.1141, -49.3047, 0.55 ) }
    dend_23 { pt3dadd( 2.77133, -69.4216, -50.4331, 0.83 ) }
    dend_23 { pt3dadd( 2.78158, -70.775, -51.5947, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -5.04838, -24.8558, -4.46245, 1.38 ) }
    dend_10 { pt3dadd( -5.75696, -28.1444, -5.39984, 1.38 ) }
    dend_10 { pt3dadd( -6.55948, -31.869, -6.46151, 1.38 ) }
    dend_10 { pt3dadd( -7.05782, -34.1818, -7.12077, 1.38 ) }
    dend_10 { pt3dadd( -7.51014, -36.2811, -7.71916, 1.38 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 29/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 102.005, -54.1773, -79.1071, 0.55 ) }
    dend_8 { pt3dadd( 103.411, -56.528, -82.2401, 0.55 ) }
    dend_8 { pt3dadd( 104.686, -58.6598, -85.0815, 0.28 ) }
    dend_8 { pt3dadd( 106.134, -61.0791, -88.306, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 102.005, -54.1773, -79.1071, 0.55 ) }
    dend_7 { pt3dadd( 104.216, -53.7776, -79.1256, 0.55 ) }
    dend_7 { pt3dadd( 107.337, -53.0606, -79.3414, 0.55 ) }
    dend_7 { pt3dadd( 108.52, -52.7848, -79.4503, 0.55 ) }
    dend_7 { pt3dadd( 111.637, -51.901, -79.7559, 0.55 ) }
    dend_7 { pt3dadd( 113.619, -51.3577, -79.922, 0.28 ) }
    dend_7 { pt3dadd( 116.3, -50.6478, -80.1691, 0.55 ) }
    dend_7 { pt3dadd( 118.276, -50.1431, -80.4281, 0.28 ) }
    dend_7 { pt3dadd( 119.168, -49.9155, -80.5762, 0.28 ) }
    dend_7 { pt3dadd( 122.505, -49.1979, -81.0538, 0.55 ) }
    dend_7 { pt3dadd( 125.421, -48.7479, -81.3718, 0.55 ) }
    dend_7 { pt3dadd( 127.647, -48.5062, -81.5099, 0.55 ) }
    dend_7 { pt3dadd( 129.186, -48.4398, -81.5379, 0.28 ) }
    dend_7 { pt3dadd( 130.381, -48.4555, -81.5102, 0.55 ) }
    dend_7 { pt3dadd( 132.46, -48.5526, -81.3646, 0.28 ) }
    dend_7 { pt3dadd( 133.834, -48.7312, -81.1734, 0.55 ) }
    dend_7 { pt3dadd( 136.825, -49.1994, -80.5342, 0.55 ) }
    dend_7 { pt3dadd( 138.802, -49.6449, -79.8161, 0.28 ) }
    dend_7 { pt3dadd( 140.388, -50.1269, -79.0871, 0.55 ) }
    dend_7 { pt3dadd( 143.25, -51.1742, -77.6079, 0.55 ) }
    dend_7 { pt3dadd( 145.079, -51.933, -76.5637, 0.28 ) }
    dend_7 { pt3dadd( 146.533, -52.6303, -75.6829, 0.55 ) }
    dend_7 { pt3dadd( 149.711, -54.363, -73.7288, 0.55 ) }
    dend_7 { pt3dadd( 151.395, -55.3407, -72.4989, 0.55 ) }
    dend_7 { pt3dadd( 152.464, -55.9662, -71.5902, 0.55 ) }
    dend_7 { pt3dadd( 153.444, -56.468, -70.7314, 0.28 ) }
    dend_7 { pt3dadd( 154.362, -56.7994, -69.9608, 0.55 ) }
    dend_7 { pt3dadd( 156.275, -57.3424, -68.5282, 0.28 ) }
    dend_7 { pt3dadd( 158.893, -57.78, -66.732, 0.55 ) }
    dend_7 { pt3dadd( 161.05, -57.9642, -65.1474, 0.28 ) }
    dend_7 { pt3dadd( 163.07, -58.0599, -63.6348, 0.55 ) }
    dend_7 { pt3dadd( 165.101, -58.0705, -62.125, 0.55 ) }
    dend_7 { pt3dadd( 167.881, -57.9387, -60.102, 0.55 ) }
    dend_7 { pt3dadd( 171.083, -57.7272, -57.8867, 0.55 ) }
    dend_7 { pt3dadd( 172.882, -57.5894, -56.8278, 0.28 ) }
    dend_7 { pt3dadd( 173.654, -57.5311, -56.4161, 0.55 ) }
    dend_7 { pt3dadd( 175.059, -57.4742, -55.7744, 0.55 ) }
    dend_7 { pt3dadd( 177.798, -57.3252, -54.5988, 0.28 ) }
    dend_7 { pt3dadd( 179.329, -57.2213, -54.0028, 0.55 ) }
    dend_7 { pt3dadd( 181.908, -57.2321, -53.3155, 0.28 ) }
    dend_7 { pt3dadd( 184.009, -57.3427, -52.9165, 0.55 ) }
    dend_7 { pt3dadd( 186.61, -57.5256, -52.5487, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 75/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -58.7789, 9.89534, 7.8666, 0.55 ) }
    dend_4 { pt3dadd( -61.0369, 10.6344, 6.99688, 0.55 ) }
    dend_4 { pt3dadd( -62.6572, 11.1509, 6.37354, 0.83 ) }
    dend_4 { pt3dadd( -64.8993, 11.9241, 5.28599, 0.55 ) }
    dend_4 { pt3dadd( -66.9105, 12.6387, 4.22919, 0.55 ) }
    dend_4 { pt3dadd( -69.4429, 13.5953, 2.70351, 0.55 ) }
    dend_4 { pt3dadd( -73.8196, 15.3457, -0.182394, 0.55 ) }
    dend_4 { pt3dadd( -76.9942, 16.7488, -2.64213, 0.55 ) }
    dend_4 { pt3dadd( -79.861, 18.171, -5.18956, 0.28 ) }
    dend_4 { pt3dadd( -80.4267, 18.4997, -5.80008, 0.55 ) }
    dend_4 { pt3dadd( -82.8951, 20.0751, -8.88761, 0.55 ) }
    dend_4 { pt3dadd( -84.437, 21.1823, -11.1221, 0.55 ) }
    dend_4 { pt3dadd( -86.2728, 22.7219, -14.2449, 0.28 ) }
    dend_4 { pt3dadd( -86.7355, 23.1258, -15.0562, 0.55 ) }
    dend_4 { pt3dadd( -87.9128, 24.0615, -16.9349, 0.28 ) }
    dend_4 { pt3dadd( -89.0608, 25.0411, -18.8103, 0.55 ) }
    dend_4 { pt3dadd( -89.6463, 25.6078, -19.7733, 0.55 ) }
    dend_4 { pt3dadd( -91.9136, 27.9376, -23.2663, 0.55 ) }
    dend_4 { pt3dadd( -93.7076, 29.8668, -25.9097, 0.55 ) }
    dend_4 { pt3dadd( -94.8108, 31.1467, -27.5995, 0.28 ) }
    dend_4 { pt3dadd( -95.943, 32.6239, -29.5031, 0.55 ) }
    dend_4 { pt3dadd( -96.8174, 33.9026, -31.1846, 0.55 ) }
    dend_4 { pt3dadd( -98.1422, 35.7458, -33.8269, 0.55 ) }
    dend_4 { pt3dadd( -99.4108, 37.4407, -36.3794, 0.28 ) }
    dend_4 { pt3dadd( -99.7219, 37.8589, -37.0975, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_4 { pt3dadd( -100.661, 39.1838, -39.7526, 0.28 ) }
    dend_4 { pt3dadd( -101.416, 40.1729, -42.1261, 0.55 ) }
    dend_4 { pt3dadd( -102.375, 41.5782, -46.0979, 0.55 ) }
    dend_4 { pt3dadd( -102.601, 42.0409, -47.4443, 0.55 ) }
    dend_4 { pt3dadd( -103.08, 43.0269, -50.5355, 0.28 ) }
    dend_4 { pt3dadd( -103.361, 43.512, -52.0842, 0.55 ) }
    dend_4 { pt3dadd( -103.701, 43.9741, -53.7852, 0.55 ) }
    dend_4 { pt3dadd( -104.46, 44.949, -57.4872, 0.55 ) }
    dend_4 { pt3dadd( -105.204, 45.8626, -60.7106, 1.11 ) }
    dend_4 { pt3dadd( -106.749, 47.3933, -66.5615, 0.28 ) }
    dend_4 { pt3dadd( -107.405, 47.9594, -68.6889, 0.55 ) }
    dend_4 { pt3dadd( -108.661, 48.93, -73.0812, 0.55 ) }
    dend_4 { pt3dadd( -109.15, 49.3161, -74.8136, 0.28 ) }
    dend_4 { pt3dadd( -109.956, 49.9676, -77.5435, 0.55 ) }
    dend_4 { pt3dadd( -111.361, 51.2809, -82.5398, 0.28 ) }
    dend_4 { pt3dadd( -111.645, 51.6317, -83.6501, 0.55 ) }
    dend_4 { pt3dadd( -113.078, 54.3122, -91.7228, 0.28 ) }
    dend_4 { pt3dadd( -113.872, 56.8154, -98.6991, 0.28 ) }
    dend_4 { pt3dadd( -113.911, 57.0752, -99.471, 0.83 ) }
    dend_4 { pt3dadd( -113.93, 58.1105, -102.617, 0.28 ) }
    dend_4 { pt3dadd( -113.881, 58.5928, -103.927, 0.83 ) }
    dend_4 { pt3dadd( -113.598, 60.4309, -108.844, 0.28 ) }
    dend_4 { pt3dadd( -113.481, 61.3003, -110.953, 0.83 ) }
    dend_4 { pt3dadd( -113.372, 62.8898, -114.674, 0.28 ) }
    dend_4 { pt3dadd( -113.415, 63.6492, -116.534, 0.55 ) }
    dend_4 { pt3dadd( -113.638, 64.5491, -118.665, 0.28 ) }
    dend_4 { pt3dadd( -114.013, 65.4272, -120.623, 0.83 ) }
    dend_4 { pt3dadd( -114.446, 66.2268, -122.325, 0.28 ) }
    dend_4 { pt3dadd( -115.029, 67.1046, -124.228, 0.55 ) }
    dend_4 { pt3dadd( -118.067, 70.8097, -132.711, 0.28 ) }
    dend_4 { pt3dadd( -118.902, 71.6432, -134.818, 0.28 ) }
    dend_4 { pt3dadd( -119.855, 72.3775, -137.047, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -58.7789, 9.89534, 7.8666, 0.55 ) }
    dend_3 { pt3dadd( -60.7959, 10.1063, 9.40937, 0.83 ) }
    dend_3 { pt3dadd( -62.1197, 10.3454, 10.5712, 0.28 ) }
    dend_3 { pt3dadd( -63.1786, 10.6771, 11.5472, 0.83 ) }
    dend_3 { pt3dadd( -63.9427, 10.9815, 12.2162, 0.55 ) }
    dend_3 { pt3dadd( -68.3188, 12.821, 15.9154, 0.83 ) }
    dend_3 { pt3dadd( -71.0791, 13.8659, 18.2777, 0.55 ) }
    dend_3 { pt3dadd( -73.4419, 14.5303, 20.1704, 0.55 ) }
    dend_3 { pt3dadd( -74.6478, 14.8546, 21.2987, 0.28 ) }
    dend_3 { pt3dadd( -75.6469, 15.172, 22.3492, 0.55 ) }
    dend_3 { pt3dadd( -76.5218, 15.4814, 23.3823, 0.55 ) }
    dend_3 { pt3dadd( -78.9793, 16.4856, 26.387, 0.28 ) }
    dend_3 { pt3dadd( -79.6003, 16.7099, 27.2117, 0.83 ) }
    dend_3 { pt3dadd( -82.9481, 17.7824, 31.5118, 0.28 ) }
    dend_3 { pt3dadd( -83.3751, 17.9028, 32.0913, 0.55 ) }
    dend_3 { pt3dadd( -86.1476, 18.7427, 36.2099, 0.28 ) }
    dend_3 { pt3dadd( -86.7657, 18.9791, 37.1934, 0.83 ) }
    dend_3 { pt3dadd( -93.2122, 19.5503, 47.1334, 0.83 ) }
    dend_3 { pt3dadd( -98.9469, 18.8364, 57.4841, 0.83 ) }
    dend_3 { pt3dadd( -105.591, 16.9299, 67.1129, 0.83 ) }
    dend_3 { pt3dadd( -113.106, 15.5199, 76.17, 0.83 ) }
    dend_3 { pt3dadd( -119.97, 11.792, 85.1002, 0.83 ) }
    dend_3 { pt3dadd( -125.179, 9.90824, 95.5789, 0.83 ) }
    dend_3 { pt3dadd( -130.921, 9.39734, 105.939, 0.83 ) }
    dend_3 { pt3dadd( -138.032, 9.70644, 115.424, 0.83 ) }
    dend_3 { pt3dadd( -144.081, 8.02052, 125.477, 0.83 ) }
    dend_3 { pt3dadd( -148.718, 4.38365, 135.768, 0.83 ) }
    dend_3 { pt3dadd( -153.607, -0.933304, 145.2, 0.83 ) }
    // Section: dend_76, id: dend_76, parent: dend_72 (entry count 60/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 29.6852, 34.7499, 60.2867, 0.55 ) }
    dend_76 { pt3dadd( 29.6003, 38.3891, 69.1298, 0.55 ) }
    dend_76 { pt3dadd( 28.3155, 41.9638, 77.9041, 0.55 ) }
    dend_76 { pt3dadd( 26.0092, 45.0855, 86.6333, 0.55 ) }
    dend_76 { pt3dadd( 23.6781, 46.4331, 95.7791, 0.55 ) }
    dend_76 { pt3dadd( 21.0547, 46.9787, 104.925, 0.55 ) }
    dend_76 { pt3dadd( 19.1741, 47.6158, 114.247, 0.55 ) }
    dend_76 { pt3dadd( 18.4995, 49.0914, 123.643, 0.55 ) }
    dend_76 { pt3dadd( 16.2086, 50.5324, 132.785, 0.55 ) }
    dend_76 { pt3dadd( 14.4091, 52.0991, 142.018, 0.55 ) }
    dend_76 { pt3dadd( 13.503, 54.5927, 151.187, 0.55 ) }
    dend_76 { pt3dadd( 10.8864, 55.3502, 160.32, 0.55 ) }
    dend_76 { pt3dadd( 8.78113, 56.831, 169.501, 0.55 ) }
    dend_76 { pt3dadd( 4.62871, 57.6093, 178.044, 0.55 ) }
    dend_76 { pt3dadd( 0.740254, 60.0192, 186.419, 0.55 ) }
    dend_76 { pt3dadd( -2.27262, 63.5743, 194.767, 0.55 ) }
    dend_76 { pt3dadd( -4.10919, 66.4272, 203.693, 0.55 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 77/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 29.6852, 34.7499, 60.2867, 0.55 ) }
    dend_73 { pt3dadd( 31.4915, 36.1085, 70.5642, 0.55 ) }
    dend_73 { pt3dadd( 31.6116, 35.7873, 81.0769, 0.55 ) }
    dend_73 { pt3dadd( 32.6609, 36.9653, 91.4799, 0.55 ) }
    dend_73 { pt3dadd( 31.8309, 37.8976, 101.926, 0.55 ) }
    dend_73 { pt3dadd( 31.9296, 38.6995, 112.415, 0.55 ) }
    dend_73 { pt3dadd( 32.3162, 39.5865, 122.891, 0.55 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 84/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 42.0802, 38.8423, 47.1947, 0.55 ) }
    dend_67 { pt3dadd( 50.0968, 44.963, 52.398, 0.55 ) }
    dend_67 { pt3dadd( 58.3372, 50.6639, 57.7048, 0.55 ) }
    dend_67 { pt3dadd( 67.4342, 54.7263, 63.0469, 0.55 ) }
    dend_67 { pt3dadd( 77.6365, 56.3776, 67.5407, 0.55 ) }
    dend_67 { pt3dadd( 87.5409, 58.4468, 72.5119, 0.55 ) }
    dend_67 { pt3dadd( 97.8593, 58.9986, 76.9773, 0.55 ) }
    dend_67 { pt3dadd( 107.208, 57.2728, 82.9799, 0.55 ) }
    dend_67 { pt3dadd( 115.205, 55.9709, 90.7752, 0.55 ) }
    dend_67 { pt3dadd( 124.67, 54.9495, 96.7571, 0.55 ) }
    dend_67 { pt3dadd( 133.501, 53.6644, 103.595, 0.55 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 95/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 42.0802, 38.8423, 47.1947, 0.55 ) }
    dend_64 { pt3dadd( 50.4504, 42.6028, 55.278, 0.55 ) }
    dend_64 { pt3dadd( 59.5803, 43.8291, 63.2799, 0.55 ) }
    dend_64 { pt3dadd( 68.5054, 43.638, 71.5922, 0.55 ) }
    dend_64 { pt3dadd( 78.1217, 41.9751, 78.9172, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_64 { pt3dadd( 87.2329, 40.9078, 86.9592, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_51 (entry count 1/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 14.1463, 0.27876, -36.028, 1.11 ) }
    dend_57 { pt3dadd( 17.0174, 0.615134, -34.8568, 0.55 ) }
    dend_57 { pt3dadd( 18.925, 0.642834, -34.1289, 0.83 ) }
    dend_57 { pt3dadd( 21.1384, 0.607784, -33.381, 0.55 ) }
    dend_57 { pt3dadd( 23.3461, 0.480144, -32.7882, 0.55 ) }
    dend_57 { pt3dadd( 26.4169, 0.358087, -32.0737, 0.55 ) }
    dend_57 { pt3dadd( 30.1856, 0.259584, -31.3124, 0.55 ) }
    dend_57 { pt3dadd( 32.8651, 0.251606, -30.8516, 0.55 ) }
    dend_57 { pt3dadd( 35.4141, 0.282162, -30.4338, 0.55 ) }
    dend_57 { pt3dadd( 40.3221, 0.311262, -29.6425, 0.55 ) }
    dend_57 { pt3dadd( 44.7311, 0.398697, -29.0256, 0.55 ) }
    dend_57 { pt3dadd( 48.2293, 0.574874, -28.5676, 0.55 ) }
    dend_57 { pt3dadd( 52.5544, 0.986854, -28.0819, 0.55 ) }
    dend_57 { pt3dadd( 55.5369, 1.36991, -27.7409, 0.55 ) }
    dend_57 { pt3dadd( 57.5259, 1.66332, -27.5206, 0.83 ) }
    dend_57 { pt3dadd( 59.508, 2.0488, -27.3166, 0.55 ) }
    dend_57 { pt3dadd( 61.6036, 2.51905, -27.1468, 0.55 ) }
    dend_57 { pt3dadd( 63.2717, 2.96918, -27.0308, 0.83 ) }
    dend_57 { pt3dadd( 66.3025, 4.10108, -26.847, 0.55 ) }
    dend_57 { pt3dadd( 68.8028, 5.22368, -26.6781, 0.55 ) }
    dend_57 { pt3dadd( 70.6616, 6.10685, -26.4349, 0.55 ) }
    dend_57 { pt3dadd( 73.0197, 7.24339, -26.0584, 0.55 ) }
    dend_57 { pt3dadd( 75.383, 8.36126, -25.7263, 0.55 ) }
    dend_57 { pt3dadd( 79.7312, 10.5353, -25.2223, 0.55 ) }
    dend_57 { pt3dadd( 82.8931, 12.124, -24.9223, 0.55 ) }
    dend_57 { pt3dadd( 86.1486, 13.7479, -24.9409, 0.55 ) }
    dend_57 { pt3dadd( 87.6564, 14.4619, -25.084, 0.28 ) }
    dend_57 { pt3dadd( 90.3191, 15.6616, -26.0011, 0.55 ) }
    dend_57 { pt3dadd( 92.0711, 16.3047, -27.1799, 0.28 ) }
    dend_57 { pt3dadd( 93.307, 16.6535, -28.2102, 0.55 ) }
    dend_57 { pt3dadd( 96.7085, 17.6094, -31.6948, 0.28 ) }
    dend_57 { pt3dadd( 98.6289, 18.0867, -33.816, 0.55 ) }
    dend_57 { pt3dadd( 103.155, 19.1129, -38.7609, 0.55 ) }
    dend_57 { pt3dadd( 105.676, 19.6107, -41.5364, 0.55 ) }
    dend_57 { pt3dadd( 108.59, 20.0949, -44.627, 0.28 ) }
    dend_57 { pt3dadd( 111.936, 20.6219, -47.6011, 0.55 ) }
    dend_57 { pt3dadd( 113.605, 20.9426, -47.8612, 0.55 ) }
    dend_57 { pt3dadd( 116.182, 21.7512, -45.922, 0.28 ) }
    dend_57 { pt3dadd( 117.559, 22.1443, -44.7385, 0.55 ) }
    dend_57 { pt3dadd( 120.441, 23.0367, -41.9561, 0.55 ) }
    dend_57 { pt3dadd( 131.532, 26.4167, -30.4287, 0.55 ) }
    dend_57 { pt3dadd( 132.019, 26.551, -29.9107, 0.55 ) }
    dend_57 { pt3dadd( 132.665, 26.7357, -29.2179, 0.83 ) }
    dend_57 { pt3dadd( 134.82, 27.2979, -26.9736, 0.55 ) }
    dend_57 { pt3dadd( 135.898, 27.546, -26.0599, 0.28 ) }
    dend_57 { pt3dadd( 136.552, 27.628, -25.7865, 0.55 ) }
    dend_57 { pt3dadd( 140.069, 27.8354, -26.2271, 0.55 ) }
    dend_57 { pt3dadd( 142.1, 27.9483, -26.4876, 0.55 ) }
    dend_57 { pt3dadd( 144.669, 28.1102, -26.8229, 0.55 ) }
    dend_57 { pt3dadd( 147.224, 28.3069, -27.153, 0.55 ) }
    dend_57 { pt3dadd( 149.538, 28.3623, -27.4111, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 52/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 14.1463, 0.27876, -36.028, 1.11 ) }
    dend_52 { pt3dadd( 15.7617, 2.26539, -35.7033, 0.83 ) }
    dend_52 { pt3dadd( 16.6454, 3.35214, -35.5257, 0.83 ) }
    dend_52 { pt3dadd( 18.3597, 5.46023, -35.1811, 0.83 ) }
    dend_52 { pt3dadd( 19.409, 6.75061, -34.9702, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 57/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.62873, 25.5148, -27.6428, 1.11 ) }
    dend_48 { pt3dadd( 4.47833, 30.2051, -31.5291, 0.55 ) }
    dend_48 { pt3dadd( 4.11522, 31.9616, -33.0786, 0.55 ) }
    dend_48 { pt3dadd( 3.35802, 37.0734, -37.4996, 0.55 ) }
    dend_48 { pt3dadd( 2.48561, 42.3684, -42.1158, 0.55 ) }
    dend_48 { pt3dadd( 1.86897, 46.1542, -45.4586, 0.55 ) }
    dend_48 { pt3dadd( 1.73387, 47.0614, -46.2514, 0.55 ) }
    dend_48 { pt3dadd( 1.27683, 50.8917, -49.6999, 0.55 ) }
    dend_48 { pt3dadd( 0.820057, 54.7483, -53.2071, 0.55 ) }
    dend_48 { pt3dadd( 0.444535, 59.928, -57.7391, 0.55 ) }
    dend_48 { pt3dadd( 0.206476, 64.8145, -61.7014, 0.55 ) }
    dend_48 { pt3dadd( 0.133484, 66.5891, -63.1967, 0.28 ) }
    dend_48 { pt3dadd( 0.0595485, 69.2561, -65.4335, 0.55 ) }
    dend_48 { pt3dadd( 0.0470042, 70.8141, -66.7643, 0.55 ) }
    dend_48 { pt3dadd( 0.284073, 76.202, -71.5444, 0.55 ) }
    dend_48 { pt3dadd( 0.870173, 81.1072, -75.8011, 0.55 ) }
    dend_48 { pt3dadd( 1.53326, 86.6176, -80.6399, 0.55 ) }
    dend_48 { pt3dadd( 1.70884, 88.4041, -82.2066, 0.55 ) }
    dend_48 { pt3dadd( 2.05679, 92.5165, -85.7002, 0.55 ) }
    dend_48 { pt3dadd( 2.142, 94.2044, -87.1252, 0.28 ) }
    dend_48 { pt3dadd( 2.0112, 96.2142, -88.8059, 0.55 ) }
    dend_48 { pt3dadd( 1.77361, 99.9294, -91.8508, 0.55 ) }
    dend_48 { pt3dadd( 1.6237, 101.883, -93.2673, 0.28 ) }
    dend_48 { pt3dadd( 1.49964, 102.759, -93.8619, 0.55 ) }
    dend_48 { pt3dadd( 1.18646, 104.529, -94.8857, 0.28 ) }
    dend_48 { pt3dadd( 0.650733, 107.37, -96.6422, 0.55 ) }
    dend_48 { pt3dadd( 0.444493, 109.029, -97.7038, 0.28 ) }
    dend_48 { pt3dadd( 0.504738, 110.941, -98.8218, 0.83 ) }
    dend_48 { pt3dadd( 0.684516, 112.15, -99.6072, 0.28 ) }
    dend_48 { pt3dadd( 1.25997, 114.902, -101.428, 0.55 ) }
    dend_48 { pt3dadd( 1.80793, 117.426, -103.047, 0.28 ) }
    dend_48 { pt3dadd( 2.02617, 118.718, -103.82, 0.55 ) }
    dend_48 { pt3dadd( 2.42795, 120.72, -105.019, 0.28 ) }
    dend_48 { pt3dadd( 3.00895, 122.845, -106.472, 0.55 ) }
    dend_48 { pt3dadd( 3.81271, 125.11, -108.316, 0.28 ) }
    dend_48 { pt3dadd( 4.33923, 126.298, -109.285, 0.55 ) }
    dend_48 { pt3dadd( 5.29904, 128.458, -111.247, 0.55 ) }
    dend_48 { pt3dadd( 6.40025, 131.153, -113.82, 0.28 ) }
    dend_48 { pt3dadd( 7.09438, 132.982, -115.679, 0.83 ) }
    dend_48 { pt3dadd( 8.40181, 136.448, -119.117, 0.28 ) }
    dend_48 { pt3dadd( 9.01585, 138.079, -120.729, 0.55 ) }
    dend_48 { pt3dadd( 10.2825, 141.736, -124.029, 0.55 ) }
    dend_48 { pt3dadd( 10.7963, 143.427, -125.412, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_48 { pt3dadd( 11.1292, 144.878, -126.442, 0.55 ) }
    dend_48 { pt3dadd( 11.4595, 146.329, -127.236, 0.55 ) }
    dend_48 { pt3dadd( 11.7241, 147.862, -127.897, 0.28 ) }
    dend_48 { pt3dadd( 12.0912, 150.481, -128.982, 0.55 ) }
    dend_48 { pt3dadd( 12.7056, 154.94, -130.582, 0.28 ) }
    dend_48 { pt3dadd( 12.9277, 156.692, -131.294, 0.55 ) }
    dend_48 { pt3dadd( 13.2028, 158.795, -132.088, 0.28 ) }
    dend_48 { pt3dadd( 13.826, 163.169, -133.874, 0.55 ) }
    dend_48 { pt3dadd( 14.1709, 165.263, -134.778, 0.28 ) }
    dend_48 { pt3dadd( 14.4761, 167.034, -135.623, 0.55 ) }
    dend_48 { pt3dadd( 15.3061, 170.972, -137.584, 0.28 ) }
    dend_48 { pt3dadd( 16.1384, 174.365, -139.363, 0.55 ) }
    dend_48 { pt3dadd( 17.3579, 178.497, -141.667, 0.28 ) }
    dend_48 { pt3dadd( 18.2284, 180.76, -142.917, 0.28 ) }
    dend_48 { pt3dadd( 19.1423, 182.996, -144.113, 0.55 ) }
    dend_48 { pt3dadd( 20.059, 185.092, -145.355, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 5.62873, 25.5148, -27.6428, 1.11 ) }
    dend_45 { pt3dadd( 5.27424, 27.1499, -26.6438, 1.11 ) }
    dend_45 { pt3dadd( 4.55005, 31.1403, -24.3485, 0.55 ) }
    dend_45 { pt3dadd( 4.38179, 32.4267, -23.6607, 0.55 ) }
    dend_45 { pt3dadd( 3.9919, 35.5609, -21.8917, 0.55 ) }
    dend_45 { pt3dadd( 3.74336, 38.0863, -20.4535, 0.55 ) }
    dend_45 { pt3dadd( 3.46254, 42.2761, -18.0537, 0.83 ) }
    dend_45 { pt3dadd( 3.47514, 44.1062, -16.9605, 0.55 ) }
    dend_45 { pt3dadd( 3.6734, 47.0405, -14.9539, 0.83 ) }
    dend_45 { pt3dadd( 3.90058, 49.4935, -13.1294, 0.55 ) }
    dend_45 { pt3dadd( 4.00284, 50.7992, -12.1028, 0.55 ) }
    dend_45 { pt3dadd( 4.22905, 53.0109, -10.0779, 0.83 ) }
    dend_45 { pt3dadd( 4.62278, 55.2917, -7.47155, 0.55 ) }
    dend_45 { pt3dadd( 5.05282, 57.6119, -4.48188, 0.55 ) }
    dend_45 { pt3dadd( 5.37382, 58.9857, -2.46789, 0.55 ) }
    dend_45 { pt3dadd( 5.73554, 60.3529, -0.311708, 0.55 ) }
    dend_45 { pt3dadd( 5.99322, 61.4906, 1.65472, 0.83 ) }
    dend_45 { pt3dadd( 6.59017, 63.7146, 5.68895, 0.55 ) }
    dend_45 { pt3dadd( 6.95379, 64.8988, 7.88076, 0.55 ) }
    dend_45 { pt3dadd( 7.50705, 66.7012, 11.1211, 0.55 ) }
    dend_45 { pt3dadd( 7.87909, 68.0902, 13.6543, 0.55 ) }
    dend_45 { pt3dadd( 8.23896, 69.5682, 16.146, 0.55 ) }
    dend_45 { pt3dadd( 8.58594, 71.3736, 18.7158, 0.55 ) }
    dend_45 { pt3dadd( 8.75691, 73.3541, 21.1105, 0.55 ) }
    dend_45 { pt3dadd( 8.86577, 74.6476, 22.5375, 0.55 ) }
    dend_45 { pt3dadd( 8.97895, 76.0904, 23.8031, 0.55 ) }
    dend_45 { pt3dadd( 9.15318, 78.8369, 25.8205, 0.55 ) }
    dend_45 { pt3dadd( 9.25169, 80.95, 27.2129, 0.55 ) }
    dend_45 { pt3dadd( 9.25293, 83.1084, 28.1561, 0.55 ) }
    dend_45 { pt3dadd( 9.30248, 86.7154, 29.0943, 0.55 ) }
    dend_45 { pt3dadd( 9.46238, 90.2586, 29.6581, 0.55 ) }
    dend_45 { pt3dadd( 9.70773, 93.325, 29.9551, 0.55 ) }
    dend_45 { pt3dadd( 9.98386, 96.4151, 30.1299, 0.55 ) }
    dend_45 { pt3dadd( 10.8736, 105.154, 30.5168, 0.55 ) }
    dend_45 { pt3dadd( 11.1969, 107.331, 30.6392, 0.55 ) }
    dend_45 { pt3dadd( 11.3972, 108.367, 30.7311, 0.55 ) }
    dend_45 { pt3dadd( 12.1948, 111.394, 31.3703, 0.55 ) }
    dend_45 { pt3dadd( 13.2275, 114.097, 32.2578, 0.55 ) }
    dend_45 { pt3dadd( 13.4785, 114.647, 32.5343, 0.55 ) }
    dend_45 { pt3dadd( 14.896, 117.409, 34.468, 0.55 ) }
    dend_45 { pt3dadd( 15.5578, 118.827, 35.458, 0.28 ) }
    dend_45 { pt3dadd( 16.3881, 120.825, 36.7821, 0.55 ) }
    dend_45 { pt3dadd( 17.4839, 123.997, 38.8305, 0.55 ) }
    dend_45 { pt3dadd( 18.0206, 126.193, 40.2463, 0.55 ) }
    dend_45 { pt3dadd( 18.2126, 127.537, 41.1184, 0.28 ) }
    dend_45 { pt3dadd( 18.2135, 129.673, 42.5578, 0.55 ) }
    dend_45 { pt3dadd( 18.0269, 131.62, 43.821, 0.55 ) }
    dend_45 { pt3dadd( 17.6472, 134.034, 45.3023, 0.55 ) }
    dend_45 { pt3dadd( 17.1128, 136.252, 46.4965, 0.55 ) }
    dend_45 { pt3dadd( 16.6365, 137.878, 47.2513, 0.55 ) }
    dend_45 { pt3dadd( 15.9136, 140.289, 48.1481, 0.55 ) }
    dend_45 { pt3dadd( 15.3722, 142.498, 48.7786, 0.83 ) }
    dend_45 { pt3dadd( 14.9717, 144.49, 49.2198, 0.28 ) }
    dend_45 { pt3dadd( 14.7227, 146.238, 49.4688, 0.55 ) }
    dend_45 { pt3dadd( 14.5009, 148.43, 49.6956, 0.55 ) }
    dend_45 { pt3dadd( 14.3537, 150.679, 49.9186, 0.28 ) }
    dend_45 { pt3dadd( 14.2722, 152.879, 50.0928, 0.55 ) }
    dend_45 { pt3dadd( 14.1698, 155.248, 50.3502, 0.28 ) }
    dend_45 { pt3dadd( 14.1223, 157.252, 50.6451, 0.55 ) }
    dend_45 { pt3dadd( 14.2042, 159.471, 51.0804, 0.55 ) }
    dend_45 { pt3dadd( 14.3577, 160.854, 51.3757, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 77/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 42.3099, 33.728, -20.0201, 0.83 ) }
    dend_39 { pt3dadd( 43.8112, 36.9533, -22.5289, 0.83 ) }
    dend_39 { pt3dadd( 44.8215, 39.1239, -24.2173, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 80/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 42.3099, 33.728, -20.0201, 0.83 ) }
    dend_38 { pt3dadd( 45.1345, 34.8567, -19.7597, 0.55 ) }
    dend_38 { pt3dadd( 46.6147, 35.4298, -19.7499, 0.55 ) }
    dend_38 { pt3dadd( 48.1869, 36.0385, -19.7394, 0.55 ) }
    dend_38 { pt3dadd( 51.1948, 37.203, -19.7195, 0.55 ) }
    dend_38 { pt3dadd( 53.2978, 38.0172, -19.7056, 0.83 ) }
    dend_38 { pt3dadd( 57.2184, 39.5351, -19.6796, 0.28 ) }
    dend_38 { pt3dadd( 60.4727, 41.1777, -19.3896, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 88/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.78158, -70.775, -51.5947, 0.55 ) }
    dend_27 { pt3dadd( 1.98569, -69.4033, -51.6905, 0.55 ) }
    dend_27 { pt3dadd( 1.27381, -67.3686, -52.058, 0.28 ) }
    dend_27 { pt3dadd( 0.82155, -66.0759, -52.2914, 0.55 ) }
    dend_27 { pt3dadd( 0.238212, -64.4086, -52.5926, 0.28 ) }
    dend_27 { pt3dadd( 0.100181, -64.0141, -52.6638, 0.55 ) }
    dend_27 { pt3dadd( -0.563315, -62.1177, -53.0063, 0.28 ) }
    dend_27 { pt3dadd( -0.772666, -60.8923, -53.0565, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.78158, -70.775, -51.5947, 0.55 ) }
    dend_24 { pt3dadd( 3.2621, -72.4032, -51.0315, 0.28 ) }
    dend_24 { pt3dadd( 3.73097, -73.9919, -50.4819, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.51014, -36.2811, -7.71916, 1.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( -8.56552, -39.6919, -8.72317, 1.11 ) }
    dend_16 { pt3dadd( -8.8638, -40.8201, -9.15762, 1.11 ) }
    dend_16 { pt3dadd( -9.37145, -42.7401, -9.897, 1.11 ) }
    dend_16 { pt3dadd( -9.87736, -44.6536, -10.6339, 1.11 ) }
    dend_16 { pt3dadd( -10.6552, -47.5954, -11.7667, 1.11 ) }
    dend_16 { pt3dadd( -11.5679, -51.0477, -13.0962, 1.11 ) }
    dend_16 { pt3dadd( -12.6019, -54.3966, -14.1273, 1.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 7/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -7.51014, -36.2811, -7.71916, 1.38 ) }
    dend_11 { pt3dadd( -8.46328, -36.7893, -7.99666, 0.83 ) }
    dend_11 { pt3dadd( -9.16171, -37.2199, -8.21848, 0.83 ) }
    dend_11 { pt3dadd( -10.5196, -38.1625, -8.66651, 0.83 ) }
    dend_11 { pt3dadd( -12.4235, -39.6207, -9.26592, 0.55 ) }
    dend_11 { pt3dadd( -14.0537, -40.8949, -9.75771, 0.55 ) }
    dend_11 { pt3dadd( -15.3552, -41.9007, -10.1528, 0.55 ) }
    dend_11 { pt3dadd( -16.8223, -42.9606, -10.6099, 0.28 ) }
    dend_11 { pt3dadd( -17.3946, -43.357, -10.7571, 0.55 ) }
    dend_11 { pt3dadd( -19.8436, -44.8213, -11.1672, 0.55 ) }
    dend_11 { pt3dadd( -21.6422, -45.7303, -11.4181, 0.55 ) }
    dend_11 { pt3dadd( -24.2893, -46.9306, -11.7808, 0.55 ) }
    dend_11 { pt3dadd( -26.3676, -47.7452, -12.0583, 0.55 ) }
    dend_11 { pt3dadd( -29.4518, -48.8549, -12.4579, 0.55 ) }
    dend_11 { pt3dadd( -32.5954, -49.9339, -12.9877, 0.55 ) }
    dend_11 { pt3dadd( -35.4265, -50.8867, -13.6021, 0.55 ) }
    dend_11 { pt3dadd( -36.9709, -51.4697, -13.9948, 0.55 ) }
    dend_11 { pt3dadd( -39.2633, -52.4905, -14.6604, 0.55 ) }
    dend_11 { pt3dadd( -41.8348, -53.8564, -15.5001, 0.55 ) }
    dend_11 { pt3dadd( -45.0124, -55.7855, -16.7315, 0.55 ) }
    dend_11 { pt3dadd( -46.4088, -56.8098, -17.2955, 0.55 ) }
    dend_11 { pt3dadd( -47.6733, -57.7758, -17.7545, 0.55 ) }
    dend_11 { pt3dadd( -49.7059, -59.3844, -18.5042, 0.55 ) }
    dend_11 { pt3dadd( -52.7513, -61.9949, -19.5603, 0.55 ) }
    dend_11 { pt3dadd( -54.4972, -63.5383, -20.1156, 0.28 ) }
    dend_11 { pt3dadd( -55.9486, -64.8682, -20.5371, 0.55 ) }
    dend_11 { pt3dadd( -57.9239, -66.5347, -21.1145, 0.55 ) }
    dend_11 { pt3dadd( -59.3918, -67.6347, -21.4475, 0.28 ) }
    dend_11 { pt3dadd( -60.8229, -68.5865, -21.6756, 0.83 ) }
    dend_11 { pt3dadd( -62.0465, -69.2713, -21.7776, 0.55 ) }
    dend_11 { pt3dadd( -63.5188, -69.947, -21.8119, 0.83 ) }
    dend_11 { pt3dadd( -66.2043, -71.0638, -21.772, 0.55 ) }
    dend_11 { pt3dadd( -69.6329, -72.5348, -21.3166, 0.55 ) }
    dend_11 { pt3dadd( -71.1644, -73.133, -21.031, 0.55 ) }
    dend_11 { pt3dadd( -72.2193, -73.5737, -20.7113, 0.55 ) }
    dend_11 { pt3dadd( -74.1158, -74.4067, -19.922, 0.55 ) }
    dend_11 { pt3dadd( -76.9579, -75.7397, -18.5829, 0.83 ) }
    dend_11 { pt3dadd( -80.1401, -77.3486, -16.9495, 0.55 ) }
    dend_11 { pt3dadd( -81.8762, -78.2836, -16.1044, 0.55 ) }
    dend_11 { pt3dadd( -84.9699, -80.101, -14.3867, 0.55 ) }
    dend_11 { pt3dadd( -86.2888, -80.915, -13.5773, 0.55 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 48/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 32.3162, 39.5865, 122.891, 0.55 ) }
    dend_75 { pt3dadd( 37.1401, 37.7794, 131.141, 0.55 ) }
    dend_75 { pt3dadd( 43.5012, 35.7486, 138.229, 0.55 ) }
    dend_75 { pt3dadd( 49.9561, 32.7175, 144.887, 0.55 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 52/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 32.3162, 39.5865, 122.891, 0.55 ) }
    dend_74 { pt3dadd( 30.6272, 42.5785, 137.85, 0.55 ) }
    dend_74 { pt3dadd( 26.975, 45.8078, 152.412, 0.55 ) }
    dend_74 { pt3dadd( 24.3943, 47.2346, 167.46, 0.55 ) }
    dend_74 { pt3dadd( 18.6845, 51.333, 181.134, 0.55 ) }
    dend_74 { pt3dadd( 11.1625, 57.2237, 193.232, 0.55 ) }
    dend_74 { pt3dadd( 6.15205, 62.3641, 206.848, 0.55 ) }
    dend_74 { pt3dadd( 1.85807, 65.4109, 221.272, 0.55 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 60/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 133.501, 53.6644, 103.595, 0.55 ) }
    dend_69 { pt3dadd( 142.785, 53.3553, 111.995, 0.55 ) }
    dend_69 { pt3dadd( 152.306, 52.8287, 120.112, 0.55 ) }
    dend_69 { pt3dadd( 161.824, 54.2612, 128.142, 0.55 ) }
    dend_69 { pt3dadd( 172.325, 55.0011, 134.941, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 65/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 133.501, 53.6644, 103.595, 0.55 ) }
    dend_68 { pt3dadd( 140.347, 57.4991, 102.329, 0.55 ) }
    dend_68 { pt3dadd( 147.465, 60.6787, 100.868, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 68/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 87.2329, 40.9078, 86.9592, 0.55 ) }
    dend_66 { pt3dadd( 94.7405, 41.3226, 93.4173, 0.55 ) }
    dend_66 { pt3dadd( 103.052, 40.9424, 98.8029, 0.55 ) }
    dend_66 { pt3dadd( 111.834, 41.431, 103.375, 0.55 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 72/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 87.2329, 40.9078, 86.9592, 0.55 ) }
    dend_65 { pt3dadd( 97.7648, 41.1898, 95.2312, 0.55 ) }
    dend_65 { pt3dadd( 107.158, 40.6262, 104.765, 0.55 ) }
    dend_65 { pt3dadd( 115.861, 38.8428, 114.791, 0.55 ) }
    dend_65 { pt3dadd( 122.63, 35.3091, 125.802, 0.55 ) }
    dend_65 { pt3dadd( 130.505, 31.1286, 135.817, 0.55 ) }
    dend_65 { pt3dadd( 138.008, 26.0725, 145.724, 0.55 ) }
    dend_65 { pt3dadd( 146.256, 19.3062, 153.922, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 149.538, 28.3623, -27.4111, 0.55 ) }
    dend_59 { pt3dadd( 149.411, 28.9204, -29.2124, 0.55 ) }
    dend_59 { pt3dadd( 149.314, 29.3436, -30.5787, 0.83 ) }
    dend_59 { pt3dadd( 149.129, 30.1552, -33.1984, 0.28 ) }
    dend_59 { pt3dadd( 148.944, 30.9645, -35.8108, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 85/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 149.538, 28.3623, -27.4111, 0.55 ) }
    dend_58 { pt3dadd( 150.484, 27.5211, -28.1566, 0.55 ) }
    dend_58 { pt3dadd( 152.397, 26.0789, -29.5952, 0.28 ) }
    dend_58 { pt3dadd( 153.692, 25.1618, -30.5003, 0.55 ) }
    dend_58 { pt3dadd( 155.627, 23.8316, -31.7642, 0.55 ) }
    dend_58 { pt3dadd( 156.472, 23.2855, -32.2724, 0.83 ) }
    dend_58 { pt3dadd( 157.973, 22.2816, -33.2239, 0.55 ) }
    dend_58 { pt3dadd( 158.876, 21.6862, -33.7846, 0.55 ) }
    dend_58 { pt3dadd( 159.824, 21.0862, -34.3374, 0.28 ) }
    dend_58 { pt3dadd( 160.368, 20.7525, -34.6437, 0.55 ) }
    dend_58 { pt3dadd( 162.414, 19.4727, -35.8968, 0.55 ) }
    dend_58 { pt3dadd( 163.884, 18.521, -36.8987, 0.28 ) }
    dend_58 { pt3dadd( 165.218, 17.5871, -37.9771, 0.55 ) }
    dend_58 { pt3dadd( 165.762, 17.1938, -38.4899, 0.28 ) }
    dend_58 { pt3dadd( 167.268, 16.0725, -39.9912, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( 169.464, 14.5263, -42.2725, 0.28 ) }
    dend_58 { pt3dadd( 170.424, 13.8815, -43.2669, 0.55 ) }
    dend_58 { pt3dadd( 172.768, 12.5114, -45.5523, 0.55 ) }
    dend_58 { pt3dadd( 174.234, 11.7307, -46.854, 0.28 ) }
    dend_58 { pt3dadd( 175.431, 11.0693, -47.8992, 0.55 ) }
    dend_58 { pt3dadd( 177.306, 10.0586, -49.483, 0.28 ) }
    dend_58 { pt3dadd( 178.291, 9.63324, -50.1326, 0.55 ) }
    dend_58 { pt3dadd( 179.149, 9.29473, -50.6508, 0.55 ) }
    dend_58 { pt3dadd( 182.381, 8.53064, -51.6876, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 9/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 19.409, 6.75061, -34.9702, 0.83 ) }
    dend_54 { pt3dadd( 16.493, 8.35682, -42.0949, 0.83 ) }
    dend_54 { pt3dadd( 14.773, 10.6924, -48.7848, 0.55 ) }
    dend_54 { pt3dadd( 13.8584, 12.2793, -52.607, 0.55 ) }
    dend_54 { pt3dadd( 13.1685, 13.4994, -55.3417, 0.55 ) }
    dend_54 { pt3dadd( 11.4316, 16.787, -62.1564, 0.83 ) }
    dend_54 { pt3dadd( 8.46289, 22.4038, -72.8631, 1.11 ) }
    dend_54 { pt3dadd( 5.19514, 29.5457, -84.8767, 0.83 ) }
    dend_54 { pt3dadd( 4.11477, 32.3757, -88.9141, 0.83 ) }
    dend_54 { pt3dadd( 3.66198, 33.6908, -90.589, 0.83 ) }
    dend_54 { pt3dadd( 2.26682, 38.0861, -95.721, 1.38 ) }
    dend_54 { pt3dadd( 1.30953, 41.1032, -98.8299, 0.55 ) }
    dend_54 { pt3dadd( -0.749501, 47.0601, -104.124, 0.83 ) }
    dend_54 { pt3dadd( -1.47389, 48.6831, -105.502, 0.83 ) }
    dend_54 { pt3dadd( -4.22692, 54.9698, -110.696, 0.55 ) }
    dend_54 { pt3dadd( -5.20435, 57.4167, -112.674, 0.83 ) }
    dend_54 { pt3dadd( -5.78291, 59.066, -114.077, 0.55 ) }
    dend_54 { pt3dadd( -7.35507, 64.7851, -119.264, 0.83 ) }
    dend_54 { pt3dadd( -8.16845, 68.7182, -122.864, 0.83 ) }
    dend_54 { pt3dadd( -8.44517, 70.7806, -124.683, 0.83 ) }
    dend_54 { pt3dadd( -8.50614, 74.0782, -127.289, 0.83 ) }
    dend_54 { pt3dadd( -7.69722, 83.3697, -134.09, 0.55 ) }
    dend_54 { pt3dadd( -6.71396, 88.254, -137.303, 0.83 ) }
    dend_54 { pt3dadd( -5.91244, 90.79, -138.775, 0.83 ) }
    dend_54 { pt3dadd( -4.5123, 94.5146, -140.713, 0.83 ) }
    dend_54 { pt3dadd( -2.68225, 98.8697, -142.642, 0.83 ) }
    dend_54 { pt3dadd( -1.35843, 101.922, -143.535, 0.83 ) }
    dend_54 { pt3dadd( -0.243205, 104.398, -143.873, 0.83 ) }
    dend_54 { pt3dadd( 2.55145, 110.678, -144.653, 0.83 ) }
    dend_54 { pt3dadd( 4.21325, 114.756, -145.227, 0.83 ) }
    dend_54 { pt3dadd( 6.11498, 119.178, -146.031, 0.83 ) }
    dend_54 { pt3dadd( 7.13324, 121.757, -146.509, 0.55 ) }
    dend_54 { pt3dadd( 8.30625, 125.319, -147.179, 0.83 ) }
    dend_54 { pt3dadd( 9.21149, 128.788, -147.911, 0.83 ) }
    dend_54 { pt3dadd( 9.7274, 130.769, -148.432, 0.83 ) }
    dend_54 { pt3dadd( 10.7387, 135.327, -149.938, 0.83 ) }
    dend_54 { pt3dadd( 11.1824, 138.207, -150.987, 0.83 ) }
    dend_54 { pt3dadd( 11.5926, 141.036, -152.044, 0.83 ) }
    dend_54 { pt3dadd( 12.4177, 146.541, -154.131, 0.83 ) }
    dend_54 { pt3dadd( 13.4697, 152.981, -156.526, 0.83 ) }
    dend_54 { pt3dadd( 14.0923, 156.267, -157.751, 0.83 ) }
    dend_54 { pt3dadd( 15.3908, 162.707, -160.011, 0.83 ) }
    dend_54 { pt3dadd( 15.8837, 164.604, -160.705, 0.83 ) }
    dend_54 { pt3dadd( 17.2601, 169.06, -162.287, 0.83 ) }
    dend_54 { pt3dadd( 18.0278, 171.342, -162.992, 0.83 ) }
    dend_54 { pt3dadd( 19.0119, 174.468, -163.874, 0.55 ) }
    dend_54 { pt3dadd( 19.4167, 175.528, -164.246, 0.55 ) }
    dend_54 { pt3dadd( 21.6781, 179.825, -165.838, 0.83 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 57/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 19.409, 6.75061, -34.9702, 0.83 ) }
    dend_53 { pt3dadd( 19.9609, 7.17474, -37.3479, 0.55 ) }
    dend_53 { pt3dadd( 20.7455, 8.26602, -42.5088, 0.83 ) }
    dend_53 { pt3dadd( 21.0627, 8.81019, -45.4559, 0.55 ) }
    dend_53 { pt3dadd( 21.6129, 9.70244, -50.7937, 0.83 ) }
    dend_53 { pt3dadd( 21.9262, 10.3121, -54.0694, 0.55 ) }
    dend_53 { pt3dadd( 22.2467, 10.9342, -57.1385, 0.83 ) }
    dend_53 { pt3dadd( 22.8132, 12.7324, -65.5788, 0.83 ) }
    dend_53 { pt3dadd( 22.9401, 13.2271, -67.8984, 0.55 ) }
    dend_53 { pt3dadd( 22.9571, 13.534, -69.2619, 0.83 ) }
    dend_53 { pt3dadd( 22.6637, 15.3714, -77.7278, 0.28 ) }
    dend_53 { pt3dadd( 22.5552, 15.6741, -79.0867, 0.55 ) }
    dend_53 { pt3dadd( 21.4249, 17.8178, -89.2019, 0.55 ) }
    dend_53 { pt3dadd( 21.2719, 18.0443, -90.3252, 0.55 ) }
    dend_53 { pt3dadd( 19.9483, 19.6574, -98.3781, 0.28 ) }
    dend_53 { pt3dadd( 19.4484, 20.0666, -100.77, 0.55 ) }
    dend_53 { pt3dadd( 17.4076, 21.0714, -108.618, 0.28 ) }
    dend_53 { pt3dadd( 16.846, 21.2911, -110.499, 0.55 ) }
    dend_53 { pt3dadd( 14.8758, 21.9844, -116.137, 0.83 ) }
    dend_53 { pt3dadd( 14.0843, 22.3301, -118.198, 0.28 ) }
    dend_53 { pt3dadd( 13.0949, 22.7468, -120.43, 0.55 ) }
    dend_53 { pt3dadd( 11.1492, 23.6556, -124.444, 0.28 ) }
    dend_53 { pt3dadd( 9.64062, 24.3913, -126.973, 0.83 ) }
    dend_53 { pt3dadd( 7.70659, 25.5071, -129.98, 0.55 ) }
    dend_53 { pt3dadd( 5.24684, 26.8856, -133.345, 0.28 ) }
    dend_53 { pt3dadd( 4.04162, 27.6597, -135.046, 0.55 ) }
    dend_53 { pt3dadd( 1.12089, 29.6106, -139.053, 0.28 ) }
    dend_53 { pt3dadd( 0.137454, 30.2788, -140.439, 0.55 ) }
    dend_53 { pt3dadd( -2.12295, 31.7223, -143.748, 0.28 ) }
    dend_53 { pt3dadd( -2.90839, 32.2279, -145.017, 0.83 ) }
    dend_53 { pt3dadd( -5.96146, 34.2167, -150.273, 0.28 ) }
    dend_53 { pt3dadd( -7.17989, 35.0317, -152.471, 0.55 ) }
    dend_53 { pt3dadd( -9.66049, 36.6602, -157.13, 0.28 ) }
    dend_53 { pt3dadd( -10.1883, 37.028, -158.279, 0.55 ) }
    dend_53 { pt3dadd( -13.6884, 39.4054, -166.268, 0.28 ) }
    dend_53 { pt3dadd( -14.5894, 40.0486, -168.406, 0.55 ) }
    dend_53 { pt3dadd( -15.493, 40.687, -170.622, 0.28 ) }
    dend_53 { pt3dadd( -16.8367, 41.6903, -174.249, 0.55 ) }
    dend_53 { pt3dadd( -20.6107, 44.5103, -185.032, 0.28 ) }
    dend_53 { pt3dadd( -21.2218, 45.0013, -186.923, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 97/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 14.3577, 160.854, 51.3757, 0.55 ) }
    dend_47 { pt3dadd( 16.7418, 162.273, 48.6081, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 99/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 14.3577, 160.854, 51.3757, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_46 { pt3dadd( 14.9906, 162.56, 53.604, 0.55 ) }
    dend_46 { pt3dadd( 15.7449, 163.966, 56.3542, 0.28 ) }
    dend_46 { pt3dadd( 16.5756, 165.45, 59.2955, 0.55 ) }
    dend_46 { pt3dadd( 16.9698, 166.403, 61.1314, 0.28 ) }
    dend_46 { pt3dadd( 17.5956, 167.949, 64.4272, 0.55 ) }
    dend_46 { pt3dadd( 18.2331, 169.879, 68.7782, 0.28 ) }
    dend_46 { pt3dadd( 18.4069, 171.33, 72.4995, 0.55 ) }
    dend_46 { pt3dadd( 18.3274, 172.134, 74.5533, 0.28 ) }
    dend_46 { pt3dadd( 17.874, 173.561, 77.9002, 0.55 ) }
    dend_46 { pt3dadd( 16.81, 176.442, 83.3785, 0.28 ) }
    dend_46 { pt3dadd( 16.3596, 177.542, 85.0774, 0.55 ) }
    dend_46 { pt3dadd( 15.3193, 179.59, 87.5607, 0.55 ) }
    dend_46 { pt3dadd( 14.4037, 181.053, 89.1227, 0.55 ) }
    dend_46 { pt3dadd( 13.0163, 183.08, 91.3456, 0.28 ) }
    dend_46 { pt3dadd( 11.9646, 184.743, 92.5928, 0.55 ) }
    dend_46 { pt3dadd( 12.5683, 190.274, 106.646, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 16/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 44.8215, 39.1239, -24.2173, 0.83 ) }
    dend_41 { pt3dadd( 46.827, 43.1708, -26.2711, 0.55 ) }
    dend_41 { pt3dadd( 47.8395, 45.0302, -27.499, 0.83 ) }
    dend_41 { pt3dadd( 48.9328, 47.0658, -28.6291, 0.83 ) }
    dend_41 { pt3dadd( 50.0441, 49.3474, -29.7543, 0.55 ) }
    dend_41 { pt3dadd( 50.727, 50.6554, -30.3595, 0.83 ) }
    dend_41 { pt3dadd( 52.3238, 53.6247, -31.6289, 0.55 ) }
    dend_41 { pt3dadd( 53.8539, 56.546, -32.6883, 0.83 ) }
    dend_41 { pt3dadd( 56.5944, 62.1785, -34.6115, 0.83 ) }
    dend_41 { pt3dadd( 57.4265, 64.0442, -35.1362, 0.83 ) }
    dend_41 { pt3dadd( 59.522, 68.6889, -36.0938, 0.83 ) }
    dend_41 { pt3dadd( 60.5826, 71.1492, -36.4184, 0.83 ) }
    dend_41 { pt3dadd( 62.1242, 74.8226, -36.5834, 0.83 ) }
    dend_41 { pt3dadd( 63.4174, 78.1295, -36.653, 0.83 ) }
    dend_41 { pt3dadd( 64.9517, 82.4085, -36.7348, 0.83 ) }
    dend_41 { pt3dadd( 66.8105, 87.689, -36.7764, 0.83 ) }
    dend_41 { pt3dadd( 68.1532, 91.911, -36.7256, 0.83 ) }
    dend_41 { pt3dadd( 69.3497, 95.6329, -36.661, 0.83 ) }
    dend_41 { pt3dadd( 70.9643, 100.404, -36.5287, 0.83 ) }
    dend_41 { pt3dadd( 72.4692, 105.212, -36.4403, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 36/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 44.8215, 39.1239, -24.2173, 0.83 ) }
    dend_40 { pt3dadd( 45.9045, 39.1367, -24.0093, 0.28 ) }
    dend_40 { pt3dadd( 46.7796, 39.1592, -23.9463, 0.55 ) }
    dend_40 { pt3dadd( 48.1836, 39.2242, -24.0066, 0.28 ) }
    dend_40 { pt3dadd( 50.8727, 39.3107, -24.2763, 0.55 ) }
    dend_40 { pt3dadd( 53.0955, 39.2929, -24.5687, 0.55 ) }
    dend_40 { pt3dadd( 54.5746, 39.2086, -24.8315, 0.28 ) }
    dend_40 { pt3dadd( 56.6004, 38.9317, -25.3029, 0.55 ) }
    dend_40 { pt3dadd( 58.4698, 38.5181, -25.8253, 0.28 ) }
    dend_40 { pt3dadd( 59.4618, 38.2081, -26.1681, 0.55 ) }
    dend_40 { pt3dadd( 60.5043, 37.7894, -26.6326, 0.28 ) }
    dend_40 { pt3dadd( 61.9122, 37.0513, -27.3041, 0.55 ) }
    dend_40 { pt3dadd( 64.0539, 35.6978, -28.2433, 0.28 ) }
    dend_40 { pt3dadd( 64.9718, 34.9856, -28.6324, 0.55 ) }
    dend_40 { pt3dadd( 65.9595, 34.1494, -29.0592, 0.28 ) }
    dend_40 { pt3dadd( 67.1163, 33.157, -29.5876, 0.55 ) }
    dend_40 { pt3dadd( 68.4837, 31.9705, -30.2393, 0.28 ) }
    dend_40 { pt3dadd( 70.4317, 30.0884, -31.2094, 0.28 ) }
    dend_40 { pt3dadd( 71.0342, 29.3615, -31.6124, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 55/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.73097, -73.9919, -50.4819, 0.83 ) }
    dend_26 { pt3dadd( 4.65294, -75.1188, -50.646, 0.55 ) }
    dend_26 { pt3dadd( 5.49206, -76.2615, -50.7615, 0.55 ) }
    dend_26 { pt3dadd( 6.64641, -77.8608, -50.885, 0.55 ) }
    dend_26 { pt3dadd( 7.4111, -78.964, -51.0714, 0.55 ) }
    dend_26 { pt3dadd( 7.94566, -79.7194, -51.2969, 0.55 ) }
    dend_26 { pt3dadd( 8.61166, -80.652, -51.6398, 0.55 ) }
    dend_26 { pt3dadd( 9.36582, -81.7666, -52.1376, 0.28 ) }
    dend_26 { pt3dadd( 9.70848, -82.2716, -52.4035, 0.55 ) }
    dend_26 { pt3dadd( 10.8772, -84.0665, -53.5352, 0.28 ) }
    dend_26 { pt3dadd( 11.7778, -85.3966, -54.5433, 0.28 ) }
    dend_26 { pt3dadd( 12.1476, -85.8973, -54.9831, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 67/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.73097, -73.9919, -50.4819, 0.83 ) }
    dend_25 { pt3dadd( 4.03892, -75.4956, -51.314, 1.11 ) }
    dend_25 { pt3dadd( 4.24579, -76.5248, -52.0795, 0.28 ) }
    dend_25 { pt3dadd( 4.42347, -77.548, -52.9171, 0.83 ) }
    dend_25 { pt3dadd( 4.74119, -79.1243, -54.2109, 0.83 ) }
    dend_25 { pt3dadd( 5.65425, -83.062, -57.342, 0.28 ) }
    dend_25 { pt3dadd( 5.82441, -83.5426, -57.7319, 0.83 ) }
    dend_25 { pt3dadd( 6.9351, -85.94, -59.8771, 0.28 ) }
    dend_25 { pt3dadd( 7.38465, -86.7296, -60.6793, 0.55 ) }
    dend_25 { pt3dadd( 8.48339, -88.3707, -62.4425, 0.55 ) }
    dend_25 { pt3dadd( 9.10359, -89.2306, -63.4084, 0.55 ) }
    dend_25 { pt3dadd( 10.8197, -91.6963, -66.1255, 0.55 ) }
    dend_25 { pt3dadd( 11.3421, -92.5405, -67.0006, 0.55 ) }
    dend_25 { pt3dadd( 12.4827, -94.6535, -69.2582, 0.28 ) }
    dend_25 { pt3dadd( 12.7812, -95.5697, -70.3094, 0.55 ) }
    dend_25 { pt3dadd( 12.9763, -96.998, -71.9942, 0.55 ) }
    dend_25 { pt3dadd( 13.0021, -98.501, -73.6005, 0.55 ) }
    dend_25 { pt3dadd( 12.7641, -100.373, -75.3409, 0.55 ) }
    dend_25 { pt3dadd( 12.2652, -102.562, -77.4687, 0.55 ) }
    dend_25 { pt3dadd( 11.6926, -104.804, -79.6312, 0.28 ) }
    dend_25 { pt3dadd( 11.3175, -106.267, -81.1066, 0.55 ) }
    dend_25 { pt3dadd( 10.8768, -108.309, -83.126, 0.55 ) }
    dend_25 { pt3dadd( 10.5283, -109.745, -84.5465, 0.55 ) }
    dend_25 { pt3dadd( 9.29579, -115.059, -89.8939, 0.55 ) }
    dend_25 { pt3dadd( 9.06595, -116.348, -91.1378, 0.55 ) }
    dend_25 { pt3dadd( 8.8031, -118.135, -92.9189, 0.28 ) }
    dend_25 { pt3dadd( 8.62425, -119.315, -94.0384, 0.55 ) }
    dend_25 { pt3dadd( 8.39506, -121.196, -95.9112, 0.55 ) }
    dend_25 { pt3dadd( 8.17649, -123.684, -98.3131, 0.28 ) }
    dend_25 { pt3dadd( 8.13382, -124.437, -98.9937, 0.55 ) }
    dend_25 { pt3dadd( 8.03773, -125.934, -100.385, 0.28 ) }
    dend_25 { pt3dadd( 7.93389, -129.015, -103.419, 0.55 ) }
    dend_25 { pt3dadd( 7.86549, -133.315, -107.979, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_25 { pt3dadd( 7.94359, -134.656, -109.459, 0.55 ) }
    dend_25 { pt3dadd( 8.0844, -136.178, -111.231, 0.28 ) }
    dend_25 { pt3dadd( 8.21284, -137.02, -112.24, 0.55 ) }
    dend_25 { pt3dadd( 8.80427, -138.843, -114.486, 0.28 ) }
    dend_25 { pt3dadd( 9.69217, -140.23, -116.565, 0.55 ) }
    dend_25 { pt3dadd( 10.7856, -141.376, -118.329, 0.28 ) }
    dend_25 { pt3dadd( 11.3782, -141.84, -119.182, 0.55 ) }
    dend_25 { pt3dadd( 12.5057, -142.558, -120.768, 0.55 ) }
    dend_25 { pt3dadd( 14.2623, -143.426, -123.053, 0.55 ) }
    dend_25 { pt3dadd( 16.6217, -144.401, -126.073, 0.55 ) }
    dend_25 { pt3dadd( 18.1709, -144.977, -128.073, 0.28 ) }
    dend_25 { pt3dadd( 19.5496, -145.507, -130.185, 0.55 ) }
    dend_25 { pt3dadd( 20.7609, -145.984, -132.205, 0.28 ) }
    dend_25 { pt3dadd( 21.6725, -146.386, -133.877, 0.55 ) }
    dend_25 { pt3dadd( 23.0036, -147.19, -136.893, 0.28 ) }
    dend_25 { pt3dadd( 23.5945, -147.71, -138.411, 0.55 ) }
    dend_25 { pt3dadd( 24.5778, -149.064, -141.917, 0.28 ) }
    dend_25 { pt3dadd( 24.747, -149.482, -142.816, 0.28 ) }
    dend_25 { pt3dadd( 25.0029, -150.301, -144.504, 0.55 ) }
    dend_25 { pt3dadd( 25.5703, -152.826, -149.541, 0.28 ) }
    dend_25 { pt3dadd( 25.6926, -153.495, -150.811, 0.55 ) }
    dend_25 { pt3dadd( 26.0688, -156.513, -156.409, 0.28 ) }
    dend_25 { pt3dadd( 26.2255, -158.374, -159.563, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -12.6019, -54.3966, -14.1273, 1.66 ) }
    dend_18 { pt3dadd( -14.4125, -57.5322, -19.4235, 1.38 ) }
    dend_18 { pt3dadd( -15.9724, -60.2334, -23.986, 1.38 ) }
    dend_18 { pt3dadd( -17.4705, -62.8278, -28.3681, 1.11 ) }
    dend_18 { pt3dadd( -18.3952, -64.4293, -31.073, 1.11 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 28/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -12.6019, -54.3966, -14.1273, 1.66 ) }
    dend_17 { pt3dadd( -17.8305, -54.8314, -16.3261, 0.83 ) }
    dend_17 { pt3dadd( -20.6401, -55.1947, -17.7929, 0.55 ) }
    dend_17 { pt3dadd( -22.6058, -55.5253, -18.84, 0.55 ) }
    dend_17 { pt3dadd( -28.25, -56.9837, -21.8972, 0.55 ) }
    dend_17 { pt3dadd( -33.6439, -58.4979, -24.862, 0.55 ) }
    dend_17 { pt3dadd( -34.8592, -58.8839, -25.5115, 0.55 ) }
    dend_17 { pt3dadd( -38.9832, -60.416, -27.9027, 0.55 ) }
    dend_17 { pt3dadd( -41.7263, -61.493, -29.4319, 0.55 ) }
    dend_17 { pt3dadd( -47.7321, -64.0428, -32.4203, 0.55 ) }
    dend_17 { pt3dadd( -51.3832, -65.8713, -33.9855, 0.55 ) }
    dend_17 { pt3dadd( -54.2375, -67.3727, -35.039, 0.55 ) }
    dend_17 { pt3dadd( -57.3585, -68.9327, -36.0008, 0.55 ) }
    dend_17 { pt3dadd( -61.4398, -70.7303, -36.7341, 0.55 ) }
    dend_17 { pt3dadd( -63.2119, -71.3836, -36.8913, 0.28 ) }
    dend_17 { pt3dadd( -63.8962, -71.5846, -36.8751, 0.55 ) }
    dend_17 { pt3dadd( -67.4503, -72.6445, -36.5466, 0.55 ) }
    dend_17 { pt3dadd( -71.312, -73.6995, -36.0641, 0.55 ) }
    dend_17 { pt3dadd( -76.0601, -74.8319, -35.2826, 0.55 ) }
    dend_17 { pt3dadd( -79.353, -75.6052, -34.7125, 0.55 ) }
    dend_17 { pt3dadd( -80.4649, -75.8211, -34.5449, 0.28 ) }
    dend_17 { pt3dadd( -83.9848, -76.4787, -34.1367, 0.55 ) }
    dend_17 { pt3dadd( -86.1948, -76.7962, -33.954, 0.28 ) }
    dend_17 { pt3dadd( -88.6082, -77.0325, -33.785, 0.28 ) }
    dend_17 { pt3dadd( -92.6325, -77.3399, -33.6221, 0.55 ) }
    dend_17 { pt3dadd( -94.6581, -77.5183, -33.5331, 0.55 ) }
    dend_17 { pt3dadd( -98.441, -77.7524, -33.1253, 0.55 ) }
    dend_17 { pt3dadd( -102.681, -77.8176, -32.4805, 0.28 ) }
    dend_17 { pt3dadd( -105.442, -77.8346, -31.9564, 0.55 ) }
    dend_17 { pt3dadd( -107.342, -77.874, -31.5744, 0.28 ) }
    dend_17 { pt3dadd( -109.905, -77.8575, -31.052, 0.55 ) }
    dend_17 { pt3dadd( -113.796, -77.9181, -30.3967, 0.28 ) }
    dend_17 { pt3dadd( -116.725, -77.9227, -30.1059, 0.55 ) }
    dend_17 { pt3dadd( -118.328, -77.9822, -30.1818, 0.28 ) }
    dend_17 { pt3dadd( -120.374, -78.0615, -30.5597, 0.83 ) }
    dend_17 { pt3dadd( -123.317, -78.4305, -31.6387, 0.28 ) }
    dend_17 { pt3dadd( -125.013, -78.7704, -32.4519, 0.55 ) }
    dend_17 { pt3dadd( -127.361, -79.4355, -33.7517, 0.28 ) }
    dend_17 { pt3dadd( -128.426, -79.8653, -34.3679, 0.55 ) }
    dend_17 { pt3dadd( -129.738, -80.5298, -35.089, 0.28 ) }
    dend_17 { pt3dadd( -132.008, -81.8743, -36.4282, 0.55 ) }
    dend_17 { pt3dadd( -133.968, -83.1508, -37.6655, 0.28 ) }
    dend_17 { pt3dadd( -134.447, -83.4236, -37.9845, 0.55 ) }
    dend_17 { pt3dadd( -135.96, -84.2655, -39.1415, 0.28 ) }
    dend_17 { pt3dadd( -137.586, -85.1012, -40.4678, 0.55 ) }
    dend_17 { pt3dadd( -140.845, -86.6988, -43.3225, 0.28 ) }
    dend_17 { pt3dadd( -142.188, -87.3503, -44.525, 0.83 ) }
    dend_17 { pt3dadd( -146.286, -89.1752, -48.4087, 0.28 ) }
    dend_17 { pt3dadd( -148.38, -89.9662, -50.3333, 0.55 ) }
    dend_17 { pt3dadd( -148.696, -90.0625, -50.6075, 1.11 ) }
    dend_17 { pt3dadd( -150.169, -90.4628, -51.8335, 0.28 ) }
    dend_17 { pt3dadd( -152.247, -90.9411, -53.4388, 0.55 ) }
    dend_17 { pt3dadd( -154.922, -91.4825, -55.3742, 0.28 ) }
    dend_17 { pt3dadd( -155.871, -91.6574, -56.0067, 0.55 ) }
    dend_17 { pt3dadd( -160.48, -92.3853, -58.8523, 0.28 ) }
    dend_17 { pt3dadd( -162.57, -92.6892, -60.1482, 0.55 ) }
    dend_17 { pt3dadd( -164.993, -92.9939, -61.6289, 0.28 ) }
    dend_17 { pt3dadd( -166.946, -93.2786, -62.869, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 86/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -86.2888, -80.915, -13.5773, 0.55 ) }
    dend_13 { pt3dadd( -86.9462, -81.2717, -12.7729, 0.55 ) }
    dend_13 { pt3dadd( -87.2848, -81.4499, -12.37, 0.28 ) }
    dend_13 { pt3dadd( -87.9303, -81.7988, -11.5783, 0.55 ) }
    dend_13 { pt3dadd( -89.2078, -82.5366, -9.95094, 0.28 ) }
    dend_13 { pt3dadd( -89.6989, -82.8351, -9.36239, 0.55 ) }
    dend_13 { pt3dadd( -90.8314, -83.5435, -8.07126, 0.28 ) }
    dend_13 { pt3dadd( -91.0943, -83.7157, -7.76901, 0.55 ) }
    dend_13 { pt3dadd( -91.5204, -83.993, -7.28108, 0.55 ) }
    dend_13 { pt3dadd( -92.1621, -84.439, -6.57776, 0.55 ) }
    dend_13 { pt3dadd( -92.8769, -84.9647, -5.94121, 0.28 ) }
    dend_13 { pt3dadd( -93.1486, -85.1866, -5.68905, 0.28 ) }
    dend_13 { pt3dadd( -93.7402, -85.7623, -5.32217, 0.55 ) }
    dend_13 { pt3dadd( -95.8948, -87.0346, -3.1395, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -97.9547, -88.2711, -0.848545, 0.55 ) }
    dend_13 { pt3dadd( -99.9824, -88.7995, 1.70953, 0.55 ) }
    dend_13 { pt3dadd( -101.695, -89.7219, 4.39255, 0.55 ) }
    dend_13 { pt3dadd( -103.49, -90.8384, 6.94923, 0.55 ) }
    dend_13 { pt3dadd( -105.701, -92.2294, 9.00247, 0.55 ) }
    dend_13 { pt3dadd( -107.32, -93.9983, 11.3187, 0.55 ) }
    dend_13 { pt3dadd( -108.739, -95.858, 13.6981, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -86.2888, -80.915, -13.5773, 0.55 ) }
    dend_12 { pt3dadd( -88.1773, -80.4873, -13.7842, 0.55 ) }
    dend_12 { pt3dadd( -90.5228, -79.9561, -14.0411, 0.83 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 10/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 172.325, 55.0011, 134.941, 0.55 ) }
    dend_71 { pt3dadd( 179.668, 55.2977, 140.43, 0.55 ) }
    dend_71 { pt3dadd( 185.635, 55.7401, 147.383, 0.55 ) }
    dend_71 { pt3dadd( 190.661, 56.9349, 154.966, 0.55 ) }
    dend_71 { pt3dadd( 194.671, 59.6965, 162.762, 0.55 ) }
    dend_71 { pt3dadd( 197.985, 63.0456, 170.663, 0.55 ) }
    dend_71 { pt3dadd( 201.244, 65.7551, 178.816, 0.55 ) }
    dend_71 { pt3dadd( 205.239, 69.9681, 185.978, 0.55 ) }
    dend_71 { pt3dadd( 209.068, 75.0054, 192.711, 0.55 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 19/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 172.325, 55.0011, 134.941, 0.55 ) }
    dend_70 { pt3dadd( 181.24, 55.4508, 140.929, 0.55 ) }
    dend_70 { pt3dadd( 189.527, 55.6957, 147.77, 0.55 ) }
    dend_70 { pt3dadd( 197.29, 54.8219, 155.147, 0.55 ) }
    dend_70 { pt3dadd( 204.73, 53.3071, 162.752, 0.55 ) }
    dend_70 { pt3dadd( 212.06, 52.3828, 170.554, 0.55 ) }
    dend_70 { pt3dadd( 219.603, 50.7325, 178.028, 0.55 ) }
    dend_70 { pt3dadd( 228.047, 48.0134, 184.105, 0.55 ) }
    dend_70 { pt3dadd( 236.289, 45.5741, 190.562, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 28/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 21.6781, 179.825, -165.838, 0.83 ) }
    dend_56 { pt3dadd( 20.6316, 182.885, -167.63, 0.55 ) }
    dend_56 { pt3dadd( 19.5469, 185.485, -169.274, 0.28 ) }
    dend_56 { pt3dadd( 18.1811, 188.403, -171.203, 0.55 ) }
    dend_56 { pt3dadd( 17.1068, 190.382, -172.731, 0.55 ) }
    dend_56 { pt3dadd( 15.3851, 193.413, -175.221, 0.55 ) }
    dend_56 { pt3dadd( 14.613, 194.772, -176.338, 0.55 ) }
    dend_56 { pt3dadd( 13.033, 197.121, -178.487, 0.28 ) }
    dend_56 { pt3dadd( 12.6725, 197.579, -178.96, 0.55 ) }
    dend_56 { pt3dadd( 10.3749, 200.118, -181.863, 0.55 ) }
    dend_56 { pt3dadd( 8.32358, 202.258, -184.675, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 39/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 21.6781, 179.825, -165.838, 0.83 ) }
    dend_55 { pt3dadd( 24.5827, 182.417, -166.114, 0.83 ) }
    dend_55 { pt3dadd( 26.1917, 184.192, -166.488, 0.55 ) }
    dend_55 { pt3dadd( 27.608, 186.014, -166.835, 0.83 ) }
    dend_55 { pt3dadd( 28.605, 187.343, -167.076, 0.55 ) }
    dend_55 { pt3dadd( 29.9089, 189.13, -167.357, 0.83 ) }
    dend_55 { pt3dadd( 31.7406, 191.914, -167.772, 0.83 ) }
    dend_55 { pt3dadd( 33.2176, 194.823, -168.252, 0.55 ) }
    dend_55 { pt3dadd( 34.1225, 196.851, -168.463, 0.83 ) }
    dend_55 { pt3dadd( 34.9977, 199.299, -168.67, 0.83 ) }
    dend_55 { pt3dadd( 35.4754, 200.898, -168.8, 0.28 ) }
    dend_55 { pt3dadd( 36.1031, 203.124, -168.868, 0.55 ) }
    dend_55 { pt3dadd( 37.1705, 206.253, -168.882, 0.55 ) }
    dend_55 { pt3dadd( 38.0342, 208.457, -168.737, 0.55 ) }
    dend_55 { pt3dadd( 39.1688, 210.817, -168.594, 0.28 ) }
    dend_55 { pt3dadd( 40.1982, 212.662, -168.526, 0.55 ) }
    dend_55 { pt3dadd( 41.8777, 215.326, -168.488, 0.55 ) }
    dend_55 { pt3dadd( 44.3024, 218.857, -168.537, 0.83 ) }
    dend_55 { pt3dadd( 46.356, 221.737, -168.646, 0.83 ) }
    dend_55 { pt3dadd( 48.3159, 224.476, -168.861, 0.83 ) }
    dend_55 { pt3dadd( 50.4503, 227.469, -169.282, 0.55 ) }
    dend_55 { pt3dadd( 51.7615, 229.427, -169.688, 0.83 ) }
    dend_55 { pt3dadd( 53.0718, 231.579, -170.26, 0.28 ) }
    dend_55 { pt3dadd( 53.5979, 232.536, -170.524, 0.55 ) }
    dend_55 { pt3dadd( 54.3491, 234.147, -171.05, 0.28 ) }
    dend_55 { pt3dadd( 55.6844, 237.646, -172.121, 0.55 ) }
    dend_55 { pt3dadd( 56.0252, 238.664, -172.41, 0.55 ) }
    dend_55 { pt3dadd( 56.6897, 240.58, -172.873, 0.28 ) }
    dend_55 { pt3dadd( 57.127, 241.733, -173.167, 0.55 ) }
    dend_55 { pt3dadd( 58.8975, 245.781, -174.237, 0.28 ) }
    dend_55 { pt3dadd( 59.5709, 247.132, -174.603, 0.55 ) }
    dend_55 { pt3dadd( 60.3584, 248.596, -174.997, 0.28 ) }
    dend_55 { pt3dadd( 61.5117, 251.031, -175.784, 0.55 ) }
    dend_55 { pt3dadd( 63.1107, 254.629, -177.037, 0.28 ) }
    dend_55 { pt3dadd( 63.9592, 256.842, -177.831, 0.55 ) }
    dend_55 { pt3dadd( 64.6771, 258.74, -178.552, 0.28 ) }
    dend_55 { pt3dadd( 65.4078, 260.864, -179.499, 0.55 ) }
    dend_55 { pt3dadd( 66.5169, 264.49, -181.154, 0.28 ) }
    dend_55 { pt3dadd( 66.7112, 265.301, -181.529, 0.55 ) }
    dend_55 { pt3dadd( 67.3014, 268.632, -182.873, 0.28 ) }
    dend_55 { pt3dadd( 67.523, 270.412, -183.634, 0.83 ) }
    dend_55 { pt3dadd( 67.8, 272.739, -184.649, 0.28 ) }
    dend_55 { pt3dadd( 68.0635, 274.332, -185.439, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 72.4692, 105.212, -36.4403, 0.83 ) }
    dend_43 { pt3dadd( 73.4995, 108.363, -35.5676, 0.83 ) }
    dend_43 { pt3dadd( 74.2769, 111.289, -34.6782, 0.83 ) }
    dend_43 { pt3dadd( 75.1501, 114.829, -33.5194, 0.83 ) }
    dend_43 { pt3dadd( 76.1457, 118.642, -32.1999, 0.83 ) }
    dend_43 { pt3dadd( 77.3475, 123.172, -30.5644, 0.83 ) }
    dend_43 { pt3dadd( 78.6077, 127.94, -28.8335, 0.83 ) }
    dend_43 { pt3dadd( 79.7251, 132.769, -26.9825, 0.83 ) }
    dend_43 { pt3dadd( 80.6875, 136.779, -25.4925, 0.83 ) }
    dend_43 { pt3dadd( 81.6937, 140.575, -24.213, 0.83 ) }
    dend_43 { pt3dadd( 82.4217, 142.808, -23.6163, 0.55 ) }
    dend_43 { pt3dadd( 83.0276, 144.385, -23.3532, 0.83 ) }
    dend_43 { pt3dadd( 83.9623, 146.488, -23.2461, 0.55 ) }
    dend_43 { pt3dadd( 86.0305, 150.409, -23.633, 0.83 ) }
    dend_43 { pt3dadd( 88.1568, 154.216, -24.5102, 0.83 ) }
    dend_43 { pt3dadd( 90.7058, 158.703, -25.8614, 0.83 ) }
    dend_43 { pt3dadd( 92.6242, 161.917, -26.7922, 0.83 ) }
    dend_43 { pt3dadd( 95.3784, 166.48, -27.9864, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 98.1769, 171.158, -29.1564, 0.55 ) }
    dend_43 { pt3dadd( 100.125, 174.374, -30.0279, 0.55 ) }
    dend_43 { pt3dadd( 102.702, 178.484, -31.4677, 0.55 ) }
    dend_43 { pt3dadd( 105.512, 183.097, -33.2393, 0.55 ) }
    dend_43 { pt3dadd( 107.206, 185.924, -34.3264, 0.55 ) }
    dend_43 { pt3dadd( 108.233, 187.662, -35.0567, 0.55 ) }
    dend_43 { pt3dadd( 112.732, 195.338, -38.589, 0.55 ) }
    dend_43 { pt3dadd( 115.153, 199.412, -40.8988, 0.55 ) }
    dend_43 { pt3dadd( 116.056, 200.963, -41.9864, 0.28 ) }
    dend_43 { pt3dadd( 116.913, 202.515, -43.1944, 0.55 ) }
    dend_43 { pt3dadd( 118.788, 205.906, -45.7679, 0.55 ) }
    dend_43 { pt3dadd( 119.739, 207.743, -46.9432, 0.55 ) }
    dend_43 { pt3dadd( 120.499, 209.493, -47.7429, 0.28 ) }
    dend_43 { pt3dadd( 121.244, 211.356, -48.2791, 0.55 ) }
    dend_43 { pt3dadd( 122.63, 215.2, -48.982, 0.28 ) }
    dend_43 { pt3dadd( 123.257, 217.361, -48.9471, 0.55 ) }
    dend_43 { pt3dadd( 123.713, 219.47, -48.4491, 0.28 ) }
    dend_43 { pt3dadd( 123.962, 221.028, -47.7178, 0.55 ) }
    dend_43 { pt3dadd( 124.245, 223.998, -45.7862, 0.28 ) }
    dend_43 { pt3dadd( 124.317, 225.39, -44.7055, 0.55 ) }
    dend_43 { pt3dadd( 124.261, 226.693, -43.4741, 0.28 ) }
    dend_43 { pt3dadd( 124.16, 227.65, -42.4706, 0.55 ) }
    dend_43 { pt3dadd( 123.771, 230.899, -38.8053, 0.28 ) }
    dend_43 { pt3dadd( 123.6, 232.466, -36.8674, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 24/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 72.4692, 105.212, -36.4403, 0.83 ) }
    dend_42 { pt3dadd( 71.069, 107.214, -36.6556, 0.55 ) }
    dend_42 { pt3dadd( 70.4057, 108.162, -36.7576, 0.28 ) }
    dend_42 { pt3dadd( 69.7532, 109.095, -36.8579, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.3952, -64.4293, -31.073, 1.11 ) }
    dend_22 { pt3dadd( -16.5861, -67.9256, -31.6738, 0.83 ) }
    dend_22 { pt3dadd( -14.9952, -71.2835, -32.3354, 0.83 ) }
    dend_22 { pt3dadd( -13.6996, -74.9817, -33.1038, 0.55 ) }
    dend_22 { pt3dadd( -13.3894, -76.016, -33.3415, 0.83 ) }
    dend_22 { pt3dadd( -12.4017, -79.3548, -34.1207, 0.83 ) }
    dend_22 { pt3dadd( -11.91, -80.9304, -34.5244, 0.83 ) }
    dend_22 { pt3dadd( -11.5086, -82.5843, -35.0122, 0.28 ) }
    dend_22 { pt3dadd( -10.654, -86.7176, -36.3115, 0.83 ) }
    dend_22 { pt3dadd( -10.4535, -87.8699, -36.7091, 0.28 ) }
    dend_22 { pt3dadd( -10.159, -89.1231, -37.1321, 0.55 ) }
    dend_22 { pt3dadd( -9.49418, -91.4579, -37.8312, 0.55 ) }
    dend_22 { pt3dadd( -9.20967, -92.334, -38.1066, 0.55 ) }
    dend_22 { pt3dadd( -8.73549, -93.6169, -38.5449, 0.83 ) }
    dend_22 { pt3dadd( -7.85703, -95.8761, -39.2795, 0.55 ) }
    dend_22 { pt3dadd( -6.95878, -98.4581, -40.0591, 0.55 ) }
    dend_22 { pt3dadd( -6.5518, -99.6804, -40.4303, 0.55 ) }
    dend_22 { pt3dadd( -5.57942, -102.666, -41.4401, 0.55 ) }
    dend_22 { pt3dadd( -5.18771, -103.848, -41.9375, 0.28 ) }
    dend_22 { pt3dadd( -4.41895, -106.156, -43.0623, 0.55 ) }
    dend_22 { pt3dadd( -4.1703, -107.079, -43.5848, 0.55 ) }
    dend_22 { pt3dadd( -3.78894, -108.819, -44.6736, 0.55 ) }
    dend_22 { pt3dadd( -2.94981, -113.128, -47.6015, 0.55 ) }
    dend_22 { pt3dadd( -2.72101, -114.639, -48.7618, 0.28 ) }
    dend_22 { pt3dadd( -2.62972, -115.285, -49.2981, 0.55 ) }
    dend_22 { pt3dadd( -2.21318, -118.469, -52.1421, 0.83 ) }
    dend_22 { pt3dadd( -2.05347, -119.889, -53.42, 0.55 ) }
    dend_22 { pt3dadd( -1.89447, -121.537, -54.9655, 0.55 ) }
    dend_22 { pt3dadd( -1.73218, -123.366, -56.6383, 0.28 ) }
    dend_22 { pt3dadd( -1.68846, -124.005, -57.1845, 0.55 ) }
    dend_22 { pt3dadd( -1.57817, -125.384, -58.4294, 0.55 ) }
    dend_22 { pt3dadd( -1.46675, -126.683, -59.6449, 0.55 ) }
    dend_22 { pt3dadd( -1.41813, -128.437, -61.2191, 0.55 ) }
    dend_22 { pt3dadd( -1.34858, -129.906, -62.5015, 0.83 ) }
    dend_22 { pt3dadd( -1.28821, -131.507, -63.6845, 0.55 ) }
    dend_22 { pt3dadd( -1.21341, -133.121, -64.7661, 0.55 ) }
    dend_22 { pt3dadd( -1.12843, -134.636, -65.6399, 0.55 ) }
    dend_22 { pt3dadd( -0.909487, -137.083, -66.8798, 0.55 ) }
    dend_22 { pt3dadd( -0.614378, -139.19, -67.7524, 0.55 ) }
    dend_22 { pt3dadd( -0.281678, -140.929, -68.3826, 0.83 ) }
    dend_22 { pt3dadd( 0.144114, -142.954, -69.0198, 0.55 ) }
    dend_22 { pt3dadd( 0.690251, -145.548, -69.7717, 0.55 ) }
    dend_22 { pt3dadd( 1.35051, -148.118, -70.5337, 0.55 ) }
    dend_22 { pt3dadd( 2.05745, -150.475, -71.2286, 0.55 ) }
    dend_22 { pt3dadd( 2.70818, -152.451, -71.8693, 0.28 ) }
    dend_22 { pt3dadd( 3.07878, -153.466, -72.301, 0.55 ) }
    dend_22 { pt3dadd( 3.39462, -154.311, -72.7311, 0.28 ) }
    dend_22 { pt3dadd( 3.99301, -155.713, -73.6643, 0.55 ) }
    dend_22 { pt3dadd( 4.5094, -156.895, -74.5398, 0.28 ) }
    dend_22 { pt3dadd( 4.9716, -157.959, -75.4556, 0.83 ) }
    dend_22 { pt3dadd( 5.92041, -160.023, -77.3005, 0.55 ) }
    dend_22 { pt3dadd( 6.45898, -161.136, -78.3213, 0.55 ) }
    dend_22 { pt3dadd( 7.41669, -163.097, -80.1865, 0.83 ) }
    dend_22 { pt3dadd( 7.79667, -163.839, -80.9329, 0.28 ) }
    dend_22 { pt3dadd( 8.41264, -165.05, -82.1912, 0.55 ) }
    dend_22 { pt3dadd( 9.25418, -166.52, -83.7501, 0.28 ) }
    dend_22 { pt3dadd( 9.82279, -167.42, -84.7708, 0.55 ) }
    dend_22 { pt3dadd( 10.602, -168.57, -86.0893, 0.28 ) }
    dend_22 { pt3dadd( 11.0403, -169.276, -86.8474, 0.83 ) }
    dend_22 { pt3dadd( 11.8643, -170.605, -88.2473, 0.55 ) }
    dend_22 { pt3dadd( 12.5015, -171.589, -89.2559, 0.55 ) }
    dend_22 { pt3dadd( 13.5788, -173.242, -90.91, 0.83 ) }
    dend_22 { pt3dadd( 14.6921, -174.919, -92.4891, 0.28 ) }
    dend_22 { pt3dadd( 15.7439, -176.352, -93.7034, 0.55 ) }
    dend_22 { pt3dadd( 16.585, -177.364, -94.5411, 0.28 ) }
    dend_22 { pt3dadd( 17.0758, -177.904, -94.9763, 0.55 ) }
    dend_22 { pt3dadd( 18.3395, -179.291, -96.0096, 0.28 ) }
    dend_22 { pt3dadd( 18.9206, -179.851, -96.4084, 0.55 ) }
    dend_22 { pt3dadd( 20.7922, -181.379, -97.6418, 0.28 ) }
    dend_22 { pt3dadd( 21.8509, -182.02, -98.1575, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -18.3952, -64.4293, -31.073, 1.11 ) }
    dend_19 { pt3dadd( -19.0875, -64.5952, -31.6639, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_19 { pt3dadd( -20.107, -64.9726, -32.7058, 0.55 ) }
    dend_19 { pt3dadd( -21.5219, -65.3366, -34.1367, 0.55 ) }
    dend_19 { pt3dadd( -22.8736, -65.4407, -35.4197, 0.55 ) }
    dend_19 { pt3dadd( -25.1165, -65.3784, -37.409, 0.55 ) }
    dend_19 { pt3dadd( -26.6601, -65.3646, -38.7109, 0.83 ) }
    dend_19 { pt3dadd( -28.0775, -65.5059, -40.1706, 0.83 ) }
    dend_19 { pt3dadd( -28.9567, -65.7324, -41.4269, 0.83 ) }
    dend_19 { pt3dadd( -29.9301, -66.0112, -42.9417, 0.83 ) }
    dend_19 { pt3dadd( -31.2048, -66.2795, -45.0293, 0.83 ) }
    dend_19 { pt3dadd( -32.4906, -66.5075, -47.0707, 0.83 ) }
    dend_19 { pt3dadd( -34.3894, -66.8478, -50.3464, 0.83 ) }
    dend_19 { pt3dadd( -35.762, -67.5257, -53.215, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 12/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -108.739, -95.858, 13.6981, 0.55 ) }
    dend_15 { pt3dadd( -118.034, -95.412, 18.7309, 0.55 ) }
    dend_15 { pt3dadd( -127.513, -96.2262, 23.382, 0.55 ) }
    dend_15 { pt3dadd( -136.698, -99.979, 27.1938, 0.55 ) }
    dend_15 { pt3dadd( -145.922, -103.343, 31.2561, 0.55 ) }
    dend_15 { pt3dadd( -154.214, -107.171, 36.7387, 0.55 ) }
    dend_15 { pt3dadd( -161.992, -110.415, 43.2534, 0.55 ) }
    dend_15 { pt3dadd( -168.885, -115.06, 49.9774, 0.55 ) }
    dend_15 { pt3dadd( -174.743, -119.485, 57.7657, 0.55 ) }
    dend_15 { pt3dadd( -180.101, -123.623, 66.0551, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -108.739, -95.858, 13.6981, 0.55 ) }
    dend_14 { pt3dadd( -112.179, -101.58, 19.2044, 0.55 ) }
    dend_14 { pt3dadd( -114.848, -106.83, 25.5274, 0.55 ) }
    dend_14 { pt3dadd( -116.095, -112.783, 31.697, 0.55 ) }
    dend_14 { pt3dadd( -115.876, -118.745, 37.9765, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 27/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -35.762, -67.5257, -53.215, 0.83 ) }
    dend_21 { pt3dadd( -41.4827, -65.0698, -59.5821, 0.83 ) }
    dend_21 { pt3dadd( -46.1325, -63.6319, -64.5218, 0.83 ) }
    dend_21 { pt3dadd( -50.8209, -62.6284, -69.2451, 0.55 ) }
    dend_21 { pt3dadd( -54.2726, -62.0708, -72.5668, 0.55 ) }
    dend_21 { pt3dadd( -55.7149, -61.8921, -73.8268, 0.55 ) }
    dend_21 { pt3dadd( -59.4278, -61.5544, -76.8822, 0.83 ) }
    dend_21 { pt3dadd( -60.5529, -61.6069, -77.6505, 0.83 ) }
    dend_21 { pt3dadd( -66.1767, -62.5679, -81.216, 0.83 ) }
    dend_21 { pt3dadd( -68.793, -63.2341, -82.8337, 0.83 ) }
    dend_21 { pt3dadd( -72.0663, -64.0355, -84.9577, 0.83 ) }
    dend_21 { pt3dadd( -76.242, -64.761, -88.0651, 0.83 ) }
    dend_21 { pt3dadd( -79.2535, -65.0032, -90.6775, 1.11 ) }
    dend_21 { pt3dadd( -81.5352, -65.242, -93.0436, 0.55 ) }
    dend_21 { pt3dadd( -82.7974, -65.4094, -94.5663, 0.55 ) }
    dend_21 { pt3dadd( -85.8287, -65.6926, -98.5733, 0.83 ) }
    dend_21 { pt3dadd( -90.7343, -65.709, -105.519, 0.83 ) }
    dend_21 { pt3dadd( -94.0637, -65.4843, -110.332, 0.83 ) }
    dend_21 { pt3dadd( -97.5752, -65.1162, -115.521, 0.55 ) }
    dend_21 { pt3dadd( -99.6231, -64.9698, -118.742, 0.83 ) }
    dend_21 { pt3dadd( -100.649, -64.893, -120.428, 0.55 ) }
    dend_21 { pt3dadd( -102.037, -64.8215, -122.898, 0.55 ) }
    dend_21 { pt3dadd( -105.21, -64.7378, -128.351, 0.55 ) }
    dend_21 { pt3dadd( -106.601, -64.6913, -130.518, 1.11 ) }
    dend_21 { pt3dadd( -111.829, -64.0841, -139.301, 0.83 ) }
    dend_21 { pt3dadd( -113.731, -63.6922, -142.783, 0.55 ) }
    dend_21 { pt3dadd( -115.925, -62.9001, -147.351, 0.55 ) }
    dend_21 { pt3dadd( -117.34, -62.2811, -150.548, 0.83 ) }
    dend_21 { pt3dadd( -120.441, -60.6738, -157.55, 0.55 ) }
    dend_21 { pt3dadd( -123.554, -58.9707, -164.421, 0.83 ) }
    dend_21 { pt3dadd( -125.299, -57.9212, -168.772, 0.83 ) }
    dend_21 { pt3dadd( -127.757, -56.8835, -175.029, 0.55 ) }
    dend_21 { pt3dadd( -130.594, -56.1672, -181.516, 0.55 ) }
    dend_21 { pt3dadd( -132.151, -55.9283, -184.655, 0.55 ) }
    dend_21 { pt3dadd( -133.433, -55.885, -186.749, 0.55 ) }
    dend_21 { pt3dadd( -140.736, -56.5138, -196.17, 0.55 ) }
    dend_21 { pt3dadd( -143.773, -57.0205, -199.586, 0.55 ) }
    dend_21 { pt3dadd( -147.268, -57.8074, -202.98, 0.55 ) }
    dend_21 { pt3dadd( -152.034, -58.8853, -207.016, 0.55 ) }
    dend_21 { pt3dadd( -153.693, -59.3667, -208.256, 0.28 ) }
    dend_21 { pt3dadd( -155.587, -60.1938, -209.36, 0.55 ) }
    dend_21 { pt3dadd( -158.466, -62.0481, -210.394, 0.28 ) }
    dend_21 { pt3dadd( -160.378, -63.624, -211.169, 0.55 ) }
    dend_21 { pt3dadd( -162.592, -66.1927, -212.039, 0.28 ) }
    dend_21 { pt3dadd( -164.124, -68.4651, -212.478, 0.83 ) }
    dend_21 { pt3dadd( -165.214, -70.164, -212.776, 0.83 ) }
    dend_21 { pt3dadd( -166.846, -72.9697, -213.192, 0.28 ) }
    dend_21 { pt3dadd( -168.175, -75.4876, -213.471, 0.55 ) }
    dend_21 { pt3dadd( -169.492, -77.9626, -213.713, 0.28 ) }
    dend_21 { pt3dadd( -170.815, -80.4994, -214.196, 0.55 ) }
    dend_21 { pt3dadd( -171.939, -82.3983, -214.707, 0.28 ) }
    dend_21 { pt3dadd( -172.499, -83.2724, -214.945, 0.55 ) }
    dend_21 { pt3dadd( -173.675, -85.1054, -215.4, 0.28 ) }
    dend_21 { pt3dadd( -174.089, -85.7453, -215.57, 0.55 ) }
    dend_21 { pt3dadd( -176.284, -88.7866, -216.55, 0.28 ) }
    dend_21 { pt3dadd( -177.519, -90.442, -217.159, 0.83 ) }
    dend_21 { pt3dadd( -178.586, -91.719, -217.635, 0.28 ) }
    dend_21 { pt3dadd( -179.39, -92.571, -217.936, 0.55 ) }
    dend_21 { pt3dadd( -181.478, -94.6861, -218.661, 0.28 ) }
    dend_21 { pt3dadd( -183.498, -96.6316, -219.282, 0.55 ) }
    dend_21 { pt3dadd( -185.547, -98.465, -219.725, 0.55 ) }
    dend_21 { pt3dadd( -187.067, -99.719, -220.101, 0.55 ) }
    dend_21 { pt3dadd( -188.53, -100.828, -220.492, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -35.762, -67.5257, -53.215, 0.83 ) }
    dend_20 { pt3dadd( -34.9819, -69.6109, -53.1361, 0.55 ) }
    dend_20 { pt3dadd( -34.5685, -70.7209, -53.151, 0.83 ) }
    dend_20 { pt3dadd( -34.1977, -71.8159, -53.2739, 0.55 ) }
    dend_20 { pt3dadd( -33.764, -73.4478, -53.5091, 0.83 ) }
    dend_20 { pt3dadd( -33.2965, -75.2984, -53.8567, 0.55 ) }
    dend_20 { pt3dadd( -32.7399, -77.81, -54.3442, 0.55 ) }
    dend_20 { pt3dadd( -32.5118, -79.051, -54.6428, 0.83 ) }
    dend_20 { pt3dadd( -32.2156, -81.3174, -55.2441, 0.55 ) }
    dend_20 { pt3dadd( -31.8781, -84.6606, -56.1758, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_20 { pt3dadd( -31.7375, -86.6301, -56.7738, 0.55 ) }
    dend_20 { pt3dadd( -31.5869, -89.422, -57.7067, 0.55 ) }
    dend_20 { pt3dadd( -31.5504, -91.3419, -58.3525, 0.28 ) }
    dend_20 { pt3dadd( -31.5175, -93.9805, -59.133, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_60, dend_35, dend_28, dend_5, dend_0, dend_62, dend_61, dend_49, dend_36, dend_32, dend_29, dend_9, dend_6, dend_2, dend_1, dend_72, dend_63, dend_51, dend_50, dend_44, dend_37, dend_34, dend_33, dend_31, dend_30, dend_23, dend_10, dend_8, dend_7, dend_4, dend_3, dend_76, dend_73, dend_67, dend_64, dend_57, dend_52, dend_48, dend_45, dend_39, dend_38, dend_27, dend_24, dend_16, dend_11, dend_75, dend_74, dend_69, dend_68, dend_66, dend_65, dend_59, dend_58, dend_54, dend_53, dend_47, dend_46, dend_41, dend_40, dend_26, dend_25, dend_18, dend_17, dend_13, dend_12, dend_71, dend_70, dend_56, dend_55, dend_43, dend_42, dend_22, dend_19, dend_15, dend_14, dend_21, dend_20]}
    ModelViewParmSubset_5 = new SectionList()
    dend_60 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_63 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_60, dend_60, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_49, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_72, dend_72, dend_72, dend_63, dend_63, dend_63, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_49 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.022874  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039967  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999904  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.071165994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 5.5999997E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.097243994  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.42883396  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004779  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.283745  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0029709998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.999812  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 8.6000003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001612  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 3.7899998E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0068679997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_230_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_230_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_230_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_230_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_62 nseg = 3
    dend_61 nseg = 7
    dend_32 nseg = 3
    dend_29 nseg = 7
    dend_6 nseg = 7
    dend_1 nseg = 7
    dend_50 nseg = 11
    dend_34 nseg = 7
    dend_33 nseg = 5
    dend_23 nseg = 3
    dend_7 nseg = 5
    dend_4 nseg = 9
    dend_3 nseg = 9
    dend_76 nseg = 7
    dend_73 nseg = 3
    dend_67 nseg = 5
    dend_64 nseg = 3
    dend_57 nseg = 7
    dend_48 nseg = 11
    dend_45 nseg = 9
    dend_11 nseg = 5
    dend_74 nseg = 5
    dend_69 nseg = 3
    dend_65 nseg = 5
    dend_58 nseg = 3
    dend_54 nseg = 11
    dend_53 nseg = 9
    dend_46 nseg = 3
    dend_41 nseg = 3
    dend_25 nseg = 7
    dend_17 nseg = 9
    dend_71 nseg = 3
    dend_70 nseg = 5
    dend_55 nseg = 5
    dend_43 nseg = 7
    dend_22 nseg = 7
    dend_15 nseg = 5
    dend_21 nseg = 13
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr230_L4_SS_1afeb14f17_0_0


