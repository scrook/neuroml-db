// Cell: bAC217_L5_BTC_5b195d0631_0_0
/*
{
  "id" : "bAC217_L5_BTC_5b195d0631_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.00557, 13.9448, -0.281532, 2.94779", "-0.903474, 12.664, -0.255809, 4.6084", "-0.801382, 11.3832, -0.230087, 6.06545", "-0.699289, 10.1025, -0.204364, 7.51206", "-0.597197, 8.82172, -0.178642, 8.73615", "-0.495104, 7.54095, -0.15292, 9.82275", "-0.393011, 6.26019, -0.127197, 10.7174", "-0.290919, 4.97943, -0.101475, 11.6395", "-0.188826, 3.69867, -0.0757524, 12.4724", "-0.0867336, 2.41791, -0.05003, 12.6766", "0.015359, 1.13715, -0.0243075, 12.8528", "0.117452, -0.143613, 0.00141486, 12.7165", "0.219544, -1.42437, 0.0271373, 12.4031", "0.321637, -2.70514, 0.0528597, 12.3753", "0.423729, -3.9859, 0.0785821, 12.071", "0.525822, -5.26666, 0.104304, 10.4042", "0.627914, -6.54742, 0.130027, 7.86989", "0.730007, -7.82818, 0.155749, 5.70594", "0.8321, -9.10894, 0.181472, 4.59143", "0.934192, -10.3897, 0.207194, 3.60784", "1.03628, -11.6705, 0.232917, 2.27826" ]
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "0.462584, -8.82701, 1.90039, 2.8", "0.572848, -9.51087, 1.85432, 2.8", "0.705028, -10.2336, 1.81067, 2.28", "0.854742, -10.9603, 1.79588, 1.77", "0.94883, -11.34, 1.79607, 1.4", "1.29138, -12.5531, 1.8107, 1.33", "1.52235, -13.2651, 1.85245, 1.18", "1.74583, -13.8369, 1.91282, 1.11", "2.07607, -14.5891, 2.05203, 1.25", "2.35086, -15.1975, 2.20685, 1.33", "2.55022, -15.6519, 2.35096, 1.4", "2.92252, -16.5748, 2.70369, 1.33", "3.0774, -16.9921, 2.88296, 1.03", "3.28862, -17.7363, 3.22488, 0.59", "3.33631, -18.1173, 3.40287, 0.52", "3.30357, -18.3476, 3.5124, 0.52", "3.24103, -18.4555, 3.55859, 0.52", "2.98294, -18.6473, 3.61114, 0.52", "2.53829, -18.8665, 3.70729, 0.52", "2.36425, -18.9596, 3.76415, 0.52", "2.10372, -19.134, 3.88415, 0.52", "1.85447, -19.3482, 4.0261, 0.52", "1.82264, -19.3982, 3.74527, 0.52", "1.71518, -19.606, 2.84738, 0.52", "1.56764, -19.9342, 1.6644, 1.55", "1.52195, -20.0563, 1.26374, 1.84", "1.48938, -20.1639, 0.926311, 2.14", "0.829721, -23.1214, -8.2057, 1.25", "0.803305, -23.3033, -8.79137, 1.11", "0.757757, -23.6166, -10.0164, 0.81", "0.740549, -23.6803, -10.3759, 0.59", "0.612657, -23.7831, -11.7674, 0.88", "0.537449, -23.7389, -12.231, 0.88", "0.743337, -24.0693, -11.3611, 0.44", "1.19416, -25.0304, -8.82179, 0.81", "1.2158, -25.1045, -8.64137, 0.81", "1.233, -25.4159, -8.01931, 1.03", "1.20198, -25.6903, -7.60453, 0.96", "0.969475, -26.7214, -6.3709, 0.96", "0.769771, -27.379, -5.83029, 0.96", "0.642917, -27.7991, -5.60943, 0.96", "0.406593, -28.7065, -5.16363, 0.66", "0.240197, -29.5649, -4.77901, 0.44", "0.200219, -29.87, -4.6561, 0.44", "0.179471, -30.1412, -4.57352, 0.44", "0.140931, -31.0468, -4.28593, 0.81", "0.138913, -31.1, -4.26852, 0.81", "0.0719897, -31.9651, -3.99335, 1.11", "0.021629, -32.4692, -3.82711, 1.55", "-0.00241271, -32.6717, -3.77679, 1.69", "-0.0514026, -33.0167, -3.70417, 1.77", "-0.20076, -33.8784, -3.573, 1.77", "-0.292716, -34.312, -3.50922, 1.77", "-0.42843, -34.7878, -3.44791, 1.77", "-0.711979, -35.4584, -3.34408, 1.03", "-0.959456, -35.8967, -3.26354, 1.03", "-1.11881, -36.0926, -3.18854, 0.96", "-1.37685, -36.3196, -3.04251, 0.66", "-1.71958, -36.582, -2.82181, 0.52", "-1.99674, -36.8107, -2.50873, 0.59", "-2.02178, -36.8389, -2.46738, 0.59", "-2.43772, -37.514, -1.5047, 0.96", "-2.52218, -37.6907, -1.22999, 0.96", "-2.57007, -37.8022, -1.05071, 0.96", "-2.8914, -38.6814, 0.639397, 0.59", "-2.9823, -38.9876, 1.23062, 1.18", "-3.00856, -39.0803, 1.41038, 1.18", "-3.19115, -39.8145, 2.85007, 1.55", "-3.23664, -39.9839, 3.21032, 1.55", "-3.57722, -41.0192, 5.59269, 1.03", "-3.74414, -41.348, 6.44139, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "0.932584, -11.1127, -0.789611, 2.95", "0.932584, -11.1127, -0.789611, 2.95", "1.03466, -11.7309, -0.789611, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.33741, 13.9895, 3.03039, 2.06", "-1.33741, 13.9895, 3.03039, 2.06", "-0.989452, 14.6463, 4.19777, 1.47", "-0.421213, 15.8653, 6.31929, 1.55", "-0.404445, 15.907, 6.39018, 1.55", "-0.199594, 16.4855, 7.3406, 1.77", "0.388417, 18.3737, 10.3402, 1.77", "0.644759, 19.305, 11.798, 1.84", "0.744883, 19.8266, 12.6776, 1.99", "0.800127, 20.3045, 13.4485, 2.14", "0.816167, 20.5707, 13.875, 2.28", "0.801382, 20.7805, 14.208, 2.73", "0.699852, 21.1799, 14.7085, 2.8", "0.15099, 23.0524, 17.0856, 2.8", "0.0777066, 23.2992, 17.4903, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.47741, -4.74751, -5.90961, 1.25", "-4.81338, -5.1618, -5.79207, 1.25", "-5.41705, -5.92512, -5.73541, 1.03", "-5.77928, -6.41077, -5.75045, 1.03", "-6.57338, -7.49207, -5.83057, 0.66", "-7.27842, -8.43182, -6.06326, 0.74", "-7.92304, -9.24158, -6.32601, 0.74", "-8.91207, -10.4129, -6.8129, 1.18", "-9.53048, -11.0876, -7.15098, 1.47", "-10.442, -11.9996, -7.67596, 1.77", "-12.3417, -13.6181, -8.85672, 0.52", "-13.0915, -14.1473, -9.30237, 0.52", "-13.4265, -14.3304, -9.52747, 0.74", "-13.9996, -14.5469, -9.86306, 1.18", "-14.7118, -14.7179, -10.4258, 1.47", "-15.4832, -14.8508, -11.1336, 1.92", "-15.8449, -14.9144, -11.4851, 1.69", "-17.9296, -15.4129, -13.8068, 0.88", "-19.3282, -15.8649, -15.4862, 0.74", "-21.765, -16.8981, -18.6233, 0.74", "-22.1117, -17.1006, -19.1314, 0.52", "-22.6106, -17.4947, -19.9358, 0.52", "-23.1448, -18.0219, -20.8559, 0.96", "-23.4845, -18.4384, -21.4146, 0.96", "-23.7842, -18.8637, -21.8985, 1.33", "-25.0505, -20.5761, -23.6173, 1.33", "-26.2219, -21.9026, -25.1808, 0.44", "-26.5246, -22.22, -25.5829, 0.88", "-27.2812, -22.9507, -26.5331, 0.29", "-27.8651, -23.4686, -27.2679, 1.33", "-29.5066, -24.7555, -29.1947, 1.84", "-30.3902, -25.3633, -29.9445, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.82741, 14.1125, -3.03961, 1.99", "-2.82741, 14.1125, -3.03961, 1.99", "-3.2076, 15.7333, -3.40093, 2.06", "-3.52688, 17.0944, -3.70436, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.03628, -11.6705, 0.232917, 0.549059", "2.22818, -26.6231, 0.232917, 0.549059", "3.42008, -41.5756, 0.232917, 0.549059" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-3.74414, -41.348, 6.44139, 0.52", "-3.06415, -41.9971, 6.54478, 0.52", "-2.70802, -42.5232, 6.74981, 0.74", "-2.63438, -42.8233, 6.88339, 0.74", "-2.63827, -43.3474, 7.06516, 0.74", "-2.64881, -43.4185, 7.08578, 0.74", "-2.73036, -43.7404, 7.16637, 0.74", "-3.20054, -44.8274, 7.3998, 0.66", "-3.63475, -45.6512, 7.57316, 0.66", "-4.04947, -46.3787, 7.72313, 1.25", "-4.22108, -46.6871, 7.77906, 1.18", "-4.43098, -47.085, 7.83795, 1.33", "-4.63469, -47.4737, 7.87728, 1.11", "-4.66934, -47.5397, 7.87869, 1.11", "-4.94047, -48.0389, 8.00178, 0.66", "-5.24774, -48.5995, 8.47104, 0.59", "-5.27123, -48.6464, 8.52398, 0.59", "-5.42947, -49.0134, 8.9786, 0.44", "-5.55866, -49.3348, 9.40721, 0.44", "-5.88518, -50.132, 10.5649, 0.96", "-6.346, -51.2208, 12.3927, 1.11", "-6.42221, -51.4045, 12.7455, 0.88", "-6.51359, -51.6771, 13.2919, 0.88", "-6.51693, -51.6951, 13.3311, 0.88" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "-3.74414, -41.348, 6.44139, 0.37", "-3.52805, -41.7935, 6.28619, 0.37", "-3.30449, -42.2986, 6.15665, 0.37", "-2.98408, -43.0328, 6.18402, 0.59", "-2.88017, -43.2745, 6.24171, 0.74", "-2.69532, -43.7153, 6.41501, 0.74", "-2.52379, -44.1136, 6.59107, 0.37", "-2.25285, -44.7493, 6.92559, 0.37", "-1.70495, -46.057, 7.71187, 0.29", "-1.44387, -46.6973, 8.1451, 0.81", "-1.11375, -47.488, 8.72229, 0.37", "-0.902667, -47.9931, 9.12849, 0.29", "-0.818465, -48.1949, 9.30686, 0.37" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "1.03466, -11.7309, -0.789611, 1.47", "3.48244, -13.9763, -2.88733, 1.47", "4.33556, -14.8963, -3.56987, 1.33", "4.54219, -15.212, -3.89553, 1.33", "4.82163, -15.798, -4.53392, 1.03", "4.99088, -16.2844, -5.05077, 0.81", "5.16052, -17.0079, -5.78363, 1.11", "5.07822, -17.8411, -6.63341, 1.18", "4.12066, -20.3353, -9.89253, 0.88", "3.87984, -20.7582, -10.4919, 1.33", "3.57726, -21.1864, -11.1407, 1.92", "3.22193, -21.6526, -11.8757, 1.99", "2.37326, -22.7658, -13.6992, 1.92", "1.21853, -24.4802, -16.5478, 1.11", "0.94216, -25.0664, -17.4629, 1.18", "0.672595, -25.9478, -18.9019, 1.18", "0.627427, -26.3776, -19.6195, 1.18", "0.744157, -27.1515, -20.8744, 1.18", "1.12386, -28.0047, -22.0688, 1.4", "1.62091, -28.6208, -22.8248, 2.06", "1.67199, -28.6675, -22.8896, 2.06", "2.06363, -28.9405, -23.2938, 1.84", "2.10488, -28.9683, -23.3386, 1.84" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "1.03466, -11.7309, -0.789611, 1.03", "0.00816573, -14.951, -1.93833, 1.03", "-0.51786, -16.7231, -2.54289, 0.96", "-0.967209, -18.2368, -3.05933, 1.33", "-1.46856, -19.9257, -3.63554, 1.55", "-1.79015, -21.009, -4.00514, 1.55", "-2.0619, -21.9245, -4.31746, 1.55", "-2.33118, -23.2418, -4.67186, 1.69" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "0.0777066, 23.2992, 17.4903, 1.03", "0.203394, 24.0537, 17.3486, 1.03", "0.271827, 24.4816, 17.3597, 1.03", "0.308445, 24.8179, 17.4045, 0.88", "0.324539, 25.22, 17.4761, 0.88", "0.318349, 25.6015, 17.5231, 0.88", "0.297454, 25.9202, 17.5537, 1.03", "0.1597, 26.771, 17.6742, 1.03", "0.0560056, 27.2073, 17.7266, 0.96", "-0.071892, 27.6273, 17.7642, 0.96", "-0.318108, 28.2836, 17.7934, 0.66", "-0.433474, 28.552, 17.7895, 0.59", "-0.521617, 28.7388, 17.7699, 0.52", "-0.60632, 28.912, 17.7368, 0.59", "-0.691763, 29.0935, 17.6996, 0.74", "-0.853903, 29.4605, 17.6294, 1.03", "-0.986643, 29.7713, 17.5807, 0.96", "-1.18062, 30.2593, 17.5012, 1.25", "-1.31753, 30.6102, 17.4004, 1.62", "-1.50724, 31.0785, 17.2273, 1.62", "-1.62854, 31.3413, 17.116, 1.47", "-1.78117, 31.6166, 16.9874, 1.25", "-2.00815, 31.9481, 16.8201, 1.11", "-2.69266, 32.7539, 16.3941, 0.81", "-3.04289, 33.0881, 16.2121, 0.74", "-3.42182, 33.3825, 16.0512, 0.74", "-3.80026, 33.6227, 15.9155, 0.74", "-4.06826, 33.7526, 15.8451, 0.74", "-4.28631, 33.8338, 15.8121, 0.74", "-4.55745, 33.9169, 15.8119, 0.74", "-4.86302, 33.9908, 15.87, 0.66", "-5.1055, 34.0599, 15.9714, 0.52", "-5.42208, 34.1792, 16.1793, 0.59", "-5.57819, 34.272, 16.3129, 0.59", "-5.61482, 34.3055, 16.3516, 0.59", "-6.28835, 35.1651, 17.2266, 0.74", "-6.39142, 35.3894, 17.5023, 1.03", "-6.42545, 35.5208, 17.6619, 1.77", "-6.47452, 35.8959, 18.0903, 1.77", "-6.49021, 36.2118, 18.4269, 1.77", "-6.49027, 36.2544, 18.4702, 1.77", "-6.35093, 37.6005, 19.7026, 1.77", "-6.31537, 37.8582, 19.982, 1.77", "-6.28807, 38.0209, 20.1917, 1.84", "-6.24867, 38.1887, 20.4714, 1.69" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "0.0777066, 23.2992, 17.4903, 0.88", "-1.25097, 24.164, 19.6274, 0.88", "-1.51911, 24.361, 20.0237, 0.88", "-1.96201, 24.7319, 20.6153, 0.81", "-2.19435, 24.9541, 20.9007, 0.52", "-2.38584, 25.1635, 21.126, 0.52", "-2.41588, 25.2032, 21.1616, 0.52", "-2.40226, 25.4533, 21.4157, 0.66", "-2.25915, 25.6248, 21.7294, 0.59", "-2.12816, 25.7304, 21.9649, 0.59", "-1.99628, 25.8291, 22.1846, 0.74", "-1.75708, 26.0018, 22.5638, 0.96", "-0.077393, 27.2052, 25.2219, 1.11", "0.258655, 27.4189, 25.743, 1.18", "0.34576, 27.4668, 25.8775, 1.18", "0.542364, 27.562, 26.1958, 1.11", "0.662476, 27.6076, 26.3912, 1.03", "0.849697, 27.6364, 26.6243, 0.81", "-0.361071, 27.6794, 26.4694, 1.03", "-0.653181, 27.6701, 26.4716, 1.03", "-1.6099, 27.612, 26.5634, 1.03", "-2.11911, 27.5756, 26.6466, 0.74", "-2.25102, 27.5708, 26.6995, 0.74", "-2.64707, 27.5911, 26.9414, 0.88", "-3.15186, 27.6989, 27.3655, 0.74", "-3.49421, 27.8754, 27.6859, 0.74", "-3.55777, 27.969, 27.7896, 0.74", "-3.8691, 28.9974, 28.6991, 0.74", "-3.93254, 29.4488, 29.0064, 1.25", "-3.92647, 29.8719, 29.2173, 1.25", "-3.87313, 30.4169, 29.4278, 1.25", "-3.66797, 31.6255, 29.9235, 1.03", "-3.54722, 32.1584, 30.1876, 0.96", "-3.37667, 32.8192, 30.4705, 0.81", "-3.18457, 33.4616, 30.7754, 0.74", "-3.11841, 33.6668, 30.871, 0.74", "-2.81053, 34.5841, 31.6872, 0.74", "-2.6597, 35.2744, 32.4862, 0.81", "-2.6182, 35.8093, 33.461, 0.74", "-2.62166, 35.9713, 33.8152, 0.74", "-2.63578, 36.1387, 34.2156, 0.74", "-2.8127, 37.3685, 37.2837, 0.81", "-2.87153, 37.6156, 37.9186, 1.03", "-3.13651, 38.4814, 40.4079, 1.25", "-3.14339, 38.5021, 40.4748, 1.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-30.3902, -25.3633, -29.9445, 0.74", "-32.1691, -24.848, -36.1138, 0.74", "-32.7209, -24.6728, -37.8214, 0.37", "-32.9576, -24.5953, -38.5047, 0.37", "-33.3029, -24.4815, -39.4253, 0.37", "-33.4408, -24.4487, -39.7695, 0.37", "-33.6636, -24.3963, -40.285, 0.74", "-33.8578, -24.3433, -40.5862, 1.03", "-34.6314, -24.1993, -41.8001, 1.33", "-34.8267, -24.1751, -42.1105, 1.25", "-36.0294, -24.1327, -45.1617, 0.22", "-36.2541, -24.1087, -45.8254, 0.22", "-36.3359, -24.0938, -46.0937, 0.59", "-36.4518, -24.0628, -46.4878, 1.03", "-36.5549, -24.0265, -46.8653, 1.03", "-37.9166, -23.5734, -52.9756, 0.22", "-38.0913, -23.5156, -53.897, 0.66", "-38.1247, -23.5059, -54.0873, 1.47", "-38.1924, -23.4878, -54.5986, 1.84", "-38.3903, -23.4454, -56.3509, 1.33", "-38.8213, -23.3298, -60.5463, 0.88", "-38.8299, -23.3283, -60.638, 0.88", "-38.8653, -23.3272, -61.0216, 0.96", "-39.6204, -23.2159, -68.2543, 1.47", "-39.6316, -23.2136, -68.3457, 1.47", "-39.7134, -23.1899, -68.9049, 1.47", "-40.6973, -22.7843, -74.833, 0.29", "-40.8265, -22.7287, -75.5669, 0.29", "-41.0713, -22.6254, -76.7547, 0.29", "-41.2497, -22.5341, -77.4111, 0.52", "-41.2497, -22.5341, -77.4111, 0.96", "-41.4575, -22.5311, -79.4337, 1.47", "-41.8207, -22.5683, -83.7196, 0.44", "-41.8698, -22.5807, -84.3498, 1.11", "-41.9184, -22.6027, -85.0206, 1.11", "-42.9106, -23.1357, -99.9719, 0.52", "-42.9165, -23.1387, -100.061, 0.52", "-42.9563, -23.1675, -100.691, 0.81", "-42.9847, -23.1919, -101.158, 0.81", "-42.9898, -23.1966, -101.246, 0.81", "-43.2859, -23.4113, -105.711, 0.81", "-43.3453, -23.4136, -106.265, 0.81", "-44.1115, -23.4409, -112.94, 0.37", "-44.1636, -23.4439, -113.334, 1.47", "-44.1636, -23.4439, -113.334, 1.47", "-45.0453, -23.4408, -117.874, 0.22", "-45.2594, -23.4342, -118.666, 0.22", "-45.3787, -23.4241, -119.031, 0.22", "-45.8805, -23.2835, -120.005, 0.22", "-46.0206, -23.2621, -120.414, 0.74", "-46.1678, -23.2608, -120.933, 1.11", "-46.1885, -23.261, -121.02, 1.11", "-46.5301, -23.2827, -122.724, 1.11", "-46.5846, -23.2664, -123.012, 1.11", "-47.7534, -22.5986, -128.879, 0.74", "-47.835, -22.5443, -129.249, 1.69", "-48.0396, -22.3694, -130.179, 1.69", "-48.1133, -22.282, -130.521, 1.69", "-48.9723, -20.8888, -134.433, 0.44", "-49.1968, -20.3807, -135.4, 0.44", "-49.2151, -20.3248, -135.467, 0.44", "-49.5362, -19.0714, -136.875, 0.81", "-49.631, -18.6082, -137.363, 1.11", "-49.6876, -18.2614, -137.673, 1.11", "-49.8321, -16.4458, -138.812, 0.29", "-49.8368, -16.3656, -138.861, 0.29", "-49.8947, -15.7621, -139.292, 0.29", "-49.9481, -15.427, -139.543, 0.88", "-50.0188, -14.9823, -139.925, 1.11", "-50.0751, -14.6543, -140.374, 1.11", "-50.1596, -14.2591, -141.038, 1.11", "-50.5929, -12.6545, -143.887, 0.22", "-50.7718, -12.2291, -144.7, 1.33", "-50.8246, -12.1317, -144.886, 1.33", "-52.1943, -10.0383, -148.838, 0.29", "-52.3419, -9.84563, -149.265, 0.66", "-52.4839, -9.66887, -149.663, 0.88", "-52.9998, -9.15544, -150.879, 0.52", "-53.456, -8.71828, -151.905, 0.52", "-53.6074, -8.56898, -152.229, 0.81", "-55.5516, -6.4531, -156.106, 0.52", "-55.7643, -6.14362, -156.855, 0.52", "-56.0298, -5.64078, -158.236, 0.29", "-56.1162, -5.46206, -158.77, 0.81", "-56.1296, -5.43673, -158.855, 0.81", "-56.2378, -5.26712, -159.444, 0.81", "-57.5749, -3.58299, -165.251, 0.29", "-57.6466, -3.4961, -165.582, 0.29", "-57.902, -3.18444, -166.83, 0.29", "-57.9217, -3.16349, -166.915, 0.29", "-58.0326, -3.06163, -167.295, 0.74", "-58.1291, -2.98657, -167.535, 0.74", "-59.8533, -1.65415, -169.887, 0.29", "-60.0428, -1.49243, -170.16, 0.29", "-60.0927, -1.44523, -170.239, 0.29", "-60.4261, -1.06932, -170.85, 0.29", "-60.611, -0.836808, -171.217, 0.52", "-60.6468, -0.791328, -171.286, 0.52", "-60.8724, -0.444236, -171.72, 0.52", "-61.0602, -0.100973, -172.141, 0.52", "-61.8976, 1.32512, -174.229, 0.29", "-61.9792, 1.43612, -174.387, 0.59", "-62.0737, 1.54025, -174.531, 0.59", "-62.4406, 1.8926, -174.986, 1.03", "-62.85, 2.23519, -175.386, 1.03", "-63.9239, 2.98095, -176.638, 0.66", "-64.9965, 3.51924, -177.92, 0.22", "-65.2561, 3.6712, -178.31, 0.66", "-65.4198, 3.78292, -178.601, 0.96", "-65.7304, 4.01267, -179.224, 0.96", "-67.2594, 5.35978, -182.754, 0.44", "-67.2942, 5.3959, -182.845, 0.44", "-67.7475, 5.90357, -184.269, 0.29", "-67.8418, 5.98685, -184.62, 0.29", "-68.0432, 6.09373, -185.198, 0.29", "-68.3726, 6.2069, -185.907, 0.96", "-68.6524, 6.29525, -186.327, 1.4", "-68.8145, 6.33781, -186.552, 1.4", "-71.8825, 6.96787, -190.493, 0.44", "-72.9924, 7.18645, -191.891, 0.29", "-73.5432, 7.29313, -192.641, 0.29", "-74.2286, 7.42737, -193.615, 0.29", "-74.28, 7.44016, -193.687, 0.29", "-74.6096, 7.53387, -194.11, 0.29", "-75.2659, 7.76974, -194.766, 0.88", "-76.3782, 8.18412, -196.398, 0.74", "-76.4237, 8.18952, -196.474, 0.74", "-76.7284, 8.166, -196.983, 0.74", "-76.7935, 8.15613, -197.082, 0.74", "-77.3282, 8.02884, -197.952, 0.52", "-77.3836, 8.01445, -198.039, 0.52", "-78.4028, 7.71608, -199.475, 0.22", "-78.6667, 7.63254, -199.849, 0.44", "-78.8796, 7.5648, -200.163, 0.59", "-80.3814, 7.10298, -202.295, 0.22", "-80.4969, 7.0747, -202.445, 0.22", "-80.8145, 7.01298, -202.842, 0.66", "-80.9292, 6.99895, -202.979, 0.66", "-82.4303, 6.82698, -204.571, 0.22", "-82.842, 6.79029, -204.915, 0.22", "-83.6028, 6.76524, -205.325, 0.66", "-83.9047, 6.76902, -205.467, 1.25", "-84.1491, 6.78656, -205.581, 1.25", "-84.7784, 6.85584, -205.844, 1.55", "-85.6087, 6.98895, -206.093, 1.33", "-86.1015, 7.07088, -206.295, 1.33", "-86.6116, 7.14694, -206.537, 1.33", "-87.5554, 7.28721, -206.994, 0.81", "-87.8051, 7.32127, -207.118, 0.81", "-89.0361, 7.50144, -207.795, 0.44", "-90.4228, 7.74667, -208.593, 0.44", "-90.4984, 7.75887, -208.639, 0.44", "-91.3742, 7.89616, -209.187, 0.44", "-91.4522, 7.90662, -209.227, 0.44", "-92.9715, 8.07415, -209.911, 0.44", "-93.4789, 8.0999, -210.094, 0.44", "-94.2783, 8.07242, -210.287, 0.44", "-94.4855, 8.05383, -210.329, 0.44", "-96.1672, 7.86644, -210.589, 0.29", "-96.9042, 7.77034, -210.668, 0.96", "-98.5682, 7.54062, -211.309, 0.22", "-99.2731, 7.48264, -211.66, 1.25", "-99.4174, 7.48153, -211.743, 1.25", "-100.135, 7.51574, -212.229, 1.25", "-100.294, 7.53396, -212.343, 1.25", "-104.24, 8.26261, -215.059, 0.44", "-105.767, 8.67546, -215.999, 0.29", "-106.293, 8.83879, -216.237, 0.29", "-106.369, 8.86147, -216.279, 0.29", "-108.56, 9.27721, -217.583, 0.96", "-108.638, 9.28931, -217.626, 0.96", "-109.065, 9.34103, -217.83, 1.33", "-109.698, 9.41133, -218.215, 1.33", "-112.553, 9.83272, -220.146, 0.37", "-114.029, 10.102, -221.211, 0.22", "-114.841, 10.2649, -221.847, 0.22", "-115.138, 10.3348, -222.074, 0.74", "-115.709, 10.4964, -222.483, 1.18", "-117.891, 11.2296, -223.878, 0.29", "-118.342, 11.4248, -224.077, 0.29", "-118.415, 11.4651, -224.109, 0.29", "-118.626, 11.585, -224.194, 0.96", "-119.4, 12.0618, -224.474, 0.96", "-119.483, 12.1163, -224.498, 0.96", "-120.839, 13.0783, -224.755, 0.37", "-121.22, 13.3463, -224.829, 0.66", "-121.674, 13.6751, -224.945, 0.81", "-122.52, 14.2921, -225.28, 0.66", "-123.093, 14.7407, -225.605, 0.37", "-123.357, 14.9207, -225.725, 0.74", "-124.142, 15.3941, -226.017, 1.11", "-124.98, 15.874, -226.26, 1.11", "-126.199, 16.5655, -226.525, 1.11", "-126.856, 16.9164, -226.708, 0.81", "-129.488, 18.3433, -227.539, 0.29", "-130.044, 18.6401, -227.716, 0.44", "-130.562, 18.9252, -227.873, 0.74", "-131.293, 19.3274, -228.065, 0.74", "-132.958, 20.3236, -228.525, 0.29", "-133.594, 20.7551, -228.769, 0.29", "-133.744, 20.8783, -228.849, 0.29", "-134.187, 21.2263, -229.016, 0.66", "-134.741, 21.6669, -229.145, 0.96", "-135.31, 22.1389, -229.201, 0.74", "-136.153, 22.8657, -229.185, 0.29", "-137.372, 23.9588, -229.168, 0.29", "-137.734, 24.3054, -229.169, 0.66", "-138.339, 24.8974, -229.201, 0.96", "-138.804, 25.3735, -229.254, 0.29", "-139.222, 25.8029, -229.341, 0.29", "-139.412, 26.0016, -229.41, 0.29", "-139.854, 26.438, -229.596, 0.29", "-140.326, 26.7916, -229.789, 0.29", "-140.724, 26.9533, -229.833, 0.44", "-140.797, 26.9723, -229.822, 0.44", "-141.14, 27.0629, -229.725, 0.44", "-142.318, 27.3737, -229.316, 0.37", "-142.387, 27.3985, -229.296, 0.37", "-143.927, 28.0979, -228.911, 0.88", "-144.401, 28.3337, -228.81, 1.33", "-145.032, 28.6888, -228.724, 1.25", "-145.111, 28.7358, -228.72, 1.25", "-147.074, 29.8978, -228.801, 0.44", "-147.536, 30.1288, -228.865, 0.81", "-147.79, 30.2234, -228.939, 0.81", "-148.552, 30.4229, -229.186, 0.22", "-149.293, 30.3719, -229.6, 0.22", "-149.727, 30.1952, -229.948, 0.22", "-150.073, 29.9379, -230.299, 0.22", "-150.731, 29.3636, -231.077, 0.81", "-150.957, 29.1595, -231.352, 1.18", "-152.852, 27.2268, -233.735, 0.37", "-153.069, 26.9913, -234.013, 0.44", "-153.276, 26.7629, -234.268, 0.44", "-154.577, 25.3037, -235.708, 0.37", "-155.007, 24.8249, -236.119, 0.37", "-155.501, 24.3976, -236.494, 0.81", "-156.061, 24.0127, -236.816, 1.03", "-156.575, 23.65, -237.099, 1.18", "-157.244, 23.1523, -237.521, 1.18", "-157.308, 23.1044, -237.562, 1.18", "-160.202, 20.988, -239.605, 0.29", "-160.652, 20.6676, -239.94, 1.18", "-161.207, 20.2723, -240.375, 1.47", "-163.051, 19.0057, -241.691, 0.52", "-163.617, 18.6355, -242.046, 0.37", "-163.923, 18.4364, -242.197, 0.81", "-164.249, 18.2133, -242.324, 0.96", "-164.392, 18.1176, -242.378, 0.96", "-166.058, 16.9818, -242.942, 0.37", "-166.359, 16.7525, -243.017, 0.74", "-166.71, 16.4509, -243.144, 0.74", "-168.212, 14.8725, -243.822, 0.44", "-169.306, 13.4775, -244.391, 0.29", "-169.54, 13.1372, -244.526, 0.66", "-169.87, 12.565, -244.75, 1.03", "-170.317, 11.7445, -245.039, 0.29", "-170.919, 10.5176, -245.371, 0.29", "-171.441, 9.38118, -245.547, 0.29", "-171.722, 8.66367, -245.671, 0.29", "-171.888, 8.22625, -245.747, 0.66", "-172.295, 7.19351, -245.921, 0.29", "-172.65, 6.32214, -246.024, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-30.3902, -25.3633, -29.9445, 1.84", "-31.1866, -25.9094, -29.9507, 1.84", "-32.3024, -26.7658, -29.9532, 0.29", "-32.9515, -27.339, -29.9495, 0.29", "-33.5592, -27.8801, -29.9457, 0.81", "-34.1024, -28.4031, -29.937, 0.29", "-34.6626, -28.9528, -29.9255, 0.22", "-34.8626, -29.1519, -29.9204, 0.81", "-35.2903, -29.6706, -29.9009, 0.81", "-35.6439, -30.1197, -29.8822, 0.81", "-36.1266, -30.7291, -29.8565, 0.81", "-36.6195, -31.3706, -29.8287, 0.52", "-37.0526, -31.9571, -29.8036, 0.52", "-37.4112, -32.4866, -29.7935, 1.11", "-37.7598, -33.0629, -29.7927, 1.33", "-37.9921, -33.5299, -29.7966, 1.33", "-38.0948, -33.7606, -29.8012, 1.11", "-38.4209, -34.6671, -29.8186, 1.03", "-38.5915, -35.1592, -29.8293, 0.29", "-38.7419, -35.5501, -29.8391, 0.29", "-38.9705, -36.2005, -29.8478, 0.22", "-39.2307, -36.8363, -29.8533, 0.22", "-39.4646, -37.3356, -29.8534, 0.88", "-39.6628, -37.711, -29.8487, 1.11", "-39.8856, -38.1089, -29.8383, 1.11", "-41.0638, -39.8978, -29.8012, 0.22", "-41.6594, -40.6545, -29.8486, 0.96", "-42.2741, -41.3909, -29.9385, 1.33", "-43.2393, -42.4924, -30.1265, 0.37", "-44.3118, -43.6357, -30.3717, 0.59", "-45.3431, -44.5724, -30.5732, 0.37", "-46.7765, -45.6306, -30.8166, 1.25", "-47.4616, -46.1307, -30.9103, 1.92", "-48.0898, -46.5417, -30.9757, 1.25", "-48.7673, -46.9378, -31.0152, 1.03", "-50.1441, -47.7193, -30.799, 0.29", "-50.538, -47.9728, -30.6388, 0.52", "-51.2291, -48.3887, -30.1977, 0.29", "-51.3012, -48.4267, -30.1475, 0.29", "-51.588, -48.5847, -29.9761, 0.29", "-53.3466, -49.6594, -29.1065, 0.88", "-53.4085, -49.7001, -29.0844, 0.88", "-53.8241, -49.968, -28.9573, 1.4", "-54.3111, -50.265, -28.8361, 1.11", "-56.2868, -51.4861, -28.5104, 0.44", "-56.5847, -51.6753, -28.5043, 1.18", "-56.882, -51.8681, -28.5628, 1.18", "-57.2993, -52.1399, -28.648, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.52688, 17.0944, -3.70436, 1.03", "-4.11003, 17.5087, -3.8986, 1.03", "-5.38483, 18.374, -4.28709, 0.74", "-5.74597, 18.5989, -4.38356, 0.81", "-6.6837, 19.1347, -4.50848, 0.96", "-7.53146, 19.564, -4.66645, 0.96", "-8.39447, 19.9784, -4.85083, 1.47", "-8.84705, 20.173, -4.98765, 1.47", "-9.45528, 20.4082, -5.18624, 1.47", "-10.7927, 20.8912, -5.66676, 0.88", "-12.78, 21.5492, -6.44612, 0.81", "-13.2, 21.6912, -6.60659, 0.59", "-13.9871, 21.9687, -6.96278, 0.96", "-14.609, 22.2095, -7.28444, 0.96", "-14.9681, 22.3681, -7.54502, 0.81", "-15.3211, 22.5545, -7.84327, 0.81", "-15.67, 22.764, -8.09553, 0.96", "-15.8956, 22.9058, -8.27048, 0.96", "-16.444, 23.2644, -8.72179, 1.25", "-17.5467, 23.9843, -9.79102, 1.84", "-18.0456, 24.3374, -10.353, 1.84", "-18.1645, 24.4292, -10.5072, 1.84", "-18.3444, 24.5765, -10.7652, 1.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.52688, 17.0944, -3.70436, 2.06", "-3.63388, 18.2005, -3.63075, 2.06", "-3.8121, 20.0429, -3.50815, 1.55", "-4.01139, 22.1031, -3.37105, 1.4", "-4.157, 23.6084, -3.27088, 1.84", "-4.32442, 25.3391, -3.15571, 1.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.42008, -41.5756, 0.232917, 0.22", "4.61198, -56.5282, 0.232917, 0.22", "5.80388, -71.4808, 0.232917, 0.22" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "-6.51693, -51.6951, 13.3311, 0.88", "-6.93011, -51.508, 14.2687, 0.88", "-7.21904, -51.3772, 14.9243, 0.96", "-7.43806, -51.2781, 15.4213, 0.96", "-7.58667, -51.2108, 15.7585, 0.96" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-6.51693, -51.6951, 13.3311, 0.88", "-6.75271, -52.2061, 13.4951, 0.88", "-6.93991, -52.5427, 13.6279, 0.59", "-7.18372, -52.9227, 13.7847, 0.59", "-7.78175, -53.8798, 14.1564, 0.37", "-8.11749, -54.4272, 14.3617, 0.37", "-8.50407, -55.1352, 14.6153, 0.37", "-8.91674, -56.0326, 15.0471, 0.52", "-9.12864, -56.6446, 15.402, 0.52", "-9.23129, -57.216, 15.8615, 0.66", "-9.23472, -57.2633, 15.905, 0.66", "-9.15751, -58.0649, 16.7778, 0.59", "-8.75266, -59.3375, 18.392, 0.88", "-8.61287, -59.5941, 18.7697, 1.03", "-8.09492, -60.3557, 20.0952, 1.03" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "-0.818465, -48.1949, 9.30686, 0.81", "0.0318451, -48.9762, 9.38415, 0.81", "1.03996, -49.8569, 9.43588, 0.81", "1.61311, -50.3317, 9.45437, 0.74", "2.5297, -51.083, 9.47624, 0.59", "2.95878, -51.4346, 9.48647, 1.03", "3.77191, -52.101, 9.50587, 1.11", "4.40507, -52.592, 9.45638, 1.11", "4.97312, -53.0275, 9.40164, 0.96", "5.10791, -53.1279, 9.38821, 0.96" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "-0.818465, -48.1949, 9.30686, 0.29", "-1.45621, -47.9503, 9.55248, 0.29", "-1.70533, -47.8551, 9.62958, 0.29", "-2.37467, -47.5995, 9.83673, 0.22", "-2.88034, -47.4064, 9.99323, 0.22", "-3.24625, -47.2667, 10.1064, 0.22", "-3.77343, -47.0654, 10.2696, 0.74", "-3.88299, -47.0152, 10.2869, 0.74", "-11.224, -42.6498, 11.4872, 0.74", "-17.6286, -37.4451, 14.0636, 0.74", "-23.4743, -31.6272, 16.7169, 0.74", "-29.5258, -26.9664, 20.7381, 0.74" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "2.10488, -28.9683, -23.3386, 0.59", "2.3224, -29.5851, -24.5723, 0.59", "2.33173, -29.6094, -24.616, 0.59", "2.44004, -29.8975, -25.1546, 0.59", "2.86359, -31.1255, -27.3772, 0.96", "2.9962, -31.4571, -27.9705, 0.59", "3.10924, -31.6869, -28.3703, 0.44", "3.26023, -31.9351, -28.8014, 1.03", "3.8911, -32.7572, -30.2493, 1.25", "4.03816, -32.9124, -30.5092, 1.25", "4.69932, -33.5592, -31.3749, 0.52", "5.07501, -33.9288, -31.8797, 0.52", "5.09959, -33.9522, -31.9107, 0.52", "5.66845, -34.4583, -32.4988, 0.52", "6.11333, -34.8608, -32.8731, 0.52", "6.53969, -35.2706, -33.2231, 0.88", "6.97835, -35.744, -33.5815, 1.55", "7.36885, -36.2071, -33.9153, 2.14", "7.68684, -36.6049, -34.1737, 1.69", "8.1438, -37.2127, -34.5233, 1.18", "8.45301, -37.6167, -34.7583, 1.03", "8.50912, -37.6879, -34.7931, 1.03", "8.67723, -37.8983, -34.8669, 0.74", "8.81957, -38.0682, -34.9249, 0.74", "9.13673, -38.4365, -35.1062, 0.74" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.10488, -28.9683, -23.3386, 0.29", "3.94954, -30.8357, -23.6051, 0.29", "4.27876, -31.2676, -23.4925, 0.29", "4.59337, -31.7609, -23.3028, 0.29", "4.91127, -32.3383, -23.0022, 0.29", "5.27663, -33.0714, -22.5683, 0.74", "5.5706, -33.725, -22.1154, 0.88", "5.87787, -34.6299, -21.3015, 0.66", "6.05212, -35.1212, -20.8422, 0.66", "6.32086, -35.8129, -20.0936, 0.66", "6.47036, -36.1212, -19.7235, 0.66", "6.8717, -36.812, -18.8359, 0.66", "7.20386, -37.2896, -18.2079, 0.52", "7.70594, -37.9463, -17.4265, 0.29", "8.37247, -38.7848, -16.5021, 0.29", "8.76204, -39.2744, -16.0611, 0.37", "8.80301, -39.3261, -16.0216, 0.37", "9.33384, -40.0132, -15.6036, 0.37", "9.6856, -40.5282, -15.3236, 0.44", "10.4405, -41.8621, -14.6843, 0.44", "10.8637, -42.6526, -14.3595, 1.03", "11.018, -42.9518, -14.2219, 1.4", "11.2988, -43.5031, -13.9541, 1.62", "11.8047, -44.5871, -13.2962, 0.44", "12.0543, -45.195, -12.8811, 0.59", "12.2137, -45.7667, -12.4698, 0.22", "12.3886, -46.6793, -11.7867, 0.07", "12.4368, -47.0376, -11.5098, 0.07", "12.5585, -48.4703, -10.3889, 0.96", "12.5448, -48.6725, -10.1881, 1.25", "12.3701, -49.6332, -9.14017, 0.22", "12.2561, -50.0903, -8.62214, 0.22", "12.1391, -50.5218, -8.15524, 0.74", "12.0768, -50.7869, -7.89266, 0.88", "11.465, -53.9281, -5.10047, 0.29", "11.3879, -54.4692, -4.6435, 0.29", "11.2416, -56.23, -3.23037, 1.0", "11.228, -56.9752, -2.65478, 1.5", "11.3121, -58.4948, -1.58587, 0.29", "11.4262, -59.1164, -1.16034, 0.29", "11.7082, -59.8586, -0.732137, 0.29", "11.9177, -60.2904, -0.455194, 0.29", "12.5229, -61.3066, 0.23624, 0.52", "12.6134, -61.4433, 0.344042, 1.03", "13.5722, -62.811, 1.45414, 1.18", "13.8875, -63.289, 1.81507, 1.03", "14.2331, -63.8919, 2.18698, 0.96", "14.4744, -64.3689, 2.40065, 0.96", "14.58, -64.6071, 2.5005, 0.88", "15.0985, -65.7736, 2.99235, 0.52", "15.1332, -65.8521, 3.02336, 0.52", "15.484, -66.597, 3.37106, 1.33", "15.738, -67.1083, 3.68911, 1.33", "16.7123, -68.998, 5.04109, 0.29", "17.2556, -70.0219, 5.85623, 0.29", "17.2976, -70.0949, 5.92012, 0.29", "17.4199, -70.2871, 6.09381, 0.59", "18.3322, -71.5501, 7.27513, 0.22", "18.7293, -72.0251, 7.70777, 0.22", "18.8502, -72.15, 7.79779, 0.22", "19.4055, -72.6945, 8.20374, 0.22", "19.4674, -72.7534, 8.24092, 0.22", "19.8112, -73.0548, 8.38487, 0.22", "19.9739, -73.1558, 8.422, 0.22", "20.4218, -73.3858, 8.5505, 0.88", "20.5107, -73.4289, 8.57851, 0.88", "20.9718, -73.6367, 8.7355, 1.18", "21.1415, -73.7106, 8.79566, 1.18", "22.7171, -74.347, 9.38579, 0.22", "23.1952, -74.5352, 9.57359, 0.22", "23.4941, -74.6428, 9.69794, 0.44", "25.7831, -84.3914, 17.7701, 0.44", "29.4704, -94.4883, 24.8461, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-2.33118, -23.2418, -4.67186, 0.22", "-2.37248, -23.2195, -5.52592, 0.22", "-2.41344, -23.1529, -6.38777, 0.22", "-2.47461, -23.1568, -6.91975, 0.22", "-2.52088, -23.1975, -7.25338, 0.22", "-2.82841, -23.5478, -9.04122, 0.66", "-2.93145, -23.6238, -9.39652, 0.66", "-3.03195, -23.6733, -9.64107, 0.66", "-3.91326, -23.9985, -11.2166, 0.37", "-4.31453, -24.1774, -11.8633, 0.37", "-4.49431, -24.268, -12.1395, 0.37", "-5.72112, -25.0091, -14.0045, 0.81", "-5.8386, -25.0886, -14.1857, 1.03", "-6.72017, -25.7001, -15.5413, 0.52", "-7.46376, -26.3377, -16.9075, 0.29", "-7.46376, -26.3377, -16.9075, 0.66", "-7.53363, -26.57, -17.3315, 1.11", "-7.47294, -26.9198, -17.8274, 1.11", "-7.43444, -27.0155, -17.9521, 1.11", "-6.65229, -28.3773, -19.6586, 0.29", "-6.25214, -29.0109, -20.4467, 0.29", "-6.07611, -29.3561, -20.8697, 0.96", "-5.93038, -29.7322, -21.3141, 1.25", "-5.80093, -30.2035, -21.8442, 1.55", "-5.71995, -31.229, -22.9175, 0.81", "-5.8075, -31.6206, -23.2575, 0.74", "-6.27678, -32.5497, -23.9512, 0.22", "-6.54397, -32.9433, -24.2239, 0.22", "-6.67739, -33.1171, -24.3279, 0.22", "-7.40537, -34.0586, -24.7857, 0.66", "-7.86523, -34.7076, -25.1076, 0.66", "-8.3242, -35.4697, -25.5385, 0.66", "-8.61395, -36.0755, -25.9474, 1.4", "-8.85972, -36.6634, -26.3712, 1.69", "-9.00175, -37.0491, -26.6434, 1.69", "-9.46887, -38.581, -27.7155, 0.66", "-9.59948, -39.0844, -28.0939, 0.66", "-9.79448, -39.9063, -28.727, 0.59", "-9.88086, -40.2688, -28.998, 0.52", "-9.98397, -40.7022, -29.3187, 0.52", "-10.1158, -41.3114, -29.7305, 0.66", "-10.1705, -41.6648, -29.9232, 0.66", "-10.2258, -42.0254, -30.1035, 0.66", "-10.3094, -42.7601, -30.4084, 0.52", "-10.3439, -43.0486, -30.5182, 0.29", "-10.4116, -43.4851, -30.6537, 0.29", "-10.7021, -44.2957, -30.901, 0.96", "-10.9823, -44.8684, -31.0667, 1.4", "-11.2002, -45.25, -31.1594, 1.92", "-11.4636, -45.6554, -31.2586, 2.36", "-11.7155, -46.0075, -31.3506, 2.36", "-13.1536, -47.8589, -31.8539, 0.29", "-13.545, -48.3352, -31.9863, 0.29", "-14.0265, -48.9073, -32.1552, 0.29", "-14.6677, -49.6599, -32.4111, 0.29", "-15.0115, -50.0563, -32.5531, 0.59", "-15.107, -50.1656, -32.5901, 1.11", "-15.1484, -50.2116, -32.6002, 1.11", "-15.5825, -50.6249, -32.7194, 0.88", "-16.7102, -51.6644, -33.0181, 0.37", "-16.9755, -51.906, -33.1038, 0.37", "-17.2152, -52.1044, -33.1857, 0.59", "-17.7223, -52.5224, -33.392, 0.59", "-18.4766, -53.1576, -33.7305, 0.59", "-18.9691, -53.5888, -34.0208, 0.29", "-19.8068, -54.4409, -34.5901, 0.66", "-20.2421, -54.9836, -34.9513, 1.47", "-20.7703, -55.7948, -35.4615, 2.28", "-20.9326, -56.1104, -35.6427, 2.06", "-21.4773, -57.5367, -36.3207, 0.59", "-21.7353, -58.4064, -36.663, 0.52", "-21.8669, -59.1063, -36.8558, 0.52", "-21.9526, -59.744, -36.9913, 0.52", "-22.0097, -60.3375, -37.0523, 0.59", "-22.059, -61.1032, -37.0669, 0.81", "-22.0677, -61.7344, -37.0106, 0.37", "-22.0787, -62.4515, -36.9349, 0.22", "-22.0975, -62.9002, -36.8991, 0.22", "-22.1151, -63.3073, -36.8801, 0.81", "-22.1452, -64.0278, -36.8654, 1.03", "-22.2144, -65.2018, -36.8955, 0.96", "-22.2313, -65.4274, -36.9109, 0.96", "-22.345, -66.5573, -37.0539, 0.29", "-22.4292, -67.3528, -37.189, 0.29", "-22.4669, -67.6459, -37.2458, 0.29", "-22.5804, -68.4316, -37.413, 1.4", "-22.6944, -69.2331, -37.5881, 1.69", "-22.8001, -70.0541, -37.7483, 1.25", "-22.8778, -70.6697, -37.8378, 0.96", "-22.9535, -71.2493, -37.9206, 0.59", "-23.0083, -71.698, -37.9789, 0.22", "-23.0674, -72.3859, -38.0809, 0.22", "-23.093, -72.9757, -38.1787, 0.22", "-23.1101, -73.7491, -38.3033, 0.22", "-23.1303, -74.5579, -38.4683, 0.74", "-23.1343, -74.7933, -38.5223, 1.03", "-23.1485, -76.0142, -38.8121, 0.22", "-23.2028, -76.8109, -39.0957, 0.22", "-23.2477, -77.494, -39.3662, 0.22", "-23.2965, -78.2253, -39.6853, 0.88", "-23.3469, -78.811, -39.9498, 1.33", "-23.3781, -79.029, -40.0548, 1.4", "-23.8745, -80.8194, -41.0721, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-2.33118, -23.2418, -4.67186, 0.59", "-3.49462, -23.8483, -4.08508, 0.59", "-4.53375, -24.4231, -3.53699, 0.52", "-5.1217, -24.7753, -3.24389, 0.59", "-6.05826, -25.4198, -2.79104, 0.74", "-6.8167, -26.0144, -2.42108, 0.37", "-7.3159, -26.4733, -2.14551, 0.37", "-7.62166, -26.882, -1.8754, 0.74", "-7.90204, -27.5422, -1.468, 1.25", "-8.07102, -28.2795, -1.01702, 1.18", "-8.11288, -28.7842, -0.712265, 0.88", "-8.08236, -29.9047, -0.00714642, 0.37", "-7.94741, -31.4623, 1.02468, 0.96", "-7.84928, -32.1884, 1.52752, 0.96", "-7.75312, -32.7367, 1.93418, 0.81", "-7.68627, -33.1141, 2.21986, 0.81", "-7.60012, -33.7677, 2.68642, 0.44", "-7.58751, -34.0662, 2.86774, 0.66", "-7.63057, -34.3398, 3.00645, 0.59", "-7.645, -34.3996, 3.04937, 0.59", "-7.78034, -34.7179, 3.30077, 0.59", "-8.06905, -35.2417, 3.75039, 0.22", "-8.20612, -35.4518, 3.93535, 0.22", "-8.38043, -35.7088, 4.17905, 0.22", "-8.93987, -36.4707, 4.97164, 1.11", "-9.35232, -37.0252, 5.58925, 1.47", "-9.38201, -37.0661, 5.64086, 1.47" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-6.24867, 38.1887, 20.4714, 1.03", "-8.56277, 39.6916, 6.37786, 1.03", "-8.69505, 39.8201, 5.43537, 0.66", "-8.78421, 39.943, 4.67054, 0.66", "-8.82608, 40.0278, 4.20721, 0.74", "-8.86985, 40.1695, 3.51961, 0.74", "-8.88884, 40.2869, 3.00596, 0.96", "-8.15683, 41.1057, 2.65635, 0.96", "-7.89504, 41.4039, 2.54974, 0.66", "-7.55874, 41.8149, 2.44128, 0.88", "-7.28056, 42.1944, 2.37599, 1.18", "-7.099, 42.4858, 2.35415, 1.33", "-6.56835, 43.4977, 2.35997, 1.33", "-6.28403, 44.2494, 2.42378, 1.33", "-6.14879, 44.7724, 2.46923, 1.03", "-6.09971, 45.0949, 2.493, 0.88", "-6.05743, 45.6205, 2.51982, 0.88", "-6.05579, 45.7413, 2.52093, 0.88", "-6.09821, 46.4868, 2.47888, 0.81", "-6.1355, 46.8795, 2.46129, 0.81", "-6.22219, 47.5538, 2.43802, 0.74", "-6.23793, 47.6552, 2.43535, 0.74", "-6.34351, 48.1875, 2.42832, 0.66", "-6.43462, 48.6092, 2.42504, 0.66", "-6.55233, 49.1339, 2.42229, 0.66", "-6.62014, 49.5444, 2.44972, 0.66", "-6.67941, 50.4007, 2.53568, 0.66", "-6.66784, 50.6408, 2.55919, 0.66", "-6.53212, 51.4536, 2.6233, 0.66", "-6.43632, 51.8264, 2.64677, 0.74", "-5.96454, 53.156, 2.73014, 0.74", "-5.66527, 53.856, 2.76815, 0.88", "-5.24375, 54.7543, 2.80882, 0.66", "-4.85089, 55.578, 2.89344, 0.81", "-4.80291, 55.6679, 2.90628, 0.81", "-4.34284, 56.4746, 3.03402, 1.03", "-4.06873, 56.9526, 3.06695, 1.25", "-3.81362, 57.4005, 3.08412, 1.33", "-3.13984, 58.5571, 3.08445, 1.4", "-2.65632, 59.4178, 3.02878, 1.4", "-2.38843, 59.8801, 3.0348, 1.4", "-1.64934, 61.1181, 3.09192, 0.52", "-1.3674, 61.5699, 3.12988, 0.52", "-1.31173, 61.6544, 3.13752, 0.52", "-0.952774, 62.2254, 3.16522, 0.52", "-0.0179329, 63.8968, 3.50388, 0.96", "0.195948, 64.2481, 3.6542, 1.33", "0.195948, 64.2481, 3.6542, 1.69", "0.348999, 64.4587, 3.84427, 1.69" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-6.24867, 38.1887, 20.4714, 0.88", "-6.91559, 38.7728, 22.1804, 0.88", "-6.97485, 38.8291, 22.3264, 1.03", "-7.72698, 39.5499, 24.0395, 0.66", "-7.89699, 39.7183, 24.3992, 0.44", "-8.01235, 39.8313, 24.6198, 0.66", "-8.12407, 39.934, 24.8017, 0.81", "-8.23157, 40.0162, 24.8464, 0.88", "-8.47377, 40.169, 24.812, 0.88", "-8.69586, 40.2982, 24.7157, 0.88", "-9.35863, 40.6549, 24.4388, 0.44", "-9.81674, 40.8932, 24.2557, 0.37", "-10.45, 41.2406, 24.4115, 0.37", "-10.5982, 41.3408, 24.576, 0.52", "-10.8502, 41.5662, 25.0041, 0.59", "-10.9951, 41.7248, 25.3255, 0.74", "-11.0397, 41.7916, 25.459, 0.88", "-11.8325, 43.5704, 28.8036, 0.66", "-11.8939, 43.7659, 29.1505, 0.66", "-11.9631, 44.0528, 29.6373, 0.81", "-11.9728, 44.1057, 29.7206, 0.81", "-12.0341, 44.4636, 30.1739, 0.52", "-12.1225, 44.9114, 30.5088, 0.44", "-12.2508, 45.45, 30.5714, 0.44", "-12.5957, 46.6275, 30.6547, 0.88", "-12.7405, 47.0417, 30.6787, 1.11", "-13.2437, 48.3596, 30.732, 0.44", "-13.4719, 48.8941, 30.7376, 0.44", "-13.6379, 49.2784, 30.7246, 0.44", "-13.7703, 49.6306, 30.691, 0.44", "-13.9421, 50.173, 30.6114, 0.96", "-13.9948, 50.3778, 30.614, 1.25", "-14.0079, 50.4423, 30.6259, 1.25", "-14.076, 50.7269, 30.7092, 1.47", "-14.2951, 51.4985, 31.0016, 0.59", "-14.4304, 51.9346, 31.1955, 0.59", "-14.5743, 52.4022, 31.4286, 0.59", "-14.7021, 52.7546, 31.642, 0.74", "-15.0168, 53.3844, 32.1025, 0.74", "-15.0474, 53.4274, 32.1454, 0.88", "-15.0949, 53.4659, 32.2081, 1.03", "-15.2316, 53.5323, 32.3603, 1.03", "-15.4647, 53.5959, 32.5547, 0.81", "-15.9241, 53.6439, 32.8697, 0.44", "-16.1145, 53.6864, 32.9028, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-3.14339, 38.5021, 40.4748, 0.88", "-3.73307, 38.8221, 40.2961, 0.88", "-4.2992, 39.188, 40.2444, 0.52", "-4.9111, 39.672, 40.3198, 0.37", "-5.27381, 40.0014, 40.4213, 0.37", "-5.51435, 40.2518, 40.5179, 0.37", "-5.67818, 40.4409, 40.5971, 0.44", "-6.26107, 41.4272, 41.1257, 0.29", "-6.3455, 41.6391, 41.2573, 0.29", "-6.35749, 41.69, 41.2966, 0.29", "-6.39598, 41.8829, 41.4965, 0.29", "-6.42524, 42.011, 41.6602, 0.29", "-6.5114, 42.3198, 42.0952, 0.29", "-6.5695, 42.4704, 42.3119, 0.29", "-6.82171, 42.9906, 43.1123, 0.37", "-7.12427, 43.5108, 43.9336, 0.22", "-7.19863, 43.618, 44.1151, 0.37", "-7.27758, 43.7152, 44.2826, 0.37", "-7.43374, 43.8623, 44.5462, 0.29", "-7.65966, 44.0331, 44.7818, 0.29", "-7.86398, 44.1588, 44.8618, 0.37", "-7.91875, 44.1914, 44.8694, 0.59", "-8.17318, 44.3298, 44.8972, 0.59", "-8.87905, 44.6791, 44.9782, 0.81", "-9.40216, 44.9178, 45.0438, 0.29", "-9.65077, 45.0148, 45.0774, 0.44", "-9.92811, 45.107, 45.1157, 0.44", "-15.2774, 51.9088, 48.3381, 0.44", "-20.8102, 57.9588, 52.5322, 0.44", "-25.6175, 65.1646, 55.7733, 0.44", "-31.1832, 72.1783, 58.0588, 0.44", "-37.2474, 78.5693, 60.7746, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-3.14339, 38.5021, 40.4748, 0.52", "-2.91891, 37.7728, 41.0583, 0.52", "-2.79952, 37.2977, 41.4926, 0.52", "-2.77266, 37.0532, 41.7288, 0.52", "-2.77588, 36.7183, 42.0652, 0.52", "-2.96093, 35.5795, 43.2311, 0.74", "-3.03243, 35.3366, 43.482, 0.66", "-3.21104, 35.0406, 43.8536, 0.52", "-3.5883, 34.6851, 44.363, 0.52", "-3.77522, 34.5791, 44.512, 0.44", "-4.25701, 34.3951, 44.7251, 0.37", "-4.47235, 34.3286, 44.7682, 0.37", "-4.54502, 34.31, 44.7796, 0.37", "-4.93056, 34.2083, 44.8328, 0.37", "-5.65171, 34.0454, 44.9136, 0.29", "-6.11372, 33.9448, 44.9597, 0.29", "-6.66797, 33.8386, 45.0068, 0.29", "-7.26668, 33.7321, 45.0557, 0.29", "-13.3912, 26.684, 50.49, 0.29", "-20.2043, 20.4875, 56.0952, 0.29", "-25.8355, 14.6691, 63.2079, 0.29", "-33.2256, 9.03049, 68.6436, 0.29", "-39.9407, 3.49714, 74.9877, 0.29", "-46.7196, -2.54026, 80.7979, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-57.2993, -52.1399, -28.648, 0.44", "-59.3498, -52.7644, -30.2281, 0.44", "-60.4152, -53.2039, -31.0176, 0.74", "-60.588, -53.2819, -31.1425, 0.74", "-61.5962, -53.7539, -31.7427, 0.37", "-61.988, -53.9536, -31.9592, 1.4", "-62.243, -54.094, -32.0757, 1.4", "-64.1601, -55.2727, -32.5292, 0.52", "-64.2215, -55.3147, -32.538, 0.52", "-65.3928, -56.1792, -32.6632, 0.29", "-66.1709, -56.7755, -32.6648, 0.74", "-67.2627, -57.5508, -32.5879, 0.22", "-67.4991, -57.7156, -32.5747, 0.81", "-67.6997, -57.846, -32.5628, 0.81", "-68.8644, -58.541, -32.5125, 0.22", "-69.9241, -59.0695, -32.5157, 0.74", "-70.3832, -59.2536, -32.507, 0.74", "-71.9038, -59.8722, -32.7474, 0.59", "-72.4718, -60.107, -32.88, 0.59", "-73.8794, -60.6852, -33.2808, 0.59", "-75.1369, -61.3436, -33.8113, 0.29", "-75.517, -61.5739, -34.0065, 1.11", "-77.4419, -62.7762, -35.0, 0.29", "-78.1315, -63.2081, -35.3533, 0.29", "-78.417, -63.406, -35.5327, 0.66", "-80.3093, -64.9268, -37.0423, 0.44", "-80.5167, -65.1226, -37.235, 0.81" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-57.2993, -52.1399, -28.648, 0.59", "-58.2802, -53.3559, -28.4543, 0.59", "-58.331, -53.4155, -28.447, 0.59", "-58.7222, -53.8581, -28.3997, 0.52", "-58.8089, -53.9489, -28.3828, 0.74", "-59.6892, -54.8494, -28.1759, 0.37", "-60.9245, -56.0552, -27.8777, 0.59", "-61.9927, -56.9854, -27.6416, 0.29", "-62.3458, -57.2758, -27.5631, 0.88", "-63.2849, -58.0583, -27.4438, 0.74", "-63.4692, -58.21, -27.4307, 0.74", "-64.6503, -59.1368, -27.3895, 0.22", "-64.9276, -59.3497, -27.3986, 0.88", "-65.0772, -59.4645, -27.4228, 0.88", "-67.1246, -61.1854, -28.0737, 1.47", "-68.0091, -62.0262, -28.5655, 1.47" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-18.3444, 24.5765, -10.7652, 1.18", "-18.4631, 25.4372, -11.7035, 1.18", "-18.5021, 25.7885, -12.1756, 1.4", "-18.5395, 26.4093, -13.1001, 1.4", "-18.5371, 26.7389, -13.5912, 1.33", "-18.5072, 28.1337, -15.6764, 0.29", "-18.5113, 28.2632, -15.9031, 0.29", "-18.553, 29.0132, -17.3456, 0.29", "-18.6078, 29.7226, -18.7882, 1.03", "-18.6324, 29.9758, -19.2998, 1.92", "-18.6466, 30.0939, -19.5294, 1.92", "-19.0289, 32.2006, -23.1415, 0.22", "-19.1089, 32.5311, -23.6622, 0.22", "-19.1684, 32.7103, -23.9097, 0.22", "-19.3261, 33.0774, -24.3799, 1.11", "-19.4602, 33.3345, -24.6889, 1.11", "-20.0313, 34.288, -25.6175, 0.29", "-20.2126, 34.4979, -25.724, 0.29", "-20.4046, 34.6641, -25.8142, 0.29", "-20.5594, 34.7674, -25.8703, 0.29", "-21.1928, 35.1167, -26.1912, 0.96", "-21.8775, 35.4547, -26.5821, 1.47", "-22.4796, 35.7298, -26.9487, 1.77", "-22.9004, 35.9351, -27.2328, 1.84", "-23.296, 36.154, -27.5239, 1.55", "-25.1739, 37.3326, -29.0006, 0.66", "-25.3016, 37.425, -29.1084, 0.59", "-25.8809, 37.9036, -29.6414, 0.22", "-26.1342, 38.1517, -29.8839, 0.22", "-26.4297, 38.483, -30.1383, 0.22", "-26.6833, 38.8109, -30.3282, 0.22", "-26.9034, 39.1186, -30.4334, 0.22", "-27.1418, 39.4588, -30.5582, 0.22", "-27.5999, 40.1217, -30.8088, 1.03", "-27.9554, 40.5918, -31.015, 1.62", "-28.632, 41.4264, -31.442, 1.84", "-28.6794, 41.4846, -31.476, 1.84", "-28.9394, 41.8116, -31.6903, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-18.3444, 24.5765, -10.7652, 1.4", "-18.5782, 24.4837, -10.6971, 1.4", "-20.1498, 23.8837, -10.2158, 0.59", "-20.7251, 23.6801, -10.0426, 0.88", "-21.5031, 23.4757, -9.82303, 1.11", "-22.3765, 23.3162, -9.59932, 0.81", "-23.0379, 23.2295, -9.47487, 0.59", "-24.0542, 23.1914, -9.37535, 0.59", "-24.4319, 23.219, -9.38497, 0.59", "-25.482, 23.424, -9.44651, 0.59", "-26.1994, 23.6274, -9.50761, 0.66", "-27.1441, 23.9889, -9.63681, 0.88", "-27.4686, 24.1398, -9.71055, 1.11", "-27.731, 24.2826, -9.80979, 1.25", "-28.3152, 24.5961, -10.0669, 1.25" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.32442, 25.3391, -3.15571, 2.21", "-4.53233, 25.5745, -3.31943, 2.21", "-5.59751, 26.6964, -4.07353, 1.03", "-6.14903, 27.3096, -4.44508, 0.81", "-6.88494, 28.1366, -4.9099, 0.81", "-7.64234, 29.0005, -5.34266, 1.11", "-7.96397, 29.3702, -5.50574, 1.11", "-8.42772, 29.9215, -5.71257, 1.33", "-8.94893, 30.5606, -5.90543, 1.55", "-9.32582, 31.0533, -5.95746, 1.4", "-9.85646, 31.8081, -5.88861, 0.96", "-10.1985, 32.3353, -5.7743, 0.96", "-10.4129, 32.6685, -5.70003, 1.03", "-10.6038, 32.9837, -5.63155, 0.52", "-11.2097, 33.875, -5.45634, 0.59", "-11.4539, 34.2589, -5.40606, 0.44", "-11.5896, 34.4669, -5.40041, 0.37", "-12.091, 35.1752, -5.51049, 0.37", "-12.3337, 35.4773, -5.61977, 0.74", "-12.7079, 35.9157, -5.84571, 1.11", "-12.953, 36.1821, -6.03659, 1.4", "-13.2649, 36.5173, -6.29034, 1.4", "-13.8458, 37.1095, -6.76591, 1.25", "-14.5036, 37.7597, -7.28592, 1.11", "-14.9173, 38.1532, -7.59576, 0.96", "-15.8675, 39.0579, -8.2591, 0.44", "-16.1525, 39.3301, -8.44062, 0.44", "-16.82, 39.9811, -8.83802, 0.88", "-17.0557, 40.2349, -8.96776, 0.96", "-17.49, 40.7524, -9.17416, 0.66", "-17.8349, 41.203, -9.31822, 0.52", "-18.3117, 41.9219, -9.46004, 0.29", "-18.8871, 42.8508, -9.59812, 1.4", "-19.2341, 43.4795, -9.6795, 1.84", "-19.4187, 43.8287, -9.73662, 1.84", "-19.4922, 43.9754, -9.76732, 1.84", "-19.8065, 44.6178, -9.87877, 0.44", "-20.0914, 45.2872, -9.85424, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-4.32442, 25.3391, -3.15571, 2.06", "-4.03149, 26.1283, -3.2186, 2.06", "-3.07092, 28.4646, -3.49448, 1.33", "-2.67649, 29.5301, -3.52755, 1.33", "-2.07056, 31.2131, -3.49505, 1.1", "-1.30284, 33.5393, -3.38109, 1.25", "-1.01989, 34.6379, -3.2843, 1.2", "-0.752368, 35.8432, -3.15669, 1.35", "-0.358705, 38.4378, -2.86541, 1.2", "-0.242115, 39.7008, -2.65417, 1.4", "-0.17975, 41.2438, -2.2789, 1.33", "-0.259524, 43.704, -1.50379, 0.74", "-0.283201, 43.9767, -1.41054, 0.96", "-0.392062, 44.719, -1.17663, 1.25", "-0.461738, 45.1033, -1.09649, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "-7.58667, -51.2108, 15.7585, 0.37", "-6.78042, -50.6712, 15.2113, 0.37", "-6.5637, -50.5261, 15.0641, 0.37", "-5.90687, -50.0865, 14.6183, 0.37", "-5.71522, -49.9583, 14.4882, 0.52", "-5.59769, -49.8796, 14.4084, 0.52", "-5.53151, -49.8353, 14.3635, 0.52", "3.75006, -44.9002, 10.1377, 0.52", "13.1458, -40.8797, 5.29069, 0.52", "22.8094, -35.8177, 2.21957, 0.52", "33.3924, -32.6897, -0.198196, 0.52", "43.8519, -28.3794, -0.552424, 0.52" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "-7.58667, -51.2108, 15.7585, 0.44", "-8.35551, -51.4684, 16.0194, 0.44", "-8.88877, -51.6471, 16.2003, 0.44", "-9.31009, -51.7883, 16.3432, 0.44", "-9.64464, -51.9004, 16.4567, 0.44", "-10.1797, -52.0796, 16.6382, 0.37", "-10.5314, -52.1975, 16.7576, 0.37", "-20.3209, -54.6177, 19.4076, 0.37", "-29.9385, -56.8774, 22.7334, 0.37", "-40.0671, -58.7168, 24.3463, 0.37", "-50.3883, -60.1088, 24.1885, 0.37", "-60.7469, -61.1005, 24.5558, 0.37", "-70.8817, -63.133, 25.8885, 0.37" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "-8.09492, -60.3557, 20.0952, 0.96", "-7.95555, -61.3734, 20.1429, 0.96", "-7.84738, -62.1633, 20.1798, 0.96", "-7.75342, -62.8495, 20.2119, 0.88", "-7.67148, -63.4478, 20.2399, 0.88" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-8.09492, -60.3557, 20.0952, 0.44", "-8.79169, -60.6335, 20.4494, 0.44", "-9.04335, -60.7184, 20.5634, 0.44", "-9.3622, -60.8158, 20.6995, 0.44", "-9.92599, -60.9585, 20.9267, 0.44", "-10.2726, -61.0306, 21.0605, 0.44", "-10.4112, -61.0554, 21.1122, 0.66", "-10.7863, -61.1097, 21.205, 0.81", "-10.843, -61.1163, 21.2191, 0.81", "-11.1585, -61.1317, 21.2984, 0.74", "-11.3252, -61.1101, 21.3417, 0.74", "-11.4479, -61.0786, 21.3742, 0.74", "-19.885, -62.0879, 26.2538, 0.74", "-27.6673, -61.497, 32.1693, 0.74", "-34.7706, -62.2571, 38.8722, 0.74" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "5.10791, -53.1279, 9.38821, 0.66", "5.52291, -54.1344, 9.27218, 0.66", "5.86326, -54.9599, 9.17702, 0.66", "6.13445, -55.6177, 9.1012, 1.11", "6.39172, -56.2416, 9.02927, 1.11", "6.53373, -56.5861, 8.98957, 1.11", "6.55513, -56.638, 8.98358, 1.11" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "5.10791, -53.1279, 9.38821, 0.29", "5.24484, -52.5399, 9.39488, 0.29", "5.25082, -52.4956, 9.39266, 0.29", "5.26183, -51.9709, 9.317, 0.29", "5.25967, -51.921, 9.30786, 0.29", "5.19451, -51.1189, 9.15536, 0.29", "5.1462, -50.6372, 9.06378, 0.52", "5.08375, -50.247, 8.97765, 0.66", "4.95765, -49.5825, 8.82363, 0.37", "4.88691, -49.2809, 8.74574, 0.37", "4.7428, -48.7339, 8.60128, 0.44", "4.7312, -48.7002, 8.59193, 0.44", "4.70971, -48.6343, 8.57424, 0.44", "4.6997, -48.5925, 8.56731, 0.44", "2.95583, -42.7986, 7.4837, 0.44", "0.597187, -37.2466, 6.34938, 0.44" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "9.13673, -38.4365, -35.1062, 0.44", "10.9035, -39.353, -34.1774, 0.44", "12.2032, -40.0405, -33.52, 0.44", "13.8715, -40.929, -32.6989, 0.29", "15.069, -41.573, -32.1271, 0.29", "15.935, -42.0656, -31.7807, 0.29", "15.9897, -42.0989, -31.7623, 0.29", "16.1777, -42.2326, -31.7355, 0.59", "16.2497, -42.2895, -31.7368, 0.59", "16.4311, -42.4429, -31.7787, 1.03", "17.811, -43.6255, -32.1698, 0.22", "18.2963, -44.0339, -32.307, 0.22", "18.357, -44.0822, -32.3203, 0.22", "18.9428, -44.5109, -32.4143, 0.96", "19.0079, -44.5546, -32.4199, 0.96", "19.7164, -44.9477, -32.4109, 1.62", "19.804, -44.984, -32.4011, 1.62", "20.6769, -45.3079, -32.303, 1.62", "21.1338, -45.4696, -32.2516, 1.18", "21.6946, -45.6706, -32.2234, 0.66", "22.7019, -46.0812, -32.2254, 0.22", "23.2802, -46.362, -32.2586, 0.22", "24.0052, -46.8005, -32.3609, 0.22", "24.25, -46.9921, -32.4209, 0.22", "25.0075, -47.7582, -32.7158, 0.22", "25.4491, -48.3097, -32.9878, 0.96", "25.7813, -48.7994, -33.2429, 0.96", "26.2016, -49.4597, -33.5917, 0.37", "26.4994, -49.905, -33.8291, 0.37", "26.9787, -50.5358, -34.1285, 0.96", "27.7332, -51.4436, -34.4694, 1.62", "28.2504, -52.0405, -34.6706, 1.92", "28.3001, -52.0988, -34.6903, 1.92", "28.9947, -52.9615, -34.954, 0.66", "29.7674, -53.9995, -35.2319, 0.29", "30.4547, -54.9902, -35.4465, 0.29", "30.7762, -55.4985, -35.5308, 0.29", "31.3516, -56.4514, -35.6717, 0.74", "31.6481, -56.967, -35.7326, 1.18", "32.088, -57.7763, -35.8056, 1.62", "32.1275, -57.8477, -35.811, 1.62", "32.8791, -59.066, -35.8582, 0.29", "33.5812, -60.0712, -35.9675, 0.29", "34.1682, -60.8416, -36.0819, 0.29", "34.2165, -60.9017, -36.0957, 0.29", "34.5441, -61.2952, -36.2125, 0.66", "35.0589, -61.9036, -36.4365, 0.96", "36.3658, -63.4465, -37.098, 1.33", "36.5219, -63.6429, -37.1837, 1.33", "37.1236, -64.4132, -37.4997, 1.69", "37.4249, -64.8082, -37.6389, 1.33", "37.9707, -65.5286, -37.8449, 0.81", "38.6504, -66.4578, -38.0439, 0.22", "38.9393, -66.865, -38.0684, 0.22", "39.2633, -67.3079, -38.0959, 0.74", "39.6523, -67.8174, -38.1275, 1.25", "39.9935, -68.2515, -38.1418, 1.25" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "9.13673, -38.4365, -35.1062, 0.37", "8.87131, -39.3346, -35.3441, 0.37", "8.72669, -39.827, -35.4797, 0.37", "8.57065, -40.3836, -35.7135, 0.88", "8.48568, -40.6661, -35.849, 0.96", "8.17804, -41.543, -36.1632, 0.52", "8.05845, -41.8491, -36.2742, 0.52", "8.03343, -41.9029, -36.2923, 0.52", "7.61238, -42.7271, -36.5548, 0.96", "7.4165, -43.0885, -36.7103, 1.18", "6.79788, -44.1314, -37.1894, 0.44", "6.16189, -45.1096, -37.6933, 0.44", "5.74207, -45.7092, -38.0346, 0.44", "5.15341, -46.4928, -38.503, 0.44", "4.20024, -47.6123, -39.1936, 1.25", "3.86299, -47.9715, -39.4492, 1.18", "3.28148, -48.5257, -39.9077, 0.59", "2.9446, -48.811, -40.1362, 0.52", "2.62096, -49.0683, -40.3537, 0.52", "2.01042, -49.5474, -40.7049, 0.52", "1.37989, -50.1158, -40.982, 1.33", "1.20776, -50.3068, -41.0672, 1.84", "0.960443, -50.6265, -41.188, 1.25", "0.44116, -51.3939, -41.4789, 0.44", "-0.0858053, -52.2333, -41.7845, 0.22", "-0.424493, -52.7904, -41.9447, 0.22", "-0.906978, -53.5562, -42.1002, 0.22", "-1.25207, -54.0775, -42.2039, 0.22", "-1.27761, -54.1155, -42.2096, 0.22", "-1.70629, -54.7386, -42.2641, 0.22", "-2.22337, -55.4738, -42.3285, 1.47", "-2.25371, -55.5186, -42.334, 1.47", "-2.8584, -56.5528, -42.4642, 1.47", "-3.54436, -57.8647, -42.7308, 0.44", "-3.71699, -58.2157, -42.8587, 0.81", "-3.8492, -58.5091, -42.9971, 1.11", "-4.23494, -59.3945, -43.4806, 0.29", "-4.65679, -60.3516, -44.0266, 0.29", "-4.9658, -61.08, -44.4546, 0.88", "-5.66184, -62.6825, -45.4639, 0.29", "-5.79014, -62.9568, -45.6385, 0.29", "-5.94365, -63.2695, -45.8391, 0.74", "-6.1079, -63.5813, -46.033, 1.25", "-6.74496, -64.7641, -46.7207, 0.29", "-7.40232, -65.9706, -47.3168, 0.29", "-7.84738, -66.7552, -47.6604, 0.88", "-7.89444, -66.8351, -47.6972, 0.88", "-8.16128, -67.2725, -47.9329, 1.33", "-8.53243, -67.8252, -48.2678, 0.88", "-9.35272, -68.8789, -48.9707, 0.22", "-9.3834, -68.9159, -48.9955, 0.88", "-9.41959, -68.9587, -49.0243, 0.88", "-10.2008, -69.8486, -49.6174, 0.29", "-10.612, -70.3072, -49.9363, 0.29", "-10.9046, -70.6165, -50.148, 0.96", "-11.214, -70.9567, -50.363, 0.96", "-11.755, -71.6159, -50.7226, 0.44", "-12.0682, -72.0408, -50.9211, 0.44", "-12.4334, -72.6409, -51.139, 1.03", "-12.6102, -72.9702, -51.2895, 1.4", "-12.9998, -73.7308, -51.6683, 0.44", "-13.3514, -74.4556, -52.0291, 0.44", "-13.7429, -75.3061, -52.4647, 0.29", "-14.064, -76.0561, -52.8585, 0.29", "-14.7506, -77.6843, -53.7222, 0.29", "-14.9688, -78.2097, -54.0147, 0.29", "-15.2259, -78.8297, -54.3778, 0.29", "-15.4587, -79.3788, -54.7434, 1.03", "-15.635, -79.7975, -55.0436, 1.03" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "29.4704, -94.4883, 24.8461, 1.33", "33.3012, -101.656, 29.785, 1.33" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "29.4704, -94.4883, 24.8461, 0.44", "32.9107, -102.963, 31.3037, 1.33" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-23.8745, -80.8194, -41.0721, 0.22", "-24.1344, -81.076, -41.2003, 0.22", "-24.4024, -81.3977, -41.3192, 0.22", "-24.7215, -81.7473, -41.576, 0.22", "-25.4305, -82.5672, -42.2171, 0.96", "-25.5953, -82.7719, -42.3731, 0.96", "-25.9786, -83.2939, -42.7268, 0.22", "-26.3598, -83.8747, -43.1003, 0.22", "-27.4414, -85.6885, -44.2778, 0.59", "-27.7628, -86.3183, -44.6583, 0.22", "-27.9192, -86.6993, -44.8503, 0.22", "-28.1655, -87.4089, -45.1807, 0.88", "-28.2427, -87.6727, -45.2856, 1.03", "-28.5659, -89.0717, -45.6901, 0.22", "-28.684, -89.8628, -45.7868, 0.22", "-28.7956, -90.5575, -45.883, 0.22", "-28.8561, -90.8479, -45.9209, 0.22", "-28.9571, -91.1932, -45.9941, 0.66", "-29.1118, -91.6267, -46.0899, 0.44", "-29.1806, -91.7784, -46.136, 0.37", "-29.4747, -92.3247, -46.3746, 0.22", "-29.8993, -92.979, -46.7846, 0.22", "-30.5317, -93.891, -47.4289, 0.59", "-30.7589, -94.2128, -47.6827, 0.74", "-31.3981, -95.0832, -48.4468, 0.74", "-31.5713, -95.3145, -48.663, 0.96", "-32.7452, -96.8197, -50.1236, 0.15", "-32.8185, -96.9081, -50.2134, 0.37", "-33.3729, -97.5233, -50.801, 0.15", "-33.749, -97.8905, -51.1606, 0.66", "-33.7953, -97.9296, -51.197, 0.66", "-34.1746, -98.2043, -51.4332, 0.66", "-35.0208, -98.6884, -51.7463, 0.22", "-35.4734, -98.9222, -51.8726, 0.22", "-35.5291, -98.949, -51.8849, 0.52", "-35.7949, -99.0871, -51.9336, 0.37", "-36.2227, -99.3251, -52.0055, 0.22", "-37.1497, -99.8659, -52.2262, 0.88", "-37.3401, -99.9819, -52.2747, 0.88", "-37.8894, -100.329, -52.4511, 0.74", "-38.5534, -100.75, -52.6742, 0.22", "-39.0008, -101.045, -52.828, 0.22", "-39.8323, -101.601, -53.1001, 0.81", "-40.0455, -101.751, -53.1666, 0.81", "-40.6643, -102.193, -53.3747, 0.15", "-40.8952, -102.377, -53.4534, 0.15", "-41.1499, -102.61, -53.565, 0.44", "-41.2976, -102.771, -53.6351, 0.74", "-41.8565, -103.501, -53.8556, 0.22", "-41.8862, -103.548, -53.8802, 0.22", "-42.14, -104.082, -54.2265, 0.15", "-42.2693, -104.4, -54.4558, 0.66", "-42.297, -104.48, -54.5164, 1.03", "-42.3551, -104.674, -54.6599, 1.03", "-42.753, -105.91, -55.6158, 0.29", "-42.914, -106.323, -55.934, 0.22", "-42.995, -106.526, -56.0852, 0.22", "-43.2063, -107.11, -56.4758, 0.81", "-43.2944, -107.39, -56.6387, 0.81", "-43.5668, -108.4, -57.1613, 0.22", "-43.7028, -108.92, -57.3648, 0.22", "-43.8742, -109.453, -57.6312, 0.29", "-43.9979, -109.774, -57.8016, 0.29", "-44.1566, -110.151, -57.997, 0.29", "-44.4481, -110.779, -58.3574, 0.96", "-44.6136, -111.121, -58.5588, 1.25", "-45.2359, -112.345, -59.3309, 0.22", "-45.495, -112.79, -59.6278, 0.22", "-45.705, -113.119, -59.856, 0.22", "-46.3458, -114.067, -60.5294, 0.88", "-46.4178, -114.178, -60.6049, 1.25", "-46.6341, -114.556, -60.8688, 1.25" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-23.8745, -80.8194, -41.0721, 0.29", "-22.8134, -82.0635, -40.2331, 0.29", "-22.5584, -82.3813, -40.054, 0.29", "-22.298, -82.7705, -39.901, 0.29", "-22.105, -83.1625, -39.8312, 0.96", "-21.8952, -83.8531, -39.7892, 1.33", "-21.835, -84.5173, -39.828, 0.29", "-21.888, -84.8576, -39.9179, 0.29", "-22.251, -86.3231, -40.3621, 0.66", "-22.3779, -86.7772, -40.5149, 1.03", "-22.5662, -87.4298, -40.7641, 1.4", "-22.7917, -88.2611, -41.107, 0.29", "-22.872, -88.6479, -41.2483, 0.29", "-22.8769, -88.702, -41.2619, 0.29", "-22.8077, -89.4045, -41.3374, 0.29", "-22.7732, -89.6492, -41.3722, 0.81", "-22.6964, -90.009, -41.4367, 0.81", "-22.6119, -90.398, -41.4952, 0.22", "-22.5922, -90.7741, -41.5914, 0.22", "-22.6126, -91.1275, -41.7008, 0.22", "-22.7079, -91.7228, -41.8885, 0.81", "-22.775, -92.097, -42.0097, 1.25", "-22.8649, -92.6173, -42.184, 1.62", "-23.0518, -93.8384, -42.6376, 0.29", "-23.1014, -94.2444, -42.7988, 0.29", "-23.1426, -94.856, -43.0437, 0.29", "-23.1401, -95.2749, -43.1984, 0.29", "-23.1221, -95.6824, -43.3413, 0.29", "-23.0692, -96.2703, -43.5653, 0.29", "-23.0245, -96.6009, -43.7006, 0.74", "-22.9542, -97.0659, -43.9316, 1.33", "-22.8665, -97.6672, -44.2522, 1.33", "-22.8224, -98.003, -44.4131, 1.33", "-22.7127, -98.8579, -44.7668, 0.52", "-22.6466, -99.3494, -44.9291, 0.37", "-22.6062, -100.022, -45.1493, 0.37", "-22.5978, -100.531, -45.3118, 0.37", "-22.6149, -101.174, -45.5184, 0.81", "-22.6362, -101.602, -45.6471, 1.11", "-22.6739, -102.007, -45.7637, 0.74", "-22.853, -103.383, -46.2146, 0.22", "-22.8798, -103.528, -46.2712, 0.66", "-22.9185, -103.728, -46.3621, 1.11", "-22.9272, -103.77, -46.3833, 1.11", "-23.068, -104.487, -46.7343, 0.29", "-23.1822, -104.994, -47.0126, 0.29", "-23.242, -105.31, -47.1762, 0.52", "-23.2799, -105.49, -47.2721, 1.03", "-23.3171, -105.653, -47.3599, 1.03", "-23.3324, -105.71, -47.3949, 1.03", "-23.7238, -106.905, -48.1699, 0.29", "-23.8553, -107.252, -48.416, 0.29", "-23.9279, -107.439, -48.5636, 0.29", "-23.94, -107.475, -48.5917, 0.29", "-24.0747, -108.035, -48.9953, 0.74", "-24.141, -108.35, -49.2094, 1.25", "-24.1708, -108.525, -49.313, 1.25", "-24.3306, -109.295, -49.7793, 0.44", "-24.435, -109.794, -50.0771, 0.37", "-24.5196, -110.194, -50.2841, 0.37", "-24.6403, -110.932, -50.6095, 0.29", "-24.659, -111.12, -50.6893, 0.29", "-24.6724, -111.485, -50.8278, 0.66", "-24.6716, -111.638, -50.8861, 1.03", "-24.6592, -112.355, -51.2187, 0.29", "-24.6249, -112.87, -51.4735, 0.29", "-24.5587, -113.292, -51.6818, 0.29", "-24.5037, -113.585, -51.8395, 0.29", "-24.3473, -114.293, -52.2546, 1.18", "-24.3047, -114.48, -52.3855, 0.07", "-24.24, -114.714, -52.625, 1.18" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-9.38201, -37.0661, 5.64086, 1.18", "-9.53445, -37.7917, 6.39808, 1.18", "-9.72049, -38.233, 6.93089, 1.18", "-9.93256, -38.5645, 7.38913, 0.59", "-10.3105, -39.0186, 8.0644, 0.52", "-10.5518, -39.2718, 8.44465, 0.22", "-10.785, -39.5117, 8.78605, 0.22", "-11.1937, -39.837, 9.24612, 0.22", "-11.4172, -40.0085, 9.46417, 0.22", "-11.6714, -40.2438, 9.70559, 0.22", "-11.895, -40.499, 9.90328, 0.37", "-12.0817, -40.7882, 10.1353, 0.44", "-12.2997, -41.1784, 10.4722, 0.44", "-12.5465, -41.635, 10.8973, 0.37", "-12.8961, -42.1823, 11.4692, 0.81", "-13.0475, -42.366, 11.6988, 1.25", "-13.5913, -42.8588, 12.4507, 0.81", "-14.0523, -43.1615, 13.0291, 0.29", "-14.3766, -43.3105, 13.4205, 0.29", "-14.7699, -43.4276, 13.8593, 0.66", "-15.0631, -43.4879, 14.1407, 1.11", "-15.3007, -43.5469, 14.3496, 0.59", "-15.4518, -43.6145, 14.5042, 0.44", "-15.638, -43.8229, 14.8444, 0.74", "-15.6491, -44.1059, 15.3053, 0.37", "-15.5803, -44.4281, 15.8213, 0.22", "-15.4702, -44.716, 16.2971, 0.22", "-15.1473, -45.4187, 17.4694, 0.66", "-15.088, -45.5438, 17.6758, 0.81", "-14.6682, -46.4554, 19.146, 0.44", "-14.5825, -46.6284, 19.427, 0.15", "-14.4369, -46.9344, 19.9324, 0.22", "-14.3849, -47.0738, 20.1595, 0.22", "-14.3476, -47.2927, 20.4412, 0.44", "-14.3448, -47.4954, 20.6558, 1.18", "-14.3942, -47.7994, 20.8853, 1.18", "-14.453, -48.0779, 21.0832, 0.88", "-14.675, -48.9094, 21.7391, 0.52", "-14.747, -49.1834, 22.0079, 0.37", "-14.8852, -49.6701, 22.5503, 0.29", "-14.9918, -49.9888, 22.9354, 0.29", "-15.1292, -50.3166, 23.3505, 0.44", "-15.4166, -51.0117, 24.3328, 0.37", "-15.6378, -51.5212, 25.0943, 0.37", "-15.7137, -51.7045, 25.3917, 0.37", "-15.7929, -51.9234, 25.7714, 0.66", "-15.8885, -52.2234, 26.3128, 0.37", "-16.0954, -53.0905, 27.8256, 0.29", "-16.1146, -53.1799, 27.9669, 1.03", "-16.1394, -53.3201, 28.1816, 1.25", "-18.724, -60.4055, 35.7503, 1.25", "-22.5678, -66.0171, 43.9346, 1.25", "-26.2167, -71.9421, 51.9971, 1.25" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-9.38201, -37.0661, 5.64086, 0.66", "-10.4131, -37.1113, 5.51019, 0.66", "-11.0993, -37.142, 5.38609, 0.29", "-11.2674, -37.1512, 5.35314, 0.29", "-11.71, -37.1816, 5.27846, 0.29", "-12.0449, -37.2047, 5.22778, 0.29", "-12.9122, -37.251, 5.11843, 0.44", "-13.0741, -37.2614, 5.10083, 0.44", "-13.3331, -37.2691, 5.07673, 0.88", "-14.0025, -37.3016, 4.95333, 1.25", "-14.1245, -37.3058, 4.92786, 1.25", "-14.5981, -37.3201, 4.83931, 1.25", "-15.0217, -37.334, 4.74404, 1.11", "-15.669, -37.3568, 4.56946, 1.03", "-16.8266, -37.4547, 4.07927, 0.81", "-17.4954, -37.5577, 3.7284, 0.29", "-17.9995, -37.6661, 3.44316, 0.37", "-18.9757, -37.9353, 2.85135, 0.66", "-19.2442, -38.0231, 2.68436, 0.66", "-20.7431, -38.6095, 1.77831, 0.15", "-21.1912, -38.8083, 1.51597, 0.15", "-21.595, -39.0052, 1.285, 0.15", "-21.7532, -39.0834, 1.20864, 0.81", "-22.0493, -39.2278, 1.12436, 1.18", "-22.362, -39.3721, 1.07769, 0.59", "-23.2258, -39.7444, 1.0836, 0.29", "-23.6203, -39.9236, 1.07969, 0.29", "-23.9265, -40.0861, 1.07982, 0.52", "-24.3259, -40.3276, 1.09032, 0.66", "-24.6201, -40.5355, 1.08518, 0.81", "-25.0105, -40.8656, 0.971167, 0.29", "-25.3026, -41.1579, 0.775133, 0.22", "-25.6403, -41.5053, 0.457044, 0.22", "-25.812, -41.6864, 0.270934, 0.22", "-26.3507, -42.2483, -0.329506, 0.74", "-27.4361, -43.3385, -1.46741, 0.74", "-28.1338, -44.028, -2.23626, 0.44", "-28.674, -44.5432, -2.84214, 0.88", "-28.8469, -44.7044, -3.02848, 1.33", "-29.2694, -45.0856, -3.45286, 1.03", "-29.8233, -45.5656, -3.9403, 0.81", "-31.6302, -47.0219, -5.21408, 0.37", "-32.341, -47.5667, -5.67517, 0.22", "-32.7785, -47.9032, -5.96274, 0.22", "-32.8647, -47.9696, -6.02032, 0.22", "-33.0368, -48.1091, -6.13617, 0.59", "-33.3942, -48.421, -6.36774, 0.81", "-33.9922, -49.0019, -6.58492, 0.37", "-34.1607, -49.1856, -6.65281, 0.29", "-34.4495, -49.4772, -6.8207, 0.29", "-34.7769, -49.7591, -6.99632, 0.59", "-35.7951, -50.5459, -7.4768, 0.88", "-36.272, -50.8773, -7.65434, 0.29", "-36.3406, -50.9223, -7.67368, 0.29", "-37.6618, -51.7462, -7.98204, 0.29", "-38.7372, -52.4303, -8.18618, 1.47", "-39.346, -52.8214, -8.25722, 1.55", "-40.219, -53.3955, -8.26225, 0.37", "-40.6317, -53.6883, -8.2439, 0.29", "-40.704, -53.7476, -8.238, 0.29", "-41.1706, -54.2455, -8.14684, 0.29", "-41.4383, -54.5976, -8.11742, 0.29", "-41.4886, -54.6661, -8.11998, 0.29", "-41.8209, -55.1075, -8.16805, 0.29", "-42.3741, -55.7628, -8.29099, 0.66", "-42.7078, -56.1232, -8.36919, 1.03", "-42.9604, -56.3648, -8.42597, 0.88", "-43.4244, -56.7877, -8.53764, 1.03", "-43.8618, -57.1537, -8.63904, 0.52", "-44.7521, -57.8513, -8.82003, 0.22", "-45.0666, -58.1022, -8.90005, 0.22", "-45.3955, -58.3694, -9.00611, 0.22", "-45.7079, -58.6542, -9.1408, 0.22", "-45.8644, -58.8154, -9.22987, 0.22", "-46.1936, -59.1881, -9.46925, 0.22", "-47.0343, -60.2533, -10.1626, 1.11", "-47.2451, -60.5529, -10.3505, 1.33", "-47.5887, -61.1088, -10.6647, 0.74", "-47.8649, -61.5885, -10.8868, 0.37", "-47.9857, -61.8021, -10.9707, 0.22", "-48.1957, -62.1726, -11.0766, 0.22", "-48.345, -62.4276, -11.1652, 0.22", "-48.7648, -63.1344, -11.4618, 1.18", "-49.068, -63.6434, -11.6914, 1.62", "-49.8041, -64.9224, -12.3838, 0.22", "-50.237, -65.715, -12.8697, 0.22", "-51.1158, -67.3945, -14.0048, 0.52", "-51.1527, -67.4643, -14.0556, 0.52", "-51.2128, -67.577, -14.1437, 0.88", "-51.7452, -68.5772, -14.9724, 0.22", "-51.8803, -68.8179, -15.1693, 0.22", "-52.0079, -69.0201, -15.3154, 0.22", "-52.2854, -69.4216, -15.4928, 0.37", "-52.4772, -69.6432, -15.6024, 0.37", "-52.6986, -69.8773, -15.717, 0.37", "-53.1914, -70.3542, -15.9347, 0.88", "-54.2097, -71.2508, -16.4043, 1.25", "-54.4978, -71.4823, -16.5274, 1.4", "-56.1807, -72.7871, -17.2028, 0.29", "-56.5058, -73.0254, -17.3205, 0.44", "-56.9118, -73.3117, -17.4478, 0.44", "-58.0863, -74.0841, -17.7131, 0.59", "-59.0175, -74.6797, -17.8105, 1.25", "-59.374, -74.9282, -17.8188, 1.25", "-59.6414, -75.1385, -17.7872, 1.25", "-59.9213, -75.3735, -17.7488, 0.96", "-60.4503, -75.868, -17.6536, 0.59", "-61.1456, -76.5908, -17.4742, 0.29", "-61.6524, -77.1316, -17.3556, 0.29", "-61.9461, -77.4296, -17.3117, 0.29", "-62.5496, -77.9756, -17.2744, 0.74", "-62.8536, -78.2247, -17.2728, 1.03", "-63.0473, -78.3765, -17.2795, 1.25", "-63.3194, -78.5821, -17.2961, 0.96", "-63.9648, -79.084, -17.3347, 0.59", "-64.789, -79.8662, -17.4094, 0.29", "-65.3148, -80.4609, -17.459, 0.29", "-65.6572, -80.8878, -17.4959, 0.29", "-65.8098, -81.0835, -17.5385, 0.44", "-65.9835, -81.3146, -17.608, 0.74", "-66.6281, -82.1629, -17.9345, 0.29", "-66.8278, -82.4236, -18.0668, 0.29", "-67.0323, -82.6642, -18.2136, 0.22", "-68.0746, -83.7527, -18.9142, 0.22", "-68.2752, -83.9394, -19.0515, 0.96", "-68.7938, -84.3857, -19.3926, 1.33", "-69.1196, -84.6641, -19.5928, 1.11", "-69.5096, -85.051, -19.8268, 0.37", "-69.79, -85.3529, -19.9685, 0.22", "-70.5502, -86.166, -20.2549, 0.22", "-70.8944, -86.4958, -20.3846, 0.29", "-71.2814, -86.8267, -20.5016, 0.37", "-71.7257, -87.1744, -20.5977, 0.29", "-72.1326, -87.4786, -20.6481, 0.29", "-73.0447, -88.2073, -20.6852, 0.74", "-73.3841, -88.4888, -20.6623, 0.74", "-74.0726, -89.1014, -20.7109, 0.22", "-74.5888, -89.5431, -20.7907, 0.22", "-74.8148, -89.7407, -20.8384, 0.37", "-75.3545, -90.2852, -20.9626, 0.37", "-75.6203, -90.6015, -21.0392, 0.37", "-76.7775, -92.0284, -21.4403, 0.74", "-77.2186, -92.5366, -21.6066, 1.33", "-77.5212, -92.8586, -21.7152, 1.33", "-78.2316, -93.5576, -21.9444, 0.96", "-79.4659, -94.703, -22.2715, 0.15", "-79.8512, -95.0612, -22.3309, 0.15", "-80.3213, -95.5132, -22.3051, 0.15", "-80.588, -95.7983, -22.2753, 0.81", "-80.6422, -95.8592, -22.2634, 0.81", "-80.9894, -96.2729, -22.1116, 1.33", "-81.3465, -96.792, -21.8345, 0.74", "-81.6228, -97.2807, -21.5833, 0.96", "-81.6999, -97.4296, -21.5098, 0.96", "-82.0396, -98.0082, -21.2282, 0.29", "-82.4373, -98.5853, -20.9551, 0.29", "-82.7783, -99.0234, -20.7388, 0.88", "-83.3687, -99.7161, -20.3899, 1.47", "-83.6432, -100.032, -20.2374, 1.47", "-84.4729, -100.996, -19.7242, 0.52", "-85.2646, -101.916, -19.1981, 0.52", "-85.6939, -102.433, -18.8985, 0.52", "-85.9834, -102.798, -18.6615, 0.52", "-86.4648, -103.445, -18.2135, 0.52", "-86.8394, -104.08, -17.683, 0.74", "-87.0767, -104.591, -17.1986, 0.74", "-87.3949, -105.416, -16.3742, 0.22", "-87.655, -106.197, -15.6183, 0.96", "-87.7516, -106.571, -15.2323, 1.33", "-88.0671, -107.974, -13.7189, 0.37", "-88.1777, -108.595, -13.0653, 0.22", "-88.2162, -108.896, -12.7549, 0.29", "-88.3055, -109.508, -12.1218, 0.29", "-88.5754, -110.791, -10.9032, 0.96", "-88.6688, -111.133, -10.579, 1.4", "-88.7574, -111.382, -10.3477, 1.69", "-88.9336, -111.81, -9.93917, 1.55", "-89.7341, -113.48, -8.19896, 0.44", "-90.0203, -113.97, -7.65437, 0.44", "-90.3904, -114.536, -7.07314, 0.44", "-90.4481, -114.62, -6.98979, 0.88", "-90.8882, -115.224, -6.42387, 1.11", "-91.5341, -116.063, -5.69741, 1.11", "-91.7345, -116.305, -5.53282, 0.81", "-92.6161, -117.329, -4.854, 0.29", "-93.2823, -118.187, -4.36208, 0.29", "-93.5581, -118.591, -4.12381, 0.66", "-93.6741, -118.785, -4.01166, 1.11", "-94.0628, -119.482, -3.63426, 1.11", "-94.2982, -119.971, -3.34263, 1.11", "-94.7451, -121.093, -2.60247, 0.44", "-95.117, -122.133, -2.01545, 0.37", "-95.287, -122.518, -1.83981, 0.44", "-95.3243, -122.587, -1.81482, 0.66", "-95.5483, -122.947, -1.69947, 0.29", "-96.092, -123.629, -1.54835, 0.29", "-97.1224, -124.626, -1.28326, 0.81", "-97.9448, -125.356, -1.06896, 1.11", "-98.0711, -125.466, -1.02025, 1.11", "-98.6309, -125.998, -0.726839, 1.03", "-98.6732, -126.044, -0.695955, 1.03", "-99.4177, -127.057, 0.0765726, 0.29", "-99.5186, -127.257, 0.211746, 0.29", "-99.7203, -127.793, 0.434338, 0.59", "-99.8994, -128.277, 0.552666, 0.74", "-100.091, -128.79, 0.606622, 0.44", "-100.276, -129.249, 0.594397, 0.44", "-100.7, -130.284, 0.468133, 0.22", "-101.035, -131.069, 0.348622, 0.59", "-101.223, -131.488, 0.279292, 1.03", "-101.424, -131.917, 0.210633, 0.74", "-102.051, -133.293, 0.150124, 0.29", "-102.453, -134.257, 0.215412, 0.29", "-102.79, -135.181, 0.383221, 0.74", "-102.967, -135.758, 0.534447, 0.74", "-103.105, -136.283, 0.698836, 0.74", "-103.551, -138.273, 1.44854, 0.29", "-103.635, -138.793, 1.72816, 0.29", "-103.696, -139.167, 1.93314, 0.29", "-103.799, -139.771, 2.2614, 1.11", "-103.904, -140.267, 2.50474, 0.96", "-104.047, -140.829, 2.72623, 0.81", "-104.57, -142.404, 3.10752, 0.22", "-105.069, -143.696, 3.41664, 0.22", "-105.194, -144.016, 3.53176, 0.66", "-105.294, -144.317, 3.67205, 1.11", "-105.389, -144.683, 3.86254, 0.66", "-105.446, -145.038, 4.11049, 0.66", "-105.45, -145.094, 4.15803, 0.66", "-105.484, -146.39, 5.40321, 0.22", "-105.556, -146.991, 5.90542, 0.22", "-105.619, -147.331, 6.15554, 0.66", "-105.899, -148.322, 6.75312, 1.18", "-105.921, -148.393, 6.79027, 1.18", "-106.135, -148.972, 7.04497, 1.18", "-106.817, -150.6, 7.55178, 0.37", "-106.885, -150.751, 7.59669, 0.59", "-107.309, -151.627, 7.83822, 0.59", "-107.752, -152.524, 8.04703, 0.59", "-107.826, -152.692, 8.09402, 0.66", "-107.969, -153.089, 8.2282, 0.74", "-107.99, -153.161, 8.26441, 0.74", "-108.074, -153.399, 8.39218, 0.74", "-108.47, -154.347, 8.91964, 0.22", "-108.779, -154.947, 9.24412, 0.22", "-108.992, -155.321, 9.45242, 0.22", "-109.498, -156.067, 9.86961, 1.03", "-109.855, -156.563, 10.1436, 1.4", "-109.897, -156.617, 10.1724, 1.4", "-110.262, -157.062, 10.4047, 1.4", "-110.698, -157.589, 10.6553, 0.66", "-111.481, -158.644, 11.1398, 0.29", "-111.532, -158.719, 11.1714, 0.29", "-111.937, -159.368, 11.468, 0.29", "-112.165, -159.781, 11.6655, 0.29", "-112.264, -159.988, 11.7879, 0.29", "-112.664, -160.82, 12.3617, 0.52", "-112.776, -161.087, 12.5481, 1.03", "-112.92, -161.426, 12.7799, 1.03", "-112.981, -161.566, 12.8734, 1.03", "-113.535, -162.764, 13.6456, 0.37", "-113.926, -163.616, 14.1426, 0.29", "-114.253, -164.341, 14.4959, 0.29", "-114.281, -164.4, 14.5222, 0.29", "-114.583, -165.014, 14.7733, 0.74", "-114.821, -165.478, 14.9438, 0.81", "-115.172, -166.165, 15.157, 0.81", "-115.716, -167.2, 15.4801, 0.29", "-116.335, -168.262, 15.826, 0.29", "-116.544, -168.613, 15.9402, 0.52", "-116.804, -169.028, 16.0691, 0.66" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "0.348999, 64.4587, 3.84427, 0.74", "0.18965, 64.8866, 3.84759, 0.74", "0.11629, 65.0866, 3.85204, 0.74", "-0.0149882, 65.461, 3.79372, 0.44", "-0.223174, 66.0058, 3.63369, 0.29", "-0.336001, 66.2209, 3.53582, 0.29", "-0.494781, 66.4897, 3.39514, 0.66", "-0.631274, 66.6873, 3.27533, 0.66", "-1.26589, 67.5838, 2.65354, 0.22", "-1.64878, 68.0925, 2.18355, 0.22", "-2.18002, 68.8502, 1.41355, 0.37", "-2.23908, 68.9309, 1.33046, 0.37", "-2.62507, 69.4506, 0.806267, 0.29", "-2.91199, 69.8367, 0.430279, 0.29", "-3.82514, 71.1226, -0.68615, 0.96", "-4.24777, 71.795, -1.19991, 0.74", "-4.70609, 72.6529, -1.75592, 0.52", "-4.86553, 72.9722, -1.93552, 0.52", "-4.89421, 73.0343, -1.96324, 0.52", "-5.13984, 73.5686, -2.10897, 0.52", "-5.18807, 73.7027, -2.11348, 0.52", "-5.29131, 74.0269, -2.11452, 0.52", "-5.41523, 74.6574, -2.11094, 0.52", "-5.44907, 74.7936, -2.12033, 0.52", "-5.58643, 75.2367, -2.17258, 0.52", "-5.63362, 75.3655, -2.195, 0.52", "-5.75253, 75.6526, -2.25689, 0.52", "-5.86761, 75.8988, -2.31954, 0.52", "-6.25701, 76.6585, -2.54292, 0.66", "-6.31817, 76.7819, -2.57874, 0.66", "-6.41539, 77.0033, -2.62921, 0.88", "-6.44067, 77.0611, -2.64121, 0.88", "-6.59166, 77.4279, -2.70409, 0.88", "-6.64567, 77.5684, -2.72093, 0.88", "-6.77697, 77.9459, -2.74387, 0.66", "-7.05292, 78.7767, -2.79654, 0.29", "-7.21956, 79.2783, -2.82545, 0.44", "-7.36564, 79.7327, -2.85002, 0.59", "-7.49354, 80.113, -2.87494, 0.96", "-7.67092, 80.6249, -2.91004, 1.33", "-7.84298, 81.0831, -2.93453, 1.33", "-7.97085, 81.3947, -2.9412, 1.11", "-8.13178, 81.7654, -2.93502, 1.11", "-8.73135, 82.9599, -2.88059, 0.52", "-8.76914, 83.025, -2.87367, 0.52", "-9.11945, 83.5373, -2.77774, 0.52", "-9.32427, 83.7904, -2.70325, 0.44", "-9.37195, 83.8422, -2.68239, 0.44", "-9.72496, 84.1929, -2.49918, 0.44", "-10.0425, 84.5125, -2.30301, 0.81", "-10.2718, 84.7851, -2.16833, 0.74", "-10.5681, 85.1936, -2.00302, 0.81", "-10.6012, 85.2466, -1.98629, 0.81", "-10.9205, 85.8108, -1.84077, 0.29", "-11.1455, 86.2567, -1.75187, 0.29", "-11.4645, 86.919, -1.64369, 0.29", "-11.4956, 86.9872, -1.63355, 0.29", "-11.7624, 87.6012, -1.54926, 0.29", "-11.9954, 88.1227, -1.47417, 1.11", "-12.1987, 88.5467, -1.40545, 1.47", "-12.3262, 88.7826, -1.35925, 2.28" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "0.348999, 64.4587, 3.84427, 0.29", "2.04513, 65.0062, 3.6948, 0.29", "2.64428, 65.1696, 4.09055, 0.29", "3.3306, 65.3275, 4.61706, 0.37", "3.57751, 65.382, 4.83572, 0.37", "3.98546, 65.4736, 5.20977, 1.03", "4.20381, 65.5271, 5.40945, 1.03", "6.89392, 66.3012, 8.15345, 0.81", "7.24175, 66.4133, 8.53802, 0.74", "8.0487, 66.7172, 9.48359, 0.37", "8.17841, 66.7808, 9.63979, 0.37", "8.42784, 66.9407, 9.93765, 0.37", "8.95531, 67.4078, 10.474, 0.81", "9.14842, 67.6783, 10.574, 1.25", "9.37153, 67.994, 10.651, 1.62", "10.1848, 69.074, 10.755, 0.52", "10.4987, 69.4889, 10.7742, 0.52", "10.8486, 69.9623, 10.7574, 0.66", "11.5317, 70.9079, 10.7362, 0.52", "12.1584, 71.8176, 10.736, 0.44", "12.786, 72.7297, 10.7346, 0.44", "13.1754, 73.3004, 10.787, 0.44", "13.5559, 73.8907, 10.9397, 0.44", "14.345, 75.2358, 11.5282, 0.44", "14.5702, 75.6837, 11.8069, 0.44", "14.5913, 75.7266, 11.8402, 0.44", "15.3041, 76.9627, 12.9428, 0.44", "15.4517, 77.1499, 13.1085, 0.66", "15.537, 77.2312, 13.1845, 0.66", "15.8618, 77.4797, 13.3778, 1.11", "16.2349, 77.7454, 13.5839, 1.11", "16.5237, 77.9662, 13.7293, 1.03", "16.963, 78.3692, 13.905, 0.66", "17.9757, 79.6002, 14.4086, 0.66", "18.1124, 79.8196, 14.4918, 0.52", "18.2657, 80.1834, 14.6121, 0.52", "18.3837, 80.6272, 14.7263, 0.37", "18.5102, 81.4444, 14.8743, 0.37", "18.5447, 82.0036, 14.915, 0.37", "18.5559, 82.1685, 14.9204, 0.52", "18.6368, 82.6649, 14.9936, 0.52", "18.7242, 82.9883, 15.0626, 0.74", "18.7505, 83.0445, 15.0833, 0.74", "18.9459, 83.2627, 15.2656, 0.74", "19.9364, 83.9724, 16.3023, 0.74", "19.9821, 83.9961, 16.3549, 0.74", "25.7727, 89.3973, 20.97, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-16.1145, 53.6864, 32.9028, 0.29", "-17.1847, 54.6754, 34.4129, 0.29", "-17.3788, 54.9273, 34.7133, 0.29", "-17.4431, 55.0245, 34.8118, 0.29", "-17.8827, 55.7096, 35.4243, 0.29", "-17.9092, 55.7579, 35.4702, 0.29", "-18.4598, 56.78, 36.407, 0.29", "-18.6496, 57.2183, 36.7373, 0.29", "-18.7457, 57.4602, 36.9195, 0.29", "-18.8452, 57.778, 37.1645, 0.59", "-19.1492, 59.0545, 38.1263, 0.29", "-19.2769, 59.6489, 38.5263, 0.29", "-19.2934, 59.7342, 38.574, 0.29", "-19.3951, 60.356, 38.9321, 0.29", "-19.5079, 61.3191, 39.4695, 0.29", "-19.5379, 61.843, 39.7305, 0.29", "-19.5408, 62.1853, 39.843, 1.03", "-19.5061, 62.6021, 39.9935, 1.4", "-23.0133, 69.6406, 45.9287, 1.4", "-26.0833, 76.8961, 51.8565, 1.4" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-16.1145, 53.6864, 32.9028, 0.44", "-17.0783, 53.1616, 32.7828, 0.44", "-17.1355, 53.0202, 33.2796, 0.44", "-17.2066, 52.7574, 34.1672, 0.44", "-17.2502, 52.6116, 34.5547, 0.44", "-17.2849, 52.5331, 34.7238, 0.59", "-17.3941, 52.3451, 35.0797, 0.81", "-18.3478, 50.6785, 38.3895, 0.29", "-18.3954, 50.5984, 38.5548, 0.29", "-18.5775, 50.2519, 39.2246, 0.29", "-18.8031, 49.7805, 40.1016, 0.29", "-18.9663, 49.4423, 40.6873, 0.29", "-19.2366, 48.9538, 41.3837, 0.29", "-19.3651, 48.8334, 41.4563, 0.29", "-19.7971, 48.4631, 41.7166, 0.29", "-26.3641, 41.4184, 51.0872, 0.29", "-32.1947, 34.7237, 61.1662, 0.29", "-37.3544, 29.9812, 72.5808, 0.29", "-42.5511, 24.2636, 83.5439, 0.29" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-46.7196, -2.54026, 80.7979, 0.29", "-51.6869, -8.08538, 86.2182, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-46.7196, -2.54026, 80.7979, 0.44", "-50.5454, -4.36513, 82.7607, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-68.0091, -62.0262, -28.5655, 1.47", "-68.3209, -61.8452, -28.5864, 1.47", "-68.986, -61.4833, -28.5824, 0.44", "-69.7729, -61.0919, -28.5422, 0.44", "-69.8176, -61.0711, -28.5389, 0.44", "-70.8562, -60.5871, -28.4615, 0.29", "-71.8813, -60.1094, -28.3851, 0.29", "-72.4723, -59.8383, -28.3533, 0.59", "-73.1266, -59.5763, -28.3464, 0.29", "-73.569, -59.433, -28.3278, 0.74" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-68.0091, -62.0262, -28.5655, 0.44", "-69.6232, -63.3351, -28.3556, 0.44", "-70.1162, -63.6533, -28.3427, 0.88", "-70.4643, -63.841, -28.3501, 1.4", "-70.605, -63.9122, -28.3559, 1.55", "-70.6895, -63.9522, -28.3603, 1.55", "-72.3728, -64.6615, -28.3132, 0.44", "-72.6531, -64.7454, -28.332, 1.4", "-73.1444, -64.8687, -28.3663, 1.69", "-73.6328, -64.9773, -28.3982, 1.25", "-73.946, -65.0331, -28.4209, 0.74", "-75.7273, -65.2963, -28.5514, 0.22", "-76.8294, -65.425, -28.6233, 0.96", "-77.4764, -65.4736, -28.6779, 0.96", "-77.9913, -65.4909, -28.729, 0.52", "-79.6072, -65.4774, -28.9143, 0.29", "-79.7278, -65.4744, -28.9307, 0.29", "-79.867, -65.465, -28.9436, 0.59", "-80.6358, -65.4055, -28.8769, 0.74", "-81.0358, -65.4027, -28.6848, 0.96", "-81.0932, -65.4024, -28.6431, 0.96", "-81.262, -65.4047, -28.5008, 1.18", "-82.3251, -65.4521, -27.6477, 1.18", "-82.3729, -65.4554, -27.6101, 1.18", "-84.4544, -65.6523, -26.0146, 0.44", "-85.041, -65.7055, -25.5737, 0.44", "-85.6119, -65.7552, -25.1754, 0.44", "-86.121, -65.8054, -24.8829, 0.81", "-86.1858, -65.8138, -24.8549, 0.81", "-86.5446, -65.8675, -24.7251, 1.33", "-87.5813, -66.0521, -24.4988, 1.33", "-87.8612, -66.1132, -24.4289, 1.33", "-89.1392, -66.3778, -24.0752, 0.22", "-89.1985, -66.3892, -24.0584, 0.74", "-89.3348, -66.417, -24.0233, 0.74" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-28.9394, 41.8116, -31.6903, 0.29", "-28.9006, 42.5963, -32.593, 0.29", "-28.8753, 43.1698, -33.8693, 0.29", "-28.8598, 43.4131, -34.4562, 0.29", "-28.8224, 43.9262, -35.7302, 0.74", "-28.8134, 44.07, -36.084, 1.25", "-28.8082, 44.1677, -36.3196, 1.47", "-28.7605, 46.1096, -41.3035, 0.59", "-28.7581, 46.2239, -41.6245, 0.59", "-28.759, 46.2459, -41.6974, 0.59", "-28.7713, 46.3306, -41.992, 0.59", "-28.7829, 46.3848, -42.1759, 0.66", "-28.7829, 46.3848, -42.1759, 0.66", "-28.8386, 46.5277, -42.3837, 0.66", "-29.1174, 47.2988, -43.5224, 0.22", "-29.2138, 47.5854, -44.1054, 0.22", "-29.3379, 47.9422, -44.8968, 0.29", "-29.3665, 48.0139, -45.0616, 0.59", "-29.3824, 48.0504, -45.1451, 0.74", "-29.4325, 48.1295, -45.4108, 0.74", "-29.9274, 48.6473, -48.0456, 0.96", "-30.0009, 48.7, -48.3825, 0.96", "-30.0689, 48.7399, -48.6526, 0.96", "-30.1088, 48.7606, -48.8005, 0.96", "-31.0946, 49.2315, -52.4605, 0.37", "-31.9662, 49.599, -55.6853, 0.15", "-32.1215, 49.6568, -56.2509, 0.74", "-32.3001, 49.7206, -56.9391, 1.18", "-32.3305, 49.7318, -57.0615, 1.47" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-28.9394, 41.8116, -31.6903, 0.22", "-29.7983, 42.5551, -31.663, 0.22", "-30.3541, 43.026, -31.6491, 0.22", "-30.8956, 43.4589, -31.7018, 0.22", "-31.4259, 43.8379, -31.794, 0.22", "-31.8583, 44.1263, -31.8844, 0.29", "-32.2949, 44.4012, -31.982, 0.37", "-32.3789, 44.4518, -32.0088, 0.37", "-33.2648, 45.0107, -32.3182, 0.88", "-33.8277, 45.3735, -32.5233, 1.18", "-34.3068, 45.7039, -32.6984, 1.18", "-34.6436, 45.9885, -32.8418, 1.11", "-35.9472, 47.3062, -33.45, 0.22", "-36.4038, 47.8611, -33.6698, 0.22", "-36.446, 47.9344, -33.7072, 0.22", "-36.5618, 48.2532, -33.9081, 0.22", "-36.762, 49.1751, -34.5924, 0.66", "-36.7842, 49.456, -34.8165, 1.25", "-36.77, 49.8236, -35.1157, 1.11", "-36.6931, 51.8235, -36.6934, 1.25", "-36.644, 52.4725, -37.241, 0.66", "-36.6366, 52.5404, -37.2987, 0.66", "-36.4857, 53.7089, -38.2105, 0.22", "-36.422, 54.1791, -38.5595, 0.22", "-36.3709, 54.5866, -38.8263, 0.22", "-36.1569, 56.5865, -39.9183, 0.59", "-36.1037, 56.9658, -40.1717, 1.18", "-36.019, 57.5979, -40.629, 1.18", "-35.8996, 57.9983, -41.5422, 0.52", "-35.7839, 58.4458, -42.6054, 0.29", "-35.7766, 58.4803, -42.6867, 0.29", "-35.633, 59.2326, -44.4506, 1.4", "-35.5826, 59.4893, -45.0473, 1.69", "-34.1382, 66.9217, -62.1936, 0.22", "-34.0104, 67.5714, -63.6214, 0.22", "-33.9252, 68.0232, -64.5636, 0.22", "-33.6666, 69.5735, -67.5774, 1.4", "-33.6072, 69.9983, -68.3356, 1.5", "-33.5655, 70.3628, -68.8947, 1.5", "-33.5959, 72.3257, -69.8755, 0.29", "-33.553, 73.1686, -70.2913, 0.29", "-33.4069, 74.8358, -71.0169, 0.29", "-33.3676, 75.2339, -71.1392, 0.29", "-33.203, 76.4524, -71.4834, 0.74", "-33.0746, 77.0446, -71.6223, 1.11", "-32.6865, 78.3274, -71.833, 1.4", "-32.5643, 78.6457, -71.8572, 1.69", "-32.1672, 79.5728, -71.844, 0.74", "-31.763, 80.5379, -71.8343, 0.15", "-31.6338, 80.908, -71.8575, 0.15", "-31.6074, 81.0056, -71.8761, 0.15", "-31.5041, 81.69, -72.0981, 0.44", "-31.4536, 82.3779, -72.3853, 0.37", "-31.4631, 82.8219, -72.5614, 0.37", "-31.5843, 84.1533, -73.0517, 0.29", "-31.6394, 84.4863, -73.1187, 0.29", "-31.8203, 85.2185, -73.2364, 1.11", "-32.0297, 85.7984, -73.2386, 1.11", "-33.2835, 88.3323, -72.8445, 1.11", "-33.3041, 88.4867, -72.9858, 1.11", "-33.3006, 88.6109, -73.152, 1.11", "-33.3052, 90.0981, -74.9082, 0.29", "-33.2906, 90.2882, -75.1478, 0.29", "-33.2789, 90.4535, -75.3477, 0.29", "-33.1906, 91.5528, -76.6932, 1.25", "-33.1825, 91.6705, -76.8296, 1.25", "-33.1644, 91.9833, -77.1651, 1.55", "-33.1003, 94.8005, -80.0275, 0.22", "-33.0948, 95.2699, -80.4952, 0.22", "-33.0947, 95.3357, -80.5556, 0.22", "-33.1073, 96.599, -81.5835, 1.25", "-33.1049, 96.987, -81.8612, 1.47", "-33.0821, 98.8902, -82.9849, 0.74", "-33.0602, 100.492, -83.6703, 0.22", "-33.0344, 101.357, -84.0108, 0.52", "-33.0313, 102.011, -84.2162, 0.52", "-33.0578, 102.994, -84.4215, 0.29", "-33.0888, 103.639, -84.5037, 0.44", "-33.1591, 104.563, -84.5122, 0.74", "-33.2575, 105.485, -84.4883, 1.18", "-33.3901, 106.759, -84.4933, 0.22", "-33.4323, 107.432, -84.5377, 0.22", "-33.381, 107.954, -84.6391, 0.22", "-33.3592, 108.025, -84.693, 0.22", "-33.0002, 108.835, -85.5057, 0.29", "-32.971, 108.888, -85.5708, 0.29", "-32.4712, 109.772, -86.7237, 0.29", "-31.9485, 110.638, -87.8919, 1.47", "-30.4335, 113.05, -91.1135, 0.52", "-29.9245, 113.843, -92.1472, 0.07", "-29.3232, 114.749, -93.3987, 0.74", "-28.9558, 115.299, -94.1523, 0.96", "-28.3548, 116.245, -95.4028, 0.15", "-28.0074, 116.82, -96.1407, 0.15", "-27.3678, 117.879, -97.4089, 1.84", "-26.1641, 120.145, -100.182, 0.66", "-25.952, 120.616, -100.736, 0.22", "-25.7523, 121.13, -101.35, 0.22", "-25.7207, 121.275, -101.516, 0.22", "-25.7158, 121.336, -101.585, 0.22", "-25.7564, 121.707, -101.877, 0.22", "-25.8144, 122.315, -102.103, 0.22", "-25.7843, 122.654, -102.287, 0.22", "-25.7686, 122.739, -102.341, 0.22", "-25.7245, 123.133, -102.652, 0.81", "-25.7065, 123.417, -102.949, 0.81", "-25.5062, 125.008, -104.674, 0.29", "-25.4979, 125.07, -104.741, 0.29", "-25.4771, 125.252, -104.936, 0.29", "-25.3794, 126.227, -105.977, 1.55", "-25.1728, 127.719, -107.933, 0.15", "-25.0492, 128.455, -108.926, 0.15", "-24.9959, 128.732, -109.297, 0.15", "-24.7577, 129.657, -110.488, 1.18", "-24.7258, 129.758, -110.614, 1.18", "-23.6183, 132.719, -114.111, 0.37", "-23.3822, 133.356, -114.849, 1.4", "-23.0747, 134.223, -115.913, 0.07", "-22.8427, 134.89, -116.727, 0.07", "-22.8147, 134.977, -116.824, 0.07", "-22.7485, 135.259, -117.089, 0.07", "-22.7275, 135.714, -117.4, 0.07", "-22.7558, 137.27, -118.512, 0.07", "-22.789, 138.189, -119.129, 0.96", "-22.8061, 138.732, -119.484, 1.25", "-22.7798, 139.43, -119.946, 1.11", "-22.599, 141.345, -121.178, 0.29", "-22.525, 141.88, -121.591, 0.29", "-22.4357, 142.437, -122.037, 0.29", "-22.3803, 142.733, -122.295, 0.29", "-22.0984, 144.174, -123.692, 1.25", "-22.0521, 144.457, -123.986, 1.4", "-21.8556, 146.957, -126.747, 0.37", "-21.8639, 147.251, -127.087, 0.74", "-21.9192, 147.589, -127.517, 0.88", "-21.9577, 147.714, -127.687, 0.88", "-22.1763, 148.219, -128.399, 0.22", "-22.4769, 148.799, -129.264, 0.44", "-22.5702, 148.942, -129.462, 0.81", "-23.344, 150.032, -130.956, 0.37", "-23.5292, 150.241, -131.218, 0.37", "-24.6395, 151.339, -132.388, 0.07", "-24.8914, 151.565, -132.586, 0.07", "-25.712, 152.267, -133.011, 0.74", "-26.1605, 152.652, -133.179, 0.96", "-27.5461, 153.801, -133.449, 0.22", "-28.1327, 154.275, -133.534, 0.22", "-28.4077, 154.483, -133.555, 0.22", "-28.6253, 154.658, -133.585, 0.22", "-29.4361, 155.392, -133.89, 0.81", "-29.5484, 155.505, -133.947, 0.81", "-29.9793, 155.973, -134.259, 1.33", "-30.6463, 156.69, -134.883, 1.25", "-30.7971, 156.861, -135.046, 1.25", "-31.9513, 158.34, -136.441, 0.29", "-31.9912, 158.397, -136.495, 0.29", "-32.3861, 159.059, -137.142, 0.88", "-32.9792, 160.132, -138.241, 0.22", "-33.189, 160.521, -138.645, 0.52", "-33.4996, 161.066, -139.213, 0.52", "-33.8106, 161.6, -139.746, 0.15", "-34.4441, 162.671, -140.772, 0.96", "-34.6623, 163.04, -141.107, 0.96", "-34.7977, 163.267, -141.321, 1.03", "-35.7768, 164.952, -142.905, 0.29", "-35.9773, 165.373, -143.345, 0.29", "-36.0757, 165.625, -143.6, 0.29", "-36.0968, 165.687, -143.661, 0.29", "-36.3835, 166.683, -144.591, 0.29", "-36.5548, 167.36, -145.198, 1.55", "-37.2908, 170.549, -147.78, 0.22", "-37.416, 171.043, -148.172, 0.22", "-37.4391, 171.122, -148.232, 0.22", "-37.6799, 171.793, -148.697, 0.22", "-37.7115, 171.864, -148.742, 0.22", "-38.1697, 172.718, -149.296, 0.22", "-38.7197, 173.541, -149.74, 0.88", "-38.9675, 173.872, -149.963, 1.25", "-39.4508, 174.478, -150.429, 1.03", "-39.9561, 175.044, -150.93, 1.03", "-41.5102, 176.635, -152.44, 0.44", "-41.6168, 176.734, -152.546, 0.44", "-42.0279, 177.11, -152.916, 0.44", "-42.0822, 177.161, -152.963, 0.44", "-42.4462, 177.513, -153.251, 0.52", "-42.7266, 177.804, -153.406, 0.52", "-42.8008, 177.878, -153.416, 0.52", "-43.2169, 178.309, -153.485, 0.52", "-43.2169, 178.309, -153.485, 0.52", "-43.3619, 178.458, -153.508, 0.52", "-44.065, 179.183, -153.61, 0.07", "-44.4549, 179.575, -153.661, 0.07", "-44.9885, 179.957, -153.703, 0.07", "-45.8279, 180.478, -153.744, 0.96", "-46.1556, 180.668, -153.765, 1.18", "-46.7781, 181.021, -153.804, 1.18", "-47.1352, 181.229, -153.828, 1.18", "-48.9725, 182.408, -153.98, 0.22", "-49.5201, 182.786, -154.031, 0.29", "-50.6343, 183.569, -154.152, 0.96", "-50.9715, 183.807, -154.191, 1.18", "-51.9062, 184.529, -154.303, 0.37", "-52.4956, 185.059, -154.373, 0.22", "-52.8549, 185.486, -154.414, 0.22", "-53.2682, 186.019, -154.442, 0.22", "-53.3281, 186.105, -154.44, 0.22", "-53.8982, 186.961, -154.405, 0.22", "-54.2631, 187.62, -154.344, 0.29", "-54.4818, 188.079, -154.303, 0.22", "-54.6754, 188.516, -154.268, 0.22", "-54.7311, 188.635, -154.26, 0.22", "-54.8494, 188.82, -154.256, 0.22", "-54.9782, 188.966, -154.263, 0.22", "-55.3859, 189.352, -154.288, 0.81", "-55.7926, 189.703, -154.315, 1.18", "-55.8608, 189.761, -154.319, 1.18", "-56.5191, 190.282, -154.356, 1.03", "-56.697, 190.418, -154.365, 1.03", "-57.9316, 191.384, -154.409, 0.29", "-58.3436, 191.699, -154.419, 0.29", "-58.4016, 191.749, -154.429, 0.29", "-58.9364, 192.27, -154.599, 0.29", "-59.2262, 192.609, -154.782, 0.29", "-59.4553, 192.933, -154.999, 0.37", "-59.48, 192.993, -155.075, 0.37", "-59.8262, 193.977, -156.46, 0.37", "-59.9128, 194.256, -156.869, 1.11", "-60.0513, 194.799, -157.716, 1.33", "-60.0764, 194.904, -157.893, 1.33", "-60.5231, 196.789, -161.285, 0.07", "-60.5958, 197.091, -161.854, 0.81" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-28.3152, 24.5961, -10.0669, 1.11", "-28.7256, 24.4138, -10.1985, 1.11", "-29.4613, 24.1927, -10.3913, 0.37", "-29.8066, 24.1229, -10.4579, 0.37", "-30.4236, 24.0233, -10.56, 0.88", "-30.7464, 23.9782, -10.6163, 1.18", "-31.1625, 23.9597, -10.7053, 1.25", "-31.6207, 23.9946, -10.8044, 1.18", "-32.1599, 24.0975, -10.918, 0.59", "-32.4209, 24.1613, -10.982, 0.52", "-32.7018, 24.234, -11.0635, 0.52", "-33.6708, 24.4706, -11.3619, 0.52", "-33.9621, 24.5399, -11.4587, 0.52", "-34.2531, 24.6133, -11.5574, 0.81", "-34.6393, 24.719, -11.6869, 1.11", "-34.977, 24.8197, -11.7843, 1.18", "-35.3148, 24.9318, -11.8906, 0.81", "-35.9804, 25.1561, -12.1414, 0.52", "-36.3412, 25.297, -12.2987, 1.03", "-36.5523, 25.3974, -12.3983, 1.18", "-37.0521, 25.6675, -12.6419, 1.11", "-37.7713, 26.0812, -12.9929, 0.52", "-38.1666, 26.3047, -13.1832, 0.22", "-38.5139, 26.4798, -13.3444, 0.59", "-38.8364, 26.6047, -13.485, 0.74", "-39.3828, 26.74, -13.697, 0.37", "-39.7085, 26.7507, -13.8165, 0.37", "-39.9708, 26.728, -13.8982, 0.74", "-40.354, 26.6797, -14.0222, 1.18", "-40.7759, 26.6037, -14.1696, 0.96", "-41.099, 26.5389, -14.2848, 0.44", "-42.0642, 26.3561, -14.6281, 0.37", "-42.4174, 26.2928, -14.7555, 0.37", "-42.7265, 26.2476, -14.8663, 0.88", "-43.1568, 26.2086, -15.0167, 1.55", "-43.6214, 26.1891, -15.1739, 1.69", "-43.8089, 26.1946, -15.227, 1.69" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-28.3152, 24.5961, -10.0669, 0.59", "-29.384, 25.6127, -8.44418, 0.59", "-30.0234, 26.1374, -7.61216, 0.74", "-31.7614, 27.4036, -5.36675, 0.44", "-33.0216, 28.2554, -3.85614, 0.37", "-35.7997, 30.0072, -0.662082, 0.37", "-37.1367, 30.7887, 0.803859, 0.52", "-37.763, 31.0822, 1.44682, 0.74", "-40.0259, 31.947, 3.69898, 0.74", "-41.2508, 32.3975, 4.91273, 0.22", "-42.1692, 32.7319, 5.89657, 0.74", "-42.7446, 32.958, 6.49676, 0.74", "-43.6271, 33.3588, 7.47527, 0.74", "-44.7564, 33.9476, 8.6301, 0.15", "-46.6321, 34.8518, 10.0629, 0.96", "-47.4991, 35.2241, 10.6394, 0.96", "-48.1717, 35.4955, 10.9827, 0.96", "-49.2401, 35.8956, 11.4381, 0.81", "-50.4063, 36.2887, 11.7761, 0.44", "-52.5809, 36.9016, 12.2408, 0.22", "-53.0862, 37.0048, 12.3272, 0.52", "-53.6584, 37.1079, 12.4418, 0.81", "-55.2349, 37.3939, 12.7972, 0.52", "-57.0625, 37.7938, 13.2077, 0.22", "-57.9002, 38.0199, 13.3876, 0.37", "-58.4704, 38.2459, 13.499, 0.37", "-58.5761, 38.2914, 13.5021, 0.37", "-59.1998, 38.5371, 13.4695, 0.44", "-61.6459, 39.4587, 13.1707, 0.29", "-62.4501, 39.7488, 13.0615, 1.03", "-63.8173, 40.2267, 12.8656, 1.03", "-66.8562, 41.2738, 12.4518, 0.29", "-68.6772, 41.8712, 12.1253, 0.29", "-69.7993, 42.2446, 11.8912, 0.81", "-71.435, 42.8387, 11.5075, 0.52", "-71.8353, 42.979, 11.4132, 0.96", "-72.7464, 43.275, 11.2081, 1.25", "-74.6508, 44.0239, 10.8608, 0.81", "-76.3388, 44.8517, 10.3132, 0.29", "-77.2117, 45.3252, 9.95958, 0.81", "-90.0796, 50.9826, 12.5126, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-20.0914, 45.2872, -9.85424, 1.33", "-22.6045, 47.4344, -15.257, 1.33", "-23.021, 47.8008, -16.1488, 1.18", "-23.3674, 48.1285, -16.8723, 0.96", "-24.4762, 49.2155, -19.153, 0.44", "-24.5102, 49.2504, -19.2208, 0.44", "-25.693, 50.5381, -21.5153, 0.37", "-25.8085, 50.6931, -21.6943, 0.88", "-26.1939, 51.2045, -22.2901, 0.22", "-26.2254, 51.2492, -22.3358, 0.22", "-26.7534, 52.1408, -22.9908, 1.11", "-27.0043, 52.6238, -23.2702, 1.47", "-27.4624, 53.5679, -23.6533, 0.37", "-27.6143, 53.8631, -23.7701, 0.22", "-27.9231, 54.4452, -23.9958, 0.22", "-28.36, 55.2734, -24.2768, 1.03", "-29.1309, 56.78, -24.6962, 0.22", "-29.3747, 57.2668, -24.8137, 0.29", "-29.6792, 57.9233, -24.9722, 0.29", "-29.9849, 58.6152, -25.1469, 0.81", "-30.3261, 59.4399, -25.3558, 1.55", "-30.6049, 60.1669, -25.5275, 1.55", "-30.664, 60.3382, -25.5706, 1.55", "-31.177, 62.1296, -26.083, 0.22", "-31.272, 62.528, -26.2094, 0.22", "-31.2902, 62.6186, -26.2385, 0.22", "-31.3802, 63.1457, -26.4202, 0.44", "-31.4444, 63.571, -26.5612, 0.59", "-31.532, 64.3369, -26.7682, 0.22", "-31.5361, 64.421, -26.7812, 0.22", "-31.5688, 65.1168, -26.9216, 0.22", "-31.5792, 65.1836, -26.9468, 0.22", "-31.6479, 65.4843, -27.0922, 0.22", "-31.7843, 66.1017, -27.4374, 1.25", "-31.8525, 66.406, -27.6192, 1.25", "-31.9828, 66.9966, -27.9691, 1.25", "-32.3489, 68.8787, -29.0289, 0.44", "-32.4767, 69.4987, -29.3845, 0.29", "-32.6186, 70.1528, -29.7495, 0.29", "-32.6907, 70.3898, -29.8879, 0.29", "-32.7692, 70.6787, -30.0536, 0.29", "-32.9953, 71.6904, -30.5846, 0.88", "-33.1795, 72.7724, -31.107, 0.29", "-33.2991, 73.4566, -31.4804, 0.29", "-33.5669, 74.8606, -32.2948, 1.25", "-33.8083, 76.2121, -33.0887, 1.4", "-33.8922, 76.743, -33.4046, 1.4", "-34.0304, 77.6397, -33.9818, 0.29", "-34.1719, 78.7902, -34.7194, 1.03", "-34.2033, 78.9505, -34.8443, 1.03", "-34.4373, 79.8844, -35.6127, 0.29", "-34.525, 80.106, -35.8138, 0.44", "-34.9453, 80.9033, -36.729, 0.52", "-34.9898, 80.9838, -36.8283, 0.66", "-35.666, 82.3974, -38.6542, 0.22", "-35.8626, 82.9558, -39.4024, 1.11", "-35.8825, 83.0357, -39.5136, 1.11", "-36.0521, 84.4026, -41.3828, 1.25", "-36.002, 85.2076, -42.4268, 0.52", "-35.8347, 85.9594, -43.3941, 0.52", "-35.6078, 86.469, -44.0772, 0.44", "-35.5772, 86.5241, -44.152, 0.44", "-35.0605, 87.3506, -45.159, 0.96", "-34.8389, 87.6674, -45.4849, 1.18", "-34.7028, 87.867, -45.7018, 1.11", "-34.3411, 88.558, -46.4469, 0.88", "-33.8731, 89.371, -47.3549, 0.22", "-33.6367, 89.7803, -47.848, 0.81", "-33.5133, 90.005, -48.1095, 0.88", "-33.4563, 90.1592, -48.3064, 0.88", "-33.2359, 90.9834, -49.4215, 0.66", "-33.0746, 91.7129, -50.4472, 0.22", "-32.9731, 92.5025, -51.6738, 0.81", "-32.9372, 92.915, -52.3523, 0.81", "-32.8266, 93.8912, -53.9893, 0.29", "-32.8084, 93.9826, -54.1313, 0.29", "-32.6765, 94.3932, -54.7089, 0.29", "-32.651, 94.4396, -54.774, 0.29", "-31.9648, 95.0809, -55.5907, 1.11", "-31.5464, 95.3769, -55.9668, 1.47", "-30.3017, 96.3322, -57.3504, 0.88", "-30.2316, 96.4138, -57.4814, 0.88", "-29.6217, 97.5572, -59.3852, 0.29", "-29.5642, 97.7141, -59.656, 0.29", "-29.5827, 97.7672, -59.813, 0.29", "-29.9516, 98.4056, -62.0469, 0.29", "-30.0739, 98.5518, -62.6332, 0.29", "-30.1417, 98.6281, -62.9383, 0.29", "-30.1831, 98.6697, -63.0942, 0.29", "-31.5427, 100.068, -68.1631, 1.33", "-31.6788, 100.212, -68.6541, 1.4", "-31.8035, 100.354, -69.0927, 1.4", "-32.2019, 100.77, -70.3409, 0.29", "-32.4318, 101.018, -70.9997, 0.29", "-32.4651, 101.066, -71.1024, 0.29", "-32.6339, 101.548, -71.7925, 0.81", "-32.6973, 101.735, -72.1268, 0.96", "-32.7103, 101.775, -72.2023, 0.96", "-33.0915, 102.979, -74.716, 0.22", "-33.2214, 103.403, -75.7398, 1.18", "-33.2513, 103.531, -76.0748, 1.03", "-33.4426, 104.634, -78.8578, 0.22", "-33.4788, 104.823, -79.3063, 0.22", "-33.5144, 105.002, -79.7011, 0.22", "-33.7154, 106.023, -81.7436, 0.22", "-33.8098, 106.484, -82.6219, 1.33", "-33.9589, 107.47, -84.3871, 0.29", "-34.0261, 108.387, -85.8612, 1.18", "-34.0653, 108.719, -86.3687, 0.74", "-34.0907, 108.869, -86.5725, 0.74", "-34.3814, 109.558, -87.5009, 0.29", "-34.5134, 109.764, -87.7942, 0.29", "-34.7127, 110.029, -88.2031, 0.29", "-35.3881, 110.862, -89.4936, 1.62", "-35.53, 111.024, -89.765, 1.62", "-37.4248, 112.993, -93.2981, 0.29", "-37.6966, 113.247, -93.7902, 0.29", "-38.0952, 113.586, -94.5108, 0.29", "-38.1303, 113.616, -94.5802, 0.29", "-39.0557, 114.308, -96.3121, 1.11", "-39.225, 114.406, -96.5842, 0.96", "-39.2819, 114.425, -96.6455, 0.96", "-40.1617, 114.557, -97.7573, 0.81", "-40.5168, 114.598, -98.215, 0.81", "-41.6106, 114.74, -99.5873, 0.22", "-41.6842, 114.752, -99.6781, 0.74", "-41.8519, 114.777, -99.8939, 0.74", "-45.4684, 115.389, -104.626, 1.25", "-47.803, 115.845, -107.708, 0.22", "-48.5844, 116.015, -108.824, 1.47", "-49.9898, 116.385, -111.068, 0.15", "-52.0284, 116.99, -114.495, 0.59", "-52.4936, 117.15, -115.321, 0.22", "-52.8942, 117.333, -116.11, 0.96", "-54.4278, 118.257, -119.78, 1.11", "-55.5788, 119.114, -123.066, 0.22", "-55.7182, 119.262, -123.556, 0.22", "-55.7858, 119.371, -123.84, 0.22", "-56.0483, 119.808, -124.98, 1.33", "-56.2655, 120.254, -125.956, 1.33", "-56.2856, 120.313, -126.032, 1.33", "-56.5159, 121.36, -126.929, 0.29", "-56.5721, 121.595, -127.123, 0.29", "-56.6343, 121.847, -127.304, 0.29", "-56.7242, 122.188, -127.573, 0.29", "-56.7496, 122.339, -127.708, 0.29", "-56.8041, 122.509, -128.015, 0.29", "-56.8922, 122.714, -128.504, 0.29", "-56.9378, 122.832, -128.789, 0.29", "-57.2744, 123.704, -130.95, 1.47", "-57.2928, 123.751, -131.061, 1.47", "-57.9383, 125.272, -134.557, 0.29", "-57.9719, 125.345, -134.717, 0.29", "-58.1655, 125.757, -135.53, 0.29", "-58.1876, 125.792, -135.601, 0.29", "-58.4207, 126.148, -136.253, 0.29", "-58.4961, 126.272, -136.46, 0.29", "-58.7481, 126.955, -137.359, 0.29", "-58.8076, 127.137, -137.607, 1.25", "-59.5672, 129.449, -140.835, 0.29", "-59.6492, 129.724, -141.203, 0.96", "-59.772, 130.159, -141.774, 1.4", "-60.1028, 131.426, -143.4, 0.22", "-60.3268, 132.464, -144.642, 0.37", "-60.3682, 132.729, -144.926, 0.37", "-60.3143, 133.922, -145.767, 0.37", "-60.3207, 134.085, -145.89, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-20.0914, 45.2872, -9.85424, 0.44", "-20.1715, 45.3541, -9.77721, 0.44", "-20.3046, 45.4753, -9.65983, 0.44", "-20.8448, 46.0467, -9.22291, 0.44", "-21.2626, 46.5644, -8.91476, 0.44", "-21.8596, 47.4909, -8.37128, 0.44", "-22.1588, 48.081, -8.04608, 1.03", "-22.3031, 48.438, -7.8654, 1.33", "-22.503, 49.069, -7.57525, 1.18", "-22.603, 49.77, -7.19084, 0.96", "-22.6327, 50.7001, -6.61908, 0.88", "-22.5848, 51.6928, -5.97795, 0.52", "-22.5405, 52.0088, -5.7539, 0.52", "-22.5076, 52.1628, -5.64192, 1.11", "-21.9504, 54.1135, -4.23867, 0.74", "-21.817, 54.484, -4.00421, 1.11", "-21.6759, 54.872, -3.80615, 1.18", "-21.5857, 55.0967, -3.71108, 1.77", "-21.45, 55.4713, -3.6052, 1.4", "-21.2496, 56.1571, -3.54679, 0.81", "-21.0394, 57.0471, -3.63997, 0.44", "-20.9249, 57.5155, -3.66012, 0.44", "-20.8535, 57.7741, -3.66314, 0.44", "-20.7142, 58.1234, -3.63417, 0.44", "-20.5867, 58.3793, -3.59505, 0.66", "-20.0771, 59.1251, -3.29365, 0.59", "-19.8784, 59.3905, -3.15678, 0.81", "-19.3915, 60.0548, -2.79843, 0.44", "-18.815, 60.8267, -2.24124, 0.59", "-18.626, 61.093, -2.03478, 0.44", "-17.6416, 62.5919, -0.901512, 0.37", "-17.4659, 62.8828, -0.711354, 1.25", "-17.1943, 63.37, -0.434213, 1.47", "-16.2929, 65.2548, 0.436128, 0.88", "-16.0328, 65.8381, 0.676708, 0.44", "-15.7386, 66.505, 0.888957, 0.52", "-15.2231, 67.6774, 1.09336, 0.96", "-14.89, 68.3782, 1.17529, 1.03", "-14.5454, 69.0553, 1.26318, 0.59", "-13.4912, 71.1749, 1.49509, 0.59", "-12.955, 72.2178, 1.6767, 1.18", "-12.568, 73.1061, 1.83162, 1.4", "-12.4612, 73.4121, 1.89042, 1.4", "-11.9748, 75.2167, 2.19825, 0.81", "-11.8449, 76.0004, 2.30797, 0.29", "-11.8192, 76.5495, 2.3695, 0.29", "-11.8307, 78.3569, 2.92471, 0.52", "-11.8771, 79.2343, 3.334, 1.11", "-11.9278, 79.8087, 3.65433, 1.25", "-11.981, 80.1883, 3.89434, 1.4", "-12.1114, 80.9635, 4.46796, 1.03", "-12.5079, 83.0474, 6.16104, 0.52", "-12.6739, 83.8029, 6.84086, 0.96", "-12.8043, 84.2533, 7.22929, 0.96", "-12.9924, 84.7012, 7.56332, 0.59", "-13.3602, 85.3615, 7.92822, 0.59", "-13.6654, 85.7863, 8.05854, 1.03", "-14.1297, 86.3415, 8.08931, 1.33", "-14.5822, 86.8677, 8.07175, 0.74", "-15.7546, 88.2229, 8.01427, 0.59", "-16.1572, 88.6808, 7.98576, 0.59", "-16.3503, 88.8977, 7.97243, 0.88", "-16.8314, 89.4386, 7.95541, 0.88", "-17.277, 89.9452, 7.9391, 0.74", "-17.9986, 90.7676, 7.93557, 0.37", "-18.6592, 91.5115, 7.98178, 0.37", "-19.0407, 91.915, 8.01938, 0.81", "-19.5858, 92.4732, 8.09018, 1.11", "-19.8693, 92.7656, 8.12662, 1.03", "-20.1185, 93.0319, 8.15415, 1.03", "-20.4791, 93.4457, 8.17659, 0.88", "-21.1442, 94.2922, 8.23216, 0.29", "-21.4471, 94.7134, 8.25741, 0.44", "-21.9452, 95.4679, 8.3028, 0.52", "-22.1286, 95.7619, 8.32616, 0.74", "-22.2991, 96.0431, 8.35112, 0.74", "-22.8684, 97.0607, 8.48024, 0.29", "-23.1461, 97.6104, 8.55073, 1.18", "-23.3138, 98.0397, 8.6022, 1.18", "-23.4262, 98.3911, 8.64479, 1.18", "-23.5632, 98.8799, 8.69582, 0.96", "-23.7011, 99.4523, 8.73582, 0.88", "-23.9489, 100.766, 8.76812, 0.37", "-24.1838, 102.413, 8.73642, 0.29", "-24.251, 103.06, 8.70098, 0.29", "-24.2783, 103.46, 8.66553, 0.44", "-24.2844, 103.726, 8.63082, 0.66", "-24.292, 104.045, 8.54777, 0.52", "-24.2627, 104.899, 8.19517, 0.52", "-24.2312, 105.231, 7.97968, 0.66", "-24.2114, 105.478, 7.73972, 0.88", "-24.1964, 105.812, 7.36517, 0.88", "-24.2192, 106.8, 6.12266, 1.03", "-24.24, 107.135, 5.67498, 1.25", "-24.2707, 107.465, 5.23281, 1.4", "-24.3741, 108.614, 3.74698, 0.44", "-24.3864, 109.043, 3.27911, 0.37", "-24.3553, 109.818, 2.58502, 0.88", "-24.3028, 110.18, 2.34526, 1.18", "-24.2146, 110.707, 2.08147, 1.4", "-24.1378, 111.109, 1.93058, 1.03", "-23.7445, 112.814, 1.48424, 0.29", "-23.5964, 113.434, 1.34203, 0.29", "-23.3903, 114.319, 1.17965, 0.37", "-23.1504, 115.568, 0.946467, 0.37", "-23.0636, 116.165, 0.836397, 0.88", "-23.0344, 116.433, 0.785645, 1.25", "-22.9906, 117.122, 0.654395, 1.47", "-22.9691, 117.699, 0.538556, 1.03", "-22.9604, 118.805, 0.302653, 0.44", "-22.9655, 119.365, 0.172702, 0.44", "-23.0034, 120.769, -0.157699, 0.44", "-23.0164, 121.089, -0.235461, 0.74", "-23.042, 121.548, -0.348016, 0.74", "-23.0694, 122.0, -0.459229, 0.74", "-23.1302, 122.79, -0.641019, 0.81", "-23.1607, 123.049, -0.705254, 1.4", "-23.2897, 123.568, -0.836789, 2.06", "-23.425, 124.141, -1.00061, 2.06" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-0.461738, 45.1033, -1.09649, 1.55", "-1.008, 46.5812, -1.15395, 1.55", "-1.27691, 47.3834, -1.17866, 1.11", "-1.60527, 48.93, -1.17214, 0.74", "-1.71934, 49.9254, -1.13918, 0.88", "-1.75029, 50.9404, -1.08025, 1.33", "-1.73134, 51.603, -0.963001, 1.25", "-1.54136, 52.7072, -0.551132, 0.96", "-1.01253, 54.4004, 0.349692, 0.66", "-0.64705, 55.1435, 0.770559, 1.11", "-0.177723, 55.8931, 1.20809, 1.4", "1.31362, 57.9468, 2.39155, 1.11", "2.48407, 59.3785, 3.21694, 0.81", "3.04462, 59.9743, 3.60443, 0.81", "4.78998, 61.7347, 4.77729, 0.44", "5.2537, 62.2361, 5.16351, 0.88", "5.60034, 62.621, 5.48327, 0.88", "5.85078, 62.9085, 5.71728, 0.88", "7.37592, 64.7255, 7.35793, 0.59", "7.81843, 65.238, 7.87473, 0.88", "9.36722, 67.1363, 9.85813, 1.4", "9.9408, 67.8676, 10.5582, 1.33", "10.5357, 68.6781, 11.2857, 1.33", "11.6534, 70.2967, 12.525, 0.81", "12.2262, 71.1613, 13.0555, 0.96", "12.8598, 72.1153, 13.5646, 1.25", "13.2798, 72.7634, 13.8292, 1.25", "14.0351, 74.1139, 14.3639, 0.88", "14.5589, 75.2318, 14.7993, 0.74", "14.8117, 75.9368, 15.0571, 0.74", "14.9949, 76.5525, 15.2746, 0.74", "15.2547, 77.4383, 15.5849, 0.74", "15.363, 77.8491, 15.713, 0.96", "15.5464, 78.7037, 15.9364, 1.03", "15.6206, 79.3561, 16.1287, 1.03", "15.6372, 79.805, 16.2614, 0.88", "15.6254, 80.596, 16.5116, 0.59", "15.5871, 81.2942, 16.7815, 0.29", "15.5456, 82.0808, 17.1432, 0.59", "15.5346, 82.6308, 17.4345, 0.59", "15.5585, 83.2133, 17.8567, 0.52", "15.6107, 83.7858, 18.409, 0.59", "15.6936, 84.4875, 19.1977, 0.74", "15.7403, 84.7647, 19.5353, 0.74", "15.8488, 85.1597, 19.9973, 0.59", "16.1842, 86.3652, 21.0442, 0.29", "16.4052, 87.2359, 21.5297, 0.81", "16.573, 88.1108, 21.8049, 1.18", "16.6246, 88.4449, 21.8594, 1.62", "16.8261, 89.9862, 22.0235, 1.18", "17.1192, 92.4952, 22.1687, 0.81", "17.3141, 94.3212, 22.1871, 0.74", "17.4324, 95.5636, 22.1819, 0.88", "17.5254, 96.8325, 22.1875, 0.96", "17.5984, 98.5301, 22.213, 0.29", "17.5926, 99.2152, 22.2402, 0.29", "17.5903, 99.5578, 22.2791, 0.29", "17.5938, 100.277, 22.4231, 0.52", "17.6191, 100.855, 22.5328, 0.96", "17.6696, 101.452, 22.6281, 1.25", "17.7485, 102.185, 22.7197, 1.25", "17.8944, 103.186, 22.8441, 1.25", "18.0633, 104.056, 22.9476, 1.25", "18.226, 104.707, 23.0277, 1.18", "18.4622, 105.495, 23.1253, 1.18" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.461738, 45.1033, -1.09649, 1.84", "0.767872, 46.3312, -1.06187, 1.84", "2.50029, 48.0637, -0.924908, 0.44", "3.04404, 48.6189, -0.882286, 1.25", "3.39036, 48.9917, -0.900942, 1.25", "3.95875, 49.6834, -0.975015, 1.03", "4.89255, 50.9243, -1.13441, 0.59", "5.45237, 51.7307, -1.25879, 1.18", "6.16319, 52.8975, -1.49043, 1.18", "7.26348, 54.8595, -1.8953, 0.66", "7.90359, 56.0615, -2.17258, 0.52", "8.35504, 56.9724, -2.41055, 1.25", "8.77192, 57.9236, -2.6675, 1.25", "9.20786, 59.0233, -2.92802, 1.18", "9.5498, 59.9566, -3.06362, 0.66", "9.59833, 60.0949, -3.06039, 0.66", "9.73885, 60.4824, -3.04579, 0.66", "9.75924, 60.5721, -3.04114, 0.66", "9.81861, 61.2627, -2.98468, 0.66", "9.82277, 61.6659, -2.93517, 0.66", "9.81907, 62.2468, -2.94076, 0.66", "9.81214, 62.4947, -2.95102, 0.66", "9.78352, 62.8098, -2.98189, 0.66", "9.77164, 62.8863, -2.9924, 0.66", "9.63336, 63.5105, -3.09848, 0.66", "9.5236, 64.0277, -3.19063, 0.66", "9.45313, 64.4336, -3.29084, 0.59", "9.39985, 64.8684, -3.41271, 0.22", "9.34599, 65.5661, -3.60713, 0.22", "9.33416, 65.8949, -3.69058, 0.22", "9.33401, 66.2459, -3.77174, 0.22", "9.38078, 67.1034, -3.9304, 0.22", "9.41553, 67.4479, -3.98556, 0.22", "9.47432, 67.8428, -4.03038, 0.59", "9.5754, 68.4813, -4.08271, 1.11", "9.5849, 68.559, -4.08503, 1.11", "9.59915, 68.7888, -4.07757, 1.25", "9.60122, 69.1049, -4.04353, 1.25", "9.59006, 69.4313, -4.0042, 0.88", "9.55779, 69.8245, -3.96068, 0.81", "9.50784, 70.2549, -3.91222, 0.96", "9.47812, 70.4998, -3.88563, 0.96", "9.42919, 70.8191, -3.85167, 0.59", "9.32308, 71.3451, -3.79932, 0.81", "9.0376, 72.4536, -3.7105, 0.29", "8.91894, 72.8446, -3.68746, 0.29", "8.79793, 73.1981, -3.67259, 0.44", "8.70667, 73.48, -3.66442, 0.44", "8.51365, 74.0886, -3.604, 0.44", "8.33957, 74.6537, -3.51803, 0.29", "8.20518, 75.1102, -3.41984, 0.29", "8.11335, 75.4234, -3.34491, 0.59", "7.93583, 76.0787, -3.17859, 0.96", "7.66968, 77.2102, -2.9136, 1.11", "7.48706, 78.092, -2.73312, 0.81", "7.38617, 78.801, -2.58338, 0.74", "7.3521, 79.0894, -2.50827, 0.52", "7.28707, 79.6623, -2.34565, 0.52", "7.20561, 80.4037, -2.13269, 0.81", "7.15193, 81.3253, -1.88102, 0.95", "7.13809, 82.6612, -1.46909, 1.55", "7.16483, 83.6461, -1.15093, 0.74", "7.18854, 84.1452, -0.989947, 0.66", "7.22209, 84.7732, -0.792401, 0.29", "7.25888, 85.3446, -0.615517, 0.29", "7.29471, 86.016, -0.458777, 0.29", "7.30159, 86.5609, -0.399712, 0.37", "7.314, 86.9779, -0.387737, 0.37", "7.31115, 87.5458, -0.327359, 0.44", "7.31115, 87.5458, -0.327359, 0.52", "7.26054, 88.2716, -0.180861, 0.81", "7.22501, 88.7338, -0.0744555, 1.11", "7.19598, 89.2204, 0.0493812, 1.25", "7.11661, 90.8863, 0.524496, 0.29", "7.09978, 91.3098, 0.650663, 0.29", "7.06385, 91.9072, 0.822623, 0.52", "7.04123, 92.1667, 0.893758, 0.81", "7.00277, 92.4798, 0.984993, 0.81", "6.90146, 93.255, 1.20372, 0.29", "6.79967, 93.9756, 1.38188, 0.22", "6.6837, 94.7334, 1.55813, 0.15", "6.59131, 95.3127, 1.68497, 0.22", "6.40439, 96.5491, 1.92569, 0.22", "6.28721, 97.3112, 2.05618, 0.22", "6.23407, 97.7004, 2.11162, 0.22", "6.14511, 98.4894, 2.21228, 1.03", "6.13128, 98.7356, 2.22578, 1.33", "6.10804, 99.4847, 2.20348, 1.47", "6.11344, 99.8554, 2.16626, 1.62", "6.13191, 100.351, 2.11825, 1.55", "6.15908, 100.82, 2.07926, 1.55", "6.24437, 101.962, 2.00257, 0.81", "6.3235, 102.862, 1.9266, 0.22", "6.44594, 104.084, 1.80418, 0.22", "6.49078, 104.524, 1.75612, 0.22", "6.51791, 104.868, 1.71712, 0.59", "6.52318, 105.191, 1.68166, 0.59", "6.48085, 105.724, 1.63646, 0.29", "6.44877, 105.888, 1.59848, 0.29", "6.30925, 106.258, 1.45434, 0.29", "6.20652, 106.509, 1.34859, 0.22", "6.03605, 106.929, 1.17362, 0.22", "5.95974, 107.124, 1.09918, 0.22", "5.65569, 108.003, 0.814244, 0.88", "5.55577, 108.513, 0.662334, 1.33", "5.51582, 109.069, 0.510917, 1.55", "5.54405, 109.379, 0.444524, 1.77", "5.61425, 109.715, 0.397152, 1.47", "5.69806, 110.064, 0.368252, 1.18", "6.01954, 111.207, 0.347929, 0.29", "6.12638, 111.527, 0.346547, 0.29", "6.44326, 112.357, 0.290889, 0.29", "6.81849, 113.283, 0.186924, 0.29", "7.07313, 113.882, 0.0984647, 0.29", "7.37501, 114.556, -0.0173759, 0.29", "7.55884, 114.952, -0.0923395, 0.29", "8.13803, 116.104, -0.335255, 0.88", "8.13803, 116.104, -0.335255, 1.03", "8.44617, 116.575, -0.439073, 1.25", "8.80908, 117.098, -0.528289, 0.96", "8.99029, 117.39, -0.55698, 0.88", "9.24769, 117.855, -0.557883, 1.03", "9.28533, 117.927, -0.555221, 1.03", "9.60608, 118.605, -0.591036, 0.59", "9.66535, 118.75, -0.607957, 0.52", "9.80465, 119.131, -0.683611, 0.52", "9.85479, 119.276, -0.717644, 0.52", "10.2433, 120.392, -0.982081, 0.29", "10.509, 121.141, -1.15576, 0.29", "10.6965, 121.587, -1.37445, 0.29", "10.9013, 122.035, -1.72732, 0.74", "11.069, 122.408, -2.08137, 1.18", "11.2756, 122.916, -2.59677, 1.25", "11.3056, 122.995, -2.68597, 0.96", "11.9554, 124.713, -4.80344, 0.22", "12.2325, 125.5, -5.81331, 0.15", "12.3547, 125.884, -6.30874, 0.15", "12.4512, 126.233, -6.75075, 0.15", "12.4614, 126.283, -6.80841, 0.15", "12.486, 126.526, -6.96227, 0.15", "12.4712, 126.773, -6.94913, 0.15", "12.4356, 127.156, -6.87538, 0.88", "12.363, 127.801, -6.73981, 1.33", "12.3343, 128.12, -6.66865, 1.55", "12.2811, 129.128, -6.4467, 0.15", "12.2724, 129.706, -6.35844, 0.15", "12.2876, 130.113, -6.32923, 0.15", "12.2949, 130.191, -6.331, 0.15", "12.3879, 130.674, -6.40908, 0.15", "12.5495, 131.157, -6.53043, 0.15", "12.9392, 131.917, -6.83308, 0.74", "13.1452, 132.239, -6.97927, 1.33", "13.2384, 132.378, -7.0511, 2.36", "13.3757, 132.609, -7.17772, 2.5", "13.4489, 132.77, -7.27869, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "-7.67148, -63.4478, 20.2399, 0.22", "-7.7159, -63.6593, 20.2148, 0.22", "-7.81128, -64.1137, 20.1608, 0.22", "-7.90414, -64.556, 20.1082, 0.22", "-8.02114, -65.1133, 20.042, 0.22", "-8.04869, -65.2446, 20.0264, 0.22" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "-7.67148, -63.4478, 20.2399, 0.44", "-7.27507, -63.8876, 20.2031, 0.44", "-6.73808, -64.4664, 20.1451, 0.29", "-6.53191, -64.6887, 20.1229, 0.29", "-6.08331, -65.1722, 20.0745, 0.29", "-5.71593, -65.5683, 20.0348, 0.29", "-5.58312, -65.7114, 20.0205, 0.44", "-5.54392, -65.7577, 20.0078, 0.44", "-0.685755, -72.8344, 18.1585, 0.44", "5.27048, -79.1102, 16.841, 0.44", "11.6765, -84.3972, 14.1868, 0.44", "17.1892, -90.1228, 10.5697, 0.44", "22.1975, -96.6953, 7.65767, 0.44", "26.9262, -103.235, 4.2511, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "-34.7706, -62.2571, 38.8722, 0.29", "-45.9358, -64.537, 40.0335, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-34.7706, -62.2571, 38.8722, 0.52", "-43.0819, -62.9905, 43.2159, 0.29", "-50.7632, -64.4265, 48.4606, 0.29", "-58.8004, -66.8725, 52.7168, 0.29", "-66.1503, -70.0282, 57.7122, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "6.55513, -56.638, 8.98358, 0.74", "6.49668, -57.709, 8.97814, 0.74", "6.43477, -58.8433, 8.97238, 0.59", "6.38893, -59.6832, 8.96812, 0.52", "6.34153, -60.5517, 8.96371, 0.66", "6.30093, -61.2956, 8.95993, 0.66", "6.26076, -62.0316, 8.95619, 0.66" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "6.55513, -56.638, 8.98358, 0.29", "7.24064, -56.9165, 9.08295, 0.29", "7.91259, -57.1881, 9.19826, 0.29", "9.24018, -57.7698, 9.46439, 0.29", "9.82812, -58.0389, 9.57339, 0.29", "10.5475, -58.361, 9.69241, 0.96", "10.9311, -58.5288, 9.76162, 1.11", "11.2644, -58.6819, 9.83203, 1.11", "11.7511, -58.9041, 9.93822, 0.88", "12.5724, -59.2782, 10.1111, 0.22", "13.2255, -59.5589, 10.2645, 0.22", "14.3696, -59.9951, 10.5275, 0.22", "14.7882, -60.1379, 10.6406, 0.29", "14.9798, -60.2036, 10.6994, 0.59", "15.2434, -60.2925, 10.7892, 0.59", "16.1779, -60.676, 11.1761, 0.29", "16.3917, -60.7841, 11.2695, 0.44", "16.4438, -60.8128, 11.2921, 0.44", "16.8926, -61.0725, 11.4943, 0.44", "17.292, -61.3484, 11.6664, 0.44", "17.6167, -61.6469, 11.7737, 0.44", "17.6952, -61.7571, 11.7739, 0.44", "25.1289, -65.3861, 14.5836, 0.44", "32.1397, -68.5433, 18.7129, 0.44", "39.3388, -70.7572, 23.0946, 0.44", "45.9133, -72.6134, 28.4971, 0.44", "52.1522, -74.0255, 34.4022, 0.44", "58.6703, -74.8417, 40.1093, 0.44" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "39.9935, -68.2515, -38.1418, 0.81", "41.1668, -68.7326, -37.6881, 0.81", "41.2139, -68.7509, -37.6712, 0.81", "41.8428, -69.0188, -37.4004, 0.81", "42.0591, -69.1197, -37.27, 0.96", "42.884, -69.5231, -36.7062, 0.29", "43.1684, -69.6675, -36.5029, 0.81", "43.5444, -69.8639, -36.2182, 0.29", "44.1911, -70.2083, -35.7203, 0.22", "44.9212, -70.6194, -35.0851, 0.74", "44.9807, -70.6537, -35.0342, 1.18", "45.257, -70.8122, -34.8197, 1.4", "45.4858, -70.9268, -34.6617, 1.11", "45.9455, -71.1285, -34.407, 0.59", "46.5568, -71.3413, -34.1943, 0.22", "46.9596, -71.4656, -34.1064, 0.22", "47.4689, -71.6314, -33.9948, 0.22", "47.7622, -71.7334, -33.9319, 0.22", "47.9745, -71.8229, -33.8879, 0.81", "48.0266, -71.8498, -33.8799, 0.81", "48.4254, -72.0827, -33.8611, 0.81", "48.8977, -72.4082, -33.8553, 0.22", "49.4576, -72.8336, -33.8591, 0.22", "49.8237, -73.1045, -33.861, 0.22", "50.2301, -73.4016, -33.8596, 0.81", "50.2731, -73.4337, -33.859, 0.81", "50.6067, -73.7017, -33.8513, 1.33", "50.9628, -73.9979, -33.8354, 0.66", "51.4438, -74.422, -33.8029, 0.29", "51.8594, -74.7869, -33.762, 0.29", "52.2631, -75.1528, -33.7089, 0.29", "52.6442, -75.4837, -33.656, 0.37", "53.1626, -75.9361, -33.5822, 0.22", "53.3217, -76.0819, -33.5595, 0.96", "53.6989, -76.4403, -33.5059, 1.18", "53.8321, -76.5637, -33.4871, 1.18", "54.7035, -77.3212, -33.3647, 0.22", "55.2351, -77.7213, -33.2881, 0.22", "55.5761, -77.9503, -33.2384, 0.22", "55.856, -78.1244, -33.1636, 1.25", "56.2166, -78.3462, -33.0318, 1.69", "56.6851, -78.6336, -32.8233, 1.11", "57.3289, -79.0712, -32.4396, 0.22", "57.6875, -79.3416, -32.1914, 0.22", "58.6461, -80.1655, -31.4674, 0.22", "58.8621, -80.3721, -31.2935, 0.66", "59.1366, -80.662, -31.0741, 0.96", "59.8039, -81.4335, -30.5501, 0.22", "60.1453, -81.8553, -30.3055, 0.22", "60.4325, -82.1913, -30.1461, 0.66", "60.6448, -82.4138, -30.0488, 1.11", "61.2622, -82.98, -29.732, 0.22", "61.3426, -83.045, -29.6876, 0.22", "61.623, -83.2254, -29.5176, 0.22", "61.9132, -83.3933, -29.3167, 0.22", "62.766, -83.8935, -28.6538, 0.96", "63.0194, -84.0547, -28.4469, 1.4", "63.057, -84.0777, -28.4168, 1.4", "63.6921, -84.4612, -27.8049, 0.29", "63.9172, -84.5943, -27.5656, 0.29", "63.9832, -84.6311, -27.4948, 0.29", "64.3775, -84.8583, -27.0842, 0.29", "64.7232, -85.0775, -26.7267, 0.29", "65.869, -85.8762, -25.6154, 1.18", "65.9023, -85.9018, -25.5824, 1.18", "66.0963, -86.0618, -25.3905, 1.18", "66.8536, -86.7522, -24.6863, 0.22", "67.3763, -87.301, -24.2429, 0.22", "67.7907, -87.7756, -23.9609, 0.22", "68.2025, -88.2691, -23.7689, 0.81", "68.4486, -88.5639, -23.6681, 0.81", "69.0493, -89.2984, -23.4588, 0.22", "69.5343, -89.888, -23.363, 0.22", "69.9154, -90.3404, -23.321, 0.96", "70.2785, -90.7559, -23.3194, 1.55", "70.5853, -91.087, -23.345, 0.96", "70.7318, -91.2366, -23.3608, 0.96", "71.3591, -91.8441, -23.4402, 0.22", "72.0046, -92.4428, -23.5142, 0.22", "72.3808, -92.796, -23.5524, 0.22", "72.735, -93.1231, -23.583, 0.22", "73.0147, -93.3806, -23.5987, 0.74", "73.3911, -93.7142, -23.6039, 1.18", "73.7133, -93.9966, -23.5858, 0.52", "73.7866, -94.0597, -23.58, 0.52", "74.2236, -94.4252, -23.527, 0.22", "74.6221, -94.7478, -23.475, 0.22", "74.6676, -94.7854, -23.4688, 0.22", "74.7626, -94.8662, -23.4554, 0.96", "74.8051, -94.9076, -23.4516, 0.96", "75.1648, -95.2974, -23.46, 1.33", "75.5272, -95.7291, -23.5046, 0.29", "75.9253, -96.2354, -23.5833, 0.29", "75.9569, -96.2764, -23.5908, 0.29", "76.3502, -96.8237, -23.7072, 0.29", "76.6256, -97.2393, -23.8091, 0.74", "76.6517, -97.2846, -23.8226, 0.74", "76.7257, -97.4102, -23.8593, 0.74", "76.7719, -97.4699, -23.8695, 0.74", "77.0003, -97.7148, -23.9015, 0.74", "77.0393, -97.7516, -23.9043, 0.74", "77.1625, -97.8591, -23.9097, 0.74", "77.8426, -98.3427, -23.8765, 0.22", "78.5624, -98.7657, -23.7987, 0.22", "79.187, -99.0707, -23.6574, 0.22", "79.3585, -99.1429, -23.6048, 1.25", "79.601, -99.2361, -23.516, 1.47", "80.6545, -99.582, -23.0715, 0.22", "81.0674, -99.7005, -22.8098, 0.22", "81.7706, -99.9179, -22.2607, 0.29", "82.0784, -100.024, -21.9965, 0.81", "82.3369, -100.125, -21.7689, 1.25", "82.5623, -100.228, -21.5658, 1.33", "83.6599, -100.812, -20.5784, 0.22", "84.2631, -101.142, -20.039, 0.22", "84.5381, -101.296, -19.8101, 0.22", "84.8875, -101.497, -19.4693, 0.59", "84.9315, -101.525, -19.4235, 0.59", "85.0738, -101.62, -19.2726, 0.96", "85.1072, -101.643, -19.2401, 0.96", "85.6402, -102.059, -18.5003, 0.29", "86.3333, -102.605, -17.5465, 0.29", "86.5902, -102.801, -17.2167, 0.29", "86.6301, -102.829, -17.1698, 0.29", "86.8836, -102.992, -16.9212, 0.29", "88.1707, -103.758, -15.9489, 0.22", "88.9527, -104.22, -15.3809, 0.96", "89.2625, -104.395, -15.1717, 1.33", "89.5006, -104.518, -15.0013, 0.81", "90.2127, -104.855, -14.5063, 0.22", "90.6605, -105.041, -14.2038, 0.22", "91.9516, -105.569, -13.3831, 0.66", "92.0742, -105.622, -13.2828, 0.96", "92.3971, -105.761, -12.9866, 0.29", "92.8464, -105.947, -12.5189, 0.22", "93.039, -105.998, -12.274, 0.81" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "39.9935, -68.2515, -38.1418, 1.25", "40.0954, -68.3951, -38.2466, 1.25", "40.9791, -69.6491, -39.0068, 0.29", "41.4234, -70.2976, -39.3505, 0.29", "42.2147, -71.49, -39.9157, 0.29", "42.5925, -72.0835, -40.1649, 0.29", "43.185, -73.0197, -40.5508, 0.29", "43.4864, -73.5168, -40.7193, 0.29", "43.6746, -73.8518, -40.7958, 0.96", "43.8586, -74.1924, -40.8561, 1.4", "44.165, -74.7495, -40.9693, 0.88", "44.7802, -75.8387, -41.2678, 0.22", "45.2658, -76.675, -41.5946, 0.22", "45.7124, -77.4032, -41.9229, 0.22", "46.4532, -78.4941, -42.4781, 0.22", "47.2203, -79.6266, -43.0817, 0.81", "47.5396, -80.1226, -43.3625, 1.33", "48.2254, -81.3261, -44.0874, 0.37", "48.4576, -81.7789, -44.3876, 0.37", "48.8016, -82.6837, -44.989, 0.22", "49.0296, -83.672, -45.6461, 0.22", "49.1458, -84.6833, -46.2455, 0.88", "49.1583, -85.4402, -46.6924, 1.25", "49.1412, -85.6495, -46.8091, 1.11", "49.0437, -86.6076, -47.4244, 0.44", "48.9542, -87.7109, -48.1751, 0.59", "48.9638, -87.9023, -48.3123, 1.11", "49.0281, -88.2728, -48.559, 1.11", "49.0537, -88.3574, -48.6176, 1.11", "49.618, -89.7606, -49.7024, 0.44", "49.8683, -90.2788, -50.1047, 0.22", "50.1085, -90.7968, -50.4676, 0.22", "50.3054, -91.2763, -50.7811, 0.22", "50.6749, -92.2698, -51.3757, 0.96", "50.9757, -93.2014, -51.8562, 1.77", "51.2173, -94.1171, -52.2388, 0.29", "51.3523, -94.7406, -52.4847, 0.29", "51.4787, -95.3843, -52.7117, 0.29", "51.5543, -95.8042, -52.821, 0.29", "51.6381, -96.3831, -52.8929, 0.29", "51.6458, -96.4456, -52.8963, 0.29", "51.7304, -97.1331, -52.9338, 0.29", "51.7401, -97.2078, -52.9377, 0.29", "51.8342, -97.9662, -52.9517, 1.03", "51.8724, -98.4307, -52.9523, 1.4", "51.8785, -98.5036, -52.958, 1.4", "51.9783, -99.6344, -53.1073, 0.29", "52.0499, -100.383, -53.2352, 0.29", "52.1184, -101.034, -53.3616, 0.81", "52.2256, -101.782, -53.5079, 0.81", "52.4543, -103.116, -53.7757, 0.22", "52.5667, -103.694, -53.8913, 0.22", "52.7171, -104.359, -54.028, 0.74", "52.861, -104.913, -54.1376, 1.18", "53.1941, -106.126, -54.3463, 0.29", "53.2138, -106.195, -54.3535, 0.29", "53.4708, -107.153, -54.4134, 0.29", "53.5925, -107.6, -54.4495, 0.88", "53.6723, -107.904, -54.4793, 1.47", "53.9935, -109.17, -54.6391, 0.22", "54.3315, -110.295, -54.8518, 0.22", "54.5639, -110.894, -55.0444, 0.74", "54.5927, -110.957, -55.0725, 0.74", "54.826, -111.386, -55.3294, 1.11", "55.0121, -111.695, -55.5505, 1.4", "55.7662, -112.878, -56.5171, 0.29", "56.4547, -113.96, -57.452, 0.81", "56.7265, -114.41, -57.8924, 1.4", "57.3136, -115.363, -58.883, 0.29", "57.4966, -115.647, -59.1906, 0.29", "57.7805, -116.087, -59.6733, 0.66", "57.8317, -116.172, -59.7646, 0.66", "58.9239, -118.093, -61.6892, 0.29", "59.2051, -118.574, -62.2064, 0.29", "59.3735, -118.865, -62.5435, 0.29", "59.3996, -118.906, -62.5963, 0.29", "59.6036, -119.218, -62.9767, 0.29", "59.9121, -119.744, -63.4766, 0.81", "59.9803, -119.894, -63.5614, 0.81", "60.2872, -120.64, -63.9348, 1.25", "60.3097, -120.694, -63.9567, 1.25", "60.808, -121.759, -64.2889, 0.22", "61.1424, -122.414, -64.4291, 0.22", "61.2147, -122.551, -64.4554, 0.22", "61.4868, -123.114, -64.5602, 0.22", "61.6696, -123.556, -64.6376, 1.03", "61.8077, -123.911, -64.7088, 1.33", "61.8322, -123.977, -64.7247, 1.33", "62.369, -125.544, -65.1125, 0.29", "62.6071, -126.26, -65.2888, 0.29", "62.8756, -127.109, -65.4854, 0.29", "63.0502, -127.66, -65.5946, 0.74", "63.083, -127.763, -65.6111, 0.74", "63.1879, -128.062, -65.6373, 1.11", "63.2148, -128.132, -65.6347, 1.11", "63.6316, -129.014, -65.5798, 0.37", "63.8869, -129.486, -65.5427, 0.37", "63.9334, -129.585, -65.5376, 0.37", "64.1751, -130.155, -65.5192, 0.37", "64.2021, -130.222, -65.5178, 0.37", "64.327, -130.581, -65.5156, 0.81", "64.4592, -131.034, -65.5196, 0.81", "64.8309, -132.463, -65.5446, 0.29", "65.0376, -133.312, -65.666, 0.29", "65.0531, -133.384, -65.6822, 0.29", "65.2021, -134.1, -65.8766, 0.29", "65.3651, -134.916, -66.1174, 1.18", "65.5351, -135.715, -66.3583, 1.47", "66.0085, -137.659, -67.0845, 0.29", "66.1835, -138.34, -67.364, 0.29", "66.3322, -138.982, -67.5968, 0.74", "66.5752, -140.179, -67.9635, 0.29", "66.7474, -141.184, -68.2167, 0.29", "66.9332, -142.557, -68.5131, 0.81", "66.9806, -142.991, -68.5784, 1.4", "67.1855, -144.804, -68.87, 0.22", "67.3117, -145.924, -69.0541, 0.22", "67.3117, -145.924, -69.0541, 0.96", "67.5624, -147.667, -69.283, 0.29", "67.575, -147.739, -69.2894, 0.29", "67.9798, -148.922, -69.5957, 0.29", "68.1979, -149.337, -69.7864, 1.18", "68.4807, -149.786, -70.0293, 1.18", "68.63, -150.015, -70.1563, 1.33", "68.7249, -150.151, -70.234, 1.33", "69.9775, -152.064, -71.3776, 0.29", "70.3146, -152.644, -71.7496, 0.29", "70.3536, -152.724, -71.8007, 0.29", "70.6285, -153.403, -72.1834, 0.29", "70.6507, -153.466, -72.2132, 0.29", "70.8778, -154.163, -72.4751, 0.59", "70.992, -154.608, -72.5815, 0.96", "71.3713, -155.871, -73.0673, 0.29", "71.6824, -156.701, -73.563, 0.29", "71.8137, -156.959, -73.8012, 0.74", "71.9168, -157.136, -73.9922, 1.11", "72.0933, -157.382, -74.3326, 1.47", "73.1142, -158.707, -76.4061, 0.22", "73.9019, -159.732, -78.1087, 0.22", "74.7826, -160.876, -80.1065, 1.11", "74.9742, -161.121, -80.5491, 1.55", "76.3773, -162.879, -83.8244, 0.37", "76.877, -163.474, -84.9807, 0.37", "77.1081, -163.734, -85.4987, 0.74", "77.1081, -163.734, -85.4987, 1.4" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-15.635, -79.7975, -55.0436, 0.74", "-15.8883, -78.899, -59.2279, 0.74", "-15.8969, -78.8812, -59.3064, 0.74", "-16.483, -78.1261, -64.2527, 0.29", "-16.5938, -78.035, -65.0279, 0.29", "-16.6398, -78.0129, -65.2884, 0.59", "-17.7108, -77.8278, -69.7638, 0.96", "-18.261, -77.8331, -71.4056, 1.55", "-19.3695, -77.9635, -74.243, 0.59", "-19.7135, -78.0345, -75.0156, 0.59", "-21.3075, -78.341, -78.2892, 1.03", "-23.0409, -78.6351, -81.5786, 0.22", "-23.1762, -78.6537, -81.8013, 1.03", "-23.4985, -78.6652, -82.3065, 1.03", "-26.5229, -78.4075, -86.793, 0.74", "-27.3657, -78.2943, -88.0605, 0.37", "-27.3657, -78.2943, -88.0605, 1.03", "-27.8526, -78.2085, -88.775, 1.03", "-30.2701, -77.8596, -92.2835, 0.29", "-30.5145, -77.8365, -92.6285, 0.88", "-30.6892, -77.8318, -92.8479, 1.33", "-32.3258, -77.8034, -94.8959, 0.44", "-32.372, -77.8016, -94.9467, 0.44", "-33.4753, -77.7409, -95.9656, 1.25", "-33.6155, -77.7198, -96.0479, 1.25", "-33.9846, -77.5994, -96.2023, 1.62", "-35.6214, -76.5556, -96.3015, 0.59", "-36.2044, -75.9567, -96.0645, 0.96", "-36.3879, -75.7409, -95.9482, 1.33", "-38.09, -73.5069, -94.3913, 0.29", "-38.5054, -72.9247, -93.9359, 0.66", "-38.6241, -72.7139, -93.7487, 1.11", "-38.6784, -72.5527, -93.5782, 1.11", "-38.7187, -72.3636, -93.3757, 1.11", "-38.7834, -72.0101, -93.005, 0.66", "-39.3179, -71.8945, -92.9364, 0.66" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-15.635, -79.7975, -55.0436, 1.33", "-15.6831, -79.9181, -55.1324, 1.33", "-16.1714, -81.3411, -56.1035, 0.81", "-16.4016, -82.0733, -56.6223, 0.44", "-16.5013, -82.4295, -56.8712, 0.44", "-16.7223, -83.3129, -57.4488, 0.15", "-16.8507, -83.9209, -57.8148, 0.29", "-16.8902, -84.244, -57.9748, 0.74", "-16.9399, -85.0106, -58.2701, 0.52", "-16.9472, -85.3453, -58.4147, 0.37", "-16.936, -85.9539, -58.684, 0.37", "-16.8893, -86.5206, -58.9065, 0.74", "-16.824, -87.1792, -59.0823, 0.74" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-46.6341, -114.556, -60.8688, 0.29", "-47.2788, -115.336, -61.295, 0.29", "-47.4419, -115.54, -61.3964, 0.29", "-47.6603, -115.803, -61.5127, 0.29", "-47.7889, -115.964, -61.6015, 0.81", "-47.9065, -116.115, -61.6786, 0.81", "-48.2466, -116.577, -61.9144, 0.15", "-48.4362, -116.861, -62.041, 0.22", "-48.5824, -117.108, -62.1643, 0.96", "-48.9056, -117.714, -62.4955, 0.59", "-49.2092, -118.309, -62.8273, 0.22", "-49.4019, -118.693, -63.0381, 0.29", "-49.5012, -118.889, -63.134, 0.88", "-49.6437, -119.169, -63.2626, 0.88", "-49.8894, -119.661, -63.4548, 0.29", "-49.9814, -119.832, -63.502, 0.52", "-50.0431, -119.949, -63.5334, 0.66", "-50.2874, -120.378, -63.6109, 0.22", "-50.429, -120.626, -63.6777, 0.22", "-50.5209, -120.803, -63.7281, 0.22", "-50.5532, -120.881, -63.7515, 0.22", "-50.6524, -121.172, -63.8562, 0.88", "-50.6854, -121.292, -63.9197, 1.11", "-50.8538, -121.982, -64.3537, 0.29", "-50.916, -122.198, -64.5075, 0.29", "-51.0131, -122.487, -64.7151, 0.44", "-51.024, -122.518, -64.7365, 0.44", "-51.2656, -123.135, -65.165, 0.22", "-51.3398, -123.339, -65.3446, 0.37", "-51.4474, -123.657, -65.6504, 0.22", "-51.5062, -123.832, -65.8365, 0.81", "-51.5149, -123.857, -65.8641, 0.81", "-51.5613, -123.996, -66.0086, 1.33", "-51.9054, -125.032, -67.1115, 0.29", "-51.947, -125.16, -67.2505, 0.29", "-51.9858, -125.292, -67.3892, 0.29", "-52.0283, -125.462, -67.5648, 0.74", "-52.0589, -125.601, -67.6968, 0.88", "-52.1925, -126.303, -68.2988, 0.22", "-52.2195, -126.493, -68.427, 0.22", "-52.2435, -126.689, -68.5635, 0.22", "-52.2778, -127.087, -68.8224, 0.66", "-52.288, -127.26, -68.922, 1.11", "-52.2933, -127.357, -68.9679, 1.33", "-52.3057, -127.854, -69.1129, 0.22", "-52.3168, -128.09, -69.1881, 0.22", "-52.3492, -128.459, -69.2922, 0.22", "-52.367, -128.644, -69.3332, 0.22", "-52.3707, -128.686, -69.3414, 0.59", "-52.3791, -128.847, -69.372, 0.59", "-52.3816, -129.424, -69.468, 0.22", "-52.3746, -129.887, -69.5546, 0.22", "-52.3705, -130.083, -69.5923, 0.22", "-52.3654, -130.363, -69.6409, 0.96", "-52.3599, -130.724, -69.6908, 0.22", "-52.3586, -130.842, -69.7067, 0.22", "-52.3541, -131.037, -69.7261, 0.22", "-52.3498, -131.23, -69.7531, 0.22", "-52.3542, -131.427, -69.7994, 0.22", "-52.3677, -131.611, -69.8476, 0.22", "-52.4193, -132.007, -69.949, 0.59", "-52.4366, -132.12, -69.9817, 0.74", "-52.475, -132.344, -70.0502, 0.74", "-52.5967, -133.049, -70.2652, 0.29", "-52.6599, -133.436, -70.3616, 0.29", "-52.684, -133.603, -70.3969, 0.29", "-52.7283, -133.959, -70.4532, 0.59", "-52.7427, -134.118, -70.4734, 0.96", "-52.7527, -134.326, -70.4899, 0.96", "-52.7454, -134.805, -70.4863, 0.22", "-52.7327, -135.127, -70.4807, 0.22", "-52.7238, -135.252, -70.4759, 0.29", "-52.6957, -135.572, -70.4501, 0.22", "-52.6814, -135.727, -70.4387, 0.37", "-52.6638, -135.882, -70.4489, 0.37", "-52.63, -136.088, -70.4895, 0.22", "-52.5762, -136.343, -70.5522, 0.29", "-52.5081, -136.603, -70.6236, 0.29", "-52.499, -136.633, -70.6317, 0.29", "-52.2706, -137.33, -70.8184, 1.03", "-52.1734, -137.636, -70.8901, 1.03", "-52.0428, -138.084, -70.9739, 0.22", "-51.9401, -138.497, -71.0279, 0.22", "-51.8491, -138.899, -71.0641, 0.22", "-51.8335, -138.973, -71.0669, 0.22", "-51.7502, -139.436, -71.0407, 0.22", "-51.6865, -139.859, -71.0127, 0.22", "-51.6489, -140.206, -70.9815, 0.22", "-51.6369, -140.416, -70.9636, 0.88" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-46.6341, -114.556, -60.8688, 0.22", "-47.2709, -115.944, -63.242, 0.22", "-47.3586, -116.215, -63.6817, 0.22", "-47.4207, -116.478, -64.1, 0.22", "-47.4934, -116.883, -64.7603, 0.22", "-47.5138, -117.04, -65.0224, 0.66", "-47.56, -117.619, -65.998, 0.15", "-47.5052, -117.893, -66.4192, 0.15", "-47.487, -117.979, -66.5718, 0.15", "-47.4129, -118.307, -67.2154, 0.74", "-47.3834, -118.385, -67.3702, 0.96", "-47.3429, -118.475, -67.5529, 0.96" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-24.24, -114.714, -52.625, 0.22", "-24.5953, -116.068, -52.9924, 0.22", "-24.7881, -116.925, -53.2432, 0.22", "-24.9434, -117.815, -53.6303, 0.22", "-24.9827, -118.166, -53.8048, 0.81", "-24.9981, -118.551, -54.0059, 1.11", "-24.9968, -118.918, -54.2127, 1.03", "-24.9886, -118.988, -54.2587, 1.03", "-24.7882, -120.215, -55.1418, 0.29", "-24.6747, -120.777, -55.5441, 0.29", "-24.5633, -121.428, -55.9804, 0.37", "-24.4916, -121.912, -56.2799, 0.22", "-24.4333, -122.518, -56.6335, 0.22", "-24.3849, -123.171, -56.9926, 0.74", "-24.3774, -123.324, -57.0681, 1.03", "-24.4524, -124.535, -57.6787, 0.22", "-24.516, -125.0, -57.9043, 0.22", "-24.6476, -125.784, -58.2602, 0.74", "-24.7186, -126.091, -58.4137, 0.74", "-24.7833, -126.339, -58.5381, 0.74", "-25.224, -127.715, -59.2419, 0.22", "-25.3714, -128.104, -59.4457, 0.29", "-25.4847, -128.389, -59.5886, 0.29", "-25.9997, -129.653, -60.1683, 0.22", "-26.1899, -130.039, -60.3332, 0.22", "-26.6147, -130.822, -60.6604, 0.37", "-26.6466, -130.881, -60.6848, 0.81", "-26.9677, -131.395, -60.9568, 0.81", "-27.1385, -131.653, -61.1057, 0.81", "-28.1212, -132.87, -61.9939, 0.22", "-28.4784, -133.276, -62.3329, 0.22", "-28.8151, -133.641, -62.6589, 0.22", "-29.8476, -134.772, -63.6798, 0.88", "-30.0878, -135.032, -63.9274, 0.88", "-31.5732, -136.73, -65.5949, 0.37", "-31.7785, -136.946, -65.8355, 0.52", "-31.9337, -137.102, -66.0073, 0.74", "-32.23, -137.397, -66.3261, 0.74", "-33.4828, -138.707, -67.7324, 0.22", "-33.8083, -139.063, -68.1153, 0.59", "-35.4054, -141.049, -70.1184, 0.29", "-35.6565, -141.369, -70.4404, 0.74", "-35.8195, -141.589, -70.654, 0.74", "-36.3966, -142.42, -71.3895, 0.22", "-36.6392, -142.843, -71.7027, 0.22", "-36.8993, -143.41, -72.0499, 0.22", "-37.0981, -144.305, -72.4344, 0.81", "-37.1565, -144.632, -72.5691, 1.18", "-37.2357, -145.179, -72.7615, 0.66", "-37.2953, -145.875, -72.9684, 0.29", "-37.3477, -146.619, -73.1883, 0.29", "-37.3604, -146.977, -73.2928, 0.44", "-37.3573, -147.697, -73.4886, 0.15", "-37.3858, -148.04, -73.636, 0.15", "-37.4626, -148.686, -73.9921, 0.59", "-37.5088, -148.946, -74.1613, 0.96", "-37.5887, -149.309, -74.431, 0.96", "-37.6486, -149.585, -74.6476, 0.96", "-38.001, -151.21, -75.9553, 0.29", "-38.0782, -151.634, -76.2913, 0.29", "-38.1759, -152.324, -76.8101, 0.37", "-38.251, -152.875, -77.2151, 1.03", "-38.3012, -153.298, -77.5084, 1.25", "-38.6065, -155.128, -78.7498, 0.29", "-38.7188, -155.687, -79.0998, 0.29", "-38.8503, -156.212, -79.4175, 0.29", "-39.1012, -157.145, -79.9603, 0.59", "-39.2354, -157.576, -80.212, 0.88", "-40.0654, -159.938, -81.6195, 0.22", "-40.2407, -160.393, -81.882, 0.22", "-40.4224, -160.845, -82.1392, 0.29", "-40.6015, -161.286, -82.3703, 0.29", "-40.8996, -162.118, -82.7632, 0.29", "-41.1891, -163.068, -83.1886, 0.74", "-41.2678, -163.457, -83.3441, 1.25", "-41.3087, -163.701, -83.4433, 1.25", "-41.6306, -165.999, -84.3194, 0.29", "-41.6845, -166.509, -84.4869, 0.29", "-41.6928, -167.161, -84.6707, 0.74", "-41.6569, -167.667, -84.8015, 1.18", "-41.5895, -168.168, -84.9355, 0.74", "-41.4503, -168.959, -85.1706, 0.22", "-41.2923, -169.586, -85.378, 0.22", "-41.0578, -170.722, -85.7728, 0.22", "-41.004, -171.086, -85.915, 0.44", "-40.9653, -171.482, -86.0779, 0.44", "-40.9265, -172.479, -86.5131, 0.29", "-40.9308, -172.969, -86.7393, 0.59", "-40.9276, -173.532, -86.9743, 0.59", "-40.9069, -174.288, -87.2363, 0.22", "-40.8538, -174.824, -87.3887, 0.22", "-40.7474, -175.449, -87.5482, 0.81", "-40.7281, -175.518, -87.558, 0.81", "-40.2268, -177.005, -87.7067, 0.88", "-39.8743, -178.122, -87.8575, 0.29", "-39.7667, -178.46, -87.914, 0.29", "-39.51, -179.291, -88.1064, 0.66", "-39.2323, -180.269, -88.374, 0.96", "-39.1965, -180.437, -88.4307, 0.96", "-39.0197, -181.809, -88.9867, 0.22", "-38.9485, -182.246, -89.1375, 0.22", "-38.8501, -182.763, -89.3027, 0.22", "-38.782, -183.098, -89.3959, 0.22", "-38.6686, -183.733, -89.5505, 0.96", "-38.6092, -184.065, -89.6011, 1.18", "-38.3461, -185.533, -89.6563, 0.15", "-38.2834, -185.978, -89.6502, 0.15", "-38.2333, -186.392, -89.6307, 0.15", "-38.1125, -187.151, -89.5662, 0.22", "-38.0465, -187.459, -89.5371, 0.22", "-37.9449, -187.89, -89.501, 0.22", "-37.7847, -188.497, -89.4601, 0.81", "-37.6245, -189.067, -89.416, 0.96", "-37.3067, -190.065, -89.3202, 0.29", "-37.1213, -190.607, -89.2582, 0.22", "-36.9611, -191.104, -89.1866, 0.22", "-36.9491, -191.174, -89.178, 0.22", "-36.9414, -191.795, -89.1024, 0.22", "-36.9858, -192.336, -89.0474, 0.81", "-37.0545, -192.794, -89.011, 1.18", "-37.1376, -193.145, -89.01, 1.18", "-37.6169, -194.869, -89.1486, 0.22", "-37.7946, -195.54, -89.2393, 0.22", "-37.9305, -196.119, -89.352, 0.22", "-38.0089, -196.49, -89.4396, 0.22", "-38.2477, -198.005, -89.8218, 0.52", "-38.2995, -198.515, -89.9416, 1.03", "-38.3408, -199.449, -90.1106, 0.29", "-38.3373, -200.152, -90.1523, 0.29", "-38.3233, -200.504, -90.1443, 0.37", "-38.2581, -201.22, -90.0935, 0.22", "-38.1465, -202.006, -90.0052, 0.22", "-38.0646, -202.586, -89.9468, 0.22", "-37.7945, -204.682, -89.7586, 1.47", "-37.7579, -204.952, -89.736, 1.47", "-37.6468, -205.739, -89.7018, 0.29", "-37.5505, -206.34, -89.7177, 0.22", "-37.409, -207.016, -89.7761, 0.22", "-37.2553, -207.694, -89.911, 0.22", "-37.2386, -207.772, -89.937, 0.22", "-37.1061, -208.396, -90.1679, 0.59", "-36.9466, -209.047, -90.4162, 0.96", "-36.7658, -209.675, -90.6609, 0.96", "-36.3557, -210.727, -91.0048, 0.22", "-36.1346, -211.185, -91.1233, 0.22", "-36.0255, -211.395, -91.1592, 0.22", "-35.67, -211.987, -91.2043, 0.81", "-35.4239, -212.367, -91.2194, 0.81", "-34.9038, -213.178, -91.2505, 0.22", "-34.6597, -213.541, -91.249, 0.22", "-34.1759, -214.267, -91.2668, 0.22", "-33.8289, -214.792, -91.3136, 0.59", "-33.586, -215.15, -91.3864, 0.96", "-33.2881, -215.607, -91.5072, 0.22", "-33.0214, -216.061, -91.6663, 0.22", "-32.9755, -216.142, -91.6956, 0.22", "-32.7315, -216.663, -91.8677, 0.22", "-32.5644, -217.078, -91.9481, 0.22", "-32.2932, -217.772, -92.0072, 0.22", "-32.2122, -218.015, -92.0083, 0.29", "-32.1324, -218.295, -91.9984, 0.37", "-31.9372, -219.084, -91.9514, 0.22", "-31.7599, -220.223, -91.8717, 0.74", "-31.698, -220.836, -91.8364, 1.4", "-31.6816, -221.688, -91.874, 0.22", "-31.7032, -222.109, -91.9263, 0.22", "-31.7417, -222.484, -92.0096, 0.22", "-31.8839, -223.416, -92.305, 1.11", "-31.9789, -223.816, -92.4749, 1.11", "-32.2863, -225.115, -93.1024, 0.22", "-32.3333, -225.355, -93.2337, 0.22", "-32.4674, -226.097, -93.6764, 0.22", "-32.5472, -226.713, -94.0547, 0.74", "-32.587, -227.868, -94.7919, 0.29", "-32.5738, -228.301, -95.0806, 0.29", "-32.5255, -228.653, -95.3339, 0.59", "-32.3167, -229.661, -96.1475, 0.22", "-32.1609, -230.136, -96.601, 0.22", "-32.0114, -230.593, -97.1914, 0.22", "-31.9018, -230.901, -97.6454, 0.22", "-31.7664, -231.361, -98.3752, 1.25", "-31.707, -231.584, -98.747, 1.69", "-31.6568, -231.758, -99.0612, 1.18", "-31.3949, -233.043, -101.455, 0.29", "-31.355, -233.407, -102.139, 0.29", "-31.3514, -233.444, -102.213, 0.29", "-31.3443, -233.605, -102.574, 0.29", "-31.3294, -233.719, -102.867, 0.29", "-31.3183, -233.742, -102.934, 0.29", "-31.1593, -233.89, -103.357, 0.29", "-31.0516, -234.109, -103.917, 0.29", "-30.8321, -234.722, -105.252, 0.29", "-30.7608, -234.975, -105.746, 0.29", "-30.6955, -235.466, -106.637, 1.33", "-30.6693, -235.732, -107.075, 1.33", "-30.5644, -237.129, -109.14, 0.22", "-30.5536, -237.496, -109.659, 0.22", "-30.5449, -237.657, -109.866, 0.22", "-30.5104, -238.52, -110.919, 0.22", "-30.4747, -238.988, -111.481, 1.03", "-30.4412, -239.187, -111.717, 1.18", "-29.986, -240.638, -113.328, 0.22", "-29.7172, -241.358, -114.154, 0.22", "-29.5376, -241.714, -114.536, 0.22", "-29.2837, -242.084, -114.889, 0.29", "-29.0213, -242.398, -115.164, 0.29", "-28.7694, -242.619, -115.316, 0.29", "-28.4681, -242.812, -115.385, 0.37", "-27.6026, -243.342, -115.531, 0.44", "-27.3973, -243.481, -115.558, 0.44", "-26.7759, -244.005, -115.643, 0.22", "-26.4861, -244.274, -115.694, 0.22", "-26.1427, -244.636, -115.78, 0.29", "-25.8464, -244.985, -115.885, 0.29", "-25.7836, -245.072, -115.919, 0.29", "-25.32, -245.814, -116.195, 0.22", "-25.1022, -246.238, -116.348, 0.22", "-24.8965, -246.695, -116.488, 0.22", "-24.8707, -246.759, -116.506, 0.22", "-24.7825, -247.018, -116.566, 0.22", "-24.5994, -247.601, -116.682, 0.66", "-24.4993, -247.941, -116.742, 0.66", "-24.2996, -248.628, -116.857, 0.15", "-24.173, -249.04, -116.93, 0.22", "-23.9621, -249.701, -117.05, 0.22", "-23.7373, -250.376, -117.182, 0.29", "-23.5954, -250.784, -117.268, 0.22", "-23.5334, -250.949, -117.308, 0.22", "-23.3717, -251.34, -117.422, 0.66" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-24.24, -114.714, -52.625, 0.37", "-24.2349, -115.424, -53.9101, 0.37", "-24.2521, -115.876, -54.7024, 0.29", "-24.2547, -115.914, -54.7631, 0.29", "-24.3371, -116.236, -55.277, 0.29", "-24.3901, -116.419, -55.5494, 0.29", "-24.6373, -117.236, -56.6667, 0.52", "-24.6878, -117.358, -56.8129, 0.88", "-24.7863, -117.57, -57.0349, 0.88", "-25.4481, -118.735, -58.3096, 0.15", "-25.622, -119.021, -58.6223, 0.15", "-25.7764, -119.278, -58.8897, 0.15", "-26.1025, -119.87, -59.4667, 0.81", "-26.1733, -120.006, -59.594, 0.81", "-26.8756, -121.512, -60.9153, 0.22", "-27.0134, -121.898, -61.1978, 0.22", "-27.1316, -122.299, -61.4733, 0.22", "-27.173, -122.522, -61.6069, 0.59", "-27.2357, -123.548, -62.0873, 0.15", "-27.2215, -123.992, -62.2345, 0.15", "-27.1135, -124.735, -62.3347, 0.66", "-27.0774, -125.041, -62.3793, 0.96", "-26.9905, -125.731, -62.4982, 0.22", "-26.9821, -125.795, -62.5098, 0.22", "-26.913, -126.249, -62.5922, 0.22", "-26.8848, -126.537, -62.6705, 0.22", "-26.8536, -127.097, -62.865, 0.22", "-26.8096, -127.6, -63.0528, 0.22", "-26.7761, -127.852, -63.1507, 0.66", "-26.7407, -128.091, -63.2579, 0.66", "-26.6383, -128.61, -63.5189, 0.29", "-26.577, -128.946, -63.7128, 0.29", "-26.5389, -129.228, -63.8674, 0.66", "-26.521, -129.464, -63.9897, 0.66", "-26.4932, -130.089, -64.2888, 1.11", "-26.4744, -130.66, -64.5391, 0.88", "-26.4674, -131.65, -64.9635, 0.22", "-26.4771, -132.261, -65.216, 0.22", "-26.4797, -132.827, -65.4261, 0.22", "-26.4743, -133.192, -65.5445, 0.22", "-26.4542, -133.646, -65.6592, 0.81", "-26.4113, -134.202, -65.7788, 0.81", "-26.3535, -134.598, -65.8464, 0.81", "-26.2244, -135.315, -65.9793, 0.22", "-26.1724, -135.606, -66.0248, 0.22", "-26.0781, -136.073, -66.0912, 0.22", "-25.9877, -136.453, -66.1416, 0.81", "-25.9019, -136.802, -66.1762, 0.81", "-25.8327, -137.124, -66.2049, 0.81", "-25.6956, -137.848, -66.268, 0.22", "-25.603, -138.333, -66.3108, 0.22", "-25.4861, -138.995, -66.3616, 0.22", "-25.4134, -139.503, -66.3934, 0.22", "-25.3559, -139.959, -66.4182, 0.22", "-25.3403, -140.1, -66.425, 0.59", "-25.3309, -140.197, -66.4292, 0.59", "-25.308, -140.474, -66.4397, 0.81", "-25.2551, -141.028, -66.5311, 0.22", "-25.2227, -141.226, -66.5908, 0.22", "-25.1542, -141.549, -66.712, 0.59", "-25.0933, -141.796, -66.8136, 0.59", "-25.0648, -141.901, -66.8599, 0.59", "-24.8183, -142.705, -67.2458, 0.22", "-24.6803, -143.118, -67.4532, 0.22", "-24.5561, -143.56, -67.7086, 0.22", "-24.4894, -143.831, -67.8837, 0.44", "-24.4774, -143.881, -67.9195, 0.44", "-24.441, -144.033, -68.0332, 0.74", "-24.3851, -144.248, -68.2053, 0.74", "-24.2301, -145.007, -68.7876, 0.15", "-24.1959, -145.172, -68.8843, 0.15", "-24.1634, -145.331, -68.9484, 0.15", "-24.0838, -145.7, -69.0632, 0.15", "-24.0271, -145.97, -69.1242, 0.66", "-23.9046, -146.649, -69.2442, 1.03", "-23.7373, -147.63, -69.3665, 0.22", "-23.6195, -148.447, -69.4681, 0.22", "-23.5872, -148.69, -69.5014, 0.52", "-23.5702, -148.971, -69.5709, 0.59", "-23.5864, -149.617, -69.8246, 0.15", "-23.6222, -149.943, -70.0189, 0.15", "-23.6395, -150.014, -70.0817, 0.52", "-23.708, -150.242, -70.3074, 0.74", "-24.0687, -151.288, -71.3368, 0.15", "-24.191, -151.625, -71.6589, 0.15", "-24.24, -151.76, -71.784, 0.59", "-24.5813, -152.682, -72.6244, 0.22", "-24.6885, -152.993, -72.8837, 0.22", "-24.8342, -153.47, -73.2375, 0.66", "-24.886, -153.713, -73.3837, 0.88", "-24.9331, -153.976, -73.5224, 0.88", "-25.0592, -154.978, -73.9786, 0.15", "-25.0974, -155.421, -74.162, 0.15", "-25.112, -155.605, -74.2446, 0.44", "-25.1283, -155.93, -74.397, 0.22", "-25.1472, -156.254, -74.5485, 0.15", "-25.1401, -156.74, -74.7343, 0.15", "-25.0445, -157.628, -75.0686, 0.88", "-25.0153, -157.8, -75.1446, 0.88", "-24.9527, -158.051, -75.2656, 0.88", "-24.9222, -158.139, -75.3124, 0.88", "-24.4827, -159.132, -75.8475, 0.15", "-24.2015, -159.68, -76.1292, 0.22", "-24.0423, -159.962, -76.2649, 0.22", "-23.7698, -160.467, -76.5065, 0.22", "-23.6618, -160.692, -76.6119, 0.22", "-23.3822, -161.328, -76.9086, 0.15", "-23.3119, -161.506, -76.9914, 0.15", "-23.1622, -161.898, -77.1489, 0.74", "-22.9785, -162.414, -77.3558, 0.74", "-22.7908, -162.972, -77.5744, 0.07", "-22.6921, -163.273, -77.6892, 0.07", "-22.6006, -163.588, -77.817, 0.81", "-22.487, -163.959, -77.958, 0.81", "-22.2956, -164.591, -78.1554, 0.22", "-22.1285, -165.148, -78.3016, 0.22", "-22.0556, -165.388, -78.3531, 0.22", "-21.843, -166.08, -78.4867, 0.81", "-21.6336, -166.775, -78.5991, 0.88", "-21.4277, -167.456, -78.6884, 0.22", "-21.3002, -167.894, -78.7276, 0.22", "-21.1863, -168.285, -78.7546, 0.22", "-21.0996, -168.559, -78.7732, 0.22", "-20.9387, -168.997, -78.811, 0.22", "-20.9183, -169.048, -78.8148, 0.22", "-20.7871, -169.35, -78.8408, 0.22", "-20.7579, -169.416, -78.8459, 0.22", "-20.6093, -169.705, -78.8499, 0.22", "-20.2853, -170.291, -78.8525, 0.44", "-19.6927, -171.301, -78.8844, 0.22", "-19.3848, -171.82, -78.9185, 0.59", "-19.2772, -172.0, -78.9342, 0.88", "-18.5557, -173.206, -79.0619, 0.22", "-18.1785, -173.832, -79.15, 0.22", "-17.7627, -174.517, -79.2836, 0.22", "-17.4281, -175.083, -79.429, 0.74", "-17.3967, -175.136, -79.4421, 0.74", "-17.2603, -175.388, -79.5135, 0.74", "-17.0365, -175.869, -79.7157, 0.29", "-16.8085, -176.37, -79.9542, 0.29", "-16.7232, -176.591, -80.0957, 0.29", "-16.6245, -176.889, -80.3268, 0.52", "-16.5639, -177.111, -80.5095, 0.96", "-16.3698, -177.921, -81.2111, 0.22", "-16.3591, -177.974, -81.2608, 0.22", "-16.2206, -178.71, -82.0289, 0.59", "-16.1946, -178.846, -82.183, 0.59", "-16.1173, -179.344, -82.7841, 0.22", "-16.0904, -179.62, -83.1157, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-26.2167, -71.9421, 51.9971, 0.22", "-28.2057, -78.0743, 60.188, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-26.2167, -71.9421, 51.9971, 0.29", "-30.8681, -78.0371, 60.1162, 0.22", "-35.67, -85.4658, 66.9898, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-42.5511, 24.2636, 83.5439, 0.29", "-48.2983, 18.2439, 93.2964, 0.29", "-56.6421, 14.5387, 102.243, 0.29", "-66.3884, 12.7983, 110.294, 0.29", "-76.7808, 13.2087, 117.674, 0.29" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-42.5511, 24.2636, 83.5439, 0.44", "-50.8381, 19.0009, 91.6026, 0.29", "-59.2991, 12.9383, 98.9119, 0.29", "-68.1243, 6.09104, 105.037, 0.29", "-77.6595, 1.32904, 111.929, 0.29", "-87.1772, -2.49339, 119.378, 0.29", "-95.8117, -6.26461, 127.856, 0.29", "-103.45, -10.1329, 137.203, 0.29", "-111.116, -14.2872, 146.408, 0.29", "-116.119, -19.1573, 157.006, 0.29", "-120.646, -25.3873, 167.129, 0.29", "-124.342, -33.566, 176.215, 0.29", "-126.803, -43.2473, 184.252, 0.29", "-128.173, -53.7223, 191.568, 0.29", "-127.905, -65.7547, 196.252, 0.29", "-128.531, -77.0028, 202.498, 0.29", "-131.064, -88.5377, 207.68, 0.29", "-132.278, -100.216, 213.026, 0.29", "-133.038, -111.799, 218.643, 0.29", "-134.222, -122.717, 225.349, 0.29", "-135.381, -133.819, 231.766, 0.29", "-136.056, -145.428, 237.344, 0.29" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-32.3305, 49.7318, -57.0615, 0.22", "-32.8856, 51.0965, -59.7756, 0.22", "-32.957, 51.2768, -60.1214, 0.22", "-33.0494, 51.54, -60.6006, 0.22", "-33.1839, 51.9221, -61.2573, 0.22", "-33.5675, 53.21, -63.3903, 0.22", "-33.6345, 53.4553, -63.7855, 0.52", "-33.6598, 53.5415, -63.9172, 0.74", "-33.6978, 53.7223, -64.1942, 0.74", "-33.7049, 53.9678, -64.5361, 0.88", "-33.5265, 55.3906, -66.0939, 0.22", "-33.5137, 55.4692, -66.1473, 0.37", "-33.4955, 55.5697, -66.218, 0.37", "-33.4377, 55.8654, -66.4145, 0.37", "-33.2703, 56.6707, -66.8914, 0.15", "-33.1561, 57.1385, -67.1094, 0.15", "-33.1007, 57.3762, -67.2739, 0.15", "-32.9672, 57.9875, -67.8582, 0.29", "-32.906, 58.2196, -68.1072, 0.59", "-32.8541, 58.3978, -68.3136, 1.03", "-32.8101, 58.5295, -68.4771, 1.03", "-31.9843, 60.3658, -70.7109, 0.59", "-31.9501, 60.43, -70.7859, 0.59", "-31.6174, 60.9711, -71.3666, 0.22", "-31.4519, 61.216, -71.6511, 0.29", "-31.2573, 61.48, -71.9686, 0.29", "-30.9514, 61.8473, -72.3862, 0.66", "-30.8494, 61.9639, -72.4871, 0.66", "-30.7431, 62.0904, -72.6113, 0.74", "-30.0087, 62.979, -73.563, 0.74", "-29.9695, 63.0277, -73.6503, 0.74", "-29.3306, 63.8317, -75.0807, 0.22", "-29.086, 64.1444, -75.6234, 0.22", "-28.8312, 64.4834, -76.1667, 0.44", "-28.678, 64.7007, -76.4918, 0.66", "-27.0718, 67.1116, -79.8198, 0.81", "-26.4534, 68.2689, -81.7206, 0.29", "-26.4086, 68.4211, -82.0199, 0.22", "-26.368, 68.6255, -82.4449, 0.22", "-26.3552, 68.7074, -82.626, 0.22", "-26.3509, 68.7448, -82.71, 0.22", "-26.2661, 69.9787, -85.479, 0.44", "-26.2847, 70.3628, -86.3988, 0.59", "-26.2978, 70.4775, -86.6725, 0.74", "-26.4592, 71.6045, -89.7193, 0.29", "-26.4756, 71.7008, -89.9932, 0.59", "-26.4911, 71.7788, -90.2157, 0.66", "-26.7401, 72.7439, -92.9882, 0.07", "-26.7959, 72.9218, -93.5232, 0.07", "-27.4046, 74.4607, -98.1196, 0.66", "-27.4188, 74.4905, -98.2084, 0.88", "-27.46, 74.5778, -98.4668, 0.88", "-27.4902, 74.6426, -98.6502, 1.11", "-28.0505, 75.8569, -101.883, 0.29", "-28.1609, 76.0773, -102.419, 0.29", "-28.1898, 76.126, -102.507, 0.29", "-28.512, 76.5861, -103.406, 0.15", "-28.6678, 76.78, -103.806, 0.15", "-28.7143, 76.8308, -103.907, 0.15", "-29.4852, 77.4965, -105.213, 0.66", "-29.7322, 77.6949, -105.607, 0.96", "-30.8063, 78.5241, -107.288, 0.22", "-30.8802, 78.5771, -107.396, 0.22", "-31.2041, 78.8034, -107.857, 0.22", "-31.2557, 78.8377, -107.924, 0.22", "-31.5182, 79.023, -108.356, 0.22", "-32.1508, 79.5087, -109.538, 0.52", "-32.2976, 79.6273, -109.822, 0.81", "-32.3562, 79.677, -109.949, 1.03", "-32.3987, 79.719, -110.064, 1.03", "-33.529, 80.9127, -113.463, 0.37", "-33.778, 81.1943, -114.279, 0.37", "-33.8684, 81.2982, -114.58, 0.37", "-34.1463, 81.6333, -115.564, 0.52", "-34.6256, 82.2402, -117.333, 0.74", "-34.6663, 82.3083, -117.516, 0.81", "-34.6999, 82.3791, -117.696, 0.88", "-34.7133, 82.4084, -117.783, 0.88", "-34.7338, 82.4469, -117.905, 1.03", "-34.7537, 82.4762, -118.004, 1.03", "-35.1494, 83.0779, -120.946, 0.29", "-35.2643, 83.2521, -121.982, 0.29", "-35.3472, 83.3714, -122.793, 0.59", "-35.3472, 83.3714, -122.793, 0.59", "-35.3628, 83.391, -122.951, 0.59", "-35.9269, 83.9957, -128.339, 0.07", "-35.9488, 84.0137, -128.589, 0.07", "-35.9577, 84.0255, -128.729, 0.07", "-35.9659, 84.0363, -128.85, 0.59", "-35.9589, 84.0714, -129.203, 0.96", "-35.9321, 84.1093, -129.549, 1.11", "-35.266, 84.5993, -134.241, 0.37", "-35.1822, 84.648, -134.727, 0.59", "-35.1065, 84.6819, -135.087, 0.74", "-32.7443, 85.5005, -144.841, 0.29", "-32.6462, 85.5274, -145.209, 0.29", "-32.4658, 85.5701, -145.869, 0.29", "-32.4316, 85.5783, -145.998, 0.29", "-32.2146, 85.6279, -146.787, 0.29", "-31.9735, 85.6364, -147.442, 0.29", "-31.2461, 85.4511, -148.15, 0.52", "-31.1739, 85.432, -148.227, 0.81", "-31.1151, 85.4166, -148.296, 0.81", "-30.857, 85.3483, -148.616, 1.11", "-28.8346, 84.7938, -151.328, 0.22", "-28.5111, 84.7077, -151.749, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-32.3305, 49.7318, -57.0615, 0.22", "-33.6675, 49.0539, -60.304, 0.22", "-33.8323, 48.9753, -60.6622, 0.22", "-33.9675, 48.9128, -60.9408, 0.74", "-34.0856, 48.8577, -61.1729, 1.03", "-34.8863, 48.4854, -62.676, 0.22", "-35.071, 48.3974, -63.0122, 0.22", "-35.1567, 48.364, -63.1036, 0.22", "-35.1915, 48.3496, -63.1433, 0.22", "-35.3076, 48.2987, -63.2808, 0.44", "-35.3851, 48.2615, -63.3679, 0.44", "-35.4759, 48.2143, -63.4519, 0.44", "-35.8262, 48.1121, -63.9574, 0.15", "-35.9495, 48.0941, -64.1441, 0.15", "-36.3879, 48.0963, -64.9431, 0.81", "-36.6262, 48.1067, -65.4031, 1.18", "-36.6853, 48.1106, -65.5211, 1.33", "-37.6206, 48.2032, -67.4157, 0.59", "-37.8078, 48.2288, -67.8037, 0.74", "-38.7503, 48.4001, -69.7483, 0.29", "-38.9066, 48.4334, -70.0701, 0.29", "-38.9451, 48.4431, -70.1467, 0.37", "-39.0154, 48.4606, -70.2693, 0.37", "-39.0933, 48.4756, -70.3621, 0.37", "-39.3469, 48.542, -70.6009, 0.37", "-39.7685, 48.6947, -70.7109, 0.15", "-40.1216, 48.8094, -70.8661, 0.15", "-40.3629, 48.8555, -70.9941, 0.22", "-40.4179, 48.8629, -71.0352, 0.29", "-40.63, 48.8796, -71.2313, 0.29", "-40.735, 48.8963, -71.4526, 0.29", "-41.0756, 48.9658, -72.4211, 0.88", "-41.1814, 48.9918, -72.7716, 0.96", "-41.3823, 49.0468, -73.4484, 1.11", "-41.3823, 49.0468, -73.4484, 1.11", "-41.9416, 49.2004, -76.0025, 0.52", "-42.0087, 49.2159, -76.3692, 0.66", "-42.0974, 49.2334, -76.9054, 0.66", "-42.3328, 49.26, -78.4106, 0.88", "-42.3579, 49.2587, -78.5615, 0.88", "-43.207, 49.1882, -83.1281, 0.96", "-43.2441, 49.1812, -83.316, 1.11", "-43.269, 49.1783, -83.4354, 1.11", "-43.4539, 49.1603, -84.2822, 1.18", "-43.5127, 49.1584, -84.5434, 1.33", "-43.8744, 49.1872, -85.9841, 0.37", "-43.9164, 49.1968, -86.1089, 0.37", "-44.6008, 49.4012, -88.5134, 0.37", "-44.718, 49.4298, -88.9393, 0.74", "-44.7671, 49.4373, -89.1244, 0.74", "-45.2878, 49.4787, -91.1891, 0.81", "-45.3724, 49.4777, -91.5382, 0.81", "-46.2075, 49.3447, -94.9005, 0.29", "-46.3498, 49.3003, -95.4357, 0.29", "-46.4565, 49.2583, -95.8097, 0.74", "-46.4937, 49.2404, -95.9247, 1.03", "-46.5551, 49.2061, -96.0826, 1.33", "-47.6858, 48.5566, -98.6414, 0.29", "-47.854, 48.45, -98.9828, 0.29", "-47.9307, 48.4005, -99.1544, 0.29", "-48.2098, 48.2168, -99.7887, 0.66", "-48.2799, 48.1644, -99.9516, 0.81", "-48.4068, 48.0608, -100.256, 0.66", "-49.2253, 47.1624, -102.322, 0.88", "-49.2611, 47.1156, -102.431, 1.11", "-49.3172, 47.0284, -102.633, 1.55", "-49.3685, 46.9162, -102.878, 1.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-60.5958, 197.091, -161.854, 0.29", "-60.8645, 197.949, -162.472, 0.29", "-61.0799, 198.563, -162.961, 0.81", "-61.504, 199.6, -163.849, 0.29", "-61.5498, 199.702, -163.94, 0.22", "-61.5978, 199.784, -164.039, 0.22", "-61.9011, 200.177, -164.626, 0.52", "-61.9881, 200.235, -164.84, 0.81", "-62.0816, 200.27, -165.085, 0.29", "-62.104, 200.276, -165.145, 0.29", "-62.5812, 200.411, -166.435, 0.22", "-62.7176, 200.456, -166.8, 0.22", "-63.3003, 200.693, -168.496, 0.37", "-63.3547, 200.747, -168.725, 0.66", "-63.3723, 200.772, -168.818, 0.66", "-63.3898, 200.8, -168.905, 0.66", "-63.4218, 200.866, -169.077, 0.66", "-63.5579, 201.191, -169.86, 0.66", "-63.7183, 201.84, -171.651, 0.44", "-63.736, 201.95, -171.978, 0.44", "-63.7611, 202.175, -172.674, 0.52", "-63.7693, 202.298, -173.057, 0.59", "-63.7642, 202.4, -173.375, 0.74", "-63.622, 203.458, -176.658, 0.22", "-63.6112, 203.505, -176.804, 0.66", "-63.6051, 203.525, -176.866, 0.66", "-63.2426, 204.502, -179.882, 0.29", "-63.1789, 204.693, -180.443, 0.52", "-63.1678, 204.725, -180.539, 0.66", "-63.1289, 204.853, -180.853, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-60.5958, 197.091, -161.854, 0.15", "-61.8225, 197.424, -160.561, 0.15", "-61.8857, 197.445, -160.521, 0.15", "-62.2932, 197.605, -160.397, 0.44", "-62.5952, 197.736, -160.346, 0.15", "-62.8092, 197.868, -160.321, 0.15", "-63.1449, 198.167, -160.281, 0.15", "-63.5277, 198.644, -160.37, 0.88", "-63.7489, 198.971, -160.448, 1.03", "-64.0656, 199.527, -160.592, 0.52", "-64.6035, 200.579, -160.873, 0.22", "-65.0719, 201.525, -161.124, 0.22", "-65.688, 202.711, -161.543, 0.22", "-65.7991, 202.909, -161.624, 0.22", "-66.151, 203.467, -161.898, 0.81", "-66.4357, 203.853, -162.126, 1.33", "-66.7715, 204.218, -162.386, 0.88", "-68.0878, 205.33, -163.245, 0.22", "-68.3274, 205.508, -163.369, 0.22", "-68.6254, 205.709, -163.529, 0.22", "-68.7135, 205.761, -163.663, 0.22", "-69.1106, 205.956, -164.489, 0.81", "-69.3822, 206.052, -165.145, 1.4", "-69.5774, 206.094, -165.651, 1.84", "-69.8963, 206.148, -166.475, 1.92", "-71.7626, 206.476, -172.606, 0.37", "-71.8391, 206.487, -172.877, 0.59", "-72.009, 206.503, -173.53, 0.44", "-72.1142, 206.513, -173.982, 0.66", "-72.2449, 206.523, -174.599, 1.25", "-73.494, 206.658, -180.964, 1.25", "-73.6252, 206.686, -181.59, 1.25" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-43.8089, 26.1946, -15.227, 0.22", "-45.9022, 25.0919, -16.6928, 0.22", "-47.1693, 24.4124, -17.5469, 0.74", "-47.8027, 24.0362, -17.9195, 0.74", "-48.7575, 23.4542, -18.5094, 0.29", "-49.8502, 22.7822, -19.2003, 1.03", "-50.6758, 22.2627, -19.7337, 0.59", "-51.1031, 21.9742, -19.9979, 0.44", "-52.4168, 21.0755, -20.8307, 0.22", "-53.5006, 20.3213, -21.5883, 0.59", "-53.6997, 20.195, -21.7332, 0.59", "-53.9186, 20.0702, -21.8985, 0.59", "-54.5623, 19.7138, -22.3892, 0.37", "-55.4286, 19.2818, -22.9368, 0.15", "-56.6011, 18.7062, -23.6107, 0.22", "-57.7951, 18.0821, -24.1988, 0.22", "-58.3404, 17.7934, -24.4546, 0.81", "-58.9248, 17.4881, -24.7064, 0.81", "-61.1743, 16.3249, -25.6061, 0.29", "-61.7076, 16.0565, -25.8219, 1.03", "-62.2906, 15.7773, -26.028, 1.4", "-62.8526, 15.5282, -26.2311, 1.11", "-64.7222, 14.759, -26.9235, 0.29", "-65.8291, 14.3294, -27.3457, 0.29", "-66.3228, 14.1394, -27.5463, 0.74", "-66.8371, 13.9462, -27.7577, 0.52", "-68.8526, 13.1715, -28.6707, 0.29", "-70.1188, 12.6808, -29.292, 0.29", "-70.3908, 12.5738, -29.4369, 0.66", "-71.0319, 12.31, -29.7952, 1.47", "-71.7036, 12.0431, -30.186, 1.47", "-73.1757, 11.4835, -31.0669, 0.22", "-73.4041, 11.4072, -31.2015, 0.59", "-73.8675, 11.2424, -31.4815, 0.59", "-74.1984, 11.1176, -31.6688, 0.52", "-75.141, 10.7494, -32.1732, 0.37", "-75.8492, 10.4563, -32.533, 0.37", "-76.3631, 10.2335, -32.7756, 0.37", "-77.9405, 9.52148, -33.5677, 0.29", "-79.5932, 8.76268, -34.4232, 0.29", "-80.1109, 8.52668, -34.6932, 0.44", "-80.7184, 8.24487, -35.0159, 1.03", "-81.2655, 8.02538, -35.3056, 1.11", "-82.5805, 7.6364, -36.0865, 0.37", "-83.1152, 7.53555, -36.4382, 0.74", "-83.473, 7.47877, -36.7047, 0.44", "-83.7984, 7.43687, -36.9547, 0.44", "-84.5775, 7.41602, -37.6379, 0.22", "-86.1882, 7.49071, -39.1815, 0.22", "-86.591, 7.53895, -39.5746, 1.11", "-87.0908, 7.61133, -40.0668, 1.03", "-87.3627, 7.6608, -40.3451, 1.03", "-89.1096, 8.00323, -42.1553, 0.22", "-90.4335, 8.30185, -43.4936, 0.22", "-90.8497, 8.42423, -43.8745, 0.88", "-91.3313, 8.59056, -44.2906, 0.88", "-92.2124, 8.94248, -44.9634, 0.66", "-92.8852, 9.24659, -45.4137, 0.29", "-93.6844, 9.67004, -45.7975, 0.29", "-93.9601, 9.87908, -45.9482, 0.29", "-94.3671, 10.2421, -46.2027, 0.74", "-95.0061, 10.899, -46.6234, 1.03", "-95.6418, 11.6355, -47.0361, 0.44", "-95.7966, 11.8417, -47.1412, 0.44", "-96.8346, 13.3361, -47.9645, 0.29", "-97.1642, 13.8346, -48.2549, 0.29", "-97.3173, 14.0778, -48.4079, 0.44", "-97.7758, 14.8373, -48.9065, 0.22", "-98.108, 15.3366, -49.198, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-43.8089, 26.1946, -15.227, 0.52", "-44.5671, 26.7702, -15.3362, 0.52", "-45.3003, 27.3128, -15.429, 0.52", "-45.7467, 27.5758, -15.3988, 0.22", "-45.968, 27.6782, -15.3018, 0.59", "-46.2409, 27.7981, -15.1499, 0.96", "-46.4612, 27.8947, -15.0185, 0.88", "-46.7951, 28.0238, -14.7698, 0.81", "-47.8724, 28.4375, -13.9222, 0.29", "-49.2294, 28.9724, -12.8742, 0.52", "-49.5256, 29.0855, -12.6343, 0.96", "-49.7754, 29.1858, -12.4247, 0.96", "-50.1471, 29.3387, -12.1106, 0.44", "-50.767, 29.6477, -11.436, 0.37", "-50.9714, 29.7756, -11.1769, 0.37", "-51.7428, 30.2745, -10.3914, 0.88", "-51.9944, 30.4275, -10.1524, 1.33", "-52.0442, 30.4564, -10.1093, 1.33", "-53.6061, 31.2728, -8.76504, 0.59", "-53.9666, 31.4562, -8.48664, 0.52", "-55.4169, 32.127, -7.65379, 0.22", "-55.6425, 32.2168, -7.54286, 0.74", "-55.9365, 32.312, -7.41329, 0.74", "-57.1648, 32.6745, -7.04549, 0.74", "-58.014, 32.8903, -6.92049, 0.29", "-58.4632, 32.995, -6.83348, 1.11", "-59.9907, 33.3495, -6.48909, 0.96", "-60.532, 33.4972, -6.40018, 0.74", "-61.6791, 33.8469, -6.28232, 0.22", "-61.9075, 33.9258, -6.24566, 0.74", "-62.1294, 34.0025, -6.20313, 0.74", "-63.7615, 34.6129, -5.92272, 0.29", "-64.1097, 34.7571, -5.88163, 1.11", "-64.3467, 34.8592, -5.82376, 1.11", "-66.223, 35.652, -5.06575, 0.44", "-72.7346, 37.387, -2.618, 0.44" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-90.0796, 50.9826, 12.5126, 0.29", "-97.8511, 54.4055, 15.4979, 0.29", "-105.055, 58.201, 19.3424, 0.29", "-112.486, 62.824, 21.5605, 0.29", "-119.28, 68.2766, 24.0028, 0.29", "-126.344, 72.9534, 27.1137, 0.29", "-132.45, 78.2219, 31.1852, 0.29", "-136.941, 84.0189, 36.4716, 0.29", "-140.553, 90.4813, 41.6897, 0.29", "-143.213, 96.813, 47.5819, 0.29", "-144.129, 102.647, 54.4132, 0.29", "-144.435, 108.742, 61.0767, 0.29", "-145.585, 115.011, 67.4918, 0.29", "-147.393, 121.211, 73.8207, 0.29", "-148.556, 127.176, 80.5052, 0.29", "-149.455, 133.833, 86.5771, 0.29", "-151.802, 140.537, 92.2031, 0.29", "-154.264, 146.377, 98.6399, 0.29", "-158.029, 152.627, 103.996, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-90.0796, 50.9826, 12.5126, 0.52", "-99.9851, 57.5715, 17.1378, 0.29", "-110.251, 62.7315, 22.6258, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-60.3207, 134.085, -145.89, 0.22", "-60.7641, 136.109, -152.497, 0.22", "-60.8478, 136.492, -153.744, 1.55", "-61.0184, 137.271, -156.286, 0.29", "-61.054, 137.433, -156.817, 0.29", "-61.0715, 137.513, -157.076, 0.29", "-61.1607, 137.921, -158.406, 1.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-60.3207, 134.085, -145.89, 0.29", "-61.4666, 133.422, -145.177, 0.29", "-61.8904, 133.219, -144.705, 0.22", "-62.0778, 133.138, -144.438, 0.22", "-63.0058, 132.733, -143.004, 1.11", "-64.1424, 132.245, -141.191, 0.29", "-64.461, 132.109, -140.688, 0.29", "-66.1511, 131.321, -137.672, 0.29", "-66.8462, 130.989, -136.312, 0.22", "-66.9442, 130.945, -136.116, 0.22", "-66.9902, 130.925, -136.007, 0.22", "-67.1865, 130.854, -135.474, 0.37", "-67.2643, 130.818, -135.261, 0.37", "-68.4769, 130.062, -132.567, 0.22", "-68.682, 129.934, -132.085, 0.52", "-69.581, 129.375, -129.833, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-23.425, 124.141, -1.00061, 0.44", "-24.3492, 125.559, -1.73664, 0.44", "-24.5227, 125.881, -1.8519, 0.44", "-24.6121, 126.074, -1.904, 0.44", "-24.9131, 126.781, -2.06364, 0.52", "-25.1405, 127.294, -2.15901, 0.44", "-25.4141, 127.871, -2.23999, 0.22", "-25.5376, 128.163, -2.25192, 0.22", "-25.7487, 128.515, -2.24481, 0.66", "-25.848, 128.622, -2.24744, 0.66", "-26.4483, 128.996, -2.28843, 0.22", "-26.7651, 129.145, -2.3072, 0.22", "-27.4374, 129.418, -2.34759, 0.81", "-28.0301, 129.637, -2.37601, 0.96", "-29.1762, 130.035, -2.40714, 0.59", "-30.0245, 130.337, -2.40634, 0.22", "-30.855, 130.618, -2.40404, 0.22", "-31.0844, 130.699, -2.40281, 0.52", "-31.2213, 130.752, -2.39542, 0.52", "-31.7538, 130.992, -2.35798, 0.22", "-32.1318, 131.24, -2.22827, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-23.425, 124.141, -1.00061, 0.59", "-22.336, 124.606, -3.14216, 0.59", "-22.0761, 124.74, -3.67938, 0.59", "-21.8201, 124.939, -4.39174, 0.59", "-21.5919, 125.18, -5.12121, 0.59", "-21.2278, 125.647, -6.28754, 0.37", "-21.1329, 125.801, -6.64143, 0.74", "-20.9672, 126.205, -7.3162, 0.74", "-20.7292, 127.018, -8.46867, 0.74", "-20.6493, 127.473, -9.02164, 0.6", "-20.5527, 128.23, -9.85882, 0.52", "-20.4965, 129.1, -10.7234, 0.3", "-20.4178, 130.138, -11.6972, 0.81", "-20.3405, 130.838, -12.3186, 1.25", "-19.9839, 132.861, -14.0317, 0.29", "-19.9037, 133.278, -14.3851, 0.52", "-19.664, 134.077, -14.9732, 0.44", "-19.2241, 135.103, -15.6905, 0.44", "-18.9828, 135.518, -15.9919, 1.33", "-18.1331, 136.6, -16.7834, 0.52", "-17.849, 136.899, -16.9678, 0.88", "-15.9115, 138.962, -18.0886, 0.59", "-14.776, 140.237, -18.6224, 0.44", "-14.4408, 140.717, -18.7502, 0.59", "-14.2332, 141.22, -18.775, 0.59", "-14.2244, 142.634, -18.5059, 0.29", "-14.2058, 143.31, -18.2054, 0.29", "-14.2162, 143.809, -17.9382, 0.29", "-14.212, 143.954, -17.8523, 0.29", "-14.1661, 144.976, -17.2258, 1.33", "-14.117, 145.699, -16.8009, 1.33", "-13.8678, 147.859, -15.6731, 0.37", "-13.8021, 148.672, -15.3029, 0.37", "-13.7857, 149.048, -15.1488, 0.88", "-13.7858, 149.613, -14.9469, 1.03", "-13.8739, 150.793, -14.6011, 0.44", "-13.9716, 151.45, -14.484, 1.18", "-14.2069, 152.543, -14.44, 1.4", "-14.4736, 153.863, -14.4515, 0.44", "-14.5471, 154.229, -14.4706, 0.44", "-14.7391, 155.236, -14.5724, 1.25", "-14.9988, 156.762, -14.8144, 0.37", "-15.2074, 157.872, -15.0838, 0.37", "-15.3184, 158.344, -15.277, 0.37", "-15.485, 158.957, -15.5947, 1.25", "-15.6574, 159.549, -15.9083, 1.25", "-15.9236, 160.445, -16.3866, 1.25", "-16.2003, 161.36, -16.8654, 1.25", "-16.8245, 163.419, -17.9988, 0.44", "-17.0703, 164.161, -18.4595, 0.44", "-17.359, 164.918, -18.9858, 0.44", "-17.5406, 165.321, -19.2779, 0.44", "-17.8055, 165.91, -19.735, 1.18", "-18.0562, 166.541, -20.2176, 0.88", "-18.6176, 168.041, -21.4133, 0.88", "-18.9022, 168.812, -22.0752, 0.74", "-19.039, 169.204, -22.4229, 0.74", "-19.4163, 170.328, -23.3375, 0.52", "-19.5755, 170.889, -23.7155, 0.52", "-19.6656, 171.333, -23.9666, 0.96", "-19.6762, 171.487, -24.0344, 0.96", "-19.6853, 172.348, -24.3475, 0.44", "-19.6276, 173.035, -24.6135, 0.81", "-19.5647, 173.544, -24.8148, 0.44", "-19.2842, 174.891, -25.4182, 0.22", "-19.164, 175.287, -25.5828, 0.74", "-18.8146, 176.306, -26.0092, 0.52", "-18.1474, 177.932, -26.6964, 0.44", "-17.8583, 178.559, -26.9757, 1.69", "-17.4203, 179.43, -27.3697, 1.69", "-16.7546, 180.526, -27.7972, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "18.4622, 105.495, 23.1253, 0.29", "17.9807, 108.508, 24.4618, 0.29", "17.8827, 109.332, 24.7855, 0.66", "17.8369, 109.885, 24.9844, 1.03", "17.821, 110.203, 25.1082, 1.03", "17.7707, 112.593, 26.0649, 0.44", "17.7838, 113.458, 26.4116, 0.44", "17.8794, 114.348, 26.7198, 0.59", "17.9787, 114.981, 26.955, 0.59", "18.3264, 116.75, 27.611, 0.29", "18.429, 117.177, 27.768, 0.66", "18.6988, 117.889, 28.0223, 1.03", "18.8602, 118.23, 28.1258, 1.4", "19.276, 119.031, 28.3462, 1.03", "19.71, 119.799, 28.5099, 0.96", "19.71, 119.799, 28.5099, 1.03", "20.3222, 120.76, 28.5655, 1.03", "21.1362, 122.021, 28.6188, 0.81" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.4622, 105.495, 23.1253, 0.44", "19.6194, 106.871, 23.4355, 0.44", "20.1052, 107.365, 23.5335, 0.52", "20.5975, 107.821, 23.6227, 0.88", "20.9229, 108.114, 23.6797, 0.96", "21.1062, 108.276, 23.7193, 0.88", "22.8588, 109.822, 24.1409, 0.44", "23.7513, 110.601, 24.3582, 0.44", "24.559, 111.318, 24.5614, 0.44", "24.967, 111.694, 24.6733, 0.44", "25.699, 112.389, 24.8801, 0.66", "26.2707, 112.964, 25.0535, 1.03", "26.9304, 113.709, 25.283, 0.96", "27.3547, 114.242, 25.3762, 0.66", "28.0878, 115.204, 25.4396, 0.44", "28.6894, 115.995, 25.4172, 0.44", "29.0334, 116.449, 25.3619, 0.88", "29.2706, 116.765, 25.3103, 0.88", "30.4235, 118.326, 25.0364, 0.37", "30.6806, 118.687, 24.9785, 0.37", "30.9691, 119.104, 24.9284, 0.66", "31.3251, 119.704, 24.9604, 0.96", "31.619, 120.271, 25.0594, 0.88", "32.1714, 121.352, 25.3297, 0.44", "32.501, 122.027, 25.5775, 0.59", "32.8696, 122.847, 25.8914, 0.59", "33.6612, 124.752, 26.6717, 0.52", "33.9451, 125.501, 27.0104, 1.0", "39.8413, 135.966, 26.688, 1.0" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "13.4489, 132.77, -7.27869, 0.29", "13.9122, 133.863, -6.06171, 0.29", "13.9751, 134.018, -5.9053, 0.29", "14.0852, 134.302, -5.64045, 0.22", "14.1772, 134.545, -5.42457, 0.22", "14.2302, 134.706, -5.2901, 0.22", "14.2828, 134.868, -5.16251, 0.44", "14.3475, 135.052, -5.06245, 0.52", "14.3642, 135.123, -5.02601, 0.52", "14.3704, 135.16, -5.00931, 0.52", "14.3959, 135.601, -4.73419, 0.07", "14.399, 135.874, -4.52585, 0.07", "14.3974, 136.094, -4.3372, 0.37", "14.3942, 136.326, -4.11809, 0.52", "14.3874, 136.57, -3.88999, 0.52", "14.367, 137.161, -3.35555, 0.88", "14.3596, 137.293, -3.2396, 0.88", "14.3551, 137.367, -3.18024, 0.88", "14.3489, 137.843, -2.83867, 0.22", "14.3625, 138.099, -2.67046, 0.22", "14.3766, 138.229, -2.58813, 0.44", "14.3975, 138.342, -2.52735, 0.44", "14.4554, 138.654, -2.34861, 0.37", "14.4699, 138.734, -2.30013, 0.37", "14.4968, 138.892, -2.20042, 0.37", "14.591, 139.435, -1.8144, 0.44", "14.6044, 139.506, -1.76028, 0.74", "14.6281, 139.636, -1.65716, 0.74", "14.6341, 139.663, -1.63611, 0.74", "14.6481, 139.718, -1.60302, 0.81", "14.7325, 139.953, -1.50203, 0.52", "14.796, 140.078, -1.4796, 0.29", "14.8387, 140.153, -1.46433, 0.29", "15.0559, 140.55, -1.38767, 0.22", "15.2214, 140.849, -1.33257, 0.22", "15.3609, 141.099, -1.28774, 0.59", "15.5324, 141.42, -1.23711, 0.74", "15.6994, 141.742, -1.19269, 0.81", "15.847, 142.009, -1.15952, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "13.4489, 132.77, -7.27869, 0.74", "13.4318, 133.407, -7.43979, 0.74", "13.376, 134.821, -7.75828, 0.29", "13.3839, 135.035, -7.79351, 0.22", "13.4064, 135.283, -7.85492, 0.22", "13.4402, 135.706, -7.97393, 0.22", "13.4572, 135.987, -8.05718, 0.22", "13.5016, 136.972, -8.36555, 0.96", "13.5084, 138.084, -8.73768, 0.96", "13.4867, 139.21, -9.14561, 0.29", "13.4584, 139.926, -9.422, 0.22", "13.4324, 140.222, -9.5425, 0.15", "13.3699, 140.633, -9.7136, 0.15", "13.2683, 141.008, -9.86753, 0.15", "13.1936, 141.211, -9.93842, 0.44", "13.1489, 141.351, -9.96546, 0.81", "13.0704, 141.831, -10.0446, 0.74", "13.0616, 142.049, -10.0708, 0.88", "13.0787, 142.346, -10.0916, 0.81", "13.1641, 143.186, -10.1149, 0.15", "13.1878, 143.352, -10.1169, 0.15", "13.2886, 143.896, -10.1141, 0.15", "13.3873, 144.362, -10.0508, 0.15", "13.5347, 145.006, -9.91413, 0.96", "13.5476, 145.061, -9.89971, 0.96", "13.5979, 145.284, -9.83388, 1.11", "13.6661, 145.618, -9.73688, 1.18", "13.9673, 147.209, -9.27206, 0.22", "14.1467, 148.149, -8.99732, 0.22", "14.1994, 148.438, -8.91907, 0.22", "14.3045, 148.887, -8.82113, 0.29", "14.4374, 149.371, -8.73677, 0.29", "14.5893, 149.838, -8.68077, 0.88", "14.6661, 150.026, -8.67362, 1.33", "14.9062, 150.561, -8.65245, 1.33", "15.54, 151.86, -8.59867, 0.22", "15.7039, 152.217, -8.59419, 0.44", "15.8465, 152.547, -8.59669, 0.88", "15.9939, 152.92, -8.60634, 0.88", "16.1741, 153.442, -8.62018, 0.52", "16.2193, 153.596, -8.62362, 0.52", "16.4397, 154.754, -8.65339, 0.15", "16.521, 155.165, -8.66769, 0.15", "16.5357, 155.231, -8.67378, 0.15", "16.6808, 155.777, -8.74624, 0.15", "16.7146, 155.882, -8.76383, 0.15", "16.8963, 156.363, -8.84781, 0.15", "17.0541, 156.668, -8.92259, 0.59", "17.4232, 157.363, -9.11766, 0.66", "17.5866, 157.662, -9.20718, 0.59", "17.6292, 157.74, -9.23094, 0.59", "17.8742, 158.21, -9.34622, 0.52", "18.3786, 159.248, -9.53341, 0.15", "18.6107, 159.776, -9.57875, 0.15", "18.6359, 159.841, -9.57511, 0.15", "18.7759, 160.232, -9.53121, 0.15", "18.945, 160.802, -9.44458, 0.88", "19.0274, 161.176, -9.37139, 1.18", "19.1118, 161.82, -9.21625, 0.74", "19.1952, 162.848, -8.98066, 0.22", "19.2109, 163.13, -8.92045, 0.22", "19.2311, 163.658, -8.8184, 0.22", "19.2433, 164.082, -8.74871, 0.22", "19.2542, 164.508, -8.68427, 0.22", "19.2695, 165.122, -8.60292, 0.37", "19.2796, 165.338, -8.582, 0.59", "19.3208, 165.753, -8.53984, 0.59", "19.336, 165.856, -8.52904, 0.44", "19.4432, 166.466, -8.46821, 0.29", "19.5061, 166.792, -8.43998, 0.29", "19.6563, 167.339, -8.39387, 0.15", "19.7993, 167.771, -8.35234, 0.15", "19.823, 167.836, -8.33629, 0.15", "20.0154, 168.28, -8.17337, 0.15", "20.2795, 168.817, -7.91953, 0.96", "20.6302, 169.452, -7.575, 1.18", "20.7697, 169.679, -7.43414, 0.96", "21.445, 170.741, -6.73647, 0.15", "21.7023, 171.134, -6.5011, 0.15", "21.8469, 171.358, -6.37514, 0.15", "22.0351, 171.657, -6.20362, 0.29", "22.0351, 171.657, -6.20362, 0.74", "22.2386, 172.024, -6.09675, 1.03", "22.6672, 172.712, -6.25523, 1.03", "22.7831, 172.924, -6.32891, 1.03" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "-8.04869, -65.2446, 20.0264, 0.37", "-7.5603, -65.7229, 19.9247, 0.37", "-6.97086, -66.3149, 19.8045, 0.37", "-6.48552, -66.8023, 19.7056, 0.37", "-6.43995, -66.8481, 19.6963, 0.37", "-6.10531, -67.1842, 19.628, 0.74", "-5.99657, -67.2934, 19.6059, 1.11", "-5.71651, -67.5705, 19.559, 1.11", "3.20827, -72.8023, 16.4378, 1.11", "12.2989, -78.0782, 13.9259, 1.11" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "-8.04869, -65.2446, 20.0264, 0.22", "-9.3161, -64.5958, 18.7881, 0.22", "-9.47701, -64.4959, 18.6227, 0.37", "-9.62059, -64.3949, 18.4688, 0.52", "-10.5597, -63.6457, 17.4105, 0.52", "-10.6921, -63.5302, 17.2593, 0.74", "-10.9616, -63.295, 16.9515, 0.88", "-11.1326, -63.0588, 16.751, 1.03", "-11.1818, -62.9784, 16.6838, 1.03", "-11.2645, -62.8067, 16.5448, 1.03", "-11.2743, -62.6112, 16.4393, 1.03", "-16.3804, -57.145, 8.60227, 1.03", "-19.985, -52.188, -0.321393, 1.03" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "6.26076, -62.0316, 8.95619, 0.29", "6.75205, -62.6586, 9.72517, 0.29", "7.25416, -63.3626, 10.5394, 0.44", "7.45119, -63.6474, 10.8591, 0.81", "7.54499, -63.7829, 11.0113, 0.81", "8.24302, -64.7918, 12.1439, 0.29", "8.44646, -65.0859, 12.474, 0.29", "8.46702, -65.1301, 12.5244, 0.29", "8.4894, -65.1832, 12.5789, 0.66", "11.955, -70.593, 19.7129, 0.66", "13.9229, -75.7227, 27.5791, 0.66" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "6.26076, -62.0316, 8.95619, 0.29", "5.91323, -63.4277, 8.78987, 0.29", "5.73829, -64.1304, 8.70615, 0.29", "5.52027, -65.0063, 8.60181, 0.29", "5.43883, -65.3334, 8.56284, 0.29", "0.512941, -76.9107, 8.26217, 0.29", "-2.38146, -89.0609, 10.0079, 0.29", "-4.37003, -101.22, 12.7058, 0.29" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "93.039, -105.998, -12.274, 0.29", "94.5315, -106.239, -11.9616, 0.29", "95.4647, -106.386, -11.7578, 0.29", "95.807, -106.448, -11.6827, 0.66", "96.318, -106.568, -11.473, 0.66", "97.4605, -106.8, -10.9015, 0.22", "98.3772, -106.951, -10.4038, 0.22", "98.9309, -106.983, -10.0655, 0.59", "99.1414, -106.98, -9.92418, 0.88", "100.994, -106.886, -8.47574, 0.22", "101.76, -106.842, -7.8266, 0.22", "102.017, -106.833, -7.58338, 0.22", "102.37, -106.794, -7.22671, 0.81", "102.769, -106.734, -6.82953, 0.81", "104.157, -106.563, -5.58594, 0.29", "104.674, -106.533, -5.18734, 0.88", "105.465, -106.569, -4.59892, 0.66", "105.853, -106.605, -4.3107, 0.22", "106.227, -106.656, -4.03379, 0.29", "107.154, -106.836, -3.41295, 0.29", "107.767, -106.962, -3.10983, 0.59", "108.131, -107.036, -2.94452, 0.96" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "93.039, -105.998, -12.274, 0.29", "92.4732, -105.479, -12.3526, 0.29", "91.9605, -104.9, -12.4544, 0.29", "91.6966, -104.564, -12.5118, 0.29", "91.4675, -104.303, -12.5553, 0.29", "91.0943, -103.972, -12.5809, 0.81", "90.7857, -103.756, -12.5846, 0.22", "90.478, -103.607, -12.5739, 0.37", "90.0618, -103.41, -12.5483, 0.22", "89.2621, -103.116, -12.4721, 0.22", "88.3142, -102.913, -12.3479, 0.88", "87.8577, -102.884, -12.2681, 1.25", "87.6302, -102.895, -12.2203, 1.33" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "77.1081, -163.734, -85.4987, 0.37", "79.4156, -165.264, -88.107, 0.37", "80.0449, -165.737, -88.8302, 0.37", "80.4206, -166.05, -89.2627, 0.96", "80.6659, -166.267, -89.5337, 1.18", "83.1403, -168.518, -92.1297, 0.52", "83.6954, -169.026, -92.6803, 0.52", "84.1488, -169.446, -93.0343, 0.52", "84.8393, -170.015, -93.5261, 0.29", "85.3208, -170.386, -93.8216, 0.29", "85.6909, -170.637, -93.9794, 0.96", "86.0147, -170.828, -94.007, 0.96", "87.251, -171.29, -94.1765, 0.22", "88.4185, -171.545, -94.4918, 0.88", "88.5078, -171.556, -94.5251, 0.88", "89.229, -171.639, -94.9679, 1.25", "89.2958, -171.649, -95.015, 1.25", "90.3203, -171.831, -95.7934, 1.25", "91.7346, -172.129, -96.9237, 0.96", "91.799, -172.147, -96.9715, 0.96", "94.2442, -172.914, -98.6845, 0.22", "94.8695, -173.126, -99.0969, 0.59", "95.3203, -173.287, -99.3716, 0.59", "95.574, -173.376, -99.5146, 0.96", "97.5248, -174.035, -100.496, 0.22", "97.73, -174.094, -100.597, 0.22", "98.7759, -174.345, -101.073, 0.66", "99.497, -174.496, -101.42, 1.18", "101.854, -174.932, -102.446, 0.22", "102.517, -175.035, -102.689, 0.96", "105.094, -175.361, -103.698, 0.22", "105.546, -175.424, -103.91, 0.81", "105.632, -175.439, -103.982, 0.81", "104.577, -174.739, -98.5513, 0.37", "104.58, -174.609, -97.4223, 0.88" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "77.1081, -163.734, -85.4987, 0.29", "77.0086, -164.121, -88.7294, 0.29", "76.9818, -164.277, -89.6243, 0.29", "76.9593, -164.425, -90.3537, 0.66", "76.9019, -164.758, -91.7719, 0.66", "76.6282, -165.923, -96.1604, 0.44", "76.5936, -166.039, -96.5455, 0.74", "76.5532, -166.369, -97.4928, 0.29", "76.5523, -166.397, -97.5756, 0.29", "76.563, -166.588, -98.1621, 0.96", "76.605, -167.236, -100.143, 0.52", "76.618, -167.503, -100.958, 1.11", "76.6692, -169.097, -105.849, 0.22", "76.6707, -169.182, -106.115, 1.03", "76.6452, -170.245, -109.274, 0.37", "76.644, -170.3, -109.429, 0.37", "76.6295, -170.621, -110.252, 0.37", "76.5444, -171.164, -111.501, 0.37", "76.495, -171.296, -111.742, 0.37", "76.3323, -171.712, -112.467, 0.37", "75.9461, -172.755, -114.478, 0.22", "75.8651, -172.982, -114.98, 0.52", "75.734, -173.38, -116.022, 0.37", "75.5709, -173.935, -117.67, 0.81", "75.5153, -174.116, -118.278, 0.81", "75.2549, -174.983, -121.451, 0.44", "75.1809, -175.204, -122.287, 0.59", "74.9653, -175.879, -124.724, 0.22", "74.9653, -175.879, -124.724, 0.74", "74.6644, -177.101, -128.309, 0.52", "74.522, -177.75, -130.153, 0.96", "74.5156, -177.782, -130.236, 0.96", "74.4612, -178.412, -131.831, 0.52", "74.4494, -178.804, -132.768, 0.52", "74.4452, -179.976, -135.485, 0.96", "74.4521, -180.091, -135.729, 0.96", "74.4689, -180.253, -136.094, 0.96", "74.6486, -181.289, -138.719, 0.52", "74.6718, -181.346, -138.915, 0.88" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-35.67, -85.4658, 66.9898, 0.29", "-39.6426, -91.8311, 74.4893, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-35.67, -85.4658, 66.9898, 0.44", "-39.5624, -90.7901, 72.8434, 0.29", "-42.7513, -94.7979, 79.9825, 0.29", "-45.6572, -98.6327, 87.3302, 0.29", "-47.9247, -101.958, 95.1266, 0.29", "-50.1881, -104.249, 103.272, 0.29", "-50.9356, -105.632, 111.882, 0.29", "-51.344, -105.391, 120.618, 0.29", "-51.8995, -104.961, 129.339, 0.29", "-53.5758, -104.664, 137.921, 0.29", "-53.8738, -105.287, 146.643, 0.29", "-55.9168, -106.437, 155.073, 0.29", "-57.5334, -106.964, 163.655, 0.29", "-59.9095, -107.261, 172.069, 0.29", "-64.5479, -108.203, 179.427, 0.29", "-68.0666, -108.208, 187.437, 0.29", "-72.0926, -108.437, 195.201, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-49.3685, 46.9162, -102.878, 0.52", "-48.3982, 46.703, -106.437, 0.52", "-48.3521, 46.6857, -106.59, 0.52", "-48.2896, 46.6535, -106.78, 0.52", "-48.22, 46.6091, -106.974, 0.59", "-48.1376, 46.5494, -107.191, 0.66", "-48.0669, 46.4936, -107.385, 0.66", "-47.431, 45.8127, -108.936, 0.29", "-47.3161, 45.6823, -109.243, 0.29", "-47.2224, 45.5989, -109.556, 0.44", "-47.1919, 45.5794, -109.667, 0.66", "-46.7426, 45.4227, -111.307, 0.52", "-46.728, 45.4199, -111.359, 0.81", "-46.6455, 45.4162, -111.638, 0.81", "-45.8873, 45.4848, -114.109, 0.29", "-45.7901, 45.5052, -114.409, 0.29", "-45.5101, 45.5962, -115.204, 0.88", "-45.3853, 45.6509, -115.519, 1.03", "-45.2349, 45.7267, -115.897, 1.03", "-45.1597, 45.8038, -116.175, 1.03", "-45.1317, 45.8542, -116.332, 1.03", "-45.0892, 45.9599, -116.651, 1.03", "-45.0753, 46.0732, -116.984, 1.03", "-45.074, 46.1095, -117.086, 1.03", "-45.1219, 47.1892, -120.114, 0.66", "-45.1231, 47.2076, -120.168, 0.66", "-45.1272, 47.2484, -120.282, 0.74", "-45.2212, 48.0699, -122.53, 0.15", "-45.2269, 48.1335, -122.689, 0.15", "-45.2589, 48.3519, -123.193, 0.52", "-45.2659, 48.3799, -123.248, 0.52", "-45.2554, 48.532, -123.622, 0.59", "-45.221, 48.5497, -123.709, 0.59", "-44.9757, 48.5058, -123.889, 0.59", "-44.7755, 48.4696, -124.021, 0.59", "-43.7862, 48.3012, -124.581, 0.15", "-43.482, 48.2507, -124.768, 0.15", "-43.2673, 48.2165, -124.9, 0.74", "-43.1424, 48.203, -124.99, 1.11", "-42.9551, 48.1933, -125.139, 1.11", "-42.2033, 48.214, -125.759, 0.29", "-41.5355, 48.279, -126.317, 0.29", "-41.3646, 48.3081, -126.474, 0.29", "-40.6478, 48.4678, -127.182, 0.22", "-40.5677, 48.4886, -127.265, 0.22", "-40.3884, 48.5442, -127.462, 0.22", "-40.3506, 48.5617, -127.51, 0.22", "-40.112, 48.6827, -127.763, 0.66", "-40.034, 48.7203, -127.843, 0.66", "-39.8185, 48.7835, -127.933, 0.88", "-39.7696, 48.7903, -127.955, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-49.3685, 46.9162, -102.878, 0.37", "-50.0859, 46.6497, -103.04, 0.37", "-50.4819, 46.5102, -103.123, 0.22", "-50.9631, 46.3377, -103.258, 0.81", "-51.2636, 46.2237, -103.354, 0.81", "-52.1304, 45.8651, -103.654, 0.52", "-52.4142, 45.7402, -103.756, 0.37", "-52.6975, 45.5782, -103.983, 0.37", "-53.0944, 45.3048, -104.472, 0.37", "-53.1755, 45.2394, -104.606, 0.66", "-53.2677, 45.1554, -104.799, 0.81", "-53.293, 45.1312, -104.867, 0.96", "-54.1164, 44.4981, -107.016, 0.37", "-54.1625, 44.4734, -107.121, 0.37", "-54.1879, 44.462, -107.175, 0.59", "-54.2515, 44.4345, -107.306, 0.74", "-54.9153, 44.1372, -108.605, 1.03", "-55.1596, 44.0144, -109.061, 0.44", "-55.4606, 43.8652, -109.571, 0.44", "-56.5812, 43.2575, -111.541, 0.59", "-56.7213, 43.1718, -111.798, 0.74", "-56.8497, 43.0756, -112.048, 0.74", "-56.9354, 42.9807, -112.238, 0.74" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-73.6252, 206.686, -181.59, 0.22", "-74.5448, 208.181, -181.275, 0.22", "-74.6565, 208.35, -181.258, 0.22", "-74.7062, 208.583, -181.53, 0.22", "-74.7312, 208.765, -181.732, 0.22", "-74.8209, 209.461, -182.433, 0.37", "-74.8515, 209.684, -182.639, 0.66", "-74.8578, 209.757, -182.708, 0.88", "-75.0302, 212.971, -185.586, 0.29", "-75.0365, 213.479, -186.016, 0.29", "-75.0382, 214.105, -186.524, 0.44", "-75.0359, 214.485, -186.808, 0.52", "-75.0462, 215.15, -187.284, 0.22", "-75.068, 215.488, -187.49, 0.22", "-75.1162, 215.664, -187.553, 0.37", "-75.4095, 216.344, -188.056, 0.22", "-75.5074, 216.504, -188.254, 0.29", "-75.5788, 216.612, -188.408, 0.66", "-75.6023, 216.657, -188.477, 0.66", "-75.8185, 217.535, -189.766, 0.37", "-75.8202, 217.617, -189.87, 0.22", "-75.8101, 217.671, -189.936, 0.15", "-75.6789, 218.188, -190.536, 0.15", "-75.4138, 218.842, -191.221, 0.88", "-75.2978, 219.098, -191.464, 0.88", "-74.7797, 220.16, -192.595, 0.44", "-74.4025, 220.94, -193.499, 0.44", "-74.3477, 221.057, -193.639, 0.74", "-73.8251, 222.179, -195.013, 0.22", "-73.7169, 222.405, -195.272, 0.22", "-72.8666, 224.04, -197.009, 0.22", "-72.7608, 224.215, -197.204, 0.66", "-72.5847, 224.543, -197.58, 0.66", "-72.4728, 224.78, -197.859, 0.66", "-72.2295, 225.388, -198.566, 0.15", "-72.1525, 225.578, -198.761, 0.66", "-71.2916, 227.786, -200.738, 0.15", "-71.1782, 228.116, -201.038, 0.22", "-71.1105, 228.348, -201.252, 0.22", "-70.9748, 228.895, -201.798, 0.81", "-70.9051, 229.232, -202.142, 0.81", "-70.6479, 230.422, -203.297, 0.29", "-70.5402, 230.9, -203.681, 0.29", "-70.509, 231.027, -203.794, 0.52", "-70.1589, 232.532, -205.26, 0.44", "-70.12, 232.72, -205.467, 0.44" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-73.6252, 206.686, -181.59, 1.03", "-73.1213, 205.895, -181.684, 1.03", "-72.5182, 205.056, -181.77, 0.29", "-72.1595, 204.603, -181.812, 0.29", "-71.7932, 204.154, -181.853, 0.22", "-71.529, 203.84, -181.88, 0.22", "-71.2767, 203.547, -181.902, 0.37", "-70.9883, 203.235, -181.919, 0.37", "-70.2976, 202.562, -181.892, 0.22", "-70.0348, 202.318, -181.875, 0.22", "-69.7711, 202.086, -181.852, 0.37", "-69.6194, 201.955, -181.837, 0.37", "-68.643, 201.094, -181.713, 0.22", "-68.2098, 200.723, -181.793, 0.22", "-68.1703, 200.692, -181.822, 0.22", "-68.0013, 200.563, -182.059, 0.22", "-67.8811, 200.442, -182.367, 0.22", "-67.7947, 200.307, -182.749, 0.74", "-67.4443, 199.406, -185.598, 0.59", "-67.4192, 199.317, -185.863, 0.52", "-67.4106, 199.281, -185.965, 0.52", "-67.3845, 199.078, -186.686, 0.29", "-67.3881, 198.988, -187.096, 0.29", "-67.4092, 198.822, -187.939, 0.37", "-67.4194, 198.763, -188.241, 0.44", "-67.4204, 198.752, -188.309, 0.44", "-67.4384, 198.472, -190.099, 0.44", "-67.4413, 198.431, -190.392, 0.44", "-67.4638, 198.369, -190.805, 0.44", "-67.6207, 198.129, -192.295, 0.22", "-67.6606, 198.069, -192.624, 0.22", "-67.6959, 197.98, -192.983, 0.22", "-67.7016, 197.905, -193.128, 0.37", "-67.7013, 197.861, -193.213, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-98.108, 15.3366, -49.198, 0.29", "-98.5265, 16.4362, -51.4092, 0.29", "-98.602, 16.6109, -51.7782, 0.66", "-98.6309, 16.6781, -51.9199, 0.66", "-99.0859, 17.7317, -54.145, 0.29", "-99.5663, 18.8443, -56.4947, 1.18", "-99.6519, 19.0424, -56.913, 1.62", "-99.6999, 19.1819, -57.1904, 1.62" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-98.108, 15.3366, -49.198, 0.22", "-97.7322, 17.3953, -49.6715, 0.22", "-97.6958, 17.5945, -49.7173, 0.37", "-97.4796, 18.7787, -49.9896, 0.29", "-97.4141, 19.1378, -50.0722, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-61.1607, 137.921, -158.406, 0.29", "-62.0065, 138.011, -158.755, 0.29", "-62.0576, 138.021, -158.774, 0.29", "-62.7453, 138.25, -159.158, 0.59", "-63.0147, 138.359, -159.339, 0.66", "-63.2596, 138.48, -159.537, 0.52", "-63.3234, 138.515, -159.591, 0.52", "-63.7243, 138.756, -159.961, 0.37", "-64.616, 139.273, -160.831, 0.66", "-65.0495, 139.5, -161.26, 0.74", "-65.7518, 139.804, -161.936, 0.29", "-66.2975, 139.993, -162.441, 0.29", "-66.9851, 140.209, -163.066, 0.66", "-67.3465, 140.304, -163.384, 0.52", "-67.9749, 140.413, -163.869, 0.29", "-68.5511, 140.466, -164.278, 0.52", "-68.9526, 140.454, -164.523, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-61.1607, 137.921, -158.406, 0.29", "-61.155, 138.203, -159.285, 0.29", "-61.1544, 138.217, -159.325, 0.29", "-61.1445, 138.489, -160.145, 0.66", "-61.1186, 139.041, -161.8, 0.66", "-61.0761, 139.606, -163.455, 0.22", "-61.0698, 139.694, -163.708, 0.29", "-61.0725, 139.763, -163.913, 0.29", "-61.0849, 140.048, -164.735, 0.22", "-61.086, 140.091, -164.855, 0.59", "-61.0728, 140.189, -165.063, 0.59", "-61.0209, 140.461, -165.513, 0.59", "-60.9892, 140.744, -165.995, 0.29", "-60.9803, 140.836, -166.145, 0.29", "-60.9426, 141.197, -166.663, 0.59", "-60.9372, 141.293, -166.819, 1.03", "-60.9237, 141.405, -167.016, 1.25", "-60.7824, 142.11, -168.247, 0.22", "-60.7535, 142.215, -168.434, 0.22", "-60.7175, 142.333, -168.644, 0.74", "-60.5004, 142.972, -169.764, 0.22", "-60.386, 143.256, -170.257, 0.29", "-60.3412, 143.351, -170.415, 0.29", "-60.1725, 143.611, -170.786, 0.59", "-60.109, 143.702, -170.904, 0.66", "-60.0166, 143.827, -171.018, 0.52", "-59.8203, 144.093, -171.146, 0.22", "-59.7411, 144.216, -171.199, 0.52", "-59.6274, 144.385, -171.262, 0.81", "-59.4325, 144.66, -171.32, 0.74", "-59.0602, 145.125, -171.398, 0.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.7546, 180.526, -27.7972, 0.22", "-16.9444, 181.437, -27.7866, 0.22", "-17.1802, 182.144, -27.795, 0.22", "-17.7307, 183.506, -27.8136, 0.29", "-18.1836, 184.412, -27.8165, 0.29", "-18.4692, 184.918, -27.8063, 1.11", "-18.6563, 185.228, -27.7922, 1.33", "-19.4762, 186.431, -27.7192, 0.22", "-19.7953, 186.84, -27.6785, 0.81", "-20.755, 187.939, -27.5192, 0.29", "-21.527, 188.801, -27.3711, 0.29", "-21.9536, 189.305, -27.3048, 0.52", "-21.9536, 189.305, -27.3048, 0.59", "-22.2207, 189.711, -27.2708, 0.37", "-22.5419, 190.25, -27.2606, 0.81", "-22.6586, 190.493, -27.2753, 0.81", "-23.1279, 191.647, -27.4159, 0.44", "-23.2928, 192.099, -27.5013, 0.44", "-23.4264, 192.491, -27.585, 0.66", "-23.5673, 192.998, -27.7104, 0.29", "-23.6901, 193.505, -27.8614, 0.74", "-23.7606, 193.819, -27.9549, 0.81", "-23.9795, 194.952, -28.2796, 0.29", "-24.0693, 195.396, -28.4196, 0.44", "-24.2027, 196.079, -28.6659, 0.52", "-24.3351, 196.759, -28.9458, 0.44" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-16.7546, 180.526, -27.7972, 0.44", "-16.338, 181.351, -27.4561, 0.44", "-15.7513, 182.66, -26.9201, 0.44", "-15.0926, 184.206, -26.3591, 0.44", "-14.6979, 185.124, -26.0669, 1.18", "-13.3844, 187.785, -24.7814, 0.59", "-12.8648, 188.751, -24.2084, 0.37", "-12.4235, 189.558, -23.6451, 0.37", "-11.9414, 190.394, -23.0129, 0.59", "-11.5492, 191.023, -22.5265, 1.18", "-9.29006, 194.512, -19.9435, 0.88", "-8.47882, 195.755, -19.0538, 0.96", "-7.92704, 196.579, -18.4411, 0.96", "-7.24727, 197.587, -17.6908, 0.44", "-7.07787, 197.868, -17.4889, 0.59", "-6.58844, 198.727, -16.7157, 0.59", "-5.95003, 199.974, -15.5587, 0.52", "-5.62571, 200.588, -14.8355, 0.29", "-5.50087, 200.805, -14.5365, 0.81", "-5.21555, 201.255, -13.838, 0.81", "-3.18361, 204.1, -9.01436, 0.66", "-2.86782, 204.418, -8.4154, 0.74", "-2.81483, 204.459, -8.34208, 0.74", "-2.42344, 204.729, -7.83911, 0.96", "-1.42017, 205.456, -6.61094, 0.29", "-1.19687, 205.618, -6.35299, 0.81", "0.212798, 206.856, -4.44906, 0.22", "0.474578, 207.128, -3.84137, 1.33", "1.09135, 207.975, -1.11237, 0.29", "1.14377, 208.121, -0.42227, 0.29", "1.09502, 208.224, 0.516583, 0.59", "0.75801, 208.107, 2.07462, 0.29", "0.40845, 207.77, 2.84154, 0.29", "0.0282736, 207.221, 3.50854, 0.29", "-0.0749922, 207.017, 3.64066, 0.88", "-0.295485, 206.465, 3.91213, 0.88", "-0.429986, 205.73, 3.9802, 0.52", "0.097289, 205.143, 3.15682, 0.44", "0.332377, 204.996, 2.81262, 0.52", "1.24407, 204.733, 1.50266, 0.66", "2.25286, 204.639, 0.0577102, 0.52", "2.50945, 204.65, -0.29556, 0.52", "3.36205, 204.699, -1.46941, 0.37", "3.70141, 204.699, -1.9864, 0.52", "4.22714, 204.636, -2.88062, 0.22", "4.53692, 204.531, -3.46338, 0.22", "4.89073, 204.312, -4.19183, 0.74", "5.50921, 203.781, -5.46949, 0.37", "6.24999, 202.962, -7.1156, 0.29", "6.63086, 202.469, -7.98176, 0.81", "6.72627, 202.323, -8.20805, 0.96", "7.28876, 201.379, -9.61961, 0.29", "7.58608, 200.847, -10.4225, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "21.1362, 122.021, 28.6188, 0.29", "20.7903, 123.018, 28.4379, 0.29", "20.5479, 123.805, 28.2825, 0.29", "20.3748, 124.459, 28.128, 0.59", "20.0673, 125.608, 27.8548, 0.59", "19.7722, 126.71, 27.5926, 0.52", "19.4873, 127.774, 27.3394, 0.52", "19.2661, 128.626, 27.1334, 0.52", "18.9005, 130.183, 26.7292, 0.52", "18.6898, 131.159, 26.4701, 0.52", "17.6825, 140.829, 23.4605, 0.52", "18.5611, 150.788, 21.5002, 0.52", "17.7326, 160.777, 19.632, 0.52", "16.3825, 169.992, 15.5855, 0.52", "12.7971, 179.053, 12.7122, 0.52", "10.3629, 188.422, 9.60155, 0.52", "8.87061, 198.189, 7.12836, 0.52", "5.36521, 207.711, 6.22597, 0.52", "2.412, 217.472, 6.1392, 0.52", "-0.751858, 227.061, 4.79104, 0.52", "-2.28447, 236.998, 3.10013, 0.52", "-2.24833, 247.149, 2.06542, 0.52", "-1.99873, 257.344, 2.59633, 0.52" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "21.1362, 122.021, 28.6188, 0.52", "21.4787, 122.268, 30.3664, 0.52", "21.6336, 122.386, 31.1406, 0.44", "21.6802, 122.426, 31.3639, 0.74", "21.7977, 122.54, 31.8936, 0.74", "22.0357, 122.813, 32.8827, 0.52", "23.5546, 124.996, 38.3405, 0.52", "24.411, 125.672, 44.3094, 0.22", "24.47, 125.647, 44.9099, 0.22", "24.4832, 125.501, 45.4354, 0.22", "24.5191, 125.681, 45.1783, 0.22", "24.6298, 126.112, 44.7188, 0.74", "24.6977, 126.356, 44.4756, 1.11", "25.0503, 127.011, 44.7525, 0.96", "25.2529, 127.38, 44.9268, 1.25", "25.5293, 127.88, 45.1763, 1.25", "25.6629, 128.123, 45.297, 1.25", "26.1474, 129.05, 45.7364, 1.25", "26.539, 129.848, 46.1222, 0.52", "26.6189, 130.025, 46.2018, 0.66", "26.646, 130.095, 46.2279, 0.66", "26.7551, 130.39, 46.3099, 0.66", "26.8086, 130.524, 46.3515, 0.59", "27.0103, 131.023, 46.4991, 0.59", "27.3155, 131.768, 46.7586, 0.22", "27.5679, 132.393, 46.9807, 0.22", "27.9017, 133.201, 47.2644, 0.22", "28.2962, 134.148, 47.5979, 0.81", "28.6132, 134.843, 47.8622, 0.81", "28.779, 135.163, 47.9909, 0.44", "29.1922, 135.816, 48.2963, 0.22", "29.5681, 136.32, 48.5483, 0.22", "29.6299, 136.395, 48.5859, 0.22", "30.1294, 136.944, 48.8344, 0.29", "30.5767, 137.397, 49.0615, 0.29", "31.2936, 138.164, 49.4236, 0.29", "31.5729, 138.506, 49.5652, 0.88", "31.7477, 138.758, 49.6515, 1.18", "32.0288, 139.221, 49.7804, 1.47", "32.2203, 139.596, 49.8559, 1.77", "32.7642, 140.841, 50.0492, 0.59", "33.0581, 141.615, 50.1316, 0.44", "33.2259, 142.092, 50.1821, 0.44", "33.2616, 142.198, 50.1932, 0.44", "33.4786, 142.82, 50.2567, 0.29", "33.784, 143.642, 50.3376, 0.29", "33.9981, 144.213, 50.3909, 0.52", "34.1432, 144.61, 50.4198, 0.52", "34.315, 145.079, 50.4716, 0.52", "34.6061, 145.788, 50.5735, 0.29", "34.6333, 145.851, 50.5848, 0.29", "34.6659, 145.923, 50.6003, 0.29", "34.9045, 146.428, 50.7168, 0.44", "35.3391, 147.331, 50.9288, 1.03", "35.5855, 147.84, 51.047, 1.03", "35.806, 148.276, 51.1446, 1.03", "36.0943, 148.835, 51.2627, 1.11", "36.3151, 149.247, 51.3404, 1.11", "36.6006, 149.773, 51.4274, 1.18", "36.7956, 150.133, 51.4592, 1.11", "37.0022, 150.496, 51.4655, 0.88", "37.0424, 150.553, 51.4634, 0.88", "37.6278, 151.302, 51.4095, 0.52", "37.6725, 151.357, 51.4046, 0.52", "38.1409, 151.907, 51.3478, 0.52", "39.1522, 153.063, 51.217, 0.22", "39.7632, 153.767, 51.1943, 0.22", "39.9674, 154.011, 51.2035, 0.59", "40.3813, 154.521, 51.2564, 0.88", "40.5174, 154.702, 51.2881, 1.11", "40.5586, 154.766, 51.3128, 1.11", "41.1964, 155.942, 52.0713, 0.29", "41.3597, 156.278, 52.3228, 0.29", "41.3766, 156.308, 52.3622, 0.29", "41.4677, 156.472, 52.6108, 0.29", "41.759, 156.992, 53.4828, 0.44", "41.8999, 157.214, 53.9285, 0.44", "41.986, 157.307, 54.2599, 0.44", "42.5859, 157.782, 56.5229, 0.59", "47.6238, 163.684, 62.4049, 0.59", "51.734, 168.99, 69.4427, 0.59", "55.9053, 173.97, 76.6693, 0.59", "59.2505, 179.285, 84.0997, 0.59", "63.6007, 183.209, 91.8212, 0.59", "67.1184, 185.591, 100.506, 0.59", "69.7875, 188.088, 109.459, 0.59", "74.2617, 189.487, 117.899, 0.59", "78.9825, 190.019, 126.296, 0.59", "83.6715, 192.577, 134.354, 0.59", "88.674, 194.87, 142.298, 0.59" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "22.7831, 172.924, -6.32891, 0.22", "23.7159, 174.217, -4.75486, 0.22", "24.0589, 174.712, -4.20174, 0.81", "24.1789, 174.896, -4.02134, 0.81", "25.0196, 176.315, -2.7977, 0.22", "25.2577, 176.746, -2.47123, 0.22", "25.331, 176.886, -2.37531, 0.44", "25.5067, 177.332, -2.16756, 0.44", "25.7538, 178.027, -1.90542, 0.15", "25.9053, 178.495, -1.78082, 0.15", "26.0692, 179.112, -1.71417, 0.15", "26.1284, 179.383, -1.6844, 0.66", "26.2207, 179.835, -1.63224, 1.03", "26.3173, 180.352, -1.56891, 0.66", "26.4431, 180.96, -1.48532, 0.22", "26.5026, 181.205, -1.44854, 0.22", "26.5795, 181.563, -1.39597, 0.22", "26.6537, 181.926, -1.34537, 0.22", "26.6753, 182.046, -1.33031, 0.22", "26.7262, 182.497, -1.29456, 0.74", "26.7559, 182.826, -1.27935, 0.59", "26.8021, 183.288, -1.25718, 0.29", "26.8183, 183.448, -1.24948, 0.22", "26.8348, 183.618, -1.23745, 0.22", "26.9583, 184.894, -1.11924, 0.15", "26.9788, 185.564, -1.05415, 0.15", "26.9614, 186.209, -0.990343, 0.15", "26.9517, 186.578, -0.950823, 0.15", "26.9587, 186.881, -0.920461, 0.29", "27.0203, 187.297, -0.875169, 0.29", "27.3751, 188.245, -0.750135, 1.77", "27.6835, 188.674, -0.732849, 1.77", "28.2468, 189.162, -0.71467, 1.77", "29.1886, 189.786, -0.834876, 0.22", "30.0833, 190.335, -1.08521, 0.22", "30.7883, 190.714, -1.33203, 0.22", "31.8486, 191.239, -1.80899, 0.44", "32.8387, 191.722, -2.3363, 0.22", "34.3491, 192.452, -3.27918, 0.44", "35.3155, 192.93, -4.00412, 0.44", "35.5379, 193.056, -4.20938, 0.44", "36.528, 193.716, -5.29422, 0.22", "36.7364, 193.879, -5.56028, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "22.7831, 172.924, -6.32891, 0.29", "22.608, 173.404, -6.34504, 0.29", "22.5023, 173.776, -6.38196, 0.37", "22.3941, 174.2, -6.43533, 0.37", "22.2993, 174.59, -6.48613, 0.22", "22.2592, 174.77, -6.50849, 0.29", "22.2348, 174.891, -6.52236, 0.29", "22.1323, 175.552, -6.60391, 0.22", "22.0885, 175.873, -6.6487, 0.22", "22.083, 175.925, -6.65659, 0.29", "22.0544, 176.362, -6.72544, 0.29", "22.0347, 176.688, -6.7744, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "12.2989, -78.0782, 13.9259, 0.22", "17.9688, -82.5127, 10.7181, 0.22", "23.9738, -87.0291, 8.33477, 0.22", "29.473, -92.3694, 6.3968, 0.22", "34.3937, -97.7846, 3.39433, 0.22" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "12.2989, -78.0782, 13.9259, 0.29", "19.669, -82.6904, 11.7343, 0.22", "26.0197, -88.3844, 8.87519, 0.22", "32.0323, -94.999, 7.62649, 0.22" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "13.9229, -75.7227, 27.5791, 1.33", "18.7131, -81.5841, 34.8436, 1.33", "23.7987, -87.2937, 42.0205, 1.33" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "13.9229, -75.7227, 27.5791, 0.44", "16.2953, -80.7445, 34.4942, 1.33", "17.66, -85.3247, 41.9536, 1.33" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-99.6999, 19.1819, -57.1904, 0.96", "-99.6209, 19.1014, -57.8993, 0.96", "-99.4977, 18.991, -58.834, 0.22", "-99.4495, 18.9495, -59.1279, 0.74", "-99.3086, 18.8271, -59.8917, 0.29", "-99.2862, 18.8076, -60.0134, 0.59", "-99.0303, 18.5853, -61.4011, 0.22", "-98.9567, 18.5272, -61.786, 0.22", "-98.8847, 18.4861, -62.0843, 0.59", "-98.8658, 18.4786, -62.168, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-99.6999, 19.1819, -57.1904, 0.29", "-100.972, 20.1756, -58.9992, 0.29", "-101.176, 20.3184, -59.3057, 0.59", "-101.256, 20.363, -59.4126, 0.66", "-101.353, 20.4043, -59.5255, 0.66", "-101.77, 20.5791, -60.0273, 0.52", "-101.927, 20.639, -60.2264, 0.29", "-102.566, 20.8262, -61.0346, 0.44", "-102.966, 20.9531, -61.5938, 0.44", "-103.827, 21.2343, -62.8396, 0.29", "-104.416, 21.4149, -63.6524, 0.59", "-105.129, 21.6331, -64.6284, 0.44", "-105.221, 21.6568, -64.7516, 0.52", "-106.155, 21.8379, -65.9352, 0.22", "-106.242, 21.8521, -66.0456, 0.59", "-106.811, 21.9106, -66.7281, 0.59", "-107.322, 21.9351, -67.2475, 0.59", "-108.355, 21.977, -68.1271, 0.22", "-108.475, 21.979, -68.2204, 0.44", "-108.536, 21.9792, -68.2536, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-59.0602, 145.125, -171.398, 0.15", "-58.6719, 145.271, -172.201, 0.15", "-58.1629, 145.439, -173.187, 0.52", "-57.447, 145.692, -174.537, 0.59", "-57.1179, 145.812, -175.142, 0.22", "-56.9487, 145.877, -175.446, 0.22", "-56.8218, 145.955, -175.806, 0.22", "-56.8001, 145.989, -175.94, 0.22", "-56.8188, 146.159, -176.55, 0.74", "-56.8285, 146.176, -176.611, 0.74", "-56.847, 146.201, -176.701, 0.74", "-57.4691, 146.95, -179.345, 0.22", "-57.5856, 147.079, -179.798, 0.66", "-58.019, 147.532, -181.432, 0.37", "-58.0373, 147.548, -181.495, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-59.0602, 145.125, -171.398, 0.22", "-58.6597, 145.676, -171.383, 0.22", "-58.2394, 146.275, -171.354, 0.22", "-57.8615, 146.846, -171.325, 0.81", "-57.1952, 147.912, -171.261, 0.22", "-56.8805, 148.448, -171.256, 0.37", "-56.5886, 148.962, -171.264, 0.29", "-56.2813, 149.544, -171.293, 0.22", "-56.0772, 149.96, -171.321, 0.22", "-55.9905, 150.149, -171.33, 0.66", "-55.5791, 151.164, -171.421, 0.15", "-55.5478, 151.226, -171.424, 0.15", "-55.1842, 151.849, -171.446, 0.15", "-55.1082, 151.953, -171.46, 0.15", "-54.6096, 152.614, -171.64, 0.88", "-54.4587, 152.814, -171.71, 0.88", "-53.8453, 153.578, -172.021, 0.15", "-53.7317, 153.716, -172.087, 0.15", "-52.8306, 154.757, -172.69, 1.5", "-51.9679, 155.742, -173.327, 0.29", "-51.7722, 155.986, -173.504, 0.29", "-51.4781, 156.405, -173.814, 0.29", "-51.4046, 156.525, -173.902, 0.29", "-51.3233, 156.654, -173.99, 0.29", "-51.067, 157.022, -174.208, 0.29", "-50.5898, 157.61, -174.819, 1.03", "-50.2957, 158.014, -175.454, 0.22", "-50.12, 158.251, -175.915, 0.22", "-49.974, 158.429, -176.314, 0.22", "-49.8522, 158.561, -176.717, 0.37", "-49.275, 159.039, -178.792, 0.59", "-48.8835, 159.271, -180.244, 0.59", "-48.668, 159.399, -181.077, 0.22", "-48.6169, 159.445, -181.334, 0.22", "-48.5731, 159.833, -182.948, 0.59", "-48.5906, 159.949, -183.353, 0.59", "-48.6109, 160.009, -183.54, 0.59", "-48.7603, 160.262, -184.327, 0.22", "-49.1969, 160.83, -186.04, 1.03", "-50.2532, 162.134, -189.552, 0.29", "-50.4057, 162.324, -190.004, 0.29", "-50.9204, 162.942, -191.424, 0.29", "-51.2146, 163.256, -192.161, 0.29", "-51.2855, 163.325, -192.322, 0.29", "-51.5824, 163.639, -192.964, 0.29", "-51.7057, 163.774, -193.214, 0.29", "-52.6667, 164.81, -195.14, 1.25", "-53.9481, 166.255, -197.795, 0.29", "-54.1604, 166.505, -198.269, 0.29", "-54.8382, 167.257, -199.799, 1.33", "-54.8689, 167.288, -199.867, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "32.0323, -94.999, 7.62649, 0.29", "39.8289, -97.613, -2.32883, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "32.0323, -94.999, 7.62649, 0.44", "40.7844, -103.085, 10.3309, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-54.8689, 167.288, -199.867, 0.22", "-54.494, 168.704, -200.328, 0.22", "-54.4291, 168.853, -200.381, 0.22", "-54.2313, 169.193, -200.507, 0.22", "-53.9579, 169.527, -200.696, 0.59", "-53.5351, 169.918, -200.986, 0.59", "-52.8161, 170.469, -201.542, 0.29", "-52.3601, 170.696, -201.915, 0.29", "-51.9976, 170.82, -202.234, 0.29", "-51.1287, 171.028, -203.012, 0.22", "-50.784, 171.08, -203.317, 0.22", "-50.0443, 171.157, -203.984, 0.96", "-49.9137, 171.163, -204.114, 1.25", "-48.6949, 171.247, -205.368, 0.15", "-48.4589, 171.272, -205.607, 0.96", "-48.2171, 171.315, -205.838, 0.96", "-48.1355, 171.331, -205.913, 0.96", "-47.1476, 171.523, -206.702, 0.22", "-46.8681, 171.573, -206.906, 0.22", "-46.7231, 171.602, -206.993, 0.22", "-46.6559, 171.61, -207.029, 0.22", "-46.3436, 171.596, -207.156, 0.37", "-46.175, 171.559, -207.205, 0.37", "-45.6421, 171.369, -207.305, 0.52", "-45.5431, 171.326, -207.324, 0.81", "-45.0649, 171.141, -207.423, 0.81", "-44.1374, 170.836, -207.653, 0.29", "-43.7469, 170.742, -207.764, 0.29", "-43.5809, 170.735, -207.831, 0.29", "-43.2604, 170.788, -207.997, 0.29", "-42.455, 171.058, -208.478, 0.29", "-42.13, 171.219, -208.703, 0.66", "-41.8073, 171.421, -208.949, 0.66", "-40.9224, 172.011, -209.631, 0.22", "-40.7561, 172.13, -209.764, 0.22", "-40.4934, 172.333, -209.984, 0.22", "-40.1786, 172.573, -210.257, 0.74", "-39.9515, 172.717, -210.435, 0.74", "-39.8133, 172.781, -210.536, 0.74" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-54.8689, 167.288, -199.867, 0.07", "-55.2297, 167.584, -200.439, 0.07", "-55.2816, 167.624, -200.533, 0.15", "-55.374, 167.701, -200.688, 0.15", "-55.5115, 167.805, -200.872, 0.15", "-55.7223, 167.967, -201.126, 0.15", "-57.2117, 169.202, -202.93, 0.88", "-58.1167, 169.998, -204.106, 0.15", "-58.4522, 170.311, -204.557, 1.4", "-59.3659, 171.229, -205.846, 0.29", "-59.5778, 171.456, -206.151, 0.52", "-59.9608, 171.916, -206.734, 0.22", "-60.0629, 172.09, -206.891, 0.22", "-60.1214, 172.227, -207.008, 0.22", "-60.1991, 172.482, -207.234, 0.22", "-60.2166, 172.59, -207.327, 0.22", "-60.4393, 173.927, -208.482, 1.03", "-60.5273, 174.381, -208.89, 1.03", "-60.6459, 174.984, -209.431, 0.22", "-60.7522, 175.367, -209.84, 0.22", "-60.7912, 175.499, -209.989, 0.22", "-60.8422, 175.684, -210.197, 0.22", "-61.0271, 176.44, -211.029, 0.88", "-61.1085, 176.751, -211.397, 1.11", "-61.5022, 178.408, -213.308, 0.22", "-61.5706, 178.705, -213.626, 0.37", "-61.621, 178.955, -213.861, 0.37", "-61.6699, 179.249, -214.095, 0.37", "-61.6851, 179.371, -214.171, 0.37", "-61.7629, 180.177, -214.576, 1.47", "-61.7849, 180.579, -214.7, 1.47", "-61.9961, 181.699, -215.123, 0.22", "-62.0748, 182.013, -215.252, 0.22", "-62.2679, 182.768, -215.564, 1.25", "-62.3788, 183.226, -215.753, 1.69", "-62.4916, 183.66, -215.964, 1.69", "-62.9403, 185.42, -216.884, 0.29", "-63.0238, 185.8, -217.098, 0.29", "-63.0961, 186.389, -217.438, 0.29", "-63.1053, 186.809, -217.725, 0.74", "-63.0281, 187.804, -218.522, 0.07", "-63.0154, 187.87, -218.582, 0.15", "-62.7946, 188.269, -218.983, 0.74", "-62.3912, 189.06, -219.965, 0.66", "-62.191, 189.694, -220.961, 0.66", "-62.1629, 189.788, -221.157, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-62.1629, 189.788, -221.157, 0.22", "-61.8945, 190.577, -221.75, 0.22", "-61.7738, 190.921, -221.994, 0.22", "-61.7439, 191.009, -222.048, 0.22", "-61.5823, 191.528, -222.314, 0.15", "-61.3875, 192.169, -222.599, 0.74", "-61.348, 192.314, -222.664, 0.66", "-61.3096, 192.541, -222.754, 0.59", "-61.2533, 192.911, -222.905, 0.29", "-61.2067, 193.264, -223.038, 0.22", "-61.1684, 193.557, -223.136, 0.22", "-61.0944, 194.103, -223.314, 0.22", "-61.0794, 194.237, -223.365, 0.66", "-61.0211, 194.877, -223.651, 0.22", "-60.9864, 195.228, -223.838, 0.52", "-60.9717, 195.371, -223.918, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-62.1629, 189.788, -221.157, 0.22", "-62.2185, 190.369, -221.541, 0.22", "-62.2205, 190.61, -221.707, 0.22", "-62.2094, 190.943, -221.969, 0.22", "-62.2028, 191.637, -222.534, 1.11", "-62.2041, 191.858, -222.715, 1.11", "-62.2188, 192.82, -223.493, 0.29", "-62.2163, 193.092, -223.714, 0.29", "-62.2146, 193.791, -224.232, 0.88", "-62.2235, 194.601, -224.756, 0.22", "-62.2273, 194.662, -224.792, 0.22", "-62.2519, 194.907, -224.942, 0.22", "-62.3211, 195.254, -225.178, 1.69", "-62.6359, 196.53, -226.121, 0.22", "-62.7464, 196.933, -226.459, 0.22", "-63.037, 197.926, -227.414, 0.74", "-63.0967, 198.083, -227.603, 0.81", "-63.5391, 199.124, -229.084, 0.22", "-63.5598, 199.166, -229.159, 0.22", "-63.7446, 199.491, -229.905, 0.66", "-63.7574, 199.516, -229.967, 0.81", "-64.1335, 200.265, -231.956, 0.22", "-64.2146, 200.436, -232.428, 0.22", "-64.4027, 200.924, -233.791, 1.03", "-64.4611, 201.095, -234.258, 0.66", "-64.5089, 201.214, -234.607, 0.66", "-64.7673, 201.87, -236.689, 0.15", "-64.8029, 201.961, -236.996, 0.15", "-64.8365, 202.026, -237.215, 0.74", "-64.8746, 202.095, -237.446, 0.74", "-65.3352, 202.829, -240.008, 0.15", "-65.404, 202.919, -240.364, 0.44", "-65.4535, 202.978, -240.615, 0.44", "-65.5457, 203.058, -241.003, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_132", "dend_132", "dend_132", "dend_132", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_123", "dend_123", "dend_123", "dend_123", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_94", "dend_93", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_63", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_122", "dend_121", "dend_121", "dend_121", "dend_121", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_80", "dend_80", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_131", "dend_131", "dend_131", "dend_131", "dend_128", "dend_128", "dend_128", "dend_117", "dend_117", "dend_116", "dend_116", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_130", "dend_129", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BTC_5b195d0631_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_106, id: dend_106, parent: soma_0
create dend_106
public dend_106
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_118, id: dend_118, parent: dend_106
create dend_118
public dend_118
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_91, id: dend_91, parent: dend_75
create dend_91
public dend_91
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_66, id: dend_66, parent: dend_60
create dend_66
public dend_66
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_53
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_30, id: dend_30, parent: dend_0
create dend_30
public dend_30
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_132, id: dend_132, parent: dend_118
create dend_132
public dend_132
// Section: dend_119, id: dend_119, parent: dend_118
create dend_119
public dend_119
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_95, id: dend_95, parent: dend_91
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_84, id: dend_84, parent: dend_76
create dend_84
public dend_84
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_66
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_42, id: dend_42, parent: dend_30
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_134, id: dend_134, parent: dend_132
create dend_134
public dend_134
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_123, id: dend_123, parent: dend_119
create dend_123
public dend_123
// Section: dend_120, id: dend_120, parent: dend_119
create dend_120
public dend_120
// Section: dend_111, id: dend_111, parent: dend_109
create dend_111
public dend_111
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_99, id: dend_99, parent: dend_95
create dend_99
public dend_99
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_88, id: dend_88, parent: dend_84
create dend_88
public dend_88
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_125, id: dend_125, parent: dend_123
create dend_125
public dend_125
// Section: dend_124, id: dend_124, parent: dend_123
create dend_124
public dend_124
// Section: dend_122, id: dend_122, parent: dend_120
create dend_122
public dend_122
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_113, id: dend_113, parent: dend_111
create dend_113
public dend_113
// Section: dend_112, id: dend_112, parent: dend_111
create dend_112
public dend_112
// Section: dend_103, id: dend_103, parent: dend_99
create dend_103
public dend_103
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_127, id: dend_127, parent: dend_125
create dend_127
public dend_127
// Section: dend_126, id: dend_126, parent: dend_125
create dend_126
public dend_126
// Section: dend_115, id: dend_115, parent: dend_113
create dend_115
public dend_115
// Section: dend_114, id: dend_114, parent: dend_113
create dend_114
public dend_114
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: dend_21
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_131, id: dend_131, parent: dend_127
create dend_131
public dend_131
// Section: dend_128, id: dend_128, parent: dend_127
create dend_128
public dend_128
// Section: dend_117, id: dend_117, parent: dend_115
create dend_117
public dend_117
// Section: dend_116, id: dend_116, parent: dend_115
create dend_116
public dend_116
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_113
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_0, dend_0, dend_0, axon_0, axon_0, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_132, dend_132, dend_132, dend_132, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_123, dend_123, dend_123, dend_123, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_93, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_63, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_122, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_80, dend_80, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_131, dend_131, dend_131, dend_131, dend_128, dend_128, dend_128, dend_117, dend_117, dend_116, dend_116, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_130, dend_129, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_106(0), soma_0(0.4500002059017331)
    connect dend_75(0), soma_0(0.4500002059017331)
    connect dend_60(0), soma_0(0.4500002059017331)
    connect dend_53(0), soma_0(0.4500002059017331)
    connect dend_0(0), soma_0(0.4500002059017331)
    connect axon_0(0), soma_0(1.0)
    connect dend_118(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_91(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_66(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_30(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_132(0), dend_118(1.0)
    connect dend_119(0), dend_118(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_95(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_84(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_42(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_134(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_123(0), dend_119(1.0)
    connect dend_120(0), dend_119(1.0)
    connect dend_111(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_99(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_88(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_125(0), dend_123(1.0)
    connect dend_124(0), dend_123(1.0)
    connect dend_122(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_113(0), dend_111(1.0)
    connect dend_112(0), dend_111(1.0)
    connect dend_103(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_127(0), dend_125(1.0)
    connect dend_126(0), dend_125(1.0)
    connect dend_115(0), dend_113(1.0)
    connect dend_114(0), dend_113(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_29(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_131(0), dend_127(1.0)
    connect dend_128(0), dend_127(1.0)
    connect dend_117(0), dend_115(1.0)
    connect dend_116(0), dend_115(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.00557, 13.9448, -0.281532, 2.94779 ) }
    soma_0 { pt3dadd( -0.903474, 12.664, -0.255809, 4.6084 ) }
    soma_0 { pt3dadd( -0.801382, 11.3832, -0.230087, 6.06545 ) }
    soma_0 { pt3dadd( -0.699289, 10.1025, -0.204364, 7.51206 ) }
    soma_0 { pt3dadd( -0.597197, 8.82172, -0.178642, 8.73615 ) }
    soma_0 { pt3dadd( -0.495104, 7.54095, -0.15292, 9.82275 ) }
    soma_0 { pt3dadd( -0.393011, 6.26019, -0.127197, 10.7174 ) }
    soma_0 { pt3dadd( -0.290919, 4.97943, -0.101475, 11.6395 ) }
    soma_0 { pt3dadd( -0.188826, 3.69867, -0.0757524, 12.4724 ) }
    soma_0 { pt3dadd( -0.0867336, 2.41791, -0.05003, 12.6766 ) }
    soma_0 { pt3dadd( 0.015359, 1.13715, -0.0243075, 12.8528 ) }
    soma_0 { pt3dadd( 0.117452, -0.143613, 0.00141486, 12.7165 ) }
    soma_0 { pt3dadd( 0.219544, -1.42437, 0.0271373, 12.4031 ) }
    soma_0 { pt3dadd( 0.321637, -2.70514, 0.0528597, 12.3753 ) }
    soma_0 { pt3dadd( 0.423729, -3.9859, 0.0785821, 12.071 ) }
    soma_0 { pt3dadd( 0.525822, -5.26666, 0.104304, 10.4042 ) }
    soma_0 { pt3dadd( 0.627914, -6.54742, 0.130027, 7.86989 ) }
    soma_0 { pt3dadd( 0.730007, -7.82818, 0.155749, 5.70594 ) }
    soma_0 { pt3dadd( 0.8321, -9.10894, 0.181472, 4.59143 ) }
    soma_0 { pt3dadd( 0.934192, -10.3897, 0.207194, 3.60784 ) }
    soma_0 { pt3dadd( 1.03628, -11.6705, 0.232917, 2.27826 ) }
    // Section: dend_106, id: dend_106, parent: soma_0 (entry count 21/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 0.462584, -8.82701, 1.90039, 2.8 ) }
    dend_106 { pt3dadd( 0.572848, -9.51087, 1.85432, 2.8 ) }
    dend_106 { pt3dadd( 0.705028, -10.2336, 1.81067, 2.28 ) }
    dend_106 { pt3dadd( 0.854742, -10.9603, 1.79588, 1.77 ) }
    dend_106 { pt3dadd( 0.94883, -11.34, 1.79607, 1.4 ) }
    dend_106 { pt3dadd( 1.29138, -12.5531, 1.8107, 1.33 ) }
    dend_106 { pt3dadd( 1.52235, -13.2651, 1.85245, 1.18 ) }
    dend_106 { pt3dadd( 1.74583, -13.8369, 1.91282, 1.11 ) }
    dend_106 { pt3dadd( 2.07607, -14.5891, 2.05203, 1.25 ) }
    dend_106 { pt3dadd( 2.35086, -15.1975, 2.20685, 1.33 ) }
    dend_106 { pt3dadd( 2.55022, -15.6519, 2.35096, 1.4 ) }
    dend_106 { pt3dadd( 2.92252, -16.5748, 2.70369, 1.33 ) }
    dend_106 { pt3dadd( 3.0774, -16.9921, 2.88296, 1.03 ) }
    dend_106 { pt3dadd( 3.28862, -17.7363, 3.22488, 0.59 ) }
    dend_106 { pt3dadd( 3.33631, -18.1173, 3.40287, 0.52 ) }
    dend_106 { pt3dadd( 3.30357, -18.3476, 3.5124, 0.52 ) }
    dend_106 { pt3dadd( 3.24103, -18.4555, 3.55859, 0.52 ) }
    dend_106 { pt3dadd( 2.98294, -18.6473, 3.61114, 0.52 ) }
    dend_106 { pt3dadd( 2.53829, -18.8665, 3.70729, 0.52 ) }
    dend_106 { pt3dadd( 2.36425, -18.9596, 3.76415, 0.52 ) }
    dend_106 { pt3dadd( 2.10372, -19.134, 3.88415, 0.52 ) }
    dend_106 { pt3dadd( 1.85447, -19.3482, 4.0261, 0.52 ) }
    dend_106 { pt3dadd( 1.82264, -19.3982, 3.74527, 0.52 ) }
    dend_106 { pt3dadd( 1.71518, -19.606, 2.84738, 0.52 ) }
    dend_106 { pt3dadd( 1.56764, -19.9342, 1.6644, 1.55 ) }
    dend_106 { pt3dadd( 1.52195, -20.0563, 1.26374, 1.84 ) }
    dend_106 { pt3dadd( 1.48938, -20.1639, 0.926311, 2.14 ) }
    dend_106 { pt3dadd( 0.829721, -23.1214, -8.2057, 1.25 ) }
    dend_106 { pt3dadd( 0.803305, -23.3033, -8.79137, 1.11 ) }
    dend_106 { pt3dadd( 0.757757, -23.6166, -10.0164, 0.81 ) }
    dend_106 { pt3dadd( 0.740549, -23.6803, -10.3759, 0.59 ) }
    dend_106 { pt3dadd( 0.612657, -23.7831, -11.7674, 0.88 ) }
    dend_106 { pt3dadd( 0.537449, -23.7389, -12.231, 0.88 ) }
    dend_106 { pt3dadd( 0.743337, -24.0693, -11.3611, 0.44 ) }
    dend_106 { pt3dadd( 1.19416, -25.0304, -8.82179, 0.81 ) }
    dend_106 { pt3dadd( 1.2158, -25.1045, -8.64137, 0.81 ) }
    dend_106 { pt3dadd( 1.233, -25.4159, -8.01931, 1.03 ) }
    dend_106 { pt3dadd( 1.20198, -25.6903, -7.60453, 0.96 ) }
    dend_106 { pt3dadd( 0.969475, -26.7214, -6.3709, 0.96 ) }
    dend_106 { pt3dadd( 0.769771, -27.379, -5.83029, 0.96 ) }
    dend_106 { pt3dadd( 0.642917, -27.7991, -5.60943, 0.96 ) }
    dend_106 { pt3dadd( 0.406593, -28.7065, -5.16363, 0.66 ) }
    dend_106 { pt3dadd( 0.240197, -29.5649, -4.77901, 0.44 ) }
    dend_106 { pt3dadd( 0.200219, -29.87, -4.6561, 0.44 ) }
    dend_106 { pt3dadd( 0.179471, -30.1412, -4.57352, 0.44 ) }
    dend_106 { pt3dadd( 0.140931, -31.0468, -4.28593, 0.81 ) }
    dend_106 { pt3dadd( 0.138913, -31.1, -4.26852, 0.81 ) }
    dend_106 { pt3dadd( 0.0719897, -31.9651, -3.99335, 1.11 ) }
    dend_106 { pt3dadd( 0.021629, -32.4692, -3.82711, 1.55 ) }
    dend_106 { pt3dadd( -0.00241271, -32.6717, -3.77679, 1.69 ) }
    dend_106 { pt3dadd( -0.0514026, -33.0167, -3.70417, 1.77 ) }
    dend_106 { pt3dadd( -0.20076, -33.8784, -3.573, 1.77 ) }
    dend_106 { pt3dadd( -0.292716, -34.312, -3.50922, 1.77 ) }
    dend_106 { pt3dadd( -0.42843, -34.7878, -3.44791, 1.77 ) }
    dend_106 { pt3dadd( -0.711979, -35.4584, -3.34408, 1.03 ) }
    dend_106 { pt3dadd( -0.959456, -35.8967, -3.26354, 1.03 ) }
    dend_106 { pt3dadd( -1.11881, -36.0926, -3.18854, 0.96 ) }
    dend_106 { pt3dadd( -1.37685, -36.3196, -3.04251, 0.66 ) }
    dend_106 { pt3dadd( -1.71958, -36.582, -2.82181, 0.52 ) }
    dend_106 { pt3dadd( -1.99674, -36.8107, -2.50873, 0.59 ) }
    dend_106 { pt3dadd( -2.02178, -36.8389, -2.46738, 0.59 ) }
    dend_106 { pt3dadd( -2.43772, -37.514, -1.5047, 0.96 ) }
    dend_106 { pt3dadd( -2.52218, -37.6907, -1.22999, 0.96 ) }
    dend_106 { pt3dadd( -2.57007, -37.8022, -1.05071, 0.96 ) }
    dend_106 { pt3dadd( -2.8914, -38.6814, 0.639397, 0.59 ) }
    dend_106 { pt3dadd( -2.9823, -38.9876, 1.23062, 1.18 ) }
    dend_106 { pt3dadd( -3.00856, -39.0803, 1.41038, 1.18 ) }
    dend_106 { pt3dadd( -3.19115, -39.8145, 2.85007, 1.55 ) }
    dend_106 { pt3dadd( -3.23664, -39.9839, 3.21032, 1.55 ) }
    dend_106 { pt3dadd( -3.57722, -41.0192, 5.59269, 1.03 ) }
    dend_106 { pt3dadd( -3.74414, -41.348, 6.44139, 0.66 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 92/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 0.932584, -11.1127, -0.789611, 2.95 ) }
    dend_75 { pt3dadd( 0.932584, -11.1127, -0.789611, 2.95 ) }
    dend_75 { pt3dadd( 1.03466, -11.7309, -0.789611, 2.95 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 95/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.33741, 13.9895, 3.03039, 2.06 ) }
    dend_60 { pt3dadd( -1.33741, 13.9895, 3.03039, 2.06 ) }
    dend_60 { pt3dadd( -0.989452, 14.6463, 4.19777, 1.47 ) }
    dend_60 { pt3dadd( -0.421213, 15.8653, 6.31929, 1.55 ) }
    dend_60 { pt3dadd( -0.404445, 15.907, 6.39018, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_60 { pt3dadd( -0.199594, 16.4855, 7.3406, 1.77 ) }
    dend_60 { pt3dadd( 0.388417, 18.3737, 10.3402, 1.77 ) }
    dend_60 { pt3dadd( 0.644759, 19.305, 11.798, 1.84 ) }
    dend_60 { pt3dadd( 0.744883, 19.8266, 12.6776, 1.99 ) }
    dend_60 { pt3dadd( 0.800127, 20.3045, 13.4485, 2.14 ) }
    dend_60 { pt3dadd( 0.816167, 20.5707, 13.875, 2.28 ) }
    dend_60 { pt3dadd( 0.801382, 20.7805, 14.208, 2.73 ) }
    dend_60 { pt3dadd( 0.699852, 21.1799, 14.7085, 2.8 ) }
    dend_60 { pt3dadd( 0.15099, 23.0524, 17.0856, 2.8 ) }
    dend_60 { pt3dadd( 0.0777066, 23.2992, 17.4903, 2.8 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.47741, -4.74751, -5.90961, 1.25 ) }
    dend_53 { pt3dadd( -4.81338, -5.1618, -5.79207, 1.25 ) }
    dend_53 { pt3dadd( -5.41705, -5.92512, -5.73541, 1.03 ) }
    dend_53 { pt3dadd( -5.77928, -6.41077, -5.75045, 1.03 ) }
    dend_53 { pt3dadd( -6.57338, -7.49207, -5.83057, 0.66 ) }
    dend_53 { pt3dadd( -7.27842, -8.43182, -6.06326, 0.74 ) }
    dend_53 { pt3dadd( -7.92304, -9.24158, -6.32601, 0.74 ) }
    dend_53 { pt3dadd( -8.91207, -10.4129, -6.8129, 1.18 ) }
    dend_53 { pt3dadd( -9.53048, -11.0876, -7.15098, 1.47 ) }
    dend_53 { pt3dadd( -10.442, -11.9996, -7.67596, 1.77 ) }
    dend_53 { pt3dadd( -12.3417, -13.6181, -8.85672, 0.52 ) }
    dend_53 { pt3dadd( -13.0915, -14.1473, -9.30237, 0.52 ) }
    dend_53 { pt3dadd( -13.4265, -14.3304, -9.52747, 0.74 ) }
    dend_53 { pt3dadd( -13.9996, -14.5469, -9.86306, 1.18 ) }
    dend_53 { pt3dadd( -14.7118, -14.7179, -10.4258, 1.47 ) }
    dend_53 { pt3dadd( -15.4832, -14.8508, -11.1336, 1.92 ) }
    dend_53 { pt3dadd( -15.8449, -14.9144, -11.4851, 1.69 ) }
    dend_53 { pt3dadd( -17.9296, -15.4129, -13.8068, 0.88 ) }
    dend_53 { pt3dadd( -19.3282, -15.8649, -15.4862, 0.74 ) }
    dend_53 { pt3dadd( -21.765, -16.8981, -18.6233, 0.74 ) }
    dend_53 { pt3dadd( -22.1117, -17.1006, -19.1314, 0.52 ) }
    dend_53 { pt3dadd( -22.6106, -17.4947, -19.9358, 0.52 ) }
    dend_53 { pt3dadd( -23.1448, -18.0219, -20.8559, 0.96 ) }
    dend_53 { pt3dadd( -23.4845, -18.4384, -21.4146, 0.96 ) }
    dend_53 { pt3dadd( -23.7842, -18.8637, -21.8985, 1.33 ) }
    dend_53 { pt3dadd( -25.0505, -20.5761, -23.6173, 1.33 ) }
    dend_53 { pt3dadd( -26.2219, -21.9026, -25.1808, 0.44 ) }
    dend_53 { pt3dadd( -26.5246, -22.22, -25.5829, 0.88 ) }
    dend_53 { pt3dadd( -27.2812, -22.9507, -26.5331, 0.29 ) }
    dend_53 { pt3dadd( -27.8651, -23.4686, -27.2679, 1.33 ) }
    dend_53 { pt3dadd( -29.5066, -24.7555, -29.1947, 1.84 ) }
    dend_53 { pt3dadd( -30.3902, -25.3633, -29.9445, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.82741, 14.1125, -3.03961, 1.99 ) }
    dend_0 { pt3dadd( -2.82741, 14.1125, -3.03961, 1.99 ) }
    dend_0 { pt3dadd( -3.2076, 15.7333, -3.40093, 2.06 ) }
    dend_0 { pt3dadd( -3.52688, 17.0944, -3.70436, 2.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 46/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.03628, -11.6705, 0.232917, 0.549059 ) }
    axon_0 { pt3dadd( 2.22818, -26.6231, 0.232917, 0.549059 ) }
    axon_0 { pt3dadd( 3.42008, -41.5756, 0.232917, 0.549059 ) }
    // Section: dend_118, id: dend_118, parent: dend_106 (entry count 49/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -3.74414, -41.348, 6.44139, 0.52 ) }
    dend_118 { pt3dadd( -3.06415, -41.9971, 6.54478, 0.52 ) }
    dend_118 { pt3dadd( -2.70802, -42.5232, 6.74981, 0.74 ) }
    dend_118 { pt3dadd( -2.63438, -42.8233, 6.88339, 0.74 ) }
    dend_118 { pt3dadd( -2.63827, -43.3474, 7.06516, 0.74 ) }
    dend_118 { pt3dadd( -2.64881, -43.4185, 7.08578, 0.74 ) }
    dend_118 { pt3dadd( -2.73036, -43.7404, 7.16637, 0.74 ) }
    dend_118 { pt3dadd( -3.20054, -44.8274, 7.3998, 0.66 ) }
    dend_118 { pt3dadd( -3.63475, -45.6512, 7.57316, 0.66 ) }
    dend_118 { pt3dadd( -4.04947, -46.3787, 7.72313, 1.25 ) }
    dend_118 { pt3dadd( -4.22108, -46.6871, 7.77906, 1.18 ) }
    dend_118 { pt3dadd( -4.43098, -47.085, 7.83795, 1.33 ) }
    dend_118 { pt3dadd( -4.63469, -47.4737, 7.87728, 1.11 ) }
    dend_118 { pt3dadd( -4.66934, -47.5397, 7.87869, 1.11 ) }
    dend_118 { pt3dadd( -4.94047, -48.0389, 8.00178, 0.66 ) }
    dend_118 { pt3dadd( -5.24774, -48.5995, 8.47104, 0.59 ) }
    dend_118 { pt3dadd( -5.27123, -48.6464, 8.52398, 0.59 ) }
    dend_118 { pt3dadd( -5.42947, -49.0134, 8.9786, 0.44 ) }
    dend_118 { pt3dadd( -5.55866, -49.3348, 9.40721, 0.44 ) }
    dend_118 { pt3dadd( -5.88518, -50.132, 10.5649, 0.96 ) }
    dend_118 { pt3dadd( -6.346, -51.2208, 12.3927, 1.11 ) }
    dend_118 { pt3dadd( -6.42221, -51.4045, 12.7455, 0.88 ) }
    dend_118 { pt3dadd( -6.51359, -51.6771, 13.2919, 0.88 ) }
    dend_118 { pt3dadd( -6.51693, -51.6951, 13.3311, 0.88 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 73/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( -3.74414, -41.348, 6.44139, 0.37 ) }
    dend_107 { pt3dadd( -3.52805, -41.7935, 6.28619, 0.37 ) }
    dend_107 { pt3dadd( -3.30449, -42.2986, 6.15665, 0.37 ) }
    dend_107 { pt3dadd( -2.98408, -43.0328, 6.18402, 0.59 ) }
    dend_107 { pt3dadd( -2.88017, -43.2745, 6.24171, 0.74 ) }
    dend_107 { pt3dadd( -2.69532, -43.7153, 6.41501, 0.74 ) }
    dend_107 { pt3dadd( -2.52379, -44.1136, 6.59107, 0.37 ) }
    dend_107 { pt3dadd( -2.25285, -44.7493, 6.92559, 0.37 ) }
    dend_107 { pt3dadd( -1.70495, -46.057, 7.71187, 0.29 ) }
    dend_107 { pt3dadd( -1.44387, -46.6973, 8.1451, 0.81 ) }
    dend_107 { pt3dadd( -1.11375, -47.488, 8.72229, 0.37 ) }
    dend_107 { pt3dadd( -0.902667, -47.9931, 9.12849, 0.29 ) }
    dend_107 { pt3dadd( -0.818465, -48.1949, 9.30686, 0.37 ) }
    // Section: dend_91, id: dend_91, parent: dend_75 (entry count 86/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 1.03466, -11.7309, -0.789611, 1.47 ) }
    dend_91 { pt3dadd( 3.48244, -13.9763, -2.88733, 1.47 ) }
    dend_91 { pt3dadd( 4.33556, -14.8963, -3.56987, 1.33 ) }
    dend_91 { pt3dadd( 4.54219, -15.212, -3.89553, 1.33 ) }
    dend_91 { pt3dadd( 4.82163, -15.798, -4.53392, 1.03 ) }
    dend_91 { pt3dadd( 4.99088, -16.2844, -5.05077, 0.81 ) }
    dend_91 { pt3dadd( 5.16052, -17.0079, -5.78363, 1.11 ) }
    dend_91 { pt3dadd( 5.07822, -17.8411, -6.63341, 1.18 ) }
    dend_91 { pt3dadd( 4.12066, -20.3353, -9.89253, 0.88 ) }
    dend_91 { pt3dadd( 3.87984, -20.7582, -10.4919, 1.33 ) }
    dend_91 { pt3dadd( 3.57726, -21.1864, -11.1407, 1.92 ) }
    dend_91 { pt3dadd( 3.22193, -21.6526, -11.8757, 1.99 ) }
    dend_91 { pt3dadd( 2.37326, -22.7658, -13.6992, 1.92 ) }
    dend_91 { pt3dadd( 1.21853, -24.4802, -16.5478, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_91 { pt3dadd( 0.94216, -25.0664, -17.4629, 1.18 ) }
    dend_91 { pt3dadd( 0.672595, -25.9478, -18.9019, 1.18 ) }
    dend_91 { pt3dadd( 0.627427, -26.3776, -19.6195, 1.18 ) }
    dend_91 { pt3dadd( 0.744157, -27.1515, -20.8744, 1.18 ) }
    dend_91 { pt3dadd( 1.12386, -28.0047, -22.0688, 1.4 ) }
    dend_91 { pt3dadd( 1.62091, -28.6208, -22.8248, 2.06 ) }
    dend_91 { pt3dadd( 1.67199, -28.6675, -22.8896, 2.06 ) }
    dend_91 { pt3dadd( 2.06363, -28.9405, -23.2938, 1.84 ) }
    dend_91 { pt3dadd( 2.10488, -28.9683, -23.3386, 1.84 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 9/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 1.03466, -11.7309, -0.789611, 1.03 ) }
    dend_76 { pt3dadd( 0.00816573, -14.951, -1.93833, 1.03 ) }
    dend_76 { pt3dadd( -0.51786, -16.7231, -2.54289, 0.96 ) }
    dend_76 { pt3dadd( -0.967209, -18.2368, -3.05933, 1.33 ) }
    dend_76 { pt3dadd( -1.46856, -19.9257, -3.63554, 1.55 ) }
    dend_76 { pt3dadd( -1.79015, -21.009, -4.00514, 1.55 ) }
    dend_76 { pt3dadd( -2.0619, -21.9245, -4.31746, 1.55 ) }
    dend_76 { pt3dadd( -2.33118, -23.2418, -4.67186, 1.69 ) }
    // Section: dend_66, id: dend_66, parent: dend_60 (entry count 17/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 0.0777066, 23.2992, 17.4903, 1.03 ) }
    dend_66 { pt3dadd( 0.203394, 24.0537, 17.3486, 1.03 ) }
    dend_66 { pt3dadd( 0.271827, 24.4816, 17.3597, 1.03 ) }
    dend_66 { pt3dadd( 0.308445, 24.8179, 17.4045, 0.88 ) }
    dend_66 { pt3dadd( 0.324539, 25.22, 17.4761, 0.88 ) }
    dend_66 { pt3dadd( 0.318349, 25.6015, 17.5231, 0.88 ) }
    dend_66 { pt3dadd( 0.297454, 25.9202, 17.5537, 1.03 ) }
    dend_66 { pt3dadd( 0.1597, 26.771, 17.6742, 1.03 ) }
    dend_66 { pt3dadd( 0.0560056, 27.2073, 17.7266, 0.96 ) }
    dend_66 { pt3dadd( -0.071892, 27.6273, 17.7642, 0.96 ) }
    dend_66 { pt3dadd( -0.318108, 28.2836, 17.7934, 0.66 ) }
    dend_66 { pt3dadd( -0.433474, 28.552, 17.7895, 0.59 ) }
    dend_66 { pt3dadd( -0.521617, 28.7388, 17.7699, 0.52 ) }
    dend_66 { pt3dadd( -0.60632, 28.912, 17.7368, 0.59 ) }
    dend_66 { pt3dadd( -0.691763, 29.0935, 17.6996, 0.74 ) }
    dend_66 { pt3dadd( -0.853903, 29.4605, 17.6294, 1.03 ) }
    dend_66 { pt3dadd( -0.986643, 29.7713, 17.5807, 0.96 ) }
    dend_66 { pt3dadd( -1.18062, 30.2593, 17.5012, 1.25 ) }
    dend_66 { pt3dadd( -1.31753, 30.6102, 17.4004, 1.62 ) }
    dend_66 { pt3dadd( -1.50724, 31.0785, 17.2273, 1.62 ) }
    dend_66 { pt3dadd( -1.62854, 31.3413, 17.116, 1.47 ) }
    dend_66 { pt3dadd( -1.78117, 31.6166, 16.9874, 1.25 ) }
    dend_66 { pt3dadd( -2.00815, 31.9481, 16.8201, 1.11 ) }
    dend_66 { pt3dadd( -2.69266, 32.7539, 16.3941, 0.81 ) }
    dend_66 { pt3dadd( -3.04289, 33.0881, 16.2121, 0.74 ) }
    dend_66 { pt3dadd( -3.42182, 33.3825, 16.0512, 0.74 ) }
    dend_66 { pt3dadd( -3.80026, 33.6227, 15.9155, 0.74 ) }
    dend_66 { pt3dadd( -4.06826, 33.7526, 15.8451, 0.74 ) }
    dend_66 { pt3dadd( -4.28631, 33.8338, 15.8121, 0.74 ) }
    dend_66 { pt3dadd( -4.55745, 33.9169, 15.8119, 0.74 ) }
    dend_66 { pt3dadd( -4.86302, 33.9908, 15.87, 0.66 ) }
    dend_66 { pt3dadd( -5.1055, 34.0599, 15.9714, 0.52 ) }
    dend_66 { pt3dadd( -5.42208, 34.1792, 16.1793, 0.59 ) }
    dend_66 { pt3dadd( -5.57819, 34.272, 16.3129, 0.59 ) }
    dend_66 { pt3dadd( -5.61482, 34.3055, 16.3516, 0.59 ) }
    dend_66 { pt3dadd( -6.28835, 35.1651, 17.2266, 0.74 ) }
    dend_66 { pt3dadd( -6.39142, 35.3894, 17.5023, 1.03 ) }
    dend_66 { pt3dadd( -6.42545, 35.5208, 17.6619, 1.77 ) }
    dend_66 { pt3dadd( -6.47452, 35.8959, 18.0903, 1.77 ) }
    dend_66 { pt3dadd( -6.49021, 36.2118, 18.4269, 1.77 ) }
    dend_66 { pt3dadd( -6.49027, 36.2544, 18.4702, 1.77 ) }
    dend_66 { pt3dadd( -6.35093, 37.6005, 19.7026, 1.77 ) }
    dend_66 { pt3dadd( -6.31537, 37.8582, 19.982, 1.77 ) }
    dend_66 { pt3dadd( -6.28807, 38.0209, 20.1917, 1.84 ) }
    dend_66 { pt3dadd( -6.24867, 38.1887, 20.4714, 1.69 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 0.0777066, 23.2992, 17.4903, 0.88 ) }
    dend_61 { pt3dadd( -1.25097, 24.164, 19.6274, 0.88 ) }
    dend_61 { pt3dadd( -1.51911, 24.361, 20.0237, 0.88 ) }
    dend_61 { pt3dadd( -1.96201, 24.7319, 20.6153, 0.81 ) }
    dend_61 { pt3dadd( -2.19435, 24.9541, 20.9007, 0.52 ) }
    dend_61 { pt3dadd( -2.38584, 25.1635, 21.126, 0.52 ) }
    dend_61 { pt3dadd( -2.41588, 25.2032, 21.1616, 0.52 ) }
    dend_61 { pt3dadd( -2.40226, 25.4533, 21.4157, 0.66 ) }
    dend_61 { pt3dadd( -2.25915, 25.6248, 21.7294, 0.59 ) }
    dend_61 { pt3dadd( -2.12816, 25.7304, 21.9649, 0.59 ) }
    dend_61 { pt3dadd( -1.99628, 25.8291, 22.1846, 0.74 ) }
    dend_61 { pt3dadd( -1.75708, 26.0018, 22.5638, 0.96 ) }
    dend_61 { pt3dadd( -0.077393, 27.2052, 25.2219, 1.11 ) }
    dend_61 { pt3dadd( 0.258655, 27.4189, 25.743, 1.18 ) }
    dend_61 { pt3dadd( 0.34576, 27.4668, 25.8775, 1.18 ) }
    dend_61 { pt3dadd( 0.542364, 27.562, 26.1958, 1.11 ) }
    dend_61 { pt3dadd( 0.662476, 27.6076, 26.3912, 1.03 ) }
    dend_61 { pt3dadd( 0.849697, 27.6364, 26.6243, 0.81 ) }
    dend_61 { pt3dadd( -0.361071, 27.6794, 26.4694, 1.03 ) }
    dend_61 { pt3dadd( -0.653181, 27.6701, 26.4716, 1.03 ) }
    dend_61 { pt3dadd( -1.6099, 27.612, 26.5634, 1.03 ) }
    dend_61 { pt3dadd( -2.11911, 27.5756, 26.6466, 0.74 ) }
    dend_61 { pt3dadd( -2.25102, 27.5708, 26.6995, 0.74 ) }
    dend_61 { pt3dadd( -2.64707, 27.5911, 26.9414, 0.88 ) }
    dend_61 { pt3dadd( -3.15186, 27.6989, 27.3655, 0.74 ) }
    dend_61 { pt3dadd( -3.49421, 27.8754, 27.6859, 0.74 ) }
    dend_61 { pt3dadd( -3.55777, 27.969, 27.7896, 0.74 ) }
    dend_61 { pt3dadd( -3.8691, 28.9974, 28.6991, 0.74 ) }
    dend_61 { pt3dadd( -3.93254, 29.4488, 29.0064, 1.25 ) }
    dend_61 { pt3dadd( -3.92647, 29.8719, 29.2173, 1.25 ) }
    dend_61 { pt3dadd( -3.87313, 30.4169, 29.4278, 1.25 ) }
    dend_61 { pt3dadd( -3.66797, 31.6255, 29.9235, 1.03 ) }
    dend_61 { pt3dadd( -3.54722, 32.1584, 30.1876, 0.96 ) }
    dend_61 { pt3dadd( -3.37667, 32.8192, 30.4705, 0.81 ) }
    dend_61 { pt3dadd( -3.18457, 33.4616, 30.7754, 0.74 ) }
    dend_61 { pt3dadd( -3.11841, 33.6668, 30.871, 0.74 ) }
    dend_61 { pt3dadd( -2.81053, 34.5841, 31.6872, 0.74 ) }
    dend_61 { pt3dadd( -2.6597, 35.2744, 32.4862, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( -2.6182, 35.8093, 33.461, 0.74 ) }
    dend_61 { pt3dadd( -2.62166, 35.9713, 33.8152, 0.74 ) }
    dend_61 { pt3dadd( -2.63578, 36.1387, 34.2156, 0.74 ) }
    dend_61 { pt3dadd( -2.8127, 37.3685, 37.2837, 0.81 ) }
    dend_61 { pt3dadd( -2.87153, 37.6156, 37.9186, 1.03 ) }
    dend_61 { pt3dadd( -3.13651, 38.4814, 40.4079, 1.25 ) }
    dend_61 { pt3dadd( -3.14339, 38.5021, 40.4748, 1.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_53 (entry count 7/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -30.3902, -25.3633, -29.9445, 0.74 ) }
    dend_59 { pt3dadd( -32.1691, -24.848, -36.1138, 0.74 ) }
    dend_59 { pt3dadd( -32.7209, -24.6728, -37.8214, 0.37 ) }
    dend_59 { pt3dadd( -32.9576, -24.5953, -38.5047, 0.37 ) }
    dend_59 { pt3dadd( -33.3029, -24.4815, -39.4253, 0.37 ) }
    dend_59 { pt3dadd( -33.4408, -24.4487, -39.7695, 0.37 ) }
    dend_59 { pt3dadd( -33.6636, -24.3963, -40.285, 0.74 ) }
    dend_59 { pt3dadd( -33.8578, -24.3433, -40.5862, 1.03 ) }
    dend_59 { pt3dadd( -34.6314, -24.1993, -41.8001, 1.33 ) }
    dend_59 { pt3dadd( -34.8267, -24.1751, -42.1105, 1.25 ) }
    dend_59 { pt3dadd( -36.0294, -24.1327, -45.1617, 0.22 ) }
    dend_59 { pt3dadd( -36.2541, -24.1087, -45.8254, 0.22 ) }
    dend_59 { pt3dadd( -36.3359, -24.0938, -46.0937, 0.59 ) }
    dend_59 { pt3dadd( -36.4518, -24.0628, -46.4878, 1.03 ) }
    dend_59 { pt3dadd( -36.5549, -24.0265, -46.8653, 1.03 ) }
    dend_59 { pt3dadd( -37.9166, -23.5734, -52.9756, 0.22 ) }
    dend_59 { pt3dadd( -38.0913, -23.5156, -53.897, 0.66 ) }
    dend_59 { pt3dadd( -38.1247, -23.5059, -54.0873, 1.47 ) }
    dend_59 { pt3dadd( -38.1924, -23.4878, -54.5986, 1.84 ) }
    dend_59 { pt3dadd( -38.3903, -23.4454, -56.3509, 1.33 ) }
    dend_59 { pt3dadd( -38.8213, -23.3298, -60.5463, 0.88 ) }
    dend_59 { pt3dadd( -38.8299, -23.3283, -60.638, 0.88 ) }
    dend_59 { pt3dadd( -38.8653, -23.3272, -61.0216, 0.96 ) }
    dend_59 { pt3dadd( -39.6204, -23.2159, -68.2543, 1.47 ) }
    dend_59 { pt3dadd( -39.6316, -23.2136, -68.3457, 1.47 ) }
    dend_59 { pt3dadd( -39.7134, -23.1899, -68.9049, 1.47 ) }
    dend_59 { pt3dadd( -40.6973, -22.7843, -74.833, 0.29 ) }
    dend_59 { pt3dadd( -40.8265, -22.7287, -75.5669, 0.29 ) }
    dend_59 { pt3dadd( -41.0713, -22.6254, -76.7547, 0.29 ) }
    dend_59 { pt3dadd( -41.2497, -22.5341, -77.4111, 0.52 ) }
    dend_59 { pt3dadd( -41.2497, -22.5341, -77.4111, 0.96 ) }
    dend_59 { pt3dadd( -41.4575, -22.5311, -79.4337, 1.47 ) }
    dend_59 { pt3dadd( -41.8207, -22.5683, -83.7196, 0.44 ) }
    dend_59 { pt3dadd( -41.8698, -22.5807, -84.3498, 1.11 ) }
    dend_59 { pt3dadd( -41.9184, -22.6027, -85.0206, 1.11 ) }
    dend_59 { pt3dadd( -42.9106, -23.1357, -99.9719, 0.52 ) }
    dend_59 { pt3dadd( -42.9165, -23.1387, -100.061, 0.52 ) }
    dend_59 { pt3dadd( -42.9563, -23.1675, -100.691, 0.81 ) }
    dend_59 { pt3dadd( -42.9847, -23.1919, -101.158, 0.81 ) }
    dend_59 { pt3dadd( -42.9898, -23.1966, -101.246, 0.81 ) }
    dend_59 { pt3dadd( -43.2859, -23.4113, -105.711, 0.81 ) }
    dend_59 { pt3dadd( -43.3453, -23.4136, -106.265, 0.81 ) }
    dend_59 { pt3dadd( -44.1115, -23.4409, -112.94, 0.37 ) }
    dend_59 { pt3dadd( -44.1636, -23.4439, -113.334, 1.47 ) }
    dend_59 { pt3dadd( -44.1636, -23.4439, -113.334, 1.47 ) }
    dend_59 { pt3dadd( -45.0453, -23.4408, -117.874, 0.22 ) }
    dend_59 { pt3dadd( -45.2594, -23.4342, -118.666, 0.22 ) }
    dend_59 { pt3dadd( -45.3787, -23.4241, -119.031, 0.22 ) }
    dend_59 { pt3dadd( -45.8805, -23.2835, -120.005, 0.22 ) }
    dend_59 { pt3dadd( -46.0206, -23.2621, -120.414, 0.74 ) }
    dend_59 { pt3dadd( -46.1678, -23.2608, -120.933, 1.11 ) }
    dend_59 { pt3dadd( -46.1885, -23.261, -121.02, 1.11 ) }
    dend_59 { pt3dadd( -46.5301, -23.2827, -122.724, 1.11 ) }
    dend_59 { pt3dadd( -46.5846, -23.2664, -123.012, 1.11 ) }
    dend_59 { pt3dadd( -47.7534, -22.5986, -128.879, 0.74 ) }
    dend_59 { pt3dadd( -47.835, -22.5443, -129.249, 1.69 ) }
    dend_59 { pt3dadd( -48.0396, -22.3694, -130.179, 1.69 ) }
    dend_59 { pt3dadd( -48.1133, -22.282, -130.521, 1.69 ) }
    dend_59 { pt3dadd( -48.9723, -20.8888, -134.433, 0.44 ) }
    dend_59 { pt3dadd( -49.1968, -20.3807, -135.4, 0.44 ) }
    dend_59 { pt3dadd( -49.2151, -20.3248, -135.467, 0.44 ) }
    dend_59 { pt3dadd( -49.5362, -19.0714, -136.875, 0.81 ) }
    dend_59 { pt3dadd( -49.631, -18.6082, -137.363, 1.11 ) }
    dend_59 { pt3dadd( -49.6876, -18.2614, -137.673, 1.11 ) }
    dend_59 { pt3dadd( -49.8321, -16.4458, -138.812, 0.29 ) }
    dend_59 { pt3dadd( -49.8368, -16.3656, -138.861, 0.29 ) }
    dend_59 { pt3dadd( -49.8947, -15.7621, -139.292, 0.29 ) }
    dend_59 { pt3dadd( -49.9481, -15.427, -139.543, 0.88 ) }
    dend_59 { pt3dadd( -50.0188, -14.9823, -139.925, 1.11 ) }
    dend_59 { pt3dadd( -50.0751, -14.6543, -140.374, 1.11 ) }
    dend_59 { pt3dadd( -50.1596, -14.2591, -141.038, 1.11 ) }
    dend_59 { pt3dadd( -50.5929, -12.6545, -143.887, 0.22 ) }
    dend_59 { pt3dadd( -50.7718, -12.2291, -144.7, 1.33 ) }
    dend_59 { pt3dadd( -50.8246, -12.1317, -144.886, 1.33 ) }
    dend_59 { pt3dadd( -52.1943, -10.0383, -148.838, 0.29 ) }
    dend_59 { pt3dadd( -52.3419, -9.84563, -149.265, 0.66 ) }
    dend_59 { pt3dadd( -52.4839, -9.66887, -149.663, 0.88 ) }
    dend_59 { pt3dadd( -52.9998, -9.15544, -150.879, 0.52 ) }
    dend_59 { pt3dadd( -53.456, -8.71828, -151.905, 0.52 ) }
    dend_59 { pt3dadd( -53.6074, -8.56898, -152.229, 0.81 ) }
    dend_59 { pt3dadd( -55.5516, -6.4531, -156.106, 0.52 ) }
    dend_59 { pt3dadd( -55.7643, -6.14362, -156.855, 0.52 ) }
    dend_59 { pt3dadd( -56.0298, -5.64078, -158.236, 0.29 ) }
    dend_59 { pt3dadd( -56.1162, -5.46206, -158.77, 0.81 ) }
    dend_59 { pt3dadd( -56.1296, -5.43673, -158.855, 0.81 ) }
    dend_59 { pt3dadd( -56.2378, -5.26712, -159.444, 0.81 ) }
    dend_59 { pt3dadd( -57.5749, -3.58299, -165.251, 0.29 ) }
    dend_59 { pt3dadd( -57.6466, -3.4961, -165.582, 0.29 ) }
    dend_59 { pt3dadd( -57.902, -3.18444, -166.83, 0.29 ) }
    dend_59 { pt3dadd( -57.9217, -3.16349, -166.915, 0.29 ) }
    dend_59 { pt3dadd( -58.0326, -3.06163, -167.295, 0.74 ) }
    dend_59 { pt3dadd( -58.1291, -2.98657, -167.535, 0.74 ) }
    dend_59 { pt3dadd( -59.8533, -1.65415, -169.887, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_59 { pt3dadd( -60.0428, -1.49243, -170.16, 0.29 ) }
    dend_59 { pt3dadd( -60.0927, -1.44523, -170.239, 0.29 ) }
    dend_59 { pt3dadd( -60.4261, -1.06932, -170.85, 0.29 ) }
    dend_59 { pt3dadd( -60.611, -0.836808, -171.217, 0.52 ) }
    dend_59 { pt3dadd( -60.6468, -0.791328, -171.286, 0.52 ) }
    dend_59 { pt3dadd( -60.8724, -0.444236, -171.72, 0.52 ) }
    dend_59 { pt3dadd( -61.0602, -0.100973, -172.141, 0.52 ) }
    dend_59 { pt3dadd( -61.8976, 1.32512, -174.229, 0.29 ) }
    dend_59 { pt3dadd( -61.9792, 1.43612, -174.387, 0.59 ) }
    dend_59 { pt3dadd( -62.0737, 1.54025, -174.531, 0.59 ) }
    dend_59 { pt3dadd( -62.4406, 1.8926, -174.986, 1.03 ) }
    dend_59 { pt3dadd( -62.85, 2.23519, -175.386, 1.03 ) }
    dend_59 { pt3dadd( -63.9239, 2.98095, -176.638, 0.66 ) }
    dend_59 { pt3dadd( -64.9965, 3.51924, -177.92, 0.22 ) }
    dend_59 { pt3dadd( -65.2561, 3.6712, -178.31, 0.66 ) }
    dend_59 { pt3dadd( -65.4198, 3.78292, -178.601, 0.96 ) }
    dend_59 { pt3dadd( -65.7304, 4.01267, -179.224, 0.96 ) }
    dend_59 { pt3dadd( -67.2594, 5.35978, -182.754, 0.44 ) }
    dend_59 { pt3dadd( -67.2942, 5.3959, -182.845, 0.44 ) }
    dend_59 { pt3dadd( -67.7475, 5.90357, -184.269, 0.29 ) }
    dend_59 { pt3dadd( -67.8418, 5.98685, -184.62, 0.29 ) }
    dend_59 { pt3dadd( -68.0432, 6.09373, -185.198, 0.29 ) }
    dend_59 { pt3dadd( -68.3726, 6.2069, -185.907, 0.96 ) }
    dend_59 { pt3dadd( -68.6524, 6.29525, -186.327, 1.4 ) }
    dend_59 { pt3dadd( -68.8145, 6.33781, -186.552, 1.4 ) }
    dend_59 { pt3dadd( -71.8825, 6.96787, -190.493, 0.44 ) }
    dend_59 { pt3dadd( -72.9924, 7.18645, -191.891, 0.29 ) }
    dend_59 { pt3dadd( -73.5432, 7.29313, -192.641, 0.29 ) }
    dend_59 { pt3dadd( -74.2286, 7.42737, -193.615, 0.29 ) }
    dend_59 { pt3dadd( -74.28, 7.44016, -193.687, 0.29 ) }
    dend_59 { pt3dadd( -74.6096, 7.53387, -194.11, 0.29 ) }
    dend_59 { pt3dadd( -75.2659, 7.76974, -194.766, 0.88 ) }
    dend_59 { pt3dadd( -76.3782, 8.18412, -196.398, 0.74 ) }
    dend_59 { pt3dadd( -76.4237, 8.18952, -196.474, 0.74 ) }
    dend_59 { pt3dadd( -76.7284, 8.166, -196.983, 0.74 ) }
    dend_59 { pt3dadd( -76.7935, 8.15613, -197.082, 0.74 ) }
    dend_59 { pt3dadd( -77.3282, 8.02884, -197.952, 0.52 ) }
    dend_59 { pt3dadd( -77.3836, 8.01445, -198.039, 0.52 ) }
    dend_59 { pt3dadd( -78.4028, 7.71608, -199.475, 0.22 ) }
    dend_59 { pt3dadd( -78.6667, 7.63254, -199.849, 0.44 ) }
    dend_59 { pt3dadd( -78.8796, 7.5648, -200.163, 0.59 ) }
    dend_59 { pt3dadd( -80.3814, 7.10298, -202.295, 0.22 ) }
    dend_59 { pt3dadd( -80.4969, 7.0747, -202.445, 0.22 ) }
    dend_59 { pt3dadd( -80.8145, 7.01298, -202.842, 0.66 ) }
    dend_59 { pt3dadd( -80.9292, 6.99895, -202.979, 0.66 ) }
    dend_59 { pt3dadd( -82.4303, 6.82698, -204.571, 0.22 ) }
    dend_59 { pt3dadd( -82.842, 6.79029, -204.915, 0.22 ) }
    dend_59 { pt3dadd( -83.6028, 6.76524, -205.325, 0.66 ) }
    dend_59 { pt3dadd( -83.9047, 6.76902, -205.467, 1.25 ) }
    dend_59 { pt3dadd( -84.1491, 6.78656, -205.581, 1.25 ) }
    dend_59 { pt3dadd( -84.7784, 6.85584, -205.844, 1.55 ) }
    dend_59 { pt3dadd( -85.6087, 6.98895, -206.093, 1.33 ) }
    dend_59 { pt3dadd( -86.1015, 7.07088, -206.295, 1.33 ) }
    dend_59 { pt3dadd( -86.6116, 7.14694, -206.537, 1.33 ) }
    dend_59 { pt3dadd( -87.5554, 7.28721, -206.994, 0.81 ) }
    dend_59 { pt3dadd( -87.8051, 7.32127, -207.118, 0.81 ) }
    dend_59 { pt3dadd( -89.0361, 7.50144, -207.795, 0.44 ) }
    dend_59 { pt3dadd( -90.4228, 7.74667, -208.593, 0.44 ) }
    dend_59 { pt3dadd( -90.4984, 7.75887, -208.639, 0.44 ) }
    dend_59 { pt3dadd( -91.3742, 7.89616, -209.187, 0.44 ) }
    dend_59 { pt3dadd( -91.4522, 7.90662, -209.227, 0.44 ) }
    dend_59 { pt3dadd( -92.9715, 8.07415, -209.911, 0.44 ) }
    dend_59 { pt3dadd( -93.4789, 8.0999, -210.094, 0.44 ) }
    dend_59 { pt3dadd( -94.2783, 8.07242, -210.287, 0.44 ) }
    dend_59 { pt3dadd( -94.4855, 8.05383, -210.329, 0.44 ) }
    dend_59 { pt3dadd( -96.1672, 7.86644, -210.589, 0.29 ) }
    dend_59 { pt3dadd( -96.9042, 7.77034, -210.668, 0.96 ) }
    dend_59 { pt3dadd( -98.5682, 7.54062, -211.309, 0.22 ) }
    dend_59 { pt3dadd( -99.2731, 7.48264, -211.66, 1.25 ) }
    dend_59 { pt3dadd( -99.4174, 7.48153, -211.743, 1.25 ) }
    dend_59 { pt3dadd( -100.135, 7.51574, -212.229, 1.25 ) }
    dend_59 { pt3dadd( -100.294, 7.53396, -212.343, 1.25 ) }
    dend_59 { pt3dadd( -104.24, 8.26261, -215.059, 0.44 ) }
    dend_59 { pt3dadd( -105.767, 8.67546, -215.999, 0.29 ) }
    dend_59 { pt3dadd( -106.293, 8.83879, -216.237, 0.29 ) }
    dend_59 { pt3dadd( -106.369, 8.86147, -216.279, 0.29 ) }
    dend_59 { pt3dadd( -108.56, 9.27721, -217.583, 0.96 ) }
    dend_59 { pt3dadd( -108.638, 9.28931, -217.626, 0.96 ) }
    dend_59 { pt3dadd( -109.065, 9.34103, -217.83, 1.33 ) }
    dend_59 { pt3dadd( -109.698, 9.41133, -218.215, 1.33 ) }
    dend_59 { pt3dadd( -112.553, 9.83272, -220.146, 0.37 ) }
    dend_59 { pt3dadd( -114.029, 10.102, -221.211, 0.22 ) }
    dend_59 { pt3dadd( -114.841, 10.2649, -221.847, 0.22 ) }
    dend_59 { pt3dadd( -115.138, 10.3348, -222.074, 0.74 ) }
    dend_59 { pt3dadd( -115.709, 10.4964, -222.483, 1.18 ) }
    dend_59 { pt3dadd( -117.891, 11.2296, -223.878, 0.29 ) }
    dend_59 { pt3dadd( -118.342, 11.4248, -224.077, 0.29 ) }
    dend_59 { pt3dadd( -118.415, 11.4651, -224.109, 0.29 ) }
    dend_59 { pt3dadd( -118.626, 11.585, -224.194, 0.96 ) }
    dend_59 { pt3dadd( -119.4, 12.0618, -224.474, 0.96 ) }
    dend_59 { pt3dadd( -119.483, 12.1163, -224.498, 0.96 ) }
    dend_59 { pt3dadd( -120.839, 13.0783, -224.755, 0.37 ) }
    dend_59 { pt3dadd( -121.22, 13.3463, -224.829, 0.66 ) }
    dend_59 { pt3dadd( -121.674, 13.6751, -224.945, 0.81 ) }
    dend_59 { pt3dadd( -122.52, 14.2921, -225.28, 0.66 ) }
    dend_59 { pt3dadd( -123.093, 14.7407, -225.605, 0.37 ) }
    dend_59 { pt3dadd( -123.357, 14.9207, -225.725, 0.74 ) }
    dend_59 { pt3dadd( -124.142, 15.3941, -226.017, 1.11 ) }
    dend_59 { pt3dadd( -124.98, 15.874, -226.26, 1.11 ) }
    dend_59 { pt3dadd( -126.199, 16.5655, -226.525, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_59 { pt3dadd( -126.856, 16.9164, -226.708, 0.81 ) }
    dend_59 { pt3dadd( -129.488, 18.3433, -227.539, 0.29 ) }
    dend_59 { pt3dadd( -130.044, 18.6401, -227.716, 0.44 ) }
    dend_59 { pt3dadd( -130.562, 18.9252, -227.873, 0.74 ) }
    dend_59 { pt3dadd( -131.293, 19.3274, -228.065, 0.74 ) }
    dend_59 { pt3dadd( -132.958, 20.3236, -228.525, 0.29 ) }
    dend_59 { pt3dadd( -133.594, 20.7551, -228.769, 0.29 ) }
    dend_59 { pt3dadd( -133.744, 20.8783, -228.849, 0.29 ) }
    dend_59 { pt3dadd( -134.187, 21.2263, -229.016, 0.66 ) }
    dend_59 { pt3dadd( -134.741, 21.6669, -229.145, 0.96 ) }
    dend_59 { pt3dadd( -135.31, 22.1389, -229.201, 0.74 ) }
    dend_59 { pt3dadd( -136.153, 22.8657, -229.185, 0.29 ) }
    dend_59 { pt3dadd( -137.372, 23.9588, -229.168, 0.29 ) }
    dend_59 { pt3dadd( -137.734, 24.3054, -229.169, 0.66 ) }
    dend_59 { pt3dadd( -138.339, 24.8974, -229.201, 0.96 ) }
    dend_59 { pt3dadd( -138.804, 25.3735, -229.254, 0.29 ) }
    dend_59 { pt3dadd( -139.222, 25.8029, -229.341, 0.29 ) }
    dend_59 { pt3dadd( -139.412, 26.0016, -229.41, 0.29 ) }
    dend_59 { pt3dadd( -139.854, 26.438, -229.596, 0.29 ) }
    dend_59 { pt3dadd( -140.326, 26.7916, -229.789, 0.29 ) }
    dend_59 { pt3dadd( -140.724, 26.9533, -229.833, 0.44 ) }
    dend_59 { pt3dadd( -140.797, 26.9723, -229.822, 0.44 ) }
    dend_59 { pt3dadd( -141.14, 27.0629, -229.725, 0.44 ) }
    dend_59 { pt3dadd( -142.318, 27.3737, -229.316, 0.37 ) }
    dend_59 { pt3dadd( -142.387, 27.3985, -229.296, 0.37 ) }
    dend_59 { pt3dadd( -143.927, 28.0979, -228.911, 0.88 ) }
    dend_59 { pt3dadd( -144.401, 28.3337, -228.81, 1.33 ) }
    dend_59 { pt3dadd( -145.032, 28.6888, -228.724, 1.25 ) }
    dend_59 { pt3dadd( -145.111, 28.7358, -228.72, 1.25 ) }
    dend_59 { pt3dadd( -147.074, 29.8978, -228.801, 0.44 ) }
    dend_59 { pt3dadd( -147.536, 30.1288, -228.865, 0.81 ) }
    dend_59 { pt3dadd( -147.79, 30.2234, -228.939, 0.81 ) }
    dend_59 { pt3dadd( -148.552, 30.4229, -229.186, 0.22 ) }
    dend_59 { pt3dadd( -149.293, 30.3719, -229.6, 0.22 ) }
    dend_59 { pt3dadd( -149.727, 30.1952, -229.948, 0.22 ) }
    dend_59 { pt3dadd( -150.073, 29.9379, -230.299, 0.22 ) }
    dend_59 { pt3dadd( -150.731, 29.3636, -231.077, 0.81 ) }
    dend_59 { pt3dadd( -150.957, 29.1595, -231.352, 1.18 ) }
    dend_59 { pt3dadd( -152.852, 27.2268, -233.735, 0.37 ) }
    dend_59 { pt3dadd( -153.069, 26.9913, -234.013, 0.44 ) }
    dend_59 { pt3dadd( -153.276, 26.7629, -234.268, 0.44 ) }
    dend_59 { pt3dadd( -154.577, 25.3037, -235.708, 0.37 ) }
    dend_59 { pt3dadd( -155.007, 24.8249, -236.119, 0.37 ) }
    dend_59 { pt3dadd( -155.501, 24.3976, -236.494, 0.81 ) }
    dend_59 { pt3dadd( -156.061, 24.0127, -236.816, 1.03 ) }
    dend_59 { pt3dadd( -156.575, 23.65, -237.099, 1.18 ) }
    dend_59 { pt3dadd( -157.244, 23.1523, -237.521, 1.18 ) }
    dend_59 { pt3dadd( -157.308, 23.1044, -237.562, 1.18 ) }
    dend_59 { pt3dadd( -160.202, 20.988, -239.605, 0.29 ) }
    dend_59 { pt3dadd( -160.652, 20.6676, -239.94, 1.18 ) }
    dend_59 { pt3dadd( -161.207, 20.2723, -240.375, 1.47 ) }
    dend_59 { pt3dadd( -163.051, 19.0057, -241.691, 0.52 ) }
    dend_59 { pt3dadd( -163.617, 18.6355, -242.046, 0.37 ) }
    dend_59 { pt3dadd( -163.923, 18.4364, -242.197, 0.81 ) }
    dend_59 { pt3dadd( -164.249, 18.2133, -242.324, 0.96 ) }
    dend_59 { pt3dadd( -164.392, 18.1176, -242.378, 0.96 ) }
    dend_59 { pt3dadd( -166.058, 16.9818, -242.942, 0.37 ) }
    dend_59 { pt3dadd( -166.359, 16.7525, -243.017, 0.74 ) }
    dend_59 { pt3dadd( -166.71, 16.4509, -243.144, 0.74 ) }
    dend_59 { pt3dadd( -168.212, 14.8725, -243.822, 0.44 ) }
    dend_59 { pt3dadd( -169.306, 13.4775, -244.391, 0.29 ) }
    dend_59 { pt3dadd( -169.54, 13.1372, -244.526, 0.66 ) }
    dend_59 { pt3dadd( -169.87, 12.565, -244.75, 1.03 ) }
    dend_59 { pt3dadd( -170.317, 11.7445, -245.039, 0.29 ) }
    dend_59 { pt3dadd( -170.919, 10.5176, -245.371, 0.29 ) }
    dend_59 { pt3dadd( -171.441, 9.38118, -245.547, 0.29 ) }
    dend_59 { pt3dadd( -171.722, 8.66367, -245.671, 0.29 ) }
    dend_59 { pt3dadd( -171.888, 8.22625, -245.747, 0.66 ) }
    dend_59 { pt3dadd( -172.295, 7.19351, -245.921, 0.29 ) }
    dend_59 { pt3dadd( -172.65, 6.32214, -246.024, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -30.3902, -25.3633, -29.9445, 1.84 ) }
    dend_54 { pt3dadd( -31.1866, -25.9094, -29.9507, 1.84 ) }
    dend_54 { pt3dadd( -32.3024, -26.7658, -29.9532, 0.29 ) }
    dend_54 { pt3dadd( -32.9515, -27.339, -29.9495, 0.29 ) }
    dend_54 { pt3dadd( -33.5592, -27.8801, -29.9457, 0.81 ) }
    dend_54 { pt3dadd( -34.1024, -28.4031, -29.937, 0.29 ) }
    dend_54 { pt3dadd( -34.6626, -28.9528, -29.9255, 0.22 ) }
    dend_54 { pt3dadd( -34.8626, -29.1519, -29.9204, 0.81 ) }
    dend_54 { pt3dadd( -35.2903, -29.6706, -29.9009, 0.81 ) }
    dend_54 { pt3dadd( -35.6439, -30.1197, -29.8822, 0.81 ) }
    dend_54 { pt3dadd( -36.1266, -30.7291, -29.8565, 0.81 ) }
    dend_54 { pt3dadd( -36.6195, -31.3706, -29.8287, 0.52 ) }
    dend_54 { pt3dadd( -37.0526, -31.9571, -29.8036, 0.52 ) }
    dend_54 { pt3dadd( -37.4112, -32.4866, -29.7935, 1.11 ) }
    dend_54 { pt3dadd( -37.7598, -33.0629, -29.7927, 1.33 ) }
    dend_54 { pt3dadd( -37.9921, -33.5299, -29.7966, 1.33 ) }
    dend_54 { pt3dadd( -38.0948, -33.7606, -29.8012, 1.11 ) }
    dend_54 { pt3dadd( -38.4209, -34.6671, -29.8186, 1.03 ) }
    dend_54 { pt3dadd( -38.5915, -35.1592, -29.8293, 0.29 ) }
    dend_54 { pt3dadd( -38.7419, -35.5501, -29.8391, 0.29 ) }
    dend_54 { pt3dadd( -38.9705, -36.2005, -29.8478, 0.22 ) }
    dend_54 { pt3dadd( -39.2307, -36.8363, -29.8533, 0.22 ) }
    dend_54 { pt3dadd( -39.4646, -37.3356, -29.8534, 0.88 ) }
    dend_54 { pt3dadd( -39.6628, -37.711, -29.8487, 1.11 ) }
    dend_54 { pt3dadd( -39.8856, -38.1089, -29.8383, 1.11 ) }
    dend_54 { pt3dadd( -41.0638, -39.8978, -29.8012, 0.22 ) }
    dend_54 { pt3dadd( -41.6594, -40.6545, -29.8486, 0.96 ) }
    dend_54 { pt3dadd( -42.2741, -41.3909, -29.9385, 1.33 ) }
    dend_54 { pt3dadd( -43.2393, -42.4924, -30.1265, 0.37 ) }
    dend_54 { pt3dadd( -44.3118, -43.6357, -30.3717, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( -45.3431, -44.5724, -30.5732, 0.37 ) }
    dend_54 { pt3dadd( -46.7765, -45.6306, -30.8166, 1.25 ) }
    dend_54 { pt3dadd( -47.4616, -46.1307, -30.9103, 1.92 ) }
    dend_54 { pt3dadd( -48.0898, -46.5417, -30.9757, 1.25 ) }
    dend_54 { pt3dadd( -48.7673, -46.9378, -31.0152, 1.03 ) }
    dend_54 { pt3dadd( -50.1441, -47.7193, -30.799, 0.29 ) }
    dend_54 { pt3dadd( -50.538, -47.9728, -30.6388, 0.52 ) }
    dend_54 { pt3dadd( -51.2291, -48.3887, -30.1977, 0.29 ) }
    dend_54 { pt3dadd( -51.3012, -48.4267, -30.1475, 0.29 ) }
    dend_54 { pt3dadd( -51.588, -48.5847, -29.9761, 0.29 ) }
    dend_54 { pt3dadd( -53.3466, -49.6594, -29.1065, 0.88 ) }
    dend_54 { pt3dadd( -53.4085, -49.7001, -29.0844, 0.88 ) }
    dend_54 { pt3dadd( -53.8241, -49.968, -28.9573, 1.4 ) }
    dend_54 { pt3dadd( -54.3111, -50.265, -28.8361, 1.11 ) }
    dend_54 { pt3dadd( -56.2868, -51.4861, -28.5104, 0.44 ) }
    dend_54 { pt3dadd( -56.5847, -51.6753, -28.5043, 1.18 ) }
    dend_54 { pt3dadd( -56.882, -51.8681, -28.5628, 1.18 ) }
    dend_54 { pt3dadd( -57.2993, -52.1399, -28.648, 0.96 ) }
    // Section: dend_30, id: dend_30, parent: dend_0 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.52688, 17.0944, -3.70436, 1.03 ) }
    dend_30 { pt3dadd( -4.11003, 17.5087, -3.8986, 1.03 ) }
    dend_30 { pt3dadd( -5.38483, 18.374, -4.28709, 0.74 ) }
    dend_30 { pt3dadd( -5.74597, 18.5989, -4.38356, 0.81 ) }
    dend_30 { pt3dadd( -6.6837, 19.1347, -4.50848, 0.96 ) }
    dend_30 { pt3dadd( -7.53146, 19.564, -4.66645, 0.96 ) }
    dend_30 { pt3dadd( -8.39447, 19.9784, -4.85083, 1.47 ) }
    dend_30 { pt3dadd( -8.84705, 20.173, -4.98765, 1.47 ) }
    dend_30 { pt3dadd( -9.45528, 20.4082, -5.18624, 1.47 ) }
    dend_30 { pt3dadd( -10.7927, 20.8912, -5.66676, 0.88 ) }
    dend_30 { pt3dadd( -12.78, 21.5492, -6.44612, 0.81 ) }
    dend_30 { pt3dadd( -13.2, 21.6912, -6.60659, 0.59 ) }
    dend_30 { pt3dadd( -13.9871, 21.9687, -6.96278, 0.96 ) }
    dend_30 { pt3dadd( -14.609, 22.2095, -7.28444, 0.96 ) }
    dend_30 { pt3dadd( -14.9681, 22.3681, -7.54502, 0.81 ) }
    dend_30 { pt3dadd( -15.3211, 22.5545, -7.84327, 0.81 ) }
    dend_30 { pt3dadd( -15.67, 22.764, -8.09553, 0.96 ) }
    dend_30 { pt3dadd( -15.8956, 22.9058, -8.27048, 0.96 ) }
    dend_30 { pt3dadd( -16.444, 23.2644, -8.72179, 1.25 ) }
    dend_30 { pt3dadd( -17.5467, 23.9843, -9.79102, 1.84 ) }
    dend_30 { pt3dadd( -18.0456, 24.3374, -10.353, 1.84 ) }
    dend_30 { pt3dadd( -18.1645, 24.4292, -10.5072, 1.84 ) }
    dend_30 { pt3dadd( -18.3444, 24.5765, -10.7652, 1.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.52688, 17.0944, -3.70436, 2.06 ) }
    dend_1 { pt3dadd( -3.63388, 18.2005, -3.63075, 2.06 ) }
    dend_1 { pt3dadd( -3.8121, 20.0429, -3.50815, 1.55 ) }
    dend_1 { pt3dadd( -4.01139, 22.1031, -3.37105, 1.4 ) }
    dend_1 { pt3dadd( -4.157, 23.6084, -3.27088, 1.84 ) }
    dend_1 { pt3dadd( -4.32442, 25.3391, -3.15571, 1.84 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 47/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.42008, -41.5756, 0.232917, 0.22 ) }
    axon_1 { pt3dadd( 4.61198, -56.5282, 0.232917, 0.22 ) }
    axon_1 { pt3dadd( 5.80388, -71.4808, 0.232917, 0.22 ) }
    // Section: dend_132, id: dend_132, parent: dend_118 (entry count 50/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( -6.51693, -51.6951, 13.3311, 0.88 ) }
    dend_132 { pt3dadd( -6.93011, -51.508, 14.2687, 0.88 ) }
    dend_132 { pt3dadd( -7.21904, -51.3772, 14.9243, 0.96 ) }
    dend_132 { pt3dadd( -7.43806, -51.2781, 15.4213, 0.96 ) }
    dend_132 { pt3dadd( -7.58667, -51.2108, 15.7585, 0.96 ) }
    // Section: dend_119, id: dend_119, parent: dend_118 (entry count 55/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -6.51693, -51.6951, 13.3311, 0.88 ) }
    dend_119 { pt3dadd( -6.75271, -52.2061, 13.4951, 0.88 ) }
    dend_119 { pt3dadd( -6.93991, -52.5427, 13.6279, 0.59 ) }
    dend_119 { pt3dadd( -7.18372, -52.9227, 13.7847, 0.59 ) }
    dend_119 { pt3dadd( -7.78175, -53.8798, 14.1564, 0.37 ) }
    dend_119 { pt3dadd( -8.11749, -54.4272, 14.3617, 0.37 ) }
    dend_119 { pt3dadd( -8.50407, -55.1352, 14.6153, 0.37 ) }
    dend_119 { pt3dadd( -8.91674, -56.0326, 15.0471, 0.52 ) }
    dend_119 { pt3dadd( -9.12864, -56.6446, 15.402, 0.52 ) }
    dend_119 { pt3dadd( -9.23129, -57.216, 15.8615, 0.66 ) }
    dend_119 { pt3dadd( -9.23472, -57.2633, 15.905, 0.66 ) }
    dend_119 { pt3dadd( -9.15751, -58.0649, 16.7778, 0.59 ) }
    dend_119 { pt3dadd( -8.75266, -59.3375, 18.392, 0.88 ) }
    dend_119 { pt3dadd( -8.61287, -59.5941, 18.7697, 1.03 ) }
    dend_119 { pt3dadd( -8.09492, -60.3557, 20.0952, 1.03 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 70/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( -0.818465, -48.1949, 9.30686, 0.81 ) }
    dend_109 { pt3dadd( 0.0318451, -48.9762, 9.38415, 0.81 ) }
    dend_109 { pt3dadd( 1.03996, -49.8569, 9.43588, 0.81 ) }
    dend_109 { pt3dadd( 1.61311, -50.3317, 9.45437, 0.74 ) }
    dend_109 { pt3dadd( 2.5297, -51.083, 9.47624, 0.59 ) }
    dend_109 { pt3dadd( 2.95878, -51.4346, 9.48647, 1.03 ) }
    dend_109 { pt3dadd( 3.77191, -52.101, 9.50587, 1.11 ) }
    dend_109 { pt3dadd( 4.40507, -52.592, 9.45638, 1.11 ) }
    dend_109 { pt3dadd( 4.97312, -53.0275, 9.40164, 0.96 ) }
    dend_109 { pt3dadd( 5.10791, -53.1279, 9.38821, 0.96 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 80/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( -0.818465, -48.1949, 9.30686, 0.29 ) }
    dend_108 { pt3dadd( -1.45621, -47.9503, 9.55248, 0.29 ) }
    dend_108 { pt3dadd( -1.70533, -47.8551, 9.62958, 0.29 ) }
    dend_108 { pt3dadd( -2.37467, -47.5995, 9.83673, 0.22 ) }
    dend_108 { pt3dadd( -2.88034, -47.4064, 9.99323, 0.22 ) }
    dend_108 { pt3dadd( -3.24625, -47.2667, 10.1064, 0.22 ) }
    dend_108 { pt3dadd( -3.77343, -47.0654, 10.2696, 0.74 ) }
    dend_108 { pt3dadd( -3.88299, -47.0152, 10.2869, 0.74 ) }
    dend_108 { pt3dadd( -11.224, -42.6498, 11.4872, 0.74 ) }
    dend_108 { pt3dadd( -17.6286, -37.4451, 14.0636, 0.74 ) }
    dend_108 { pt3dadd( -23.4743, -31.6272, 16.7169, 0.74 ) }
    dend_108 { pt3dadd( -29.5258, -26.9664, 20.7381, 0.74 ) }
    // Section: dend_95, id: dend_95, parent: dend_91 (entry count 92/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 2.10488, -28.9683, -23.3386, 0.59 ) }
    dend_95 { pt3dadd( 2.3224, -29.5851, -24.5723, 0.59 ) }
    dend_95 { pt3dadd( 2.33173, -29.6094, -24.616, 0.59 ) }
    dend_95 { pt3dadd( 2.44004, -29.8975, -25.1546, 0.59 ) }
    dend_95 { pt3dadd( 2.86359, -31.1255, -27.3772, 0.96 ) }
    dend_95 { pt3dadd( 2.9962, -31.4571, -27.9705, 0.59 ) }
    dend_95 { pt3dadd( 3.10924, -31.6869, -28.3703, 0.44 ) }
    dend_95 { pt3dadd( 3.26023, -31.9351, -28.8014, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_95 { pt3dadd( 3.8911, -32.7572, -30.2493, 1.25 ) }
    dend_95 { pt3dadd( 4.03816, -32.9124, -30.5092, 1.25 ) }
    dend_95 { pt3dadd( 4.69932, -33.5592, -31.3749, 0.52 ) }
    dend_95 { pt3dadd( 5.07501, -33.9288, -31.8797, 0.52 ) }
    dend_95 { pt3dadd( 5.09959, -33.9522, -31.9107, 0.52 ) }
    dend_95 { pt3dadd( 5.66845, -34.4583, -32.4988, 0.52 ) }
    dend_95 { pt3dadd( 6.11333, -34.8608, -32.8731, 0.52 ) }
    dend_95 { pt3dadd( 6.53969, -35.2706, -33.2231, 0.88 ) }
    dend_95 { pt3dadd( 6.97835, -35.744, -33.5815, 1.55 ) }
    dend_95 { pt3dadd( 7.36885, -36.2071, -33.9153, 2.14 ) }
    dend_95 { pt3dadd( 7.68684, -36.6049, -34.1737, 1.69 ) }
    dend_95 { pt3dadd( 8.1438, -37.2127, -34.5233, 1.18 ) }
    dend_95 { pt3dadd( 8.45301, -37.6167, -34.7583, 1.03 ) }
    dend_95 { pt3dadd( 8.50912, -37.6879, -34.7931, 1.03 ) }
    dend_95 { pt3dadd( 8.67723, -37.8983, -34.8669, 0.74 ) }
    dend_95 { pt3dadd( 8.81957, -38.0682, -34.9249, 0.74 ) }
    dend_95 { pt3dadd( 9.13673, -38.4365, -35.1062, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 17/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.10488, -28.9683, -23.3386, 0.29 ) }
    dend_92 { pt3dadd( 3.94954, -30.8357, -23.6051, 0.29 ) }
    dend_92 { pt3dadd( 4.27876, -31.2676, -23.4925, 0.29 ) }
    dend_92 { pt3dadd( 4.59337, -31.7609, -23.3028, 0.29 ) }
    dend_92 { pt3dadd( 4.91127, -32.3383, -23.0022, 0.29 ) }
    dend_92 { pt3dadd( 5.27663, -33.0714, -22.5683, 0.74 ) }
    dend_92 { pt3dadd( 5.5706, -33.725, -22.1154, 0.88 ) }
    dend_92 { pt3dadd( 5.87787, -34.6299, -21.3015, 0.66 ) }
    dend_92 { pt3dadd( 6.05212, -35.1212, -20.8422, 0.66 ) }
    dend_92 { pt3dadd( 6.32086, -35.8129, -20.0936, 0.66 ) }
    dend_92 { pt3dadd( 6.47036, -36.1212, -19.7235, 0.66 ) }
    dend_92 { pt3dadd( 6.8717, -36.812, -18.8359, 0.66 ) }
    dend_92 { pt3dadd( 7.20386, -37.2896, -18.2079, 0.52 ) }
    dend_92 { pt3dadd( 7.70594, -37.9463, -17.4265, 0.29 ) }
    dend_92 { pt3dadd( 8.37247, -38.7848, -16.5021, 0.29 ) }
    dend_92 { pt3dadd( 8.76204, -39.2744, -16.0611, 0.37 ) }
    dend_92 { pt3dadd( 8.80301, -39.3261, -16.0216, 0.37 ) }
    dend_92 { pt3dadd( 9.33384, -40.0132, -15.6036, 0.37 ) }
    dend_92 { pt3dadd( 9.6856, -40.5282, -15.3236, 0.44 ) }
    dend_92 { pt3dadd( 10.4405, -41.8621, -14.6843, 0.44 ) }
    dend_92 { pt3dadd( 10.8637, -42.6526, -14.3595, 1.03 ) }
    dend_92 { pt3dadd( 11.018, -42.9518, -14.2219, 1.4 ) }
    dend_92 { pt3dadd( 11.2988, -43.5031, -13.9541, 1.62 ) }
    dend_92 { pt3dadd( 11.8047, -44.5871, -13.2962, 0.44 ) }
    dend_92 { pt3dadd( 12.0543, -45.195, -12.8811, 0.59 ) }
    dend_92 { pt3dadd( 12.2137, -45.7667, -12.4698, 0.22 ) }
    dend_92 { pt3dadd( 12.3886, -46.6793, -11.7867, 0.07 ) }
    dend_92 { pt3dadd( 12.4368, -47.0376, -11.5098, 0.07 ) }
    dend_92 { pt3dadd( 12.5585, -48.4703, -10.3889, 0.96 ) }
    dend_92 { pt3dadd( 12.5448, -48.6725, -10.1881, 1.25 ) }
    dend_92 { pt3dadd( 12.3701, -49.6332, -9.14017, 0.22 ) }
    dend_92 { pt3dadd( 12.2561, -50.0903, -8.62214, 0.22 ) }
    dend_92 { pt3dadd( 12.1391, -50.5218, -8.15524, 0.74 ) }
    dend_92 { pt3dadd( 12.0768, -50.7869, -7.89266, 0.88 ) }
    dend_92 { pt3dadd( 11.465, -53.9281, -5.10047, 0.29 ) }
    dend_92 { pt3dadd( 11.3879, -54.4692, -4.6435, 0.29 ) }
    dend_92 { pt3dadd( 11.2416, -56.23, -3.23037, 1.0 ) }
    dend_92 { pt3dadd( 11.228, -56.9752, -2.65478, 1.5 ) }
    dend_92 { pt3dadd( 11.3121, -58.4948, -1.58587, 0.29 ) }
    dend_92 { pt3dadd( 11.4262, -59.1164, -1.16034, 0.29 ) }
    dend_92 { pt3dadd( 11.7082, -59.8586, -0.732137, 0.29 ) }
    dend_92 { pt3dadd( 11.9177, -60.2904, -0.455194, 0.29 ) }
    dend_92 { pt3dadd( 12.5229, -61.3066, 0.23624, 0.52 ) }
    dend_92 { pt3dadd( 12.6134, -61.4433, 0.344042, 1.03 ) }
    dend_92 { pt3dadd( 13.5722, -62.811, 1.45414, 1.18 ) }
    dend_92 { pt3dadd( 13.8875, -63.289, 1.81507, 1.03 ) }
    dend_92 { pt3dadd( 14.2331, -63.8919, 2.18698, 0.96 ) }
    dend_92 { pt3dadd( 14.4744, -64.3689, 2.40065, 0.96 ) }
    dend_92 { pt3dadd( 14.58, -64.6071, 2.5005, 0.88 ) }
    dend_92 { pt3dadd( 15.0985, -65.7736, 2.99235, 0.52 ) }
    dend_92 { pt3dadd( 15.1332, -65.8521, 3.02336, 0.52 ) }
    dend_92 { pt3dadd( 15.484, -66.597, 3.37106, 1.33 ) }
    dend_92 { pt3dadd( 15.738, -67.1083, 3.68911, 1.33 ) }
    dend_92 { pt3dadd( 16.7123, -68.998, 5.04109, 0.29 ) }
    dend_92 { pt3dadd( 17.2556, -70.0219, 5.85623, 0.29 ) }
    dend_92 { pt3dadd( 17.2976, -70.0949, 5.92012, 0.29 ) }
    dend_92 { pt3dadd( 17.4199, -70.2871, 6.09381, 0.59 ) }
    dend_92 { pt3dadd( 18.3322, -71.5501, 7.27513, 0.22 ) }
    dend_92 { pt3dadd( 18.7293, -72.0251, 7.70777, 0.22 ) }
    dend_92 { pt3dadd( 18.8502, -72.15, 7.79779, 0.22 ) }
    dend_92 { pt3dadd( 19.4055, -72.6945, 8.20374, 0.22 ) }
    dend_92 { pt3dadd( 19.4674, -72.7534, 8.24092, 0.22 ) }
    dend_92 { pt3dadd( 19.8112, -73.0548, 8.38487, 0.22 ) }
    dend_92 { pt3dadd( 19.9739, -73.1558, 8.422, 0.22 ) }
    dend_92 { pt3dadd( 20.4218, -73.3858, 8.5505, 0.88 ) }
    dend_92 { pt3dadd( 20.5107, -73.4289, 8.57851, 0.88 ) }
    dend_92 { pt3dadd( 20.9718, -73.6367, 8.7355, 1.18 ) }
    dend_92 { pt3dadd( 21.1415, -73.7106, 8.79566, 1.18 ) }
    dend_92 { pt3dadd( 22.7171, -74.347, 9.38579, 0.22 ) }
    dend_92 { pt3dadd( 23.1952, -74.5352, 9.57359, 0.22 ) }
    dend_92 { pt3dadd( 23.4941, -74.6428, 9.69794, 0.44 ) }
    dend_92 { pt3dadd( 25.7831, -84.3914, 17.7701, 0.44 ) }
    dend_92 { pt3dadd( 29.4704, -94.4883, 24.8461, 0.44 ) }
    // Section: dend_84, id: dend_84, parent: dend_76 (entry count 90/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -2.33118, -23.2418, -4.67186, 0.22 ) }
    dend_84 { pt3dadd( -2.37248, -23.2195, -5.52592, 0.22 ) }
    dend_84 { pt3dadd( -2.41344, -23.1529, -6.38777, 0.22 ) }
    dend_84 { pt3dadd( -2.47461, -23.1568, -6.91975, 0.22 ) }
    dend_84 { pt3dadd( -2.52088, -23.1975, -7.25338, 0.22 ) }
    dend_84 { pt3dadd( -2.82841, -23.5478, -9.04122, 0.66 ) }
    dend_84 { pt3dadd( -2.93145, -23.6238, -9.39652, 0.66 ) }
    dend_84 { pt3dadd( -3.03195, -23.6733, -9.64107, 0.66 ) }
    dend_84 { pt3dadd( -3.91326, -23.9985, -11.2166, 0.37 ) }
    dend_84 { pt3dadd( -4.31453, -24.1774, -11.8633, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_84 { pt3dadd( -4.49431, -24.268, -12.1395, 0.37 ) }
    dend_84 { pt3dadd( -5.72112, -25.0091, -14.0045, 0.81 ) }
    dend_84 { pt3dadd( -5.8386, -25.0886, -14.1857, 1.03 ) }
    dend_84 { pt3dadd( -6.72017, -25.7001, -15.5413, 0.52 ) }
    dend_84 { pt3dadd( -7.46376, -26.3377, -16.9075, 0.29 ) }
    dend_84 { pt3dadd( -7.46376, -26.3377, -16.9075, 0.66 ) }
    dend_84 { pt3dadd( -7.53363, -26.57, -17.3315, 1.11 ) }
    dend_84 { pt3dadd( -7.47294, -26.9198, -17.8274, 1.11 ) }
    dend_84 { pt3dadd( -7.43444, -27.0155, -17.9521, 1.11 ) }
    dend_84 { pt3dadd( -6.65229, -28.3773, -19.6586, 0.29 ) }
    dend_84 { pt3dadd( -6.25214, -29.0109, -20.4467, 0.29 ) }
    dend_84 { pt3dadd( -6.07611, -29.3561, -20.8697, 0.96 ) }
    dend_84 { pt3dadd( -5.93038, -29.7322, -21.3141, 1.25 ) }
    dend_84 { pt3dadd( -5.80093, -30.2035, -21.8442, 1.55 ) }
    dend_84 { pt3dadd( -5.71995, -31.229, -22.9175, 0.81 ) }
    dend_84 { pt3dadd( -5.8075, -31.6206, -23.2575, 0.74 ) }
    dend_84 { pt3dadd( -6.27678, -32.5497, -23.9512, 0.22 ) }
    dend_84 { pt3dadd( -6.54397, -32.9433, -24.2239, 0.22 ) }
    dend_84 { pt3dadd( -6.67739, -33.1171, -24.3279, 0.22 ) }
    dend_84 { pt3dadd( -7.40537, -34.0586, -24.7857, 0.66 ) }
    dend_84 { pt3dadd( -7.86523, -34.7076, -25.1076, 0.66 ) }
    dend_84 { pt3dadd( -8.3242, -35.4697, -25.5385, 0.66 ) }
    dend_84 { pt3dadd( -8.61395, -36.0755, -25.9474, 1.4 ) }
    dend_84 { pt3dadd( -8.85972, -36.6634, -26.3712, 1.69 ) }
    dend_84 { pt3dadd( -9.00175, -37.0491, -26.6434, 1.69 ) }
    dend_84 { pt3dadd( -9.46887, -38.581, -27.7155, 0.66 ) }
    dend_84 { pt3dadd( -9.59948, -39.0844, -28.0939, 0.66 ) }
    dend_84 { pt3dadd( -9.79448, -39.9063, -28.727, 0.59 ) }
    dend_84 { pt3dadd( -9.88086, -40.2688, -28.998, 0.52 ) }
    dend_84 { pt3dadd( -9.98397, -40.7022, -29.3187, 0.52 ) }
    dend_84 { pt3dadd( -10.1158, -41.3114, -29.7305, 0.66 ) }
    dend_84 { pt3dadd( -10.1705, -41.6648, -29.9232, 0.66 ) }
    dend_84 { pt3dadd( -10.2258, -42.0254, -30.1035, 0.66 ) }
    dend_84 { pt3dadd( -10.3094, -42.7601, -30.4084, 0.52 ) }
    dend_84 { pt3dadd( -10.3439, -43.0486, -30.5182, 0.29 ) }
    dend_84 { pt3dadd( -10.4116, -43.4851, -30.6537, 0.29 ) }
    dend_84 { pt3dadd( -10.7021, -44.2957, -30.901, 0.96 ) }
    dend_84 { pt3dadd( -10.9823, -44.8684, -31.0667, 1.4 ) }
    dend_84 { pt3dadd( -11.2002, -45.25, -31.1594, 1.92 ) }
    dend_84 { pt3dadd( -11.4636, -45.6554, -31.2586, 2.36 ) }
    dend_84 { pt3dadd( -11.7155, -46.0075, -31.3506, 2.36 ) }
    dend_84 { pt3dadd( -13.1536, -47.8589, -31.8539, 0.29 ) }
    dend_84 { pt3dadd( -13.545, -48.3352, -31.9863, 0.29 ) }
    dend_84 { pt3dadd( -14.0265, -48.9073, -32.1552, 0.29 ) }
    dend_84 { pt3dadd( -14.6677, -49.6599, -32.4111, 0.29 ) }
    dend_84 { pt3dadd( -15.0115, -50.0563, -32.5531, 0.59 ) }
    dend_84 { pt3dadd( -15.107, -50.1656, -32.5901, 1.11 ) }
    dend_84 { pt3dadd( -15.1484, -50.2116, -32.6002, 1.11 ) }
    dend_84 { pt3dadd( -15.5825, -50.6249, -32.7194, 0.88 ) }
    dend_84 { pt3dadd( -16.7102, -51.6644, -33.0181, 0.37 ) }
    dend_84 { pt3dadd( -16.9755, -51.906, -33.1038, 0.37 ) }
    dend_84 { pt3dadd( -17.2152, -52.1044, -33.1857, 0.59 ) }
    dend_84 { pt3dadd( -17.7223, -52.5224, -33.392, 0.59 ) }
    dend_84 { pt3dadd( -18.4766, -53.1576, -33.7305, 0.59 ) }
    dend_84 { pt3dadd( -18.9691, -53.5888, -34.0208, 0.29 ) }
    dend_84 { pt3dadd( -19.8068, -54.4409, -34.5901, 0.66 ) }
    dend_84 { pt3dadd( -20.2421, -54.9836, -34.9513, 1.47 ) }
    dend_84 { pt3dadd( -20.7703, -55.7948, -35.4615, 2.28 ) }
    dend_84 { pt3dadd( -20.9326, -56.1104, -35.6427, 2.06 ) }
    dend_84 { pt3dadd( -21.4773, -57.5367, -36.3207, 0.59 ) }
    dend_84 { pt3dadd( -21.7353, -58.4064, -36.663, 0.52 ) }
    dend_84 { pt3dadd( -21.8669, -59.1063, -36.8558, 0.52 ) }
    dend_84 { pt3dadd( -21.9526, -59.744, -36.9913, 0.52 ) }
    dend_84 { pt3dadd( -22.0097, -60.3375, -37.0523, 0.59 ) }
    dend_84 { pt3dadd( -22.059, -61.1032, -37.0669, 0.81 ) }
    dend_84 { pt3dadd( -22.0677, -61.7344, -37.0106, 0.37 ) }
    dend_84 { pt3dadd( -22.0787, -62.4515, -36.9349, 0.22 ) }
    dend_84 { pt3dadd( -22.0975, -62.9002, -36.8991, 0.22 ) }
    dend_84 { pt3dadd( -22.1151, -63.3073, -36.8801, 0.81 ) }
    dend_84 { pt3dadd( -22.1452, -64.0278, -36.8654, 1.03 ) }
    dend_84 { pt3dadd( -22.2144, -65.2018, -36.8955, 0.96 ) }
    dend_84 { pt3dadd( -22.2313, -65.4274, -36.9109, 0.96 ) }
    dend_84 { pt3dadd( -22.345, -66.5573, -37.0539, 0.29 ) }
    dend_84 { pt3dadd( -22.4292, -67.3528, -37.189, 0.29 ) }
    dend_84 { pt3dadd( -22.4669, -67.6459, -37.2458, 0.29 ) }
    dend_84 { pt3dadd( -22.5804, -68.4316, -37.413, 1.4 ) }
    dend_84 { pt3dadd( -22.6944, -69.2331, -37.5881, 1.69 ) }
    dend_84 { pt3dadd( -22.8001, -70.0541, -37.7483, 1.25 ) }
    dend_84 { pt3dadd( -22.8778, -70.6697, -37.8378, 0.96 ) }
    dend_84 { pt3dadd( -22.9535, -71.2493, -37.9206, 0.59 ) }
    dend_84 { pt3dadd( -23.0083, -71.698, -37.9789, 0.22 ) }
    dend_84 { pt3dadd( -23.0674, -72.3859, -38.0809, 0.22 ) }
    dend_84 { pt3dadd( -23.093, -72.9757, -38.1787, 0.22 ) }
    dend_84 { pt3dadd( -23.1101, -73.7491, -38.3033, 0.22 ) }
    dend_84 { pt3dadd( -23.1303, -74.5579, -38.4683, 0.74 ) }
    dend_84 { pt3dadd( -23.1343, -74.7933, -38.5223, 1.03 ) }
    dend_84 { pt3dadd( -23.1485, -76.0142, -38.8121, 0.22 ) }
    dend_84 { pt3dadd( -23.2028, -76.8109, -39.0957, 0.22 ) }
    dend_84 { pt3dadd( -23.2477, -77.494, -39.3662, 0.22 ) }
    dend_84 { pt3dadd( -23.2965, -78.2253, -39.6853, 0.88 ) }
    dend_84 { pt3dadd( -23.3469, -78.811, -39.9498, 1.33 ) }
    dend_84 { pt3dadd( -23.3781, -79.029, -40.0548, 1.4 ) }
    dend_84 { pt3dadd( -23.8745, -80.8194, -41.0721, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 93/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -2.33118, -23.2418, -4.67186, 0.59 ) }
    dend_77 { pt3dadd( -3.49462, -23.8483, -4.08508, 0.59 ) }
    dend_77 { pt3dadd( -4.53375, -24.4231, -3.53699, 0.52 ) }
    dend_77 { pt3dadd( -5.1217, -24.7753, -3.24389, 0.59 ) }
    dend_77 { pt3dadd( -6.05826, -25.4198, -2.79104, 0.74 ) }
    dend_77 { pt3dadd( -6.8167, -26.0144, -2.42108, 0.37 ) }
    dend_77 { pt3dadd( -7.3159, -26.4733, -2.14551, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_77 { pt3dadd( -7.62166, -26.882, -1.8754, 0.74 ) }
    dend_77 { pt3dadd( -7.90204, -27.5422, -1.468, 1.25 ) }
    dend_77 { pt3dadd( -8.07102, -28.2795, -1.01702, 1.18 ) }
    dend_77 { pt3dadd( -8.11288, -28.7842, -0.712265, 0.88 ) }
    dend_77 { pt3dadd( -8.08236, -29.9047, -0.00714642, 0.37 ) }
    dend_77 { pt3dadd( -7.94741, -31.4623, 1.02468, 0.96 ) }
    dend_77 { pt3dadd( -7.84928, -32.1884, 1.52752, 0.96 ) }
    dend_77 { pt3dadd( -7.75312, -32.7367, 1.93418, 0.81 ) }
    dend_77 { pt3dadd( -7.68627, -33.1141, 2.21986, 0.81 ) }
    dend_77 { pt3dadd( -7.60012, -33.7677, 2.68642, 0.44 ) }
    dend_77 { pt3dadd( -7.58751, -34.0662, 2.86774, 0.66 ) }
    dend_77 { pt3dadd( -7.63057, -34.3398, 3.00645, 0.59 ) }
    dend_77 { pt3dadd( -7.645, -34.3996, 3.04937, 0.59 ) }
    dend_77 { pt3dadd( -7.78034, -34.7179, 3.30077, 0.59 ) }
    dend_77 { pt3dadd( -8.06905, -35.2417, 3.75039, 0.22 ) }
    dend_77 { pt3dadd( -8.20612, -35.4518, 3.93535, 0.22 ) }
    dend_77 { pt3dadd( -8.38043, -35.7088, 4.17905, 0.22 ) }
    dend_77 { pt3dadd( -8.93987, -36.4707, 4.97164, 1.11 ) }
    dend_77 { pt3dadd( -9.35232, -37.0252, 5.58925, 1.47 ) }
    dend_77 { pt3dadd( -9.38201, -37.0661, 5.64086, 1.47 ) }
    // Section: dend_72, id: dend_72, parent: dend_66 (entry count 20/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -6.24867, 38.1887, 20.4714, 1.03 ) }
    dend_72 { pt3dadd( -8.56277, 39.6916, 6.37786, 1.03 ) }
    dend_72 { pt3dadd( -8.69505, 39.8201, 5.43537, 0.66 ) }
    dend_72 { pt3dadd( -8.78421, 39.943, 4.67054, 0.66 ) }
    dend_72 { pt3dadd( -8.82608, 40.0278, 4.20721, 0.74 ) }
    dend_72 { pt3dadd( -8.86985, 40.1695, 3.51961, 0.74 ) }
    dend_72 { pt3dadd( -8.88884, 40.2869, 3.00596, 0.96 ) }
    dend_72 { pt3dadd( -8.15683, 41.1057, 2.65635, 0.96 ) }
    dend_72 { pt3dadd( -7.89504, 41.4039, 2.54974, 0.66 ) }
    dend_72 { pt3dadd( -7.55874, 41.8149, 2.44128, 0.88 ) }
    dend_72 { pt3dadd( -7.28056, 42.1944, 2.37599, 1.18 ) }
    dend_72 { pt3dadd( -7.099, 42.4858, 2.35415, 1.33 ) }
    dend_72 { pt3dadd( -6.56835, 43.4977, 2.35997, 1.33 ) }
    dend_72 { pt3dadd( -6.28403, 44.2494, 2.42378, 1.33 ) }
    dend_72 { pt3dadd( -6.14879, 44.7724, 2.46923, 1.03 ) }
    dend_72 { pt3dadd( -6.09971, 45.0949, 2.493, 0.88 ) }
    dend_72 { pt3dadd( -6.05743, 45.6205, 2.51982, 0.88 ) }
    dend_72 { pt3dadd( -6.05579, 45.7413, 2.52093, 0.88 ) }
    dend_72 { pt3dadd( -6.09821, 46.4868, 2.47888, 0.81 ) }
    dend_72 { pt3dadd( -6.1355, 46.8795, 2.46129, 0.81 ) }
    dend_72 { pt3dadd( -6.22219, 47.5538, 2.43802, 0.74 ) }
    dend_72 { pt3dadd( -6.23793, 47.6552, 2.43535, 0.74 ) }
    dend_72 { pt3dadd( -6.34351, 48.1875, 2.42832, 0.66 ) }
    dend_72 { pt3dadd( -6.43462, 48.6092, 2.42504, 0.66 ) }
    dend_72 { pt3dadd( -6.55233, 49.1339, 2.42229, 0.66 ) }
    dend_72 { pt3dadd( -6.62014, 49.5444, 2.44972, 0.66 ) }
    dend_72 { pt3dadd( -6.67941, 50.4007, 2.53568, 0.66 ) }
    dend_72 { pt3dadd( -6.66784, 50.6408, 2.55919, 0.66 ) }
    dend_72 { pt3dadd( -6.53212, 51.4536, 2.6233, 0.66 ) }
    dend_72 { pt3dadd( -6.43632, 51.8264, 2.64677, 0.74 ) }
    dend_72 { pt3dadd( -5.96454, 53.156, 2.73014, 0.74 ) }
    dend_72 { pt3dadd( -5.66527, 53.856, 2.76815, 0.88 ) }
    dend_72 { pt3dadd( -5.24375, 54.7543, 2.80882, 0.66 ) }
    dend_72 { pt3dadd( -4.85089, 55.578, 2.89344, 0.81 ) }
    dend_72 { pt3dadd( -4.80291, 55.6679, 2.90628, 0.81 ) }
    dend_72 { pt3dadd( -4.34284, 56.4746, 3.03402, 1.03 ) }
    dend_72 { pt3dadd( -4.06873, 56.9526, 3.06695, 1.25 ) }
    dend_72 { pt3dadd( -3.81362, 57.4005, 3.08412, 1.33 ) }
    dend_72 { pt3dadd( -3.13984, 58.5571, 3.08445, 1.4 ) }
    dend_72 { pt3dadd( -2.65632, 59.4178, 3.02878, 1.4 ) }
    dend_72 { pt3dadd( -2.38843, 59.8801, 3.0348, 1.4 ) }
    dend_72 { pt3dadd( -1.64934, 61.1181, 3.09192, 0.52 ) }
    dend_72 { pt3dadd( -1.3674, 61.5699, 3.12988, 0.52 ) }
    dend_72 { pt3dadd( -1.31173, 61.6544, 3.13752, 0.52 ) }
    dend_72 { pt3dadd( -0.952774, 62.2254, 3.16522, 0.52 ) }
    dend_72 { pt3dadd( -0.0179329, 63.8968, 3.50388, 0.96 ) }
    dend_72 { pt3dadd( 0.195948, 64.2481, 3.6542, 1.33 ) }
    dend_72 { pt3dadd( 0.195948, 64.2481, 3.6542, 1.69 ) }
    dend_72 { pt3dadd( 0.348999, 64.4587, 3.84427, 1.69 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 69/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -6.24867, 38.1887, 20.4714, 0.88 ) }
    dend_67 { pt3dadd( -6.91559, 38.7728, 22.1804, 0.88 ) }
    dend_67 { pt3dadd( -6.97485, 38.8291, 22.3264, 1.03 ) }
    dend_67 { pt3dadd( -7.72698, 39.5499, 24.0395, 0.66 ) }
    dend_67 { pt3dadd( -7.89699, 39.7183, 24.3992, 0.44 ) }
    dend_67 { pt3dadd( -8.01235, 39.8313, 24.6198, 0.66 ) }
    dend_67 { pt3dadd( -8.12407, 39.934, 24.8017, 0.81 ) }
    dend_67 { pt3dadd( -8.23157, 40.0162, 24.8464, 0.88 ) }
    dend_67 { pt3dadd( -8.47377, 40.169, 24.812, 0.88 ) }
    dend_67 { pt3dadd( -8.69586, 40.2982, 24.7157, 0.88 ) }
    dend_67 { pt3dadd( -9.35863, 40.6549, 24.4388, 0.44 ) }
    dend_67 { pt3dadd( -9.81674, 40.8932, 24.2557, 0.37 ) }
    dend_67 { pt3dadd( -10.45, 41.2406, 24.4115, 0.37 ) }
    dend_67 { pt3dadd( -10.5982, 41.3408, 24.576, 0.52 ) }
    dend_67 { pt3dadd( -10.8502, 41.5662, 25.0041, 0.59 ) }
    dend_67 { pt3dadd( -10.9951, 41.7248, 25.3255, 0.74 ) }
    dend_67 { pt3dadd( -11.0397, 41.7916, 25.459, 0.88 ) }
    dend_67 { pt3dadd( -11.8325, 43.5704, 28.8036, 0.66 ) }
    dend_67 { pt3dadd( -11.8939, 43.7659, 29.1505, 0.66 ) }
    dend_67 { pt3dadd( -11.9631, 44.0528, 29.6373, 0.81 ) }
    dend_67 { pt3dadd( -11.9728, 44.1057, 29.7206, 0.81 ) }
    dend_67 { pt3dadd( -12.0341, 44.4636, 30.1739, 0.52 ) }
    dend_67 { pt3dadd( -12.1225, 44.9114, 30.5088, 0.44 ) }
    dend_67 { pt3dadd( -12.2508, 45.45, 30.5714, 0.44 ) }
    dend_67 { pt3dadd( -12.5957, 46.6275, 30.6547, 0.88 ) }
    dend_67 { pt3dadd( -12.7405, 47.0417, 30.6787, 1.11 ) }
    dend_67 { pt3dadd( -13.2437, 48.3596, 30.732, 0.44 ) }
    dend_67 { pt3dadd( -13.4719, 48.8941, 30.7376, 0.44 ) }
    dend_67 { pt3dadd( -13.6379, 49.2784, 30.7246, 0.44 ) }
    dend_67 { pt3dadd( -13.7703, 49.6306, 30.691, 0.44 ) }
    dend_67 { pt3dadd( -13.9421, 50.173, 30.6114, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_67 { pt3dadd( -13.9948, 50.3778, 30.614, 1.25 ) }
    dend_67 { pt3dadd( -14.0079, 50.4423, 30.6259, 1.25 ) }
    dend_67 { pt3dadd( -14.076, 50.7269, 30.7092, 1.47 ) }
    dend_67 { pt3dadd( -14.2951, 51.4985, 31.0016, 0.59 ) }
    dend_67 { pt3dadd( -14.4304, 51.9346, 31.1955, 0.59 ) }
    dend_67 { pt3dadd( -14.5743, 52.4022, 31.4286, 0.59 ) }
    dend_67 { pt3dadd( -14.7021, 52.7546, 31.642, 0.74 ) }
    dend_67 { pt3dadd( -15.0168, 53.3844, 32.1025, 0.74 ) }
    dend_67 { pt3dadd( -15.0474, 53.4274, 32.1454, 0.88 ) }
    dend_67 { pt3dadd( -15.0949, 53.4659, 32.2081, 1.03 ) }
    dend_67 { pt3dadd( -15.2316, 53.5323, 32.3603, 1.03 ) }
    dend_67 { pt3dadd( -15.4647, 53.5959, 32.5547, 0.81 ) }
    dend_67 { pt3dadd( -15.9241, 53.6439, 32.8697, 0.44 ) }
    dend_67 { pt3dadd( -16.1145, 53.6864, 32.9028, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 14/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -3.14339, 38.5021, 40.4748, 0.88 ) }
    dend_65 { pt3dadd( -3.73307, 38.8221, 40.2961, 0.88 ) }
    dend_65 { pt3dadd( -4.2992, 39.188, 40.2444, 0.52 ) }
    dend_65 { pt3dadd( -4.9111, 39.672, 40.3198, 0.37 ) }
    dend_65 { pt3dadd( -5.27381, 40.0014, 40.4213, 0.37 ) }
    dend_65 { pt3dadd( -5.51435, 40.2518, 40.5179, 0.37 ) }
    dend_65 { pt3dadd( -5.67818, 40.4409, 40.5971, 0.44 ) }
    dend_65 { pt3dadd( -6.26107, 41.4272, 41.1257, 0.29 ) }
    dend_65 { pt3dadd( -6.3455, 41.6391, 41.2573, 0.29 ) }
    dend_65 { pt3dadd( -6.35749, 41.69, 41.2966, 0.29 ) }
    dend_65 { pt3dadd( -6.39598, 41.8829, 41.4965, 0.29 ) }
    dend_65 { pt3dadd( -6.42524, 42.011, 41.6602, 0.29 ) }
    dend_65 { pt3dadd( -6.5114, 42.3198, 42.0952, 0.29 ) }
    dend_65 { pt3dadd( -6.5695, 42.4704, 42.3119, 0.29 ) }
    dend_65 { pt3dadd( -6.82171, 42.9906, 43.1123, 0.37 ) }
    dend_65 { pt3dadd( -7.12427, 43.5108, 43.9336, 0.22 ) }
    dend_65 { pt3dadd( -7.19863, 43.618, 44.1151, 0.37 ) }
    dend_65 { pt3dadd( -7.27758, 43.7152, 44.2826, 0.37 ) }
    dend_65 { pt3dadd( -7.43374, 43.8623, 44.5462, 0.29 ) }
    dend_65 { pt3dadd( -7.65966, 44.0331, 44.7818, 0.29 ) }
    dend_65 { pt3dadd( -7.86398, 44.1588, 44.8618, 0.37 ) }
    dend_65 { pt3dadd( -7.91875, 44.1914, 44.8694, 0.59 ) }
    dend_65 { pt3dadd( -8.17318, 44.3298, 44.8972, 0.59 ) }
    dend_65 { pt3dadd( -8.87905, 44.6791, 44.9782, 0.81 ) }
    dend_65 { pt3dadd( -9.40216, 44.9178, 45.0438, 0.29 ) }
    dend_65 { pt3dadd( -9.65077, 45.0148, 45.0774, 0.44 ) }
    dend_65 { pt3dadd( -9.92811, 45.107, 45.1157, 0.44 ) }
    dend_65 { pt3dadd( -15.2774, 51.9088, 48.3381, 0.44 ) }
    dend_65 { pt3dadd( -20.8102, 57.9588, 52.5322, 0.44 ) }
    dend_65 { pt3dadd( -25.6175, 65.1646, 55.7733, 0.44 ) }
    dend_65 { pt3dadd( -31.1832, 72.1783, 58.0588, 0.44 ) }
    dend_65 { pt3dadd( -37.2474, 78.5693, 60.7746, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 46/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -3.14339, 38.5021, 40.4748, 0.52 ) }
    dend_62 { pt3dadd( -2.91891, 37.7728, 41.0583, 0.52 ) }
    dend_62 { pt3dadd( -2.79952, 37.2977, 41.4926, 0.52 ) }
    dend_62 { pt3dadd( -2.77266, 37.0532, 41.7288, 0.52 ) }
    dend_62 { pt3dadd( -2.77588, 36.7183, 42.0652, 0.52 ) }
    dend_62 { pt3dadd( -2.96093, 35.5795, 43.2311, 0.74 ) }
    dend_62 { pt3dadd( -3.03243, 35.3366, 43.482, 0.66 ) }
    dend_62 { pt3dadd( -3.21104, 35.0406, 43.8536, 0.52 ) }
    dend_62 { pt3dadd( -3.5883, 34.6851, 44.363, 0.52 ) }
    dend_62 { pt3dadd( -3.77522, 34.5791, 44.512, 0.44 ) }
    dend_62 { pt3dadd( -4.25701, 34.3951, 44.7251, 0.37 ) }
    dend_62 { pt3dadd( -4.47235, 34.3286, 44.7682, 0.37 ) }
    dend_62 { pt3dadd( -4.54502, 34.31, 44.7796, 0.37 ) }
    dend_62 { pt3dadd( -4.93056, 34.2083, 44.8328, 0.37 ) }
    dend_62 { pt3dadd( -5.65171, 34.0454, 44.9136, 0.29 ) }
    dend_62 { pt3dadd( -6.11372, 33.9448, 44.9597, 0.29 ) }
    dend_62 { pt3dadd( -6.66797, 33.8386, 45.0068, 0.29 ) }
    dend_62 { pt3dadd( -7.26668, 33.7321, 45.0557, 0.29 ) }
    dend_62 { pt3dadd( -13.3912, 26.684, 50.49, 0.29 ) }
    dend_62 { pt3dadd( -20.2043, 20.4875, 56.0952, 0.29 ) }
    dend_62 { pt3dadd( -25.8355, 14.6691, 63.2079, 0.29 ) }
    dend_62 { pt3dadd( -33.2256, 9.03049, 68.6436, 0.29 ) }
    dend_62 { pt3dadd( -39.9407, 3.49714, 74.9877, 0.29 ) }
    dend_62 { pt3dadd( -46.7196, -2.54026, 80.7979, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 70/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -57.2993, -52.1399, -28.648, 0.44 ) }
    dend_58 { pt3dadd( -59.3498, -52.7644, -30.2281, 0.44 ) }
    dend_58 { pt3dadd( -60.4152, -53.2039, -31.0176, 0.74 ) }
    dend_58 { pt3dadd( -60.588, -53.2819, -31.1425, 0.74 ) }
    dend_58 { pt3dadd( -61.5962, -53.7539, -31.7427, 0.37 ) }
    dend_58 { pt3dadd( -61.988, -53.9536, -31.9592, 1.4 ) }
    dend_58 { pt3dadd( -62.243, -54.094, -32.0757, 1.4 ) }
    dend_58 { pt3dadd( -64.1601, -55.2727, -32.5292, 0.52 ) }
    dend_58 { pt3dadd( -64.2215, -55.3147, -32.538, 0.52 ) }
    dend_58 { pt3dadd( -65.3928, -56.1792, -32.6632, 0.29 ) }
    dend_58 { pt3dadd( -66.1709, -56.7755, -32.6648, 0.74 ) }
    dend_58 { pt3dadd( -67.2627, -57.5508, -32.5879, 0.22 ) }
    dend_58 { pt3dadd( -67.4991, -57.7156, -32.5747, 0.81 ) }
    dend_58 { pt3dadd( -67.6997, -57.846, -32.5628, 0.81 ) }
    dend_58 { pt3dadd( -68.8644, -58.541, -32.5125, 0.22 ) }
    dend_58 { pt3dadd( -69.9241, -59.0695, -32.5157, 0.74 ) }
    dend_58 { pt3dadd( -70.3832, -59.2536, -32.507, 0.74 ) }
    dend_58 { pt3dadd( -71.9038, -59.8722, -32.7474, 0.59 ) }
    dend_58 { pt3dadd( -72.4718, -60.107, -32.88, 0.59 ) }
    dend_58 { pt3dadd( -73.8794, -60.6852, -33.2808, 0.59 ) }
    dend_58 { pt3dadd( -75.1369, -61.3436, -33.8113, 0.29 ) }
    dend_58 { pt3dadd( -75.517, -61.5739, -34.0065, 1.11 ) }
    dend_58 { pt3dadd( -77.4419, -62.7762, -35.0, 0.29 ) }
    dend_58 { pt3dadd( -78.1315, -63.2081, -35.3533, 0.29 ) }
    dend_58 { pt3dadd( -78.417, -63.406, -35.5327, 0.66 ) }
    dend_58 { pt3dadd( -80.3093, -64.9268, -37.0423, 0.44 ) }
    dend_58 { pt3dadd( -80.5167, -65.1226, -37.235, 0.81 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 97/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -57.2993, -52.1399, -28.648, 0.59 ) }
    dend_55 { pt3dadd( -58.2802, -53.3559, -28.4543, 0.59 ) }
    dend_55 { pt3dadd( -58.331, -53.4155, -28.447, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( -58.7222, -53.8581, -28.3997, 0.52 ) }
    dend_55 { pt3dadd( -58.8089, -53.9489, -28.3828, 0.74 ) }
    dend_55 { pt3dadd( -59.6892, -54.8494, -28.1759, 0.37 ) }
    dend_55 { pt3dadd( -60.9245, -56.0552, -27.8777, 0.59 ) }
    dend_55 { pt3dadd( -61.9927, -56.9854, -27.6416, 0.29 ) }
    dend_55 { pt3dadd( -62.3458, -57.2758, -27.5631, 0.88 ) }
    dend_55 { pt3dadd( -63.2849, -58.0583, -27.4438, 0.74 ) }
    dend_55 { pt3dadd( -63.4692, -58.21, -27.4307, 0.74 ) }
    dend_55 { pt3dadd( -64.6503, -59.1368, -27.3895, 0.22 ) }
    dend_55 { pt3dadd( -64.9276, -59.3497, -27.3986, 0.88 ) }
    dend_55 { pt3dadd( -65.0772, -59.4645, -27.4228, 0.88 ) }
    dend_55 { pt3dadd( -67.1246, -61.1854, -28.0737, 1.47 ) }
    dend_55 { pt3dadd( -68.0091, -62.0262, -28.5655, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: dend_30 (entry count 13/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -18.3444, 24.5765, -10.7652, 1.18 ) }
    dend_42 { pt3dadd( -18.4631, 25.4372, -11.7035, 1.18 ) }
    dend_42 { pt3dadd( -18.5021, 25.7885, -12.1756, 1.4 ) }
    dend_42 { pt3dadd( -18.5395, 26.4093, -13.1001, 1.4 ) }
    dend_42 { pt3dadd( -18.5371, 26.7389, -13.5912, 1.33 ) }
    dend_42 { pt3dadd( -18.5072, 28.1337, -15.6764, 0.29 ) }
    dend_42 { pt3dadd( -18.5113, 28.2632, -15.9031, 0.29 ) }
    dend_42 { pt3dadd( -18.553, 29.0132, -17.3456, 0.29 ) }
    dend_42 { pt3dadd( -18.6078, 29.7226, -18.7882, 1.03 ) }
    dend_42 { pt3dadd( -18.6324, 29.9758, -19.2998, 1.92 ) }
    dend_42 { pt3dadd( -18.6466, 30.0939, -19.5294, 1.92 ) }
    dend_42 { pt3dadd( -19.0289, 32.2006, -23.1415, 0.22 ) }
    dend_42 { pt3dadd( -19.1089, 32.5311, -23.6622, 0.22 ) }
    dend_42 { pt3dadd( -19.1684, 32.7103, -23.9097, 0.22 ) }
    dend_42 { pt3dadd( -19.3261, 33.0774, -24.3799, 1.11 ) }
    dend_42 { pt3dadd( -19.4602, 33.3345, -24.6889, 1.11 ) }
    dend_42 { pt3dadd( -20.0313, 34.288, -25.6175, 0.29 ) }
    dend_42 { pt3dadd( -20.2126, 34.4979, -25.724, 0.29 ) }
    dend_42 { pt3dadd( -20.4046, 34.6641, -25.8142, 0.29 ) }
    dend_42 { pt3dadd( -20.5594, 34.7674, -25.8703, 0.29 ) }
    dend_42 { pt3dadd( -21.1928, 35.1167, -26.1912, 0.96 ) }
    dend_42 { pt3dadd( -21.8775, 35.4547, -26.5821, 1.47 ) }
    dend_42 { pt3dadd( -22.4796, 35.7298, -26.9487, 1.77 ) }
    dend_42 { pt3dadd( -22.9004, 35.9351, -27.2328, 1.84 ) }
    dend_42 { pt3dadd( -23.296, 36.154, -27.5239, 1.55 ) }
    dend_42 { pt3dadd( -25.1739, 37.3326, -29.0006, 0.66 ) }
    dend_42 { pt3dadd( -25.3016, 37.425, -29.1084, 0.59 ) }
    dend_42 { pt3dadd( -25.8809, 37.9036, -29.6414, 0.22 ) }
    dend_42 { pt3dadd( -26.1342, 38.1517, -29.8839, 0.22 ) }
    dend_42 { pt3dadd( -26.4297, 38.483, -30.1383, 0.22 ) }
    dend_42 { pt3dadd( -26.6833, 38.8109, -30.3282, 0.22 ) }
    dend_42 { pt3dadd( -26.9034, 39.1186, -30.4334, 0.22 ) }
    dend_42 { pt3dadd( -27.1418, 39.4588, -30.5582, 0.22 ) }
    dend_42 { pt3dadd( -27.5999, 40.1217, -30.8088, 1.03 ) }
    dend_42 { pt3dadd( -27.9554, 40.5918, -31.015, 1.62 ) }
    dend_42 { pt3dadd( -28.632, 41.4264, -31.442, 1.84 ) }
    dend_42 { pt3dadd( -28.6794, 41.4846, -31.476, 1.84 ) }
    dend_42 { pt3dadd( -28.9394, 41.8116, -31.6903, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -18.3444, 24.5765, -10.7652, 1.4 ) }
    dend_31 { pt3dadd( -18.5782, 24.4837, -10.6971, 1.4 ) }
    dend_31 { pt3dadd( -20.1498, 23.8837, -10.2158, 0.59 ) }
    dend_31 { pt3dadd( -20.7251, 23.6801, -10.0426, 0.88 ) }
    dend_31 { pt3dadd( -21.5031, 23.4757, -9.82303, 1.11 ) }
    dend_31 { pt3dadd( -22.3765, 23.3162, -9.59932, 0.81 ) }
    dend_31 { pt3dadd( -23.0379, 23.2295, -9.47487, 0.59 ) }
    dend_31 { pt3dadd( -24.0542, 23.1914, -9.37535, 0.59 ) }
    dend_31 { pt3dadd( -24.4319, 23.219, -9.38497, 0.59 ) }
    dend_31 { pt3dadd( -25.482, 23.424, -9.44651, 0.59 ) }
    dend_31 { pt3dadd( -26.1994, 23.6274, -9.50761, 0.66 ) }
    dend_31 { pt3dadd( -27.1441, 23.9889, -9.63681, 0.88 ) }
    dend_31 { pt3dadd( -27.4686, 24.1398, -9.71055, 1.11 ) }
    dend_31 { pt3dadd( -27.731, 24.2826, -9.80979, 1.25 ) }
    dend_31 { pt3dadd( -28.3152, 24.5961, -10.0669, 1.25 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.32442, 25.3391, -3.15571, 2.21 ) }
    dend_13 { pt3dadd( -4.53233, 25.5745, -3.31943, 2.21 ) }
    dend_13 { pt3dadd( -5.59751, 26.6964, -4.07353, 1.03 ) }
    dend_13 { pt3dadd( -6.14903, 27.3096, -4.44508, 0.81 ) }
    dend_13 { pt3dadd( -6.88494, 28.1366, -4.9099, 0.81 ) }
    dend_13 { pt3dadd( -7.64234, 29.0005, -5.34266, 1.11 ) }
    dend_13 { pt3dadd( -7.96397, 29.3702, -5.50574, 1.11 ) }
    dend_13 { pt3dadd( -8.42772, 29.9215, -5.71257, 1.33 ) }
    dend_13 { pt3dadd( -8.94893, 30.5606, -5.90543, 1.55 ) }
    dend_13 { pt3dadd( -9.32582, 31.0533, -5.95746, 1.4 ) }
    dend_13 { pt3dadd( -9.85646, 31.8081, -5.88861, 0.96 ) }
    dend_13 { pt3dadd( -10.1985, 32.3353, -5.7743, 0.96 ) }
    dend_13 { pt3dadd( -10.4129, 32.6685, -5.70003, 1.03 ) }
    dend_13 { pt3dadd( -10.6038, 32.9837, -5.63155, 0.52 ) }
    dend_13 { pt3dadd( -11.2097, 33.875, -5.45634, 0.59 ) }
    dend_13 { pt3dadd( -11.4539, 34.2589, -5.40606, 0.44 ) }
    dend_13 { pt3dadd( -11.5896, 34.4669, -5.40041, 0.37 ) }
    dend_13 { pt3dadd( -12.091, 35.1752, -5.51049, 0.37 ) }
    dend_13 { pt3dadd( -12.3337, 35.4773, -5.61977, 0.74 ) }
    dend_13 { pt3dadd( -12.7079, 35.9157, -5.84571, 1.11 ) }
    dend_13 { pt3dadd( -12.953, 36.1821, -6.03659, 1.4 ) }
    dend_13 { pt3dadd( -13.2649, 36.5173, -6.29034, 1.4 ) }
    dend_13 { pt3dadd( -13.8458, 37.1095, -6.76591, 1.25 ) }
    dend_13 { pt3dadd( -14.5036, 37.7597, -7.28592, 1.11 ) }
    dend_13 { pt3dadd( -14.9173, 38.1532, -7.59576, 0.96 ) }
    dend_13 { pt3dadd( -15.8675, 39.0579, -8.2591, 0.44 ) }
    dend_13 { pt3dadd( -16.1525, 39.3301, -8.44062, 0.44 ) }
    dend_13 { pt3dadd( -16.82, 39.9811, -8.83802, 0.88 ) }
    dend_13 { pt3dadd( -17.0557, 40.2349, -8.96776, 0.96 ) }
    dend_13 { pt3dadd( -17.49, 40.7524, -9.17416, 0.66 ) }
    dend_13 { pt3dadd( -17.8349, 41.203, -9.31822, 0.52 ) }
    dend_13 { pt3dadd( -18.3117, 41.9219, -9.46004, 0.29 ) }
    dend_13 { pt3dadd( -18.8871, 42.8508, -9.59812, 1.4 ) }
    dend_13 { pt3dadd( -19.2341, 43.4795, -9.6795, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( -19.4187, 43.8287, -9.73662, 1.84 ) }
    dend_13 { pt3dadd( -19.4922, 43.9754, -9.76732, 1.84 ) }
    dend_13 { pt3dadd( -19.8065, 44.6178, -9.87877, 0.44 ) }
    dend_13 { pt3dadd( -20.0914, 45.2872, -9.85424, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 4/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -4.32442, 25.3391, -3.15571, 2.06 ) }
    dend_2 { pt3dadd( -4.03149, 26.1283, -3.2186, 2.06 ) }
    dend_2 { pt3dadd( -3.07092, 28.4646, -3.49448, 1.33 ) }
    dend_2 { pt3dadd( -2.67649, 29.5301, -3.52755, 1.33 ) }
    dend_2 { pt3dadd( -2.07056, 31.2131, -3.49505, 1.1 ) }
    dend_2 { pt3dadd( -1.30284, 33.5393, -3.38109, 1.25 ) }
    dend_2 { pt3dadd( -1.01989, 34.6379, -3.2843, 1.2 ) }
    dend_2 { pt3dadd( -0.752368, 35.8432, -3.15669, 1.35 ) }
    dend_2 { pt3dadd( -0.358705, 38.4378, -2.86541, 1.2 ) }
    dend_2 { pt3dadd( -0.242115, 39.7008, -2.65417, 1.4 ) }
    dend_2 { pt3dadd( -0.17975, 41.2438, -2.2789, 1.33 ) }
    dend_2 { pt3dadd( -0.259524, 43.704, -1.50379, 0.74 ) }
    dend_2 { pt3dadd( -0.283201, 43.9767, -1.41054, 0.96 ) }
    dend_2 { pt3dadd( -0.392062, 44.719, -1.17663, 1.25 ) }
    dend_2 { pt3dadd( -0.461738, 45.1033, -1.09649, 1.84 ) }
    // Section: dend_134, id: dend_134, parent: dend_132 (entry count 19/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( -7.58667, -51.2108, 15.7585, 0.37 ) }
    dend_134 { pt3dadd( -6.78042, -50.6712, 15.2113, 0.37 ) }
    dend_134 { pt3dadd( -6.5637, -50.5261, 15.0641, 0.37 ) }
    dend_134 { pt3dadd( -5.90687, -50.0865, 14.6183, 0.37 ) }
    dend_134 { pt3dadd( -5.71522, -49.9583, 14.4882, 0.52 ) }
    dend_134 { pt3dadd( -5.59769, -49.8796, 14.4084, 0.52 ) }
    dend_134 { pt3dadd( -5.53151, -49.8353, 14.3635, 0.52 ) }
    dend_134 { pt3dadd( 3.75006, -44.9002, 10.1377, 0.52 ) }
    dend_134 { pt3dadd( 13.1458, -40.8797, 5.29069, 0.52 ) }
    dend_134 { pt3dadd( 22.8094, -35.8177, 2.21957, 0.52 ) }
    dend_134 { pt3dadd( 33.3924, -32.6897, -0.198196, 0.52 ) }
    dend_134 { pt3dadd( 43.8519, -28.3794, -0.552424, 0.52 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 31/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( -7.58667, -51.2108, 15.7585, 0.44 ) }
    dend_133 { pt3dadd( -8.35551, -51.4684, 16.0194, 0.44 ) }
    dend_133 { pt3dadd( -8.88877, -51.6471, 16.2003, 0.44 ) }
    dend_133 { pt3dadd( -9.31009, -51.7883, 16.3432, 0.44 ) }
    dend_133 { pt3dadd( -9.64464, -51.9004, 16.4567, 0.44 ) }
    dend_133 { pt3dadd( -10.1797, -52.0796, 16.6382, 0.37 ) }
    dend_133 { pt3dadd( -10.5314, -52.1975, 16.7576, 0.37 ) }
    dend_133 { pt3dadd( -20.3209, -54.6177, 19.4076, 0.37 ) }
    dend_133 { pt3dadd( -29.9385, -56.8774, 22.7334, 0.37 ) }
    dend_133 { pt3dadd( -40.0671, -58.7168, 24.3463, 0.37 ) }
    dend_133 { pt3dadd( -50.3883, -60.1088, 24.1885, 0.37 ) }
    dend_133 { pt3dadd( -60.7469, -61.1005, 24.5558, 0.37 ) }
    dend_133 { pt3dadd( -70.8817, -63.133, 25.8885, 0.37 ) }
    // Section: dend_123, id: dend_123, parent: dend_119 (entry count 44/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( -8.09492, -60.3557, 20.0952, 0.96 ) }
    dend_123 { pt3dadd( -7.95555, -61.3734, 20.1429, 0.96 ) }
    dend_123 { pt3dadd( -7.84738, -62.1633, 20.1798, 0.96 ) }
    dend_123 { pt3dadd( -7.75342, -62.8495, 20.2119, 0.88 ) }
    dend_123 { pt3dadd( -7.67148, -63.4478, 20.2399, 0.88 ) }
    // Section: dend_120, id: dend_120, parent: dend_119 (entry count 49/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -8.09492, -60.3557, 20.0952, 0.44 ) }
    dend_120 { pt3dadd( -8.79169, -60.6335, 20.4494, 0.44 ) }
    dend_120 { pt3dadd( -9.04335, -60.7184, 20.5634, 0.44 ) }
    dend_120 { pt3dadd( -9.3622, -60.8158, 20.6995, 0.44 ) }
    dend_120 { pt3dadd( -9.92599, -60.9585, 20.9267, 0.44 ) }
    dend_120 { pt3dadd( -10.2726, -61.0306, 21.0605, 0.44 ) }
    dend_120 { pt3dadd( -10.4112, -61.0554, 21.1122, 0.66 ) }
    dend_120 { pt3dadd( -10.7863, -61.1097, 21.205, 0.81 ) }
    dend_120 { pt3dadd( -10.843, -61.1163, 21.2191, 0.81 ) }
    dend_120 { pt3dadd( -11.1585, -61.1317, 21.2984, 0.74 ) }
    dend_120 { pt3dadd( -11.3252, -61.1101, 21.3417, 0.74 ) }
    dend_120 { pt3dadd( -11.4479, -61.0786, 21.3742, 0.74 ) }
    dend_120 { pt3dadd( -19.885, -62.0879, 26.2538, 0.74 ) }
    dend_120 { pt3dadd( -27.6673, -61.497, 32.1693, 0.74 ) }
    dend_120 { pt3dadd( -34.7706, -62.2571, 38.8722, 0.74 ) }
    // Section: dend_111, id: dend_111, parent: dend_109 (entry count 64/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 5.10791, -53.1279, 9.38821, 0.66 ) }
    dend_111 { pt3dadd( 5.52291, -54.1344, 9.27218, 0.66 ) }
    dend_111 { pt3dadd( 5.86326, -54.9599, 9.17702, 0.66 ) }
    dend_111 { pt3dadd( 6.13445, -55.6177, 9.1012, 1.11 ) }
    dend_111 { pt3dadd( 6.39172, -56.2416, 9.02927, 1.11 ) }
    dend_111 { pt3dadd( 6.53373, -56.5861, 8.98957, 1.11 ) }
    dend_111 { pt3dadd( 6.55513, -56.638, 8.98358, 1.11 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 71/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 5.10791, -53.1279, 9.38821, 0.29 ) }
    dend_110 { pt3dadd( 5.24484, -52.5399, 9.39488, 0.29 ) }
    dend_110 { pt3dadd( 5.25082, -52.4956, 9.39266, 0.29 ) }
    dend_110 { pt3dadd( 5.26183, -51.9709, 9.317, 0.29 ) }
    dend_110 { pt3dadd( 5.25967, -51.921, 9.30786, 0.29 ) }
    dend_110 { pt3dadd( 5.19451, -51.1189, 9.15536, 0.29 ) }
    dend_110 { pt3dadd( 5.1462, -50.6372, 9.06378, 0.52 ) }
    dend_110 { pt3dadd( 5.08375, -50.247, 8.97765, 0.66 ) }
    dend_110 { pt3dadd( 4.95765, -49.5825, 8.82363, 0.37 ) }
    dend_110 { pt3dadd( 4.88691, -49.2809, 8.74574, 0.37 ) }
    dend_110 { pt3dadd( 4.7428, -48.7339, 8.60128, 0.44 ) }
    dend_110 { pt3dadd( 4.7312, -48.7002, 8.59193, 0.44 ) }
    dend_110 { pt3dadd( 4.70971, -48.6343, 8.57424, 0.44 ) }
    dend_110 { pt3dadd( 4.6997, -48.5925, 8.56731, 0.44 ) }
    dend_110 { pt3dadd( 2.95583, -42.7986, 7.4837, 0.44 ) }
    dend_110 { pt3dadd( 0.597187, -37.2466, 6.34938, 0.44 ) }
    // Section: dend_99, id: dend_99, parent: dend_95 (entry count 87/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 9.13673, -38.4365, -35.1062, 0.44 ) }
    dend_99 { pt3dadd( 10.9035, -39.353, -34.1774, 0.44 ) }
    dend_99 { pt3dadd( 12.2032, -40.0405, -33.52, 0.44 ) }
    dend_99 { pt3dadd( 13.8715, -40.929, -32.6989, 0.29 ) }
    dend_99 { pt3dadd( 15.069, -41.573, -32.1271, 0.29 ) }
    dend_99 { pt3dadd( 15.935, -42.0656, -31.7807, 0.29 ) }
    dend_99 { pt3dadd( 15.9897, -42.0989, -31.7623, 0.29 ) }
    dend_99 { pt3dadd( 16.1777, -42.2326, -31.7355, 0.59 ) }
    dend_99 { pt3dadd( 16.2497, -42.2895, -31.7368, 0.59 ) }
    dend_99 { pt3dadd( 16.4311, -42.4429, -31.7787, 1.03 ) }
    dend_99 { pt3dadd( 17.811, -43.6255, -32.1698, 0.22 ) }
    dend_99 { pt3dadd( 18.2963, -44.0339, -32.307, 0.22 ) }
    dend_99 { pt3dadd( 18.357, -44.0822, -32.3203, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_99 { pt3dadd( 18.9428, -44.5109, -32.4143, 0.96 ) }
    dend_99 { pt3dadd( 19.0079, -44.5546, -32.4199, 0.96 ) }
    dend_99 { pt3dadd( 19.7164, -44.9477, -32.4109, 1.62 ) }
    dend_99 { pt3dadd( 19.804, -44.984, -32.4011, 1.62 ) }
    dend_99 { pt3dadd( 20.6769, -45.3079, -32.303, 1.62 ) }
    dend_99 { pt3dadd( 21.1338, -45.4696, -32.2516, 1.18 ) }
    dend_99 { pt3dadd( 21.6946, -45.6706, -32.2234, 0.66 ) }
    dend_99 { pt3dadd( 22.7019, -46.0812, -32.2254, 0.22 ) }
    dend_99 { pt3dadd( 23.2802, -46.362, -32.2586, 0.22 ) }
    dend_99 { pt3dadd( 24.0052, -46.8005, -32.3609, 0.22 ) }
    dend_99 { pt3dadd( 24.25, -46.9921, -32.4209, 0.22 ) }
    dend_99 { pt3dadd( 25.0075, -47.7582, -32.7158, 0.22 ) }
    dend_99 { pt3dadd( 25.4491, -48.3097, -32.9878, 0.96 ) }
    dend_99 { pt3dadd( 25.7813, -48.7994, -33.2429, 0.96 ) }
    dend_99 { pt3dadd( 26.2016, -49.4597, -33.5917, 0.37 ) }
    dend_99 { pt3dadd( 26.4994, -49.905, -33.8291, 0.37 ) }
    dend_99 { pt3dadd( 26.9787, -50.5358, -34.1285, 0.96 ) }
    dend_99 { pt3dadd( 27.7332, -51.4436, -34.4694, 1.62 ) }
    dend_99 { pt3dadd( 28.2504, -52.0405, -34.6706, 1.92 ) }
    dend_99 { pt3dadd( 28.3001, -52.0988, -34.6903, 1.92 ) }
    dend_99 { pt3dadd( 28.9947, -52.9615, -34.954, 0.66 ) }
    dend_99 { pt3dadd( 29.7674, -53.9995, -35.2319, 0.29 ) }
    dend_99 { pt3dadd( 30.4547, -54.9902, -35.4465, 0.29 ) }
    dend_99 { pt3dadd( 30.7762, -55.4985, -35.5308, 0.29 ) }
    dend_99 { pt3dadd( 31.3516, -56.4514, -35.6717, 0.74 ) }
    dend_99 { pt3dadd( 31.6481, -56.967, -35.7326, 1.18 ) }
    dend_99 { pt3dadd( 32.088, -57.7763, -35.8056, 1.62 ) }
    dend_99 { pt3dadd( 32.1275, -57.8477, -35.811, 1.62 ) }
    dend_99 { pt3dadd( 32.8791, -59.066, -35.8582, 0.29 ) }
    dend_99 { pt3dadd( 33.5812, -60.0712, -35.9675, 0.29 ) }
    dend_99 { pt3dadd( 34.1682, -60.8416, -36.0819, 0.29 ) }
    dend_99 { pt3dadd( 34.2165, -60.9017, -36.0957, 0.29 ) }
    dend_99 { pt3dadd( 34.5441, -61.2952, -36.2125, 0.66 ) }
    dend_99 { pt3dadd( 35.0589, -61.9036, -36.4365, 0.96 ) }
    dend_99 { pt3dadd( 36.3658, -63.4465, -37.098, 1.33 ) }
    dend_99 { pt3dadd( 36.5219, -63.6429, -37.1837, 1.33 ) }
    dend_99 { pt3dadd( 37.1236, -64.4132, -37.4997, 1.69 ) }
    dend_99 { pt3dadd( 37.4249, -64.8082, -37.6389, 1.33 ) }
    dend_99 { pt3dadd( 37.9707, -65.5286, -37.8449, 0.81 ) }
    dend_99 { pt3dadd( 38.6504, -66.4578, -38.0439, 0.22 ) }
    dend_99 { pt3dadd( 38.9393, -66.865, -38.0684, 0.22 ) }
    dend_99 { pt3dadd( 39.2633, -67.3079, -38.0959, 0.74 ) }
    dend_99 { pt3dadd( 39.6523, -67.8174, -38.1275, 1.25 ) }
    dend_99 { pt3dadd( 39.9935, -68.2515, -38.1418, 1.25 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 44/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 9.13673, -38.4365, -35.1062, 0.37 ) }
    dend_96 { pt3dadd( 8.87131, -39.3346, -35.3441, 0.37 ) }
    dend_96 { pt3dadd( 8.72669, -39.827, -35.4797, 0.37 ) }
    dend_96 { pt3dadd( 8.57065, -40.3836, -35.7135, 0.88 ) }
    dend_96 { pt3dadd( 8.48568, -40.6661, -35.849, 0.96 ) }
    dend_96 { pt3dadd( 8.17804, -41.543, -36.1632, 0.52 ) }
    dend_96 { pt3dadd( 8.05845, -41.8491, -36.2742, 0.52 ) }
    dend_96 { pt3dadd( 8.03343, -41.9029, -36.2923, 0.52 ) }
    dend_96 { pt3dadd( 7.61238, -42.7271, -36.5548, 0.96 ) }
    dend_96 { pt3dadd( 7.4165, -43.0885, -36.7103, 1.18 ) }
    dend_96 { pt3dadd( 6.79788, -44.1314, -37.1894, 0.44 ) }
    dend_96 { pt3dadd( 6.16189, -45.1096, -37.6933, 0.44 ) }
    dend_96 { pt3dadd( 5.74207, -45.7092, -38.0346, 0.44 ) }
    dend_96 { pt3dadd( 5.15341, -46.4928, -38.503, 0.44 ) }
    dend_96 { pt3dadd( 4.20024, -47.6123, -39.1936, 1.25 ) }
    dend_96 { pt3dadd( 3.86299, -47.9715, -39.4492, 1.18 ) }
    dend_96 { pt3dadd( 3.28148, -48.5257, -39.9077, 0.59 ) }
    dend_96 { pt3dadd( 2.9446, -48.811, -40.1362, 0.52 ) }
    dend_96 { pt3dadd( 2.62096, -49.0683, -40.3537, 0.52 ) }
    dend_96 { pt3dadd( 2.01042, -49.5474, -40.7049, 0.52 ) }
    dend_96 { pt3dadd( 1.37989, -50.1158, -40.982, 1.33 ) }
    dend_96 { pt3dadd( 1.20776, -50.3068, -41.0672, 1.84 ) }
    dend_96 { pt3dadd( 0.960443, -50.6265, -41.188, 1.25 ) }
    dend_96 { pt3dadd( 0.44116, -51.3939, -41.4789, 0.44 ) }
    dend_96 { pt3dadd( -0.0858053, -52.2333, -41.7845, 0.22 ) }
    dend_96 { pt3dadd( -0.424493, -52.7904, -41.9447, 0.22 ) }
    dend_96 { pt3dadd( -0.906978, -53.5562, -42.1002, 0.22 ) }
    dend_96 { pt3dadd( -1.25207, -54.0775, -42.2039, 0.22 ) }
    dend_96 { pt3dadd( -1.27761, -54.1155, -42.2096, 0.22 ) }
    dend_96 { pt3dadd( -1.70629, -54.7386, -42.2641, 0.22 ) }
    dend_96 { pt3dadd( -2.22337, -55.4738, -42.3285, 1.47 ) }
    dend_96 { pt3dadd( -2.25371, -55.5186, -42.334, 1.47 ) }
    dend_96 { pt3dadd( -2.8584, -56.5528, -42.4642, 1.47 ) }
    dend_96 { pt3dadd( -3.54436, -57.8647, -42.7308, 0.44 ) }
    dend_96 { pt3dadd( -3.71699, -58.2157, -42.8587, 0.81 ) }
    dend_96 { pt3dadd( -3.8492, -58.5091, -42.9971, 1.11 ) }
    dend_96 { pt3dadd( -4.23494, -59.3945, -43.4806, 0.29 ) }
    dend_96 { pt3dadd( -4.65679, -60.3516, -44.0266, 0.29 ) }
    dend_96 { pt3dadd( -4.9658, -61.08, -44.4546, 0.88 ) }
    dend_96 { pt3dadd( -5.66184, -62.6825, -45.4639, 0.29 ) }
    dend_96 { pt3dadd( -5.79014, -62.9568, -45.6385, 0.29 ) }
    dend_96 { pt3dadd( -5.94365, -63.2695, -45.8391, 0.74 ) }
    dend_96 { pt3dadd( -6.1079, -63.5813, -46.033, 1.25 ) }
    dend_96 { pt3dadd( -6.74496, -64.7641, -46.7207, 0.29 ) }
    dend_96 { pt3dadd( -7.40232, -65.9706, -47.3168, 0.29 ) }
    dend_96 { pt3dadd( -7.84738, -66.7552, -47.6604, 0.88 ) }
    dend_96 { pt3dadd( -7.89444, -66.8351, -47.6972, 0.88 ) }
    dend_96 { pt3dadd( -8.16128, -67.2725, -47.9329, 1.33 ) }
    dend_96 { pt3dadd( -8.53243, -67.8252, -48.2678, 0.88 ) }
    dend_96 { pt3dadd( -9.35272, -68.8789, -48.9707, 0.22 ) }
    dend_96 { pt3dadd( -9.3834, -68.9159, -48.9955, 0.88 ) }
    dend_96 { pt3dadd( -9.41959, -68.9587, -49.0243, 0.88 ) }
    dend_96 { pt3dadd( -10.2008, -69.8486, -49.6174, 0.29 ) }
    dend_96 { pt3dadd( -10.612, -70.3072, -49.9363, 0.29 ) }
    dend_96 { pt3dadd( -10.9046, -70.6165, -50.148, 0.96 ) }
    dend_96 { pt3dadd( -11.214, -70.9567, -50.363, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_96 { pt3dadd( -11.755, -71.6159, -50.7226, 0.44 ) }
    dend_96 { pt3dadd( -12.0682, -72.0408, -50.9211, 0.44 ) }
    dend_96 { pt3dadd( -12.4334, -72.6409, -51.139, 1.03 ) }
    dend_96 { pt3dadd( -12.6102, -72.9702, -51.2895, 1.4 ) }
    dend_96 { pt3dadd( -12.9998, -73.7308, -51.6683, 0.44 ) }
    dend_96 { pt3dadd( -13.3514, -74.4556, -52.0291, 0.44 ) }
    dend_96 { pt3dadd( -13.7429, -75.3061, -52.4647, 0.29 ) }
    dend_96 { pt3dadd( -14.064, -76.0561, -52.8585, 0.29 ) }
    dend_96 { pt3dadd( -14.7506, -77.6843, -53.7222, 0.29 ) }
    dend_96 { pt3dadd( -14.9688, -78.2097, -54.0147, 0.29 ) }
    dend_96 { pt3dadd( -15.2259, -78.8297, -54.3778, 0.29 ) }
    dend_96 { pt3dadd( -15.4587, -79.3788, -54.7434, 1.03 ) }
    dend_96 { pt3dadd( -15.635, -79.7975, -55.0436, 1.03 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 13/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 29.4704, -94.4883, 24.8461, 1.33 ) }
    dend_94 { pt3dadd( 33.3012, -101.656, 29.785, 1.33 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 15/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 29.4704, -94.4883, 24.8461, 0.44 ) }
    dend_93 { pt3dadd( 32.9107, -102.963, 31.3037, 1.33 ) }
    // Section: dend_88, id: dend_88, parent: dend_84 (entry count 17/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -23.8745, -80.8194, -41.0721, 0.22 ) }
    dend_88 { pt3dadd( -24.1344, -81.076, -41.2003, 0.22 ) }
    dend_88 { pt3dadd( -24.4024, -81.3977, -41.3192, 0.22 ) }
    dend_88 { pt3dadd( -24.7215, -81.7473, -41.576, 0.22 ) }
    dend_88 { pt3dadd( -25.4305, -82.5672, -42.2171, 0.96 ) }
    dend_88 { pt3dadd( -25.5953, -82.7719, -42.3731, 0.96 ) }
    dend_88 { pt3dadd( -25.9786, -83.2939, -42.7268, 0.22 ) }
    dend_88 { pt3dadd( -26.3598, -83.8747, -43.1003, 0.22 ) }
    dend_88 { pt3dadd( -27.4414, -85.6885, -44.2778, 0.59 ) }
    dend_88 { pt3dadd( -27.7628, -86.3183, -44.6583, 0.22 ) }
    dend_88 { pt3dadd( -27.9192, -86.6993, -44.8503, 0.22 ) }
    dend_88 { pt3dadd( -28.1655, -87.4089, -45.1807, 0.88 ) }
    dend_88 { pt3dadd( -28.2427, -87.6727, -45.2856, 1.03 ) }
    dend_88 { pt3dadd( -28.5659, -89.0717, -45.6901, 0.22 ) }
    dend_88 { pt3dadd( -28.684, -89.8628, -45.7868, 0.22 ) }
    dend_88 { pt3dadd( -28.7956, -90.5575, -45.883, 0.22 ) }
    dend_88 { pt3dadd( -28.8561, -90.8479, -45.9209, 0.22 ) }
    dend_88 { pt3dadd( -28.9571, -91.1932, -45.9941, 0.66 ) }
    dend_88 { pt3dadd( -29.1118, -91.6267, -46.0899, 0.44 ) }
    dend_88 { pt3dadd( -29.1806, -91.7784, -46.136, 0.37 ) }
    dend_88 { pt3dadd( -29.4747, -92.3247, -46.3746, 0.22 ) }
    dend_88 { pt3dadd( -29.8993, -92.979, -46.7846, 0.22 ) }
    dend_88 { pt3dadd( -30.5317, -93.891, -47.4289, 0.59 ) }
    dend_88 { pt3dadd( -30.7589, -94.2128, -47.6827, 0.74 ) }
    dend_88 { pt3dadd( -31.3981, -95.0832, -48.4468, 0.74 ) }
    dend_88 { pt3dadd( -31.5713, -95.3145, -48.663, 0.96 ) }
    dend_88 { pt3dadd( -32.7452, -96.8197, -50.1236, 0.15 ) }
    dend_88 { pt3dadd( -32.8185, -96.9081, -50.2134, 0.37 ) }
    dend_88 { pt3dadd( -33.3729, -97.5233, -50.801, 0.15 ) }
    dend_88 { pt3dadd( -33.749, -97.8905, -51.1606, 0.66 ) }
    dend_88 { pt3dadd( -33.7953, -97.9296, -51.197, 0.66 ) }
    dend_88 { pt3dadd( -34.1746, -98.2043, -51.4332, 0.66 ) }
    dend_88 { pt3dadd( -35.0208, -98.6884, -51.7463, 0.22 ) }
    dend_88 { pt3dadd( -35.4734, -98.9222, -51.8726, 0.22 ) }
    dend_88 { pt3dadd( -35.5291, -98.949, -51.8849, 0.52 ) }
    dend_88 { pt3dadd( -35.7949, -99.0871, -51.9336, 0.37 ) }
    dend_88 { pt3dadd( -36.2227, -99.3251, -52.0055, 0.22 ) }
    dend_88 { pt3dadd( -37.1497, -99.8659, -52.2262, 0.88 ) }
    dend_88 { pt3dadd( -37.3401, -99.9819, -52.2747, 0.88 ) }
    dend_88 { pt3dadd( -37.8894, -100.329, -52.4511, 0.74 ) }
    dend_88 { pt3dadd( -38.5534, -100.75, -52.6742, 0.22 ) }
    dend_88 { pt3dadd( -39.0008, -101.045, -52.828, 0.22 ) }
    dend_88 { pt3dadd( -39.8323, -101.601, -53.1001, 0.81 ) }
    dend_88 { pt3dadd( -40.0455, -101.751, -53.1666, 0.81 ) }
    dend_88 { pt3dadd( -40.6643, -102.193, -53.3747, 0.15 ) }
    dend_88 { pt3dadd( -40.8952, -102.377, -53.4534, 0.15 ) }
    dend_88 { pt3dadd( -41.1499, -102.61, -53.565, 0.44 ) }
    dend_88 { pt3dadd( -41.2976, -102.771, -53.6351, 0.74 ) }
    dend_88 { pt3dadd( -41.8565, -103.501, -53.8556, 0.22 ) }
    dend_88 { pt3dadd( -41.8862, -103.548, -53.8802, 0.22 ) }
    dend_88 { pt3dadd( -42.14, -104.082, -54.2265, 0.15 ) }
    dend_88 { pt3dadd( -42.2693, -104.4, -54.4558, 0.66 ) }
    dend_88 { pt3dadd( -42.297, -104.48, -54.5164, 1.03 ) }
    dend_88 { pt3dadd( -42.3551, -104.674, -54.6599, 1.03 ) }
    dend_88 { pt3dadd( -42.753, -105.91, -55.6158, 0.29 ) }
    dend_88 { pt3dadd( -42.914, -106.323, -55.934, 0.22 ) }
    dend_88 { pt3dadd( -42.995, -106.526, -56.0852, 0.22 ) }
    dend_88 { pt3dadd( -43.2063, -107.11, -56.4758, 0.81 ) }
    dend_88 { pt3dadd( -43.2944, -107.39, -56.6387, 0.81 ) }
    dend_88 { pt3dadd( -43.5668, -108.4, -57.1613, 0.22 ) }
    dend_88 { pt3dadd( -43.7028, -108.92, -57.3648, 0.22 ) }
    dend_88 { pt3dadd( -43.8742, -109.453, -57.6312, 0.29 ) }
    dend_88 { pt3dadd( -43.9979, -109.774, -57.8016, 0.29 ) }
    dend_88 { pt3dadd( -44.1566, -110.151, -57.997, 0.29 ) }
    dend_88 { pt3dadd( -44.4481, -110.779, -58.3574, 0.96 ) }
    dend_88 { pt3dadd( -44.6136, -111.121, -58.5588, 1.25 ) }
    dend_88 { pt3dadd( -45.2359, -112.345, -59.3309, 0.22 ) }
    dend_88 { pt3dadd( -45.495, -112.79, -59.6278, 0.22 ) }
    dend_88 { pt3dadd( -45.705, -113.119, -59.856, 0.22 ) }
    dend_88 { pt3dadd( -46.3458, -114.067, -60.5294, 0.88 ) }
    dend_88 { pt3dadd( -46.4178, -114.178, -60.6049, 1.25 ) }
    dend_88 { pt3dadd( -46.6341, -114.556, -60.8688, 1.25 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 89/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -23.8745, -80.8194, -41.0721, 0.29 ) }
    dend_85 { pt3dadd( -22.8134, -82.0635, -40.2331, 0.29 ) }
    dend_85 { pt3dadd( -22.5584, -82.3813, -40.054, 0.29 ) }
    dend_85 { pt3dadd( -22.298, -82.7705, -39.901, 0.29 ) }
    dend_85 { pt3dadd( -22.105, -83.1625, -39.8312, 0.96 ) }
    dend_85 { pt3dadd( -21.8952, -83.8531, -39.7892, 1.33 ) }
    dend_85 { pt3dadd( -21.835, -84.5173, -39.828, 0.29 ) }
    dend_85 { pt3dadd( -21.888, -84.8576, -39.9179, 0.29 ) }
    dend_85 { pt3dadd( -22.251, -86.3231, -40.3621, 0.66 ) }
    dend_85 { pt3dadd( -22.3779, -86.7772, -40.5149, 1.03 ) }
    dend_85 { pt3dadd( -22.5662, -87.4298, -40.7641, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_85 { pt3dadd( -22.7917, -88.2611, -41.107, 0.29 ) }
    dend_85 { pt3dadd( -22.872, -88.6479, -41.2483, 0.29 ) }
    dend_85 { pt3dadd( -22.8769, -88.702, -41.2619, 0.29 ) }
    dend_85 { pt3dadd( -22.8077, -89.4045, -41.3374, 0.29 ) }
    dend_85 { pt3dadd( -22.7732, -89.6492, -41.3722, 0.81 ) }
    dend_85 { pt3dadd( -22.6964, -90.009, -41.4367, 0.81 ) }
    dend_85 { pt3dadd( -22.6119, -90.398, -41.4952, 0.22 ) }
    dend_85 { pt3dadd( -22.5922, -90.7741, -41.5914, 0.22 ) }
    dend_85 { pt3dadd( -22.6126, -91.1275, -41.7008, 0.22 ) }
    dend_85 { pt3dadd( -22.7079, -91.7228, -41.8885, 0.81 ) }
    dend_85 { pt3dadd( -22.775, -92.097, -42.0097, 1.25 ) }
    dend_85 { pt3dadd( -22.8649, -92.6173, -42.184, 1.62 ) }
    dend_85 { pt3dadd( -23.0518, -93.8384, -42.6376, 0.29 ) }
    dend_85 { pt3dadd( -23.1014, -94.2444, -42.7988, 0.29 ) }
    dend_85 { pt3dadd( -23.1426, -94.856, -43.0437, 0.29 ) }
    dend_85 { pt3dadd( -23.1401, -95.2749, -43.1984, 0.29 ) }
    dend_85 { pt3dadd( -23.1221, -95.6824, -43.3413, 0.29 ) }
    dend_85 { pt3dadd( -23.0692, -96.2703, -43.5653, 0.29 ) }
    dend_85 { pt3dadd( -23.0245, -96.6009, -43.7006, 0.74 ) }
    dend_85 { pt3dadd( -22.9542, -97.0659, -43.9316, 1.33 ) }
    dend_85 { pt3dadd( -22.8665, -97.6672, -44.2522, 1.33 ) }
    dend_85 { pt3dadd( -22.8224, -98.003, -44.4131, 1.33 ) }
    dend_85 { pt3dadd( -22.7127, -98.8579, -44.7668, 0.52 ) }
    dend_85 { pt3dadd( -22.6466, -99.3494, -44.9291, 0.37 ) }
    dend_85 { pt3dadd( -22.6062, -100.022, -45.1493, 0.37 ) }
    dend_85 { pt3dadd( -22.5978, -100.531, -45.3118, 0.37 ) }
    dend_85 { pt3dadd( -22.6149, -101.174, -45.5184, 0.81 ) }
    dend_85 { pt3dadd( -22.6362, -101.602, -45.6471, 1.11 ) }
    dend_85 { pt3dadd( -22.6739, -102.007, -45.7637, 0.74 ) }
    dend_85 { pt3dadd( -22.853, -103.383, -46.2146, 0.22 ) }
    dend_85 { pt3dadd( -22.8798, -103.528, -46.2712, 0.66 ) }
    dend_85 { pt3dadd( -22.9185, -103.728, -46.3621, 1.11 ) }
    dend_85 { pt3dadd( -22.9272, -103.77, -46.3833, 1.11 ) }
    dend_85 { pt3dadd( -23.068, -104.487, -46.7343, 0.29 ) }
    dend_85 { pt3dadd( -23.1822, -104.994, -47.0126, 0.29 ) }
    dend_85 { pt3dadd( -23.242, -105.31, -47.1762, 0.52 ) }
    dend_85 { pt3dadd( -23.2799, -105.49, -47.2721, 1.03 ) }
    dend_85 { pt3dadd( -23.3171, -105.653, -47.3599, 1.03 ) }
    dend_85 { pt3dadd( -23.3324, -105.71, -47.3949, 1.03 ) }
    dend_85 { pt3dadd( -23.7238, -106.905, -48.1699, 0.29 ) }
    dend_85 { pt3dadd( -23.8553, -107.252, -48.416, 0.29 ) }
    dend_85 { pt3dadd( -23.9279, -107.439, -48.5636, 0.29 ) }
    dend_85 { pt3dadd( -23.94, -107.475, -48.5917, 0.29 ) }
    dend_85 { pt3dadd( -24.0747, -108.035, -48.9953, 0.74 ) }
    dend_85 { pt3dadd( -24.141, -108.35, -49.2094, 1.25 ) }
    dend_85 { pt3dadd( -24.1708, -108.525, -49.313, 1.25 ) }
    dend_85 { pt3dadd( -24.3306, -109.295, -49.7793, 0.44 ) }
    dend_85 { pt3dadd( -24.435, -109.794, -50.0771, 0.37 ) }
    dend_85 { pt3dadd( -24.5196, -110.194, -50.2841, 0.37 ) }
    dend_85 { pt3dadd( -24.6403, -110.932, -50.6095, 0.29 ) }
    dend_85 { pt3dadd( -24.659, -111.12, -50.6893, 0.29 ) }
    dend_85 { pt3dadd( -24.6724, -111.485, -50.8278, 0.66 ) }
    dend_85 { pt3dadd( -24.6716, -111.638, -50.8861, 1.03 ) }
    dend_85 { pt3dadd( -24.6592, -112.355, -51.2187, 0.29 ) }
    dend_85 { pt3dadd( -24.6249, -112.87, -51.4735, 0.29 ) }
    dend_85 { pt3dadd( -24.5587, -113.292, -51.6818, 0.29 ) }
    dend_85 { pt3dadd( -24.5037, -113.585, -51.8395, 0.29 ) }
    dend_85 { pt3dadd( -24.3473, -114.293, -52.2546, 1.18 ) }
    dend_85 { pt3dadd( -24.3047, -114.48, -52.3855, 0.07 ) }
    dend_85 { pt3dadd( -24.24, -114.714, -52.625, 1.18 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 60/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -9.38201, -37.0661, 5.64086, 1.18 ) }
    dend_79 { pt3dadd( -9.53445, -37.7917, 6.39808, 1.18 ) }
    dend_79 { pt3dadd( -9.72049, -38.233, 6.93089, 1.18 ) }
    dend_79 { pt3dadd( -9.93256, -38.5645, 7.38913, 0.59 ) }
    dend_79 { pt3dadd( -10.3105, -39.0186, 8.0644, 0.52 ) }
    dend_79 { pt3dadd( -10.5518, -39.2718, 8.44465, 0.22 ) }
    dend_79 { pt3dadd( -10.785, -39.5117, 8.78605, 0.22 ) }
    dend_79 { pt3dadd( -11.1937, -39.837, 9.24612, 0.22 ) }
    dend_79 { pt3dadd( -11.4172, -40.0085, 9.46417, 0.22 ) }
    dend_79 { pt3dadd( -11.6714, -40.2438, 9.70559, 0.22 ) }
    dend_79 { pt3dadd( -11.895, -40.499, 9.90328, 0.37 ) }
    dend_79 { pt3dadd( -12.0817, -40.7882, 10.1353, 0.44 ) }
    dend_79 { pt3dadd( -12.2997, -41.1784, 10.4722, 0.44 ) }
    dend_79 { pt3dadd( -12.5465, -41.635, 10.8973, 0.37 ) }
    dend_79 { pt3dadd( -12.8961, -42.1823, 11.4692, 0.81 ) }
    dend_79 { pt3dadd( -13.0475, -42.366, 11.6988, 1.25 ) }
    dend_79 { pt3dadd( -13.5913, -42.8588, 12.4507, 0.81 ) }
    dend_79 { pt3dadd( -14.0523, -43.1615, 13.0291, 0.29 ) }
    dend_79 { pt3dadd( -14.3766, -43.3105, 13.4205, 0.29 ) }
    dend_79 { pt3dadd( -14.7699, -43.4276, 13.8593, 0.66 ) }
    dend_79 { pt3dadd( -15.0631, -43.4879, 14.1407, 1.11 ) }
    dend_79 { pt3dadd( -15.3007, -43.5469, 14.3496, 0.59 ) }
    dend_79 { pt3dadd( -15.4518, -43.6145, 14.5042, 0.44 ) }
    dend_79 { pt3dadd( -15.638, -43.8229, 14.8444, 0.74 ) }
    dend_79 { pt3dadd( -15.6491, -44.1059, 15.3053, 0.37 ) }
    dend_79 { pt3dadd( -15.5803, -44.4281, 15.8213, 0.22 ) }
    dend_79 { pt3dadd( -15.4702, -44.716, 16.2971, 0.22 ) }
    dend_79 { pt3dadd( -15.1473, -45.4187, 17.4694, 0.66 ) }
    dend_79 { pt3dadd( -15.088, -45.5438, 17.6758, 0.81 ) }
    dend_79 { pt3dadd( -14.6682, -46.4554, 19.146, 0.44 ) }
    dend_79 { pt3dadd( -14.5825, -46.6284, 19.427, 0.15 ) }
    dend_79 { pt3dadd( -14.4369, -46.9344, 19.9324, 0.22 ) }
    dend_79 { pt3dadd( -14.3849, -47.0738, 20.1595, 0.22 ) }
    dend_79 { pt3dadd( -14.3476, -47.2927, 20.4412, 0.44 ) }
    dend_79 { pt3dadd( -14.3448, -47.4954, 20.6558, 1.18 ) }
    dend_79 { pt3dadd( -14.3942, -47.7994, 20.8853, 1.18 ) }
    dend_79 { pt3dadd( -14.453, -48.0779, 21.0832, 0.88 ) }
    dend_79 { pt3dadd( -14.675, -48.9094, 21.7391, 0.52 ) }
    dend_79 { pt3dadd( -14.747, -49.1834, 22.0079, 0.37 ) }
    dend_79 { pt3dadd( -14.8852, -49.6701, 22.5503, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_79 { pt3dadd( -14.9918, -49.9888, 22.9354, 0.29 ) }
    dend_79 { pt3dadd( -15.1292, -50.3166, 23.3505, 0.44 ) }
    dend_79 { pt3dadd( -15.4166, -51.0117, 24.3328, 0.37 ) }
    dend_79 { pt3dadd( -15.6378, -51.5212, 25.0943, 0.37 ) }
    dend_79 { pt3dadd( -15.7137, -51.7045, 25.3917, 0.37 ) }
    dend_79 { pt3dadd( -15.7929, -51.9234, 25.7714, 0.66 ) }
    dend_79 { pt3dadd( -15.8885, -52.2234, 26.3128, 0.37 ) }
    dend_79 { pt3dadd( -16.0954, -53.0905, 27.8256, 0.29 ) }
    dend_79 { pt3dadd( -16.1146, -53.1799, 27.9669, 1.03 ) }
    dend_79 { pt3dadd( -16.1394, -53.3201, 28.1816, 1.25 ) }
    dend_79 { pt3dadd( -18.724, -60.4055, 35.7503, 1.25 ) }
    dend_79 { pt3dadd( -22.5678, -66.0171, 43.9346, 1.25 ) }
    dend_79 { pt3dadd( -26.2167, -71.9421, 51.9971, 1.25 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 13/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -9.38201, -37.0661, 5.64086, 0.66 ) }
    dend_78 { pt3dadd( -10.4131, -37.1113, 5.51019, 0.66 ) }
    dend_78 { pt3dadd( -11.0993, -37.142, 5.38609, 0.29 ) }
    dend_78 { pt3dadd( -11.2674, -37.1512, 5.35314, 0.29 ) }
    dend_78 { pt3dadd( -11.71, -37.1816, 5.27846, 0.29 ) }
    dend_78 { pt3dadd( -12.0449, -37.2047, 5.22778, 0.29 ) }
    dend_78 { pt3dadd( -12.9122, -37.251, 5.11843, 0.44 ) }
    dend_78 { pt3dadd( -13.0741, -37.2614, 5.10083, 0.44 ) }
    dend_78 { pt3dadd( -13.3331, -37.2691, 5.07673, 0.88 ) }
    dend_78 { pt3dadd( -14.0025, -37.3016, 4.95333, 1.25 ) }
    dend_78 { pt3dadd( -14.1245, -37.3058, 4.92786, 1.25 ) }
    dend_78 { pt3dadd( -14.5981, -37.3201, 4.83931, 1.25 ) }
    dend_78 { pt3dadd( -15.0217, -37.334, 4.74404, 1.11 ) }
    dend_78 { pt3dadd( -15.669, -37.3568, 4.56946, 1.03 ) }
    dend_78 { pt3dadd( -16.8266, -37.4547, 4.07927, 0.81 ) }
    dend_78 { pt3dadd( -17.4954, -37.5577, 3.7284, 0.29 ) }
    dend_78 { pt3dadd( -17.9995, -37.6661, 3.44316, 0.37 ) }
    dend_78 { pt3dadd( -18.9757, -37.9353, 2.85135, 0.66 ) }
    dend_78 { pt3dadd( -19.2442, -38.0231, 2.68436, 0.66 ) }
    dend_78 { pt3dadd( -20.7431, -38.6095, 1.77831, 0.15 ) }
    dend_78 { pt3dadd( -21.1912, -38.8083, 1.51597, 0.15 ) }
    dend_78 { pt3dadd( -21.595, -39.0052, 1.285, 0.15 ) }
    dend_78 { pt3dadd( -21.7532, -39.0834, 1.20864, 0.81 ) }
    dend_78 { pt3dadd( -22.0493, -39.2278, 1.12436, 1.18 ) }
    dend_78 { pt3dadd( -22.362, -39.3721, 1.07769, 0.59 ) }
    dend_78 { pt3dadd( -23.2258, -39.7444, 1.0836, 0.29 ) }
    dend_78 { pt3dadd( -23.6203, -39.9236, 1.07969, 0.29 ) }
    dend_78 { pt3dadd( -23.9265, -40.0861, 1.07982, 0.52 ) }
    dend_78 { pt3dadd( -24.3259, -40.3276, 1.09032, 0.66 ) }
    dend_78 { pt3dadd( -24.6201, -40.5355, 1.08518, 0.81 ) }
    dend_78 { pt3dadd( -25.0105, -40.8656, 0.971167, 0.29 ) }
    dend_78 { pt3dadd( -25.3026, -41.1579, 0.775133, 0.22 ) }
    dend_78 { pt3dadd( -25.6403, -41.5053, 0.457044, 0.22 ) }
    dend_78 { pt3dadd( -25.812, -41.6864, 0.270934, 0.22 ) }
    dend_78 { pt3dadd( -26.3507, -42.2483, -0.329506, 0.74 ) }
    dend_78 { pt3dadd( -27.4361, -43.3385, -1.46741, 0.74 ) }
    dend_78 { pt3dadd( -28.1338, -44.028, -2.23626, 0.44 ) }
    dend_78 { pt3dadd( -28.674, -44.5432, -2.84214, 0.88 ) }
    dend_78 { pt3dadd( -28.8469, -44.7044, -3.02848, 1.33 ) }
    dend_78 { pt3dadd( -29.2694, -45.0856, -3.45286, 1.03 ) }
    dend_78 { pt3dadd( -29.8233, -45.5656, -3.9403, 0.81 ) }
    dend_78 { pt3dadd( -31.6302, -47.0219, -5.21408, 0.37 ) }
    dend_78 { pt3dadd( -32.341, -47.5667, -5.67517, 0.22 ) }
    dend_78 { pt3dadd( -32.7785, -47.9032, -5.96274, 0.22 ) }
    dend_78 { pt3dadd( -32.8647, -47.9696, -6.02032, 0.22 ) }
    dend_78 { pt3dadd( -33.0368, -48.1091, -6.13617, 0.59 ) }
    dend_78 { pt3dadd( -33.3942, -48.421, -6.36774, 0.81 ) }
    dend_78 { pt3dadd( -33.9922, -49.0019, -6.58492, 0.37 ) }
    dend_78 { pt3dadd( -34.1607, -49.1856, -6.65281, 0.29 ) }
    dend_78 { pt3dadd( -34.4495, -49.4772, -6.8207, 0.29 ) }
    dend_78 { pt3dadd( -34.7769, -49.7591, -6.99632, 0.59 ) }
    dend_78 { pt3dadd( -35.7951, -50.5459, -7.4768, 0.88 ) }
    dend_78 { pt3dadd( -36.272, -50.8773, -7.65434, 0.29 ) }
    dend_78 { pt3dadd( -36.3406, -50.9223, -7.67368, 0.29 ) }
    dend_78 { pt3dadd( -37.6618, -51.7462, -7.98204, 0.29 ) }
    dend_78 { pt3dadd( -38.7372, -52.4303, -8.18618, 1.47 ) }
    dend_78 { pt3dadd( -39.346, -52.8214, -8.25722, 1.55 ) }
    dend_78 { pt3dadd( -40.219, -53.3955, -8.26225, 0.37 ) }
    dend_78 { pt3dadd( -40.6317, -53.6883, -8.2439, 0.29 ) }
    dend_78 { pt3dadd( -40.704, -53.7476, -8.238, 0.29 ) }
    dend_78 { pt3dadd( -41.1706, -54.2455, -8.14684, 0.29 ) }
    dend_78 { pt3dadd( -41.4383, -54.5976, -8.11742, 0.29 ) }
    dend_78 { pt3dadd( -41.4886, -54.6661, -8.11998, 0.29 ) }
    dend_78 { pt3dadd( -41.8209, -55.1075, -8.16805, 0.29 ) }
    dend_78 { pt3dadd( -42.3741, -55.7628, -8.29099, 0.66 ) }
    dend_78 { pt3dadd( -42.7078, -56.1232, -8.36919, 1.03 ) }
    dend_78 { pt3dadd( -42.9604, -56.3648, -8.42597, 0.88 ) }
    dend_78 { pt3dadd( -43.4244, -56.7877, -8.53764, 1.03 ) }
    dend_78 { pt3dadd( -43.8618, -57.1537, -8.63904, 0.52 ) }
    dend_78 { pt3dadd( -44.7521, -57.8513, -8.82003, 0.22 ) }
    dend_78 { pt3dadd( -45.0666, -58.1022, -8.90005, 0.22 ) }
    dend_78 { pt3dadd( -45.3955, -58.3694, -9.00611, 0.22 ) }
    dend_78 { pt3dadd( -45.7079, -58.6542, -9.1408, 0.22 ) }
    dend_78 { pt3dadd( -45.8644, -58.8154, -9.22987, 0.22 ) }
    dend_78 { pt3dadd( -46.1936, -59.1881, -9.46925, 0.22 ) }
    dend_78 { pt3dadd( -47.0343, -60.2533, -10.1626, 1.11 ) }
    dend_78 { pt3dadd( -47.2451, -60.5529, -10.3505, 1.33 ) }
    dend_78 { pt3dadd( -47.5887, -61.1088, -10.6647, 0.74 ) }
    dend_78 { pt3dadd( -47.8649, -61.5885, -10.8868, 0.37 ) }
    dend_78 { pt3dadd( -47.9857, -61.8021, -10.9707, 0.22 ) }
    dend_78 { pt3dadd( -48.1957, -62.1726, -11.0766, 0.22 ) }
    dend_78 { pt3dadd( -48.345, -62.4276, -11.1652, 0.22 ) }
    dend_78 { pt3dadd( -48.7648, -63.1344, -11.4618, 1.18 ) }
    dend_78 { pt3dadd( -49.068, -63.6434, -11.6914, 1.62 ) }
    dend_78 { pt3dadd( -49.8041, -64.9224, -12.3838, 0.22 ) }
    dend_78 { pt3dadd( -50.237, -65.715, -12.8697, 0.22 ) }
    dend_78 { pt3dadd( -51.1158, -67.3945, -14.0048, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_78 { pt3dadd( -51.1527, -67.4643, -14.0556, 0.52 ) }
    dend_78 { pt3dadd( -51.2128, -67.577, -14.1437, 0.88 ) }
    dend_78 { pt3dadd( -51.7452, -68.5772, -14.9724, 0.22 ) }
    dend_78 { pt3dadd( -51.8803, -68.8179, -15.1693, 0.22 ) }
    dend_78 { pt3dadd( -52.0079, -69.0201, -15.3154, 0.22 ) }
    dend_78 { pt3dadd( -52.2854, -69.4216, -15.4928, 0.37 ) }
    dend_78 { pt3dadd( -52.4772, -69.6432, -15.6024, 0.37 ) }
    dend_78 { pt3dadd( -52.6986, -69.8773, -15.717, 0.37 ) }
    dend_78 { pt3dadd( -53.1914, -70.3542, -15.9347, 0.88 ) }
    dend_78 { pt3dadd( -54.2097, -71.2508, -16.4043, 1.25 ) }
    dend_78 { pt3dadd( -54.4978, -71.4823, -16.5274, 1.4 ) }
    dend_78 { pt3dadd( -56.1807, -72.7871, -17.2028, 0.29 ) }
    dend_78 { pt3dadd( -56.5058, -73.0254, -17.3205, 0.44 ) }
    dend_78 { pt3dadd( -56.9118, -73.3117, -17.4478, 0.44 ) }
    dend_78 { pt3dadd( -58.0863, -74.0841, -17.7131, 0.59 ) }
    dend_78 { pt3dadd( -59.0175, -74.6797, -17.8105, 1.25 ) }
    dend_78 { pt3dadd( -59.374, -74.9282, -17.8188, 1.25 ) }
    dend_78 { pt3dadd( -59.6414, -75.1385, -17.7872, 1.25 ) }
    dend_78 { pt3dadd( -59.9213, -75.3735, -17.7488, 0.96 ) }
    dend_78 { pt3dadd( -60.4503, -75.868, -17.6536, 0.59 ) }
    dend_78 { pt3dadd( -61.1456, -76.5908, -17.4742, 0.29 ) }
    dend_78 { pt3dadd( -61.6524, -77.1316, -17.3556, 0.29 ) }
    dend_78 { pt3dadd( -61.9461, -77.4296, -17.3117, 0.29 ) }
    dend_78 { pt3dadd( -62.5496, -77.9756, -17.2744, 0.74 ) }
    dend_78 { pt3dadd( -62.8536, -78.2247, -17.2728, 1.03 ) }
    dend_78 { pt3dadd( -63.0473, -78.3765, -17.2795, 1.25 ) }
    dend_78 { pt3dadd( -63.3194, -78.5821, -17.2961, 0.96 ) }
    dend_78 { pt3dadd( -63.9648, -79.084, -17.3347, 0.59 ) }
    dend_78 { pt3dadd( -64.789, -79.8662, -17.4094, 0.29 ) }
    dend_78 { pt3dadd( -65.3148, -80.4609, -17.459, 0.29 ) }
    dend_78 { pt3dadd( -65.6572, -80.8878, -17.4959, 0.29 ) }
    dend_78 { pt3dadd( -65.8098, -81.0835, -17.5385, 0.44 ) }
    dend_78 { pt3dadd( -65.9835, -81.3146, -17.608, 0.74 ) }
    dend_78 { pt3dadd( -66.6281, -82.1629, -17.9345, 0.29 ) }
    dend_78 { pt3dadd( -66.8278, -82.4236, -18.0668, 0.29 ) }
    dend_78 { pt3dadd( -67.0323, -82.6642, -18.2136, 0.22 ) }
    dend_78 { pt3dadd( -68.0746, -83.7527, -18.9142, 0.22 ) }
    dend_78 { pt3dadd( -68.2752, -83.9394, -19.0515, 0.96 ) }
    dend_78 { pt3dadd( -68.7938, -84.3857, -19.3926, 1.33 ) }
    dend_78 { pt3dadd( -69.1196, -84.6641, -19.5928, 1.11 ) }
    dend_78 { pt3dadd( -69.5096, -85.051, -19.8268, 0.37 ) }
    dend_78 { pt3dadd( -69.79, -85.3529, -19.9685, 0.22 ) }
    dend_78 { pt3dadd( -70.5502, -86.166, -20.2549, 0.22 ) }
    dend_78 { pt3dadd( -70.8944, -86.4958, -20.3846, 0.29 ) }
    dend_78 { pt3dadd( -71.2814, -86.8267, -20.5016, 0.37 ) }
    dend_78 { pt3dadd( -71.7257, -87.1744, -20.5977, 0.29 ) }
    dend_78 { pt3dadd( -72.1326, -87.4786, -20.6481, 0.29 ) }
    dend_78 { pt3dadd( -73.0447, -88.2073, -20.6852, 0.74 ) }
    dend_78 { pt3dadd( -73.3841, -88.4888, -20.6623, 0.74 ) }
    dend_78 { pt3dadd( -74.0726, -89.1014, -20.7109, 0.22 ) }
    dend_78 { pt3dadd( -74.5888, -89.5431, -20.7907, 0.22 ) }
    dend_78 { pt3dadd( -74.8148, -89.7407, -20.8384, 0.37 ) }
    dend_78 { pt3dadd( -75.3545, -90.2852, -20.9626, 0.37 ) }
    dend_78 { pt3dadd( -75.6203, -90.6015, -21.0392, 0.37 ) }
    dend_78 { pt3dadd( -76.7775, -92.0284, -21.4403, 0.74 ) }
    dend_78 { pt3dadd( -77.2186, -92.5366, -21.6066, 1.33 ) }
    dend_78 { pt3dadd( -77.5212, -92.8586, -21.7152, 1.33 ) }
    dend_78 { pt3dadd( -78.2316, -93.5576, -21.9444, 0.96 ) }
    dend_78 { pt3dadd( -79.4659, -94.703, -22.2715, 0.15 ) }
    dend_78 { pt3dadd( -79.8512, -95.0612, -22.3309, 0.15 ) }
    dend_78 { pt3dadd( -80.3213, -95.5132, -22.3051, 0.15 ) }
    dend_78 { pt3dadd( -80.588, -95.7983, -22.2753, 0.81 ) }
    dend_78 { pt3dadd( -80.6422, -95.8592, -22.2634, 0.81 ) }
    dend_78 { pt3dadd( -80.9894, -96.2729, -22.1116, 1.33 ) }
    dend_78 { pt3dadd( -81.3465, -96.792, -21.8345, 0.74 ) }
    dend_78 { pt3dadd( -81.6228, -97.2807, -21.5833, 0.96 ) }
    dend_78 { pt3dadd( -81.6999, -97.4296, -21.5098, 0.96 ) }
    dend_78 { pt3dadd( -82.0396, -98.0082, -21.2282, 0.29 ) }
    dend_78 { pt3dadd( -82.4373, -98.5853, -20.9551, 0.29 ) }
    dend_78 { pt3dadd( -82.7783, -99.0234, -20.7388, 0.88 ) }
    dend_78 { pt3dadd( -83.3687, -99.7161, -20.3899, 1.47 ) }
    dend_78 { pt3dadd( -83.6432, -100.032, -20.2374, 1.47 ) }
    dend_78 { pt3dadd( -84.4729, -100.996, -19.7242, 0.52 ) }
    dend_78 { pt3dadd( -85.2646, -101.916, -19.1981, 0.52 ) }
    dend_78 { pt3dadd( -85.6939, -102.433, -18.8985, 0.52 ) }
    dend_78 { pt3dadd( -85.9834, -102.798, -18.6615, 0.52 ) }
    dend_78 { pt3dadd( -86.4648, -103.445, -18.2135, 0.52 ) }
    dend_78 { pt3dadd( -86.8394, -104.08, -17.683, 0.74 ) }
    dend_78 { pt3dadd( -87.0767, -104.591, -17.1986, 0.74 ) }
    dend_78 { pt3dadd( -87.3949, -105.416, -16.3742, 0.22 ) }
    dend_78 { pt3dadd( -87.655, -106.197, -15.6183, 0.96 ) }
    dend_78 { pt3dadd( -87.7516, -106.571, -15.2323, 1.33 ) }
    dend_78 { pt3dadd( -88.0671, -107.974, -13.7189, 0.37 ) }
    dend_78 { pt3dadd( -88.1777, -108.595, -13.0653, 0.22 ) }
    dend_78 { pt3dadd( -88.2162, -108.896, -12.7549, 0.29 ) }
    dend_78 { pt3dadd( -88.3055, -109.508, -12.1218, 0.29 ) }
    dend_78 { pt3dadd( -88.5754, -110.791, -10.9032, 0.96 ) }
    dend_78 { pt3dadd( -88.6688, -111.133, -10.579, 1.4 ) }
    dend_78 { pt3dadd( -88.7574, -111.382, -10.3477, 1.69 ) }
    dend_78 { pt3dadd( -88.9336, -111.81, -9.93917, 1.55 ) }
    dend_78 { pt3dadd( -89.7341, -113.48, -8.19896, 0.44 ) }
    dend_78 { pt3dadd( -90.0203, -113.97, -7.65437, 0.44 ) }
    dend_78 { pt3dadd( -90.3904, -114.536, -7.07314, 0.44 ) }
    dend_78 { pt3dadd( -90.4481, -114.62, -6.98979, 0.88 ) }
    dend_78 { pt3dadd( -90.8882, -115.224, -6.42387, 1.11 ) }
    dend_78 { pt3dadd( -91.5341, -116.063, -5.69741, 1.11 ) }
    dend_78 { pt3dadd( -91.7345, -116.305, -5.53282, 0.81 ) }
    dend_78 { pt3dadd( -92.6161, -117.329, -4.854, 0.29 ) }
    dend_78 { pt3dadd( -93.2823, -118.187, -4.36208, 0.29 ) }
    dend_78 { pt3dadd( -93.5581, -118.591, -4.12381, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_78 { pt3dadd( -93.6741, -118.785, -4.01166, 1.11 ) }
    dend_78 { pt3dadd( -94.0628, -119.482, -3.63426, 1.11 ) }
    dend_78 { pt3dadd( -94.2982, -119.971, -3.34263, 1.11 ) }
    dend_78 { pt3dadd( -94.7451, -121.093, -2.60247, 0.44 ) }
    dend_78 { pt3dadd( -95.117, -122.133, -2.01545, 0.37 ) }
    dend_78 { pt3dadd( -95.287, -122.518, -1.83981, 0.44 ) }
    dend_78 { pt3dadd( -95.3243, -122.587, -1.81482, 0.66 ) }
    dend_78 { pt3dadd( -95.5483, -122.947, -1.69947, 0.29 ) }
    dend_78 { pt3dadd( -96.092, -123.629, -1.54835, 0.29 ) }
    dend_78 { pt3dadd( -97.1224, -124.626, -1.28326, 0.81 ) }
    dend_78 { pt3dadd( -97.9448, -125.356, -1.06896, 1.11 ) }
    dend_78 { pt3dadd( -98.0711, -125.466, -1.02025, 1.11 ) }
    dend_78 { pt3dadd( -98.6309, -125.998, -0.726839, 1.03 ) }
    dend_78 { pt3dadd( -98.6732, -126.044, -0.695955, 1.03 ) }
    dend_78 { pt3dadd( -99.4177, -127.057, 0.0765726, 0.29 ) }
    dend_78 { pt3dadd( -99.5186, -127.257, 0.211746, 0.29 ) }
    dend_78 { pt3dadd( -99.7203, -127.793, 0.434338, 0.59 ) }
    dend_78 { pt3dadd( -99.8994, -128.277, 0.552666, 0.74 ) }
    dend_78 { pt3dadd( -100.091, -128.79, 0.606622, 0.44 ) }
    dend_78 { pt3dadd( -100.276, -129.249, 0.594397, 0.44 ) }
    dend_78 { pt3dadd( -100.7, -130.284, 0.468133, 0.22 ) }
    dend_78 { pt3dadd( -101.035, -131.069, 0.348622, 0.59 ) }
    dend_78 { pt3dadd( -101.223, -131.488, 0.279292, 1.03 ) }
    dend_78 { pt3dadd( -101.424, -131.917, 0.210633, 0.74 ) }
    dend_78 { pt3dadd( -102.051, -133.293, 0.150124, 0.29 ) }
    dend_78 { pt3dadd( -102.453, -134.257, 0.215412, 0.29 ) }
    dend_78 { pt3dadd( -102.79, -135.181, 0.383221, 0.74 ) }
    dend_78 { pt3dadd( -102.967, -135.758, 0.534447, 0.74 ) }
    dend_78 { pt3dadd( -103.105, -136.283, 0.698836, 0.74 ) }
    dend_78 { pt3dadd( -103.551, -138.273, 1.44854, 0.29 ) }
    dend_78 { pt3dadd( -103.635, -138.793, 1.72816, 0.29 ) }
    dend_78 { pt3dadd( -103.696, -139.167, 1.93314, 0.29 ) }
    dend_78 { pt3dadd( -103.799, -139.771, 2.2614, 1.11 ) }
    dend_78 { pt3dadd( -103.904, -140.267, 2.50474, 0.96 ) }
    dend_78 { pt3dadd( -104.047, -140.829, 2.72623, 0.81 ) }
    dend_78 { pt3dadd( -104.57, -142.404, 3.10752, 0.22 ) }
    dend_78 { pt3dadd( -105.069, -143.696, 3.41664, 0.22 ) }
    dend_78 { pt3dadd( -105.194, -144.016, 3.53176, 0.66 ) }
    dend_78 { pt3dadd( -105.294, -144.317, 3.67205, 1.11 ) }
    dend_78 { pt3dadd( -105.389, -144.683, 3.86254, 0.66 ) }
    dend_78 { pt3dadd( -105.446, -145.038, 4.11049, 0.66 ) }
    dend_78 { pt3dadd( -105.45, -145.094, 4.15803, 0.66 ) }
    dend_78 { pt3dadd( -105.484, -146.39, 5.40321, 0.22 ) }
    dend_78 { pt3dadd( -105.556, -146.991, 5.90542, 0.22 ) }
    dend_78 { pt3dadd( -105.619, -147.331, 6.15554, 0.66 ) }
    dend_78 { pt3dadd( -105.899, -148.322, 6.75312, 1.18 ) }
    dend_78 { pt3dadd( -105.921, -148.393, 6.79027, 1.18 ) }
    dend_78 { pt3dadd( -106.135, -148.972, 7.04497, 1.18 ) }
    dend_78 { pt3dadd( -106.817, -150.6, 7.55178, 0.37 ) }
    dend_78 { pt3dadd( -106.885, -150.751, 7.59669, 0.59 ) }
    dend_78 { pt3dadd( -107.309, -151.627, 7.83822, 0.59 ) }
    dend_78 { pt3dadd( -107.752, -152.524, 8.04703, 0.59 ) }
    dend_78 { pt3dadd( -107.826, -152.692, 8.09402, 0.66 ) }
    dend_78 { pt3dadd( -107.969, -153.089, 8.2282, 0.74 ) }
    dend_78 { pt3dadd( -107.99, -153.161, 8.26441, 0.74 ) }
    dend_78 { pt3dadd( -108.074, -153.399, 8.39218, 0.74 ) }
    dend_78 { pt3dadd( -108.47, -154.347, 8.91964, 0.22 ) }
    dend_78 { pt3dadd( -108.779, -154.947, 9.24412, 0.22 ) }
    dend_78 { pt3dadd( -108.992, -155.321, 9.45242, 0.22 ) }
    dend_78 { pt3dadd( -109.498, -156.067, 9.86961, 1.03 ) }
    dend_78 { pt3dadd( -109.855, -156.563, 10.1436, 1.4 ) }
    dend_78 { pt3dadd( -109.897, -156.617, 10.1724, 1.4 ) }
    dend_78 { pt3dadd( -110.262, -157.062, 10.4047, 1.4 ) }
    dend_78 { pt3dadd( -110.698, -157.589, 10.6553, 0.66 ) }
    dend_78 { pt3dadd( -111.481, -158.644, 11.1398, 0.29 ) }
    dend_78 { pt3dadd( -111.532, -158.719, 11.1714, 0.29 ) }
    dend_78 { pt3dadd( -111.937, -159.368, 11.468, 0.29 ) }
    dend_78 { pt3dadd( -112.165, -159.781, 11.6655, 0.29 ) }
    dend_78 { pt3dadd( -112.264, -159.988, 11.7879, 0.29 ) }
    dend_78 { pt3dadd( -112.664, -160.82, 12.3617, 0.52 ) }
    dend_78 { pt3dadd( -112.776, -161.087, 12.5481, 1.03 ) }
    dend_78 { pt3dadd( -112.92, -161.426, 12.7799, 1.03 ) }
    dend_78 { pt3dadd( -112.981, -161.566, 12.8734, 1.03 ) }
    dend_78 { pt3dadd( -113.535, -162.764, 13.6456, 0.37 ) }
    dend_78 { pt3dadd( -113.926, -163.616, 14.1426, 0.29 ) }
    dend_78 { pt3dadd( -114.253, -164.341, 14.4959, 0.29 ) }
    dend_78 { pt3dadd( -114.281, -164.4, 14.5222, 0.29 ) }
    dend_78 { pt3dadd( -114.583, -165.014, 14.7733, 0.74 ) }
    dend_78 { pt3dadd( -114.821, -165.478, 14.9438, 0.81 ) }
    dend_78 { pt3dadd( -115.172, -166.165, 15.157, 0.81 ) }
    dend_78 { pt3dadd( -115.716, -167.2, 15.4801, 0.29 ) }
    dend_78 { pt3dadd( -116.335, -168.262, 15.826, 0.29 ) }
    dend_78 { pt3dadd( -116.544, -168.613, 15.9402, 0.52 ) }
    dend_78 { pt3dadd( -116.804, -169.028, 16.0691, 0.66 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 84/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 0.348999, 64.4587, 3.84427, 0.74 ) }
    dend_74 { pt3dadd( 0.18965, 64.8866, 3.84759, 0.74 ) }
    dend_74 { pt3dadd( 0.11629, 65.0866, 3.85204, 0.74 ) }
    dend_74 { pt3dadd( -0.0149882, 65.461, 3.79372, 0.44 ) }
    dend_74 { pt3dadd( -0.223174, 66.0058, 3.63369, 0.29 ) }
    dend_74 { pt3dadd( -0.336001, 66.2209, 3.53582, 0.29 ) }
    dend_74 { pt3dadd( -0.494781, 66.4897, 3.39514, 0.66 ) }
    dend_74 { pt3dadd( -0.631274, 66.6873, 3.27533, 0.66 ) }
    dend_74 { pt3dadd( -1.26589, 67.5838, 2.65354, 0.22 ) }
    dend_74 { pt3dadd( -1.64878, 68.0925, 2.18355, 0.22 ) }
    dend_74 { pt3dadd( -2.18002, 68.8502, 1.41355, 0.37 ) }
    dend_74 { pt3dadd( -2.23908, 68.9309, 1.33046, 0.37 ) }
    dend_74 { pt3dadd( -2.62507, 69.4506, 0.806267, 0.29 ) }
    dend_74 { pt3dadd( -2.91199, 69.8367, 0.430279, 0.29 ) }
    dend_74 { pt3dadd( -3.82514, 71.1226, -0.68615, 0.96 ) }
    dend_74 { pt3dadd( -4.24777, 71.795, -1.19991, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_74 { pt3dadd( -4.70609, 72.6529, -1.75592, 0.52 ) }
    dend_74 { pt3dadd( -4.86553, 72.9722, -1.93552, 0.52 ) }
    dend_74 { pt3dadd( -4.89421, 73.0343, -1.96324, 0.52 ) }
    dend_74 { pt3dadd( -5.13984, 73.5686, -2.10897, 0.52 ) }
    dend_74 { pt3dadd( -5.18807, 73.7027, -2.11348, 0.52 ) }
    dend_74 { pt3dadd( -5.29131, 74.0269, -2.11452, 0.52 ) }
    dend_74 { pt3dadd( -5.41523, 74.6574, -2.11094, 0.52 ) }
    dend_74 { pt3dadd( -5.44907, 74.7936, -2.12033, 0.52 ) }
    dend_74 { pt3dadd( -5.58643, 75.2367, -2.17258, 0.52 ) }
    dend_74 { pt3dadd( -5.63362, 75.3655, -2.195, 0.52 ) }
    dend_74 { pt3dadd( -5.75253, 75.6526, -2.25689, 0.52 ) }
    dend_74 { pt3dadd( -5.86761, 75.8988, -2.31954, 0.52 ) }
    dend_74 { pt3dadd( -6.25701, 76.6585, -2.54292, 0.66 ) }
    dend_74 { pt3dadd( -6.31817, 76.7819, -2.57874, 0.66 ) }
    dend_74 { pt3dadd( -6.41539, 77.0033, -2.62921, 0.88 ) }
    dend_74 { pt3dadd( -6.44067, 77.0611, -2.64121, 0.88 ) }
    dend_74 { pt3dadd( -6.59166, 77.4279, -2.70409, 0.88 ) }
    dend_74 { pt3dadd( -6.64567, 77.5684, -2.72093, 0.88 ) }
    dend_74 { pt3dadd( -6.77697, 77.9459, -2.74387, 0.66 ) }
    dend_74 { pt3dadd( -7.05292, 78.7767, -2.79654, 0.29 ) }
    dend_74 { pt3dadd( -7.21956, 79.2783, -2.82545, 0.44 ) }
    dend_74 { pt3dadd( -7.36564, 79.7327, -2.85002, 0.59 ) }
    dend_74 { pt3dadd( -7.49354, 80.113, -2.87494, 0.96 ) }
    dend_74 { pt3dadd( -7.67092, 80.6249, -2.91004, 1.33 ) }
    dend_74 { pt3dadd( -7.84298, 81.0831, -2.93453, 1.33 ) }
    dend_74 { pt3dadd( -7.97085, 81.3947, -2.9412, 1.11 ) }
    dend_74 { pt3dadd( -8.13178, 81.7654, -2.93502, 1.11 ) }
    dend_74 { pt3dadd( -8.73135, 82.9599, -2.88059, 0.52 ) }
    dend_74 { pt3dadd( -8.76914, 83.025, -2.87367, 0.52 ) }
    dend_74 { pt3dadd( -9.11945, 83.5373, -2.77774, 0.52 ) }
    dend_74 { pt3dadd( -9.32427, 83.7904, -2.70325, 0.44 ) }
    dend_74 { pt3dadd( -9.37195, 83.8422, -2.68239, 0.44 ) }
    dend_74 { pt3dadd( -9.72496, 84.1929, -2.49918, 0.44 ) }
    dend_74 { pt3dadd( -10.0425, 84.5125, -2.30301, 0.81 ) }
    dend_74 { pt3dadd( -10.2718, 84.7851, -2.16833, 0.74 ) }
    dend_74 { pt3dadd( -10.5681, 85.1936, -2.00302, 0.81 ) }
    dend_74 { pt3dadd( -10.6012, 85.2466, -1.98629, 0.81 ) }
    dend_74 { pt3dadd( -10.9205, 85.8108, -1.84077, 0.29 ) }
    dend_74 { pt3dadd( -11.1455, 86.2567, -1.75187, 0.29 ) }
    dend_74 { pt3dadd( -11.4645, 86.919, -1.64369, 0.29 ) }
    dend_74 { pt3dadd( -11.4956, 86.9872, -1.63355, 0.29 ) }
    dend_74 { pt3dadd( -11.7624, 87.6012, -1.54926, 0.29 ) }
    dend_74 { pt3dadd( -11.9954, 88.1227, -1.47417, 1.11 ) }
    dend_74 { pt3dadd( -12.1987, 88.5467, -1.40545, 1.47 ) }
    dend_74 { pt3dadd( -12.3262, 88.7826, -1.35925, 2.28 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 45/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 0.348999, 64.4587, 3.84427, 0.29 ) }
    dend_73 { pt3dadd( 2.04513, 65.0062, 3.6948, 0.29 ) }
    dend_73 { pt3dadd( 2.64428, 65.1696, 4.09055, 0.29 ) }
    dend_73 { pt3dadd( 3.3306, 65.3275, 4.61706, 0.37 ) }
    dend_73 { pt3dadd( 3.57751, 65.382, 4.83572, 0.37 ) }
    dend_73 { pt3dadd( 3.98546, 65.4736, 5.20977, 1.03 ) }
    dend_73 { pt3dadd( 4.20381, 65.5271, 5.40945, 1.03 ) }
    dend_73 { pt3dadd( 6.89392, 66.3012, 8.15345, 0.81 ) }
    dend_73 { pt3dadd( 7.24175, 66.4133, 8.53802, 0.74 ) }
    dend_73 { pt3dadd( 8.0487, 66.7172, 9.48359, 0.37 ) }
    dend_73 { pt3dadd( 8.17841, 66.7808, 9.63979, 0.37 ) }
    dend_73 { pt3dadd( 8.42784, 66.9407, 9.93765, 0.37 ) }
    dend_73 { pt3dadd( 8.95531, 67.4078, 10.474, 0.81 ) }
    dend_73 { pt3dadd( 9.14842, 67.6783, 10.574, 1.25 ) }
    dend_73 { pt3dadd( 9.37153, 67.994, 10.651, 1.62 ) }
    dend_73 { pt3dadd( 10.1848, 69.074, 10.755, 0.52 ) }
    dend_73 { pt3dadd( 10.4987, 69.4889, 10.7742, 0.52 ) }
    dend_73 { pt3dadd( 10.8486, 69.9623, 10.7574, 0.66 ) }
    dend_73 { pt3dadd( 11.5317, 70.9079, 10.7362, 0.52 ) }
    dend_73 { pt3dadd( 12.1584, 71.8176, 10.736, 0.44 ) }
    dend_73 { pt3dadd( 12.786, 72.7297, 10.7346, 0.44 ) }
    dend_73 { pt3dadd( 13.1754, 73.3004, 10.787, 0.44 ) }
    dend_73 { pt3dadd( 13.5559, 73.8907, 10.9397, 0.44 ) }
    dend_73 { pt3dadd( 14.345, 75.2358, 11.5282, 0.44 ) }
    dend_73 { pt3dadd( 14.5702, 75.6837, 11.8069, 0.44 ) }
    dend_73 { pt3dadd( 14.5913, 75.7266, 11.8402, 0.44 ) }
    dend_73 { pt3dadd( 15.3041, 76.9627, 12.9428, 0.44 ) }
    dend_73 { pt3dadd( 15.4517, 77.1499, 13.1085, 0.66 ) }
    dend_73 { pt3dadd( 15.537, 77.2312, 13.1845, 0.66 ) }
    dend_73 { pt3dadd( 15.8618, 77.4797, 13.3778, 1.11 ) }
    dend_73 { pt3dadd( 16.2349, 77.7454, 13.5839, 1.11 ) }
    dend_73 { pt3dadd( 16.5237, 77.9662, 13.7293, 1.03 ) }
    dend_73 { pt3dadd( 16.963, 78.3692, 13.905, 0.66 ) }
    dend_73 { pt3dadd( 17.9757, 79.6002, 14.4086, 0.66 ) }
    dend_73 { pt3dadd( 18.1124, 79.8196, 14.4918, 0.52 ) }
    dend_73 { pt3dadd( 18.2657, 80.1834, 14.6121, 0.52 ) }
    dend_73 { pt3dadd( 18.3837, 80.6272, 14.7263, 0.37 ) }
    dend_73 { pt3dadd( 18.5102, 81.4444, 14.8743, 0.37 ) }
    dend_73 { pt3dadd( 18.5447, 82.0036, 14.915, 0.37 ) }
    dend_73 { pt3dadd( 18.5559, 82.1685, 14.9204, 0.52 ) }
    dend_73 { pt3dadd( 18.6368, 82.6649, 14.9936, 0.52 ) }
    dend_73 { pt3dadd( 18.7242, 82.9883, 15.0626, 0.74 ) }
    dend_73 { pt3dadd( 18.7505, 83.0445, 15.0833, 0.74 ) }
    dend_73 { pt3dadd( 18.9459, 83.2627, 15.2656, 0.74 ) }
    dend_73 { pt3dadd( 19.9364, 83.9724, 16.3023, 0.74 ) }
    dend_73 { pt3dadd( 19.9821, 83.9961, 16.3549, 0.74 ) }
    dend_73 { pt3dadd( 25.7727, 89.3973, 20.97, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -16.1145, 53.6864, 32.9028, 0.29 ) }
    dend_71 { pt3dadd( -17.1847, 54.6754, 34.4129, 0.29 ) }
    dend_71 { pt3dadd( -17.3788, 54.9273, 34.7133, 0.29 ) }
    dend_71 { pt3dadd( -17.4431, 55.0245, 34.8118, 0.29 ) }
    dend_71 { pt3dadd( -17.8827, 55.7096, 35.4243, 0.29 ) }
    dend_71 { pt3dadd( -17.9092, 55.7579, 35.4702, 0.29 ) }
    dend_71 { pt3dadd( -18.4598, 56.78, 36.407, 0.29 ) }
    dend_71 { pt3dadd( -18.6496, 57.2183, 36.7373, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_71 { pt3dadd( -18.7457, 57.4602, 36.9195, 0.29 ) }
    dend_71 { pt3dadd( -18.8452, 57.778, 37.1645, 0.59 ) }
    dend_71 { pt3dadd( -19.1492, 59.0545, 38.1263, 0.29 ) }
    dend_71 { pt3dadd( -19.2769, 59.6489, 38.5263, 0.29 ) }
    dend_71 { pt3dadd( -19.2934, 59.7342, 38.574, 0.29 ) }
    dend_71 { pt3dadd( -19.3951, 60.356, 38.9321, 0.29 ) }
    dend_71 { pt3dadd( -19.5079, 61.3191, 39.4695, 0.29 ) }
    dend_71 { pt3dadd( -19.5379, 61.843, 39.7305, 0.29 ) }
    dend_71 { pt3dadd( -19.5408, 62.1853, 39.843, 1.03 ) }
    dend_71 { pt3dadd( -19.5061, 62.6021, 39.9935, 1.4 ) }
    dend_71 { pt3dadd( -23.0133, 69.6406, 45.9287, 1.4 ) }
    dend_71 { pt3dadd( -26.0833, 76.8961, 51.8565, 1.4 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 12/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -16.1145, 53.6864, 32.9028, 0.44 ) }
    dend_68 { pt3dadd( -17.0783, 53.1616, 32.7828, 0.44 ) }
    dend_68 { pt3dadd( -17.1355, 53.0202, 33.2796, 0.44 ) }
    dend_68 { pt3dadd( -17.2066, 52.7574, 34.1672, 0.44 ) }
    dend_68 { pt3dadd( -17.2502, 52.6116, 34.5547, 0.44 ) }
    dend_68 { pt3dadd( -17.2849, 52.5331, 34.7238, 0.59 ) }
    dend_68 { pt3dadd( -17.3941, 52.3451, 35.0797, 0.81 ) }
    dend_68 { pt3dadd( -18.3478, 50.6785, 38.3895, 0.29 ) }
    dend_68 { pt3dadd( -18.3954, 50.5984, 38.5548, 0.29 ) }
    dend_68 { pt3dadd( -18.5775, 50.2519, 39.2246, 0.29 ) }
    dend_68 { pt3dadd( -18.8031, 49.7805, 40.1016, 0.29 ) }
    dend_68 { pt3dadd( -18.9663, 49.4423, 40.6873, 0.29 ) }
    dend_68 { pt3dadd( -19.2366, 48.9538, 41.3837, 0.29 ) }
    dend_68 { pt3dadd( -19.3651, 48.8334, 41.4563, 0.29 ) }
    dend_68 { pt3dadd( -19.7971, 48.4631, 41.7166, 0.29 ) }
    dend_68 { pt3dadd( -26.3641, 41.4184, 51.0872, 0.29 ) }
    dend_68 { pt3dadd( -32.1947, 34.7237, 61.1662, 0.29 ) }
    dend_68 { pt3dadd( -37.3544, 29.9812, 72.5808, 0.29 ) }
    dend_68 { pt3dadd( -42.5511, 24.2636, 83.5439, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 31/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -46.7196, -2.54026, 80.7979, 0.29 ) }
    dend_64 { pt3dadd( -51.6869, -8.08538, 86.2182, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 33/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -46.7196, -2.54026, 80.7979, 0.44 ) }
    dend_63 { pt3dadd( -50.5454, -4.36513, 82.7607, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -68.0091, -62.0262, -28.5655, 1.47 ) }
    dend_57 { pt3dadd( -68.3209, -61.8452, -28.5864, 1.47 ) }
    dend_57 { pt3dadd( -68.986, -61.4833, -28.5824, 0.44 ) }
    dend_57 { pt3dadd( -69.7729, -61.0919, -28.5422, 0.44 ) }
    dend_57 { pt3dadd( -69.8176, -61.0711, -28.5389, 0.44 ) }
    dend_57 { pt3dadd( -70.8562, -60.5871, -28.4615, 0.29 ) }
    dend_57 { pt3dadd( -71.8813, -60.1094, -28.3851, 0.29 ) }
    dend_57 { pt3dadd( -72.4723, -59.8383, -28.3533, 0.59 ) }
    dend_57 { pt3dadd( -73.1266, -59.5763, -28.3464, 0.29 ) }
    dend_57 { pt3dadd( -73.569, -59.433, -28.3278, 0.74 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 45/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -68.0091, -62.0262, -28.5655, 0.44 ) }
    dend_56 { pt3dadd( -69.6232, -63.3351, -28.3556, 0.44 ) }
    dend_56 { pt3dadd( -70.1162, -63.6533, -28.3427, 0.88 ) }
    dend_56 { pt3dadd( -70.4643, -63.841, -28.3501, 1.4 ) }
    dend_56 { pt3dadd( -70.605, -63.9122, -28.3559, 1.55 ) }
    dend_56 { pt3dadd( -70.6895, -63.9522, -28.3603, 1.55 ) }
    dend_56 { pt3dadd( -72.3728, -64.6615, -28.3132, 0.44 ) }
    dend_56 { pt3dadd( -72.6531, -64.7454, -28.332, 1.4 ) }
    dend_56 { pt3dadd( -73.1444, -64.8687, -28.3663, 1.69 ) }
    dend_56 { pt3dadd( -73.6328, -64.9773, -28.3982, 1.25 ) }
    dend_56 { pt3dadd( -73.946, -65.0331, -28.4209, 0.74 ) }
    dend_56 { pt3dadd( -75.7273, -65.2963, -28.5514, 0.22 ) }
    dend_56 { pt3dadd( -76.8294, -65.425, -28.6233, 0.96 ) }
    dend_56 { pt3dadd( -77.4764, -65.4736, -28.6779, 0.96 ) }
    dend_56 { pt3dadd( -77.9913, -65.4909, -28.729, 0.52 ) }
    dend_56 { pt3dadd( -79.6072, -65.4774, -28.9143, 0.29 ) }
    dend_56 { pt3dadd( -79.7278, -65.4744, -28.9307, 0.29 ) }
    dend_56 { pt3dadd( -79.867, -65.465, -28.9436, 0.59 ) }
    dend_56 { pt3dadd( -80.6358, -65.4055, -28.8769, 0.74 ) }
    dend_56 { pt3dadd( -81.0358, -65.4027, -28.6848, 0.96 ) }
    dend_56 { pt3dadd( -81.0932, -65.4024, -28.6431, 0.96 ) }
    dend_56 { pt3dadd( -81.262, -65.4047, -28.5008, 1.18 ) }
    dend_56 { pt3dadd( -82.3251, -65.4521, -27.6477, 1.18 ) }
    dend_56 { pt3dadd( -82.3729, -65.4554, -27.6101, 1.18 ) }
    dend_56 { pt3dadd( -84.4544, -65.6523, -26.0146, 0.44 ) }
    dend_56 { pt3dadd( -85.041, -65.7055, -25.5737, 0.44 ) }
    dend_56 { pt3dadd( -85.6119, -65.7552, -25.1754, 0.44 ) }
    dend_56 { pt3dadd( -86.121, -65.8054, -24.8829, 0.81 ) }
    dend_56 { pt3dadd( -86.1858, -65.8138, -24.8549, 0.81 ) }
    dend_56 { pt3dadd( -86.5446, -65.8675, -24.7251, 1.33 ) }
    dend_56 { pt3dadd( -87.5813, -66.0521, -24.4988, 1.33 ) }
    dend_56 { pt3dadd( -87.8612, -66.1132, -24.4289, 1.33 ) }
    dend_56 { pt3dadd( -89.1392, -66.3778, -24.0752, 0.22 ) }
    dend_56 { pt3dadd( -89.1985, -66.3892, -24.0584, 0.74 ) }
    dend_56 { pt3dadd( -89.3348, -66.417, -24.0233, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 80/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -28.9394, 41.8116, -31.6903, 0.29 ) }
    dend_48 { pt3dadd( -28.9006, 42.5963, -32.593, 0.29 ) }
    dend_48 { pt3dadd( -28.8753, 43.1698, -33.8693, 0.29 ) }
    dend_48 { pt3dadd( -28.8598, 43.4131, -34.4562, 0.29 ) }
    dend_48 { pt3dadd( -28.8224, 43.9262, -35.7302, 0.74 ) }
    dend_48 { pt3dadd( -28.8134, 44.07, -36.084, 1.25 ) }
    dend_48 { pt3dadd( -28.8082, 44.1677, -36.3196, 1.47 ) }
    dend_48 { pt3dadd( -28.7605, 46.1096, -41.3035, 0.59 ) }
    dend_48 { pt3dadd( -28.7581, 46.2239, -41.6245, 0.59 ) }
    dend_48 { pt3dadd( -28.759, 46.2459, -41.6974, 0.59 ) }
    dend_48 { pt3dadd( -28.7713, 46.3306, -41.992, 0.59 ) }
    dend_48 { pt3dadd( -28.7829, 46.3848, -42.1759, 0.66 ) }
    dend_48 { pt3dadd( -28.7829, 46.3848, -42.1759, 0.66 ) }
    dend_48 { pt3dadd( -28.8386, 46.5277, -42.3837, 0.66 ) }
    dend_48 { pt3dadd( -29.1174, 47.2988, -43.5224, 0.22 ) }
    dend_48 { pt3dadd( -29.2138, 47.5854, -44.1054, 0.22 ) }
    dend_48 { pt3dadd( -29.3379, 47.9422, -44.8968, 0.29 ) }
    dend_48 { pt3dadd( -29.3665, 48.0139, -45.0616, 0.59 ) }
    dend_48 { pt3dadd( -29.3824, 48.0504, -45.1451, 0.74 ) }
    dend_48 { pt3dadd( -29.4325, 48.1295, -45.4108, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_48 { pt3dadd( -29.9274, 48.6473, -48.0456, 0.96 ) }
    dend_48 { pt3dadd( -30.0009, 48.7, -48.3825, 0.96 ) }
    dend_48 { pt3dadd( -30.0689, 48.7399, -48.6526, 0.96 ) }
    dend_48 { pt3dadd( -30.1088, 48.7606, -48.8005, 0.96 ) }
    dend_48 { pt3dadd( -31.0946, 49.2315, -52.4605, 0.37 ) }
    dend_48 { pt3dadd( -31.9662, 49.599, -55.6853, 0.15 ) }
    dend_48 { pt3dadd( -32.1215, 49.6568, -56.2509, 0.74 ) }
    dend_48 { pt3dadd( -32.3001, 49.7206, -56.9391, 1.18 ) }
    dend_48 { pt3dadd( -32.3305, 49.7318, -57.0615, 1.47 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 9/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -28.9394, 41.8116, -31.6903, 0.22 ) }
    dend_43 { pt3dadd( -29.7983, 42.5551, -31.663, 0.22 ) }
    dend_43 { pt3dadd( -30.3541, 43.026, -31.6491, 0.22 ) }
    dend_43 { pt3dadd( -30.8956, 43.4589, -31.7018, 0.22 ) }
    dend_43 { pt3dadd( -31.4259, 43.8379, -31.794, 0.22 ) }
    dend_43 { pt3dadd( -31.8583, 44.1263, -31.8844, 0.29 ) }
    dend_43 { pt3dadd( -32.2949, 44.4012, -31.982, 0.37 ) }
    dend_43 { pt3dadd( -32.3789, 44.4518, -32.0088, 0.37 ) }
    dend_43 { pt3dadd( -33.2648, 45.0107, -32.3182, 0.88 ) }
    dend_43 { pt3dadd( -33.8277, 45.3735, -32.5233, 1.18 ) }
    dend_43 { pt3dadd( -34.3068, 45.7039, -32.6984, 1.18 ) }
    dend_43 { pt3dadd( -34.6436, 45.9885, -32.8418, 1.11 ) }
    dend_43 { pt3dadd( -35.9472, 47.3062, -33.45, 0.22 ) }
    dend_43 { pt3dadd( -36.4038, 47.8611, -33.6698, 0.22 ) }
    dend_43 { pt3dadd( -36.446, 47.9344, -33.7072, 0.22 ) }
    dend_43 { pt3dadd( -36.5618, 48.2532, -33.9081, 0.22 ) }
    dend_43 { pt3dadd( -36.762, 49.1751, -34.5924, 0.66 ) }
    dend_43 { pt3dadd( -36.7842, 49.456, -34.8165, 1.25 ) }
    dend_43 { pt3dadd( -36.77, 49.8236, -35.1157, 1.11 ) }
    dend_43 { pt3dadd( -36.6931, 51.8235, -36.6934, 1.25 ) }
    dend_43 { pt3dadd( -36.644, 52.4725, -37.241, 0.66 ) }
    dend_43 { pt3dadd( -36.6366, 52.5404, -37.2987, 0.66 ) }
    dend_43 { pt3dadd( -36.4857, 53.7089, -38.2105, 0.22 ) }
    dend_43 { pt3dadd( -36.422, 54.1791, -38.5595, 0.22 ) }
    dend_43 { pt3dadd( -36.3709, 54.5866, -38.8263, 0.22 ) }
    dend_43 { pt3dadd( -36.1569, 56.5865, -39.9183, 0.59 ) }
    dend_43 { pt3dadd( -36.1037, 56.9658, -40.1717, 1.18 ) }
    dend_43 { pt3dadd( -36.019, 57.5979, -40.629, 1.18 ) }
    dend_43 { pt3dadd( -35.8996, 57.9983, -41.5422, 0.52 ) }
    dend_43 { pt3dadd( -35.7839, 58.4458, -42.6054, 0.29 ) }
    dend_43 { pt3dadd( -35.7766, 58.4803, -42.6867, 0.29 ) }
    dend_43 { pt3dadd( -35.633, 59.2326, -44.4506, 1.4 ) }
    dend_43 { pt3dadd( -35.5826, 59.4893, -45.0473, 1.69 ) }
    dend_43 { pt3dadd( -34.1382, 66.9217, -62.1936, 0.22 ) }
    dend_43 { pt3dadd( -34.0104, 67.5714, -63.6214, 0.22 ) }
    dend_43 { pt3dadd( -33.9252, 68.0232, -64.5636, 0.22 ) }
    dend_43 { pt3dadd( -33.6666, 69.5735, -67.5774, 1.4 ) }
    dend_43 { pt3dadd( -33.6072, 69.9983, -68.3356, 1.5 ) }
    dend_43 { pt3dadd( -33.5655, 70.3628, -68.8947, 1.5 ) }
    dend_43 { pt3dadd( -33.5959, 72.3257, -69.8755, 0.29 ) }
    dend_43 { pt3dadd( -33.553, 73.1686, -70.2913, 0.29 ) }
    dend_43 { pt3dadd( -33.4069, 74.8358, -71.0169, 0.29 ) }
    dend_43 { pt3dadd( -33.3676, 75.2339, -71.1392, 0.29 ) }
    dend_43 { pt3dadd( -33.203, 76.4524, -71.4834, 0.74 ) }
    dend_43 { pt3dadd( -33.0746, 77.0446, -71.6223, 1.11 ) }
    dend_43 { pt3dadd( -32.6865, 78.3274, -71.833, 1.4 ) }
    dend_43 { pt3dadd( -32.5643, 78.6457, -71.8572, 1.69 ) }
    dend_43 { pt3dadd( -32.1672, 79.5728, -71.844, 0.74 ) }
    dend_43 { pt3dadd( -31.763, 80.5379, -71.8343, 0.15 ) }
    dend_43 { pt3dadd( -31.6338, 80.908, -71.8575, 0.15 ) }
    dend_43 { pt3dadd( -31.6074, 81.0056, -71.8761, 0.15 ) }
    dend_43 { pt3dadd( -31.5041, 81.69, -72.0981, 0.44 ) }
    dend_43 { pt3dadd( -31.4536, 82.3779, -72.3853, 0.37 ) }
    dend_43 { pt3dadd( -31.4631, 82.8219, -72.5614, 0.37 ) }
    dend_43 { pt3dadd( -31.5843, 84.1533, -73.0517, 0.29 ) }
    dend_43 { pt3dadd( -31.6394, 84.4863, -73.1187, 0.29 ) }
    dend_43 { pt3dadd( -31.8203, 85.2185, -73.2364, 1.11 ) }
    dend_43 { pt3dadd( -32.0297, 85.7984, -73.2386, 1.11 ) }
    dend_43 { pt3dadd( -33.2835, 88.3323, -72.8445, 1.11 ) }
    dend_43 { pt3dadd( -33.3041, 88.4867, -72.9858, 1.11 ) }
    dend_43 { pt3dadd( -33.3006, 88.6109, -73.152, 1.11 ) }
    dend_43 { pt3dadd( -33.3052, 90.0981, -74.9082, 0.29 ) }
    dend_43 { pt3dadd( -33.2906, 90.2882, -75.1478, 0.29 ) }
    dend_43 { pt3dadd( -33.2789, 90.4535, -75.3477, 0.29 ) }
    dend_43 { pt3dadd( -33.1906, 91.5528, -76.6932, 1.25 ) }
    dend_43 { pt3dadd( -33.1825, 91.6705, -76.8296, 1.25 ) }
    dend_43 { pt3dadd( -33.1644, 91.9833, -77.1651, 1.55 ) }
    dend_43 { pt3dadd( -33.1003, 94.8005, -80.0275, 0.22 ) }
    dend_43 { pt3dadd( -33.0948, 95.2699, -80.4952, 0.22 ) }
    dend_43 { pt3dadd( -33.0947, 95.3357, -80.5556, 0.22 ) }
    dend_43 { pt3dadd( -33.1073, 96.599, -81.5835, 1.25 ) }
    dend_43 { pt3dadd( -33.1049, 96.987, -81.8612, 1.47 ) }
    dend_43 { pt3dadd( -33.0821, 98.8902, -82.9849, 0.74 ) }
    dend_43 { pt3dadd( -33.0602, 100.492, -83.6703, 0.22 ) }
    dend_43 { pt3dadd( -33.0344, 101.357, -84.0108, 0.52 ) }
    dend_43 { pt3dadd( -33.0313, 102.011, -84.2162, 0.52 ) }
    dend_43 { pt3dadd( -33.0578, 102.994, -84.4215, 0.29 ) }
    dend_43 { pt3dadd( -33.0888, 103.639, -84.5037, 0.44 ) }
    dend_43 { pt3dadd( -33.1591, 104.563, -84.5122, 0.74 ) }
    dend_43 { pt3dadd( -33.2575, 105.485, -84.4883, 1.18 ) }
    dend_43 { pt3dadd( -33.3901, 106.759, -84.4933, 0.22 ) }
    dend_43 { pt3dadd( -33.4323, 107.432, -84.5377, 0.22 ) }
    dend_43 { pt3dadd( -33.381, 107.954, -84.6391, 0.22 ) }
    dend_43 { pt3dadd( -33.3592, 108.025, -84.693, 0.22 ) }
    dend_43 { pt3dadd( -33.0002, 108.835, -85.5057, 0.29 ) }
    dend_43 { pt3dadd( -32.971, 108.888, -85.5708, 0.29 ) }
    dend_43 { pt3dadd( -32.4712, 109.772, -86.7237, 0.29 ) }
    dend_43 { pt3dadd( -31.9485, 110.638, -87.8919, 1.47 ) }
    dend_43 { pt3dadd( -30.4335, 113.05, -91.1135, 0.52 ) }
    dend_43 { pt3dadd( -29.9245, 113.843, -92.1472, 0.07 ) }
    dend_43 { pt3dadd( -29.3232, 114.749, -93.3987, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -28.9558, 115.299, -94.1523, 0.96 ) }
    dend_43 { pt3dadd( -28.3548, 116.245, -95.4028, 0.15 ) }
    dend_43 { pt3dadd( -28.0074, 116.82, -96.1407, 0.15 ) }
    dend_43 { pt3dadd( -27.3678, 117.879, -97.4089, 1.84 ) }
    dend_43 { pt3dadd( -26.1641, 120.145, -100.182, 0.66 ) }
    dend_43 { pt3dadd( -25.952, 120.616, -100.736, 0.22 ) }
    dend_43 { pt3dadd( -25.7523, 121.13, -101.35, 0.22 ) }
    dend_43 { pt3dadd( -25.7207, 121.275, -101.516, 0.22 ) }
    dend_43 { pt3dadd( -25.7158, 121.336, -101.585, 0.22 ) }
    dend_43 { pt3dadd( -25.7564, 121.707, -101.877, 0.22 ) }
    dend_43 { pt3dadd( -25.8144, 122.315, -102.103, 0.22 ) }
    dend_43 { pt3dadd( -25.7843, 122.654, -102.287, 0.22 ) }
    dend_43 { pt3dadd( -25.7686, 122.739, -102.341, 0.22 ) }
    dend_43 { pt3dadd( -25.7245, 123.133, -102.652, 0.81 ) }
    dend_43 { pt3dadd( -25.7065, 123.417, -102.949, 0.81 ) }
    dend_43 { pt3dadd( -25.5062, 125.008, -104.674, 0.29 ) }
    dend_43 { pt3dadd( -25.4979, 125.07, -104.741, 0.29 ) }
    dend_43 { pt3dadd( -25.4771, 125.252, -104.936, 0.29 ) }
    dend_43 { pt3dadd( -25.3794, 126.227, -105.977, 1.55 ) }
    dend_43 { pt3dadd( -25.1728, 127.719, -107.933, 0.15 ) }
    dend_43 { pt3dadd( -25.0492, 128.455, -108.926, 0.15 ) }
    dend_43 { pt3dadd( -24.9959, 128.732, -109.297, 0.15 ) }
    dend_43 { pt3dadd( -24.7577, 129.657, -110.488, 1.18 ) }
    dend_43 { pt3dadd( -24.7258, 129.758, -110.614, 1.18 ) }
    dend_43 { pt3dadd( -23.6183, 132.719, -114.111, 0.37 ) }
    dend_43 { pt3dadd( -23.3822, 133.356, -114.849, 1.4 ) }
    dend_43 { pt3dadd( -23.0747, 134.223, -115.913, 0.07 ) }
    dend_43 { pt3dadd( -22.8427, 134.89, -116.727, 0.07 ) }
    dend_43 { pt3dadd( -22.8147, 134.977, -116.824, 0.07 ) }
    dend_43 { pt3dadd( -22.7485, 135.259, -117.089, 0.07 ) }
    dend_43 { pt3dadd( -22.7275, 135.714, -117.4, 0.07 ) }
    dend_43 { pt3dadd( -22.7558, 137.27, -118.512, 0.07 ) }
    dend_43 { pt3dadd( -22.789, 138.189, -119.129, 0.96 ) }
    dend_43 { pt3dadd( -22.8061, 138.732, -119.484, 1.25 ) }
    dend_43 { pt3dadd( -22.7798, 139.43, -119.946, 1.11 ) }
    dend_43 { pt3dadd( -22.599, 141.345, -121.178, 0.29 ) }
    dend_43 { pt3dadd( -22.525, 141.88, -121.591, 0.29 ) }
    dend_43 { pt3dadd( -22.4357, 142.437, -122.037, 0.29 ) }
    dend_43 { pt3dadd( -22.3803, 142.733, -122.295, 0.29 ) }
    dend_43 { pt3dadd( -22.0984, 144.174, -123.692, 1.25 ) }
    dend_43 { pt3dadd( -22.0521, 144.457, -123.986, 1.4 ) }
    dend_43 { pt3dadd( -21.8556, 146.957, -126.747, 0.37 ) }
    dend_43 { pt3dadd( -21.8639, 147.251, -127.087, 0.74 ) }
    dend_43 { pt3dadd( -21.9192, 147.589, -127.517, 0.88 ) }
    dend_43 { pt3dadd( -21.9577, 147.714, -127.687, 0.88 ) }
    dend_43 { pt3dadd( -22.1763, 148.219, -128.399, 0.22 ) }
    dend_43 { pt3dadd( -22.4769, 148.799, -129.264, 0.44 ) }
    dend_43 { pt3dadd( -22.5702, 148.942, -129.462, 0.81 ) }
    dend_43 { pt3dadd( -23.344, 150.032, -130.956, 0.37 ) }
    dend_43 { pt3dadd( -23.5292, 150.241, -131.218, 0.37 ) }
    dend_43 { pt3dadd( -24.6395, 151.339, -132.388, 0.07 ) }
    dend_43 { pt3dadd( -24.8914, 151.565, -132.586, 0.07 ) }
    dend_43 { pt3dadd( -25.712, 152.267, -133.011, 0.74 ) }
    dend_43 { pt3dadd( -26.1605, 152.652, -133.179, 0.96 ) }
    dend_43 { pt3dadd( -27.5461, 153.801, -133.449, 0.22 ) }
    dend_43 { pt3dadd( -28.1327, 154.275, -133.534, 0.22 ) }
    dend_43 { pt3dadd( -28.4077, 154.483, -133.555, 0.22 ) }
    dend_43 { pt3dadd( -28.6253, 154.658, -133.585, 0.22 ) }
    dend_43 { pt3dadd( -29.4361, 155.392, -133.89, 0.81 ) }
    dend_43 { pt3dadd( -29.5484, 155.505, -133.947, 0.81 ) }
    dend_43 { pt3dadd( -29.9793, 155.973, -134.259, 1.33 ) }
    dend_43 { pt3dadd( -30.6463, 156.69, -134.883, 1.25 ) }
    dend_43 { pt3dadd( -30.7971, 156.861, -135.046, 1.25 ) }
    dend_43 { pt3dadd( -31.9513, 158.34, -136.441, 0.29 ) }
    dend_43 { pt3dadd( -31.9912, 158.397, -136.495, 0.29 ) }
    dend_43 { pt3dadd( -32.3861, 159.059, -137.142, 0.88 ) }
    dend_43 { pt3dadd( -32.9792, 160.132, -138.241, 0.22 ) }
    dend_43 { pt3dadd( -33.189, 160.521, -138.645, 0.52 ) }
    dend_43 { pt3dadd( -33.4996, 161.066, -139.213, 0.52 ) }
    dend_43 { pt3dadd( -33.8106, 161.6, -139.746, 0.15 ) }
    dend_43 { pt3dadd( -34.4441, 162.671, -140.772, 0.96 ) }
    dend_43 { pt3dadd( -34.6623, 163.04, -141.107, 0.96 ) }
    dend_43 { pt3dadd( -34.7977, 163.267, -141.321, 1.03 ) }
    dend_43 { pt3dadd( -35.7768, 164.952, -142.905, 0.29 ) }
    dend_43 { pt3dadd( -35.9773, 165.373, -143.345, 0.29 ) }
    dend_43 { pt3dadd( -36.0757, 165.625, -143.6, 0.29 ) }
    dend_43 { pt3dadd( -36.0968, 165.687, -143.661, 0.29 ) }
    dend_43 { pt3dadd( -36.3835, 166.683, -144.591, 0.29 ) }
    dend_43 { pt3dadd( -36.5548, 167.36, -145.198, 1.55 ) }
    dend_43 { pt3dadd( -37.2908, 170.549, -147.78, 0.22 ) }
    dend_43 { pt3dadd( -37.416, 171.043, -148.172, 0.22 ) }
    dend_43 { pt3dadd( -37.4391, 171.122, -148.232, 0.22 ) }
    dend_43 { pt3dadd( -37.6799, 171.793, -148.697, 0.22 ) }
    dend_43 { pt3dadd( -37.7115, 171.864, -148.742, 0.22 ) }
    dend_43 { pt3dadd( -38.1697, 172.718, -149.296, 0.22 ) }
    dend_43 { pt3dadd( -38.7197, 173.541, -149.74, 0.88 ) }
    dend_43 { pt3dadd( -38.9675, 173.872, -149.963, 1.25 ) }
    dend_43 { pt3dadd( -39.4508, 174.478, -150.429, 1.03 ) }
    dend_43 { pt3dadd( -39.9561, 175.044, -150.93, 1.03 ) }
    dend_43 { pt3dadd( -41.5102, 176.635, -152.44, 0.44 ) }
    dend_43 { pt3dadd( -41.6168, 176.734, -152.546, 0.44 ) }
    dend_43 { pt3dadd( -42.0279, 177.11, -152.916, 0.44 ) }
    dend_43 { pt3dadd( -42.0822, 177.161, -152.963, 0.44 ) }
    dend_43 { pt3dadd( -42.4462, 177.513, -153.251, 0.52 ) }
    dend_43 { pt3dadd( -42.7266, 177.804, -153.406, 0.52 ) }
    dend_43 { pt3dadd( -42.8008, 177.878, -153.416, 0.52 ) }
    dend_43 { pt3dadd( -43.2169, 178.309, -153.485, 0.52 ) }
    dend_43 { pt3dadd( -43.2169, 178.309, -153.485, 0.52 ) }
    dend_43 { pt3dadd( -43.3619, 178.458, -153.508, 0.52 ) }
    dend_43 { pt3dadd( -44.065, 179.183, -153.61, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -44.4549, 179.575, -153.661, 0.07 ) }
    dend_43 { pt3dadd( -44.9885, 179.957, -153.703, 0.07 ) }
    dend_43 { pt3dadd( -45.8279, 180.478, -153.744, 0.96 ) }
    dend_43 { pt3dadd( -46.1556, 180.668, -153.765, 1.18 ) }
    dend_43 { pt3dadd( -46.7781, 181.021, -153.804, 1.18 ) }
    dend_43 { pt3dadd( -47.1352, 181.229, -153.828, 1.18 ) }
    dend_43 { pt3dadd( -48.9725, 182.408, -153.98, 0.22 ) }
    dend_43 { pt3dadd( -49.5201, 182.786, -154.031, 0.29 ) }
    dend_43 { pt3dadd( -50.6343, 183.569, -154.152, 0.96 ) }
    dend_43 { pt3dadd( -50.9715, 183.807, -154.191, 1.18 ) }
    dend_43 { pt3dadd( -51.9062, 184.529, -154.303, 0.37 ) }
    dend_43 { pt3dadd( -52.4956, 185.059, -154.373, 0.22 ) }
    dend_43 { pt3dadd( -52.8549, 185.486, -154.414, 0.22 ) }
    dend_43 { pt3dadd( -53.2682, 186.019, -154.442, 0.22 ) }
    dend_43 { pt3dadd( -53.3281, 186.105, -154.44, 0.22 ) }
    dend_43 { pt3dadd( -53.8982, 186.961, -154.405, 0.22 ) }
    dend_43 { pt3dadd( -54.2631, 187.62, -154.344, 0.29 ) }
    dend_43 { pt3dadd( -54.4818, 188.079, -154.303, 0.22 ) }
    dend_43 { pt3dadd( -54.6754, 188.516, -154.268, 0.22 ) }
    dend_43 { pt3dadd( -54.7311, 188.635, -154.26, 0.22 ) }
    dend_43 { pt3dadd( -54.8494, 188.82, -154.256, 0.22 ) }
    dend_43 { pt3dadd( -54.9782, 188.966, -154.263, 0.22 ) }
    dend_43 { pt3dadd( -55.3859, 189.352, -154.288, 0.81 ) }
    dend_43 { pt3dadd( -55.7926, 189.703, -154.315, 1.18 ) }
    dend_43 { pt3dadd( -55.8608, 189.761, -154.319, 1.18 ) }
    dend_43 { pt3dadd( -56.5191, 190.282, -154.356, 1.03 ) }
    dend_43 { pt3dadd( -56.697, 190.418, -154.365, 1.03 ) }
    dend_43 { pt3dadd( -57.9316, 191.384, -154.409, 0.29 ) }
    dend_43 { pt3dadd( -58.3436, 191.699, -154.419, 0.29 ) }
    dend_43 { pt3dadd( -58.4016, 191.749, -154.429, 0.29 ) }
    dend_43 { pt3dadd( -58.9364, 192.27, -154.599, 0.29 ) }
    dend_43 { pt3dadd( -59.2262, 192.609, -154.782, 0.29 ) }
    dend_43 { pt3dadd( -59.4553, 192.933, -154.999, 0.37 ) }
    dend_43 { pt3dadd( -59.48, 192.993, -155.075, 0.37 ) }
    dend_43 { pt3dadd( -59.8262, 193.977, -156.46, 0.37 ) }
    dend_43 { pt3dadd( -59.9128, 194.256, -156.869, 1.11 ) }
    dend_43 { pt3dadd( -60.0513, 194.799, -157.716, 1.33 ) }
    dend_43 { pt3dadd( -60.0764, 194.904, -157.893, 1.33 ) }
    dend_43 { pt3dadd( -60.5231, 196.789, -161.285, 0.07 ) }
    dend_43 { pt3dadd( -60.5958, 197.091, -161.854, 0.81 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -28.3152, 24.5961, -10.0669, 1.11 ) }
    dend_35 { pt3dadd( -28.7256, 24.4138, -10.1985, 1.11 ) }
    dend_35 { pt3dadd( -29.4613, 24.1927, -10.3913, 0.37 ) }
    dend_35 { pt3dadd( -29.8066, 24.1229, -10.4579, 0.37 ) }
    dend_35 { pt3dadd( -30.4236, 24.0233, -10.56, 0.88 ) }
    dend_35 { pt3dadd( -30.7464, 23.9782, -10.6163, 1.18 ) }
    dend_35 { pt3dadd( -31.1625, 23.9597, -10.7053, 1.25 ) }
    dend_35 { pt3dadd( -31.6207, 23.9946, -10.8044, 1.18 ) }
    dend_35 { pt3dadd( -32.1599, 24.0975, -10.918, 0.59 ) }
    dend_35 { pt3dadd( -32.4209, 24.1613, -10.982, 0.52 ) }
    dend_35 { pt3dadd( -32.7018, 24.234, -11.0635, 0.52 ) }
    dend_35 { pt3dadd( -33.6708, 24.4706, -11.3619, 0.52 ) }
    dend_35 { pt3dadd( -33.9621, 24.5399, -11.4587, 0.52 ) }
    dend_35 { pt3dadd( -34.2531, 24.6133, -11.5574, 0.81 ) }
    dend_35 { pt3dadd( -34.6393, 24.719, -11.6869, 1.11 ) }
    dend_35 { pt3dadd( -34.977, 24.8197, -11.7843, 1.18 ) }
    dend_35 { pt3dadd( -35.3148, 24.9318, -11.8906, 0.81 ) }
    dend_35 { pt3dadd( -35.9804, 25.1561, -12.1414, 0.52 ) }
    dend_35 { pt3dadd( -36.3412, 25.297, -12.2987, 1.03 ) }
    dend_35 { pt3dadd( -36.5523, 25.3974, -12.3983, 1.18 ) }
    dend_35 { pt3dadd( -37.0521, 25.6675, -12.6419, 1.11 ) }
    dend_35 { pt3dadd( -37.7713, 26.0812, -12.9929, 0.52 ) }
    dend_35 { pt3dadd( -38.1666, 26.3047, -13.1832, 0.22 ) }
    dend_35 { pt3dadd( -38.5139, 26.4798, -13.3444, 0.59 ) }
    dend_35 { pt3dadd( -38.8364, 26.6047, -13.485, 0.74 ) }
    dend_35 { pt3dadd( -39.3828, 26.74, -13.697, 0.37 ) }
    dend_35 { pt3dadd( -39.7085, 26.7507, -13.8165, 0.37 ) }
    dend_35 { pt3dadd( -39.9708, 26.728, -13.8982, 0.74 ) }
    dend_35 { pt3dadd( -40.354, 26.6797, -14.0222, 1.18 ) }
    dend_35 { pt3dadd( -40.7759, 26.6037, -14.1696, 0.96 ) }
    dend_35 { pt3dadd( -41.099, 26.5389, -14.2848, 0.44 ) }
    dend_35 { pt3dadd( -42.0642, 26.3561, -14.6281, 0.37 ) }
    dend_35 { pt3dadd( -42.4174, 26.2928, -14.7555, 0.37 ) }
    dend_35 { pt3dadd( -42.7265, 26.2476, -14.8663, 0.88 ) }
    dend_35 { pt3dadd( -43.1568, 26.2086, -15.0167, 1.55 ) }
    dend_35 { pt3dadd( -43.6214, 26.1891, -15.1739, 1.69 ) }
    dend_35 { pt3dadd( -43.8089, 26.1946, -15.227, 1.69 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 77/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -28.3152, 24.5961, -10.0669, 0.59 ) }
    dend_32 { pt3dadd( -29.384, 25.6127, -8.44418, 0.59 ) }
    dend_32 { pt3dadd( -30.0234, 26.1374, -7.61216, 0.74 ) }
    dend_32 { pt3dadd( -31.7614, 27.4036, -5.36675, 0.44 ) }
    dend_32 { pt3dadd( -33.0216, 28.2554, -3.85614, 0.37 ) }
    dend_32 { pt3dadd( -35.7997, 30.0072, -0.662082, 0.37 ) }
    dend_32 { pt3dadd( -37.1367, 30.7887, 0.803859, 0.52 ) }
    dend_32 { pt3dadd( -37.763, 31.0822, 1.44682, 0.74 ) }
    dend_32 { pt3dadd( -40.0259, 31.947, 3.69898, 0.74 ) }
    dend_32 { pt3dadd( -41.2508, 32.3975, 4.91273, 0.22 ) }
    dend_32 { pt3dadd( -42.1692, 32.7319, 5.89657, 0.74 ) }
    dend_32 { pt3dadd( -42.7446, 32.958, 6.49676, 0.74 ) }
    dend_32 { pt3dadd( -43.6271, 33.3588, 7.47527, 0.74 ) }
    dend_32 { pt3dadd( -44.7564, 33.9476, 8.6301, 0.15 ) }
    dend_32 { pt3dadd( -46.6321, 34.8518, 10.0629, 0.96 ) }
    dend_32 { pt3dadd( -47.4991, 35.2241, 10.6394, 0.96 ) }
    dend_32 { pt3dadd( -48.1717, 35.4955, 10.9827, 0.96 ) }
    dend_32 { pt3dadd( -49.2401, 35.8956, 11.4381, 0.81 ) }
    dend_32 { pt3dadd( -50.4063, 36.2887, 11.7761, 0.44 ) }
    dend_32 { pt3dadd( -52.5809, 36.9016, 12.2408, 0.22 ) }
    dend_32 { pt3dadd( -53.0862, 37.0048, 12.3272, 0.52 ) }
    dend_32 { pt3dadd( -53.6584, 37.1079, 12.4418, 0.81 ) }
    dend_32 { pt3dadd( -55.2349, 37.3939, 12.7972, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -57.0625, 37.7938, 13.2077, 0.22 ) }
    dend_32 { pt3dadd( -57.9002, 38.0199, 13.3876, 0.37 ) }
    dend_32 { pt3dadd( -58.4704, 38.2459, 13.499, 0.37 ) }
    dend_32 { pt3dadd( -58.5761, 38.2914, 13.5021, 0.37 ) }
    dend_32 { pt3dadd( -59.1998, 38.5371, 13.4695, 0.44 ) }
    dend_32 { pt3dadd( -61.6459, 39.4587, 13.1707, 0.29 ) }
    dend_32 { pt3dadd( -62.4501, 39.7488, 13.0615, 1.03 ) }
    dend_32 { pt3dadd( -63.8173, 40.2267, 12.8656, 1.03 ) }
    dend_32 { pt3dadd( -66.8562, 41.2738, 12.4518, 0.29 ) }
    dend_32 { pt3dadd( -68.6772, 41.8712, 12.1253, 0.29 ) }
    dend_32 { pt3dadd( -69.7993, 42.2446, 11.8912, 0.81 ) }
    dend_32 { pt3dadd( -71.435, 42.8387, 11.5075, 0.52 ) }
    dend_32 { pt3dadd( -71.8353, 42.979, 11.4132, 0.96 ) }
    dend_32 { pt3dadd( -72.7464, 43.275, 11.2081, 1.25 ) }
    dend_32 { pt3dadd( -74.6508, 44.0239, 10.8608, 0.81 ) }
    dend_32 { pt3dadd( -76.3388, 44.8517, 10.3132, 0.29 ) }
    dend_32 { pt3dadd( -77.2117, 45.3252, 9.95958, 0.81 ) }
    dend_32 { pt3dadd( -90.0796, 50.9826, 12.5126, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 18/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -20.0914, 45.2872, -9.85424, 1.33 ) }
    dend_19 { pt3dadd( -22.6045, 47.4344, -15.257, 1.33 ) }
    dend_19 { pt3dadd( -23.021, 47.8008, -16.1488, 1.18 ) }
    dend_19 { pt3dadd( -23.3674, 48.1285, -16.8723, 0.96 ) }
    dend_19 { pt3dadd( -24.4762, 49.2155, -19.153, 0.44 ) }
    dend_19 { pt3dadd( -24.5102, 49.2504, -19.2208, 0.44 ) }
    dend_19 { pt3dadd( -25.693, 50.5381, -21.5153, 0.37 ) }
    dend_19 { pt3dadd( -25.8085, 50.6931, -21.6943, 0.88 ) }
    dend_19 { pt3dadd( -26.1939, 51.2045, -22.2901, 0.22 ) }
    dend_19 { pt3dadd( -26.2254, 51.2492, -22.3358, 0.22 ) }
    dend_19 { pt3dadd( -26.7534, 52.1408, -22.9908, 1.11 ) }
    dend_19 { pt3dadd( -27.0043, 52.6238, -23.2702, 1.47 ) }
    dend_19 { pt3dadd( -27.4624, 53.5679, -23.6533, 0.37 ) }
    dend_19 { pt3dadd( -27.6143, 53.8631, -23.7701, 0.22 ) }
    dend_19 { pt3dadd( -27.9231, 54.4452, -23.9958, 0.22 ) }
    dend_19 { pt3dadd( -28.36, 55.2734, -24.2768, 1.03 ) }
    dend_19 { pt3dadd( -29.1309, 56.78, -24.6962, 0.22 ) }
    dend_19 { pt3dadd( -29.3747, 57.2668, -24.8137, 0.29 ) }
    dend_19 { pt3dadd( -29.6792, 57.9233, -24.9722, 0.29 ) }
    dend_19 { pt3dadd( -29.9849, 58.6152, -25.1469, 0.81 ) }
    dend_19 { pt3dadd( -30.3261, 59.4399, -25.3558, 1.55 ) }
    dend_19 { pt3dadd( -30.6049, 60.1669, -25.5275, 1.55 ) }
    dend_19 { pt3dadd( -30.664, 60.3382, -25.5706, 1.55 ) }
    dend_19 { pt3dadd( -31.177, 62.1296, -26.083, 0.22 ) }
    dend_19 { pt3dadd( -31.272, 62.528, -26.2094, 0.22 ) }
    dend_19 { pt3dadd( -31.2902, 62.6186, -26.2385, 0.22 ) }
    dend_19 { pt3dadd( -31.3802, 63.1457, -26.4202, 0.44 ) }
    dend_19 { pt3dadd( -31.4444, 63.571, -26.5612, 0.59 ) }
    dend_19 { pt3dadd( -31.532, 64.3369, -26.7682, 0.22 ) }
    dend_19 { pt3dadd( -31.5361, 64.421, -26.7812, 0.22 ) }
    dend_19 { pt3dadd( -31.5688, 65.1168, -26.9216, 0.22 ) }
    dend_19 { pt3dadd( -31.5792, 65.1836, -26.9468, 0.22 ) }
    dend_19 { pt3dadd( -31.6479, 65.4843, -27.0922, 0.22 ) }
    dend_19 { pt3dadd( -31.7843, 66.1017, -27.4374, 1.25 ) }
    dend_19 { pt3dadd( -31.8525, 66.406, -27.6192, 1.25 ) }
    dend_19 { pt3dadd( -31.9828, 66.9966, -27.9691, 1.25 ) }
    dend_19 { pt3dadd( -32.3489, 68.8787, -29.0289, 0.44 ) }
    dend_19 { pt3dadd( -32.4767, 69.4987, -29.3845, 0.29 ) }
    dend_19 { pt3dadd( -32.6186, 70.1528, -29.7495, 0.29 ) }
    dend_19 { pt3dadd( -32.6907, 70.3898, -29.8879, 0.29 ) }
    dend_19 { pt3dadd( -32.7692, 70.6787, -30.0536, 0.29 ) }
    dend_19 { pt3dadd( -32.9953, 71.6904, -30.5846, 0.88 ) }
    dend_19 { pt3dadd( -33.1795, 72.7724, -31.107, 0.29 ) }
    dend_19 { pt3dadd( -33.2991, 73.4566, -31.4804, 0.29 ) }
    dend_19 { pt3dadd( -33.5669, 74.8606, -32.2948, 1.25 ) }
    dend_19 { pt3dadd( -33.8083, 76.2121, -33.0887, 1.4 ) }
    dend_19 { pt3dadd( -33.8922, 76.743, -33.4046, 1.4 ) }
    dend_19 { pt3dadd( -34.0304, 77.6397, -33.9818, 0.29 ) }
    dend_19 { pt3dadd( -34.1719, 78.7902, -34.7194, 1.03 ) }
    dend_19 { pt3dadd( -34.2033, 78.9505, -34.8443, 1.03 ) }
    dend_19 { pt3dadd( -34.4373, 79.8844, -35.6127, 0.29 ) }
    dend_19 { pt3dadd( -34.525, 80.106, -35.8138, 0.44 ) }
    dend_19 { pt3dadd( -34.9453, 80.9033, -36.729, 0.52 ) }
    dend_19 { pt3dadd( -34.9898, 80.9838, -36.8283, 0.66 ) }
    dend_19 { pt3dadd( -35.666, 82.3974, -38.6542, 0.22 ) }
    dend_19 { pt3dadd( -35.8626, 82.9558, -39.4024, 1.11 ) }
    dend_19 { pt3dadd( -35.8825, 83.0357, -39.5136, 1.11 ) }
    dend_19 { pt3dadd( -36.0521, 84.4026, -41.3828, 1.25 ) }
    dend_19 { pt3dadd( -36.002, 85.2076, -42.4268, 0.52 ) }
    dend_19 { pt3dadd( -35.8347, 85.9594, -43.3941, 0.52 ) }
    dend_19 { pt3dadd( -35.6078, 86.469, -44.0772, 0.44 ) }
    dend_19 { pt3dadd( -35.5772, 86.5241, -44.152, 0.44 ) }
    dend_19 { pt3dadd( -35.0605, 87.3506, -45.159, 0.96 ) }
    dend_19 { pt3dadd( -34.8389, 87.6674, -45.4849, 1.18 ) }
    dend_19 { pt3dadd( -34.7028, 87.867, -45.7018, 1.11 ) }
    dend_19 { pt3dadd( -34.3411, 88.558, -46.4469, 0.88 ) }
    dend_19 { pt3dadd( -33.8731, 89.371, -47.3549, 0.22 ) }
    dend_19 { pt3dadd( -33.6367, 89.7803, -47.848, 0.81 ) }
    dend_19 { pt3dadd( -33.5133, 90.005, -48.1095, 0.88 ) }
    dend_19 { pt3dadd( -33.4563, 90.1592, -48.3064, 0.88 ) }
    dend_19 { pt3dadd( -33.2359, 90.9834, -49.4215, 0.66 ) }
    dend_19 { pt3dadd( -33.0746, 91.7129, -50.4472, 0.22 ) }
    dend_19 { pt3dadd( -32.9731, 92.5025, -51.6738, 0.81 ) }
    dend_19 { pt3dadd( -32.9372, 92.915, -52.3523, 0.81 ) }
    dend_19 { pt3dadd( -32.8266, 93.8912, -53.9893, 0.29 ) }
    dend_19 { pt3dadd( -32.8084, 93.9826, -54.1313, 0.29 ) }
    dend_19 { pt3dadd( -32.6765, 94.3932, -54.7089, 0.29 ) }
    dend_19 { pt3dadd( -32.651, 94.4396, -54.774, 0.29 ) }
    dend_19 { pt3dadd( -31.9648, 95.0809, -55.5907, 1.11 ) }
    dend_19 { pt3dadd( -31.5464, 95.3769, -55.9668, 1.47 ) }
    dend_19 { pt3dadd( -30.3017, 96.3322, -57.3504, 0.88 ) }
    dend_19 { pt3dadd( -30.2316, 96.4138, -57.4814, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_19 { pt3dadd( -29.6217, 97.5572, -59.3852, 0.29 ) }
    dend_19 { pt3dadd( -29.5642, 97.7141, -59.656, 0.29 ) }
    dend_19 { pt3dadd( -29.5827, 97.7672, -59.813, 0.29 ) }
    dend_19 { pt3dadd( -29.9516, 98.4056, -62.0469, 0.29 ) }
    dend_19 { pt3dadd( -30.0739, 98.5518, -62.6332, 0.29 ) }
    dend_19 { pt3dadd( -30.1417, 98.6281, -62.9383, 0.29 ) }
    dend_19 { pt3dadd( -30.1831, 98.6697, -63.0942, 0.29 ) }
    dend_19 { pt3dadd( -31.5427, 100.068, -68.1631, 1.33 ) }
    dend_19 { pt3dadd( -31.6788, 100.212, -68.6541, 1.4 ) }
    dend_19 { pt3dadd( -31.8035, 100.354, -69.0927, 1.4 ) }
    dend_19 { pt3dadd( -32.2019, 100.77, -70.3409, 0.29 ) }
    dend_19 { pt3dadd( -32.4318, 101.018, -70.9997, 0.29 ) }
    dend_19 { pt3dadd( -32.4651, 101.066, -71.1024, 0.29 ) }
    dend_19 { pt3dadd( -32.6339, 101.548, -71.7925, 0.81 ) }
    dend_19 { pt3dadd( -32.6973, 101.735, -72.1268, 0.96 ) }
    dend_19 { pt3dadd( -32.7103, 101.775, -72.2023, 0.96 ) }
    dend_19 { pt3dadd( -33.0915, 102.979, -74.716, 0.22 ) }
    dend_19 { pt3dadd( -33.2214, 103.403, -75.7398, 1.18 ) }
    dend_19 { pt3dadd( -33.2513, 103.531, -76.0748, 1.03 ) }
    dend_19 { pt3dadd( -33.4426, 104.634, -78.8578, 0.22 ) }
    dend_19 { pt3dadd( -33.4788, 104.823, -79.3063, 0.22 ) }
    dend_19 { pt3dadd( -33.5144, 105.002, -79.7011, 0.22 ) }
    dend_19 { pt3dadd( -33.7154, 106.023, -81.7436, 0.22 ) }
    dend_19 { pt3dadd( -33.8098, 106.484, -82.6219, 1.33 ) }
    dend_19 { pt3dadd( -33.9589, 107.47, -84.3871, 0.29 ) }
    dend_19 { pt3dadd( -34.0261, 108.387, -85.8612, 1.18 ) }
    dend_19 { pt3dadd( -34.0653, 108.719, -86.3687, 0.74 ) }
    dend_19 { pt3dadd( -34.0907, 108.869, -86.5725, 0.74 ) }
    dend_19 { pt3dadd( -34.3814, 109.558, -87.5009, 0.29 ) }
    dend_19 { pt3dadd( -34.5134, 109.764, -87.7942, 0.29 ) }
    dend_19 { pt3dadd( -34.7127, 110.029, -88.2031, 0.29 ) }
    dend_19 { pt3dadd( -35.3881, 110.862, -89.4936, 1.62 ) }
    dend_19 { pt3dadd( -35.53, 111.024, -89.765, 1.62 ) }
    dend_19 { pt3dadd( -37.4248, 112.993, -93.2981, 0.29 ) }
    dend_19 { pt3dadd( -37.6966, 113.247, -93.7902, 0.29 ) }
    dend_19 { pt3dadd( -38.0952, 113.586, -94.5108, 0.29 ) }
    dend_19 { pt3dadd( -38.1303, 113.616, -94.5802, 0.29 ) }
    dend_19 { pt3dadd( -39.0557, 114.308, -96.3121, 1.11 ) }
    dend_19 { pt3dadd( -39.225, 114.406, -96.5842, 0.96 ) }
    dend_19 { pt3dadd( -39.2819, 114.425, -96.6455, 0.96 ) }
    dend_19 { pt3dadd( -40.1617, 114.557, -97.7573, 0.81 ) }
    dend_19 { pt3dadd( -40.5168, 114.598, -98.215, 0.81 ) }
    dend_19 { pt3dadd( -41.6106, 114.74, -99.5873, 0.22 ) }
    dend_19 { pt3dadd( -41.6842, 114.752, -99.6781, 0.74 ) }
    dend_19 { pt3dadd( -41.8519, 114.777, -99.8939, 0.74 ) }
    dend_19 { pt3dadd( -45.4684, 115.389, -104.626, 1.25 ) }
    dend_19 { pt3dadd( -47.803, 115.845, -107.708, 0.22 ) }
    dend_19 { pt3dadd( -48.5844, 116.015, -108.824, 1.47 ) }
    dend_19 { pt3dadd( -49.9898, 116.385, -111.068, 0.15 ) }
    dend_19 { pt3dadd( -52.0284, 116.99, -114.495, 0.59 ) }
    dend_19 { pt3dadd( -52.4936, 117.15, -115.321, 0.22 ) }
    dend_19 { pt3dadd( -52.8942, 117.333, -116.11, 0.96 ) }
    dend_19 { pt3dadd( -54.4278, 118.257, -119.78, 1.11 ) }
    dend_19 { pt3dadd( -55.5788, 119.114, -123.066, 0.22 ) }
    dend_19 { pt3dadd( -55.7182, 119.262, -123.556, 0.22 ) }
    dend_19 { pt3dadd( -55.7858, 119.371, -123.84, 0.22 ) }
    dend_19 { pt3dadd( -56.0483, 119.808, -124.98, 1.33 ) }
    dend_19 { pt3dadd( -56.2655, 120.254, -125.956, 1.33 ) }
    dend_19 { pt3dadd( -56.2856, 120.313, -126.032, 1.33 ) }
    dend_19 { pt3dadd( -56.5159, 121.36, -126.929, 0.29 ) }
    dend_19 { pt3dadd( -56.5721, 121.595, -127.123, 0.29 ) }
    dend_19 { pt3dadd( -56.6343, 121.847, -127.304, 0.29 ) }
    dend_19 { pt3dadd( -56.7242, 122.188, -127.573, 0.29 ) }
    dend_19 { pt3dadd( -56.7496, 122.339, -127.708, 0.29 ) }
    dend_19 { pt3dadd( -56.8041, 122.509, -128.015, 0.29 ) }
    dend_19 { pt3dadd( -56.8922, 122.714, -128.504, 0.29 ) }
    dend_19 { pt3dadd( -56.9378, 122.832, -128.789, 0.29 ) }
    dend_19 { pt3dadd( -57.2744, 123.704, -130.95, 1.47 ) }
    dend_19 { pt3dadd( -57.2928, 123.751, -131.061, 1.47 ) }
    dend_19 { pt3dadd( -57.9383, 125.272, -134.557, 0.29 ) }
    dend_19 { pt3dadd( -57.9719, 125.345, -134.717, 0.29 ) }
    dend_19 { pt3dadd( -58.1655, 125.757, -135.53, 0.29 ) }
    dend_19 { pt3dadd( -58.1876, 125.792, -135.601, 0.29 ) }
    dend_19 { pt3dadd( -58.4207, 126.148, -136.253, 0.29 ) }
    dend_19 { pt3dadd( -58.4961, 126.272, -136.46, 0.29 ) }
    dend_19 { pt3dadd( -58.7481, 126.955, -137.359, 0.29 ) }
    dend_19 { pt3dadd( -58.8076, 127.137, -137.607, 1.25 ) }
    dend_19 { pt3dadd( -59.5672, 129.449, -140.835, 0.29 ) }
    dend_19 { pt3dadd( -59.6492, 129.724, -141.203, 0.96 ) }
    dend_19 { pt3dadd( -59.772, 130.159, -141.774, 1.4 ) }
    dend_19 { pt3dadd( -60.1028, 131.426, -143.4, 0.22 ) }
    dend_19 { pt3dadd( -60.3268, 132.464, -144.642, 0.37 ) }
    dend_19 { pt3dadd( -60.3682, 132.729, -144.926, 0.37 ) }
    dend_19 { pt3dadd( -60.3143, 133.922, -145.767, 0.37 ) }
    dend_19 { pt3dadd( -60.3207, 134.085, -145.89, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -20.0914, 45.2872, -9.85424, 0.44 ) }
    dend_14 { pt3dadd( -20.1715, 45.3541, -9.77721, 0.44 ) }
    dend_14 { pt3dadd( -20.3046, 45.4753, -9.65983, 0.44 ) }
    dend_14 { pt3dadd( -20.8448, 46.0467, -9.22291, 0.44 ) }
    dend_14 { pt3dadd( -21.2626, 46.5644, -8.91476, 0.44 ) }
    dend_14 { pt3dadd( -21.8596, 47.4909, -8.37128, 0.44 ) }
    dend_14 { pt3dadd( -22.1588, 48.081, -8.04608, 1.03 ) }
    dend_14 { pt3dadd( -22.3031, 48.438, -7.8654, 1.33 ) }
    dend_14 { pt3dadd( -22.503, 49.069, -7.57525, 1.18 ) }
    dend_14 { pt3dadd( -22.603, 49.77, -7.19084, 0.96 ) }
    dend_14 { pt3dadd( -22.6327, 50.7001, -6.61908, 0.88 ) }
    dend_14 { pt3dadd( -22.5848, 51.6928, -5.97795, 0.52 ) }
    dend_14 { pt3dadd( -22.5405, 52.0088, -5.7539, 0.52 ) }
    dend_14 { pt3dadd( -22.5076, 52.1628, -5.64192, 1.11 ) }
    dend_14 { pt3dadd( -21.9504, 54.1135, -4.23867, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -21.817, 54.484, -4.00421, 1.11 ) }
    dend_14 { pt3dadd( -21.6759, 54.872, -3.80615, 1.18 ) }
    dend_14 { pt3dadd( -21.5857, 55.0967, -3.71108, 1.77 ) }
    dend_14 { pt3dadd( -21.45, 55.4713, -3.6052, 1.4 ) }
    dend_14 { pt3dadd( -21.2496, 56.1571, -3.54679, 0.81 ) }
    dend_14 { pt3dadd( -21.0394, 57.0471, -3.63997, 0.44 ) }
    dend_14 { pt3dadd( -20.9249, 57.5155, -3.66012, 0.44 ) }
    dend_14 { pt3dadd( -20.8535, 57.7741, -3.66314, 0.44 ) }
    dend_14 { pt3dadd( -20.7142, 58.1234, -3.63417, 0.44 ) }
    dend_14 { pt3dadd( -20.5867, 58.3793, -3.59505, 0.66 ) }
    dend_14 { pt3dadd( -20.0771, 59.1251, -3.29365, 0.59 ) }
    dend_14 { pt3dadd( -19.8784, 59.3905, -3.15678, 0.81 ) }
    dend_14 { pt3dadd( -19.3915, 60.0548, -2.79843, 0.44 ) }
    dend_14 { pt3dadd( -18.815, 60.8267, -2.24124, 0.59 ) }
    dend_14 { pt3dadd( -18.626, 61.093, -2.03478, 0.44 ) }
    dend_14 { pt3dadd( -17.6416, 62.5919, -0.901512, 0.37 ) }
    dend_14 { pt3dadd( -17.4659, 62.8828, -0.711354, 1.25 ) }
    dend_14 { pt3dadd( -17.1943, 63.37, -0.434213, 1.47 ) }
    dend_14 { pt3dadd( -16.2929, 65.2548, 0.436128, 0.88 ) }
    dend_14 { pt3dadd( -16.0328, 65.8381, 0.676708, 0.44 ) }
    dend_14 { pt3dadd( -15.7386, 66.505, 0.888957, 0.52 ) }
    dend_14 { pt3dadd( -15.2231, 67.6774, 1.09336, 0.96 ) }
    dend_14 { pt3dadd( -14.89, 68.3782, 1.17529, 1.03 ) }
    dend_14 { pt3dadd( -14.5454, 69.0553, 1.26318, 0.59 ) }
    dend_14 { pt3dadd( -13.4912, 71.1749, 1.49509, 0.59 ) }
    dend_14 { pt3dadd( -12.955, 72.2178, 1.6767, 1.18 ) }
    dend_14 { pt3dadd( -12.568, 73.1061, 1.83162, 1.4 ) }
    dend_14 { pt3dadd( -12.4612, 73.4121, 1.89042, 1.4 ) }
    dend_14 { pt3dadd( -11.9748, 75.2167, 2.19825, 0.81 ) }
    dend_14 { pt3dadd( -11.8449, 76.0004, 2.30797, 0.29 ) }
    dend_14 { pt3dadd( -11.8192, 76.5495, 2.3695, 0.29 ) }
    dend_14 { pt3dadd( -11.8307, 78.3569, 2.92471, 0.52 ) }
    dend_14 { pt3dadd( -11.8771, 79.2343, 3.334, 1.11 ) }
    dend_14 { pt3dadd( -11.9278, 79.8087, 3.65433, 1.25 ) }
    dend_14 { pt3dadd( -11.981, 80.1883, 3.89434, 1.4 ) }
    dend_14 { pt3dadd( -12.1114, 80.9635, 4.46796, 1.03 ) }
    dend_14 { pt3dadd( -12.5079, 83.0474, 6.16104, 0.52 ) }
    dend_14 { pt3dadd( -12.6739, 83.8029, 6.84086, 0.96 ) }
    dend_14 { pt3dadd( -12.8043, 84.2533, 7.22929, 0.96 ) }
    dend_14 { pt3dadd( -12.9924, 84.7012, 7.56332, 0.59 ) }
    dend_14 { pt3dadd( -13.3602, 85.3615, 7.92822, 0.59 ) }
    dend_14 { pt3dadd( -13.6654, 85.7863, 8.05854, 1.03 ) }
    dend_14 { pt3dadd( -14.1297, 86.3415, 8.08931, 1.33 ) }
    dend_14 { pt3dadd( -14.5822, 86.8677, 8.07175, 0.74 ) }
    dend_14 { pt3dadd( -15.7546, 88.2229, 8.01427, 0.59 ) }
    dend_14 { pt3dadd( -16.1572, 88.6808, 7.98576, 0.59 ) }
    dend_14 { pt3dadd( -16.3503, 88.8977, 7.97243, 0.88 ) }
    dend_14 { pt3dadd( -16.8314, 89.4386, 7.95541, 0.88 ) }
    dend_14 { pt3dadd( -17.277, 89.9452, 7.9391, 0.74 ) }
    dend_14 { pt3dadd( -17.9986, 90.7676, 7.93557, 0.37 ) }
    dend_14 { pt3dadd( -18.6592, 91.5115, 7.98178, 0.37 ) }
    dend_14 { pt3dadd( -19.0407, 91.915, 8.01938, 0.81 ) }
    dend_14 { pt3dadd( -19.5858, 92.4732, 8.09018, 1.11 ) }
    dend_14 { pt3dadd( -19.8693, 92.7656, 8.12662, 1.03 ) }
    dend_14 { pt3dadd( -20.1185, 93.0319, 8.15415, 1.03 ) }
    dend_14 { pt3dadd( -20.4791, 93.4457, 8.17659, 0.88 ) }
    dend_14 { pt3dadd( -21.1442, 94.2922, 8.23216, 0.29 ) }
    dend_14 { pt3dadd( -21.4471, 94.7134, 8.25741, 0.44 ) }
    dend_14 { pt3dadd( -21.9452, 95.4679, 8.3028, 0.52 ) }
    dend_14 { pt3dadd( -22.1286, 95.7619, 8.32616, 0.74 ) }
    dend_14 { pt3dadd( -22.2991, 96.0431, 8.35112, 0.74 ) }
    dend_14 { pt3dadd( -22.8684, 97.0607, 8.48024, 0.29 ) }
    dend_14 { pt3dadd( -23.1461, 97.6104, 8.55073, 1.18 ) }
    dend_14 { pt3dadd( -23.3138, 98.0397, 8.6022, 1.18 ) }
    dend_14 { pt3dadd( -23.4262, 98.3911, 8.64479, 1.18 ) }
    dend_14 { pt3dadd( -23.5632, 98.8799, 8.69582, 0.96 ) }
    dend_14 { pt3dadd( -23.7011, 99.4523, 8.73582, 0.88 ) }
    dend_14 { pt3dadd( -23.9489, 100.766, 8.76812, 0.37 ) }
    dend_14 { pt3dadd( -24.1838, 102.413, 8.73642, 0.29 ) }
    dend_14 { pt3dadd( -24.251, 103.06, 8.70098, 0.29 ) }
    dend_14 { pt3dadd( -24.2783, 103.46, 8.66553, 0.44 ) }
    dend_14 { pt3dadd( -24.2844, 103.726, 8.63082, 0.66 ) }
    dend_14 { pt3dadd( -24.292, 104.045, 8.54777, 0.52 ) }
    dend_14 { pt3dadd( -24.2627, 104.899, 8.19517, 0.52 ) }
    dend_14 { pt3dadd( -24.2312, 105.231, 7.97968, 0.66 ) }
    dend_14 { pt3dadd( -24.2114, 105.478, 7.73972, 0.88 ) }
    dend_14 { pt3dadd( -24.1964, 105.812, 7.36517, 0.88 ) }
    dend_14 { pt3dadd( -24.2192, 106.8, 6.12266, 1.03 ) }
    dend_14 { pt3dadd( -24.24, 107.135, 5.67498, 1.25 ) }
    dend_14 { pt3dadd( -24.2707, 107.465, 5.23281, 1.4 ) }
    dend_14 { pt3dadd( -24.3741, 108.614, 3.74698, 0.44 ) }
    dend_14 { pt3dadd( -24.3864, 109.043, 3.27911, 0.37 ) }
    dend_14 { pt3dadd( -24.3553, 109.818, 2.58502, 0.88 ) }
    dend_14 { pt3dadd( -24.3028, 110.18, 2.34526, 1.18 ) }
    dend_14 { pt3dadd( -24.2146, 110.707, 2.08147, 1.4 ) }
    dend_14 { pt3dadd( -24.1378, 111.109, 1.93058, 1.03 ) }
    dend_14 { pt3dadd( -23.7445, 112.814, 1.48424, 0.29 ) }
    dend_14 { pt3dadd( -23.5964, 113.434, 1.34203, 0.29 ) }
    dend_14 { pt3dadd( -23.3903, 114.319, 1.17965, 0.37 ) }
    dend_14 { pt3dadd( -23.1504, 115.568, 0.946467, 0.37 ) }
    dend_14 { pt3dadd( -23.0636, 116.165, 0.836397, 0.88 ) }
    dend_14 { pt3dadd( -23.0344, 116.433, 0.785645, 1.25 ) }
    dend_14 { pt3dadd( -22.9906, 117.122, 0.654395, 1.47 ) }
    dend_14 { pt3dadd( -22.9691, 117.699, 0.538556, 1.03 ) }
    dend_14 { pt3dadd( -22.9604, 118.805, 0.302653, 0.44 ) }
    dend_14 { pt3dadd( -22.9655, 119.365, 0.172702, 0.44 ) }
    dend_14 { pt3dadd( -23.0034, 120.769, -0.157699, 0.44 ) }
    dend_14 { pt3dadd( -23.0164, 121.089, -0.235461, 0.74 ) }
    dend_14 { pt3dadd( -23.042, 121.548, -0.348016, 0.74 ) }
    dend_14 { pt3dadd( -23.0694, 122.0, -0.459229, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_14 { pt3dadd( -23.1302, 122.79, -0.641019, 0.81 ) }
    dend_14 { pt3dadd( -23.1607, 123.049, -0.705254, 1.4 ) }
    dend_14 { pt3dadd( -23.2897, 123.568, -0.836789, 2.06 ) }
    dend_14 { pt3dadd( -23.425, 124.141, -1.00061, 2.06 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -0.461738, 45.1033, -1.09649, 1.55 ) }
    dend_8 { pt3dadd( -1.008, 46.5812, -1.15395, 1.55 ) }
    dend_8 { pt3dadd( -1.27691, 47.3834, -1.17866, 1.11 ) }
    dend_8 { pt3dadd( -1.60527, 48.93, -1.17214, 0.74 ) }
    dend_8 { pt3dadd( -1.71934, 49.9254, -1.13918, 0.88 ) }
    dend_8 { pt3dadd( -1.75029, 50.9404, -1.08025, 1.33 ) }
    dend_8 { pt3dadd( -1.73134, 51.603, -0.963001, 1.25 ) }
    dend_8 { pt3dadd( -1.54136, 52.7072, -0.551132, 0.96 ) }
    dend_8 { pt3dadd( -1.01253, 54.4004, 0.349692, 0.66 ) }
    dend_8 { pt3dadd( -0.64705, 55.1435, 0.770559, 1.11 ) }
    dend_8 { pt3dadd( -0.177723, 55.8931, 1.20809, 1.4 ) }
    dend_8 { pt3dadd( 1.31362, 57.9468, 2.39155, 1.11 ) }
    dend_8 { pt3dadd( 2.48407, 59.3785, 3.21694, 0.81 ) }
    dend_8 { pt3dadd( 3.04462, 59.9743, 3.60443, 0.81 ) }
    dend_8 { pt3dadd( 4.78998, 61.7347, 4.77729, 0.44 ) }
    dend_8 { pt3dadd( 5.2537, 62.2361, 5.16351, 0.88 ) }
    dend_8 { pt3dadd( 5.60034, 62.621, 5.48327, 0.88 ) }
    dend_8 { pt3dadd( 5.85078, 62.9085, 5.71728, 0.88 ) }
    dend_8 { pt3dadd( 7.37592, 64.7255, 7.35793, 0.59 ) }
    dend_8 { pt3dadd( 7.81843, 65.238, 7.87473, 0.88 ) }
    dend_8 { pt3dadd( 9.36722, 67.1363, 9.85813, 1.4 ) }
    dend_8 { pt3dadd( 9.9408, 67.8676, 10.5582, 1.33 ) }
    dend_8 { pt3dadd( 10.5357, 68.6781, 11.2857, 1.33 ) }
    dend_8 { pt3dadd( 11.6534, 70.2967, 12.525, 0.81 ) }
    dend_8 { pt3dadd( 12.2262, 71.1613, 13.0555, 0.96 ) }
    dend_8 { pt3dadd( 12.8598, 72.1153, 13.5646, 1.25 ) }
    dend_8 { pt3dadd( 13.2798, 72.7634, 13.8292, 1.25 ) }
    dend_8 { pt3dadd( 14.0351, 74.1139, 14.3639, 0.88 ) }
    dend_8 { pt3dadd( 14.5589, 75.2318, 14.7993, 0.74 ) }
    dend_8 { pt3dadd( 14.8117, 75.9368, 15.0571, 0.74 ) }
    dend_8 { pt3dadd( 14.9949, 76.5525, 15.2746, 0.74 ) }
    dend_8 { pt3dadd( 15.2547, 77.4383, 15.5849, 0.74 ) }
    dend_8 { pt3dadd( 15.363, 77.8491, 15.713, 0.96 ) }
    dend_8 { pt3dadd( 15.5464, 78.7037, 15.9364, 1.03 ) }
    dend_8 { pt3dadd( 15.6206, 79.3561, 16.1287, 1.03 ) }
    dend_8 { pt3dadd( 15.6372, 79.805, 16.2614, 0.88 ) }
    dend_8 { pt3dadd( 15.6254, 80.596, 16.5116, 0.59 ) }
    dend_8 { pt3dadd( 15.5871, 81.2942, 16.7815, 0.29 ) }
    dend_8 { pt3dadd( 15.5456, 82.0808, 17.1432, 0.59 ) }
    dend_8 { pt3dadd( 15.5346, 82.6308, 17.4345, 0.59 ) }
    dend_8 { pt3dadd( 15.5585, 83.2133, 17.8567, 0.52 ) }
    dend_8 { pt3dadd( 15.6107, 83.7858, 18.409, 0.59 ) }
    dend_8 { pt3dadd( 15.6936, 84.4875, 19.1977, 0.74 ) }
    dend_8 { pt3dadd( 15.7403, 84.7647, 19.5353, 0.74 ) }
    dend_8 { pt3dadd( 15.8488, 85.1597, 19.9973, 0.59 ) }
    dend_8 { pt3dadd( 16.1842, 86.3652, 21.0442, 0.29 ) }
    dend_8 { pt3dadd( 16.4052, 87.2359, 21.5297, 0.81 ) }
    dend_8 { pt3dadd( 16.573, 88.1108, 21.8049, 1.18 ) }
    dend_8 { pt3dadd( 16.6246, 88.4449, 21.8594, 1.62 ) }
    dend_8 { pt3dadd( 16.8261, 89.9862, 22.0235, 1.18 ) }
    dend_8 { pt3dadd( 17.1192, 92.4952, 22.1687, 0.81 ) }
    dend_8 { pt3dadd( 17.3141, 94.3212, 22.1871, 0.74 ) }
    dend_8 { pt3dadd( 17.4324, 95.5636, 22.1819, 0.88 ) }
    dend_8 { pt3dadd( 17.5254, 96.8325, 22.1875, 0.96 ) }
    dend_8 { pt3dadd( 17.5984, 98.5301, 22.213, 0.29 ) }
    dend_8 { pt3dadd( 17.5926, 99.2152, 22.2402, 0.29 ) }
    dend_8 { pt3dadd( 17.5903, 99.5578, 22.2791, 0.29 ) }
    dend_8 { pt3dadd( 17.5938, 100.277, 22.4231, 0.52 ) }
    dend_8 { pt3dadd( 17.6191, 100.855, 22.5328, 0.96 ) }
    dend_8 { pt3dadd( 17.6696, 101.452, 22.6281, 1.25 ) }
    dend_8 { pt3dadd( 17.7485, 102.185, 22.7197, 1.25 ) }
    dend_8 { pt3dadd( 17.8944, 103.186, 22.8441, 1.25 ) }
    dend_8 { pt3dadd( 18.0633, 104.056, 22.9476, 1.25 ) }
    dend_8 { pt3dadd( 18.226, 104.707, 23.0277, 1.18 ) }
    dend_8 { pt3dadd( 18.4622, 105.495, 23.1253, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.461738, 45.1033, -1.09649, 1.84 ) }
    dend_3 { pt3dadd( 0.767872, 46.3312, -1.06187, 1.84 ) }
    dend_3 { pt3dadd( 2.50029, 48.0637, -0.924908, 0.44 ) }
    dend_3 { pt3dadd( 3.04404, 48.6189, -0.882286, 1.25 ) }
    dend_3 { pt3dadd( 3.39036, 48.9917, -0.900942, 1.25 ) }
    dend_3 { pt3dadd( 3.95875, 49.6834, -0.975015, 1.03 ) }
    dend_3 { pt3dadd( 4.89255, 50.9243, -1.13441, 0.59 ) }
    dend_3 { pt3dadd( 5.45237, 51.7307, -1.25879, 1.18 ) }
    dend_3 { pt3dadd( 6.16319, 52.8975, -1.49043, 1.18 ) }
    dend_3 { pt3dadd( 7.26348, 54.8595, -1.8953, 0.66 ) }
    dend_3 { pt3dadd( 7.90359, 56.0615, -2.17258, 0.52 ) }
    dend_3 { pt3dadd( 8.35504, 56.9724, -2.41055, 1.25 ) }
    dend_3 { pt3dadd( 8.77192, 57.9236, -2.6675, 1.25 ) }
    dend_3 { pt3dadd( 9.20786, 59.0233, -2.92802, 1.18 ) }
    dend_3 { pt3dadd( 9.5498, 59.9566, -3.06362, 0.66 ) }
    dend_3 { pt3dadd( 9.59833, 60.0949, -3.06039, 0.66 ) }
    dend_3 { pt3dadd( 9.73885, 60.4824, -3.04579, 0.66 ) }
    dend_3 { pt3dadd( 9.75924, 60.5721, -3.04114, 0.66 ) }
    dend_3 { pt3dadd( 9.81861, 61.2627, -2.98468, 0.66 ) }
    dend_3 { pt3dadd( 9.82277, 61.6659, -2.93517, 0.66 ) }
    dend_3 { pt3dadd( 9.81907, 62.2468, -2.94076, 0.66 ) }
    dend_3 { pt3dadd( 9.81214, 62.4947, -2.95102, 0.66 ) }
    dend_3 { pt3dadd( 9.78352, 62.8098, -2.98189, 0.66 ) }
    dend_3 { pt3dadd( 9.77164, 62.8863, -2.9924, 0.66 ) }
    dend_3 { pt3dadd( 9.63336, 63.5105, -3.09848, 0.66 ) }
    dend_3 { pt3dadd( 9.5236, 64.0277, -3.19063, 0.66 ) }
    dend_3 { pt3dadd( 9.45313, 64.4336, -3.29084, 0.59 ) }
    dend_3 { pt3dadd( 9.39985, 64.8684, -3.41271, 0.22 ) }
    dend_3 { pt3dadd( 9.34599, 65.5661, -3.60713, 0.22 ) }
    dend_3 { pt3dadd( 9.33416, 65.8949, -3.69058, 0.22 ) }
    dend_3 { pt3dadd( 9.33401, 66.2459, -3.77174, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_3 { pt3dadd( 9.38078, 67.1034, -3.9304, 0.22 ) }
    dend_3 { pt3dadd( 9.41553, 67.4479, -3.98556, 0.22 ) }
    dend_3 { pt3dadd( 9.47432, 67.8428, -4.03038, 0.59 ) }
    dend_3 { pt3dadd( 9.5754, 68.4813, -4.08271, 1.11 ) }
    dend_3 { pt3dadd( 9.5849, 68.559, -4.08503, 1.11 ) }
    dend_3 { pt3dadd( 9.59915, 68.7888, -4.07757, 1.25 ) }
    dend_3 { pt3dadd( 9.60122, 69.1049, -4.04353, 1.25 ) }
    dend_3 { pt3dadd( 9.59006, 69.4313, -4.0042, 0.88 ) }
    dend_3 { pt3dadd( 9.55779, 69.8245, -3.96068, 0.81 ) }
    dend_3 { pt3dadd( 9.50784, 70.2549, -3.91222, 0.96 ) }
    dend_3 { pt3dadd( 9.47812, 70.4998, -3.88563, 0.96 ) }
    dend_3 { pt3dadd( 9.42919, 70.8191, -3.85167, 0.59 ) }
    dend_3 { pt3dadd( 9.32308, 71.3451, -3.79932, 0.81 ) }
    dend_3 { pt3dadd( 9.0376, 72.4536, -3.7105, 0.29 ) }
    dend_3 { pt3dadd( 8.91894, 72.8446, -3.68746, 0.29 ) }
    dend_3 { pt3dadd( 8.79793, 73.1981, -3.67259, 0.44 ) }
    dend_3 { pt3dadd( 8.70667, 73.48, -3.66442, 0.44 ) }
    dend_3 { pt3dadd( 8.51365, 74.0886, -3.604, 0.44 ) }
    dend_3 { pt3dadd( 8.33957, 74.6537, -3.51803, 0.29 ) }
    dend_3 { pt3dadd( 8.20518, 75.1102, -3.41984, 0.29 ) }
    dend_3 { pt3dadd( 8.11335, 75.4234, -3.34491, 0.59 ) }
    dend_3 { pt3dadd( 7.93583, 76.0787, -3.17859, 0.96 ) }
    dend_3 { pt3dadd( 7.66968, 77.2102, -2.9136, 1.11 ) }
    dend_3 { pt3dadd( 7.48706, 78.092, -2.73312, 0.81 ) }
    dend_3 { pt3dadd( 7.38617, 78.801, -2.58338, 0.74 ) }
    dend_3 { pt3dadd( 7.3521, 79.0894, -2.50827, 0.52 ) }
    dend_3 { pt3dadd( 7.28707, 79.6623, -2.34565, 0.52 ) }
    dend_3 { pt3dadd( 7.20561, 80.4037, -2.13269, 0.81 ) }
    dend_3 { pt3dadd( 7.15193, 81.3253, -1.88102, 0.95 ) }
    dend_3 { pt3dadd( 7.13809, 82.6612, -1.46909, 1.55 ) }
    dend_3 { pt3dadd( 7.16483, 83.6461, -1.15093, 0.74 ) }
    dend_3 { pt3dadd( 7.18854, 84.1452, -0.989947, 0.66 ) }
    dend_3 { pt3dadd( 7.22209, 84.7732, -0.792401, 0.29 ) }
    dend_3 { pt3dadd( 7.25888, 85.3446, -0.615517, 0.29 ) }
    dend_3 { pt3dadd( 7.29471, 86.016, -0.458777, 0.29 ) }
    dend_3 { pt3dadd( 7.30159, 86.5609, -0.399712, 0.37 ) }
    dend_3 { pt3dadd( 7.314, 86.9779, -0.387737, 0.37 ) }
    dend_3 { pt3dadd( 7.31115, 87.5458, -0.327359, 0.44 ) }
    dend_3 { pt3dadd( 7.31115, 87.5458, -0.327359, 0.52 ) }
    dend_3 { pt3dadd( 7.26054, 88.2716, -0.180861, 0.81 ) }
    dend_3 { pt3dadd( 7.22501, 88.7338, -0.0744555, 1.11 ) }
    dend_3 { pt3dadd( 7.19598, 89.2204, 0.0493812, 1.25 ) }
    dend_3 { pt3dadd( 7.11661, 90.8863, 0.524496, 0.29 ) }
    dend_3 { pt3dadd( 7.09978, 91.3098, 0.650663, 0.29 ) }
    dend_3 { pt3dadd( 7.06385, 91.9072, 0.822623, 0.52 ) }
    dend_3 { pt3dadd( 7.04123, 92.1667, 0.893758, 0.81 ) }
    dend_3 { pt3dadd( 7.00277, 92.4798, 0.984993, 0.81 ) }
    dend_3 { pt3dadd( 6.90146, 93.255, 1.20372, 0.29 ) }
    dend_3 { pt3dadd( 6.79967, 93.9756, 1.38188, 0.22 ) }
    dend_3 { pt3dadd( 6.6837, 94.7334, 1.55813, 0.15 ) }
    dend_3 { pt3dadd( 6.59131, 95.3127, 1.68497, 0.22 ) }
    dend_3 { pt3dadd( 6.40439, 96.5491, 1.92569, 0.22 ) }
    dend_3 { pt3dadd( 6.28721, 97.3112, 2.05618, 0.22 ) }
    dend_3 { pt3dadd( 6.23407, 97.7004, 2.11162, 0.22 ) }
    dend_3 { pt3dadd( 6.14511, 98.4894, 2.21228, 1.03 ) }
    dend_3 { pt3dadd( 6.13128, 98.7356, 2.22578, 1.33 ) }
    dend_3 { pt3dadd( 6.10804, 99.4847, 2.20348, 1.47 ) }
    dend_3 { pt3dadd( 6.11344, 99.8554, 2.16626, 1.62 ) }
    dend_3 { pt3dadd( 6.13191, 100.351, 2.11825, 1.55 ) }
    dend_3 { pt3dadd( 6.15908, 100.82, 2.07926, 1.55 ) }
    dend_3 { pt3dadd( 6.24437, 101.962, 2.00257, 0.81 ) }
    dend_3 { pt3dadd( 6.3235, 102.862, 1.9266, 0.22 ) }
    dend_3 { pt3dadd( 6.44594, 104.084, 1.80418, 0.22 ) }
    dend_3 { pt3dadd( 6.49078, 104.524, 1.75612, 0.22 ) }
    dend_3 { pt3dadd( 6.51791, 104.868, 1.71712, 0.59 ) }
    dend_3 { pt3dadd( 6.52318, 105.191, 1.68166, 0.59 ) }
    dend_3 { pt3dadd( 6.48085, 105.724, 1.63646, 0.29 ) }
    dend_3 { pt3dadd( 6.44877, 105.888, 1.59848, 0.29 ) }
    dend_3 { pt3dadd( 6.30925, 106.258, 1.45434, 0.29 ) }
    dend_3 { pt3dadd( 6.20652, 106.509, 1.34859, 0.22 ) }
    dend_3 { pt3dadd( 6.03605, 106.929, 1.17362, 0.22 ) }
    dend_3 { pt3dadd( 5.95974, 107.124, 1.09918, 0.22 ) }
    dend_3 { pt3dadd( 5.65569, 108.003, 0.814244, 0.88 ) }
    dend_3 { pt3dadd( 5.55577, 108.513, 0.662334, 1.33 ) }
    dend_3 { pt3dadd( 5.51582, 109.069, 0.510917, 1.55 ) }
    dend_3 { pt3dadd( 5.54405, 109.379, 0.444524, 1.77 ) }
    dend_3 { pt3dadd( 5.61425, 109.715, 0.397152, 1.47 ) }
    dend_3 { pt3dadd( 5.69806, 110.064, 0.368252, 1.18 ) }
    dend_3 { pt3dadd( 6.01954, 111.207, 0.347929, 0.29 ) }
    dend_3 { pt3dadd( 6.12638, 111.527, 0.346547, 0.29 ) }
    dend_3 { pt3dadd( 6.44326, 112.357, 0.290889, 0.29 ) }
    dend_3 { pt3dadd( 6.81849, 113.283, 0.186924, 0.29 ) }
    dend_3 { pt3dadd( 7.07313, 113.882, 0.0984647, 0.29 ) }
    dend_3 { pt3dadd( 7.37501, 114.556, -0.0173759, 0.29 ) }
    dend_3 { pt3dadd( 7.55884, 114.952, -0.0923395, 0.29 ) }
    dend_3 { pt3dadd( 8.13803, 116.104, -0.335255, 0.88 ) }
    dend_3 { pt3dadd( 8.13803, 116.104, -0.335255, 1.03 ) }
    dend_3 { pt3dadd( 8.44617, 116.575, -0.439073, 1.25 ) }
    dend_3 { pt3dadd( 8.80908, 117.098, -0.528289, 0.96 ) }
    dend_3 { pt3dadd( 8.99029, 117.39, -0.55698, 0.88 ) }
    dend_3 { pt3dadd( 9.24769, 117.855, -0.557883, 1.03 ) }
    dend_3 { pt3dadd( 9.28533, 117.927, -0.555221, 1.03 ) }
    dend_3 { pt3dadd( 9.60608, 118.605, -0.591036, 0.59 ) }
    dend_3 { pt3dadd( 9.66535, 118.75, -0.607957, 0.52 ) }
    dend_3 { pt3dadd( 9.80465, 119.131, -0.683611, 0.52 ) }
    dend_3 { pt3dadd( 9.85479, 119.276, -0.717644, 0.52 ) }
    dend_3 { pt3dadd( 10.2433, 120.392, -0.982081, 0.29 ) }
    dend_3 { pt3dadd( 10.509, 121.141, -1.15576, 0.29 ) }
    dend_3 { pt3dadd( 10.6965, 121.587, -1.37445, 0.29 ) }
    dend_3 { pt3dadd( 10.9013, 122.035, -1.72732, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_3 { pt3dadd( 11.069, 122.408, -2.08137, 1.18 ) }
    dend_3 { pt3dadd( 11.2756, 122.916, -2.59677, 1.25 ) }
    dend_3 { pt3dadd( 11.3056, 122.995, -2.68597, 0.96 ) }
    dend_3 { pt3dadd( 11.9554, 124.713, -4.80344, 0.22 ) }
    dend_3 { pt3dadd( 12.2325, 125.5, -5.81331, 0.15 ) }
    dend_3 { pt3dadd( 12.3547, 125.884, -6.30874, 0.15 ) }
    dend_3 { pt3dadd( 12.4512, 126.233, -6.75075, 0.15 ) }
    dend_3 { pt3dadd( 12.4614, 126.283, -6.80841, 0.15 ) }
    dend_3 { pt3dadd( 12.486, 126.526, -6.96227, 0.15 ) }
    dend_3 { pt3dadd( 12.4712, 126.773, -6.94913, 0.15 ) }
    dend_3 { pt3dadd( 12.4356, 127.156, -6.87538, 0.88 ) }
    dend_3 { pt3dadd( 12.363, 127.801, -6.73981, 1.33 ) }
    dend_3 { pt3dadd( 12.3343, 128.12, -6.66865, 1.55 ) }
    dend_3 { pt3dadd( 12.2811, 129.128, -6.4467, 0.15 ) }
    dend_3 { pt3dadd( 12.2724, 129.706, -6.35844, 0.15 ) }
    dend_3 { pt3dadd( 12.2876, 130.113, -6.32923, 0.15 ) }
    dend_3 { pt3dadd( 12.2949, 130.191, -6.331, 0.15 ) }
    dend_3 { pt3dadd( 12.3879, 130.674, -6.40908, 0.15 ) }
    dend_3 { pt3dadd( 12.5495, 131.157, -6.53043, 0.15 ) }
    dend_3 { pt3dadd( 12.9392, 131.917, -6.83308, 0.74 ) }
    dend_3 { pt3dadd( 13.1452, 132.239, -6.97927, 1.33 ) }
    dend_3 { pt3dadd( 13.2384, 132.378, -7.0511, 2.36 ) }
    dend_3 { pt3dadd( 13.3757, 132.609, -7.17772, 2.5 ) }
    dend_3 { pt3dadd( 13.4489, 132.77, -7.27869, 2.5 ) }
    // Section: dend_125, id: dend_125, parent: dend_123 (entry count 24/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( -7.67148, -63.4478, 20.2399, 0.22 ) }
    dend_125 { pt3dadd( -7.7159, -63.6593, 20.2148, 0.22 ) }
    dend_125 { pt3dadd( -7.81128, -64.1137, 20.1608, 0.22 ) }
    dend_125 { pt3dadd( -7.90414, -64.556, 20.1082, 0.22 ) }
    dend_125 { pt3dadd( -8.02114, -65.1133, 20.042, 0.22 ) }
    dend_125 { pt3dadd( -8.04869, -65.2446, 20.0264, 0.22 ) }
    // Section: dend_124, id: dend_124, parent: dend_123 (entry count 30/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( -7.67148, -63.4478, 20.2399, 0.44 ) }
    dend_124 { pt3dadd( -7.27507, -63.8876, 20.2031, 0.44 ) }
    dend_124 { pt3dadd( -6.73808, -64.4664, 20.1451, 0.29 ) }
    dend_124 { pt3dadd( -6.53191, -64.6887, 20.1229, 0.29 ) }
    dend_124 { pt3dadd( -6.08331, -65.1722, 20.0745, 0.29 ) }
    dend_124 { pt3dadd( -5.71593, -65.5683, 20.0348, 0.29 ) }
    dend_124 { pt3dadd( -5.58312, -65.7114, 20.0205, 0.44 ) }
    dend_124 { pt3dadd( -5.54392, -65.7577, 20.0078, 0.44 ) }
    dend_124 { pt3dadd( -0.685755, -72.8344, 18.1585, 0.44 ) }
    dend_124 { pt3dadd( 5.27048, -79.1102, 16.841, 0.44 ) }
    dend_124 { pt3dadd( 11.6765, -84.3972, 14.1868, 0.44 ) }
    dend_124 { pt3dadd( 17.1892, -90.1228, 10.5697, 0.44 ) }
    dend_124 { pt3dadd( 22.1975, -96.6953, 7.65767, 0.44 ) }
    dend_124 { pt3dadd( 26.9262, -103.235, 4.2511, 0.44 ) }
    // Section: dend_122, id: dend_122, parent: dend_120 (entry count 44/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( -34.7706, -62.2571, 38.8722, 0.29 ) }
    dend_122 { pt3dadd( -45.9358, -64.537, 40.0335, 0.29 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 46/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -34.7706, -62.2571, 38.8722, 0.52 ) }
    dend_121 { pt3dadd( -43.0819, -62.9905, 43.2159, 0.29 ) }
    dend_121 { pt3dadd( -50.7632, -64.4265, 48.4606, 0.29 ) }
    dend_121 { pt3dadd( -58.8004, -66.8725, 52.7168, 0.29 ) }
    dend_121 { pt3dadd( -66.1503, -70.0282, 57.7122, 0.29 ) }
    // Section: dend_113, id: dend_113, parent: dend_111 (entry count 51/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 6.55513, -56.638, 8.98358, 0.74 ) }
    dend_113 { pt3dadd( 6.49668, -57.709, 8.97814, 0.74 ) }
    dend_113 { pt3dadd( 6.43477, -58.8433, 8.97238, 0.59 ) }
    dend_113 { pt3dadd( 6.38893, -59.6832, 8.96812, 0.52 ) }
    dend_113 { pt3dadd( 6.34153, -60.5517, 8.96371, 0.66 ) }
    dend_113 { pt3dadd( 6.30093, -61.2956, 8.95993, 0.66 ) }
    dend_113 { pt3dadd( 6.26076, -62.0316, 8.95619, 0.66 ) }
    // Section: dend_112, id: dend_112, parent: dend_111 (entry count 58/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( 6.55513, -56.638, 8.98358, 0.29 ) }
    dend_112 { pt3dadd( 7.24064, -56.9165, 9.08295, 0.29 ) }
    dend_112 { pt3dadd( 7.91259, -57.1881, 9.19826, 0.29 ) }
    dend_112 { pt3dadd( 9.24018, -57.7698, 9.46439, 0.29 ) }
    dend_112 { pt3dadd( 9.82812, -58.0389, 9.57339, 0.29 ) }
    dend_112 { pt3dadd( 10.5475, -58.361, 9.69241, 0.96 ) }
    dend_112 { pt3dadd( 10.9311, -58.5288, 9.76162, 1.11 ) }
    dend_112 { pt3dadd( 11.2644, -58.6819, 9.83203, 1.11 ) }
    dend_112 { pt3dadd( 11.7511, -58.9041, 9.93822, 0.88 ) }
    dend_112 { pt3dadd( 12.5724, -59.2782, 10.1111, 0.22 ) }
    dend_112 { pt3dadd( 13.2255, -59.5589, 10.2645, 0.22 ) }
    dend_112 { pt3dadd( 14.3696, -59.9951, 10.5275, 0.22 ) }
    dend_112 { pt3dadd( 14.7882, -60.1379, 10.6406, 0.29 ) }
    dend_112 { pt3dadd( 14.9798, -60.2036, 10.6994, 0.59 ) }
    dend_112 { pt3dadd( 15.2434, -60.2925, 10.7892, 0.59 ) }
    dend_112 { pt3dadd( 16.1779, -60.676, 11.1761, 0.29 ) }
    dend_112 { pt3dadd( 16.3917, -60.7841, 11.2695, 0.44 ) }
    dend_112 { pt3dadd( 16.4438, -60.8128, 11.2921, 0.44 ) }
    dend_112 { pt3dadd( 16.8926, -61.0725, 11.4943, 0.44 ) }
    dend_112 { pt3dadd( 17.292, -61.3484, 11.6664, 0.44 ) }
    dend_112 { pt3dadd( 17.6167, -61.6469, 11.7737, 0.44 ) }
    dend_112 { pt3dadd( 17.6952, -61.7571, 11.7739, 0.44 ) }
    dend_112 { pt3dadd( 25.1289, -65.3861, 14.5836, 0.44 ) }
    dend_112 { pt3dadd( 32.1397, -68.5433, 18.7129, 0.44 ) }
    dend_112 { pt3dadd( 39.3388, -70.7572, 23.0946, 0.44 ) }
    dend_112 { pt3dadd( 45.9133, -72.6134, 28.4971, 0.44 ) }
    dend_112 { pt3dadd( 52.1522, -74.0255, 34.4022, 0.44 ) }
    dend_112 { pt3dadd( 58.6703, -74.8417, 40.1093, 0.44 ) }
    // Section: dend_103, id: dend_103, parent: dend_99 (entry count 86/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 39.9935, -68.2515, -38.1418, 0.81 ) }
    dend_103 { pt3dadd( 41.1668, -68.7326, -37.6881, 0.81 ) }
    dend_103 { pt3dadd( 41.2139, -68.7509, -37.6712, 0.81 ) }
    dend_103 { pt3dadd( 41.8428, -69.0188, -37.4004, 0.81 ) }
    dend_103 { pt3dadd( 42.0591, -69.1197, -37.27, 0.96 ) }
    dend_103 { pt3dadd( 42.884, -69.5231, -36.7062, 0.29 ) }
    dend_103 { pt3dadd( 43.1684, -69.6675, -36.5029, 0.81 ) }
    dend_103 { pt3dadd( 43.5444, -69.8639, -36.2182, 0.29 ) }
    dend_103 { pt3dadd( 44.1911, -70.2083, -35.7203, 0.22 ) }
    dend_103 { pt3dadd( 44.9212, -70.6194, -35.0851, 0.74 ) }
    dend_103 { pt3dadd( 44.9807, -70.6537, -35.0342, 1.18 ) }
    dend_103 { pt3dadd( 45.257, -70.8122, -34.8197, 1.4 ) }
    dend_103 { pt3dadd( 45.4858, -70.9268, -34.6617, 1.11 ) }
    dend_103 { pt3dadd( 45.9455, -71.1285, -34.407, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_103 { pt3dadd( 46.5568, -71.3413, -34.1943, 0.22 ) }
    dend_103 { pt3dadd( 46.9596, -71.4656, -34.1064, 0.22 ) }
    dend_103 { pt3dadd( 47.4689, -71.6314, -33.9948, 0.22 ) }
    dend_103 { pt3dadd( 47.7622, -71.7334, -33.9319, 0.22 ) }
    dend_103 { pt3dadd( 47.9745, -71.8229, -33.8879, 0.81 ) }
    dend_103 { pt3dadd( 48.0266, -71.8498, -33.8799, 0.81 ) }
    dend_103 { pt3dadd( 48.4254, -72.0827, -33.8611, 0.81 ) }
    dend_103 { pt3dadd( 48.8977, -72.4082, -33.8553, 0.22 ) }
    dend_103 { pt3dadd( 49.4576, -72.8336, -33.8591, 0.22 ) }
    dend_103 { pt3dadd( 49.8237, -73.1045, -33.861, 0.22 ) }
    dend_103 { pt3dadd( 50.2301, -73.4016, -33.8596, 0.81 ) }
    dend_103 { pt3dadd( 50.2731, -73.4337, -33.859, 0.81 ) }
    dend_103 { pt3dadd( 50.6067, -73.7017, -33.8513, 1.33 ) }
    dend_103 { pt3dadd( 50.9628, -73.9979, -33.8354, 0.66 ) }
    dend_103 { pt3dadd( 51.4438, -74.422, -33.8029, 0.29 ) }
    dend_103 { pt3dadd( 51.8594, -74.7869, -33.762, 0.29 ) }
    dend_103 { pt3dadd( 52.2631, -75.1528, -33.7089, 0.29 ) }
    dend_103 { pt3dadd( 52.6442, -75.4837, -33.656, 0.37 ) }
    dend_103 { pt3dadd( 53.1626, -75.9361, -33.5822, 0.22 ) }
    dend_103 { pt3dadd( 53.3217, -76.0819, -33.5595, 0.96 ) }
    dend_103 { pt3dadd( 53.6989, -76.4403, -33.5059, 1.18 ) }
    dend_103 { pt3dadd( 53.8321, -76.5637, -33.4871, 1.18 ) }
    dend_103 { pt3dadd( 54.7035, -77.3212, -33.3647, 0.22 ) }
    dend_103 { pt3dadd( 55.2351, -77.7213, -33.2881, 0.22 ) }
    dend_103 { pt3dadd( 55.5761, -77.9503, -33.2384, 0.22 ) }
    dend_103 { pt3dadd( 55.856, -78.1244, -33.1636, 1.25 ) }
    dend_103 { pt3dadd( 56.2166, -78.3462, -33.0318, 1.69 ) }
    dend_103 { pt3dadd( 56.6851, -78.6336, -32.8233, 1.11 ) }
    dend_103 { pt3dadd( 57.3289, -79.0712, -32.4396, 0.22 ) }
    dend_103 { pt3dadd( 57.6875, -79.3416, -32.1914, 0.22 ) }
    dend_103 { pt3dadd( 58.6461, -80.1655, -31.4674, 0.22 ) }
    dend_103 { pt3dadd( 58.8621, -80.3721, -31.2935, 0.66 ) }
    dend_103 { pt3dadd( 59.1366, -80.662, -31.0741, 0.96 ) }
    dend_103 { pt3dadd( 59.8039, -81.4335, -30.5501, 0.22 ) }
    dend_103 { pt3dadd( 60.1453, -81.8553, -30.3055, 0.22 ) }
    dend_103 { pt3dadd( 60.4325, -82.1913, -30.1461, 0.66 ) }
    dend_103 { pt3dadd( 60.6448, -82.4138, -30.0488, 1.11 ) }
    dend_103 { pt3dadd( 61.2622, -82.98, -29.732, 0.22 ) }
    dend_103 { pt3dadd( 61.3426, -83.045, -29.6876, 0.22 ) }
    dend_103 { pt3dadd( 61.623, -83.2254, -29.5176, 0.22 ) }
    dend_103 { pt3dadd( 61.9132, -83.3933, -29.3167, 0.22 ) }
    dend_103 { pt3dadd( 62.766, -83.8935, -28.6538, 0.96 ) }
    dend_103 { pt3dadd( 63.0194, -84.0547, -28.4469, 1.4 ) }
    dend_103 { pt3dadd( 63.057, -84.0777, -28.4168, 1.4 ) }
    dend_103 { pt3dadd( 63.6921, -84.4612, -27.8049, 0.29 ) }
    dend_103 { pt3dadd( 63.9172, -84.5943, -27.5656, 0.29 ) }
    dend_103 { pt3dadd( 63.9832, -84.6311, -27.4948, 0.29 ) }
    dend_103 { pt3dadd( 64.3775, -84.8583, -27.0842, 0.29 ) }
    dend_103 { pt3dadd( 64.7232, -85.0775, -26.7267, 0.29 ) }
    dend_103 { pt3dadd( 65.869, -85.8762, -25.6154, 1.18 ) }
    dend_103 { pt3dadd( 65.9023, -85.9018, -25.5824, 1.18 ) }
    dend_103 { pt3dadd( 66.0963, -86.0618, -25.3905, 1.18 ) }
    dend_103 { pt3dadd( 66.8536, -86.7522, -24.6863, 0.22 ) }
    dend_103 { pt3dadd( 67.3763, -87.301, -24.2429, 0.22 ) }
    dend_103 { pt3dadd( 67.7907, -87.7756, -23.9609, 0.22 ) }
    dend_103 { pt3dadd( 68.2025, -88.2691, -23.7689, 0.81 ) }
    dend_103 { pt3dadd( 68.4486, -88.5639, -23.6681, 0.81 ) }
    dend_103 { pt3dadd( 69.0493, -89.2984, -23.4588, 0.22 ) }
    dend_103 { pt3dadd( 69.5343, -89.888, -23.363, 0.22 ) }
    dend_103 { pt3dadd( 69.9154, -90.3404, -23.321, 0.96 ) }
    dend_103 { pt3dadd( 70.2785, -90.7559, -23.3194, 1.55 ) }
    dend_103 { pt3dadd( 70.5853, -91.087, -23.345, 0.96 ) }
    dend_103 { pt3dadd( 70.7318, -91.2366, -23.3608, 0.96 ) }
    dend_103 { pt3dadd( 71.3591, -91.8441, -23.4402, 0.22 ) }
    dend_103 { pt3dadd( 72.0046, -92.4428, -23.5142, 0.22 ) }
    dend_103 { pt3dadd( 72.3808, -92.796, -23.5524, 0.22 ) }
    dend_103 { pt3dadd( 72.735, -93.1231, -23.583, 0.22 ) }
    dend_103 { pt3dadd( 73.0147, -93.3806, -23.5987, 0.74 ) }
    dend_103 { pt3dadd( 73.3911, -93.7142, -23.6039, 1.18 ) }
    dend_103 { pt3dadd( 73.7133, -93.9966, -23.5858, 0.52 ) }
    dend_103 { pt3dadd( 73.7866, -94.0597, -23.58, 0.52 ) }
    dend_103 { pt3dadd( 74.2236, -94.4252, -23.527, 0.22 ) }
    dend_103 { pt3dadd( 74.6221, -94.7478, -23.475, 0.22 ) }
    dend_103 { pt3dadd( 74.6676, -94.7854, -23.4688, 0.22 ) }
    dend_103 { pt3dadd( 74.7626, -94.8662, -23.4554, 0.96 ) }
    dend_103 { pt3dadd( 74.8051, -94.9076, -23.4516, 0.96 ) }
    dend_103 { pt3dadd( 75.1648, -95.2974, -23.46, 1.33 ) }
    dend_103 { pt3dadd( 75.5272, -95.7291, -23.5046, 0.29 ) }
    dend_103 { pt3dadd( 75.9253, -96.2354, -23.5833, 0.29 ) }
    dend_103 { pt3dadd( 75.9569, -96.2764, -23.5908, 0.29 ) }
    dend_103 { pt3dadd( 76.3502, -96.8237, -23.7072, 0.29 ) }
    dend_103 { pt3dadd( 76.6256, -97.2393, -23.8091, 0.74 ) }
    dend_103 { pt3dadd( 76.6517, -97.2846, -23.8226, 0.74 ) }
    dend_103 { pt3dadd( 76.7257, -97.4102, -23.8593, 0.74 ) }
    dend_103 { pt3dadd( 76.7719, -97.4699, -23.8695, 0.74 ) }
    dend_103 { pt3dadd( 77.0003, -97.7148, -23.9015, 0.74 ) }
    dend_103 { pt3dadd( 77.0393, -97.7516, -23.9043, 0.74 ) }
    dend_103 { pt3dadd( 77.1625, -97.8591, -23.9097, 0.74 ) }
    dend_103 { pt3dadd( 77.8426, -98.3427, -23.8765, 0.22 ) }
    dend_103 { pt3dadd( 78.5624, -98.7657, -23.7987, 0.22 ) }
    dend_103 { pt3dadd( 79.187, -99.0707, -23.6574, 0.22 ) }
    dend_103 { pt3dadd( 79.3585, -99.1429, -23.6048, 1.25 ) }
    dend_103 { pt3dadd( 79.601, -99.2361, -23.516, 1.47 ) }
    dend_103 { pt3dadd( 80.6545, -99.582, -23.0715, 0.22 ) }
    dend_103 { pt3dadd( 81.0674, -99.7005, -22.8098, 0.22 ) }
    dend_103 { pt3dadd( 81.7706, -99.9179, -22.2607, 0.29 ) }
    dend_103 { pt3dadd( 82.0784, -100.024, -21.9965, 0.81 ) }
    dend_103 { pt3dadd( 82.3369, -100.125, -21.7689, 1.25 ) }
    dend_103 { pt3dadd( 82.5623, -100.228, -21.5658, 1.33 ) }
    dend_103 { pt3dadd( 83.6599, -100.812, -20.5784, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_103 { pt3dadd( 84.2631, -101.142, -20.039, 0.22 ) }
    dend_103 { pt3dadd( 84.5381, -101.296, -19.8101, 0.22 ) }
    dend_103 { pt3dadd( 84.8875, -101.497, -19.4693, 0.59 ) }
    dend_103 { pt3dadd( 84.9315, -101.525, -19.4235, 0.59 ) }
    dend_103 { pt3dadd( 85.0738, -101.62, -19.2726, 0.96 ) }
    dend_103 { pt3dadd( 85.1072, -101.643, -19.2401, 0.96 ) }
    dend_103 { pt3dadd( 85.6402, -102.059, -18.5003, 0.29 ) }
    dend_103 { pt3dadd( 86.3333, -102.605, -17.5465, 0.29 ) }
    dend_103 { pt3dadd( 86.5902, -102.801, -17.2167, 0.29 ) }
    dend_103 { pt3dadd( 86.6301, -102.829, -17.1698, 0.29 ) }
    dend_103 { pt3dadd( 86.8836, -102.992, -16.9212, 0.29 ) }
    dend_103 { pt3dadd( 88.1707, -103.758, -15.9489, 0.22 ) }
    dend_103 { pt3dadd( 88.9527, -104.22, -15.3809, 0.96 ) }
    dend_103 { pt3dadd( 89.2625, -104.395, -15.1717, 1.33 ) }
    dend_103 { pt3dadd( 89.5006, -104.518, -15.0013, 0.81 ) }
    dend_103 { pt3dadd( 90.2127, -104.855, -14.5063, 0.22 ) }
    dend_103 { pt3dadd( 90.6605, -105.041, -14.2038, 0.22 ) }
    dend_103 { pt3dadd( 91.9516, -105.569, -13.3831, 0.66 ) }
    dend_103 { pt3dadd( 92.0742, -105.622, -13.2828, 0.96 ) }
    dend_103 { pt3dadd( 92.3971, -105.761, -12.9866, 0.29 ) }
    dend_103 { pt3dadd( 92.8464, -105.947, -12.5189, 0.22 ) }
    dend_103 { pt3dadd( 93.039, -105.998, -12.274, 0.81 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 22/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 39.9935, -68.2515, -38.1418, 1.25 ) }
    dend_100 { pt3dadd( 40.0954, -68.3951, -38.2466, 1.25 ) }
    dend_100 { pt3dadd( 40.9791, -69.6491, -39.0068, 0.29 ) }
    dend_100 { pt3dadd( 41.4234, -70.2976, -39.3505, 0.29 ) }
    dend_100 { pt3dadd( 42.2147, -71.49, -39.9157, 0.29 ) }
    dend_100 { pt3dadd( 42.5925, -72.0835, -40.1649, 0.29 ) }
    dend_100 { pt3dadd( 43.185, -73.0197, -40.5508, 0.29 ) }
    dend_100 { pt3dadd( 43.4864, -73.5168, -40.7193, 0.29 ) }
    dend_100 { pt3dadd( 43.6746, -73.8518, -40.7958, 0.96 ) }
    dend_100 { pt3dadd( 43.8586, -74.1924, -40.8561, 1.4 ) }
    dend_100 { pt3dadd( 44.165, -74.7495, -40.9693, 0.88 ) }
    dend_100 { pt3dadd( 44.7802, -75.8387, -41.2678, 0.22 ) }
    dend_100 { pt3dadd( 45.2658, -76.675, -41.5946, 0.22 ) }
    dend_100 { pt3dadd( 45.7124, -77.4032, -41.9229, 0.22 ) }
    dend_100 { pt3dadd( 46.4532, -78.4941, -42.4781, 0.22 ) }
    dend_100 { pt3dadd( 47.2203, -79.6266, -43.0817, 0.81 ) }
    dend_100 { pt3dadd( 47.5396, -80.1226, -43.3625, 1.33 ) }
    dend_100 { pt3dadd( 48.2254, -81.3261, -44.0874, 0.37 ) }
    dend_100 { pt3dadd( 48.4576, -81.7789, -44.3876, 0.37 ) }
    dend_100 { pt3dadd( 48.8016, -82.6837, -44.989, 0.22 ) }
    dend_100 { pt3dadd( 49.0296, -83.672, -45.6461, 0.22 ) }
    dend_100 { pt3dadd( 49.1458, -84.6833, -46.2455, 0.88 ) }
    dend_100 { pt3dadd( 49.1583, -85.4402, -46.6924, 1.25 ) }
    dend_100 { pt3dadd( 49.1412, -85.6495, -46.8091, 1.11 ) }
    dend_100 { pt3dadd( 49.0437, -86.6076, -47.4244, 0.44 ) }
    dend_100 { pt3dadd( 48.9542, -87.7109, -48.1751, 0.59 ) }
    dend_100 { pt3dadd( 48.9638, -87.9023, -48.3123, 1.11 ) }
    dend_100 { pt3dadd( 49.0281, -88.2728, -48.559, 1.11 ) }
    dend_100 { pt3dadd( 49.0537, -88.3574, -48.6176, 1.11 ) }
    dend_100 { pt3dadd( 49.618, -89.7606, -49.7024, 0.44 ) }
    dend_100 { pt3dadd( 49.8683, -90.2788, -50.1047, 0.22 ) }
    dend_100 { pt3dadd( 50.1085, -90.7968, -50.4676, 0.22 ) }
    dend_100 { pt3dadd( 50.3054, -91.2763, -50.7811, 0.22 ) }
    dend_100 { pt3dadd( 50.6749, -92.2698, -51.3757, 0.96 ) }
    dend_100 { pt3dadd( 50.9757, -93.2014, -51.8562, 1.77 ) }
    dend_100 { pt3dadd( 51.2173, -94.1171, -52.2388, 0.29 ) }
    dend_100 { pt3dadd( 51.3523, -94.7406, -52.4847, 0.29 ) }
    dend_100 { pt3dadd( 51.4787, -95.3843, -52.7117, 0.29 ) }
    dend_100 { pt3dadd( 51.5543, -95.8042, -52.821, 0.29 ) }
    dend_100 { pt3dadd( 51.6381, -96.3831, -52.8929, 0.29 ) }
    dend_100 { pt3dadd( 51.6458, -96.4456, -52.8963, 0.29 ) }
    dend_100 { pt3dadd( 51.7304, -97.1331, -52.9338, 0.29 ) }
    dend_100 { pt3dadd( 51.7401, -97.2078, -52.9377, 0.29 ) }
    dend_100 { pt3dadd( 51.8342, -97.9662, -52.9517, 1.03 ) }
    dend_100 { pt3dadd( 51.8724, -98.4307, -52.9523, 1.4 ) }
    dend_100 { pt3dadd( 51.8785, -98.5036, -52.958, 1.4 ) }
    dend_100 { pt3dadd( 51.9783, -99.6344, -53.1073, 0.29 ) }
    dend_100 { pt3dadd( 52.0499, -100.383, -53.2352, 0.29 ) }
    dend_100 { pt3dadd( 52.1184, -101.034, -53.3616, 0.81 ) }
    dend_100 { pt3dadd( 52.2256, -101.782, -53.5079, 0.81 ) }
    dend_100 { pt3dadd( 52.4543, -103.116, -53.7757, 0.22 ) }
    dend_100 { pt3dadd( 52.5667, -103.694, -53.8913, 0.22 ) }
    dend_100 { pt3dadd( 52.7171, -104.359, -54.028, 0.74 ) }
    dend_100 { pt3dadd( 52.861, -104.913, -54.1376, 1.18 ) }
    dend_100 { pt3dadd( 53.1941, -106.126, -54.3463, 0.29 ) }
    dend_100 { pt3dadd( 53.2138, -106.195, -54.3535, 0.29 ) }
    dend_100 { pt3dadd( 53.4708, -107.153, -54.4134, 0.29 ) }
    dend_100 { pt3dadd( 53.5925, -107.6, -54.4495, 0.88 ) }
    dend_100 { pt3dadd( 53.6723, -107.904, -54.4793, 1.47 ) }
    dend_100 { pt3dadd( 53.9935, -109.17, -54.6391, 0.22 ) }
    dend_100 { pt3dadd( 54.3315, -110.295, -54.8518, 0.22 ) }
    dend_100 { pt3dadd( 54.5639, -110.894, -55.0444, 0.74 ) }
    dend_100 { pt3dadd( 54.5927, -110.957, -55.0725, 0.74 ) }
    dend_100 { pt3dadd( 54.826, -111.386, -55.3294, 1.11 ) }
    dend_100 { pt3dadd( 55.0121, -111.695, -55.5505, 1.4 ) }
    dend_100 { pt3dadd( 55.7662, -112.878, -56.5171, 0.29 ) }
    dend_100 { pt3dadd( 56.4547, -113.96, -57.452, 0.81 ) }
    dend_100 { pt3dadd( 56.7265, -114.41, -57.8924, 1.4 ) }
    dend_100 { pt3dadd( 57.3136, -115.363, -58.883, 0.29 ) }
    dend_100 { pt3dadd( 57.4966, -115.647, -59.1906, 0.29 ) }
    dend_100 { pt3dadd( 57.7805, -116.087, -59.6733, 0.66 ) }
    dend_100 { pt3dadd( 57.8317, -116.172, -59.7646, 0.66 ) }
    dend_100 { pt3dadd( 58.9239, -118.093, -61.6892, 0.29 ) }
    dend_100 { pt3dadd( 59.2051, -118.574, -62.2064, 0.29 ) }
    dend_100 { pt3dadd( 59.3735, -118.865, -62.5435, 0.29 ) }
    dend_100 { pt3dadd( 59.3996, -118.906, -62.5963, 0.29 ) }
    dend_100 { pt3dadd( 59.6036, -119.218, -62.9767, 0.29 ) }
    dend_100 { pt3dadd( 59.9121, -119.744, -63.4766, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_100 { pt3dadd( 59.9803, -119.894, -63.5614, 0.81 ) }
    dend_100 { pt3dadd( 60.2872, -120.64, -63.9348, 1.25 ) }
    dend_100 { pt3dadd( 60.3097, -120.694, -63.9567, 1.25 ) }
    dend_100 { pt3dadd( 60.808, -121.759, -64.2889, 0.22 ) }
    dend_100 { pt3dadd( 61.1424, -122.414, -64.4291, 0.22 ) }
    dend_100 { pt3dadd( 61.2147, -122.551, -64.4554, 0.22 ) }
    dend_100 { pt3dadd( 61.4868, -123.114, -64.5602, 0.22 ) }
    dend_100 { pt3dadd( 61.6696, -123.556, -64.6376, 1.03 ) }
    dend_100 { pt3dadd( 61.8077, -123.911, -64.7088, 1.33 ) }
    dend_100 { pt3dadd( 61.8322, -123.977, -64.7247, 1.33 ) }
    dend_100 { pt3dadd( 62.369, -125.544, -65.1125, 0.29 ) }
    dend_100 { pt3dadd( 62.6071, -126.26, -65.2888, 0.29 ) }
    dend_100 { pt3dadd( 62.8756, -127.109, -65.4854, 0.29 ) }
    dend_100 { pt3dadd( 63.0502, -127.66, -65.5946, 0.74 ) }
    dend_100 { pt3dadd( 63.083, -127.763, -65.6111, 0.74 ) }
    dend_100 { pt3dadd( 63.1879, -128.062, -65.6373, 1.11 ) }
    dend_100 { pt3dadd( 63.2148, -128.132, -65.6347, 1.11 ) }
    dend_100 { pt3dadd( 63.6316, -129.014, -65.5798, 0.37 ) }
    dend_100 { pt3dadd( 63.8869, -129.486, -65.5427, 0.37 ) }
    dend_100 { pt3dadd( 63.9334, -129.585, -65.5376, 0.37 ) }
    dend_100 { pt3dadd( 64.1751, -130.155, -65.5192, 0.37 ) }
    dend_100 { pt3dadd( 64.2021, -130.222, -65.5178, 0.37 ) }
    dend_100 { pt3dadd( 64.327, -130.581, -65.5156, 0.81 ) }
    dend_100 { pt3dadd( 64.4592, -131.034, -65.5196, 0.81 ) }
    dend_100 { pt3dadd( 64.8309, -132.463, -65.5446, 0.29 ) }
    dend_100 { pt3dadd( 65.0376, -133.312, -65.666, 0.29 ) }
    dend_100 { pt3dadd( 65.0531, -133.384, -65.6822, 0.29 ) }
    dend_100 { pt3dadd( 65.2021, -134.1, -65.8766, 0.29 ) }
    dend_100 { pt3dadd( 65.3651, -134.916, -66.1174, 1.18 ) }
    dend_100 { pt3dadd( 65.5351, -135.715, -66.3583, 1.47 ) }
    dend_100 { pt3dadd( 66.0085, -137.659, -67.0845, 0.29 ) }
    dend_100 { pt3dadd( 66.1835, -138.34, -67.364, 0.29 ) }
    dend_100 { pt3dadd( 66.3322, -138.982, -67.5968, 0.74 ) }
    dend_100 { pt3dadd( 66.5752, -140.179, -67.9635, 0.29 ) }
    dend_100 { pt3dadd( 66.7474, -141.184, -68.2167, 0.29 ) }
    dend_100 { pt3dadd( 66.9332, -142.557, -68.5131, 0.81 ) }
    dend_100 { pt3dadd( 66.9806, -142.991, -68.5784, 1.4 ) }
    dend_100 { pt3dadd( 67.1855, -144.804, -68.87, 0.22 ) }
    dend_100 { pt3dadd( 67.3117, -145.924, -69.0541, 0.22 ) }
    dend_100 { pt3dadd( 67.3117, -145.924, -69.0541, 0.96 ) }
    dend_100 { pt3dadd( 67.5624, -147.667, -69.283, 0.29 ) }
    dend_100 { pt3dadd( 67.575, -147.739, -69.2894, 0.29 ) }
    dend_100 { pt3dadd( 67.9798, -148.922, -69.5957, 0.29 ) }
    dend_100 { pt3dadd( 68.1979, -149.337, -69.7864, 1.18 ) }
    dend_100 { pt3dadd( 68.4807, -149.786, -70.0293, 1.18 ) }
    dend_100 { pt3dadd( 68.63, -150.015, -70.1563, 1.33 ) }
    dend_100 { pt3dadd( 68.7249, -150.151, -70.234, 1.33 ) }
    dend_100 { pt3dadd( 69.9775, -152.064, -71.3776, 0.29 ) }
    dend_100 { pt3dadd( 70.3146, -152.644, -71.7496, 0.29 ) }
    dend_100 { pt3dadd( 70.3536, -152.724, -71.8007, 0.29 ) }
    dend_100 { pt3dadd( 70.6285, -153.403, -72.1834, 0.29 ) }
    dend_100 { pt3dadd( 70.6507, -153.466, -72.2132, 0.29 ) }
    dend_100 { pt3dadd( 70.8778, -154.163, -72.4751, 0.59 ) }
    dend_100 { pt3dadd( 70.992, -154.608, -72.5815, 0.96 ) }
    dend_100 { pt3dadd( 71.3713, -155.871, -73.0673, 0.29 ) }
    dend_100 { pt3dadd( 71.6824, -156.701, -73.563, 0.29 ) }
    dend_100 { pt3dadd( 71.8137, -156.959, -73.8012, 0.74 ) }
    dend_100 { pt3dadd( 71.9168, -157.136, -73.9922, 1.11 ) }
    dend_100 { pt3dadd( 72.0933, -157.382, -74.3326, 1.47 ) }
    dend_100 { pt3dadd( 73.1142, -158.707, -76.4061, 0.22 ) }
    dend_100 { pt3dadd( 73.9019, -159.732, -78.1087, 0.22 ) }
    dend_100 { pt3dadd( 74.7826, -160.876, -80.1065, 1.11 ) }
    dend_100 { pt3dadd( 74.9742, -161.121, -80.5491, 1.55 ) }
    dend_100 { pt3dadd( 76.3773, -162.879, -83.8244, 0.37 ) }
    dend_100 { pt3dadd( 76.877, -163.474, -84.9807, 0.37 ) }
    dend_100 { pt3dadd( 77.1081, -163.734, -85.4987, 0.74 ) }
    dend_100 { pt3dadd( 77.1081, -163.734, -85.4987, 1.4 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 67/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -15.635, -79.7975, -55.0436, 0.74 ) }
    dend_98 { pt3dadd( -15.8883, -78.899, -59.2279, 0.74 ) }
    dend_98 { pt3dadd( -15.8969, -78.8812, -59.3064, 0.74 ) }
    dend_98 { pt3dadd( -16.483, -78.1261, -64.2527, 0.29 ) }
    dend_98 { pt3dadd( -16.5938, -78.035, -65.0279, 0.29 ) }
    dend_98 { pt3dadd( -16.6398, -78.0129, -65.2884, 0.59 ) }
    dend_98 { pt3dadd( -17.7108, -77.8278, -69.7638, 0.96 ) }
    dend_98 { pt3dadd( -18.261, -77.8331, -71.4056, 1.55 ) }
    dend_98 { pt3dadd( -19.3695, -77.9635, -74.243, 0.59 ) }
    dend_98 { pt3dadd( -19.7135, -78.0345, -75.0156, 0.59 ) }
    dend_98 { pt3dadd( -21.3075, -78.341, -78.2892, 1.03 ) }
    dend_98 { pt3dadd( -23.0409, -78.6351, -81.5786, 0.22 ) }
    dend_98 { pt3dadd( -23.1762, -78.6537, -81.8013, 1.03 ) }
    dend_98 { pt3dadd( -23.4985, -78.6652, -82.3065, 1.03 ) }
    dend_98 { pt3dadd( -26.5229, -78.4075, -86.793, 0.74 ) }
    dend_98 { pt3dadd( -27.3657, -78.2943, -88.0605, 0.37 ) }
    dend_98 { pt3dadd( -27.3657, -78.2943, -88.0605, 1.03 ) }
    dend_98 { pt3dadd( -27.8526, -78.2085, -88.775, 1.03 ) }
    dend_98 { pt3dadd( -30.2701, -77.8596, -92.2835, 0.29 ) }
    dend_98 { pt3dadd( -30.5145, -77.8365, -92.6285, 0.88 ) }
    dend_98 { pt3dadd( -30.6892, -77.8318, -92.8479, 1.33 ) }
    dend_98 { pt3dadd( -32.3258, -77.8034, -94.8959, 0.44 ) }
    dend_98 { pt3dadd( -32.372, -77.8016, -94.9467, 0.44 ) }
    dend_98 { pt3dadd( -33.4753, -77.7409, -95.9656, 1.25 ) }
    dend_98 { pt3dadd( -33.6155, -77.7198, -96.0479, 1.25 ) }
    dend_98 { pt3dadd( -33.9846, -77.5994, -96.2023, 1.62 ) }
    dend_98 { pt3dadd( -35.6214, -76.5556, -96.3015, 0.59 ) }
    dend_98 { pt3dadd( -36.2044, -75.9567, -96.0645, 0.96 ) }
    dend_98 { pt3dadd( -36.3879, -75.7409, -95.9482, 1.33 ) }
    dend_98 { pt3dadd( -38.09, -73.5069, -94.3913, 0.29 ) }
    dend_98 { pt3dadd( -38.5054, -72.9247, -93.9359, 0.66 ) }
    dend_98 { pt3dadd( -38.6241, -72.7139, -93.7487, 1.11 ) }
    dend_98 { pt3dadd( -38.6784, -72.5527, -93.5782, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_98 { pt3dadd( -38.7187, -72.3636, -93.3757, 1.11 ) }
    dend_98 { pt3dadd( -38.7834, -72.0101, -93.005, 0.66 ) }
    dend_98 { pt3dadd( -39.3179, -71.8945, -92.9364, 0.66 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 3/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -15.635, -79.7975, -55.0436, 1.33 ) }
    dend_97 { pt3dadd( -15.6831, -79.9181, -55.1324, 1.33 ) }
    dend_97 { pt3dadd( -16.1714, -81.3411, -56.1035, 0.81 ) }
    dend_97 { pt3dadd( -16.4016, -82.0733, -56.6223, 0.44 ) }
    dend_97 { pt3dadd( -16.5013, -82.4295, -56.8712, 0.44 ) }
    dend_97 { pt3dadd( -16.7223, -83.3129, -57.4488, 0.15 ) }
    dend_97 { pt3dadd( -16.8507, -83.9209, -57.8148, 0.29 ) }
    dend_97 { pt3dadd( -16.8902, -84.244, -57.9748, 0.74 ) }
    dend_97 { pt3dadd( -16.9399, -85.0106, -58.2701, 0.52 ) }
    dend_97 { pt3dadd( -16.9472, -85.3453, -58.4147, 0.37 ) }
    dend_97 { pt3dadd( -16.936, -85.9539, -58.684, 0.37 ) }
    dend_97 { pt3dadd( -16.8893, -86.5206, -58.9065, 0.74 ) }
    dend_97 { pt3dadd( -16.824, -87.1792, -59.0823, 0.74 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 16/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -46.6341, -114.556, -60.8688, 0.29 ) }
    dend_90 { pt3dadd( -47.2788, -115.336, -61.295, 0.29 ) }
    dend_90 { pt3dadd( -47.4419, -115.54, -61.3964, 0.29 ) }
    dend_90 { pt3dadd( -47.6603, -115.803, -61.5127, 0.29 ) }
    dend_90 { pt3dadd( -47.7889, -115.964, -61.6015, 0.81 ) }
    dend_90 { pt3dadd( -47.9065, -116.115, -61.6786, 0.81 ) }
    dend_90 { pt3dadd( -48.2466, -116.577, -61.9144, 0.15 ) }
    dend_90 { pt3dadd( -48.4362, -116.861, -62.041, 0.22 ) }
    dend_90 { pt3dadd( -48.5824, -117.108, -62.1643, 0.96 ) }
    dend_90 { pt3dadd( -48.9056, -117.714, -62.4955, 0.59 ) }
    dend_90 { pt3dadd( -49.2092, -118.309, -62.8273, 0.22 ) }
    dend_90 { pt3dadd( -49.4019, -118.693, -63.0381, 0.29 ) }
    dend_90 { pt3dadd( -49.5012, -118.889, -63.134, 0.88 ) }
    dend_90 { pt3dadd( -49.6437, -119.169, -63.2626, 0.88 ) }
    dend_90 { pt3dadd( -49.8894, -119.661, -63.4548, 0.29 ) }
    dend_90 { pt3dadd( -49.9814, -119.832, -63.502, 0.52 ) }
    dend_90 { pt3dadd( -50.0431, -119.949, -63.5334, 0.66 ) }
    dend_90 { pt3dadd( -50.2874, -120.378, -63.6109, 0.22 ) }
    dend_90 { pt3dadd( -50.429, -120.626, -63.6777, 0.22 ) }
    dend_90 { pt3dadd( -50.5209, -120.803, -63.7281, 0.22 ) }
    dend_90 { pt3dadd( -50.5532, -120.881, -63.7515, 0.22 ) }
    dend_90 { pt3dadd( -50.6524, -121.172, -63.8562, 0.88 ) }
    dend_90 { pt3dadd( -50.6854, -121.292, -63.9197, 1.11 ) }
    dend_90 { pt3dadd( -50.8538, -121.982, -64.3537, 0.29 ) }
    dend_90 { pt3dadd( -50.916, -122.198, -64.5075, 0.29 ) }
    dend_90 { pt3dadd( -51.0131, -122.487, -64.7151, 0.44 ) }
    dend_90 { pt3dadd( -51.024, -122.518, -64.7365, 0.44 ) }
    dend_90 { pt3dadd( -51.2656, -123.135, -65.165, 0.22 ) }
    dend_90 { pt3dadd( -51.3398, -123.339, -65.3446, 0.37 ) }
    dend_90 { pt3dadd( -51.4474, -123.657, -65.6504, 0.22 ) }
    dend_90 { pt3dadd( -51.5062, -123.832, -65.8365, 0.81 ) }
    dend_90 { pt3dadd( -51.5149, -123.857, -65.8641, 0.81 ) }
    dend_90 { pt3dadd( -51.5613, -123.996, -66.0086, 1.33 ) }
    dend_90 { pt3dadd( -51.9054, -125.032, -67.1115, 0.29 ) }
    dend_90 { pt3dadd( -51.947, -125.16, -67.2505, 0.29 ) }
    dend_90 { pt3dadd( -51.9858, -125.292, -67.3892, 0.29 ) }
    dend_90 { pt3dadd( -52.0283, -125.462, -67.5648, 0.74 ) }
    dend_90 { pt3dadd( -52.0589, -125.601, -67.6968, 0.88 ) }
    dend_90 { pt3dadd( -52.1925, -126.303, -68.2988, 0.22 ) }
    dend_90 { pt3dadd( -52.2195, -126.493, -68.427, 0.22 ) }
    dend_90 { pt3dadd( -52.2435, -126.689, -68.5635, 0.22 ) }
    dend_90 { pt3dadd( -52.2778, -127.087, -68.8224, 0.66 ) }
    dend_90 { pt3dadd( -52.288, -127.26, -68.922, 1.11 ) }
    dend_90 { pt3dadd( -52.2933, -127.357, -68.9679, 1.33 ) }
    dend_90 { pt3dadd( -52.3057, -127.854, -69.1129, 0.22 ) }
    dend_90 { pt3dadd( -52.3168, -128.09, -69.1881, 0.22 ) }
    dend_90 { pt3dadd( -52.3492, -128.459, -69.2922, 0.22 ) }
    dend_90 { pt3dadd( -52.367, -128.644, -69.3332, 0.22 ) }
    dend_90 { pt3dadd( -52.3707, -128.686, -69.3414, 0.59 ) }
    dend_90 { pt3dadd( -52.3791, -128.847, -69.372, 0.59 ) }
    dend_90 { pt3dadd( -52.3816, -129.424, -69.468, 0.22 ) }
    dend_90 { pt3dadd( -52.3746, -129.887, -69.5546, 0.22 ) }
    dend_90 { pt3dadd( -52.3705, -130.083, -69.5923, 0.22 ) }
    dend_90 { pt3dadd( -52.3654, -130.363, -69.6409, 0.96 ) }
    dend_90 { pt3dadd( -52.3599, -130.724, -69.6908, 0.22 ) }
    dend_90 { pt3dadd( -52.3586, -130.842, -69.7067, 0.22 ) }
    dend_90 { pt3dadd( -52.3541, -131.037, -69.7261, 0.22 ) }
    dend_90 { pt3dadd( -52.3498, -131.23, -69.7531, 0.22 ) }
    dend_90 { pt3dadd( -52.3542, -131.427, -69.7994, 0.22 ) }
    dend_90 { pt3dadd( -52.3677, -131.611, -69.8476, 0.22 ) }
    dend_90 { pt3dadd( -52.4193, -132.007, -69.949, 0.59 ) }
    dend_90 { pt3dadd( -52.4366, -132.12, -69.9817, 0.74 ) }
    dend_90 { pt3dadd( -52.475, -132.344, -70.0502, 0.74 ) }
    dend_90 { pt3dadd( -52.5967, -133.049, -70.2652, 0.29 ) }
    dend_90 { pt3dadd( -52.6599, -133.436, -70.3616, 0.29 ) }
    dend_90 { pt3dadd( -52.684, -133.603, -70.3969, 0.29 ) }
    dend_90 { pt3dadd( -52.7283, -133.959, -70.4532, 0.59 ) }
    dend_90 { pt3dadd( -52.7427, -134.118, -70.4734, 0.96 ) }
    dend_90 { pt3dadd( -52.7527, -134.326, -70.4899, 0.96 ) }
    dend_90 { pt3dadd( -52.7454, -134.805, -70.4863, 0.22 ) }
    dend_90 { pt3dadd( -52.7327, -135.127, -70.4807, 0.22 ) }
    dend_90 { pt3dadd( -52.7238, -135.252, -70.4759, 0.29 ) }
    dend_90 { pt3dadd( -52.6957, -135.572, -70.4501, 0.22 ) }
    dend_90 { pt3dadd( -52.6814, -135.727, -70.4387, 0.37 ) }
    dend_90 { pt3dadd( -52.6638, -135.882, -70.4489, 0.37 ) }
    dend_90 { pt3dadd( -52.63, -136.088, -70.4895, 0.22 ) }
    dend_90 { pt3dadd( -52.5762, -136.343, -70.5522, 0.29 ) }
    dend_90 { pt3dadd( -52.5081, -136.603, -70.6236, 0.29 ) }
    dend_90 { pt3dadd( -52.499, -136.633, -70.6317, 0.29 ) }
    dend_90 { pt3dadd( -52.2706, -137.33, -70.8184, 1.03 ) }
    dend_90 { pt3dadd( -52.1734, -137.636, -70.8901, 1.03 ) }
    dend_90 { pt3dadd( -52.0428, -138.084, -70.9739, 0.22 ) }
    dend_90 { pt3dadd( -51.9401, -138.497, -71.0279, 0.22 ) }
    dend_90 { pt3dadd( -51.8491, -138.899, -71.0641, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_90 { pt3dadd( -51.8335, -138.973, -71.0669, 0.22 ) }
    dend_90 { pt3dadd( -51.7502, -139.436, -71.0407, 0.22 ) }
    dend_90 { pt3dadd( -51.6865, -139.859, -71.0127, 0.22 ) }
    dend_90 { pt3dadd( -51.6489, -140.206, -70.9815, 0.22 ) }
    dend_90 { pt3dadd( -51.6369, -140.416, -70.9636, 0.88 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 5/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -46.6341, -114.556, -60.8688, 0.22 ) }
    dend_89 { pt3dadd( -47.2709, -115.944, -63.242, 0.22 ) }
    dend_89 { pt3dadd( -47.3586, -116.215, -63.6817, 0.22 ) }
    dend_89 { pt3dadd( -47.4207, -116.478, -64.1, 0.22 ) }
    dend_89 { pt3dadd( -47.4934, -116.883, -64.7603, 0.22 ) }
    dend_89 { pt3dadd( -47.5138, -117.04, -65.0224, 0.66 ) }
    dend_89 { pt3dadd( -47.56, -117.619, -65.998, 0.15 ) }
    dend_89 { pt3dadd( -47.5052, -117.893, -66.4192, 0.15 ) }
    dend_89 { pt3dadd( -47.487, -117.979, -66.5718, 0.15 ) }
    dend_89 { pt3dadd( -47.4129, -118.307, -67.2154, 0.74 ) }
    dend_89 { pt3dadd( -47.3834, -118.385, -67.3702, 0.96 ) }
    dend_89 { pt3dadd( -47.3429, -118.475, -67.5529, 0.96 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 17/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -24.24, -114.714, -52.625, 0.22 ) }
    dend_87 { pt3dadd( -24.5953, -116.068, -52.9924, 0.22 ) }
    dend_87 { pt3dadd( -24.7881, -116.925, -53.2432, 0.22 ) }
    dend_87 { pt3dadd( -24.9434, -117.815, -53.6303, 0.22 ) }
    dend_87 { pt3dadd( -24.9827, -118.166, -53.8048, 0.81 ) }
    dend_87 { pt3dadd( -24.9981, -118.551, -54.0059, 1.11 ) }
    dend_87 { pt3dadd( -24.9968, -118.918, -54.2127, 1.03 ) }
    dend_87 { pt3dadd( -24.9886, -118.988, -54.2587, 1.03 ) }
    dend_87 { pt3dadd( -24.7882, -120.215, -55.1418, 0.29 ) }
    dend_87 { pt3dadd( -24.6747, -120.777, -55.5441, 0.29 ) }
    dend_87 { pt3dadd( -24.5633, -121.428, -55.9804, 0.37 ) }
    dend_87 { pt3dadd( -24.4916, -121.912, -56.2799, 0.22 ) }
    dend_87 { pt3dadd( -24.4333, -122.518, -56.6335, 0.22 ) }
    dend_87 { pt3dadd( -24.3849, -123.171, -56.9926, 0.74 ) }
    dend_87 { pt3dadd( -24.3774, -123.324, -57.0681, 1.03 ) }
    dend_87 { pt3dadd( -24.4524, -124.535, -57.6787, 0.22 ) }
    dend_87 { pt3dadd( -24.516, -125.0, -57.9043, 0.22 ) }
    dend_87 { pt3dadd( -24.6476, -125.784, -58.2602, 0.74 ) }
    dend_87 { pt3dadd( -24.7186, -126.091, -58.4137, 0.74 ) }
    dend_87 { pt3dadd( -24.7833, -126.339, -58.5381, 0.74 ) }
    dend_87 { pt3dadd( -25.224, -127.715, -59.2419, 0.22 ) }
    dend_87 { pt3dadd( -25.3714, -128.104, -59.4457, 0.29 ) }
    dend_87 { pt3dadd( -25.4847, -128.389, -59.5886, 0.29 ) }
    dend_87 { pt3dadd( -25.9997, -129.653, -60.1683, 0.22 ) }
    dend_87 { pt3dadd( -26.1899, -130.039, -60.3332, 0.22 ) }
    dend_87 { pt3dadd( -26.6147, -130.822, -60.6604, 0.37 ) }
    dend_87 { pt3dadd( -26.6466, -130.881, -60.6848, 0.81 ) }
    dend_87 { pt3dadd( -26.9677, -131.395, -60.9568, 0.81 ) }
    dend_87 { pt3dadd( -27.1385, -131.653, -61.1057, 0.81 ) }
    dend_87 { pt3dadd( -28.1212, -132.87, -61.9939, 0.22 ) }
    dend_87 { pt3dadd( -28.4784, -133.276, -62.3329, 0.22 ) }
    dend_87 { pt3dadd( -28.8151, -133.641, -62.6589, 0.22 ) }
    dend_87 { pt3dadd( -29.8476, -134.772, -63.6798, 0.88 ) }
    dend_87 { pt3dadd( -30.0878, -135.032, -63.9274, 0.88 ) }
    dend_87 { pt3dadd( -31.5732, -136.73, -65.5949, 0.37 ) }
    dend_87 { pt3dadd( -31.7785, -136.946, -65.8355, 0.52 ) }
    dend_87 { pt3dadd( -31.9337, -137.102, -66.0073, 0.74 ) }
    dend_87 { pt3dadd( -32.23, -137.397, -66.3261, 0.74 ) }
    dend_87 { pt3dadd( -33.4828, -138.707, -67.7324, 0.22 ) }
    dend_87 { pt3dadd( -33.8083, -139.063, -68.1153, 0.59 ) }
    dend_87 { pt3dadd( -35.4054, -141.049, -70.1184, 0.29 ) }
    dend_87 { pt3dadd( -35.6565, -141.369, -70.4404, 0.74 ) }
    dend_87 { pt3dadd( -35.8195, -141.589, -70.654, 0.74 ) }
    dend_87 { pt3dadd( -36.3966, -142.42, -71.3895, 0.22 ) }
    dend_87 { pt3dadd( -36.6392, -142.843, -71.7027, 0.22 ) }
    dend_87 { pt3dadd( -36.8993, -143.41, -72.0499, 0.22 ) }
    dend_87 { pt3dadd( -37.0981, -144.305, -72.4344, 0.81 ) }
    dend_87 { pt3dadd( -37.1565, -144.632, -72.5691, 1.18 ) }
    dend_87 { pt3dadd( -37.2357, -145.179, -72.7615, 0.66 ) }
    dend_87 { pt3dadd( -37.2953, -145.875, -72.9684, 0.29 ) }
    dend_87 { pt3dadd( -37.3477, -146.619, -73.1883, 0.29 ) }
    dend_87 { pt3dadd( -37.3604, -146.977, -73.2928, 0.44 ) }
    dend_87 { pt3dadd( -37.3573, -147.697, -73.4886, 0.15 ) }
    dend_87 { pt3dadd( -37.3858, -148.04, -73.636, 0.15 ) }
    dend_87 { pt3dadd( -37.4626, -148.686, -73.9921, 0.59 ) }
    dend_87 { pt3dadd( -37.5088, -148.946, -74.1613, 0.96 ) }
    dend_87 { pt3dadd( -37.5887, -149.309, -74.431, 0.96 ) }
    dend_87 { pt3dadd( -37.6486, -149.585, -74.6476, 0.96 ) }
    dend_87 { pt3dadd( -38.001, -151.21, -75.9553, 0.29 ) }
    dend_87 { pt3dadd( -38.0782, -151.634, -76.2913, 0.29 ) }
    dend_87 { pt3dadd( -38.1759, -152.324, -76.8101, 0.37 ) }
    dend_87 { pt3dadd( -38.251, -152.875, -77.2151, 1.03 ) }
    dend_87 { pt3dadd( -38.3012, -153.298, -77.5084, 1.25 ) }
    dend_87 { pt3dadd( -38.6065, -155.128, -78.7498, 0.29 ) }
    dend_87 { pt3dadd( -38.7188, -155.687, -79.0998, 0.29 ) }
    dend_87 { pt3dadd( -38.8503, -156.212, -79.4175, 0.29 ) }
    dend_87 { pt3dadd( -39.1012, -157.145, -79.9603, 0.59 ) }
    dend_87 { pt3dadd( -39.2354, -157.576, -80.212, 0.88 ) }
    dend_87 { pt3dadd( -40.0654, -159.938, -81.6195, 0.22 ) }
    dend_87 { pt3dadd( -40.2407, -160.393, -81.882, 0.22 ) }
    dend_87 { pt3dadd( -40.4224, -160.845, -82.1392, 0.29 ) }
    dend_87 { pt3dadd( -40.6015, -161.286, -82.3703, 0.29 ) }
    dend_87 { pt3dadd( -40.8996, -162.118, -82.7632, 0.29 ) }
    dend_87 { pt3dadd( -41.1891, -163.068, -83.1886, 0.74 ) }
    dend_87 { pt3dadd( -41.2678, -163.457, -83.3441, 1.25 ) }
    dend_87 { pt3dadd( -41.3087, -163.701, -83.4433, 1.25 ) }
    dend_87 { pt3dadd( -41.6306, -165.999, -84.3194, 0.29 ) }
    dend_87 { pt3dadd( -41.6845, -166.509, -84.4869, 0.29 ) }
    dend_87 { pt3dadd( -41.6928, -167.161, -84.6707, 0.74 ) }
    dend_87 { pt3dadd( -41.6569, -167.667, -84.8015, 1.18 ) }
    dend_87 { pt3dadd( -41.5895, -168.168, -84.9355, 0.74 ) }
    dend_87 { pt3dadd( -41.4503, -168.959, -85.1706, 0.22 ) }
    dend_87 { pt3dadd( -41.2923, -169.586, -85.378, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_87 { pt3dadd( -41.0578, -170.722, -85.7728, 0.22 ) }
    dend_87 { pt3dadd( -41.004, -171.086, -85.915, 0.44 ) }
    dend_87 { pt3dadd( -40.9653, -171.482, -86.0779, 0.44 ) }
    dend_87 { pt3dadd( -40.9265, -172.479, -86.5131, 0.29 ) }
    dend_87 { pt3dadd( -40.9308, -172.969, -86.7393, 0.59 ) }
    dend_87 { pt3dadd( -40.9276, -173.532, -86.9743, 0.59 ) }
    dend_87 { pt3dadd( -40.9069, -174.288, -87.2363, 0.22 ) }
    dend_87 { pt3dadd( -40.8538, -174.824, -87.3887, 0.22 ) }
    dend_87 { pt3dadd( -40.7474, -175.449, -87.5482, 0.81 ) }
    dend_87 { pt3dadd( -40.7281, -175.518, -87.558, 0.81 ) }
    dend_87 { pt3dadd( -40.2268, -177.005, -87.7067, 0.88 ) }
    dend_87 { pt3dadd( -39.8743, -178.122, -87.8575, 0.29 ) }
    dend_87 { pt3dadd( -39.7667, -178.46, -87.914, 0.29 ) }
    dend_87 { pt3dadd( -39.51, -179.291, -88.1064, 0.66 ) }
    dend_87 { pt3dadd( -39.2323, -180.269, -88.374, 0.96 ) }
    dend_87 { pt3dadd( -39.1965, -180.437, -88.4307, 0.96 ) }
    dend_87 { pt3dadd( -39.0197, -181.809, -88.9867, 0.22 ) }
    dend_87 { pt3dadd( -38.9485, -182.246, -89.1375, 0.22 ) }
    dend_87 { pt3dadd( -38.8501, -182.763, -89.3027, 0.22 ) }
    dend_87 { pt3dadd( -38.782, -183.098, -89.3959, 0.22 ) }
    dend_87 { pt3dadd( -38.6686, -183.733, -89.5505, 0.96 ) }
    dend_87 { pt3dadd( -38.6092, -184.065, -89.6011, 1.18 ) }
    dend_87 { pt3dadd( -38.3461, -185.533, -89.6563, 0.15 ) }
    dend_87 { pt3dadd( -38.2834, -185.978, -89.6502, 0.15 ) }
    dend_87 { pt3dadd( -38.2333, -186.392, -89.6307, 0.15 ) }
    dend_87 { pt3dadd( -38.1125, -187.151, -89.5662, 0.22 ) }
    dend_87 { pt3dadd( -38.0465, -187.459, -89.5371, 0.22 ) }
    dend_87 { pt3dadd( -37.9449, -187.89, -89.501, 0.22 ) }
    dend_87 { pt3dadd( -37.7847, -188.497, -89.4601, 0.81 ) }
    dend_87 { pt3dadd( -37.6245, -189.067, -89.416, 0.96 ) }
    dend_87 { pt3dadd( -37.3067, -190.065, -89.3202, 0.29 ) }
    dend_87 { pt3dadd( -37.1213, -190.607, -89.2582, 0.22 ) }
    dend_87 { pt3dadd( -36.9611, -191.104, -89.1866, 0.22 ) }
    dend_87 { pt3dadd( -36.9491, -191.174, -89.178, 0.22 ) }
    dend_87 { pt3dadd( -36.9414, -191.795, -89.1024, 0.22 ) }
    dend_87 { pt3dadd( -36.9858, -192.336, -89.0474, 0.81 ) }
    dend_87 { pt3dadd( -37.0545, -192.794, -89.011, 1.18 ) }
    dend_87 { pt3dadd( -37.1376, -193.145, -89.01, 1.18 ) }
    dend_87 { pt3dadd( -37.6169, -194.869, -89.1486, 0.22 ) }
    dend_87 { pt3dadd( -37.7946, -195.54, -89.2393, 0.22 ) }
    dend_87 { pt3dadd( -37.9305, -196.119, -89.352, 0.22 ) }
    dend_87 { pt3dadd( -38.0089, -196.49, -89.4396, 0.22 ) }
    dend_87 { pt3dadd( -38.2477, -198.005, -89.8218, 0.52 ) }
    dend_87 { pt3dadd( -38.2995, -198.515, -89.9416, 1.03 ) }
    dend_87 { pt3dadd( -38.3408, -199.449, -90.1106, 0.29 ) }
    dend_87 { pt3dadd( -38.3373, -200.152, -90.1523, 0.29 ) }
    dend_87 { pt3dadd( -38.3233, -200.504, -90.1443, 0.37 ) }
    dend_87 { pt3dadd( -38.2581, -201.22, -90.0935, 0.22 ) }
    dend_87 { pt3dadd( -38.1465, -202.006, -90.0052, 0.22 ) }
    dend_87 { pt3dadd( -38.0646, -202.586, -89.9468, 0.22 ) }
    dend_87 { pt3dadd( -37.7945, -204.682, -89.7586, 1.47 ) }
    dend_87 { pt3dadd( -37.7579, -204.952, -89.736, 1.47 ) }
    dend_87 { pt3dadd( -37.6468, -205.739, -89.7018, 0.29 ) }
    dend_87 { pt3dadd( -37.5505, -206.34, -89.7177, 0.22 ) }
    dend_87 { pt3dadd( -37.409, -207.016, -89.7761, 0.22 ) }
    dend_87 { pt3dadd( -37.2553, -207.694, -89.911, 0.22 ) }
    dend_87 { pt3dadd( -37.2386, -207.772, -89.937, 0.22 ) }
    dend_87 { pt3dadd( -37.1061, -208.396, -90.1679, 0.59 ) }
    dend_87 { pt3dadd( -36.9466, -209.047, -90.4162, 0.96 ) }
    dend_87 { pt3dadd( -36.7658, -209.675, -90.6609, 0.96 ) }
    dend_87 { pt3dadd( -36.3557, -210.727, -91.0048, 0.22 ) }
    dend_87 { pt3dadd( -36.1346, -211.185, -91.1233, 0.22 ) }
    dend_87 { pt3dadd( -36.0255, -211.395, -91.1592, 0.22 ) }
    dend_87 { pt3dadd( -35.67, -211.987, -91.2043, 0.81 ) }
    dend_87 { pt3dadd( -35.4239, -212.367, -91.2194, 0.81 ) }
    dend_87 { pt3dadd( -34.9038, -213.178, -91.2505, 0.22 ) }
    dend_87 { pt3dadd( -34.6597, -213.541, -91.249, 0.22 ) }
    dend_87 { pt3dadd( -34.1759, -214.267, -91.2668, 0.22 ) }
    dend_87 { pt3dadd( -33.8289, -214.792, -91.3136, 0.59 ) }
    dend_87 { pt3dadd( -33.586, -215.15, -91.3864, 0.96 ) }
    dend_87 { pt3dadd( -33.2881, -215.607, -91.5072, 0.22 ) }
    dend_87 { pt3dadd( -33.0214, -216.061, -91.6663, 0.22 ) }
    dend_87 { pt3dadd( -32.9755, -216.142, -91.6956, 0.22 ) }
    dend_87 { pt3dadd( -32.7315, -216.663, -91.8677, 0.22 ) }
    dend_87 { pt3dadd( -32.5644, -217.078, -91.9481, 0.22 ) }
    dend_87 { pt3dadd( -32.2932, -217.772, -92.0072, 0.22 ) }
    dend_87 { pt3dadd( -32.2122, -218.015, -92.0083, 0.29 ) }
    dend_87 { pt3dadd( -32.1324, -218.295, -91.9984, 0.37 ) }
    dend_87 { pt3dadd( -31.9372, -219.084, -91.9514, 0.22 ) }
    dend_87 { pt3dadd( -31.7599, -220.223, -91.8717, 0.74 ) }
    dend_87 { pt3dadd( -31.698, -220.836, -91.8364, 1.4 ) }
    dend_87 { pt3dadd( -31.6816, -221.688, -91.874, 0.22 ) }
    dend_87 { pt3dadd( -31.7032, -222.109, -91.9263, 0.22 ) }
    dend_87 { pt3dadd( -31.7417, -222.484, -92.0096, 0.22 ) }
    dend_87 { pt3dadd( -31.8839, -223.416, -92.305, 1.11 ) }
    dend_87 { pt3dadd( -31.9789, -223.816, -92.4749, 1.11 ) }
    dend_87 { pt3dadd( -32.2863, -225.115, -93.1024, 0.22 ) }
    dend_87 { pt3dadd( -32.3333, -225.355, -93.2337, 0.22 ) }
    dend_87 { pt3dadd( -32.4674, -226.097, -93.6764, 0.22 ) }
    dend_87 { pt3dadd( -32.5472, -226.713, -94.0547, 0.74 ) }
    dend_87 { pt3dadd( -32.587, -227.868, -94.7919, 0.29 ) }
    dend_87 { pt3dadd( -32.5738, -228.301, -95.0806, 0.29 ) }
    dend_87 { pt3dadd( -32.5255, -228.653, -95.3339, 0.59 ) }
    dend_87 { pt3dadd( -32.3167, -229.661, -96.1475, 0.22 ) }
    dend_87 { pt3dadd( -32.1609, -230.136, -96.601, 0.22 ) }
    dend_87 { pt3dadd( -32.0114, -230.593, -97.1914, 0.22 ) }
    dend_87 { pt3dadd( -31.9018, -230.901, -97.6454, 0.22 ) }
    dend_87 { pt3dadd( -31.7664, -231.361, -98.3752, 1.25 ) }
    dend_87 { pt3dadd( -31.707, -231.584, -98.747, 1.69 ) }
    dend_87 { pt3dadd( -31.6568, -231.758, -99.0612, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_87 { pt3dadd( -31.3949, -233.043, -101.455, 0.29 ) }
    dend_87 { pt3dadd( -31.355, -233.407, -102.139, 0.29 ) }
    dend_87 { pt3dadd( -31.3514, -233.444, -102.213, 0.29 ) }
    dend_87 { pt3dadd( -31.3443, -233.605, -102.574, 0.29 ) }
    dend_87 { pt3dadd( -31.3294, -233.719, -102.867, 0.29 ) }
    dend_87 { pt3dadd( -31.3183, -233.742, -102.934, 0.29 ) }
    dend_87 { pt3dadd( -31.1593, -233.89, -103.357, 0.29 ) }
    dend_87 { pt3dadd( -31.0516, -234.109, -103.917, 0.29 ) }
    dend_87 { pt3dadd( -30.8321, -234.722, -105.252, 0.29 ) }
    dend_87 { pt3dadd( -30.7608, -234.975, -105.746, 0.29 ) }
    dend_87 { pt3dadd( -30.6955, -235.466, -106.637, 1.33 ) }
    dend_87 { pt3dadd( -30.6693, -235.732, -107.075, 1.33 ) }
    dend_87 { pt3dadd( -30.5644, -237.129, -109.14, 0.22 ) }
    dend_87 { pt3dadd( -30.5536, -237.496, -109.659, 0.22 ) }
    dend_87 { pt3dadd( -30.5449, -237.657, -109.866, 0.22 ) }
    dend_87 { pt3dadd( -30.5104, -238.52, -110.919, 0.22 ) }
    dend_87 { pt3dadd( -30.4747, -238.988, -111.481, 1.03 ) }
    dend_87 { pt3dadd( -30.4412, -239.187, -111.717, 1.18 ) }
    dend_87 { pt3dadd( -29.986, -240.638, -113.328, 0.22 ) }
    dend_87 { pt3dadd( -29.7172, -241.358, -114.154, 0.22 ) }
    dend_87 { pt3dadd( -29.5376, -241.714, -114.536, 0.22 ) }
    dend_87 { pt3dadd( -29.2837, -242.084, -114.889, 0.29 ) }
    dend_87 { pt3dadd( -29.0213, -242.398, -115.164, 0.29 ) }
    dend_87 { pt3dadd( -28.7694, -242.619, -115.316, 0.29 ) }
    dend_87 { pt3dadd( -28.4681, -242.812, -115.385, 0.37 ) }
    dend_87 { pt3dadd( -27.6026, -243.342, -115.531, 0.44 ) }
    dend_87 { pt3dadd( -27.3973, -243.481, -115.558, 0.44 ) }
    dend_87 { pt3dadd( -26.7759, -244.005, -115.643, 0.22 ) }
    dend_87 { pt3dadd( -26.4861, -244.274, -115.694, 0.22 ) }
    dend_87 { pt3dadd( -26.1427, -244.636, -115.78, 0.29 ) }
    dend_87 { pt3dadd( -25.8464, -244.985, -115.885, 0.29 ) }
    dend_87 { pt3dadd( -25.7836, -245.072, -115.919, 0.29 ) }
    dend_87 { pt3dadd( -25.32, -245.814, -116.195, 0.22 ) }
    dend_87 { pt3dadd( -25.1022, -246.238, -116.348, 0.22 ) }
    dend_87 { pt3dadd( -24.8965, -246.695, -116.488, 0.22 ) }
    dend_87 { pt3dadd( -24.8707, -246.759, -116.506, 0.22 ) }
    dend_87 { pt3dadd( -24.7825, -247.018, -116.566, 0.22 ) }
    dend_87 { pt3dadd( -24.5994, -247.601, -116.682, 0.66 ) }
    dend_87 { pt3dadd( -24.4993, -247.941, -116.742, 0.66 ) }
    dend_87 { pt3dadd( -24.2996, -248.628, -116.857, 0.15 ) }
    dend_87 { pt3dadd( -24.173, -249.04, -116.93, 0.22 ) }
    dend_87 { pt3dadd( -23.9621, -249.701, -117.05, 0.22 ) }
    dend_87 { pt3dadd( -23.7373, -250.376, -117.182, 0.29 ) }
    dend_87 { pt3dadd( -23.5954, -250.784, -117.268, 0.22 ) }
    dend_87 { pt3dadd( -23.5334, -250.949, -117.308, 0.22 ) }
    dend_87 { pt3dadd( -23.3717, -251.34, -117.422, 0.66 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 46/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -24.24, -114.714, -52.625, 0.37 ) }
    dend_86 { pt3dadd( -24.2349, -115.424, -53.9101, 0.37 ) }
    dend_86 { pt3dadd( -24.2521, -115.876, -54.7024, 0.29 ) }
    dend_86 { pt3dadd( -24.2547, -115.914, -54.7631, 0.29 ) }
    dend_86 { pt3dadd( -24.3371, -116.236, -55.277, 0.29 ) }
    dend_86 { pt3dadd( -24.3901, -116.419, -55.5494, 0.29 ) }
    dend_86 { pt3dadd( -24.6373, -117.236, -56.6667, 0.52 ) }
    dend_86 { pt3dadd( -24.6878, -117.358, -56.8129, 0.88 ) }
    dend_86 { pt3dadd( -24.7863, -117.57, -57.0349, 0.88 ) }
    dend_86 { pt3dadd( -25.4481, -118.735, -58.3096, 0.15 ) }
    dend_86 { pt3dadd( -25.622, -119.021, -58.6223, 0.15 ) }
    dend_86 { pt3dadd( -25.7764, -119.278, -58.8897, 0.15 ) }
    dend_86 { pt3dadd( -26.1025, -119.87, -59.4667, 0.81 ) }
    dend_86 { pt3dadd( -26.1733, -120.006, -59.594, 0.81 ) }
    dend_86 { pt3dadd( -26.8756, -121.512, -60.9153, 0.22 ) }
    dend_86 { pt3dadd( -27.0134, -121.898, -61.1978, 0.22 ) }
    dend_86 { pt3dadd( -27.1316, -122.299, -61.4733, 0.22 ) }
    dend_86 { pt3dadd( -27.173, -122.522, -61.6069, 0.59 ) }
    dend_86 { pt3dadd( -27.2357, -123.548, -62.0873, 0.15 ) }
    dend_86 { pt3dadd( -27.2215, -123.992, -62.2345, 0.15 ) }
    dend_86 { pt3dadd( -27.1135, -124.735, -62.3347, 0.66 ) }
    dend_86 { pt3dadd( -27.0774, -125.041, -62.3793, 0.96 ) }
    dend_86 { pt3dadd( -26.9905, -125.731, -62.4982, 0.22 ) }
    dend_86 { pt3dadd( -26.9821, -125.795, -62.5098, 0.22 ) }
    dend_86 { pt3dadd( -26.913, -126.249, -62.5922, 0.22 ) }
    dend_86 { pt3dadd( -26.8848, -126.537, -62.6705, 0.22 ) }
    dend_86 { pt3dadd( -26.8536, -127.097, -62.865, 0.22 ) }
    dend_86 { pt3dadd( -26.8096, -127.6, -63.0528, 0.22 ) }
    dend_86 { pt3dadd( -26.7761, -127.852, -63.1507, 0.66 ) }
    dend_86 { pt3dadd( -26.7407, -128.091, -63.2579, 0.66 ) }
    dend_86 { pt3dadd( -26.6383, -128.61, -63.5189, 0.29 ) }
    dend_86 { pt3dadd( -26.577, -128.946, -63.7128, 0.29 ) }
    dend_86 { pt3dadd( -26.5389, -129.228, -63.8674, 0.66 ) }
    dend_86 { pt3dadd( -26.521, -129.464, -63.9897, 0.66 ) }
    dend_86 { pt3dadd( -26.4932, -130.089, -64.2888, 1.11 ) }
    dend_86 { pt3dadd( -26.4744, -130.66, -64.5391, 0.88 ) }
    dend_86 { pt3dadd( -26.4674, -131.65, -64.9635, 0.22 ) }
    dend_86 { pt3dadd( -26.4771, -132.261, -65.216, 0.22 ) }
    dend_86 { pt3dadd( -26.4797, -132.827, -65.4261, 0.22 ) }
    dend_86 { pt3dadd( -26.4743, -133.192, -65.5445, 0.22 ) }
    dend_86 { pt3dadd( -26.4542, -133.646, -65.6592, 0.81 ) }
    dend_86 { pt3dadd( -26.4113, -134.202, -65.7788, 0.81 ) }
    dend_86 { pt3dadd( -26.3535, -134.598, -65.8464, 0.81 ) }
    dend_86 { pt3dadd( -26.2244, -135.315, -65.9793, 0.22 ) }
    dend_86 { pt3dadd( -26.1724, -135.606, -66.0248, 0.22 ) }
    dend_86 { pt3dadd( -26.0781, -136.073, -66.0912, 0.22 ) }
    dend_86 { pt3dadd( -25.9877, -136.453, -66.1416, 0.81 ) }
    dend_86 { pt3dadd( -25.9019, -136.802, -66.1762, 0.81 ) }
    dend_86 { pt3dadd( -25.8327, -137.124, -66.2049, 0.81 ) }
    dend_86 { pt3dadd( -25.6956, -137.848, -66.268, 0.22 ) }
    dend_86 { pt3dadd( -25.603, -138.333, -66.3108, 0.22 ) }
    dend_86 { pt3dadd( -25.4861, -138.995, -66.3616, 0.22 ) }
    dend_86 { pt3dadd( -25.4134, -139.503, -66.3934, 0.22 ) }
    dend_86 { pt3dadd( -25.3559, -139.959, -66.4182, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_86 { pt3dadd( -25.3403, -140.1, -66.425, 0.59 ) }
    dend_86 { pt3dadd( -25.3309, -140.197, -66.4292, 0.59 ) }
    dend_86 { pt3dadd( -25.308, -140.474, -66.4397, 0.81 ) }
    dend_86 { pt3dadd( -25.2551, -141.028, -66.5311, 0.22 ) }
    dend_86 { pt3dadd( -25.2227, -141.226, -66.5908, 0.22 ) }
    dend_86 { pt3dadd( -25.1542, -141.549, -66.712, 0.59 ) }
    dend_86 { pt3dadd( -25.0933, -141.796, -66.8136, 0.59 ) }
    dend_86 { pt3dadd( -25.0648, -141.901, -66.8599, 0.59 ) }
    dend_86 { pt3dadd( -24.8183, -142.705, -67.2458, 0.22 ) }
    dend_86 { pt3dadd( -24.6803, -143.118, -67.4532, 0.22 ) }
    dend_86 { pt3dadd( -24.5561, -143.56, -67.7086, 0.22 ) }
    dend_86 { pt3dadd( -24.4894, -143.831, -67.8837, 0.44 ) }
    dend_86 { pt3dadd( -24.4774, -143.881, -67.9195, 0.44 ) }
    dend_86 { pt3dadd( -24.441, -144.033, -68.0332, 0.74 ) }
    dend_86 { pt3dadd( -24.3851, -144.248, -68.2053, 0.74 ) }
    dend_86 { pt3dadd( -24.2301, -145.007, -68.7876, 0.15 ) }
    dend_86 { pt3dadd( -24.1959, -145.172, -68.8843, 0.15 ) }
    dend_86 { pt3dadd( -24.1634, -145.331, -68.9484, 0.15 ) }
    dend_86 { pt3dadd( -24.0838, -145.7, -69.0632, 0.15 ) }
    dend_86 { pt3dadd( -24.0271, -145.97, -69.1242, 0.66 ) }
    dend_86 { pt3dadd( -23.9046, -146.649, -69.2442, 1.03 ) }
    dend_86 { pt3dadd( -23.7373, -147.63, -69.3665, 0.22 ) }
    dend_86 { pt3dadd( -23.6195, -148.447, -69.4681, 0.22 ) }
    dend_86 { pt3dadd( -23.5872, -148.69, -69.5014, 0.52 ) }
    dend_86 { pt3dadd( -23.5702, -148.971, -69.5709, 0.59 ) }
    dend_86 { pt3dadd( -23.5864, -149.617, -69.8246, 0.15 ) }
    dend_86 { pt3dadd( -23.6222, -149.943, -70.0189, 0.15 ) }
    dend_86 { pt3dadd( -23.6395, -150.014, -70.0817, 0.52 ) }
    dend_86 { pt3dadd( -23.708, -150.242, -70.3074, 0.74 ) }
    dend_86 { pt3dadd( -24.0687, -151.288, -71.3368, 0.15 ) }
    dend_86 { pt3dadd( -24.191, -151.625, -71.6589, 0.15 ) }
    dend_86 { pt3dadd( -24.24, -151.76, -71.784, 0.59 ) }
    dend_86 { pt3dadd( -24.5813, -152.682, -72.6244, 0.22 ) }
    dend_86 { pt3dadd( -24.6885, -152.993, -72.8837, 0.22 ) }
    dend_86 { pt3dadd( -24.8342, -153.47, -73.2375, 0.66 ) }
    dend_86 { pt3dadd( -24.886, -153.713, -73.3837, 0.88 ) }
    dend_86 { pt3dadd( -24.9331, -153.976, -73.5224, 0.88 ) }
    dend_86 { pt3dadd( -25.0592, -154.978, -73.9786, 0.15 ) }
    dend_86 { pt3dadd( -25.0974, -155.421, -74.162, 0.15 ) }
    dend_86 { pt3dadd( -25.112, -155.605, -74.2446, 0.44 ) }
    dend_86 { pt3dadd( -25.1283, -155.93, -74.397, 0.22 ) }
    dend_86 { pt3dadd( -25.1472, -156.254, -74.5485, 0.15 ) }
    dend_86 { pt3dadd( -25.1401, -156.74, -74.7343, 0.15 ) }
    dend_86 { pt3dadd( -25.0445, -157.628, -75.0686, 0.88 ) }
    dend_86 { pt3dadd( -25.0153, -157.8, -75.1446, 0.88 ) }
    dend_86 { pt3dadd( -24.9527, -158.051, -75.2656, 0.88 ) }
    dend_86 { pt3dadd( -24.9222, -158.139, -75.3124, 0.88 ) }
    dend_86 { pt3dadd( -24.4827, -159.132, -75.8475, 0.15 ) }
    dend_86 { pt3dadd( -24.2015, -159.68, -76.1292, 0.22 ) }
    dend_86 { pt3dadd( -24.0423, -159.962, -76.2649, 0.22 ) }
    dend_86 { pt3dadd( -23.7698, -160.467, -76.5065, 0.22 ) }
    dend_86 { pt3dadd( -23.6618, -160.692, -76.6119, 0.22 ) }
    dend_86 { pt3dadd( -23.3822, -161.328, -76.9086, 0.15 ) }
    dend_86 { pt3dadd( -23.3119, -161.506, -76.9914, 0.15 ) }
    dend_86 { pt3dadd( -23.1622, -161.898, -77.1489, 0.74 ) }
    dend_86 { pt3dadd( -22.9785, -162.414, -77.3558, 0.74 ) }
    dend_86 { pt3dadd( -22.7908, -162.972, -77.5744, 0.07 ) }
    dend_86 { pt3dadd( -22.6921, -163.273, -77.6892, 0.07 ) }
    dend_86 { pt3dadd( -22.6006, -163.588, -77.817, 0.81 ) }
    dend_86 { pt3dadd( -22.487, -163.959, -77.958, 0.81 ) }
    dend_86 { pt3dadd( -22.2956, -164.591, -78.1554, 0.22 ) }
    dend_86 { pt3dadd( -22.1285, -165.148, -78.3016, 0.22 ) }
    dend_86 { pt3dadd( -22.0556, -165.388, -78.3531, 0.22 ) }
    dend_86 { pt3dadd( -21.843, -166.08, -78.4867, 0.81 ) }
    dend_86 { pt3dadd( -21.6336, -166.775, -78.5991, 0.88 ) }
    dend_86 { pt3dadd( -21.4277, -167.456, -78.6884, 0.22 ) }
    dend_86 { pt3dadd( -21.3002, -167.894, -78.7276, 0.22 ) }
    dend_86 { pt3dadd( -21.1863, -168.285, -78.7546, 0.22 ) }
    dend_86 { pt3dadd( -21.0996, -168.559, -78.7732, 0.22 ) }
    dend_86 { pt3dadd( -20.9387, -168.997, -78.811, 0.22 ) }
    dend_86 { pt3dadd( -20.9183, -169.048, -78.8148, 0.22 ) }
    dend_86 { pt3dadd( -20.7871, -169.35, -78.8408, 0.22 ) }
    dend_86 { pt3dadd( -20.7579, -169.416, -78.8459, 0.22 ) }
    dend_86 { pt3dadd( -20.6093, -169.705, -78.8499, 0.22 ) }
    dend_86 { pt3dadd( -20.2853, -170.291, -78.8525, 0.44 ) }
    dend_86 { pt3dadd( -19.6927, -171.301, -78.8844, 0.22 ) }
    dend_86 { pt3dadd( -19.3848, -171.82, -78.9185, 0.59 ) }
    dend_86 { pt3dadd( -19.2772, -172.0, -78.9342, 0.88 ) }
    dend_86 { pt3dadd( -18.5557, -173.206, -79.0619, 0.22 ) }
    dend_86 { pt3dadd( -18.1785, -173.832, -79.15, 0.22 ) }
    dend_86 { pt3dadd( -17.7627, -174.517, -79.2836, 0.22 ) }
    dend_86 { pt3dadd( -17.4281, -175.083, -79.429, 0.74 ) }
    dend_86 { pt3dadd( -17.3967, -175.136, -79.4421, 0.74 ) }
    dend_86 { pt3dadd( -17.2603, -175.388, -79.5135, 0.74 ) }
    dend_86 { pt3dadd( -17.0365, -175.869, -79.7157, 0.29 ) }
    dend_86 { pt3dadd( -16.8085, -176.37, -79.9542, 0.29 ) }
    dend_86 { pt3dadd( -16.7232, -176.591, -80.0957, 0.29 ) }
    dend_86 { pt3dadd( -16.6245, -176.889, -80.3268, 0.52 ) }
    dend_86 { pt3dadd( -16.5639, -177.111, -80.5095, 0.96 ) }
    dend_86 { pt3dadd( -16.3698, -177.921, -81.2111, 0.22 ) }
    dend_86 { pt3dadd( -16.3591, -177.974, -81.2608, 0.22 ) }
    dend_86 { pt3dadd( -16.2206, -178.71, -82.0289, 0.59 ) }
    dend_86 { pt3dadd( -16.1946, -178.846, -82.183, 0.59 ) }
    dend_86 { pt3dadd( -16.1173, -179.344, -82.7841, 0.22 ) }
    dend_86 { pt3dadd( -16.0904, -179.62, -83.1157, 0.52 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 95/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -26.2167, -71.9421, 51.9971, 0.22 ) }
    dend_83 { pt3dadd( -28.2057, -78.0743, 60.188, 0.22 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 97/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -26.2167, -71.9421, 51.9971, 0.29 ) }
    dend_80 { pt3dadd( -30.8681, -78.0371, 60.1162, 0.22 ) }
    dend_80 { pt3dadd( -35.67, -85.4658, 66.9898, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 0/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -42.5511, 24.2636, 83.5439, 0.29 ) }
    dend_70 { pt3dadd( -48.2983, 18.2439, 93.2964, 0.29 ) }
    dend_70 { pt3dadd( -56.6421, 14.5387, 102.243, 0.29 ) }
    dend_70 { pt3dadd( -66.3884, 12.7983, 110.294, 0.29 ) }
    dend_70 { pt3dadd( -76.7808, 13.2087, 117.674, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 5/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -42.5511, 24.2636, 83.5439, 0.44 ) }
    dend_69 { pt3dadd( -50.8381, 19.0009, 91.6026, 0.29 ) }
    dend_69 { pt3dadd( -59.2991, 12.9383, 98.9119, 0.29 ) }
    dend_69 { pt3dadd( -68.1243, 6.09104, 105.037, 0.29 ) }
    dend_69 { pt3dadd( -77.6595, 1.32904, 111.929, 0.29 ) }
    dend_69 { pt3dadd( -87.1772, -2.49339, 119.378, 0.29 ) }
    dend_69 { pt3dadd( -95.8117, -6.26461, 127.856, 0.29 ) }
    dend_69 { pt3dadd( -103.45, -10.1329, 137.203, 0.29 ) }
    dend_69 { pt3dadd( -111.116, -14.2872, 146.408, 0.29 ) }
    dend_69 { pt3dadd( -116.119, -19.1573, 157.006, 0.29 ) }
    dend_69 { pt3dadd( -120.646, -25.3873, 167.129, 0.29 ) }
    dend_69 { pt3dadd( -124.342, -33.566, 176.215, 0.29 ) }
    dend_69 { pt3dadd( -126.803, -43.2473, 184.252, 0.29 ) }
    dend_69 { pt3dadd( -128.173, -53.7223, 191.568, 0.29 ) }
    dend_69 { pt3dadd( -127.905, -65.7547, 196.252, 0.29 ) }
    dend_69 { pt3dadd( -128.531, -77.0028, 202.498, 0.29 ) }
    dend_69 { pt3dadd( -131.064, -88.5377, 207.68, 0.29 ) }
    dend_69 { pt3dadd( -132.278, -100.216, 213.026, 0.29 ) }
    dend_69 { pt3dadd( -133.038, -111.799, 218.643, 0.29 ) }
    dend_69 { pt3dadd( -134.222, -122.717, 225.349, 0.29 ) }
    dend_69 { pt3dadd( -135.381, -133.819, 231.766, 0.29 ) }
    dend_69 { pt3dadd( -136.056, -145.428, 237.344, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 27/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -32.3305, 49.7318, -57.0615, 0.22 ) }
    dend_52 { pt3dadd( -32.8856, 51.0965, -59.7756, 0.22 ) }
    dend_52 { pt3dadd( -32.957, 51.2768, -60.1214, 0.22 ) }
    dend_52 { pt3dadd( -33.0494, 51.54, -60.6006, 0.22 ) }
    dend_52 { pt3dadd( -33.1839, 51.9221, -61.2573, 0.22 ) }
    dend_52 { pt3dadd( -33.5675, 53.21, -63.3903, 0.22 ) }
    dend_52 { pt3dadd( -33.6345, 53.4553, -63.7855, 0.52 ) }
    dend_52 { pt3dadd( -33.6598, 53.5415, -63.9172, 0.74 ) }
    dend_52 { pt3dadd( -33.6978, 53.7223, -64.1942, 0.74 ) }
    dend_52 { pt3dadd( -33.7049, 53.9678, -64.5361, 0.88 ) }
    dend_52 { pt3dadd( -33.5265, 55.3906, -66.0939, 0.22 ) }
    dend_52 { pt3dadd( -33.5137, 55.4692, -66.1473, 0.37 ) }
    dend_52 { pt3dadd( -33.4955, 55.5697, -66.218, 0.37 ) }
    dend_52 { pt3dadd( -33.4377, 55.8654, -66.4145, 0.37 ) }
    dend_52 { pt3dadd( -33.2703, 56.6707, -66.8914, 0.15 ) }
    dend_52 { pt3dadd( -33.1561, 57.1385, -67.1094, 0.15 ) }
    dend_52 { pt3dadd( -33.1007, 57.3762, -67.2739, 0.15 ) }
    dend_52 { pt3dadd( -32.9672, 57.9875, -67.8582, 0.29 ) }
    dend_52 { pt3dadd( -32.906, 58.2196, -68.1072, 0.59 ) }
    dend_52 { pt3dadd( -32.8541, 58.3978, -68.3136, 1.03 ) }
    dend_52 { pt3dadd( -32.8101, 58.5295, -68.4771, 1.03 ) }
    dend_52 { pt3dadd( -31.9843, 60.3658, -70.7109, 0.59 ) }
    dend_52 { pt3dadd( -31.9501, 60.43, -70.7859, 0.59 ) }
    dend_52 { pt3dadd( -31.6174, 60.9711, -71.3666, 0.22 ) }
    dend_52 { pt3dadd( -31.4519, 61.216, -71.6511, 0.29 ) }
    dend_52 { pt3dadd( -31.2573, 61.48, -71.9686, 0.29 ) }
    dend_52 { pt3dadd( -30.9514, 61.8473, -72.3862, 0.66 ) }
    dend_52 { pt3dadd( -30.8494, 61.9639, -72.4871, 0.66 ) }
    dend_52 { pt3dadd( -30.7431, 62.0904, -72.6113, 0.74 ) }
    dend_52 { pt3dadd( -30.0087, 62.979, -73.563, 0.74 ) }
    dend_52 { pt3dadd( -29.9695, 63.0277, -73.6503, 0.74 ) }
    dend_52 { pt3dadd( -29.3306, 63.8317, -75.0807, 0.22 ) }
    dend_52 { pt3dadd( -29.086, 64.1444, -75.6234, 0.22 ) }
    dend_52 { pt3dadd( -28.8312, 64.4834, -76.1667, 0.44 ) }
    dend_52 { pt3dadd( -28.678, 64.7007, -76.4918, 0.66 ) }
    dend_52 { pt3dadd( -27.0718, 67.1116, -79.8198, 0.81 ) }
    dend_52 { pt3dadd( -26.4534, 68.2689, -81.7206, 0.29 ) }
    dend_52 { pt3dadd( -26.4086, 68.4211, -82.0199, 0.22 ) }
    dend_52 { pt3dadd( -26.368, 68.6255, -82.4449, 0.22 ) }
    dend_52 { pt3dadd( -26.3552, 68.7074, -82.626, 0.22 ) }
    dend_52 { pt3dadd( -26.3509, 68.7448, -82.71, 0.22 ) }
    dend_52 { pt3dadd( -26.2661, 69.9787, -85.479, 0.44 ) }
    dend_52 { pt3dadd( -26.2847, 70.3628, -86.3988, 0.59 ) }
    dend_52 { pt3dadd( -26.2978, 70.4775, -86.6725, 0.74 ) }
    dend_52 { pt3dadd( -26.4592, 71.6045, -89.7193, 0.29 ) }
    dend_52 { pt3dadd( -26.4756, 71.7008, -89.9932, 0.59 ) }
    dend_52 { pt3dadd( -26.4911, 71.7788, -90.2157, 0.66 ) }
    dend_52 { pt3dadd( -26.7401, 72.7439, -92.9882, 0.07 ) }
    dend_52 { pt3dadd( -26.7959, 72.9218, -93.5232, 0.07 ) }
    dend_52 { pt3dadd( -27.4046, 74.4607, -98.1196, 0.66 ) }
    dend_52 { pt3dadd( -27.4188, 74.4905, -98.2084, 0.88 ) }
    dend_52 { pt3dadd( -27.46, 74.5778, -98.4668, 0.88 ) }
    dend_52 { pt3dadd( -27.4902, 74.6426, -98.6502, 1.11 ) }
    dend_52 { pt3dadd( -28.0505, 75.8569, -101.883, 0.29 ) }
    dend_52 { pt3dadd( -28.1609, 76.0773, -102.419, 0.29 ) }
    dend_52 { pt3dadd( -28.1898, 76.126, -102.507, 0.29 ) }
    dend_52 { pt3dadd( -28.512, 76.5861, -103.406, 0.15 ) }
    dend_52 { pt3dadd( -28.6678, 76.78, -103.806, 0.15 ) }
    dend_52 { pt3dadd( -28.7143, 76.8308, -103.907, 0.15 ) }
    dend_52 { pt3dadd( -29.4852, 77.4965, -105.213, 0.66 ) }
    dend_52 { pt3dadd( -29.7322, 77.6949, -105.607, 0.96 ) }
    dend_52 { pt3dadd( -30.8063, 78.5241, -107.288, 0.22 ) }
    dend_52 { pt3dadd( -30.8802, 78.5771, -107.396, 0.22 ) }
    dend_52 { pt3dadd( -31.2041, 78.8034, -107.857, 0.22 ) }
    dend_52 { pt3dadd( -31.2557, 78.8377, -107.924, 0.22 ) }
    dend_52 { pt3dadd( -31.5182, 79.023, -108.356, 0.22 ) }
    dend_52 { pt3dadd( -32.1508, 79.5087, -109.538, 0.52 ) }
    dend_52 { pt3dadd( -32.2976, 79.6273, -109.822, 0.81 ) }
    dend_52 { pt3dadd( -32.3562, 79.677, -109.949, 1.03 ) }
    dend_52 { pt3dadd( -32.3987, 79.719, -110.064, 1.03 ) }
    dend_52 { pt3dadd( -33.529, 80.9127, -113.463, 0.37 ) }
    dend_52 { pt3dadd( -33.778, 81.1943, -114.279, 0.37 ) }
    dend_52 { pt3dadd( -33.8684, 81.2982, -114.58, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_52 { pt3dadd( -34.1463, 81.6333, -115.564, 0.52 ) }
    dend_52 { pt3dadd( -34.6256, 82.2402, -117.333, 0.74 ) }
    dend_52 { pt3dadd( -34.6663, 82.3083, -117.516, 0.81 ) }
    dend_52 { pt3dadd( -34.6999, 82.3791, -117.696, 0.88 ) }
    dend_52 { pt3dadd( -34.7133, 82.4084, -117.783, 0.88 ) }
    dend_52 { pt3dadd( -34.7338, 82.4469, -117.905, 1.03 ) }
    dend_52 { pt3dadd( -34.7537, 82.4762, -118.004, 1.03 ) }
    dend_52 { pt3dadd( -35.1494, 83.0779, -120.946, 0.29 ) }
    dend_52 { pt3dadd( -35.2643, 83.2521, -121.982, 0.29 ) }
    dend_52 { pt3dadd( -35.3472, 83.3714, -122.793, 0.59 ) }
    dend_52 { pt3dadd( -35.3472, 83.3714, -122.793, 0.59 ) }
    dend_52 { pt3dadd( -35.3628, 83.391, -122.951, 0.59 ) }
    dend_52 { pt3dadd( -35.9269, 83.9957, -128.339, 0.07 ) }
    dend_52 { pt3dadd( -35.9488, 84.0137, -128.589, 0.07 ) }
    dend_52 { pt3dadd( -35.9577, 84.0255, -128.729, 0.07 ) }
    dend_52 { pt3dadd( -35.9659, 84.0363, -128.85, 0.59 ) }
    dend_52 { pt3dadd( -35.9589, 84.0714, -129.203, 0.96 ) }
    dend_52 { pt3dadd( -35.9321, 84.1093, -129.549, 1.11 ) }
    dend_52 { pt3dadd( -35.266, 84.5993, -134.241, 0.37 ) }
    dend_52 { pt3dadd( -35.1822, 84.648, -134.727, 0.59 ) }
    dend_52 { pt3dadd( -35.1065, 84.6819, -135.087, 0.74 ) }
    dend_52 { pt3dadd( -32.7443, 85.5005, -144.841, 0.29 ) }
    dend_52 { pt3dadd( -32.6462, 85.5274, -145.209, 0.29 ) }
    dend_52 { pt3dadd( -32.4658, 85.5701, -145.869, 0.29 ) }
    dend_52 { pt3dadd( -32.4316, 85.5783, -145.998, 0.29 ) }
    dend_52 { pt3dadd( -32.2146, 85.6279, -146.787, 0.29 ) }
    dend_52 { pt3dadd( -31.9735, 85.6364, -147.442, 0.29 ) }
    dend_52 { pt3dadd( -31.2461, 85.4511, -148.15, 0.52 ) }
    dend_52 { pt3dadd( -31.1739, 85.432, -148.227, 0.81 ) }
    dend_52 { pt3dadd( -31.1151, 85.4166, -148.296, 0.81 ) }
    dend_52 { pt3dadd( -30.857, 85.3483, -148.616, 1.11 ) }
    dend_52 { pt3dadd( -28.8346, 84.7938, -151.328, 0.22 ) }
    dend_52 { pt3dadd( -28.5111, 84.7077, -151.749, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 33/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -32.3305, 49.7318, -57.0615, 0.22 ) }
    dend_49 { pt3dadd( -33.6675, 49.0539, -60.304, 0.22 ) }
    dend_49 { pt3dadd( -33.8323, 48.9753, -60.6622, 0.22 ) }
    dend_49 { pt3dadd( -33.9675, 48.9128, -60.9408, 0.74 ) }
    dend_49 { pt3dadd( -34.0856, 48.8577, -61.1729, 1.03 ) }
    dend_49 { pt3dadd( -34.8863, 48.4854, -62.676, 0.22 ) }
    dend_49 { pt3dadd( -35.071, 48.3974, -63.0122, 0.22 ) }
    dend_49 { pt3dadd( -35.1567, 48.364, -63.1036, 0.22 ) }
    dend_49 { pt3dadd( -35.1915, 48.3496, -63.1433, 0.22 ) }
    dend_49 { pt3dadd( -35.3076, 48.2987, -63.2808, 0.44 ) }
    dend_49 { pt3dadd( -35.3851, 48.2615, -63.3679, 0.44 ) }
    dend_49 { pt3dadd( -35.4759, 48.2143, -63.4519, 0.44 ) }
    dend_49 { pt3dadd( -35.8262, 48.1121, -63.9574, 0.15 ) }
    dend_49 { pt3dadd( -35.9495, 48.0941, -64.1441, 0.15 ) }
    dend_49 { pt3dadd( -36.3879, 48.0963, -64.9431, 0.81 ) }
    dend_49 { pt3dadd( -36.6262, 48.1067, -65.4031, 1.18 ) }
    dend_49 { pt3dadd( -36.6853, 48.1106, -65.5211, 1.33 ) }
    dend_49 { pt3dadd( -37.6206, 48.2032, -67.4157, 0.59 ) }
    dend_49 { pt3dadd( -37.8078, 48.2288, -67.8037, 0.74 ) }
    dend_49 { pt3dadd( -38.7503, 48.4001, -69.7483, 0.29 ) }
    dend_49 { pt3dadd( -38.9066, 48.4334, -70.0701, 0.29 ) }
    dend_49 { pt3dadd( -38.9451, 48.4431, -70.1467, 0.37 ) }
    dend_49 { pt3dadd( -39.0154, 48.4606, -70.2693, 0.37 ) }
    dend_49 { pt3dadd( -39.0933, 48.4756, -70.3621, 0.37 ) }
    dend_49 { pt3dadd( -39.3469, 48.542, -70.6009, 0.37 ) }
    dend_49 { pt3dadd( -39.7685, 48.6947, -70.7109, 0.15 ) }
    dend_49 { pt3dadd( -40.1216, 48.8094, -70.8661, 0.15 ) }
    dend_49 { pt3dadd( -40.3629, 48.8555, -70.9941, 0.22 ) }
    dend_49 { pt3dadd( -40.4179, 48.8629, -71.0352, 0.29 ) }
    dend_49 { pt3dadd( -40.63, 48.8796, -71.2313, 0.29 ) }
    dend_49 { pt3dadd( -40.735, 48.8963, -71.4526, 0.29 ) }
    dend_49 { pt3dadd( -41.0756, 48.9658, -72.4211, 0.88 ) }
    dend_49 { pt3dadd( -41.1814, 48.9918, -72.7716, 0.96 ) }
    dend_49 { pt3dadd( -41.3823, 49.0468, -73.4484, 1.11 ) }
    dend_49 { pt3dadd( -41.3823, 49.0468, -73.4484, 1.11 ) }
    dend_49 { pt3dadd( -41.9416, 49.2004, -76.0025, 0.52 ) }
    dend_49 { pt3dadd( -42.0087, 49.2159, -76.3692, 0.66 ) }
    dend_49 { pt3dadd( -42.0974, 49.2334, -76.9054, 0.66 ) }
    dend_49 { pt3dadd( -42.3328, 49.26, -78.4106, 0.88 ) }
    dend_49 { pt3dadd( -42.3579, 49.2587, -78.5615, 0.88 ) }
    dend_49 { pt3dadd( -43.207, 49.1882, -83.1281, 0.96 ) }
    dend_49 { pt3dadd( -43.2441, 49.1812, -83.316, 1.11 ) }
    dend_49 { pt3dadd( -43.269, 49.1783, -83.4354, 1.11 ) }
    dend_49 { pt3dadd( -43.4539, 49.1603, -84.2822, 1.18 ) }
    dend_49 { pt3dadd( -43.5127, 49.1584, -84.5434, 1.33 ) }
    dend_49 { pt3dadd( -43.8744, 49.1872, -85.9841, 0.37 ) }
    dend_49 { pt3dadd( -43.9164, 49.1968, -86.1089, 0.37 ) }
    dend_49 { pt3dadd( -44.6008, 49.4012, -88.5134, 0.37 ) }
    dend_49 { pt3dadd( -44.718, 49.4298, -88.9393, 0.74 ) }
    dend_49 { pt3dadd( -44.7671, 49.4373, -89.1244, 0.74 ) }
    dend_49 { pt3dadd( -45.2878, 49.4787, -91.1891, 0.81 ) }
    dend_49 { pt3dadd( -45.3724, 49.4777, -91.5382, 0.81 ) }
    dend_49 { pt3dadd( -46.2075, 49.3447, -94.9005, 0.29 ) }
    dend_49 { pt3dadd( -46.3498, 49.3003, -95.4357, 0.29 ) }
    dend_49 { pt3dadd( -46.4565, 49.2583, -95.8097, 0.74 ) }
    dend_49 { pt3dadd( -46.4937, 49.2404, -95.9247, 1.03 ) }
    dend_49 { pt3dadd( -46.5551, 49.2061, -96.0826, 1.33 ) }
    dend_49 { pt3dadd( -47.6858, 48.5566, -98.6414, 0.29 ) }
    dend_49 { pt3dadd( -47.854, 48.45, -98.9828, 0.29 ) }
    dend_49 { pt3dadd( -47.9307, 48.4005, -99.1544, 0.29 ) }
    dend_49 { pt3dadd( -48.2098, 48.2168, -99.7887, 0.66 ) }
    dend_49 { pt3dadd( -48.2799, 48.1644, -99.9516, 0.81 ) }
    dend_49 { pt3dadd( -48.4068, 48.0608, -100.256, 0.66 ) }
    dend_49 { pt3dadd( -49.2253, 47.1624, -102.322, 0.88 ) }
    dend_49 { pt3dadd( -49.2611, 47.1156, -102.431, 1.11 ) }
    dend_49 { pt3dadd( -49.3172, 47.0284, -102.633, 1.55 ) }
    dend_49 { pt3dadd( -49.3685, 46.9162, -102.878, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 0/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -60.5958, 197.091, -161.854, 0.29 ) }
    dend_47 { pt3dadd( -60.8645, 197.949, -162.472, 0.29 ) }
    dend_47 { pt3dadd( -61.0799, 198.563, -162.961, 0.81 ) }
    dend_47 { pt3dadd( -61.504, 199.6, -163.849, 0.29 ) }
    dend_47 { pt3dadd( -61.5498, 199.702, -163.94, 0.22 ) }
    dend_47 { pt3dadd( -61.5978, 199.784, -164.039, 0.22 ) }
    dend_47 { pt3dadd( -61.9011, 200.177, -164.626, 0.52 ) }
    dend_47 { pt3dadd( -61.9881, 200.235, -164.84, 0.81 ) }
    dend_47 { pt3dadd( -62.0816, 200.27, -165.085, 0.29 ) }
    dend_47 { pt3dadd( -62.104, 200.276, -165.145, 0.29 ) }
    dend_47 { pt3dadd( -62.5812, 200.411, -166.435, 0.22 ) }
    dend_47 { pt3dadd( -62.7176, 200.456, -166.8, 0.22 ) }
    dend_47 { pt3dadd( -63.3003, 200.693, -168.496, 0.37 ) }
    dend_47 { pt3dadd( -63.3547, 200.747, -168.725, 0.66 ) }
    dend_47 { pt3dadd( -63.3723, 200.772, -168.818, 0.66 ) }
    dend_47 { pt3dadd( -63.3898, 200.8, -168.905, 0.66 ) }
    dend_47 { pt3dadd( -63.4218, 200.866, -169.077, 0.66 ) }
    dend_47 { pt3dadd( -63.5579, 201.191, -169.86, 0.66 ) }
    dend_47 { pt3dadd( -63.7183, 201.84, -171.651, 0.44 ) }
    dend_47 { pt3dadd( -63.736, 201.95, -171.978, 0.44 ) }
    dend_47 { pt3dadd( -63.7611, 202.175, -172.674, 0.52 ) }
    dend_47 { pt3dadd( -63.7693, 202.298, -173.057, 0.59 ) }
    dend_47 { pt3dadd( -63.7642, 202.4, -173.375, 0.74 ) }
    dend_47 { pt3dadd( -63.622, 203.458, -176.658, 0.22 ) }
    dend_47 { pt3dadd( -63.6112, 203.505, -176.804, 0.66 ) }
    dend_47 { pt3dadd( -63.6051, 203.525, -176.866, 0.66 ) }
    dend_47 { pt3dadd( -63.2426, 204.502, -179.882, 0.29 ) }
    dend_47 { pt3dadd( -63.1789, 204.693, -180.443, 0.52 ) }
    dend_47 { pt3dadd( -63.1678, 204.725, -180.539, 0.66 ) }
    dend_47 { pt3dadd( -63.1289, 204.853, -180.853, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -60.5958, 197.091, -161.854, 0.15 ) }
    dend_44 { pt3dadd( -61.8225, 197.424, -160.561, 0.15 ) }
    dend_44 { pt3dadd( -61.8857, 197.445, -160.521, 0.15 ) }
    dend_44 { pt3dadd( -62.2932, 197.605, -160.397, 0.44 ) }
    dend_44 { pt3dadd( -62.5952, 197.736, -160.346, 0.15 ) }
    dend_44 { pt3dadd( -62.8092, 197.868, -160.321, 0.15 ) }
    dend_44 { pt3dadd( -63.1449, 198.167, -160.281, 0.15 ) }
    dend_44 { pt3dadd( -63.5277, 198.644, -160.37, 0.88 ) }
    dend_44 { pt3dadd( -63.7489, 198.971, -160.448, 1.03 ) }
    dend_44 { pt3dadd( -64.0656, 199.527, -160.592, 0.52 ) }
    dend_44 { pt3dadd( -64.6035, 200.579, -160.873, 0.22 ) }
    dend_44 { pt3dadd( -65.0719, 201.525, -161.124, 0.22 ) }
    dend_44 { pt3dadd( -65.688, 202.711, -161.543, 0.22 ) }
    dend_44 { pt3dadd( -65.7991, 202.909, -161.624, 0.22 ) }
    dend_44 { pt3dadd( -66.151, 203.467, -161.898, 0.81 ) }
    dend_44 { pt3dadd( -66.4357, 203.853, -162.126, 1.33 ) }
    dend_44 { pt3dadd( -66.7715, 204.218, -162.386, 0.88 ) }
    dend_44 { pt3dadd( -68.0878, 205.33, -163.245, 0.22 ) }
    dend_44 { pt3dadd( -68.3274, 205.508, -163.369, 0.22 ) }
    dend_44 { pt3dadd( -68.6254, 205.709, -163.529, 0.22 ) }
    dend_44 { pt3dadd( -68.7135, 205.761, -163.663, 0.22 ) }
    dend_44 { pt3dadd( -69.1106, 205.956, -164.489, 0.81 ) }
    dend_44 { pt3dadd( -69.3822, 206.052, -165.145, 1.4 ) }
    dend_44 { pt3dadd( -69.5774, 206.094, -165.651, 1.84 ) }
    dend_44 { pt3dadd( -69.8963, 206.148, -166.475, 1.92 ) }
    dend_44 { pt3dadd( -71.7626, 206.476, -172.606, 0.37 ) }
    dend_44 { pt3dadd( -71.8391, 206.487, -172.877, 0.59 ) }
    dend_44 { pt3dadd( -72.009, 206.503, -173.53, 0.44 ) }
    dend_44 { pt3dadd( -72.1142, 206.513, -173.982, 0.66 ) }
    dend_44 { pt3dadd( -72.2449, 206.523, -174.599, 1.25 ) }
    dend_44 { pt3dadd( -73.494, 206.658, -180.964, 1.25 ) }
    dend_44 { pt3dadd( -73.6252, 206.686, -181.59, 1.25 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -43.8089, 26.1946, -15.227, 0.22 ) }
    dend_37 { pt3dadd( -45.9022, 25.0919, -16.6928, 0.22 ) }
    dend_37 { pt3dadd( -47.1693, 24.4124, -17.5469, 0.74 ) }
    dend_37 { pt3dadd( -47.8027, 24.0362, -17.9195, 0.74 ) }
    dend_37 { pt3dadd( -48.7575, 23.4542, -18.5094, 0.29 ) }
    dend_37 { pt3dadd( -49.8502, 22.7822, -19.2003, 1.03 ) }
    dend_37 { pt3dadd( -50.6758, 22.2627, -19.7337, 0.59 ) }
    dend_37 { pt3dadd( -51.1031, 21.9742, -19.9979, 0.44 ) }
    dend_37 { pt3dadd( -52.4168, 21.0755, -20.8307, 0.22 ) }
    dend_37 { pt3dadd( -53.5006, 20.3213, -21.5883, 0.59 ) }
    dend_37 { pt3dadd( -53.6997, 20.195, -21.7332, 0.59 ) }
    dend_37 { pt3dadd( -53.9186, 20.0702, -21.8985, 0.59 ) }
    dend_37 { pt3dadd( -54.5623, 19.7138, -22.3892, 0.37 ) }
    dend_37 { pt3dadd( -55.4286, 19.2818, -22.9368, 0.15 ) }
    dend_37 { pt3dadd( -56.6011, 18.7062, -23.6107, 0.22 ) }
    dend_37 { pt3dadd( -57.7951, 18.0821, -24.1988, 0.22 ) }
    dend_37 { pt3dadd( -58.3404, 17.7934, -24.4546, 0.81 ) }
    dend_37 { pt3dadd( -58.9248, 17.4881, -24.7064, 0.81 ) }
    dend_37 { pt3dadd( -61.1743, 16.3249, -25.6061, 0.29 ) }
    dend_37 { pt3dadd( -61.7076, 16.0565, -25.8219, 1.03 ) }
    dend_37 { pt3dadd( -62.2906, 15.7773, -26.028, 1.4 ) }
    dend_37 { pt3dadd( -62.8526, 15.5282, -26.2311, 1.11 ) }
    dend_37 { pt3dadd( -64.7222, 14.759, -26.9235, 0.29 ) }
    dend_37 { pt3dadd( -65.8291, 14.3294, -27.3457, 0.29 ) }
    dend_37 { pt3dadd( -66.3228, 14.1394, -27.5463, 0.74 ) }
    dend_37 { pt3dadd( -66.8371, 13.9462, -27.7577, 0.52 ) }
    dend_37 { pt3dadd( -68.8526, 13.1715, -28.6707, 0.29 ) }
    dend_37 { pt3dadd( -70.1188, 12.6808, -29.292, 0.29 ) }
    dend_37 { pt3dadd( -70.3908, 12.5738, -29.4369, 0.66 ) }
    dend_37 { pt3dadd( -71.0319, 12.31, -29.7952, 1.47 ) }
    dend_37 { pt3dadd( -71.7036, 12.0431, -30.186, 1.47 ) }
    dend_37 { pt3dadd( -73.1757, 11.4835, -31.0669, 0.22 ) }
    dend_37 { pt3dadd( -73.4041, 11.4072, -31.2015, 0.59 ) }
    dend_37 { pt3dadd( -73.8675, 11.2424, -31.4815, 0.59 ) }
    dend_37 { pt3dadd( -74.1984, 11.1176, -31.6688, 0.52 ) }
    dend_37 { pt3dadd( -75.141, 10.7494, -32.1732, 0.37 ) }
    dend_37 { pt3dadd( -75.8492, 10.4563, -32.533, 0.37 ) }
    dend_37 { pt3dadd( -76.3631, 10.2335, -32.7756, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_37 { pt3dadd( -77.9405, 9.52148, -33.5677, 0.29 ) }
    dend_37 { pt3dadd( -79.5932, 8.76268, -34.4232, 0.29 ) }
    dend_37 { pt3dadd( -80.1109, 8.52668, -34.6932, 0.44 ) }
    dend_37 { pt3dadd( -80.7184, 8.24487, -35.0159, 1.03 ) }
    dend_37 { pt3dadd( -81.2655, 8.02538, -35.3056, 1.11 ) }
    dend_37 { pt3dadd( -82.5805, 7.6364, -36.0865, 0.37 ) }
    dend_37 { pt3dadd( -83.1152, 7.53555, -36.4382, 0.74 ) }
    dend_37 { pt3dadd( -83.473, 7.47877, -36.7047, 0.44 ) }
    dend_37 { pt3dadd( -83.7984, 7.43687, -36.9547, 0.44 ) }
    dend_37 { pt3dadd( -84.5775, 7.41602, -37.6379, 0.22 ) }
    dend_37 { pt3dadd( -86.1882, 7.49071, -39.1815, 0.22 ) }
    dend_37 { pt3dadd( -86.591, 7.53895, -39.5746, 1.11 ) }
    dend_37 { pt3dadd( -87.0908, 7.61133, -40.0668, 1.03 ) }
    dend_37 { pt3dadd( -87.3627, 7.6608, -40.3451, 1.03 ) }
    dend_37 { pt3dadd( -89.1096, 8.00323, -42.1553, 0.22 ) }
    dend_37 { pt3dadd( -90.4335, 8.30185, -43.4936, 0.22 ) }
    dend_37 { pt3dadd( -90.8497, 8.42423, -43.8745, 0.88 ) }
    dend_37 { pt3dadd( -91.3313, 8.59056, -44.2906, 0.88 ) }
    dend_37 { pt3dadd( -92.2124, 8.94248, -44.9634, 0.66 ) }
    dend_37 { pt3dadd( -92.8852, 9.24659, -45.4137, 0.29 ) }
    dend_37 { pt3dadd( -93.6844, 9.67004, -45.7975, 0.29 ) }
    dend_37 { pt3dadd( -93.9601, 9.87908, -45.9482, 0.29 ) }
    dend_37 { pt3dadd( -94.3671, 10.2421, -46.2027, 0.74 ) }
    dend_37 { pt3dadd( -95.0061, 10.899, -46.6234, 1.03 ) }
    dend_37 { pt3dadd( -95.6418, 11.6355, -47.0361, 0.44 ) }
    dend_37 { pt3dadd( -95.7966, 11.8417, -47.1412, 0.44 ) }
    dend_37 { pt3dadd( -96.8346, 13.3361, -47.9645, 0.29 ) }
    dend_37 { pt3dadd( -97.1642, 13.8346, -48.2549, 0.29 ) }
    dend_37 { pt3dadd( -97.3173, 14.0778, -48.4079, 0.44 ) }
    dend_37 { pt3dadd( -97.7758, 14.8373, -48.9065, 0.22 ) }
    dend_37 { pt3dadd( -98.108, 15.3366, -49.198, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 31/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -43.8089, 26.1946, -15.227, 0.52 ) }
    dend_36 { pt3dadd( -44.5671, 26.7702, -15.3362, 0.52 ) }
    dend_36 { pt3dadd( -45.3003, 27.3128, -15.429, 0.52 ) }
    dend_36 { pt3dadd( -45.7467, 27.5758, -15.3988, 0.22 ) }
    dend_36 { pt3dadd( -45.968, 27.6782, -15.3018, 0.59 ) }
    dend_36 { pt3dadd( -46.2409, 27.7981, -15.1499, 0.96 ) }
    dend_36 { pt3dadd( -46.4612, 27.8947, -15.0185, 0.88 ) }
    dend_36 { pt3dadd( -46.7951, 28.0238, -14.7698, 0.81 ) }
    dend_36 { pt3dadd( -47.8724, 28.4375, -13.9222, 0.29 ) }
    dend_36 { pt3dadd( -49.2294, 28.9724, -12.8742, 0.52 ) }
    dend_36 { pt3dadd( -49.5256, 29.0855, -12.6343, 0.96 ) }
    dend_36 { pt3dadd( -49.7754, 29.1858, -12.4247, 0.96 ) }
    dend_36 { pt3dadd( -50.1471, 29.3387, -12.1106, 0.44 ) }
    dend_36 { pt3dadd( -50.767, 29.6477, -11.436, 0.37 ) }
    dend_36 { pt3dadd( -50.9714, 29.7756, -11.1769, 0.37 ) }
    dend_36 { pt3dadd( -51.7428, 30.2745, -10.3914, 0.88 ) }
    dend_36 { pt3dadd( -51.9944, 30.4275, -10.1524, 1.33 ) }
    dend_36 { pt3dadd( -52.0442, 30.4564, -10.1093, 1.33 ) }
    dend_36 { pt3dadd( -53.6061, 31.2728, -8.76504, 0.59 ) }
    dend_36 { pt3dadd( -53.9666, 31.4562, -8.48664, 0.52 ) }
    dend_36 { pt3dadd( -55.4169, 32.127, -7.65379, 0.22 ) }
    dend_36 { pt3dadd( -55.6425, 32.2168, -7.54286, 0.74 ) }
    dend_36 { pt3dadd( -55.9365, 32.312, -7.41329, 0.74 ) }
    dend_36 { pt3dadd( -57.1648, 32.6745, -7.04549, 0.74 ) }
    dend_36 { pt3dadd( -58.014, 32.8903, -6.92049, 0.29 ) }
    dend_36 { pt3dadd( -58.4632, 32.995, -6.83348, 1.11 ) }
    dend_36 { pt3dadd( -59.9907, 33.3495, -6.48909, 0.96 ) }
    dend_36 { pt3dadd( -60.532, 33.4972, -6.40018, 0.74 ) }
    dend_36 { pt3dadd( -61.6791, 33.8469, -6.28232, 0.22 ) }
    dend_36 { pt3dadd( -61.9075, 33.9258, -6.24566, 0.74 ) }
    dend_36 { pt3dadd( -62.1294, 34.0025, -6.20313, 0.74 ) }
    dend_36 { pt3dadd( -63.7615, 34.6129, -5.92272, 0.29 ) }
    dend_36 { pt3dadd( -64.1097, 34.7571, -5.88163, 1.11 ) }
    dend_36 { pt3dadd( -64.3467, 34.8592, -5.82376, 1.11 ) }
    dend_36 { pt3dadd( -66.223, 35.652, -5.06575, 0.44 ) }
    dend_36 { pt3dadd( -72.7346, 37.387, -2.618, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 67/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -90.0796, 50.9826, 12.5126, 0.29 ) }
    dend_34 { pt3dadd( -97.8511, 54.4055, 15.4979, 0.29 ) }
    dend_34 { pt3dadd( -105.055, 58.201, 19.3424, 0.29 ) }
    dend_34 { pt3dadd( -112.486, 62.824, 21.5605, 0.29 ) }
    dend_34 { pt3dadd( -119.28, 68.2766, 24.0028, 0.29 ) }
    dend_34 { pt3dadd( -126.344, 72.9534, 27.1137, 0.29 ) }
    dend_34 { pt3dadd( -132.45, 78.2219, 31.1852, 0.29 ) }
    dend_34 { pt3dadd( -136.941, 84.0189, 36.4716, 0.29 ) }
    dend_34 { pt3dadd( -140.553, 90.4813, 41.6897, 0.29 ) }
    dend_34 { pt3dadd( -143.213, 96.813, 47.5819, 0.29 ) }
    dend_34 { pt3dadd( -144.129, 102.647, 54.4132, 0.29 ) }
    dend_34 { pt3dadd( -144.435, 108.742, 61.0767, 0.29 ) }
    dend_34 { pt3dadd( -145.585, 115.011, 67.4918, 0.29 ) }
    dend_34 { pt3dadd( -147.393, 121.211, 73.8207, 0.29 ) }
    dend_34 { pt3dadd( -148.556, 127.176, 80.5052, 0.29 ) }
    dend_34 { pt3dadd( -149.455, 133.833, 86.5771, 0.29 ) }
    dend_34 { pt3dadd( -151.802, 140.537, 92.2031, 0.29 ) }
    dend_34 { pt3dadd( -154.264, 146.377, 98.6399, 0.29 ) }
    dend_34 { pt3dadd( -158.029, 152.627, 103.996, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -90.0796, 50.9826, 12.5126, 0.52 ) }
    dend_33 { pt3dadd( -99.9851, 57.5715, 17.1378, 0.29 ) }
    dend_33 { pt3dadd( -110.251, 62.7315, 22.6258, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -60.3207, 134.085, -145.89, 0.22 ) }
    dend_21 { pt3dadd( -60.7641, 136.109, -152.497, 0.22 ) }
    dend_21 { pt3dadd( -60.8478, 136.492, -153.744, 1.55 ) }
    dend_21 { pt3dadd( -61.0184, 137.271, -156.286, 0.29 ) }
    dend_21 { pt3dadd( -61.054, 137.433, -156.817, 0.29 ) }
    dend_21 { pt3dadd( -61.0715, 137.513, -157.076, 0.29 ) }
    dend_21 { pt3dadd( -61.1607, 137.921, -158.406, 1.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 96/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -60.3207, 134.085, -145.89, 0.29 ) }
    dend_20 { pt3dadd( -61.4666, 133.422, -145.177, 0.29 ) }
    dend_20 { pt3dadd( -61.8904, 133.219, -144.705, 0.22 ) }
    dend_20 { pt3dadd( -62.0778, 133.138, -144.438, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( -63.0058, 132.733, -143.004, 1.11 ) }
    dend_20 { pt3dadd( -64.1424, 132.245, -141.191, 0.29 ) }
    dend_20 { pt3dadd( -64.461, 132.109, -140.688, 0.29 ) }
    dend_20 { pt3dadd( -66.1511, 131.321, -137.672, 0.29 ) }
    dend_20 { pt3dadd( -66.8462, 130.989, -136.312, 0.22 ) }
    dend_20 { pt3dadd( -66.9442, 130.945, -136.116, 0.22 ) }
    dend_20 { pt3dadd( -66.9902, 130.925, -136.007, 0.22 ) }
    dend_20 { pt3dadd( -67.1865, 130.854, -135.474, 0.37 ) }
    dend_20 { pt3dadd( -67.2643, 130.818, -135.261, 0.37 ) }
    dend_20 { pt3dadd( -68.4769, 130.062, -132.567, 0.22 ) }
    dend_20 { pt3dadd( -68.682, 129.934, -132.085, 0.52 ) }
    dend_20 { pt3dadd( -69.581, 129.375, -129.833, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -23.425, 124.141, -1.00061, 0.44 ) }
    dend_18 { pt3dadd( -24.3492, 125.559, -1.73664, 0.44 ) }
    dend_18 { pt3dadd( -24.5227, 125.881, -1.8519, 0.44 ) }
    dend_18 { pt3dadd( -24.6121, 126.074, -1.904, 0.44 ) }
    dend_18 { pt3dadd( -24.9131, 126.781, -2.06364, 0.52 ) }
    dend_18 { pt3dadd( -25.1405, 127.294, -2.15901, 0.44 ) }
    dend_18 { pt3dadd( -25.4141, 127.871, -2.23999, 0.22 ) }
    dend_18 { pt3dadd( -25.5376, 128.163, -2.25192, 0.22 ) }
    dend_18 { pt3dadd( -25.7487, 128.515, -2.24481, 0.66 ) }
    dend_18 { pt3dadd( -25.848, 128.622, -2.24744, 0.66 ) }
    dend_18 { pt3dadd( -26.4483, 128.996, -2.28843, 0.22 ) }
    dend_18 { pt3dadd( -26.7651, 129.145, -2.3072, 0.22 ) }
    dend_18 { pt3dadd( -27.4374, 129.418, -2.34759, 0.81 ) }
    dend_18 { pt3dadd( -28.0301, 129.637, -2.37601, 0.96 ) }
    dend_18 { pt3dadd( -29.1762, 130.035, -2.40714, 0.59 ) }
    dend_18 { pt3dadd( -30.0245, 130.337, -2.40634, 0.22 ) }
    dend_18 { pt3dadd( -30.855, 130.618, -2.40404, 0.22 ) }
    dend_18 { pt3dadd( -31.0844, 130.699, -2.40281, 0.52 ) }
    dend_18 { pt3dadd( -31.2213, 130.752, -2.39542, 0.52 ) }
    dend_18 { pt3dadd( -31.7538, 130.992, -2.35798, 0.22 ) }
    dend_18 { pt3dadd( -32.1318, 131.24, -2.22827, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -23.425, 124.141, -1.00061, 0.59 ) }
    dend_15 { pt3dadd( -22.336, 124.606, -3.14216, 0.59 ) }
    dend_15 { pt3dadd( -22.0761, 124.74, -3.67938, 0.59 ) }
    dend_15 { pt3dadd( -21.8201, 124.939, -4.39174, 0.59 ) }
    dend_15 { pt3dadd( -21.5919, 125.18, -5.12121, 0.59 ) }
    dend_15 { pt3dadd( -21.2278, 125.647, -6.28754, 0.37 ) }
    dend_15 { pt3dadd( -21.1329, 125.801, -6.64143, 0.74 ) }
    dend_15 { pt3dadd( -20.9672, 126.205, -7.3162, 0.74 ) }
    dend_15 { pt3dadd( -20.7292, 127.018, -8.46867, 0.74 ) }
    dend_15 { pt3dadd( -20.6493, 127.473, -9.02164, 0.6 ) }
    dend_15 { pt3dadd( -20.5527, 128.23, -9.85882, 0.52 ) }
    dend_15 { pt3dadd( -20.4965, 129.1, -10.7234, 0.3 ) }
    dend_15 { pt3dadd( -20.4178, 130.138, -11.6972, 0.81 ) }
    dend_15 { pt3dadd( -20.3405, 130.838, -12.3186, 1.25 ) }
    dend_15 { pt3dadd( -19.9839, 132.861, -14.0317, 0.29 ) }
    dend_15 { pt3dadd( -19.9037, 133.278, -14.3851, 0.52 ) }
    dend_15 { pt3dadd( -19.664, 134.077, -14.9732, 0.44 ) }
    dend_15 { pt3dadd( -19.2241, 135.103, -15.6905, 0.44 ) }
    dend_15 { pt3dadd( -18.9828, 135.518, -15.9919, 1.33 ) }
    dend_15 { pt3dadd( -18.1331, 136.6, -16.7834, 0.52 ) }
    dend_15 { pt3dadd( -17.849, 136.899, -16.9678, 0.88 ) }
    dend_15 { pt3dadd( -15.9115, 138.962, -18.0886, 0.59 ) }
    dend_15 { pt3dadd( -14.776, 140.237, -18.6224, 0.44 ) }
    dend_15 { pt3dadd( -14.4408, 140.717, -18.7502, 0.59 ) }
    dend_15 { pt3dadd( -14.2332, 141.22, -18.775, 0.59 ) }
    dend_15 { pt3dadd( -14.2244, 142.634, -18.5059, 0.29 ) }
    dend_15 { pt3dadd( -14.2058, 143.31, -18.2054, 0.29 ) }
    dend_15 { pt3dadd( -14.2162, 143.809, -17.9382, 0.29 ) }
    dend_15 { pt3dadd( -14.212, 143.954, -17.8523, 0.29 ) }
    dend_15 { pt3dadd( -14.1661, 144.976, -17.2258, 1.33 ) }
    dend_15 { pt3dadd( -14.117, 145.699, -16.8009, 1.33 ) }
    dend_15 { pt3dadd( -13.8678, 147.859, -15.6731, 0.37 ) }
    dend_15 { pt3dadd( -13.8021, 148.672, -15.3029, 0.37 ) }
    dend_15 { pt3dadd( -13.7857, 149.048, -15.1488, 0.88 ) }
    dend_15 { pt3dadd( -13.7858, 149.613, -14.9469, 1.03 ) }
    dend_15 { pt3dadd( -13.8739, 150.793, -14.6011, 0.44 ) }
    dend_15 { pt3dadd( -13.9716, 151.45, -14.484, 1.18 ) }
    dend_15 { pt3dadd( -14.2069, 152.543, -14.44, 1.4 ) }
    dend_15 { pt3dadd( -14.4736, 153.863, -14.4515, 0.44 ) }
    dend_15 { pt3dadd( -14.5471, 154.229, -14.4706, 0.44 ) }
    dend_15 { pt3dadd( -14.7391, 155.236, -14.5724, 1.25 ) }
    dend_15 { pt3dadd( -14.9988, 156.762, -14.8144, 0.37 ) }
    dend_15 { pt3dadd( -15.2074, 157.872, -15.0838, 0.37 ) }
    dend_15 { pt3dadd( -15.3184, 158.344, -15.277, 0.37 ) }
    dend_15 { pt3dadd( -15.485, 158.957, -15.5947, 1.25 ) }
    dend_15 { pt3dadd( -15.6574, 159.549, -15.9083, 1.25 ) }
    dend_15 { pt3dadd( -15.9236, 160.445, -16.3866, 1.25 ) }
    dend_15 { pt3dadd( -16.2003, 161.36, -16.8654, 1.25 ) }
    dend_15 { pt3dadd( -16.8245, 163.419, -17.9988, 0.44 ) }
    dend_15 { pt3dadd( -17.0703, 164.161, -18.4595, 0.44 ) }
    dend_15 { pt3dadd( -17.359, 164.918, -18.9858, 0.44 ) }
    dend_15 { pt3dadd( -17.5406, 165.321, -19.2779, 0.44 ) }
    dend_15 { pt3dadd( -17.8055, 165.91, -19.735, 1.18 ) }
    dend_15 { pt3dadd( -18.0562, 166.541, -20.2176, 0.88 ) }
    dend_15 { pt3dadd( -18.6176, 168.041, -21.4133, 0.88 ) }
    dend_15 { pt3dadd( -18.9022, 168.812, -22.0752, 0.74 ) }
    dend_15 { pt3dadd( -19.039, 169.204, -22.4229, 0.74 ) }
    dend_15 { pt3dadd( -19.4163, 170.328, -23.3375, 0.52 ) }
    dend_15 { pt3dadd( -19.5755, 170.889, -23.7155, 0.52 ) }
    dend_15 { pt3dadd( -19.6656, 171.333, -23.9666, 0.96 ) }
    dend_15 { pt3dadd( -19.6762, 171.487, -24.0344, 0.96 ) }
    dend_15 { pt3dadd( -19.6853, 172.348, -24.3475, 0.44 ) }
    dend_15 { pt3dadd( -19.6276, 173.035, -24.6135, 0.81 ) }
    dend_15 { pt3dadd( -19.5647, 173.544, -24.8148, 0.44 ) }
    dend_15 { pt3dadd( -19.2842, 174.891, -25.4182, 0.22 ) }
    dend_15 { pt3dadd( -19.164, 175.287, -25.5828, 0.74 ) }
    dend_15 { pt3dadd( -18.8146, 176.306, -26.0092, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_15 { pt3dadd( -18.1474, 177.932, -26.6964, 0.44 ) }
    dend_15 { pt3dadd( -17.8583, 178.559, -26.9757, 1.69 ) }
    dend_15 { pt3dadd( -17.4203, 179.43, -27.3697, 1.69 ) }
    dend_15 { pt3dadd( -16.7546, 180.526, -27.7972, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 4/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 18.4622, 105.495, 23.1253, 0.29 ) }
    dend_10 { pt3dadd( 17.9807, 108.508, 24.4618, 0.29 ) }
    dend_10 { pt3dadd( 17.8827, 109.332, 24.7855, 0.66 ) }
    dend_10 { pt3dadd( 17.8369, 109.885, 24.9844, 1.03 ) }
    dend_10 { pt3dadd( 17.821, 110.203, 25.1082, 1.03 ) }
    dend_10 { pt3dadd( 17.7707, 112.593, 26.0649, 0.44 ) }
    dend_10 { pt3dadd( 17.7838, 113.458, 26.4116, 0.44 ) }
    dend_10 { pt3dadd( 17.8794, 114.348, 26.7198, 0.59 ) }
    dend_10 { pt3dadd( 17.9787, 114.981, 26.955, 0.59 ) }
    dend_10 { pt3dadd( 18.3264, 116.75, 27.611, 0.29 ) }
    dend_10 { pt3dadd( 18.429, 117.177, 27.768, 0.66 ) }
    dend_10 { pt3dadd( 18.6988, 117.889, 28.0223, 1.03 ) }
    dend_10 { pt3dadd( 18.8602, 118.23, 28.1258, 1.4 ) }
    dend_10 { pt3dadd( 19.276, 119.031, 28.3462, 1.03 ) }
    dend_10 { pt3dadd( 19.71, 119.799, 28.5099, 0.96 ) }
    dend_10 { pt3dadd( 19.71, 119.799, 28.5099, 1.03 ) }
    dend_10 { pt3dadd( 20.3222, 120.76, 28.5655, 1.03 ) }
    dend_10 { pt3dadd( 21.1362, 122.021, 28.6188, 0.81 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 22/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.4622, 105.495, 23.1253, 0.44 ) }
    dend_9 { pt3dadd( 19.6194, 106.871, 23.4355, 0.44 ) }
    dend_9 { pt3dadd( 20.1052, 107.365, 23.5335, 0.52 ) }
    dend_9 { pt3dadd( 20.5975, 107.821, 23.6227, 0.88 ) }
    dend_9 { pt3dadd( 20.9229, 108.114, 23.6797, 0.96 ) }
    dend_9 { pt3dadd( 21.1062, 108.276, 23.7193, 0.88 ) }
    dend_9 { pt3dadd( 22.8588, 109.822, 24.1409, 0.44 ) }
    dend_9 { pt3dadd( 23.7513, 110.601, 24.3582, 0.44 ) }
    dend_9 { pt3dadd( 24.559, 111.318, 24.5614, 0.44 ) }
    dend_9 { pt3dadd( 24.967, 111.694, 24.6733, 0.44 ) }
    dend_9 { pt3dadd( 25.699, 112.389, 24.8801, 0.66 ) }
    dend_9 { pt3dadd( 26.2707, 112.964, 25.0535, 1.03 ) }
    dend_9 { pt3dadd( 26.9304, 113.709, 25.283, 0.96 ) }
    dend_9 { pt3dadd( 27.3547, 114.242, 25.3762, 0.66 ) }
    dend_9 { pt3dadd( 28.0878, 115.204, 25.4396, 0.44 ) }
    dend_9 { pt3dadd( 28.6894, 115.995, 25.4172, 0.44 ) }
    dend_9 { pt3dadd( 29.0334, 116.449, 25.3619, 0.88 ) }
    dend_9 { pt3dadd( 29.2706, 116.765, 25.3103, 0.88 ) }
    dend_9 { pt3dadd( 30.4235, 118.326, 25.0364, 0.37 ) }
    dend_9 { pt3dadd( 30.6806, 118.687, 24.9785, 0.37 ) }
    dend_9 { pt3dadd( 30.9691, 119.104, 24.9284, 0.66 ) }
    dend_9 { pt3dadd( 31.3251, 119.704, 24.9604, 0.96 ) }
    dend_9 { pt3dadd( 31.619, 120.271, 25.0594, 0.88 ) }
    dend_9 { pt3dadd( 32.1714, 121.352, 25.3297, 0.44 ) }
    dend_9 { pt3dadd( 32.501, 122.027, 25.5775, 0.59 ) }
    dend_9 { pt3dadd( 32.8696, 122.847, 25.8914, 0.59 ) }
    dend_9 { pt3dadd( 33.6612, 124.752, 26.6717, 0.52 ) }
    dend_9 { pt3dadd( 33.9451, 125.501, 27.0104, 1.0 ) }
    dend_9 { pt3dadd( 39.8413, 135.966, 26.688, 1.0 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 13.4489, 132.77, -7.27869, 0.29 ) }
    dend_7 { pt3dadd( 13.9122, 133.863, -6.06171, 0.29 ) }
    dend_7 { pt3dadd( 13.9751, 134.018, -5.9053, 0.29 ) }
    dend_7 { pt3dadd( 14.0852, 134.302, -5.64045, 0.22 ) }
    dend_7 { pt3dadd( 14.1772, 134.545, -5.42457, 0.22 ) }
    dend_7 { pt3dadd( 14.2302, 134.706, -5.2901, 0.22 ) }
    dend_7 { pt3dadd( 14.2828, 134.868, -5.16251, 0.44 ) }
    dend_7 { pt3dadd( 14.3475, 135.052, -5.06245, 0.52 ) }
    dend_7 { pt3dadd( 14.3642, 135.123, -5.02601, 0.52 ) }
    dend_7 { pt3dadd( 14.3704, 135.16, -5.00931, 0.52 ) }
    dend_7 { pt3dadd( 14.3959, 135.601, -4.73419, 0.07 ) }
    dend_7 { pt3dadd( 14.399, 135.874, -4.52585, 0.07 ) }
    dend_7 { pt3dadd( 14.3974, 136.094, -4.3372, 0.37 ) }
    dend_7 { pt3dadd( 14.3942, 136.326, -4.11809, 0.52 ) }
    dend_7 { pt3dadd( 14.3874, 136.57, -3.88999, 0.52 ) }
    dend_7 { pt3dadd( 14.367, 137.161, -3.35555, 0.88 ) }
    dend_7 { pt3dadd( 14.3596, 137.293, -3.2396, 0.88 ) }
    dend_7 { pt3dadd( 14.3551, 137.367, -3.18024, 0.88 ) }
    dend_7 { pt3dadd( 14.3489, 137.843, -2.83867, 0.22 ) }
    dend_7 { pt3dadd( 14.3625, 138.099, -2.67046, 0.22 ) }
    dend_7 { pt3dadd( 14.3766, 138.229, -2.58813, 0.44 ) }
    dend_7 { pt3dadd( 14.3975, 138.342, -2.52735, 0.44 ) }
    dend_7 { pt3dadd( 14.4554, 138.654, -2.34861, 0.37 ) }
    dend_7 { pt3dadd( 14.4699, 138.734, -2.30013, 0.37 ) }
    dend_7 { pt3dadd( 14.4968, 138.892, -2.20042, 0.37 ) }
    dend_7 { pt3dadd( 14.591, 139.435, -1.8144, 0.44 ) }
    dend_7 { pt3dadd( 14.6044, 139.506, -1.76028, 0.74 ) }
    dend_7 { pt3dadd( 14.6281, 139.636, -1.65716, 0.74 ) }
    dend_7 { pt3dadd( 14.6341, 139.663, -1.63611, 0.74 ) }
    dend_7 { pt3dadd( 14.6481, 139.718, -1.60302, 0.81 ) }
    dend_7 { pt3dadd( 14.7325, 139.953, -1.50203, 0.52 ) }
    dend_7 { pt3dadd( 14.796, 140.078, -1.4796, 0.29 ) }
    dend_7 { pt3dadd( 14.8387, 140.153, -1.46433, 0.29 ) }
    dend_7 { pt3dadd( 15.0559, 140.55, -1.38767, 0.22 ) }
    dend_7 { pt3dadd( 15.2214, 140.849, -1.33257, 0.22 ) }
    dend_7 { pt3dadd( 15.3609, 141.099, -1.28774, 0.59 ) }
    dend_7 { pt3dadd( 15.5324, 141.42, -1.23711, 0.74 ) }
    dend_7 { pt3dadd( 15.6994, 141.742, -1.19269, 0.81 ) }
    dend_7 { pt3dadd( 15.847, 142.009, -1.15952, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 90/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 13.4489, 132.77, -7.27869, 0.74 ) }
    dend_4 { pt3dadd( 13.4318, 133.407, -7.43979, 0.74 ) }
    dend_4 { pt3dadd( 13.376, 134.821, -7.75828, 0.29 ) }
    dend_4 { pt3dadd( 13.3839, 135.035, -7.79351, 0.22 ) }
    dend_4 { pt3dadd( 13.4064, 135.283, -7.85492, 0.22 ) }
    dend_4 { pt3dadd( 13.4402, 135.706, -7.97393, 0.22 ) }
    dend_4 { pt3dadd( 13.4572, 135.987, -8.05718, 0.22 ) }
    dend_4 { pt3dadd( 13.5016, 136.972, -8.36555, 0.96 ) }
    dend_4 { pt3dadd( 13.5084, 138.084, -8.73768, 0.96 ) }
    dend_4 { pt3dadd( 13.4867, 139.21, -9.14561, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_4 { pt3dadd( 13.4584, 139.926, -9.422, 0.22 ) }
    dend_4 { pt3dadd( 13.4324, 140.222, -9.5425, 0.15 ) }
    dend_4 { pt3dadd( 13.3699, 140.633, -9.7136, 0.15 ) }
    dend_4 { pt3dadd( 13.2683, 141.008, -9.86753, 0.15 ) }
    dend_4 { pt3dadd( 13.1936, 141.211, -9.93842, 0.44 ) }
    dend_4 { pt3dadd( 13.1489, 141.351, -9.96546, 0.81 ) }
    dend_4 { pt3dadd( 13.0704, 141.831, -10.0446, 0.74 ) }
    dend_4 { pt3dadd( 13.0616, 142.049, -10.0708, 0.88 ) }
    dend_4 { pt3dadd( 13.0787, 142.346, -10.0916, 0.81 ) }
    dend_4 { pt3dadd( 13.1641, 143.186, -10.1149, 0.15 ) }
    dend_4 { pt3dadd( 13.1878, 143.352, -10.1169, 0.15 ) }
    dend_4 { pt3dadd( 13.2886, 143.896, -10.1141, 0.15 ) }
    dend_4 { pt3dadd( 13.3873, 144.362, -10.0508, 0.15 ) }
    dend_4 { pt3dadd( 13.5347, 145.006, -9.91413, 0.96 ) }
    dend_4 { pt3dadd( 13.5476, 145.061, -9.89971, 0.96 ) }
    dend_4 { pt3dadd( 13.5979, 145.284, -9.83388, 1.11 ) }
    dend_4 { pt3dadd( 13.6661, 145.618, -9.73688, 1.18 ) }
    dend_4 { pt3dadd( 13.9673, 147.209, -9.27206, 0.22 ) }
    dend_4 { pt3dadd( 14.1467, 148.149, -8.99732, 0.22 ) }
    dend_4 { pt3dadd( 14.1994, 148.438, -8.91907, 0.22 ) }
    dend_4 { pt3dadd( 14.3045, 148.887, -8.82113, 0.29 ) }
    dend_4 { pt3dadd( 14.4374, 149.371, -8.73677, 0.29 ) }
    dend_4 { pt3dadd( 14.5893, 149.838, -8.68077, 0.88 ) }
    dend_4 { pt3dadd( 14.6661, 150.026, -8.67362, 1.33 ) }
    dend_4 { pt3dadd( 14.9062, 150.561, -8.65245, 1.33 ) }
    dend_4 { pt3dadd( 15.54, 151.86, -8.59867, 0.22 ) }
    dend_4 { pt3dadd( 15.7039, 152.217, -8.59419, 0.44 ) }
    dend_4 { pt3dadd( 15.8465, 152.547, -8.59669, 0.88 ) }
    dend_4 { pt3dadd( 15.9939, 152.92, -8.60634, 0.88 ) }
    dend_4 { pt3dadd( 16.1741, 153.442, -8.62018, 0.52 ) }
    dend_4 { pt3dadd( 16.2193, 153.596, -8.62362, 0.52 ) }
    dend_4 { pt3dadd( 16.4397, 154.754, -8.65339, 0.15 ) }
    dend_4 { pt3dadd( 16.521, 155.165, -8.66769, 0.15 ) }
    dend_4 { pt3dadd( 16.5357, 155.231, -8.67378, 0.15 ) }
    dend_4 { pt3dadd( 16.6808, 155.777, -8.74624, 0.15 ) }
    dend_4 { pt3dadd( 16.7146, 155.882, -8.76383, 0.15 ) }
    dend_4 { pt3dadd( 16.8963, 156.363, -8.84781, 0.15 ) }
    dend_4 { pt3dadd( 17.0541, 156.668, -8.92259, 0.59 ) }
    dend_4 { pt3dadd( 17.4232, 157.363, -9.11766, 0.66 ) }
    dend_4 { pt3dadd( 17.5866, 157.662, -9.20718, 0.59 ) }
    dend_4 { pt3dadd( 17.6292, 157.74, -9.23094, 0.59 ) }
    dend_4 { pt3dadd( 17.8742, 158.21, -9.34622, 0.52 ) }
    dend_4 { pt3dadd( 18.3786, 159.248, -9.53341, 0.15 ) }
    dend_4 { pt3dadd( 18.6107, 159.776, -9.57875, 0.15 ) }
    dend_4 { pt3dadd( 18.6359, 159.841, -9.57511, 0.15 ) }
    dend_4 { pt3dadd( 18.7759, 160.232, -9.53121, 0.15 ) }
    dend_4 { pt3dadd( 18.945, 160.802, -9.44458, 0.88 ) }
    dend_4 { pt3dadd( 19.0274, 161.176, -9.37139, 1.18 ) }
    dend_4 { pt3dadd( 19.1118, 161.82, -9.21625, 0.74 ) }
    dend_4 { pt3dadd( 19.1952, 162.848, -8.98066, 0.22 ) }
    dend_4 { pt3dadd( 19.2109, 163.13, -8.92045, 0.22 ) }
    dend_4 { pt3dadd( 19.2311, 163.658, -8.8184, 0.22 ) }
    dend_4 { pt3dadd( 19.2433, 164.082, -8.74871, 0.22 ) }
    dend_4 { pt3dadd( 19.2542, 164.508, -8.68427, 0.22 ) }
    dend_4 { pt3dadd( 19.2695, 165.122, -8.60292, 0.37 ) }
    dend_4 { pt3dadd( 19.2796, 165.338, -8.582, 0.59 ) }
    dend_4 { pt3dadd( 19.3208, 165.753, -8.53984, 0.59 ) }
    dend_4 { pt3dadd( 19.336, 165.856, -8.52904, 0.44 ) }
    dend_4 { pt3dadd( 19.4432, 166.466, -8.46821, 0.29 ) }
    dend_4 { pt3dadd( 19.5061, 166.792, -8.43998, 0.29 ) }
    dend_4 { pt3dadd( 19.6563, 167.339, -8.39387, 0.15 ) }
    dend_4 { pt3dadd( 19.7993, 167.771, -8.35234, 0.15 ) }
    dend_4 { pt3dadd( 19.823, 167.836, -8.33629, 0.15 ) }
    dend_4 { pt3dadd( 20.0154, 168.28, -8.17337, 0.15 ) }
    dend_4 { pt3dadd( 20.2795, 168.817, -7.91953, 0.96 ) }
    dend_4 { pt3dadd( 20.6302, 169.452, -7.575, 1.18 ) }
    dend_4 { pt3dadd( 20.7697, 169.679, -7.43414, 0.96 ) }
    dend_4 { pt3dadd( 21.445, 170.741, -6.73647, 0.15 ) }
    dend_4 { pt3dadd( 21.7023, 171.134, -6.5011, 0.15 ) }
    dend_4 { pt3dadd( 21.8469, 171.358, -6.37514, 0.15 ) }
    dend_4 { pt3dadd( 22.0351, 171.657, -6.20362, 0.29 ) }
    dend_4 { pt3dadd( 22.0351, 171.657, -6.20362, 0.74 ) }
    dend_4 { pt3dadd( 22.2386, 172.024, -6.09675, 1.03 ) }
    dend_4 { pt3dadd( 22.6672, 172.712, -6.25523, 1.03 ) }
    dend_4 { pt3dadd( 22.7831, 172.924, -6.32891, 1.03 ) }
    // Section: dend_127, id: dend_127, parent: dend_125 (entry count 75/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( -8.04869, -65.2446, 20.0264, 0.37 ) }
    dend_127 { pt3dadd( -7.5603, -65.7229, 19.9247, 0.37 ) }
    dend_127 { pt3dadd( -6.97086, -66.3149, 19.8045, 0.37 ) }
    dend_127 { pt3dadd( -6.48552, -66.8023, 19.7056, 0.37 ) }
    dend_127 { pt3dadd( -6.43995, -66.8481, 19.6963, 0.37 ) }
    dend_127 { pt3dadd( -6.10531, -67.1842, 19.628, 0.74 ) }
    dend_127 { pt3dadd( -5.99657, -67.2934, 19.6059, 1.11 ) }
    dend_127 { pt3dadd( -5.71651, -67.5705, 19.559, 1.11 ) }
    dend_127 { pt3dadd( 3.20827, -72.8023, 16.4378, 1.11 ) }
    dend_127 { pt3dadd( 12.2989, -78.0782, 13.9259, 1.11 ) }
    // Section: dend_126, id: dend_126, parent: dend_125 (entry count 85/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( -8.04869, -65.2446, 20.0264, 0.22 ) }
    dend_126 { pt3dadd( -9.3161, -64.5958, 18.7881, 0.22 ) }
    dend_126 { pt3dadd( -9.47701, -64.4959, 18.6227, 0.37 ) }
    dend_126 { pt3dadd( -9.62059, -64.3949, 18.4688, 0.52 ) }
    dend_126 { pt3dadd( -10.5597, -63.6457, 17.4105, 0.52 ) }
    dend_126 { pt3dadd( -10.6921, -63.5302, 17.2593, 0.74 ) }
    dend_126 { pt3dadd( -10.9616, -63.295, 16.9515, 0.88 ) }
    dend_126 { pt3dadd( -11.1326, -63.0588, 16.751, 1.03 ) }
    dend_126 { pt3dadd( -11.1818, -62.9784, 16.6838, 1.03 ) }
    dend_126 { pt3dadd( -11.2645, -62.8067, 16.5448, 1.03 ) }
    dend_126 { pt3dadd( -11.2743, -62.6112, 16.4393, 1.03 ) }
    dend_126 { pt3dadd( -16.3804, -57.145, 8.60227, 1.03 ) }
    dend_126 { pt3dadd( -19.985, -52.188, -0.321393, 1.03 ) }
    // Section: dend_115, id: dend_115, parent: dend_113 (entry count 98/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 6.26076, -62.0316, 8.95619, 0.29 ) }
    dend_115 { pt3dadd( 6.75205, -62.6586, 9.72517, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_115 { pt3dadd( 7.25416, -63.3626, 10.5394, 0.44 ) }
    dend_115 { pt3dadd( 7.45119, -63.6474, 10.8591, 0.81 ) }
    dend_115 { pt3dadd( 7.54499, -63.7829, 11.0113, 0.81 ) }
    dend_115 { pt3dadd( 8.24302, -64.7918, 12.1439, 0.29 ) }
    dend_115 { pt3dadd( 8.44646, -65.0859, 12.474, 0.29 ) }
    dend_115 { pt3dadd( 8.46702, -65.1301, 12.5244, 0.29 ) }
    dend_115 { pt3dadd( 8.4894, -65.1832, 12.5789, 0.66 ) }
    dend_115 { pt3dadd( 11.955, -70.593, 19.7129, 0.66 ) }
    dend_115 { pt3dadd( 13.9229, -75.7227, 27.5791, 0.66 ) }
    // Section: dend_114, id: dend_114, parent: dend_113 (entry count 9/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 6.26076, -62.0316, 8.95619, 0.29 ) }
    dend_114 { pt3dadd( 5.91323, -63.4277, 8.78987, 0.29 ) }
    dend_114 { pt3dadd( 5.73829, -64.1304, 8.70615, 0.29 ) }
    dend_114 { pt3dadd( 5.52027, -65.0063, 8.60181, 0.29 ) }
    dend_114 { pt3dadd( 5.43883, -65.3334, 8.56284, 0.29 ) }
    dend_114 { pt3dadd( 0.512941, -76.9107, 8.26217, 0.29 ) }
    dend_114 { pt3dadd( -2.38146, -89.0609, 10.0079, 0.29 ) }
    dend_114 { pt3dadd( -4.37003, -101.22, 12.7058, 0.29 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 17/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 93.039, -105.998, -12.274, 0.29 ) }
    dend_105 { pt3dadd( 94.5315, -106.239, -11.9616, 0.29 ) }
    dend_105 { pt3dadd( 95.4647, -106.386, -11.7578, 0.29 ) }
    dend_105 { pt3dadd( 95.807, -106.448, -11.6827, 0.66 ) }
    dend_105 { pt3dadd( 96.318, -106.568, -11.473, 0.66 ) }
    dend_105 { pt3dadd( 97.4605, -106.8, -10.9015, 0.22 ) }
    dend_105 { pt3dadd( 98.3772, -106.951, -10.4038, 0.22 ) }
    dend_105 { pt3dadd( 98.9309, -106.983, -10.0655, 0.59 ) }
    dend_105 { pt3dadd( 99.1414, -106.98, -9.92418, 0.88 ) }
    dend_105 { pt3dadd( 100.994, -106.886, -8.47574, 0.22 ) }
    dend_105 { pt3dadd( 101.76, -106.842, -7.8266, 0.22 ) }
    dend_105 { pt3dadd( 102.017, -106.833, -7.58338, 0.22 ) }
    dend_105 { pt3dadd( 102.37, -106.794, -7.22671, 0.81 ) }
    dend_105 { pt3dadd( 102.769, -106.734, -6.82953, 0.81 ) }
    dend_105 { pt3dadd( 104.157, -106.563, -5.58594, 0.29 ) }
    dend_105 { pt3dadd( 104.674, -106.533, -5.18734, 0.88 ) }
    dend_105 { pt3dadd( 105.465, -106.569, -4.59892, 0.66 ) }
    dend_105 { pt3dadd( 105.853, -106.605, -4.3107, 0.22 ) }
    dend_105 { pt3dadd( 106.227, -106.656, -4.03379, 0.29 ) }
    dend_105 { pt3dadd( 107.154, -106.836, -3.41295, 0.29 ) }
    dend_105 { pt3dadd( 107.767, -106.962, -3.10983, 0.59 ) }
    dend_105 { pt3dadd( 108.131, -107.036, -2.94452, 0.96 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 39/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 93.039, -105.998, -12.274, 0.29 ) }
    dend_104 { pt3dadd( 92.4732, -105.479, -12.3526, 0.29 ) }
    dend_104 { pt3dadd( 91.9605, -104.9, -12.4544, 0.29 ) }
    dend_104 { pt3dadd( 91.6966, -104.564, -12.5118, 0.29 ) }
    dend_104 { pt3dadd( 91.4675, -104.303, -12.5553, 0.29 ) }
    dend_104 { pt3dadd( 91.0943, -103.972, -12.5809, 0.81 ) }
    dend_104 { pt3dadd( 90.7857, -103.756, -12.5846, 0.22 ) }
    dend_104 { pt3dadd( 90.478, -103.607, -12.5739, 0.37 ) }
    dend_104 { pt3dadd( 90.0618, -103.41, -12.5483, 0.22 ) }
    dend_104 { pt3dadd( 89.2621, -103.116, -12.4721, 0.22 ) }
    dend_104 { pt3dadd( 88.3142, -102.913, -12.3479, 0.88 ) }
    dend_104 { pt3dadd( 87.8577, -102.884, -12.2681, 1.25 ) }
    dend_104 { pt3dadd( 87.6302, -102.895, -12.2203, 1.33 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 52/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 77.1081, -163.734, -85.4987, 0.37 ) }
    dend_102 { pt3dadd( 79.4156, -165.264, -88.107, 0.37 ) }
    dend_102 { pt3dadd( 80.0449, -165.737, -88.8302, 0.37 ) }
    dend_102 { pt3dadd( 80.4206, -166.05, -89.2627, 0.96 ) }
    dend_102 { pt3dadd( 80.6659, -166.267, -89.5337, 1.18 ) }
    dend_102 { pt3dadd( 83.1403, -168.518, -92.1297, 0.52 ) }
    dend_102 { pt3dadd( 83.6954, -169.026, -92.6803, 0.52 ) }
    dend_102 { pt3dadd( 84.1488, -169.446, -93.0343, 0.52 ) }
    dend_102 { pt3dadd( 84.8393, -170.015, -93.5261, 0.29 ) }
    dend_102 { pt3dadd( 85.3208, -170.386, -93.8216, 0.29 ) }
    dend_102 { pt3dadd( 85.6909, -170.637, -93.9794, 0.96 ) }
    dend_102 { pt3dadd( 86.0147, -170.828, -94.007, 0.96 ) }
    dend_102 { pt3dadd( 87.251, -171.29, -94.1765, 0.22 ) }
    dend_102 { pt3dadd( 88.4185, -171.545, -94.4918, 0.88 ) }
    dend_102 { pt3dadd( 88.5078, -171.556, -94.5251, 0.88 ) }
    dend_102 { pt3dadd( 89.229, -171.639, -94.9679, 1.25 ) }
    dend_102 { pt3dadd( 89.2958, -171.649, -95.015, 1.25 ) }
    dend_102 { pt3dadd( 90.3203, -171.831, -95.7934, 1.25 ) }
    dend_102 { pt3dadd( 91.7346, -172.129, -96.9237, 0.96 ) }
    dend_102 { pt3dadd( 91.799, -172.147, -96.9715, 0.96 ) }
    dend_102 { pt3dadd( 94.2442, -172.914, -98.6845, 0.22 ) }
    dend_102 { pt3dadd( 94.8695, -173.126, -99.0969, 0.59 ) }
    dend_102 { pt3dadd( 95.3203, -173.287, -99.3716, 0.59 ) }
    dend_102 { pt3dadd( 95.574, -173.376, -99.5146, 0.96 ) }
    dend_102 { pt3dadd( 97.5248, -174.035, -100.496, 0.22 ) }
    dend_102 { pt3dadd( 97.73, -174.094, -100.597, 0.22 ) }
    dend_102 { pt3dadd( 98.7759, -174.345, -101.073, 0.66 ) }
    dend_102 { pt3dadd( 99.497, -174.496, -101.42, 1.18 ) }
    dend_102 { pt3dadd( 101.854, -174.932, -102.446, 0.22 ) }
    dend_102 { pt3dadd( 102.517, -175.035, -102.689, 0.96 ) }
    dend_102 { pt3dadd( 105.094, -175.361, -103.698, 0.22 ) }
    dend_102 { pt3dadd( 105.546, -175.424, -103.91, 0.81 ) }
    dend_102 { pt3dadd( 105.632, -175.439, -103.982, 0.81 ) }
    dend_102 { pt3dadd( 104.577, -174.739, -98.5513, 0.37 ) }
    dend_102 { pt3dadd( 104.58, -174.609, -97.4223, 0.88 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 87/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 77.1081, -163.734, -85.4987, 0.29 ) }
    dend_101 { pt3dadd( 77.0086, -164.121, -88.7294, 0.29 ) }
    dend_101 { pt3dadd( 76.9818, -164.277, -89.6243, 0.29 ) }
    dend_101 { pt3dadd( 76.9593, -164.425, -90.3537, 0.66 ) }
    dend_101 { pt3dadd( 76.9019, -164.758, -91.7719, 0.66 ) }
    dend_101 { pt3dadd( 76.6282, -165.923, -96.1604, 0.44 ) }
    dend_101 { pt3dadd( 76.5936, -166.039, -96.5455, 0.74 ) }
    dend_101 { pt3dadd( 76.5532, -166.369, -97.4928, 0.29 ) }
    dend_101 { pt3dadd( 76.5523, -166.397, -97.5756, 0.29 ) }
    dend_101 { pt3dadd( 76.563, -166.588, -98.1621, 0.96 ) }
    dend_101 { pt3dadd( 76.605, -167.236, -100.143, 0.52 ) }
    dend_101 { pt3dadd( 76.618, -167.503, -100.958, 1.11 ) }
    dend_101 { pt3dadd( 76.6692, -169.097, -105.849, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_101 { pt3dadd( 76.6707, -169.182, -106.115, 1.03 ) }
    dend_101 { pt3dadd( 76.6452, -170.245, -109.274, 0.37 ) }
    dend_101 { pt3dadd( 76.644, -170.3, -109.429, 0.37 ) }
    dend_101 { pt3dadd( 76.6295, -170.621, -110.252, 0.37 ) }
    dend_101 { pt3dadd( 76.5444, -171.164, -111.501, 0.37 ) }
    dend_101 { pt3dadd( 76.495, -171.296, -111.742, 0.37 ) }
    dend_101 { pt3dadd( 76.3323, -171.712, -112.467, 0.37 ) }
    dend_101 { pt3dadd( 75.9461, -172.755, -114.478, 0.22 ) }
    dend_101 { pt3dadd( 75.8651, -172.982, -114.98, 0.52 ) }
    dend_101 { pt3dadd( 75.734, -173.38, -116.022, 0.37 ) }
    dend_101 { pt3dadd( 75.5709, -173.935, -117.67, 0.81 ) }
    dend_101 { pt3dadd( 75.5153, -174.116, -118.278, 0.81 ) }
    dend_101 { pt3dadd( 75.2549, -174.983, -121.451, 0.44 ) }
    dend_101 { pt3dadd( 75.1809, -175.204, -122.287, 0.59 ) }
    dend_101 { pt3dadd( 74.9653, -175.879, -124.724, 0.22 ) }
    dend_101 { pt3dadd( 74.9653, -175.879, -124.724, 0.74 ) }
    dend_101 { pt3dadd( 74.6644, -177.101, -128.309, 0.52 ) }
    dend_101 { pt3dadd( 74.522, -177.75, -130.153, 0.96 ) }
    dend_101 { pt3dadd( 74.5156, -177.782, -130.236, 0.96 ) }
    dend_101 { pt3dadd( 74.4612, -178.412, -131.831, 0.52 ) }
    dend_101 { pt3dadd( 74.4494, -178.804, -132.768, 0.52 ) }
    dend_101 { pt3dadd( 74.4452, -179.976, -135.485, 0.96 ) }
    dend_101 { pt3dadd( 74.4521, -180.091, -135.729, 0.96 ) }
    dend_101 { pt3dadd( 74.4689, -180.253, -136.094, 0.96 ) }
    dend_101 { pt3dadd( 74.6486, -181.289, -138.719, 0.52 ) }
    dend_101 { pt3dadd( 74.6718, -181.346, -138.915, 0.88 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 26/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -35.67, -85.4658, 66.9898, 0.29 ) }
    dend_82 { pt3dadd( -39.6426, -91.8311, 74.4893, 0.29 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 28/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -35.67, -85.4658, 66.9898, 0.44 ) }
    dend_81 { pt3dadd( -39.5624, -90.7901, 72.8434, 0.29 ) }
    dend_81 { pt3dadd( -42.7513, -94.7979, 79.9825, 0.29 ) }
    dend_81 { pt3dadd( -45.6572, -98.6327, 87.3302, 0.29 ) }
    dend_81 { pt3dadd( -47.9247, -101.958, 95.1266, 0.29 ) }
    dend_81 { pt3dadd( -50.1881, -104.249, 103.272, 0.29 ) }
    dend_81 { pt3dadd( -50.9356, -105.632, 111.882, 0.29 ) }
    dend_81 { pt3dadd( -51.344, -105.391, 120.618, 0.29 ) }
    dend_81 { pt3dadd( -51.8995, -104.961, 129.339, 0.29 ) }
    dend_81 { pt3dadd( -53.5758, -104.664, 137.921, 0.29 ) }
    dend_81 { pt3dadd( -53.8738, -105.287, 146.643, 0.29 ) }
    dend_81 { pt3dadd( -55.9168, -106.437, 155.073, 0.29 ) }
    dend_81 { pt3dadd( -57.5334, -106.964, 163.655, 0.29 ) }
    dend_81 { pt3dadd( -59.9095, -107.261, 172.069, 0.29 ) }
    dend_81 { pt3dadd( -64.5479, -108.203, 179.427, 0.29 ) }
    dend_81 { pt3dadd( -68.0666, -108.208, 187.437, 0.29 ) }
    dend_81 { pt3dadd( -72.0926, -108.437, 195.201, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 45/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -49.3685, 46.9162, -102.878, 0.52 ) }
    dend_51 { pt3dadd( -48.3982, 46.703, -106.437, 0.52 ) }
    dend_51 { pt3dadd( -48.3521, 46.6857, -106.59, 0.52 ) }
    dend_51 { pt3dadd( -48.2896, 46.6535, -106.78, 0.52 ) }
    dend_51 { pt3dadd( -48.22, 46.6091, -106.974, 0.59 ) }
    dend_51 { pt3dadd( -48.1376, 46.5494, -107.191, 0.66 ) }
    dend_51 { pt3dadd( -48.0669, 46.4936, -107.385, 0.66 ) }
    dend_51 { pt3dadd( -47.431, 45.8127, -108.936, 0.29 ) }
    dend_51 { pt3dadd( -47.3161, 45.6823, -109.243, 0.29 ) }
    dend_51 { pt3dadd( -47.2224, 45.5989, -109.556, 0.44 ) }
    dend_51 { pt3dadd( -47.1919, 45.5794, -109.667, 0.66 ) }
    dend_51 { pt3dadd( -46.7426, 45.4227, -111.307, 0.52 ) }
    dend_51 { pt3dadd( -46.728, 45.4199, -111.359, 0.81 ) }
    dend_51 { pt3dadd( -46.6455, 45.4162, -111.638, 0.81 ) }
    dend_51 { pt3dadd( -45.8873, 45.4848, -114.109, 0.29 ) }
    dend_51 { pt3dadd( -45.7901, 45.5052, -114.409, 0.29 ) }
    dend_51 { pt3dadd( -45.5101, 45.5962, -115.204, 0.88 ) }
    dend_51 { pt3dadd( -45.3853, 45.6509, -115.519, 1.03 ) }
    dend_51 { pt3dadd( -45.2349, 45.7267, -115.897, 1.03 ) }
    dend_51 { pt3dadd( -45.1597, 45.8038, -116.175, 1.03 ) }
    dend_51 { pt3dadd( -45.1317, 45.8542, -116.332, 1.03 ) }
    dend_51 { pt3dadd( -45.0892, 45.9599, -116.651, 1.03 ) }
    dend_51 { pt3dadd( -45.0753, 46.0732, -116.984, 1.03 ) }
    dend_51 { pt3dadd( -45.074, 46.1095, -117.086, 1.03 ) }
    dend_51 { pt3dadd( -45.1219, 47.1892, -120.114, 0.66 ) }
    dend_51 { pt3dadd( -45.1231, 47.2076, -120.168, 0.66 ) }
    dend_51 { pt3dadd( -45.1272, 47.2484, -120.282, 0.74 ) }
    dend_51 { pt3dadd( -45.2212, 48.0699, -122.53, 0.15 ) }
    dend_51 { pt3dadd( -45.2269, 48.1335, -122.689, 0.15 ) }
    dend_51 { pt3dadd( -45.2589, 48.3519, -123.193, 0.52 ) }
    dend_51 { pt3dadd( -45.2659, 48.3799, -123.248, 0.52 ) }
    dend_51 { pt3dadd( -45.2554, 48.532, -123.622, 0.59 ) }
    dend_51 { pt3dadd( -45.221, 48.5497, -123.709, 0.59 ) }
    dend_51 { pt3dadd( -44.9757, 48.5058, -123.889, 0.59 ) }
    dend_51 { pt3dadd( -44.7755, 48.4696, -124.021, 0.59 ) }
    dend_51 { pt3dadd( -43.7862, 48.3012, -124.581, 0.15 ) }
    dend_51 { pt3dadd( -43.482, 48.2507, -124.768, 0.15 ) }
    dend_51 { pt3dadd( -43.2673, 48.2165, -124.9, 0.74 ) }
    dend_51 { pt3dadd( -43.1424, 48.203, -124.99, 1.11 ) }
    dend_51 { pt3dadd( -42.9551, 48.1933, -125.139, 1.11 ) }
    dend_51 { pt3dadd( -42.2033, 48.214, -125.759, 0.29 ) }
    dend_51 { pt3dadd( -41.5355, 48.279, -126.317, 0.29 ) }
    dend_51 { pt3dadd( -41.3646, 48.3081, -126.474, 0.29 ) }
    dend_51 { pt3dadd( -40.6478, 48.4678, -127.182, 0.22 ) }
    dend_51 { pt3dadd( -40.5677, 48.4886, -127.265, 0.22 ) }
    dend_51 { pt3dadd( -40.3884, 48.5442, -127.462, 0.22 ) }
    dend_51 { pt3dadd( -40.3506, 48.5617, -127.51, 0.22 ) }
    dend_51 { pt3dadd( -40.112, 48.6827, -127.763, 0.66 ) }
    dend_51 { pt3dadd( -40.034, 48.7203, -127.843, 0.66 ) }
    dend_51 { pt3dadd( -39.8185, 48.7835, -127.933, 0.88 ) }
    dend_51 { pt3dadd( -39.7696, 48.7903, -127.955, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -49.3685, 46.9162, -102.878, 0.37 ) }
    dend_50 { pt3dadd( -50.0859, 46.6497, -103.04, 0.37 ) }
    dend_50 { pt3dadd( -50.4819, 46.5102, -103.123, 0.22 ) }
    dend_50 { pt3dadd( -50.9631, 46.3377, -103.258, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_50 { pt3dadd( -51.2636, 46.2237, -103.354, 0.81 ) }
    dend_50 { pt3dadd( -52.1304, 45.8651, -103.654, 0.52 ) }
    dend_50 { pt3dadd( -52.4142, 45.7402, -103.756, 0.37 ) }
    dend_50 { pt3dadd( -52.6975, 45.5782, -103.983, 0.37 ) }
    dend_50 { pt3dadd( -53.0944, 45.3048, -104.472, 0.37 ) }
    dend_50 { pt3dadd( -53.1755, 45.2394, -104.606, 0.66 ) }
    dend_50 { pt3dadd( -53.2677, 45.1554, -104.799, 0.81 ) }
    dend_50 { pt3dadd( -53.293, 45.1312, -104.867, 0.96 ) }
    dend_50 { pt3dadd( -54.1164, 44.4981, -107.016, 0.37 ) }
    dend_50 { pt3dadd( -54.1625, 44.4734, -107.121, 0.37 ) }
    dend_50 { pt3dadd( -54.1879, 44.462, -107.175, 0.59 ) }
    dend_50 { pt3dadd( -54.2515, 44.4345, -107.306, 0.74 ) }
    dend_50 { pt3dadd( -54.9153, 44.1372, -108.605, 1.03 ) }
    dend_50 { pt3dadd( -55.1596, 44.0144, -109.061, 0.44 ) }
    dend_50 { pt3dadd( -55.4606, 43.8652, -109.571, 0.44 ) }
    dend_50 { pt3dadd( -56.5812, 43.2575, -111.541, 0.59 ) }
    dend_50 { pt3dadd( -56.7213, 43.1718, -111.798, 0.74 ) }
    dend_50 { pt3dadd( -56.8497, 43.0756, -112.048, 0.74 ) }
    dend_50 { pt3dadd( -56.9354, 42.9807, -112.238, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 19/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -73.6252, 206.686, -181.59, 0.22 ) }
    dend_46 { pt3dadd( -74.5448, 208.181, -181.275, 0.22 ) }
    dend_46 { pt3dadd( -74.6565, 208.35, -181.258, 0.22 ) }
    dend_46 { pt3dadd( -74.7062, 208.583, -181.53, 0.22 ) }
    dend_46 { pt3dadd( -74.7312, 208.765, -181.732, 0.22 ) }
    dend_46 { pt3dadd( -74.8209, 209.461, -182.433, 0.37 ) }
    dend_46 { pt3dadd( -74.8515, 209.684, -182.639, 0.66 ) }
    dend_46 { pt3dadd( -74.8578, 209.757, -182.708, 0.88 ) }
    dend_46 { pt3dadd( -75.0302, 212.971, -185.586, 0.29 ) }
    dend_46 { pt3dadd( -75.0365, 213.479, -186.016, 0.29 ) }
    dend_46 { pt3dadd( -75.0382, 214.105, -186.524, 0.44 ) }
    dend_46 { pt3dadd( -75.0359, 214.485, -186.808, 0.52 ) }
    dend_46 { pt3dadd( -75.0462, 215.15, -187.284, 0.22 ) }
    dend_46 { pt3dadd( -75.068, 215.488, -187.49, 0.22 ) }
    dend_46 { pt3dadd( -75.1162, 215.664, -187.553, 0.37 ) }
    dend_46 { pt3dadd( -75.4095, 216.344, -188.056, 0.22 ) }
    dend_46 { pt3dadd( -75.5074, 216.504, -188.254, 0.29 ) }
    dend_46 { pt3dadd( -75.5788, 216.612, -188.408, 0.66 ) }
    dend_46 { pt3dadd( -75.6023, 216.657, -188.477, 0.66 ) }
    dend_46 { pt3dadd( -75.8185, 217.535, -189.766, 0.37 ) }
    dend_46 { pt3dadd( -75.8202, 217.617, -189.87, 0.22 ) }
    dend_46 { pt3dadd( -75.8101, 217.671, -189.936, 0.15 ) }
    dend_46 { pt3dadd( -75.6789, 218.188, -190.536, 0.15 ) }
    dend_46 { pt3dadd( -75.4138, 218.842, -191.221, 0.88 ) }
    dend_46 { pt3dadd( -75.2978, 219.098, -191.464, 0.88 ) }
    dend_46 { pt3dadd( -74.7797, 220.16, -192.595, 0.44 ) }
    dend_46 { pt3dadd( -74.4025, 220.94, -193.499, 0.44 ) }
    dend_46 { pt3dadd( -74.3477, 221.057, -193.639, 0.74 ) }
    dend_46 { pt3dadd( -73.8251, 222.179, -195.013, 0.22 ) }
    dend_46 { pt3dadd( -73.7169, 222.405, -195.272, 0.22 ) }
    dend_46 { pt3dadd( -72.8666, 224.04, -197.009, 0.22 ) }
    dend_46 { pt3dadd( -72.7608, 224.215, -197.204, 0.66 ) }
    dend_46 { pt3dadd( -72.5847, 224.543, -197.58, 0.66 ) }
    dend_46 { pt3dadd( -72.4728, 224.78, -197.859, 0.66 ) }
    dend_46 { pt3dadd( -72.2295, 225.388, -198.566, 0.15 ) }
    dend_46 { pt3dadd( -72.1525, 225.578, -198.761, 0.66 ) }
    dend_46 { pt3dadd( -71.2916, 227.786, -200.738, 0.15 ) }
    dend_46 { pt3dadd( -71.1782, 228.116, -201.038, 0.22 ) }
    dend_46 { pt3dadd( -71.1105, 228.348, -201.252, 0.22 ) }
    dend_46 { pt3dadd( -70.9748, 228.895, -201.798, 0.81 ) }
    dend_46 { pt3dadd( -70.9051, 229.232, -202.142, 0.81 ) }
    dend_46 { pt3dadd( -70.6479, 230.422, -203.297, 0.29 ) }
    dend_46 { pt3dadd( -70.5402, 230.9, -203.681, 0.29 ) }
    dend_46 { pt3dadd( -70.509, 231.027, -203.794, 0.52 ) }
    dend_46 { pt3dadd( -70.1589, 232.532, -205.26, 0.44 ) }
    dend_46 { pt3dadd( -70.12, 232.72, -205.467, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -73.6252, 206.686, -181.59, 1.03 ) }
    dend_45 { pt3dadd( -73.1213, 205.895, -181.684, 1.03 ) }
    dend_45 { pt3dadd( -72.5182, 205.056, -181.77, 0.29 ) }
    dend_45 { pt3dadd( -72.1595, 204.603, -181.812, 0.29 ) }
    dend_45 { pt3dadd( -71.7932, 204.154, -181.853, 0.22 ) }
    dend_45 { pt3dadd( -71.529, 203.84, -181.88, 0.22 ) }
    dend_45 { pt3dadd( -71.2767, 203.547, -181.902, 0.37 ) }
    dend_45 { pt3dadd( -70.9883, 203.235, -181.919, 0.37 ) }
    dend_45 { pt3dadd( -70.2976, 202.562, -181.892, 0.22 ) }
    dend_45 { pt3dadd( -70.0348, 202.318, -181.875, 0.22 ) }
    dend_45 { pt3dadd( -69.7711, 202.086, -181.852, 0.37 ) }
    dend_45 { pt3dadd( -69.6194, 201.955, -181.837, 0.37 ) }
    dend_45 { pt3dadd( -68.643, 201.094, -181.713, 0.22 ) }
    dend_45 { pt3dadd( -68.2098, 200.723, -181.793, 0.22 ) }
    dend_45 { pt3dadd( -68.1703, 200.692, -181.822, 0.22 ) }
    dend_45 { pt3dadd( -68.0013, 200.563, -182.059, 0.22 ) }
    dend_45 { pt3dadd( -67.8811, 200.442, -182.367, 0.22 ) }
    dend_45 { pt3dadd( -67.7947, 200.307, -182.749, 0.74 ) }
    dend_45 { pt3dadd( -67.4443, 199.406, -185.598, 0.59 ) }
    dend_45 { pt3dadd( -67.4192, 199.317, -185.863, 0.52 ) }
    dend_45 { pt3dadd( -67.4106, 199.281, -185.965, 0.52 ) }
    dend_45 { pt3dadd( -67.3845, 199.078, -186.686, 0.29 ) }
    dend_45 { pt3dadd( -67.3881, 198.988, -187.096, 0.29 ) }
    dend_45 { pt3dadd( -67.4092, 198.822, -187.939, 0.37 ) }
    dend_45 { pt3dadd( -67.4194, 198.763, -188.241, 0.44 ) }
    dend_45 { pt3dadd( -67.4204, 198.752, -188.309, 0.44 ) }
    dend_45 { pt3dadd( -67.4384, 198.472, -190.099, 0.44 ) }
    dend_45 { pt3dadd( -67.4413, 198.431, -190.392, 0.44 ) }
    dend_45 { pt3dadd( -67.4638, 198.369, -190.805, 0.44 ) }
    dend_45 { pt3dadd( -67.6207, 198.129, -192.295, 0.22 ) }
    dend_45 { pt3dadd( -67.6606, 198.069, -192.624, 0.22 ) }
    dend_45 { pt3dadd( -67.6959, 197.98, -192.983, 0.22 ) }
    dend_45 { pt3dadd( -67.7016, 197.905, -193.128, 0.37 ) }
    dend_45 { pt3dadd( -67.7013, 197.861, -193.213, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -98.108, 15.3366, -49.198, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_39 { pt3dadd( -98.5265, 16.4362, -51.4092, 0.29 ) }
    dend_39 { pt3dadd( -98.602, 16.6109, -51.7782, 0.66 ) }
    dend_39 { pt3dadd( -98.6309, 16.6781, -51.9199, 0.66 ) }
    dend_39 { pt3dadd( -99.0859, 17.7317, -54.145, 0.29 ) }
    dend_39 { pt3dadd( -99.5663, 18.8443, -56.4947, 1.18 ) }
    dend_39 { pt3dadd( -99.6519, 19.0424, -56.913, 1.62 ) }
    dend_39 { pt3dadd( -99.6999, 19.1819, -57.1904, 1.62 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 7/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -98.108, 15.3366, -49.198, 0.22 ) }
    dend_38 { pt3dadd( -97.7322, 17.3953, -49.6715, 0.22 ) }
    dend_38 { pt3dadd( -97.6958, 17.5945, -49.7173, 0.37 ) }
    dend_38 { pt3dadd( -97.4796, 18.7787, -49.9896, 0.29 ) }
    dend_38 { pt3dadd( -97.4141, 19.1378, -50.0722, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_21 (entry count 12/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -61.1607, 137.921, -158.406, 0.29 ) }
    dend_29 { pt3dadd( -62.0065, 138.011, -158.755, 0.29 ) }
    dend_29 { pt3dadd( -62.0576, 138.021, -158.774, 0.29 ) }
    dend_29 { pt3dadd( -62.7453, 138.25, -159.158, 0.59 ) }
    dend_29 { pt3dadd( -63.0147, 138.359, -159.339, 0.66 ) }
    dend_29 { pt3dadd( -63.2596, 138.48, -159.537, 0.52 ) }
    dend_29 { pt3dadd( -63.3234, 138.515, -159.591, 0.52 ) }
    dend_29 { pt3dadd( -63.7243, 138.756, -159.961, 0.37 ) }
    dend_29 { pt3dadd( -64.616, 139.273, -160.831, 0.66 ) }
    dend_29 { pt3dadd( -65.0495, 139.5, -161.26, 0.74 ) }
    dend_29 { pt3dadd( -65.7518, 139.804, -161.936, 0.29 ) }
    dend_29 { pt3dadd( -66.2975, 139.993, -162.441, 0.29 ) }
    dend_29 { pt3dadd( -66.9851, 140.209, -163.066, 0.66 ) }
    dend_29 { pt3dadd( -67.3465, 140.304, -163.384, 0.52 ) }
    dend_29 { pt3dadd( -67.9749, 140.413, -163.869, 0.29 ) }
    dend_29 { pt3dadd( -68.5511, 140.466, -164.278, 0.52 ) }
    dend_29 { pt3dadd( -68.9526, 140.454, -164.523, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -61.1607, 137.921, -158.406, 0.29 ) }
    dend_22 { pt3dadd( -61.155, 138.203, -159.285, 0.29 ) }
    dend_22 { pt3dadd( -61.1544, 138.217, -159.325, 0.29 ) }
    dend_22 { pt3dadd( -61.1445, 138.489, -160.145, 0.66 ) }
    dend_22 { pt3dadd( -61.1186, 139.041, -161.8, 0.66 ) }
    dend_22 { pt3dadd( -61.0761, 139.606, -163.455, 0.22 ) }
    dend_22 { pt3dadd( -61.0698, 139.694, -163.708, 0.29 ) }
    dend_22 { pt3dadd( -61.0725, 139.763, -163.913, 0.29 ) }
    dend_22 { pt3dadd( -61.0849, 140.048, -164.735, 0.22 ) }
    dend_22 { pt3dadd( -61.086, 140.091, -164.855, 0.59 ) }
    dend_22 { pt3dadd( -61.0728, 140.189, -165.063, 0.59 ) }
    dend_22 { pt3dadd( -61.0209, 140.461, -165.513, 0.59 ) }
    dend_22 { pt3dadd( -60.9892, 140.744, -165.995, 0.29 ) }
    dend_22 { pt3dadd( -60.9803, 140.836, -166.145, 0.29 ) }
    dend_22 { pt3dadd( -60.9426, 141.197, -166.663, 0.59 ) }
    dend_22 { pt3dadd( -60.9372, 141.293, -166.819, 1.03 ) }
    dend_22 { pt3dadd( -60.9237, 141.405, -167.016, 1.25 ) }
    dend_22 { pt3dadd( -60.7824, 142.11, -168.247, 0.22 ) }
    dend_22 { pt3dadd( -60.7535, 142.215, -168.434, 0.22 ) }
    dend_22 { pt3dadd( -60.7175, 142.333, -168.644, 0.74 ) }
    dend_22 { pt3dadd( -60.5004, 142.972, -169.764, 0.22 ) }
    dend_22 { pt3dadd( -60.386, 143.256, -170.257, 0.29 ) }
    dend_22 { pt3dadd( -60.3412, 143.351, -170.415, 0.29 ) }
    dend_22 { pt3dadd( -60.1725, 143.611, -170.786, 0.59 ) }
    dend_22 { pt3dadd( -60.109, 143.702, -170.904, 0.66 ) }
    dend_22 { pt3dadd( -60.0166, 143.827, -171.018, 0.52 ) }
    dend_22 { pt3dadd( -59.8203, 144.093, -171.146, 0.22 ) }
    dend_22 { pt3dadd( -59.7411, 144.216, -171.199, 0.52 ) }
    dend_22 { pt3dadd( -59.6274, 144.385, -171.262, 0.81 ) }
    dend_22 { pt3dadd( -59.4325, 144.66, -171.32, 0.74 ) }
    dend_22 { pt3dadd( -59.0602, 145.125, -171.398, 0.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 60/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.7546, 180.526, -27.7972, 0.22 ) }
    dend_17 { pt3dadd( -16.9444, 181.437, -27.7866, 0.22 ) }
    dend_17 { pt3dadd( -17.1802, 182.144, -27.795, 0.22 ) }
    dend_17 { pt3dadd( -17.7307, 183.506, -27.8136, 0.29 ) }
    dend_17 { pt3dadd( -18.1836, 184.412, -27.8165, 0.29 ) }
    dend_17 { pt3dadd( -18.4692, 184.918, -27.8063, 1.11 ) }
    dend_17 { pt3dadd( -18.6563, 185.228, -27.7922, 1.33 ) }
    dend_17 { pt3dadd( -19.4762, 186.431, -27.7192, 0.22 ) }
    dend_17 { pt3dadd( -19.7953, 186.84, -27.6785, 0.81 ) }
    dend_17 { pt3dadd( -20.755, 187.939, -27.5192, 0.29 ) }
    dend_17 { pt3dadd( -21.527, 188.801, -27.3711, 0.29 ) }
    dend_17 { pt3dadd( -21.9536, 189.305, -27.3048, 0.52 ) }
    dend_17 { pt3dadd( -21.9536, 189.305, -27.3048, 0.59 ) }
    dend_17 { pt3dadd( -22.2207, 189.711, -27.2708, 0.37 ) }
    dend_17 { pt3dadd( -22.5419, 190.25, -27.2606, 0.81 ) }
    dend_17 { pt3dadd( -22.6586, 190.493, -27.2753, 0.81 ) }
    dend_17 { pt3dadd( -23.1279, 191.647, -27.4159, 0.44 ) }
    dend_17 { pt3dadd( -23.2928, 192.099, -27.5013, 0.44 ) }
    dend_17 { pt3dadd( -23.4264, 192.491, -27.585, 0.66 ) }
    dend_17 { pt3dadd( -23.5673, 192.998, -27.7104, 0.29 ) }
    dend_17 { pt3dadd( -23.6901, 193.505, -27.8614, 0.74 ) }
    dend_17 { pt3dadd( -23.7606, 193.819, -27.9549, 0.81 ) }
    dend_17 { pt3dadd( -23.9795, 194.952, -28.2796, 0.29 ) }
    dend_17 { pt3dadd( -24.0693, 195.396, -28.4196, 0.44 ) }
    dend_17 { pt3dadd( -24.2027, 196.079, -28.6659, 0.52 ) }
    dend_17 { pt3dadd( -24.3351, 196.759, -28.9458, 0.44 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 86/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -16.7546, 180.526, -27.7972, 0.44 ) }
    dend_16 { pt3dadd( -16.338, 181.351, -27.4561, 0.44 ) }
    dend_16 { pt3dadd( -15.7513, 182.66, -26.9201, 0.44 ) }
    dend_16 { pt3dadd( -15.0926, 184.206, -26.3591, 0.44 ) }
    dend_16 { pt3dadd( -14.6979, 185.124, -26.0669, 1.18 ) }
    dend_16 { pt3dadd( -13.3844, 187.785, -24.7814, 0.59 ) }
    dend_16 { pt3dadd( -12.8648, 188.751, -24.2084, 0.37 ) }
    dend_16 { pt3dadd( -12.4235, 189.558, -23.6451, 0.37 ) }
    dend_16 { pt3dadd( -11.9414, 190.394, -23.0129, 0.59 ) }
    dend_16 { pt3dadd( -11.5492, 191.023, -22.5265, 1.18 ) }
    dend_16 { pt3dadd( -9.29006, 194.512, -19.9435, 0.88 ) }
    dend_16 { pt3dadd( -8.47882, 195.755, -19.0538, 0.96 ) }
    dend_16 { pt3dadd( -7.92704, 196.579, -18.4411, 0.96 ) }
    dend_16 { pt3dadd( -7.24727, 197.587, -17.6908, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_16 { pt3dadd( -7.07787, 197.868, -17.4889, 0.59 ) }
    dend_16 { pt3dadd( -6.58844, 198.727, -16.7157, 0.59 ) }
    dend_16 { pt3dadd( -5.95003, 199.974, -15.5587, 0.52 ) }
    dend_16 { pt3dadd( -5.62571, 200.588, -14.8355, 0.29 ) }
    dend_16 { pt3dadd( -5.50087, 200.805, -14.5365, 0.81 ) }
    dend_16 { pt3dadd( -5.21555, 201.255, -13.838, 0.81 ) }
    dend_16 { pt3dadd( -3.18361, 204.1, -9.01436, 0.66 ) }
    dend_16 { pt3dadd( -2.86782, 204.418, -8.4154, 0.74 ) }
    dend_16 { pt3dadd( -2.81483, 204.459, -8.34208, 0.74 ) }
    dend_16 { pt3dadd( -2.42344, 204.729, -7.83911, 0.96 ) }
    dend_16 { pt3dadd( -1.42017, 205.456, -6.61094, 0.29 ) }
    dend_16 { pt3dadd( -1.19687, 205.618, -6.35299, 0.81 ) }
    dend_16 { pt3dadd( 0.212798, 206.856, -4.44906, 0.22 ) }
    dend_16 { pt3dadd( 0.474578, 207.128, -3.84137, 1.33 ) }
    dend_16 { pt3dadd( 1.09135, 207.975, -1.11237, 0.29 ) }
    dend_16 { pt3dadd( 1.14377, 208.121, -0.42227, 0.29 ) }
    dend_16 { pt3dadd( 1.09502, 208.224, 0.516583, 0.59 ) }
    dend_16 { pt3dadd( 0.75801, 208.107, 2.07462, 0.29 ) }
    dend_16 { pt3dadd( 0.40845, 207.77, 2.84154, 0.29 ) }
    dend_16 { pt3dadd( 0.0282736, 207.221, 3.50854, 0.29 ) }
    dend_16 { pt3dadd( -0.0749922, 207.017, 3.64066, 0.88 ) }
    dend_16 { pt3dadd( -0.295485, 206.465, 3.91213, 0.88 ) }
    dend_16 { pt3dadd( -0.429986, 205.73, 3.9802, 0.52 ) }
    dend_16 { pt3dadd( 0.097289, 205.143, 3.15682, 0.44 ) }
    dend_16 { pt3dadd( 0.332377, 204.996, 2.81262, 0.52 ) }
    dend_16 { pt3dadd( 1.24407, 204.733, 1.50266, 0.66 ) }
    dend_16 { pt3dadd( 2.25286, 204.639, 0.0577102, 0.52 ) }
    dend_16 { pt3dadd( 2.50945, 204.65, -0.29556, 0.52 ) }
    dend_16 { pt3dadd( 3.36205, 204.699, -1.46941, 0.37 ) }
    dend_16 { pt3dadd( 3.70141, 204.699, -1.9864, 0.52 ) }
    dend_16 { pt3dadd( 4.22714, 204.636, -2.88062, 0.22 ) }
    dend_16 { pt3dadd( 4.53692, 204.531, -3.46338, 0.22 ) }
    dend_16 { pt3dadd( 4.89073, 204.312, -4.19183, 0.74 ) }
    dend_16 { pt3dadd( 5.50921, 203.781, -5.46949, 0.37 ) }
    dend_16 { pt3dadd( 6.24999, 202.962, -7.1156, 0.29 ) }
    dend_16 { pt3dadd( 6.63086, 202.469, -7.98176, 0.81 ) }
    dend_16 { pt3dadd( 6.72627, 202.323, -8.20805, 0.96 ) }
    dend_16 { pt3dadd( 7.28876, 201.379, -9.61961, 0.29 ) }
    dend_16 { pt3dadd( 7.58608, 200.847, -10.4225, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 21.1362, 122.021, 28.6188, 0.29 ) }
    dend_12 { pt3dadd( 20.7903, 123.018, 28.4379, 0.29 ) }
    dend_12 { pt3dadd( 20.5479, 123.805, 28.2825, 0.29 ) }
    dend_12 { pt3dadd( 20.3748, 124.459, 28.128, 0.59 ) }
    dend_12 { pt3dadd( 20.0673, 125.608, 27.8548, 0.59 ) }
    dend_12 { pt3dadd( 19.7722, 126.71, 27.5926, 0.52 ) }
    dend_12 { pt3dadd( 19.4873, 127.774, 27.3394, 0.52 ) }
    dend_12 { pt3dadd( 19.2661, 128.626, 27.1334, 0.52 ) }
    dend_12 { pt3dadd( 18.9005, 130.183, 26.7292, 0.52 ) }
    dend_12 { pt3dadd( 18.6898, 131.159, 26.4701, 0.52 ) }
    dend_12 { pt3dadd( 17.6825, 140.829, 23.4605, 0.52 ) }
    dend_12 { pt3dadd( 18.5611, 150.788, 21.5002, 0.52 ) }
    dend_12 { pt3dadd( 17.7326, 160.777, 19.632, 0.52 ) }
    dend_12 { pt3dadd( 16.3825, 169.992, 15.5855, 0.52 ) }
    dend_12 { pt3dadd( 12.7971, 179.053, 12.7122, 0.52 ) }
    dend_12 { pt3dadd( 10.3629, 188.422, 9.60155, 0.52 ) }
    dend_12 { pt3dadd( 8.87061, 198.189, 7.12836, 0.52 ) }
    dend_12 { pt3dadd( 5.36521, 207.711, 6.22597, 0.52 ) }
    dend_12 { pt3dadd( 2.412, 217.472, 6.1392, 0.52 ) }
    dend_12 { pt3dadd( -0.751858, 227.061, 4.79104, 0.52 ) }
    dend_12 { pt3dadd( -2.28447, 236.998, 3.10013, 0.52 ) }
    dend_12 { pt3dadd( -2.24833, 247.149, 2.06542, 0.52 ) }
    dend_12 { pt3dadd( -1.99873, 257.344, 2.59633, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 21.1362, 122.021, 28.6188, 0.52 ) }
    dend_11 { pt3dadd( 21.4787, 122.268, 30.3664, 0.52 ) }
    dend_11 { pt3dadd( 21.6336, 122.386, 31.1406, 0.44 ) }
    dend_11 { pt3dadd( 21.6802, 122.426, 31.3639, 0.74 ) }
    dend_11 { pt3dadd( 21.7977, 122.54, 31.8936, 0.74 ) }
    dend_11 { pt3dadd( 22.0357, 122.813, 32.8827, 0.52 ) }
    dend_11 { pt3dadd( 23.5546, 124.996, 38.3405, 0.52 ) }
    dend_11 { pt3dadd( 24.411, 125.672, 44.3094, 0.22 ) }
    dend_11 { pt3dadd( 24.47, 125.647, 44.9099, 0.22 ) }
    dend_11 { pt3dadd( 24.4832, 125.501, 45.4354, 0.22 ) }
    dend_11 { pt3dadd( 24.5191, 125.681, 45.1783, 0.22 ) }
    dend_11 { pt3dadd( 24.6298, 126.112, 44.7188, 0.74 ) }
    dend_11 { pt3dadd( 24.6977, 126.356, 44.4756, 1.11 ) }
    dend_11 { pt3dadd( 25.0503, 127.011, 44.7525, 0.96 ) }
    dend_11 { pt3dadd( 25.2529, 127.38, 44.9268, 1.25 ) }
    dend_11 { pt3dadd( 25.5293, 127.88, 45.1763, 1.25 ) }
    dend_11 { pt3dadd( 25.6629, 128.123, 45.297, 1.25 ) }
    dend_11 { pt3dadd( 26.1474, 129.05, 45.7364, 1.25 ) }
    dend_11 { pt3dadd( 26.539, 129.848, 46.1222, 0.52 ) }
    dend_11 { pt3dadd( 26.6189, 130.025, 46.2018, 0.66 ) }
    dend_11 { pt3dadd( 26.646, 130.095, 46.2279, 0.66 ) }
    dend_11 { pt3dadd( 26.7551, 130.39, 46.3099, 0.66 ) }
    dend_11 { pt3dadd( 26.8086, 130.524, 46.3515, 0.59 ) }
    dend_11 { pt3dadd( 27.0103, 131.023, 46.4991, 0.59 ) }
    dend_11 { pt3dadd( 27.3155, 131.768, 46.7586, 0.22 ) }
    dend_11 { pt3dadd( 27.5679, 132.393, 46.9807, 0.22 ) }
    dend_11 { pt3dadd( 27.9017, 133.201, 47.2644, 0.22 ) }
    dend_11 { pt3dadd( 28.2962, 134.148, 47.5979, 0.81 ) }
    dend_11 { pt3dadd( 28.6132, 134.843, 47.8622, 0.81 ) }
    dend_11 { pt3dadd( 28.779, 135.163, 47.9909, 0.44 ) }
    dend_11 { pt3dadd( 29.1922, 135.816, 48.2963, 0.22 ) }
    dend_11 { pt3dadd( 29.5681, 136.32, 48.5483, 0.22 ) }
    dend_11 { pt3dadd( 29.6299, 136.395, 48.5859, 0.22 ) }
    dend_11 { pt3dadd( 30.1294, 136.944, 48.8344, 0.29 ) }
    dend_11 { pt3dadd( 30.5767, 137.397, 49.0615, 0.29 ) }
    dend_11 { pt3dadd( 31.2936, 138.164, 49.4236, 0.29 ) }
    dend_11 { pt3dadd( 31.5729, 138.506, 49.5652, 0.88 ) }
    dend_11 { pt3dadd( 31.7477, 138.758, 49.6515, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_11 { pt3dadd( 32.0288, 139.221, 49.7804, 1.47 ) }
    dend_11 { pt3dadd( 32.2203, 139.596, 49.8559, 1.77 ) }
    dend_11 { pt3dadd( 32.7642, 140.841, 50.0492, 0.59 ) }
    dend_11 { pt3dadd( 33.0581, 141.615, 50.1316, 0.44 ) }
    dend_11 { pt3dadd( 33.2259, 142.092, 50.1821, 0.44 ) }
    dend_11 { pt3dadd( 33.2616, 142.198, 50.1932, 0.44 ) }
    dend_11 { pt3dadd( 33.4786, 142.82, 50.2567, 0.29 ) }
    dend_11 { pt3dadd( 33.784, 143.642, 50.3376, 0.29 ) }
    dend_11 { pt3dadd( 33.9981, 144.213, 50.3909, 0.52 ) }
    dend_11 { pt3dadd( 34.1432, 144.61, 50.4198, 0.52 ) }
    dend_11 { pt3dadd( 34.315, 145.079, 50.4716, 0.52 ) }
    dend_11 { pt3dadd( 34.6061, 145.788, 50.5735, 0.29 ) }
    dend_11 { pt3dadd( 34.6333, 145.851, 50.5848, 0.29 ) }
    dend_11 { pt3dadd( 34.6659, 145.923, 50.6003, 0.29 ) }
    dend_11 { pt3dadd( 34.9045, 146.428, 50.7168, 0.44 ) }
    dend_11 { pt3dadd( 35.3391, 147.331, 50.9288, 1.03 ) }
    dend_11 { pt3dadd( 35.5855, 147.84, 51.047, 1.03 ) }
    dend_11 { pt3dadd( 35.806, 148.276, 51.1446, 1.03 ) }
    dend_11 { pt3dadd( 36.0943, 148.835, 51.2627, 1.11 ) }
    dend_11 { pt3dadd( 36.3151, 149.247, 51.3404, 1.11 ) }
    dend_11 { pt3dadd( 36.6006, 149.773, 51.4274, 1.18 ) }
    dend_11 { pt3dadd( 36.7956, 150.133, 51.4592, 1.11 ) }
    dend_11 { pt3dadd( 37.0022, 150.496, 51.4655, 0.88 ) }
    dend_11 { pt3dadd( 37.0424, 150.553, 51.4634, 0.88 ) }
    dend_11 { pt3dadd( 37.6278, 151.302, 51.4095, 0.52 ) }
    dend_11 { pt3dadd( 37.6725, 151.357, 51.4046, 0.52 ) }
    dend_11 { pt3dadd( 38.1409, 151.907, 51.3478, 0.52 ) }
    dend_11 { pt3dadd( 39.1522, 153.063, 51.217, 0.22 ) }
    dend_11 { pt3dadd( 39.7632, 153.767, 51.1943, 0.22 ) }
    dend_11 { pt3dadd( 39.9674, 154.011, 51.2035, 0.59 ) }
    dend_11 { pt3dadd( 40.3813, 154.521, 51.2564, 0.88 ) }
    dend_11 { pt3dadd( 40.5174, 154.702, 51.2881, 1.11 ) }
    dend_11 { pt3dadd( 40.5586, 154.766, 51.3128, 1.11 ) }
    dend_11 { pt3dadd( 41.1964, 155.942, 52.0713, 0.29 ) }
    dend_11 { pt3dadd( 41.3597, 156.278, 52.3228, 0.29 ) }
    dend_11 { pt3dadd( 41.3766, 156.308, 52.3622, 0.29 ) }
    dend_11 { pt3dadd( 41.4677, 156.472, 52.6108, 0.29 ) }
    dend_11 { pt3dadd( 41.759, 156.992, 53.4828, 0.44 ) }
    dend_11 { pt3dadd( 41.8999, 157.214, 53.9285, 0.44 ) }
    dend_11 { pt3dadd( 41.986, 157.307, 54.2599, 0.44 ) }
    dend_11 { pt3dadd( 42.5859, 157.782, 56.5229, 0.59 ) }
    dend_11 { pt3dadd( 47.6238, 163.684, 62.4049, 0.59 ) }
    dend_11 { pt3dadd( 51.734, 168.99, 69.4427, 0.59 ) }
    dend_11 { pt3dadd( 55.9053, 173.97, 76.6693, 0.59 ) }
    dend_11 { pt3dadd( 59.2505, 179.285, 84.0997, 0.59 ) }
    dend_11 { pt3dadd( 63.6007, 183.209, 91.8212, 0.59 ) }
    dend_11 { pt3dadd( 67.1184, 185.591, 100.506, 0.59 ) }
    dend_11 { pt3dadd( 69.7875, 188.088, 109.459, 0.59 ) }
    dend_11 { pt3dadd( 74.2617, 189.487, 117.899, 0.59 ) }
    dend_11 { pt3dadd( 78.9825, 190.019, 126.296, 0.59 ) }
    dend_11 { pt3dadd( 83.6715, 192.577, 134.354, 0.59 ) }
    dend_11 { pt3dadd( 88.674, 194.87, 142.298, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 52/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 22.7831, 172.924, -6.32891, 0.22 ) }
    dend_6 { pt3dadd( 23.7159, 174.217, -4.75486, 0.22 ) }
    dend_6 { pt3dadd( 24.0589, 174.712, -4.20174, 0.81 ) }
    dend_6 { pt3dadd( 24.1789, 174.896, -4.02134, 0.81 ) }
    dend_6 { pt3dadd( 25.0196, 176.315, -2.7977, 0.22 ) }
    dend_6 { pt3dadd( 25.2577, 176.746, -2.47123, 0.22 ) }
    dend_6 { pt3dadd( 25.331, 176.886, -2.37531, 0.44 ) }
    dend_6 { pt3dadd( 25.5067, 177.332, -2.16756, 0.44 ) }
    dend_6 { pt3dadd( 25.7538, 178.027, -1.90542, 0.15 ) }
    dend_6 { pt3dadd( 25.9053, 178.495, -1.78082, 0.15 ) }
    dend_6 { pt3dadd( 26.0692, 179.112, -1.71417, 0.15 ) }
    dend_6 { pt3dadd( 26.1284, 179.383, -1.6844, 0.66 ) }
    dend_6 { pt3dadd( 26.2207, 179.835, -1.63224, 1.03 ) }
    dend_6 { pt3dadd( 26.3173, 180.352, -1.56891, 0.66 ) }
    dend_6 { pt3dadd( 26.4431, 180.96, -1.48532, 0.22 ) }
    dend_6 { pt3dadd( 26.5026, 181.205, -1.44854, 0.22 ) }
    dend_6 { pt3dadd( 26.5795, 181.563, -1.39597, 0.22 ) }
    dend_6 { pt3dadd( 26.6537, 181.926, -1.34537, 0.22 ) }
    dend_6 { pt3dadd( 26.6753, 182.046, -1.33031, 0.22 ) }
    dend_6 { pt3dadd( 26.7262, 182.497, -1.29456, 0.74 ) }
    dend_6 { pt3dadd( 26.7559, 182.826, -1.27935, 0.59 ) }
    dend_6 { pt3dadd( 26.8021, 183.288, -1.25718, 0.29 ) }
    dend_6 { pt3dadd( 26.8183, 183.448, -1.24948, 0.22 ) }
    dend_6 { pt3dadd( 26.8348, 183.618, -1.23745, 0.22 ) }
    dend_6 { pt3dadd( 26.9583, 184.894, -1.11924, 0.15 ) }
    dend_6 { pt3dadd( 26.9788, 185.564, -1.05415, 0.15 ) }
    dend_6 { pt3dadd( 26.9614, 186.209, -0.990343, 0.15 ) }
    dend_6 { pt3dadd( 26.9517, 186.578, -0.950823, 0.15 ) }
    dend_6 { pt3dadd( 26.9587, 186.881, -0.920461, 0.29 ) }
    dend_6 { pt3dadd( 27.0203, 187.297, -0.875169, 0.29 ) }
    dend_6 { pt3dadd( 27.3751, 188.245, -0.750135, 1.77 ) }
    dend_6 { pt3dadd( 27.6835, 188.674, -0.732849, 1.77 ) }
    dend_6 { pt3dadd( 28.2468, 189.162, -0.71467, 1.77 ) }
    dend_6 { pt3dadd( 29.1886, 189.786, -0.834876, 0.22 ) }
    dend_6 { pt3dadd( 30.0833, 190.335, -1.08521, 0.22 ) }
    dend_6 { pt3dadd( 30.7883, 190.714, -1.33203, 0.22 ) }
    dend_6 { pt3dadd( 31.8486, 191.239, -1.80899, 0.44 ) }
    dend_6 { pt3dadd( 32.8387, 191.722, -2.3363, 0.22 ) }
    dend_6 { pt3dadd( 34.3491, 192.452, -3.27918, 0.44 ) }
    dend_6 { pt3dadd( 35.3155, 192.93, -4.00412, 0.44 ) }
    dend_6 { pt3dadd( 35.5379, 193.056, -4.20938, 0.44 ) }
    dend_6 { pt3dadd( 36.528, 193.716, -5.29422, 0.22 ) }
    dend_6 { pt3dadd( 36.7364, 193.879, -5.56028, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 22.7831, 172.924, -6.32891, 0.29 ) }
    dend_5 { pt3dadd( 22.608, 173.404, -6.34504, 0.29 ) }
    dend_5 { pt3dadd( 22.5023, 173.776, -6.38196, 0.37 ) }
    dend_5 { pt3dadd( 22.3941, 174.2, -6.43533, 0.37 ) }
    dend_5 { pt3dadd( 22.2993, 174.59, -6.48613, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_5 { pt3dadd( 22.2592, 174.77, -6.50849, 0.29 ) }
    dend_5 { pt3dadd( 22.2348, 174.891, -6.52236, 0.29 ) }
    dend_5 { pt3dadd( 22.1323, 175.552, -6.60391, 0.22 ) }
    dend_5 { pt3dadd( 22.0885, 175.873, -6.6487, 0.22 ) }
    dend_5 { pt3dadd( 22.083, 175.925, -6.65659, 0.29 ) }
    dend_5 { pt3dadd( 22.0544, 176.362, -6.72544, 0.29 ) }
    dend_5 { pt3dadd( 22.0347, 176.688, -6.7744, 0.29 ) }
    // Section: dend_131, id: dend_131, parent: dend_127 (entry count 7/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 12.2989, -78.0782, 13.9259, 0.22 ) }
    dend_131 { pt3dadd( 17.9688, -82.5127, 10.7181, 0.22 ) }
    dend_131 { pt3dadd( 23.9738, -87.0291, 8.33477, 0.22 ) }
    dend_131 { pt3dadd( 29.473, -92.3694, 6.3968, 0.22 ) }
    dend_131 { pt3dadd( 34.3937, -97.7846, 3.39433, 0.22 ) }
    // Section: dend_128, id: dend_128, parent: dend_127 (entry count 12/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 12.2989, -78.0782, 13.9259, 0.29 ) }
    dend_128 { pt3dadd( 19.669, -82.6904, 11.7343, 0.22 ) }
    dend_128 { pt3dadd( 26.0197, -88.3844, 8.87519, 0.22 ) }
    dend_128 { pt3dadd( 32.0323, -94.999, 7.62649, 0.22 ) }
    // Section: dend_117, id: dend_117, parent: dend_115 (entry count 16/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( 13.9229, -75.7227, 27.5791, 1.33 ) }
    dend_117 { pt3dadd( 18.7131, -81.5841, 34.8436, 1.33 ) }
    dend_117 { pt3dadd( 23.7987, -87.2937, 42.0205, 1.33 ) }
    // Section: dend_116, id: dend_116, parent: dend_115 (entry count 19/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( 13.9229, -75.7227, 27.5791, 0.44 ) }
    dend_116 { pt3dadd( 16.2953, -80.7445, 34.4942, 1.33 ) }
    dend_116 { pt3dadd( 17.66, -85.3247, 41.9536, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -99.6999, 19.1819, -57.1904, 0.96 ) }
    dend_41 { pt3dadd( -99.6209, 19.1014, -57.8993, 0.96 ) }
    dend_41 { pt3dadd( -99.4977, 18.991, -58.834, 0.22 ) }
    dend_41 { pt3dadd( -99.4495, 18.9495, -59.1279, 0.74 ) }
    dend_41 { pt3dadd( -99.3086, 18.8271, -59.8917, 0.29 ) }
    dend_41 { pt3dadd( -99.2862, 18.8076, -60.0134, 0.59 ) }
    dend_41 { pt3dadd( -99.0303, 18.5853, -61.4011, 0.22 ) }
    dend_41 { pt3dadd( -98.9567, 18.5272, -61.786, 0.22 ) }
    dend_41 { pt3dadd( -98.8847, 18.4861, -62.0843, 0.59 ) }
    dend_41 { pt3dadd( -98.8658, 18.4786, -62.168, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 32/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -99.6999, 19.1819, -57.1904, 0.29 ) }
    dend_40 { pt3dadd( -100.972, 20.1756, -58.9992, 0.29 ) }
    dend_40 { pt3dadd( -101.176, 20.3184, -59.3057, 0.59 ) }
    dend_40 { pt3dadd( -101.256, 20.363, -59.4126, 0.66 ) }
    dend_40 { pt3dadd( -101.353, 20.4043, -59.5255, 0.66 ) }
    dend_40 { pt3dadd( -101.77, 20.5791, -60.0273, 0.52 ) }
    dend_40 { pt3dadd( -101.927, 20.639, -60.2264, 0.29 ) }
    dend_40 { pt3dadd( -102.566, 20.8262, -61.0346, 0.44 ) }
    dend_40 { pt3dadd( -102.966, 20.9531, -61.5938, 0.44 ) }
    dend_40 { pt3dadd( -103.827, 21.2343, -62.8396, 0.29 ) }
    dend_40 { pt3dadd( -104.416, 21.4149, -63.6524, 0.59 ) }
    dend_40 { pt3dadd( -105.129, 21.6331, -64.6284, 0.44 ) }
    dend_40 { pt3dadd( -105.221, 21.6568, -64.7516, 0.52 ) }
    dend_40 { pt3dadd( -106.155, 21.8379, -65.9352, 0.22 ) }
    dend_40 { pt3dadd( -106.242, 21.8521, -66.0456, 0.59 ) }
    dend_40 { pt3dadd( -106.811, 21.9106, -66.7281, 0.59 ) }
    dend_40 { pt3dadd( -107.322, 21.9351, -67.2475, 0.59 ) }
    dend_40 { pt3dadd( -108.355, 21.977, -68.1271, 0.22 ) }
    dend_40 { pt3dadd( -108.475, 21.979, -68.2204, 0.44 ) }
    dend_40 { pt3dadd( -108.536, 21.9792, -68.2536, 0.44 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -59.0602, 145.125, -171.398, 0.15 ) }
    dend_28 { pt3dadd( -58.6719, 145.271, -172.201, 0.15 ) }
    dend_28 { pt3dadd( -58.1629, 145.439, -173.187, 0.52 ) }
    dend_28 { pt3dadd( -57.447, 145.692, -174.537, 0.59 ) }
    dend_28 { pt3dadd( -57.1179, 145.812, -175.142, 0.22 ) }
    dend_28 { pt3dadd( -56.9487, 145.877, -175.446, 0.22 ) }
    dend_28 { pt3dadd( -56.8218, 145.955, -175.806, 0.22 ) }
    dend_28 { pt3dadd( -56.8001, 145.989, -175.94, 0.22 ) }
    dend_28 { pt3dadd( -56.8188, 146.159, -176.55, 0.74 ) }
    dend_28 { pt3dadd( -56.8285, 146.176, -176.611, 0.74 ) }
    dend_28 { pt3dadd( -56.847, 146.201, -176.701, 0.74 ) }
    dend_28 { pt3dadd( -57.4691, 146.95, -179.345, 0.22 ) }
    dend_28 { pt3dadd( -57.5856, 147.079, -179.798, 0.66 ) }
    dend_28 { pt3dadd( -58.019, 147.532, -181.432, 0.37 ) }
    dend_28 { pt3dadd( -58.0373, 147.548, -181.495, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 67/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -59.0602, 145.125, -171.398, 0.22 ) }
    dend_23 { pt3dadd( -58.6597, 145.676, -171.383, 0.22 ) }
    dend_23 { pt3dadd( -58.2394, 146.275, -171.354, 0.22 ) }
    dend_23 { pt3dadd( -57.8615, 146.846, -171.325, 0.81 ) }
    dend_23 { pt3dadd( -57.1952, 147.912, -171.261, 0.22 ) }
    dend_23 { pt3dadd( -56.8805, 148.448, -171.256, 0.37 ) }
    dend_23 { pt3dadd( -56.5886, 148.962, -171.264, 0.29 ) }
    dend_23 { pt3dadd( -56.2813, 149.544, -171.293, 0.22 ) }
    dend_23 { pt3dadd( -56.0772, 149.96, -171.321, 0.22 ) }
    dend_23 { pt3dadd( -55.9905, 150.149, -171.33, 0.66 ) }
    dend_23 { pt3dadd( -55.5791, 151.164, -171.421, 0.15 ) }
    dend_23 { pt3dadd( -55.5478, 151.226, -171.424, 0.15 ) }
    dend_23 { pt3dadd( -55.1842, 151.849, -171.446, 0.15 ) }
    dend_23 { pt3dadd( -55.1082, 151.953, -171.46, 0.15 ) }
    dend_23 { pt3dadd( -54.6096, 152.614, -171.64, 0.88 ) }
    dend_23 { pt3dadd( -54.4587, 152.814, -171.71, 0.88 ) }
    dend_23 { pt3dadd( -53.8453, 153.578, -172.021, 0.15 ) }
    dend_23 { pt3dadd( -53.7317, 153.716, -172.087, 0.15 ) }
    dend_23 { pt3dadd( -52.8306, 154.757, -172.69, 1.5 ) }
    dend_23 { pt3dadd( -51.9679, 155.742, -173.327, 0.29 ) }
    dend_23 { pt3dadd( -51.7722, 155.986, -173.504, 0.29 ) }
    dend_23 { pt3dadd( -51.4781, 156.405, -173.814, 0.29 ) }
    dend_23 { pt3dadd( -51.4046, 156.525, -173.902, 0.29 ) }
    dend_23 { pt3dadd( -51.3233, 156.654, -173.99, 0.29 ) }
    dend_23 { pt3dadd( -51.067, 157.022, -174.208, 0.29 ) }
    dend_23 { pt3dadd( -50.5898, 157.61, -174.819, 1.03 ) }
    dend_23 { pt3dadd( -50.2957, 158.014, -175.454, 0.22 ) }
    dend_23 { pt3dadd( -50.12, 158.251, -175.915, 0.22 ) }
    dend_23 { pt3dadd( -49.974, 158.429, -176.314, 0.22 ) }
    dend_23 { pt3dadd( -49.8522, 158.561, -176.717, 0.37 ) }
    dend_23 { pt3dadd( -49.275, 159.039, -178.792, 0.59 ) }
    dend_23 { pt3dadd( -48.8835, 159.271, -180.244, 0.59 ) }
    dend_23 { pt3dadd( -48.668, 159.399, -181.077, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_23 { pt3dadd( -48.6169, 159.445, -181.334, 0.22 ) }
    dend_23 { pt3dadd( -48.5731, 159.833, -182.948, 0.59 ) }
    dend_23 { pt3dadd( -48.5906, 159.949, -183.353, 0.59 ) }
    dend_23 { pt3dadd( -48.6109, 160.009, -183.54, 0.59 ) }
    dend_23 { pt3dadd( -48.7603, 160.262, -184.327, 0.22 ) }
    dend_23 { pt3dadd( -49.1969, 160.83, -186.04, 1.03 ) }
    dend_23 { pt3dadd( -50.2532, 162.134, -189.552, 0.29 ) }
    dend_23 { pt3dadd( -50.4057, 162.324, -190.004, 0.29 ) }
    dend_23 { pt3dadd( -50.9204, 162.942, -191.424, 0.29 ) }
    dend_23 { pt3dadd( -51.2146, 163.256, -192.161, 0.29 ) }
    dend_23 { pt3dadd( -51.2855, 163.325, -192.322, 0.29 ) }
    dend_23 { pt3dadd( -51.5824, 163.639, -192.964, 0.29 ) }
    dend_23 { pt3dadd( -51.7057, 163.774, -193.214, 0.29 ) }
    dend_23 { pt3dadd( -52.6667, 164.81, -195.14, 1.25 ) }
    dend_23 { pt3dadd( -53.9481, 166.255, -197.795, 0.29 ) }
    dend_23 { pt3dadd( -54.1604, 166.505, -198.269, 0.29 ) }
    dend_23 { pt3dadd( -54.8382, 167.257, -199.799, 1.33 ) }
    dend_23 { pt3dadd( -54.8689, 167.288, -199.867, 1.33 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 18/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 32.0323, -94.999, 7.62649, 0.29 ) }
    dend_130 { pt3dadd( 39.8289, -97.613, -2.32883, 0.29 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 20/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 32.0323, -94.999, 7.62649, 0.44 ) }
    dend_129 { pt3dadd( 40.7844, -103.085, 10.3309, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 22/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -54.8689, 167.288, -199.867, 0.22 ) }
    dend_27 { pt3dadd( -54.494, 168.704, -200.328, 0.22 ) }
    dend_27 { pt3dadd( -54.4291, 168.853, -200.381, 0.22 ) }
    dend_27 { pt3dadd( -54.2313, 169.193, -200.507, 0.22 ) }
    dend_27 { pt3dadd( -53.9579, 169.527, -200.696, 0.59 ) }
    dend_27 { pt3dadd( -53.5351, 169.918, -200.986, 0.59 ) }
    dend_27 { pt3dadd( -52.8161, 170.469, -201.542, 0.29 ) }
    dend_27 { pt3dadd( -52.3601, 170.696, -201.915, 0.29 ) }
    dend_27 { pt3dadd( -51.9976, 170.82, -202.234, 0.29 ) }
    dend_27 { pt3dadd( -51.1287, 171.028, -203.012, 0.22 ) }
    dend_27 { pt3dadd( -50.784, 171.08, -203.317, 0.22 ) }
    dend_27 { pt3dadd( -50.0443, 171.157, -203.984, 0.96 ) }
    dend_27 { pt3dadd( -49.9137, 171.163, -204.114, 1.25 ) }
    dend_27 { pt3dadd( -48.6949, 171.247, -205.368, 0.15 ) }
    dend_27 { pt3dadd( -48.4589, 171.272, -205.607, 0.96 ) }
    dend_27 { pt3dadd( -48.2171, 171.315, -205.838, 0.96 ) }
    dend_27 { pt3dadd( -48.1355, 171.331, -205.913, 0.96 ) }
    dend_27 { pt3dadd( -47.1476, 171.523, -206.702, 0.22 ) }
    dend_27 { pt3dadd( -46.8681, 171.573, -206.906, 0.22 ) }
    dend_27 { pt3dadd( -46.7231, 171.602, -206.993, 0.22 ) }
    dend_27 { pt3dadd( -46.6559, 171.61, -207.029, 0.22 ) }
    dend_27 { pt3dadd( -46.3436, 171.596, -207.156, 0.37 ) }
    dend_27 { pt3dadd( -46.175, 171.559, -207.205, 0.37 ) }
    dend_27 { pt3dadd( -45.6421, 171.369, -207.305, 0.52 ) }
    dend_27 { pt3dadd( -45.5431, 171.326, -207.324, 0.81 ) }
    dend_27 { pt3dadd( -45.0649, 171.141, -207.423, 0.81 ) }
    dend_27 { pt3dadd( -44.1374, 170.836, -207.653, 0.29 ) }
    dend_27 { pt3dadd( -43.7469, 170.742, -207.764, 0.29 ) }
    dend_27 { pt3dadd( -43.5809, 170.735, -207.831, 0.29 ) }
    dend_27 { pt3dadd( -43.2604, 170.788, -207.997, 0.29 ) }
    dend_27 { pt3dadd( -42.455, 171.058, -208.478, 0.29 ) }
    dend_27 { pt3dadd( -42.13, 171.219, -208.703, 0.66 ) }
    dend_27 { pt3dadd( -41.8073, 171.421, -208.949, 0.66 ) }
    dend_27 { pt3dadd( -40.9224, 172.011, -209.631, 0.22 ) }
    dend_27 { pt3dadd( -40.7561, 172.13, -209.764, 0.22 ) }
    dend_27 { pt3dadd( -40.4934, 172.333, -209.984, 0.22 ) }
    dend_27 { pt3dadd( -40.1786, 172.573, -210.257, 0.74 ) }
    dend_27 { pt3dadd( -39.9515, 172.717, -210.435, 0.74 ) }
    dend_27 { pt3dadd( -39.8133, 172.781, -210.536, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -54.8689, 167.288, -199.867, 0.07 ) }
    dend_24 { pt3dadd( -55.2297, 167.584, -200.439, 0.07 ) }
    dend_24 { pt3dadd( -55.2816, 167.624, -200.533, 0.15 ) }
    dend_24 { pt3dadd( -55.374, 167.701, -200.688, 0.15 ) }
    dend_24 { pt3dadd( -55.5115, 167.805, -200.872, 0.15 ) }
    dend_24 { pt3dadd( -55.7223, 167.967, -201.126, 0.15 ) }
    dend_24 { pt3dadd( -57.2117, 169.202, -202.93, 0.88 ) }
    dend_24 { pt3dadd( -58.1167, 169.998, -204.106, 0.15 ) }
    dend_24 { pt3dadd( -58.4522, 170.311, -204.557, 1.4 ) }
    dend_24 { pt3dadd( -59.3659, 171.229, -205.846, 0.29 ) }
    dend_24 { pt3dadd( -59.5778, 171.456, -206.151, 0.52 ) }
    dend_24 { pt3dadd( -59.9608, 171.916, -206.734, 0.22 ) }
    dend_24 { pt3dadd( -60.0629, 172.09, -206.891, 0.22 ) }
    dend_24 { pt3dadd( -60.1214, 172.227, -207.008, 0.22 ) }
    dend_24 { pt3dadd( -60.1991, 172.482, -207.234, 0.22 ) }
    dend_24 { pt3dadd( -60.2166, 172.59, -207.327, 0.22 ) }
    dend_24 { pt3dadd( -60.4393, 173.927, -208.482, 1.03 ) }
    dend_24 { pt3dadd( -60.5273, 174.381, -208.89, 1.03 ) }
    dend_24 { pt3dadd( -60.6459, 174.984, -209.431, 0.22 ) }
    dend_24 { pt3dadd( -60.7522, 175.367, -209.84, 0.22 ) }
    dend_24 { pt3dadd( -60.7912, 175.499, -209.989, 0.22 ) }
    dend_24 { pt3dadd( -60.8422, 175.684, -210.197, 0.22 ) }
    dend_24 { pt3dadd( -61.0271, 176.44, -211.029, 0.88 ) }
    dend_24 { pt3dadd( -61.1085, 176.751, -211.397, 1.11 ) }
    dend_24 { pt3dadd( -61.5022, 178.408, -213.308, 0.22 ) }
    dend_24 { pt3dadd( -61.5706, 178.705, -213.626, 0.37 ) }
    dend_24 { pt3dadd( -61.621, 178.955, -213.861, 0.37 ) }
    dend_24 { pt3dadd( -61.6699, 179.249, -214.095, 0.37 ) }
    dend_24 { pt3dadd( -61.6851, 179.371, -214.171, 0.37 ) }
    dend_24 { pt3dadd( -61.7629, 180.177, -214.576, 1.47 ) }
    dend_24 { pt3dadd( -61.7849, 180.579, -214.7, 1.47 ) }
    dend_24 { pt3dadd( -61.9961, 181.699, -215.123, 0.22 ) }
    dend_24 { pt3dadd( -62.0748, 182.013, -215.252, 0.22 ) }
    dend_24 { pt3dadd( -62.2679, 182.768, -215.564, 1.25 ) }
    dend_24 { pt3dadd( -62.3788, 183.226, -215.753, 1.69 ) }
    dend_24 { pt3dadd( -62.4916, 183.66, -215.964, 1.69 ) }
    dend_24 { pt3dadd( -62.9403, 185.42, -216.884, 0.29 ) }
    dend_24 { pt3dadd( -63.0238, 185.8, -217.098, 0.29 ) }
    dend_24 { pt3dadd( -63.0961, 186.389, -217.438, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_24 { pt3dadd( -63.1053, 186.809, -217.725, 0.74 ) }
    dend_24 { pt3dadd( -63.0281, 187.804, -218.522, 0.07 ) }
    dend_24 { pt3dadd( -63.0154, 187.87, -218.582, 0.15 ) }
    dend_24 { pt3dadd( -62.7946, 188.269, -218.983, 0.74 ) }
    dend_24 { pt3dadd( -62.3912, 189.06, -219.965, 0.66 ) }
    dend_24 { pt3dadd( -62.191, 189.694, -220.961, 0.66 ) }
    dend_24 { pt3dadd( -62.1629, 189.788, -221.157, 0.66 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 7/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -62.1629, 189.788, -221.157, 0.22 ) }
    dend_26 { pt3dadd( -61.8945, 190.577, -221.75, 0.22 ) }
    dend_26 { pt3dadd( -61.7738, 190.921, -221.994, 0.22 ) }
    dend_26 { pt3dadd( -61.7439, 191.009, -222.048, 0.22 ) }
    dend_26 { pt3dadd( -61.5823, 191.528, -222.314, 0.15 ) }
    dend_26 { pt3dadd( -61.3875, 192.169, -222.599, 0.74 ) }
    dend_26 { pt3dadd( -61.348, 192.314, -222.664, 0.66 ) }
    dend_26 { pt3dadd( -61.3096, 192.541, -222.754, 0.59 ) }
    dend_26 { pt3dadd( -61.2533, 192.911, -222.905, 0.29 ) }
    dend_26 { pt3dadd( -61.2067, 193.264, -223.038, 0.22 ) }
    dend_26 { pt3dadd( -61.1684, 193.557, -223.136, 0.22 ) }
    dend_26 { pt3dadd( -61.0944, 194.103, -223.314, 0.22 ) }
    dend_26 { pt3dadd( -61.0794, 194.237, -223.365, 0.66 ) }
    dend_26 { pt3dadd( -61.0211, 194.877, -223.651, 0.22 ) }
    dend_26 { pt3dadd( -60.9864, 195.228, -223.838, 0.52 ) }
    dend_26 { pt3dadd( -60.9717, 195.371, -223.918, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -62.1629, 189.788, -221.157, 0.22 ) }
    dend_25 { pt3dadd( -62.2185, 190.369, -221.541, 0.22 ) }
    dend_25 { pt3dadd( -62.2205, 190.61, -221.707, 0.22 ) }
    dend_25 { pt3dadd( -62.2094, 190.943, -221.969, 0.22 ) }
    dend_25 { pt3dadd( -62.2028, 191.637, -222.534, 1.11 ) }
    dend_25 { pt3dadd( -62.2041, 191.858, -222.715, 1.11 ) }
    dend_25 { pt3dadd( -62.2188, 192.82, -223.493, 0.29 ) }
    dend_25 { pt3dadd( -62.2163, 193.092, -223.714, 0.29 ) }
    dend_25 { pt3dadd( -62.2146, 193.791, -224.232, 0.88 ) }
    dend_25 { pt3dadd( -62.2235, 194.601, -224.756, 0.22 ) }
    dend_25 { pt3dadd( -62.2273, 194.662, -224.792, 0.22 ) }
    dend_25 { pt3dadd( -62.2519, 194.907, -224.942, 0.22 ) }
    dend_25 { pt3dadd( -62.3211, 195.254, -225.178, 1.69 ) }
    dend_25 { pt3dadd( -62.6359, 196.53, -226.121, 0.22 ) }
    dend_25 { pt3dadd( -62.7464, 196.933, -226.459, 0.22 ) }
    dend_25 { pt3dadd( -63.037, 197.926, -227.414, 0.74 ) }
    dend_25 { pt3dadd( -63.0967, 198.083, -227.603, 0.81 ) }
    dend_25 { pt3dadd( -63.5391, 199.124, -229.084, 0.22 ) }
    dend_25 { pt3dadd( -63.5598, 199.166, -229.159, 0.22 ) }
    dend_25 { pt3dadd( -63.7446, 199.491, -229.905, 0.66 ) }
    dend_25 { pt3dadd( -63.7574, 199.516, -229.967, 0.81 ) }
    dend_25 { pt3dadd( -64.1335, 200.265, -231.956, 0.22 ) }
    dend_25 { pt3dadd( -64.2146, 200.436, -232.428, 0.22 ) }
    dend_25 { pt3dadd( -64.4027, 200.924, -233.791, 1.03 ) }
    dend_25 { pt3dadd( -64.4611, 201.095, -234.258, 0.66 ) }
    dend_25 { pt3dadd( -64.5089, 201.214, -234.607, 0.66 ) }
    dend_25 { pt3dadd( -64.7673, 201.87, -236.689, 0.15 ) }
    dend_25 { pt3dadd( -64.8029, 201.961, -236.996, 0.15 ) }
    dend_25 { pt3dadd( -64.8365, 202.026, -237.215, 0.74 ) }
    dend_25 { pt3dadd( -64.8746, 202.095, -237.446, 0.74 ) }
    dend_25 { pt3dadd( -65.3352, 202.829, -240.008, 0.15 ) }
    dend_25 { pt3dadd( -65.404, 202.919, -240.364, 0.44 ) }
    dend_25 { pt3dadd( -65.4535, 202.978, -240.615, 0.44 ) }
    dend_25 { pt3dadd( -65.5457, 203.058, -241.003, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_106 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_127 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_106 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_59 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_92 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_84 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_72 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_65 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_62 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_134 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_133 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_99 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_96 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_88 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_79 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_78 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_73 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_43 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_32 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_14 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_3 OneSecGrp_SectionRef_66.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_124 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_112 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_103 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_100 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_98 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_87 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_86 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_70 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_69 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_52 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_49 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_37 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_34 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_15 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_4 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_114 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_102 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_101 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_81 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_16 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_12 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_11 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_23 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_75 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_76 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_60 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_91 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_77 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_13 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_95 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_35 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_61 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_67 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_107 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_118 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_109 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_132 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_111 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_54 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_113 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_36 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_119 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_123 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_125 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_110 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_71 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_55 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_57 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_108 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_83 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_115 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_97 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_58 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_127 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_126 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_120 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_80 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_56 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_10 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_38 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_116 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_117 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_82 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_122 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_39 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_63 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_94 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_85 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_93 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_41 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_33 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_128 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_7 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_9 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_40 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_50 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_18 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_131 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_129 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_130 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_121 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_51 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_104 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_5 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_105 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_6 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_17 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_21 OneSecGrp_SectionRef_93.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_20 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_29 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_22 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_28 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_47 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_27 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_44 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_24 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_26 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_45 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_25 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_46 OneSecGrp_SectionRef_113.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_0, dend_0, dend_0, axon_0, axon_0, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_132, dend_132, dend_132, dend_132, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_123, dend_123, dend_123, dend_123, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_93, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_63, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_122, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_80, dend_80, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_131, dend_131, dend_131, dend_131, dend_128, dend_128, dend_128, dend_117, dend_117, dend_116, dend_116, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_130, dend_129, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_122 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_106 nseg = 3
    dend_53 nseg = 3
    dend_59 nseg = 15
    dend_92 nseg = 5
    dend_84 nseg = 5
    dend_72 nseg = 3
    dend_65 nseg = 3
    dend_62 nseg = 3
    dend_134 nseg = 3
    dend_133 nseg = 3
    dend_99 nseg = 3
    dend_96 nseg = 3
    dend_88 nseg = 3
    dend_79 nseg = 3
    dend_78 nseg = 9
    dend_73 nseg = 3
    dend_68 nseg = 3
    dend_43 nseg = 11
    dend_32 nseg = 3
    dend_19 nseg = 9
    dend_14 nseg = 5
    dend_8 nseg = 3
    dend_3 nseg = 5
    dend_124 nseg = 3
    dend_112 nseg = 3
    dend_103 nseg = 3
    dend_100 nseg = 5
    dend_98 nseg = 3
    dend_87 nseg = 9
    dend_86 nseg = 3
    dend_70 nseg = 3
    dend_69 nseg = 13
    dend_52 nseg = 5
    dend_49 nseg = 3
    dend_37 nseg = 3
    dend_34 nseg = 9
    dend_15 nseg = 3
    dend_4 nseg = 3
    dend_114 nseg = 3
    dend_102 nseg = 3
    dend_101 nseg = 3
    dend_81 nseg = 7
    dend_16 nseg = 3
    dend_12 nseg = 7
    dend_11 nseg = 9
    dend_23 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BTC_5b195d0631_0_0


