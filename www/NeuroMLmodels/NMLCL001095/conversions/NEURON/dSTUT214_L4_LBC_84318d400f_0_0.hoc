// Cell: dSTUT214_L4_LBC_84318d400f_0_0
/*
{
  "id" : "dSTUT214_L4_LBC_84318d400f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.1095, -11.685, 0.570337, 3.16052", "-4.63521, -10.5008, 0.513621, 5.45982", "-4.16092, -9.31666, 0.456904, 7.50899", "-3.68663, -8.13248, 0.400188, 11.3322", "-3.21235, -6.9483, 0.343471, 12.8266", "-2.73806, -5.76412, 0.286755, 14.3389", "-2.26377, -4.57994, 0.230039, 15.4162", "-1.78948, -3.39575, 0.173322, 16.3756", "-1.3152, -2.21157, 0.116606, 17.1148", "-0.840909, -1.02739, 0.0598891, 17.5087", "-0.366622, 0.156787, 0.00317258, 18.1754", "0.107666, 1.34097, -0.0535439, 18.705", "0.581953, 2.52515, -0.11026, 18.3379", "1.05624, 3.70933, -0.166977, 17.6777", "1.53053, 4.89351, -0.223693, 16.2317", "2.00482, 6.07769, -0.28041, 14.5638", "2.4791, 7.26187, -0.337126, 12.887", "2.95339, 8.44605, -0.393843, 11.0587", "3.42768, 9.63023, -0.450559, 9.10164", "3.90197, 10.8144, -0.507276, 6.70215", "4.37625, 11.9986, -0.563992, 4.57645" ]
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "5.68434, 6.45515, -20.3386, 1.67", "6.87085, 9.57235, -22.3863, 1.67", "8.25897, 13.2192, -24.782, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "7.73434, 5.10965, -12.2086, 1.11", "8.58801, 4.23845, -13.4723, 1.11", "9.82644, 3.39174, -15.3107, 0.83", "13.2612, 1.81687, -20.1007, 1.39", "14.03, 1.58832, -20.9729, 1.39", "16.1653, 1.08147, -22.8806, 0.56", "18.9742, 0.420672, -24.8161, 1.11", "21.387, -0.0877092, -25.9245, 1.39", "22.6403, -0.321839, -26.3472, 0.83", "26.0758, -0.945135, -27.1756, 1.11", "28.7185, -1.39622, -27.9306, 0.56", "31.3643, -1.83435, -28.7578, 1.11", "35.1036, -2.54447, -30.1195, 0.83", "37.8168, -2.9994, -31.4401, 0.56", "40.2062, -3.29366, -32.9974, 1.11", "42.8151, -3.33733, -35.3723, 0.56", "43.7069, -3.24682, -36.3125, 0.28", "45.0532, -2.99637, -37.9619, 0.83", "46.774, -2.569, -40.145, 0.83", "47.5327, -2.42753, -41.0344, 0.83", "49.6328, -2.21519, -43.0751, 0.56", "51.4871, -2.17352, -44.7562, 1.11", "54.0354, -2.19815, -47.2194, 1.11", "55.1787, -2.23227, -48.3221, 0.28", "57.6372, -2.37864, -50.7532, 0.83", "63.0053, -2.78571, -55.9398, 0.28", "66.4162, -3.12388, -59.1667, 1.94", "71.2992, -3.69378, -63.692, 0.28", "72.7264, -3.8508, -64.971, 0.56", "76.3326, -4.29011, -68.2926, 0.28", "77.9807, -4.50543, -70.0698, 0.83", "81.3363, -5.03923, -74.068, 0.28", "82.5184, -5.2581, -75.5601, 1.39", "84.6519, -5.67654, -78.4216, 0.28", "86.0472, -5.93011, -80.4483, 1.39", "93.0323, -7.07225, -91.1742, 0.28", "94.0951, -7.25931, -93.0957, 1.39", "97.5278, -7.96209, -99.8997, 0.28", "99.0867, -8.32528, -103.253, 1.11", "100.516, -8.73298, -106.598, 0.28", "100.724, -8.8031, -107.137, 1.11", "104.439, -10.8505, -119.64, 0.28", "104.735, -11.0786, -120.908, 0.28", "105.061, -11.4993, -122.702, 0.83", "105.579, -12.4661, -126.043, 0.28", "105.878, -13.3171, -128.263, 1.11", "107.213, -17.7806, -137.962, 0.28", "107.332, -18.188, -138.68, 1.11", "108.252, -21.0363, -143.411, 0.28", "109.132, -23.2945, -146.877, 0.83", "110.842, -27.2399, -152.419, 0.28", "111.04, -27.6738, -152.985, 0.83", "112.873, -31.4492, -157.331, 0.28", "113.168, -32.029, -158.007, 1.11", "115.4, -35.9966, -162.619, 0.28", "115.705, -36.469, -163.156, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-8.92566, -4.3186, -8.61862, 1.39", "-9.73148, -4.36796, -9.03119, 1.39", "-11.3923, -4.37429, -9.74479, 1.39", "-12.7017, -4.31831, -10.1974, 1.39", "-14.8207, -4.12925, -10.82, 1.11", "-16.3076, -3.99659, -11.2569, 1.11", "-17.6192, -3.87957, -11.6423, 1.11", "-19.0112, -3.68649, -11.9728, 0.83", "-20.0293, -3.46647, -12.0755, 0.83", "-20.732, -3.2807, -12.0572, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-9.85566, -1.42285, -2.22863, 1.67", "-11.2216, -1.28823, -1.89851, 1.67", "-14.0035, -1.01405, -1.22619, 1.67", "-16.5427, -0.763775, -0.612496, 1.94", "-19.036, -0.518037, -0.00992581, 1.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.56434, 12.2076, -4.92863, 3.89", "3.56434, 14.6509, -4.92863, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "7.73434, 5.10965, -12.2086, 1.11", "8.45139, 4.56688, -12.9368, 1.11", "9.44539, 4.04839, -14.0263, 0.83", "12.0995, 3.12905, -16.9015, 1.39", "12.6691, 3.01591, -17.4233, 1.39", "14.2094, 2.81675, -18.545, 0.56", "16.2041, 2.59486, -19.6459, 1.11", "17.8814, 2.47749, -20.2336, 1.39", "18.7412, 2.44552, -20.441, 0.83", "21.0781, 2.39068, -20.7949, 1.11", "22.879, 2.35938, -21.146, 0.56", "24.6842, 2.33223, -21.5452, 1.11", "27.256, 2.22303, -22.2288, 0.83", "29.133, 2.16171, -22.9465, 0.56", "30.7953, 2.15146, -23.8438, 1.11", "32.6154, 2.27683, -25.2844, 0.56", "33.2326, 2.37961, -25.8682, 0.28", "34.164, 2.59371, -26.9082, 0.83", "35.3466, 2.93187, -28.294, 0.83", "35.8694, 3.05527, -28.8538, 0.83", "37.3138, 3.30778, -30.1154, 0.56", "38.5989, 3.44423, -31.1401, 1.11", "40.3823, 3.56927, -32.6422, 1.11", "41.1849, 3.61062, -33.3129, 0.28", "42.9221, 3.64865, -34.7891, 0.83", "46.7184, 3.68294, -37.9265, 0.28", "49.1358, 3.65773, -39.8695, 1.94", "52.601, 3.57224, -42.5833, 0.28", "53.6105, 3.55619, -43.3486, 0.56", "56.1706, 3.48244, -45.3381, 0.28", "57.3561, 3.42298, -46.4157, 0.83", "59.8007, 3.21637, -48.8512, 0.28", "60.6698, 3.1184, -49.7616, 1.39", "62.2499, 2.91583, -51.5132, 0.28", "63.2894, 2.78652, -52.7617, 1.39", "68.51, 2.1846, -59.3998, 0.28", "69.3212, 2.06615, -60.5982, 1.39", "71.9845, 1.5822, -64.8523, 0.28", "73.2129, 1.31739, -66.9529, 1.11", "74.3618, 1.00925, -69.0504, 0.28", "74.5333, 0.954188, -69.389, 1.11", "77.833, -0.724825, -77.2603, 0.28", "78.1179, -0.917725, -78.0608, 0.28", "78.4719, -1.26452, -79.1894, 0.83", "79.093, -2.03936, -81.2825, 0.28", "79.5002, -2.69401, -82.6606, 1.11", "81.3795, -6.03212, -88.6251, 0.28", "81.5402, -6.32654, -89.0602, 1.11", "82.7057, -8.35668, -91.9106, 0.28", "83.7118, -9.93077, -93.9783, 0.83", "85.5547, -12.6282, -97.2477, 0.28", "85.761, -12.921, -97.5782, 0.83", "87.6005, -15.4188, -100.073, 0.28", "87.892, -15.8014, -100.461, 1.11", "90.0251, -18.3937, -103.099, 0.28", "90.3039, -18.697, -103.404, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "9.05434, 0.478401, 1.01137, 1.94", "11.0705, 0.348723, 2.02754, 1.94", "14.906, 0.552589, 3.89125, 1.39", "20.2919, 1.75785, 5.75977, 1.39", "23.2867, 2.90891, 6.41144, 1.67", "25.3279, 3.9813, 6.6551, 1.67", "28.8862, 6.22111, 7.12387, 1.11", "32.252, 8.93888, 7.38086, 1.11", "39.0107, 15.5614, 7.90167, 1.11", "40.2375, 16.9201, 7.97141, 1.11", "42.3304, 19.2959, 8.17513, 1.39", "46.3793, 23.8387, 8.82446, 1.11", "48.7564, 26.3362, 9.30359, 1.11", "52.0748, 29.3718, 10.3173, 1.11", "55.6998, 32.3948, 11.7496, 1.11", "59.45, 35.5179, 13.2105, 1.11", "62.1328, 37.7382, 14.1823, 1.11", "64.5476, 39.7339, 14.8774, 1.11", "68.1842, 42.7758, 15.9781, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.21434, 2.75014, -15.0986, 1.39", "13.0727, 1.53566, -14.6411, 1.39", "23.1554, -0.984755, -13.6916, 1.11", "28.1233, -2.22662, -13.2237, 1.11", "31.1788, -2.99043, -12.936, 1.11", "34.1785, -3.74028, -12.6535, 1.11", "36.0571, -4.20989, -12.4766, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.86566, -10.4514, 5.67137, 3.61", "-2.31988, -12.2356, 5.70761, 3.05", "-3.50008, -16.8715, 5.80175, 3.05", "-4.23825, -19.7711, 5.86064, 2.5", "-5.1751, -23.4511, 5.93537, 2.22", "-5.48909, -24.6844, 5.96042, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995714066505
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.37625, 11.9986, -0.563992, 1.67", "9.95335, 25.9233, -0.563992, 1.67", "15.5304, 39.8479, -0.563992, 1.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "8.25897, 13.2192, -24.782, 1.39", "9.01749, 12.7123, -26.2556, 1.39", "9.28587, 12.6143, -26.7696, 1.39", "11.4278, 12.3956, -32.1997, 0.83", "12.7123, 12.435, -36.4339, 1.39", "13.8606, 12.5097, -40.6097, 0.56", "14.188, 12.5512, -41.8389, 0.56", "15.4735, 12.7735, -47.0571, 1.67", "17.5033, 13.3435, -55.6431, 1.67", "18.7759, 13.8645, -61.0976, 1.67", "20.2846, 14.4873, -67.4925, 0.83", "20.7538, 14.5937, -69.3012, 1.67", "22.176, 14.8545, -74.5184, 0.83", "23.1789, 15.035, -77.8594, 0.28", "24.1508, 15.1303, -80.4455, 1.11", "25.1094, 15.2058, -82.5191, 1.39", "26.8842, 15.3201, -85.8284, 0.28", "26.8842, 15.3201, -85.8284, 0.56", "28.3117, 15.4938, -88.1767, 0.28", "29.3852, 15.626, -89.8921, 0.83", "32.3756, 16.0131, -94.649, 0.56", "33.3368, 16.1322, -96.1909, 1.94", "42.3488, 17.1139, -110.637, 0.28", "42.6197, 17.138, -111.064, 0.83", "44.6488, 17.2327, -114.414, 0.56", "45.6772, 17.2273, -116.154, 0.83", "48.0978, 16.9815, -120.454, 0.28", "48.597, 16.8966, -121.361, 1.39", "49.0805, 16.7643, -122.283, 1.39", "54.8197, 15.2216, -133.585, 0.28", "55.377, 15.0784, -134.752, 1.11", "58.0242, 14.4732, -140.291, 0.28", "58.4765, 14.3806, -141.253, 0.83", "60.9297, 13.9218, -146.592, 0.28", "61.3923, 13.8362, -147.616, 1.11", "65.6335, 13.1875, -156.551, 0.28", "66.653, 13.0724, -158.813, 0.83" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "8.25897, 13.2192, -24.782, 0.56", "7.34067, 16.0265, -24.2888, 0.56", "6.67917, 16.9251, -24.6735, 0.56", "5.73536, 18.1039, -25.4426, 0.83", "5.09286, 18.8665, -25.9615, 0.56", "3.92925, 20.1595, -26.8328, 0.83", "1.86838, 22.3324, -28.3296, 2.22", "-0.380883, 24.4076, -29.9536, 0.56", "-2.14203, 25.9205, -31.1329, 0.56", "-3.27845, 26.8519, -31.8468, 0.56", "-4.40725, 27.8225, -32.5392, 1.67", "-6.68505, 29.9615, -33.8659, 0.56", "-7.97575, 31.4439, -34.5526, 1.11", "-8.87992, 32.7045, -35.0442, 0.28", "-9.49951, 33.8012, -35.4599, 0.83", "-10.5009, 36.07, -36.1741, 0.28", "-11.0195, 37.5421, -36.7719, 1.39", "-12.4565, 42.2914, -38.9327, 0.28", "-12.8422, 43.7328, -39.6511, 1.39", "-13.7052, 47.2164, -41.5253, 0.28", "-14.3683, 50.0539, -43.0632, 1.67", "-15.9865, 57.1825, -47.1097, 0.28", "-16.1882, 58.0657, -47.6138, 0.28", "-16.337, 58.7044, -47.9828, 0.56", "-16.6054, 60.0101, -48.7662, 0.28", "-16.9054, 61.7251, -49.7784, 0.56", "-17.1924, 63.8203, -50.9413, 0.28", "-17.4135, 66.0722, -51.8307, 1.94", "-17.6661, 68.7019, -53.0217, 0.28", "-17.9679, 71.2205, -54.3933, 1.39", "-18.1232, 72.3061, -55.0164, 0.28", "-18.2389, 72.9996, -55.47, 0.56", "-18.6133, 75.0504, -56.8839, 0.28", "-18.7186, 75.5248, -57.2811, 0.56", "-19.2073, 77.2677, -58.7767, 0.28", "-19.6405, 78.6392, -59.9326, 1.39", "-20.4777, 81.2015, -62.1285, 0.28", "-20.9154, 82.6237, -63.4206, 1.67", "-21.4245, 84.3111, -64.9968, 0.28", "-21.687, 85.331, -66.0296, 1.11", "-21.8589, 86.1775, -66.9458, 0.28", "-21.9099, 86.4986, -67.282, 0.83", "-22.1729, 88.6026, -68.8217, 0.28", "-22.1884, 88.8541, -68.9718, 0.56", "-22.1655, 90.2922, -69.6433, 0.28", "-22.1351, 90.955, -69.961, 0.83", "-22.0869, 93.5867, -71.0254, 0.28", "-22.2185, 95.4798, -71.3984, 1.39" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-20.732, -3.2807, -12.0572, 0.56", "-23.6122, -3.68531, -12.067, 0.56", "-26.134, -3.78796, -12.1224, 0.56", "-28.2622, -3.70209, -12.1854, 0.56", "-30.9676, -3.38365, -12.2693, 0.56", "-34.7024, -2.79801, -12.4771, 0.56", "-36.2241, -2.52642, -12.616, 0.28", "-37.7352, -2.11632, -12.8637, 0.83", "-38.7895, -1.76399, -13.0473, 0.28", "-40.022, -1.35289, -13.2863, 0.56", "-41.9458, -0.785485, -13.7175, 0.28", "-43.5139, -0.480012, -13.9926, 1.67", "-44.9174, -0.354038, -14.2474, 1.94", "-46.5614, -0.287023, -14.5731, 1.11", "-48.5864, -0.259948, -14.9384, 0.56", "-50.1033, -0.305994, -15.2263, 0.56", "-51.99, -0.402206, -15.564, 0.56", "-52.8172, -0.485145, -15.6664, 0.56", "-56.0801, -0.958725, -16.0074, 0.28", "-57.5887, -1.2475, -16.178, 1.39", "-62.0886, -2.19257, -16.6825, 0.56", "-63.8879, -2.60143, -16.8794, 1.67", "-67.7502, -3.56727, -17.2703, 0.28", "-69.8893, -4.18912, -17.3976, 0.83", "-72.2841, -5.01275, -17.2371, 0.28", "-73.3914, -5.3867, -17.0575, 0.56", "-75.7864, -6.16261, -16.4005, 0.28", "-77.695, -6.7876, -15.7072, 0.28", "-79.9763, -7.49636, -14.7338, 2.22", "-84.6129, -8.91092, -12.5487, 0.28", "-86.5325, -9.50517, -11.6952, 0.28", "-88.1532, -10.0657, -10.9856, 1.39", "-91.3397, -11.2548, -9.61955, 0.28", "-92.7385, -11.8356, -9.06584, 0.28", "-94.1763, -12.5573, -8.5749, 0.83", "-97.0673, -14.34, -7.64042, 0.28", "-99.6862, -16.2661, -6.776, 0.28", "-100.303, -16.7781, -6.57996, 0.28", "-101.26, -17.642, -6.28255, 0.56", "-103.887, -20.2804, -5.31097, 0.28", "-104.708, -21.1373, -5.0508, 1.11", "-106.661, -23.2722, -4.56359, 0.28", "-107.563, -24.2307, -4.4534, 0.56", "-109.326, -26.0625, -4.3022, 0.28", "-110.541, -27.3247, -4.25367, 1.11", "-112.895, -29.6768, -4.29764, 0.28", "-113.318, -30.0899, -4.31702, 0.83", "-115.535, -32.2021, -4.26929, 0.28", "-115.921, -32.5566, -4.27927, 0.56", "-118.152, -34.511, -4.41317, 0.28", "-119.268, -35.4518, -4.47613, 1.11", "-122.989, -38.4806, -4.61696, 0.28", "-124.948, -39.9826, -4.66428, 1.94", "-127.466, -41.7929, -4.74629, 0.28", "-128.609, -42.4949, -4.68356, 0.83", "-129.787, -43.0623, -4.50906, 0.28", "-130.767, -43.3932, -4.28926, 0.56", "-133.273, -43.7814, -3.5706, 0.28", "-134.174, -43.8418, -3.23807, 0.83", "-137.567, -43.8528, -1.6812, 0.28", "-137.903, -43.8435, -1.51564, 0.83", "-140.195, -43.7309, -0.352601, 0.28", "-141.948, -43.6481, 0.451336, 0.83", "-145.933, -43.5195, 1.96726, 0.28", "-146.348, -43.5096, 2.09504, 0.83", "-147.646, -43.464, 2.39378, 0.28", "-147.911, -43.452, 2.43794, 0.83", "-151.139, -43.2159, 2.7687, 0.28", "-152.701, -42.9417, 2.70963, 0.83", "-154.935, -42.3418, 2.40975, 0.28", "-155.504, -42.1818, 2.32427, 0.83", "-158.35, -41.3123, 1.84401, 0.28", "-159.594, -40.8841, 1.63115, 0.56", "-164.246, -38.9131, 0.821375, 0.28", "-165.608, -38.2537, 0.587614, 0.83" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-20.732, -3.2807, -12.0572, 0.56", "-23.1287, -3.86536, -17.8465, 0.56", "-25.0014, -3.63584, -20.1765, 0.56", "-25.7375, -3.38757, -20.9649, 0.56", "-26.3245, -3.04671, -21.8724, 1.39", "-27.2027, -2.49503, -23.2648, 1.67", "-28.5914, -1.66808, -25.4636, 0.83", "-30.1704, -0.627315, -27.8522, 0.28", "-31.5773, 0.33481, -30.003, 1.11", "-35.8764, 3.39205, -36.7961, 0.28", "-36.5687, 3.90639, -37.891, 0.28", "-37.8033, 4.81203, -39.9878, 1.67", "-39.6013, 6.04339, -42.9688, 0.56", "-41.3938, 6.98912, -45.6473, 0.83", "-42.3664, 7.37845, -46.9309, 1.39", "-43.9506, 7.84616, -48.6248, 0.28", "-49.0934, 9.05447, -53.6798, 0.28", "-50.6564, 9.18027, -55.0636, 1.39", "-55.4908, 9.19262, -59.0513, 0.28", "-55.794, 9.17348, -59.2925, 0.56", "-58.3375, 8.89557, -61.3921, 0.28", "-60.0461, 8.64841, -62.7799, 1.39", "-71.9091, 7.12813, -71.6355, 0.28", "-72.6179, 7.04603, -72.1904, 0.83", "-74.1679, 6.89562, -73.4185, 0.83", "-78.7836, 6.49362, -77.1638, 0.28", "-79.4415, 6.41098, -77.7227, 0.56", "-86.4048, 5.36334, -83.7955, 0.28", "-88.4684, 4.94927, -85.6036, 1.11", "-93.3045, 3.85448, -89.862, 0.28", "-93.7612, 3.7468, -90.2664, 0.83", "-104.429, 0.935238, -99.5329, 0.28", "-105.753, 0.498627, -100.77, 1.11", "-109.614, -1.16096, -104.796, 0.28", "-110.769, -1.68584, -106.016, 0.83", "-114.186, -3.36357, -109.853, 0.28", "-114.698, -3.61573, -110.45, 0.83", "-118.028, -5.46374, -114.951, 0.28", "-119.677, -6.43412, -117.275, 1.39" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-19.036, -0.518037, -0.00992581, 1.11", "-34.4361, 1.00445, -10.2998, 1.11", "-39.5622, 1.97344, -13.0736, 0.83", "-45.2438, 2.9721, -15.998, 0.83", "-50.0892, 3.79494, -18.344, 0.83", "-53.8141, 4.48089, -20.0282, 0.83", "-59.1887, 5.63403, -22.4253, 0.83", "-68.7357, 7.65394, -25.3838, 0.83", "-73.1255, 8.67118, -26.9507, 0.56", "-75.9354, 9.31225, -28.0014, 0.56", "-79.4343, 10.1792, -29.1491, 1.11", "-85.1879, 11.5942, -30.959, 0.56", "-90.8949, 12.9503, -32.5816, 0.56", "-97.8088, 14.5906, -34.1657, 0.56", "-102.34, 15.9037, -35.0518, 1.94", "-108.07, 17.7079, -36.2947, 0.56", "-109.489, 18.2326, -36.5366, 0.56", "-114.232, 20.2606, -37.2774, 0.56", "-118.19, 22.2965, -37.9096, 0.28", "-124.573, 25.8582, -38.7455, 2.22", "-130.148, 29.1912, -39.4693, 0.56", "-137.916, 34.0405, -40.4686, 0.56", "-143.091, 37.3067, -41.0472, 0.28", "-144.901, 38.4667, -41.2665, 0.28", "-147.351, 40.1159, -41.7187, 0.83", "-150.529, 42.2752, -42.2776, 0.28", "-152.126, 43.3897, -42.7059, 0.56", "-154.744, 45.2688, -43.84, 0.28", "-158.557, 48.2995, -45.9112, 1.39", "-163.526, 52.1558, -48.9595, 0.28", "-165.646, 53.8529, -50.3483, 0.56", "-169.019, 56.6529, -52.469, 0.28", "-169.683, 57.2304, -52.8595, 0.56", "-172.892, 60.1856, -54.4351, 0.28", "-177.996, 65.1335, -56.161, 0.28", "-180.514, 67.7524, -56.6182, 1.67", "-184.195, 71.7204, -56.9763, 0.28", "-185.541, 73.175, -56.9811, 0.56", "-189.428, 77.462, -56.8868, 0.28", "-191.724, 80.0312, -56.7166, 1.67", "-195.584, 84.4253, -56.6352, 0.28", "-196.513, 85.4099, -56.6676, 0.28", "-197.288, 86.1441, -56.7861, 0.56", "-199.466, 87.775, -57.3049, 0.28", "-201.075, 88.6468, -57.9217, 0.83", "-204.716, 90.2444, -59.5995, 0.28", "-206.704, 91.0242, -60.7544, 0.83", "-211.271, 92.8027, -63.5984, 0.28", "-214.347, 93.9842, -65.6621, 1.39", "-220.015, 96.1455, -69.4669, 0.28", "-222.44, 97.0798, -71.0598, 1.67", "-228.615, 99.3271, -74.8275, 0.28", "-229.738, 99.7129, -75.5107, 0.56", "-234.507, 101.435, -78.3779, 0.28", "-238.054, 102.812, -80.4542, 1.11", "-240.599, 103.834, -81.8255, 0.28", "-243.899, 105.103, -83.4992, 0.28", "-247.913, 106.626, -85.2532, 0.56", "-251.668, 108.05, -86.7455, 0.28", "-253.922, 108.976, -87.696, 0.83", "-257.206, 110.442, -89.2434, 0.28", "-258.122, 110.824, -89.7021, 0.56", "-261.009, 111.977, -91.1214, 0.28", "-264.343, 113.129, -92.4461, 1.39", "-271.92, 115.568, -95.1094, 0.28", "-273.755, 116.144, -95.7891, 0.83", "-280.25, 118.105, -98.3668, 0.28", "-282.052, 118.668, -99.1786, 0.83", "-294.058, 122.834, -104.955, 0.28", "-296.108, 123.619, -105.967, 0.83", "-300.546, 125.53, -108.117, 0.28", "-303.885, 127.199, -109.847, 0.83", "-307.364, 129.31, -111.794, 0.83", "-313.075, 133.145, -115.145, 0.28", "-313.828, 133.742, -115.62, 0.56", "-317.944, 137.0, -117.691, 0.28", "-319.263, 138.027, -118.152, 0.83", "-323.088, 140.943, -119.101, 0.28", "-327.021, 143.64, -119.814, 0.83", "-330.827, 145.93, -120.229, 0.28", "-335.76, 148.748, -120.357, 1.11", "-339.732, 150.807, -119.936, 0.28", "-341.271, 151.575, -119.648, 0.56", "-345.407, 153.589, -118.695, 0.28", "-349.658, 155.598, -117.786, 0.83", "-351.437, 156.404, -117.379, 0.83", "-355.72, 158.435, -116.771, 0.28", "-356.598, 158.844, -116.578, 0.56", "-360.866, 160.942, -115.788, 0.28", "-362.678, 162.075, -115.639, 0.56" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-19.036, -0.518037, -0.00992581, 0.83", "-24.2081, 3.91958, 2.99025, 0.83", "-26.9098, 6.53456, 5.03133, 0.83", "-30.4239, 10.0086, 7.94144, 0.83", "-35.4731, 14.991, 12.4213, 0.83", "-38.7698, 18.1072, 15.4758, 0.83", "-41.2085, 20.1943, 17.7749, 1.39", "-45.9596, 24.232, 22.6727, 0.56", "-48.5103, 26.256, 25.101, 0.56", "-50.6038, 27.5406, 26.6127, 0.83", "-53.14, 28.5967, 27.8563, 0.83", "-57.5478, 30.1022, 29.031, 0.83", "-62.3571, 31.55, 29.7014, 1.11", "-69.0514, 33.4661, 29.2024, 0.83", "-72.4353, 34.5728, 28.7834, 0.83", "-75.8626, 35.9769, 28.1863, 1.11", "-78.4865, 37.2852, 27.9144, 0.56", "-81.6122, 38.9055, 28.1409, 1.39", "-85.3216, 40.6569, 29.3238, 1.11", "-87.5108, 41.5032, 30.436, 0.83", "-89.9848, 42.265, 31.7702, 0.83", "-94.8442, 43.5793, 34.7012, 0.83", "-98.9546, 44.7685, 37.3658, 0.83", "-100.36, 45.2036, 38.1988, 0.83", "-103.044, 46.0623, 39.8703, 0.56", "-105.743, 46.9142, 41.4068, 0.83", "-108.546, 47.7902, 42.915, 0.83", "-110.813, 48.6308, 43.9107, 0.56", "-117.057, 51.4456, 46.3963, 0.83", "-120.902, 53.2604, 47.8907, 0.56", "-122.771, 54.1566, 48.6156, 0.83" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.56434, 14.6509, -4.92863, 2.22", "3.65198, 18.6001, -8.45761, 2.22" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "3.56434, 14.6509, -4.92863, 0.83", "5.62826, 16.9801, -0.598285, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "68.1842, 42.7758, 15.9781, 1.11", "70.2873, 41.4078, 21.3587, 1.11", "70.7925, 41.0791, 22.6514, 1.39" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "68.1842, 42.7758, 15.9781, 0.56", "67.6023, 48.5675, 18.1435, 0.56", "67.5712, 51.3889, 20.1963, 0.56", "67.5647, 53.5033, 21.9061, 0.28", "67.5857, 53.9706, 22.2782, 0.83", "67.737, 55.8137, 23.7855, 0.28", "68.0571, 59.1613, 26.5003, 0.56", "68.681, 62.7946, 29.8783, 0.56", "68.9553, 64.2732, 31.0396, 0.56", "69.3168, 66.1583, 32.2742, 0.56", "69.7652, 68.6163, 33.6708, 0.28", "69.9275, 69.5919, 34.1037, 0.28", "70.0252, 70.9045, 34.3188, 0.83", "70.3102, 74.1945, 34.0908, 0.28", "70.5469, 76.452, 33.8876, 0.28", "70.6001, 76.8184, 33.8078, 0.56", "70.971, 78.2725, 33.3564, 0.28", "70.971, 78.2725, 33.3564, 0.56", "71.9413, 80.4958, 32.7009, 0.28", "72.7586, 81.9287, 32.4088, 0.56", "75.2923, 85.757, 31.4635, 0.28", "76.1167, 86.9035, 31.1175, 0.28", "76.29, 87.1151, 31.0817, 0.56", "77.007, 87.9077, 31.3537, 0.28", "77.9938, 88.8854, 32.4909, 0.83", "78.8476, 89.673, 33.794, 0.28", "79.5483, 90.2766, 35.1644, 0.83", "81.7172, 92.1554, 40.0051, 0.28", "83.4551, 93.6263, 44.1794, 0.28", "83.7763, 93.8923, 45.0763, 0.56", "87.0605, 102.131, 48.9379, 0.56", "91.5972, 109.765, 52.8441, 0.56", "95.7803, 118.176, 55.1546, 0.56", "100.947, 125.406, 59.0881, 0.56", "106.574, 132.358, 62.9162, 0.56", "111.989, 138.933, 67.6411, 0.56" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "36.0571, -4.20989, -12.4766, 0.83", "39.0826, -5.36728, -12.3869, 0.83", "40.2914, -5.78453, -12.3204, 0.28", "41.3737, -6.15202, -12.2556, 0.83", "42.8224, -6.62122, -12.1668, 0.56", "46.0863, -7.53475, -11.8716, 0.56", "48.7991, -8.27928, -11.5929, 0.56", "51.1037, -8.83878, -11.441, 0.56", "52.3456, -9.13612, -11.2994, 1.39", "53.3765, -9.37729, -11.1761, 0.83", "56.0471, -9.96247, -10.8566, 0.56", "56.9054, -10.1847, -10.7634, 0.83", "58.2473, -10.52, -10.6464, 0.56", "59.77, -10.9432, -10.5659, 0.56", "61.8844, -11.5348, -10.55, 0.83", "64.4505, -12.2561, -10.6382, 0.56", "66.1448, -12.7814, -10.7912, 0.56", "67.5861, -13.229, -10.9392, 0.56", "69.6744, -13.946, -11.1888, 1.94", "71.72, -14.7625, -11.4708, 0.56", "73.1729, -15.424, -11.6365, 0.56", "75.9386, -16.9254, -11.9653, 0.56", "77.3355, -17.758, -12.1294, 0.56", "78.2195, -18.3625, -12.239, 0.28", "79.2018, -19.1315, -12.3346, 0.28", "80.1996, -20.0276, -12.4052, 1.67", "82.7302, -22.671, -12.5306, 0.28", "83.5433, -23.6418, -12.5015, 0.28", "84.0865, -24.3507, -12.4509, 0.56", "85.151, -25.8252, -12.3677, 0.28", "86.4672, -27.8324, -12.2902, 0.28", "87.6043, -29.7699, -12.2148, 0.28", "88.4064, -31.3239, -12.1608, 1.39", "88.8494, -32.2051, -12.1254, 1.39", "89.7779, -34.0516, -12.0654, 0.28", "90.0491, -34.6197, -12.0734, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "36.0571, -4.20989, -12.4766, 0.83", "36.6915, -5.00709, -15.5954, 0.83", "40.8108, -8.91274, -31.9417, 0.56", "41.4924, -9.44628, -34.2127, 0.56", "43.0696, -10.497, -38.5969, 1.11", "45.0932, -11.6904, -43.6387, 0.56", "46.8428, -12.6362, -47.5713, 1.67", "48.6013, -13.4549, -50.764, 0.28", "49.9027, -13.8097, -52.4754, 1.11", "55.7033, -15.3112, -59.2624, 0.28", "56.6416, -15.5234, -60.1989, 0.83", "58.4016, -15.7348, -61.7375, 0.83", "61.9287, -15.6712, -64.7434, 0.28", "62.6723, -15.5185, -65.4322, 1.11", "64.0855, -15.0389, -66.7549, 0.28", "65.3862, -14.5544, -67.945, 0.83", "69.0855, -13.2724, -71.3169, 0.28", "72.3512, -12.3061, -74.337, 1.67", "80.4735, -10.2243, -81.68, 0.28", "82.6754, -9.83517, -83.6633, 2.22", "90.2148, -9.00606, -90.4472, 0.28", "91.9501, -8.92936, -92.0415, 1.11", "97.4146, -8.98491, -97.03, 0.28", "98.8602, -9.04184, -98.352, 1.11", "103.87, -9.43677, -103.107, 0.28", "105.517, -9.47221, -105.166, 1.11", "108.899, -9.31275, -110.702, 0.28", "110.12, -9.20187, -113.084, 1.11", "111.357, -9.02402, -115.804, 0.28", "111.738, -8.92266, -116.749, 0.56", "117.969, -6.35128, -133.92, 0.28", "119.563, -5.73512, -138.999, 1.67", "121.503, -4.96435, -145.537, 0.28", "121.679, -4.89584, -146.157, 0.56", "124.489, -3.81185, -156.072, 0.28", "124.846, -3.67109, -157.4, 1.39", "128.617, -1.96102, -172.65, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.48909, -24.6844, 5.96042, 1.67", "-5.97679, -30.1944, 6.65995, 1.67", "-6.50746, -34.4769, 7.16967, 1.67", "-7.01452, -37.9709, 7.54653, 1.67", "-7.70816, -43.0756, 7.82792, 1.67", "-8.02589, -45.3393, 7.86471, 1.67", "-8.56226, -48.8892, 7.87281, 1.67", "-9.07873, -51.9957, 7.7825, 1.67", "-9.63977, -55.2914, 7.40519, 1.67", "-10.465, -60.0601, 6.39493, 1.39", "-11.4017, -65.6584, 4.78825, 1.39", "-11.6659, -67.7505, 4.12694, 1.39", "-11.9538, -71.5546, 2.90532, 1.39", "-12.1, -79.3427, 0.548245, 1.39", "-11.984, -82.4617, -0.295386, 1.39", "-11.6034, -87.809, -1.36544, 1.11", "-11.0908, -92.4335, -2.05262, 1.11", "-10.7741, -95.2119, -2.20091, 1.11", "-10.511, -98.2995, -1.98265, 1.11", "-10.3647, -102.189, -1.22002, 1.11", "-10.4499, -109.277, 0.498822, 1.11", "-10.8422, -112.847, 1.51026, 1.11", "-11.7543, -117.374, 2.88044, 1.11", "-12.6767, -120.764, 3.86843, 1.11", "-13.4011, -123.003, 4.5169, 1.11", "-13.7279, -123.944, 4.77343, 1.11", "-15.0453, -127.984, 5.6712, 1.11", "-15.6554, -130.628, 5.92893, 1.11", "-15.9313, -132.826, 5.89873, 1.39", "-16.0351, -135.543, 5.75768, 1.39", "-15.9937, -138.429, 5.5709, 1.11", "-15.8924, -140.951, 5.37983, 1.11", "-15.6247, -145.98, 4.9375, 1.11", "-15.5335, -148.698, 4.68086, 1.11", "-15.5119, -151.177, 4.37789, 1.11", "-15.6135, -153.224, 4.0885, 1.39", "-15.7292, -154.959, 3.82724, 1.67", "-15.9457, -156.857, 3.53305, 1.67", "-16.4722, -159.329, 3.17039, 1.11", "-17.3508, -162.526, 2.61202, 1.11", "-18.6638, -166.349, 1.85323, 1.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-5.48909, -24.6844, 5.96042, 0.83", "-10.5843, -29.6606, 2.42719, 0.83", "-13.7462, -32.3299, 0.524145, 0.83", "-16.3291, -34.3336, -1.07918, 0.83", "-19.1144, -36.4075, -2.73, 0.83", "-21.9016, -38.3953, -4.29592, 0.83", "-23.3744, -39.3478, -5.12987, 0.83", "-25.9965, -40.8051, -6.30684, 0.83", "-28.9715, -42.4313, -7.84116, 1.11", "-30.9331, -43.4313, -8.93075, 0.83", "-32.9177, -44.4331, -10.0041, 1.11", "-37.0459, -46.6088, -12.2034, 0.83", "-39.8377, -48.1977, -13.6434, 0.83", "-43.7158, -50.5499, -15.6741, 0.83", "-46.1256, -52.1036, -16.8835, 1.39", "-48.5072, -53.7659, -18.1136, 0.56", "-49.9243, -54.8927, -18.8739, 0.56", "-51.0578, -55.8933, -19.4746, 1.11", "-53.7571, -58.3419, -20.928, 0.56", "-57.0426, -61.2981, -22.5236, 0.56", "-58.06, -62.3053, -23.0041, 0.83", "-60.422, -64.8665, -24.0595, 0.28", "-61.4122, -66.056, -24.4317, 0.28", "-62.4042, -67.3319, -24.7274, 1.39", "-64.1956, -69.7381, -25.0585, 0.83", "-65.8026, -71.919, -25.2515, 0.28", "-66.6655, -73.1865, -25.3653, 0.83", "-67.8073, -75.0175, -25.5147, 0.28", "-68.5267, -76.3596, -25.6662, 0.56", "-69.4432, -78.1835, -25.9527, 0.28", "-70.0322, -79.4055, -26.1914, 1.67", "-71.6383, -82.7384, -26.8829, 0.56", "-72.8097, -85.2206, -27.3987, 0.28", "-73.8998, -87.6101, -27.9589, 0.28", "-74.2352, -88.3025, -28.1461, 1.67", "-75.2451, -90.2424, -28.7347, 1.11", "-77.1409, -93.6159, -29.8372, 0.28", "-77.6256, -94.3891, -30.0908, 0.56", "-79.3453, -96.8541, -31.0016, 0.28", "-81.4728, -99.4867, -32.0723, 0.28", "-81.8722, -99.9, -32.2153, 0.56", "-83.0128, -100.844, -32.4913, 0.28", "-83.4554, -101.129, -32.5614, 0.83", "-85.5299, -102.306, -32.7925, 0.28", "-87.7843, -103.452, -32.8122, 1.39", "-91.6879, -105.461, -32.4179, 0.28", "-93.1653, -106.276, -32.1568, 0.56", "-95.2395, -107.553, -31.6281, 0.28", "-96.0008, -108.084, -31.3518, 0.28", "-98.2785, -109.836, -30.2446, 1.67", "-100.49, -111.969, -28.8506, 0.56", "-101.082, -112.733, -28.3895, 0.28", "-101.862, -113.901, -27.5866, 0.56", "-103.107, -115.876, -26.087, 0.28", "-103.532, -116.507, -25.588, 0.83", "-104.669, -118.014, -24.4938, 0.28", "-105.362, -118.822, -23.9449, 0.28", "-106.989, -120.631, -22.7184, 0.83", "-108.957, -122.826, -21.2464, 0.28", "-109.724, -123.722, -20.6257, 0.83", "-112.661, -127.286, -18.1269, 0.28", "-113.322, -128.077, -17.5587, 1.11", "-116.21, -131.733, -14.7528, 0.28", "-116.494, -132.147, -14.4359, 0.83", "-118.104, -134.889, -12.263, 0.28", "-118.599, -135.833, -11.4794, 0.28", "-118.641, -135.931, -11.3853, 0.83", "-119.787, -138.953, -8.27641, 0.28", "-120.123, -140.031, -7.03841, 0.28", "-120.25, -140.409, -6.59121, 0.56" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "15.5304, 39.8479, -0.563992, 0.56", "21.1075, 53.7726, -0.563992, 0.56", "26.6846, 67.6972, -0.563992, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-22.2185, 95.4798, -71.3984, 0.28", "-19.5557, 103.538, -75.0532, 0.28", "-18.3659, 107.138, -76.6861, 0.28", "-17.758, 108.977, -77.5204, 1.39" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-22.2185, 95.4798, -71.3984, 0.28", "-23.2254, 97.6124, -72.1724, 0.28", "-23.5231, 98.243, -72.4012, 0.56" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-122.771, 54.1566, 48.6156, 0.56", "-124.073, 56.0386, 49.3618, 0.56", "-124.769, 57.1889, 49.7483, 1.11", "-127.131, 61.6422, 51.0135, 0.56", "-129.033, 65.5754, 52.0307, 0.83", "-129.741, 67.4158, 52.4604, 0.83", "-130.123, 68.7534, 52.7494, 0.28", "-130.118, 69.3747, 52.8234, 0.56", "-129.822, 70.3075, 52.8151, 0.28", "-129.691, 70.5458, 52.7984, 0.83", "-128.123, 72.6213, 53.127, 0.28", "-127.539, 73.5703, 53.3661, 0.83", "-126.924, 74.8665, 53.8648, 0.28", "-126.511, 75.8448, 54.2782, 0.83", "-125.549, 78.8898, 55.7188, 0.28", "-125.354, 79.9812, 56.273, 0.83", "-125.351, 82.2756, 57.5544, 0.28", "-125.477, 83.7077, 58.4049, 1.11", "-128.376, 92.5875, 62.0204, 1.11", "-133.729, 100.47, 65.2781, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-122.771, 54.1566, 48.6156, 0.56", "-122.415, 52.7555, 49.6565, 0.56", "-122.075, 51.4211, 50.6479, 0.28", "-121.459, 49.0053, 52.4427, 0.56", "-120.457, 42.5775, 60.1112, 0.56", "-120.439, 35.9207, 67.6405, 0.56", "-120.396, 29.6823, 75.5377, 0.56", "-121.852, 24.2794, 83.9379, 0.56", "-121.614, 18.9668, 92.5159, 0.56", "-120.809, 13.7057, 101.092, 0.56", "-121.202, 9.02359, 110.045, 0.56", "-121.969, 4.4054, 119.01, 0.56" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "3.65198, 18.6001, -8.45761, 1.11", "2.43646, 22.1134, -11.7292, 1.11", "1.76066, 24.0667, -13.5482, 1.11", "1.23584, 25.5836, -14.9608, 1.39" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.65198, 18.6001, -8.45761, 1.11", "7.08321, 28.1974, 4.83312, 1.11", "7.87573, 30.9435, 8.30407, 1.11", "8.6882, 34.7661, 12.7859, 1.11", "9.3168, 37.7236, 16.2534, 1.11", "9.78425, 39.9229, 18.8319, 1.11", "10.2007, 41.8826, 21.1295, 1.11", "11.5382, 46.3487, 24.2763, 1.11", "11.985, 48.243, 25.7334, 1.39" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.62826, 16.9801, -0.598285, 0.83", "6.22629, 18.5309, 2.08382, 0.83", "7.07331, 20.7724, 6.07185, 0.56", "7.61896, 22.2906, 8.66516, 0.56", "8.13175, 23.7564, 11.0417, 0.56", "9.97935, 28.8966, 18.8079, 1.11", "10.9, 31.3765, 22.352, 0.56", "11.4548, 32.6516, 24.0543, 0.83", "12.2229, 34.4398, 26.386, 0.56", "12.5007, 35.1177, 27.297, 0.56", "13.5474, 37.2149, 29.9767, 0.83", "14.7012, 39.1458, 31.1488, 0.56", "17.9547, 43.8595, 32.8251, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "5.62826, 16.9801, -0.598285, 0.56", "7.28084, 16.5227, 0.657167, 0.56", "9.38735, 15.9397, 2.25746, 0.83", "17.7675, 14.5512, 8.92415, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "70.7925, 41.0791, 22.6514, 0.83", "73.836, 43.1606, 24.1398, 0.83", "75.2153, 44.1039, 24.8143, 0.83", "76.7455, 45.1504, 25.5627, 0.83", "78.2075, 46.1503, 26.2776, 1.11" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "70.7925, 41.0791, 22.6514, 0.83", "72.328, 41.2404, 25.6309, 0.83", "74.8008, 41.5002, 30.429, 0.83", "75.9149, 41.6173, 32.5907, 0.56", "76.6798, 41.6976, 34.0749, 0.56", "77.9612, 41.8323, 36.5613, 0.56", "78.9161, 41.9326, 38.4141, 0.56" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "90.0491, -34.6197, -12.0734, 0.28", "92.3641, -36.7669, -12.2549, 0.28", "94.4706, -39.1172, -12.6046, 0.28", "95.2869, -40.0281, -12.7401, 0.56", "98.0752, -43.1391, -13.2028, 0.28", "98.6755, -43.8089, -13.3025, 0.56", "101.54, -47.0052, -13.7779, 0.28", "102.602, -48.5028, -14.1346, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "90.0491, -34.6197, -12.0734, 0.28", "92.6161, -37.5273, -12.2935, 0.28", "93.7625, -38.9849, -12.0126, 0.28", "94.249, -39.6556, -11.8607, 0.56", "95.4042, -41.2649, -11.4667, 0.28", "96.4104, -42.6797, -11.1566, 1.11", "97.3292, -43.9499, -10.9057, 0.83", "100.315, -47.9513, -10.1089, 0.28", "101.737, -49.818, -9.65699, 0.28", "101.961, -50.1271, -9.55355, 0.56", "103.528, -52.3865, -8.68818, 0.28", "104.289, -53.4938, -8.27522, 1.11", "105.433, -55.136, -7.6134, 0.28", "107.731, -58.2006, -6.27381, 0.56", "110.286, -61.6489, -4.31835, 0.28", "110.801, -62.3854, -3.83742, 0.56", "116.244, -70.3505, -0.88247, 0.56" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.6638, -166.349, 1.85323, 1.11", "-17.939, -169.474, 0.94948, 1.11", "-17.0595, -174.065, -0.321134, 1.11", "-16.2841, -178.856, -2.14891, 1.11", "-16.0158, -180.498, -2.73075, 1.11", "-15.3166, -183.928, -3.72802, 2.22", "-14.6591, -186.703, -4.50143, 3.33", "-14.2002, -188.635, -4.9993, 1.94", "-13.1739, -194.656, -6.18231, 0.83", "-12.8158, -198.338, -6.82377, 1.67", "-12.4992, -202.871, -7.37192, 2.22", "-12.3807, -205.787, -7.55428, 0.83", "-12.3847, -209.553, -7.8073, 0.83", "-12.6197, -213.61, -8.01587, 0.83", "-13.108, -218.286, -8.2921, 1.11", "-13.4745, -220.836, -8.68121, 0.83", "-13.9145, -223.34, -9.18011, 0.83", "-14.6117, -227.5, -10.0421, 2.22", "-15.1736, -231.302, -10.9252, 1.11", "-16.0147, -237.274, -12.4214, 0.83", "-16.5617, -240.717, -13.2871, 2.22", "-16.7066, -241.597, -13.4888, 2.22", "-17.4996, -246.513, -14.3842, 0.83", "-18.0028, -249.949, -14.7817, 0.83", "-18.1484, -250.984, -14.8739, 1.39", "-18.6843, -254.604, -14.9251, 2.22", "-19.3664, -259.57, -14.7122, 0.83", "-19.6411, -261.694, -14.6089, 1.67", "-20.0873, -265.719, -14.3594, 2.5" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-18.6638, -166.349, 1.85323, 0.56", "-20.527, -166.934, 0.63471, 0.56", "-21.8094, -167.337, -0.203906, 0.56", "-22.7518, -167.633, -0.820232, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-120.25, -140.409, -6.59121, 0.28", "-121.533, -141.224, -5.81834, 0.28", "-122.118, -141.595, -5.46662, 0.56", "-124.225, -142.933, -4.19756, 0.28", "-125.206, -143.556, -3.60683, 0.56", "-127.268, -144.865, -2.36509, 0.56", "-133.647, -148.123, 0.689765, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-120.25, -140.409, -6.59121, 0.28", "-119.482, -141.765, -7.03953, 0.28", "-119.18, -142.299, -7.21571, 0.56", "-114.953, -151.531, -8.44167, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "1.23584, 25.5836, -14.9608, 0.83", "0.95025, 28.9741, -15.6775, 0.83", "0.895853, 33.653, -17.0145, 0.83", "1.01437, 38.7869, -18.6254, 0.83", "1.12846, 41.6834, -19.4704, 0.83", "1.15779, 42.5708, -19.7361, 0.83", "1.25041, 45.751, -20.6798, 0.83", "1.44416, 50.4366, -21.8931, 0.83", "1.54158, 53.3585, -22.73, 0.83", "1.66451, 56.6728, -23.6802, 1.11", "1.68262, 60.6853, -24.7998, 0.83", "1.58249, 62.6493, -25.2339, 1.11", "1.31545, 65.6021, -25.8215, 0.83", "0.6538, 70.4049, -26.5502, 0.83", "0.112726, 73.9938, -27.1264, 0.83", "-0.304008, 76.4556, -27.5492, 0.83", "-0.890562, 79.6463, -27.9298, 2.5" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "1.23584, 25.5836, -14.9608, 0.56", "2.04641, 29.3793, -18.274, 0.56", "3.2505, 33.9618, -21.6196, 0.56", "3.93067, 36.6631, -23.571, 1.11", "5.13016, 41.0207, -26.6153, 0.56", "5.82324, 43.4671, -28.2445, 0.56", "6.93093, 47.0906, -30.6056, 1.11", "7.90168, 50.3906, -32.4541, 0.56", "9.35925, 54.4761, -34.498, 0.56", "10.222, 56.4657, -35.546, 0.28", "11.005, 58.0177, -36.2684, 0.56", "12.2942, 60.5215, -37.2708, 0.28", "12.5972, 61.1067, -37.4425, 0.56", "13.3223, 62.511, -37.8159, 0.28", "13.5266, 62.8996, -37.8691, 0.56", "14.1221, 64.1726, -38.0233, 0.28", "15.727, 67.6036, -38.4857, 1.67", "17.4607, 71.4843, -39.0103, 0.28", "17.7037, 72.0464, -39.1412, 0.56", "18.6574, 74.2345, -39.7974, 0.28", "18.8775, 74.7694, -40.0088, 1.39", "20.2572, 78.0429, -41.5425, 0.28", "20.727, 79.1787, -42.1772, 0.83", "22.366, 82.8983, -44.2078, 0.28", "23.1649, 84.6622, -45.3078, 1.39", "24.9726, 88.612, -48.0522, 0.28", "25.4044, 89.5846, -48.7419, 0.83", "26.586, 92.456, -50.818, 0.28", "27.3595, 94.416, -52.3183, 1.39", "28.7101, 98.0889, -55.1785, 0.28", "28.7396, 98.192, -55.2586, 0.56", "29.0644, 99.7284, -56.2851, 0.28", "29.1457, 100.335, -56.6222, 0.56", "29.4762, 103.639, -58.1769, 0.28", "29.5394, 104.527, -58.5824, 0.83", "29.7773, 108.111, -60.023, 0.28", "29.9499, 110.426, -60.9427, 1.11", "30.6884, 118.792, -64.2294, 0.28", "30.8672, 120.537, -64.859, 1.11" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "11.985, 48.243, 25.7334, 0.83", "10.9773, 50.2686, 25.9259, 0.83", "10.0949, 51.8596, 26.1983, 0.83", "9.26577, 53.2329, 26.4009, 0.83", "7.64307, 55.7478, 26.8067, 0.83", "6.62562, 57.288, 27.1512, 0.83", "4.26766, 60.8182, 27.9699, 0.83", "2.69768, 63.2445, 28.5634, 0.83", "1.10283, 65.7364, 29.1699, 0.83", "0.206345, 67.1709, 29.4575, 0.83", "-1.56287, 69.952, 29.9575, 0.83", "-2.42164, 71.4361, 30.2527, 0.83", "-3.77555, 74.0438, 30.7123, 0.83", "-4.49449, 75.3802, 30.9226, 1.94", "-5.68653, 77.6306, 31.2627, 1.39", "-7.84748, 81.7332, 31.6979, 0.83", "-9.18862, 84.2932, 31.8759, 0.83", "-10.3789, 86.5331, 32.0758, 1.11", "-12.2475, 89.9752, 32.3604, 0.83", "-12.9806, 91.4039, 32.4441, 0.83", "-13.4112, 92.4112, 32.4677, 1.11", "-14.1447, 94.5697, 32.3378, 0.83", "-14.4773, 95.6591, 32.24, 0.56", "-14.943, 97.4289, 32.0988, 1.39", "-15.6308, 100.308, 31.8741, 0.83", "-16.3149, 102.974, 31.6724, 1.67", "-17.108, 105.827, 31.443, 0.83", "-17.4179, 106.914, 31.3193, 0.28", "-17.6827, 107.876, 31.167, 0.83", "-18.0614, 109.183, 30.9283, 0.28", "-18.2695, 109.848, 30.7542, 0.83", "-18.7383, 111.102, 30.4298, 0.28", "-19.389, 112.723, 30.0622, 1.67", "-20.2126, 114.619, 29.7216, 0.28", "-20.5603, 115.373, 29.6198, 1.39", "-21.5785, 117.425, 29.3326, 0.83", "-22.7647, 119.746, 28.9043, 0.28", "-23.1594, 120.471, 28.7522, 1.67", "-23.9227, 121.767, 28.4807, 2.5", "-24.5529, 122.792, 28.2382, 1.39", "-25.537, 124.43, 27.7633, 0.56", "-26.4147, 125.912, 27.2534, 1.11", "-27.167, 127.321, 26.5137, 0.28", "-27.7487, 128.43, 25.857, 1.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "11.985, 48.243, 25.7334, 0.56", "11.9168, 49.1555, 26.3028, 0.56", "11.8495, 50.0601, 26.723, 0.56", "11.3475, 53.3089, 27.9497, 0.56", "10.8695, 55.7661, 28.7816, 0.83", "10.714, 56.5987, 29.0551, 0.83", "10.4295, 58.3514, 29.6207, 0.83", "10.0759, 60.5478, 30.154, 0.56", "9.74624, 63.2308, 30.6515, 0.56", "9.74039, 63.7282, 30.7091, 0.56", "9.84918, 64.9672, 30.8572, 0.56", "9.96608, 65.9501, 30.9681, 0.56", "10.2953, 68.1694, 31.3039, 0.83", "10.4936, 69.9403, 31.6625, 0.56", "10.4797, 71.3345, 31.8688, 0.56", "10.3642, 71.7703, 31.9052, 0.83", "9.61472, 73.2371, 31.9412, 0.56", "8.47253, 74.8804, 31.8712, 1.67", "7.39504, 76.0514, 31.7302, 1.11", "5.77107, 77.502, 31.2811, 0.83", "4.75761, 78.228, 31.0098, 0.83", "3.48172, 78.9599, 30.689, 0.28", "2.67604, 79.2592, 30.5156, 0.56", "1.8849, 79.3901, 30.2719, 0.83", "0.401944, 79.2928, 29.6374, 0.56", "-1.91972, 78.7372, 28.6591, 0.83", "-3.24245, 78.372, 28.1454, 0.28", "-4.35607, 78.092, 27.7036, 0.28", "-5.92695, 77.7146, 27.1192, 0.83", "-7.83532, 77.2934, 26.3851, 0.28", "-10.2174, 76.8287, 25.3862, 0.83", "-12.545, 76.4845, 24.0366, 0.28", "-13.6711, 76.432, 23.3949, 1.11", "-17.3685, 82.6108, 23.4855, 1.11", "-22.2215, 87.9608, 23.9518, 1.11", "-26.5925, 93.7044, 24.1866, 1.11", "-31.2833, 99.2039, 24.395, 1.11", "-36.0144, 104.57, 25.5075, 1.11", "-41.6286, 109.129, 26.2051, 1.11", "-47.7282, 113.089, 25.9293, 1.11" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "17.9547, 43.8595, 32.8251, 0.56", "18.8541, 45.9597, 33.3367, 0.56", "19.3178, 47.0194, 33.6733, 0.83", "20.8714, 50.4813, 34.9704, 0.56", "22.5844, 54.0807, 36.4674, 0.56", "24.7577, 58.1598, 38.2359, 0.56", "26.2521, 60.981, 39.5487, 0.56", "26.5192, 61.4843, 39.8178, 0.56", "27.6052, 63.3969, 40.8341, 0.28", "28.0123, 64.0224, 41.2111, 0.83", "29.2633, 65.3756, 42.2531, 0.56", "31.3722, 67.1344, 43.5179, 0.28", "32.3764, 67.9191, 43.9332, 0.83", "33.6216, 68.8318, 44.4185, 0.56", "36.2245, 70.468, 45.2599, 1.11", "39.2884, 72.3669, 46.2057, 0.56", "44.7018, 80.1917, 50.1362, 0.56", "51.0082, 87.9069, 52.7316, 0.56", "58.7916, 93.7498, 56.284, 0.56", "66.9071, 98.4507, 60.7543, 0.56", "75.8594, 102.606, 64.0325, 0.56", "85.0366, 105.553, 67.9902, 0.56", "94.5577, 107.236, 71.9057, 0.56", "103.733, 109.043, 76.5283, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "17.9547, 43.8595, 32.8251, 0.56", "18.7361, 44.1348, 33.1423, 0.56", "19.7687, 44.4985, 33.5615, 0.56", "20.4712, 44.746, 33.8467, 0.83", "22.6828, 45.525, 34.7444, 0.56", "25.5156, 46.5229, 35.8944, 0.28", "31.7942, 49.2841, 37.8378, 0.28", "37.9474, 52.1757, 39.9749, 0.28", "44.6703, 54.0017, 41.5431, 0.28", "51.7753, 54.6323, 41.9763, 0.28", "58.8382, 55.4754, 42.6613, 0.28", "65.7976, 57.0813, 42.7345, 0.28", "72.188, 59.9188, 41.3522, 0.28", "78.7626, 62.0892, 39.6199, 0.28", "85.3145, 64.7776, 38.7934, 0.28", "91.4211, 68.1685, 37.4306, 0.28", "97.2954, 72.1612, 37.4416, 0.28", "103.311, 75.9164, 36.9441, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "78.2075, 46.1503, 26.2776, 0.83", "80.1768, 47.0966, 26.6695, 0.83", "82.4747, 48.2711, 27.0717, 0.83", "85.076, 49.5023, 27.4334, 0.83", "88.4878, 50.9935, 28.0358, 0.83", "89.92, 51.5585, 28.3879, 0.83", "94.0754, 53.0897, 29.552, 0.83", "97.3192, 54.2715, 30.5449, 0.83", "99.5558, 55.0756, 31.253, 0.83", "102.29, 56.0356, 32.1047, 1.39", "106.216, 57.1526, 33.3033, 0.83", "108.309, 57.6136, 33.9441, 0.83", "110.584, 57.9907, 34.6256, 1.11", "112.648, 58.29, 35.2196, 0.83", "115.025, 58.634, 35.8172, 0.83", "116.779, 58.8609, 36.0933, 0.83", "118.816, 59.0686, 36.315, 0.83", "120.05, 59.1681, 36.3575, 0.83", "121.388, 59.2448, 36.3276, 1.39", "122.075, 59.3057, 36.2585, 1.39", "124.534, 59.6457, 35.7979, 0.56", "126.924, 60.0758, 35.0777, 1.67", "130.889, 60.8942, 33.5996, 0.56", "131.504, 61.0219, 33.3348, 0.83", "133.452, 61.4019, 32.4303, 0.28", "134.292, 61.5508, 32.0754, 0.56", "137.324, 61.8821, 30.977, 0.28", "138.522, 61.9774, 30.5922, 0.56", "141.16, 62.1187, 30.0413, 0.28", "142.016, 62.1551, 29.8738, 0.56", "144.965, 62.1585, 29.4365, 0.28", "147.167, 62.128, 29.2408, 1.11", "158.171, 63.1081, 28.5454, 1.11", "169.205, 62.7828, 29.4847, 1.11", "179.948, 60.6153, 31.0564, 1.11", "190.754, 59.7272, 33.3264, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "78.2075, 46.1503, 26.2776, 0.56", "80.0804, 47.4552, 27.4276, 0.56", "80.9265, 48.036, 28.0274, 0.56", "82.2419, 48.8785, 28.9644, 0.56", "85.7159, 51.0285, 31.3839, 0.56", "86.2767, 51.3728, 31.7631, 0.56", "90.2025, 53.6704, 34.2486, 0.56", "91.6805, 54.4609, 35.1011, 0.28", "92.7281, 55.0058, 35.6344, 0.56", "93.6307, 55.4651, 35.9786, 0.28", "94.6659, 56.0279, 36.2045, 0.56", "97.2058, 57.5619, 36.4514, 0.28", "99.6883, 59.1411, 36.3193, 0.28", "100.634, 59.8869, 36.1548, 0.56", "102.758, 61.8316, 35.8374, 0.28", "103.388, 62.44, 35.7279, 0.56", "105.21, 64.3593, 35.3413, 0.28", "105.502, 64.7242, 35.2606, 0.56", "108.493, 68.9823, 34.4216, 0.28", "110.255, 71.7561, 33.9388, 1.94", "117.062, 76.5464, 36.1101, 1.94", "124.728, 80.437, 36.8479, 1.94", "131.87, 85.1248, 37.9033, 1.94", "138.784, 89.3727, 40.7943, 1.94", "146.106, 91.7452, 44.7413, 1.94", "154.52, 92.7143, 46.5721, 1.94" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "78.9161, 41.9326, 38.4141, 0.56", "83.0361, 42.3605, 40.1175, 0.56", "86.4902, 42.7193, 41.5456, 0.56", "88.8729, 42.9668, 42.5307, 0.56", "92.8748, 43.3825, 44.1853, 0.56", "97.2951, 43.8417, 46.0129, 0.83", "109.128, 47.2746, 50.7902, 0.83", "120.52, 52.6632, 54.656, 0.83", "131.413, 59.3335, 57.7832, 0.83", "142.391, 66.5101, 58.3634, 0.83", "153.656, 73.1613, 59.6529, 0.83", "164.025, 81.1697, 59.6785, 0.83", "174.645, 88.7813, 58.6108, 0.83", "185.759, 95.6949, 59.7375, 0.83", "195.913, 103.631, 62.1605, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "78.9161, 41.9326, 38.4141, 0.83", "78.4534, 40.6707, 38.7426, 0.83", "77.8435, 39.0077, 39.1756, 0.83", "76.2396, 30.1583, 41.2753, 0.83", "74.3633, 21.1688, 42.2404, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-20.0873, -265.719, -14.3594, 0.56", "-20.6344, -268.923, -13.7781, 0.56", "-20.7738, -270.381, -13.5968, 0.83", "-21.2745, -275.007, -12.9792, 0.56", "-21.683, -278.479, -12.6476, 0.83", "-22.0092, -280.981, -12.4662, 1.94", "-22.3205, -283.427, -12.323, 2.22", "-22.6418, -287.136, -12.0777, 0.83", "-22.8336, -290.547, -11.7295, 0.83", "-22.8714, -293.232, -11.3934, 0.83", "-22.9113, -294.431, -11.1167, 0.56", "-23.0023, -295.897, -10.6249, 0.56", "-23.1763, -298.306, -9.5909, 1.11", "-23.316, -301.293, -7.85207, 0.56", "-23.2569, -302.196, -7.22067, 0.56", "-23.0827, -304.083, -5.5576, 0.56", "-22.952, -305.542, -4.19702, 1.39" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-20.0873, -265.719, -14.3594, 0.56", "-18.9476, -268.484, -17.6308, 0.56", "-18.2582, -271.603, -21.3887, 0.56", "-18.009, -273.341, -23.3861, 0.56", "-17.8515, -274.603, -24.7526, 0.28", "-17.7446, -275.633, -25.8656, 0.28", "-17.66, -277.189, -27.5239, 1.11", "-17.8033, -279.231, -29.6014, 0.28", "-17.9879, -280.484, -30.8648, 0.28", "-18.078, -281.384, -31.9392, 2.22", "-18.1788, -283.247, -34.8953, 0.28", "-18.2351, -283.927, -36.6326, 0.28", "-18.2245, -284.149, -37.7245, 0.28", "-18.1105, -284.145, -39.6638, 0.83", "-17.9491, -283.273, -45.2183, 0.28", "-17.9211, -282.907, -46.6863, 1.67", "-17.8429, -282.153, -48.8928, 0.28", "-17.8101, -281.856, -49.6822, 0.83", "-17.7394, -280.944, -52.0047, 0.28", "-17.6791, -280.183, -53.9759, 1.67", "-17.51, -279.047, -56.793, 0.56", "-17.3749, -278.097, -59.2096, 0.28", "-17.3607, -277.99, -59.4881, 0.83", "-17.1963, -276.158, -64.2596, 0.28", "-17.1043, -275.348, -66.3632, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-0.890562, 79.6463, -27.9298, 0.56", "-5.11488, 82.0517, -25.4995, 0.56", "-6.57809, 83.0793, -24.7762, 1.39", "-11.174, 87.2051, -22.7508, 0.56", "-12.2845, 88.4552, -22.2988, 0.28", "-13.7876, 90.6198, -21.5886, 0.28", "-15.7829, 93.852, -20.5778, 0.56", "-17.114, 96.662, -19.8416, 1.11", "-18.4793, 100.126, -19.106, 0.28", "-19.4603, 102.966, -18.6787, 1.67", "-21.2804, 108.64, -17.6171, 0.28", "-21.4994, 109.359, -17.4709, 0.28", "-22.2058, 111.487, -16.913, 0.83", "-23.1647, 113.765, -16.1922, 0.28", "-23.8152, 114.893, -15.8001, 0.28", "-24.9764, 116.433, -15.2065, 0.83", "-26.9988, 118.491, -14.5129, 0.28", "-29.2607, 120.534, -13.5702, 1.11", "-31.0981, 121.466, -12.9319, 0.56", "-32.6395, 121.883, -12.4333, 0.28", "-34.4824, 122.259, -11.8498, 0.28", "-36.7848, 122.544, -11.1648, 0.28", "-40.1365, 122.636, -10.1201, 0.56", "-47.8352, 122.277, -8.10104, 0.28", "-49.6719, 122.086, -7.58585, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.890562, 79.6463, -27.9298, 0.83", "-0.482882, 81.9416, -27.9291, 0.83", "0.117258, 84.7499, -28.2825, 0.83", "1.36747, 90.324, -29.29, 0.56", "2.52718, 95.6323, -30.6446, 0.56", "3.11856, 98.3543, -31.455, 0.28", "3.74372, 101.293, -32.384, 1.67", "5.42249, 108.45, -35.2009, 0.28", "5.58509, 109.095, -35.5001, 0.56", "6.29963, 112.041, -37.0731, 0.28", "6.39823, 112.669, -37.3993, 0.83", "6.60358, 114.476, -38.159, 0.28", "6.70674, 115.8, -38.7532, 0.83", "6.82448, 119.072, -40.0081, 0.28", "6.82028, 121.697, -41.1932, 1.94", "6.68183, 125.867, -43.1602, 0.28", "6.42346, 127.95, -44.4212, 0.83", "5.64511, 132.365, -47.4412, 0.28", "5.44715, 133.247, -48.1789, 0.83", "4.52186, 136.725, -51.5501, 0.28", "4.21049, 137.92, -52.782, 1.11", "2.78364, 143.983, -58.7787, 0.28", "2.42736, 145.622, -60.353, 1.39", "1.30178, 152.049, -65.7085, 0.28", "1.23591, 152.562, -66.0934, 0.56", "0.944998, 156.9, -68.8045, 0.28", "0.880905, 160.702, -70.8728, 1.39", "1.05814, 164.044, -72.0163, 1.11", "1.28199, 167.873, -72.8794, 0.28", "1.33035, 168.821, -72.9866, 0.56", "1.41746, 173.241, -73.5868, 0.28", "1.42258, 174.244, -73.7198, 0.83", "1.36569, 179.717, -74.673, 0.28", "1.35096, 181.081, -74.8538, 1.39", "1.22057, 185.596, -75.5765, 0.28", "1.11971, 187.626, -75.8937, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-27.7487, 128.43, 25.857, 1.94", "-29.256, 130.282, 27.1242, 1.94", "-31.0734, 132.614, 28.7442, 0.28", "-31.7302, 133.647, 29.1489, 0.83", "-34.2327, 138.251, 30.4357, 0.28", "-34.7321, 139.373, 30.5182, 1.11", "-35.5616, 141.443, 30.4539, 0.28", "-36.0707, 142.912, 30.3876, 1.67", "-37.6636, 147.757, 29.9634, 0.28", "-37.9646, 148.908, 29.668, 0.83", "-38.8145, 153.153, 27.7171, 0.28", "-38.905, 153.818, 27.3705, 0.56", "-43.4536, 165.226, 26.6702, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-27.7487, 128.43, 25.857, 0.28", "-27.7534, 132.229, 26.9501, 0.28", "-27.754, 132.744, 27.0983, 0.83", "-27.759, 136.833, 28.275, 0.28", "-27.7593, 137.088, 28.3484, 0.56", "-27.7625, 139.655, 29.0871, 0.28", "-27.766, 142.525, 29.9129, 1.11", "-28.7795, 151.22, 34.0743, 1.11", "-31.2113, 158.49, 40.0984, 1.11", "-33.4866, 166.093, 45.7398, 1.11", "-35.2304, 173.84, 51.3679, 1.11", "-37.6814, 181.751, 56.4592, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "103.733, 109.043, 76.5283, 0.28", "109.907, 113.492, 80.1605, 0.28", "116.897, 117.238, 83.0642, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "103.733, 109.043, 76.5283, 0.28", "110.258, 113.811, 79.8819, 0.28", "117.405, 117.31, 83.5928, 0.28", "124.545, 119.709, 88.1466, 0.28", "131.27, 121.677, 93.4883, 0.28", "138.134, 121.945, 99.0184, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-22.952, -305.542, -4.19702, 0.56", "-24.256, -305.152, -4.57411, 0.56", "-26.1034, -304.598, -5.10833, 1.11", "-27.72, -304.114, -5.57579, 1.11" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-22.952, -305.542, -4.19702, 1.39", "-23.3441, -306.201, -3.45917, 1.39", "-24.4397, -308.042, -1.3973, 1.39" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "1.11971, 187.626, -75.8937, 0.28", "1.81092, 191.822, -74.6468, 0.28", "1.85787, 192.107, -74.562, 0.56", "2.28624, 194.708, -73.7893, 0.28", "2.43177, 195.592, -73.5268, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "1.11971, 187.626, -75.8937, 0.28", "-0.69525, 187.651, -76.5802, 0.28", "-1.0688, 187.656, -76.7215, 0.56", "-3.52502, 187.689, -77.6506, 0.28", "-5.27698, 187.713, -78.3133, 1.11" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-24.4397, -308.042, -1.3973, 0.56", "-27.2634, -311.295, 0.0317883, 0.56", "-29.3323, -313.476, 0.61469, 0.56", "-31.6938, -316.018, 0.851424, 0.56", "-33.0625, -317.576, 0.855424, 0.56", "-35.0858, -319.839, 0.956339, 0.56", "-37.8649, -323.096, 1.34208, 0.56", "-39.7196, -325.234, 1.58031, 0.56", "-41.733, -327.669, 2.07807, 0.56", "-42.5605, -328.908, 2.41395, 0.56", "-44.9731, -332.919, 3.8025, 0.56", "-46.3034, -335.386, 4.88097, 0.56", "-47.4058, -337.786, 6.35282, 0.56", "-48.458, -340.113, 8.08045, 0.83", "-49.3184, -341.977, 9.71928, 1.39" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-24.4397, -308.042, -1.3973, 0.56", "-22.9577, -312.375, -0.845198, 0.56", "-20.528, -319.026, -0.363522, 0.56", "-19.68, -321.42, -0.270833, 0.56", "-19.15, -323.068, -0.248113, 0.56", "-18.1459, -326.37, -0.242541, 0.83", "-17.0277, -330.149, -0.374526, 0.56", "-16.3526, -332.865, -0.676946, 0.56", "-16.0128, -334.539, -0.985785, 1.11", "-15.7548, -336.3, -1.37143, 0.28", "-15.4787, -338.66, -1.97014, 0.28", "-15.2713, -340.956, -2.65076, 1.67", "-15.2684, -342.937, -3.29011, 2.5", "-15.3188, -348.261, -4.67739, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-49.3184, -341.977, 9.71928, 0.56", "-52.2735, -345.674, 9.52792, 0.56", "-54.2982, -348.426, 9.63061, 0.56", "-54.7581, -349.192, 9.63178, 0.56", "-56.4267, -352.43, 9.499, 0.56", "-57.4399, -354.74, 9.39123, 0.56", "-58.1182, -356.286, 9.31909, 0.56", "-58.902, -358.642, 9.34112, 0.56", "-59.9518, -362.469, 9.33537, 0.56", "-60.6251, -365.454, 9.19679, 0.56", "-60.851, -367.318, 8.93449, 0.56", "-63.0982, -377.206, 8.88282, 0.56" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-49.3184, -341.977, 9.71928, 0.28", "-49.8692, -344.143, 9.21022, 0.28", "-50.2738, -346.028, 8.64916, 0.28", "-50.9404, -348.704, 7.71325, 0.28", "-51.3564, -350.19, 7.15481, 0.28", "-51.9485, -351.815, 6.45138, 0.28", "-53.4137, -355.209, 4.77641, 0.28", "-53.8492, -356.1, 4.17513, 0.28", "-54.5587, -357.586, 3.06063, 0.28", "-55.0313, -358.63, 2.25733, 0.28", "-56.0862, -360.943, 0.407693, 0.56", "-56.7487, -362.304, -0.692622, 0.56", "-58.3166, -365.278, -2.93607, 0.28", "-59.3943, -367.58, -4.70239, 0.28", "-59.8299, -368.901, -5.66283, 0.83", "-62.4317, -378.024, -8.94712, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-15.3188, -348.261, -4.67739, 0.28", "-15.2184, -350.708, -3.76575, 0.28", "-15.1993, -351.438, -3.53589, 0.56", "-15.1438, -352.503, -3.39416, 0.28", "-14.9948, -354.115, -3.28846, 0.28", "-14.8061, -355.369, -3.28185, 0.56", "-14.2832, -358.135, -3.32021, 0.28", "-13.8368, -359.865, -3.4941, 0.83", "-13.0291, -362.839, -3.84826, 0.28", "-12.7307, -363.87, -3.9965, 0.56", "-11.8636, -366.926, -4.58953, 0.28", "-11.5947, -367.778, -4.79776, 0.56", "-10.5773, -370.12, -5.5155, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-15.3188, -348.261, -4.67739, 0.28", "-15.1356, -349.786, -3.24735, 0.28", "-14.9766, -351.039, -1.99785, 0.28", "-14.207, -354.793, 1.97066, 0.28", "-13.7235, -357.152, 4.46379, 0.28", "-13.6473, -357.524, 4.85692, 0.83", "-13.0398, -360.489, 7.98988, 0.28", "-12.9224, -361.299, 8.90269, 0.28", "-12.6985, -362.827, 10.86, 0.28", "-12.3074, -368.936, 17.1716, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_62", "dend_61", "dend_58", "dend_53", "dend_32", "dend_31", "dend_22", "dend_17", "dend_0", "dend_66", "dend_63", "dend_60", "dend_59", "dend_57", "dend_54", "dend_40", "dend_33", "dend_24", "dend_23", "dend_19", "dend_18", "dend_4", "dend_1", "dend_65", "dend_64", "dend_56", "dend_55", "dend_46", "dend_41", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_47", "dend_43", "dend_42", "dend_37", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_52", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_16", "dend_9", "dend_51", "dend_50", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_62", "dend_61", "dend_58", "dend_53", "dend_32", "dend_31", "dend_22", "dend_17", "dend_0", "dend_66", "dend_63", "dend_60", "dend_59", "dend_57", "dend_54", "dend_40", "dend_33", "dend_24", "dend_23", "dend_19", "dend_18", "dend_4", "dend_1", "dend_65", "dend_64", "dend_56", "dend_55", "dend_46", "dend_41", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_20", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_47", "dend_43", "dend_42", "dend_37", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_52", "dend_49", "dend_45", "dend_44", "dend_39", "dend_38", "dend_16", "dend_9", "dend_51", "dend_50", "dend_13", "dend_10", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_53", "dend_53", "dend_53", "dend_53", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_40", "dend_33", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L4_LBC_84318d400f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_62, id: dend_62, parent: soma_0
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_67
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_40, dend_33, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_16, dend_16, dend_16, dend_9, dend_9, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_62(0), soma_0(0.4999995714066505)
    connect dend_61(0), soma_0(0.4999995714066505)
    connect dend_58(0), soma_0(0.4999995714066505)
    connect dend_53(0), soma_0(0.4999995714066505)
    connect dend_32(0), soma_0(0.4999995714066505)
    connect dend_31(0), soma_0(0.4999995714066505)
    connect dend_22(0), soma_0(0.4999995714066505)
    connect dend_17(0), soma_0(0.4999995714066505)
    connect dend_0(0), soma_0(0.4999995714066505)
    connect axon_0(0), soma_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.1095, -11.685, 0.570337, 3.16052 ) }
    soma_0 { pt3dadd( -4.63521, -10.5008, 0.513621, 5.45982 ) }
    soma_0 { pt3dadd( -4.16092, -9.31666, 0.456904, 7.50899 ) }
    soma_0 { pt3dadd( -3.68663, -8.13248, 0.400188, 11.3322 ) }
    soma_0 { pt3dadd( -3.21235, -6.9483, 0.343471, 12.8266 ) }
    soma_0 { pt3dadd( -2.73806, -5.76412, 0.286755, 14.3389 ) }
    soma_0 { pt3dadd( -2.26377, -4.57994, 0.230039, 15.4162 ) }
    soma_0 { pt3dadd( -1.78948, -3.39575, 0.173322, 16.3756 ) }
    soma_0 { pt3dadd( -1.3152, -2.21157, 0.116606, 17.1148 ) }
    soma_0 { pt3dadd( -0.840909, -1.02739, 0.0598891, 17.5087 ) }
    soma_0 { pt3dadd( -0.366622, 0.156787, 0.00317258, 18.1754 ) }
    soma_0 { pt3dadd( 0.107666, 1.34097, -0.0535439, 18.705 ) }
    soma_0 { pt3dadd( 0.581953, 2.52515, -0.11026, 18.3379 ) }
    soma_0 { pt3dadd( 1.05624, 3.70933, -0.166977, 17.6777 ) }
    soma_0 { pt3dadd( 1.53053, 4.89351, -0.223693, 16.2317 ) }
    soma_0 { pt3dadd( 2.00482, 6.07769, -0.28041, 14.5638 ) }
    soma_0 { pt3dadd( 2.4791, 7.26187, -0.337126, 12.887 ) }
    soma_0 { pt3dadd( 2.95339, 8.44605, -0.393843, 11.0587 ) }
    soma_0 { pt3dadd( 3.42768, 9.63023, -0.450559, 9.10164 ) }
    soma_0 { pt3dadd( 3.90197, 10.8144, -0.507276, 6.70215 ) }
    soma_0 { pt3dadd( 4.37625, 11.9986, -0.563992, 4.57645 ) }
    // Section: dend_62, id: dend_62, parent: soma_0 (entry count 21/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 5.68434, 6.45515, -20.3386, 1.67 ) }
    dend_62 { pt3dadd( 6.87085, 9.57235, -22.3863, 1.67 ) }
    dend_62 { pt3dadd( 8.25897, 13.2192, -24.782, 2.22 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 7.73434, 5.10965, -12.2086, 1.11 ) }
    dend_61 { pt3dadd( 8.58801, 4.23845, -13.4723, 1.11 ) }
    dend_61 { pt3dadd( 9.82644, 3.39174, -15.3107, 0.83 ) }
    dend_61 { pt3dadd( 13.2612, 1.81687, -20.1007, 1.39 ) }
    dend_61 { pt3dadd( 14.03, 1.58832, -20.9729, 1.39 ) }
    dend_61 { pt3dadd( 16.1653, 1.08147, -22.8806, 0.56 ) }
    dend_61 { pt3dadd( 18.9742, 0.420672, -24.8161, 1.11 ) }
    dend_61 { pt3dadd( 21.387, -0.0877092, -25.9245, 1.39 ) }
    dend_61 { pt3dadd( 22.6403, -0.321839, -26.3472, 0.83 ) }
    dend_61 { pt3dadd( 26.0758, -0.945135, -27.1756, 1.11 ) }
    dend_61 { pt3dadd( 28.7185, -1.39622, -27.9306, 0.56 ) }
    dend_61 { pt3dadd( 31.3643, -1.83435, -28.7578, 1.11 ) }
    dend_61 { pt3dadd( 35.1036, -2.54447, -30.1195, 0.83 ) }
    dend_61 { pt3dadd( 37.8168, -2.9994, -31.4401, 0.56 ) }
    dend_61 { pt3dadd( 40.2062, -3.29366, -32.9974, 1.11 ) }
    dend_61 { pt3dadd( 42.8151, -3.33733, -35.3723, 0.56 ) }
    dend_61 { pt3dadd( 43.7069, -3.24682, -36.3125, 0.28 ) }
    dend_61 { pt3dadd( 45.0532, -2.99637, -37.9619, 0.83 ) }
    dend_61 { pt3dadd( 46.774, -2.569, -40.145, 0.83 ) }
    dend_61 { pt3dadd( 47.5327, -2.42753, -41.0344, 0.83 ) }
    dend_61 { pt3dadd( 49.6328, -2.21519, -43.0751, 0.56 ) }
    dend_61 { pt3dadd( 51.4871, -2.17352, -44.7562, 1.11 ) }
    dend_61 { pt3dadd( 54.0354, -2.19815, -47.2194, 1.11 ) }
    dend_61 { pt3dadd( 55.1787, -2.23227, -48.3221, 0.28 ) }
    dend_61 { pt3dadd( 57.6372, -2.37864, -50.7532, 0.83 ) }
    dend_61 { pt3dadd( 63.0053, -2.78571, -55.9398, 0.28 ) }
    dend_61 { pt3dadd( 66.4162, -3.12388, -59.1667, 1.94 ) }
    dend_61 { pt3dadd( 71.2992, -3.69378, -63.692, 0.28 ) }
    dend_61 { pt3dadd( 72.7264, -3.8508, -64.971, 0.56 ) }
    dend_61 { pt3dadd( 76.3326, -4.29011, -68.2926, 0.28 ) }
    dend_61 { pt3dadd( 77.9807, -4.50543, -70.0698, 0.83 ) }
    dend_61 { pt3dadd( 81.3363, -5.03923, -74.068, 0.28 ) }
    dend_61 { pt3dadd( 82.5184, -5.2581, -75.5601, 1.39 ) }
    dend_61 { pt3dadd( 84.6519, -5.67654, -78.4216, 0.28 ) }
    dend_61 { pt3dadd( 86.0472, -5.93011, -80.4483, 1.39 ) }
    dend_61 { pt3dadd( 93.0323, -7.07225, -91.1742, 0.28 ) }
    dend_61 { pt3dadd( 94.0951, -7.25931, -93.0957, 1.39 ) }
    dend_61 { pt3dadd( 97.5278, -7.96209, -99.8997, 0.28 ) }
    dend_61 { pt3dadd( 99.0867, -8.32528, -103.253, 1.11 ) }
    dend_61 { pt3dadd( 100.516, -8.73298, -106.598, 0.28 ) }
    dend_61 { pt3dadd( 100.724, -8.8031, -107.137, 1.11 ) }
    dend_61 { pt3dadd( 104.439, -10.8505, -119.64, 0.28 ) }
    dend_61 { pt3dadd( 104.735, -11.0786, -120.908, 0.28 ) }
    dend_61 { pt3dadd( 105.061, -11.4993, -122.702, 0.83 ) }
    dend_61 { pt3dadd( 105.579, -12.4661, -126.043, 0.28 ) }
    dend_61 { pt3dadd( 105.878, -13.3171, -128.263, 1.11 ) }
    dend_61 { pt3dadd( 107.213, -17.7806, -137.962, 0.28 ) }
    dend_61 { pt3dadd( 107.332, -18.188, -138.68, 1.11 ) }
    dend_61 { pt3dadd( 108.252, -21.0363, -143.411, 0.28 ) }
    dend_61 { pt3dadd( 109.132, -23.2945, -146.877, 0.83 ) }
    dend_61 { pt3dadd( 110.842, -27.2399, -152.419, 0.28 ) }
    dend_61 { pt3dadd( 111.04, -27.6738, -152.985, 0.83 ) }
    dend_61 { pt3dadd( 112.873, -31.4492, -157.331, 0.28 ) }
    dend_61 { pt3dadd( 113.168, -32.029, -158.007, 1.11 ) }
    dend_61 { pt3dadd( 115.4, -35.9966, -162.619, 0.28 ) }
    dend_61 { pt3dadd( 115.705, -36.469, -163.156, 0.83 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -8.92566, -4.3186, -8.61862, 1.39 ) }
    dend_58 { pt3dadd( -9.73148, -4.36796, -9.03119, 1.39 ) }
    dend_58 { pt3dadd( -11.3923, -4.37429, -9.74479, 1.39 ) }
    dend_58 { pt3dadd( -12.7017, -4.31831, -10.1974, 1.39 ) }
    dend_58 { pt3dadd( -14.8207, -4.12925, -10.82, 1.11 ) }
    dend_58 { pt3dadd( -16.3076, -3.99659, -11.2569, 1.11 ) }
    dend_58 { pt3dadd( -17.6192, -3.87957, -11.6423, 1.11 ) }
    dend_58 { pt3dadd( -19.0112, -3.68649, -11.9728, 0.83 ) }
    dend_58 { pt3dadd( -20.0293, -3.46647, -12.0755, 0.83 ) }
    dend_58 { pt3dadd( -20.732, -3.2807, -12.0572, 1.11 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -9.85566, -1.42285, -2.22863, 1.67 ) }
    dend_53 { pt3dadd( -11.2216, -1.28823, -1.89851, 1.67 ) }
    dend_53 { pt3dadd( -14.0035, -1.01405, -1.22619, 1.67 ) }
    dend_53 { pt3dadd( -16.5427, -0.763775, -0.612496, 1.94 ) }
    dend_53 { pt3dadd( -19.036, -0.518037, -0.00992581, 1.67 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 95/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.56434, 12.2076, -4.92863, 3.89 ) }
    dend_32 { pt3dadd( 3.56434, 14.6509, -4.92863, 3.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 97/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 7.73434, 5.10965, -12.2086, 1.11 ) }
    dend_31 { pt3dadd( 8.45139, 4.56688, -12.9368, 1.11 ) }
    dend_31 { pt3dadd( 9.44539, 4.04839, -14.0263, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_31 { pt3dadd( 12.0995, 3.12905, -16.9015, 1.39 ) }
    dend_31 { pt3dadd( 12.6691, 3.01591, -17.4233, 1.39 ) }
    dend_31 { pt3dadd( 14.2094, 2.81675, -18.545, 0.56 ) }
    dend_31 { pt3dadd( 16.2041, 2.59486, -19.6459, 1.11 ) }
    dend_31 { pt3dadd( 17.8814, 2.47749, -20.2336, 1.39 ) }
    dend_31 { pt3dadd( 18.7412, 2.44552, -20.441, 0.83 ) }
    dend_31 { pt3dadd( 21.0781, 2.39068, -20.7949, 1.11 ) }
    dend_31 { pt3dadd( 22.879, 2.35938, -21.146, 0.56 ) }
    dend_31 { pt3dadd( 24.6842, 2.33223, -21.5452, 1.11 ) }
    dend_31 { pt3dadd( 27.256, 2.22303, -22.2288, 0.83 ) }
    dend_31 { pt3dadd( 29.133, 2.16171, -22.9465, 0.56 ) }
    dend_31 { pt3dadd( 30.7953, 2.15146, -23.8438, 1.11 ) }
    dend_31 { pt3dadd( 32.6154, 2.27683, -25.2844, 0.56 ) }
    dend_31 { pt3dadd( 33.2326, 2.37961, -25.8682, 0.28 ) }
    dend_31 { pt3dadd( 34.164, 2.59371, -26.9082, 0.83 ) }
    dend_31 { pt3dadd( 35.3466, 2.93187, -28.294, 0.83 ) }
    dend_31 { pt3dadd( 35.8694, 3.05527, -28.8538, 0.83 ) }
    dend_31 { pt3dadd( 37.3138, 3.30778, -30.1154, 0.56 ) }
    dend_31 { pt3dadd( 38.5989, 3.44423, -31.1401, 1.11 ) }
    dend_31 { pt3dadd( 40.3823, 3.56927, -32.6422, 1.11 ) }
    dend_31 { pt3dadd( 41.1849, 3.61062, -33.3129, 0.28 ) }
    dend_31 { pt3dadd( 42.9221, 3.64865, -34.7891, 0.83 ) }
    dend_31 { pt3dadd( 46.7184, 3.68294, -37.9265, 0.28 ) }
    dend_31 { pt3dadd( 49.1358, 3.65773, -39.8695, 1.94 ) }
    dend_31 { pt3dadd( 52.601, 3.57224, -42.5833, 0.28 ) }
    dend_31 { pt3dadd( 53.6105, 3.55619, -43.3486, 0.56 ) }
    dend_31 { pt3dadd( 56.1706, 3.48244, -45.3381, 0.28 ) }
    dend_31 { pt3dadd( 57.3561, 3.42298, -46.4157, 0.83 ) }
    dend_31 { pt3dadd( 59.8007, 3.21637, -48.8512, 0.28 ) }
    dend_31 { pt3dadd( 60.6698, 3.1184, -49.7616, 1.39 ) }
    dend_31 { pt3dadd( 62.2499, 2.91583, -51.5132, 0.28 ) }
    dend_31 { pt3dadd( 63.2894, 2.78652, -52.7617, 1.39 ) }
    dend_31 { pt3dadd( 68.51, 2.1846, -59.3998, 0.28 ) }
    dend_31 { pt3dadd( 69.3212, 2.06615, -60.5982, 1.39 ) }
    dend_31 { pt3dadd( 71.9845, 1.5822, -64.8523, 0.28 ) }
    dend_31 { pt3dadd( 73.2129, 1.31739, -66.9529, 1.11 ) }
    dend_31 { pt3dadd( 74.3618, 1.00925, -69.0504, 0.28 ) }
    dend_31 { pt3dadd( 74.5333, 0.954188, -69.389, 1.11 ) }
    dend_31 { pt3dadd( 77.833, -0.724825, -77.2603, 0.28 ) }
    dend_31 { pt3dadd( 78.1179, -0.917725, -78.0608, 0.28 ) }
    dend_31 { pt3dadd( 78.4719, -1.26452, -79.1894, 0.83 ) }
    dend_31 { pt3dadd( 79.093, -2.03936, -81.2825, 0.28 ) }
    dend_31 { pt3dadd( 79.5002, -2.69401, -82.6606, 1.11 ) }
    dend_31 { pt3dadd( 81.3795, -6.03212, -88.6251, 0.28 ) }
    dend_31 { pt3dadd( 81.5402, -6.32654, -89.0602, 1.11 ) }
    dend_31 { pt3dadd( 82.7057, -8.35668, -91.9106, 0.28 ) }
    dend_31 { pt3dadd( 83.7118, -9.93077, -93.9783, 0.83 ) }
    dend_31 { pt3dadd( 85.5547, -12.6282, -97.2477, 0.28 ) }
    dend_31 { pt3dadd( 85.761, -12.921, -97.5782, 0.83 ) }
    dend_31 { pt3dadd( 87.6005, -15.4188, -100.073, 0.28 ) }
    dend_31 { pt3dadd( 87.892, -15.8014, -100.461, 1.11 ) }
    dend_31 { pt3dadd( 90.0251, -18.3937, -103.099, 0.28 ) }
    dend_31 { pt3dadd( 90.3039, -18.697, -103.404, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 53/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 9.05434, 0.478401, 1.01137, 1.94 ) }
    dend_22 { pt3dadd( 11.0705, 0.348723, 2.02754, 1.94 ) }
    dend_22 { pt3dadd( 14.906, 0.552589, 3.89125, 1.39 ) }
    dend_22 { pt3dadd( 20.2919, 1.75785, 5.75977, 1.39 ) }
    dend_22 { pt3dadd( 23.2867, 2.90891, 6.41144, 1.67 ) }
    dend_22 { pt3dadd( 25.3279, 3.9813, 6.6551, 1.67 ) }
    dend_22 { pt3dadd( 28.8862, 6.22111, 7.12387, 1.11 ) }
    dend_22 { pt3dadd( 32.252, 8.93888, 7.38086, 1.11 ) }
    dend_22 { pt3dadd( 39.0107, 15.5614, 7.90167, 1.11 ) }
    dend_22 { pt3dadd( 40.2375, 16.9201, 7.97141, 1.11 ) }
    dend_22 { pt3dadd( 42.3304, 19.2959, 8.17513, 1.39 ) }
    dend_22 { pt3dadd( 46.3793, 23.8387, 8.82446, 1.11 ) }
    dend_22 { pt3dadd( 48.7564, 26.3362, 9.30359, 1.11 ) }
    dend_22 { pt3dadd( 52.0748, 29.3718, 10.3173, 1.11 ) }
    dend_22 { pt3dadd( 55.6998, 32.3948, 11.7496, 1.11 ) }
    dend_22 { pt3dadd( 59.45, 35.5179, 13.2105, 1.11 ) }
    dend_22 { pt3dadd( 62.1328, 37.7382, 14.1823, 1.11 ) }
    dend_22 { pt3dadd( 64.5476, 39.7339, 14.8774, 1.11 ) }
    dend_22 { pt3dadd( 68.1842, 42.7758, 15.9781, 1.94 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.21434, 2.75014, -15.0986, 1.39 ) }
    dend_17 { pt3dadd( 13.0727, 1.53566, -14.6411, 1.39 ) }
    dend_17 { pt3dadd( 23.1554, -0.984755, -13.6916, 1.11 ) }
    dend_17 { pt3dadd( 28.1233, -2.22662, -13.2237, 1.11 ) }
    dend_17 { pt3dadd( 31.1788, -2.99043, -12.936, 1.11 ) }
    dend_17 { pt3dadd( 34.1785, -3.74028, -12.6535, 1.11 ) }
    dend_17 { pt3dadd( 36.0571, -4.20989, -12.4766, 1.39 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 79/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.86566, -10.4514, 5.67137, 3.61 ) }
    dend_0 { pt3dadd( -2.31988, -12.2356, 5.70761, 3.05 ) }
    dend_0 { pt3dadd( -3.50008, -16.8715, 5.80175, 3.05 ) }
    dend_0 { pt3dadd( -4.23825, -19.7711, 5.86064, 2.5 ) }
    dend_0 { pt3dadd( -5.1751, -23.4511, 5.93537, 2.22 ) }
    dend_0 { pt3dadd( -5.48909, -24.6844, 5.96042, 2.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 85/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.37625, 11.9986, -0.563992, 1.67 ) }
    axon_0 { pt3dadd( 9.95335, 25.9233, -0.563992, 1.67 ) }
    axon_0 { pt3dadd( 15.5304, 39.8479, -0.563992, 1.67 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 88/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 8.25897, 13.2192, -24.782, 1.39 ) }
    dend_66 { pt3dadd( 9.01749, 12.7123, -26.2556, 1.39 ) }
    dend_66 { pt3dadd( 9.28587, 12.6143, -26.7696, 1.39 ) }
    dend_66 { pt3dadd( 11.4278, 12.3956, -32.1997, 0.83 ) }
    dend_66 { pt3dadd( 12.7123, 12.435, -36.4339, 1.39 ) }
    dend_66 { pt3dadd( 13.8606, 12.5097, -40.6097, 0.56 ) }
    dend_66 { pt3dadd( 14.188, 12.5512, -41.8389, 0.56 ) }
    dend_66 { pt3dadd( 15.4735, 12.7735, -47.0571, 1.67 ) }
    dend_66 { pt3dadd( 17.5033, 13.3435, -55.6431, 1.67 ) }
    dend_66 { pt3dadd( 18.7759, 13.8645, -61.0976, 1.67 ) }
    dend_66 { pt3dadd( 20.2846, 14.4873, -67.4925, 0.83 ) }
    dend_66 { pt3dadd( 20.7538, 14.5937, -69.3012, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_66 { pt3dadd( 22.176, 14.8545, -74.5184, 0.83 ) }
    dend_66 { pt3dadd( 23.1789, 15.035, -77.8594, 0.28 ) }
    dend_66 { pt3dadd( 24.1508, 15.1303, -80.4455, 1.11 ) }
    dend_66 { pt3dadd( 25.1094, 15.2058, -82.5191, 1.39 ) }
    dend_66 { pt3dadd( 26.8842, 15.3201, -85.8284, 0.28 ) }
    dend_66 { pt3dadd( 26.8842, 15.3201, -85.8284, 0.56 ) }
    dend_66 { pt3dadd( 28.3117, 15.4938, -88.1767, 0.28 ) }
    dend_66 { pt3dadd( 29.3852, 15.626, -89.8921, 0.83 ) }
    dend_66 { pt3dadd( 32.3756, 16.0131, -94.649, 0.56 ) }
    dend_66 { pt3dadd( 33.3368, 16.1322, -96.1909, 1.94 ) }
    dend_66 { pt3dadd( 42.3488, 17.1139, -110.637, 0.28 ) }
    dend_66 { pt3dadd( 42.6197, 17.138, -111.064, 0.83 ) }
    dend_66 { pt3dadd( 44.6488, 17.2327, -114.414, 0.56 ) }
    dend_66 { pt3dadd( 45.6772, 17.2273, -116.154, 0.83 ) }
    dend_66 { pt3dadd( 48.0978, 16.9815, -120.454, 0.28 ) }
    dend_66 { pt3dadd( 48.597, 16.8966, -121.361, 1.39 ) }
    dend_66 { pt3dadd( 49.0805, 16.7643, -122.283, 1.39 ) }
    dend_66 { pt3dadd( 54.8197, 15.2216, -133.585, 0.28 ) }
    dend_66 { pt3dadd( 55.377, 15.0784, -134.752, 1.11 ) }
    dend_66 { pt3dadd( 58.0242, 14.4732, -140.291, 0.28 ) }
    dend_66 { pt3dadd( 58.4765, 14.3806, -141.253, 0.83 ) }
    dend_66 { pt3dadd( 60.9297, 13.9218, -146.592, 0.28 ) }
    dend_66 { pt3dadd( 61.3923, 13.8362, -147.616, 1.11 ) }
    dend_66 { pt3dadd( 65.6335, 13.1875, -156.551, 0.28 ) }
    dend_66 { pt3dadd( 66.653, 13.0724, -158.813, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 25/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 8.25897, 13.2192, -24.782, 0.56 ) }
    dend_63 { pt3dadd( 7.34067, 16.0265, -24.2888, 0.56 ) }
    dend_63 { pt3dadd( 6.67917, 16.9251, -24.6735, 0.56 ) }
    dend_63 { pt3dadd( 5.73536, 18.1039, -25.4426, 0.83 ) }
    dend_63 { pt3dadd( 5.09286, 18.8665, -25.9615, 0.56 ) }
    dend_63 { pt3dadd( 3.92925, 20.1595, -26.8328, 0.83 ) }
    dend_63 { pt3dadd( 1.86838, 22.3324, -28.3296, 2.22 ) }
    dend_63 { pt3dadd( -0.380883, 24.4076, -29.9536, 0.56 ) }
    dend_63 { pt3dadd( -2.14203, 25.9205, -31.1329, 0.56 ) }
    dend_63 { pt3dadd( -3.27845, 26.8519, -31.8468, 0.56 ) }
    dend_63 { pt3dadd( -4.40725, 27.8225, -32.5392, 1.67 ) }
    dend_63 { pt3dadd( -6.68505, 29.9615, -33.8659, 0.56 ) }
    dend_63 { pt3dadd( -7.97575, 31.4439, -34.5526, 1.11 ) }
    dend_63 { pt3dadd( -8.87992, 32.7045, -35.0442, 0.28 ) }
    dend_63 { pt3dadd( -9.49951, 33.8012, -35.4599, 0.83 ) }
    dend_63 { pt3dadd( -10.5009, 36.07, -36.1741, 0.28 ) }
    dend_63 { pt3dadd( -11.0195, 37.5421, -36.7719, 1.39 ) }
    dend_63 { pt3dadd( -12.4565, 42.2914, -38.9327, 0.28 ) }
    dend_63 { pt3dadd( -12.8422, 43.7328, -39.6511, 1.39 ) }
    dend_63 { pt3dadd( -13.7052, 47.2164, -41.5253, 0.28 ) }
    dend_63 { pt3dadd( -14.3683, 50.0539, -43.0632, 1.67 ) }
    dend_63 { pt3dadd( -15.9865, 57.1825, -47.1097, 0.28 ) }
    dend_63 { pt3dadd( -16.1882, 58.0657, -47.6138, 0.28 ) }
    dend_63 { pt3dadd( -16.337, 58.7044, -47.9828, 0.56 ) }
    dend_63 { pt3dadd( -16.6054, 60.0101, -48.7662, 0.28 ) }
    dend_63 { pt3dadd( -16.9054, 61.7251, -49.7784, 0.56 ) }
    dend_63 { pt3dadd( -17.1924, 63.8203, -50.9413, 0.28 ) }
    dend_63 { pt3dadd( -17.4135, 66.0722, -51.8307, 1.94 ) }
    dend_63 { pt3dadd( -17.6661, 68.7019, -53.0217, 0.28 ) }
    dend_63 { pt3dadd( -17.9679, 71.2205, -54.3933, 1.39 ) }
    dend_63 { pt3dadd( -18.1232, 72.3061, -55.0164, 0.28 ) }
    dend_63 { pt3dadd( -18.2389, 72.9996, -55.47, 0.56 ) }
    dend_63 { pt3dadd( -18.6133, 75.0504, -56.8839, 0.28 ) }
    dend_63 { pt3dadd( -18.7186, 75.5248, -57.2811, 0.56 ) }
    dend_63 { pt3dadd( -19.2073, 77.2677, -58.7767, 0.28 ) }
    dend_63 { pt3dadd( -19.6405, 78.6392, -59.9326, 1.39 ) }
    dend_63 { pt3dadd( -20.4777, 81.2015, -62.1285, 0.28 ) }
    dend_63 { pt3dadd( -20.9154, 82.6237, -63.4206, 1.67 ) }
    dend_63 { pt3dadd( -21.4245, 84.3111, -64.9968, 0.28 ) }
    dend_63 { pt3dadd( -21.687, 85.331, -66.0296, 1.11 ) }
    dend_63 { pt3dadd( -21.8589, 86.1775, -66.9458, 0.28 ) }
    dend_63 { pt3dadd( -21.9099, 86.4986, -67.282, 0.83 ) }
    dend_63 { pt3dadd( -22.1729, 88.6026, -68.8217, 0.28 ) }
    dend_63 { pt3dadd( -22.1884, 88.8541, -68.9718, 0.56 ) }
    dend_63 { pt3dadd( -22.1655, 90.2922, -69.6433, 0.28 ) }
    dend_63 { pt3dadd( -22.1351, 90.955, -69.961, 0.83 ) }
    dend_63 { pt3dadd( -22.0869, 93.5867, -71.0254, 0.28 ) }
    dend_63 { pt3dadd( -22.2185, 95.4798, -71.3984, 1.39 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 73/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -20.732, -3.2807, -12.0572, 0.56 ) }
    dend_60 { pt3dadd( -23.6122, -3.68531, -12.067, 0.56 ) }
    dend_60 { pt3dadd( -26.134, -3.78796, -12.1224, 0.56 ) }
    dend_60 { pt3dadd( -28.2622, -3.70209, -12.1854, 0.56 ) }
    dend_60 { pt3dadd( -30.9676, -3.38365, -12.2693, 0.56 ) }
    dend_60 { pt3dadd( -34.7024, -2.79801, -12.4771, 0.56 ) }
    dend_60 { pt3dadd( -36.2241, -2.52642, -12.616, 0.28 ) }
    dend_60 { pt3dadd( -37.7352, -2.11632, -12.8637, 0.83 ) }
    dend_60 { pt3dadd( -38.7895, -1.76399, -13.0473, 0.28 ) }
    dend_60 { pt3dadd( -40.022, -1.35289, -13.2863, 0.56 ) }
    dend_60 { pt3dadd( -41.9458, -0.785485, -13.7175, 0.28 ) }
    dend_60 { pt3dadd( -43.5139, -0.480012, -13.9926, 1.67 ) }
    dend_60 { pt3dadd( -44.9174, -0.354038, -14.2474, 1.94 ) }
    dend_60 { pt3dadd( -46.5614, -0.287023, -14.5731, 1.11 ) }
    dend_60 { pt3dadd( -48.5864, -0.259948, -14.9384, 0.56 ) }
    dend_60 { pt3dadd( -50.1033, -0.305994, -15.2263, 0.56 ) }
    dend_60 { pt3dadd( -51.99, -0.402206, -15.564, 0.56 ) }
    dend_60 { pt3dadd( -52.8172, -0.485145, -15.6664, 0.56 ) }
    dend_60 { pt3dadd( -56.0801, -0.958725, -16.0074, 0.28 ) }
    dend_60 { pt3dadd( -57.5887, -1.2475, -16.178, 1.39 ) }
    dend_60 { pt3dadd( -62.0886, -2.19257, -16.6825, 0.56 ) }
    dend_60 { pt3dadd( -63.8879, -2.60143, -16.8794, 1.67 ) }
    dend_60 { pt3dadd( -67.7502, -3.56727, -17.2703, 0.28 ) }
    dend_60 { pt3dadd( -69.8893, -4.18912, -17.3976, 0.83 ) }
    dend_60 { pt3dadd( -72.2841, -5.01275, -17.2371, 0.28 ) }
    dend_60 { pt3dadd( -73.3914, -5.3867, -17.0575, 0.56 ) }
    dend_60 { pt3dadd( -75.7864, -6.16261, -16.4005, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_60 { pt3dadd( -77.695, -6.7876, -15.7072, 0.28 ) }
    dend_60 { pt3dadd( -79.9763, -7.49636, -14.7338, 2.22 ) }
    dend_60 { pt3dadd( -84.6129, -8.91092, -12.5487, 0.28 ) }
    dend_60 { pt3dadd( -86.5325, -9.50517, -11.6952, 0.28 ) }
    dend_60 { pt3dadd( -88.1532, -10.0657, -10.9856, 1.39 ) }
    dend_60 { pt3dadd( -91.3397, -11.2548, -9.61955, 0.28 ) }
    dend_60 { pt3dadd( -92.7385, -11.8356, -9.06584, 0.28 ) }
    dend_60 { pt3dadd( -94.1763, -12.5573, -8.5749, 0.83 ) }
    dend_60 { pt3dadd( -97.0673, -14.34, -7.64042, 0.28 ) }
    dend_60 { pt3dadd( -99.6862, -16.2661, -6.776, 0.28 ) }
    dend_60 { pt3dadd( -100.303, -16.7781, -6.57996, 0.28 ) }
    dend_60 { pt3dadd( -101.26, -17.642, -6.28255, 0.56 ) }
    dend_60 { pt3dadd( -103.887, -20.2804, -5.31097, 0.28 ) }
    dend_60 { pt3dadd( -104.708, -21.1373, -5.0508, 1.11 ) }
    dend_60 { pt3dadd( -106.661, -23.2722, -4.56359, 0.28 ) }
    dend_60 { pt3dadd( -107.563, -24.2307, -4.4534, 0.56 ) }
    dend_60 { pt3dadd( -109.326, -26.0625, -4.3022, 0.28 ) }
    dend_60 { pt3dadd( -110.541, -27.3247, -4.25367, 1.11 ) }
    dend_60 { pt3dadd( -112.895, -29.6768, -4.29764, 0.28 ) }
    dend_60 { pt3dadd( -113.318, -30.0899, -4.31702, 0.83 ) }
    dend_60 { pt3dadd( -115.535, -32.2021, -4.26929, 0.28 ) }
    dend_60 { pt3dadd( -115.921, -32.5566, -4.27927, 0.56 ) }
    dend_60 { pt3dadd( -118.152, -34.511, -4.41317, 0.28 ) }
    dend_60 { pt3dadd( -119.268, -35.4518, -4.47613, 1.11 ) }
    dend_60 { pt3dadd( -122.989, -38.4806, -4.61696, 0.28 ) }
    dend_60 { pt3dadd( -124.948, -39.9826, -4.66428, 1.94 ) }
    dend_60 { pt3dadd( -127.466, -41.7929, -4.74629, 0.28 ) }
    dend_60 { pt3dadd( -128.609, -42.4949, -4.68356, 0.83 ) }
    dend_60 { pt3dadd( -129.787, -43.0623, -4.50906, 0.28 ) }
    dend_60 { pt3dadd( -130.767, -43.3932, -4.28926, 0.56 ) }
    dend_60 { pt3dadd( -133.273, -43.7814, -3.5706, 0.28 ) }
    dend_60 { pt3dadd( -134.174, -43.8418, -3.23807, 0.83 ) }
    dend_60 { pt3dadd( -137.567, -43.8528, -1.6812, 0.28 ) }
    dend_60 { pt3dadd( -137.903, -43.8435, -1.51564, 0.83 ) }
    dend_60 { pt3dadd( -140.195, -43.7309, -0.352601, 0.28 ) }
    dend_60 { pt3dadd( -141.948, -43.6481, 0.451336, 0.83 ) }
    dend_60 { pt3dadd( -145.933, -43.5195, 1.96726, 0.28 ) }
    dend_60 { pt3dadd( -146.348, -43.5096, 2.09504, 0.83 ) }
    dend_60 { pt3dadd( -147.646, -43.464, 2.39378, 0.28 ) }
    dend_60 { pt3dadd( -147.911, -43.452, 2.43794, 0.83 ) }
    dend_60 { pt3dadd( -151.139, -43.2159, 2.7687, 0.28 ) }
    dend_60 { pt3dadd( -152.701, -42.9417, 2.70963, 0.83 ) }
    dend_60 { pt3dadd( -154.935, -42.3418, 2.40975, 0.28 ) }
    dend_60 { pt3dadd( -155.504, -42.1818, 2.32427, 0.83 ) }
    dend_60 { pt3dadd( -158.35, -41.3123, 1.84401, 0.28 ) }
    dend_60 { pt3dadd( -159.594, -40.8841, 1.63115, 0.56 ) }
    dend_60 { pt3dadd( -164.246, -38.9131, 0.821375, 0.28 ) }
    dend_60 { pt3dadd( -165.608, -38.2537, 0.587614, 0.83 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 48/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -20.732, -3.2807, -12.0572, 0.56 ) }
    dend_59 { pt3dadd( -23.1287, -3.86536, -17.8465, 0.56 ) }
    dend_59 { pt3dadd( -25.0014, -3.63584, -20.1765, 0.56 ) }
    dend_59 { pt3dadd( -25.7375, -3.38757, -20.9649, 0.56 ) }
    dend_59 { pt3dadd( -26.3245, -3.04671, -21.8724, 1.39 ) }
    dend_59 { pt3dadd( -27.2027, -2.49503, -23.2648, 1.67 ) }
    dend_59 { pt3dadd( -28.5914, -1.66808, -25.4636, 0.83 ) }
    dend_59 { pt3dadd( -30.1704, -0.627315, -27.8522, 0.28 ) }
    dend_59 { pt3dadd( -31.5773, 0.33481, -30.003, 1.11 ) }
    dend_59 { pt3dadd( -35.8764, 3.39205, -36.7961, 0.28 ) }
    dend_59 { pt3dadd( -36.5687, 3.90639, -37.891, 0.28 ) }
    dend_59 { pt3dadd( -37.8033, 4.81203, -39.9878, 1.67 ) }
    dend_59 { pt3dadd( -39.6013, 6.04339, -42.9688, 0.56 ) }
    dend_59 { pt3dadd( -41.3938, 6.98912, -45.6473, 0.83 ) }
    dend_59 { pt3dadd( -42.3664, 7.37845, -46.9309, 1.39 ) }
    dend_59 { pt3dadd( -43.9506, 7.84616, -48.6248, 0.28 ) }
    dend_59 { pt3dadd( -49.0934, 9.05447, -53.6798, 0.28 ) }
    dend_59 { pt3dadd( -50.6564, 9.18027, -55.0636, 1.39 ) }
    dend_59 { pt3dadd( -55.4908, 9.19262, -59.0513, 0.28 ) }
    dend_59 { pt3dadd( -55.794, 9.17348, -59.2925, 0.56 ) }
    dend_59 { pt3dadd( -58.3375, 8.89557, -61.3921, 0.28 ) }
    dend_59 { pt3dadd( -60.0461, 8.64841, -62.7799, 1.39 ) }
    dend_59 { pt3dadd( -71.9091, 7.12813, -71.6355, 0.28 ) }
    dend_59 { pt3dadd( -72.6179, 7.04603, -72.1904, 0.83 ) }
    dend_59 { pt3dadd( -74.1679, 6.89562, -73.4185, 0.83 ) }
    dend_59 { pt3dadd( -78.7836, 6.49362, -77.1638, 0.28 ) }
    dend_59 { pt3dadd( -79.4415, 6.41098, -77.7227, 0.56 ) }
    dend_59 { pt3dadd( -86.4048, 5.36334, -83.7955, 0.28 ) }
    dend_59 { pt3dadd( -88.4684, 4.94927, -85.6036, 1.11 ) }
    dend_59 { pt3dadd( -93.3045, 3.85448, -89.862, 0.28 ) }
    dend_59 { pt3dadd( -93.7612, 3.7468, -90.2664, 0.83 ) }
    dend_59 { pt3dadd( -104.429, 0.935238, -99.5329, 0.28 ) }
    dend_59 { pt3dadd( -105.753, 0.498627, -100.77, 1.11 ) }
    dend_59 { pt3dadd( -109.614, -1.16096, -104.796, 0.28 ) }
    dend_59 { pt3dadd( -110.769, -1.68584, -106.016, 0.83 ) }
    dend_59 { pt3dadd( -114.186, -3.36357, -109.853, 0.28 ) }
    dend_59 { pt3dadd( -114.698, -3.61573, -110.45, 0.83 ) }
    dend_59 { pt3dadd( -118.028, -5.46374, -114.951, 0.28 ) }
    dend_59 { pt3dadd( -119.677, -6.43412, -117.275, 1.39 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 87/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -19.036, -0.518037, -0.00992581, 1.11 ) }
    dend_57 { pt3dadd( -34.4361, 1.00445, -10.2998, 1.11 ) }
    dend_57 { pt3dadd( -39.5622, 1.97344, -13.0736, 0.83 ) }
    dend_57 { pt3dadd( -45.2438, 2.9721, -15.998, 0.83 ) }
    dend_57 { pt3dadd( -50.0892, 3.79494, -18.344, 0.83 ) }
    dend_57 { pt3dadd( -53.8141, 4.48089, -20.0282, 0.83 ) }
    dend_57 { pt3dadd( -59.1887, 5.63403, -22.4253, 0.83 ) }
    dend_57 { pt3dadd( -68.7357, 7.65394, -25.3838, 0.83 ) }
    dend_57 { pt3dadd( -73.1255, 8.67118, -26.9507, 0.56 ) }
    dend_57 { pt3dadd( -75.9354, 9.31225, -28.0014, 0.56 ) }
    dend_57 { pt3dadd( -79.4343, 10.1792, -29.1491, 1.11 ) }
    dend_57 { pt3dadd( -85.1879, 11.5942, -30.959, 0.56 ) }
    dend_57 { pt3dadd( -90.8949, 12.9503, -32.5816, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_57 { pt3dadd( -97.8088, 14.5906, -34.1657, 0.56 ) }
    dend_57 { pt3dadd( -102.34, 15.9037, -35.0518, 1.94 ) }
    dend_57 { pt3dadd( -108.07, 17.7079, -36.2947, 0.56 ) }
    dend_57 { pt3dadd( -109.489, 18.2326, -36.5366, 0.56 ) }
    dend_57 { pt3dadd( -114.232, 20.2606, -37.2774, 0.56 ) }
    dend_57 { pt3dadd( -118.19, 22.2965, -37.9096, 0.28 ) }
    dend_57 { pt3dadd( -124.573, 25.8582, -38.7455, 2.22 ) }
    dend_57 { pt3dadd( -130.148, 29.1912, -39.4693, 0.56 ) }
    dend_57 { pt3dadd( -137.916, 34.0405, -40.4686, 0.56 ) }
    dend_57 { pt3dadd( -143.091, 37.3067, -41.0472, 0.28 ) }
    dend_57 { pt3dadd( -144.901, 38.4667, -41.2665, 0.28 ) }
    dend_57 { pt3dadd( -147.351, 40.1159, -41.7187, 0.83 ) }
    dend_57 { pt3dadd( -150.529, 42.2752, -42.2776, 0.28 ) }
    dend_57 { pt3dadd( -152.126, 43.3897, -42.7059, 0.56 ) }
    dend_57 { pt3dadd( -154.744, 45.2688, -43.84, 0.28 ) }
    dend_57 { pt3dadd( -158.557, 48.2995, -45.9112, 1.39 ) }
    dend_57 { pt3dadd( -163.526, 52.1558, -48.9595, 0.28 ) }
    dend_57 { pt3dadd( -165.646, 53.8529, -50.3483, 0.56 ) }
    dend_57 { pt3dadd( -169.019, 56.6529, -52.469, 0.28 ) }
    dend_57 { pt3dadd( -169.683, 57.2304, -52.8595, 0.56 ) }
    dend_57 { pt3dadd( -172.892, 60.1856, -54.4351, 0.28 ) }
    dend_57 { pt3dadd( -177.996, 65.1335, -56.161, 0.28 ) }
    dend_57 { pt3dadd( -180.514, 67.7524, -56.6182, 1.67 ) }
    dend_57 { pt3dadd( -184.195, 71.7204, -56.9763, 0.28 ) }
    dend_57 { pt3dadd( -185.541, 73.175, -56.9811, 0.56 ) }
    dend_57 { pt3dadd( -189.428, 77.462, -56.8868, 0.28 ) }
    dend_57 { pt3dadd( -191.724, 80.0312, -56.7166, 1.67 ) }
    dend_57 { pt3dadd( -195.584, 84.4253, -56.6352, 0.28 ) }
    dend_57 { pt3dadd( -196.513, 85.4099, -56.6676, 0.28 ) }
    dend_57 { pt3dadd( -197.288, 86.1441, -56.7861, 0.56 ) }
    dend_57 { pt3dadd( -199.466, 87.775, -57.3049, 0.28 ) }
    dend_57 { pt3dadd( -201.075, 88.6468, -57.9217, 0.83 ) }
    dend_57 { pt3dadd( -204.716, 90.2444, -59.5995, 0.28 ) }
    dend_57 { pt3dadd( -206.704, 91.0242, -60.7544, 0.83 ) }
    dend_57 { pt3dadd( -211.271, 92.8027, -63.5984, 0.28 ) }
    dend_57 { pt3dadd( -214.347, 93.9842, -65.6621, 1.39 ) }
    dend_57 { pt3dadd( -220.015, 96.1455, -69.4669, 0.28 ) }
    dend_57 { pt3dadd( -222.44, 97.0798, -71.0598, 1.67 ) }
    dend_57 { pt3dadd( -228.615, 99.3271, -74.8275, 0.28 ) }
    dend_57 { pt3dadd( -229.738, 99.7129, -75.5107, 0.56 ) }
    dend_57 { pt3dadd( -234.507, 101.435, -78.3779, 0.28 ) }
    dend_57 { pt3dadd( -238.054, 102.812, -80.4542, 1.11 ) }
    dend_57 { pt3dadd( -240.599, 103.834, -81.8255, 0.28 ) }
    dend_57 { pt3dadd( -243.899, 105.103, -83.4992, 0.28 ) }
    dend_57 { pt3dadd( -247.913, 106.626, -85.2532, 0.56 ) }
    dend_57 { pt3dadd( -251.668, 108.05, -86.7455, 0.28 ) }
    dend_57 { pt3dadd( -253.922, 108.976, -87.696, 0.83 ) }
    dend_57 { pt3dadd( -257.206, 110.442, -89.2434, 0.28 ) }
    dend_57 { pt3dadd( -258.122, 110.824, -89.7021, 0.56 ) }
    dend_57 { pt3dadd( -261.009, 111.977, -91.1214, 0.28 ) }
    dend_57 { pt3dadd( -264.343, 113.129, -92.4461, 1.39 ) }
    dend_57 { pt3dadd( -271.92, 115.568, -95.1094, 0.28 ) }
    dend_57 { pt3dadd( -273.755, 116.144, -95.7891, 0.83 ) }
    dend_57 { pt3dadd( -280.25, 118.105, -98.3668, 0.28 ) }
    dend_57 { pt3dadd( -282.052, 118.668, -99.1786, 0.83 ) }
    dend_57 { pt3dadd( -294.058, 122.834, -104.955, 0.28 ) }
    dend_57 { pt3dadd( -296.108, 123.619, -105.967, 0.83 ) }
    dend_57 { pt3dadd( -300.546, 125.53, -108.117, 0.28 ) }
    dend_57 { pt3dadd( -303.885, 127.199, -109.847, 0.83 ) }
    dend_57 { pt3dadd( -307.364, 129.31, -111.794, 0.83 ) }
    dend_57 { pt3dadd( -313.075, 133.145, -115.145, 0.28 ) }
    dend_57 { pt3dadd( -313.828, 133.742, -115.62, 0.56 ) }
    dend_57 { pt3dadd( -317.944, 137.0, -117.691, 0.28 ) }
    dend_57 { pt3dadd( -319.263, 138.027, -118.152, 0.83 ) }
    dend_57 { pt3dadd( -323.088, 140.943, -119.101, 0.28 ) }
    dend_57 { pt3dadd( -327.021, 143.64, -119.814, 0.83 ) }
    dend_57 { pt3dadd( -330.827, 145.93, -120.229, 0.28 ) }
    dend_57 { pt3dadd( -335.76, 148.748, -120.357, 1.11 ) }
    dend_57 { pt3dadd( -339.732, 150.807, -119.936, 0.28 ) }
    dend_57 { pt3dadd( -341.271, 151.575, -119.648, 0.56 ) }
    dend_57 { pt3dadd( -345.407, 153.589, -118.695, 0.28 ) }
    dend_57 { pt3dadd( -349.658, 155.598, -117.786, 0.83 ) }
    dend_57 { pt3dadd( -351.437, 156.404, -117.379, 0.83 ) }
    dend_57 { pt3dadd( -355.72, 158.435, -116.771, 0.28 ) }
    dend_57 { pt3dadd( -356.598, 158.844, -116.578, 0.56 ) }
    dend_57 { pt3dadd( -360.866, 160.942, -115.788, 0.28 ) }
    dend_57 { pt3dadd( -362.678, 162.075, -115.639, 0.56 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 77/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -19.036, -0.518037, -0.00992581, 0.83 ) }
    dend_54 { pt3dadd( -24.2081, 3.91958, 2.99025, 0.83 ) }
    dend_54 { pt3dadd( -26.9098, 6.53456, 5.03133, 0.83 ) }
    dend_54 { pt3dadd( -30.4239, 10.0086, 7.94144, 0.83 ) }
    dend_54 { pt3dadd( -35.4731, 14.991, 12.4213, 0.83 ) }
    dend_54 { pt3dadd( -38.7698, 18.1072, 15.4758, 0.83 ) }
    dend_54 { pt3dadd( -41.2085, 20.1943, 17.7749, 1.39 ) }
    dend_54 { pt3dadd( -45.9596, 24.232, 22.6727, 0.56 ) }
    dend_54 { pt3dadd( -48.5103, 26.256, 25.101, 0.56 ) }
    dend_54 { pt3dadd( -50.6038, 27.5406, 26.6127, 0.83 ) }
    dend_54 { pt3dadd( -53.14, 28.5967, 27.8563, 0.83 ) }
    dend_54 { pt3dadd( -57.5478, 30.1022, 29.031, 0.83 ) }
    dend_54 { pt3dadd( -62.3571, 31.55, 29.7014, 1.11 ) }
    dend_54 { pt3dadd( -69.0514, 33.4661, 29.2024, 0.83 ) }
    dend_54 { pt3dadd( -72.4353, 34.5728, 28.7834, 0.83 ) }
    dend_54 { pt3dadd( -75.8626, 35.9769, 28.1863, 1.11 ) }
    dend_54 { pt3dadd( -78.4865, 37.2852, 27.9144, 0.56 ) }
    dend_54 { pt3dadd( -81.6122, 38.9055, 28.1409, 1.39 ) }
    dend_54 { pt3dadd( -85.3216, 40.6569, 29.3238, 1.11 ) }
    dend_54 { pt3dadd( -87.5108, 41.5032, 30.436, 0.83 ) }
    dend_54 { pt3dadd( -89.9848, 42.265, 31.7702, 0.83 ) }
    dend_54 { pt3dadd( -94.8442, 43.5793, 34.7012, 0.83 ) }
    dend_54 { pt3dadd( -98.9546, 44.7685, 37.3658, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( -100.36, 45.2036, 38.1988, 0.83 ) }
    dend_54 { pt3dadd( -103.044, 46.0623, 39.8703, 0.56 ) }
    dend_54 { pt3dadd( -105.743, 46.9142, 41.4068, 0.83 ) }
    dend_54 { pt3dadd( -108.546, 47.7902, 42.915, 0.83 ) }
    dend_54 { pt3dadd( -110.813, 48.6308, 43.9107, 0.56 ) }
    dend_54 { pt3dadd( -117.057, 51.4456, 46.3963, 0.83 ) }
    dend_54 { pt3dadd( -120.902, 53.2604, 47.8907, 0.56 ) }
    dend_54 { pt3dadd( -122.771, 54.1566, 48.6156, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 8/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.56434, 14.6509, -4.92863, 2.22 ) }
    dend_40 { pt3dadd( 3.65198, 18.6001, -8.45761, 2.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 10/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 3.56434, 14.6509, -4.92863, 0.83 ) }
    dend_33 { pt3dadd( 5.62826, 16.9801, -0.598285, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 12/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 68.1842, 42.7758, 15.9781, 1.11 ) }
    dend_24 { pt3dadd( 70.2873, 41.4078, 21.3587, 1.11 ) }
    dend_24 { pt3dadd( 70.7925, 41.0791, 22.6514, 1.39 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 68.1842, 42.7758, 15.9781, 0.56 ) }
    dend_23 { pt3dadd( 67.6023, 48.5675, 18.1435, 0.56 ) }
    dend_23 { pt3dadd( 67.5712, 51.3889, 20.1963, 0.56 ) }
    dend_23 { pt3dadd( 67.5647, 53.5033, 21.9061, 0.28 ) }
    dend_23 { pt3dadd( 67.5857, 53.9706, 22.2782, 0.83 ) }
    dend_23 { pt3dadd( 67.737, 55.8137, 23.7855, 0.28 ) }
    dend_23 { pt3dadd( 68.0571, 59.1613, 26.5003, 0.56 ) }
    dend_23 { pt3dadd( 68.681, 62.7946, 29.8783, 0.56 ) }
    dend_23 { pt3dadd( 68.9553, 64.2732, 31.0396, 0.56 ) }
    dend_23 { pt3dadd( 69.3168, 66.1583, 32.2742, 0.56 ) }
    dend_23 { pt3dadd( 69.7652, 68.6163, 33.6708, 0.28 ) }
    dend_23 { pt3dadd( 69.9275, 69.5919, 34.1037, 0.28 ) }
    dend_23 { pt3dadd( 70.0252, 70.9045, 34.3188, 0.83 ) }
    dend_23 { pt3dadd( 70.3102, 74.1945, 34.0908, 0.28 ) }
    dend_23 { pt3dadd( 70.5469, 76.452, 33.8876, 0.28 ) }
    dend_23 { pt3dadd( 70.6001, 76.8184, 33.8078, 0.56 ) }
    dend_23 { pt3dadd( 70.971, 78.2725, 33.3564, 0.28 ) }
    dend_23 { pt3dadd( 70.971, 78.2725, 33.3564, 0.56 ) }
    dend_23 { pt3dadd( 71.9413, 80.4958, 32.7009, 0.28 ) }
    dend_23 { pt3dadd( 72.7586, 81.9287, 32.4088, 0.56 ) }
    dend_23 { pt3dadd( 75.2923, 85.757, 31.4635, 0.28 ) }
    dend_23 { pt3dadd( 76.1167, 86.9035, 31.1175, 0.28 ) }
    dend_23 { pt3dadd( 76.29, 87.1151, 31.0817, 0.56 ) }
    dend_23 { pt3dadd( 77.007, 87.9077, 31.3537, 0.28 ) }
    dend_23 { pt3dadd( 77.9938, 88.8854, 32.4909, 0.83 ) }
    dend_23 { pt3dadd( 78.8476, 89.673, 33.794, 0.28 ) }
    dend_23 { pt3dadd( 79.5483, 90.2766, 35.1644, 0.83 ) }
    dend_23 { pt3dadd( 81.7172, 92.1554, 40.0051, 0.28 ) }
    dend_23 { pt3dadd( 83.4551, 93.6263, 44.1794, 0.28 ) }
    dend_23 { pt3dadd( 83.7763, 93.8923, 45.0763, 0.56 ) }
    dend_23 { pt3dadd( 87.0605, 102.131, 48.9379, 0.56 ) }
    dend_23 { pt3dadd( 91.5972, 109.765, 52.8441, 0.56 ) }
    dend_23 { pt3dadd( 95.7803, 118.176, 55.1546, 0.56 ) }
    dend_23 { pt3dadd( 100.947, 125.406, 59.0881, 0.56 ) }
    dend_23 { pt3dadd( 106.574, 132.358, 62.9162, 0.56 ) }
    dend_23 { pt3dadd( 111.989, 138.933, 67.6411, 0.56 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 51/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 36.0571, -4.20989, -12.4766, 0.83 ) }
    dend_19 { pt3dadd( 39.0826, -5.36728, -12.3869, 0.83 ) }
    dend_19 { pt3dadd( 40.2914, -5.78453, -12.3204, 0.28 ) }
    dend_19 { pt3dadd( 41.3737, -6.15202, -12.2556, 0.83 ) }
    dend_19 { pt3dadd( 42.8224, -6.62122, -12.1668, 0.56 ) }
    dend_19 { pt3dadd( 46.0863, -7.53475, -11.8716, 0.56 ) }
    dend_19 { pt3dadd( 48.7991, -8.27928, -11.5929, 0.56 ) }
    dend_19 { pt3dadd( 51.1037, -8.83878, -11.441, 0.56 ) }
    dend_19 { pt3dadd( 52.3456, -9.13612, -11.2994, 1.39 ) }
    dend_19 { pt3dadd( 53.3765, -9.37729, -11.1761, 0.83 ) }
    dend_19 { pt3dadd( 56.0471, -9.96247, -10.8566, 0.56 ) }
    dend_19 { pt3dadd( 56.9054, -10.1847, -10.7634, 0.83 ) }
    dend_19 { pt3dadd( 58.2473, -10.52, -10.6464, 0.56 ) }
    dend_19 { pt3dadd( 59.77, -10.9432, -10.5659, 0.56 ) }
    dend_19 { pt3dadd( 61.8844, -11.5348, -10.55, 0.83 ) }
    dend_19 { pt3dadd( 64.4505, -12.2561, -10.6382, 0.56 ) }
    dend_19 { pt3dadd( 66.1448, -12.7814, -10.7912, 0.56 ) }
    dend_19 { pt3dadd( 67.5861, -13.229, -10.9392, 0.56 ) }
    dend_19 { pt3dadd( 69.6744, -13.946, -11.1888, 1.94 ) }
    dend_19 { pt3dadd( 71.72, -14.7625, -11.4708, 0.56 ) }
    dend_19 { pt3dadd( 73.1729, -15.424, -11.6365, 0.56 ) }
    dend_19 { pt3dadd( 75.9386, -16.9254, -11.9653, 0.56 ) }
    dend_19 { pt3dadd( 77.3355, -17.758, -12.1294, 0.56 ) }
    dend_19 { pt3dadd( 78.2195, -18.3625, -12.239, 0.28 ) }
    dend_19 { pt3dadd( 79.2018, -19.1315, -12.3346, 0.28 ) }
    dend_19 { pt3dadd( 80.1996, -20.0276, -12.4052, 1.67 ) }
    dend_19 { pt3dadd( 82.7302, -22.671, -12.5306, 0.28 ) }
    dend_19 { pt3dadd( 83.5433, -23.6418, -12.5015, 0.28 ) }
    dend_19 { pt3dadd( 84.0865, -24.3507, -12.4509, 0.56 ) }
    dend_19 { pt3dadd( 85.151, -25.8252, -12.3677, 0.28 ) }
    dend_19 { pt3dadd( 86.4672, -27.8324, -12.2902, 0.28 ) }
    dend_19 { pt3dadd( 87.6043, -29.7699, -12.2148, 0.28 ) }
    dend_19 { pt3dadd( 88.4064, -31.3239, -12.1608, 1.39 ) }
    dend_19 { pt3dadd( 88.8494, -32.2051, -12.1254, 1.39 ) }
    dend_19 { pt3dadd( 89.7779, -34.0516, -12.0654, 0.28 ) }
    dend_19 { pt3dadd( 90.0491, -34.6197, -12.0734, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 87/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 36.0571, -4.20989, -12.4766, 0.83 ) }
    dend_18 { pt3dadd( 36.6915, -5.00709, -15.5954, 0.83 ) }
    dend_18 { pt3dadd( 40.8108, -8.91274, -31.9417, 0.56 ) }
    dend_18 { pt3dadd( 41.4924, -9.44628, -34.2127, 0.56 ) }
    dend_18 { pt3dadd( 43.0696, -10.497, -38.5969, 1.11 ) }
    dend_18 { pt3dadd( 45.0932, -11.6904, -43.6387, 0.56 ) }
    dend_18 { pt3dadd( 46.8428, -12.6362, -47.5713, 1.67 ) }
    dend_18 { pt3dadd( 48.6013, -13.4549, -50.764, 0.28 ) }
    dend_18 { pt3dadd( 49.9027, -13.8097, -52.4754, 1.11 ) }
    dend_18 { pt3dadd( 55.7033, -15.3112, -59.2624, 0.28 ) }
    dend_18 { pt3dadd( 56.6416, -15.5234, -60.1989, 0.83 ) }
    dend_18 { pt3dadd( 58.4016, -15.7348, -61.7375, 0.83 ) }
    dend_18 { pt3dadd( 61.9287, -15.6712, -64.7434, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_18 { pt3dadd( 62.6723, -15.5185, -65.4322, 1.11 ) }
    dend_18 { pt3dadd( 64.0855, -15.0389, -66.7549, 0.28 ) }
    dend_18 { pt3dadd( 65.3862, -14.5544, -67.945, 0.83 ) }
    dend_18 { pt3dadd( 69.0855, -13.2724, -71.3169, 0.28 ) }
    dend_18 { pt3dadd( 72.3512, -12.3061, -74.337, 1.67 ) }
    dend_18 { pt3dadd( 80.4735, -10.2243, -81.68, 0.28 ) }
    dend_18 { pt3dadd( 82.6754, -9.83517, -83.6633, 2.22 ) }
    dend_18 { pt3dadd( 90.2148, -9.00606, -90.4472, 0.28 ) }
    dend_18 { pt3dadd( 91.9501, -8.92936, -92.0415, 1.11 ) }
    dend_18 { pt3dadd( 97.4146, -8.98491, -97.03, 0.28 ) }
    dend_18 { pt3dadd( 98.8602, -9.04184, -98.352, 1.11 ) }
    dend_18 { pt3dadd( 103.87, -9.43677, -103.107, 0.28 ) }
    dend_18 { pt3dadd( 105.517, -9.47221, -105.166, 1.11 ) }
    dend_18 { pt3dadd( 108.899, -9.31275, -110.702, 0.28 ) }
    dend_18 { pt3dadd( 110.12, -9.20187, -113.084, 1.11 ) }
    dend_18 { pt3dadd( 111.357, -9.02402, -115.804, 0.28 ) }
    dend_18 { pt3dadd( 111.738, -8.92266, -116.749, 0.56 ) }
    dend_18 { pt3dadd( 117.969, -6.35128, -133.92, 0.28 ) }
    dend_18 { pt3dadd( 119.563, -5.73512, -138.999, 1.67 ) }
    dend_18 { pt3dadd( 121.503, -4.96435, -145.537, 0.28 ) }
    dend_18 { pt3dadd( 121.679, -4.89584, -146.157, 0.56 ) }
    dend_18 { pt3dadd( 124.489, -3.81185, -156.072, 0.28 ) }
    dend_18 { pt3dadd( 124.846, -3.67109, -157.4, 1.39 ) }
    dend_18 { pt3dadd( 128.617, -1.96102, -172.65, 0.56 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 24/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.48909, -24.6844, 5.96042, 1.67 ) }
    dend_4 { pt3dadd( -5.97679, -30.1944, 6.65995, 1.67 ) }
    dend_4 { pt3dadd( -6.50746, -34.4769, 7.16967, 1.67 ) }
    dend_4 { pt3dadd( -7.01452, -37.9709, 7.54653, 1.67 ) }
    dend_4 { pt3dadd( -7.70816, -43.0756, 7.82792, 1.67 ) }
    dend_4 { pt3dadd( -8.02589, -45.3393, 7.86471, 1.67 ) }
    dend_4 { pt3dadd( -8.56226, -48.8892, 7.87281, 1.67 ) }
    dend_4 { pt3dadd( -9.07873, -51.9957, 7.7825, 1.67 ) }
    dend_4 { pt3dadd( -9.63977, -55.2914, 7.40519, 1.67 ) }
    dend_4 { pt3dadd( -10.465, -60.0601, 6.39493, 1.39 ) }
    dend_4 { pt3dadd( -11.4017, -65.6584, 4.78825, 1.39 ) }
    dend_4 { pt3dadd( -11.6659, -67.7505, 4.12694, 1.39 ) }
    dend_4 { pt3dadd( -11.9538, -71.5546, 2.90532, 1.39 ) }
    dend_4 { pt3dadd( -12.1, -79.3427, 0.548245, 1.39 ) }
    dend_4 { pt3dadd( -11.984, -82.4617, -0.295386, 1.39 ) }
    dend_4 { pt3dadd( -11.6034, -87.809, -1.36544, 1.11 ) }
    dend_4 { pt3dadd( -11.0908, -92.4335, -2.05262, 1.11 ) }
    dend_4 { pt3dadd( -10.7741, -95.2119, -2.20091, 1.11 ) }
    dend_4 { pt3dadd( -10.511, -98.2995, -1.98265, 1.11 ) }
    dend_4 { pt3dadd( -10.3647, -102.189, -1.22002, 1.11 ) }
    dend_4 { pt3dadd( -10.4499, -109.277, 0.498822, 1.11 ) }
    dend_4 { pt3dadd( -10.8422, -112.847, 1.51026, 1.11 ) }
    dend_4 { pt3dadd( -11.7543, -117.374, 2.88044, 1.11 ) }
    dend_4 { pt3dadd( -12.6767, -120.764, 3.86843, 1.11 ) }
    dend_4 { pt3dadd( -13.4011, -123.003, 4.5169, 1.11 ) }
    dend_4 { pt3dadd( -13.7279, -123.944, 4.77343, 1.11 ) }
    dend_4 { pt3dadd( -15.0453, -127.984, 5.6712, 1.11 ) }
    dend_4 { pt3dadd( -15.6554, -130.628, 5.92893, 1.11 ) }
    dend_4 { pt3dadd( -15.9313, -132.826, 5.89873, 1.39 ) }
    dend_4 { pt3dadd( -16.0351, -135.543, 5.75768, 1.39 ) }
    dend_4 { pt3dadd( -15.9937, -138.429, 5.5709, 1.11 ) }
    dend_4 { pt3dadd( -15.8924, -140.951, 5.37983, 1.11 ) }
    dend_4 { pt3dadd( -15.6247, -145.98, 4.9375, 1.11 ) }
    dend_4 { pt3dadd( -15.5335, -148.698, 4.68086, 1.11 ) }
    dend_4 { pt3dadd( -15.5119, -151.177, 4.37789, 1.11 ) }
    dend_4 { pt3dadd( -15.6135, -153.224, 4.0885, 1.39 ) }
    dend_4 { pt3dadd( -15.7292, -154.959, 3.82724, 1.67 ) }
    dend_4 { pt3dadd( -15.9457, -156.857, 3.53305, 1.67 ) }
    dend_4 { pt3dadd( -16.4722, -159.329, 3.17039, 1.11 ) }
    dend_4 { pt3dadd( -17.3508, -162.526, 2.61202, 1.11 ) }
    dend_4 { pt3dadd( -18.6638, -166.349, 1.85323, 1.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 65/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -5.48909, -24.6844, 5.96042, 0.83 ) }
    dend_1 { pt3dadd( -10.5843, -29.6606, 2.42719, 0.83 ) }
    dend_1 { pt3dadd( -13.7462, -32.3299, 0.524145, 0.83 ) }
    dend_1 { pt3dadd( -16.3291, -34.3336, -1.07918, 0.83 ) }
    dend_1 { pt3dadd( -19.1144, -36.4075, -2.73, 0.83 ) }
    dend_1 { pt3dadd( -21.9016, -38.3953, -4.29592, 0.83 ) }
    dend_1 { pt3dadd( -23.3744, -39.3478, -5.12987, 0.83 ) }
    dend_1 { pt3dadd( -25.9965, -40.8051, -6.30684, 0.83 ) }
    dend_1 { pt3dadd( -28.9715, -42.4313, -7.84116, 1.11 ) }
    dend_1 { pt3dadd( -30.9331, -43.4313, -8.93075, 0.83 ) }
    dend_1 { pt3dadd( -32.9177, -44.4331, -10.0041, 1.11 ) }
    dend_1 { pt3dadd( -37.0459, -46.6088, -12.2034, 0.83 ) }
    dend_1 { pt3dadd( -39.8377, -48.1977, -13.6434, 0.83 ) }
    dend_1 { pt3dadd( -43.7158, -50.5499, -15.6741, 0.83 ) }
    dend_1 { pt3dadd( -46.1256, -52.1036, -16.8835, 1.39 ) }
    dend_1 { pt3dadd( -48.5072, -53.7659, -18.1136, 0.56 ) }
    dend_1 { pt3dadd( -49.9243, -54.8927, -18.8739, 0.56 ) }
    dend_1 { pt3dadd( -51.0578, -55.8933, -19.4746, 1.11 ) }
    dend_1 { pt3dadd( -53.7571, -58.3419, -20.928, 0.56 ) }
    dend_1 { pt3dadd( -57.0426, -61.2981, -22.5236, 0.56 ) }
    dend_1 { pt3dadd( -58.06, -62.3053, -23.0041, 0.83 ) }
    dend_1 { pt3dadd( -60.422, -64.8665, -24.0595, 0.28 ) }
    dend_1 { pt3dadd( -61.4122, -66.056, -24.4317, 0.28 ) }
    dend_1 { pt3dadd( -62.4042, -67.3319, -24.7274, 1.39 ) }
    dend_1 { pt3dadd( -64.1956, -69.7381, -25.0585, 0.83 ) }
    dend_1 { pt3dadd( -65.8026, -71.919, -25.2515, 0.28 ) }
    dend_1 { pt3dadd( -66.6655, -73.1865, -25.3653, 0.83 ) }
    dend_1 { pt3dadd( -67.8073, -75.0175, -25.5147, 0.28 ) }
    dend_1 { pt3dadd( -68.5267, -76.3596, -25.6662, 0.56 ) }
    dend_1 { pt3dadd( -69.4432, -78.1835, -25.9527, 0.28 ) }
    dend_1 { pt3dadd( -70.0322, -79.4055, -26.1914, 1.67 ) }
    dend_1 { pt3dadd( -71.6383, -82.7384, -26.8829, 0.56 ) }
    dend_1 { pt3dadd( -72.8097, -85.2206, -27.3987, 0.28 ) }
    dend_1 { pt3dadd( -73.8998, -87.6101, -27.9589, 0.28 ) }
    dend_1 { pt3dadd( -74.2352, -88.3025, -28.1461, 1.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_1 { pt3dadd( -75.2451, -90.2424, -28.7347, 1.11 ) }
    dend_1 { pt3dadd( -77.1409, -93.6159, -29.8372, 0.28 ) }
    dend_1 { pt3dadd( -77.6256, -94.3891, -30.0908, 0.56 ) }
    dend_1 { pt3dadd( -79.3453, -96.8541, -31.0016, 0.28 ) }
    dend_1 { pt3dadd( -81.4728, -99.4867, -32.0723, 0.28 ) }
    dend_1 { pt3dadd( -81.8722, -99.9, -32.2153, 0.56 ) }
    dend_1 { pt3dadd( -83.0128, -100.844, -32.4913, 0.28 ) }
    dend_1 { pt3dadd( -83.4554, -101.129, -32.5614, 0.83 ) }
    dend_1 { pt3dadd( -85.5299, -102.306, -32.7925, 0.28 ) }
    dend_1 { pt3dadd( -87.7843, -103.452, -32.8122, 1.39 ) }
    dend_1 { pt3dadd( -91.6879, -105.461, -32.4179, 0.28 ) }
    dend_1 { pt3dadd( -93.1653, -106.276, -32.1568, 0.56 ) }
    dend_1 { pt3dadd( -95.2395, -107.553, -31.6281, 0.28 ) }
    dend_1 { pt3dadd( -96.0008, -108.084, -31.3518, 0.28 ) }
    dend_1 { pt3dadd( -98.2785, -109.836, -30.2446, 1.67 ) }
    dend_1 { pt3dadd( -100.49, -111.969, -28.8506, 0.56 ) }
    dend_1 { pt3dadd( -101.082, -112.733, -28.3895, 0.28 ) }
    dend_1 { pt3dadd( -101.862, -113.901, -27.5866, 0.56 ) }
    dend_1 { pt3dadd( -103.107, -115.876, -26.087, 0.28 ) }
    dend_1 { pt3dadd( -103.532, -116.507, -25.588, 0.83 ) }
    dend_1 { pt3dadd( -104.669, -118.014, -24.4938, 0.28 ) }
    dend_1 { pt3dadd( -105.362, -118.822, -23.9449, 0.28 ) }
    dend_1 { pt3dadd( -106.989, -120.631, -22.7184, 0.83 ) }
    dend_1 { pt3dadd( -108.957, -122.826, -21.2464, 0.28 ) }
    dend_1 { pt3dadd( -109.724, -123.722, -20.6257, 0.83 ) }
    dend_1 { pt3dadd( -112.661, -127.286, -18.1269, 0.28 ) }
    dend_1 { pt3dadd( -113.322, -128.077, -17.5587, 1.11 ) }
    dend_1 { pt3dadd( -116.21, -131.733, -14.7528, 0.28 ) }
    dend_1 { pt3dadd( -116.494, -132.147, -14.4359, 0.83 ) }
    dend_1 { pt3dadd( -118.104, -134.889, -12.263, 0.28 ) }
    dend_1 { pt3dadd( -118.599, -135.833, -11.4794, 0.28 ) }
    dend_1 { pt3dadd( -118.641, -135.931, -11.3853, 0.83 ) }
    dend_1 { pt3dadd( -119.787, -138.953, -8.27641, 0.28 ) }
    dend_1 { pt3dadd( -120.123, -140.031, -7.03841, 0.28 ) }
    dend_1 { pt3dadd( -120.25, -140.409, -6.59121, 0.56 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 35/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 15.5304, 39.8479, -0.563992, 0.56 ) }
    axon_1 { pt3dadd( 21.1075, 53.7726, -0.563992, 0.56 ) }
    axon_1 { pt3dadd( 26.6846, 67.6972, -0.563992, 0.56 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 38/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -22.2185, 95.4798, -71.3984, 0.28 ) }
    dend_65 { pt3dadd( -19.5557, 103.538, -75.0532, 0.28 ) }
    dend_65 { pt3dadd( -18.3659, 107.138, -76.6861, 0.28 ) }
    dend_65 { pt3dadd( -17.758, 108.977, -77.5204, 1.39 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 42/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -22.2185, 95.4798, -71.3984, 0.28 ) }
    dend_64 { pt3dadd( -23.2254, 97.6124, -72.1724, 0.28 ) }
    dend_64 { pt3dadd( -23.5231, 98.243, -72.4012, 0.56 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 45/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -122.771, 54.1566, 48.6156, 0.56 ) }
    dend_56 { pt3dadd( -124.073, 56.0386, 49.3618, 0.56 ) }
    dend_56 { pt3dadd( -124.769, 57.1889, 49.7483, 1.11 ) }
    dend_56 { pt3dadd( -127.131, 61.6422, 51.0135, 0.56 ) }
    dend_56 { pt3dadd( -129.033, 65.5754, 52.0307, 0.83 ) }
    dend_56 { pt3dadd( -129.741, 67.4158, 52.4604, 0.83 ) }
    dend_56 { pt3dadd( -130.123, 68.7534, 52.7494, 0.28 ) }
    dend_56 { pt3dadd( -130.118, 69.3747, 52.8234, 0.56 ) }
    dend_56 { pt3dadd( -129.822, 70.3075, 52.8151, 0.28 ) }
    dend_56 { pt3dadd( -129.691, 70.5458, 52.7984, 0.83 ) }
    dend_56 { pt3dadd( -128.123, 72.6213, 53.127, 0.28 ) }
    dend_56 { pt3dadd( -127.539, 73.5703, 53.3661, 0.83 ) }
    dend_56 { pt3dadd( -126.924, 74.8665, 53.8648, 0.28 ) }
    dend_56 { pt3dadd( -126.511, 75.8448, 54.2782, 0.83 ) }
    dend_56 { pt3dadd( -125.549, 78.8898, 55.7188, 0.28 ) }
    dend_56 { pt3dadd( -125.354, 79.9812, 56.273, 0.83 ) }
    dend_56 { pt3dadd( -125.351, 82.2756, 57.5544, 0.28 ) }
    dend_56 { pt3dadd( -125.477, 83.7077, 58.4049, 1.11 ) }
    dend_56 { pt3dadd( -128.376, 92.5875, 62.0204, 1.11 ) }
    dend_56 { pt3dadd( -133.729, 100.47, 65.2781, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 65/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -122.771, 54.1566, 48.6156, 0.56 ) }
    dend_55 { pt3dadd( -122.415, 52.7555, 49.6565, 0.56 ) }
    dend_55 { pt3dadd( -122.075, 51.4211, 50.6479, 0.28 ) }
    dend_55 { pt3dadd( -121.459, 49.0053, 52.4427, 0.56 ) }
    dend_55 { pt3dadd( -120.457, 42.5775, 60.1112, 0.56 ) }
    dend_55 { pt3dadd( -120.439, 35.9207, 67.6405, 0.56 ) }
    dend_55 { pt3dadd( -120.396, 29.6823, 75.5377, 0.56 ) }
    dend_55 { pt3dadd( -121.852, 24.2794, 83.9379, 0.56 ) }
    dend_55 { pt3dadd( -121.614, 18.9668, 92.5159, 0.56 ) }
    dend_55 { pt3dadd( -120.809, 13.7057, 101.092, 0.56 ) }
    dend_55 { pt3dadd( -121.202, 9.02359, 110.045, 0.56 ) }
    dend_55 { pt3dadd( -121.969, 4.4054, 119.01, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 77/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 3.65198, 18.6001, -8.45761, 1.11 ) }
    dend_46 { pt3dadd( 2.43646, 22.1134, -11.7292, 1.11 ) }
    dend_46 { pt3dadd( 1.76066, 24.0667, -13.5482, 1.11 ) }
    dend_46 { pt3dadd( 1.23584, 25.5836, -14.9608, 1.39 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 81/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.65198, 18.6001, -8.45761, 1.11 ) }
    dend_41 { pt3dadd( 7.08321, 28.1974, 4.83312, 1.11 ) }
    dend_41 { pt3dadd( 7.87573, 30.9435, 8.30407, 1.11 ) }
    dend_41 { pt3dadd( 8.6882, 34.7661, 12.7859, 1.11 ) }
    dend_41 { pt3dadd( 9.3168, 37.7236, 16.2534, 1.11 ) }
    dend_41 { pt3dadd( 9.78425, 39.9229, 18.8319, 1.11 ) }
    dend_41 { pt3dadd( 10.2007, 41.8826, 21.1295, 1.11 ) }
    dend_41 { pt3dadd( 11.5382, 46.3487, 24.2763, 1.11 ) }
    dend_41 { pt3dadd( 11.985, 48.243, 25.7334, 1.39 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 90/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.62826, 16.9801, -0.598285, 0.83 ) }
    dend_35 { pt3dadd( 6.22629, 18.5309, 2.08382, 0.83 ) }
    dend_35 { pt3dadd( 7.07331, 20.7724, 6.07185, 0.56 ) }
    dend_35 { pt3dadd( 7.61896, 22.2906, 8.66516, 0.56 ) }
    dend_35 { pt3dadd( 8.13175, 23.7564, 11.0417, 0.56 ) }
    dend_35 { pt3dadd( 9.97935, 28.8966, 18.8079, 1.11 ) }
    dend_35 { pt3dadd( 10.9, 31.3765, 22.352, 0.56 ) }
    dend_35 { pt3dadd( 11.4548, 32.6516, 24.0543, 0.83 ) }
    dend_35 { pt3dadd( 12.2229, 34.4398, 26.386, 0.56 ) }
    dend_35 { pt3dadd( 12.5007, 35.1177, 27.297, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_35 { pt3dadd( 13.5474, 37.2149, 29.9767, 0.83 ) }
    dend_35 { pt3dadd( 14.7012, 39.1458, 31.1488, 0.56 ) }
    dend_35 { pt3dadd( 17.9547, 43.8595, 32.8251, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 3/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 5.62826, 16.9801, -0.598285, 0.56 ) }
    dend_34 { pt3dadd( 7.28084, 16.5227, 0.657167, 0.56 ) }
    dend_34 { pt3dadd( 9.38735, 15.9397, 2.25746, 0.83 ) }
    dend_34 { pt3dadd( 17.7675, 14.5512, 8.92415, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 7/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 70.7925, 41.0791, 22.6514, 0.83 ) }
    dend_28 { pt3dadd( 73.836, 43.1606, 24.1398, 0.83 ) }
    dend_28 { pt3dadd( 75.2153, 44.1039, 24.8143, 0.83 ) }
    dend_28 { pt3dadd( 76.7455, 45.1504, 25.5627, 0.83 ) }
    dend_28 { pt3dadd( 78.2075, 46.1503, 26.2776, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 12/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 70.7925, 41.0791, 22.6514, 0.83 ) }
    dend_25 { pt3dadd( 72.328, 41.2404, 25.6309, 0.83 ) }
    dend_25 { pt3dadd( 74.8008, 41.5002, 30.429, 0.83 ) }
    dend_25 { pt3dadd( 75.9149, 41.6173, 32.5907, 0.56 ) }
    dend_25 { pt3dadd( 76.6798, 41.6976, 34.0749, 0.56 ) }
    dend_25 { pt3dadd( 77.9612, 41.8323, 36.5613, 0.56 ) }
    dend_25 { pt3dadd( 78.9161, 41.9326, 38.4141, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 19/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 90.0491, -34.6197, -12.0734, 0.28 ) }
    dend_21 { pt3dadd( 92.3641, -36.7669, -12.2549, 0.28 ) }
    dend_21 { pt3dadd( 94.4706, -39.1172, -12.6046, 0.28 ) }
    dend_21 { pt3dadd( 95.2869, -40.0281, -12.7401, 0.56 ) }
    dend_21 { pt3dadd( 98.0752, -43.1391, -13.2028, 0.28 ) }
    dend_21 { pt3dadd( 98.6755, -43.8089, -13.3025, 0.56 ) }
    dend_21 { pt3dadd( 101.54, -47.0052, -13.7779, 0.28 ) }
    dend_21 { pt3dadd( 102.602, -48.5028, -14.1346, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 90.0491, -34.6197, -12.0734, 0.28 ) }
    dend_20 { pt3dadd( 92.6161, -37.5273, -12.2935, 0.28 ) }
    dend_20 { pt3dadd( 93.7625, -38.9849, -12.0126, 0.28 ) }
    dend_20 { pt3dadd( 94.249, -39.6556, -11.8607, 0.56 ) }
    dend_20 { pt3dadd( 95.4042, -41.2649, -11.4667, 0.28 ) }
    dend_20 { pt3dadd( 96.4104, -42.6797, -11.1566, 1.11 ) }
    dend_20 { pt3dadd( 97.3292, -43.9499, -10.9057, 0.83 ) }
    dend_20 { pt3dadd( 100.315, -47.9513, -10.1089, 0.28 ) }
    dend_20 { pt3dadd( 101.737, -49.818, -9.65699, 0.28 ) }
    dend_20 { pt3dadd( 101.961, -50.1271, -9.55355, 0.56 ) }
    dend_20 { pt3dadd( 103.528, -52.3865, -8.68818, 0.28 ) }
    dend_20 { pt3dadd( 104.289, -53.4938, -8.27522, 1.11 ) }
    dend_20 { pt3dadd( 105.433, -55.136, -7.6134, 0.28 ) }
    dend_20 { pt3dadd( 107.731, -58.2006, -6.27381, 0.56 ) }
    dend_20 { pt3dadd( 110.286, -61.6489, -4.31835, 0.28 ) }
    dend_20 { pt3dadd( 110.801, -62.3854, -3.83742, 0.56 ) }
    dend_20 { pt3dadd( 116.244, -70.3505, -0.88247, 0.56 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.6638, -166.349, 1.85323, 1.11 ) }
    dend_6 { pt3dadd( -17.939, -169.474, 0.94948, 1.11 ) }
    dend_6 { pt3dadd( -17.0595, -174.065, -0.321134, 1.11 ) }
    dend_6 { pt3dadd( -16.2841, -178.856, -2.14891, 1.11 ) }
    dend_6 { pt3dadd( -16.0158, -180.498, -2.73075, 1.11 ) }
    dend_6 { pt3dadd( -15.3166, -183.928, -3.72802, 2.22 ) }
    dend_6 { pt3dadd( -14.6591, -186.703, -4.50143, 3.33 ) }
    dend_6 { pt3dadd( -14.2002, -188.635, -4.9993, 1.94 ) }
    dend_6 { pt3dadd( -13.1739, -194.656, -6.18231, 0.83 ) }
    dend_6 { pt3dadd( -12.8158, -198.338, -6.82377, 1.67 ) }
    dend_6 { pt3dadd( -12.4992, -202.871, -7.37192, 2.22 ) }
    dend_6 { pt3dadd( -12.3807, -205.787, -7.55428, 0.83 ) }
    dend_6 { pt3dadd( -12.3847, -209.553, -7.8073, 0.83 ) }
    dend_6 { pt3dadd( -12.6197, -213.61, -8.01587, 0.83 ) }
    dend_6 { pt3dadd( -13.108, -218.286, -8.2921, 1.11 ) }
    dend_6 { pt3dadd( -13.4745, -220.836, -8.68121, 0.83 ) }
    dend_6 { pt3dadd( -13.9145, -223.34, -9.18011, 0.83 ) }
    dend_6 { pt3dadd( -14.6117, -227.5, -10.0421, 2.22 ) }
    dend_6 { pt3dadd( -15.1736, -231.302, -10.9252, 1.11 ) }
    dend_6 { pt3dadd( -16.0147, -237.274, -12.4214, 0.83 ) }
    dend_6 { pt3dadd( -16.5617, -240.717, -13.2871, 2.22 ) }
    dend_6 { pt3dadd( -16.7066, -241.597, -13.4888, 2.22 ) }
    dend_6 { pt3dadd( -17.4996, -246.513, -14.3842, 0.83 ) }
    dend_6 { pt3dadd( -18.0028, -249.949, -14.7817, 0.83 ) }
    dend_6 { pt3dadd( -18.1484, -250.984, -14.8739, 1.39 ) }
    dend_6 { pt3dadd( -18.6843, -254.604, -14.9251, 2.22 ) }
    dend_6 { pt3dadd( -19.3664, -259.57, -14.7122, 0.83 ) }
    dend_6 { pt3dadd( -19.6411, -261.694, -14.6089, 1.67 ) }
    dend_6 { pt3dadd( -20.0873, -265.719, -14.3594, 2.5 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 73/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -18.6638, -166.349, 1.85323, 0.56 ) }
    dend_5 { pt3dadd( -20.527, -166.934, 0.63471, 0.56 ) }
    dend_5 { pt3dadd( -21.8094, -167.337, -0.203906, 0.56 ) }
    dend_5 { pt3dadd( -22.7518, -167.633, -0.820232, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -120.25, -140.409, -6.59121, 0.28 ) }
    dend_3 { pt3dadd( -121.533, -141.224, -5.81834, 0.28 ) }
    dend_3 { pt3dadd( -122.118, -141.595, -5.46662, 0.56 ) }
    dend_3 { pt3dadd( -124.225, -142.933, -4.19756, 0.28 ) }
    dend_3 { pt3dadd( -125.206, -143.556, -3.60683, 0.56 ) }
    dend_3 { pt3dadd( -127.268, -144.865, -2.36509, 0.56 ) }
    dend_3 { pt3dadd( -133.647, -148.123, 0.689765, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 84/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -120.25, -140.409, -6.59121, 0.28 ) }
    dend_2 { pt3dadd( -119.482, -141.765, -7.03953, 0.28 ) }
    dend_2 { pt3dadd( -119.18, -142.299, -7.21571, 0.56 ) }
    dend_2 { pt3dadd( -114.953, -151.531, -8.44167, 0.56 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 88/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 1.23584, 25.5836, -14.9608, 0.83 ) }
    dend_48 { pt3dadd( 0.95025, 28.9741, -15.6775, 0.83 ) }
    dend_48 { pt3dadd( 0.895853, 33.653, -17.0145, 0.83 ) }
    dend_48 { pt3dadd( 1.01437, 38.7869, -18.6254, 0.83 ) }
    dend_48 { pt3dadd( 1.12846, 41.6834, -19.4704, 0.83 ) }
    dend_48 { pt3dadd( 1.15779, 42.5708, -19.7361, 0.83 ) }
    dend_48 { pt3dadd( 1.25041, 45.751, -20.6798, 0.83 ) }
    dend_48 { pt3dadd( 1.44416, 50.4366, -21.8931, 0.83 ) }
    dend_48 { pt3dadd( 1.54158, 53.3585, -22.73, 0.83 ) }
    dend_48 { pt3dadd( 1.66451, 56.6728, -23.6802, 1.11 ) }
    dend_48 { pt3dadd( 1.68262, 60.6853, -24.7998, 0.83 ) }
    dend_48 { pt3dadd( 1.58249, 62.6493, -25.2339, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_48 { pt3dadd( 1.31545, 65.6021, -25.8215, 0.83 ) }
    dend_48 { pt3dadd( 0.6538, 70.4049, -26.5502, 0.83 ) }
    dend_48 { pt3dadd( 0.112726, 73.9938, -27.1264, 0.83 ) }
    dend_48 { pt3dadd( -0.304008, 76.4556, -27.5492, 0.83 ) }
    dend_48 { pt3dadd( -0.890562, 79.6463, -27.9298, 2.5 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 1.23584, 25.5836, -14.9608, 0.56 ) }
    dend_47 { pt3dadd( 2.04641, 29.3793, -18.274, 0.56 ) }
    dend_47 { pt3dadd( 3.2505, 33.9618, -21.6196, 0.56 ) }
    dend_47 { pt3dadd( 3.93067, 36.6631, -23.571, 1.11 ) }
    dend_47 { pt3dadd( 5.13016, 41.0207, -26.6153, 0.56 ) }
    dend_47 { pt3dadd( 5.82324, 43.4671, -28.2445, 0.56 ) }
    dend_47 { pt3dadd( 6.93093, 47.0906, -30.6056, 1.11 ) }
    dend_47 { pt3dadd( 7.90168, 50.3906, -32.4541, 0.56 ) }
    dend_47 { pt3dadd( 9.35925, 54.4761, -34.498, 0.56 ) }
    dend_47 { pt3dadd( 10.222, 56.4657, -35.546, 0.28 ) }
    dend_47 { pt3dadd( 11.005, 58.0177, -36.2684, 0.56 ) }
    dend_47 { pt3dadd( 12.2942, 60.5215, -37.2708, 0.28 ) }
    dend_47 { pt3dadd( 12.5972, 61.1067, -37.4425, 0.56 ) }
    dend_47 { pt3dadd( 13.3223, 62.511, -37.8159, 0.28 ) }
    dend_47 { pt3dadd( 13.5266, 62.8996, -37.8691, 0.56 ) }
    dend_47 { pt3dadd( 14.1221, 64.1726, -38.0233, 0.28 ) }
    dend_47 { pt3dadd( 15.727, 67.6036, -38.4857, 1.67 ) }
    dend_47 { pt3dadd( 17.4607, 71.4843, -39.0103, 0.28 ) }
    dend_47 { pt3dadd( 17.7037, 72.0464, -39.1412, 0.56 ) }
    dend_47 { pt3dadd( 18.6574, 74.2345, -39.7974, 0.28 ) }
    dend_47 { pt3dadd( 18.8775, 74.7694, -40.0088, 1.39 ) }
    dend_47 { pt3dadd( 20.2572, 78.0429, -41.5425, 0.28 ) }
    dend_47 { pt3dadd( 20.727, 79.1787, -42.1772, 0.83 ) }
    dend_47 { pt3dadd( 22.366, 82.8983, -44.2078, 0.28 ) }
    dend_47 { pt3dadd( 23.1649, 84.6622, -45.3078, 1.39 ) }
    dend_47 { pt3dadd( 24.9726, 88.612, -48.0522, 0.28 ) }
    dend_47 { pt3dadd( 25.4044, 89.5846, -48.7419, 0.83 ) }
    dend_47 { pt3dadd( 26.586, 92.456, -50.818, 0.28 ) }
    dend_47 { pt3dadd( 27.3595, 94.416, -52.3183, 1.39 ) }
    dend_47 { pt3dadd( 28.7101, 98.0889, -55.1785, 0.28 ) }
    dend_47 { pt3dadd( 28.7396, 98.192, -55.2586, 0.56 ) }
    dend_47 { pt3dadd( 29.0644, 99.7284, -56.2851, 0.28 ) }
    dend_47 { pt3dadd( 29.1457, 100.335, -56.6222, 0.56 ) }
    dend_47 { pt3dadd( 29.4762, 103.639, -58.1769, 0.28 ) }
    dend_47 { pt3dadd( 29.5394, 104.527, -58.5824, 0.83 ) }
    dend_47 { pt3dadd( 29.7773, 108.111, -60.023, 0.28 ) }
    dend_47 { pt3dadd( 29.9499, 110.426, -60.9427, 1.11 ) }
    dend_47 { pt3dadd( 30.6884, 118.792, -64.2294, 0.28 ) }
    dend_47 { pt3dadd( 30.8672, 120.537, -64.859, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 44/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 11.985, 48.243, 25.7334, 0.83 ) }
    dend_43 { pt3dadd( 10.9773, 50.2686, 25.9259, 0.83 ) }
    dend_43 { pt3dadd( 10.0949, 51.8596, 26.1983, 0.83 ) }
    dend_43 { pt3dadd( 9.26577, 53.2329, 26.4009, 0.83 ) }
    dend_43 { pt3dadd( 7.64307, 55.7478, 26.8067, 0.83 ) }
    dend_43 { pt3dadd( 6.62562, 57.288, 27.1512, 0.83 ) }
    dend_43 { pt3dadd( 4.26766, 60.8182, 27.9699, 0.83 ) }
    dend_43 { pt3dadd( 2.69768, 63.2445, 28.5634, 0.83 ) }
    dend_43 { pt3dadd( 1.10283, 65.7364, 29.1699, 0.83 ) }
    dend_43 { pt3dadd( 0.206345, 67.1709, 29.4575, 0.83 ) }
    dend_43 { pt3dadd( -1.56287, 69.952, 29.9575, 0.83 ) }
    dend_43 { pt3dadd( -2.42164, 71.4361, 30.2527, 0.83 ) }
    dend_43 { pt3dadd( -3.77555, 74.0438, 30.7123, 0.83 ) }
    dend_43 { pt3dadd( -4.49449, 75.3802, 30.9226, 1.94 ) }
    dend_43 { pt3dadd( -5.68653, 77.6306, 31.2627, 1.39 ) }
    dend_43 { pt3dadd( -7.84748, 81.7332, 31.6979, 0.83 ) }
    dend_43 { pt3dadd( -9.18862, 84.2932, 31.8759, 0.83 ) }
    dend_43 { pt3dadd( -10.3789, 86.5331, 32.0758, 1.11 ) }
    dend_43 { pt3dadd( -12.2475, 89.9752, 32.3604, 0.83 ) }
    dend_43 { pt3dadd( -12.9806, 91.4039, 32.4441, 0.83 ) }
    dend_43 { pt3dadd( -13.4112, 92.4112, 32.4677, 1.11 ) }
    dend_43 { pt3dadd( -14.1447, 94.5697, 32.3378, 0.83 ) }
    dend_43 { pt3dadd( -14.4773, 95.6591, 32.24, 0.56 ) }
    dend_43 { pt3dadd( -14.943, 97.4289, 32.0988, 1.39 ) }
    dend_43 { pt3dadd( -15.6308, 100.308, 31.8741, 0.83 ) }
    dend_43 { pt3dadd( -16.3149, 102.974, 31.6724, 1.67 ) }
    dend_43 { pt3dadd( -17.108, 105.827, 31.443, 0.83 ) }
    dend_43 { pt3dadd( -17.4179, 106.914, 31.3193, 0.28 ) }
    dend_43 { pt3dadd( -17.6827, 107.876, 31.167, 0.83 ) }
    dend_43 { pt3dadd( -18.0614, 109.183, 30.9283, 0.28 ) }
    dend_43 { pt3dadd( -18.2695, 109.848, 30.7542, 0.83 ) }
    dend_43 { pt3dadd( -18.7383, 111.102, 30.4298, 0.28 ) }
    dend_43 { pt3dadd( -19.389, 112.723, 30.0622, 1.67 ) }
    dend_43 { pt3dadd( -20.2126, 114.619, 29.7216, 0.28 ) }
    dend_43 { pt3dadd( -20.5603, 115.373, 29.6198, 1.39 ) }
    dend_43 { pt3dadd( -21.5785, 117.425, 29.3326, 0.83 ) }
    dend_43 { pt3dadd( -22.7647, 119.746, 28.9043, 0.28 ) }
    dend_43 { pt3dadd( -23.1594, 120.471, 28.7522, 1.67 ) }
    dend_43 { pt3dadd( -23.9227, 121.767, 28.4807, 2.5 ) }
    dend_43 { pt3dadd( -24.5529, 122.792, 28.2382, 1.39 ) }
    dend_43 { pt3dadd( -25.537, 124.43, 27.7633, 0.56 ) }
    dend_43 { pt3dadd( -26.4147, 125.912, 27.2534, 1.11 ) }
    dend_43 { pt3dadd( -27.167, 127.321, 26.5137, 0.28 ) }
    dend_43 { pt3dadd( -27.7487, 128.43, 25.857, 1.67 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 88/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 11.985, 48.243, 25.7334, 0.56 ) }
    dend_42 { pt3dadd( 11.9168, 49.1555, 26.3028, 0.56 ) }
    dend_42 { pt3dadd( 11.8495, 50.0601, 26.723, 0.56 ) }
    dend_42 { pt3dadd( 11.3475, 53.3089, 27.9497, 0.56 ) }
    dend_42 { pt3dadd( 10.8695, 55.7661, 28.7816, 0.83 ) }
    dend_42 { pt3dadd( 10.714, 56.5987, 29.0551, 0.83 ) }
    dend_42 { pt3dadd( 10.4295, 58.3514, 29.6207, 0.83 ) }
    dend_42 { pt3dadd( 10.0759, 60.5478, 30.154, 0.56 ) }
    dend_42 { pt3dadd( 9.74624, 63.2308, 30.6515, 0.56 ) }
    dend_42 { pt3dadd( 9.74039, 63.7282, 30.7091, 0.56 ) }
    dend_42 { pt3dadd( 9.84918, 64.9672, 30.8572, 0.56 ) }
    dend_42 { pt3dadd( 9.96608, 65.9501, 30.9681, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_42 { pt3dadd( 10.2953, 68.1694, 31.3039, 0.83 ) }
    dend_42 { pt3dadd( 10.4936, 69.9403, 31.6625, 0.56 ) }
    dend_42 { pt3dadd( 10.4797, 71.3345, 31.8688, 0.56 ) }
    dend_42 { pt3dadd( 10.3642, 71.7703, 31.9052, 0.83 ) }
    dend_42 { pt3dadd( 9.61472, 73.2371, 31.9412, 0.56 ) }
    dend_42 { pt3dadd( 8.47253, 74.8804, 31.8712, 1.67 ) }
    dend_42 { pt3dadd( 7.39504, 76.0514, 31.7302, 1.11 ) }
    dend_42 { pt3dadd( 5.77107, 77.502, 31.2811, 0.83 ) }
    dend_42 { pt3dadd( 4.75761, 78.228, 31.0098, 0.83 ) }
    dend_42 { pt3dadd( 3.48172, 78.9599, 30.689, 0.28 ) }
    dend_42 { pt3dadd( 2.67604, 79.2592, 30.5156, 0.56 ) }
    dend_42 { pt3dadd( 1.8849, 79.3901, 30.2719, 0.83 ) }
    dend_42 { pt3dadd( 0.401944, 79.2928, 29.6374, 0.56 ) }
    dend_42 { pt3dadd( -1.91972, 78.7372, 28.6591, 0.83 ) }
    dend_42 { pt3dadd( -3.24245, 78.372, 28.1454, 0.28 ) }
    dend_42 { pt3dadd( -4.35607, 78.092, 27.7036, 0.28 ) }
    dend_42 { pt3dadd( -5.92695, 77.7146, 27.1192, 0.83 ) }
    dend_42 { pt3dadd( -7.83532, 77.2934, 26.3851, 0.28 ) }
    dend_42 { pt3dadd( -10.2174, 76.8287, 25.3862, 0.83 ) }
    dend_42 { pt3dadd( -12.545, 76.4845, 24.0366, 0.28 ) }
    dend_42 { pt3dadd( -13.6711, 76.432, 23.3949, 1.11 ) }
    dend_42 { pt3dadd( -17.3685, 82.6108, 23.4855, 1.11 ) }
    dend_42 { pt3dadd( -22.2215, 87.9608, 23.9518, 1.11 ) }
    dend_42 { pt3dadd( -26.5925, 93.7044, 24.1866, 1.11 ) }
    dend_42 { pt3dadd( -31.2833, 99.2039, 24.395, 1.11 ) }
    dend_42 { pt3dadd( -36.0144, 104.57, 25.5075, 1.11 ) }
    dend_42 { pt3dadd( -41.6286, 109.129, 26.2051, 1.11 ) }
    dend_42 { pt3dadd( -47.7282, 113.089, 25.9293, 1.11 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 28/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 17.9547, 43.8595, 32.8251, 0.56 ) }
    dend_37 { pt3dadd( 18.8541, 45.9597, 33.3367, 0.56 ) }
    dend_37 { pt3dadd( 19.3178, 47.0194, 33.6733, 0.83 ) }
    dend_37 { pt3dadd( 20.8714, 50.4813, 34.9704, 0.56 ) }
    dend_37 { pt3dadd( 22.5844, 54.0807, 36.4674, 0.56 ) }
    dend_37 { pt3dadd( 24.7577, 58.1598, 38.2359, 0.56 ) }
    dend_37 { pt3dadd( 26.2521, 60.981, 39.5487, 0.56 ) }
    dend_37 { pt3dadd( 26.5192, 61.4843, 39.8178, 0.56 ) }
    dend_37 { pt3dadd( 27.6052, 63.3969, 40.8341, 0.28 ) }
    dend_37 { pt3dadd( 28.0123, 64.0224, 41.2111, 0.83 ) }
    dend_37 { pt3dadd( 29.2633, 65.3756, 42.2531, 0.56 ) }
    dend_37 { pt3dadd( 31.3722, 67.1344, 43.5179, 0.28 ) }
    dend_37 { pt3dadd( 32.3764, 67.9191, 43.9332, 0.83 ) }
    dend_37 { pt3dadd( 33.6216, 68.8318, 44.4185, 0.56 ) }
    dend_37 { pt3dadd( 36.2245, 70.468, 45.2599, 1.11 ) }
    dend_37 { pt3dadd( 39.2884, 72.3669, 46.2057, 0.56 ) }
    dend_37 { pt3dadd( 44.7018, 80.1917, 50.1362, 0.56 ) }
    dend_37 { pt3dadd( 51.0082, 87.9069, 52.7316, 0.56 ) }
    dend_37 { pt3dadd( 58.7916, 93.7498, 56.284, 0.56 ) }
    dend_37 { pt3dadd( 66.9071, 98.4507, 60.7543, 0.56 ) }
    dend_37 { pt3dadd( 75.8594, 102.606, 64.0325, 0.56 ) }
    dend_37 { pt3dadd( 85.0366, 105.553, 67.9902, 0.56 ) }
    dend_37 { pt3dadd( 94.5577, 107.236, 71.9057, 0.56 ) }
    dend_37 { pt3dadd( 103.733, 109.043, 76.5283, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 52/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 17.9547, 43.8595, 32.8251, 0.56 ) }
    dend_36 { pt3dadd( 18.7361, 44.1348, 33.1423, 0.56 ) }
    dend_36 { pt3dadd( 19.7687, 44.4985, 33.5615, 0.56 ) }
    dend_36 { pt3dadd( 20.4712, 44.746, 33.8467, 0.83 ) }
    dend_36 { pt3dadd( 22.6828, 45.525, 34.7444, 0.56 ) }
    dend_36 { pt3dadd( 25.5156, 46.5229, 35.8944, 0.28 ) }
    dend_36 { pt3dadd( 31.7942, 49.2841, 37.8378, 0.28 ) }
    dend_36 { pt3dadd( 37.9474, 52.1757, 39.9749, 0.28 ) }
    dend_36 { pt3dadd( 44.6703, 54.0017, 41.5431, 0.28 ) }
    dend_36 { pt3dadd( 51.7753, 54.6323, 41.9763, 0.28 ) }
    dend_36 { pt3dadd( 58.8382, 55.4754, 42.6613, 0.28 ) }
    dend_36 { pt3dadd( 65.7976, 57.0813, 42.7345, 0.28 ) }
    dend_36 { pt3dadd( 72.188, 59.9188, 41.3522, 0.28 ) }
    dend_36 { pt3dadd( 78.7626, 62.0892, 39.6199, 0.28 ) }
    dend_36 { pt3dadd( 85.3145, 64.7776, 38.7934, 0.28 ) }
    dend_36 { pt3dadd( 91.4211, 68.1685, 37.4306, 0.28 ) }
    dend_36 { pt3dadd( 97.2954, 72.1612, 37.4416, 0.28 ) }
    dend_36 { pt3dadd( 103.311, 75.9164, 36.9441, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 70/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 78.2075, 46.1503, 26.2776, 0.83 ) }
    dend_30 { pt3dadd( 80.1768, 47.0966, 26.6695, 0.83 ) }
    dend_30 { pt3dadd( 82.4747, 48.2711, 27.0717, 0.83 ) }
    dend_30 { pt3dadd( 85.076, 49.5023, 27.4334, 0.83 ) }
    dend_30 { pt3dadd( 88.4878, 50.9935, 28.0358, 0.83 ) }
    dend_30 { pt3dadd( 89.92, 51.5585, 28.3879, 0.83 ) }
    dend_30 { pt3dadd( 94.0754, 53.0897, 29.552, 0.83 ) }
    dend_30 { pt3dadd( 97.3192, 54.2715, 30.5449, 0.83 ) }
    dend_30 { pt3dadd( 99.5558, 55.0756, 31.253, 0.83 ) }
    dend_30 { pt3dadd( 102.29, 56.0356, 32.1047, 1.39 ) }
    dend_30 { pt3dadd( 106.216, 57.1526, 33.3033, 0.83 ) }
    dend_30 { pt3dadd( 108.309, 57.6136, 33.9441, 0.83 ) }
    dend_30 { pt3dadd( 110.584, 57.9907, 34.6256, 1.11 ) }
    dend_30 { pt3dadd( 112.648, 58.29, 35.2196, 0.83 ) }
    dend_30 { pt3dadd( 115.025, 58.634, 35.8172, 0.83 ) }
    dend_30 { pt3dadd( 116.779, 58.8609, 36.0933, 0.83 ) }
    dend_30 { pt3dadd( 118.816, 59.0686, 36.315, 0.83 ) }
    dend_30 { pt3dadd( 120.05, 59.1681, 36.3575, 0.83 ) }
    dend_30 { pt3dadd( 121.388, 59.2448, 36.3276, 1.39 ) }
    dend_30 { pt3dadd( 122.075, 59.3057, 36.2585, 1.39 ) }
    dend_30 { pt3dadd( 124.534, 59.6457, 35.7979, 0.56 ) }
    dend_30 { pt3dadd( 126.924, 60.0758, 35.0777, 1.67 ) }
    dend_30 { pt3dadd( 130.889, 60.8942, 33.5996, 0.56 ) }
    dend_30 { pt3dadd( 131.504, 61.0219, 33.3348, 0.83 ) }
    dend_30 { pt3dadd( 133.452, 61.4019, 32.4303, 0.28 ) }
    dend_30 { pt3dadd( 134.292, 61.5508, 32.0754, 0.56 ) }
    dend_30 { pt3dadd( 137.324, 61.8821, 30.977, 0.28 ) }
    dend_30 { pt3dadd( 138.522, 61.9774, 30.5922, 0.56 ) }
    dend_30 { pt3dadd( 141.16, 62.1187, 30.0413, 0.28 ) }
    dend_30 { pt3dadd( 142.016, 62.1551, 29.8738, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( 144.965, 62.1585, 29.4365, 0.28 ) }
    dend_30 { pt3dadd( 147.167, 62.128, 29.2408, 1.11 ) }
    dend_30 { pt3dadd( 158.171, 63.1081, 28.5454, 1.11 ) }
    dend_30 { pt3dadd( 169.205, 62.7828, 29.4847, 1.11 ) }
    dend_30 { pt3dadd( 179.948, 60.6153, 31.0564, 1.11 ) }
    dend_30 { pt3dadd( 190.754, 59.7272, 33.3264, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 6/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 78.2075, 46.1503, 26.2776, 0.56 ) }
    dend_29 { pt3dadd( 80.0804, 47.4552, 27.4276, 0.56 ) }
    dend_29 { pt3dadd( 80.9265, 48.036, 28.0274, 0.56 ) }
    dend_29 { pt3dadd( 82.2419, 48.8785, 28.9644, 0.56 ) }
    dend_29 { pt3dadd( 85.7159, 51.0285, 31.3839, 0.56 ) }
    dend_29 { pt3dadd( 86.2767, 51.3728, 31.7631, 0.56 ) }
    dend_29 { pt3dadd( 90.2025, 53.6704, 34.2486, 0.56 ) }
    dend_29 { pt3dadd( 91.6805, 54.4609, 35.1011, 0.28 ) }
    dend_29 { pt3dadd( 92.7281, 55.0058, 35.6344, 0.56 ) }
    dend_29 { pt3dadd( 93.6307, 55.4651, 35.9786, 0.28 ) }
    dend_29 { pt3dadd( 94.6659, 56.0279, 36.2045, 0.56 ) }
    dend_29 { pt3dadd( 97.2058, 57.5619, 36.4514, 0.28 ) }
    dend_29 { pt3dadd( 99.6883, 59.1411, 36.3193, 0.28 ) }
    dend_29 { pt3dadd( 100.634, 59.8869, 36.1548, 0.56 ) }
    dend_29 { pt3dadd( 102.758, 61.8316, 35.8374, 0.28 ) }
    dend_29 { pt3dadd( 103.388, 62.44, 35.7279, 0.56 ) }
    dend_29 { pt3dadd( 105.21, 64.3593, 35.3413, 0.28 ) }
    dend_29 { pt3dadd( 105.502, 64.7242, 35.2606, 0.56 ) }
    dend_29 { pt3dadd( 108.493, 68.9823, 34.4216, 0.28 ) }
    dend_29 { pt3dadd( 110.255, 71.7561, 33.9388, 1.94 ) }
    dend_29 { pt3dadd( 117.062, 76.5464, 36.1101, 1.94 ) }
    dend_29 { pt3dadd( 124.728, 80.437, 36.8479, 1.94 ) }
    dend_29 { pt3dadd( 131.87, 85.1248, 37.9033, 1.94 ) }
    dend_29 { pt3dadd( 138.784, 89.3727, 40.7943, 1.94 ) }
    dend_29 { pt3dadd( 146.106, 91.7452, 44.7413, 1.94 ) }
    dend_29 { pt3dadd( 154.52, 92.7143, 46.5721, 1.94 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 32/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 78.9161, 41.9326, 38.4141, 0.56 ) }
    dend_27 { pt3dadd( 83.0361, 42.3605, 40.1175, 0.56 ) }
    dend_27 { pt3dadd( 86.4902, 42.7193, 41.5456, 0.56 ) }
    dend_27 { pt3dadd( 88.8729, 42.9668, 42.5307, 0.56 ) }
    dend_27 { pt3dadd( 92.8748, 43.3825, 44.1853, 0.56 ) }
    dend_27 { pt3dadd( 97.2951, 43.8417, 46.0129, 0.83 ) }
    dend_27 { pt3dadd( 109.128, 47.2746, 50.7902, 0.83 ) }
    dend_27 { pt3dadd( 120.52, 52.6632, 54.656, 0.83 ) }
    dend_27 { pt3dadd( 131.413, 59.3335, 57.7832, 0.83 ) }
    dend_27 { pt3dadd( 142.391, 66.5101, 58.3634, 0.83 ) }
    dend_27 { pt3dadd( 153.656, 73.1613, 59.6529, 0.83 ) }
    dend_27 { pt3dadd( 164.025, 81.1697, 59.6785, 0.83 ) }
    dend_27 { pt3dadd( 174.645, 88.7813, 58.6108, 0.83 ) }
    dend_27 { pt3dadd( 185.759, 95.6949, 59.7375, 0.83 ) }
    dend_27 { pt3dadd( 195.913, 103.631, 62.1605, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 78.9161, 41.9326, 38.4141, 0.83 ) }
    dend_26 { pt3dadd( 78.4534, 40.6707, 38.7426, 0.83 ) }
    dend_26 { pt3dadd( 77.8435, 39.0077, 39.1756, 0.83 ) }
    dend_26 { pt3dadd( 76.2396, 30.1583, 41.2753, 0.83 ) }
    dend_26 { pt3dadd( 74.3633, 21.1688, 42.2404, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -20.0873, -265.719, -14.3594, 0.56 ) }
    dend_8 { pt3dadd( -20.6344, -268.923, -13.7781, 0.56 ) }
    dend_8 { pt3dadd( -20.7738, -270.381, -13.5968, 0.83 ) }
    dend_8 { pt3dadd( -21.2745, -275.007, -12.9792, 0.56 ) }
    dend_8 { pt3dadd( -21.683, -278.479, -12.6476, 0.83 ) }
    dend_8 { pt3dadd( -22.0092, -280.981, -12.4662, 1.94 ) }
    dend_8 { pt3dadd( -22.3205, -283.427, -12.323, 2.22 ) }
    dend_8 { pt3dadd( -22.6418, -287.136, -12.0777, 0.83 ) }
    dend_8 { pt3dadd( -22.8336, -290.547, -11.7295, 0.83 ) }
    dend_8 { pt3dadd( -22.8714, -293.232, -11.3934, 0.83 ) }
    dend_8 { pt3dadd( -22.9113, -294.431, -11.1167, 0.56 ) }
    dend_8 { pt3dadd( -23.0023, -295.897, -10.6249, 0.56 ) }
    dend_8 { pt3dadd( -23.1763, -298.306, -9.5909, 1.11 ) }
    dend_8 { pt3dadd( -23.316, -301.293, -7.85207, 0.56 ) }
    dend_8 { pt3dadd( -23.2569, -302.196, -7.22067, 0.56 ) }
    dend_8 { pt3dadd( -23.0827, -304.083, -5.5576, 0.56 ) }
    dend_8 { pt3dadd( -22.952, -305.542, -4.19702, 1.39 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 69/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -20.0873, -265.719, -14.3594, 0.56 ) }
    dend_7 { pt3dadd( -18.9476, -268.484, -17.6308, 0.56 ) }
    dend_7 { pt3dadd( -18.2582, -271.603, -21.3887, 0.56 ) }
    dend_7 { pt3dadd( -18.009, -273.341, -23.3861, 0.56 ) }
    dend_7 { pt3dadd( -17.8515, -274.603, -24.7526, 0.28 ) }
    dend_7 { pt3dadd( -17.7446, -275.633, -25.8656, 0.28 ) }
    dend_7 { pt3dadd( -17.66, -277.189, -27.5239, 1.11 ) }
    dend_7 { pt3dadd( -17.8033, -279.231, -29.6014, 0.28 ) }
    dend_7 { pt3dadd( -17.9879, -280.484, -30.8648, 0.28 ) }
    dend_7 { pt3dadd( -18.078, -281.384, -31.9392, 2.22 ) }
    dend_7 { pt3dadd( -18.1788, -283.247, -34.8953, 0.28 ) }
    dend_7 { pt3dadd( -18.2351, -283.927, -36.6326, 0.28 ) }
    dend_7 { pt3dadd( -18.2245, -284.149, -37.7245, 0.28 ) }
    dend_7 { pt3dadd( -18.1105, -284.145, -39.6638, 0.83 ) }
    dend_7 { pt3dadd( -17.9491, -283.273, -45.2183, 0.28 ) }
    dend_7 { pt3dadd( -17.9211, -282.907, -46.6863, 1.67 ) }
    dend_7 { pt3dadd( -17.8429, -282.153, -48.8928, 0.28 ) }
    dend_7 { pt3dadd( -17.8101, -281.856, -49.6822, 0.83 ) }
    dend_7 { pt3dadd( -17.7394, -280.944, -52.0047, 0.28 ) }
    dend_7 { pt3dadd( -17.6791, -280.183, -53.9759, 1.67 ) }
    dend_7 { pt3dadd( -17.51, -279.047, -56.793, 0.56 ) }
    dend_7 { pt3dadd( -17.3749, -278.097, -59.2096, 0.28 ) }
    dend_7 { pt3dadd( -17.3607, -277.99, -59.4881, 0.83 ) }
    dend_7 { pt3dadd( -17.1963, -276.158, -64.2596, 0.28 ) }
    dend_7 { pt3dadd( -17.1043, -275.348, -66.3632, 1.11 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 94/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -0.890562, 79.6463, -27.9298, 0.56 ) }
    dend_52 { pt3dadd( -5.11488, 82.0517, -25.4995, 0.56 ) }
    dend_52 { pt3dadd( -6.57809, 83.0793, -24.7762, 1.39 ) }
    dend_52 { pt3dadd( -11.174, 87.2051, -22.7508, 0.56 ) }
    dend_52 { pt3dadd( -12.2845, 88.4552, -22.2988, 0.28 ) }
    dend_52 { pt3dadd( -13.7876, 90.6198, -21.5886, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_52 { pt3dadd( -15.7829, 93.852, -20.5778, 0.56 ) }
    dend_52 { pt3dadd( -17.114, 96.662, -19.8416, 1.11 ) }
    dend_52 { pt3dadd( -18.4793, 100.126, -19.106, 0.28 ) }
    dend_52 { pt3dadd( -19.4603, 102.966, -18.6787, 1.67 ) }
    dend_52 { pt3dadd( -21.2804, 108.64, -17.6171, 0.28 ) }
    dend_52 { pt3dadd( -21.4994, 109.359, -17.4709, 0.28 ) }
    dend_52 { pt3dadd( -22.2058, 111.487, -16.913, 0.83 ) }
    dend_52 { pt3dadd( -23.1647, 113.765, -16.1922, 0.28 ) }
    dend_52 { pt3dadd( -23.8152, 114.893, -15.8001, 0.28 ) }
    dend_52 { pt3dadd( -24.9764, 116.433, -15.2065, 0.83 ) }
    dend_52 { pt3dadd( -26.9988, 118.491, -14.5129, 0.28 ) }
    dend_52 { pt3dadd( -29.2607, 120.534, -13.5702, 1.11 ) }
    dend_52 { pt3dadd( -31.0981, 121.466, -12.9319, 0.56 ) }
    dend_52 { pt3dadd( -32.6395, 121.883, -12.4333, 0.28 ) }
    dend_52 { pt3dadd( -34.4824, 122.259, -11.8498, 0.28 ) }
    dend_52 { pt3dadd( -36.7848, 122.544, -11.1648, 0.28 ) }
    dend_52 { pt3dadd( -40.1365, 122.636, -10.1201, 0.56 ) }
    dend_52 { pt3dadd( -47.8352, 122.277, -8.10104, 0.28 ) }
    dend_52 { pt3dadd( -49.6719, 122.086, -7.58585, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 19/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.890562, 79.6463, -27.9298, 0.83 ) }
    dend_49 { pt3dadd( -0.482882, 81.9416, -27.9291, 0.83 ) }
    dend_49 { pt3dadd( 0.117258, 84.7499, -28.2825, 0.83 ) }
    dend_49 { pt3dadd( 1.36747, 90.324, -29.29, 0.56 ) }
    dend_49 { pt3dadd( 2.52718, 95.6323, -30.6446, 0.56 ) }
    dend_49 { pt3dadd( 3.11856, 98.3543, -31.455, 0.28 ) }
    dend_49 { pt3dadd( 3.74372, 101.293, -32.384, 1.67 ) }
    dend_49 { pt3dadd( 5.42249, 108.45, -35.2009, 0.28 ) }
    dend_49 { pt3dadd( 5.58509, 109.095, -35.5001, 0.56 ) }
    dend_49 { pt3dadd( 6.29963, 112.041, -37.0731, 0.28 ) }
    dend_49 { pt3dadd( 6.39823, 112.669, -37.3993, 0.83 ) }
    dend_49 { pt3dadd( 6.60358, 114.476, -38.159, 0.28 ) }
    dend_49 { pt3dadd( 6.70674, 115.8, -38.7532, 0.83 ) }
    dend_49 { pt3dadd( 6.82448, 119.072, -40.0081, 0.28 ) }
    dend_49 { pt3dadd( 6.82028, 121.697, -41.1932, 1.94 ) }
    dend_49 { pt3dadd( 6.68183, 125.867, -43.1602, 0.28 ) }
    dend_49 { pt3dadd( 6.42346, 127.95, -44.4212, 0.83 ) }
    dend_49 { pt3dadd( 5.64511, 132.365, -47.4412, 0.28 ) }
    dend_49 { pt3dadd( 5.44715, 133.247, -48.1789, 0.83 ) }
    dend_49 { pt3dadd( 4.52186, 136.725, -51.5501, 0.28 ) }
    dend_49 { pt3dadd( 4.21049, 137.92, -52.782, 1.11 ) }
    dend_49 { pt3dadd( 2.78364, 143.983, -58.7787, 0.28 ) }
    dend_49 { pt3dadd( 2.42736, 145.622, -60.353, 1.39 ) }
    dend_49 { pt3dadd( 1.30178, 152.049, -65.7085, 0.28 ) }
    dend_49 { pt3dadd( 1.23591, 152.562, -66.0934, 0.56 ) }
    dend_49 { pt3dadd( 0.944998, 156.9, -68.8045, 0.28 ) }
    dend_49 { pt3dadd( 0.880905, 160.702, -70.8728, 1.39 ) }
    dend_49 { pt3dadd( 1.05814, 164.044, -72.0163, 1.11 ) }
    dend_49 { pt3dadd( 1.28199, 167.873, -72.8794, 0.28 ) }
    dend_49 { pt3dadd( 1.33035, 168.821, -72.9866, 0.56 ) }
    dend_49 { pt3dadd( 1.41746, 173.241, -73.5868, 0.28 ) }
    dend_49 { pt3dadd( 1.42258, 174.244, -73.7198, 0.83 ) }
    dend_49 { pt3dadd( 1.36569, 179.717, -74.673, 0.28 ) }
    dend_49 { pt3dadd( 1.35096, 181.081, -74.8538, 1.39 ) }
    dend_49 { pt3dadd( 1.22057, 185.596, -75.5765, 0.28 ) }
    dend_49 { pt3dadd( 1.11971, 187.626, -75.8937, 1.11 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 55/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -27.7487, 128.43, 25.857, 1.94 ) }
    dend_45 { pt3dadd( -29.256, 130.282, 27.1242, 1.94 ) }
    dend_45 { pt3dadd( -31.0734, 132.614, 28.7442, 0.28 ) }
    dend_45 { pt3dadd( -31.7302, 133.647, 29.1489, 0.83 ) }
    dend_45 { pt3dadd( -34.2327, 138.251, 30.4357, 0.28 ) }
    dend_45 { pt3dadd( -34.7321, 139.373, 30.5182, 1.11 ) }
    dend_45 { pt3dadd( -35.5616, 141.443, 30.4539, 0.28 ) }
    dend_45 { pt3dadd( -36.0707, 142.912, 30.3876, 1.67 ) }
    dend_45 { pt3dadd( -37.6636, 147.757, 29.9634, 0.28 ) }
    dend_45 { pt3dadd( -37.9646, 148.908, 29.668, 0.83 ) }
    dend_45 { pt3dadd( -38.8145, 153.153, 27.7171, 0.28 ) }
    dend_45 { pt3dadd( -38.905, 153.818, 27.3705, 0.56 ) }
    dend_45 { pt3dadd( -43.4536, 165.226, 26.6702, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 68/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -27.7487, 128.43, 25.857, 0.28 ) }
    dend_44 { pt3dadd( -27.7534, 132.229, 26.9501, 0.28 ) }
    dend_44 { pt3dadd( -27.754, 132.744, 27.0983, 0.83 ) }
    dend_44 { pt3dadd( -27.759, 136.833, 28.275, 0.28 ) }
    dend_44 { pt3dadd( -27.7593, 137.088, 28.3484, 0.56 ) }
    dend_44 { pt3dadd( -27.7625, 139.655, 29.0871, 0.28 ) }
    dend_44 { pt3dadd( -27.766, 142.525, 29.9129, 1.11 ) }
    dend_44 { pt3dadd( -28.7795, 151.22, 34.0743, 1.11 ) }
    dend_44 { pt3dadd( -31.2113, 158.49, 40.0984, 1.11 ) }
    dend_44 { pt3dadd( -33.4866, 166.093, 45.7398, 1.11 ) }
    dend_44 { pt3dadd( -35.2304, 173.84, 51.3679, 1.11 ) }
    dend_44 { pt3dadd( -37.6814, 181.751, 56.4592, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 80/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 103.733, 109.043, 76.5283, 0.28 ) }
    dend_39 { pt3dadd( 109.907, 113.492, 80.1605, 0.28 ) }
    dend_39 { pt3dadd( 116.897, 117.238, 83.0642, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 103.733, 109.043, 76.5283, 0.28 ) }
    dend_38 { pt3dadd( 110.258, 113.811, 79.8819, 0.28 ) }
    dend_38 { pt3dadd( 117.405, 117.31, 83.5928, 0.28 ) }
    dend_38 { pt3dadd( 124.545, 119.709, 88.1466, 0.28 ) }
    dend_38 { pt3dadd( 131.27, 121.677, 93.4883, 0.28 ) }
    dend_38 { pt3dadd( 138.134, 121.945, 99.0184, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 89/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -22.952, -305.542, -4.19702, 0.56 ) }
    dend_16 { pt3dadd( -24.256, -305.152, -4.57411, 0.56 ) }
    dend_16 { pt3dadd( -26.1034, -304.598, -5.10833, 1.11 ) }
    dend_16 { pt3dadd( -27.72, -304.114, -5.57579, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 93/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -22.952, -305.542, -4.19702, 1.39 ) }
    dend_9 { pt3dadd( -23.3441, -306.201, -3.45917, 1.39 ) }
    dend_9 { pt3dadd( -24.4397, -308.042, -1.3973, 1.39 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 96/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 1.11971, 187.626, -75.8937, 0.28 ) }
    dend_51 { pt3dadd( 1.81092, 191.822, -74.6468, 0.28 ) }
    dend_51 { pt3dadd( 1.85787, 192.107, -74.562, 0.56 ) }
    dend_51 { pt3dadd( 2.28624, 194.708, -73.7893, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 2.43177, 195.592, -73.5268, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 1.11971, 187.626, -75.8937, 0.28 ) }
    dend_50 { pt3dadd( -0.69525, 187.651, -76.5802, 0.28 ) }
    dend_50 { pt3dadd( -1.0688, 187.656, -76.7215, 0.56 ) }
    dend_50 { pt3dadd( -3.52502, 187.689, -77.6506, 0.28 ) }
    dend_50 { pt3dadd( -5.27698, 187.713, -78.3133, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -24.4397, -308.042, -1.3973, 0.56 ) }
    dend_13 { pt3dadd( -27.2634, -311.295, 0.0317883, 0.56 ) }
    dend_13 { pt3dadd( -29.3323, -313.476, 0.61469, 0.56 ) }
    dend_13 { pt3dadd( -31.6938, -316.018, 0.851424, 0.56 ) }
    dend_13 { pt3dadd( -33.0625, -317.576, 0.855424, 0.56 ) }
    dend_13 { pt3dadd( -35.0858, -319.839, 0.956339, 0.56 ) }
    dend_13 { pt3dadd( -37.8649, -323.096, 1.34208, 0.56 ) }
    dend_13 { pt3dadd( -39.7196, -325.234, 1.58031, 0.56 ) }
    dend_13 { pt3dadd( -41.733, -327.669, 2.07807, 0.56 ) }
    dend_13 { pt3dadd( -42.5605, -328.908, 2.41395, 0.56 ) }
    dend_13 { pt3dadd( -44.9731, -332.919, 3.8025, 0.56 ) }
    dend_13 { pt3dadd( -46.3034, -335.386, 4.88097, 0.56 ) }
    dend_13 { pt3dadd( -47.4058, -337.786, 6.35282, 0.56 ) }
    dend_13 { pt3dadd( -48.458, -340.113, 8.08045, 0.83 ) }
    dend_13 { pt3dadd( -49.3184, -341.977, 9.71928, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 21/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -24.4397, -308.042, -1.3973, 0.56 ) }
    dend_10 { pt3dadd( -22.9577, -312.375, -0.845198, 0.56 ) }
    dend_10 { pt3dadd( -20.528, -319.026, -0.363522, 0.56 ) }
    dend_10 { pt3dadd( -19.68, -321.42, -0.270833, 0.56 ) }
    dend_10 { pt3dadd( -19.15, -323.068, -0.248113, 0.56 ) }
    dend_10 { pt3dadd( -18.1459, -326.37, -0.242541, 0.83 ) }
    dend_10 { pt3dadd( -17.0277, -330.149, -0.374526, 0.56 ) }
    dend_10 { pt3dadd( -16.3526, -332.865, -0.676946, 0.56 ) }
    dend_10 { pt3dadd( -16.0128, -334.539, -0.985785, 1.11 ) }
    dend_10 { pt3dadd( -15.7548, -336.3, -1.37143, 0.28 ) }
    dend_10 { pt3dadd( -15.4787, -338.66, -1.97014, 0.28 ) }
    dend_10 { pt3dadd( -15.2713, -340.956, -2.65076, 1.67 ) }
    dend_10 { pt3dadd( -15.2684, -342.937, -3.29011, 2.5 ) }
    dend_10 { pt3dadd( -15.3188, -348.261, -4.67739, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 35/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -49.3184, -341.977, 9.71928, 0.56 ) }
    dend_15 { pt3dadd( -52.2735, -345.674, 9.52792, 0.56 ) }
    dend_15 { pt3dadd( -54.2982, -348.426, 9.63061, 0.56 ) }
    dend_15 { pt3dadd( -54.7581, -349.192, 9.63178, 0.56 ) }
    dend_15 { pt3dadd( -56.4267, -352.43, 9.499, 0.56 ) }
    dend_15 { pt3dadd( -57.4399, -354.74, 9.39123, 0.56 ) }
    dend_15 { pt3dadd( -58.1182, -356.286, 9.31909, 0.56 ) }
    dend_15 { pt3dadd( -58.902, -358.642, 9.34112, 0.56 ) }
    dend_15 { pt3dadd( -59.9518, -362.469, 9.33537, 0.56 ) }
    dend_15 { pt3dadd( -60.6251, -365.454, 9.19679, 0.56 ) }
    dend_15 { pt3dadd( -60.851, -367.318, 8.93449, 0.56 ) }
    dend_15 { pt3dadd( -63.0982, -377.206, 8.88282, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 47/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -49.3184, -341.977, 9.71928, 0.28 ) }
    dend_14 { pt3dadd( -49.8692, -344.143, 9.21022, 0.28 ) }
    dend_14 { pt3dadd( -50.2738, -346.028, 8.64916, 0.28 ) }
    dend_14 { pt3dadd( -50.9404, -348.704, 7.71325, 0.28 ) }
    dend_14 { pt3dadd( -51.3564, -350.19, 7.15481, 0.28 ) }
    dend_14 { pt3dadd( -51.9485, -351.815, 6.45138, 0.28 ) }
    dend_14 { pt3dadd( -53.4137, -355.209, 4.77641, 0.28 ) }
    dend_14 { pt3dadd( -53.8492, -356.1, 4.17513, 0.28 ) }
    dend_14 { pt3dadd( -54.5587, -357.586, 3.06063, 0.28 ) }
    dend_14 { pt3dadd( -55.0313, -358.63, 2.25733, 0.28 ) }
    dend_14 { pt3dadd( -56.0862, -360.943, 0.407693, 0.56 ) }
    dend_14 { pt3dadd( -56.7487, -362.304, -0.692622, 0.56 ) }
    dend_14 { pt3dadd( -58.3166, -365.278, -2.93607, 0.28 ) }
    dend_14 { pt3dadd( -59.3943, -367.58, -4.70239, 0.28 ) }
    dend_14 { pt3dadd( -59.8299, -368.901, -5.66283, 0.83 ) }
    dend_14 { pt3dadd( -62.4317, -378.024, -8.94712, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 63/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -15.3188, -348.261, -4.67739, 0.28 ) }
    dend_12 { pt3dadd( -15.2184, -350.708, -3.76575, 0.28 ) }
    dend_12 { pt3dadd( -15.1993, -351.438, -3.53589, 0.56 ) }
    dend_12 { pt3dadd( -15.1438, -352.503, -3.39416, 0.28 ) }
    dend_12 { pt3dadd( -14.9948, -354.115, -3.28846, 0.28 ) }
    dend_12 { pt3dadd( -14.8061, -355.369, -3.28185, 0.56 ) }
    dend_12 { pt3dadd( -14.2832, -358.135, -3.32021, 0.28 ) }
    dend_12 { pt3dadd( -13.8368, -359.865, -3.4941, 0.83 ) }
    dend_12 { pt3dadd( -13.0291, -362.839, -3.84826, 0.28 ) }
    dend_12 { pt3dadd( -12.7307, -363.87, -3.9965, 0.56 ) }
    dend_12 { pt3dadd( -11.8636, -366.926, -4.58953, 0.28 ) }
    dend_12 { pt3dadd( -11.5947, -367.778, -4.79776, 0.56 ) }
    dend_12 { pt3dadd( -10.5773, -370.12, -5.5155, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 76/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -15.3188, -348.261, -4.67739, 0.28 ) }
    dend_11 { pt3dadd( -15.1356, -349.786, -3.24735, 0.28 ) }
    dend_11 { pt3dadd( -14.9766, -351.039, -1.99785, 0.28 ) }
    dend_11 { pt3dadd( -14.207, -354.793, 1.97066, 0.28 ) }
    dend_11 { pt3dadd( -13.7235, -357.152, 4.46379, 0.28 ) }
    dend_11 { pt3dadd( -13.6473, -357.524, 4.85692, 0.83 ) }
    dend_11 { pt3dadd( -13.0398, -360.489, 7.98988, 0.28 ) }
    dend_11 { pt3dadd( -12.9224, -361.299, 8.90269, 0.28 ) }
    dend_11 { pt3dadd( -12.6985, -362.827, 10.86, 0.28 ) }
    dend_11 { pt3dadd( -12.3074, -368.936, 17.1716, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_2 = new SectionList()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_62, dend_61, dend_58, dend_53, dend_32, dend_31, dend_22, dend_17, dend_0, dend_66, dend_63, dend_60, dend_59, dend_57, dend_54, dend_40, dend_33, dend_24, dend_23, dend_19, dend_18, dend_4, dend_1, dend_65, dend_64, dend_56, dend_55, dend_46, dend_41, dend_35, dend_34, dend_28, dend_25, dend_21, dend_20, dend_6, dend_5, dend_3, dend_2, dend_48, dend_47, dend_43, dend_42, dend_37, dend_36, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_52, dend_49, dend_45, dend_44, dend_39, dend_38, dend_16, dend_9, dend_51, dend_50, dend_13, dend_10, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_61 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_31 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_22 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_63 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_60 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_59 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_57 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_54 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_23 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_19 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_1 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_55 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_41 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_48 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_47 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_43 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_42 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_29 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_27 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_52 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_49 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_45 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_44 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_38 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_13 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_10 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_14 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_40 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_33 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_62 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_58 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_17 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_24 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_28 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_25 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_39 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_50 OneSecGrp_SectionRef_64.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_51 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_2 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_12 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_11 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_15 OneSecGrp_SectionRef_67.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_53, dend_53, dend_53, dend_53, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_40, dend_33, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_65, dend_65, dend_65, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_16, dend_16, dend_16, dend_9, dend_9, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_61 nseg = 11
    dend_31 nseg = 7
    dend_22 nseg = 3
    dend_66 nseg = 7
    dend_63 nseg = 5
    dend_60 nseg = 9
    dend_59 nseg = 7
    dend_57 nseg = 21
    dend_54 nseg = 7
    dend_23 nseg = 7
    dend_19 nseg = 3
    dend_18 nseg = 9
    dend_4 nseg = 7
    dend_1 nseg = 9
    dend_56 nseg = 3
    dend_55 nseg = 5
    dend_41 nseg = 3
    dend_35 nseg = 3
    dend_20 nseg = 3
    dend_6 nseg = 5
    dend_48 nseg = 3
    dend_47 nseg = 5
    dend_43 nseg = 5
    dend_42 nseg = 5
    dend_37 nseg = 7
    dend_36 nseg = 5
    dend_30 nseg = 5
    dend_29 nseg = 5
    dend_27 nseg = 7
    dend_8 nseg = 3
    dend_7 nseg = 3
    dend_52 nseg = 3
    dend_49 nseg = 7
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_38 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_14 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L4_LBC_84318d400f_0_0


