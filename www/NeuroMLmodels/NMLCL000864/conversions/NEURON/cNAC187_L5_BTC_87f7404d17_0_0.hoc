// Cell: cNAC187_L5_BTC_87f7404d17_0_0
/*
{
  "id" : "cNAC187_L5_BTC_87f7404d17_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.00557, 13.9448, -0.281532, 2.94779", "-0.903474, 12.664, -0.255809, 4.6084", "-0.801382, 11.3832, -0.230087, 6.06545", "-0.699289, 10.1025, -0.204364, 7.51206", "-0.597197, 8.82172, -0.178642, 8.73615", "-0.495104, 7.54095, -0.15292, 9.82275", "-0.393011, 6.26019, -0.127197, 10.7174", "-0.290919, 4.97943, -0.101475, 11.6395", "-0.188826, 3.69867, -0.0757524, 12.4724", "-0.0867336, 2.41791, -0.05003, 12.6766", "0.015359, 1.13715, -0.0243075, 12.8528", "0.117452, -0.143613, 0.00141486, 12.7165", "0.219544, -1.42437, 0.0271373, 12.4031", "0.321637, -2.70514, 0.0528597, 12.3753", "0.423729, -3.9859, 0.0785821, 12.071", "0.525822, -5.26666, 0.104304, 10.4042", "0.627914, -6.54742, 0.130027, 7.86989", "0.730007, -7.82818, 0.155749, 5.70594", "0.8321, -9.10894, 0.181472, 4.59143", "0.934192, -10.3897, 0.207194, 3.60784", "1.03628, -11.6705, 0.232917, 2.27826" ]
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "0.462584, -8.38364, 1.90039, 2.8", "0.565127, -8.98859, 1.85754, 2.8", "0.688052, -9.62792, 1.81696, 2.28", "0.827283, -10.2708, 1.8032, 1.77", "0.914784, -10.6066, 1.80338, 1.4", "1.23335, -11.6798, 1.81698, 1.33", "1.44815, -12.3096, 1.85581, 1.18", "1.65598, -12.8155, 1.91195, 1.11", "1.96309, -13.4809, 2.04141, 1.25", "2.21864, -14.0191, 2.18539, 1.33", "2.40404, -14.421, 2.31941, 1.4", "2.75028, -15.2374, 2.64745, 1.33", "2.89432, -15.6066, 2.81416, 1.03", "3.09074, -16.2649, 3.13214, 0.59", "3.13509, -16.602, 3.29767, 0.52", "3.10464, -16.8057, 3.39953, 0.52", "3.04648, -16.9011, 3.44249, 0.52", "2.80647, -17.0708, 3.49136, 0.52", "2.39295, -17.2648, 3.58077, 0.52", "2.23109, -17.347, 3.63365, 0.52", "1.9888, -17.5013, 3.74525, 0.52", "1.75701, -17.6908, 3.87726, 0.52", "1.72741, -17.7351, 3.61609, 0.52", "1.62747, -17.9189, 2.78107, 0.52", "1.49027, -18.2092, 1.68092, 1.55", "1.44777, -18.3172, 1.30832, 1.84", "1.41749, -18.4124, 0.994516, 2.14", "0.804014, -21.0286, -7.49807, 1.25", "0.779448, -21.1896, -8.04273, 1.11", "0.737089, -21.4668, -9.18199, 0.81", "0.721086, -21.5231, -9.51629, 0.59", "0.602149, -21.6141, -10.8104, 0.88", "0.532206, -21.5749, -11.2415, 0.88", "0.723679, -21.8672, -10.4325, 0.44", "1.14293, -22.7174, -8.07103, 0.81", "1.16306, -22.783, -7.90324, 0.81", "1.17905, -23.0584, -7.32473, 1.03", "1.15021, -23.3012, -6.93899, 0.96", "0.933983, -24.2133, -5.79174, 0.96", "0.748262, -24.795, -5.28898, 0.96", "0.63029, -25.1667, -5.08359, 0.96", "0.410513, -25.9693, -4.66901, 0.66", "0.255769, -26.7287, -4.31131, 0.44", "0.21859, -26.9986, -4.19702, 0.44", "0.199295, -27.2385, -4.12022, 0.44", "0.163453, -28.0396, -3.85276, 0.81", "0.161576, -28.0867, -3.83657, 0.81", "0.0993388, -28.8519, -3.58067, 1.11", "0.0525047, -29.2978, -3.42607, 1.55", "0.0301463, -29.477, -3.37927, 1.69", "-0.0154133, -29.7822, -3.31174, 1.77", "-0.154313, -30.5445, -3.18976, 1.77", "-0.23983, -30.9281, -3.13044, 1.77", "-0.366042, -31.3489, -3.07342, 1.77", "-0.629736, -31.9422, -2.97686, 1.03", "-0.859885, -32.3299, -2.90196, 1.03", "-1.00809, -32.5032, -2.83221, 0.96", "-1.24805, -32.704, -2.69641, 0.66", "-1.56679, -32.9361, -2.49116, 0.52", "-1.82454, -33.1385, -2.20001, 0.59", "-1.84782, -33.1634, -2.16155, 0.59", "-2.23464, -33.7606, -1.26627, 0.96", "-2.31319, -33.9169, -1.0108, 0.96", "-2.35772, -34.0155, -0.844078, 0.96", "-2.65655, -34.7933, 0.727692, 0.59", "-2.74109, -35.0642, 1.27752, 1.18", "-2.76551, -35.1461, 1.44469, 1.18", "-2.93532, -35.7956, 2.78357, 1.55", "-2.97762, -35.9455, 3.1186, 1.55", "-3.29436, -36.8614, 5.33415, 1.03", "-3.44958, -37.1522, 6.12343, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "0.932584, -10.5579, -0.789611, 2.95", "0.932584, -10.5579, -0.789611, 2.95", "1.03926, -11.1724, -0.789611, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.33741, 13.3199, 3.03039, 2.06", "-1.33741, 13.3199, 3.03039, 2.06", "-0.969817, 13.9798, 4.26365, 1.47", "-0.369513, 15.2048, 6.50487, 1.55", "-0.351799, 15.2468, 6.57977, 1.55", "-0.135388, 15.8281, 7.58381, 1.77", "0.485802, 17.7255, 10.7527, 1.77", "0.756609, 18.6614, 12.2927, 1.84", "0.862383, 19.1855, 13.2219, 1.99", "0.920745, 19.6658, 14.0364, 2.14", "0.93769, 19.9333, 14.4869, 2.28", "0.92207, 20.1441, 14.8388, 2.73", "0.814811, 20.5454, 15.3674, 2.8", "0.234978, 22.4271, 17.8787, 2.8", "0.15756, 22.6751, 18.3062, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-4.47741, -4.50314, -5.90961, 1.25", "-4.69802, -4.7619, -5.83243, 1.25", "-5.09441, -5.23867, -5.79522, 1.03", "-5.33225, -5.542, -5.8051, 1.03", "-5.85368, -6.21738, -5.85771, 0.66", "-6.31662, -6.80434, -6.0105, 0.74", "-6.73991, -7.31012, -6.18303, 0.74", "-7.38933, -8.04173, -6.50273, 1.18", "-7.79539, -8.46318, -6.72473, 1.47", "-8.39389, -9.0328, -7.06944, 1.77", "-9.64127, -10.0437, -7.84476, 0.52", "-10.1337, -10.3742, -8.13738, 0.52", "-10.3536, -10.4886, -8.28519, 0.74", "-10.7299, -10.6238, -8.50555, 1.18", "-11.1976, -10.7306, -8.87506, 1.47", "-11.7041, -10.8136, -9.33979, 1.92", "-11.9416, -10.8533, -9.57063, 1.69", "-13.3105, -11.1647, -11.0951, 0.88", "-14.2288, -11.447, -12.1979, 0.74", "-15.8289, -12.0923, -14.2578, 0.74", "-16.0566, -12.2188, -14.5914, 0.52", "-16.3841, -12.465, -15.1196, 0.52", "-16.7349, -12.7943, -15.7237, 0.96", "-16.958, -13.0544, -16.0906, 0.96", "-17.1547, -13.3201, -16.4084, 1.33", "-17.9863, -14.3896, -17.537, 1.33", "-18.7554, -15.2181, -18.5636, 0.44", "-18.9542, -15.4164, -18.8276, 0.88", "-19.451, -15.8727, -19.4516, 0.29", "-19.8344, -16.1963, -19.9341, 1.33", "-20.9122, -17.0001, -21.1992, 1.84", "-21.4924, -17.3796, -21.6915, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.82741, 13.4369, -3.03961, 1.99", "-2.82741, 13.4369, -3.03961, 1.99", "-3.36242, 15.6064, -3.54806, 2.06", "-3.81171, 17.4283, -3.97506, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500002059017331
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.03628, -11.6705, 0.232917, 0.550972", "2.22818, -26.6231, 0.232917, 0.550972", "3.42008, -41.5756, 0.232917, 0.550972" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-3.44958, -37.1522, 6.12343, 0.52", "-2.92056, -37.6596, 6.09684, 0.52", "-2.6261, -38.0683, 6.19839, 0.74", "-2.55665, -38.2987, 6.28824, 0.74", "-2.54619, -38.697, 6.4244, 0.74", "-2.55316, -38.7507, 6.44119, 0.74", "-2.61298, -38.993, 6.5122, 0.74", "-2.97247, -39.8058, 6.75033, 0.66", "-3.30614, -40.42, 6.93944, 0.66", "-3.62564, -40.9615, 7.10859, 1.25", "-3.75892, -41.1911, 7.17372, 1.18", "-3.92386, -41.4873, 7.24572, 1.33", "-4.08659, -41.7764, 7.30166, 1.11", "-4.11503, -41.8254, 7.30706, 1.11", "-4.32084, -42.1977, 7.4369, 0.66", "-4.5058, -42.6213, 7.84125, 0.59", "-4.51755, -42.657, 7.88542, 0.59", "-4.58366, -42.9379, 8.25881, 0.44", "-4.62979, -43.1846, 8.60818, 0.44", "-4.73513, -43.7979, 9.54942, 0.96", "-4.85458, -44.6395, 11.0294, 1.11", "-4.86706, -44.7822, 11.3135, 0.88", "-4.8653, -44.995, 11.7498, 0.88", "-4.86263, -45.0091, 11.7806, 0.88" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "-3.44958, -37.1522, 6.12343, 0.37", "-3.13857, -37.8356, 5.83498, 0.37", "-2.81309, -38.6106, 5.5855, 0.37", "-2.31405, -39.7411, 5.56864, 0.59", "-2.14477, -40.1141, 5.6412, 0.74", "-1.83303, -40.7957, 5.88321, 0.74", "-1.54115, -41.4118, 6.13233, 0.37", "-1.07156, -42.3963, 6.616, 0.37", "-0.105602, -44.423, 7.76943, 0.29", "0.363286, -45.4161, 8.41248, 0.81", "0.961164, -46.6434, 9.27289, 0.37", "1.34919, -47.4281, 9.88248, 0.29", "1.50648, -47.742, 10.1517, 0.37" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "1.03926, -11.1724, -0.789611, 1.47", "2.43027, -12.7809, -2.72665, 1.47", "2.92376, -13.4384, -3.36572, 1.33", "3.01454, -13.6645, -3.63561, 1.33", "3.10182, -14.0845, -4.14238, 1.03", "3.13134, -14.4329, -4.54239, 0.81", "3.1224, -14.9507, -5.09672, 1.11", "2.91061, -15.5467, -5.68956, 1.18", "1.63502, -17.3353, -7.85316, 0.88", "1.35372, -17.6389, -8.23969, 1.33", "1.01896, -17.9464, -8.65084, 1.92", "0.630678, -18.2815, -9.11447, 1.99", "-0.308892, -19.082, -10.271, 1.92", "-1.65315, -20.3154, -12.1084, 1.11", "-2.01671, -20.7369, -12.7154, 1.18", "-2.46927, -21.3713, -13.6997, 1.18", "-2.6305, -21.6809, -14.2066, 1.18", "-2.77119, -22.2383, -15.128, 1.18", "-2.71118, -22.8518, -16.0522, 1.4", "-2.48786, -23.2943, -16.6826, 2.06", "-2.46261, -23.3279, -16.7383, 2.06", "-2.25232, -23.5248, -17.0983, 1.84", "-2.23057, -23.5448, -17.1378, 1.84" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "1.03926, -11.1724, -0.789611, 1.03", "0.509862, -13.7032, -2.0947, 1.03", "0.239955, -15.0975, -2.77896, 0.96", "0.00939153, -16.2886, -3.36347, 1.33", "-0.247857, -17.6176, -4.01564, 1.55", "-0.412868, -18.47, -4.43397, 1.55", "-0.552305, -19.1904, -4.78746, 1.55", "-0.688566, -20.2323, -5.18309, 1.69" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "0.15756, 22.6751, 18.3062, 1.03", "0.526202, 23.7003, 18.1529, 1.03", "0.704847, 24.2838, 18.1981, 1.03", "0.810152, 24.7465, 18.2811, 0.88", "0.891024, 25.3057, 18.3986, 0.88", "0.942888, 25.8403, 18.4736, 0.88", "0.966101, 26.2899, 18.5189, 1.03", "0.898851, 27.5076, 18.6732, 1.03", "0.819532, 28.1386, 18.729, 0.96", "0.706417, 28.7515, 18.7562, 0.96", "0.471467, 29.7182, 18.7422, 0.66", "0.358822, 30.1161, 18.7092, 0.59", "0.273983, 30.3945, 18.6595, 0.52", "0.195324, 30.6529, 18.5909, 0.59", "0.118396, 30.923, 18.5163, 0.74", "-0.0232901, 31.467, 18.3757, 1.03", "-0.139783, 31.9271, 18.2736, 0.96", "-0.30107, 32.6462, 18.113, 1.25", "-0.400774, 33.1622, 17.9348, 1.62", "-0.532788, 33.8514, 17.6389, 1.62", "-0.624161, 34.2409, 17.448, 1.47", "-0.753223, 34.654, 17.2233, 1.25", "-0.967198, 35.1601, 16.9222, 1.11", "-1.67289, 36.4167, 16.124, 0.81", "-2.05951, 36.9514, 15.7661, 0.74", "-2.50125, 37.4365, 15.4297, 0.74", "-2.96013, 37.8464, 15.1291, 0.74", "-3.30031, 38.081, 14.9526, 0.74", "-3.58882, 38.2383, 14.8437, 0.74", "-3.96281, 38.4094, 14.7673, 0.74", "-4.40495, 38.5758, 14.7655, 0.66", "-4.76968, 38.7232, 14.8447, 0.52", "-5.26194, 38.9577, 15.0586, 0.59", "-5.50697, 39.1215, 15.2099, 0.59", "-5.56431, 39.1762, 15.2564, 0.59", "-6.61807, 40.5283, 16.3534, 0.74", "-6.80208, 40.8672, 16.7294, 1.03", "-6.87139, 41.0602, 16.9545, 1.77", "-6.99224, 41.6012, 17.5713, 1.77", "-7.05017, 42.0511, 18.063, 1.77", "-7.05442, 42.1113, 18.1268, 1.77", "-6.94629, 43.9832, 19.9876, 1.77", "-6.92533, 44.3405, 20.4095, 1.77", "-6.91467, 44.5657, 20.7257, 1.84", "-6.90577, 44.7968, 21.1473, 1.69" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "0.15756, 22.6751, 18.3062, 0.88", "-0.904449, 23.3442, 19.6089, 0.88", "-1.11324, 23.4936, 19.8483, 0.88", "-1.44778, 23.7692, 20.2013, 0.81", "-1.61847, 23.9316, 20.3698, 0.52", "-1.75607, 24.0824, 20.502, 0.52", "-1.77718, 24.1104, 20.523, 0.52", "-1.77713, 24.2731, 20.6975, 0.66", "-1.70256, 24.376, 20.9261, 0.59", "-1.63249, 24.4366, 21.1002, 0.59", "-1.56061, 24.4925, 21.2636, 0.74", "-1.42859, 24.5898, 21.547, 0.96", "-0.501776, 25.2669, 23.5341, 1.11", "-0.317214, 25.3847, 23.9242, 1.18", "-0.269875, 25.4104, 24.025, 1.18", "-0.165601, 25.4602, 24.2621, 1.11", "-0.10295, 25.4824, 24.4076, 1.03", "-6.21315E-4, 25.4893, 24.5859, 0.81", "-0.793603, 25.6025, 24.3484, 1.03", "-0.990742, 25.6174, 24.3177, 1.03", "-1.64777, 25.6486, 24.2744, 1.03", "-2.00165, 25.662, 24.2745, 0.74", "-2.09641, 25.6686, 24.2957, 0.74", "-2.38744, 25.7116, 24.4157, 0.88", "-2.76494, 25.8204, 24.6475, 0.74", "-3.01678, 25.9612, 24.8272, 0.74", "-3.06381, 26.027, 24.8908, 0.74", "-3.2955, 26.7211, 25.4765, 0.74", "-3.33792, 27.0199, 25.6794, 1.25", "-3.32521, 27.2948, 25.8248, 1.25", "-3.27155, 27.6452, 25.9757, 1.25", "-3.09736, 28.4163, 26.3393, 1.03", "-3.00522, 28.7544, 26.5338, 0.96", "-2.87208, 29.1719, 26.7471, 0.81", "-2.72826, 29.5761, 26.9775, 0.74", "-2.67889, 29.7049, 27.0504, 0.74", "-2.49278, 30.2822, 27.6405, 0.74", "-2.42733, 30.7236, 28.2005, 0.81", "-2.46625, 31.0736, 28.8666, 0.74", "-2.49528, 31.181, 29.1064, 0.74", "-2.53614, 31.2931, 29.3763, 0.74", "-2.89932, 32.1225, 31.4365, 0.81", "-2.98995, 32.291, 31.8603, 1.03", "-3.3761, 32.8872, 33.5179, 1.25", "-3.38651, 32.9015, 33.5625, 1.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-21.4924, -17.3796, -21.6915, 0.74", "-22.2959, -17.6905, -27.0335, 0.74", "-22.5623, -17.7426, -28.5234, 0.37", "-22.6808, -17.7554, -29.1224, 0.37", "-22.8608, -17.7616, -29.9338, 0.37", "-22.9367, -17.7702, -30.2371, 0.37", "-23.0632, -17.7783, -30.6937, 0.74", "-23.1863, -17.7564, -30.9711, 1.03", "-23.6852, -17.7236, -32.0792, 1.33", "-23.8125, -17.7254, -32.3607, 1.25", "-24.505, -17.9982, -35.0161, 0.22", "-24.6233, -18.0513, -35.591, 0.22", "-24.6629, -18.0701, -35.8229, 0.59", "-24.7163, -18.0911, -36.1642, 1.03", "-24.7601, -18.1072, -36.491, 1.03", "-25.2365, -18.517, -41.7259, 0.22", "-25.2848, -18.5914, -42.5102, 0.66", "-25.2929, -18.6088, -42.6716, 1.47", "-25.2977, -18.6652, -43.1015, 1.84", "-25.2892, -18.8785, -44.5685, 1.33", "-25.2318, -19.3844, -48.0772, 0.88", "-25.23, -19.3964, -48.1536, 0.88", "-25.2228, -19.4506, -48.4727, 0.96", "-25.1465, -20.3894, -54.5123, 1.47", "-25.1468, -20.4003, -54.5889, 1.47", "-25.1579, -20.4578, -55.0605, 1.47", "-25.3488, -20.9303, -60.0939, 0.29", "-25.3777, -20.9835, -60.7187, 0.29", "-25.4518, -21.0542, -61.7357, 0.29", "-25.5231, -21.0604, -62.3072, 0.52", "-25.5231, -21.0604, -62.3072, 0.96", "-25.503, -21.3453, -63.9923, 1.47", "-25.4037, -21.994, -67.5481, 0.44", "-25.3865, -22.0954, -68.0695, 1.11", "-25.3666, -22.2107, -68.6231, 1.11", "-24.8532, -24.8271, -80.9445, 0.52", "-24.8501, -24.8426, -81.018, 0.52", "-24.8277, -24.9582, -81.5364, 0.81", "-24.8107, -25.0462, -81.9195, 0.81", "-24.8073, -25.063, -81.9919, 0.81", "-24.6618, -25.8877, -85.665, 0.81", "-24.6589, -25.9676, -86.126, 0.81", "-24.6639, -26.9255, -91.6929, 0.37", "-24.67, -26.982, -92.0216, 1.47", "-24.67, -26.982, -92.0216, 1.47", "-24.9655, -27.565, -95.8547, 0.22", "-25.0657, -27.6531, -96.531, 0.22", "-25.1276, -27.6855, -96.8467, 0.22", "-25.4269, -27.6567, -97.7241, 0.22", "-25.5001, -27.684, -98.0792, 0.74", "-25.5717, -27.7433, -98.5237, 1.11", "-25.5806, -27.7541, -98.5976, 1.11", "-25.7036, -27.9891, -100.034, 1.11", "-25.7188, -28.0137, -100.279, 1.11", "-26.0291, -28.2459, -105.317, 0.74", "-26.0533, -28.2499, -105.637, 1.69", "-26.1084, -28.2303, -106.447, 1.69", "-26.124, -28.2053, -106.747, 1.69", "-26.2592, -27.6107, -110.232, 0.44", "-26.279, -27.3345, -111.115, 0.44", "-26.2796, -27.299, -111.18, 0.44", "-26.2293, -26.498, -112.528, 0.81", "-26.1943, -26.2002, -112.997, 1.11", "-26.1615, -25.9708, -113.301, 1.11", "-25.9107, -24.7153, -114.476, 0.29", "-25.8985, -24.6597, -114.527, 0.29", "-25.8183, -24.2493, -114.962, 0.29", "-25.7901, -24.02, -115.215, 0.88", "-25.7479, -23.7237, -115.592, 1.11", "-25.7045, -23.5307, -116.008, 1.11", "-25.6544, -23.3149, -116.611, 1.11", "-25.5102, -22.4503, -119.198, 0.22", "-25.5189, -22.221, -119.94, 1.33", "-25.5306, -22.1667, -120.111, 1.33", "-25.9792, -20.9602, -123.777, 0.29", "-26.0322, -20.8558, -124.169, 0.66", "-26.0856, -20.7602, -124.535, 0.88", "-26.3198, -20.4771, -125.658, 0.52", "-26.5341, -20.2322, -126.61, 0.52", "-26.6061, -20.1451, -126.912, 0.81", "-27.5289, -18.8269, -130.591, 0.52", "-27.5881, -18.6728, -131.269, 0.52", "-27.6033, -18.4598, -132.496, 0.29", "-27.5981, -18.3921, -132.968, 0.81", "-27.5975, -18.3838, -133.042, 0.81", "-27.6064, -18.3284, -133.559, 0.81", "-27.9132, -17.736, -138.694, 0.29", "-27.9283, -17.71, -138.985, 0.29", "-27.9754, -17.6264, -140.078, 0.29", "-27.9805, -17.6205, -140.153, 0.29", "-28.0209, -17.5849, -140.491, 0.74", "-28.0666, -17.5502, -140.708, 0.74", "-29.0655, -16.6344, -143.012, 0.29", "-29.1718, -16.524, -143.279, 0.29", "-29.1983, -16.4926, -143.356, 0.29", "-29.3598, -16.2478, -143.944, 0.29", "-29.4432, -16.0979, -144.296, 0.52", "-29.4594, -16.0682, -144.363, 0.52", "-29.5534, -15.8336, -144.789, 0.52", "-29.6181, -15.6054, -145.2, 0.52", "-29.902, -14.7025, -147.19, 0.29", "-29.9379, -14.6292, -147.344, 0.59", "-29.9868, -14.5572, -147.486, 0.59", "-30.1937, -14.3015, -147.948, 1.03", "-30.442, -14.0387, -148.368, 1.03", "-31.0962, -13.5005, -149.618, 0.66", "-31.7766, -13.1285, -150.867, 0.22", "-31.9306, -13.0341, -151.237, 0.66", "-32.0212, -12.9693, -151.51, 0.96", "-32.1839, -12.8436, -152.087, 0.96", "-32.9104, -12.1288, -155.335, 0.44", "-32.925, -12.1101, -155.419, 0.44", "-33.0893, -11.8731, -156.705, 0.29", "-33.1216, -11.8498, -157.015, 0.29", "-33.2169, -11.8282, -157.526, 0.29", "-33.4038, -11.804, -158.162, 0.96", "-33.5808, -11.7609, -158.552, 1.4", "-33.6862, -11.7399, -158.762, 1.4", "-35.7379, -11.427, -162.447, 0.44", "-36.4841, -11.3167, -163.757, 0.29", "-36.8494, -11.2723, -164.452, 0.29", "-37.2999, -11.2222, -165.352, 0.29", "-37.3334, -11.2161, -165.419, 0.29", "-37.5501, -11.1622, -165.818, 0.29", "-37.992, -10.9872, -166.465, 0.88", "-38.6899, -10.7609, -167.991, 0.74", "-38.7192, -10.7621, -168.059, 0.74", "-38.9244, -10.8164, -168.511, 0.74", "-38.9698, -10.8304, -168.599, 0.74", "-39.3444, -10.9892, -169.363, 0.52", "-39.3837, -11.0061, -169.439, 0.52", "-40.1267, -11.3172, -170.705, 0.22", "-40.3198, -11.403, -171.034, 0.44", "-40.4745, -11.4744, -171.309, 0.59", "-41.571, -11.9527, -173.185, 0.22", "-41.6556, -11.9816, -173.319, 0.22", "-41.8874, -12.0464, -173.676, 0.66", "-41.9705, -12.0622, -173.8, 0.66", "-43.0752, -12.2304, -175.269, 0.22", "-43.3853, -12.2538, -175.597, 0.22", "-43.9736, -12.2284, -176.023, 0.66", "-44.207, -12.2044, -176.177, 1.25", "-44.3939, -12.1736, -176.303, 1.25", "-44.8745, -12.0706, -176.604, 1.55", "-45.5119, -11.8869, -176.926, 1.33", "-45.8846, -11.7842, -177.163, 1.33", "-46.2687, -11.6897, -177.433, 1.33", "-46.9784, -11.5167, -177.94, 0.81", "-47.1664, -11.4738, -178.077, 0.81", "-48.085, -11.263, -178.805, 0.44", "-49.1102, -10.9983, -179.659, 0.44", "-49.1661, -10.9852, -179.708, 0.44", "-49.8121, -10.8385, -180.281, 0.44", "-49.8707, -10.8255, -180.325, 0.44", "-51.0266, -10.5843, -181.092, 0.44", "-51.4212, -10.5201, -181.307, 0.44", "-52.0617, -10.4572, -181.561, 0.44", "-52.2301, -10.4484, -181.618, 0.44", "-53.6099, -10.3939, -182.014, 0.29", "-54.22, -10.3753, -182.157, 0.96", "-55.5557, -10.4159, -182.858, 0.22", "-56.1084, -10.4149, -183.225, 1.25", "-56.2189, -10.4081, -183.311, 1.25", "-56.7559, -10.3547, -183.801, 1.25", "-56.8726, -10.3356, -183.916, 1.25", "-59.7444, -9.62805, -186.717, 0.44", "-60.8472, -9.23484, -187.725, 0.29", "-61.2318, -9.06965, -188.005, 0.29", "-61.2867, -9.04765, -188.051, 0.29", "-62.8989, -8.61407, -189.44, 0.96", "-62.9568, -8.60019, -189.486, 0.96", "-63.2796, -8.53076, -189.712, 1.33", "-63.7519, -8.44549, -190.114, 1.33", "-65.8483, -8.01055, -192.099, 0.37", "-66.9178, -7.75626, -193.187, 0.22", "-67.4994, -7.61267, -193.828, 0.22", "-67.7116, -7.55113, -194.059, 0.74", "-68.1171, -7.40763, -194.484, 1.18", "-69.6676, -6.74236, -195.985, 0.29", "-69.9902, -6.55698, -196.228, 0.29", "-70.041, -6.52009, -196.268, 0.29", "-70.188, -6.41002, -196.378, 0.96", "-70.7272, -5.97157, -196.761, 0.96", "-70.7852, -5.92099, -196.798, 0.96", "-71.7324, -5.01787, -197.293, 0.37", "-71.999, -4.7661, -197.433, 0.66", "-72.3121, -4.46324, -197.624, 0.81", "-72.8842, -3.91426, -198.078, 0.66", "-73.2587, -3.53356, -198.47, 0.37", "-73.4373, -3.37443, -198.622, 0.74", "-73.9845, -2.93919, -199.017, 1.11", "-74.5785, -2.48348, -199.378, 1.11", "-75.4526, -1.8117, -199.829, 1.11", "-75.9221, -1.47308, -200.102, 0.81", "-77.7936, -0.114946, -201.281, 0.29", "-78.1893, 0.168083, -201.531, 0.44", "-78.5583, 0.439894, -201.758, 0.74", "-79.0808, 0.827802, -202.054, 0.74", "-80.2568, 1.76997, -202.758, 0.29", "-80.6928, 2.15881, -203.089, 0.29", "-80.7905, 2.26376, -203.188, 0.29", "-81.087, 2.57197, -203.422, 0.66", "-81.4647, 2.97416, -203.65, 0.96", "-81.8576, 3.41456, -203.823, 0.74", "-82.4444, 4.1038, -204.002, 0.29", "-83.2866, 5.1323, -204.272, 0.29", "-83.5327, 5.45381, -204.36, 0.66", "-83.9395, 5.99643, -204.532, 0.96", "-84.247, 6.42542, -204.692, 0.29", "-84.5187, 6.80594, -204.867, 0.29", "-84.6393, 6.97712, -204.971, 0.29", "-84.9205, 7.35106, -205.231, 0.29", "-85.2385, 7.66387, -205.491, 0.29", "-85.5366, 7.83998, -205.595, 0.44", "-85.5944, 7.86686, -205.598, 0.44", "-85.8712, 8.00169, -205.572, 0.44", "-86.8301, 8.47698, -205.418, 0.37", "-86.8849, 8.50924, -205.413, 0.37", "-88.081, 9.33501, -205.372, 0.88", "-88.4444, 9.60237, -205.376, 1.33", "-88.9178, 9.9828, -205.426, 1.25", "-88.9764, 10.0314, -205.438, 1.25", "-90.4083, 11.2049, -205.887, 0.44", "-90.7473, 11.4411, -206.024, 0.81", "-90.9347, 11.5395, -206.128, 0.81", "-91.5068, 11.7654, -206.448, 0.22", "-92.0819, 11.767, -206.872, 0.22", "-92.4303, 11.6371, -207.189, 0.22", "-92.7178, 11.4315, -207.488, 0.22", "-93.2671, 10.9569, -208.136, 0.81", "-93.4556, 10.7873, -208.364, 1.18", "-95.0628, 9.18104, -210.314, 0.37", "-95.2483, 8.98522, -210.539, 0.44", "-95.4271, 8.79731, -210.745, 0.44", "-96.5684, 7.6223, -211.907, 0.37", "-96.9506, 7.24676, -212.237, 0.37", "-97.3823, 6.92627, -212.553, 0.81", "-97.866, 6.65645, -212.838, 1.03", "-98.3125, 6.40343, -213.089, 1.18", "-98.8929, 6.04596, -213.455, 1.18", "-98.9484, 6.01142, -213.491, 1.18", "-101.432, 4.45873, -215.261, 0.29", "-101.816, 4.22145, -215.552, 1.18", "-102.287, 3.9252, -215.927, 1.47", "-103.856, 2.99747, -217.077, 0.52", "-104.34, 2.73475, -217.392, 0.37", "-104.605, 2.60006, -217.528, 0.81", "-104.892, 2.45319, -217.645, 0.96", "-105.018, 2.39069, -217.696, 0.96", "-106.493, 1.65712, -218.222, 0.37", "-106.766, 1.51013, -218.292, 0.74", "-107.085, 1.3057, -218.402, 0.74", "-108.48, 0.18621, -218.949, 0.44", "-109.523, -0.832078, -219.378, 0.29", "-109.751, -1.08452, -219.475, 0.66", "-110.083, -1.51774, -219.629, 1.03", "-110.541, -2.13755, -219.82, 0.29", "-111.18, -3.0583, -220.015, 0.29", "-111.755, -3.89559, -220.083, 0.29", "-112.077, -4.43326, -220.131, 0.29", "-112.269, -4.7619, -220.16, 0.66", "-112.735, -5.53475, -220.226, 0.29", "-113.142, -6.17825, -220.247, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-21.4924, -17.3796, -21.6915, 1.84", "-22.3987, -17.8068, -21.7302, 1.84", "-23.6823, -18.4944, -21.7657, 0.29", "-24.4404, -18.9676, -21.771, 0.29", "-25.1508, -19.4149, -21.775, 0.81", "-25.7921, -19.8527, -21.7679, 0.29", "-26.4552, -20.314, -21.7565, 0.22", "-26.6925, -20.4813, -21.751, 0.81", "-27.2143, -20.9295, -21.7179, 0.81", "-27.6489, -21.3196, -21.6853, 0.81", "-28.2417, -21.8486, -21.641, 0.81", "-28.8499, -22.4073, -21.5916, 0.52", "-29.3878, -22.9207, -21.5444, 0.52", "-29.8383, -23.3909, -21.5106, 1.11", "-30.2841, -23.9102, -21.4789, 1.33", "-30.5928, -24.3388, -21.4514, 1.33", "-30.7325, -24.5528, -21.439, 1.11", "-31.2007, -25.4042, -21.3793, 1.03", "-31.4481, -25.8675, -21.3473, 0.29", "-31.6599, -26.2336, -21.3253, 0.29", "-31.9907, -26.8446, -21.2777, 0.22", "-32.3527, -27.4361, -21.2331, 0.22", "-32.668, -27.8959, -21.1975, 0.88", "-32.9289, -28.2376, -21.1687, 1.11", "-33.2193, -28.597, -21.1342, 1.11", "-34.7069, -30.1897, -21.0126, 0.22", "-35.4304, -30.8599, -21.0395, 0.96", "-36.1662, -31.5144, -21.1158, 1.33", "-37.3084, -32.4955, -21.2916, 0.37", "-38.5621, -33.5119, -21.5353, 0.59", "-39.7478, -34.3232, -21.7558, 0.37", "-41.3645, -35.2042, -22.0565, 1.25", "-42.1388, -35.616, -22.1775, 1.92", "-42.8442, -35.9433, -22.2735, 1.25", "-43.6015, -36.2447, -22.351, 1.03", "-45.1694, -36.7856, -22.2036, 0.29", "-45.633, -36.9539, -22.0552, 0.52", "-46.4597, -37.1945, -21.6325, 0.29", "-46.5455, -37.2135, -21.5849, 0.29", "-46.8853, -37.3009, -21.4234, 0.29", "-48.9636, -37.9705, -20.6084, 0.88", "-49.0363, -37.9983, -20.5881, 0.88", "-49.521, -38.1831, -20.4752, 1.4", "-50.0834, -38.3874, -20.3738, 1.11", "-52.3494, -39.2594, -20.1329, 0.44", "-52.6871, -39.403, -20.1407, 1.18", "-53.0177, -39.5607, -20.2149, 1.18", "-53.4816, -39.7837, -20.3222, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-3.81171, 17.4283, -3.97506, 1.03", "-4.64507, 17.9896, -4.29563, 1.03", "-6.46896, 19.1604, -4.94509, 0.74", "-6.98634, 19.4641, -5.10986, 0.81", "-8.33911, 20.184, -5.35761, 0.96", "-9.55718, 20.76, -5.64752, 0.96", "-10.7948, 21.3158, -5.97704, 1.47", "-11.44, 21.5769, -6.20811, 1.47", "-12.3053, 21.8918, -6.54034, 1.47", "-14.2036, 22.5381, -7.33472, 0.88", "-17.0179, 23.4179, -8.61039, 0.81", "-17.6131, 23.6078, -8.87384, 0.59", "-18.7241, 23.9802, -9.44725, 0.96", "-19.5992, 24.3049, -9.95791, 0.96", "-20.0986, 24.5207, -10.3603, 0.81", "-20.5868, 24.7754, -10.816, 0.81", "-21.0734, 25.0612, -11.2046, 0.96", "-21.3872, 25.2548, -11.4728, 0.96", "-22.148, 25.7451, -12.1621, 1.25", "-23.6646, 26.7326, -13.7813, 1.84", "-24.3448, 27.2183, -14.626, 1.84", "-24.5055, 27.3451, -14.8565, 1.84", "-24.7467, 27.5487, -15.2404, 1.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-3.81171, 17.4283, -3.97506, 2.06", "-3.99182, 18.4549, -3.88075, 2.06", "-4.29182, 20.1648, -3.72368, 1.55", "-4.62727, 22.0769, -3.54804, 1.4", "-4.87239, 23.474, -3.4197, 1.84", "-5.15419, 25.0802, -3.27215, 1.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "3.42008, -41.5756, 0.232917, 0.22", "4.61198, -56.5282, 0.232917, 0.22", "5.80388, -71.4808, 0.232917, 0.22" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "-4.86263, -45.0091, 11.7806, 0.88", "-5.59438, -44.8221, 12.6987, 0.88", "-6.10609, -44.6913, 13.3406, 0.96", "-6.49398, -44.5922, 13.8273, 0.96", "-6.75716, -44.525, 14.1575, 0.96" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-4.86263, -45.0091, 11.7806, 0.88", "-5.11782, -45.557, 11.9679, 0.88", "-5.32152, -45.9182, 12.1191, 0.59", "-5.58784, -46.3265, 12.2977, 0.59", "-6.24078, -47.3546, 12.7218, 0.37", "-6.6072, -47.9425, 12.956, 0.37", "-7.02778, -48.7023, 13.2452, 0.37", "-7.47343, -49.6641, 13.7351, 0.52", "-7.69897, -50.319, 14.1365, 0.52", "-7.80199, -50.9289, 14.6544, 0.66", "-7.80481, -50.9793, 14.7033, 0.66", "-7.69974, -51.8316, 15.6842, 0.59", "-7.21496, -53.1802, 17.4958, 0.88", "-7.05164, -53.4514, 17.9192, 1.03", "-6.45005, -54.2541, 19.4047, 1.03" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "1.50648, -47.742, 10.1517, 0.81", "2.17672, -48.3583, 10.1055, 0.81", "2.96751, -49.0537, 10.0192, 0.81", "3.41633, -49.4291, 9.96173, 0.74", "4.13334, -50.0231, 9.86361, 0.59", "4.46899, -50.3011, 9.81767, 1.03", "5.10507, -50.8281, 9.73063, 1.11", "5.5932, -51.2163, 9.61159, 1.11", "6.03, -51.5607, 9.49659, 0.96", "6.13366, -51.6402, 9.46897, 0.96" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "1.50648, -47.742, 10.1517, 0.29", "0.97761, -47.5639, 10.3124, 0.29", "0.772161, -47.4944, 10.3601, 0.29", "0.220165, -47.3078, 10.4881, 0.22", "-0.196848, -47.1669, 10.5849, 0.22", "-0.498613, -47.0649, 10.6549, 0.22", "-0.933366, -46.9179, 10.7558, 0.74", "-1.02285, -46.8809, 10.7636, 0.74", "-7.0361, -43.6302, 11.3273, 0.74", "-12.3958, -39.7448, 13.0581, 0.74", "-17.3222, -35.3868, 14.8908, 0.74", "-22.478, -31.929, 17.7935, 0.74" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-2.23057, -23.5448, -17.1378, 0.59", "-2.74711, -24.4712, -18.9146, 0.59", "-2.76263, -24.5069, -18.9791, 0.59", "-2.96568, -24.933, -19.7671, 0.59", "-3.81906, -26.753, -23.0031, 0.96", "-4.0218, -27.2376, -23.8829, 0.59", "-4.12745, -27.5654, -24.4953, 0.44", "-4.20579, -27.9099, -25.1791, 1.03", "-4.32202, -29.0109, -27.5742, 1.25", "-4.29919, -29.2081, -28.0319, 1.25", "-3.97146, -29.9887, -29.7047, 0.52", "-3.79478, -30.4366, -30.6716, 0.52", "-3.78185, -30.4646, -30.7322, 0.52", "-3.39122, -31.0482, -31.9701, 0.52", "-3.0151, -31.504, -32.831, 0.52", "-2.63967, -31.9728, -33.647, 0.88", "-2.2349, -32.5265, -34.4885, 1.55", "-1.87248, -33.0788, -35.2595, 2.14", "-1.55983, -33.5557, -35.8722, 1.69", "-1.0811, -34.2881, -36.7281, 1.18", "-0.75837, -34.7735, -37.3047, 1.03", "-0.694278, -34.8578, -37.3994, 1.03", "-0.478704, -35.1026, -37.6442, 0.74", "-0.295412, -35.2979, -37.8452, 0.74", "0.0681273, -35.7252, -38.3577, 0.74" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "-2.23057, -23.5448, -17.1378, 0.29", "-0.765363, -25.1105, -17.6929, 0.29", "-0.474585, -25.4694, -17.6575, 0.29", "-0.182044, -25.8776, -17.5545, 0.29", "0.133341, -26.3539, -17.3589, 0.29", "0.51181, -26.9574, -17.0597, 0.74", "0.835302, -27.4943, -16.7318, 0.88", "1.23556, -28.2344, -16.103, 0.66", "1.46233, -28.6363, -15.7486, 0.66", "1.82049, -29.2023, -15.169, 0.66", "2.01179, -29.4551, -14.8859, 0.66", "2.5068, -30.0228, -14.2155, 0.66", "2.8973, -30.4165, -13.7505, 0.52", "3.45647, -30.9594, -13.188, 0.29", "4.17771, -31.6535, -12.5359, 0.29", "4.58043, -32.0592, -12.2375, 0.37", "4.62148, -32.1021, -12.2119, 0.37", "5.13529, -32.6722, -11.9577, 0.37", "5.47569, -33.0985, -11.7862, 0.44", "6.2109, -34.1994, -11.3841, 0.44", "6.61619, -34.8515, -11.1863, 1.03", "6.76746, -35.0981, -11.0982, 1.4", "7.04602, -35.5523, -10.923, 1.62", "7.58012, -36.4438, -10.4605, 0.44", "7.86005, -36.9427, -10.1561, 0.59", "8.06447, -37.4099, -9.83812, 0.22", "8.32953, -38.1538, -9.29331, 0.07", "8.41818, -38.4453, -9.06828, 0.07", "8.71618, -39.6091, -8.14362, 0.96", "8.7406, -39.7725, -7.97169, 1.25", "8.78303, -40.5454, -7.05596, 0.22", "8.78124, -40.9123, -6.59818, 0.22", "8.7675, -41.2585, -6.18271, 0.74", "8.76244, -41.4716, -5.9495, 0.88", "8.74731, -44.0008, -3.47644, 0.29", "8.76375, -44.4373, -3.07583, 0.29", "8.89016, -45.8604, -1.85361, 1.0", "8.97971, -46.464, -1.36426, 1.5", "9.23556, -47.698, -0.475003, 0.29", "9.4043, -48.2047, -0.136114, 0.29", "9.71221, -48.8137, 0.17423, 0.29", "9.93444, -49.1689, 0.369381, 0.29", "10.5584, -50.0073, 0.840467, 0.52", "10.6526, -50.1202, 0.914461, 1.03", "11.6467, -51.2513, 1.67084, 1.18", "11.9725, -51.6462, 1.91639, 1.03", "12.3242, -52.1435, 2.16648, 0.96", "12.5604, -52.5365, 2.30324, 0.96", "12.6646, -52.7325, 2.36865, 0.88", "13.1768, -53.6922, 2.69109, 0.52", "13.2107, -53.7568, 2.71108, 0.52", "13.5606, -54.3699, 2.94128, 1.33", "13.8268, -54.7907, 3.163, 1.33", "14.8737, -56.3459, 4.1229, 0.29", "15.4695, -57.1885, 4.70895, 0.29", "15.5158, -57.2487, 4.75495, 0.29", "15.6485, -57.4073, 4.87833, 0.59", "16.6185, -58.4516, 5.70197, 0.22", "17.0261, -58.8457, 5.99178, 0.22", "17.1424, -58.9498, 6.04508, 0.22", "17.6759, -59.4044, 6.28327, 0.22", "17.7339, -59.4537, 6.30308, 0.22", "18.0442, -59.7066, 6.36067, 0.22", "18.1857, -59.7925, 6.3617, 0.22", "18.5806, -59.9899, 6.38601, 0.88", "18.6595, -60.0269, 6.39291, 0.88", "19.0711, -60.2064, 6.43829, 1.18", "19.223, -60.2703, 6.45695, 1.18", "20.6405, -60.8232, 6.6561, 0.22", "21.0723, -60.987, 6.72378, 0.22", "21.3437, -61.0811, 6.77177, 0.44", "24.6727, -69.0333, 13.158, 0.44", "28.9737, -77.3074, 18.4515, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-0.688566, -20.2323, -5.18309, 0.22", "-0.0498302, -20.2391, -5.97884, 0.22", "0.600483, -20.1965, -6.77907, 0.22", "0.964802, -20.2166, -7.30353, 0.22", "1.18181, -20.2713, -7.64059, 0.22", "2.27639, -20.707, -9.50039, 0.66", "2.45594, -20.7957, -9.90331, 0.66", "2.55359, -20.85, -10.2038, 0.66", "2.97428, -21.1791, -12.3242, 0.37", "3.10653, -21.3605, -13.2278, 0.37", "3.15395, -21.453, -13.6211, 0.37", "3.4475, -22.2221, -16.2935, 0.81", "3.47664, -22.3055, -16.5521, 1.03", "3.69059, -22.9479, -18.4902, 0.52", "4.03232, -23.6368, -20.3304, 0.29", "4.03232, -23.6368, -20.3304, 0.66", "4.27732, -23.9087, -20.7766, 1.11", "4.68114, -24.3321, -21.1902, 1.11", "4.80248, -24.4501, -21.2763, 1.11", "6.68295, -26.1543, -22.2561, 0.29", "7.58547, -26.9514, -22.6782, 0.29", "8.03488, -27.3804, -22.9355, 0.96", "8.47063, -27.8414, -23.2374, 1.25", "8.94832, -28.4116, -23.6335, 1.55", "9.7465, -29.6246, -24.5819, 0.81", "9.89104, -30.0705, -24.9748, 0.74", "9.91267, -31.0921, -26.0118, 0.22", "9.84441, -31.5158, -26.486, 0.22", "9.78767, -31.7003, -26.6929, 0.22", "9.39233, -32.6944, -27.7232, 0.66", "9.16201, -33.385, -28.4059, 0.66", "9.00526, -34.2081, -29.1913, 0.66", "8.99956, -34.8742, -29.8158, 1.4", "9.04681, -35.5261, -30.4181, 1.69", "9.09023, -35.9559, -30.7929, 1.69", "9.3418, -37.674, -32.1972, 0.66", "9.46528, -38.2426, -32.664, 0.66", "9.69525, -39.1736, -33.4254, 0.59", "9.78991, -39.5839, -33.7542, 0.52", "9.90055, -40.0742, -34.1442, 0.52", "10.037, -40.7634, -34.6472, 0.66", "10.0991, -41.1637, -34.8804, 0.66", "10.1501, -41.5716, -35.1034, 0.66", "10.2306, -42.4035, -35.479, 0.52", "10.2528, -42.7296, -35.619, 0.29", "10.2488, -43.2196, -35.8155, 0.29", "10.0913, -44.1097, -36.3063, 0.96", "9.90634, -44.7291, -36.7041, 1.4", "9.74154, -45.1373, -36.9777, 1.92", "9.53851, -45.5672, -37.2943, 2.36", "9.34638, -45.9381, -37.5926, 2.36", "8.25042, -47.8749, -39.2684, 0.29", "7.95175, -48.3708, -39.719, 0.29", "7.59063, -48.9655, -40.2781, 0.29", "7.13534, -49.7482, -41.0498, 0.29", "6.89571, -50.1601, -41.4675, 0.59", "6.82736, -50.2735, -41.5813, 1.11", "6.79322, -50.3209, -41.6253, 1.11", "6.45345, -50.74, -42.0945, 0.88", "5.5664, -51.7896, -43.3021, 0.37", "5.3702, -52.0339, -43.5998, 0.37", "5.19888, -52.2324, -43.8718, 0.59", "4.86246, -52.6518, -44.4767, 0.59", "4.38529, -53.2921, -45.4055, 0.59", "4.1265, -53.7317, -46.0748, 0.29", "3.73195, -54.6166, -47.2867, 0.66", "3.56679, -55.1921, -47.98, 1.47", "3.40529, -56.0655, -48.8932, 2.28", "3.36723, -56.4099, -49.1991, 2.06", "3.25167, -57.9825, -50.3063, 0.59", "3.19107, -58.9473, -50.8596, 0.52", "3.14466, -59.7292, -51.171, 0.52", "3.10108, -60.4441, -51.3917, 0.52", "3.02936, -61.1094, -51.5211, 0.59", "2.908, -61.9677, -51.6114, 0.81", "2.78247, -62.6762, -51.5996, 0.37", "2.62968, -63.4805, -51.5765, 0.22", "2.53262, -63.9828, -51.5819, 0.22", "2.45463, -64.439, -51.5992, 0.81", "2.33253, -65.2475, -51.646, 1.03", "2.15817, -66.5647, -51.7864, 0.96", "2.12913, -66.8178, -51.8248, 0.96", "2.00933, -68.0848, -52.0991, 0.29", "1.94839, -68.9778, -52.3263, 0.29", "1.92563, -69.3063, -52.4215, 0.29", "1.86517, -70.1862, -52.7, 1.4", "1.8086, -71.0841, -52.9867, 1.69", "1.74538, -72.0044, -53.2547, 1.25", "1.6753, -72.6933, -53.4269, 0.96", "1.60583, -73.3416, -53.5896, 0.59", "1.55092, -73.8437, -53.7075, 0.22", "1.4988, -74.6169, -53.8799, 0.22", "1.48448, -75.2833, -54.0172, 0.22", "1.47746, -76.1591, -54.181, 0.22", "1.49544, -77.076, -54.3852, 0.74", "1.50706, -77.3434, -54.4485, 1.03", "1.58068, -78.7314, -54.7805, 0.22", "1.66319, -79.6359, -55.1171, 0.22", "1.75691, -80.4127, -55.4288, 0.22", "1.87994, -81.2455, -55.7895, 0.88", "1.97541, -81.9116, -56.0955, 1.33", "2.00512, -82.1583, -56.2249, 1.4", "2.15739, -84.1622, -57.6162, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-0.688566, -20.2323, -5.18309, 0.59", "-1.78853, -20.6634, -5.16933, 0.59", "-2.78078, -21.0745, -5.13975, 0.52", "-3.33722, -21.3283, -5.13625, 0.59", "-4.22183, -21.7981, -5.14281, 0.74", "-4.94217, -22.2356, -5.14713, 0.37", "-5.43032, -22.5768, -5.12734, 0.37", "-5.77027, -22.8861, -5.04203, 0.74", "-6.14984, -23.3943, -4.85009, 1.25", "-6.4648, -23.9675, -4.5876, 1.18", "-6.62392, -24.3629, -4.38468, 0.88", "-6.89524, -25.2456, -3.86909, 0.37", "-7.22172, -26.4763, -3.08097, 0.96", "-7.3554, -27.0514, -2.68477, 0.96", "-7.44946, -27.4866, -2.35763, 0.81", "-7.51576, -27.7862, -2.12791, 0.81", "-7.64266, -28.3039, -1.76164, 0.44", "-7.70929, -28.5392, -1.62757, 0.66", "-7.80133, -28.7527, -1.54459, 0.59", "-7.82966, -28.7991, -1.51882, 0.59", "-8.03232, -29.0442, -1.38527, 0.59", "-8.4278, -29.4449, -1.16207, 0.22", "-8.60393, -29.6048, -1.07664, 0.22", "-8.83054, -29.8001, -0.961458, 0.22", "-9.55908, -30.3777, -0.582758, 1.11", "-10.1078, -30.7978, -0.278564, 1.47", "-10.1498, -30.8288, -0.251341, 1.47" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-6.90577, 44.7968, 21.1473, 1.03", "-3.48326, 45.8713, 12.7063, 1.03", "-3.23803, 45.9556, 12.1508, 0.66", "-3.02638, 46.0318, 11.707, 0.66", "-2.89009, 46.0819, 11.4425, 0.74", "-2.67551, 46.1623, 11.0569, 0.74", "-2.5061, 46.2268, 10.7739, 0.96", "-1.87763, 46.5735, 10.864, 0.96", "-1.65781, 46.7009, 10.9069, 0.66", "-1.38, 46.8814, 10.9799, 0.88", "-1.15169, 47.054, 11.0569, 1.18", "-1.00239, 47.1925, 11.122, 1.33", "-0.562829, 47.6918, 11.363, 1.33", "-0.313649, 48.0825, 11.5417, 1.33", "-0.174023, 48.3651, 11.6474, 1.03", "-0.104904, 48.5453, 11.6998, 0.88", "-0.00866655, 48.8452, 11.7671, 0.88", "0.010729, 48.9154, 11.7772, 0.88", "0.117692, 49.3573, 11.7968, 0.81", "0.164624, 49.5927, 11.805, 0.81", "0.230945, 50.0009, 11.8162, 0.74", "0.239211, 50.0628, 11.8175, 0.74", "0.268175, 50.3916, 11.8213, 0.66", "0.286414, 50.6534, 11.8233, 0.66", "0.30636, 50.9799, 11.8251, 0.66", "0.325658, 51.2317, 11.8505, 0.66", "0.400744, 51.7429, 11.9445, 0.66", "0.437037, 51.8814, 11.9791, 0.66", "0.616325, 52.3334, 12.1171, 0.66", "0.71833, 52.5348, 12.1874, 0.74", "1.15175, 53.2309, 12.4775, 0.74", "1.40893, 53.5884, 12.6424, 0.88", "1.76153, 54.0407, 12.861, 0.66", "2.07338, 54.455, 13.0898, 0.81", "2.10902, 54.4994, 13.1183, 0.81", "2.44057, 54.8928, 13.3903, 1.03", "2.65125, 55.1251, 13.5281, 1.25", "2.85204, 55.3428, 13.6491, 1.33", "3.39234, 55.9018, 13.9416, 1.4", "3.80242, 56.3201, 14.1226, 1.4", "4.01578, 56.5439, 14.2424, 1.4", "4.58584, 57.14, 14.5925, 0.52", "4.79503, 57.3556, 14.7336, 0.52", "4.83556, 57.3955, 14.7611, 0.52", "5.10772, 57.6673, 14.9289, 0.52", "5.76163, 58.4867, 15.528, 0.96", "5.88352, 58.657, 15.7033, 1.33", "5.88352, 58.657, 15.7033, 1.69", "5.93848, 58.7563, 15.8716, 1.69" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-6.90577, 44.7968, 21.1473, 0.88", "-7.29367, 45.3197, 22.5715, 0.88", "-7.32873, 45.3693, 22.6931, 1.03", "-7.78684, 45.9985, 24.1231, 0.66", "-7.89301, 46.1438, 24.4238, 0.44", "-7.96724, 46.2405, 24.6088, 0.66", "-8.04201, 46.3276, 24.7626, 0.81", "-8.12596, 46.3932, 24.8055, 0.88", "-8.32736, 46.5103, 24.7941, 0.88", "-8.51797, 46.6066, 24.7315, 0.88", "-9.08551, 46.8719, 24.5545, 0.44", "-9.47694, 47.0491, 24.4393, 0.37", "-9.98001, 47.325, 24.6107, 0.37", "-10.086, 47.4094, 24.7539, 0.52", "-10.2529, 47.6017, 25.1154, 0.59", "-10.3422, 47.7379, 25.3831, 0.74", "-10.3667, 47.7952, 25.4928, 0.88", "-10.7166, 49.3124, 28.2061, 0.66", "-10.7361, 49.4783, 28.4851, 0.66", "-10.7498, 49.7209, 28.8746, 0.81", "-10.7504, 49.7653, 28.9408, 0.81", "-10.7617, 50.0617, 29.2995, 0.52", "-10.8068, 50.423, 29.561, 0.44", "-10.9108, 50.8437, 29.6018, 0.44", "-11.1953, 51.7612, 29.6535, 0.88", "-11.3149, 52.0837, 29.6696, 1.11", "-11.7322, 53.1089, 29.7061, 0.44", "-11.9225, 53.524, 29.7101, 0.44", "-12.0625, 53.8218, 29.6994, 0.44", "-12.1767, 54.0939, 29.6702, 0.44", "-12.3294, 54.5117, 29.5996, 0.96", "-12.3741, 54.6708, 29.5982, 1.25", "-12.3842, 54.7213, 29.6065, 1.25", "-12.4347, 54.9457, 29.6688, 1.47", "-12.5933, 55.5566, 29.8948, 0.59", "-12.6897, 55.9031, 30.0469, 0.59", "-12.7896, 56.2755, 30.2303, 0.59", "-12.877, 56.5578, 30.4008, 0.74", "-13.0961, 57.0655, 30.778, 0.74", "-13.1175, 57.1006, 30.8138, 0.88", "-13.1505, 57.133, 30.8676, 1.03", "-13.2479, 57.1907, 31.0011, 1.03", "-13.4197, 57.2479, 31.1779, 0.81", "-13.7636, 57.2977, 31.4744, 0.44", "-13.9155, 57.332, 31.5173, 0.29" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-3.38651, 32.9015, 33.5625, 0.88", "-3.69522, 33.1717, 33.3635, 0.88", "-4.00244, 33.4691, 33.2508, 0.52", "-4.34344, 33.8471, 33.215, 0.37", "-4.54894, 34.0983, 33.231, 0.37", "-4.68574, 34.285, 33.2609, 0.37", "-4.77869, 34.4239, 33.2903, 0.44", "-5.10857, 35.1155, 33.5585, 0.29", "-5.15629, 35.2591, 33.6338, 0.29", "-5.16363, 35.2927, 33.6581, 0.29", "-5.19467, 35.4197, 33.7842, 0.29", "-5.22225, 35.5049, 33.8873, 0.29", "-5.30468, 35.7129, 34.1598, 0.29", "-5.35573, 35.8164, 34.2932, 0.29", "-5.57253, 36.1812, 34.78, 0.37", "-5.82434, 36.5526, 35.2726, 0.22", "-5.88568, 36.6308, 35.3803, 0.37", "-5.94905, 36.7032, 35.4781, 0.37", "-6.06969, 36.8176, 35.6272, 0.29", "-6.22753, 36.9551, 35.7481, 0.29", "-6.35388, 37.0598, 35.771, 0.37", "-6.38582, 37.087, 35.7682, 0.59", "-6.53463, 37.2053, 35.7502, 0.59", "-6.95221, 37.5118, 35.7022, 0.81", "-7.26493, 37.7266, 35.6699, 0.29", "-7.41589, 37.8185, 35.6558, 0.44", "-7.58634, 37.9111, 35.6406, 0.44", "-10.641, 42.8423, 37.0185, 0.44", "-14.0472, 47.3441, 38.9868, 0.44", "-16.7125, 52.4573, 40.4632, 0.44", "-19.7391, 57.5344, 41.2064, 0.44", "-23.2207, 62.2947, 42.145, 0.44" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-3.38651, 32.9015, 33.5625, 0.52", "-3.44224, 32.3374, 34.0331, 0.52", "-3.50911, 31.9744, 34.3762, 0.52", "-3.57191, 31.793, 34.5558, 0.52", "-3.69047, 31.5506, 34.8041, 0.52", "-4.2286, 30.7524, 35.6323, 0.74", "-4.36786, 30.587, 35.8047, 0.66", "-4.61889, 30.3998, 36.0476, 0.52", "-5.05473, 30.1999, 36.3568, 0.52", "-5.24003, 30.1514, 36.4326, 0.44", "-5.6711, 30.0901, 36.4994, 0.37", "-5.85134, 30.0737, 36.4896, 0.37", "-5.91097, 30.0709, 36.484, 0.37", "-6.2264, 30.0541, 36.4487, 0.37", "-6.80858, 30.0426, 36.369, 0.29", "-7.17989, 30.0378, 36.3137, 0.29", "-7.62154, 30.0428, 36.2414, 0.29", "-8.09696, 30.0542, 36.1621, 0.29", "-14.8251, 25.8366, 38.9743, 0.29", "-21.9719, 22.3511, 41.809, 0.29", "-28.4621, 18.985, 46.0345, 0.29", "-35.9238, 15.9946, 48.6442, 0.29", "-43.0367, 12.9914, 52.0817, 0.29", "-50.1727, 9.6203, 55.0843, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-53.4816, -39.7837, -20.3222, 0.44", "-55.024, -40.4557, -21.9904, 0.44", "-55.8568, -40.8849, -22.8033, 0.74", "-55.994, -40.9588, -22.931, 0.74", "-56.8224, -41.3607, -23.5682, 0.37", "-57.1511, -41.5242, -23.7983, 1.4", "-57.372, -41.6307, -23.9259, 1.4", "-59.1409, -42.3898, -24.5145, 0.52", "-59.1996, -42.4156, -24.5276, 0.52", "-60.3412, -42.9429, -24.7293, 0.29", "-61.12, -43.2837, -24.7923, 0.74", "-62.2144, -43.6877, -24.8321, 0.22", "-62.45, -43.7739, -24.8442, 0.81", "-62.648, -43.8394, -24.8563, 0.81", "-63.7804, -44.177, -24.9571, 0.22", "-64.7786, -44.4188, -25.1138, 0.74", "-65.203, -44.4851, -25.1847, 0.74", "-66.5594, -44.7997, -25.634, 0.59", "-67.0587, -44.9342, -25.8353, 0.59", "-68.2814, -45.2884, -26.3933, 0.59", "-69.3718, -45.7728, -26.9952, 0.29", "-69.7016, -45.9552, -27.1975, 1.11", "-71.3787, -46.9089, -28.2168, 0.29", "-71.9804, -47.2506, -28.5796, 0.29", "-72.2272, -47.418, -28.7517, 0.66", "-73.8484, -48.7965, -30.0985, 0.44", "-74.0272, -48.9794, -30.2609, 0.81" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-53.4816, -39.7837, -20.3222, 0.59", "-54.6473, -40.7271, -20.1021, 0.59", "-54.7069, -40.7733, -20.0938, 0.59", "-55.1617, -41.116, -20.0414, 0.52", "-55.2621, -41.184, -20.0246, 0.74", "-56.2829, -41.8471, -19.8235, 0.37", "-57.7076, -42.7225, -19.5422, 0.59", "-58.9196, -43.3794, -19.3369, 0.29", "-59.3176, -43.5805, -19.2712, 0.88", "-60.3672, -44.1423, -19.1816, 0.74", "-60.5716, -44.2528, -19.1743, 0.74", "-61.8698, -44.9272, -19.1759, 0.22", "-62.1716, -45.0849, -19.1952, 0.88", "-62.3321, -45.1736, -19.2243, 0.88", "-64.5135, -46.5887, -19.9113, 1.47", "-65.4456, -47.331, -20.3978, 1.47" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-24.7467, 27.5487, -15.2404, 1.18", "-24.84, 28.3673, -16.202, 1.18", "-24.8661, 28.7005, -16.6842, 1.4", "-24.878, 29.2883, -17.6269, 1.4", "-24.8617, 29.6004, -18.127, 1.33", "-24.7728, 30.9211, -20.2498, 0.29", "-24.7706, 31.0434, -20.4806, 0.29", "-24.7724, 31.7503, -21.9485, 0.29", "-24.7876, 32.4182, -23.4164, 1.03", "-24.7981, 32.6566, -23.9371, 1.92", "-24.8061, 32.7679, -24.171, 1.92", "-25.0913, 34.7581, -27.8568, 0.22", "-25.1575, 35.0708, -28.3891, 0.22", "-25.2107, 35.2407, -28.6429, 0.22", "-25.3569, 35.5891, -29.1267, 1.11", "-25.4837, 35.8334, -29.4457, 1.11", "-26.0347, 36.7415, -30.4109, 0.29", "-26.2148, 36.9424, -30.5258, 0.29", "-26.4063, 37.1014, -30.6242, 0.29", "-26.5611, 37.2002, -30.6863, 0.29", "-27.1923, 37.5333, -31.032, 0.96", "-27.8735, 37.8547, -31.4498, 1.47", "-28.4719, 38.1159, -31.8399, 1.77", "-28.8893, 38.3106, -32.141, 1.84", "-29.2811, 38.5184, -32.4486, 1.55", "-31.1379, 39.6379, -34.0062, 0.66", "-31.264, 39.7257, -34.1197, 0.59", "-31.8346, 40.181, -34.6798, 0.22", "-32.0837, 40.4173, -34.9346, 0.22", "-32.3752, 40.7335, -35.2037, 0.22", "-32.626, 41.0471, -35.4063, 0.22", "-32.8453, 41.3421, -35.5222, 0.22", "-33.0825, 41.6683, -35.6587, 0.22", "-33.5381, 42.3036, -35.9321, 1.03", "-33.8914, 42.7539, -36.1555, 1.62", "-34.5628, 43.5526, -36.6151, 1.84", "-34.6097, 43.6083, -36.6515, 1.84", "-34.8664, 43.9208, -36.8789, 1.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-24.7467, 27.5487, -15.2404, 1.4", "-24.9005, 27.4823, -15.2152, 1.4", "-25.9361, 27.0497, -15.03, 0.59", "-26.3154, 26.9014, -14.9636, 0.88", "-26.8292, 26.7455, -14.881, 1.11", "-27.4062, 26.6147, -14.8007, 0.81", "-27.8411, 26.5387, -14.7679, 0.59", "-28.5058, 26.4847, -14.7737, 0.59", "-28.7507, 26.4925, -14.8047, 0.59", "-29.4327, 26.5951, -14.9092, 0.59", "-29.8991, 26.7052, -14.9909, 0.66", "-30.5122, 26.9103, -15.1269, 0.88", "-30.7216, 26.9986, -15.1918, 1.11", "-30.8889, 27.0845, -15.2692, 1.25", "-31.2586, 27.2746, -15.4651, 1.25" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.15419, 25.0802, -3.27215, 2.21", "-5.33009, 25.3287, -3.50172, 2.21", "-6.2549, 26.5077, -4.59513, 1.03", "-6.74276, 27.1504, -5.13958, 0.81", "-7.40526, 28.0146, -5.83334, 0.81", "-8.1041, 28.9139, -6.49911, 1.11", "-8.40835, 29.2971, -6.76014, 1.11", "-8.85835, 29.8665, -7.10594, 1.33", "-9.37947, 30.5237, -7.45219, 1.55", "-9.78928, 31.0239, -7.60976, 1.4", "-10.4208, 31.781, -7.68003, 0.96", "-10.8554, 32.3059, -7.65005, 0.96", "-11.129, 32.6376, -7.62841, 1.03", "-11.3748, 32.9521, -7.60551, 0.52", "-12.132, 33.8396, -7.58348, 0.59", "-12.4318, 34.2247, -7.59419, 0.44", "-12.5902, 34.4349, -7.62366, 0.37", "-13.1249, 35.1587, -7.87245, 0.37", "-13.3611, 35.4709, -8.05368, 0.74", "-13.7029, 35.9282, -8.39449, 1.11", "-13.9101, 36.2094, -8.66361, 1.4", "-14.1699, 36.5642, -9.01762, 1.4", "-14.6502, 37.1917, -9.68201, 1.25", "-15.199, 37.8795, -10.4164, 1.11", "-15.5491, 38.2946, -10.8613, 0.96", "-16.3704, 39.2454, -11.833, 0.44", "-16.623, 39.53, -12.1062, 0.44", "-17.2251, 40.2087, -12.7165, 0.88", "-17.4432, 40.4724, -12.9195, 0.96", "-17.8603, 41.008, -13.2565, 0.66", "-18.2013, 41.473, -13.5009, 0.52", "-18.7, 42.2115, -13.7733, 0.29", "-19.318, 43.1641, -14.0639, 1.4", "-19.6964, 43.81, -14.2328, 1.84", "-19.8938, 44.17, -14.3361, 1.84", "-19.9702, 44.322, -14.3851, 1.84", "-20.3049, 44.986, -14.5728, 0.44", "-20.6589, 45.669, -14.6069, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.15419, 25.0802, -3.27215, 2.06", "-4.84074, 25.9399, -3.31954, 2.06", "-3.80256, 28.4892, -3.55649, 1.33", "-3.38322, 29.6491, -3.56189, 1.33", "-2.74452, 31.4793, -3.47542, 1.1", "-1.94419, 34.0058, -3.28141, 1.25", "-1.65848, 35.1959, -3.14528, 1.2", "-1.39464, 36.5, -2.97393, 1.35", "-1.03368, 39.3017, -2.59572, 1.2", "-0.946408, 40.6623, -2.33693, 1.4", "-0.936362, 42.3201, -1.8923, 1.33", "-1.1321, 44.9551, -0.992657, 0.74", "-1.17096, 45.2468, -0.885411, 0.96", "-1.32593, 46.0393, -0.618308, 1.25", "-1.41912, 46.4499, -0.527052, 1.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "-6.75716, -44.525, 14.1575, 0.37", "-6.13252, -44.1122, 13.9611, 0.37", "-5.96462, -44.0012, 13.9083, 0.37", "-5.45574, -43.6649, 13.7484, 0.37", "-5.30727, -43.5668, 13.7017, 0.52", "-5.21621, -43.5066, 13.6731, 0.52", "-5.16493, -43.4727, 13.657, 0.52", "1.61529, -39.5257, 12.8271, 0.52", "8.68227, -36.1898, 11.6561, 0.52", "15.4279, -32.1036, 11.6738, 0.52", "22.7536, -29.2135, 12.4303, 0.52", "29.422, -25.5059, 14.4667, 0.52" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "-6.75716, -44.525, 14.1575, 0.44", "-7.63405, -44.8892, 14.1528, 0.44", "-8.24226, -45.1419, 14.1496, 0.44", "-8.72279, -45.3415, 14.147, 0.44", "-9.10435, -45.5001, 14.145, 0.44", "-9.71455, -45.7536, 14.1417, 0.37", "-10.1157, -45.9202, 14.1396, 0.37", "-21.1147, -49.6628, 13.3186, 0.37", "-32.2149, -53.1984, 13.2635, 0.37", "-43.2288, -56.3921, 11.1839, 0.37", "-53.8038, -59.1758, 7.13982, 0.37", "-64.6667, -61.5287, 3.60714, 0.37", "-75.5566, -64.9338, 1.24332, 0.37" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "-6.45005, -54.2541, 19.4047, 0.96", "-6.4386, -55.0772, 19.3739, 0.96", "-6.42971, -55.716, 19.3501, 0.96", "-6.422, -56.271, 19.3293, 0.88", "-6.41527, -56.7549, 19.3112, 0.88" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-6.45005, -54.2541, 19.4047, 0.44", "-7.36746, -54.7455, 19.4118, 0.44", "-7.69324, -54.9052, 19.3968, 0.44", "-8.1028, -55.0958, 19.3671, 0.44", "-8.82454, -55.3986, 19.2955, 0.44", "-9.26766, -55.5665, 19.2427, 0.44", "-9.44456, -55.629, 19.2191, 0.66", "-9.89652, -55.7843, 19.1013, 0.81", "-9.96519, -55.8059, 19.0833, 0.81", "-10.3521, -55.9009, 18.9812, 0.74", "-10.5633, -55.9159, 18.9243, 0.74", "-10.7223, -55.9088, 18.8809, 0.74", "-22.673, -59.0722, 19.2668, 0.74", "-34.8848, -60.1591, 20.9504, 0.74", "-46.585, -62.6423, 24.1112, 0.74" ],
    "parent" : "dend_119",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "6.13366, -51.6402, 9.46897, 0.66", "6.68366, -52.8267, 9.32525, 0.66", "7.1347, -53.7998, 9.20738, 0.66", "7.4941, -54.5751, 9.11346, 1.11", "7.83505, -55.3107, 9.02436, 1.11", "8.02326, -55.7167, 8.97518, 1.11", "8.05161, -55.7779, 8.96777, 1.11" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "6.13366, -51.6402, 9.46897, 0.29", "6.36405, -50.8951, 9.34626, 0.29", "6.37442, -50.8384, 9.33675, 0.29", "6.39298, -50.1595, 9.20651, 0.29", "6.38963, -50.0946, 9.19402, 0.29", "6.29606, -49.0468, 9.00732, 0.29", "6.22904, -48.4166, 8.90146, 0.52", "6.13909, -47.9029, 8.81748, 0.66", "5.95756, -47.026, 8.67927, 0.37", "5.85377, -46.6264, 8.61631, 0.37", "5.6447, -45.8995, 8.50914, 0.44", "5.6283, -45.8544, 8.50387, 0.44", "5.59805, -45.7662, 8.49342, 0.44", "5.58607, -45.7109, 8.48941, 0.44", "3.42143, -37.9865, 8.03141, 0.44", "0.470743, -30.4999, 7.94841, 0.44" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "0.0681273, -35.7252, -38.3577, 0.44", "1.89605, -36.0534, -38.5552, 0.44", "3.23141, -36.3071, -38.7195, 0.44", "4.93612, -36.6391, -38.947, 0.29", "6.15287, -36.8835, -39.1232, 0.29", "7.00717, -37.0859, -39.3, 0.29", "7.05997, -37.1005, -39.3137, 0.29", "7.22825, -37.1688, -39.3881, 0.59", "7.28856, -37.2003, -39.425, 0.59", "7.42458, -37.29, -39.5464, 1.03", "8.42881, -37.9895, -40.5221, 0.22", "8.78063, -38.2295, -40.8646, 0.22", "8.82591, -38.2571, -40.9046, 0.22", "9.27114, -38.4914, -41.2637, 0.96", "9.32206, -38.5141, -41.3, 0.96", "9.89264, -38.6904, -41.6405, 1.62", "9.96477, -38.7019, -41.6758, 1.62", "10.6766, -38.7868, -42.0254, 1.62", "11.0477, -38.8251, -42.2079, 1.18", "11.4876, -38.8765, -42.457, 0.66", "12.2632, -39.0113, -42.9447, 0.22", "12.7025, -39.1265, -43.2497, 0.22", "13.242, -39.3429, -43.6797, 0.22", "13.4209, -39.4521, -43.8452, 0.22", "13.958, -39.9336, -44.4438, 0.22", "14.2455, -40.3036, -44.8694, 0.96", "14.453, -40.6445, -45.2294, 0.96", "14.7114, -41.1094, -45.7053, 0.37", "14.8947, -41.4205, -46.0345, 0.37", "15.211, -41.8478, -46.501, 0.96", "15.7524, -42.4447, -47.1381, 1.62", "16.1335, -42.8316, -47.5502, 1.92", "16.1701, -42.8695, -47.59, 1.92", "16.6969, -43.4369, -48.1418, 0.66", "17.3052, -44.1286, -48.7484, 0.29", "17.8745, -44.7948, -49.2679, 0.29", "18.1569, -45.1407, -49.5014, 0.29", "18.6753, -45.7931, -49.9145, 0.74", "18.9526, -46.1479, -50.1201, 1.18", "19.3807, -46.7079, -50.4149, 1.62", "19.4194, -46.7572, -50.4405, 1.62", "20.1545, -47.5793, -50.8808, 0.29", "20.7853, -48.2471, -51.3324, 0.29", "21.2884, -48.7517, -51.7231, 0.29", "21.3271, -48.791, -51.7582, 0.29", "21.5765, -49.0475, -52.0124, 0.66", "21.9476, -49.4455, -52.4403, 0.96", "22.847, -50.4608, -53.5931, 1.33", "22.9536, -50.592, -53.7361, 1.33", "23.3741, -51.1075, -54.2778, 1.69", "23.5952, -51.3716, -54.536, 1.33", "24.018, -51.8508, -54.9707, 0.81", "24.5771, -52.469, -55.4725, 0.22", "24.8449, -52.7373, -55.6433, 0.22", "25.1425, -53.0273, -55.8343, 0.74", "25.496, -53.3579, -56.0616, 1.25", "25.8098, -53.637, -56.2506, 1.25" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "0.0681273, -35.7252, -38.3577, 0.37", "-0.0196081, -36.7258, -38.465, 0.37", "-0.0702467, -37.2748, -38.5288, 0.37", "-0.172918, -37.9039, -38.6762, 0.88", "-0.24055, -38.2273, -38.7621, 0.96", "-0.418348, -39.2305, -38.9068, 0.52", "-0.491287, -39.5847, -38.9507, 0.52", "-0.50647, -39.648, -38.9546, 0.52", "-0.76077, -40.6276, -38.9764, 0.96", "-0.907366, -41.0661, -39.014, 1.18", "-1.39358, -42.3523, -39.1145, 0.44", "-1.9302, -43.5835, -39.2203, 0.44", "-2.30441, -44.3518, -39.2939, 0.44", "-2.84068, -45.3715, -39.3838, 0.44", "-3.7124, -46.8662, -39.4582, 1.25", "-4.03968, -47.3602, -39.4915, 1.18", "-4.63573, -48.1501, -39.559, 0.59", "-4.96856, -48.5674, -39.563, 0.52", "-5.29226, -48.9515, -39.5636, 0.52", "-5.86712, -49.6618, -39.5126, 0.52", "-6.38298, -50.4565, -39.3911, 1.33", "-6.51866, -50.71, -39.3691, 1.84", "-6.69829, -51.1188, -39.3397, 1.25", "-7.06923, -52.0769, -39.3183, 0.44", "-7.43321, -53.1103, -39.3103, 0.22", "-7.63848, -53.787, -39.2751, 0.22", "-7.89309, -54.7136, -39.1589, 0.22", "-8.07874, -55.3494, -39.0673, 0.22", "-8.09141, -55.3956, -39.0587, 0.22", "-8.28219, -56.1511, -38.878, 0.22", "-8.51657, -57.046, -38.6574, 1.47", "-8.53087, -57.1004, -38.6461, 1.47", "-8.78526, -58.3264, -38.45, 1.47", "-9.10635, -59.8702, -38.3426, 0.44", "-9.21949, -60.2874, -38.3703, 0.81", "-9.32428, -60.6367, -38.4289, 1.11", "-9.67176, -61.6955, -38.6717, 0.29", "-10.0662, -62.8448, -38.9513, 0.29", "-10.3646, -63.7174, -39.1829, 0.88", "-11.0775, -65.6513, -39.741, 0.29", "-11.2083, -65.9854, -39.8322, 0.29", "-11.3642, -66.3688, -39.9328, 0.74", "-11.525, -66.7537, -40.0205, 1.25", "-12.1157, -68.2118, -40.3024, 0.29", "-12.6572, -69.6872, -40.493, 0.29", "-12.9955, -70.6462, -40.567, 0.88", "-13.0325, -70.7447, -40.5751, 0.88", "-13.2647, -71.2911, -40.6427, 1.33", "-13.6097, -71.9972, -40.7387, 0.88", "-14.401, -73.3872, -40.9047, 0.22", "-14.4304, -73.4366, -40.9095, 0.88", "-14.465, -73.494, -40.9146, 0.88", "-15.2055, -74.6955, -40.997, 0.29", "-15.6027, -75.3191, -41.0455, 0.29", "-15.8808, -75.744, -41.0653, 0.96", "-16.1652, -76.205, -41.0796, 0.96", "-16.6319, -77.0725, -41.0955, 0.44", "-16.8823, -77.616, -41.0996, 0.44", "-17.1326, -78.3512, -41.1009, 1.03", "-17.2705, -78.7514, -41.144, 1.4", "-17.5933, -79.6742, -41.2829, 0.44", "-17.8848, -80.5475, -41.4278, 0.44", "-18.2173, -81.5671, -41.6223, 0.29", "-18.4969, -82.4602, -41.8178, 0.29", "-19.101, -84.3967, -42.2568, 0.29", "-19.3019, -85.0225, -42.4127, 0.29", "-19.5503, -85.7633, -42.6126, 0.29", "-19.8025, -86.4267, -42.8247, 1.03", "-20.0076, -86.9352, -43.006, 1.03" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "28.9737, -77.3074, 18.4515, 1.33", "32.7019, -86.2627, 24.322, 1.33" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "28.9737, -77.3074, 18.4515, 0.44", "32.4208, -83.8355, 23.0157, 1.33" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "2.15739, -84.1622, -57.6162, 0.22", "2.03335, -84.3641, -57.8663, 0.22", "1.89321, -84.621, -58.1169, 0.22", "1.79638, -84.9012, -58.4941, 0.22", "1.6191, -85.5628, -59.3828, 0.96", "1.5809, -85.729, -59.5947, 0.96", "1.48318, -86.1546, -60.0829, 0.22", "1.3939, -86.6313, -60.5857, 0.22", "1.19683, -88.13, -62.1001, 0.59", "1.14916, -88.6543, -62.5746, 0.22", "1.12422, -88.9736, -62.813, 0.22", "1.09297, -89.5715, -63.2117, 0.88", "1.08074, -89.7945, -63.3391, 1.03", "0.986826, -90.9803, -63.859, 0.22", "0.90115, -91.6528, -64.0237, 0.22", "0.827064, -92.2431, -64.1806, 0.22", "0.785254, -92.4886, -64.2527, 0.22", "0.73177, -92.7787, -64.3749, 0.66", "0.647775, -93.1408, -64.5474, 0.44", "0.61564, -93.2666, -64.625, 0.37", "0.510284, -93.7175, -64.9821, 0.22", "0.406805, -94.2548, -65.5382, 0.22", "0.277172, -95.0022, -66.3877, 0.59", "0.244081, -95.2663, -66.7082, 0.74", "0.182946, -95.9806, -67.6432, 0.74", "0.172052, -96.1705, -67.9028, 0.96", "0.100491, -97.4037, -69.6566, 0.15", "0.0956057, -97.4759, -69.7649, 0.37", "0.00941751, -97.9733, -70.5187, 0.15", "-0.0680143, -98.2666, -71.0012, 0.66", "-0.0817335, -98.2972, -71.055, 0.66", "-0.226379, -98.5075, -71.4503, 0.66", "-0.664266, -98.8599, -72.1794, 0.22", "-0.920576, -99.0258, -72.5398, 0.22", "-0.953869, -99.0444, -72.5819, 0.52", "-1.11936, -99.1418, -72.7759, 0.37", "-1.39074, -99.3119, -73.0843, 0.22", "-1.94267, -99.704, -73.7985, 0.88", "-2.05453, -99.7889, -73.9475, 0.88", "-2.35697, -100.045, -74.4033, 0.74", "-2.71698, -100.356, -74.9613, 0.22", "-2.95828, -100.576, -75.3399, 0.22", "-3.41561, -100.991, -76.0345, 0.81", "-3.53531, -101.103, -76.2106, 0.81", "-3.87449, -101.436, -76.7324, 0.15", "-4.00183, -101.576, -76.9285, 0.15", "-4.13019, -101.758, -77.1632, 0.44", "-4.20346, -101.886, -77.3039, 0.74", "-4.51616, -102.472, -77.8097, 0.22", "-4.52584, -102.51, -77.8458, 0.22", "-4.53949, -102.956, -78.2537, 0.15", "-4.51912, -103.225, -78.4999, 0.66", "-4.50893, -103.293, -78.5609, 1.03", "-4.48006, -103.459, -78.7015, 1.03", "-4.29068, -104.513, -79.6419, 0.29", "-4.24744, -104.863, -79.9716, 0.22", "-4.23058, -105.035, -80.1312, 0.22", "-4.19284, -105.529, -80.5468, 0.81", "-4.17984, -105.767, -80.7214, 0.81", "-4.13986, -106.626, -81.2796, 0.22", "-4.15463, -107.067, -81.519, 0.22", "-4.15803, -107.517, -81.8233, 0.29", "-4.16851, -107.788, -82.0253, 0.29", "-4.19271, -108.104, -82.2672, 0.29", "-4.23138, -108.628, -82.7102, 0.96", "-4.25401, -108.913, -82.9591, 1.25", "-4.32594, -109.933, -83.9025, 0.22", "-4.36525, -110.301, -84.276, 0.22", "-4.40201, -110.572, -84.5689, 0.22", "-4.52331, -111.351, -85.4447, 0.88", "-4.53732, -111.442, -85.5432, 1.25", "-4.56134, -111.756, -85.8663, 1.25" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "2.15739, -84.1622, -57.6162, 0.29", "2.67186, -86.3129, -55.4222, 0.29", "2.81737, -86.8608, -54.9276, 0.29", "2.99171, -87.527, -54.4682, 0.29", "3.15762, -88.1918, -54.1948, 0.96", "3.35176, -89.351, -53.9608, 1.33", "3.42289, -90.4533, -53.9925, 0.29", "3.41463, -91.0105, -54.1932, 0.29", "3.24997, -93.3982, -55.2762, 0.66", "3.19446, -94.1366, -55.6479, 1.03", "3.13701, -95.1973, -56.2295, 1.4", "3.11039, -96.5497, -56.9912, 0.29", "3.11339, -97.1811, -57.2946, 0.29", "3.11619, -97.2701, -57.322, 0.29", "3.23474, -98.4363, -57.398, 0.29", "3.2993, -98.8434, -57.4257, 0.81", "3.44454, -99.4443, -57.458, 0.81", "3.59183, -100.094, -57.4758, 0.22", "3.6887, -100.717, -57.6125, 0.22", "3.74504, -101.298, -57.8076, 0.22", "3.75848, -102.273, -58.2038, 0.81", "3.76017, -102.885, -58.4648, 1.25", "3.7732, -103.736, -58.8323, 1.62", "3.88352, -105.735, -59.7322, 0.29", "3.94868, -106.401, -60.033, 0.29", "4.09529, -107.406, -60.4544, 0.29", "4.22519, -108.098, -60.6932, 0.29", "4.36551, -108.772, -60.8986, 0.29", "4.62385, -109.747, -61.1923, 0.29", "4.79966, -110.297, -61.3551, 0.74", "5.09944, -111.07, -61.6332, 1.33", "5.5052, -112.07, -62.0269, 1.33", "5.70624, -112.628, -62.2265, 1.33", "6.15659, -114.048, -62.6587, 0.52", "6.37726, -114.865, -62.8468, 0.37", "6.60746, -115.978, -63.1531, 0.37", "6.74654, -116.819, -63.402, 0.37", "6.88487, -117.88, -63.7469, 0.81", "6.95393, -118.584, -63.9743, 1.11", "6.98944, -119.25, -64.2004, 0.74", "7.0956, -121.506, -65.0977, 0.22", "7.10506, -121.743, -65.2133, 0.66", "7.12914, -122.069, -65.3921, 1.11", "7.13552, -122.138, -65.4332, 1.11", "7.24446, -123.308, -66.1121, 0.29", "7.33215, -124.135, -66.6493, 0.29", "7.39252, -124.652, -66.9585, 0.52", "7.42438, -124.944, -67.1425, 1.03", "7.45007, -125.21, -67.3134, 1.03", "7.46038, -125.304, -67.3815, 1.03", "7.61966, -127.241, -68.9402, 0.29", "7.66266, -127.801, -69.4407, 0.29", "7.69897, -128.103, -69.7331, 0.29", "7.70826, -128.162, -69.7872, 0.29", "7.89271, -129.073, -70.5239, 0.74", "7.9962, -129.588, -70.9104, 1.25", "8.04769, -129.874, -71.0965, 1.25", "8.24502, -131.13, -71.9594, 0.44", "8.36725, -131.943, -72.5132, 0.37", "8.43122, -132.596, -72.9138, 0.37", "8.53997, -133.804, -73.5374, 0.29", "8.58126, -134.113, -73.6794, 0.29", "8.67665, -134.713, -73.9087, 0.66", "8.72581, -134.967, -73.9984, 1.03", "9.02968, -136.15, -74.4934, 0.29", "9.29968, -137.004, -74.8451, 0.29", "9.57369, -137.705, -75.0932, 0.29", "9.79003, -138.194, -75.2744, 0.29", "10.3808, -139.376, -75.7358, 1.18", "10.5605, -139.688, -75.8859, 0.07", "10.8798, -140.078, -76.168, 1.18" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-10.1498, -30.8288, -0.251341, 1.18", "-10.8052, -31.4189, 0.200295, 1.18", "-11.3153, -31.7749, 0.4576, 1.18", "-11.7861, -32.0398, 0.638725, 0.59", "-12.5215, -32.4018, 0.857416, 0.52", "-12.9542, -32.6046, 0.960628, 0.22", "-13.3542, -32.7988, 1.04297, 0.22", "-13.9554, -33.0661, 1.08871, 0.22", "-14.2607, -33.2098, 1.09134, 0.22", "-14.6052, -33.4102, 1.09349, 0.22", "-14.9001, -33.6315, 1.09001, 0.37", "-15.1959, -33.8787, 1.13742, 0.44", "-15.5892, -34.2085, 1.24041, 0.44", "-16.0654, -34.5912, 1.38676, 0.37", "-16.7146, -35.0461, 1.56566, 0.81", "-16.981, -35.1967, 1.62672, 1.25", "-17.8803, -35.5934, 1.78401, 0.81", "-18.5968, -35.8313, 1.86889, 0.29", "-19.0874, -35.9423, 1.91297, 0.29", "-19.6547, -36.0228, 1.93742, 0.66", "-20.045, -36.0628, 1.92349, 1.11", "-20.3484, -36.1062, 1.90064, 0.59", "-20.5577, -36.1589, 1.90292, 0.44", "-20.9245, -36.3226, 2.01419, 0.74", "-21.2628, -36.535, 2.33178, 0.37", "-21.5885, -36.7742, 2.74404, 0.22", "-21.8575, -36.9844, 3.15559, 0.22", "-22.4863, -37.4942, 4.20478, 0.66", "-22.5955, -37.585, 4.39138, 0.81", "-23.3756, -38.2512, 5.72007, 0.44", "-23.5211, -38.3772, 5.97765, 0.15", "-23.7881, -38.5994, 6.43468, 0.22", "-23.917, -38.7016, 6.63088, 0.22", "-24.0968, -38.8711, 6.8595, 0.44", "-24.2521, -39.0337, 7.01908, 1.18", "-24.4565, -39.2887, 7.16103, 1.18", "-24.6441, -39.5241, 7.2737, 0.88", "-25.2798, -40.2227, 7.62036, 0.52", "-25.5249, -40.4477, 7.76974, 0.37", "-26.012, -40.8418, 8.07034, 0.29", "-26.3623, -41.0977, 8.27554, 0.29", "-26.7539, -41.3603, 8.47984, 0.44", "-27.6526, -41.907, 8.98234, 0.37", "-28.3469, -42.3043, 9.37045, 0.37", "-28.6105, -42.4448, 9.52795, 0.37", "-28.9347, -42.6098, 9.73986, 0.66", "-29.385, -42.8334, 10.0531, 0.37", "-30.6051, -43.4816, 10.9723, 0.29", "-30.7194, -43.5498, 11.059, 1.03", "-30.8903, -43.6571, 11.1941, 1.25", "-38.1322, -49.4495, 14.9603, 1.25", "-46.5652, -53.9037, 18.1295, 1.25", "-54.7991, -58.6446, 21.3811, 1.25" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-10.1498, -30.8288, -0.251341, 0.66", "-11.1617, -30.7614, -0.35408, 0.66", "-11.8357, -30.7116, -0.458517, 0.29", "-12.001, -30.7006, -0.486813, 0.29", "-12.4368, -30.679, -0.550545, 0.29", "-12.7663, -30.6636, -0.593144, 0.29", "-13.6183, -30.6145, -0.680247, 0.44", "-13.7774, -30.6074, -0.694061, 0.44", "-14.0311, -30.5884, -0.710871, 0.88", "-14.6889, -30.5419, -0.815393, 1.25", "-14.8087, -30.5313, -0.83706, 1.25", "-15.2733, -30.4903, -0.910925, 1.25", "-15.6891, -30.4522, -0.992711, 1.11", "-16.3252, -30.3911, -1.14598, 1.03", "-17.4709, -30.3083, -1.60094, 0.81", "-18.1384, -30.293, -1.93619, 0.29", "-18.6447, -30.3067, -2.21359, 0.37", "-19.6317, -30.3818, -2.79777, 0.66", "-19.9045, -30.4144, -2.96456, 0.66", "-21.4365, -30.6887, -3.88469, 0.15", "-21.8967, -30.7934, -4.15501, 0.15", "-22.3129, -30.9049, -4.39597, 0.15", "-22.4759, -30.9516, -4.47685, 0.81", "-22.7799, -31.0459, -4.57116, 1.18", "-23.0994, -31.1441, -4.62855, 0.59", "-23.9778, -31.4111, -4.65261, 0.29", "-24.3798, -31.5405, -4.67136, 0.29", "-24.6942, -31.6628, -4.68634, 0.52", "-25.1069, -31.851, -4.70025, 0.66", "-25.4139, -32.0151, -4.72741, 0.81", "-25.8282, -32.2671, -4.87534, 0.29", "-26.1442, -32.4808, -5.09995, 0.22", "-26.512, -32.7232, -5.44959, 0.22", "-26.6997, -32.8471, -5.65165, 0.22", "-27.2883, -33.2272, -6.30063, 0.74", "-28.4692, -33.9652, -7.53237, 0.74", "-29.2278, -34.4238, -8.35867, 0.44", "-29.8135, -34.7602, -9.00593, 0.88", "-30.0004, -34.8655, -9.2052, 1.33", "-30.4557, -35.116, -9.66028, 1.03", "-31.0495, -35.4363, -10.1873, 0.81", "-32.9715, -36.4272, -11.5836, 0.37", "-33.7243, -36.7971, -12.0901, 0.22", "-34.1877, -37.0254, -12.4056, 0.22", "-34.2791, -37.0702, -12.4686, 0.22", "-34.4621, -37.1661, -12.5965, 0.59", "-34.8443, -37.387, -12.8565, 0.81", "-35.4869, -37.8357, -13.1354, 0.37", "-35.6699, -37.9794, -13.2235, 0.29", "-35.9822, -38.1969, -13.4208, 0.29", "-36.3314, -38.4011, -13.6231, 0.59", "-37.4076, -38.9633, -14.1752, 0.88", "-37.9073, -39.1995, -14.3822, 0.29", "-37.9789, -39.232, -14.4056, 0.29", "-39.3516, -39.8271, -14.7876, 0.29", "-40.4695, -40.3307, -15.0551, 1.47", "-41.102, -40.6258, -15.164, 1.55", "-42.009, -41.0753, -15.2284, 0.37", "-42.4394, -41.3105, -15.242, 0.29", "-42.5156, -41.3594, -15.2429, 0.29", "-43.0173, -41.7886, -15.2148, 0.29", "-43.312, -42.0924, -15.2308, 0.29", "-43.3677, -42.1505, -15.2419, 0.29", "-43.7352, -42.5191, -15.3443, 0.29", "-44.3398, -43.0536, -15.5443, 0.66", "-44.7011, -43.3435, -15.6638, 1.03", "-44.9718, -43.5346, -15.7472, 0.88", "-45.4667, -43.8655, -15.9044, 1.03", "-45.9301, -44.1481, -16.0441, 0.52", "-46.8686, -44.6836, -16.2967, 0.22", "-47.2007, -44.8744, -16.4022, 0.22", "-47.5488, -45.0752, -16.5348, 0.22", "-47.883, -45.2894, -16.6984, 0.22", "-48.0525, -45.4105, -16.8039, 0.22", "-48.4132, -45.6884, -17.0814, 0.22", "-49.3463, -46.4899, -17.8861, 1.11", "-49.5837, -46.7187, -18.1063, 1.33", "-49.9772, -47.1523, -18.4831, 0.74", "-50.2963, -47.5354, -18.7612, 0.37", "-50.436, -47.7084, -18.8707, 0.22", "-50.6782, -48.0142, -19.0221, 0.22", "-50.8497, -48.2219, -19.1413, 0.22", "-51.3319, -48.7898, -19.5212, 1.18", "-51.6802, -49.1963, -19.8102, 1.62", "-52.532, -50.2032, -20.649, 0.22", "-53.038, -50.8207, -21.2244, 0.22", "-54.0743, -52.1173, -22.5472, 0.52", "-54.1178, -52.1706, -22.6056, 0.52", "-54.1886, -52.2558, -22.706, 0.88", "-54.8168, -53.0048, -23.6413, 0.22", "-54.9748, -53.1849, -23.8637, 0.22", "-55.121, -53.3376, -24.0314, 0.22", "-55.4331, -53.6555, -24.2547, 0.37", "-55.6432, -53.8259, -24.3881, 0.37", "-55.8835, -54.0044, -24.5273, 0.37", "-56.4134, -54.3667, -24.7944, 0.88", "-57.5001, -55.0312, -25.3522, 1.25", "-57.8053, -55.2003, -25.4973, 1.4", "-59.5827, -56.1509, -26.2955, 0.29", "-59.9245, -56.3238, -26.4352, 0.44", "-60.35, -56.5322, -26.5891, 0.44", "-61.574, -57.0991, -26.926, 0.59", "-62.5411, -57.5498, -27.0813, 1.25", "-62.9129, -57.7453, -27.1157, 1.25", "-63.1935, -57.9195, -27.1085, 1.25", "-63.4886, -58.1162, -27.0979, 0.96", "-64.0508, -58.5374, -27.0636, 0.59", "-64.7961, -59.1658, -26.9767, 0.29", "-65.3407, -59.6348, -26.9273, 0.29", "-65.6553, -59.8889, -26.9204, 0.29", "-66.2961, -60.3423, -26.9476, 0.74", "-66.6165, -60.5445, -26.974, 1.03", "-66.8203, -60.6658, -26.9974, 1.25", "-67.1057, -60.8281, -27.036, 0.96", "-67.7841, -61.2264, -27.1289, 0.59", "-68.6646, -61.8607, -27.293, 0.29", "-69.2356, -62.3529, -27.4139, 0.29", "-69.6113, -62.709, -27.503, 0.29", "-69.7796, -62.8689, -27.5688, 0.44", "-69.9724, -63.0553, -27.6653, 0.74", "-70.6879, -63.729, -28.0884, 0.29", "-70.9098, -63.9312, -28.2494, 0.29", "-71.1348, -64.1124, -28.4213, 0.22", "-72.2668, -64.9168, -29.2306, 0.22", "-72.4826, -65.0503, -29.3854, 0.96", "-73.0366, -65.3643, -29.7666, 1.33", "-73.3841, -65.5617, -29.9922, 1.11", "-73.8054, -65.8482, -30.2647, 0.37", "-74.1102, -66.0797, -30.4385, 0.22", "-74.9343, -66.717, -30.8142, 0.22", "-75.3038, -66.9702, -30.9787, 0.29", "-75.715, -67.2227, -31.1297, 0.37", "-76.1833, -67.4887, -31.2612, 0.29", "-76.6102, -67.7248, -31.3432, 0.29", "-77.5707, -68.308, -31.4605, 0.74", "-77.9286, -68.5398, -31.4701, 0.74", "-78.6599, -69.0343, -31.5879, 0.22", "-79.2072, -69.3826, -31.7155, 0.22", "-79.4474, -69.5371, -31.7844, 0.37", "-80.0281, -69.971, -31.9696, 0.37", "-80.3191, -70.2266, -32.083, 0.37", "-81.5914, -71.3751, -32.6492, 0.74", "-82.0732, -71.7782, -32.8727, 1.33", "-82.401, -72.0311, -33.0168, 1.33", "-83.1649, -72.5764, -33.3216, 0.96", "-84.4841, -73.471, -33.7721, 0.15", "-84.8954, -73.7572, -33.8714, 0.15", "-85.3971, -74.1343, -33.8997, 0.15", "-85.6842, -74.3768, -33.9053, 0.81", "-85.7428, -74.4297, -33.9012, 0.81", "-86.1192, -74.801, -33.8055, 1.33", "-86.5134, -75.2864, -33.6038, 0.74", "-86.8263, -75.7472, -33.425, 0.96", "-86.9147, -75.8877, -33.3737, 0.96", "-87.2977, -76.4299, -33.177, 0.29", "-87.7372, -76.9643, -32.9865, 0.29", "-88.1088, -77.368, -32.8322, 0.88", "-88.7462, -78.0028, -32.5798, 1.47", "-89.0421, -78.2906, -32.471, 1.47", "-89.9367, -79.1779, -32.0929, 0.52", "-90.7897, -80.0291, -31.6967, 0.52", "-91.2538, -80.5092, -31.4707, 0.52", "-91.5679, -80.8535, -31.2869, 0.52", "-92.0931, -81.4706, -30.9351, 0.52", "-92.5118, -82.0979, -30.5047, 0.74", "-92.7854, -82.6171, -30.1047, 0.74", "-93.163, -83.4664, -29.4196, 0.22", "-93.4808, -84.2707, -28.7961, 0.96", "-93.6052, -84.6614, -28.4751, 1.33", "-94.0257, -86.1416, -27.2089, 0.37", "-94.1837, -86.7972, -26.665, 0.22", "-94.2457, -87.1155, -26.4081, 0.29", "-94.3824, -87.7613, -25.8833, 0.29", "-94.7512, -89.093, -24.8861, 0.96", "-94.8705, -89.4456, -24.6203, 1.4", "-94.9775, -89.7005, -24.4307, 1.69", "-95.1845, -90.137, -24.0936, 1.55", "-96.1004, -91.8534, -22.6331, 0.44", "-96.4186, -92.3574, -22.1702, 0.44", "-96.8255, -92.9292, -21.6805, 0.44", "-96.8887, -93.0137, -21.6107, 0.88", "-97.3678, -93.6124, -21.1395, 1.11", "-98.0678, -94.432, -20.5417, 1.11", "-98.2841, -94.6603, -20.4124, 0.81", "-99.2326, -95.6222, -19.8813, 0.29", "-99.9578, -96.4228, -19.5127, 0.29", "-100.262, -96.8035, -19.3338, 0.66", "-100.392, -96.9879, -19.2507, 1.11", "-100.833, -97.6479, -18.9773, 1.11", "-101.106, -98.1188, -18.7607, 1.11", "-101.639, -99.2169, -18.1975, 0.44", "-102.093, -100.224, -17.7728, 0.37", "-102.293, -100.588, -17.6548, 0.44", "-102.336, -100.652, -17.6399, 0.66", "-102.588, -100.979, -17.575, 0.29", "-103.181, -101.579, -17.5139, 0.29", "-104.279, -102.442, -17.375, 0.81", "-105.148, -103.071, -17.2517, 1.11", "-105.281, -103.168, -17.2171, 1.11", "-105.874, -103.65, -16.9955, 1.03", "-105.919, -103.693, -16.9712, 1.03", "-106.731, -104.67, -16.3517, 0.29", "-106.847, -104.865, -16.2476, 0.29", "-107.092, -105.372, -16.1058, 0.59", "-107.312, -105.817, -16.0579, 0.74", "-107.548, -106.278, -16.0762, 0.44", "-107.772, -106.681, -16.1508, 0.44", "-108.287, -107.575, -16.4144, 0.22", "-108.692, -108.247, -16.6368, 0.59", "-108.917, -108.605, -16.7607, 1.03", "-109.155, -108.971, -16.8851, 0.74", "-109.9, -110.169, -17.1296, 0.29", "-110.385, -111.027, -17.1978, 0.29", "-110.8, -111.869, -17.1626, 0.74", "-111.026, -112.405, -17.0968, 0.74", "-111.209, -112.898, -17.0114, 0.74", "-111.825, -114.794, -16.5682, 0.29", "-111.953, -115.303, -16.3721, 0.29", "-112.045, -115.672, -16.2276, 0.29", "-112.199, -116.264, -15.9964, 1.11", "-112.346, -116.745, -15.8314, 0.96", "-112.536, -117.281, -15.6963, 0.81", "-113.193, -118.735, -15.5457, 0.22", "-113.799, -119.921, -15.4237, 0.22", "-113.951, -120.22, -15.356, 0.66", "-114.075, -120.508, -15.262, 1.11", "-114.2, -120.863, -15.1292, 0.66", "-114.286, -121.22, -14.9401, 0.66", "-114.295, -121.278, -14.9024, 0.66", "-114.435, -122.646, -13.8883, 0.22", "-114.556, -123.264, -13.4892, 0.22", "-114.646, -123.607, -13.2956, 0.66", "-115.006, -124.578, -12.856, 1.18", "-115.034, -124.647, -12.8299, 1.18", "-115.294, -125.197, -12.6631, 1.18", "-116.109, -126.704, -12.3942, 0.37", "-116.189, -126.843, -12.3711, 0.59", "-116.684, -127.645, -12.2549, 0.59", "-117.2, -128.459, -12.1729, 0.59", "-117.287, -128.614, -12.1503, 0.66", "-117.463, -128.985, -12.0751, 0.74", "-117.49, -129.054, -12.0501, 0.74", "-117.593, -129.284, -11.9593, 0.74", "-118.063, -130.196, -11.5778, 0.22", "-118.418, -130.766, -11.3436, 0.22", "-118.658, -131.121, -11.1912, 0.22", "-119.217, -131.822, -10.8831, 1.03", "-119.609, -132.286, -10.681, 1.4", "-119.654, -132.336, -10.6599, 1.4", "-120.051, -132.746, -10.4902, 1.4", "-120.522, -133.228, -10.3131, 0.66", "-121.381, -134.198, -9.97758, 0.29", "-121.438, -134.267, -9.9566, 0.29", "-121.891, -134.87, -9.75385, 0.29", "-122.15, -135.258, -9.61726, 0.29", "-122.265, -135.457, -9.5266, 0.29", "-122.727, -136.269, -9.0828, 0.52", "-122.859, -136.532, -8.93878, 1.03", "-123.028, -136.863, -8.76037, 1.03", "-123.1, -137.0, -8.68881, 1.03", "-123.744, -138.163, -8.1028, 0.37", "-124.201, -138.984, -7.73676, 0.29", "-124.584, -139.671, -7.49273, 0.29", "-124.617, -139.727, -7.47523, 0.29", "-124.966, -140.301, -7.31446, 0.74", "-125.241, -140.73, -7.21123, 0.81", "-125.647, -141.36, -7.09649, 0.81", "-126.273, -142.309, -6.92139, 0.29", "-126.974, -143.28, -6.72606, 0.29", "-127.21, -143.6, -6.66148, 0.52", "-127.501, -143.976, -6.59051, 0.66" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.93848, 58.7563, 15.8716, 0.74", "5.91838, 59.0267, 15.8574, 0.74", "5.90869, 59.153, 15.8527, 0.74", "5.91416, 59.3876, 15.8094, 0.44", "5.93621, 59.7309, 15.7005, 0.29", "5.9396, 59.8711, 15.6296, 0.29", "5.94016, 60.0491, 15.5256, 0.66", "5.93529, 60.1829, 15.4343, 0.66", "5.92921, 60.7921, 14.9734, 0.22", "5.94981, 61.1402, 14.6413, 0.22", "6.02238, 61.6516, 14.1204, 0.37", "6.02913, 61.7064, 14.0636, 0.37", "6.06641, 62.0607, 13.702, 0.29", "6.0899, 62.3241, 13.4406, 0.29", "6.14858, 63.1959, 12.6566, 0.96", "6.18641, 63.6435, 12.301, 0.74", "6.24635, 64.2023, 11.9254, 0.52", "6.26609, 64.4088, 11.8038, 0.52", "6.26893, 64.4486, 11.7848, 0.52", "6.26548, 64.7923, 11.6717, 0.52", "6.2618, 64.8767, 11.6647, 0.52", "6.2568, 65.0787, 11.6573, 0.52", "6.28546, 65.4588, 11.6687, 0.52", "6.29108, 65.542, 11.6635, 0.52", "6.30181, 65.8169, 11.6268, 0.52", "6.30335, 65.8979, 11.61, 0.52", "6.30329, 66.0806, 11.5621, 0.52", "6.29933, 66.2393, 11.5118, 0.52", "6.27845, 66.7344, 11.3303, 0.66", "6.27601, 66.8145, 11.3017, 0.66", "6.27392, 66.9563, 11.2616, 0.88", "6.27307, 66.9933, 11.2518, 0.88", "6.26849, 67.2267, 11.1996, 0.88", "6.26653, 67.3156, 11.1847, 0.88", "6.26158, 67.5523, 11.1609, 0.66", "6.25817, 68.0712, 11.1111, 0.29", "6.25521, 68.3845, 11.0827, 0.44", "6.25458, 68.6675, 11.0592, 0.59", "6.25243, 68.9053, 11.0355, 0.96", "6.2473, 69.2262, 11.0013, 1.33", "6.23366, 69.5157, 10.9704, 1.33", "6.21563, 69.7144, 10.9516, 1.11", "6.18528, 69.9525, 10.9342, 1.11", "6.03455, 70.7332, 10.873, 0.52", "6.02245, 70.7766, 10.8703, 0.52", "5.88691, 71.1276, 10.8556, 0.52", "5.79505, 71.3064, 10.8537, 0.44", "5.77153, 71.3441, 10.8546, 0.44", "5.58357, 71.6042, 10.8747, 0.44", "5.40552, 71.8409, 10.9101, 0.81", "5.2853, 72.0356, 10.935, 0.74", "5.14114, 72.3192, 10.9665, 0.81", "5.12663, 72.355, 10.9696, 0.81", "4.99982, 72.731, 10.995, 0.29", "4.92191, 73.0234, 11.0091, 0.29", "4.82139, 73.4549, 11.0215, 0.29", "4.81229, 73.4991, 11.0227, 0.29", "4.73911, 73.8942, 11.0342, 0.29", "4.6726, 74.2309, 11.0439, 1.11", "4.6089, 74.507, 11.0518, 1.47", "4.56351, 74.663, 11.0563, 2.28" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "5.93848, 58.7563, 15.8716, 0.29", "8.43773, 58.9112, 16.3149, 0.29", "9.14879, 58.9065, 17.0849, 0.29", "9.92755, 58.8593, 18.0637, 0.37", "10.1964, 58.838, 18.4559, 0.37", "10.6365, 58.8044, 19.1215, 1.03", "10.8736, 58.7922, 19.4776, 1.03", "13.7291, 58.7803, 24.2709, 0.81", "14.0913, 58.7932, 24.9332, 0.74", "14.9262, 58.8782, 26.5489, 0.37", "15.0636, 58.9111, 26.8163, 0.37", "15.3406, 59.0236, 27.332, 0.37", "16.0009, 59.4349, 28.3106, 0.81", "16.309, 59.7205, 28.5492, 1.25", "16.6799, 60.0562, 28.7722, 1.62", "18.0736, 61.1951, 29.333, 0.52", "18.6185, 61.633, 29.5203, 0.52", "19.2432, 62.1372, 29.678, 0.66", "20.4652, 63.1491, 30.0046, 0.52", "21.5927, 64.132, 30.3363, 0.44", "22.7227, 65.1177, 30.6669, 0.44", "23.4061, 65.7331, 30.9458, 0.44", "24.0473, 66.3728, 31.3624, 0.44", "25.3173, 67.8459, 32.6162, 0.44", "25.6599, 68.3451, 33.1348, 0.44", "25.6896, 68.3929, 33.1934, 0.44", "26.6369, 69.7255, 35.1145, 0.44", "26.8339, 69.914, 35.4172, 0.66", "26.9464, 69.9886, 35.5614, 0.66", "27.3902, 70.1967, 35.9704, 1.11", "27.8995, 70.4106, 36.4157, 1.11", "28.3036, 70.5967, 36.743, 1.03", "28.9561, 70.9698, 37.1868, 0.66", "30.5201, 72.2218, 38.385, 0.66", "30.7425, 72.46, 38.5747, 0.52", "31.0195, 72.8804, 38.8397, 0.52", "31.2768, 73.4177, 39.0949, 0.37", "31.6514, 74.4406, 39.448, 0.37", "31.86, 75.1608, 39.5886, 0.37", "31.9252, 75.3731, 39.6214, 0.52", "32.1643, 75.9939, 39.8143, 0.52", "32.3588, 76.3858, 39.9811, 0.74", "32.4044, 76.4497, 40.0259, 0.74", "32.6692, 76.662, 40.3717, 0.74", "33.8455, 77.2136, 42.2282, 0.74", "33.8952, 77.227, 42.3191, 0.74", "41.6916, 82.1593, 51.3458, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-13.9155, 57.332, 31.5173, 0.29", "-15.109, 58.4276, 32.8874, 0.29", "-15.3191, 58.6953, 33.1663, 0.29", "-15.3863, 58.7971, 33.2584, 0.29", "-15.8314, 59.5144, 33.8279, 0.29", "-15.8587, 59.5642, 33.8716, 0.29", "-16.4228, 60.6161, 34.7639, 0.29", "-16.6051, 61.0609, 35.0833, 0.29", "-16.6972, 61.305, 35.2612, 0.29", "-16.7927, 61.6209, 35.5054, 0.59", "-17.0772, 62.8744, 36.4817, 0.29", "-17.1869, 63.4567, 36.8907, 0.29", "-17.199, 63.5401, 36.94, 0.29", "-17.2706, 64.1452, 37.3134, 0.29", "-17.3339, 65.0753, 37.8825, 0.29", "-17.3313, 65.5766, 38.1664, 0.29", "-17.3019, 65.9026, 38.2968, 1.03", "-17.2309, 66.2928, 38.4762, 1.4", "-20.7348, 73.4997, 44.1552, 1.4", "-23.77, 80.8408, 49.919, 1.4" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-13.9155, 57.332, 31.5173, 0.44", "-14.9262, 56.9776, 31.223, 0.44", "-15.0832, 56.8425, 31.7045, 0.44", "-15.3347, 56.5869, 32.5691, 0.44", "-15.4613, 56.4477, 32.9433, 0.44", "-15.5343, 56.375, 33.1035, 0.59", "-15.727, 56.2059, 33.4337, 0.81", "-17.4456, 54.7012, 36.5193, 0.29", "-17.5309, 54.6291, 36.6735, 0.29", "-17.8692, 54.3142, 37.2993, 0.29", "-18.3021, 53.883, 38.1197, 0.29", "-18.6071, 53.5747, 38.6647, 0.29", "-19.0576, 53.1372, 39.2968, 0.29", "-19.2139, 53.0404, 39.3439, 0.29", "-19.7371, 52.7473, 39.5199, 0.29", "-28.7669, 46.8466, 47.5463, 0.29", "-37.1313, 41.157, 56.412, 0.29", "-44.7634, 37.2031, 66.8067, 0.29", "-52.5011, 32.3341, 76.6998, 0.29" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-50.1727, 9.6203, 55.0843, 0.29", "-57.2873, 5.10522, 59.4362, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-50.1727, 9.6203, 55.0843, 0.44", "-61.829, 6.32187, 57.9498, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-65.4456, -47.331, -20.3978, 1.47", "-65.8194, -47.0082, -20.7489, 1.47", "-66.6523, -46.315, -21.4138, 0.44", "-67.6742, -45.5183, -22.1277, 0.44", "-67.7335, -45.4742, -22.1659, 0.44", "-69.1108, -44.4491, -23.0535, 0.29", "-70.4702, -43.4372, -23.9296, 0.29", "-71.2502, -42.8695, -24.4493, 0.59", "-72.1198, -42.3167, -25.0416, 0.29", "-72.7322, -41.9795, -25.4017, 0.74" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-65.4456, -47.331, -20.3978, 0.44", "-67.3167, -47.8643, -20.606, 0.44", "-67.8338, -48.0084, -20.7374, 0.88", "-68.1765, -48.0971, -20.8568, 1.4", "-68.312, -48.1318, -20.909, 1.55", "-68.3918, -48.1515, -20.9421, 1.55", "-69.9912, -48.3969, -21.5628, 0.44", "-70.2329, -48.4333, -21.6977, 1.4", "-70.6455, -48.4826, -21.9458, 1.69", "-71.0502, -48.5211, -22.1975, 1.25", "-71.3028, -48.5383, -22.3668, 0.74", "-72.715, -48.6021, -23.3547, 0.22", "-73.5768, -48.6136, -23.9765, 0.96", "-74.0663, -48.6111, -24.3613, 0.96", "-74.4438, -48.6004, -24.6818, 0.52", "-75.5891, -48.5392, -25.7338, 0.29", "-75.6728, -48.5351, -25.8147, 0.29", "-75.769, -48.5224, -25.9074, 0.59", "-76.3457, -48.3561, -26.3411, 0.74", "-76.7145, -48.1832, -26.4612, 0.96", "-76.7726, -48.1491, -26.47, 0.96", "-76.9516, -48.0378, -26.483, 1.18", "-78.0784, -47.3863, -26.575, 1.18", "-78.1293, -47.3583, -26.579, 1.18", "-80.355, -46.1999, -26.755, 0.44", "-80.9781, -45.8778, -26.8109, 0.44", "-81.5726, -45.5833, -26.8843, 0.44", "-82.083, -45.3663, -26.984, 0.81", "-82.1455, -45.3461, -27.0011, 0.81", "-82.486, -45.2557, -27.1079, 1.33", "-83.4297, -45.1124, -27.4904, 1.33", "-83.6927, -45.0752, -27.5833, 1.33", "-84.8992, -44.8728, -27.9937, 0.22", "-84.9551, -44.8627, -28.0129, 0.74", "-85.0826, -44.8425, -28.0584, 0.74" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-34.8664, 43.9208, -36.8789, 0.29", "-34.8502, 44.3368, -37.4968, 0.29", "-34.8735, 44.6055, -38.3371, 0.29", "-34.8828, 44.7165, -38.7225, 0.29", "-34.9014, 44.9484, -39.5584, 0.74", "-34.9074, 45.0137, -39.7905, 1.25", "-34.9118, 45.0583, -39.9452, 1.47", "-35.0502, 45.9321, -43.2063, 0.59", "-35.0601, 45.9819, -43.4156, 0.59", "-35.0634, 45.991, -43.4628, 0.59", "-35.0827, 46.0255, -43.6531, 0.59", "-35.0972, 46.0481, -43.7717, 0.66", "-35.0972, 46.0481, -43.7717, 0.66", "-35.1361, 46.125, -43.9086, 0.66", "-35.3338, 46.538, -44.6592, 0.22", "-35.4112, 46.6818, -45.0393, 0.22", "-35.5138, 46.8574, -45.5536, 0.29", "-35.537, 46.8926, -45.6604, 0.59", "-35.5496, 46.9105, -45.7145, 0.74", "-35.5915, 46.9456, -45.8844, 0.74", "-36.019, 47.1333, -47.5528, 0.96", "-36.0808, 47.1497, -47.7648, 0.96", "-36.1362, 47.1621, -47.9342, 0.96", "-36.1682, 47.1683, -48.0268, 0.96", "-36.963, 47.2978, -50.3151, 0.37", "-37.6676, 47.3836, -52.3283, 0.15", "-37.793, 47.3948, -52.6809, 0.74", "-37.9394, 47.4039, -53.11, 1.18", "-37.9647, 47.4054, -53.1864, 1.47" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-34.8664, 43.9208, -36.8789, 0.22", "-35.6786, 44.6856, -36.8593, 0.22", "-36.2052, 45.1704, -36.8496, 0.22", "-36.724, 45.6137, -36.9047, 0.22", "-37.2378, 46.0021, -36.9959, 0.22", "-37.659, 46.2982, -37.0839, 0.29", "-38.0858, 46.5812, -37.1779, 0.37", "-38.1685, 46.6329, -37.2038, 0.37", "-39.0415, 47.2008, -37.5064, 0.88", "-39.5961, 47.5684, -37.7077, 1.18", "-40.067, 47.9019, -37.8814, 1.18", "-40.3957, 48.185, -38.0279, 1.11", "-41.6575, 49.4841, -38.6652, 0.22", "-42.0937, 50.0278, -38.9025, 0.22", "-42.1337, 50.098, -38.9433, 0.22", "-42.2419, 50.3966, -39.1631, 0.22", "-42.4261, 51.2452, -39.9103, 0.66", "-42.4442, 51.5004, -40.1559, 1.25", "-42.425, 51.8313, -40.4858, 1.11", "-42.3168, 53.6349, -42.2301, 1.25", "-42.2598, 54.2164, -42.8333, 0.66", "-42.2516, 54.2771, -42.897, 0.66", "-42.0814, 55.3251, -43.9123, 0.22", "-42.0088, 55.7478, -44.303, 0.22", "-41.9477, 56.1167, -44.6056, 0.22", "-41.671, 57.9438, -45.8703, 0.59", "-41.6087, 58.2865, -46.1573, 1.18", "-41.5113, 58.8556, -46.6706, 1.18", "-41.4233, 59.1713, -47.6256, 0.52", "-41.3454, 59.5224, -48.7347, 0.29", "-41.3409, 59.5495, -48.8195, 0.29", "-41.2597, 60.1445, -50.6575, 1.4", "-41.2302, 60.3477, -51.2796, 1.69", "-40.3837, 66.2415, -69.1583, 0.22", "-40.3036, 66.7613, -70.6499, 0.22", "-40.2483, 67.1263, -71.6361, 0.22", "-40.0788, 68.3951, -74.7979, 1.4", "-40.0395, 68.7479, -75.5958, 1.5", "-40.0093, 69.0571, -76.1879, 1.5", "-39.9734, 70.871, -77.3238, 0.29", "-39.9015, 71.6468, -77.8094, 0.29", "-39.6915, 73.184, -78.6763, 0.29", "-39.6337, 73.5541, -78.8324, 0.29", "-39.4103, 74.6862, -79.2824, 0.74", "-39.2513, 75.2354, -79.4755, 1.11", "-38.7905, 76.4241, -79.8097, 1.4", "-38.6484, 76.7193, -79.8658, 1.69", "-38.1878, 77.5822, -79.948, 0.74", "-37.7178, 78.4807, -80.0369, 0.15", "-37.5652, 78.8251, -80.0965, 0.15", "-37.5334, 78.9155, -80.1243, 0.15", "-37.3989, 79.5489, -80.4066, 0.44", "-37.3213, 80.1845, -80.7514, 0.37", "-37.3129, 80.5979, -80.9622, 0.37", "-37.3784, 81.8458, -81.5511, 0.29", "-37.4163, 82.1631, -81.6411, 0.29", "-37.5574, 82.8662, -81.8059, 1.11", "-37.7298, 83.4331, -81.841, 1.11", "-38.7979, 85.9572, -81.5695, 1.11", "-38.8175, 86.0968, -81.7223, 1.11", "-38.8164, 86.2044, -81.899, 1.11", "-38.8352, 87.5113, -83.7779, 0.29", "-38.8234, 87.6764, -84.0341, 0.29", "-38.8135, 87.8206, -84.2483, 0.29", "-38.7383, 88.7779, -85.6901, 1.25", "-38.7312, 88.881, -85.8367, 1.25", "-38.7138, 89.1569, -86.1989, 1.55", "-38.6468, 91.6584, -89.2961, 0.22", "-38.6403, 92.0761, -89.8025, 0.22", "-38.6396, 92.135, -89.8683, 0.22", "-38.6349, 93.276, -90.998, 1.25", "-38.6247, 93.6286, -91.3072, 1.47", "-38.5484, 95.3728, -92.585, 0.74", "-38.4649, 96.8579, -93.3992, 0.22", "-38.404, 97.6604, -93.8099, 0.52", "-38.371, 98.2717, -94.0673, 0.52", "-38.346, 99.2003, -94.3485, 0.29", "-38.3401, 99.8125, -94.4794, 0.44", "-38.3507, 100.699, -94.5558, 0.74", "-38.3875, 101.589, -94.5979, 1.18", "-38.4373, 102.814, -94.6943, 0.22", "-38.4383, 103.457, -94.7889, 0.22", "-38.359, 103.946, -94.9343, 0.22", "-38.3359, 104.009, -94.9953, 0.22", "-37.9739, 104.708, -95.8953, 0.29", "-37.9453, 104.753, -95.9665, 0.29", "-37.4585, 105.492, -97.222, 0.29", "-36.951, 106.212, -98.4929, 1.47", "-35.4759, 108.214, -102.003, 0.52", "-34.9784, 108.873, -103.133, 0.07", "-34.3947, 109.621, -104.495, 0.74", "-34.0375, 110.075, -105.316, 0.96", "-33.4512, 110.861, -106.68, 0.15", "-33.1116, 111.34, -107.486, 0.15", "-32.4803, 112.231, -108.879, 1.84", "-31.299, 114.142, -111.91, 0.66", "-31.0904, 114.543, -112.516, 0.22", "-30.8951, 114.982, -113.184, 0.22", "-30.8644, 115.108, -113.364, 0.22", "-30.8598, 115.161, -113.438, 0.22", "-30.895, 115.5, -113.758, 0.22", "-30.9276, 116.069, -114.028, 0.22", "-30.8869, 116.379, -114.241, 0.22", "-30.8689, 116.456, -114.303, 0.22", "-30.8186, 116.81, -114.649, 0.81", "-30.8007, 117.061, -114.97, 0.81", "-30.605, 118.456, -116.837, 0.29", "-30.5968, 118.511, -116.91, 0.29", "-30.5764, 118.671, -117.121, 0.29", "-30.4806, 119.528, -118.249, 1.55", "-30.2998, 120.814, -120.34, 0.15", "-30.1905, 121.445, -121.402, 0.15", "-30.1425, 121.682, -121.799, 0.15", "-29.9183, 122.473, -123.08, 1.18", "-29.8876, 122.56, -123.217, 1.18", "-28.8035, 125.094, -127.023, 0.37", "-28.5715, 125.64, -127.827, 1.4", "-28.2734, 126.381, -128.982, 0.07", "-28.0485, 126.95, -129.864, 0.07", "-28.0208, 127.026, -129.97, 0.07", "-27.9527, 127.274, -130.261, 0.07", "-27.9215, 127.687, -130.611, 0.07", "-27.9186, 129.103, -131.847, 0.07", "-27.931, 129.943, -132.536, 0.96", "-27.9351, 130.44, -132.933, 1.25", "-27.8923, 131.076, -133.454, 1.11", "-27.6634, 132.814, -134.85, 0.29", "-27.5802, 133.294, -135.311, 0.29", "-27.4824, 133.792, -135.807, 0.29", "-27.4238, 134.054, -136.092, 0.29", "-27.135, 135.324, -137.624, 1.25", "-27.0885, 135.572, -137.944, 1.4", "-26.9029, 137.769, -140.922, 0.37", "-26.9137, 138.028, -141.286, 0.74", "-26.9744, 138.326, -141.741, 0.88", "-27.0157, 138.437, -141.918, 0.88", "-27.2476, 138.886, -142.66, 0.22", "-27.5665, 139.402, -143.556, 0.44", "-27.6635, 139.532, -143.761, 0.81", "-28.4645, 140.523, -145.301, 0.37", "-28.6534, 140.717, -145.57, 0.37", "-29.7713, 141.758, -146.765, 0.07", "-30.0222, 141.975, -146.967, 0.07", "-30.8275, 142.668, -147.4, 0.74", "-31.2634, 143.053, -147.573, 0.96", "-32.597, 144.218, -147.853, 0.22", "-33.1607, 144.701, -147.941, 0.22", "-33.4246, 144.915, -147.962, 0.22", "-33.6336, 145.094, -147.993, 0.22", "-34.4193, 145.825, -148.309, 0.81", "-34.5284, 145.935, -148.369, 0.81", "-34.9503, 146.389, -148.693, 1.33", "-35.613, 147.074, -149.336, 1.25", "-35.7637, 147.236, -149.505, 1.25", "-36.915, 148.628, -150.954, 0.29", "-36.9548, 148.682, -151.01, 0.29", "-37.3493, 149.297, -151.688, 0.88", "-37.9446, 150.287, -152.841, 0.22", "-38.1555, 150.645, -153.264, 0.52", "-38.468, 151.147, -153.859, 0.52", "-38.7793, 151.641, -154.418, 0.15", "-39.4107, 152.637, -155.494, 0.96", "-39.6271, 152.981, -155.847, 0.96", "-39.7618, 153.192, -156.071, 1.03", "-40.7356, 154.759, -157.735, 0.29", "-40.9375, 155.144, -158.199, 0.29", "-41.036, 155.374, -158.468, 0.29", "-41.057, 155.431, -158.533, 0.29", "-41.3389, 156.339, -159.528, 0.29", "-41.5052, 156.957, -160.18, 1.55", "-42.1996, 159.881, -162.978, 0.22", "-42.318, 160.335, -163.403, 0.22", "-42.3398, 160.408, -163.468, 0.22", "-42.5672, 161.034, -163.973, 0.22", "-42.5971, 161.101, -164.021, 0.22", "-43.0367, 161.909, -164.617, 0.22", "-43.5635, 162.7, -165.096, 0.88", "-43.8049, 163.017, -165.331, 1.25", "-44.2803, 163.595, -165.818, 1.03", "-44.7827, 164.134, -166.335, 1.03", "-46.3356, 165.65, -167.885, 0.44", "-46.4429, 165.745, -167.993, 0.44", "-46.8549, 166.105, -168.37, 0.44", "-46.909, 166.153, -168.418, 0.44", "-47.2699, 166.494, -168.713, 0.52", "-47.5423, 166.779, -168.875, 0.52", "-47.6127, 166.852, -168.887, 0.52", "-48.0068, 167.285, -168.965, 0.52", "-48.0068, 167.285, -168.965, 0.52", "-48.144, 167.435, -168.991, 0.52", "-48.8093, 168.165, -169.109, 0.07", "-49.1785, 168.56, -169.168, 0.07", "-49.6921, 168.954, -169.209, 0.07", "-50.5038, 169.501, -169.242, 0.96", "-50.8218, 169.701, -169.259, 1.18", "-51.4265, 170.074, -169.289, 1.18", "-51.7732, 170.292, -169.309, 1.18", "-53.551, 171.522, -169.445, 0.22", "-54.0796, 171.913, -169.495, 0.29", "-55.1552, 172.721, -169.612, 0.96", "-55.4808, 172.966, -169.65, 1.18", "-56.3795, 173.706, -169.764, 0.37", "-56.9412, 174.244, -169.842, 0.22", "-57.2768, 174.671, -169.896, 0.22", "-57.6587, 175.204, -169.94, 0.22", "-57.7131, 175.29, -169.942, 0.22", "-58.2273, 176.145, -169.94, 0.22", "-58.5468, 176.801, -169.909, 0.29", "-58.7337, 177.256, -169.89, 0.22", "-58.8972, 177.688, -169.878, 0.22", "-58.9449, 177.806, -169.877, 0.22", "-59.0513, 177.99, -169.88, 0.22", "-59.1716, 178.137, -169.89, 0.22", "-59.5574, 178.529, -169.922, 0.81", "-59.9447, 178.887, -169.953, 1.18", "-60.0096, 178.947, -169.957, 1.18", "-60.6391, 179.483, -169.997, 1.03", "-60.8094, 179.623, -170.006, 1.03", "-61.989, 180.618, -170.054, 0.29", "-62.3829, 180.944, -170.064, 0.29", "-62.4385, 180.994, -170.075, 0.29", "-62.9524, 181.513, -170.255, 0.29", "-63.2328, 181.844, -170.448, 0.29", "-63.4556, 182.153, -170.677, 0.37", "-63.4813, 182.207, -170.758, 0.37", "-63.8527, 183.078, -172.205, 0.37", "-63.9475, 183.323, -172.632, 1.11", "-64.1048, 183.795, -173.517, 1.33", "-64.1344, 183.885, -173.701, 1.33", "-64.6756, 185.492, -177.228, 0.07", "-64.765, 185.748, -177.818, 0.81" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-31.2586, 27.2746, -15.4651, 1.11", "-31.9711, 26.9645, -15.6749, 1.11", "-33.2464, 26.5856, -15.9875, 0.37", "-33.8443, 26.4654, -16.0964, 0.37", "-34.912, 26.293, -16.2644, 0.88", "-35.4705, 26.2142, -16.358, 1.18", "-36.1897, 26.1768, -16.5109, 1.25", "-36.9807, 26.2266, -16.6869, 1.18", "-37.9104, 26.3871, -16.8948, 0.59", "-38.3602, 26.4874, -17.0125, 0.52", "-38.8441, 26.6009, -17.1612, 0.52", "-40.5141, 26.9684, -17.7025, 0.52", "-41.0161, 27.0754, -17.8773, 0.52", "-41.5175, 27.1889, -18.0559, 0.81", "-42.1828, 27.3534, -18.2909, 1.11", "-42.7645, 27.512, -18.4701, 1.18", "-43.3461, 27.6887, -18.6658, 0.81", "-44.492, 28.0397, -19.1228, 0.52", "-45.1129, 28.2605, -19.4093, 1.03", "-45.4758, 28.4185, -19.5918, 1.18", "-46.3344, 28.8459, -20.0406, 1.11", "-47.5695, 29.5021, -20.6895, 0.52", "-48.2486, 29.8565, -21.0414, 0.22", "-48.8455, 30.1332, -21.338, 0.59", "-49.4004, 30.3287, -21.594, 0.74", "-50.342, 30.5362, -21.9748, 0.37", "-50.9046, 30.545, -22.1829, 0.37", "-51.3582, 30.5014, -22.3224, 0.74", "-52.0213, 30.4126, -22.5325, 1.18", "-52.7516, 30.2765, -22.7803, 0.96", "-53.3111, 30.1613, -22.9733, 0.44", "-54.9823, 29.8349, -23.5499, 0.37", "-55.5937, 29.7212, -23.7642, 0.37", "-56.1287, 29.6386, -23.9517, 0.88", "-56.8728, 29.5632, -24.2084, 1.55", "-57.676, 29.5194, -24.4789, 1.69", "-57.9999, 29.5246, -24.5715, 1.69" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-31.2586, 27.2746, -15.4651, 0.59", "-31.9236, 27.7865, -14.5989, 0.59", "-32.3153, 28.0495, -14.1581, 0.74", "-33.3777, 28.68, -12.9695, 0.44", "-34.1429, 29.1028, -12.1733, 0.37", "-35.8233, 29.9694, -10.4939, 0.37", "-36.6288, 30.3543, -9.72555, 0.52", "-37.0036, 30.4965, -9.39021, 0.74", "-38.353, 30.9072, -8.21878, 0.74", "-39.083, 31.1203, -7.58773, 0.22", "-39.6329, 31.2777, -7.07359, 0.74", "-39.9771, 31.3852, -6.76042, 0.74", "-40.5077, 31.5783, -6.24765, 0.74", "-41.1842, 31.8663, -5.64526, 0.15", "-42.289, 32.3091, -4.9146, 0.96", "-42.796, 32.4903, -4.62472, 0.96", "-43.1854, 32.6223, -4.45759, 0.96", "-43.8001, 32.8164, -4.24229, 0.81", "-44.4649, 33.0063, -4.09578, 0.44", "-45.6969, 33.2979, -3.91506, 0.22", "-45.9819, 33.3451, -3.88521, 0.52", "-46.3051, 33.3911, -3.84216, 0.81", "-47.1972, 33.5186, -3.70154, 0.52", "-48.232, 33.7025, -3.53902, 0.22", "-48.7065, 33.8096, -3.46896, 0.37", "-49.0299, 33.9207, -3.42709, 0.37", "-49.0893, 33.9433, -3.42911, 0.37", "-49.4374, 34.0652, -3.4691, 0.44", "-50.7961, 34.5223, -3.72129, 0.29", "-51.2422, 34.6658, -3.81033, 1.03", "-52.0001, 34.9018, -3.96746, 1.03", "-53.6853, 35.4182, -4.30476, 0.29", "-54.6919, 35.7122, -4.55067, 0.29", "-55.3109, 35.8965, -4.72041, 0.81", "-56.2125, 36.1917, -4.99128, 0.52", "-56.433, 36.2613, -5.05782, 0.96", "-56.9351, 36.4072, -5.20404, 1.25", "-57.9891, 36.7805, -5.46395, 0.81", "-58.9165, 37.2, -5.82681, 0.29", "-59.3939, 37.4416, -6.05343, 0.81", "-66.7014, 40.2442, -5.08522, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-20.6589, 45.669, -14.6069, 1.33", "-21.8049, 47.2877, -19.2701, 1.33", "-21.9956, 47.564, -20.04, 1.18", "-22.1575, 47.8116, -20.6659, 0.96", "-22.6818, 48.6328, -22.6414, 0.44", "-22.6982, 48.6592, -22.7003, 0.44", "-23.2818, 49.6337, -24.6978, 0.37", "-23.3466, 49.7512, -24.8572, 0.88", "-23.5626, 50.1392, -25.3878, 0.22", "-23.5808, 50.1731, -25.4288, 0.22", "-23.9056, 50.8511, -26.0277, 1.11", "-24.066, 51.2188, -26.2869, 1.47", "-24.3803, 51.9378, -26.6595, 0.37", "-24.4859, 52.1625, -26.7751, 0.22", "-24.7022, 52.6055, -27.0008, 0.22", "-25.0144, 53.2359, -27.29, 1.03", "-25.5784, 54.3829, -27.7396, 0.22", "-25.7593, 54.7536, -27.8698, 0.29", "-25.9842, 55.2538, -28.0415, 0.29", "-26.2079, 55.7811, -28.226, 0.81", "-26.4562, 56.4099, -28.4428, 1.55", "-26.6596, 56.9644, -28.6204, 1.55", "-26.702, 57.0951, -28.6633, 1.55", "-27.0516, 58.4635, -29.1436, 0.22", "-27.1123, 58.768, -29.2571, 0.22", "-27.1233, 58.8373, -29.2827, 0.22", "-27.1731, 59.2407, -29.4385, 0.44", "-27.2075, 59.5662, -29.5585, 0.59", "-27.2549, 60.1527, -29.733, 0.22", "-27.2573, 60.2172, -29.7436, 0.22", "-27.2711, 60.7506, -29.857, 0.22", "-27.2762, 60.8017, -29.8782, 0.22", "-27.3116, 61.0316, -30.003, 0.22", "-27.373, 61.5037, -30.295, 1.25", "-27.4021, 61.7363, -30.4484, 1.25", "-27.4576, 62.1878, -30.7433, 1.25", "-27.6043, 63.6275, -31.6317, 0.44", "-27.6573, 64.1016, -31.9306, 0.29", "-27.7204, 64.6018, -32.2391, 0.29", "-27.7586, 64.7828, -32.359, 0.29", "-27.7983, 65.0035, -32.5014, 0.29", "-27.9066, 65.777, -32.9531, 0.88", "-27.9842, 66.6049, -33.391, 0.29", "-28.0288, 67.1285, -33.7024, 0.29", "-28.1302, 68.2025, -34.383, 1.25", "-28.2133, 69.2364, -35.0433, 1.4", "-28.2367, 69.6427, -35.3042, 1.4", "-28.2663, 70.3291, -35.7786, 0.29", "-28.2766, 71.21, -36.3792, 1.03", "-28.2837, 71.3326, -36.4823, 1.03", "-28.3587, 72.0463, -37.1231, 0.29", "-28.3989, 72.2153, -37.2951, 0.44", "-28.5953, 72.8222, -38.0824, 0.52", "-28.6157, 72.8834, -38.1676, 0.66", "-28.8767, 73.9601, -39.7129, 0.22", "-28.9198, 74.3863, -40.3331, 1.11", "-28.9188, 74.4474, -40.4238, 1.11", "-28.7721, 75.494, -41.9215, 1.25", "-28.5764, 76.1121, -42.7345, 0.52", "-28.2998, 76.6907, -43.4682, 0.52", "-28.0181, 77.0841, -43.9688, 0.44", "-27.9827, 77.1268, -44.0227, 0.44", "-27.4249, 77.7666, -44.7311, 0.96", "-27.2022, 78.0121, -44.9513, 1.18", "-27.0627, 78.1668, -45.0997, 1.11", "-26.6675, 78.7009, -45.6268, 0.88", "-26.1639, 79.3298, -46.2649, 0.22", "-25.9038, 79.6464, -46.6144, 0.81", "-25.7677, 79.8202, -46.8, 0.88", "-25.6933, 79.9392, -46.9456, 0.88", "-25.3519, 80.5739, -47.7871, 0.66", "-25.0702, 81.1353, -48.568, 0.22", "-24.8043, 81.7422, -49.5168, 0.81", "-24.6728, 82.059, -50.0451, 0.81", "-24.3363, 82.8091, -51.3158, 0.29", "-24.3005, 82.8794, -51.4246, 0.29", "-24.1093, 83.1958, -51.8577, 0.29", "-24.0795, 83.2318, -51.9048, 0.29", "-23.4156, 83.7315, -52.4362, 1.11", "-23.0291, 83.9633, -52.6643, 1.47", "-21.8376, 84.7101, -53.5519, 0.88", "-21.7623, 84.7735, -53.6436, 0.88", "-20.9912, 85.6574, -55.0437, 0.29", "-20.9044, 85.7784, -55.2476, 0.29", "-20.8945, 85.819, -55.3743, 0.29", "-20.8353, 86.3045, -57.1952, 0.29", "-20.8396, 86.4153, -57.6773, 0.29", "-20.8451, 86.473, -57.9288, 0.29", "-20.8533, 86.5045, -58.0584, 0.29", "-21.131, 87.5617, -62.2746, 1.33", "-21.1614, 87.6709, -62.6837, 1.4", "-21.1913, 87.7779, -63.0495, 1.4", "-21.311, 88.093, -64.0978, 0.29", "-21.3901, 88.2805, -64.654, 0.29", "-21.4005, 88.3169, -64.7404, 0.29", "-21.4299, 88.685, -65.3106, 0.81", "-21.4289, 88.8278, -65.584, 0.96", "-21.4276, 88.8577, -65.6456, 0.96", "-21.3416, 89.7772, -67.6869, 0.22", "-21.2855, 90.1014, -68.5146, 1.18", "-21.2571, 90.1987, -68.7834, 1.03", "-20.9762, 91.0428, -71.0072, 0.22", "-20.9353, 91.1879, -71.3664, 0.22", "-20.9024, 91.3247, -71.6832, 0.22", "-20.7474, 92.1051, -73.3242, 0.22", "-20.6873, 92.458, -74.0311, 1.33", "-20.5354, 93.2125, -75.445, 0.29", "-20.3647, 93.9152, -76.616, 1.18", "-20.3189, 94.1696, -77.0217, 0.74", "-20.3083, 94.2841, -77.1861, 0.74", "-20.3986, 94.8098, -77.9633, 0.29", "-20.4587, 94.9658, -78.2154, 0.29", "-20.5541, 95.1672, -78.5694, 0.29", "-20.8921, 95.7981, -79.694, 1.62", "-20.9628, 95.921, -79.9306, 1.62", "-21.9193, 97.4102, -83.0184, 0.29", "-22.0584, 97.6022, -83.4498, 0.29", "-22.2621, 97.8573, -84.0818, 0.29", "-22.2791, 97.8801, -84.1422, 0.29", "-22.7411, 98.4002, -85.6563, 1.11", "-22.8325, 98.4734, -85.8981, 0.96", "-22.8678, 98.4873, -85.9556, 0.96", "-23.3853, 98.5787, -86.9751, 0.81", "-23.5925, 98.606, -87.3937, 0.81", "-24.2372, 98.7027, -88.6533, 0.22", "-24.2809, 98.7114, -88.7368, 0.74", "-24.3789, 98.7286, -88.9342, 0.74", "-26.4809, 99.1572, -93.2527, 1.25", "-27.8345, 99.4807, -96.0615, 0.22", "-28.2742, 99.6019, -97.0681, 1.47", "-29.0278, 99.8697, -99.0654, 0.15", "-30.0943, 100.311, -102.098, 0.59", "-30.3309, 100.429, -102.825, 0.22", "-30.5228, 100.564, -103.512, 0.96", "-31.1562, 101.256, -106.653, 1.11", "-31.5483, 101.9, -109.43, 0.22", "-31.5816, 102.013, -109.839, 0.22", "-31.5909, 102.095, -110.074, 0.22", "-31.6209, 102.427, -111.014, 1.33", "-31.6418, 102.767, -111.819, 1.33", "-31.6464, 102.812, -111.881, 1.33", "-31.6995, 103.613, -112.622, 0.29", "-31.7161, 103.792, -112.784, 0.29", "-31.74, 103.985, -112.935, 0.29", "-31.7727, 104.245, -113.161, 0.29", "-31.7734, 104.361, -113.271, 0.29", "-31.7694, 104.491, -113.522, 0.29", "-31.7633, 104.647, -113.921, 0.29", "-31.7552, 104.737, -114.153, 0.29", "-31.6857, 105.402, -115.911, 1.47", "-31.6831, 105.438, -116.001, 1.47", "-31.6522, 106.597, -118.859, 0.29", "-31.6541, 106.653, -118.99, 0.29", "-31.6821, 106.967, -119.662, 0.29", "-31.6886, 106.994, -119.722, 0.29", "-31.773, 107.264, -120.272, 0.29", "-31.801, 107.358, -120.448, 0.29", "-31.8653, 107.879, -121.196, 0.29", "-31.8751, 108.018, -121.401, 1.25", "-31.9896, 109.783, -124.063, 0.29", "-31.9992, 109.993, -124.365, 0.96", "-32.0108, 110.326, -124.834, 1.4", "-32.0289, 111.293, -126.166, 0.22", "-32.0214, 112.087, -127.179, 0.37", "-32.0123, 112.29, -127.409, 0.37", "-31.8522, 113.206, -128.059, 0.37", "-31.8398, 113.331, -128.157, 0.88" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-20.6589, 45.669, -14.6069, 0.44", "-20.8062, 45.7306, -14.5554, 0.44", "-21.0462, 45.8472, -14.4806, 0.44", "-22.0109, 46.4248, -14.2123, 0.44", "-22.7519, 46.9698, -14.0289, 0.44", "-23.8984, 47.9579, -13.6222, 0.44", "-24.5225, 48.5973, -13.3402, 1.03", "-24.8483, 48.99, -13.1667, 1.33", "-25.3434, 49.6934, -12.8617, 1.18", "-25.7869, 50.4729, -12.38, 0.96", "-26.2905, 51.5036, -11.6094, 0.88", "-26.753, 52.6041, -10.7048, 0.52", "-26.8777, 52.953, -10.3768, 0.52", "-26.927, 53.1234, -10.2071, 1.11", "-27.3789, 55.2951, -7.99366, 0.74", "-27.4146, 55.7155, -7.59431, 1.11", "-27.4233, 56.1646, -7.23019, 1.18", "-27.4073, 56.4289, -7.03711, 1.77", "-27.3679, 56.8781, -6.7846, 1.4", "-27.2749, 57.7216, -6.50708, 0.81", "-27.1163, 58.8434, -6.37152, 0.44", "-27.0447, 59.4288, -6.26446, 0.44", "-27.0002, 59.751, -6.19122, 0.44", "-26.9092, 60.1837, -6.02908, 0.44", "-26.823, 60.4993, -5.87472, 0.66", "-26.5177, 61.3953, -5.12769, 0.59", "-26.4057, 61.7099, -4.81745, 0.81", "-26.1464, 62.4941, -4.02881, 0.44", "-25.9125, 63.3803, -2.94326, 0.59", "-25.8514, 63.6827, -2.55804, 0.44", "-25.5832, 65.3837, -0.469381, 0.37", "-25.5322, 65.7182, -0.107475, 1.25", "-25.4495, 66.2841, 0.4377, 1.47", "-25.1888, 68.4991, 2.22615, 0.88", "-25.1138, 69.1883, 2.73532, 0.44", "-24.9961, 69.9877, 3.24294, 0.52", "-24.6953, 71.4236, 3.93916, 0.96", "-24.4637, 72.2913, 4.32327, 1.03", "-24.2184, 73.1298, 4.7178, 0.59", "-23.4546, 75.7604, 5.88839, 0.59", "-23.0967, 77.0439, 6.55269, 1.18", "-22.873, 78.1315, 7.07815, 1.4", "-22.8299, 78.5032, 7.24997, 1.4", "-22.7201, 80.6914, 8.13476, 0.81", "-22.7533, 81.6399, 8.44389, 0.29", "-22.8439, 82.3022, 8.60464, 0.29", "-23.4536, 84.4105, 9.48585, 0.52", "-23.8761, 85.4052, 10.0516, 1.11", "-24.2062, 86.0452, 10.4707, 1.25", "-24.4633, 86.4616, 10.769, 1.4", "-25.0609, 87.2948, 11.462, 1.03", "-26.8064, 89.5035, 13.4731, 0.52", "-27.5027, 90.2906, 14.2655, 0.96", "-27.9446, 90.7603, 14.7002, 0.96", "-28.4225, 91.2327, 15.0379, 0.59", "-29.1597, 91.9455, 15.3355, 0.59", "-29.6545, 92.4179, 15.3661, 1.03", "-30.2981, 93.056, 15.2065, 1.33", "-30.8961, 93.6683, 14.9939, 0.74", "-32.4372, 95.2469, 14.4282, 0.59", "-32.9603, 95.7815, 14.2227, 0.59", "-33.211, 96.0345, 14.1242, 0.88", "-33.8448, 96.6625, 13.8976, 0.88", "-34.4323, 97.2512, 13.6879, 0.74", "-35.3971, 98.2027, 13.3749, 0.37", "-36.307, 99.0537, 13.1444, 0.37", "-36.8346, 99.5113, 13.0204, 0.81", "-37.5953, 100.139, 12.8604, 1.11", "-37.991, 100.469, 12.7771, 1.03", "-38.3378, 100.77, 12.6999, 1.03", "-38.834, 101.245, 12.5719, 0.88", "-39.7705, 102.219, 12.3635, 0.29", "-40.2025, 102.707, 12.2734, 0.44", "-40.9246, 103.583, 12.1381, 0.52", "-41.1969, 103.925, 12.0982, 0.74", "-41.4529, 104.251, 12.0659, 0.74", "-42.3463, 105.429, 12.0218, 0.29", "-42.7947, 106.067, 12.0161, 1.18", "-43.0856, 106.57, 12.0363, 1.18", "-43.2952, 106.983, 12.0677, 1.18", "-43.5594, 107.561, 12.1134, 0.96", "-43.8315, 108.244, 12.157, 0.88", "-44.3424, 109.826, 12.2284, 0.37", "-44.8539, 111.828, 12.2785, 0.29", "-45.0127, 112.621, 12.2862, 0.29", "-45.0867, 113.115, 12.2836, 0.44", "-45.1154, 113.446, 12.276, 0.66", "-45.1268, 113.851, 12.2189, 0.52", "-45.0257, 114.963, 11.944, 0.52", "-44.9186, 115.41, 11.758, 0.66", "-44.7979, 115.758, 11.5254, 0.88", "-44.62, 116.236, 11.1461, 0.88", "-44.0956, 117.67, 9.82936, 1.03", "-43.9182, 118.161, 9.34476, 1.25", "-43.7543, 118.642, 8.85997, 1.4", "-43.2108, 120.313, 7.23652, 0.44", "-43.0265, 120.922, 6.7463, 0.37", "-42.7173, 121.999, 6.06649, 0.88", "-42.5768, 122.49, 5.86881, 1.18", "-42.4065, 123.189, 5.68654, 1.4", "-42.2944, 123.715, 5.61127, 1.03", "-41.8496, 125.912, 5.55567, 0.29", "-41.6932, 126.708, 5.56163, 0.29", "-41.4994, 127.836, 5.61411, 0.37", "-41.2828, 129.425, 5.65369, 0.37", "-41.2123, 130.181, 5.65797, 0.88", "-41.1914, 130.522, 5.65275, 1.25", "-41.1733, 131.391, 5.61996, 1.47", "-41.1725, 132.12, 5.57679, 1.03", "-41.2007, 133.516, 5.45905, 0.44", "-41.2201, 134.225, 5.3818, 0.44", "-41.2953, 135.999, 5.16811, 0.44", "-41.3161, 136.404, 5.114, 0.74", "-41.3536, 136.985, 5.03128, 0.74", "-41.3928, 137.556, 4.94795, 0.74", "-41.4833, 138.551, 4.80953, 0.81", "-41.5226, 138.877, 4.7526, 1.4", "-41.6789, 139.527, 4.5957, 2.06", "-41.8324, 140.247, 4.40511, 2.06" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.41912, 46.4499, -0.527052, 1.55", "-1.82773, 47.4382, -0.526667, 1.55", "-2.02962, 47.975, -0.523642, 1.11", "-2.28119, 49.0128, -0.491631, 0.74", "-2.3726, 49.6821, -0.456899, 0.88", "-2.40392, 50.3659, -0.409026, 1.33", "-2.39169, 50.8125, -0.324623, 1.25", "-2.24569, 51.5581, -0.0411637, 0.96", "-1.83694, 52.7039, 0.568555, 0.66", "-1.56174, 53.2088, 0.845691, 1.11", "-1.21225, 53.7196, 1.12802, 1.4", "-0.110596, 55.1225, 1.8777, 1.11", "0.749767, 56.1026, 2.39227, 0.81", "1.16249, 56.5115, 2.63282, 0.81", "2.44664, 57.7207, 3.35762, 0.44", "2.79214, 58.0643, 3.60303, 0.88", "3.05226, 58.3278, 3.80845, 0.88", "3.24025, 58.5245, 3.95901, 0.88", "4.39799, 59.7659, 5.02841, 0.59", "4.73669, 60.1161, 5.36742, 0.88", "5.93192, 61.4109, 6.67771, 1.4", "6.372, 61.9096, 7.13876, 1.33", "6.82785, 62.462, 7.61815, 1.33", "7.67488, 63.5652, 8.42915, 0.81", "8.10188, 64.1548, 8.77111, 0.96", "8.56924, 64.8057, 9.09435, 1.25", "8.87425, 65.2482, 9.25727, 1.25", "9.424, 66.1684, 9.59263, 0.88", "9.80707, 66.9286, 9.87155, 0.74", "9.99281, 67.4067, 10.0404, 0.74", "10.128, 67.8238, 10.1851, 0.74", "10.3197, 68.4238, 10.3914, 0.74", "10.3989, 68.702, 10.4767, 0.96", "10.5315, 69.2801, 10.6264, 1.03", "10.5876, 69.7204, 10.7603, 1.03", "10.602, 70.0227, 10.8548, 0.88", "10.5993, 70.5546, 11.0356, 0.59", "10.5804, 71.0235, 11.2317, 0.29", "10.5639, 71.5515, 11.493, 0.59", "10.5675, 71.9207, 11.7017, 0.59", "10.6038, 72.3117, 12.0009, 0.52", "10.6683, 72.6958, 12.39, 0.59", "10.768, 73.1662, 12.9447, 0.74", "10.8189, 73.3522, 13.1813, 0.74", "10.9197, 73.6179, 13.5023, 0.59", "11.2076, 74.4308, 14.2254, 0.29", "11.3832, 75.0191, 14.558, 0.81", "11.5079, 75.6104, 14.7454, 1.18", "11.5434, 75.8363, 14.7819, 1.62", "11.6761, 76.8782, 14.8916, 1.18", "11.8596, 78.5743, 14.9861, 0.81", "11.9746, 79.809, 14.9944, 0.74", "12.0416, 80.6489, 14.9884, 0.88", "12.0911, 81.5062, 14.9919, 0.96", "12.1221, 82.6521, 15.0125, 0.29", "12.1108, 83.114, 15.0349, 0.29", "12.1073, 83.3448, 15.0639, 0.29", "12.1095, 83.8295, 15.1685, 0.52", "12.1269, 84.2187, 15.2468, 0.96", "12.1608, 84.6216, 15.3134, 1.25", "12.2128, 85.1168, 15.3762, 1.25", "12.3107, 85.7936, 15.459, 1.25", "12.4252, 86.3828, 15.525, 1.25", "12.5367, 86.8237, 15.574, 1.18", "12.6995, 87.3589, 15.6312, 1.18" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.41912, 46.4499, -0.527052, 1.84", "-0.415651, 47.4701, -0.348667, 1.84", "0.988296, 48.9079, -0.0230693, 0.44", "1.42874, 49.3685, 0.0789284, 1.25", "1.71392, 49.678, 0.105518, 1.25", "2.18501, 50.2512, 0.113347, 1.03", "2.96081, 51.2779, 0.0954807, 0.59", "3.42772, 51.9443, 0.0611221, 1.18", "4.02555, 52.907, -0.0431871, 1.18", "4.95259, 54.5238, -0.242111, 0.66", "5.49519, 55.514, -0.392402, 0.52", "5.88117, 56.2641, -0.533478, 1.25", "6.23927, 57.0461, -0.694011, 1.25", "6.61046, 57.9486, -0.85398, 1.18", "6.89239, 58.7125, -0.920895, 0.66", "6.92976, 58.8253, -0.911417, 0.66", "7.03771, 59.1414, -0.879674, 0.66", "7.05235, 59.2142, -0.872608, 0.66", "7.08053, 59.7724, -0.81175, 0.66", "7.06946, 60.0974, -0.765691, 0.66", "7.05394, 60.5666, -0.765178, 0.66", "7.04367, 60.7668, -0.772189, 0.66", "7.01595, 61.021, -0.798317, 0.66", "7.00541, 61.0827, -0.807745, 0.66", "6.8868, 61.5852, -0.906445, 0.66", "6.79306, 62.0017, -0.991265, 0.66", "6.73579, 62.3295, -1.07956, 0.59", "6.69474, 62.6812, -1.18389, 0.22", "6.65537, 63.2465, -1.34682, 0.22", "6.64732, 63.513, -1.4152, 0.22", "6.64833, 63.7978, -1.48014, 0.22", "6.68611, 64.4939, -1.60017, 0.22", "6.71375, 64.7738, -1.63938, 0.22", "6.75935, 65.0948, -1.66672, 0.59", "6.83591, 65.6137, -1.69329, 1.11", "6.84242, 65.6767, -1.69343, 1.11", "6.84843, 65.8625, -1.68333, 1.25", "6.83928, 66.1173, -1.65138, 1.25", "6.81818, 66.38, -1.61634, 0.88", "6.77737, 66.6962, -1.57949, 0.81", "6.72028, 67.0418, -1.5401, 0.96", "6.68679, 67.2385, -1.51866, 0.96", "6.63466, 67.4947, -1.49244, 0.59", "6.52773, 67.9161, -1.45512, 0.81", "6.25269, 68.8033, -1.40147, 0.29", "6.14148, 69.1159, -1.39154, 0.29", "6.03004, 69.3983, -1.3891, 0.44", "5.946, 69.6237, -1.38969, 0.44", "5.76317, 70.1097, -1.35447, 0.44", "5.5944, 70.5606, -1.29606, 0.29", "5.46012, 70.9245, -1.22398, 0.29", "5.36746, 71.1741, -1.16812, 0.59", "5.18484, 71.6966, -1.04157, 0.96", "4.90596, 72.5999, -0.837236, 1.11", "4.71239, 73.305, -0.697143, 0.81", "4.5949, 73.8729, -0.575469, 0.74", "4.5514, 74.1038, -0.513239, 0.52", "4.46571, 74.5624, -0.378044, 0.52", "4.35682, 75.1559, -0.200663, 0.81", "4.26296, 75.895, 0.0141503, 0.95", "4.17549, 76.9671, 0.372355, 1.55", "4.14049, 77.7582, 0.652742, 0.74", "4.13134, 78.1593, 0.795758, 0.66", "4.12351, 78.6642, 0.971903, 0.29", "4.12197, 79.1238, 1.13047, 0.29", "4.11961, 79.6643, 1.27294, 0.29", "4.1066, 80.1037, 1.32872, 0.37", "4.10635, 80.4406, 1.34423, 0.37", "4.08449, 80.8982, 1.40025, 0.44", "4.08449, 80.8982, 1.40025, 0.52", "4.00931, 81.4809, 1.52497, 0.81", "3.95719, 81.8516, 1.61506, 1.11", "3.90806, 82.242, 1.7208, 1.25", "3.751, 83.5781, 2.12807, 0.29", "3.7133, 83.9177, 2.23652, 0.29", "3.65052, 84.3967, 2.38307, 0.52", "3.61774, 84.6046, 2.44294, 0.81", "3.56819, 84.8551, 2.51849, 0.81", "3.4412, 85.4753, 2.69884, 0.29", "3.31953, 86.0522, 2.84444, 0.22", "3.18531, 86.6586, 2.98722, 0.15", "3.08043, 87.1224, 3.0893, 0.22", "2.86858, 88.1127, 3.28307, 0.22", "2.73833, 88.7233, 3.38723, 0.22", "2.6787, 89.0356, 3.43175, 0.22", "2.57492, 89.6691, 3.51421, 1.03", "2.55625, 89.8674, 3.52641, 1.33", "2.52235, 90.4722, 3.51231, 1.47", "2.52271, 90.7723, 3.48518, 1.62", "2.53247, 91.1738, 3.45163, 1.55", "2.54916, 91.5536, 3.42638, 1.55", "2.60382, 92.4794, 3.38243, 0.81", "2.65866, 93.2094, 3.33604, 0.22", "2.74789, 94.2013, 3.25851, 0.22", "2.7811, 94.5583, 3.22732, 0.22", "2.80056, 94.8371, 3.20085, 0.59", "2.80169, 95.0985, 3.17472, 0.59", "2.75912, 95.5291, 3.13711, 0.29", "2.73267, 95.6607, 3.10314, 0.29", "2.62296, 95.9593, 2.96981, 0.29", "2.54263, 96.1609, 2.87174, 0.22", "2.40919, 96.4987, 2.70947, 0.22", "2.34887, 96.6556, 2.64017, 0.22", "2.10492, 97.3628, 2.37486, 0.88", "2.02627, 97.7749, 2.24076, 1.33", "1.997, 98.2255, 2.11422, 1.55", "2.02121, 98.4768, 2.06448, 1.77", "2.07802, 98.7507, 2.0357, 1.47", "2.14393, 99.0351, 2.02411, 1.18", "2.39109, 99.9665, 2.054, 0.29", "2.47399, 100.227, 2.06787, 0.29", "2.72824, 100.906, 2.06446, 0.29", "3.03484, 101.664, 2.02782, 0.29", "3.24555, 102.155, 1.9876, 0.29", "3.49737, 102.708, 1.93033, 0.29", "3.65155, 103.034, 1.89159, 0.29", "4.14017, 103.982, 1.76295, 0.88", "4.14017, 103.982, 1.76295, 1.03", "4.4005, 104.371, 1.71453, 1.25", "4.70411, 104.803, 1.68503, 0.96", "4.85327, 105.044, 1.68395, 0.88", "5.05956, 105.426, 1.71645, 1.03", "5.08933, 105.484, 1.72359, 1.03", "5.34805, 106.04, 1.73584, 0.59", "5.39657, 106.159, 1.72962, 0.52", "5.51368, 106.471, 1.68518, 0.52", "5.5564, 106.59, 1.66353, 0.52", "5.88776, 107.505, 1.49514, 0.29", "6.11388, 108.118, 1.38586, 0.29", "6.28597, 108.487, 1.22701, 0.29", "6.48754, 108.859, 0.95716, 0.74", "6.6597, 109.169, 0.681439, 1.18", "6.87953, 109.592, 0.275543, 1.25", "6.91291, 109.658, 0.204567, 0.96", "7.65675, 111.095, -1.48882, 0.22", "7.98465, 111.752, -2.30043, 0.15", "8.13402, 112.073, -2.70014, 0.15", "8.25656, 112.364, -3.05809, 0.15", "8.27044, 112.406, -3.105, 0.15", "8.30283, 112.605, -3.22943, 0.15", "8.28333, 112.804, -3.21763, 0.15", "8.2366, 113.111, -3.1558, 0.88", "8.14589, 113.628, -3.04352, 1.33", "8.10666, 113.884, -2.98372, 1.55", "8.01462, 114.693, -2.79303, 0.15", "7.98444, 115.159, -2.7141, 0.15", "7.98488, 115.487, -2.68387, 0.15", "7.98947, 115.551, -2.68377, 0.15", "8.06557, 115.944, -2.73444, 0.15", "8.20422, 116.339, -2.81388, 0.15", "8.54888, 116.967, -3.01776, 0.74", "8.73123, 117.235, -3.11471, 1.33", "8.81453, 117.35, -3.16342, 2.36", "8.93903, 117.542, -3.25244, 2.5", "9.00826, 117.676, -3.3277, 2.5" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "-6.41527, -56.7549, 19.3112, 0.22", "-6.51589, -57.0201, 19.2925, 0.22", "-6.73202, -57.5899, 19.2524, 0.22", "-6.94245, -58.1446, 19.2133, 0.22", "-7.20755, -58.8435, 19.1641, 0.22", "-7.26998, -59.008, 19.1525, 0.22" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "-6.41527, -56.7549, 19.3112, 0.44", "-6.07345, -57.1006, 19.2942, 0.44", "-5.61037, -57.5554, 19.2645, 0.29", "-5.43257, -57.73, 19.253, 0.29", "-5.04574, -58.1099, 19.2282, 0.29", "-4.72892, -58.4211, 19.2078, 0.29", "-4.61438, -58.5335, 19.2004, 0.44", "-4.58021, -58.5699, 19.1911, 0.44", "-0.314253, -64.1581, 17.803, 0.44", "4.84496, -69.0855, 16.9047, 0.44", "10.4177, -73.2101, 14.8982, 0.44", "15.2802, -77.7007, 12.0469, 0.44", "19.7045, -82.8805, 9.76969, 0.44", "23.911, -88.0382, 7.06555, 0.44" ],
    "parent" : "dend_123",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "-46.585, -62.6423, 24.1112, 0.29", "-55.5951, -64.4424, 23.6949, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-46.585, -62.6423, 24.1112, 0.52", "-53.6801, -63.7573, 26.1307, 0.29", "-60.3998, -65.4492, 28.8856, 0.29", "-67.211, -67.8379, 30.7387, 0.29", "-73.5774, -70.7952, 33.2103, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "8.05161, -55.7779, 8.96777, 0.74", "7.9943, -57.0274, 8.91849, 0.74", "7.93359, -58.3507, 8.8663, 0.59", "7.88863, -59.3306, 8.82765, 0.52", "7.84213, -60.3439, 8.78768, 0.66", "7.80232, -61.2117, 8.75346, 0.66", "7.76294, -62.0704, 8.71959, 0.66" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "8.05161, -55.7779, 8.96777, 0.29", "8.88848, -56.119, 8.96512, 0.29", "9.71196, -56.4521, 8.98411, 0.29", "11.3445, -57.1629, 9.06746, 0.29", "12.0656, -57.4908, 9.09358, 0.29", "12.9456, -57.8837, 9.10831, 0.96", "13.4161, -58.0886, 9.12311, 1.11", "13.8264, -58.2753, 9.1483, 1.11", "14.4261, -58.5464, 9.18919, 0.88", "15.4371, -59.0026, 9.25059, 0.22", "16.2443, -59.3462, 9.31882, 0.22", "17.6587, -59.8839, 9.43177, 0.22", "18.1796, -60.0613, 9.49353, 0.29", "18.4192, -60.143, 9.5304, 0.59", "18.7505, -60.2537, 9.59172, 0.59", "19.9352, -60.7266, 9.8913, 0.29", "20.2066, -60.8584, 9.96558, 0.44", "20.2726, -60.8933, 9.98343, 0.44", "20.8425, -61.208, 10.1463, 0.44", "21.3472, -61.5401, 10.2815, 0.44", "21.7499, -61.8955, 10.3513, 0.44", "21.8418, -62.0251, 10.3368, 0.44", "31.2041, -66.4533, 12.3915, 0.44", "40.2993, -70.3413, 16.1156, 0.44", "49.6892, -73.1442, 20.1197, 0.44", "58.5136, -75.5305, 25.4673, 0.44", "67.0324, -77.4002, 31.4838, 0.44", "75.8684, -78.5838, 37.2179, 0.44" ],
    "parent" : "dend_111",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "25.8098, -53.637, -56.2506, 0.81", "27.9891, -53.6185, -57.043, 0.81", "28.0745, -53.6167, -57.0765, 0.81", "29.2787, -53.6116, -57.4662, 0.81", "29.7387, -53.609, -57.5528, 0.96", "31.5767, -53.6025, -57.7989, 0.29", "32.2231, -53.605, -57.8725, 0.81", "33.0986, -53.6105, -57.9499, 0.29", "34.6175, -53.627, -58.0724, 0.22", "36.4252, -53.6519, -58.1182, 0.74", "36.572, -53.6555, -58.1231, 1.18", "37.2299, -53.6791, -58.1739, 1.4", "37.7431, -53.6808, -58.2403, 1.11", "38.6884, -53.6645, -58.4525, 0.59", "39.775, -53.6061, -58.8936, 0.22", "40.4243, -53.5633, -59.2505, 0.22", "41.2511, -53.522, -59.7017, 0.22", "41.7298, -53.5087, -59.9637, 0.22", "42.0843, -53.5236, -60.1561, 0.81", "42.1712, -53.5359, -60.2073, 0.81", "42.8075, -53.6865, -60.6546, 0.81", "43.5735, -53.947, -61.2085, 0.22", "44.4943, -54.3201, -61.8811, 0.22", "45.0926, -54.5526, -62.3197, 0.22", "45.7584, -54.8041, -62.802, 0.81", "45.8296, -54.8315, -62.8523, 0.81", "46.398, -55.072, -63.2411, 1.33", "47.0192, -55.3415, -63.6468, 0.66", "47.8851, -55.7377, -64.182, 0.29", "48.6463, -56.0729, -64.6278, 0.29", "49.4071, -56.4107, -65.0445, 0.29", "50.1195, -56.7065, -65.4332, 0.37", "51.092, -57.1118, -65.96, 0.22", "51.3946, -57.2467, -66.1219, 0.96", "52.1199, -57.586, -66.507, 1.18", "52.374, -57.7011, -66.6429, 1.18", "54.0051, -58.3783, -67.5302, 0.22", "54.9641, -58.6964, -68.0654, 0.22", "55.5628, -58.858, -68.4065, 0.22", "56.0828, -58.9567, -68.6419, 1.25", "56.7896, -59.0665, -68.8995, 1.69", "57.748, -59.1939, -69.1862, 1.11", "59.1964, -59.3971, -69.4577, 0.22", "60.057, -59.5378, -69.5662, 0.22", "62.4853, -60.045, -69.784, 0.22", "63.057, -60.1871, -69.8205, 0.66", "63.7985, -60.41, -69.8705, 0.96", "65.6322, -61.057, -70.0077, 0.22", "66.5614, -61.4382, -70.1097, 0.22", "67.2811, -61.7478, -70.254, 0.66", "67.7749, -61.9451, -70.3857, 1.11", "69.1985, -62.3826, -70.7202, 0.22", "69.3818, -62.425, -70.7592, 0.22", "70.0096, -62.497, -70.8731, 0.22", "70.6749, -62.5333, -70.9579, 0.22", "72.7129, -62.6228, -71.1141, 0.96", "73.3369, -62.6647, -71.1487, 1.4", "73.4283, -62.6697, -71.1544, 1.4", "75.0811, -62.7083, -71.1194, 0.29", "75.6895, -62.7091, -71.078, 0.29", "75.8673, -62.7059, -71.0649, 0.29", "76.92, -62.7015, -71.0031, 0.29", "77.8527, -62.729, -70.9533, 0.29", "80.908, -62.9587, -70.8868, 1.18", "80.999, -62.9687, -70.8841, 1.18", "81.5356, -63.0438, -70.8694, 1.18", "83.6218, -63.4546, -70.8738, 0.22", "85.0597, -63.8643, -70.9358, 0.22", "86.1485, -64.2758, -71.0767, 0.22", "87.1479, -64.7513, -71.3312, 0.81", "87.7302, -65.0407, -71.5014, 0.81", "89.1204, -65.7836, -71.9647, 0.22", "90.1611, -66.4059, -72.4325, 0.22", "90.9362, -66.8911, -72.8423, 0.96", "91.6234, -67.3441, -73.2813, 1.55", "92.1625, -67.7067, -73.6858, 0.96", "92.4109, -67.8682, -73.883, 0.96", "93.4413, -68.514, -74.7407, 0.22", "94.4936, -69.1353, -75.6118, 0.22", "95.1149, -69.5022, -76.1133, 0.22", "95.7025, -69.8371, -76.5784, 0.22", "96.1751, -70.0973, -76.9348, 0.74", "96.8204, -70.4216, -77.3932, 1.18", "97.3953, -70.6858, -77.7562, 0.52", "97.5273, -70.7435, -77.8367, 0.52", "98.3273, -71.0645, -78.2915, 0.22", "99.0542, -71.3394, -78.7011, 0.22", "99.138, -71.3718, -78.7475, 0.22", "99.3148, -71.4429, -78.844, 0.96", "99.3946, -71.4836, -78.8904, 0.96", "100.051, -71.9029, -79.3369, 1.33", "100.697, -72.3985, -79.8354, 0.29", "101.394, -73.003, -80.4229, 0.29", "101.449, -73.0528, -80.4713, 0.29", "102.125, -73.7365, -81.1042, 0.29", "102.596, -74.2723, -81.5755, 0.74", "102.64, -74.3335, -81.6255, 0.74", "102.765, -74.5023, -81.7648, 0.74", "102.845, -74.5742, -81.8346, 0.74", "103.231, -74.8466, -82.1522, 0.74", "103.297, -74.8845, -82.2027, 0.74", "103.503, -74.9895, -82.3574, 0.74", "104.642, -75.3777, -83.1237, 0.22", "105.84, -75.6371, -83.8751, 0.22", "106.921, -75.7398, -84.4284, 0.22", "107.226, -75.7452, -84.5619, 1.25", "107.667, -75.7338, -84.7318, 1.47", "109.611, -75.572, -85.3905, 0.22", "110.458, -75.4493, -85.5353, 0.22", "112.021, -75.2246, -85.6497, 0.29", "112.738, -75.1343, -85.6698, 0.81", "113.354, -75.0747, -85.68, 1.25", "113.905, -75.0428, -85.6837, 1.33", "116.637, -75.0162, -85.7089, 0.22", "118.141, -75.017, -85.7274, 0.22", "118.81, -75.0286, -85.7579, 0.22", "119.717, -75.0332, -85.7327, 0.59", "119.836, -75.036, -85.7259, 0.59", "120.227, -75.0539, -85.701, 0.96", "120.316, -75.0597, -85.6988, 0.96", "122.007, -75.1503, -85.3839, 0.29", "124.199, -75.2774, -84.9854, 0.29", "124.982, -75.3244, -84.8677, 0.29", "125.098, -75.3295, -84.8549, 0.29", "125.768, -75.3589, -84.836, 0.29", "128.82, -75.521, -85.1087, 0.22", "130.648, -75.6234, -85.3034, 0.96", "131.35, -75.6575, -85.4005, 1.33", "131.892, -75.6624, -85.4619, 0.81", "133.481, -75.6373, -85.663, 0.22", "134.455, -75.5845, -85.7993, 0.22", "137.201, -75.4395, -86.2578, 0.66", "137.488, -75.4219, -86.2728, 0.96", "138.277, -75.3613, -86.271, 0.29", "139.432, -75.2465, -86.1966, 0.22", "139.958, -75.1354, -86.1059, 0.81" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "25.8098, -53.637, -56.2506, 1.25", "25.8882, -53.7824, -56.4379, 1.25", "26.6441, -55.0665, -57.8952, 0.29", "27.0456, -55.7367, -58.5866, 0.29", "27.7891, -56.9783, -59.7696, 0.29", "28.1572, -57.6013, -60.314, 0.29", "28.7377, -58.5852, -61.163, 0.29", "29.0496, -59.1127, -61.566, 0.29", "29.2616, -59.4734, -61.7883, 0.96", "29.4779, -59.8427, -61.9908, 1.4", "29.8303, -60.4448, -62.3412, 0.88", "30.4983, -61.6129, -63.1217, 0.22", "30.9767, -62.4994, -63.838, 0.22", "31.398, -63.2644, -64.5231, 0.22", "32.0777, -64.3946, -65.6569, 0.22", "32.7674, -65.5658, -66.8636, 0.81", "33.0423, -66.0797, -67.4025, 1.33", "33.5869, -67.3349, -68.7149, 0.37", "33.7488, -67.8084, -69.2268, 0.37", "33.9359, -68.7712, -70.1917, 0.22", "33.9736, -69.8431, -71.1721, 0.22", "33.917, -70.9627, -72.0343, 0.88", "33.7915, -71.8111, -72.6405, 1.25", "33.737, -72.0492, -72.7901, 1.11", "33.4251, -73.1346, -73.5571, 0.44", "33.0703, -74.3776, -74.4994, 0.59", "33.0335, -74.5892, -74.6833, 1.11", "33.0235, -74.994, -75.0406, 1.11", "33.0324, -75.0847, -75.1303, 1.11", "33.2804, -76.56, -76.8141, 0.44", "33.4183, -77.0989, -77.4587, 0.22", "33.5649, -77.6424, -78.0537, 0.22", "33.6832, -78.1509, -78.5664, 0.22", "33.9129, -79.2149, -79.5473, 0.96", "34.1157, -80.2257, -80.3572, 1.77", "34.2996, -81.2345, -81.0249, 0.29", "34.3989, -81.9268, -81.4482, 0.29", "34.5004, -82.6456, -81.8484, 0.29", "34.5786, -83.1189, -82.0621, 0.29", "34.7032, -83.7812, -82.2576, 0.29", "34.7174, -83.8532, -82.273, 0.29", "34.8729, -84.6459, -82.4434, 0.29", "34.8904, -84.732, -82.462, 0.29", "35.0768, -85.6087, -82.6194, 1.03", "35.173, -86.1491, -82.6971, 1.4", "35.1854, -86.2333, -82.7157, 1.4", "35.3523, -87.535, -83.0755, 0.29", "35.4544, -88.3929, -83.3492, 0.29", "35.5424, -89.1376, -83.6076, 0.81", "35.6752, -89.9889, -83.92, 0.81", "35.9509, -91.5012, -84.5034, 0.22", "36.0855, -92.1536, -84.7624, 0.22", "36.2623, -92.9028, -85.0751, 0.74", "36.4328, -93.5237, -85.3399, 1.18", "36.8424, -94.8847, -85.8936, 0.29", "36.8689, -94.9627, -85.9203, 0.29", "37.2386, -96.0463, -86.2357, 0.29", "37.4091, -96.5523, -86.393, 0.88", "37.5191, -96.8959, -86.5045, 1.47", "37.946, -98.3242, -87.0034, 0.22", "38.3489, -99.5804, -87.5531, 0.22", "38.5823, -100.235, -87.9617, 0.74", "38.608, -100.303, -88.0157, 0.74", "38.7902, -100.752, -88.4762, 1.11", "38.9236, -101.07, -88.8578, 1.4", "39.4203, -102.27, -90.475, 0.29", "39.8475, -103.365, -92.0112, 0.81", "39.9825, -103.817, -92.7011, 1.4", "40.2522, -104.768, -94.2336, 0.29", "40.3353, -105.049, -94.7082, 0.29", "40.4614, -105.485, -95.4507, 0.66", "40.4826, -105.569, -95.5902, 0.66", "40.9598, -107.506, -98.5521, 0.29", "41.0702, -107.987, -99.3375, 0.29", "41.1228, -108.277, -99.8392, 0.29", "41.1301, -108.316, -99.917, 0.29", "41.2032, -108.621, -100.488, 0.29", "41.3583, -109.153, -101.273, 0.81", "41.4095, -109.312, -101.421, 0.81", "41.6522, -110.114, -102.09, 1.25", "41.6726, -110.171, -102.133, 1.25", "42.189, -111.325, -102.89, 0.22", "42.5705, -112.035, -103.297, 0.22", "42.6546, -112.184, -103.38, 0.22", "42.9731, -112.799, -103.705, 0.22", "43.191, -113.286, -103.939, 1.03", "43.3515, -113.677, -104.132, 1.33", "43.3787, -113.75, -104.171, 1.33", "43.9679, -115.482, -105.073, 0.29", "44.2296, -116.275, -105.48, 0.29", "44.5306, -117.219, -105.943, 0.29", "44.7355, -117.831, -106.222, 0.74", "44.776, -117.947, -106.27, 0.74", "44.9154, -118.281, -106.389, 1.11", "44.9552, -118.36, -106.408, 1.11", "45.5547, -119.343, -106.664, 0.37", "45.916, -119.866, -106.809, 0.37", "45.9824, -119.976, -106.838, 0.37", "46.33, -120.613, -107.009, 0.37", "46.369, -120.689, -107.03, 0.37", "46.5523, -121.093, -107.134, 0.81", "46.7515, -121.607, -107.261, 0.81", "47.3227, -123.232, -107.653, 0.29", "47.5919, -124.19, -108.0, 0.29", "47.6095, -124.271, -108.035, 0.29", "47.7614, -125.075, -108.418, 0.29", "47.9171, -125.99, -108.874, 1.18", "48.0784, -126.883, -109.331, 1.47", "48.468, -129.039, -110.631, 0.29", "48.602, -129.79, -111.12, 0.29", "48.7255, -130.504, -111.537, 0.74", "48.9514, -131.844, -112.223, 0.29", "49.1329, -132.978, -112.72, 0.29", "49.3501, -134.54, -113.32, 0.81", "49.4205, -135.037, -113.471, 1.4", "49.7123, -137.114, -114.13, 0.22", "49.89, -138.396, -114.541, 0.22", "49.89, -138.396, -114.541, 0.96", "50.2573, -140.389, -115.142, 0.29", "50.2765, -140.471, -115.165, 0.29", "50.714, -141.777, -115.861, 0.29", "50.9112, -142.218, -116.237, 1.18", "51.1587, -142.685, -116.709, 1.18", "51.2892, -142.923, -116.956, 1.33", "51.3724, -143.062, -117.108, 1.33", "52.4258, -145.036, -119.265, 0.29", "52.6843, -145.638, -119.927, 0.29", "52.7116, -145.723, -120.014, 0.29", "52.9058, -146.449, -120.669, 0.29", "52.9229, -146.517, -120.721, 0.29", "53.1265, -147.281, -121.218, 0.59", "53.2525, -147.778, -121.451, 0.96", "53.5794, -149.167, -122.347, 0.29", "53.7745, -150.056, -123.167, 0.29", "53.8315, -150.321, -123.534, 0.74", "53.8713, -150.497, -123.823, 1.11", "53.9262, -150.732, -124.327, 1.47", "54.1788, -151.965, -127.347, 0.22", "54.3219, -152.911, -129.794, 0.22", "54.434, -153.958, -132.637, 1.11", "54.4539, -154.181, -133.263, 1.55", "54.5781, -155.765, -137.888, 0.37", "54.6239, -156.294, -139.52, 0.37", "54.6517, -156.521, -140.253, 0.74", "54.6517, -156.521, -140.253, 1.4" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-20.0076, -86.9352, -43.006, 0.74", "-22.8689, -86.8289, -45.3019, 0.74", "-22.925, -86.8274, -45.3427, 0.74", "-26.3767, -87.0221, -47.9277, 0.29", "-26.9203, -87.079, -48.3252, 0.29", "-27.1053, -87.1072, -48.4548, 0.59", "-30.3819, -87.8264, -50.5405, 0.96", "-31.649, -88.194, -51.2228, 1.55", "-33.8903, -88.9697, -52.3251, 0.59", "-34.5135, -89.2207, -52.6051, 0.59", "-37.2268, -90.3308, -53.7122, 1.03", "-40.029, -91.4765, -54.7458, 0.22", "-40.2288, -91.5586, -54.8052, 1.03", "-40.6994, -91.7265, -54.9268, 1.03", "-45.0679, -92.996, -55.8662, 0.74", "-46.3072, -93.3205, -56.1333, 0.37", "-46.3072, -93.3205, -56.1333, 1.03", "-47.0185, -93.4905, -56.2742, 1.03", "-50.5051, -94.3882, -56.9594, 0.29", "-50.8484, -94.487, -57.0243, 0.88", "-51.0744, -94.5633, -57.0556, 1.33", "-53.1829, -95.2892, -57.3459, 0.44", "-53.2385, -95.3081, -57.3496, 0.44", "-54.4582, -95.7236, -57.3189, 1.25", "-54.5892, -95.7607, -57.2844, 1.25", "-54.9156, -95.8021, -57.1473, 1.62", "-56.1622, -95.532, -56.1169, 0.59", "-56.51, -95.2322, -55.5545, 0.96", "-56.6026, -95.1124, -55.3485, 1.33", "-57.245, -93.7689, -53.116, 0.29", "-57.3679, -93.4042, -52.5203, 0.66", "-57.3819, -93.2597, -52.3096, 1.11", "-57.3565, -93.1348, -52.1531, 1.11", "-57.3126, -92.9806, -51.9816, 1.11", "-57.2294, -92.6901, -51.6721, 0.66", "-57.513, -92.76, -51.3025, 0.66" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-20.0076, -86.9352, -43.006, 1.33", "-20.073, -87.1009, -43.0687, 1.33", "-20.7174, -89.0134, -43.7932, 0.81", "-21.0445, -89.9924, -44.2004, 0.44", "-21.19, -90.4633, -44.4044, 0.44", "-21.4975, -91.6154, -44.8919, 0.15", "-21.664, -92.3945, -45.2147, 0.29", "-21.7009, -92.7924, -45.3746, 0.74", "-21.6858, -93.7067, -45.7059, 0.52", "-21.678, -94.1028, -45.8764, 0.37", "-21.6467, -94.8146, -46.2114, 0.37", "-21.5639, -95.4592, -46.5233, 0.74", "-21.3956, -96.1918, -46.814, 0.74" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-4.56134, -111.756, -85.8663, 0.29", "-5.13976, -113.038, -87.0473, 0.29", "-5.28886, -113.374, -87.3367, 0.29", "-5.50294, -113.811, -87.6921, 0.29", "-5.61462, -114.076, -87.9343, 0.81", "-5.71877, -114.324, -88.1496, 0.81", "-6.00589, -115.081, -88.7956, 0.15", "-6.1634, -115.546, -89.1507, 0.22", "-6.26235, -115.946, -89.4684, 0.96", "-6.43076, -116.919, -90.27, 0.59", "-6.57032, -117.87, -91.0586, 0.22", "-6.65744, -118.484, -91.5602, 0.29", "-6.71063, -118.8, -91.7983, 0.88", "-6.79333, -119.251, -92.1255, 0.88", "-6.95239, -120.052, -92.6438, 0.29", "-7.03062, -120.334, -92.797, 0.52", "-7.08282, -120.526, -92.8997, 0.66", "-7.32643, -121.242, -93.2284, 0.22", "-7.45379, -121.653, -93.4535, 0.22", "-7.52858, -121.945, -93.6124, 0.22", "-7.54778, -122.072, -93.679, 0.22", "-7.57478, -122.539, -93.9412, 0.88", "-7.5604, -122.728, -94.0765, 1.11", "-7.40035, -123.799, -94.9491, 0.29", "-7.35396, -124.132, -95.2569, 0.29", "-7.31243, -124.58, -95.6807, 0.44", "-7.30951, -124.626, -95.7251, 0.44", "-7.28448, -125.59, -96.6291, 0.22", "-7.24334, -125.901, -96.9844, 0.37", "-7.14981, -126.38, -97.574, 0.22", "-7.08635, -126.64, -97.9264, 0.81", "-7.077, -126.678, -97.9785, 0.81", "-7.02805, -126.887, -98.253, 1.33", "-6.64514, -128.43, -100.339, 0.29", "-6.59483, -128.62, -100.6, 0.29", "-6.53912, -128.817, -100.86, 0.29", "-6.45761, -129.068, -101.184, 0.74", "-6.39189, -129.276, -101.428, 0.88", "-6.06736, -130.333, -102.546, 0.22", "-5.98708, -130.624, -102.788, 0.22", "-5.89555, -130.922, -103.041, 0.22", "-5.69851, -131.529, -103.517, 0.66", "-5.61375, -131.794, -103.7, 1.11", "-5.57182, -131.945, -103.787, 1.33", "-5.3911, -132.728, -104.078, 0.22", "-5.30939, -133.1, -104.23, 0.22", "-5.21419, -133.686, -104.456, 0.22", "-5.17612, -133.98, -104.553, 0.22", "-5.16754, -134.048, -104.573, 0.59", "-5.12625, -134.306, -104.644, 0.59", "-4.94364, -135.226, -104.86, 0.22", "-4.77681, -135.961, -105.043, 0.22", "-4.70382, -136.272, -105.121, 0.22", "-4.60376, -136.718, -105.225, 0.96", "-4.48482, -137.294, -105.339, 0.22", "-4.44702, -137.482, -105.376, 0.22", "-4.38512, -137.794, -105.425, 0.22", "-4.31925, -138.102, -105.486, 0.22", "-4.25392, -138.415, -105.583, 0.22", "-4.20464, -138.707, -105.688, 0.22", "-4.1356, -139.339, -105.925, 0.59", "-4.11732, -139.52, -106.001, 0.74", "-4.08578, -139.877, -106.159, 0.74", "-3.98816, -141.001, -106.655, 0.29", "-3.9425, -141.622, -106.891, 0.29", "-3.92178, -141.89, -106.98, 0.29", "-3.8787, -142.464, -107.137, 0.59", "-3.85403, -142.72, -107.195, 0.96", "-3.81401, -143.057, -107.25, 0.96", "-3.70055, -143.834, -107.292, 0.22", "-3.61402, -144.355, -107.309, 0.22", "-3.57593, -144.556, -107.309, 0.29", "-3.47817, -145.077, -107.284, 0.22", "-3.42928, -145.327, -107.273, 0.37", "-3.36098, -145.575, -107.295, 0.37", "-3.23707, -145.897, -107.359, 0.22", "-3.05655, -146.294, -107.451, 0.29", "-2.84685, -146.694, -107.548, 0.29", "-2.82105, -146.739, -107.558, 0.29", "-2.18935, -147.808, -107.78, 1.03", "-1.92346, -148.279, -107.863, 1.03", "-1.56628, -148.974, -107.959, 0.22", "-1.2799, -149.619, -108.022, 0.22", "-1.02547, -150.253, -108.063, 0.22", "-0.983078, -150.37, -108.065, 0.22", "-0.767229, -151.114, -108.019, 0.22", "-0.592143, -151.797, -107.978, 0.22", "-0.47711, -152.36, -107.941, 0.22", "-0.423961, -152.701, -107.928, 0.88" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-4.56134, -111.756, -85.8663, 0.22", "-2.41745, -114.559, -89.7094, 0.22", "-1.99212, -115.113, -90.3786, 0.22", "-1.56587, -115.656, -90.9848, 0.22", "-0.860817, -116.504, -91.9034, 0.22", "-0.569883, -116.837, -92.2551, 0.66", "0.547957, -118.078, -93.5207, 0.15", "1.10405, -118.681, -93.9605, 0.15", "1.30929, -118.875, -94.1207, 0.15", "2.18499, -119.638, -94.7967, 0.74", "2.4092, -119.824, -94.9422, 0.96", "2.68135, -120.039, -95.105, 0.96" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "10.8798, -140.078, -76.168, 0.22", "10.7911, -140.802, -76.5362, 0.22", "10.7543, -141.264, -76.7603, 0.22", "10.7908, -141.756, -77.0154, 0.22", "10.8228, -141.953, -77.1132, 0.81", "10.8717, -142.173, -77.2107, 1.11", "10.9307, -142.385, -77.3013, 1.03", "10.9477, -142.426, -77.317, 1.03", "11.301, -143.164, -77.5932, 0.29", "11.4688, -143.505, -77.7087, 0.29", "11.6427, -143.895, -77.8417, 0.37", "11.7565, -144.183, -77.9372, 0.22", "11.8784, -144.539, -78.0645, 0.22", "11.9945, -144.92, -78.2008, 0.74", "12.0164, -145.009, -78.2316, 1.03", "12.151, -145.696, -78.5432, 0.22", "12.187, -145.956, -78.6763, 0.22", "12.2279, -146.39, -78.9037, 0.74", "12.2442, -146.559, -79.0068, 0.74", "12.2551, -146.695, -79.0937, 0.74", "12.2947, -147.44, -79.6193, 0.22", "12.3006, -147.649, -79.7803, 0.29", "12.3002, -147.8, -79.8985, 0.29", "12.2684, -148.47, -80.4104, 0.22", "12.242, -148.671, -80.5781, 0.22", "12.1722, -149.073, -80.9342, 0.37", "12.1669, -149.103, -80.9608, 0.81", "12.134, -149.367, -81.2342, 0.81", "12.1201, -149.498, -81.3803, 0.81", "12.0839, -150.111, -82.2169, 0.22", "12.0822, -150.315, -82.5246, 0.22", "12.0855, -150.498, -82.8159, 0.22", "12.1046, -151.066, -83.717, 0.88", "12.1142, -151.197, -83.93, 0.88", "12.228, -152.063, -85.2988, 0.37", "12.2505, -152.174, -85.4904, 0.52", "12.2636, -152.252, -85.6314, 0.74", "12.2844, -152.4, -85.8973, 0.74", "12.3934, -153.064, -87.0451, 0.22", "12.4283, -153.246, -87.3501, 0.59", "12.633, -154.277, -88.903, 0.29", "12.6676, -154.444, -89.15, 0.74", "12.6911, -154.558, -89.3125, 0.74", "12.7585, -154.994, -89.8838, 0.22", "12.7808, -155.217, -90.1294, 0.22", "12.7982, -155.519, -90.4027, 0.22", "12.8184, -156.009, -90.6779, 0.81", "12.8279, -156.189, -90.7696, 1.18", "12.8343, -156.49, -90.9031, 0.66", "12.838, -156.876, -91.0404, 0.29", "12.8452, -157.289, -91.1814, 0.29", "12.8523, -157.489, -91.2428, 0.44", "12.8691, -157.894, -91.3479, 0.15", "12.8928, -158.086, -91.4308, 0.15", "12.9667, -158.451, -91.6249, 0.59", "13.0036, -158.597, -91.7192, 0.96", "13.0659, -158.802, -91.8696, 0.96", "13.1189, -158.958, -91.9875, 0.96", "13.4468, -159.881, -92.6929, 0.29", "13.5347, -160.123, -92.8682, 0.29", "13.6739, -160.518, -93.1306, 0.37", "13.7818, -160.833, -93.3355, 1.03", "13.8585, -161.075, -93.4833, 1.25", "14.1488, -162.11, -94.1546, 0.29", "14.2174, -162.424, -94.3586, 0.29", "14.268, -162.714, -94.5588, 0.29", "14.3417, -163.228, -94.9151, 0.59", "14.3701, -163.463, -95.0887, 0.88", "14.5081, -164.745, -96.0942, 0.22", "14.5254, -164.991, -96.2922, 0.22", "14.5385, -165.233, -96.4912, 0.29", "14.5412, -165.468, -96.6795, 0.29", "14.5393, -165.914, -97.001, 0.29", "14.5429, -166.427, -97.336, 0.74", "14.5488, -166.64, -97.448, 1.25", "14.556, -166.774, -97.5147, 1.25", "14.6183, -168.045, -98.0936, 0.29", "14.6252, -168.327, -98.2045, 0.29", "14.6399, -168.693, -98.3072, 0.74", "14.6598, -168.98, -98.3628, 1.18", "14.692, -169.268, -98.4044, 0.74", "14.7651, -169.727, -98.4626, 0.22", "14.8487, -170.097, -98.4934, 0.22", "14.9922, -170.763, -98.5804, 0.22", "15.0385, -170.975, -98.6237, 0.44", "15.0861, -171.204, -98.6831, 0.44", "15.1984, -171.777, -98.8688, 0.29", "15.2517, -172.056, -98.9754, 0.59", "15.3039, -172.377, -99.0855, 0.59", "15.3539, -172.806, -99.2071, 0.22", "15.3865, -173.113, -99.2636, 0.22", "15.4305, -173.474, -99.3023, 0.81", "15.4343, -173.514, -99.3003, 0.81", "15.5126, -174.386, -99.1954, 0.88", "15.5819, -175.04, -99.1415, 0.29", "15.6082, -175.24, -99.1285, 0.29", "15.6959, -175.73, -99.1186, 0.66", "15.8104, -176.307, -99.1327, 0.96", "15.8311, -176.406, -99.1445, 0.96", "16.0065, -177.204, -99.327, 0.22", "16.0548, -177.458, -99.3691, 0.22", "16.1104, -177.76, -99.4076, 0.22", "16.1414, -177.954, -99.4257, 0.22", "16.1844, -178.322, -99.4599, 0.96", "16.1927, -178.512, -99.4673, 1.18", "16.1497, -179.345, -99.4419, 0.15", "16.1203, -179.594, -99.4343, 0.15", "16.0836, -179.824, -99.4265, 0.15", "16.0123, -180.248, -99.3884, 0.22", "15.9877, -180.421, -99.364, 0.22", "15.9585, -180.665, -99.3269, 0.22", "15.9276, -181.012, -99.2702, 0.81", "15.8992, -181.337, -99.2103, 0.96", "15.8532, -181.91, -99.0814, 0.29", "15.8276, -182.222, -99.0019, 0.22", "15.7941, -182.506, -98.9285, 0.22", "15.7865, -182.545, -98.9237, 0.22", "15.6872, -182.882, -98.9278, 0.22", "15.5887, -183.17, -98.9593, 0.81", "15.5, -183.411, -99.0041, 1.18", "15.4346, -183.595, -99.0622, 1.18", "15.1571, -184.496, -99.4302, 0.22", "15.0695, -184.85, -99.5819, 0.22", "15.0158, -185.159, -99.7165, 0.22", "14.9918, -185.358, -99.8039, 0.22", "14.9316, -186.183, -100.131, 0.52", "14.9168, -186.463, -100.224, 1.03", "14.8833, -186.979, -100.353, 0.29", "14.8292, -187.366, -100.404, 0.29", "14.7926, -187.559, -100.413, 0.37", "14.714, -187.955, -100.404, 0.22", "14.6256, -188.391, -100.364, 0.22", "14.5633, -188.713, -100.336, 0.22", "14.3408, -189.877, -100.258, 1.47", "14.3135, -190.027, -100.247, 1.47", "14.2503, -190.467, -100.226, 0.29", "14.2258, -190.806, -100.219, 0.22", "14.2283, -191.193, -100.209, 0.22", "14.2709, -191.587, -100.219, 0.22", "14.2804, -191.632, -100.225, 0.22", "14.367, -192.0, -100.276, 0.59", "14.468, -192.385, -100.321, 0.96", "14.5768, -192.759, -100.354, 0.96", "14.7634, -193.395, -100.336, 0.22", "14.8439, -193.674, -100.297, 0.22", "14.8748, -193.802, -100.269, 0.22", "14.9511, -194.164, -100.149, 0.81", "14.9995, -194.398, -100.058, 0.81", "15.1005, -194.895, -99.8678, 0.22", "15.1422, -195.119, -99.7716, 0.22", "15.2338, -195.566, -99.5886, 0.22", "15.3152, -195.891, -99.4693, 0.59", "15.3922, -196.115, -99.399, 0.96", "15.4995, -196.402, -99.3247, 0.22", "15.6149, -196.685, -99.2781, 0.22", "15.6353, -196.736, -99.2709, 0.22", "15.7421, -197.055, -99.2432, 0.22", "15.7914, -197.303, -99.2145, 0.22", "15.8354, -197.713, -99.1444, 0.22", "15.837, -197.854, -99.1197, 0.29", "15.829, -198.015, -99.0938, 0.37", "15.7875, -198.464, -99.0283, 0.22", "15.6874, -199.1, -98.979, 0.74", "15.6258, -199.44, -98.9709, 1.4", "15.5583, -199.909, -99.0225, 0.22", "15.531, -200.14, -99.0736, 0.22", "15.5176, -200.346, -99.1409, 0.22", "15.5107, -200.857, -99.3606, 1.11", "15.5168, -201.075, -99.4858, 1.11", "15.5729, -201.787, -99.9178, 0.22", "15.5937, -201.921, -99.9983, 0.22", "15.6794, -202.337, -100.254, 0.22", "15.766, -202.686, -100.456, 0.74", "15.9781, -203.353, -100.791, 0.29", "16.0728, -203.606, -100.908, 0.29", "16.171, -203.817, -100.992, 0.59", "16.5174, -204.433, -101.228, 0.22", "16.7329, -204.732, -101.336, 0.22", "17.0128, -205.029, -101.494, 0.22", "17.231, -205.233, -101.615, 0.22", "17.5718, -205.537, -101.827, 1.25", "17.7435, -205.684, -101.94, 1.69", "17.8901, -205.802, -102.034, 1.18", "18.9715, -206.658, -102.804, 0.29", "19.2693, -206.898, -103.041, 0.29", "19.3015, -206.923, -103.066, 0.29", "19.4572, -207.03, -103.196, 0.29", "19.5888, -207.11, -103.296, 0.29", "19.6215, -207.127, -103.315, 0.29", "19.8585, -207.247, -103.394, 0.29", "20.1356, -207.408, -103.548, 0.29", "20.7738, -207.836, -103.937, 0.29", "21.0044, -208.008, -104.088, 0.29", "21.3946, -208.33, -104.39, 1.33", "21.5818, -208.502, -104.543, 1.33", "22.4438, -209.387, -105.281, 0.22", "22.6538, -209.616, -105.474, 0.22", "22.7371, -209.716, -105.55, 0.22", "23.1543, -210.247, -105.943, 0.22", "23.3819, -210.537, -106.146, 1.03", "23.4832, -210.661, -106.222, 1.18", "24.2413, -211.587, -106.64, 0.22", "24.6443, -212.052, -106.837, 0.22", "24.8463, -212.285, -106.903, 0.22", "25.0583, -212.532, -106.925, 0.29", "25.2419, -212.746, -106.913, 0.29", "25.3739, -212.9, -106.858, 0.29", "25.486, -213.04, -106.75, 0.37", "25.786, -213.425, -106.42, 0.44", "25.8518, -213.524, -106.339, 0.44", "26.0424, -213.878, -106.103, 0.22", "26.1343, -214.057, -105.999, 0.22", "26.2503, -214.294, -105.886, 0.29", "26.3612, -214.521, -105.801, 0.29", "26.3888, -214.577, -105.788, 0.29", "26.5942, -215.044, -105.704, 0.22", "26.6934, -215.306, -105.677, 0.22", "26.7796, -215.584, -105.653, 0.22", "26.7895, -215.623, -105.65, 0.22", "26.8194, -215.777, -105.643, 0.22", "26.873, -216.12, -105.628, 0.66", "26.8983, -216.32, -105.62, 0.66", "26.9458, -216.722, -105.603, 0.15", "26.9787, -216.964, -105.59, 0.22", "27.0351, -217.353, -105.568, 0.22", "27.1001, -217.752, -105.544, 0.29", "27.1443, -217.994, -105.529, 0.22", "27.1661, -218.093, -105.522, 0.22", "27.2322, -218.329, -105.506, 0.66" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "10.8798, -140.078, -76.168, 0.37", "12.3546, -141.364, -77.3228, 0.37", "13.2437, -142.171, -78.0645, 0.29", "13.3098, -142.237, -78.1235, 0.29", "13.8229, -142.78, -78.7053, 0.29", "14.0838, -143.081, -79.0281, 0.29", "15.1092, -144.405, -80.4047, 0.52", "15.2243, -144.595, -80.612, 0.88", "15.3739, -144.914, -80.9605, 0.88", "16.1781, -146.639, -83.0813, 0.15", "16.3665, -147.059, -83.617, 0.15", "16.5195, -147.433, -84.0849, 0.15", "16.8415, -148.299, -85.0922, 0.81", "16.9118, -148.497, -85.3138, 0.81", "17.6316, -150.711, -87.5888, 0.22", "17.7733, -151.28, -88.0704, 0.22", "17.9149, -151.877, -88.5232, 0.22", "17.9859, -152.213, -88.7268, 0.59", "18.2306, -153.769, -89.3847, 0.15", "18.2864, -154.445, -89.5656, 0.15", "18.249, -155.572, -89.6386, 0.66", "18.2317, -156.034, -89.6826, 0.96", "18.2212, -157.082, -89.789, 0.22", "18.2212, -157.179, -89.7989, 0.22", "18.2287, -157.874, -89.8564, 0.22", "18.2565, -158.314, -89.9346, 0.22", "18.3488, -159.172, -90.1522, 0.22", "18.4613, -159.95, -90.3368, 0.22", "18.5317, -160.344, -90.4169, 0.66", "18.6199, -160.723, -90.4997, 0.66", "18.8684, -161.558, -90.6679, 0.29", "19.0588, -162.101, -90.8035, 0.29", "19.1977, -162.552, -90.9285, 0.66", "19.2941, -162.922, -91.0461, 0.66", "19.501, -163.895, -91.3642, 1.11", "19.6547, -164.775, -91.645, 0.88", "19.8893, -166.292, -92.1584, 0.22", "20.0108, -167.222, -92.4866, 0.22", "20.0966, -168.08, -92.7628, 0.22", "20.1346, -168.632, -92.9177, 0.22", "20.1483, -169.317, -93.0665, 0.81", "20.1509, -170.158, -93.2076, 0.81", "20.1499, -170.762, -93.2577, 0.81", "20.181, -171.864, -93.3238, 0.22", "20.1817, -172.311, -93.3447, 0.22", "20.1826, -173.029, -93.358, 0.22", "20.1888, -173.617, -93.3478, 0.81", "20.1811, -174.155, -93.3252, 0.81", "20.162, -174.648, -93.3152, 0.81", "20.1033, -175.751, -93.3161, 0.22", "20.0654, -176.489, -93.3162, 0.22", "19.9963, -177.492, -93.3229, 0.22", "19.9211, -178.255, -93.3447, 0.22", "19.8425, -178.936, -93.3719, 0.22", "19.8151, -179.147, -93.3826, 0.59", "19.7949, -179.291, -93.3914, 0.59", "19.7321, -179.7, -93.4201, 0.81", "19.7054, -180.536, -93.525, 0.22", "19.7425, -180.843, -93.566, 0.22", "19.8457, -181.356, -93.6311, 0.59", "19.9431, -181.752, -93.6768, 0.59", "19.9906, -181.922, -93.6953, 0.59", "20.4172, -183.241, -93.8239, 0.22", "20.6571, -183.924, -93.8819, 0.22", "20.941, -184.653, -94.0024, 0.22", "21.1323, -185.101, -94.1038, 0.44", "21.1721, -185.185, -94.1257, 0.44", "21.2993, -185.439, -94.1963, 0.74", "21.4977, -185.802, -94.2993, 0.74", "22.1326, -187.064, -94.699, 0.15", "22.2311, -187.333, -94.7614, 0.15", "22.2869, -187.587, -94.7988, 0.15", "22.3747, -188.167, -94.8524, 0.15", "22.4069, -188.588, -94.8755, 0.66", "22.4284, -189.632, -94.9332, 1.03", "22.3841, -191.126, -94.9886, 0.22", "22.3308, -192.364, -95.0633, 0.22", "22.3169, -192.732, -95.0917, 0.52", "22.3267, -193.157, -95.1766, 0.59", "22.4334, -194.135, -95.5206, 0.15", "22.5544, -194.634, -95.7845, 0.15", "22.6009, -194.743, -95.8709, 0.52", "22.7728, -195.095, -96.1854, 0.74", "23.5174, -196.696, -97.6853, 0.15", "23.7399, -197.208, -98.1691, 0.15", "23.8239, -197.412, -98.3597, 0.59", "24.3735, -198.802, -99.6593, 0.22", "24.5324, -199.269, -100.067, 0.22", "24.7322, -199.981, -100.634, 0.66", "24.8052, -200.346, -100.865, 0.88", "24.8654, -200.737, -101.087, 0.88", "25.0378, -202.235, -101.806, 0.15", "25.1032, -202.898, -102.086, 0.15", "25.1395, -203.177, -102.206, 0.44", "25.2197, -203.672, -102.41, 0.22", "25.2977, -204.163, -102.616, 0.15", "25.3853, -204.904, -102.845, 0.15", "25.601, -206.285, -103.149, 0.88", "25.666, -206.557, -103.203, 0.88", "25.7892, -206.964, -103.262, 0.88", "25.8443, -207.111, -103.276, 0.88", "26.5511, -208.794, -103.301, 0.15", "26.9521, -209.733, -103.252, 0.22", "27.157, -210.218, -103.201, 0.22", "27.5129, -211.084, -103.123, 0.22", "27.6581, -211.466, -103.105, 0.22", "28.0479, -212.534, -103.087, 0.15", "28.1507, -212.83, -103.092, 0.15", "28.3402, -213.475, -103.091, 0.74", "28.5789, -214.322, -103.107, 0.74", "28.8223, -215.231, -103.134, 0.07", "28.9472, -215.721, -103.15, 0.07", "29.0794, -216.231, -103.188, 0.81", "29.2267, -216.832, -103.218, 0.81", "29.4192, -217.846, -103.237, 0.22", "29.5509, -218.732, -103.234, 0.22", "29.5927, -219.113, -103.222, 0.22", "29.6958, -220.208, -103.173, 0.81", "29.7672, -221.301, -103.112, 0.88", "29.81, -222.369, -103.034, 0.22", "29.8093, -223.05, -102.976, 0.22", "29.7984, -223.656, -102.917, 0.22", "29.7955, -224.083, -102.867, 0.22", "29.8181, -224.776, -102.763, 0.22", "29.8214, -224.856, -102.748, 0.22", "29.8523, -225.34, -102.65, 0.22", "29.8584, -225.446, -102.627, 0.22", "29.8777, -225.911, -102.485, 0.22", "29.9261, -226.862, -102.162, 0.44", "30.072, -228.517, -101.583, 0.22", "30.1728, -229.374, -101.295, 0.59", "30.2139, -229.671, -101.197, 0.88", "30.5176, -231.671, -100.558, 0.22", "30.7064, -232.715, -100.24, 0.22", "30.9649, -233.864, -99.9187, 0.22", "31.2185, -234.818, -99.6927, 0.74", "31.2415, -234.908, -99.6713, 0.74", "31.3538, -235.33, -99.5927, 0.74", "31.6284, -236.138, -99.5448, 0.29", "31.9479, -236.982, -99.5238, 0.29", "32.1254, -237.357, -99.5642, 0.29", "32.4064, -237.866, -99.6726, 0.52", "32.6204, -238.242, -99.779, 0.96", "33.4261, -239.616, -100.232, 0.22", "33.4823, -239.707, -100.267, 0.22", "34.3602, -240.968, -100.834, 0.59", "34.5389, -241.204, -100.948, 0.59", "35.2288, -242.069, -101.418, 0.22", "35.597, -242.544, -101.699, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-54.7991, -58.6446, 21.3811, 0.22", "-59.2689, -62.5518, 25.0587, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-54.7991, -58.6446, 21.3811, 0.29", "-60.5416, -61.827, 23.5802, 0.22", "-65.9809, -65.8117, 25.0549, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-52.5011, 32.3341, 76.6998, 0.29", "-56.9497, 28.0064, 85.69, 0.29", "-63.8545, 25.1501, 93.7043, 0.29", "-72.1555, 23.6082, 100.716, 0.29", "-81.2325, 23.6418, 106.898, 0.29" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-52.5011, 32.3341, 76.6998, 0.44", "-58.1372, 27.4621, 86.5347, 0.29", "-63.7141, 21.6611, 95.8646, 0.29", "-69.4307, 14.7713, 104.301, 0.29", "-76.4259, 9.63495, 113.083, 0.29", "-83.6771, 5.44771, 122.177, 0.29", "-90.0855, 1.84498, 132.117, 0.29", "-95.507, -1.30657, 142.771, 0.29", "-100.871, -4.74652, 153.36, 0.29", "-103.492, -7.61252, 165.081, 0.29", "-105.268, -11.612, 176.598, 0.29", "-105.708, -17.2833, 187.469, 0.29", "-104.58, -24.128, 197.531, 0.29", "-102.228, -31.5027, 206.951, 0.29", "-97.9868, -40.3908, 214.03, 0.29", "-94.7508, -48.4757, 222.52, 0.29", "-93.229, -57.6673, 230.314, 0.29", "-90.4385, -66.5333, 238.127, 0.29", "-87.2477, -75.1095, 246.116, 0.29", "-84.6104, -82.9635, 255.037, 0.29", "-81.904, -91.0425, 263.723, 0.29", "-78.6287, -99.6243, 271.67, 0.29" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-37.9647, 47.4054, -53.1864, 0.22", "-38.685, 48.1385, -55.3955, 0.22", "-38.7762, 48.2366, -55.678, 0.22", "-38.8952, 48.3807, -56.073, 0.22", "-39.0603, 48.5952, -56.6167, 0.22", "-39.5486, 49.3133, -58.3998, 0.22", "-39.6349, 49.4502, -58.732, 0.52", "-39.665, 49.4997, -58.8431, 0.74", "-39.7172, 49.6001, -59.0789, 0.74", "-39.7479, 49.731, -59.3804, 0.88", "-39.676, 50.4985, -60.8425, 0.22", "-39.6632, 50.5446, -60.899, 0.37", "-39.646, 50.6028, -60.9734, 0.37", "-39.5898, 50.7749, -61.1842, 0.37", "-39.4175, 51.2487, -61.7159, 0.15", "-39.2928, 51.5281, -61.9828, 0.15", "-39.2423, 51.6635, -62.1587, 0.15", "-39.1517, 51.992, -62.7316, 0.29", "-39.115, 52.1109, -62.9714, 0.59", "-39.0862, 52.199, -63.1678, 1.03", "-39.0629, 52.2614, -63.3221, 1.03", "-38.5707, 53.091, -65.4736, 0.59", "-38.5488, 53.1193, -65.5474, 0.59", "-38.3214, 53.3544, -66.137, 0.22", "-38.2117, 53.4547, -66.4227, 0.29", "-38.0835, 53.5578, -66.7414, 0.29", "-37.8741, 53.6966, -67.1723, 0.66", "-37.7975, 53.7438, -67.2858, 0.66", "-37.7207, 53.7941, -67.4195, 0.74", "-37.2064, 54.1391, -68.4166, 0.74", "-37.1861, 54.1535, -68.4976, 0.74", "-36.8552, 54.3953, -69.8266, 0.22", "-36.7266, 54.492, -70.3325, 0.22", "-36.5858, 54.6052, -70.8453, 0.44", "-36.4985, 54.683, -71.1548, 0.66", "-35.5425, 55.6045, -74.3625, 0.81", "-35.2591, 56.0399, -76.1073, 0.29", "-35.2591, 56.0986, -76.3682, 0.22", "-35.2783, 56.1787, -76.733, 0.22", "-35.2908, 56.2101, -76.8867, 0.22", "-35.298, 56.2247, -76.9577, 0.22", "-35.5751, 56.7163, -79.2878, 0.44", "-35.7066, 56.8714, -80.0496, 0.59", "-35.7514, 56.9196, -80.2752, 0.74", "-36.2876, 57.3521, -82.7569, 0.29", "-36.3382, 57.3878, -82.9788, 0.59", "-36.3809, 57.4171, -83.1587, 0.66", "-36.9559, 57.7899, -85.3899, 0.07", "-37.0742, 57.8577, -85.8176, 0.07", "-38.1849, 58.4754, -89.4742, 0.66", "-38.2081, 58.488, -89.5444, 0.88", "-38.2756, 58.5248, -89.749, 0.88", "-38.3237, 58.5531, -89.8945, 1.11", "-39.1799, 59.1108, -92.4686, 0.29", "-39.3316, 59.2207, -92.8962, 0.29", "-39.3624, 59.25, -92.9673, 0.29", "-39.7028, 59.5291, -93.6779, 0.15", "-39.8654, 59.6483, -93.9899, 0.15", "-39.9116, 59.6812, -94.0686, 0.15", "-40.6327, 60.1514, -95.0518, 0.66", "-40.8615, 60.2946, -95.3462, 0.96", "-41.8559, 60.8979, -96.5944, 0.22", "-41.9233, 60.9377, -96.6734, 0.22", "-42.2182, 61.1088, -97.0109, 0.22", "-42.2641, 61.1357, -97.0595, 0.22", "-42.5144, 61.268, -97.3771, 0.22", "-43.1395, 61.5957, -98.2575, 0.52", "-43.2854, 61.6748, -98.4698, 0.81", "-43.3459, 61.7062, -98.5654, 1.03", "-43.3935, 61.7301, -98.6535, 1.03", "-44.7126, 62.3764, -101.258, 0.37", "-45.0135, 62.5231, -101.886, 0.37", "-45.1235, 62.5769, -102.118, 0.37", "-45.4705, 62.7456, -102.878, 0.52", "-46.0782, 63.0477, -104.248, 0.74", "-46.1334, 63.0809, -104.392, 0.81", "-46.1825, 63.1147, -104.536, 0.88", "-46.2047, 63.127, -104.605, 0.88", "-46.2379, 63.1426, -104.701, 1.03", "-46.2675, 63.1547, -104.778, 1.03", "-47.0515, 63.278, -107.049, 0.29", "-47.3161, 63.2891, -107.846, 0.29", "-47.5208, 63.2843, -108.467, 0.59", "-47.5208, 63.2843, -108.467, 0.59", "-47.5611, 63.2805, -108.588, 0.59", "-48.9656, 63.1164, -112.684, 0.07", "-49.0295, 63.1006, -112.873, 0.07", "-49.0623, 63.0923, -112.98, 0.07", "-49.0911, 63.0856, -113.072, 0.59", "-49.1511, 63.0619, -113.347, 0.96", "-49.1944, 63.0369, -113.62, 1.11", "-49.56, 62.6131, -117.366, 0.37", "-49.5872, 62.5644, -117.756, 0.59", "-49.5975, 62.5238, -118.046, 0.74", "-49.6637, 61.2848, -125.956, 0.29", "-49.6602, 61.2332, -126.255, 0.29", "-49.6516, 61.1358, -126.791, 0.29", "-49.6507, 61.1169, -126.896, 0.29", "-49.6396, 60.9991, -127.536, 0.29", "-49.5907, 60.8646, -128.072, 0.29", "-49.2244, 60.4777, -128.692, 0.52", "-49.1895, 60.4379, -128.759, 0.81", "-49.1623, 60.4047, -128.818, 0.81", "-49.0466, 60.2565, -129.089, 1.11", "-48.1851, 59.0536, -131.367, 0.22", "-48.0443, 58.8646, -131.723, 0.22" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-37.9647, 47.4054, -53.1864, 0.22", "-40.6845, 46.0165, -58.6095, 0.22", "-41.0151, 45.8588, -59.2064, 0.22", "-41.2846, 45.7345, -59.6699, 0.74", "-41.5189, 45.6267, -60.0552, 1.03", "-43.1002, 44.906, -62.5447, 0.22", "-43.4641, 44.7377, -63.1005, 0.22", "-43.6257, 44.68, -63.247, 0.22", "-43.6916, 44.6548, -63.3108, 0.22", "-43.9125, 44.5655, -63.5324, 0.44", "-44.0597, 44.5013, -63.6717, 0.44", "-44.2308, 44.4223, -63.8032, 0.44", "-44.9014, 44.2267, -64.6358, 0.15", "-45.1365, 44.1863, -64.9464, 0.15", "-45.9798, 44.1354, -66.2946, 0.81", "-46.44, 44.1196, -67.0733, 1.18", "-46.5544, 44.1173, -67.2735, 1.33", "-48.3641, 44.1299, -70.4914, 0.59", "-48.7265, 44.1429, -71.1517, 0.74", "-50.5463, 44.2798, -74.4662, 0.29", "-50.8476, 44.3107, -75.0152, 0.29", "-50.9213, 44.3213, -75.1461, 0.37", "-51.0543, 44.3421, -75.3548, 0.37", "-51.1978, 44.3635, -75.5109, 0.37", "-51.6567, 44.4698, -75.9109, 0.37", "-52.3865, 44.753, -76.0827, 0.15", "-53.0055, 44.9602, -76.3344, 0.15", "-53.4337, 45.0459, -76.5403, 0.22", "-53.5327, 45.0587, -76.6076, 0.29", "-53.92, 45.0841, -76.9309, 0.29", "-54.1235, 45.0948, -77.3079, 0.29", "-54.8072, 45.1232, -78.9687, 0.88", "-55.0241, 45.133, -79.5714, 0.96", "-55.4368, 45.1596, -80.7361, 1.11", "-55.4368, 45.1596, -80.7361, 1.11", "-56.6529, 45.1496, -85.1435, 0.52", "-56.8052, 45.1361, -85.7767, 0.66", "-57.012, 45.1066, -86.7027, 0.66", "-57.5711, 44.9849, -89.3006, 0.88", "-57.6301, 44.9664, -89.5603, 0.88", "-59.5756, 44.3623, -97.4095, 0.96", "-59.6598, 44.3309, -97.7318, 1.11", "-59.7156, 44.3136, -97.9367, 1.11", "-60.1246, 44.1963, -99.389, 1.18", "-60.2535, 44.1664, -99.8372, 1.33", "-61.0256, 44.0701, -102.311, 0.37", "-61.1104, 44.0746, -102.525, 0.37", "-62.5242, 44.1807, -106.668, 0.37", "-62.7683, 44.1866, -107.401, 0.74", "-62.8717, 44.1808, -107.719, 0.74", "-63.9822, 44.0432, -111.264, 0.81", "-64.1648, 44.0064, -111.863, 0.81", "-65.9705, 43.4498, -117.612, 0.29", "-66.2765, 43.3238, -118.524, 0.29", "-66.5041, 43.2183, -119.158, 0.74", "-66.5821, 43.1782, -119.352, 1.03", "-66.7081, 43.108, -119.617, 1.33", "-68.9974, 41.8306, -123.874, 0.29", "-69.3349, 41.6291, -124.438, 0.29", "-69.4904, 41.5337, -124.723, 0.29", "-70.058, 41.1794, -125.775, 0.66", "-70.2017, 41.0798, -126.045, 0.81", "-70.4633, 40.8833, -126.549, 0.66", "-72.1837, 39.224, -129.947, 0.88", "-72.2616, 39.1366, -130.127, 1.11", "-72.388, 38.9729, -130.462, 1.55", "-72.513, 38.7619, -130.869, 1.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-64.765, 185.748, -177.818, 0.29", "-65.1041, 186.781, -178.687, 0.29", "-65.3743, 187.517, -179.37, 0.81", "-65.9061, 188.756, -180.61, 0.29", "-65.9637, 188.877, -180.737, 0.22", "-66.0231, 188.973, -180.873, 0.22", "-66.3975, 189.427, -181.678, 0.52", "-66.501, 189.487, -181.965, 0.81", "-66.6108, 189.518, -182.293, 0.29", "-66.637, 189.521, -182.372, 0.29", "-67.1941, 189.618, -184.091, 0.22", "-67.3536, 189.654, -184.579, 0.22", "-68.0291, 189.857, -186.839, 0.37", "-68.089, 189.912, -187.145, 0.66", "-68.1076, 189.938, -187.269, 0.66", "-68.1265, 189.969, -187.384, 0.66", "-68.1605, 190.043, -187.616, 0.66", "-68.3038, 190.409, -188.664, 0.66", "-68.4321, 191.137, -191.049, 0.44", "-68.4401, 191.259, -191.483, 0.44", "-68.4405, 191.51, -192.406, 0.52", "-68.4334, 191.646, -192.913, 0.59", "-68.412, 191.76, -193.334, 0.74", "-68.0733, 192.945, -197.674, 0.22", "-68.0524, 192.998, -197.867, 0.66", "-68.0415, 193.021, -197.949, 0.66", "-67.4273, 194.125, -201.924, 0.29", "-67.3182, 194.341, -202.664, 0.52", "-67.2991, 194.378, -202.791, 0.66", "-67.2344, 194.525, -203.206, 0.66" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-64.765, 185.748, -177.818, 0.15", "-65.9646, 186.077, -176.637, 0.15", "-66.0258, 186.097, -176.601, 0.15", "-66.4169, 186.24, -176.501, 0.44", "-66.7058, 186.356, -176.465, 0.15", "-66.9106, 186.474, -176.453, 0.15", "-67.2323, 186.741, -176.437, 0.15", "-67.5966, 187.163, -176.551, 0.88", "-67.8067, 187.452, -176.645, 1.03", "-68.1074, 187.945, -176.814, 0.52", "-68.618, 188.878, -177.14, 0.22", "-69.0625, 189.717, -177.43, 0.22", "-69.6446, 190.766, -177.895, 0.22", "-69.7493, 190.94, -177.983, 0.22", "-70.0801, 191.429, -178.277, 0.81", "-70.3473, 191.766, -178.517, 1.33", "-70.6619, 192.082, -178.788, 0.88", "-71.8976, 193.037, -179.685, 0.22", "-72.1231, 193.191, -179.815, 0.22", "-72.4033, 193.363, -179.984, 0.22", "-72.484, 193.403, -180.116, 0.22", "-72.8416, 193.544, -180.918, 0.81", "-73.0837, 193.604, -181.551, 1.4", "-73.2565, 193.622, -182.038, 1.84", "-73.539, 193.637, -182.83, 1.92", "-75.1594, 193.688, -188.709, 0.37", "-75.2253, 193.687, -188.969, 0.59", "-75.3704, 193.676, -189.593, 0.44", "-75.4589, 193.667, -190.025, 0.66", "-75.5676, 193.653, -190.615, 1.25", "-76.5948, 193.53, -196.691, 1.25", "-76.7038, 193.531, -197.29, 1.25" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-57.9999, 29.5246, -24.5715, 0.22", "-59.6985, 28.6398, -25.4586, 0.22", "-60.7256, 28.0991, -25.969, 0.74", "-61.238, 27.8083, -26.1787, 0.74", "-62.012, 27.3561, -26.5142, 0.29", "-62.8988, 26.8326, -26.9094, 1.03", "-63.5698, 26.4275, -27.2149, 0.59", "-63.9172, 26.2048, -27.3617, 0.44", "-64.9866, 25.5099, -27.8269, 0.22", "-65.8726, 24.9199, -28.2621, 0.59", "-66.0352, 24.8197, -28.3479, 0.59", "-66.2136, 24.7191, -28.4486, 0.59", "-66.7384, 24.4304, -28.7492, 0.37", "-67.4378, 24.0881, -29.0749, 0.15", "-68.3812, 23.6383, -29.4665, 0.22", "-69.3388, 23.1633, -29.7867, 0.22", "-69.7757, 22.9451, -29.9228, 0.81", "-70.2428, 22.7165, -30.0524, 0.81", "-72.0372, 21.8527, -30.5007, 0.29", "-72.4625, 21.653, -30.6098, 1.03", "-72.9255, 21.448, -30.7083, 1.4", "-73.3715, 21.2643, -30.8093, 1.11", "-74.8533, 20.6946, -31.1651, 0.29", "-75.7302, 20.3745, -31.3881, 0.29", "-76.1219, 20.2317, -31.497, 0.74", "-76.5298, 20.086, -31.613, 0.52", "-78.1328, 19.4935, -32.1285, 0.29", "-79.1422, 19.1133, -32.4878, 0.29", "-79.3596, 19.0293, -32.5734, 0.66", "-79.8731, 18.8212, -32.7862, 1.47", "-80.4115, 18.6084, -33.0219, 1.47", "-81.5916, 18.1575, -33.5602, 0.22", "-81.7742, 18.0953, -33.6434, 0.59", "-82.1454, 17.9614, -33.8163, 0.59", "-82.4102, 17.8619, -33.9293, 0.52", "-83.1635, 17.5724, -34.2279, 0.37", "-83.7293, 17.345, -34.4357, 0.37", "-84.1394, 17.1747, -34.5714, 0.37", "-85.4012, 16.6267, -35.0199, 0.29", "-86.7248, 16.0406, -35.5075, 0.29", "-87.1394, 15.858, -35.6619, 0.44", "-87.6265, 15.6396, -35.847, 1.03", "-88.0638, 15.4677, -36.0172, 1.11", "-89.1137, 15.1455, -36.5074, 0.37", "-89.5401, 15.0522, -36.7396, 0.74", "-89.8265, 14.9942, -36.9198, 0.44", "-90.0869, 14.9477, -37.0905, 0.44", "-90.7114, 14.8846, -37.5731, 0.22", "-92.004, 14.8253, -38.6841, 0.22", "-92.3265, 14.831, -38.9709, 1.11", "-92.7264, 14.8466, -39.3318, 1.03", "-92.9441, 14.8613, -39.5372, 1.03", "-94.3428, 14.971, -40.8772, 0.22", "-95.3999, 15.0858, -41.8725, 0.22", "-95.7294, 15.1467, -42.159, 0.88", "-96.1087, 15.2375, -42.4751, 0.88", "-96.7971, 15.4472, -42.9929, 0.66", "-97.3187, 15.6396, -43.3451, 0.29", "-97.9291, 15.9288, -43.6577, 0.29", "-98.1384, 16.0721, -43.7872, 0.29", "-98.4467, 16.3194, -44.0093, 0.74", "-98.9285, 16.768, -44.3847, 1.03", "-99.4048, 17.2747, -44.7643, 0.44", "-99.5199, 17.417, -44.8636, 0.44", "-100.294, 18.4389, -45.6324, 0.29", "-100.54, 18.7777, -45.9013, 0.29", "-100.655, 18.9415, -46.0413, 0.44", "-100.999, 19.4504, -46.4948, 0.22", "-101.247, 19.7896, -46.7645, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-57.9999, 29.5246, -24.5715, 0.52", "-58.7838, 30.0946, -24.7248, 0.52", "-59.5419, 30.6326, -24.8586, 0.52", "-60.0038, 30.8989, -24.8445, 0.22", "-60.2326, 31.0083, -24.7499, 0.59", "-60.5145, 31.1389, -24.5992, 0.96", "-60.742, 31.2447, -24.4683, 0.88", "-61.0867, 31.391, -24.217, 0.81", "-62.1985, 31.8631, -23.359, 0.29", "-63.5988, 32.4703, -22.2997, 0.52", "-63.9044, 32.5999, -22.0565, 0.96", "-64.1621, 32.7145, -21.8443, 0.96", "-64.5453, 32.889, -21.5265, 0.44", "-65.1823, 33.2429, -20.8435, 0.37", "-65.3917, 33.3878, -20.5821, 0.37", "-66.183, 33.9385, -19.7973, 0.88", "-66.4414, 34.1074, -19.5585, 1.33", "-66.4926, 34.1392, -19.5155, 1.33", "-68.1002, 35.046, -18.1679, 0.59", "-68.4714, 35.2483, -17.8897, 0.52", "-69.9689, 35.9775, -17.0645, 0.22", "-70.2023, 36.0753, -16.9544, 0.74", "-70.5068, 36.1801, -16.8248, 0.74", "-71.7811, 36.5721, -16.4617, 0.74", "-72.6638, 36.8002, -16.3427, 0.29", "-73.1307, 36.9129, -16.2573, 1.11", "-74.7179, 37.2976, -15.9161, 0.96", "-75.2803, 37.4537, -15.8314, 0.74", "-76.472, 37.8165, -15.7282, 0.22", "-76.7091, 37.8988, -15.6946, 0.74", "-76.9393, 37.9792, -15.6548, 0.74", "-78.6323, 38.6146, -15.3993, 0.29", "-78.9935, 38.7629, -15.3653, 1.11", "-79.239, 38.8696, -15.3114, 1.11", "-81.1801, 39.7182, -14.5708, 0.44", "-87.9345, 41.6421, -12.1128, 0.44" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-66.7014, 40.2442, -5.08522, 0.29", "-73.4203, 42.4233, -3.27292, 0.29", "-79.8011, 44.7847, -0.656419, 0.29", "-86.1791, 47.9809, 0.747572, 0.29", "-92.0947, 51.7892, 2.5202, 0.29", "-98.2925, 54.9179, 4.68738, 0.29", "-103.856, 58.3873, 7.81844, 0.29", "-108.289, 62.1226, 12.1917, 0.29", "-112.023, 66.3831, 16.7113, 0.29", "-115.073, 70.4673, 21.872, 0.29", "-116.826, 74.0677, 27.9389, 0.29", "-118.074, 77.8948, 33.9857, 0.29", "-119.974, 81.8785, 39.7487, 0.29", "-122.391, 85.8144, 45.3491, 0.29", "-124.327, 89.5312, 51.2845, 0.29", "-125.991, 93.857, 56.8583, 0.29", "-128.765, 98.2616, 61.8967, 0.29", "-131.713, 101.903, 67.4514, 0.29", "-135.581, 105.983, 72.0326, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-66.7014, 40.2442, -5.08522, 0.52", "-73.9751, 43.023, -2.72607, 0.29", "-81.5623, 44.7933, -0.314382, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-31.8398, 113.331, -128.157, 0.22", "-31.3284, 114.362, -131.376, 0.22", "-31.2319, 114.557, -131.984, 1.55", "-31.0351, 114.954, -133.223, 0.29", "-30.994, 115.037, -133.481, 0.29", "-30.9739, 115.077, -133.608, 0.29", "-30.871, 115.285, -134.256, 1.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-31.8398, 113.331, -128.157, 0.29", "-32.9483, 113.03, -127.46, 0.29", "-33.3451, 112.968, -127.02, 0.22", "-33.5174, 112.951, -126.773, 0.22", "-34.3681, 112.876, -125.454, 1.11", "-35.4073, 112.794, -123.788, 0.29", "-35.6985, 112.771, -123.326, 0.29", "-37.2472, 112.619, -120.558, 0.29", "-37.8823, 112.558, -119.313, 0.22", "-37.9713, 112.552, -119.134, 0.22", "-38.0124, 112.551, -119.035, 0.22", "-38.1837, 112.563, -118.552, 0.37", "-38.253, 112.561, -118.358, 0.37", "-39.3861, 112.33, -115.886, 0.22", "-39.5771, 112.292, -115.444, 0.52", "-40.4102, 112.14, -113.384, 0.88" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-41.8324, 140.247, 4.40511, 0.44", "-42.0283, 141.824, 3.47279, 0.44", "-42.0955, 142.168, 3.32048, 0.44", "-42.1417, 142.368, 3.25095, 0.44", "-42.3218, 143.094, 3.03592, 0.52", "-42.4746, 143.614, 2.88313, 0.44", "-42.6787, 144.194, 2.71033, 0.22", "-42.7979, 144.48, 2.65159, 0.22", "-42.995, 144.821, 2.5388, 0.66", "-43.0708, 144.928, 2.47172, 0.66", "-43.4544, 145.321, 2.00255, 0.22", "-43.6494, 145.481, 1.74745, 0.22", "-44.0545, 145.782, 1.19819, 0.81", "-44.4132, 146.025, 0.713779, 0.96", "-45.1215, 146.464, -0.214611, 0.59", "-45.6672, 146.789, -0.887672, 0.22", "-46.1999, 147.094, -1.54835, 0.22", "-46.3481, 147.181, -1.72996, 0.52", "-46.443, 147.235, -1.83387, 0.52", "-46.8268, 147.479, -2.22679, 0.22", "-47.2009, 147.697, -2.43579, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-41.8324, 140.247, 4.40511, 0.59", "-39.8015, 141.087, 3.83759, 0.59", "-39.3034, 141.312, 3.68886, 0.59", "-38.704, 141.631, 3.43579, 0.59", "-38.118, 141.988, 3.15935, 0.59", "-37.1938, 142.63, 2.72858, 0.37", "-36.9255, 142.835, 2.58932, 0.74", "-36.4406, 143.323, 2.32983, 0.74", "-35.6604, 144.262, 1.87445, 0.74", "-35.3183, 144.768, 1.6425, 0.6", "-34.8266, 145.593, 1.28506, 0.52", "-34.3608, 146.522, 0.899705, 0.3", "-33.8348, 147.618, 0.4845, 0.81", "-33.4872, 148.35, 0.243064, 1.25", "-32.4495, 150.448, -0.313195, 0.29", "-32.231, 150.881, -0.423543, 0.52", "-31.8141, 151.692, -0.521035, 0.44", "-31.2172, 152.724, -0.534133, 0.44", "-30.9272, 153.145, -0.504195, 1.33", "-30.0232, 154.241, -0.282864, 0.52", "-29.7634, 154.537, -0.167028, 0.88", "-28.085, 156.549, 0.713716, 0.59", "-27.1912, 157.759, 1.31772, 0.44", "-26.9624, 158.199, 1.53005, 0.59", "-26.8873, 158.639, 1.72609, 0.59", "-27.2715, 159.806, 2.1096, 0.29", "-27.5572, 160.327, 2.4115, 0.29", "-27.8134, 160.703, 2.6473, 0.29", "-27.8885, 160.811, 2.72592, 0.29", "-28.421, 161.566, 3.30411, 1.33", "-28.7747, 162.103, 3.71241, 1.33", "-29.6731, 163.738, 4.91093, 0.37", "-29.9943, 164.364, 5.30879, 0.37", "-30.1408, 164.657, 5.47257, 0.88", "-30.358, 165.104, 5.68334, 1.03", "-30.8194, 166.052, 6.01655, 0.44", "-31.0592, 166.596, 6.12173, 1.18", "-31.4074, 167.531, 6.15225, 1.4", "-31.7748, 168.674, 6.15967, 0.44", "-31.8659, 168.994, 6.15182, 0.44", "-32.0782, 169.885, 6.10596, 1.25", "-32.3226, 171.252, 6.0015, 0.37", "-32.4526, 172.267, 5.85308, 0.37", "-32.4712, 172.714, 5.72498, 0.37", "-32.4668, 173.309, 5.50134, 1.25", "-32.4657, 173.885, 5.27337, 1.25", "-32.4649, 174.757, 4.92238, 1.25", "-32.4737, 175.646, 4.56688, 1.25", "-32.4578, 177.656, 3.73018, 0.44", "-32.4319, 178.392, 3.38161, 0.44", "-32.3936, 179.154, 2.96481, 0.44", "-32.3836, 179.561, 2.7167, 0.44", "-32.3492, 180.164, 2.33534, 1.18", "-32.2952, 180.808, 1.95331, 0.88", "-32.1131, 182.349, 1.03747, 0.88", "-31.9861, 183.151, 0.539173, 0.74", "-31.9092, 183.561, 0.284076, 0.74", "-31.7324, 184.72, -0.385083, 0.52", "-31.6761, 185.282, -0.649787, 0.52", "-31.6391, 185.716, -0.804866, 0.96", "-31.6255, 185.863, -0.832539, 0.96", "-31.559, 186.671, -0.912044, 0.44", "-31.4531, 187.319, -0.942423, 0.81", "-31.3586, 187.8, -0.954291, 0.44", "-30.9886, 189.087, -0.95426, 0.22", "-30.8635, 189.463, -0.92092, 0.74", "-30.5135, 190.431, -0.810302, 0.52", "-29.879, 191.975, -0.565162, 0.44", "-29.6044, 192.574, -0.458275, 1.69", "-29.1951, 193.407, -0.289618, 1.69", "-28.6496, 194.441, 0.0424419, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "12.6995, 87.3589, 15.6312, 0.29", "12.221, 89.659, 16.4808, 0.29", "12.1228, 90.2856, 16.6867, 0.66", "12.0752, 90.7053, 16.8142, 1.03", "12.0542, 90.9467, 16.8964, 1.03", "11.9457, 92.7599, 17.546, 0.44", "11.9302, 93.4151, 17.7866, 0.44", "11.9852, 94.0854, 18.0106, 0.59", "12.0456, 94.5624, 18.1874, 0.59", "12.2686, 95.893, 18.6921, 0.29", "12.337, 96.2134, 18.816, 0.66", "12.5277, 96.7453, 19.0331, 1.03", "12.6468, 96.9992, 19.1285, 1.4", "12.9581, 97.5923, 19.3412, 1.03", "13.2915, 98.159, 19.5144, 0.96", "13.2915, 98.159, 19.5144, 1.03", "13.7862, 98.8616, 19.6284, 1.03", "14.4466, 99.7827, 19.7647, 0.81" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "12.6995, 87.3589, 15.6312, 0.44", "13.8773, 88.6898, 16.0382, 0.44", "14.3733, 89.1662, 16.1787, 0.52", "14.876, 89.6048, 16.3119, 0.88", "15.2083, 89.8861, 16.3982, 0.96", "15.3946, 90.0424, 16.4546, 0.88", "17.1708, 91.5318, 17.0371, 0.44", "18.0748, 92.283, 17.3367, 0.44", "18.8925, 92.9741, 17.6141, 0.44", "19.3049, 93.3364, 17.7633, 0.44", "20.0445, 94.0082, 18.0365, 0.66", "20.6216, 94.5636, 18.2611, 1.03", "21.2862, 95.2854, 18.5479, 0.96", "21.721, 95.7998, 18.6754, 0.66", "22.4843, 96.7279, 18.795, 0.44", "23.1189, 97.489, 18.8174, 0.44", "23.4866, 97.9246, 18.7868, 0.88", "23.7417, 98.2269, 18.7519, 0.88", "24.9848, 99.7228, 18.5582, 0.37", "25.262, 100.07, 18.5179, 0.37", "25.5717, 100.47, 18.4874, 0.66", "25.9454, 101.05, 18.543, 0.96", "26.2476, 101.6, 18.6608, 0.88", "26.8064, 102.653, 18.9675, 0.44", "27.131, 103.312, 19.2379, 0.59", "27.4915, 104.114, 19.5758, 0.59", "28.2572, 105.978, 20.4057, 0.52", "28.5268, 106.712, 20.7614, 1.0", "34.8244, 116.811, 20.7986, 1.0" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "9.00826, 117.676, -3.3277, 0.29", "11.3292, 119.577, -1.81402, 0.29", "11.634, 119.849, -1.62163, 0.29", "12.1575, 120.352, -1.29723, 0.22", "12.5887, 120.784, -1.03399, 0.22", "12.8512, 121.069, -0.863588, 0.22", "13.1046, 121.36, -0.703268, 0.44", "13.3451, 121.698, -0.598448, 0.52", "13.4221, 121.828, -0.551274, 0.52", "13.4554, 121.896, -0.527293, 0.52", "13.8686, 122.693, -0.0606366, 0.07", "14.1511, 123.181, 0.304295, 0.07", "14.3977, 123.57, 0.636452, 0.37", "14.68, 123.977, 1.02064, 0.52", "14.9687, 124.405, 1.42518, 0.52", "15.6395, 125.445, 2.38114, 0.88", "15.7807, 125.679, 2.59276, 0.88", "15.8522, 125.81, 2.70292, 0.88", "16.2993, 126.663, 3.31912, 0.22", "16.5478, 127.124, 3.60499, 0.22", "16.6817, 127.36, 3.73639, 0.44", "16.7985, 127.567, 3.82296, 0.44", "17.135, 128.135, 4.07863, 0.37", "17.2239, 128.28, 4.14885, 0.37", "17.4017, 128.567, 4.29605, 0.37", "18.0689, 129.543, 4.86834, 0.44", "18.1625, 129.672, 4.94774, 0.74", "18.3372, 129.903, 5.10027, 0.74", "18.3746, 129.951, 5.13005, 0.74", "18.4419, 130.051, 5.17299, 0.81", "18.7191, 130.487, 5.26201, 0.52", "18.8577, 130.724, 5.23665, 0.29", "18.9503, 130.866, 5.21865, 0.29", "19.4218, 131.619, 5.12774, 0.22", "19.7767, 132.187, 5.05281, 0.22", "20.0737, 132.662, 4.9867, 0.59", "20.4344, 133.273, 4.90027, 0.74", "20.7802, 133.885, 4.80953, 0.81", "21.0771, 134.396, 4.7174, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.00826, 117.676, -3.3277, 0.74", "8.95046, 118.221, -3.42896, 0.74", "8.81804, 119.427, -3.61588, 0.29", "8.81539, 119.61, -3.63777, 0.22", "8.81782, 119.823, -3.68422, 0.22", "8.81416, 120.186, -3.77417, 0.22", "8.80597, 120.427, -3.83593, 0.22", "8.75976, 121.274, -4.06215, 0.96", "8.66439, 122.231, -4.32561, 0.96", "8.535, 123.2, -4.61059, 0.29", "8.43585, 123.818, -4.80211, 0.22", "8.38101, 124.073, -4.88254, 0.15", "8.28156, 124.427, -4.99004, 0.15", "8.15389, 124.749, -5.0739, 0.15", "8.07161, 124.923, -5.10331, 0.44", "8.02673, 125.042, -5.1071, 0.81", "7.9397, 125.449, -5.12949, 0.74", "7.92548, 125.634, -5.13901, 0.88", "7.93482, 125.886, -5.14746, 0.81", "8.00247, 126.597, -5.15194, 0.15", "8.02223, 126.737, -5.15255, 0.15", "8.10933, 127.197, -5.15307, 0.15", "8.21141, 127.589, -5.1057, 0.15", "8.37542, 128.127, -5.00189, 0.96", "8.39045, 128.174, -4.99078, 0.96", "8.45182, 128.359, -4.93905, 1.11", "8.5372, 128.638, -4.86091, 1.18", "8.92485, 129.96, -4.47991, 0.22", "9.15509, 130.743, -4.25504, 0.22", "9.22211, 130.984, -4.19048, 0.22", "9.33911, 131.358, -4.11653, 0.29", "9.47593, 131.765, -4.0601, 0.29", "9.62075, 132.158, -4.03364, 0.88", "9.68798, 132.318, -4.0403, 1.33", "9.89763, 132.771, -4.06459, 1.33", "10.4502, 133.873, -4.13573, 0.22", "10.5905, 134.177, -4.16106, 0.44", "10.7109, 134.457, -4.18763, 0.88", "10.8334, 134.775, -4.21951, 0.88", "10.9827, 135.219, -4.25712, 0.52", "11.0202, 135.349, -4.26547, 0.52", "11.2006, 136.331, -4.29825, 0.15", "11.2662, 136.679, -4.31389, 0.15", "11.2771, 136.736, -4.32003, 0.15", "11.3805, 137.202, -4.39613, 0.15", "11.4044, 137.292, -4.41548, 0.15", "11.5353, 137.704, -4.51446, 0.15", "11.6482, 137.968, -4.60723, 0.59", "11.9067, 138.568, -4.84206, 0.66", "12.0201, 138.828, -4.94901, 0.59", "12.0497, 138.895, -4.97729, 0.59", "12.2252, 139.301, -5.12078, 0.52", "12.6007, 140.193, -5.37072, 0.15", "12.7851, 140.644, -5.44907, 0.15", "12.8076, 140.699, -5.45007, 0.15", "12.9387, 141.029, -5.43397, 0.15", "13.107, 141.508, -5.38175, 0.88", "13.1977, 141.821, -5.32575, 1.18", "13.3138, 142.358, -5.18884, 0.74", "13.4524, 143.215, -4.96612, 0.22", "13.4832, 143.45, -4.90675, 0.22", "13.53, 143.891, -4.80199, 0.22", "13.5608, 144.244, -4.72711, 0.22", "13.589, 144.601, -4.65611, 0.22", "13.6262, 145.115, -4.56348, 0.37", "13.6411, 145.296, -4.53862, 0.59", "13.6886, 145.645, -4.49539, 0.59", "13.7047, 145.731, -4.48577, 0.44", "13.8136, 146.245, -4.43615, 0.29", "13.8753, 146.519, -4.41478, 0.29", "14.0161, 146.98, -4.39249, 0.15", "14.1493, 147.344, -4.37735, 0.15", "14.174, 147.399, -4.36744, 0.15", "14.3828, 147.769, -4.26333, 0.15", "14.6776, 148.213, -4.09839, 0.96", "15.071, 148.736, -3.87674, 1.18", "15.2285, 148.923, -3.78653, 0.96", "15.9952, 149.794, -3.33835, 0.15", "16.2788, 150.118, -3.19375, 0.15", "16.4364, 150.303, -3.11761, 0.15", "16.6437, 150.55, -3.01186, 0.29", "16.6437, 150.55, -3.01186, 0.74", "16.846, 150.856, -2.96163, 1.03", "17.1648, 151.451, -3.18255, 1.03", "17.2425, 151.636, -3.26698, 1.03" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "-7.26998, -59.008, 19.1525, 0.37", "-6.90115, -59.3764, 19.0365, 0.37", "-6.45614, -59.832, 18.8983, 0.37", "-6.08971, -60.2071, 18.7845, 0.37", "-6.05531, -60.2423, 18.7738, 0.37", "-5.80267, -60.501, 18.6954, 0.74", "-5.72058, -60.585, 18.6699, 1.11", "-5.50842, -60.7985, 18.6123, 1.11", "1.22321, -64.8746, 15.5386, 1.11", "8.12218, -68.996, 12.9341, 1.11" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "-7.26998, -59.008, 19.1525, 0.22", "-7.94053, -58.6604, 18.1271, 0.22", "-8.02515, -58.6051, 17.9911, 0.37", "-8.10015, -58.5482, 17.8653, 0.52", "-8.5864, -58.12, 17.0063, 0.52", "-8.65504, -58.0533, 16.8836, 0.74", "-8.79482, -57.9175, 16.6339, 0.88", "-8.88626, -57.7754, 16.4699, 1.03", "-8.91163, -57.7267, 16.4161, 1.03", "-8.95177, -57.6217, 16.3077, 1.03", "-8.95, -57.4979, 16.2319, 1.03", "-11.3311, -54.3023, 10.1539, 1.03", "-12.5361, -51.3862, 3.60075, 1.03" ],
    "parent" : "dend_125",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "7.76294, -62.0704, 8.71959, 0.29", "8.34177, -62.7012, 9.44209, 0.29", "8.93571, -63.4081, 10.2085, 0.44", "9.1687, -63.6938, 10.5093, 0.81", "9.2796, -63.8298, 10.6525, 0.81", "10.105, -64.842, 11.7181, 0.29", "10.3456, -65.1371, 12.0287, 0.29", "10.3716, -65.1813, 12.0772, 0.29", "10.3998, -65.2343, 12.1297, 0.66", "14.6583, -70.673, 18.9582, 0.66", "17.4696, -75.8271, 26.7031, 0.66" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "7.76294, -62.0704, 8.71959, 0.29", "7.59928, -62.6416, 8.6546, 0.29", "7.51688, -62.9291, 8.62188, 0.29", "7.41422, -63.2875, 8.58111, 0.29", "7.37587, -63.4214, 8.56589, 0.29", "5.18422, -68.1566, 8.57586, 0.29", "3.94843, -73.15, 9.37845, 0.29", "3.14178, -78.1572, 10.5529, 0.29" ],
    "parent" : "dend_113",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "139.958, -75.1354, -86.1059, 0.29", "141.343, -74.8641, -86.8095, 0.29", "142.214, -74.6901, -87.2423, 0.29", "142.536, -74.6331, -87.4015, 0.66", "143.086, -74.5629, -87.5633, 0.66", "144.367, -74.3589, -87.8395, 0.22", "145.409, -74.1584, -88.0265, 0.22", "146.042, -73.9791, -88.1041, 0.59", "146.286, -73.895, -88.1221, 0.88", "148.537, -73.0719, -88.1098, 0.22", "149.498, -72.7216, -88.0644, 0.22", "149.838, -72.6057, -88.0292, 0.22", "150.31, -72.4197, -87.9601, 0.81", "150.835, -72.1961, -87.8854, 0.81", "152.588, -71.4681, -87.7407, 0.29", "153.212, -71.236, -87.7418, 0.88", "154.179, -70.9579, -87.7674, 0.66", "154.658, -70.8383, -87.7817, 0.22", "155.125, -70.7381, -87.7975, 0.29", "156.26, -70.5468, -87.895, 0.29", "156.946, -70.4389, -88.0464, 0.59", "157.344, -70.3763, -88.148, 0.96" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "139.958, -75.1354, -86.1059, 0.29", "139.7, -75.0158, -85.9721, 0.29", "139.447, -74.8685, -85.8561, 0.29", "139.311, -74.7784, -85.7962, 0.29", "139.198, -74.7117, -85.7436, 0.29", "139.036, -74.6358, -85.6472, 0.81", "138.913, -74.594, -85.5643, 0.22", "138.802, -74.5763, -85.48, 0.37", "138.655, -74.5538, -85.3624, 0.22", "138.389, -74.5408, -85.1315, 0.22", "138.099, -74.5779, -84.8532, 0.88", "137.973, -74.6206, -84.7158, 1.25", "137.915, -74.651, -84.6457, 1.33" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "54.6517, -156.521, -140.253, 0.37", "54.8775, -157.281, -142.539, 0.37", "54.946, -157.52, -143.17, 0.37", "54.9936, -157.682, -143.548, 0.96", "55.0319, -157.793, -143.79, 1.18", "55.4913, -158.933, -146.171, 0.52", "55.6086, -159.187, -146.69, 0.52", "55.7458, -159.387, -147.07, 0.52", "55.9592, -159.645, -147.624, 0.29", "56.1224, -159.804, -147.987, 0.29", "56.2696, -159.9, -148.232, 0.96", "56.4389, -159.955, -148.394, 0.96", "56.9999, -160.019, -149.032, 0.22", "57.4247, -159.992, -149.699, 0.88", "57.4516, -159.987, -149.754, 0.88", "57.5932, -159.956, -150.279, 1.25", "57.6041, -159.955, -150.331, 1.25", "57.7564, -159.965, -151.149, 1.25", "57.953, -160.011, -152.306, 0.96", "57.9645, -160.016, -152.357, 0.96", "58.461, -160.213, -154.255, 0.22", "58.6023, -160.269, -154.729, 0.59", "58.7154, -160.312, -155.061, 0.59", "58.7837, -160.334, -155.242, 0.96", "59.3524, -160.475, -156.578, 0.22", "59.411, -160.483, -156.717, 0.22", "59.7146, -160.495, -157.407, 0.66", "59.9114, -160.492, -157.89, 1.18", "60.5878, -160.439, -159.416, 0.22", "60.7928, -160.407, -159.823, 0.96", "61.5473, -160.249, -161.433, 0.22", "61.6657, -160.229, -161.732, 0.81", "61.6758, -160.23, -161.803, 0.81", "63.3602, -159.405, -158.782, 0.37", "63.8092, -159.203, -158.252, 0.88" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "54.6517, -156.521, -140.253, 0.29", "53.3685, -157.005, -141.912, 0.29", "53.0223, -157.169, -142.374, 0.29", "52.7437, -157.315, -142.751, 0.66", "52.2036, -157.628, -143.481, 0.66", "50.5094, -158.696, -145.704, 0.44", "50.358, -158.8, -145.895, 0.74", "50.0159, -159.075, -146.386, 0.29", "49.9872, -159.098, -146.43, 0.29", "49.7907, -159.255, -146.748, 0.96", "49.13, -159.784, -147.825, 0.52", "48.8567, -160.003, -148.265, 1.11", "47.1991, -161.315, -150.902, 0.22", "47.1079, -161.386, -151.045, 1.03", "46.0148, -162.263, -152.725, 0.37", "45.9614, -162.307, -152.807, 0.37", "45.6811, -162.564, -153.243, 0.37", "45.2343, -162.998, -153.882, 0.37", "45.1368, -163.103, -153.993, 0.37", "44.8394, -163.434, -154.321, 0.37", "44.0281, -164.275, -155.254, 0.22", "43.8269, -164.462, -155.492, 0.52", "43.4142, -164.8, -155.997, 0.37", "42.7697, -165.283, -156.813, 0.81", "42.5299, -165.446, -157.114, 0.81", "41.2785, -166.243, -158.697, 0.44", "40.9447, -166.449, -159.111, 0.59", "39.9778, -167.07, -160.321, 0.22", "39.9778, -167.07, -160.321, 0.74", "38.605, -168.119, -162.117, 0.52", "37.9089, -168.669, -163.046, 0.96", "37.8784, -168.695, -163.088, 0.96", "37.323, -169.202, -163.923, 0.52", "37.0106, -169.509, -164.422, 0.52", "36.1263, -170.417, -165.886, 0.96", "36.0524, -170.503, -166.02, 0.96", "35.943, -170.626, -166.224, 0.96", "35.1622, -171.415, -167.709, 0.52", "35.1048, -171.46, -167.823, 0.88" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-65.9809, -65.8117, 25.0549, 0.29", "-70.0715, -68.4373, 26.4307, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-65.9809, -65.8117, 25.0549, 0.44", "-73.7033, -70.7772, 26.9748, 0.29", "-81.8177, -74.2294, 30.2699, 0.29", "-89.8701, -77.4708, 33.9222, 0.29", "-97.7597, -80.1164, 38.3524, 0.29", "-105.863, -81.6681, 42.9445, 0.29", "-113.132, -82.1787, 48.9626, 0.29", "-120.159, -81.0033, 55.1752, 0.29", "-127.277, -79.6412, 61.2443, 0.29", "-135.142, -78.4766, 66.3581, 0.29", "-142.118, -78.181, 72.7309, 0.29", "-150.216, -78.5257, 77.5926, 0.29", "-158.077, -78.2014, 82.8344, 0.29", "-166.372, -77.6894, 87.342, 0.29", "-175.596, -78.0442, 89.3781, 0.29", "-184.428, -77.3246, 92.6723, 0.29", "-193.465, -76.8826, 95.4132, 0.29" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-72.513, 38.7619, -130.869, 0.52", "-72.1958, 37.5367, -134.956, 0.52", "-72.1797, 37.4742, -135.131, 0.52", "-72.157, 37.3839, -135.344, 0.52", "-72.131, 37.2775, -135.562, 0.59", "-72.1, 37.1466, -135.803, 0.66", "-72.0762, 37.0281, -136.019, 0.66", "-71.8777, 35.8138, -137.69, 0.29", "-71.8492, 35.5816, -138.02, 0.29", "-71.8313, 35.4041, -138.366, 0.44", "-71.8249, 35.3524, -138.49, 0.66", "-71.6936, 34.7267, -140.36, 0.52", "-71.6885, 34.7089, -140.42, 0.81", "-71.6525, 34.6243, -140.744, 0.81", "-71.2748, 33.9702, -143.644, 0.29", "-71.2198, 33.9015, -144.0, 0.29", "-71.0381, 33.7505, -144.954, 0.88", "-70.9452, 33.7055, -145.339, 1.03", "-70.8302, 33.6617, -145.802, 1.03", "-70.7781, 33.6634, -146.143, 1.03", "-70.7627, 33.6763, -146.335, 1.03", "-70.7464, 33.7106, -146.725, 1.03", "-70.7618, 33.7598, -147.128, 1.03", "-70.7695, 33.7773, -147.253, 1.03", "-71.0879, 34.3324, -150.911, 0.66", "-71.094, 34.3417, -150.975, 0.66", "-71.1087, 34.3633, -151.114, 0.74", "-71.4035, 34.8157, -153.826, 0.15", "-71.4217, 34.853, -154.019, 0.15", "-71.4897, 34.9936, -154.634, 0.52", "-71.4997, 35.0143, -154.702, 0.52", "-71.5154, 35.0968, -155.161, 0.59", "-71.4891, 35.0871, -155.267, 0.59", "-71.2666, 34.9256, -155.492, 0.59", "-71.0822, 34.7964, -155.658, 0.59", "-70.1502, 34.186, -156.38, 0.15", "-69.8662, 33.9968, -156.62, 0.15", "-69.6653, 33.8646, -156.789, 0.74", "-69.549, 33.7921, -156.903, 1.11", "-69.3742, 33.6913, -157.093, 1.11", "-68.6597, 33.3442, -157.897, 0.29", "-68.0123, 33.0831, -158.628, 0.29", "-67.8458, 33.0263, -158.835, 0.29", "-67.1454, 32.8182, -159.765, 0.22", "-67.0669, 32.7974, -159.873, 0.22", "-66.8911, 32.7577, -160.132, 0.22", "-66.8535, 32.754, -160.196, 0.22", "-66.6035, 32.7518, -160.54, 0.66", "-66.5219, 32.7496, -160.65, 0.66", "-66.2832, 32.7263, -160.795, 0.88", "-66.2315, 32.713, -160.827, 0.88" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-72.513, 38.7619, -130.869, 0.37", "-73.2262, 38.2912, -131.153, 0.37", "-73.6226, 38.0387, -131.3, 0.22", "-74.1012, 37.7329, -131.521, 0.81", "-74.3973, 37.5366, -131.673, 0.81", "-75.2411, 36.9415, -132.139, 0.52", "-75.5147, 36.7392, -132.298, 0.37", "-75.7683, 36.5124, -132.604, 0.37", "-76.098, 36.166, -133.235, 0.37", "-76.1602, 36.0893, -133.405, 0.66", "-76.2252, 35.9965, -133.645, 0.81", "-76.2417, 35.9717, -133.729, 0.96", "-76.8294, 35.3188, -136.356, 0.37", "-76.8666, 35.2917, -136.483, 0.37", "-76.888, 35.2788, -136.55, 0.59", "-76.9422, 35.2469, -136.71, 0.74", "-77.5095, 34.8951, -138.305, 1.03", "-77.7156, 34.7488, -138.869, 0.44", "-77.9739, 34.5644, -139.502, 0.44", "-78.9145, 33.8314, -141.949, 0.59", "-79.0285, 33.7306, -142.267, 0.74", "-79.1266, 33.6213, -142.578, 0.74", "-79.1813, 33.5187, -142.816, 0.74" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-76.7038, 193.531, -197.29, 0.22", "-77.2453, 194.681, -197.103, 0.22", "-77.3137, 194.811, -197.096, 0.22", "-77.3537, 194.963, -197.312, 0.22", "-77.374, 195.081, -197.474, 0.22", "-77.4411, 195.538, -198.042, 0.37", "-77.4626, 195.685, -198.21, 0.66", "-77.467, 195.733, -198.266, 0.88", "-77.5693, 197.845, -200.637, 0.29", "-77.5681, 198.179, -200.996, 0.29", "-77.5601, 198.591, -201.42, 0.44", "-77.5511, 198.842, -201.661, 0.52", "-77.544, 199.284, -202.064, 0.22", "-77.5499, 199.512, -202.241, 0.22", "-77.5768, 199.637, -202.297, 0.37", "-77.781, 200.111, -202.702, 0.22", "-77.8568, 200.219, -202.855, 0.29", "-77.9135, 200.292, -202.972, 0.66", "-77.9329, 200.322, -203.026, 0.66", "-78.1258, 200.882, -204.036, 0.37", "-78.1289, 200.933, -204.119, 0.22", "-78.1222, 200.967, -204.173, 0.15", "-78.0314, 201.285, -204.668, 0.15", "-77.8371, 201.685, -205.246, 0.88", "-77.7499, 201.842, -205.453, 0.88", "-77.3707, 202.483, -206.412, 0.44", "-77.1003, 202.95, -207.17, 0.44", "-77.0614, 203.02, -207.286, 0.74", "-76.6932, 203.688, -208.43, 0.22", "-76.6154, 203.824, -208.647, 0.22", "-75.992, 204.807, -210.123, 0.22", "-75.9151, 204.91, -210.289, 0.66", "-75.7881, 205.105, -210.606, 0.66", "-75.7082, 205.247, -210.839, 0.66", "-75.5354, 205.615, -211.428, 0.15", "-75.4786, 205.732, -211.593, 0.66", "-74.8213, 207.105, -213.291, 0.15", "-74.7348, 207.311, -213.547, 0.22", "-74.6831, 207.456, -213.729, 0.22", "-74.5824, 207.799, -214.186, 0.81", "-74.5312, 208.011, -214.472, 0.81", "-74.3376, 208.762, -215.439, 0.29", "-74.2504, 209.068, -215.768, 0.29", "-74.226, 209.149, -215.864, 0.52", "-73.9633, 210.096, -217.093, 0.44", "-73.9358, 210.213, -217.264, 0.44" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-76.7038, 193.531, -197.29, 1.03", "-76.0408, 192.48, -197.36, 1.03", "-75.2429, 191.366, -197.417, 0.29", "-74.7666, 190.766, -197.44, 0.29", "-74.2796, 190.169, -197.465, 0.22", "-73.928, 189.751, -197.478, 0.22", "-73.5919, 189.363, -197.488, 0.37", "-73.2068, 188.948, -197.489, 0.37", "-72.2806, 188.058, -197.405, 0.22", "-71.9277, 187.737, -197.365, 0.22", "-71.5729, 187.43, -197.317, 0.37", "-71.3688, 187.258, -197.287, 0.37", "-70.0548, 186.125, -197.057, 0.22", "-69.4737, 185.626, -197.143, 0.22", "-69.4209, 185.584, -197.18, 0.22", "-69.1972, 185.396, -197.498, 0.22", "-69.0413, 185.215, -197.912, 0.22", "-68.9337, 185.01, -198.428, 0.74", "-68.5318, 183.629, -202.273, 0.59", "-68.5048, 183.494, -202.63, 0.52", "-68.496, 183.44, -202.769, 0.52", "-68.4795, 183.124, -203.743, 0.29", "-68.4944, 182.978, -204.298, 0.29", "-68.5436, 182.702, -205.444, 0.37", "-68.5647, 182.605, -205.853, 0.44", "-68.5677, 182.586, -205.946, 0.44", "-68.6323, 182.096, -208.383, 0.44", "-68.6427, 182.022, -208.782, 0.44", "-68.6828, 181.913, -209.345, 0.44", "-68.932, 181.498, -211.371, 0.22", "-68.9945, 181.397, -211.817, 0.22", "-69.0522, 181.257, -212.304, 0.22", "-69.0651, 181.149, -212.497, 0.37", "-69.0678, 181.085, -212.61, 0.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-101.247, 19.7896, -46.7645, 0.29", "-101.743, 20.0233, -49.008, 0.29", "-101.832, 20.0561, -49.379, 0.66", "-101.866, 20.0687, -49.5215, 0.66", "-102.403, 20.2661, -51.7585, 0.29", "-102.969, 20.4746, -54.1208, 1.18", "-103.07, 20.5117, -54.5413, 1.62", "-103.128, 20.5417, -54.8235, 1.62" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-101.247, 19.7896, -46.7645, 0.22", "-101.042, 20.8795, -47.1065, 0.22", "-101.022, 20.985, -47.1396, 0.37", "-100.905, 21.6119, -47.3363, 0.29", "-100.869, 21.802, -47.396, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-30.871, 115.285, -134.256, 0.29", "-32.0997, 115.475, -134.965, 0.29", "-32.1738, 115.494, -135.005, 0.29", "-33.1372, 115.873, -135.74, 0.59", "-33.5064, 116.05, -136.075, 0.66", "-33.8332, 116.242, -136.433, 0.52", "-33.9175, 116.297, -136.531, 0.52", "-34.439, 116.673, -137.188, 0.37", "-35.592, 117.477, -138.724, 0.66", "-36.1537, 117.832, -139.479, 0.74", "-37.0745, 118.313, -140.671, 0.29", "-37.799, 118.619, -141.565, 0.29", "-38.7165, 118.971, -142.672, 0.66", "-39.2026, 119.127, -143.239, 0.52", "-40.067, 119.322, -144.116, 0.29", "-40.8718, 119.431, -144.863, 0.52", "-41.4456, 119.437, -145.321, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-30.871, 115.285, -134.256, 0.29", "-30.5751, 115.72, -135.479, 0.29", "-30.561, 115.741, -135.536, 0.29", "-30.2795, 116.159, -136.676, 0.66", "-29.7034, 117.008, -138.974, 0.66", "-29.1056, 117.877, -141.266, 0.22", "-29.0148, 118.012, -141.616, 0.29", "-28.9517, 118.116, -141.902, 0.29", "-28.702, 118.549, -143.053, 0.22", "-28.6649, 118.615, -143.22, 0.59", "-28.5819, 118.763, -143.505, 0.59", "-28.3764, 119.167, -144.11, 0.59", "-28.1888, 119.585, -144.768, 0.29", "-28.1323, 119.72, -144.972, 0.29", "-27.9317, 120.249, -145.677, 0.59", "-27.8782, 120.388, -145.891, 1.03", "-27.8007, 120.555, -146.159, 1.25", "-27.235, 121.606, -147.816, 0.22", "-27.1385, 121.764, -148.065, 0.22", "-27.0248, 121.941, -148.344, 0.74", "-26.3866, 122.905, -149.819, 0.22", "-26.0792, 123.335, -150.462, 0.29", "-25.9701, 123.479, -150.664, 0.29", "-25.6288, 123.877, -151.116, 0.59", "-25.5074, 124.015, -151.256, 0.66", "-25.3509, 124.205, -151.379, 0.52", "-25.0603, 124.602, -151.48, 0.22", "-24.9444, 124.784, -151.522, 0.52", "-24.7818, 125.032, -151.564, 0.81", "-24.5192, 125.438, -151.568, 0.74", "-24.0235, 126.127, -151.529, 0.59" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-28.6496, 194.441, 0.0424419, 0.22", "-29.0548, 195.604, 0.00319385, 0.22", "-29.4106, 196.516, -0.144573, 0.22", "-30.1594, 198.277, -0.546742, 0.29", "-30.728, 199.447, -0.912421, 0.29", "-31.082, 200.099, -1.14788, 1.11", "-31.3161, 200.495, -1.30191, 1.33", "-32.3111, 202.032, -1.99959, 0.22", "-32.6958, 202.551, -2.27476, 0.81", "-33.8577, 203.931, -3.10456, 0.29", "-34.8092, 205.006, -3.7635, 0.29", "-35.3251, 205.641, -4.13217, 0.52", "-35.3251, 205.641, -4.13217, 0.59", "-35.665, 206.155, -4.34993, 0.37", "-36.0528, 206.85, -4.62182, 0.81", "-36.186, 207.169, -4.72327, 0.81", "-36.6764, 208.703, -5.14962, 0.44", "-36.8202, 209.314, -5.31374, 0.44", "-36.9272, 209.847, -5.45106, 0.66", "-37.0232, 210.54, -5.60177, 0.29", "-37.0774, 211.242, -5.74743, 0.74", "-37.1068, 211.675, -5.83103, 0.81", "-37.2042, 213.237, -6.08141, 0.29", "-37.2303, 213.853, -6.19281, 0.44", "-37.2309, 214.812, -6.37871, 0.52", "-37.191, 215.779, -6.58592, 0.44" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-28.6496, 194.441, 0.0424419, 0.44", "-28.6305, 195.05, 0.604945, 0.44", "-28.6493, 196.017, 1.45516, 0.44", "-28.6587, 197.171, 2.39244, 0.44", "-28.6409, 197.863, 2.92286, 1.18", "-28.6944, 199.795, 4.84751, 0.59", "-28.7379, 200.477, 5.6408, 0.37", "-28.8123, 201.032, 6.36501, 0.37", "-28.8965, 201.599, 7.16124, 0.59", "-28.9449, 202.023, 7.7829, 1.18", "-29.0971, 204.401, 11.197, 0.88", "-29.1314, 205.254, 12.3959, 0.96", "-29.1559, 205.814, 13.2134, 0.96", "-29.1831, 206.501, 14.2166, 0.44", "-29.201, 206.694, 14.4809, 0.59", "-29.3545, 207.254, 15.3802, 0.59", "-29.6448, 208.06, 16.6715, 0.52", "-29.8588, 208.43, 17.4172, 0.29", "-29.9492, 208.553, 17.7155, 0.81", "-30.1583, 208.795, 18.4015, 0.81", "-31.5285, 210.251, 23.1343, 0.66", "-31.6505, 210.404, 23.7503, 0.74", "-31.6556, 210.425, 23.8334, 0.74", "-31.6706, 210.557, 24.4166, 0.96", "-31.6822, 210.935, 25.875, 0.29", "-31.6771, 211.022, 26.1892, 0.81", "-31.8093, 211.696, 28.3895, 0.22", "-31.9677, 211.81, 28.9768, 1.33", "-33.0231, 212.013, 31.2724, 0.29", "-33.3538, 212.008, 31.7895, 0.29", "-33.876, 211.924, 32.4176, 0.59", "-34.8864, 211.549, 33.287, 0.29", "-35.4784, 211.136, 33.5808, 0.29", "-36.016, 210.571, 33.7617, 0.29", "-36.1307, 210.382, 33.7699, 0.88", "-36.3564, 209.886, 33.7641, 0.88", "-36.3976, 209.28, 33.6395, 0.52", "-35.5445, 208.958, 33.2727, 0.44", "-35.1893, 208.904, 33.1405, 0.52", "-33.8605, 208.934, 32.687, 0.66", "-32.4158, 209.126, 32.2154, 0.52", "-32.0597, 209.2, 32.11, 0.52", "-30.8778, 209.457, 31.7613, 0.37", "-30.38, 209.553, 31.586, 0.52", "-29.5538, 209.667, 31.2421, 0.22", "-29.0307, 209.69, 30.9922, 0.22", "-28.3896, 209.647, 30.6503, 0.74", "-27.2494, 209.452, 30.0294, 0.37", "-25.8032, 209.092, 29.1817, 0.29", "-25.0412, 208.853, 28.7225, 0.81", "-24.843, 208.776, 28.5981, 0.96", "-23.6249, 208.272, 27.8001, 0.29", "-22.9484, 207.989, 27.3351, 0.29" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.4466, 99.7827, 19.7647, 0.29", "14.1138, 100.813, 19.5029, 0.29", "13.8855, 101.626, 19.286, 0.29", "13.7292, 102.301, 19.0815, 0.59", "13.4512, 103.485, 18.7201, 0.59", "13.1844, 104.622, 18.3732, 0.52", "12.9268, 105.72, 18.0382, 0.52", "12.7284, 106.599, 17.7673, 0.52", "12.4107, 108.204, 17.2463, 0.52", "12.2321, 109.209, 16.9156, 0.52", "11.6786, 119.15, 13.2816, 0.52", "13.0535, 129.392, 10.9827, 0.52", "12.5742, 139.685, 8.59273, 0.52", "11.7551, 149.137, 3.81299, 0.52", "8.38794, 158.481, 0.0568008, 0.52", "6.29739, 168.125, -3.83667, 0.52", "5.16276, 178.184, -6.94782, 0.52", "1.67445, 188.047, -8.57871, 0.52", "-1.30204, 198.17, -9.27376, 0.52", "-4.37075, 208.088, -11.3502, 0.52", "-5.63156, 218.341, -13.6255, 0.52", "-5.26502, 228.811, -15.0234, 0.52", "-4.83946, 239.358, -14.7073, 0.52" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "14.4466, 99.7827, 19.7647, 0.52", "14.4132, 99.9995, 21.0462, 0.52", "14.4009, 100.102, 21.6141, 0.44", "14.3989, 100.135, 21.7781, 0.74", "14.3998, 100.227, 22.1676, 0.74", "14.4168, 100.44, 22.8961, 0.52", "14.6801, 102.08, 26.9295, 0.52", "14.3387, 102.713, 31.26, 0.22", "14.2818, 102.714, 31.694, 0.22", "14.2005, 102.629, 32.0711, 0.22", "14.2741, 102.744, 31.8903, 0.22", "14.4423, 103.024, 31.5714, 0.74", "14.5386, 103.183, 31.4036, 1.11", "14.7658, 103.634, 31.6372, 0.96", "14.8938, 103.889, 31.7823, 1.25", "15.0662, 104.234, 31.9886, 1.25", "15.1496, 104.402, 32.0884, 1.25", "15.4533, 105.042, 32.4501, 1.25", "15.6956, 105.595, 32.7624, 0.52", "15.7454, 105.717, 32.8264, 0.66", "15.7628, 105.766, 32.8472, 0.66", "15.837, 105.969, 32.9141, 0.66", "15.8729, 106.061, 32.9481, 0.59", "16.0091, 106.404, 33.0704, 0.59", "16.2091, 106.918, 33.2811, 0.22", "16.3736, 107.35, 33.4604, 0.22", "16.592, 107.907, 33.6911, 0.22", "16.8502, 108.56, 33.9626, 0.81", "17.0559, 109.039, 34.1802, 0.81", "17.1635, 109.26, 34.2886, 0.44", "17.4289, 109.709, 34.5522, 0.22", "17.6712, 110.055, 34.7765, 0.22", "17.7114, 110.106, 34.8109, 0.22", "18.0431, 110.48, 35.0517, 0.29", "18.3381, 110.788, 35.2717, 0.29", "18.8126, 111.311, 35.6218, 0.29", "18.9989, 111.544, 35.7572, 0.88", "19.1173, 111.716, 35.8393, 1.18", "19.3113, 112.033, 35.9624, 1.47", "19.4477, 112.289, 36.0358, 1.77", "19.8448, 113.139, 36.224, 0.59", "20.0666, 113.667, 36.3071, 0.44", "20.1939, 113.993, 36.356, 0.44", "20.2211, 114.066, 36.3665, 0.44", "20.3862, 114.491, 36.4282, 0.29", "20.6181, 115.052, 36.5107, 0.29", "20.781, 115.442, 36.5663, 0.52", "20.893, 115.713, 36.5986, 0.52", "21.0227, 116.033, 36.6493, 0.52", "21.237, 116.517, 36.7476, 0.29", "21.2566, 116.56, 36.7582, 0.29", "21.2797, 116.61, 36.7722, 0.29", "21.4472, 116.955, 36.8784, 0.44", "21.7519, 117.573, 37.0722, 1.03", "21.9248, 117.922, 37.1807, 1.03", "22.0802, 118.22, 37.2726, 1.03", "22.2845, 118.602, 37.3865, 1.11", "22.4425, 118.882, 37.4652, 1.11", "22.6486, 119.24, 37.5576, 1.18", "22.794, 119.485, 37.6012, 1.11", "22.9519, 119.73, 37.6286, 0.88", "22.9825, 119.768, 37.6321, 0.88", "23.4312, 120.268, 37.6677, 0.52", "23.4655, 120.305, 37.6699, 0.52", "23.825, 120.67, 37.6902, 0.52", "24.6013, 121.438, 37.7293, 0.22", "25.0613, 121.907, 37.7924, 0.22", "25.2127, 122.07, 37.8251, 0.59", "25.5144, 122.414, 37.915, 0.88", "25.6118, 122.536, 37.9543, 1.11", "25.6391, 122.58, 37.9765, 1.11", "26.0081, 123.398, 38.5809, 0.29", "26.0946, 123.633, 38.775, 0.29", "26.1012, 123.655, 38.8047, 0.29", "26.131, 123.774, 38.9901, 0.29", "26.2135, 124.153, 39.6373, 0.44", "26.2484, 124.316, 39.9682, 0.44", "26.2587, 124.388, 40.2132, 0.44", "26.3313, 124.772, 41.8937, 0.59", "29.1418, 128.901, 46.6923, 0.59", "31.0888, 132.678, 52.1718, 0.59", "33.0364, 136.235, 57.8042, 0.59", "34.3802, 140.049, 63.4347, 0.59", "36.3356, 142.891, 69.4773, 0.59", "37.4918, 144.721, 76.1085, 0.59", "38.0097, 146.659, 82.7872, 0.59", "39.8449, 147.781, 89.4327, 0.59", "41.8299, 148.299, 96.1146, 0.59", "43.9204, 150.202, 102.492, 0.59", "46.2411, 151.911, 108.847, 0.59" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "17.2425, 151.636, -3.26698, 0.22", "18.8656, 152.76, -2.27229, 0.22", "19.45, 153.193, -1.92738, 0.81", "19.6482, 153.357, -1.81725, 0.81", "21.0188, 154.627, -1.07105, 0.22", "21.3976, 155.016, -0.874987, 0.22", "21.512, 155.143, -0.81804, 0.44", "21.7776, 155.554, -0.692648, 0.44", "22.1375, 156.2, -0.537338, 0.15", "22.3409, 156.639, -0.470292, 0.15", "22.5292, 157.224, -0.448687, 0.15", "22.601, 157.481, -0.432358, 0.66", "22.7164, 157.909, -0.399727, 1.03", "22.8424, 158.398, -0.354812, 0.66", "23.0059, 158.972, -0.300216, 0.22", "23.0809, 159.203, -0.279902, 0.22", "23.1814, 159.542, -0.246234, 0.22", "23.2784, 159.884, -0.212586, 0.22", "23.3072, 159.998, -0.201439, 0.22", "23.3783, 160.425, -0.16248, 0.74", "23.4184, 160.738, -0.139762, 0.59", "23.479, 161.177, -0.109468, 0.29", "23.5001, 161.329, -0.0990153, 0.22", "23.5239, 161.49, -0.0843123, 0.22", "23.7161, 162.697, 0.0508383, 0.15", "23.7798, 163.33, 0.146596, 0.15", "23.8095, 163.938, 0.258269, 0.15", "23.8282, 164.286, 0.324625, 0.15", "23.8555, 164.572, 0.369837, 0.29", "23.9401, 164.965, 0.409111, 0.29", "24.3304, 165.865, 0.410527, 1.77", "24.616, 166.279, 0.303454, 1.77", "25.1252, 166.754, 0.0743029, 1.77", "25.8974, 167.379, -0.453514, 0.22", "26.5622, 167.941, -1.07624, 0.22", "27.0603, 168.337, -1.61382, 0.22", "27.7558, 168.898, -2.51735, 0.44", "28.3641, 169.422, -3.43257, 0.22", "29.223, 170.226, -4.94931, 0.44", "29.712, 170.761, -6.02443, 0.44", "29.8057, 170.903, -6.30394, 0.44", "30.1395, 171.64, -7.68934, 0.22", "30.1914, 171.821, -8.01189, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "17.2425, 151.636, -3.26698, 0.29", "17.1162, 152.01, -3.18084, 0.29", "17.0305, 152.303, -3.14366, 0.37", "16.9371, 152.637, -3.11429, 0.37", "16.854, 152.945, -3.09046, 0.22", "16.8187, 153.087, -3.08012, 0.29", "16.7973, 153.182, -3.07332, 0.29", "16.7004, 153.704, -3.05274, 0.22", "16.6556, 153.959, -3.0488, 0.22", "16.6492, 153.999, -3.04932, 0.29", "16.6076, 154.347, -3.06208, 0.29", "16.5788, 154.605, -3.07053, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "8.12218, -68.996, 12.9341, 0.22", "14.4635, -72.4777, 11.9059, 0.22", "20.8109, -76.0878, 11.7067, 0.22", "26.6166, -80.4844, 11.664, 0.22", "32.2996, -84.8808, 10.4883, 0.22" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "8.12218, -68.996, 12.9341, 0.29", "18.7017, -74.6089, 11.6448, 0.22", "28.1359, -81.5973, 9.1362, 0.22", "36.7405, -89.8963, 8.63062, 0.22" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "17.4696, -75.8271, 26.7031, 1.33", "18.7996, -80.1263, 32.6444, 1.33", "20.3131, -84.2777, 38.6508, 1.33" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "17.4696, -75.8271, 26.7031, 0.44", "21.1716, -82.7306, 36.0626, 1.33", "23.4773, -89.0864, 46.241, 1.33" ],
    "parent" : "dend_115",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-103.128, 20.5417, -54.8235, 0.96", "-103.212, 19.9776, -55.6247, 0.96", "-103.297, 19.2233, -56.6796, 0.22", "-103.313, 18.9755, -57.0074, 0.74", "-103.337, 18.3103, -57.8506, 0.29", "-103.341, 18.2044, -57.9849, 0.59", "-103.384, 16.996, -59.5168, 0.22", "-103.392, 16.6641, -59.9443, 0.22", "-103.377, 16.4063, -60.2797, 0.59", "-103.373, 16.3389, -60.3766, 0.59" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-103.128, 20.5417, -54.8235, 0.29", "-104.504, 20.9019, -56.8369, 0.29", "-104.729, 20.9388, -57.1676, 0.59", "-104.819, 20.949, -57.28, 0.66", "-104.924, 20.957, -57.3955, 0.66", "-105.386, 20.9828, -57.9054, 0.52", "-105.562, 20.9832, -58.1042, 0.29", "-106.287, 20.9372, -58.8862, 0.44", "-106.748, 20.8952, -59.4287, 0.44", "-107.742, 20.7943, -60.6388, 0.29", "-108.418, 20.731, -61.4253, 0.59", "-109.237, 20.6575, -62.37, 0.44", "-109.343, 20.6455, -62.4873, 0.52", "-110.417, 20.498, -63.5917, 0.22", "-110.517, 20.4818, -63.6935, 0.59", "-111.175, 20.3632, -64.3081, 0.59", "-111.755, 20.2706, -64.762, 0.59", "-112.906, 20.1466, -65.52, 0.22", "-113.038, 20.1332, -65.5987, 0.44", "-113.104, 20.1317, -65.6252, 0.44" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-24.0235, 126.127, -151.529, 0.15", "-23.4926, 126.34, -152.133, 0.15", "-22.811, 126.596, -152.868, 0.52", "-21.8641, 126.967, -153.867, 0.59", "-21.4331, 127.14, -154.313, 0.22", "-21.2134, 127.231, -154.536, 0.22", "-21.018, 127.333, -154.819, 0.22", "-20.9683, 127.371, -154.931, 0.22", "-20.8456, 127.548, -155.471, 0.74", "-20.8399, 127.565, -155.528, 0.74", "-20.8357, 127.589, -155.611, 0.74", "-20.7778, 128.302, -158.094, 0.22", "-20.7766, 128.424, -158.523, 0.66", "-20.7825, 128.85, -160.07, 0.37", "-20.7841, 128.865, -160.13, 0.37" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-24.0235, 126.127, -151.529, 0.22", "-23.8452, 126.4, -151.471, 0.22", "-23.66, 126.695, -151.405, 0.22", "-23.4947, 126.975, -151.343, 0.81", "-23.2062, 127.498, -151.227, 0.22", "-23.0678, 127.761, -151.185, 0.37", "-22.9386, 128.012, -151.152, 0.29", "-22.801, 128.297, -151.126, 0.22", "-22.7096, 128.5, -151.113, 0.22", "-22.6713, 128.592, -151.106, 0.66", "-22.4872, 129.086, -151.096, 0.15", "-22.4733, 129.116, -151.094, 0.15", "-22.3104, 129.421, -151.058, 0.15", "-22.2746, 129.473, -151.055, 0.15", "-22.0291, 129.802, -151.081, 0.88", "-21.9531, 129.902, -151.096, 0.88", "-21.6395, 130.285, -151.171, 0.15", "-21.5803, 130.353, -151.189, 0.15", "-21.101, 130.878, -151.37, 1.5", "-20.6349, 131.376, -151.573, 0.29", "-20.5259, 131.5, -151.635, 0.29", "-20.3585, 131.71, -151.749, 0.29", "-20.3157, 131.77, -151.782, 0.29", "-20.2695, 131.834, -151.815, 0.29", "-20.1297, 132.018, -151.889, 0.29", "-19.8434, 132.317, -152.126, 1.03", "-19.6382, 132.524, -152.398, 0.22", "-19.5063, 132.647, -152.599, 0.22", "-19.3943, 132.739, -152.775, 0.22", "-19.2924, 132.81, -152.956, 0.37", "-18.787, 133.076, -153.893, 0.59", "-18.4367, 133.214, -154.552, 0.59", "-18.2399, 133.29, -154.931, 0.22", "-18.1869, 133.316, -155.049, 0.22", "-17.9906, 133.52, -155.825, 0.59", "-17.9556, 133.579, -156.023, 0.59", "-17.9455, 133.61, -156.115, 0.59", "-17.9341, 133.735, -156.513, 0.22", "-17.9639, 134.012, -157.391, 1.03", "-18.1067, 134.642, -159.208, 0.29", "-18.1337, 134.733, -159.443, 0.29", "-18.2361, 135.029, -160.188, 0.29", "-18.3022, 135.178, -160.577, 0.29", "-18.32, 135.211, -160.663, 0.29", "-18.3983, 135.359, -161.007, 0.29", "-18.4327, 135.422, -161.142, 0.29", "-18.7043, 135.91, -162.179, 1.25", "-19.058, 136.591, -163.606, 0.29", "-19.1128, 136.709, -163.858, 0.29", "-19.2853, 137.065, -164.673, 1.33", "-19.2931, 137.079, -164.71, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "36.7405, -89.8963, 8.63062, 0.29", "40.084, -92.9321, -0.274091, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "36.7405, -89.8963, 8.63062, 0.44", "43.507, -96.1051, 7.62184, 0.29" ],
    "parent" : "dend_128",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-19.2931, 137.079, -164.71, 0.22", "-18.8392, 138.398, -165.073, 0.22", "-18.7662, 138.538, -165.111, 0.22", "-18.5509, 138.854, -165.194, 0.22", "-18.252, 139.167, -165.325, 0.59", "-17.7915, 139.532, -165.525, 0.59", "-16.9982, 140.048, -165.928, 0.29", "-16.4925, 140.261, -166.204, 0.29", "-16.0872, 140.379, -166.445, 0.29", "-15.114, 140.577, -167.038, 0.22", "-14.7286, 140.628, -167.27, 0.22", "-13.9004, 140.703, -167.78, 0.96", "-13.7519, 140.71, -167.882, 1.25", "-12.36, 140.796, -168.872, 0.15", "-12.091, 140.821, -169.06, 0.96", "-11.8177, 140.862, -169.239, 0.96", "-11.7261, 140.877, -169.297, 0.96", "-10.6368, 141.061, -169.879, 0.22", "-10.3321, 141.108, -170.025, 0.22", "-10.1772, 141.136, -170.083, 0.22", "-10.1062, 141.144, -170.106, 0.22", "-9.78409, 141.132, -170.173, 0.37", "-9.61392, 141.098, -170.192, 0.37", "-9.08628, 140.922, -170.196, 0.52", "-8.98845, 140.882, -170.196, 0.81", "-8.51347, 140.711, -170.209, 0.81", "-7.58513, 140.429, -170.27, 0.29", "-7.19143, 140.343, -170.309, 0.29", "-7.02033, 140.337, -170.345, 0.29", "-6.68291, 140.388, -170.447, 0.29", "-5.82242, 140.641, -170.765, 0.29", "-5.46918, 140.792, -170.923, 0.66", "-5.11421, 140.982, -171.1, 0.66", "-4.13893, 141.535, -171.595, 0.22", "-3.95474, 141.646, -171.692, 0.22", "-3.66194, 141.837, -171.855, 0.22", "-3.30938, 142.062, -172.06, 0.74", "-3.05865, 142.197, -172.19, 0.74", "-2.90767, 142.256, -172.262, 0.74" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-19.2931, 137.079, -164.71, 0.07", "-19.4468, 137.293, -165.282, 0.07", "-19.4646, 137.323, -165.374, 0.15", "-19.5015, 137.379, -165.526, 0.15", "-19.5693, 137.451, -165.718, 0.15", "-19.6828, 137.56, -165.989, 0.15", "-20.5006, 138.404, -167.909, 0.88", "-20.9815, 138.961, -169.139, 0.15", "-21.1586, 139.182, -169.607, 1.4", "-21.6353, 139.843, -170.928, 0.29", "-21.7468, 140.008, -171.239, 0.52", "-21.9484, 140.349, -171.827, 0.22", "-22.0126, 140.479, -171.984, 0.22", "-22.0486, 140.587, -172.095, 0.22", "-22.0888, 140.793, -172.298, 0.22", "-22.0948, 140.883, -172.377, 0.22", "-22.1733, 141.998, -173.357, 1.03", "-22.2042, 142.375, -173.706, 1.03", "-22.2473, 142.876, -174.169, 0.22", "-22.2769, 143.194, -174.526, 0.22", "-22.2865, 143.303, -174.656, 0.22", "-22.297, 143.458, -174.837, 0.22", "-22.3287, 144.093, -175.552, 0.88", "-22.3373, 144.354, -175.869, 1.11", "-22.3692, 145.755, -177.502, 0.22", "-22.3813, 146.004, -177.774, 0.37", "-22.3968, 146.213, -177.975, 0.37", "-22.4203, 146.456, -178.175, 0.37", "-22.4331, 146.556, -178.239, 0.37", "-22.5318, 147.213, -178.58, 1.47", "-22.5934, 147.538, -178.683, 1.47", "-22.8552, 148.42, -179.08, 0.22", "-22.9402, 148.665, -179.207, 0.22", "-23.1466, 149.251, -179.513, 1.25", "-23.2673, 149.609, -179.697, 1.69", "-23.3772, 149.949, -179.898, 1.69", "-23.7948, 151.334, -180.765, 0.29", "-23.87, 151.637, -180.959, 0.29", "-23.9394, 152.118, -181.249, 0.29", "-23.9423, 152.473, -181.476, 0.74", "-23.8346, 153.345, -182.074, 0.07", "-23.8194, 153.404, -182.116, 0.15", "-23.6041, 153.798, -182.357, 0.74", "-23.143, 154.587, -182.992, 0.66", "-22.7999, 155.213, -183.709, 0.66", "-22.7347, 155.31, -183.853, 0.66" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-22.7347, 155.31, -183.853, 0.22", "-22.5157, 156.006, -184.208, 0.22", "-22.4218, 156.309, -184.351, 0.22", "-22.4012, 156.385, -184.381, 0.22", "-22.3062, 156.83, -184.527, 0.15", "-22.206, 157.374, -184.674, 0.74", "-22.1864, 157.496, -184.709, 0.66", "-22.1766, 157.683, -184.763, 0.59", "-22.1637, 157.984, -184.856, 0.29", "-22.1601, 158.27, -184.939, 0.22", "-22.1611, 158.506, -184.999, 0.22", "-22.163, 158.947, -185.105, 0.22", "-22.1634, 159.055, -185.137, 0.66", "-22.162, 159.572, -185.33, 0.22", "-22.1499, 159.859, -185.457, 0.52", "-22.1433, 159.976, -185.512, 0.52" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-22.7347, 155.31, -183.853, 0.22", "-22.7606, 155.942, -184.275, 0.22", "-22.7465, 156.209, -184.45, 0.22", "-22.701, 156.58, -184.722, 0.22", "-22.6175, 157.352, -185.313, 1.11", "-22.594, 157.597, -185.504, 1.11", "-22.5051, 158.665, -186.327, 0.29", "-22.4726, 158.968, -186.559, 0.29", "-22.4115, 159.743, -187.102, 0.88", "-22.3789, 160.634, -187.653, 0.22", "-22.3805, 160.7, -187.693, 0.22", "-22.3971, 160.966, -187.858, 0.22", "-22.4484, 161.339, -188.129, 1.69", "-22.6746, 162.705, -189.232, 0.22", "-22.7436, 163.137, -189.627, 0.22", "-22.891, 164.207, -190.737, 0.74", "-22.9157, 164.377, -190.959, 0.81", "-23.0485, 165.507, -192.687, 0.22", "-23.0513, 165.553, -192.774, 0.22", "-23.0434, 165.916, -193.634, 0.66", "-23.0399, 165.944, -193.705, 0.81", "-22.8743, 166.803, -195.958, 0.22", "-22.8251, 167.001, -196.491, 0.22", "-22.6331, 167.573, -198.012, 1.03", "-22.5617, 167.774, -198.53, 0.66", "-22.5113, 167.916, -198.92, 0.66", "-22.1723, 168.698, -201.232, 0.15", "-22.1187, 168.808, -201.572, 0.15", "-22.089, 168.886, -201.819, 0.74", "-22.0606, 168.967, -202.079, 0.74", "-21.7822, 169.832, -204.977, 0.15", "-21.7465, 169.939, -205.382, 0.44", "-21.7212, 170.009, -205.668, 0.44", "-21.6973, 170.104, -206.116, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_106", "dend_75", "dend_60", "dend_53", "dend_0", "dend_118", "dend_107", "dend_91", "dend_76", "dend_66", "dend_61", "dend_59", "dend_54", "dend_30", "dend_1", "dend_132", "dend_119", "dend_109", "dend_108", "dend_95", "dend_92", "dend_84", "dend_77", "dend_72", "dend_67", "dend_65", "dend_62", "dend_58", "dend_55", "dend_42", "dend_31", "dend_13", "dend_2", "dend_134", "dend_133", "dend_123", "dend_120", "dend_111", "dend_110", "dend_99", "dend_96", "dend_94", "dend_93", "dend_88", "dend_85", "dend_79", "dend_78", "dend_74", "dend_73", "dend_71", "dend_68", "dend_64", "dend_63", "dend_57", "dend_56", "dend_48", "dend_43", "dend_35", "dend_32", "dend_19", "dend_14", "dend_8", "dend_3", "dend_125", "dend_124", "dend_122", "dend_121", "dend_113", "dend_112", "dend_103", "dend_100", "dend_98", "dend_97", "dend_90", "dend_89", "dend_87", "dend_86", "dend_83", "dend_80", "dend_70", "dend_69", "dend_52", "dend_49", "dend_47", "dend_44", "dend_37", "dend_36", "dend_34", "dend_33", "dend_21", "dend_20", "dend_18", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_127", "dend_126", "dend_115", "dend_114", "dend_105", "dend_104", "dend_102", "dend_101", "dend_82", "dend_81", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_38", "dend_29", "dend_22", "dend_17", "dend_16", "dend_12", "dend_11", "dend_6", "dend_5", "dend_131", "dend_128", "dend_117", "dend_116", "dend_41", "dend_40", "dend_28", "dend_23", "dend_130", "dend_129", "dend_27", "dend_24", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_118", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_132", "dend_132", "dend_132", "dend_132", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_133", "dend_123", "dend_123", "dend_123", "dend_123", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_94", "dend_93", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_63", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_122", "dend_121", "dend_121", "dend_121", "dend_121", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_80", "dend_80", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_126", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_131", "dend_131", "dend_131", "dend_131", "dend_128", "dend_128", "dend_128", "dend_117", "dend_117", "dend_116", "dend_116", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_130", "dend_129", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_BTC_87f7404d17_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_106, id: dend_106, parent: soma_0
create dend_106
public dend_106
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_118, id: dend_118, parent: dend_106
create dend_118
public dend_118
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_91, id: dend_91, parent: dend_75
create dend_91
public dend_91
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_66, id: dend_66, parent: dend_60
create dend_66
public dend_66
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_53
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_30, id: dend_30, parent: dend_0
create dend_30
public dend_30
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_132, id: dend_132, parent: dend_118
create dend_132
public dend_132
// Section: dend_119, id: dend_119, parent: dend_118
create dend_119
public dend_119
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_95, id: dend_95, parent: dend_91
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_84, id: dend_84, parent: dend_76
create dend_84
public dend_84
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_72, id: dend_72, parent: dend_66
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_42, id: dend_42, parent: dend_30
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_134, id: dend_134, parent: dend_132
create dend_134
public dend_134
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_123, id: dend_123, parent: dend_119
create dend_123
public dend_123
// Section: dend_120, id: dend_120, parent: dend_119
create dend_120
public dend_120
// Section: dend_111, id: dend_111, parent: dend_109
create dend_111
public dend_111
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_99, id: dend_99, parent: dend_95
create dend_99
public dend_99
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_94, id: dend_94, parent: dend_92
create dend_94
public dend_94
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_88, id: dend_88, parent: dend_84
create dend_88
public dend_88
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_67
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_125, id: dend_125, parent: dend_123
create dend_125
public dend_125
// Section: dend_124, id: dend_124, parent: dend_123
create dend_124
public dend_124
// Section: dend_122, id: dend_122, parent: dend_120
create dend_122
public dend_122
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_113, id: dend_113, parent: dend_111
create dend_113
public dend_113
// Section: dend_112, id: dend_112, parent: dend_111
create dend_112
public dend_112
// Section: dend_103, id: dend_103, parent: dend_99
create dend_103
public dend_103
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_127, id: dend_127, parent: dend_125
create dend_127
public dend_127
// Section: dend_126, id: dend_126, parent: dend_125
create dend_126
public dend_126
// Section: dend_115, id: dend_115, parent: dend_113
create dend_115
public dend_115
// Section: dend_114, id: dend_114, parent: dend_113
create dend_114
public dend_114
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_29, id: dend_29, parent: dend_21
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_131, id: dend_131, parent: dend_127
create dend_131
public dend_131
// Section: dend_128, id: dend_128, parent: dend_127
create dend_128
public dend_128
// Section: dend_117, id: dend_117, parent: dend_115
create dend_117
public dend_117
// Section: dend_116, id: dend_116, parent: dend_115
create dend_116
public dend_116
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_28, id: dend_28, parent: dend_22
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_130, id: dend_130, parent: dend_128
create dend_130
public dend_130
// Section: dend_129, id: dend_129, parent: dend_128
create dend_129
public dend_129
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_113
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_0, dend_0, dend_0, axon_0, axon_0, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_132, dend_132, dend_132, dend_132, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_123, dend_123, dend_123, dend_123, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_93, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_63, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_122, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_80, dend_80, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_131, dend_131, dend_131, dend_131, dend_128, dend_128, dend_128, dend_117, dend_117, dend_116, dend_116, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_130, dend_129, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_106(0), soma_0(0.4500002059017331)
    connect dend_75(0), soma_0(0.4500002059017331)
    connect dend_60(0), soma_0(0.4500002059017331)
    connect dend_53(0), soma_0(0.4500002059017331)
    connect dend_0(0), soma_0(0.4500002059017331)
    connect axon_0(0), soma_0(1.0)
    connect dend_118(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_91(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_66(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_30(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_132(0), dend_118(1.0)
    connect dend_119(0), dend_118(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_95(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_84(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_72(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_42(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_134(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_123(0), dend_119(1.0)
    connect dend_120(0), dend_119(1.0)
    connect dend_111(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_99(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_94(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_88(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_125(0), dend_123(1.0)
    connect dend_124(0), dend_123(1.0)
    connect dend_122(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_113(0), dend_111(1.0)
    connect dend_112(0), dend_111(1.0)
    connect dend_103(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_127(0), dend_125(1.0)
    connect dend_126(0), dend_125(1.0)
    connect dend_115(0), dend_113(1.0)
    connect dend_114(0), dend_113(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_29(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_131(0), dend_127(1.0)
    connect dend_128(0), dend_127(1.0)
    connect dend_117(0), dend_115(1.0)
    connect dend_116(0), dend_115(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_28(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_130(0), dend_128(1.0)
    connect dend_129(0), dend_128(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.00557, 13.9448, -0.281532, 2.94779 ) }
    soma_0 { pt3dadd( -0.903474, 12.664, -0.255809, 4.6084 ) }
    soma_0 { pt3dadd( -0.801382, 11.3832, -0.230087, 6.06545 ) }
    soma_0 { pt3dadd( -0.699289, 10.1025, -0.204364, 7.51206 ) }
    soma_0 { pt3dadd( -0.597197, 8.82172, -0.178642, 8.73615 ) }
    soma_0 { pt3dadd( -0.495104, 7.54095, -0.15292, 9.82275 ) }
    soma_0 { pt3dadd( -0.393011, 6.26019, -0.127197, 10.7174 ) }
    soma_0 { pt3dadd( -0.290919, 4.97943, -0.101475, 11.6395 ) }
    soma_0 { pt3dadd( -0.188826, 3.69867, -0.0757524, 12.4724 ) }
    soma_0 { pt3dadd( -0.0867336, 2.41791, -0.05003, 12.6766 ) }
    soma_0 { pt3dadd( 0.015359, 1.13715, -0.0243075, 12.8528 ) }
    soma_0 { pt3dadd( 0.117452, -0.143613, 0.00141486, 12.7165 ) }
    soma_0 { pt3dadd( 0.219544, -1.42437, 0.0271373, 12.4031 ) }
    soma_0 { pt3dadd( 0.321637, -2.70514, 0.0528597, 12.3753 ) }
    soma_0 { pt3dadd( 0.423729, -3.9859, 0.0785821, 12.071 ) }
    soma_0 { pt3dadd( 0.525822, -5.26666, 0.104304, 10.4042 ) }
    soma_0 { pt3dadd( 0.627914, -6.54742, 0.130027, 7.86989 ) }
    soma_0 { pt3dadd( 0.730007, -7.82818, 0.155749, 5.70594 ) }
    soma_0 { pt3dadd( 0.8321, -9.10894, 0.181472, 4.59143 ) }
    soma_0 { pt3dadd( 0.934192, -10.3897, 0.207194, 3.60784 ) }
    soma_0 { pt3dadd( 1.03628, -11.6705, 0.232917, 2.27826 ) }
    // Section: dend_106, id: dend_106, parent: soma_0 (entry count 21/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 0.462584, -8.38364, 1.90039, 2.8 ) }
    dend_106 { pt3dadd( 0.565127, -8.98859, 1.85754, 2.8 ) }
    dend_106 { pt3dadd( 0.688052, -9.62792, 1.81696, 2.28 ) }
    dend_106 { pt3dadd( 0.827283, -10.2708, 1.8032, 1.77 ) }
    dend_106 { pt3dadd( 0.914784, -10.6066, 1.80338, 1.4 ) }
    dend_106 { pt3dadd( 1.23335, -11.6798, 1.81698, 1.33 ) }
    dend_106 { pt3dadd( 1.44815, -12.3096, 1.85581, 1.18 ) }
    dend_106 { pt3dadd( 1.65598, -12.8155, 1.91195, 1.11 ) }
    dend_106 { pt3dadd( 1.96309, -13.4809, 2.04141, 1.25 ) }
    dend_106 { pt3dadd( 2.21864, -14.0191, 2.18539, 1.33 ) }
    dend_106 { pt3dadd( 2.40404, -14.421, 2.31941, 1.4 ) }
    dend_106 { pt3dadd( 2.75028, -15.2374, 2.64745, 1.33 ) }
    dend_106 { pt3dadd( 2.89432, -15.6066, 2.81416, 1.03 ) }
    dend_106 { pt3dadd( 3.09074, -16.2649, 3.13214, 0.59 ) }
    dend_106 { pt3dadd( 3.13509, -16.602, 3.29767, 0.52 ) }
    dend_106 { pt3dadd( 3.10464, -16.8057, 3.39953, 0.52 ) }
    dend_106 { pt3dadd( 3.04648, -16.9011, 3.44249, 0.52 ) }
    dend_106 { pt3dadd( 2.80647, -17.0708, 3.49136, 0.52 ) }
    dend_106 { pt3dadd( 2.39295, -17.2648, 3.58077, 0.52 ) }
    dend_106 { pt3dadd( 2.23109, -17.347, 3.63365, 0.52 ) }
    dend_106 { pt3dadd( 1.9888, -17.5013, 3.74525, 0.52 ) }
    dend_106 { pt3dadd( 1.75701, -17.6908, 3.87726, 0.52 ) }
    dend_106 { pt3dadd( 1.72741, -17.7351, 3.61609, 0.52 ) }
    dend_106 { pt3dadd( 1.62747, -17.9189, 2.78107, 0.52 ) }
    dend_106 { pt3dadd( 1.49027, -18.2092, 1.68092, 1.55 ) }
    dend_106 { pt3dadd( 1.44777, -18.3172, 1.30832, 1.84 ) }
    dend_106 { pt3dadd( 1.41749, -18.4124, 0.994516, 2.14 ) }
    dend_106 { pt3dadd( 0.804014, -21.0286, -7.49807, 1.25 ) }
    dend_106 { pt3dadd( 0.779448, -21.1896, -8.04273, 1.11 ) }
    dend_106 { pt3dadd( 0.737089, -21.4668, -9.18199, 0.81 ) }
    dend_106 { pt3dadd( 0.721086, -21.5231, -9.51629, 0.59 ) }
    dend_106 { pt3dadd( 0.602149, -21.6141, -10.8104, 0.88 ) }
    dend_106 { pt3dadd( 0.532206, -21.5749, -11.2415, 0.88 ) }
    dend_106 { pt3dadd( 0.723679, -21.8672, -10.4325, 0.44 ) }
    dend_106 { pt3dadd( 1.14293, -22.7174, -8.07103, 0.81 ) }
    dend_106 { pt3dadd( 1.16306, -22.783, -7.90324, 0.81 ) }
    dend_106 { pt3dadd( 1.17905, -23.0584, -7.32473, 1.03 ) }
    dend_106 { pt3dadd( 1.15021, -23.3012, -6.93899, 0.96 ) }
    dend_106 { pt3dadd( 0.933983, -24.2133, -5.79174, 0.96 ) }
    dend_106 { pt3dadd( 0.748262, -24.795, -5.28898, 0.96 ) }
    dend_106 { pt3dadd( 0.63029, -25.1667, -5.08359, 0.96 ) }
    dend_106 { pt3dadd( 0.410513, -25.9693, -4.66901, 0.66 ) }
    dend_106 { pt3dadd( 0.255769, -26.7287, -4.31131, 0.44 ) }
    dend_106 { pt3dadd( 0.21859, -26.9986, -4.19702, 0.44 ) }
    dend_106 { pt3dadd( 0.199295, -27.2385, -4.12022, 0.44 ) }
    dend_106 { pt3dadd( 0.163453, -28.0396, -3.85276, 0.81 ) }
    dend_106 { pt3dadd( 0.161576, -28.0867, -3.83657, 0.81 ) }
    dend_106 { pt3dadd( 0.0993388, -28.8519, -3.58067, 1.11 ) }
    dend_106 { pt3dadd( 0.0525047, -29.2978, -3.42607, 1.55 ) }
    dend_106 { pt3dadd( 0.0301463, -29.477, -3.37927, 1.69 ) }
    dend_106 { pt3dadd( -0.0154133, -29.7822, -3.31174, 1.77 ) }
    dend_106 { pt3dadd( -0.154313, -30.5445, -3.18976, 1.77 ) }
    dend_106 { pt3dadd( -0.23983, -30.9281, -3.13044, 1.77 ) }
    dend_106 { pt3dadd( -0.366042, -31.3489, -3.07342, 1.77 ) }
    dend_106 { pt3dadd( -0.629736, -31.9422, -2.97686, 1.03 ) }
    dend_106 { pt3dadd( -0.859885, -32.3299, -2.90196, 1.03 ) }
    dend_106 { pt3dadd( -1.00809, -32.5032, -2.83221, 0.96 ) }
    dend_106 { pt3dadd( -1.24805, -32.704, -2.69641, 0.66 ) }
    dend_106 { pt3dadd( -1.56679, -32.9361, -2.49116, 0.52 ) }
    dend_106 { pt3dadd( -1.82454, -33.1385, -2.20001, 0.59 ) }
    dend_106 { pt3dadd( -1.84782, -33.1634, -2.16155, 0.59 ) }
    dend_106 { pt3dadd( -2.23464, -33.7606, -1.26627, 0.96 ) }
    dend_106 { pt3dadd( -2.31319, -33.9169, -1.0108, 0.96 ) }
    dend_106 { pt3dadd( -2.35772, -34.0155, -0.844078, 0.96 ) }
    dend_106 { pt3dadd( -2.65655, -34.7933, 0.727692, 0.59 ) }
    dend_106 { pt3dadd( -2.74109, -35.0642, 1.27752, 1.18 ) }
    dend_106 { pt3dadd( -2.76551, -35.1461, 1.44469, 1.18 ) }
    dend_106 { pt3dadd( -2.93532, -35.7956, 2.78357, 1.55 ) }
    dend_106 { pt3dadd( -2.97762, -35.9455, 3.1186, 1.55 ) }
    dend_106 { pt3dadd( -3.29436, -36.8614, 5.33415, 1.03 ) }
    dend_106 { pt3dadd( -3.44958, -37.1522, 6.12343, 0.66 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 92/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 0.932584, -10.5579, -0.789611, 2.95 ) }
    dend_75 { pt3dadd( 0.932584, -10.5579, -0.789611, 2.95 ) }
    dend_75 { pt3dadd( 1.03926, -11.1724, -0.789611, 2.95 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 95/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.33741, 13.3199, 3.03039, 2.06 ) }
    dend_60 { pt3dadd( -1.33741, 13.3199, 3.03039, 2.06 ) }
    dend_60 { pt3dadd( -0.969817, 13.9798, 4.26365, 1.47 ) }
    dend_60 { pt3dadd( -0.369513, 15.2048, 6.50487, 1.55 ) }
    dend_60 { pt3dadd( -0.351799, 15.2468, 6.57977, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_60 { pt3dadd( -0.135388, 15.8281, 7.58381, 1.77 ) }
    dend_60 { pt3dadd( 0.485802, 17.7255, 10.7527, 1.77 ) }
    dend_60 { pt3dadd( 0.756609, 18.6614, 12.2927, 1.84 ) }
    dend_60 { pt3dadd( 0.862383, 19.1855, 13.2219, 1.99 ) }
    dend_60 { pt3dadd( 0.920745, 19.6658, 14.0364, 2.14 ) }
    dend_60 { pt3dadd( 0.93769, 19.9333, 14.4869, 2.28 ) }
    dend_60 { pt3dadd( 0.92207, 20.1441, 14.8388, 2.73 ) }
    dend_60 { pt3dadd( 0.814811, 20.5454, 15.3674, 2.8 ) }
    dend_60 { pt3dadd( 0.234978, 22.4271, 17.8787, 2.8 ) }
    dend_60 { pt3dadd( 0.15756, 22.6751, 18.3062, 2.8 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -4.47741, -4.50314, -5.90961, 1.25 ) }
    dend_53 { pt3dadd( -4.69802, -4.7619, -5.83243, 1.25 ) }
    dend_53 { pt3dadd( -5.09441, -5.23867, -5.79522, 1.03 ) }
    dend_53 { pt3dadd( -5.33225, -5.542, -5.8051, 1.03 ) }
    dend_53 { pt3dadd( -5.85368, -6.21738, -5.85771, 0.66 ) }
    dend_53 { pt3dadd( -6.31662, -6.80434, -6.0105, 0.74 ) }
    dend_53 { pt3dadd( -6.73991, -7.31012, -6.18303, 0.74 ) }
    dend_53 { pt3dadd( -7.38933, -8.04173, -6.50273, 1.18 ) }
    dend_53 { pt3dadd( -7.79539, -8.46318, -6.72473, 1.47 ) }
    dend_53 { pt3dadd( -8.39389, -9.0328, -7.06944, 1.77 ) }
    dend_53 { pt3dadd( -9.64127, -10.0437, -7.84476, 0.52 ) }
    dend_53 { pt3dadd( -10.1337, -10.3742, -8.13738, 0.52 ) }
    dend_53 { pt3dadd( -10.3536, -10.4886, -8.28519, 0.74 ) }
    dend_53 { pt3dadd( -10.7299, -10.6238, -8.50555, 1.18 ) }
    dend_53 { pt3dadd( -11.1976, -10.7306, -8.87506, 1.47 ) }
    dend_53 { pt3dadd( -11.7041, -10.8136, -9.33979, 1.92 ) }
    dend_53 { pt3dadd( -11.9416, -10.8533, -9.57063, 1.69 ) }
    dend_53 { pt3dadd( -13.3105, -11.1647, -11.0951, 0.88 ) }
    dend_53 { pt3dadd( -14.2288, -11.447, -12.1979, 0.74 ) }
    dend_53 { pt3dadd( -15.8289, -12.0923, -14.2578, 0.74 ) }
    dend_53 { pt3dadd( -16.0566, -12.2188, -14.5914, 0.52 ) }
    dend_53 { pt3dadd( -16.3841, -12.465, -15.1196, 0.52 ) }
    dend_53 { pt3dadd( -16.7349, -12.7943, -15.7237, 0.96 ) }
    dend_53 { pt3dadd( -16.958, -13.0544, -16.0906, 0.96 ) }
    dend_53 { pt3dadd( -17.1547, -13.3201, -16.4084, 1.33 ) }
    dend_53 { pt3dadd( -17.9863, -14.3896, -17.537, 1.33 ) }
    dend_53 { pt3dadd( -18.7554, -15.2181, -18.5636, 0.44 ) }
    dend_53 { pt3dadd( -18.9542, -15.4164, -18.8276, 0.88 ) }
    dend_53 { pt3dadd( -19.451, -15.8727, -19.4516, 0.29 ) }
    dend_53 { pt3dadd( -19.8344, -16.1963, -19.9341, 1.33 ) }
    dend_53 { pt3dadd( -20.9122, -17.0001, -21.1992, 1.84 ) }
    dend_53 { pt3dadd( -21.4924, -17.3796, -21.6915, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 42/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.82741, 13.4369, -3.03961, 1.99 ) }
    dend_0 { pt3dadd( -2.82741, 13.4369, -3.03961, 1.99 ) }
    dend_0 { pt3dadd( -3.36242, 15.6064, -3.54806, 2.06 ) }
    dend_0 { pt3dadd( -3.81171, 17.4283, -3.97506, 2.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 46/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.03628, -11.6705, 0.232917, 0.550972 ) }
    axon_0 { pt3dadd( 2.22818, -26.6231, 0.232917, 0.550972 ) }
    axon_0 { pt3dadd( 3.42008, -41.5756, 0.232917, 0.550972 ) }
    // Section: dend_118, id: dend_118, parent: dend_106 (entry count 49/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -3.44958, -37.1522, 6.12343, 0.52 ) }
    dend_118 { pt3dadd( -2.92056, -37.6596, 6.09684, 0.52 ) }
    dend_118 { pt3dadd( -2.6261, -38.0683, 6.19839, 0.74 ) }
    dend_118 { pt3dadd( -2.55665, -38.2987, 6.28824, 0.74 ) }
    dend_118 { pt3dadd( -2.54619, -38.697, 6.4244, 0.74 ) }
    dend_118 { pt3dadd( -2.55316, -38.7507, 6.44119, 0.74 ) }
    dend_118 { pt3dadd( -2.61298, -38.993, 6.5122, 0.74 ) }
    dend_118 { pt3dadd( -2.97247, -39.8058, 6.75033, 0.66 ) }
    dend_118 { pt3dadd( -3.30614, -40.42, 6.93944, 0.66 ) }
    dend_118 { pt3dadd( -3.62564, -40.9615, 7.10859, 1.25 ) }
    dend_118 { pt3dadd( -3.75892, -41.1911, 7.17372, 1.18 ) }
    dend_118 { pt3dadd( -3.92386, -41.4873, 7.24572, 1.33 ) }
    dend_118 { pt3dadd( -4.08659, -41.7764, 7.30166, 1.11 ) }
    dend_118 { pt3dadd( -4.11503, -41.8254, 7.30706, 1.11 ) }
    dend_118 { pt3dadd( -4.32084, -42.1977, 7.4369, 0.66 ) }
    dend_118 { pt3dadd( -4.5058, -42.6213, 7.84125, 0.59 ) }
    dend_118 { pt3dadd( -4.51755, -42.657, 7.88542, 0.59 ) }
    dend_118 { pt3dadd( -4.58366, -42.9379, 8.25881, 0.44 ) }
    dend_118 { pt3dadd( -4.62979, -43.1846, 8.60818, 0.44 ) }
    dend_118 { pt3dadd( -4.73513, -43.7979, 9.54942, 0.96 ) }
    dend_118 { pt3dadd( -4.85458, -44.6395, 11.0294, 1.11 ) }
    dend_118 { pt3dadd( -4.86706, -44.7822, 11.3135, 0.88 ) }
    dend_118 { pt3dadd( -4.8653, -44.995, 11.7498, 0.88 ) }
    dend_118 { pt3dadd( -4.86263, -45.0091, 11.7806, 0.88 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 73/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( -3.44958, -37.1522, 6.12343, 0.37 ) }
    dend_107 { pt3dadd( -3.13857, -37.8356, 5.83498, 0.37 ) }
    dend_107 { pt3dadd( -2.81309, -38.6106, 5.5855, 0.37 ) }
    dend_107 { pt3dadd( -2.31405, -39.7411, 5.56864, 0.59 ) }
    dend_107 { pt3dadd( -2.14477, -40.1141, 5.6412, 0.74 ) }
    dend_107 { pt3dadd( -1.83303, -40.7957, 5.88321, 0.74 ) }
    dend_107 { pt3dadd( -1.54115, -41.4118, 6.13233, 0.37 ) }
    dend_107 { pt3dadd( -1.07156, -42.3963, 6.616, 0.37 ) }
    dend_107 { pt3dadd( -0.105602, -44.423, 7.76943, 0.29 ) }
    dend_107 { pt3dadd( 0.363286, -45.4161, 8.41248, 0.81 ) }
    dend_107 { pt3dadd( 0.961164, -46.6434, 9.27289, 0.37 ) }
    dend_107 { pt3dadd( 1.34919, -47.4281, 9.88248, 0.29 ) }
    dend_107 { pt3dadd( 1.50648, -47.742, 10.1517, 0.37 ) }
    // Section: dend_91, id: dend_91, parent: dend_75 (entry count 86/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 1.03926, -11.1724, -0.789611, 1.47 ) }
    dend_91 { pt3dadd( 2.43027, -12.7809, -2.72665, 1.47 ) }
    dend_91 { pt3dadd( 2.92376, -13.4384, -3.36572, 1.33 ) }
    dend_91 { pt3dadd( 3.01454, -13.6645, -3.63561, 1.33 ) }
    dend_91 { pt3dadd( 3.10182, -14.0845, -4.14238, 1.03 ) }
    dend_91 { pt3dadd( 3.13134, -14.4329, -4.54239, 0.81 ) }
    dend_91 { pt3dadd( 3.1224, -14.9507, -5.09672, 1.11 ) }
    dend_91 { pt3dadd( 2.91061, -15.5467, -5.68956, 1.18 ) }
    dend_91 { pt3dadd( 1.63502, -17.3353, -7.85316, 0.88 ) }
    dend_91 { pt3dadd( 1.35372, -17.6389, -8.23969, 1.33 ) }
    dend_91 { pt3dadd( 1.01896, -17.9464, -8.65084, 1.92 ) }
    dend_91 { pt3dadd( 0.630678, -18.2815, -9.11447, 1.99 ) }
    dend_91 { pt3dadd( -0.308892, -19.082, -10.271, 1.92 ) }
    dend_91 { pt3dadd( -1.65315, -20.3154, -12.1084, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_91 { pt3dadd( -2.01671, -20.7369, -12.7154, 1.18 ) }
    dend_91 { pt3dadd( -2.46927, -21.3713, -13.6997, 1.18 ) }
    dend_91 { pt3dadd( -2.6305, -21.6809, -14.2066, 1.18 ) }
    dend_91 { pt3dadd( -2.77119, -22.2383, -15.128, 1.18 ) }
    dend_91 { pt3dadd( -2.71118, -22.8518, -16.0522, 1.4 ) }
    dend_91 { pt3dadd( -2.48786, -23.2943, -16.6826, 2.06 ) }
    dend_91 { pt3dadd( -2.46261, -23.3279, -16.7383, 2.06 ) }
    dend_91 { pt3dadd( -2.25232, -23.5248, -17.0983, 1.84 ) }
    dend_91 { pt3dadd( -2.23057, -23.5448, -17.1378, 1.84 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 9/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 1.03926, -11.1724, -0.789611, 1.03 ) }
    dend_76 { pt3dadd( 0.509862, -13.7032, -2.0947, 1.03 ) }
    dend_76 { pt3dadd( 0.239955, -15.0975, -2.77896, 0.96 ) }
    dend_76 { pt3dadd( 0.00939153, -16.2886, -3.36347, 1.33 ) }
    dend_76 { pt3dadd( -0.247857, -17.6176, -4.01564, 1.55 ) }
    dend_76 { pt3dadd( -0.412868, -18.47, -4.43397, 1.55 ) }
    dend_76 { pt3dadd( -0.552305, -19.1904, -4.78746, 1.55 ) }
    dend_76 { pt3dadd( -0.688566, -20.2323, -5.18309, 1.69 ) }
    // Section: dend_66, id: dend_66, parent: dend_60 (entry count 17/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 0.15756, 22.6751, 18.3062, 1.03 ) }
    dend_66 { pt3dadd( 0.526202, 23.7003, 18.1529, 1.03 ) }
    dend_66 { pt3dadd( 0.704847, 24.2838, 18.1981, 1.03 ) }
    dend_66 { pt3dadd( 0.810152, 24.7465, 18.2811, 0.88 ) }
    dend_66 { pt3dadd( 0.891024, 25.3057, 18.3986, 0.88 ) }
    dend_66 { pt3dadd( 0.942888, 25.8403, 18.4736, 0.88 ) }
    dend_66 { pt3dadd( 0.966101, 26.2899, 18.5189, 1.03 ) }
    dend_66 { pt3dadd( 0.898851, 27.5076, 18.6732, 1.03 ) }
    dend_66 { pt3dadd( 0.819532, 28.1386, 18.729, 0.96 ) }
    dend_66 { pt3dadd( 0.706417, 28.7515, 18.7562, 0.96 ) }
    dend_66 { pt3dadd( 0.471467, 29.7182, 18.7422, 0.66 ) }
    dend_66 { pt3dadd( 0.358822, 30.1161, 18.7092, 0.59 ) }
    dend_66 { pt3dadd( 0.273983, 30.3945, 18.6595, 0.52 ) }
    dend_66 { pt3dadd( 0.195324, 30.6529, 18.5909, 0.59 ) }
    dend_66 { pt3dadd( 0.118396, 30.923, 18.5163, 0.74 ) }
    dend_66 { pt3dadd( -0.0232901, 31.467, 18.3757, 1.03 ) }
    dend_66 { pt3dadd( -0.139783, 31.9271, 18.2736, 0.96 ) }
    dend_66 { pt3dadd( -0.30107, 32.6462, 18.113, 1.25 ) }
    dend_66 { pt3dadd( -0.400774, 33.1622, 17.9348, 1.62 ) }
    dend_66 { pt3dadd( -0.532788, 33.8514, 17.6389, 1.62 ) }
    dend_66 { pt3dadd( -0.624161, 34.2409, 17.448, 1.47 ) }
    dend_66 { pt3dadd( -0.753223, 34.654, 17.2233, 1.25 ) }
    dend_66 { pt3dadd( -0.967198, 35.1601, 16.9222, 1.11 ) }
    dend_66 { pt3dadd( -1.67289, 36.4167, 16.124, 0.81 ) }
    dend_66 { pt3dadd( -2.05951, 36.9514, 15.7661, 0.74 ) }
    dend_66 { pt3dadd( -2.50125, 37.4365, 15.4297, 0.74 ) }
    dend_66 { pt3dadd( -2.96013, 37.8464, 15.1291, 0.74 ) }
    dend_66 { pt3dadd( -3.30031, 38.081, 14.9526, 0.74 ) }
    dend_66 { pt3dadd( -3.58882, 38.2383, 14.8437, 0.74 ) }
    dend_66 { pt3dadd( -3.96281, 38.4094, 14.7673, 0.74 ) }
    dend_66 { pt3dadd( -4.40495, 38.5758, 14.7655, 0.66 ) }
    dend_66 { pt3dadd( -4.76968, 38.7232, 14.8447, 0.52 ) }
    dend_66 { pt3dadd( -5.26194, 38.9577, 15.0586, 0.59 ) }
    dend_66 { pt3dadd( -5.50697, 39.1215, 15.2099, 0.59 ) }
    dend_66 { pt3dadd( -5.56431, 39.1762, 15.2564, 0.59 ) }
    dend_66 { pt3dadd( -6.61807, 40.5283, 16.3534, 0.74 ) }
    dend_66 { pt3dadd( -6.80208, 40.8672, 16.7294, 1.03 ) }
    dend_66 { pt3dadd( -6.87139, 41.0602, 16.9545, 1.77 ) }
    dend_66 { pt3dadd( -6.99224, 41.6012, 17.5713, 1.77 ) }
    dend_66 { pt3dadd( -7.05017, 42.0511, 18.063, 1.77 ) }
    dend_66 { pt3dadd( -7.05442, 42.1113, 18.1268, 1.77 ) }
    dend_66 { pt3dadd( -6.94629, 43.9832, 19.9876, 1.77 ) }
    dend_66 { pt3dadd( -6.92533, 44.3405, 20.4095, 1.77 ) }
    dend_66 { pt3dadd( -6.91467, 44.5657, 20.7257, 1.84 ) }
    dend_66 { pt3dadd( -6.90577, 44.7968, 21.1473, 1.69 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 0.15756, 22.6751, 18.3062, 0.88 ) }
    dend_61 { pt3dadd( -0.904449, 23.3442, 19.6089, 0.88 ) }
    dend_61 { pt3dadd( -1.11324, 23.4936, 19.8483, 0.88 ) }
    dend_61 { pt3dadd( -1.44778, 23.7692, 20.2013, 0.81 ) }
    dend_61 { pt3dadd( -1.61847, 23.9316, 20.3698, 0.52 ) }
    dend_61 { pt3dadd( -1.75607, 24.0824, 20.502, 0.52 ) }
    dend_61 { pt3dadd( -1.77718, 24.1104, 20.523, 0.52 ) }
    dend_61 { pt3dadd( -1.77713, 24.2731, 20.6975, 0.66 ) }
    dend_61 { pt3dadd( -1.70256, 24.376, 20.9261, 0.59 ) }
    dend_61 { pt3dadd( -1.63249, 24.4366, 21.1002, 0.59 ) }
    dend_61 { pt3dadd( -1.56061, 24.4925, 21.2636, 0.74 ) }
    dend_61 { pt3dadd( -1.42859, 24.5898, 21.547, 0.96 ) }
    dend_61 { pt3dadd( -0.501776, 25.2669, 23.5341, 1.11 ) }
    dend_61 { pt3dadd( -0.317214, 25.3847, 23.9242, 1.18 ) }
    dend_61 { pt3dadd( -0.269875, 25.4104, 24.025, 1.18 ) }
    dend_61 { pt3dadd( -0.165601, 25.4602, 24.2621, 1.11 ) }
    dend_61 { pt3dadd( -0.10295, 25.4824, 24.4076, 1.03 ) }
    dend_61 { pt3dadd( -6.21315E-4, 25.4893, 24.5859, 0.81 ) }
    dend_61 { pt3dadd( -0.793603, 25.6025, 24.3484, 1.03 ) }
    dend_61 { pt3dadd( -0.990742, 25.6174, 24.3177, 1.03 ) }
    dend_61 { pt3dadd( -1.64777, 25.6486, 24.2744, 1.03 ) }
    dend_61 { pt3dadd( -2.00165, 25.662, 24.2745, 0.74 ) }
    dend_61 { pt3dadd( -2.09641, 25.6686, 24.2957, 0.74 ) }
    dend_61 { pt3dadd( -2.38744, 25.7116, 24.4157, 0.88 ) }
    dend_61 { pt3dadd( -2.76494, 25.8204, 24.6475, 0.74 ) }
    dend_61 { pt3dadd( -3.01678, 25.9612, 24.8272, 0.74 ) }
    dend_61 { pt3dadd( -3.06381, 26.027, 24.8908, 0.74 ) }
    dend_61 { pt3dadd( -3.2955, 26.7211, 25.4765, 0.74 ) }
    dend_61 { pt3dadd( -3.33792, 27.0199, 25.6794, 1.25 ) }
    dend_61 { pt3dadd( -3.32521, 27.2948, 25.8248, 1.25 ) }
    dend_61 { pt3dadd( -3.27155, 27.6452, 25.9757, 1.25 ) }
    dend_61 { pt3dadd( -3.09736, 28.4163, 26.3393, 1.03 ) }
    dend_61 { pt3dadd( -3.00522, 28.7544, 26.5338, 0.96 ) }
    dend_61 { pt3dadd( -2.87208, 29.1719, 26.7471, 0.81 ) }
    dend_61 { pt3dadd( -2.72826, 29.5761, 26.9775, 0.74 ) }
    dend_61 { pt3dadd( -2.67889, 29.7049, 27.0504, 0.74 ) }
    dend_61 { pt3dadd( -2.49278, 30.2822, 27.6405, 0.74 ) }
    dend_61 { pt3dadd( -2.42733, 30.7236, 28.2005, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_61 { pt3dadd( -2.46625, 31.0736, 28.8666, 0.74 ) }
    dend_61 { pt3dadd( -2.49528, 31.181, 29.1064, 0.74 ) }
    dend_61 { pt3dadd( -2.53614, 31.2931, 29.3763, 0.74 ) }
    dend_61 { pt3dadd( -2.89932, 32.1225, 31.4365, 0.81 ) }
    dend_61 { pt3dadd( -2.98995, 32.291, 31.8603, 1.03 ) }
    dend_61 { pt3dadd( -3.3761, 32.8872, 33.5179, 1.25 ) }
    dend_61 { pt3dadd( -3.38651, 32.9015, 33.5625, 1.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_53 (entry count 7/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -21.4924, -17.3796, -21.6915, 0.74 ) }
    dend_59 { pt3dadd( -22.2959, -17.6905, -27.0335, 0.74 ) }
    dend_59 { pt3dadd( -22.5623, -17.7426, -28.5234, 0.37 ) }
    dend_59 { pt3dadd( -22.6808, -17.7554, -29.1224, 0.37 ) }
    dend_59 { pt3dadd( -22.8608, -17.7616, -29.9338, 0.37 ) }
    dend_59 { pt3dadd( -22.9367, -17.7702, -30.2371, 0.37 ) }
    dend_59 { pt3dadd( -23.0632, -17.7783, -30.6937, 0.74 ) }
    dend_59 { pt3dadd( -23.1863, -17.7564, -30.9711, 1.03 ) }
    dend_59 { pt3dadd( -23.6852, -17.7236, -32.0792, 1.33 ) }
    dend_59 { pt3dadd( -23.8125, -17.7254, -32.3607, 1.25 ) }
    dend_59 { pt3dadd( -24.505, -17.9982, -35.0161, 0.22 ) }
    dend_59 { pt3dadd( -24.6233, -18.0513, -35.591, 0.22 ) }
    dend_59 { pt3dadd( -24.6629, -18.0701, -35.8229, 0.59 ) }
    dend_59 { pt3dadd( -24.7163, -18.0911, -36.1642, 1.03 ) }
    dend_59 { pt3dadd( -24.7601, -18.1072, -36.491, 1.03 ) }
    dend_59 { pt3dadd( -25.2365, -18.517, -41.7259, 0.22 ) }
    dend_59 { pt3dadd( -25.2848, -18.5914, -42.5102, 0.66 ) }
    dend_59 { pt3dadd( -25.2929, -18.6088, -42.6716, 1.47 ) }
    dend_59 { pt3dadd( -25.2977, -18.6652, -43.1015, 1.84 ) }
    dend_59 { pt3dadd( -25.2892, -18.8785, -44.5685, 1.33 ) }
    dend_59 { pt3dadd( -25.2318, -19.3844, -48.0772, 0.88 ) }
    dend_59 { pt3dadd( -25.23, -19.3964, -48.1536, 0.88 ) }
    dend_59 { pt3dadd( -25.2228, -19.4506, -48.4727, 0.96 ) }
    dend_59 { pt3dadd( -25.1465, -20.3894, -54.5123, 1.47 ) }
    dend_59 { pt3dadd( -25.1468, -20.4003, -54.5889, 1.47 ) }
    dend_59 { pt3dadd( -25.1579, -20.4578, -55.0605, 1.47 ) }
    dend_59 { pt3dadd( -25.3488, -20.9303, -60.0939, 0.29 ) }
    dend_59 { pt3dadd( -25.3777, -20.9835, -60.7187, 0.29 ) }
    dend_59 { pt3dadd( -25.4518, -21.0542, -61.7357, 0.29 ) }
    dend_59 { pt3dadd( -25.5231, -21.0604, -62.3072, 0.52 ) }
    dend_59 { pt3dadd( -25.5231, -21.0604, -62.3072, 0.96 ) }
    dend_59 { pt3dadd( -25.503, -21.3453, -63.9923, 1.47 ) }
    dend_59 { pt3dadd( -25.4037, -21.994, -67.5481, 0.44 ) }
    dend_59 { pt3dadd( -25.3865, -22.0954, -68.0695, 1.11 ) }
    dend_59 { pt3dadd( -25.3666, -22.2107, -68.6231, 1.11 ) }
    dend_59 { pt3dadd( -24.8532, -24.8271, -80.9445, 0.52 ) }
    dend_59 { pt3dadd( -24.8501, -24.8426, -81.018, 0.52 ) }
    dend_59 { pt3dadd( -24.8277, -24.9582, -81.5364, 0.81 ) }
    dend_59 { pt3dadd( -24.8107, -25.0462, -81.9195, 0.81 ) }
    dend_59 { pt3dadd( -24.8073, -25.063, -81.9919, 0.81 ) }
    dend_59 { pt3dadd( -24.6618, -25.8877, -85.665, 0.81 ) }
    dend_59 { pt3dadd( -24.6589, -25.9676, -86.126, 0.81 ) }
    dend_59 { pt3dadd( -24.6639, -26.9255, -91.6929, 0.37 ) }
    dend_59 { pt3dadd( -24.67, -26.982, -92.0216, 1.47 ) }
    dend_59 { pt3dadd( -24.67, -26.982, -92.0216, 1.47 ) }
    dend_59 { pt3dadd( -24.9655, -27.565, -95.8547, 0.22 ) }
    dend_59 { pt3dadd( -25.0657, -27.6531, -96.531, 0.22 ) }
    dend_59 { pt3dadd( -25.1276, -27.6855, -96.8467, 0.22 ) }
    dend_59 { pt3dadd( -25.4269, -27.6567, -97.7241, 0.22 ) }
    dend_59 { pt3dadd( -25.5001, -27.684, -98.0792, 0.74 ) }
    dend_59 { pt3dadd( -25.5717, -27.7433, -98.5237, 1.11 ) }
    dend_59 { pt3dadd( -25.5806, -27.7541, -98.5976, 1.11 ) }
    dend_59 { pt3dadd( -25.7036, -27.9891, -100.034, 1.11 ) }
    dend_59 { pt3dadd( -25.7188, -28.0137, -100.279, 1.11 ) }
    dend_59 { pt3dadd( -26.0291, -28.2459, -105.317, 0.74 ) }
    dend_59 { pt3dadd( -26.0533, -28.2499, -105.637, 1.69 ) }
    dend_59 { pt3dadd( -26.1084, -28.2303, -106.447, 1.69 ) }
    dend_59 { pt3dadd( -26.124, -28.2053, -106.747, 1.69 ) }
    dend_59 { pt3dadd( -26.2592, -27.6107, -110.232, 0.44 ) }
    dend_59 { pt3dadd( -26.279, -27.3345, -111.115, 0.44 ) }
    dend_59 { pt3dadd( -26.2796, -27.299, -111.18, 0.44 ) }
    dend_59 { pt3dadd( -26.2293, -26.498, -112.528, 0.81 ) }
    dend_59 { pt3dadd( -26.1943, -26.2002, -112.997, 1.11 ) }
    dend_59 { pt3dadd( -26.1615, -25.9708, -113.301, 1.11 ) }
    dend_59 { pt3dadd( -25.9107, -24.7153, -114.476, 0.29 ) }
    dend_59 { pt3dadd( -25.8985, -24.6597, -114.527, 0.29 ) }
    dend_59 { pt3dadd( -25.8183, -24.2493, -114.962, 0.29 ) }
    dend_59 { pt3dadd( -25.7901, -24.02, -115.215, 0.88 ) }
    dend_59 { pt3dadd( -25.7479, -23.7237, -115.592, 1.11 ) }
    dend_59 { pt3dadd( -25.7045, -23.5307, -116.008, 1.11 ) }
    dend_59 { pt3dadd( -25.6544, -23.3149, -116.611, 1.11 ) }
    dend_59 { pt3dadd( -25.5102, -22.4503, -119.198, 0.22 ) }
    dend_59 { pt3dadd( -25.5189, -22.221, -119.94, 1.33 ) }
    dend_59 { pt3dadd( -25.5306, -22.1667, -120.111, 1.33 ) }
    dend_59 { pt3dadd( -25.9792, -20.9602, -123.777, 0.29 ) }
    dend_59 { pt3dadd( -26.0322, -20.8558, -124.169, 0.66 ) }
    dend_59 { pt3dadd( -26.0856, -20.7602, -124.535, 0.88 ) }
    dend_59 { pt3dadd( -26.3198, -20.4771, -125.658, 0.52 ) }
    dend_59 { pt3dadd( -26.5341, -20.2322, -126.61, 0.52 ) }
    dend_59 { pt3dadd( -26.6061, -20.1451, -126.912, 0.81 ) }
    dend_59 { pt3dadd( -27.5289, -18.8269, -130.591, 0.52 ) }
    dend_59 { pt3dadd( -27.5881, -18.6728, -131.269, 0.52 ) }
    dend_59 { pt3dadd( -27.6033, -18.4598, -132.496, 0.29 ) }
    dend_59 { pt3dadd( -27.5981, -18.3921, -132.968, 0.81 ) }
    dend_59 { pt3dadd( -27.5975, -18.3838, -133.042, 0.81 ) }
    dend_59 { pt3dadd( -27.6064, -18.3284, -133.559, 0.81 ) }
    dend_59 { pt3dadd( -27.9132, -17.736, -138.694, 0.29 ) }
    dend_59 { pt3dadd( -27.9283, -17.71, -138.985, 0.29 ) }
    dend_59 { pt3dadd( -27.9754, -17.6264, -140.078, 0.29 ) }
    dend_59 { pt3dadd( -27.9805, -17.6205, -140.153, 0.29 ) }
    dend_59 { pt3dadd( -28.0209, -17.5849, -140.491, 0.74 ) }
    dend_59 { pt3dadd( -28.0666, -17.5502, -140.708, 0.74 ) }
    dend_59 { pt3dadd( -29.0655, -16.6344, -143.012, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_59 { pt3dadd( -29.1718, -16.524, -143.279, 0.29 ) }
    dend_59 { pt3dadd( -29.1983, -16.4926, -143.356, 0.29 ) }
    dend_59 { pt3dadd( -29.3598, -16.2478, -143.944, 0.29 ) }
    dend_59 { pt3dadd( -29.4432, -16.0979, -144.296, 0.52 ) }
    dend_59 { pt3dadd( -29.4594, -16.0682, -144.363, 0.52 ) }
    dend_59 { pt3dadd( -29.5534, -15.8336, -144.789, 0.52 ) }
    dend_59 { pt3dadd( -29.6181, -15.6054, -145.2, 0.52 ) }
    dend_59 { pt3dadd( -29.902, -14.7025, -147.19, 0.29 ) }
    dend_59 { pt3dadd( -29.9379, -14.6292, -147.344, 0.59 ) }
    dend_59 { pt3dadd( -29.9868, -14.5572, -147.486, 0.59 ) }
    dend_59 { pt3dadd( -30.1937, -14.3015, -147.948, 1.03 ) }
    dend_59 { pt3dadd( -30.442, -14.0387, -148.368, 1.03 ) }
    dend_59 { pt3dadd( -31.0962, -13.5005, -149.618, 0.66 ) }
    dend_59 { pt3dadd( -31.7766, -13.1285, -150.867, 0.22 ) }
    dend_59 { pt3dadd( -31.9306, -13.0341, -151.237, 0.66 ) }
    dend_59 { pt3dadd( -32.0212, -12.9693, -151.51, 0.96 ) }
    dend_59 { pt3dadd( -32.1839, -12.8436, -152.087, 0.96 ) }
    dend_59 { pt3dadd( -32.9104, -12.1288, -155.335, 0.44 ) }
    dend_59 { pt3dadd( -32.925, -12.1101, -155.419, 0.44 ) }
    dend_59 { pt3dadd( -33.0893, -11.8731, -156.705, 0.29 ) }
    dend_59 { pt3dadd( -33.1216, -11.8498, -157.015, 0.29 ) }
    dend_59 { pt3dadd( -33.2169, -11.8282, -157.526, 0.29 ) }
    dend_59 { pt3dadd( -33.4038, -11.804, -158.162, 0.96 ) }
    dend_59 { pt3dadd( -33.5808, -11.7609, -158.552, 1.4 ) }
    dend_59 { pt3dadd( -33.6862, -11.7399, -158.762, 1.4 ) }
    dend_59 { pt3dadd( -35.7379, -11.427, -162.447, 0.44 ) }
    dend_59 { pt3dadd( -36.4841, -11.3167, -163.757, 0.29 ) }
    dend_59 { pt3dadd( -36.8494, -11.2723, -164.452, 0.29 ) }
    dend_59 { pt3dadd( -37.2999, -11.2222, -165.352, 0.29 ) }
    dend_59 { pt3dadd( -37.3334, -11.2161, -165.419, 0.29 ) }
    dend_59 { pt3dadd( -37.5501, -11.1622, -165.818, 0.29 ) }
    dend_59 { pt3dadd( -37.992, -10.9872, -166.465, 0.88 ) }
    dend_59 { pt3dadd( -38.6899, -10.7609, -167.991, 0.74 ) }
    dend_59 { pt3dadd( -38.7192, -10.7621, -168.059, 0.74 ) }
    dend_59 { pt3dadd( -38.9244, -10.8164, -168.511, 0.74 ) }
    dend_59 { pt3dadd( -38.9698, -10.8304, -168.599, 0.74 ) }
    dend_59 { pt3dadd( -39.3444, -10.9892, -169.363, 0.52 ) }
    dend_59 { pt3dadd( -39.3837, -11.0061, -169.439, 0.52 ) }
    dend_59 { pt3dadd( -40.1267, -11.3172, -170.705, 0.22 ) }
    dend_59 { pt3dadd( -40.3198, -11.403, -171.034, 0.44 ) }
    dend_59 { pt3dadd( -40.4745, -11.4744, -171.309, 0.59 ) }
    dend_59 { pt3dadd( -41.571, -11.9527, -173.185, 0.22 ) }
    dend_59 { pt3dadd( -41.6556, -11.9816, -173.319, 0.22 ) }
    dend_59 { pt3dadd( -41.8874, -12.0464, -173.676, 0.66 ) }
    dend_59 { pt3dadd( -41.9705, -12.0622, -173.8, 0.66 ) }
    dend_59 { pt3dadd( -43.0752, -12.2304, -175.269, 0.22 ) }
    dend_59 { pt3dadd( -43.3853, -12.2538, -175.597, 0.22 ) }
    dend_59 { pt3dadd( -43.9736, -12.2284, -176.023, 0.66 ) }
    dend_59 { pt3dadd( -44.207, -12.2044, -176.177, 1.25 ) }
    dend_59 { pt3dadd( -44.3939, -12.1736, -176.303, 1.25 ) }
    dend_59 { pt3dadd( -44.8745, -12.0706, -176.604, 1.55 ) }
    dend_59 { pt3dadd( -45.5119, -11.8869, -176.926, 1.33 ) }
    dend_59 { pt3dadd( -45.8846, -11.7842, -177.163, 1.33 ) }
    dend_59 { pt3dadd( -46.2687, -11.6897, -177.433, 1.33 ) }
    dend_59 { pt3dadd( -46.9784, -11.5167, -177.94, 0.81 ) }
    dend_59 { pt3dadd( -47.1664, -11.4738, -178.077, 0.81 ) }
    dend_59 { pt3dadd( -48.085, -11.263, -178.805, 0.44 ) }
    dend_59 { pt3dadd( -49.1102, -10.9983, -179.659, 0.44 ) }
    dend_59 { pt3dadd( -49.1661, -10.9852, -179.708, 0.44 ) }
    dend_59 { pt3dadd( -49.8121, -10.8385, -180.281, 0.44 ) }
    dend_59 { pt3dadd( -49.8707, -10.8255, -180.325, 0.44 ) }
    dend_59 { pt3dadd( -51.0266, -10.5843, -181.092, 0.44 ) }
    dend_59 { pt3dadd( -51.4212, -10.5201, -181.307, 0.44 ) }
    dend_59 { pt3dadd( -52.0617, -10.4572, -181.561, 0.44 ) }
    dend_59 { pt3dadd( -52.2301, -10.4484, -181.618, 0.44 ) }
    dend_59 { pt3dadd( -53.6099, -10.3939, -182.014, 0.29 ) }
    dend_59 { pt3dadd( -54.22, -10.3753, -182.157, 0.96 ) }
    dend_59 { pt3dadd( -55.5557, -10.4159, -182.858, 0.22 ) }
    dend_59 { pt3dadd( -56.1084, -10.4149, -183.225, 1.25 ) }
    dend_59 { pt3dadd( -56.2189, -10.4081, -183.311, 1.25 ) }
    dend_59 { pt3dadd( -56.7559, -10.3547, -183.801, 1.25 ) }
    dend_59 { pt3dadd( -56.8726, -10.3356, -183.916, 1.25 ) }
    dend_59 { pt3dadd( -59.7444, -9.62805, -186.717, 0.44 ) }
    dend_59 { pt3dadd( -60.8472, -9.23484, -187.725, 0.29 ) }
    dend_59 { pt3dadd( -61.2318, -9.06965, -188.005, 0.29 ) }
    dend_59 { pt3dadd( -61.2867, -9.04765, -188.051, 0.29 ) }
    dend_59 { pt3dadd( -62.8989, -8.61407, -189.44, 0.96 ) }
    dend_59 { pt3dadd( -62.9568, -8.60019, -189.486, 0.96 ) }
    dend_59 { pt3dadd( -63.2796, -8.53076, -189.712, 1.33 ) }
    dend_59 { pt3dadd( -63.7519, -8.44549, -190.114, 1.33 ) }
    dend_59 { pt3dadd( -65.8483, -8.01055, -192.099, 0.37 ) }
    dend_59 { pt3dadd( -66.9178, -7.75626, -193.187, 0.22 ) }
    dend_59 { pt3dadd( -67.4994, -7.61267, -193.828, 0.22 ) }
    dend_59 { pt3dadd( -67.7116, -7.55113, -194.059, 0.74 ) }
    dend_59 { pt3dadd( -68.1171, -7.40763, -194.484, 1.18 ) }
    dend_59 { pt3dadd( -69.6676, -6.74236, -195.985, 0.29 ) }
    dend_59 { pt3dadd( -69.9902, -6.55698, -196.228, 0.29 ) }
    dend_59 { pt3dadd( -70.041, -6.52009, -196.268, 0.29 ) }
    dend_59 { pt3dadd( -70.188, -6.41002, -196.378, 0.96 ) }
    dend_59 { pt3dadd( -70.7272, -5.97157, -196.761, 0.96 ) }
    dend_59 { pt3dadd( -70.7852, -5.92099, -196.798, 0.96 ) }
    dend_59 { pt3dadd( -71.7324, -5.01787, -197.293, 0.37 ) }
    dend_59 { pt3dadd( -71.999, -4.7661, -197.433, 0.66 ) }
    dend_59 { pt3dadd( -72.3121, -4.46324, -197.624, 0.81 ) }
    dend_59 { pt3dadd( -72.8842, -3.91426, -198.078, 0.66 ) }
    dend_59 { pt3dadd( -73.2587, -3.53356, -198.47, 0.37 ) }
    dend_59 { pt3dadd( -73.4373, -3.37443, -198.622, 0.74 ) }
    dend_59 { pt3dadd( -73.9845, -2.93919, -199.017, 1.11 ) }
    dend_59 { pt3dadd( -74.5785, -2.48348, -199.378, 1.11 ) }
    dend_59 { pt3dadd( -75.4526, -1.8117, -199.829, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_59 { pt3dadd( -75.9221, -1.47308, -200.102, 0.81 ) }
    dend_59 { pt3dadd( -77.7936, -0.114946, -201.281, 0.29 ) }
    dend_59 { pt3dadd( -78.1893, 0.168083, -201.531, 0.44 ) }
    dend_59 { pt3dadd( -78.5583, 0.439894, -201.758, 0.74 ) }
    dend_59 { pt3dadd( -79.0808, 0.827802, -202.054, 0.74 ) }
    dend_59 { pt3dadd( -80.2568, 1.76997, -202.758, 0.29 ) }
    dend_59 { pt3dadd( -80.6928, 2.15881, -203.089, 0.29 ) }
    dend_59 { pt3dadd( -80.7905, 2.26376, -203.188, 0.29 ) }
    dend_59 { pt3dadd( -81.087, 2.57197, -203.422, 0.66 ) }
    dend_59 { pt3dadd( -81.4647, 2.97416, -203.65, 0.96 ) }
    dend_59 { pt3dadd( -81.8576, 3.41456, -203.823, 0.74 ) }
    dend_59 { pt3dadd( -82.4444, 4.1038, -204.002, 0.29 ) }
    dend_59 { pt3dadd( -83.2866, 5.1323, -204.272, 0.29 ) }
    dend_59 { pt3dadd( -83.5327, 5.45381, -204.36, 0.66 ) }
    dend_59 { pt3dadd( -83.9395, 5.99643, -204.532, 0.96 ) }
    dend_59 { pt3dadd( -84.247, 6.42542, -204.692, 0.29 ) }
    dend_59 { pt3dadd( -84.5187, 6.80594, -204.867, 0.29 ) }
    dend_59 { pt3dadd( -84.6393, 6.97712, -204.971, 0.29 ) }
    dend_59 { pt3dadd( -84.9205, 7.35106, -205.231, 0.29 ) }
    dend_59 { pt3dadd( -85.2385, 7.66387, -205.491, 0.29 ) }
    dend_59 { pt3dadd( -85.5366, 7.83998, -205.595, 0.44 ) }
    dend_59 { pt3dadd( -85.5944, 7.86686, -205.598, 0.44 ) }
    dend_59 { pt3dadd( -85.8712, 8.00169, -205.572, 0.44 ) }
    dend_59 { pt3dadd( -86.8301, 8.47698, -205.418, 0.37 ) }
    dend_59 { pt3dadd( -86.8849, 8.50924, -205.413, 0.37 ) }
    dend_59 { pt3dadd( -88.081, 9.33501, -205.372, 0.88 ) }
    dend_59 { pt3dadd( -88.4444, 9.60237, -205.376, 1.33 ) }
    dend_59 { pt3dadd( -88.9178, 9.9828, -205.426, 1.25 ) }
    dend_59 { pt3dadd( -88.9764, 10.0314, -205.438, 1.25 ) }
    dend_59 { pt3dadd( -90.4083, 11.2049, -205.887, 0.44 ) }
    dend_59 { pt3dadd( -90.7473, 11.4411, -206.024, 0.81 ) }
    dend_59 { pt3dadd( -90.9347, 11.5395, -206.128, 0.81 ) }
    dend_59 { pt3dadd( -91.5068, 11.7654, -206.448, 0.22 ) }
    dend_59 { pt3dadd( -92.0819, 11.767, -206.872, 0.22 ) }
    dend_59 { pt3dadd( -92.4303, 11.6371, -207.189, 0.22 ) }
    dend_59 { pt3dadd( -92.7178, 11.4315, -207.488, 0.22 ) }
    dend_59 { pt3dadd( -93.2671, 10.9569, -208.136, 0.81 ) }
    dend_59 { pt3dadd( -93.4556, 10.7873, -208.364, 1.18 ) }
    dend_59 { pt3dadd( -95.0628, 9.18104, -210.314, 0.37 ) }
    dend_59 { pt3dadd( -95.2483, 8.98522, -210.539, 0.44 ) }
    dend_59 { pt3dadd( -95.4271, 8.79731, -210.745, 0.44 ) }
    dend_59 { pt3dadd( -96.5684, 7.6223, -211.907, 0.37 ) }
    dend_59 { pt3dadd( -96.9506, 7.24676, -212.237, 0.37 ) }
    dend_59 { pt3dadd( -97.3823, 6.92627, -212.553, 0.81 ) }
    dend_59 { pt3dadd( -97.866, 6.65645, -212.838, 1.03 ) }
    dend_59 { pt3dadd( -98.3125, 6.40343, -213.089, 1.18 ) }
    dend_59 { pt3dadd( -98.8929, 6.04596, -213.455, 1.18 ) }
    dend_59 { pt3dadd( -98.9484, 6.01142, -213.491, 1.18 ) }
    dend_59 { pt3dadd( -101.432, 4.45873, -215.261, 0.29 ) }
    dend_59 { pt3dadd( -101.816, 4.22145, -215.552, 1.18 ) }
    dend_59 { pt3dadd( -102.287, 3.9252, -215.927, 1.47 ) }
    dend_59 { pt3dadd( -103.856, 2.99747, -217.077, 0.52 ) }
    dend_59 { pt3dadd( -104.34, 2.73475, -217.392, 0.37 ) }
    dend_59 { pt3dadd( -104.605, 2.60006, -217.528, 0.81 ) }
    dend_59 { pt3dadd( -104.892, 2.45319, -217.645, 0.96 ) }
    dend_59 { pt3dadd( -105.018, 2.39069, -217.696, 0.96 ) }
    dend_59 { pt3dadd( -106.493, 1.65712, -218.222, 0.37 ) }
    dend_59 { pt3dadd( -106.766, 1.51013, -218.292, 0.74 ) }
    dend_59 { pt3dadd( -107.085, 1.3057, -218.402, 0.74 ) }
    dend_59 { pt3dadd( -108.48, 0.18621, -218.949, 0.44 ) }
    dend_59 { pt3dadd( -109.523, -0.832078, -219.378, 0.29 ) }
    dend_59 { pt3dadd( -109.751, -1.08452, -219.475, 0.66 ) }
    dend_59 { pt3dadd( -110.083, -1.51774, -219.629, 1.03 ) }
    dend_59 { pt3dadd( -110.541, -2.13755, -219.82, 0.29 ) }
    dend_59 { pt3dadd( -111.18, -3.0583, -220.015, 0.29 ) }
    dend_59 { pt3dadd( -111.755, -3.89559, -220.083, 0.29 ) }
    dend_59 { pt3dadd( -112.077, -4.43326, -220.131, 0.29 ) }
    dend_59 { pt3dadd( -112.269, -4.7619, -220.16, 0.66 ) }
    dend_59 { pt3dadd( -112.735, -5.53475, -220.226, 0.29 ) }
    dend_59 { pt3dadd( -113.142, -6.17825, -220.247, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 70/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -21.4924, -17.3796, -21.6915, 1.84 ) }
    dend_54 { pt3dadd( -22.3987, -17.8068, -21.7302, 1.84 ) }
    dend_54 { pt3dadd( -23.6823, -18.4944, -21.7657, 0.29 ) }
    dend_54 { pt3dadd( -24.4404, -18.9676, -21.771, 0.29 ) }
    dend_54 { pt3dadd( -25.1508, -19.4149, -21.775, 0.81 ) }
    dend_54 { pt3dadd( -25.7921, -19.8527, -21.7679, 0.29 ) }
    dend_54 { pt3dadd( -26.4552, -20.314, -21.7565, 0.22 ) }
    dend_54 { pt3dadd( -26.6925, -20.4813, -21.751, 0.81 ) }
    dend_54 { pt3dadd( -27.2143, -20.9295, -21.7179, 0.81 ) }
    dend_54 { pt3dadd( -27.6489, -21.3196, -21.6853, 0.81 ) }
    dend_54 { pt3dadd( -28.2417, -21.8486, -21.641, 0.81 ) }
    dend_54 { pt3dadd( -28.8499, -22.4073, -21.5916, 0.52 ) }
    dend_54 { pt3dadd( -29.3878, -22.9207, -21.5444, 0.52 ) }
    dend_54 { pt3dadd( -29.8383, -23.3909, -21.5106, 1.11 ) }
    dend_54 { pt3dadd( -30.2841, -23.9102, -21.4789, 1.33 ) }
    dend_54 { pt3dadd( -30.5928, -24.3388, -21.4514, 1.33 ) }
    dend_54 { pt3dadd( -30.7325, -24.5528, -21.439, 1.11 ) }
    dend_54 { pt3dadd( -31.2007, -25.4042, -21.3793, 1.03 ) }
    dend_54 { pt3dadd( -31.4481, -25.8675, -21.3473, 0.29 ) }
    dend_54 { pt3dadd( -31.6599, -26.2336, -21.3253, 0.29 ) }
    dend_54 { pt3dadd( -31.9907, -26.8446, -21.2777, 0.22 ) }
    dend_54 { pt3dadd( -32.3527, -27.4361, -21.2331, 0.22 ) }
    dend_54 { pt3dadd( -32.668, -27.8959, -21.1975, 0.88 ) }
    dend_54 { pt3dadd( -32.9289, -28.2376, -21.1687, 1.11 ) }
    dend_54 { pt3dadd( -33.2193, -28.597, -21.1342, 1.11 ) }
    dend_54 { pt3dadd( -34.7069, -30.1897, -21.0126, 0.22 ) }
    dend_54 { pt3dadd( -35.4304, -30.8599, -21.0395, 0.96 ) }
    dend_54 { pt3dadd( -36.1662, -31.5144, -21.1158, 1.33 ) }
    dend_54 { pt3dadd( -37.3084, -32.4955, -21.2916, 0.37 ) }
    dend_54 { pt3dadd( -38.5621, -33.5119, -21.5353, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( -39.7478, -34.3232, -21.7558, 0.37 ) }
    dend_54 { pt3dadd( -41.3645, -35.2042, -22.0565, 1.25 ) }
    dend_54 { pt3dadd( -42.1388, -35.616, -22.1775, 1.92 ) }
    dend_54 { pt3dadd( -42.8442, -35.9433, -22.2735, 1.25 ) }
    dend_54 { pt3dadd( -43.6015, -36.2447, -22.351, 1.03 ) }
    dend_54 { pt3dadd( -45.1694, -36.7856, -22.2036, 0.29 ) }
    dend_54 { pt3dadd( -45.633, -36.9539, -22.0552, 0.52 ) }
    dend_54 { pt3dadd( -46.4597, -37.1945, -21.6325, 0.29 ) }
    dend_54 { pt3dadd( -46.5455, -37.2135, -21.5849, 0.29 ) }
    dend_54 { pt3dadd( -46.8853, -37.3009, -21.4234, 0.29 ) }
    dend_54 { pt3dadd( -48.9636, -37.9705, -20.6084, 0.88 ) }
    dend_54 { pt3dadd( -49.0363, -37.9983, -20.5881, 0.88 ) }
    dend_54 { pt3dadd( -49.521, -38.1831, -20.4752, 1.4 ) }
    dend_54 { pt3dadd( -50.0834, -38.3874, -20.3738, 1.11 ) }
    dend_54 { pt3dadd( -52.3494, -39.2594, -20.1329, 0.44 ) }
    dend_54 { pt3dadd( -52.6871, -39.403, -20.1407, 1.18 ) }
    dend_54 { pt3dadd( -53.0177, -39.5607, -20.2149, 1.18 ) }
    dend_54 { pt3dadd( -53.4816, -39.7837, -20.3222, 0.96 ) }
    // Section: dend_30, id: dend_30, parent: dend_0 (entry count 18/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -3.81171, 17.4283, -3.97506, 1.03 ) }
    dend_30 { pt3dadd( -4.64507, 17.9896, -4.29563, 1.03 ) }
    dend_30 { pt3dadd( -6.46896, 19.1604, -4.94509, 0.74 ) }
    dend_30 { pt3dadd( -6.98634, 19.4641, -5.10986, 0.81 ) }
    dend_30 { pt3dadd( -8.33911, 20.184, -5.35761, 0.96 ) }
    dend_30 { pt3dadd( -9.55718, 20.76, -5.64752, 0.96 ) }
    dend_30 { pt3dadd( -10.7948, 21.3158, -5.97704, 1.47 ) }
    dend_30 { pt3dadd( -11.44, 21.5769, -6.20811, 1.47 ) }
    dend_30 { pt3dadd( -12.3053, 21.8918, -6.54034, 1.47 ) }
    dend_30 { pt3dadd( -14.2036, 22.5381, -7.33472, 0.88 ) }
    dend_30 { pt3dadd( -17.0179, 23.4179, -8.61039, 0.81 ) }
    dend_30 { pt3dadd( -17.6131, 23.6078, -8.87384, 0.59 ) }
    dend_30 { pt3dadd( -18.7241, 23.9802, -9.44725, 0.96 ) }
    dend_30 { pt3dadd( -19.5992, 24.3049, -9.95791, 0.96 ) }
    dend_30 { pt3dadd( -20.0986, 24.5207, -10.3603, 0.81 ) }
    dend_30 { pt3dadd( -20.5868, 24.7754, -10.816, 0.81 ) }
    dend_30 { pt3dadd( -21.0734, 25.0612, -11.2046, 0.96 ) }
    dend_30 { pt3dadd( -21.3872, 25.2548, -11.4728, 0.96 ) }
    dend_30 { pt3dadd( -22.148, 25.7451, -12.1621, 1.25 ) }
    dend_30 { pt3dadd( -23.6646, 26.7326, -13.7813, 1.84 ) }
    dend_30 { pt3dadd( -24.3448, 27.2183, -14.626, 1.84 ) }
    dend_30 { pt3dadd( -24.5055, 27.3451, -14.8565, 1.84 ) }
    dend_30 { pt3dadd( -24.7467, 27.5487, -15.2404, 1.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 41/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -3.81171, 17.4283, -3.97506, 2.06 ) }
    dend_1 { pt3dadd( -3.99182, 18.4549, -3.88075, 2.06 ) }
    dend_1 { pt3dadd( -4.29182, 20.1648, -3.72368, 1.55 ) }
    dend_1 { pt3dadd( -4.62727, 22.0769, -3.54804, 1.4 ) }
    dend_1 { pt3dadd( -4.87239, 23.474, -3.4197, 1.84 ) }
    dend_1 { pt3dadd( -5.15419, 25.0802, -3.27215, 1.84 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 47/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 3.42008, -41.5756, 0.232917, 0.22 ) }
    axon_1 { pt3dadd( 4.61198, -56.5282, 0.232917, 0.22 ) }
    axon_1 { pt3dadd( 5.80388, -71.4808, 0.232917, 0.22 ) }
    // Section: dend_132, id: dend_132, parent: dend_118 (entry count 50/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( -4.86263, -45.0091, 11.7806, 0.88 ) }
    dend_132 { pt3dadd( -5.59438, -44.8221, 12.6987, 0.88 ) }
    dend_132 { pt3dadd( -6.10609, -44.6913, 13.3406, 0.96 ) }
    dend_132 { pt3dadd( -6.49398, -44.5922, 13.8273, 0.96 ) }
    dend_132 { pt3dadd( -6.75716, -44.525, 14.1575, 0.96 ) }
    // Section: dend_119, id: dend_119, parent: dend_118 (entry count 55/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -4.86263, -45.0091, 11.7806, 0.88 ) }
    dend_119 { pt3dadd( -5.11782, -45.557, 11.9679, 0.88 ) }
    dend_119 { pt3dadd( -5.32152, -45.9182, 12.1191, 0.59 ) }
    dend_119 { pt3dadd( -5.58784, -46.3265, 12.2977, 0.59 ) }
    dend_119 { pt3dadd( -6.24078, -47.3546, 12.7218, 0.37 ) }
    dend_119 { pt3dadd( -6.6072, -47.9425, 12.956, 0.37 ) }
    dend_119 { pt3dadd( -7.02778, -48.7023, 13.2452, 0.37 ) }
    dend_119 { pt3dadd( -7.47343, -49.6641, 13.7351, 0.52 ) }
    dend_119 { pt3dadd( -7.69897, -50.319, 14.1365, 0.52 ) }
    dend_119 { pt3dadd( -7.80199, -50.9289, 14.6544, 0.66 ) }
    dend_119 { pt3dadd( -7.80481, -50.9793, 14.7033, 0.66 ) }
    dend_119 { pt3dadd( -7.69974, -51.8316, 15.6842, 0.59 ) }
    dend_119 { pt3dadd( -7.21496, -53.1802, 17.4958, 0.88 ) }
    dend_119 { pt3dadd( -7.05164, -53.4514, 17.9192, 1.03 ) }
    dend_119 { pt3dadd( -6.45005, -54.2541, 19.4047, 1.03 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 70/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 1.50648, -47.742, 10.1517, 0.81 ) }
    dend_109 { pt3dadd( 2.17672, -48.3583, 10.1055, 0.81 ) }
    dend_109 { pt3dadd( 2.96751, -49.0537, 10.0192, 0.81 ) }
    dend_109 { pt3dadd( 3.41633, -49.4291, 9.96173, 0.74 ) }
    dend_109 { pt3dadd( 4.13334, -50.0231, 9.86361, 0.59 ) }
    dend_109 { pt3dadd( 4.46899, -50.3011, 9.81767, 1.03 ) }
    dend_109 { pt3dadd( 5.10507, -50.8281, 9.73063, 1.11 ) }
    dend_109 { pt3dadd( 5.5932, -51.2163, 9.61159, 1.11 ) }
    dend_109 { pt3dadd( 6.03, -51.5607, 9.49659, 0.96 ) }
    dend_109 { pt3dadd( 6.13366, -51.6402, 9.46897, 0.96 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 80/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 1.50648, -47.742, 10.1517, 0.29 ) }
    dend_108 { pt3dadd( 0.97761, -47.5639, 10.3124, 0.29 ) }
    dend_108 { pt3dadd( 0.772161, -47.4944, 10.3601, 0.29 ) }
    dend_108 { pt3dadd( 0.220165, -47.3078, 10.4881, 0.22 ) }
    dend_108 { pt3dadd( -0.196848, -47.1669, 10.5849, 0.22 ) }
    dend_108 { pt3dadd( -0.498613, -47.0649, 10.6549, 0.22 ) }
    dend_108 { pt3dadd( -0.933366, -46.9179, 10.7558, 0.74 ) }
    dend_108 { pt3dadd( -1.02285, -46.8809, 10.7636, 0.74 ) }
    dend_108 { pt3dadd( -7.0361, -43.6302, 11.3273, 0.74 ) }
    dend_108 { pt3dadd( -12.3958, -39.7448, 13.0581, 0.74 ) }
    dend_108 { pt3dadd( -17.3222, -35.3868, 14.8908, 0.74 ) }
    dend_108 { pt3dadd( -22.478, -31.929, 17.7935, 0.74 ) }
    // Section: dend_95, id: dend_95, parent: dend_91 (entry count 92/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -2.23057, -23.5448, -17.1378, 0.59 ) }
    dend_95 { pt3dadd( -2.74711, -24.4712, -18.9146, 0.59 ) }
    dend_95 { pt3dadd( -2.76263, -24.5069, -18.9791, 0.59 ) }
    dend_95 { pt3dadd( -2.96568, -24.933, -19.7671, 0.59 ) }
    dend_95 { pt3dadd( -3.81906, -26.753, -23.0031, 0.96 ) }
    dend_95 { pt3dadd( -4.0218, -27.2376, -23.8829, 0.59 ) }
    dend_95 { pt3dadd( -4.12745, -27.5654, -24.4953, 0.44 ) }
    dend_95 { pt3dadd( -4.20579, -27.9099, -25.1791, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_95 { pt3dadd( -4.32202, -29.0109, -27.5742, 1.25 ) }
    dend_95 { pt3dadd( -4.29919, -29.2081, -28.0319, 1.25 ) }
    dend_95 { pt3dadd( -3.97146, -29.9887, -29.7047, 0.52 ) }
    dend_95 { pt3dadd( -3.79478, -30.4366, -30.6716, 0.52 ) }
    dend_95 { pt3dadd( -3.78185, -30.4646, -30.7322, 0.52 ) }
    dend_95 { pt3dadd( -3.39122, -31.0482, -31.9701, 0.52 ) }
    dend_95 { pt3dadd( -3.0151, -31.504, -32.831, 0.52 ) }
    dend_95 { pt3dadd( -2.63967, -31.9728, -33.647, 0.88 ) }
    dend_95 { pt3dadd( -2.2349, -32.5265, -34.4885, 1.55 ) }
    dend_95 { pt3dadd( -1.87248, -33.0788, -35.2595, 2.14 ) }
    dend_95 { pt3dadd( -1.55983, -33.5557, -35.8722, 1.69 ) }
    dend_95 { pt3dadd( -1.0811, -34.2881, -36.7281, 1.18 ) }
    dend_95 { pt3dadd( -0.75837, -34.7735, -37.3047, 1.03 ) }
    dend_95 { pt3dadd( -0.694278, -34.8578, -37.3994, 1.03 ) }
    dend_95 { pt3dadd( -0.478704, -35.1026, -37.6442, 0.74 ) }
    dend_95 { pt3dadd( -0.295412, -35.2979, -37.8452, 0.74 ) }
    dend_95 { pt3dadd( 0.0681273, -35.7252, -38.3577, 0.74 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 17/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( -2.23057, -23.5448, -17.1378, 0.29 ) }
    dend_92 { pt3dadd( -0.765363, -25.1105, -17.6929, 0.29 ) }
    dend_92 { pt3dadd( -0.474585, -25.4694, -17.6575, 0.29 ) }
    dend_92 { pt3dadd( -0.182044, -25.8776, -17.5545, 0.29 ) }
    dend_92 { pt3dadd( 0.133341, -26.3539, -17.3589, 0.29 ) }
    dend_92 { pt3dadd( 0.51181, -26.9574, -17.0597, 0.74 ) }
    dend_92 { pt3dadd( 0.835302, -27.4943, -16.7318, 0.88 ) }
    dend_92 { pt3dadd( 1.23556, -28.2344, -16.103, 0.66 ) }
    dend_92 { pt3dadd( 1.46233, -28.6363, -15.7486, 0.66 ) }
    dend_92 { pt3dadd( 1.82049, -29.2023, -15.169, 0.66 ) }
    dend_92 { pt3dadd( 2.01179, -29.4551, -14.8859, 0.66 ) }
    dend_92 { pt3dadd( 2.5068, -30.0228, -14.2155, 0.66 ) }
    dend_92 { pt3dadd( 2.8973, -30.4165, -13.7505, 0.52 ) }
    dend_92 { pt3dadd( 3.45647, -30.9594, -13.188, 0.29 ) }
    dend_92 { pt3dadd( 4.17771, -31.6535, -12.5359, 0.29 ) }
    dend_92 { pt3dadd( 4.58043, -32.0592, -12.2375, 0.37 ) }
    dend_92 { pt3dadd( 4.62148, -32.1021, -12.2119, 0.37 ) }
    dend_92 { pt3dadd( 5.13529, -32.6722, -11.9577, 0.37 ) }
    dend_92 { pt3dadd( 5.47569, -33.0985, -11.7862, 0.44 ) }
    dend_92 { pt3dadd( 6.2109, -34.1994, -11.3841, 0.44 ) }
    dend_92 { pt3dadd( 6.61619, -34.8515, -11.1863, 1.03 ) }
    dend_92 { pt3dadd( 6.76746, -35.0981, -11.0982, 1.4 ) }
    dend_92 { pt3dadd( 7.04602, -35.5523, -10.923, 1.62 ) }
    dend_92 { pt3dadd( 7.58012, -36.4438, -10.4605, 0.44 ) }
    dend_92 { pt3dadd( 7.86005, -36.9427, -10.1561, 0.59 ) }
    dend_92 { pt3dadd( 8.06447, -37.4099, -9.83812, 0.22 ) }
    dend_92 { pt3dadd( 8.32953, -38.1538, -9.29331, 0.07 ) }
    dend_92 { pt3dadd( 8.41818, -38.4453, -9.06828, 0.07 ) }
    dend_92 { pt3dadd( 8.71618, -39.6091, -8.14362, 0.96 ) }
    dend_92 { pt3dadd( 8.7406, -39.7725, -7.97169, 1.25 ) }
    dend_92 { pt3dadd( 8.78303, -40.5454, -7.05596, 0.22 ) }
    dend_92 { pt3dadd( 8.78124, -40.9123, -6.59818, 0.22 ) }
    dend_92 { pt3dadd( 8.7675, -41.2585, -6.18271, 0.74 ) }
    dend_92 { pt3dadd( 8.76244, -41.4716, -5.9495, 0.88 ) }
    dend_92 { pt3dadd( 8.74731, -44.0008, -3.47644, 0.29 ) }
    dend_92 { pt3dadd( 8.76375, -44.4373, -3.07583, 0.29 ) }
    dend_92 { pt3dadd( 8.89016, -45.8604, -1.85361, 1.0 ) }
    dend_92 { pt3dadd( 8.97971, -46.464, -1.36426, 1.5 ) }
    dend_92 { pt3dadd( 9.23556, -47.698, -0.475003, 0.29 ) }
    dend_92 { pt3dadd( 9.4043, -48.2047, -0.136114, 0.29 ) }
    dend_92 { pt3dadd( 9.71221, -48.8137, 0.17423, 0.29 ) }
    dend_92 { pt3dadd( 9.93444, -49.1689, 0.369381, 0.29 ) }
    dend_92 { pt3dadd( 10.5584, -50.0073, 0.840467, 0.52 ) }
    dend_92 { pt3dadd( 10.6526, -50.1202, 0.914461, 1.03 ) }
    dend_92 { pt3dadd( 11.6467, -51.2513, 1.67084, 1.18 ) }
    dend_92 { pt3dadd( 11.9725, -51.6462, 1.91639, 1.03 ) }
    dend_92 { pt3dadd( 12.3242, -52.1435, 2.16648, 0.96 ) }
    dend_92 { pt3dadd( 12.5604, -52.5365, 2.30324, 0.96 ) }
    dend_92 { pt3dadd( 12.6646, -52.7325, 2.36865, 0.88 ) }
    dend_92 { pt3dadd( 13.1768, -53.6922, 2.69109, 0.52 ) }
    dend_92 { pt3dadd( 13.2107, -53.7568, 2.71108, 0.52 ) }
    dend_92 { pt3dadd( 13.5606, -54.3699, 2.94128, 1.33 ) }
    dend_92 { pt3dadd( 13.8268, -54.7907, 3.163, 1.33 ) }
    dend_92 { pt3dadd( 14.8737, -56.3459, 4.1229, 0.29 ) }
    dend_92 { pt3dadd( 15.4695, -57.1885, 4.70895, 0.29 ) }
    dend_92 { pt3dadd( 15.5158, -57.2487, 4.75495, 0.29 ) }
    dend_92 { pt3dadd( 15.6485, -57.4073, 4.87833, 0.59 ) }
    dend_92 { pt3dadd( 16.6185, -58.4516, 5.70197, 0.22 ) }
    dend_92 { pt3dadd( 17.0261, -58.8457, 5.99178, 0.22 ) }
    dend_92 { pt3dadd( 17.1424, -58.9498, 6.04508, 0.22 ) }
    dend_92 { pt3dadd( 17.6759, -59.4044, 6.28327, 0.22 ) }
    dend_92 { pt3dadd( 17.7339, -59.4537, 6.30308, 0.22 ) }
    dend_92 { pt3dadd( 18.0442, -59.7066, 6.36067, 0.22 ) }
    dend_92 { pt3dadd( 18.1857, -59.7925, 6.3617, 0.22 ) }
    dend_92 { pt3dadd( 18.5806, -59.9899, 6.38601, 0.88 ) }
    dend_92 { pt3dadd( 18.6595, -60.0269, 6.39291, 0.88 ) }
    dend_92 { pt3dadd( 19.0711, -60.2064, 6.43829, 1.18 ) }
    dend_92 { pt3dadd( 19.223, -60.2703, 6.45695, 1.18 ) }
    dend_92 { pt3dadd( 20.6405, -60.8232, 6.6561, 0.22 ) }
    dend_92 { pt3dadd( 21.0723, -60.987, 6.72378, 0.22 ) }
    dend_92 { pt3dadd( 21.3437, -61.0811, 6.77177, 0.44 ) }
    dend_92 { pt3dadd( 24.6727, -69.0333, 13.158, 0.44 ) }
    dend_92 { pt3dadd( 28.9737, -77.3074, 18.4515, 0.44 ) }
    // Section: dend_84, id: dend_84, parent: dend_76 (entry count 90/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -0.688566, -20.2323, -5.18309, 0.22 ) }
    dend_84 { pt3dadd( -0.0498302, -20.2391, -5.97884, 0.22 ) }
    dend_84 { pt3dadd( 0.600483, -20.1965, -6.77907, 0.22 ) }
    dend_84 { pt3dadd( 0.964802, -20.2166, -7.30353, 0.22 ) }
    dend_84 { pt3dadd( 1.18181, -20.2713, -7.64059, 0.22 ) }
    dend_84 { pt3dadd( 2.27639, -20.707, -9.50039, 0.66 ) }
    dend_84 { pt3dadd( 2.45594, -20.7957, -9.90331, 0.66 ) }
    dend_84 { pt3dadd( 2.55359, -20.85, -10.2038, 0.66 ) }
    dend_84 { pt3dadd( 2.97428, -21.1791, -12.3242, 0.37 ) }
    dend_84 { pt3dadd( 3.10653, -21.3605, -13.2278, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_84 { pt3dadd( 3.15395, -21.453, -13.6211, 0.37 ) }
    dend_84 { pt3dadd( 3.4475, -22.2221, -16.2935, 0.81 ) }
    dend_84 { pt3dadd( 3.47664, -22.3055, -16.5521, 1.03 ) }
    dend_84 { pt3dadd( 3.69059, -22.9479, -18.4902, 0.52 ) }
    dend_84 { pt3dadd( 4.03232, -23.6368, -20.3304, 0.29 ) }
    dend_84 { pt3dadd( 4.03232, -23.6368, -20.3304, 0.66 ) }
    dend_84 { pt3dadd( 4.27732, -23.9087, -20.7766, 1.11 ) }
    dend_84 { pt3dadd( 4.68114, -24.3321, -21.1902, 1.11 ) }
    dend_84 { pt3dadd( 4.80248, -24.4501, -21.2763, 1.11 ) }
    dend_84 { pt3dadd( 6.68295, -26.1543, -22.2561, 0.29 ) }
    dend_84 { pt3dadd( 7.58547, -26.9514, -22.6782, 0.29 ) }
    dend_84 { pt3dadd( 8.03488, -27.3804, -22.9355, 0.96 ) }
    dend_84 { pt3dadd( 8.47063, -27.8414, -23.2374, 1.25 ) }
    dend_84 { pt3dadd( 8.94832, -28.4116, -23.6335, 1.55 ) }
    dend_84 { pt3dadd( 9.7465, -29.6246, -24.5819, 0.81 ) }
    dend_84 { pt3dadd( 9.89104, -30.0705, -24.9748, 0.74 ) }
    dend_84 { pt3dadd( 9.91267, -31.0921, -26.0118, 0.22 ) }
    dend_84 { pt3dadd( 9.84441, -31.5158, -26.486, 0.22 ) }
    dend_84 { pt3dadd( 9.78767, -31.7003, -26.6929, 0.22 ) }
    dend_84 { pt3dadd( 9.39233, -32.6944, -27.7232, 0.66 ) }
    dend_84 { pt3dadd( 9.16201, -33.385, -28.4059, 0.66 ) }
    dend_84 { pt3dadd( 9.00526, -34.2081, -29.1913, 0.66 ) }
    dend_84 { pt3dadd( 8.99956, -34.8742, -29.8158, 1.4 ) }
    dend_84 { pt3dadd( 9.04681, -35.5261, -30.4181, 1.69 ) }
    dend_84 { pt3dadd( 9.09023, -35.9559, -30.7929, 1.69 ) }
    dend_84 { pt3dadd( 9.3418, -37.674, -32.1972, 0.66 ) }
    dend_84 { pt3dadd( 9.46528, -38.2426, -32.664, 0.66 ) }
    dend_84 { pt3dadd( 9.69525, -39.1736, -33.4254, 0.59 ) }
    dend_84 { pt3dadd( 9.78991, -39.5839, -33.7542, 0.52 ) }
    dend_84 { pt3dadd( 9.90055, -40.0742, -34.1442, 0.52 ) }
    dend_84 { pt3dadd( 10.037, -40.7634, -34.6472, 0.66 ) }
    dend_84 { pt3dadd( 10.0991, -41.1637, -34.8804, 0.66 ) }
    dend_84 { pt3dadd( 10.1501, -41.5716, -35.1034, 0.66 ) }
    dend_84 { pt3dadd( 10.2306, -42.4035, -35.479, 0.52 ) }
    dend_84 { pt3dadd( 10.2528, -42.7296, -35.619, 0.29 ) }
    dend_84 { pt3dadd( 10.2488, -43.2196, -35.8155, 0.29 ) }
    dend_84 { pt3dadd( 10.0913, -44.1097, -36.3063, 0.96 ) }
    dend_84 { pt3dadd( 9.90634, -44.7291, -36.7041, 1.4 ) }
    dend_84 { pt3dadd( 9.74154, -45.1373, -36.9777, 1.92 ) }
    dend_84 { pt3dadd( 9.53851, -45.5672, -37.2943, 2.36 ) }
    dend_84 { pt3dadd( 9.34638, -45.9381, -37.5926, 2.36 ) }
    dend_84 { pt3dadd( 8.25042, -47.8749, -39.2684, 0.29 ) }
    dend_84 { pt3dadd( 7.95175, -48.3708, -39.719, 0.29 ) }
    dend_84 { pt3dadd( 7.59063, -48.9655, -40.2781, 0.29 ) }
    dend_84 { pt3dadd( 7.13534, -49.7482, -41.0498, 0.29 ) }
    dend_84 { pt3dadd( 6.89571, -50.1601, -41.4675, 0.59 ) }
    dend_84 { pt3dadd( 6.82736, -50.2735, -41.5813, 1.11 ) }
    dend_84 { pt3dadd( 6.79322, -50.3209, -41.6253, 1.11 ) }
    dend_84 { pt3dadd( 6.45345, -50.74, -42.0945, 0.88 ) }
    dend_84 { pt3dadd( 5.5664, -51.7896, -43.3021, 0.37 ) }
    dend_84 { pt3dadd( 5.3702, -52.0339, -43.5998, 0.37 ) }
    dend_84 { pt3dadd( 5.19888, -52.2324, -43.8718, 0.59 ) }
    dend_84 { pt3dadd( 4.86246, -52.6518, -44.4767, 0.59 ) }
    dend_84 { pt3dadd( 4.38529, -53.2921, -45.4055, 0.59 ) }
    dend_84 { pt3dadd( 4.1265, -53.7317, -46.0748, 0.29 ) }
    dend_84 { pt3dadd( 3.73195, -54.6166, -47.2867, 0.66 ) }
    dend_84 { pt3dadd( 3.56679, -55.1921, -47.98, 1.47 ) }
    dend_84 { pt3dadd( 3.40529, -56.0655, -48.8932, 2.28 ) }
    dend_84 { pt3dadd( 3.36723, -56.4099, -49.1991, 2.06 ) }
    dend_84 { pt3dadd( 3.25167, -57.9825, -50.3063, 0.59 ) }
    dend_84 { pt3dadd( 3.19107, -58.9473, -50.8596, 0.52 ) }
    dend_84 { pt3dadd( 3.14466, -59.7292, -51.171, 0.52 ) }
    dend_84 { pt3dadd( 3.10108, -60.4441, -51.3917, 0.52 ) }
    dend_84 { pt3dadd( 3.02936, -61.1094, -51.5211, 0.59 ) }
    dend_84 { pt3dadd( 2.908, -61.9677, -51.6114, 0.81 ) }
    dend_84 { pt3dadd( 2.78247, -62.6762, -51.5996, 0.37 ) }
    dend_84 { pt3dadd( 2.62968, -63.4805, -51.5765, 0.22 ) }
    dend_84 { pt3dadd( 2.53262, -63.9828, -51.5819, 0.22 ) }
    dend_84 { pt3dadd( 2.45463, -64.439, -51.5992, 0.81 ) }
    dend_84 { pt3dadd( 2.33253, -65.2475, -51.646, 1.03 ) }
    dend_84 { pt3dadd( 2.15817, -66.5647, -51.7864, 0.96 ) }
    dend_84 { pt3dadd( 2.12913, -66.8178, -51.8248, 0.96 ) }
    dend_84 { pt3dadd( 2.00933, -68.0848, -52.0991, 0.29 ) }
    dend_84 { pt3dadd( 1.94839, -68.9778, -52.3263, 0.29 ) }
    dend_84 { pt3dadd( 1.92563, -69.3063, -52.4215, 0.29 ) }
    dend_84 { pt3dadd( 1.86517, -70.1862, -52.7, 1.4 ) }
    dend_84 { pt3dadd( 1.8086, -71.0841, -52.9867, 1.69 ) }
    dend_84 { pt3dadd( 1.74538, -72.0044, -53.2547, 1.25 ) }
    dend_84 { pt3dadd( 1.6753, -72.6933, -53.4269, 0.96 ) }
    dend_84 { pt3dadd( 1.60583, -73.3416, -53.5896, 0.59 ) }
    dend_84 { pt3dadd( 1.55092, -73.8437, -53.7075, 0.22 ) }
    dend_84 { pt3dadd( 1.4988, -74.6169, -53.8799, 0.22 ) }
    dend_84 { pt3dadd( 1.48448, -75.2833, -54.0172, 0.22 ) }
    dend_84 { pt3dadd( 1.47746, -76.1591, -54.181, 0.22 ) }
    dend_84 { pt3dadd( 1.49544, -77.076, -54.3852, 0.74 ) }
    dend_84 { pt3dadd( 1.50706, -77.3434, -54.4485, 1.03 ) }
    dend_84 { pt3dadd( 1.58068, -78.7314, -54.7805, 0.22 ) }
    dend_84 { pt3dadd( 1.66319, -79.6359, -55.1171, 0.22 ) }
    dend_84 { pt3dadd( 1.75691, -80.4127, -55.4288, 0.22 ) }
    dend_84 { pt3dadd( 1.87994, -81.2455, -55.7895, 0.88 ) }
    dend_84 { pt3dadd( 1.97541, -81.9116, -56.0955, 1.33 ) }
    dend_84 { pt3dadd( 2.00512, -82.1583, -56.2249, 1.4 ) }
    dend_84 { pt3dadd( 2.15739, -84.1622, -57.6162, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 93/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -0.688566, -20.2323, -5.18309, 0.59 ) }
    dend_77 { pt3dadd( -1.78853, -20.6634, -5.16933, 0.59 ) }
    dend_77 { pt3dadd( -2.78078, -21.0745, -5.13975, 0.52 ) }
    dend_77 { pt3dadd( -3.33722, -21.3283, -5.13625, 0.59 ) }
    dend_77 { pt3dadd( -4.22183, -21.7981, -5.14281, 0.74 ) }
    dend_77 { pt3dadd( -4.94217, -22.2356, -5.14713, 0.37 ) }
    dend_77 { pt3dadd( -5.43032, -22.5768, -5.12734, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_77 { pt3dadd( -5.77027, -22.8861, -5.04203, 0.74 ) }
    dend_77 { pt3dadd( -6.14984, -23.3943, -4.85009, 1.25 ) }
    dend_77 { pt3dadd( -6.4648, -23.9675, -4.5876, 1.18 ) }
    dend_77 { pt3dadd( -6.62392, -24.3629, -4.38468, 0.88 ) }
    dend_77 { pt3dadd( -6.89524, -25.2456, -3.86909, 0.37 ) }
    dend_77 { pt3dadd( -7.22172, -26.4763, -3.08097, 0.96 ) }
    dend_77 { pt3dadd( -7.3554, -27.0514, -2.68477, 0.96 ) }
    dend_77 { pt3dadd( -7.44946, -27.4866, -2.35763, 0.81 ) }
    dend_77 { pt3dadd( -7.51576, -27.7862, -2.12791, 0.81 ) }
    dend_77 { pt3dadd( -7.64266, -28.3039, -1.76164, 0.44 ) }
    dend_77 { pt3dadd( -7.70929, -28.5392, -1.62757, 0.66 ) }
    dend_77 { pt3dadd( -7.80133, -28.7527, -1.54459, 0.59 ) }
    dend_77 { pt3dadd( -7.82966, -28.7991, -1.51882, 0.59 ) }
    dend_77 { pt3dadd( -8.03232, -29.0442, -1.38527, 0.59 ) }
    dend_77 { pt3dadd( -8.4278, -29.4449, -1.16207, 0.22 ) }
    dend_77 { pt3dadd( -8.60393, -29.6048, -1.07664, 0.22 ) }
    dend_77 { pt3dadd( -8.83054, -29.8001, -0.961458, 0.22 ) }
    dend_77 { pt3dadd( -9.55908, -30.3777, -0.582758, 1.11 ) }
    dend_77 { pt3dadd( -10.1078, -30.7978, -0.278564, 1.47 ) }
    dend_77 { pt3dadd( -10.1498, -30.8288, -0.251341, 1.47 ) }
    // Section: dend_72, id: dend_72, parent: dend_66 (entry count 20/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -6.90577, 44.7968, 21.1473, 1.03 ) }
    dend_72 { pt3dadd( -3.48326, 45.8713, 12.7063, 1.03 ) }
    dend_72 { pt3dadd( -3.23803, 45.9556, 12.1508, 0.66 ) }
    dend_72 { pt3dadd( -3.02638, 46.0318, 11.707, 0.66 ) }
    dend_72 { pt3dadd( -2.89009, 46.0819, 11.4425, 0.74 ) }
    dend_72 { pt3dadd( -2.67551, 46.1623, 11.0569, 0.74 ) }
    dend_72 { pt3dadd( -2.5061, 46.2268, 10.7739, 0.96 ) }
    dend_72 { pt3dadd( -1.87763, 46.5735, 10.864, 0.96 ) }
    dend_72 { pt3dadd( -1.65781, 46.7009, 10.9069, 0.66 ) }
    dend_72 { pt3dadd( -1.38, 46.8814, 10.9799, 0.88 ) }
    dend_72 { pt3dadd( -1.15169, 47.054, 11.0569, 1.18 ) }
    dend_72 { pt3dadd( -1.00239, 47.1925, 11.122, 1.33 ) }
    dend_72 { pt3dadd( -0.562829, 47.6918, 11.363, 1.33 ) }
    dend_72 { pt3dadd( -0.313649, 48.0825, 11.5417, 1.33 ) }
    dend_72 { pt3dadd( -0.174023, 48.3651, 11.6474, 1.03 ) }
    dend_72 { pt3dadd( -0.104904, 48.5453, 11.6998, 0.88 ) }
    dend_72 { pt3dadd( -0.00866655, 48.8452, 11.7671, 0.88 ) }
    dend_72 { pt3dadd( 0.010729, 48.9154, 11.7772, 0.88 ) }
    dend_72 { pt3dadd( 0.117692, 49.3573, 11.7968, 0.81 ) }
    dend_72 { pt3dadd( 0.164624, 49.5927, 11.805, 0.81 ) }
    dend_72 { pt3dadd( 0.230945, 50.0009, 11.8162, 0.74 ) }
    dend_72 { pt3dadd( 0.239211, 50.0628, 11.8175, 0.74 ) }
    dend_72 { pt3dadd( 0.268175, 50.3916, 11.8213, 0.66 ) }
    dend_72 { pt3dadd( 0.286414, 50.6534, 11.8233, 0.66 ) }
    dend_72 { pt3dadd( 0.30636, 50.9799, 11.8251, 0.66 ) }
    dend_72 { pt3dadd( 0.325658, 51.2317, 11.8505, 0.66 ) }
    dend_72 { pt3dadd( 0.400744, 51.7429, 11.9445, 0.66 ) }
    dend_72 { pt3dadd( 0.437037, 51.8814, 11.9791, 0.66 ) }
    dend_72 { pt3dadd( 0.616325, 52.3334, 12.1171, 0.66 ) }
    dend_72 { pt3dadd( 0.71833, 52.5348, 12.1874, 0.74 ) }
    dend_72 { pt3dadd( 1.15175, 53.2309, 12.4775, 0.74 ) }
    dend_72 { pt3dadd( 1.40893, 53.5884, 12.6424, 0.88 ) }
    dend_72 { pt3dadd( 1.76153, 54.0407, 12.861, 0.66 ) }
    dend_72 { pt3dadd( 2.07338, 54.455, 13.0898, 0.81 ) }
    dend_72 { pt3dadd( 2.10902, 54.4994, 13.1183, 0.81 ) }
    dend_72 { pt3dadd( 2.44057, 54.8928, 13.3903, 1.03 ) }
    dend_72 { pt3dadd( 2.65125, 55.1251, 13.5281, 1.25 ) }
    dend_72 { pt3dadd( 2.85204, 55.3428, 13.6491, 1.33 ) }
    dend_72 { pt3dadd( 3.39234, 55.9018, 13.9416, 1.4 ) }
    dend_72 { pt3dadd( 3.80242, 56.3201, 14.1226, 1.4 ) }
    dend_72 { pt3dadd( 4.01578, 56.5439, 14.2424, 1.4 ) }
    dend_72 { pt3dadd( 4.58584, 57.14, 14.5925, 0.52 ) }
    dend_72 { pt3dadd( 4.79503, 57.3556, 14.7336, 0.52 ) }
    dend_72 { pt3dadd( 4.83556, 57.3955, 14.7611, 0.52 ) }
    dend_72 { pt3dadd( 5.10772, 57.6673, 14.9289, 0.52 ) }
    dend_72 { pt3dadd( 5.76163, 58.4867, 15.528, 0.96 ) }
    dend_72 { pt3dadd( 5.88352, 58.657, 15.7033, 1.33 ) }
    dend_72 { pt3dadd( 5.88352, 58.657, 15.7033, 1.69 ) }
    dend_72 { pt3dadd( 5.93848, 58.7563, 15.8716, 1.69 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 69/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -6.90577, 44.7968, 21.1473, 0.88 ) }
    dend_67 { pt3dadd( -7.29367, 45.3197, 22.5715, 0.88 ) }
    dend_67 { pt3dadd( -7.32873, 45.3693, 22.6931, 1.03 ) }
    dend_67 { pt3dadd( -7.78684, 45.9985, 24.1231, 0.66 ) }
    dend_67 { pt3dadd( -7.89301, 46.1438, 24.4238, 0.44 ) }
    dend_67 { pt3dadd( -7.96724, 46.2405, 24.6088, 0.66 ) }
    dend_67 { pt3dadd( -8.04201, 46.3276, 24.7626, 0.81 ) }
    dend_67 { pt3dadd( -8.12596, 46.3932, 24.8055, 0.88 ) }
    dend_67 { pt3dadd( -8.32736, 46.5103, 24.7941, 0.88 ) }
    dend_67 { pt3dadd( -8.51797, 46.6066, 24.7315, 0.88 ) }
    dend_67 { pt3dadd( -9.08551, 46.8719, 24.5545, 0.44 ) }
    dend_67 { pt3dadd( -9.47694, 47.0491, 24.4393, 0.37 ) }
    dend_67 { pt3dadd( -9.98001, 47.325, 24.6107, 0.37 ) }
    dend_67 { pt3dadd( -10.086, 47.4094, 24.7539, 0.52 ) }
    dend_67 { pt3dadd( -10.2529, 47.6017, 25.1154, 0.59 ) }
    dend_67 { pt3dadd( -10.3422, 47.7379, 25.3831, 0.74 ) }
    dend_67 { pt3dadd( -10.3667, 47.7952, 25.4928, 0.88 ) }
    dend_67 { pt3dadd( -10.7166, 49.3124, 28.2061, 0.66 ) }
    dend_67 { pt3dadd( -10.7361, 49.4783, 28.4851, 0.66 ) }
    dend_67 { pt3dadd( -10.7498, 49.7209, 28.8746, 0.81 ) }
    dend_67 { pt3dadd( -10.7504, 49.7653, 28.9408, 0.81 ) }
    dend_67 { pt3dadd( -10.7617, 50.0617, 29.2995, 0.52 ) }
    dend_67 { pt3dadd( -10.8068, 50.423, 29.561, 0.44 ) }
    dend_67 { pt3dadd( -10.9108, 50.8437, 29.6018, 0.44 ) }
    dend_67 { pt3dadd( -11.1953, 51.7612, 29.6535, 0.88 ) }
    dend_67 { pt3dadd( -11.3149, 52.0837, 29.6696, 1.11 ) }
    dend_67 { pt3dadd( -11.7322, 53.1089, 29.7061, 0.44 ) }
    dend_67 { pt3dadd( -11.9225, 53.524, 29.7101, 0.44 ) }
    dend_67 { pt3dadd( -12.0625, 53.8218, 29.6994, 0.44 ) }
    dend_67 { pt3dadd( -12.1767, 54.0939, 29.6702, 0.44 ) }
    dend_67 { pt3dadd( -12.3294, 54.5117, 29.5996, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_67 { pt3dadd( -12.3741, 54.6708, 29.5982, 1.25 ) }
    dend_67 { pt3dadd( -12.3842, 54.7213, 29.6065, 1.25 ) }
    dend_67 { pt3dadd( -12.4347, 54.9457, 29.6688, 1.47 ) }
    dend_67 { pt3dadd( -12.5933, 55.5566, 29.8948, 0.59 ) }
    dend_67 { pt3dadd( -12.6897, 55.9031, 30.0469, 0.59 ) }
    dend_67 { pt3dadd( -12.7896, 56.2755, 30.2303, 0.59 ) }
    dend_67 { pt3dadd( -12.877, 56.5578, 30.4008, 0.74 ) }
    dend_67 { pt3dadd( -13.0961, 57.0655, 30.778, 0.74 ) }
    dend_67 { pt3dadd( -13.1175, 57.1006, 30.8138, 0.88 ) }
    dend_67 { pt3dadd( -13.1505, 57.133, 30.8676, 1.03 ) }
    dend_67 { pt3dadd( -13.2479, 57.1907, 31.0011, 1.03 ) }
    dend_67 { pt3dadd( -13.4197, 57.2479, 31.1779, 0.81 ) }
    dend_67 { pt3dadd( -13.7636, 57.2977, 31.4744, 0.44 ) }
    dend_67 { pt3dadd( -13.9155, 57.332, 31.5173, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 14/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -3.38651, 32.9015, 33.5625, 0.88 ) }
    dend_65 { pt3dadd( -3.69522, 33.1717, 33.3635, 0.88 ) }
    dend_65 { pt3dadd( -4.00244, 33.4691, 33.2508, 0.52 ) }
    dend_65 { pt3dadd( -4.34344, 33.8471, 33.215, 0.37 ) }
    dend_65 { pt3dadd( -4.54894, 34.0983, 33.231, 0.37 ) }
    dend_65 { pt3dadd( -4.68574, 34.285, 33.2609, 0.37 ) }
    dend_65 { pt3dadd( -4.77869, 34.4239, 33.2903, 0.44 ) }
    dend_65 { pt3dadd( -5.10857, 35.1155, 33.5585, 0.29 ) }
    dend_65 { pt3dadd( -5.15629, 35.2591, 33.6338, 0.29 ) }
    dend_65 { pt3dadd( -5.16363, 35.2927, 33.6581, 0.29 ) }
    dend_65 { pt3dadd( -5.19467, 35.4197, 33.7842, 0.29 ) }
    dend_65 { pt3dadd( -5.22225, 35.5049, 33.8873, 0.29 ) }
    dend_65 { pt3dadd( -5.30468, 35.7129, 34.1598, 0.29 ) }
    dend_65 { pt3dadd( -5.35573, 35.8164, 34.2932, 0.29 ) }
    dend_65 { pt3dadd( -5.57253, 36.1812, 34.78, 0.37 ) }
    dend_65 { pt3dadd( -5.82434, 36.5526, 35.2726, 0.22 ) }
    dend_65 { pt3dadd( -5.88568, 36.6308, 35.3803, 0.37 ) }
    dend_65 { pt3dadd( -5.94905, 36.7032, 35.4781, 0.37 ) }
    dend_65 { pt3dadd( -6.06969, 36.8176, 35.6272, 0.29 ) }
    dend_65 { pt3dadd( -6.22753, 36.9551, 35.7481, 0.29 ) }
    dend_65 { pt3dadd( -6.35388, 37.0598, 35.771, 0.37 ) }
    dend_65 { pt3dadd( -6.38582, 37.087, 35.7682, 0.59 ) }
    dend_65 { pt3dadd( -6.53463, 37.2053, 35.7502, 0.59 ) }
    dend_65 { pt3dadd( -6.95221, 37.5118, 35.7022, 0.81 ) }
    dend_65 { pt3dadd( -7.26493, 37.7266, 35.6699, 0.29 ) }
    dend_65 { pt3dadd( -7.41589, 37.8185, 35.6558, 0.44 ) }
    dend_65 { pt3dadd( -7.58634, 37.9111, 35.6406, 0.44 ) }
    dend_65 { pt3dadd( -10.641, 42.8423, 37.0185, 0.44 ) }
    dend_65 { pt3dadd( -14.0472, 47.3441, 38.9868, 0.44 ) }
    dend_65 { pt3dadd( -16.7125, 52.4573, 40.4632, 0.44 ) }
    dend_65 { pt3dadd( -19.7391, 57.5344, 41.2064, 0.44 ) }
    dend_65 { pt3dadd( -23.2207, 62.2947, 42.145, 0.44 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 46/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -3.38651, 32.9015, 33.5625, 0.52 ) }
    dend_62 { pt3dadd( -3.44224, 32.3374, 34.0331, 0.52 ) }
    dend_62 { pt3dadd( -3.50911, 31.9744, 34.3762, 0.52 ) }
    dend_62 { pt3dadd( -3.57191, 31.793, 34.5558, 0.52 ) }
    dend_62 { pt3dadd( -3.69047, 31.5506, 34.8041, 0.52 ) }
    dend_62 { pt3dadd( -4.2286, 30.7524, 35.6323, 0.74 ) }
    dend_62 { pt3dadd( -4.36786, 30.587, 35.8047, 0.66 ) }
    dend_62 { pt3dadd( -4.61889, 30.3998, 36.0476, 0.52 ) }
    dend_62 { pt3dadd( -5.05473, 30.1999, 36.3568, 0.52 ) }
    dend_62 { pt3dadd( -5.24003, 30.1514, 36.4326, 0.44 ) }
    dend_62 { pt3dadd( -5.6711, 30.0901, 36.4994, 0.37 ) }
    dend_62 { pt3dadd( -5.85134, 30.0737, 36.4896, 0.37 ) }
    dend_62 { pt3dadd( -5.91097, 30.0709, 36.484, 0.37 ) }
    dend_62 { pt3dadd( -6.2264, 30.0541, 36.4487, 0.37 ) }
    dend_62 { pt3dadd( -6.80858, 30.0426, 36.369, 0.29 ) }
    dend_62 { pt3dadd( -7.17989, 30.0378, 36.3137, 0.29 ) }
    dend_62 { pt3dadd( -7.62154, 30.0428, 36.2414, 0.29 ) }
    dend_62 { pt3dadd( -8.09696, 30.0542, 36.1621, 0.29 ) }
    dend_62 { pt3dadd( -14.8251, 25.8366, 38.9743, 0.29 ) }
    dend_62 { pt3dadd( -21.9719, 22.3511, 41.809, 0.29 ) }
    dend_62 { pt3dadd( -28.4621, 18.985, 46.0345, 0.29 ) }
    dend_62 { pt3dadd( -35.9238, 15.9946, 48.6442, 0.29 ) }
    dend_62 { pt3dadd( -43.0367, 12.9914, 52.0817, 0.29 ) }
    dend_62 { pt3dadd( -50.1727, 9.6203, 55.0843, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 70/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -53.4816, -39.7837, -20.3222, 0.44 ) }
    dend_58 { pt3dadd( -55.024, -40.4557, -21.9904, 0.44 ) }
    dend_58 { pt3dadd( -55.8568, -40.8849, -22.8033, 0.74 ) }
    dend_58 { pt3dadd( -55.994, -40.9588, -22.931, 0.74 ) }
    dend_58 { pt3dadd( -56.8224, -41.3607, -23.5682, 0.37 ) }
    dend_58 { pt3dadd( -57.1511, -41.5242, -23.7983, 1.4 ) }
    dend_58 { pt3dadd( -57.372, -41.6307, -23.9259, 1.4 ) }
    dend_58 { pt3dadd( -59.1409, -42.3898, -24.5145, 0.52 ) }
    dend_58 { pt3dadd( -59.1996, -42.4156, -24.5276, 0.52 ) }
    dend_58 { pt3dadd( -60.3412, -42.9429, -24.7293, 0.29 ) }
    dend_58 { pt3dadd( -61.12, -43.2837, -24.7923, 0.74 ) }
    dend_58 { pt3dadd( -62.2144, -43.6877, -24.8321, 0.22 ) }
    dend_58 { pt3dadd( -62.45, -43.7739, -24.8442, 0.81 ) }
    dend_58 { pt3dadd( -62.648, -43.8394, -24.8563, 0.81 ) }
    dend_58 { pt3dadd( -63.7804, -44.177, -24.9571, 0.22 ) }
    dend_58 { pt3dadd( -64.7786, -44.4188, -25.1138, 0.74 ) }
    dend_58 { pt3dadd( -65.203, -44.4851, -25.1847, 0.74 ) }
    dend_58 { pt3dadd( -66.5594, -44.7997, -25.634, 0.59 ) }
    dend_58 { pt3dadd( -67.0587, -44.9342, -25.8353, 0.59 ) }
    dend_58 { pt3dadd( -68.2814, -45.2884, -26.3933, 0.59 ) }
    dend_58 { pt3dadd( -69.3718, -45.7728, -26.9952, 0.29 ) }
    dend_58 { pt3dadd( -69.7016, -45.9552, -27.1975, 1.11 ) }
    dend_58 { pt3dadd( -71.3787, -46.9089, -28.2168, 0.29 ) }
    dend_58 { pt3dadd( -71.9804, -47.2506, -28.5796, 0.29 ) }
    dend_58 { pt3dadd( -72.2272, -47.418, -28.7517, 0.66 ) }
    dend_58 { pt3dadd( -73.8484, -48.7965, -30.0985, 0.44 ) }
    dend_58 { pt3dadd( -74.0272, -48.9794, -30.2609, 0.81 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 97/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -53.4816, -39.7837, -20.3222, 0.59 ) }
    dend_55 { pt3dadd( -54.6473, -40.7271, -20.1021, 0.59 ) }
    dend_55 { pt3dadd( -54.7069, -40.7733, -20.0938, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( -55.1617, -41.116, -20.0414, 0.52 ) }
    dend_55 { pt3dadd( -55.2621, -41.184, -20.0246, 0.74 ) }
    dend_55 { pt3dadd( -56.2829, -41.8471, -19.8235, 0.37 ) }
    dend_55 { pt3dadd( -57.7076, -42.7225, -19.5422, 0.59 ) }
    dend_55 { pt3dadd( -58.9196, -43.3794, -19.3369, 0.29 ) }
    dend_55 { pt3dadd( -59.3176, -43.5805, -19.2712, 0.88 ) }
    dend_55 { pt3dadd( -60.3672, -44.1423, -19.1816, 0.74 ) }
    dend_55 { pt3dadd( -60.5716, -44.2528, -19.1743, 0.74 ) }
    dend_55 { pt3dadd( -61.8698, -44.9272, -19.1759, 0.22 ) }
    dend_55 { pt3dadd( -62.1716, -45.0849, -19.1952, 0.88 ) }
    dend_55 { pt3dadd( -62.3321, -45.1736, -19.2243, 0.88 ) }
    dend_55 { pt3dadd( -64.5135, -46.5887, -19.9113, 1.47 ) }
    dend_55 { pt3dadd( -65.4456, -47.331, -20.3978, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: dend_30 (entry count 13/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -24.7467, 27.5487, -15.2404, 1.18 ) }
    dend_42 { pt3dadd( -24.84, 28.3673, -16.202, 1.18 ) }
    dend_42 { pt3dadd( -24.8661, 28.7005, -16.6842, 1.4 ) }
    dend_42 { pt3dadd( -24.878, 29.2883, -17.6269, 1.4 ) }
    dend_42 { pt3dadd( -24.8617, 29.6004, -18.127, 1.33 ) }
    dend_42 { pt3dadd( -24.7728, 30.9211, -20.2498, 0.29 ) }
    dend_42 { pt3dadd( -24.7706, 31.0434, -20.4806, 0.29 ) }
    dend_42 { pt3dadd( -24.7724, 31.7503, -21.9485, 0.29 ) }
    dend_42 { pt3dadd( -24.7876, 32.4182, -23.4164, 1.03 ) }
    dend_42 { pt3dadd( -24.7981, 32.6566, -23.9371, 1.92 ) }
    dend_42 { pt3dadd( -24.8061, 32.7679, -24.171, 1.92 ) }
    dend_42 { pt3dadd( -25.0913, 34.7581, -27.8568, 0.22 ) }
    dend_42 { pt3dadd( -25.1575, 35.0708, -28.3891, 0.22 ) }
    dend_42 { pt3dadd( -25.2107, 35.2407, -28.6429, 0.22 ) }
    dend_42 { pt3dadd( -25.3569, 35.5891, -29.1267, 1.11 ) }
    dend_42 { pt3dadd( -25.4837, 35.8334, -29.4457, 1.11 ) }
    dend_42 { pt3dadd( -26.0347, 36.7415, -30.4109, 0.29 ) }
    dend_42 { pt3dadd( -26.2148, 36.9424, -30.5258, 0.29 ) }
    dend_42 { pt3dadd( -26.4063, 37.1014, -30.6242, 0.29 ) }
    dend_42 { pt3dadd( -26.5611, 37.2002, -30.6863, 0.29 ) }
    dend_42 { pt3dadd( -27.1923, 37.5333, -31.032, 0.96 ) }
    dend_42 { pt3dadd( -27.8735, 37.8547, -31.4498, 1.47 ) }
    dend_42 { pt3dadd( -28.4719, 38.1159, -31.8399, 1.77 ) }
    dend_42 { pt3dadd( -28.8893, 38.3106, -32.141, 1.84 ) }
    dend_42 { pt3dadd( -29.2811, 38.5184, -32.4486, 1.55 ) }
    dend_42 { pt3dadd( -31.1379, 39.6379, -34.0062, 0.66 ) }
    dend_42 { pt3dadd( -31.264, 39.7257, -34.1197, 0.59 ) }
    dend_42 { pt3dadd( -31.8346, 40.181, -34.6798, 0.22 ) }
    dend_42 { pt3dadd( -32.0837, 40.4173, -34.9346, 0.22 ) }
    dend_42 { pt3dadd( -32.3752, 40.7335, -35.2037, 0.22 ) }
    dend_42 { pt3dadd( -32.626, 41.0471, -35.4063, 0.22 ) }
    dend_42 { pt3dadd( -32.8453, 41.3421, -35.5222, 0.22 ) }
    dend_42 { pt3dadd( -33.0825, 41.6683, -35.6587, 0.22 ) }
    dend_42 { pt3dadd( -33.5381, 42.3036, -35.9321, 1.03 ) }
    dend_42 { pt3dadd( -33.8914, 42.7539, -36.1555, 1.62 ) }
    dend_42 { pt3dadd( -34.5628, 43.5526, -36.6151, 1.84 ) }
    dend_42 { pt3dadd( -34.6097, 43.6083, -36.6515, 1.84 ) }
    dend_42 { pt3dadd( -34.8664, 43.9208, -36.8789, 1.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 51/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -24.7467, 27.5487, -15.2404, 1.4 ) }
    dend_31 { pt3dadd( -24.9005, 27.4823, -15.2152, 1.4 ) }
    dend_31 { pt3dadd( -25.9361, 27.0497, -15.03, 0.59 ) }
    dend_31 { pt3dadd( -26.3154, 26.9014, -14.9636, 0.88 ) }
    dend_31 { pt3dadd( -26.8292, 26.7455, -14.881, 1.11 ) }
    dend_31 { pt3dadd( -27.4062, 26.6147, -14.8007, 0.81 ) }
    dend_31 { pt3dadd( -27.8411, 26.5387, -14.7679, 0.59 ) }
    dend_31 { pt3dadd( -28.5058, 26.4847, -14.7737, 0.59 ) }
    dend_31 { pt3dadd( -28.7507, 26.4925, -14.8047, 0.59 ) }
    dend_31 { pt3dadd( -29.4327, 26.5951, -14.9092, 0.59 ) }
    dend_31 { pt3dadd( -29.8991, 26.7052, -14.9909, 0.66 ) }
    dend_31 { pt3dadd( -30.5122, 26.9103, -15.1269, 0.88 ) }
    dend_31 { pt3dadd( -30.7216, 26.9986, -15.1918, 1.11 ) }
    dend_31 { pt3dadd( -30.8889, 27.0845, -15.2692, 1.25 ) }
    dend_31 { pt3dadd( -31.2586, 27.2746, -15.4651, 1.25 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 66/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.15419, 25.0802, -3.27215, 2.21 ) }
    dend_13 { pt3dadd( -5.33009, 25.3287, -3.50172, 2.21 ) }
    dend_13 { pt3dadd( -6.2549, 26.5077, -4.59513, 1.03 ) }
    dend_13 { pt3dadd( -6.74276, 27.1504, -5.13958, 0.81 ) }
    dend_13 { pt3dadd( -7.40526, 28.0146, -5.83334, 0.81 ) }
    dend_13 { pt3dadd( -8.1041, 28.9139, -6.49911, 1.11 ) }
    dend_13 { pt3dadd( -8.40835, 29.2971, -6.76014, 1.11 ) }
    dend_13 { pt3dadd( -8.85835, 29.8665, -7.10594, 1.33 ) }
    dend_13 { pt3dadd( -9.37947, 30.5237, -7.45219, 1.55 ) }
    dend_13 { pt3dadd( -9.78928, 31.0239, -7.60976, 1.4 ) }
    dend_13 { pt3dadd( -10.4208, 31.781, -7.68003, 0.96 ) }
    dend_13 { pt3dadd( -10.8554, 32.3059, -7.65005, 0.96 ) }
    dend_13 { pt3dadd( -11.129, 32.6376, -7.62841, 1.03 ) }
    dend_13 { pt3dadd( -11.3748, 32.9521, -7.60551, 0.52 ) }
    dend_13 { pt3dadd( -12.132, 33.8396, -7.58348, 0.59 ) }
    dend_13 { pt3dadd( -12.4318, 34.2247, -7.59419, 0.44 ) }
    dend_13 { pt3dadd( -12.5902, 34.4349, -7.62366, 0.37 ) }
    dend_13 { pt3dadd( -13.1249, 35.1587, -7.87245, 0.37 ) }
    dend_13 { pt3dadd( -13.3611, 35.4709, -8.05368, 0.74 ) }
    dend_13 { pt3dadd( -13.7029, 35.9282, -8.39449, 1.11 ) }
    dend_13 { pt3dadd( -13.9101, 36.2094, -8.66361, 1.4 ) }
    dend_13 { pt3dadd( -14.1699, 36.5642, -9.01762, 1.4 ) }
    dend_13 { pt3dadd( -14.6502, 37.1917, -9.68201, 1.25 ) }
    dend_13 { pt3dadd( -15.199, 37.8795, -10.4164, 1.11 ) }
    dend_13 { pt3dadd( -15.5491, 38.2946, -10.8613, 0.96 ) }
    dend_13 { pt3dadd( -16.3704, 39.2454, -11.833, 0.44 ) }
    dend_13 { pt3dadd( -16.623, 39.53, -12.1062, 0.44 ) }
    dend_13 { pt3dadd( -17.2251, 40.2087, -12.7165, 0.88 ) }
    dend_13 { pt3dadd( -17.4432, 40.4724, -12.9195, 0.96 ) }
    dend_13 { pt3dadd( -17.8603, 41.008, -13.2565, 0.66 ) }
    dend_13 { pt3dadd( -18.2013, 41.473, -13.5009, 0.52 ) }
    dend_13 { pt3dadd( -18.7, 42.2115, -13.7733, 0.29 ) }
    dend_13 { pt3dadd( -19.318, 43.1641, -14.0639, 1.4 ) }
    dend_13 { pt3dadd( -19.6964, 43.81, -14.2328, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_13 { pt3dadd( -19.8938, 44.17, -14.3361, 1.84 ) }
    dend_13 { pt3dadd( -19.9702, 44.322, -14.3851, 1.84 ) }
    dend_13 { pt3dadd( -20.3049, 44.986, -14.5728, 0.44 ) }
    dend_13 { pt3dadd( -20.6589, 45.669, -14.6069, 0.44 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 4/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.15419, 25.0802, -3.27215, 2.06 ) }
    dend_2 { pt3dadd( -4.84074, 25.9399, -3.31954, 2.06 ) }
    dend_2 { pt3dadd( -3.80256, 28.4892, -3.55649, 1.33 ) }
    dend_2 { pt3dadd( -3.38322, 29.6491, -3.56189, 1.33 ) }
    dend_2 { pt3dadd( -2.74452, 31.4793, -3.47542, 1.1 ) }
    dend_2 { pt3dadd( -1.94419, 34.0058, -3.28141, 1.25 ) }
    dend_2 { pt3dadd( -1.65848, 35.1959, -3.14528, 1.2 ) }
    dend_2 { pt3dadd( -1.39464, 36.5, -2.97393, 1.35 ) }
    dend_2 { pt3dadd( -1.03368, 39.3017, -2.59572, 1.2 ) }
    dend_2 { pt3dadd( -0.946408, 40.6623, -2.33693, 1.4 ) }
    dend_2 { pt3dadd( -0.936362, 42.3201, -1.8923, 1.33 ) }
    dend_2 { pt3dadd( -1.1321, 44.9551, -0.992657, 0.74 ) }
    dend_2 { pt3dadd( -1.17096, 45.2468, -0.885411, 0.96 ) }
    dend_2 { pt3dadd( -1.32593, 46.0393, -0.618308, 1.25 ) }
    dend_2 { pt3dadd( -1.41912, 46.4499, -0.527052, 1.84 ) }
    // Section: dend_134, id: dend_134, parent: dend_132 (entry count 19/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( -6.75716, -44.525, 14.1575, 0.37 ) }
    dend_134 { pt3dadd( -6.13252, -44.1122, 13.9611, 0.37 ) }
    dend_134 { pt3dadd( -5.96462, -44.0012, 13.9083, 0.37 ) }
    dend_134 { pt3dadd( -5.45574, -43.6649, 13.7484, 0.37 ) }
    dend_134 { pt3dadd( -5.30727, -43.5668, 13.7017, 0.52 ) }
    dend_134 { pt3dadd( -5.21621, -43.5066, 13.6731, 0.52 ) }
    dend_134 { pt3dadd( -5.16493, -43.4727, 13.657, 0.52 ) }
    dend_134 { pt3dadd( 1.61529, -39.5257, 12.8271, 0.52 ) }
    dend_134 { pt3dadd( 8.68227, -36.1898, 11.6561, 0.52 ) }
    dend_134 { pt3dadd( 15.4279, -32.1036, 11.6738, 0.52 ) }
    dend_134 { pt3dadd( 22.7536, -29.2135, 12.4303, 0.52 ) }
    dend_134 { pt3dadd( 29.422, -25.5059, 14.4667, 0.52 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 31/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( -6.75716, -44.525, 14.1575, 0.44 ) }
    dend_133 { pt3dadd( -7.63405, -44.8892, 14.1528, 0.44 ) }
    dend_133 { pt3dadd( -8.24226, -45.1419, 14.1496, 0.44 ) }
    dend_133 { pt3dadd( -8.72279, -45.3415, 14.147, 0.44 ) }
    dend_133 { pt3dadd( -9.10435, -45.5001, 14.145, 0.44 ) }
    dend_133 { pt3dadd( -9.71455, -45.7536, 14.1417, 0.37 ) }
    dend_133 { pt3dadd( -10.1157, -45.9202, 14.1396, 0.37 ) }
    dend_133 { pt3dadd( -21.1147, -49.6628, 13.3186, 0.37 ) }
    dend_133 { pt3dadd( -32.2149, -53.1984, 13.2635, 0.37 ) }
    dend_133 { pt3dadd( -43.2288, -56.3921, 11.1839, 0.37 ) }
    dend_133 { pt3dadd( -53.8038, -59.1758, 7.13982, 0.37 ) }
    dend_133 { pt3dadd( -64.6667, -61.5287, 3.60714, 0.37 ) }
    dend_133 { pt3dadd( -75.5566, -64.9338, 1.24332, 0.37 ) }
    // Section: dend_123, id: dend_123, parent: dend_119 (entry count 44/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( -6.45005, -54.2541, 19.4047, 0.96 ) }
    dend_123 { pt3dadd( -6.4386, -55.0772, 19.3739, 0.96 ) }
    dend_123 { pt3dadd( -6.42971, -55.716, 19.3501, 0.96 ) }
    dend_123 { pt3dadd( -6.422, -56.271, 19.3293, 0.88 ) }
    dend_123 { pt3dadd( -6.41527, -56.7549, 19.3112, 0.88 ) }
    // Section: dend_120, id: dend_120, parent: dend_119 (entry count 49/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -6.45005, -54.2541, 19.4047, 0.44 ) }
    dend_120 { pt3dadd( -7.36746, -54.7455, 19.4118, 0.44 ) }
    dend_120 { pt3dadd( -7.69324, -54.9052, 19.3968, 0.44 ) }
    dend_120 { pt3dadd( -8.1028, -55.0958, 19.3671, 0.44 ) }
    dend_120 { pt3dadd( -8.82454, -55.3986, 19.2955, 0.44 ) }
    dend_120 { pt3dadd( -9.26766, -55.5665, 19.2427, 0.44 ) }
    dend_120 { pt3dadd( -9.44456, -55.629, 19.2191, 0.66 ) }
    dend_120 { pt3dadd( -9.89652, -55.7843, 19.1013, 0.81 ) }
    dend_120 { pt3dadd( -9.96519, -55.8059, 19.0833, 0.81 ) }
    dend_120 { pt3dadd( -10.3521, -55.9009, 18.9812, 0.74 ) }
    dend_120 { pt3dadd( -10.5633, -55.9159, 18.9243, 0.74 ) }
    dend_120 { pt3dadd( -10.7223, -55.9088, 18.8809, 0.74 ) }
    dend_120 { pt3dadd( -22.673, -59.0722, 19.2668, 0.74 ) }
    dend_120 { pt3dadd( -34.8848, -60.1591, 20.9504, 0.74 ) }
    dend_120 { pt3dadd( -46.585, -62.6423, 24.1112, 0.74 ) }
    // Section: dend_111, id: dend_111, parent: dend_109 (entry count 64/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( 6.13366, -51.6402, 9.46897, 0.66 ) }
    dend_111 { pt3dadd( 6.68366, -52.8267, 9.32525, 0.66 ) }
    dend_111 { pt3dadd( 7.1347, -53.7998, 9.20738, 0.66 ) }
    dend_111 { pt3dadd( 7.4941, -54.5751, 9.11346, 1.11 ) }
    dend_111 { pt3dadd( 7.83505, -55.3107, 9.02436, 1.11 ) }
    dend_111 { pt3dadd( 8.02326, -55.7167, 8.97518, 1.11 ) }
    dend_111 { pt3dadd( 8.05161, -55.7779, 8.96777, 1.11 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 71/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 6.13366, -51.6402, 9.46897, 0.29 ) }
    dend_110 { pt3dadd( 6.36405, -50.8951, 9.34626, 0.29 ) }
    dend_110 { pt3dadd( 6.37442, -50.8384, 9.33675, 0.29 ) }
    dend_110 { pt3dadd( 6.39298, -50.1595, 9.20651, 0.29 ) }
    dend_110 { pt3dadd( 6.38963, -50.0946, 9.19402, 0.29 ) }
    dend_110 { pt3dadd( 6.29606, -49.0468, 9.00732, 0.29 ) }
    dend_110 { pt3dadd( 6.22904, -48.4166, 8.90146, 0.52 ) }
    dend_110 { pt3dadd( 6.13909, -47.9029, 8.81748, 0.66 ) }
    dend_110 { pt3dadd( 5.95756, -47.026, 8.67927, 0.37 ) }
    dend_110 { pt3dadd( 5.85377, -46.6264, 8.61631, 0.37 ) }
    dend_110 { pt3dadd( 5.6447, -45.8995, 8.50914, 0.44 ) }
    dend_110 { pt3dadd( 5.6283, -45.8544, 8.50387, 0.44 ) }
    dend_110 { pt3dadd( 5.59805, -45.7662, 8.49342, 0.44 ) }
    dend_110 { pt3dadd( 5.58607, -45.7109, 8.48941, 0.44 ) }
    dend_110 { pt3dadd( 3.42143, -37.9865, 8.03141, 0.44 ) }
    dend_110 { pt3dadd( 0.470743, -30.4999, 7.94841, 0.44 ) }
    // Section: dend_99, id: dend_99, parent: dend_95 (entry count 87/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 0.0681273, -35.7252, -38.3577, 0.44 ) }
    dend_99 { pt3dadd( 1.89605, -36.0534, -38.5552, 0.44 ) }
    dend_99 { pt3dadd( 3.23141, -36.3071, -38.7195, 0.44 ) }
    dend_99 { pt3dadd( 4.93612, -36.6391, -38.947, 0.29 ) }
    dend_99 { pt3dadd( 6.15287, -36.8835, -39.1232, 0.29 ) }
    dend_99 { pt3dadd( 7.00717, -37.0859, -39.3, 0.29 ) }
    dend_99 { pt3dadd( 7.05997, -37.1005, -39.3137, 0.29 ) }
    dend_99 { pt3dadd( 7.22825, -37.1688, -39.3881, 0.59 ) }
    dend_99 { pt3dadd( 7.28856, -37.2003, -39.425, 0.59 ) }
    dend_99 { pt3dadd( 7.42458, -37.29, -39.5464, 1.03 ) }
    dend_99 { pt3dadd( 8.42881, -37.9895, -40.5221, 0.22 ) }
    dend_99 { pt3dadd( 8.78063, -38.2295, -40.8646, 0.22 ) }
    dend_99 { pt3dadd( 8.82591, -38.2571, -40.9046, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_99 { pt3dadd( 9.27114, -38.4914, -41.2637, 0.96 ) }
    dend_99 { pt3dadd( 9.32206, -38.5141, -41.3, 0.96 ) }
    dend_99 { pt3dadd( 9.89264, -38.6904, -41.6405, 1.62 ) }
    dend_99 { pt3dadd( 9.96477, -38.7019, -41.6758, 1.62 ) }
    dend_99 { pt3dadd( 10.6766, -38.7868, -42.0254, 1.62 ) }
    dend_99 { pt3dadd( 11.0477, -38.8251, -42.2079, 1.18 ) }
    dend_99 { pt3dadd( 11.4876, -38.8765, -42.457, 0.66 ) }
    dend_99 { pt3dadd( 12.2632, -39.0113, -42.9447, 0.22 ) }
    dend_99 { pt3dadd( 12.7025, -39.1265, -43.2497, 0.22 ) }
    dend_99 { pt3dadd( 13.242, -39.3429, -43.6797, 0.22 ) }
    dend_99 { pt3dadd( 13.4209, -39.4521, -43.8452, 0.22 ) }
    dend_99 { pt3dadd( 13.958, -39.9336, -44.4438, 0.22 ) }
    dend_99 { pt3dadd( 14.2455, -40.3036, -44.8694, 0.96 ) }
    dend_99 { pt3dadd( 14.453, -40.6445, -45.2294, 0.96 ) }
    dend_99 { pt3dadd( 14.7114, -41.1094, -45.7053, 0.37 ) }
    dend_99 { pt3dadd( 14.8947, -41.4205, -46.0345, 0.37 ) }
    dend_99 { pt3dadd( 15.211, -41.8478, -46.501, 0.96 ) }
    dend_99 { pt3dadd( 15.7524, -42.4447, -47.1381, 1.62 ) }
    dend_99 { pt3dadd( 16.1335, -42.8316, -47.5502, 1.92 ) }
    dend_99 { pt3dadd( 16.1701, -42.8695, -47.59, 1.92 ) }
    dend_99 { pt3dadd( 16.6969, -43.4369, -48.1418, 0.66 ) }
    dend_99 { pt3dadd( 17.3052, -44.1286, -48.7484, 0.29 ) }
    dend_99 { pt3dadd( 17.8745, -44.7948, -49.2679, 0.29 ) }
    dend_99 { pt3dadd( 18.1569, -45.1407, -49.5014, 0.29 ) }
    dend_99 { pt3dadd( 18.6753, -45.7931, -49.9145, 0.74 ) }
    dend_99 { pt3dadd( 18.9526, -46.1479, -50.1201, 1.18 ) }
    dend_99 { pt3dadd( 19.3807, -46.7079, -50.4149, 1.62 ) }
    dend_99 { pt3dadd( 19.4194, -46.7572, -50.4405, 1.62 ) }
    dend_99 { pt3dadd( 20.1545, -47.5793, -50.8808, 0.29 ) }
    dend_99 { pt3dadd( 20.7853, -48.2471, -51.3324, 0.29 ) }
    dend_99 { pt3dadd( 21.2884, -48.7517, -51.7231, 0.29 ) }
    dend_99 { pt3dadd( 21.3271, -48.791, -51.7582, 0.29 ) }
    dend_99 { pt3dadd( 21.5765, -49.0475, -52.0124, 0.66 ) }
    dend_99 { pt3dadd( 21.9476, -49.4455, -52.4403, 0.96 ) }
    dend_99 { pt3dadd( 22.847, -50.4608, -53.5931, 1.33 ) }
    dend_99 { pt3dadd( 22.9536, -50.592, -53.7361, 1.33 ) }
    dend_99 { pt3dadd( 23.3741, -51.1075, -54.2778, 1.69 ) }
    dend_99 { pt3dadd( 23.5952, -51.3716, -54.536, 1.33 ) }
    dend_99 { pt3dadd( 24.018, -51.8508, -54.9707, 0.81 ) }
    dend_99 { pt3dadd( 24.5771, -52.469, -55.4725, 0.22 ) }
    dend_99 { pt3dadd( 24.8449, -52.7373, -55.6433, 0.22 ) }
    dend_99 { pt3dadd( 25.1425, -53.0273, -55.8343, 0.74 ) }
    dend_99 { pt3dadd( 25.496, -53.3579, -56.0616, 1.25 ) }
    dend_99 { pt3dadd( 25.8098, -53.637, -56.2506, 1.25 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 44/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 0.0681273, -35.7252, -38.3577, 0.37 ) }
    dend_96 { pt3dadd( -0.0196081, -36.7258, -38.465, 0.37 ) }
    dend_96 { pt3dadd( -0.0702467, -37.2748, -38.5288, 0.37 ) }
    dend_96 { pt3dadd( -0.172918, -37.9039, -38.6762, 0.88 ) }
    dend_96 { pt3dadd( -0.24055, -38.2273, -38.7621, 0.96 ) }
    dend_96 { pt3dadd( -0.418348, -39.2305, -38.9068, 0.52 ) }
    dend_96 { pt3dadd( -0.491287, -39.5847, -38.9507, 0.52 ) }
    dend_96 { pt3dadd( -0.50647, -39.648, -38.9546, 0.52 ) }
    dend_96 { pt3dadd( -0.76077, -40.6276, -38.9764, 0.96 ) }
    dend_96 { pt3dadd( -0.907366, -41.0661, -39.014, 1.18 ) }
    dend_96 { pt3dadd( -1.39358, -42.3523, -39.1145, 0.44 ) }
    dend_96 { pt3dadd( -1.9302, -43.5835, -39.2203, 0.44 ) }
    dend_96 { pt3dadd( -2.30441, -44.3518, -39.2939, 0.44 ) }
    dend_96 { pt3dadd( -2.84068, -45.3715, -39.3838, 0.44 ) }
    dend_96 { pt3dadd( -3.7124, -46.8662, -39.4582, 1.25 ) }
    dend_96 { pt3dadd( -4.03968, -47.3602, -39.4915, 1.18 ) }
    dend_96 { pt3dadd( -4.63573, -48.1501, -39.559, 0.59 ) }
    dend_96 { pt3dadd( -4.96856, -48.5674, -39.563, 0.52 ) }
    dend_96 { pt3dadd( -5.29226, -48.9515, -39.5636, 0.52 ) }
    dend_96 { pt3dadd( -5.86712, -49.6618, -39.5126, 0.52 ) }
    dend_96 { pt3dadd( -6.38298, -50.4565, -39.3911, 1.33 ) }
    dend_96 { pt3dadd( -6.51866, -50.71, -39.3691, 1.84 ) }
    dend_96 { pt3dadd( -6.69829, -51.1188, -39.3397, 1.25 ) }
    dend_96 { pt3dadd( -7.06923, -52.0769, -39.3183, 0.44 ) }
    dend_96 { pt3dadd( -7.43321, -53.1103, -39.3103, 0.22 ) }
    dend_96 { pt3dadd( -7.63848, -53.787, -39.2751, 0.22 ) }
    dend_96 { pt3dadd( -7.89309, -54.7136, -39.1589, 0.22 ) }
    dend_96 { pt3dadd( -8.07874, -55.3494, -39.0673, 0.22 ) }
    dend_96 { pt3dadd( -8.09141, -55.3956, -39.0587, 0.22 ) }
    dend_96 { pt3dadd( -8.28219, -56.1511, -38.878, 0.22 ) }
    dend_96 { pt3dadd( -8.51657, -57.046, -38.6574, 1.47 ) }
    dend_96 { pt3dadd( -8.53087, -57.1004, -38.6461, 1.47 ) }
    dend_96 { pt3dadd( -8.78526, -58.3264, -38.45, 1.47 ) }
    dend_96 { pt3dadd( -9.10635, -59.8702, -38.3426, 0.44 ) }
    dend_96 { pt3dadd( -9.21949, -60.2874, -38.3703, 0.81 ) }
    dend_96 { pt3dadd( -9.32428, -60.6367, -38.4289, 1.11 ) }
    dend_96 { pt3dadd( -9.67176, -61.6955, -38.6717, 0.29 ) }
    dend_96 { pt3dadd( -10.0662, -62.8448, -38.9513, 0.29 ) }
    dend_96 { pt3dadd( -10.3646, -63.7174, -39.1829, 0.88 ) }
    dend_96 { pt3dadd( -11.0775, -65.6513, -39.741, 0.29 ) }
    dend_96 { pt3dadd( -11.2083, -65.9854, -39.8322, 0.29 ) }
    dend_96 { pt3dadd( -11.3642, -66.3688, -39.9328, 0.74 ) }
    dend_96 { pt3dadd( -11.525, -66.7537, -40.0205, 1.25 ) }
    dend_96 { pt3dadd( -12.1157, -68.2118, -40.3024, 0.29 ) }
    dend_96 { pt3dadd( -12.6572, -69.6872, -40.493, 0.29 ) }
    dend_96 { pt3dadd( -12.9955, -70.6462, -40.567, 0.88 ) }
    dend_96 { pt3dadd( -13.0325, -70.7447, -40.5751, 0.88 ) }
    dend_96 { pt3dadd( -13.2647, -71.2911, -40.6427, 1.33 ) }
    dend_96 { pt3dadd( -13.6097, -71.9972, -40.7387, 0.88 ) }
    dend_96 { pt3dadd( -14.401, -73.3872, -40.9047, 0.22 ) }
    dend_96 { pt3dadd( -14.4304, -73.4366, -40.9095, 0.88 ) }
    dend_96 { pt3dadd( -14.465, -73.494, -40.9146, 0.88 ) }
    dend_96 { pt3dadd( -15.2055, -74.6955, -40.997, 0.29 ) }
    dend_96 { pt3dadd( -15.6027, -75.3191, -41.0455, 0.29 ) }
    dend_96 { pt3dadd( -15.8808, -75.744, -41.0653, 0.96 ) }
    dend_96 { pt3dadd( -16.1652, -76.205, -41.0796, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_96 { pt3dadd( -16.6319, -77.0725, -41.0955, 0.44 ) }
    dend_96 { pt3dadd( -16.8823, -77.616, -41.0996, 0.44 ) }
    dend_96 { pt3dadd( -17.1326, -78.3512, -41.1009, 1.03 ) }
    dend_96 { pt3dadd( -17.2705, -78.7514, -41.144, 1.4 ) }
    dend_96 { pt3dadd( -17.5933, -79.6742, -41.2829, 0.44 ) }
    dend_96 { pt3dadd( -17.8848, -80.5475, -41.4278, 0.44 ) }
    dend_96 { pt3dadd( -18.2173, -81.5671, -41.6223, 0.29 ) }
    dend_96 { pt3dadd( -18.4969, -82.4602, -41.8178, 0.29 ) }
    dend_96 { pt3dadd( -19.101, -84.3967, -42.2568, 0.29 ) }
    dend_96 { pt3dadd( -19.3019, -85.0225, -42.4127, 0.29 ) }
    dend_96 { pt3dadd( -19.5503, -85.7633, -42.6126, 0.29 ) }
    dend_96 { pt3dadd( -19.8025, -86.4267, -42.8247, 1.03 ) }
    dend_96 { pt3dadd( -20.0076, -86.9352, -43.006, 1.03 ) }
    // Section: dend_94, id: dend_94, parent: dend_92 (entry count 13/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 28.9737, -77.3074, 18.4515, 1.33 ) }
    dend_94 { pt3dadd( 32.7019, -86.2627, 24.322, 1.33 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 15/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 28.9737, -77.3074, 18.4515, 0.44 ) }
    dend_93 { pt3dadd( 32.4208, -83.8355, 23.0157, 1.33 ) }
    // Section: dend_88, id: dend_88, parent: dend_84 (entry count 17/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 2.15739, -84.1622, -57.6162, 0.22 ) }
    dend_88 { pt3dadd( 2.03335, -84.3641, -57.8663, 0.22 ) }
    dend_88 { pt3dadd( 1.89321, -84.621, -58.1169, 0.22 ) }
    dend_88 { pt3dadd( 1.79638, -84.9012, -58.4941, 0.22 ) }
    dend_88 { pt3dadd( 1.6191, -85.5628, -59.3828, 0.96 ) }
    dend_88 { pt3dadd( 1.5809, -85.729, -59.5947, 0.96 ) }
    dend_88 { pt3dadd( 1.48318, -86.1546, -60.0829, 0.22 ) }
    dend_88 { pt3dadd( 1.3939, -86.6313, -60.5857, 0.22 ) }
    dend_88 { pt3dadd( 1.19683, -88.13, -62.1001, 0.59 ) }
    dend_88 { pt3dadd( 1.14916, -88.6543, -62.5746, 0.22 ) }
    dend_88 { pt3dadd( 1.12422, -88.9736, -62.813, 0.22 ) }
    dend_88 { pt3dadd( 1.09297, -89.5715, -63.2117, 0.88 ) }
    dend_88 { pt3dadd( 1.08074, -89.7945, -63.3391, 1.03 ) }
    dend_88 { pt3dadd( 0.986826, -90.9803, -63.859, 0.22 ) }
    dend_88 { pt3dadd( 0.90115, -91.6528, -64.0237, 0.22 ) }
    dend_88 { pt3dadd( 0.827064, -92.2431, -64.1806, 0.22 ) }
    dend_88 { pt3dadd( 0.785254, -92.4886, -64.2527, 0.22 ) }
    dend_88 { pt3dadd( 0.73177, -92.7787, -64.3749, 0.66 ) }
    dend_88 { pt3dadd( 0.647775, -93.1408, -64.5474, 0.44 ) }
    dend_88 { pt3dadd( 0.61564, -93.2666, -64.625, 0.37 ) }
    dend_88 { pt3dadd( 0.510284, -93.7175, -64.9821, 0.22 ) }
    dend_88 { pt3dadd( 0.406805, -94.2548, -65.5382, 0.22 ) }
    dend_88 { pt3dadd( 0.277172, -95.0022, -66.3877, 0.59 ) }
    dend_88 { pt3dadd( 0.244081, -95.2663, -66.7082, 0.74 ) }
    dend_88 { pt3dadd( 0.182946, -95.9806, -67.6432, 0.74 ) }
    dend_88 { pt3dadd( 0.172052, -96.1705, -67.9028, 0.96 ) }
    dend_88 { pt3dadd( 0.100491, -97.4037, -69.6566, 0.15 ) }
    dend_88 { pt3dadd( 0.0956057, -97.4759, -69.7649, 0.37 ) }
    dend_88 { pt3dadd( 0.00941751, -97.9733, -70.5187, 0.15 ) }
    dend_88 { pt3dadd( -0.0680143, -98.2666, -71.0012, 0.66 ) }
    dend_88 { pt3dadd( -0.0817335, -98.2972, -71.055, 0.66 ) }
    dend_88 { pt3dadd( -0.226379, -98.5075, -71.4503, 0.66 ) }
    dend_88 { pt3dadd( -0.664266, -98.8599, -72.1794, 0.22 ) }
    dend_88 { pt3dadd( -0.920576, -99.0258, -72.5398, 0.22 ) }
    dend_88 { pt3dadd( -0.953869, -99.0444, -72.5819, 0.52 ) }
    dend_88 { pt3dadd( -1.11936, -99.1418, -72.7759, 0.37 ) }
    dend_88 { pt3dadd( -1.39074, -99.3119, -73.0843, 0.22 ) }
    dend_88 { pt3dadd( -1.94267, -99.704, -73.7985, 0.88 ) }
    dend_88 { pt3dadd( -2.05453, -99.7889, -73.9475, 0.88 ) }
    dend_88 { pt3dadd( -2.35697, -100.045, -74.4033, 0.74 ) }
    dend_88 { pt3dadd( -2.71698, -100.356, -74.9613, 0.22 ) }
    dend_88 { pt3dadd( -2.95828, -100.576, -75.3399, 0.22 ) }
    dend_88 { pt3dadd( -3.41561, -100.991, -76.0345, 0.81 ) }
    dend_88 { pt3dadd( -3.53531, -101.103, -76.2106, 0.81 ) }
    dend_88 { pt3dadd( -3.87449, -101.436, -76.7324, 0.15 ) }
    dend_88 { pt3dadd( -4.00183, -101.576, -76.9285, 0.15 ) }
    dend_88 { pt3dadd( -4.13019, -101.758, -77.1632, 0.44 ) }
    dend_88 { pt3dadd( -4.20346, -101.886, -77.3039, 0.74 ) }
    dend_88 { pt3dadd( -4.51616, -102.472, -77.8097, 0.22 ) }
    dend_88 { pt3dadd( -4.52584, -102.51, -77.8458, 0.22 ) }
    dend_88 { pt3dadd( -4.53949, -102.956, -78.2537, 0.15 ) }
    dend_88 { pt3dadd( -4.51912, -103.225, -78.4999, 0.66 ) }
    dend_88 { pt3dadd( -4.50893, -103.293, -78.5609, 1.03 ) }
    dend_88 { pt3dadd( -4.48006, -103.459, -78.7015, 1.03 ) }
    dend_88 { pt3dadd( -4.29068, -104.513, -79.6419, 0.29 ) }
    dend_88 { pt3dadd( -4.24744, -104.863, -79.9716, 0.22 ) }
    dend_88 { pt3dadd( -4.23058, -105.035, -80.1312, 0.22 ) }
    dend_88 { pt3dadd( -4.19284, -105.529, -80.5468, 0.81 ) }
    dend_88 { pt3dadd( -4.17984, -105.767, -80.7214, 0.81 ) }
    dend_88 { pt3dadd( -4.13986, -106.626, -81.2796, 0.22 ) }
    dend_88 { pt3dadd( -4.15463, -107.067, -81.519, 0.22 ) }
    dend_88 { pt3dadd( -4.15803, -107.517, -81.8233, 0.29 ) }
    dend_88 { pt3dadd( -4.16851, -107.788, -82.0253, 0.29 ) }
    dend_88 { pt3dadd( -4.19271, -108.104, -82.2672, 0.29 ) }
    dend_88 { pt3dadd( -4.23138, -108.628, -82.7102, 0.96 ) }
    dend_88 { pt3dadd( -4.25401, -108.913, -82.9591, 1.25 ) }
    dend_88 { pt3dadd( -4.32594, -109.933, -83.9025, 0.22 ) }
    dend_88 { pt3dadd( -4.36525, -110.301, -84.276, 0.22 ) }
    dend_88 { pt3dadd( -4.40201, -110.572, -84.5689, 0.22 ) }
    dend_88 { pt3dadd( -4.52331, -111.351, -85.4447, 0.88 ) }
    dend_88 { pt3dadd( -4.53732, -111.442, -85.5432, 1.25 ) }
    dend_88 { pt3dadd( -4.56134, -111.756, -85.8663, 1.25 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 89/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 2.15739, -84.1622, -57.6162, 0.29 ) }
    dend_85 { pt3dadd( 2.67186, -86.3129, -55.4222, 0.29 ) }
    dend_85 { pt3dadd( 2.81737, -86.8608, -54.9276, 0.29 ) }
    dend_85 { pt3dadd( 2.99171, -87.527, -54.4682, 0.29 ) }
    dend_85 { pt3dadd( 3.15762, -88.1918, -54.1948, 0.96 ) }
    dend_85 { pt3dadd( 3.35176, -89.351, -53.9608, 1.33 ) }
    dend_85 { pt3dadd( 3.42289, -90.4533, -53.9925, 0.29 ) }
    dend_85 { pt3dadd( 3.41463, -91.0105, -54.1932, 0.29 ) }
    dend_85 { pt3dadd( 3.24997, -93.3982, -55.2762, 0.66 ) }
    dend_85 { pt3dadd( 3.19446, -94.1366, -55.6479, 1.03 ) }
    dend_85 { pt3dadd( 3.13701, -95.1973, -56.2295, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_85 { pt3dadd( 3.11039, -96.5497, -56.9912, 0.29 ) }
    dend_85 { pt3dadd( 3.11339, -97.1811, -57.2946, 0.29 ) }
    dend_85 { pt3dadd( 3.11619, -97.2701, -57.322, 0.29 ) }
    dend_85 { pt3dadd( 3.23474, -98.4363, -57.398, 0.29 ) }
    dend_85 { pt3dadd( 3.2993, -98.8434, -57.4257, 0.81 ) }
    dend_85 { pt3dadd( 3.44454, -99.4443, -57.458, 0.81 ) }
    dend_85 { pt3dadd( 3.59183, -100.094, -57.4758, 0.22 ) }
    dend_85 { pt3dadd( 3.6887, -100.717, -57.6125, 0.22 ) }
    dend_85 { pt3dadd( 3.74504, -101.298, -57.8076, 0.22 ) }
    dend_85 { pt3dadd( 3.75848, -102.273, -58.2038, 0.81 ) }
    dend_85 { pt3dadd( 3.76017, -102.885, -58.4648, 1.25 ) }
    dend_85 { pt3dadd( 3.7732, -103.736, -58.8323, 1.62 ) }
    dend_85 { pt3dadd( 3.88352, -105.735, -59.7322, 0.29 ) }
    dend_85 { pt3dadd( 3.94868, -106.401, -60.033, 0.29 ) }
    dend_85 { pt3dadd( 4.09529, -107.406, -60.4544, 0.29 ) }
    dend_85 { pt3dadd( 4.22519, -108.098, -60.6932, 0.29 ) }
    dend_85 { pt3dadd( 4.36551, -108.772, -60.8986, 0.29 ) }
    dend_85 { pt3dadd( 4.62385, -109.747, -61.1923, 0.29 ) }
    dend_85 { pt3dadd( 4.79966, -110.297, -61.3551, 0.74 ) }
    dend_85 { pt3dadd( 5.09944, -111.07, -61.6332, 1.33 ) }
    dend_85 { pt3dadd( 5.5052, -112.07, -62.0269, 1.33 ) }
    dend_85 { pt3dadd( 5.70624, -112.628, -62.2265, 1.33 ) }
    dend_85 { pt3dadd( 6.15659, -114.048, -62.6587, 0.52 ) }
    dend_85 { pt3dadd( 6.37726, -114.865, -62.8468, 0.37 ) }
    dend_85 { pt3dadd( 6.60746, -115.978, -63.1531, 0.37 ) }
    dend_85 { pt3dadd( 6.74654, -116.819, -63.402, 0.37 ) }
    dend_85 { pt3dadd( 6.88487, -117.88, -63.7469, 0.81 ) }
    dend_85 { pt3dadd( 6.95393, -118.584, -63.9743, 1.11 ) }
    dend_85 { pt3dadd( 6.98944, -119.25, -64.2004, 0.74 ) }
    dend_85 { pt3dadd( 7.0956, -121.506, -65.0977, 0.22 ) }
    dend_85 { pt3dadd( 7.10506, -121.743, -65.2133, 0.66 ) }
    dend_85 { pt3dadd( 7.12914, -122.069, -65.3921, 1.11 ) }
    dend_85 { pt3dadd( 7.13552, -122.138, -65.4332, 1.11 ) }
    dend_85 { pt3dadd( 7.24446, -123.308, -66.1121, 0.29 ) }
    dend_85 { pt3dadd( 7.33215, -124.135, -66.6493, 0.29 ) }
    dend_85 { pt3dadd( 7.39252, -124.652, -66.9585, 0.52 ) }
    dend_85 { pt3dadd( 7.42438, -124.944, -67.1425, 1.03 ) }
    dend_85 { pt3dadd( 7.45007, -125.21, -67.3134, 1.03 ) }
    dend_85 { pt3dadd( 7.46038, -125.304, -67.3815, 1.03 ) }
    dend_85 { pt3dadd( 7.61966, -127.241, -68.9402, 0.29 ) }
    dend_85 { pt3dadd( 7.66266, -127.801, -69.4407, 0.29 ) }
    dend_85 { pt3dadd( 7.69897, -128.103, -69.7331, 0.29 ) }
    dend_85 { pt3dadd( 7.70826, -128.162, -69.7872, 0.29 ) }
    dend_85 { pt3dadd( 7.89271, -129.073, -70.5239, 0.74 ) }
    dend_85 { pt3dadd( 7.9962, -129.588, -70.9104, 1.25 ) }
    dend_85 { pt3dadd( 8.04769, -129.874, -71.0965, 1.25 ) }
    dend_85 { pt3dadd( 8.24502, -131.13, -71.9594, 0.44 ) }
    dend_85 { pt3dadd( 8.36725, -131.943, -72.5132, 0.37 ) }
    dend_85 { pt3dadd( 8.43122, -132.596, -72.9138, 0.37 ) }
    dend_85 { pt3dadd( 8.53997, -133.804, -73.5374, 0.29 ) }
    dend_85 { pt3dadd( 8.58126, -134.113, -73.6794, 0.29 ) }
    dend_85 { pt3dadd( 8.67665, -134.713, -73.9087, 0.66 ) }
    dend_85 { pt3dadd( 8.72581, -134.967, -73.9984, 1.03 ) }
    dend_85 { pt3dadd( 9.02968, -136.15, -74.4934, 0.29 ) }
    dend_85 { pt3dadd( 9.29968, -137.004, -74.8451, 0.29 ) }
    dend_85 { pt3dadd( 9.57369, -137.705, -75.0932, 0.29 ) }
    dend_85 { pt3dadd( 9.79003, -138.194, -75.2744, 0.29 ) }
    dend_85 { pt3dadd( 10.3808, -139.376, -75.7358, 1.18 ) }
    dend_85 { pt3dadd( 10.5605, -139.688, -75.8859, 0.07 ) }
    dend_85 { pt3dadd( 10.8798, -140.078, -76.168, 1.18 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 60/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -10.1498, -30.8288, -0.251341, 1.18 ) }
    dend_79 { pt3dadd( -10.8052, -31.4189, 0.200295, 1.18 ) }
    dend_79 { pt3dadd( -11.3153, -31.7749, 0.4576, 1.18 ) }
    dend_79 { pt3dadd( -11.7861, -32.0398, 0.638725, 0.59 ) }
    dend_79 { pt3dadd( -12.5215, -32.4018, 0.857416, 0.52 ) }
    dend_79 { pt3dadd( -12.9542, -32.6046, 0.960628, 0.22 ) }
    dend_79 { pt3dadd( -13.3542, -32.7988, 1.04297, 0.22 ) }
    dend_79 { pt3dadd( -13.9554, -33.0661, 1.08871, 0.22 ) }
    dend_79 { pt3dadd( -14.2607, -33.2098, 1.09134, 0.22 ) }
    dend_79 { pt3dadd( -14.6052, -33.4102, 1.09349, 0.22 ) }
    dend_79 { pt3dadd( -14.9001, -33.6315, 1.09001, 0.37 ) }
    dend_79 { pt3dadd( -15.1959, -33.8787, 1.13742, 0.44 ) }
    dend_79 { pt3dadd( -15.5892, -34.2085, 1.24041, 0.44 ) }
    dend_79 { pt3dadd( -16.0654, -34.5912, 1.38676, 0.37 ) }
    dend_79 { pt3dadd( -16.7146, -35.0461, 1.56566, 0.81 ) }
    dend_79 { pt3dadd( -16.981, -35.1967, 1.62672, 1.25 ) }
    dend_79 { pt3dadd( -17.8803, -35.5934, 1.78401, 0.81 ) }
    dend_79 { pt3dadd( -18.5968, -35.8313, 1.86889, 0.29 ) }
    dend_79 { pt3dadd( -19.0874, -35.9423, 1.91297, 0.29 ) }
    dend_79 { pt3dadd( -19.6547, -36.0228, 1.93742, 0.66 ) }
    dend_79 { pt3dadd( -20.045, -36.0628, 1.92349, 1.11 ) }
    dend_79 { pt3dadd( -20.3484, -36.1062, 1.90064, 0.59 ) }
    dend_79 { pt3dadd( -20.5577, -36.1589, 1.90292, 0.44 ) }
    dend_79 { pt3dadd( -20.9245, -36.3226, 2.01419, 0.74 ) }
    dend_79 { pt3dadd( -21.2628, -36.535, 2.33178, 0.37 ) }
    dend_79 { pt3dadd( -21.5885, -36.7742, 2.74404, 0.22 ) }
    dend_79 { pt3dadd( -21.8575, -36.9844, 3.15559, 0.22 ) }
    dend_79 { pt3dadd( -22.4863, -37.4942, 4.20478, 0.66 ) }
    dend_79 { pt3dadd( -22.5955, -37.585, 4.39138, 0.81 ) }
    dend_79 { pt3dadd( -23.3756, -38.2512, 5.72007, 0.44 ) }
    dend_79 { pt3dadd( -23.5211, -38.3772, 5.97765, 0.15 ) }
    dend_79 { pt3dadd( -23.7881, -38.5994, 6.43468, 0.22 ) }
    dend_79 { pt3dadd( -23.917, -38.7016, 6.63088, 0.22 ) }
    dend_79 { pt3dadd( -24.0968, -38.8711, 6.8595, 0.44 ) }
    dend_79 { pt3dadd( -24.2521, -39.0337, 7.01908, 1.18 ) }
    dend_79 { pt3dadd( -24.4565, -39.2887, 7.16103, 1.18 ) }
    dend_79 { pt3dadd( -24.6441, -39.5241, 7.2737, 0.88 ) }
    dend_79 { pt3dadd( -25.2798, -40.2227, 7.62036, 0.52 ) }
    dend_79 { pt3dadd( -25.5249, -40.4477, 7.76974, 0.37 ) }
    dend_79 { pt3dadd( -26.012, -40.8418, 8.07034, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_79 { pt3dadd( -26.3623, -41.0977, 8.27554, 0.29 ) }
    dend_79 { pt3dadd( -26.7539, -41.3603, 8.47984, 0.44 ) }
    dend_79 { pt3dadd( -27.6526, -41.907, 8.98234, 0.37 ) }
    dend_79 { pt3dadd( -28.3469, -42.3043, 9.37045, 0.37 ) }
    dend_79 { pt3dadd( -28.6105, -42.4448, 9.52795, 0.37 ) }
    dend_79 { pt3dadd( -28.9347, -42.6098, 9.73986, 0.66 ) }
    dend_79 { pt3dadd( -29.385, -42.8334, 10.0531, 0.37 ) }
    dend_79 { pt3dadd( -30.6051, -43.4816, 10.9723, 0.29 ) }
    dend_79 { pt3dadd( -30.7194, -43.5498, 11.059, 1.03 ) }
    dend_79 { pt3dadd( -30.8903, -43.6571, 11.1941, 1.25 ) }
    dend_79 { pt3dadd( -38.1322, -49.4495, 14.9603, 1.25 ) }
    dend_79 { pt3dadd( -46.5652, -53.9037, 18.1295, 1.25 ) }
    dend_79 { pt3dadd( -54.7991, -58.6446, 21.3811, 1.25 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 13/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -10.1498, -30.8288, -0.251341, 0.66 ) }
    dend_78 { pt3dadd( -11.1617, -30.7614, -0.35408, 0.66 ) }
    dend_78 { pt3dadd( -11.8357, -30.7116, -0.458517, 0.29 ) }
    dend_78 { pt3dadd( -12.001, -30.7006, -0.486813, 0.29 ) }
    dend_78 { pt3dadd( -12.4368, -30.679, -0.550545, 0.29 ) }
    dend_78 { pt3dadd( -12.7663, -30.6636, -0.593144, 0.29 ) }
    dend_78 { pt3dadd( -13.6183, -30.6145, -0.680247, 0.44 ) }
    dend_78 { pt3dadd( -13.7774, -30.6074, -0.694061, 0.44 ) }
    dend_78 { pt3dadd( -14.0311, -30.5884, -0.710871, 0.88 ) }
    dend_78 { pt3dadd( -14.6889, -30.5419, -0.815393, 1.25 ) }
    dend_78 { pt3dadd( -14.8087, -30.5313, -0.83706, 1.25 ) }
    dend_78 { pt3dadd( -15.2733, -30.4903, -0.910925, 1.25 ) }
    dend_78 { pt3dadd( -15.6891, -30.4522, -0.992711, 1.11 ) }
    dend_78 { pt3dadd( -16.3252, -30.3911, -1.14598, 1.03 ) }
    dend_78 { pt3dadd( -17.4709, -30.3083, -1.60094, 0.81 ) }
    dend_78 { pt3dadd( -18.1384, -30.293, -1.93619, 0.29 ) }
    dend_78 { pt3dadd( -18.6447, -30.3067, -2.21359, 0.37 ) }
    dend_78 { pt3dadd( -19.6317, -30.3818, -2.79777, 0.66 ) }
    dend_78 { pt3dadd( -19.9045, -30.4144, -2.96456, 0.66 ) }
    dend_78 { pt3dadd( -21.4365, -30.6887, -3.88469, 0.15 ) }
    dend_78 { pt3dadd( -21.8967, -30.7934, -4.15501, 0.15 ) }
    dend_78 { pt3dadd( -22.3129, -30.9049, -4.39597, 0.15 ) }
    dend_78 { pt3dadd( -22.4759, -30.9516, -4.47685, 0.81 ) }
    dend_78 { pt3dadd( -22.7799, -31.0459, -4.57116, 1.18 ) }
    dend_78 { pt3dadd( -23.0994, -31.1441, -4.62855, 0.59 ) }
    dend_78 { pt3dadd( -23.9778, -31.4111, -4.65261, 0.29 ) }
    dend_78 { pt3dadd( -24.3798, -31.5405, -4.67136, 0.29 ) }
    dend_78 { pt3dadd( -24.6942, -31.6628, -4.68634, 0.52 ) }
    dend_78 { pt3dadd( -25.1069, -31.851, -4.70025, 0.66 ) }
    dend_78 { pt3dadd( -25.4139, -32.0151, -4.72741, 0.81 ) }
    dend_78 { pt3dadd( -25.8282, -32.2671, -4.87534, 0.29 ) }
    dend_78 { pt3dadd( -26.1442, -32.4808, -5.09995, 0.22 ) }
    dend_78 { pt3dadd( -26.512, -32.7232, -5.44959, 0.22 ) }
    dend_78 { pt3dadd( -26.6997, -32.8471, -5.65165, 0.22 ) }
    dend_78 { pt3dadd( -27.2883, -33.2272, -6.30063, 0.74 ) }
    dend_78 { pt3dadd( -28.4692, -33.9652, -7.53237, 0.74 ) }
    dend_78 { pt3dadd( -29.2278, -34.4238, -8.35867, 0.44 ) }
    dend_78 { pt3dadd( -29.8135, -34.7602, -9.00593, 0.88 ) }
    dend_78 { pt3dadd( -30.0004, -34.8655, -9.2052, 1.33 ) }
    dend_78 { pt3dadd( -30.4557, -35.116, -9.66028, 1.03 ) }
    dend_78 { pt3dadd( -31.0495, -35.4363, -10.1873, 0.81 ) }
    dend_78 { pt3dadd( -32.9715, -36.4272, -11.5836, 0.37 ) }
    dend_78 { pt3dadd( -33.7243, -36.7971, -12.0901, 0.22 ) }
    dend_78 { pt3dadd( -34.1877, -37.0254, -12.4056, 0.22 ) }
    dend_78 { pt3dadd( -34.2791, -37.0702, -12.4686, 0.22 ) }
    dend_78 { pt3dadd( -34.4621, -37.1661, -12.5965, 0.59 ) }
    dend_78 { pt3dadd( -34.8443, -37.387, -12.8565, 0.81 ) }
    dend_78 { pt3dadd( -35.4869, -37.8357, -13.1354, 0.37 ) }
    dend_78 { pt3dadd( -35.6699, -37.9794, -13.2235, 0.29 ) }
    dend_78 { pt3dadd( -35.9822, -38.1969, -13.4208, 0.29 ) }
    dend_78 { pt3dadd( -36.3314, -38.4011, -13.6231, 0.59 ) }
    dend_78 { pt3dadd( -37.4076, -38.9633, -14.1752, 0.88 ) }
    dend_78 { pt3dadd( -37.9073, -39.1995, -14.3822, 0.29 ) }
    dend_78 { pt3dadd( -37.9789, -39.232, -14.4056, 0.29 ) }
    dend_78 { pt3dadd( -39.3516, -39.8271, -14.7876, 0.29 ) }
    dend_78 { pt3dadd( -40.4695, -40.3307, -15.0551, 1.47 ) }
    dend_78 { pt3dadd( -41.102, -40.6258, -15.164, 1.55 ) }
    dend_78 { pt3dadd( -42.009, -41.0753, -15.2284, 0.37 ) }
    dend_78 { pt3dadd( -42.4394, -41.3105, -15.242, 0.29 ) }
    dend_78 { pt3dadd( -42.5156, -41.3594, -15.2429, 0.29 ) }
    dend_78 { pt3dadd( -43.0173, -41.7886, -15.2148, 0.29 ) }
    dend_78 { pt3dadd( -43.312, -42.0924, -15.2308, 0.29 ) }
    dend_78 { pt3dadd( -43.3677, -42.1505, -15.2419, 0.29 ) }
    dend_78 { pt3dadd( -43.7352, -42.5191, -15.3443, 0.29 ) }
    dend_78 { pt3dadd( -44.3398, -43.0536, -15.5443, 0.66 ) }
    dend_78 { pt3dadd( -44.7011, -43.3435, -15.6638, 1.03 ) }
    dend_78 { pt3dadd( -44.9718, -43.5346, -15.7472, 0.88 ) }
    dend_78 { pt3dadd( -45.4667, -43.8655, -15.9044, 1.03 ) }
    dend_78 { pt3dadd( -45.9301, -44.1481, -16.0441, 0.52 ) }
    dend_78 { pt3dadd( -46.8686, -44.6836, -16.2967, 0.22 ) }
    dend_78 { pt3dadd( -47.2007, -44.8744, -16.4022, 0.22 ) }
    dend_78 { pt3dadd( -47.5488, -45.0752, -16.5348, 0.22 ) }
    dend_78 { pt3dadd( -47.883, -45.2894, -16.6984, 0.22 ) }
    dend_78 { pt3dadd( -48.0525, -45.4105, -16.8039, 0.22 ) }
    dend_78 { pt3dadd( -48.4132, -45.6884, -17.0814, 0.22 ) }
    dend_78 { pt3dadd( -49.3463, -46.4899, -17.8861, 1.11 ) }
    dend_78 { pt3dadd( -49.5837, -46.7187, -18.1063, 1.33 ) }
    dend_78 { pt3dadd( -49.9772, -47.1523, -18.4831, 0.74 ) }
    dend_78 { pt3dadd( -50.2963, -47.5354, -18.7612, 0.37 ) }
    dend_78 { pt3dadd( -50.436, -47.7084, -18.8707, 0.22 ) }
    dend_78 { pt3dadd( -50.6782, -48.0142, -19.0221, 0.22 ) }
    dend_78 { pt3dadd( -50.8497, -48.2219, -19.1413, 0.22 ) }
    dend_78 { pt3dadd( -51.3319, -48.7898, -19.5212, 1.18 ) }
    dend_78 { pt3dadd( -51.6802, -49.1963, -19.8102, 1.62 ) }
    dend_78 { pt3dadd( -52.532, -50.2032, -20.649, 0.22 ) }
    dend_78 { pt3dadd( -53.038, -50.8207, -21.2244, 0.22 ) }
    dend_78 { pt3dadd( -54.0743, -52.1173, -22.5472, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_78 { pt3dadd( -54.1178, -52.1706, -22.6056, 0.52 ) }
    dend_78 { pt3dadd( -54.1886, -52.2558, -22.706, 0.88 ) }
    dend_78 { pt3dadd( -54.8168, -53.0048, -23.6413, 0.22 ) }
    dend_78 { pt3dadd( -54.9748, -53.1849, -23.8637, 0.22 ) }
    dend_78 { pt3dadd( -55.121, -53.3376, -24.0314, 0.22 ) }
    dend_78 { pt3dadd( -55.4331, -53.6555, -24.2547, 0.37 ) }
    dend_78 { pt3dadd( -55.6432, -53.8259, -24.3881, 0.37 ) }
    dend_78 { pt3dadd( -55.8835, -54.0044, -24.5273, 0.37 ) }
    dend_78 { pt3dadd( -56.4134, -54.3667, -24.7944, 0.88 ) }
    dend_78 { pt3dadd( -57.5001, -55.0312, -25.3522, 1.25 ) }
    dend_78 { pt3dadd( -57.8053, -55.2003, -25.4973, 1.4 ) }
    dend_78 { pt3dadd( -59.5827, -56.1509, -26.2955, 0.29 ) }
    dend_78 { pt3dadd( -59.9245, -56.3238, -26.4352, 0.44 ) }
    dend_78 { pt3dadd( -60.35, -56.5322, -26.5891, 0.44 ) }
    dend_78 { pt3dadd( -61.574, -57.0991, -26.926, 0.59 ) }
    dend_78 { pt3dadd( -62.5411, -57.5498, -27.0813, 1.25 ) }
    dend_78 { pt3dadd( -62.9129, -57.7453, -27.1157, 1.25 ) }
    dend_78 { pt3dadd( -63.1935, -57.9195, -27.1085, 1.25 ) }
    dend_78 { pt3dadd( -63.4886, -58.1162, -27.0979, 0.96 ) }
    dend_78 { pt3dadd( -64.0508, -58.5374, -27.0636, 0.59 ) }
    dend_78 { pt3dadd( -64.7961, -59.1658, -26.9767, 0.29 ) }
    dend_78 { pt3dadd( -65.3407, -59.6348, -26.9273, 0.29 ) }
    dend_78 { pt3dadd( -65.6553, -59.8889, -26.9204, 0.29 ) }
    dend_78 { pt3dadd( -66.2961, -60.3423, -26.9476, 0.74 ) }
    dend_78 { pt3dadd( -66.6165, -60.5445, -26.974, 1.03 ) }
    dend_78 { pt3dadd( -66.8203, -60.6658, -26.9974, 1.25 ) }
    dend_78 { pt3dadd( -67.1057, -60.8281, -27.036, 0.96 ) }
    dend_78 { pt3dadd( -67.7841, -61.2264, -27.1289, 0.59 ) }
    dend_78 { pt3dadd( -68.6646, -61.8607, -27.293, 0.29 ) }
    dend_78 { pt3dadd( -69.2356, -62.3529, -27.4139, 0.29 ) }
    dend_78 { pt3dadd( -69.6113, -62.709, -27.503, 0.29 ) }
    dend_78 { pt3dadd( -69.7796, -62.8689, -27.5688, 0.44 ) }
    dend_78 { pt3dadd( -69.9724, -63.0553, -27.6653, 0.74 ) }
    dend_78 { pt3dadd( -70.6879, -63.729, -28.0884, 0.29 ) }
    dend_78 { pt3dadd( -70.9098, -63.9312, -28.2494, 0.29 ) }
    dend_78 { pt3dadd( -71.1348, -64.1124, -28.4213, 0.22 ) }
    dend_78 { pt3dadd( -72.2668, -64.9168, -29.2306, 0.22 ) }
    dend_78 { pt3dadd( -72.4826, -65.0503, -29.3854, 0.96 ) }
    dend_78 { pt3dadd( -73.0366, -65.3643, -29.7666, 1.33 ) }
    dend_78 { pt3dadd( -73.3841, -65.5617, -29.9922, 1.11 ) }
    dend_78 { pt3dadd( -73.8054, -65.8482, -30.2647, 0.37 ) }
    dend_78 { pt3dadd( -74.1102, -66.0797, -30.4385, 0.22 ) }
    dend_78 { pt3dadd( -74.9343, -66.717, -30.8142, 0.22 ) }
    dend_78 { pt3dadd( -75.3038, -66.9702, -30.9787, 0.29 ) }
    dend_78 { pt3dadd( -75.715, -67.2227, -31.1297, 0.37 ) }
    dend_78 { pt3dadd( -76.1833, -67.4887, -31.2612, 0.29 ) }
    dend_78 { pt3dadd( -76.6102, -67.7248, -31.3432, 0.29 ) }
    dend_78 { pt3dadd( -77.5707, -68.308, -31.4605, 0.74 ) }
    dend_78 { pt3dadd( -77.9286, -68.5398, -31.4701, 0.74 ) }
    dend_78 { pt3dadd( -78.6599, -69.0343, -31.5879, 0.22 ) }
    dend_78 { pt3dadd( -79.2072, -69.3826, -31.7155, 0.22 ) }
    dend_78 { pt3dadd( -79.4474, -69.5371, -31.7844, 0.37 ) }
    dend_78 { pt3dadd( -80.0281, -69.971, -31.9696, 0.37 ) }
    dend_78 { pt3dadd( -80.3191, -70.2266, -32.083, 0.37 ) }
    dend_78 { pt3dadd( -81.5914, -71.3751, -32.6492, 0.74 ) }
    dend_78 { pt3dadd( -82.0732, -71.7782, -32.8727, 1.33 ) }
    dend_78 { pt3dadd( -82.401, -72.0311, -33.0168, 1.33 ) }
    dend_78 { pt3dadd( -83.1649, -72.5764, -33.3216, 0.96 ) }
    dend_78 { pt3dadd( -84.4841, -73.471, -33.7721, 0.15 ) }
    dend_78 { pt3dadd( -84.8954, -73.7572, -33.8714, 0.15 ) }
    dend_78 { pt3dadd( -85.3971, -74.1343, -33.8997, 0.15 ) }
    dend_78 { pt3dadd( -85.6842, -74.3768, -33.9053, 0.81 ) }
    dend_78 { pt3dadd( -85.7428, -74.4297, -33.9012, 0.81 ) }
    dend_78 { pt3dadd( -86.1192, -74.801, -33.8055, 1.33 ) }
    dend_78 { pt3dadd( -86.5134, -75.2864, -33.6038, 0.74 ) }
    dend_78 { pt3dadd( -86.8263, -75.7472, -33.425, 0.96 ) }
    dend_78 { pt3dadd( -86.9147, -75.8877, -33.3737, 0.96 ) }
    dend_78 { pt3dadd( -87.2977, -76.4299, -33.177, 0.29 ) }
    dend_78 { pt3dadd( -87.7372, -76.9643, -32.9865, 0.29 ) }
    dend_78 { pt3dadd( -88.1088, -77.368, -32.8322, 0.88 ) }
    dend_78 { pt3dadd( -88.7462, -78.0028, -32.5798, 1.47 ) }
    dend_78 { pt3dadd( -89.0421, -78.2906, -32.471, 1.47 ) }
    dend_78 { pt3dadd( -89.9367, -79.1779, -32.0929, 0.52 ) }
    dend_78 { pt3dadd( -90.7897, -80.0291, -31.6967, 0.52 ) }
    dend_78 { pt3dadd( -91.2538, -80.5092, -31.4707, 0.52 ) }
    dend_78 { pt3dadd( -91.5679, -80.8535, -31.2869, 0.52 ) }
    dend_78 { pt3dadd( -92.0931, -81.4706, -30.9351, 0.52 ) }
    dend_78 { pt3dadd( -92.5118, -82.0979, -30.5047, 0.74 ) }
    dend_78 { pt3dadd( -92.7854, -82.6171, -30.1047, 0.74 ) }
    dend_78 { pt3dadd( -93.163, -83.4664, -29.4196, 0.22 ) }
    dend_78 { pt3dadd( -93.4808, -84.2707, -28.7961, 0.96 ) }
    dend_78 { pt3dadd( -93.6052, -84.6614, -28.4751, 1.33 ) }
    dend_78 { pt3dadd( -94.0257, -86.1416, -27.2089, 0.37 ) }
    dend_78 { pt3dadd( -94.1837, -86.7972, -26.665, 0.22 ) }
    dend_78 { pt3dadd( -94.2457, -87.1155, -26.4081, 0.29 ) }
    dend_78 { pt3dadd( -94.3824, -87.7613, -25.8833, 0.29 ) }
    dend_78 { pt3dadd( -94.7512, -89.093, -24.8861, 0.96 ) }
    dend_78 { pt3dadd( -94.8705, -89.4456, -24.6203, 1.4 ) }
    dend_78 { pt3dadd( -94.9775, -89.7005, -24.4307, 1.69 ) }
    dend_78 { pt3dadd( -95.1845, -90.137, -24.0936, 1.55 ) }
    dend_78 { pt3dadd( -96.1004, -91.8534, -22.6331, 0.44 ) }
    dend_78 { pt3dadd( -96.4186, -92.3574, -22.1702, 0.44 ) }
    dend_78 { pt3dadd( -96.8255, -92.9292, -21.6805, 0.44 ) }
    dend_78 { pt3dadd( -96.8887, -93.0137, -21.6107, 0.88 ) }
    dend_78 { pt3dadd( -97.3678, -93.6124, -21.1395, 1.11 ) }
    dend_78 { pt3dadd( -98.0678, -94.432, -20.5417, 1.11 ) }
    dend_78 { pt3dadd( -98.2841, -94.6603, -20.4124, 0.81 ) }
    dend_78 { pt3dadd( -99.2326, -95.6222, -19.8813, 0.29 ) }
    dend_78 { pt3dadd( -99.9578, -96.4228, -19.5127, 0.29 ) }
    dend_78 { pt3dadd( -100.262, -96.8035, -19.3338, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_78 { pt3dadd( -100.392, -96.9879, -19.2507, 1.11 ) }
    dend_78 { pt3dadd( -100.833, -97.6479, -18.9773, 1.11 ) }
    dend_78 { pt3dadd( -101.106, -98.1188, -18.7607, 1.11 ) }
    dend_78 { pt3dadd( -101.639, -99.2169, -18.1975, 0.44 ) }
    dend_78 { pt3dadd( -102.093, -100.224, -17.7728, 0.37 ) }
    dend_78 { pt3dadd( -102.293, -100.588, -17.6548, 0.44 ) }
    dend_78 { pt3dadd( -102.336, -100.652, -17.6399, 0.66 ) }
    dend_78 { pt3dadd( -102.588, -100.979, -17.575, 0.29 ) }
    dend_78 { pt3dadd( -103.181, -101.579, -17.5139, 0.29 ) }
    dend_78 { pt3dadd( -104.279, -102.442, -17.375, 0.81 ) }
    dend_78 { pt3dadd( -105.148, -103.071, -17.2517, 1.11 ) }
    dend_78 { pt3dadd( -105.281, -103.168, -17.2171, 1.11 ) }
    dend_78 { pt3dadd( -105.874, -103.65, -16.9955, 1.03 ) }
    dend_78 { pt3dadd( -105.919, -103.693, -16.9712, 1.03 ) }
    dend_78 { pt3dadd( -106.731, -104.67, -16.3517, 0.29 ) }
    dend_78 { pt3dadd( -106.847, -104.865, -16.2476, 0.29 ) }
    dend_78 { pt3dadd( -107.092, -105.372, -16.1058, 0.59 ) }
    dend_78 { pt3dadd( -107.312, -105.817, -16.0579, 0.74 ) }
    dend_78 { pt3dadd( -107.548, -106.278, -16.0762, 0.44 ) }
    dend_78 { pt3dadd( -107.772, -106.681, -16.1508, 0.44 ) }
    dend_78 { pt3dadd( -108.287, -107.575, -16.4144, 0.22 ) }
    dend_78 { pt3dadd( -108.692, -108.247, -16.6368, 0.59 ) }
    dend_78 { pt3dadd( -108.917, -108.605, -16.7607, 1.03 ) }
    dend_78 { pt3dadd( -109.155, -108.971, -16.8851, 0.74 ) }
    dend_78 { pt3dadd( -109.9, -110.169, -17.1296, 0.29 ) }
    dend_78 { pt3dadd( -110.385, -111.027, -17.1978, 0.29 ) }
    dend_78 { pt3dadd( -110.8, -111.869, -17.1626, 0.74 ) }
    dend_78 { pt3dadd( -111.026, -112.405, -17.0968, 0.74 ) }
    dend_78 { pt3dadd( -111.209, -112.898, -17.0114, 0.74 ) }
    dend_78 { pt3dadd( -111.825, -114.794, -16.5682, 0.29 ) }
    dend_78 { pt3dadd( -111.953, -115.303, -16.3721, 0.29 ) }
    dend_78 { pt3dadd( -112.045, -115.672, -16.2276, 0.29 ) }
    dend_78 { pt3dadd( -112.199, -116.264, -15.9964, 1.11 ) }
    dend_78 { pt3dadd( -112.346, -116.745, -15.8314, 0.96 ) }
    dend_78 { pt3dadd( -112.536, -117.281, -15.6963, 0.81 ) }
    dend_78 { pt3dadd( -113.193, -118.735, -15.5457, 0.22 ) }
    dend_78 { pt3dadd( -113.799, -119.921, -15.4237, 0.22 ) }
    dend_78 { pt3dadd( -113.951, -120.22, -15.356, 0.66 ) }
    dend_78 { pt3dadd( -114.075, -120.508, -15.262, 1.11 ) }
    dend_78 { pt3dadd( -114.2, -120.863, -15.1292, 0.66 ) }
    dend_78 { pt3dadd( -114.286, -121.22, -14.9401, 0.66 ) }
    dend_78 { pt3dadd( -114.295, -121.278, -14.9024, 0.66 ) }
    dend_78 { pt3dadd( -114.435, -122.646, -13.8883, 0.22 ) }
    dend_78 { pt3dadd( -114.556, -123.264, -13.4892, 0.22 ) }
    dend_78 { pt3dadd( -114.646, -123.607, -13.2956, 0.66 ) }
    dend_78 { pt3dadd( -115.006, -124.578, -12.856, 1.18 ) }
    dend_78 { pt3dadd( -115.034, -124.647, -12.8299, 1.18 ) }
    dend_78 { pt3dadd( -115.294, -125.197, -12.6631, 1.18 ) }
    dend_78 { pt3dadd( -116.109, -126.704, -12.3942, 0.37 ) }
    dend_78 { pt3dadd( -116.189, -126.843, -12.3711, 0.59 ) }
    dend_78 { pt3dadd( -116.684, -127.645, -12.2549, 0.59 ) }
    dend_78 { pt3dadd( -117.2, -128.459, -12.1729, 0.59 ) }
    dend_78 { pt3dadd( -117.287, -128.614, -12.1503, 0.66 ) }
    dend_78 { pt3dadd( -117.463, -128.985, -12.0751, 0.74 ) }
    dend_78 { pt3dadd( -117.49, -129.054, -12.0501, 0.74 ) }
    dend_78 { pt3dadd( -117.593, -129.284, -11.9593, 0.74 ) }
    dend_78 { pt3dadd( -118.063, -130.196, -11.5778, 0.22 ) }
    dend_78 { pt3dadd( -118.418, -130.766, -11.3436, 0.22 ) }
    dend_78 { pt3dadd( -118.658, -131.121, -11.1912, 0.22 ) }
    dend_78 { pt3dadd( -119.217, -131.822, -10.8831, 1.03 ) }
    dend_78 { pt3dadd( -119.609, -132.286, -10.681, 1.4 ) }
    dend_78 { pt3dadd( -119.654, -132.336, -10.6599, 1.4 ) }
    dend_78 { pt3dadd( -120.051, -132.746, -10.4902, 1.4 ) }
    dend_78 { pt3dadd( -120.522, -133.228, -10.3131, 0.66 ) }
    dend_78 { pt3dadd( -121.381, -134.198, -9.97758, 0.29 ) }
    dend_78 { pt3dadd( -121.438, -134.267, -9.9566, 0.29 ) }
    dend_78 { pt3dadd( -121.891, -134.87, -9.75385, 0.29 ) }
    dend_78 { pt3dadd( -122.15, -135.258, -9.61726, 0.29 ) }
    dend_78 { pt3dadd( -122.265, -135.457, -9.5266, 0.29 ) }
    dend_78 { pt3dadd( -122.727, -136.269, -9.0828, 0.52 ) }
    dend_78 { pt3dadd( -122.859, -136.532, -8.93878, 1.03 ) }
    dend_78 { pt3dadd( -123.028, -136.863, -8.76037, 1.03 ) }
    dend_78 { pt3dadd( -123.1, -137.0, -8.68881, 1.03 ) }
    dend_78 { pt3dadd( -123.744, -138.163, -8.1028, 0.37 ) }
    dend_78 { pt3dadd( -124.201, -138.984, -7.73676, 0.29 ) }
    dend_78 { pt3dadd( -124.584, -139.671, -7.49273, 0.29 ) }
    dend_78 { pt3dadd( -124.617, -139.727, -7.47523, 0.29 ) }
    dend_78 { pt3dadd( -124.966, -140.301, -7.31446, 0.74 ) }
    dend_78 { pt3dadd( -125.241, -140.73, -7.21123, 0.81 ) }
    dend_78 { pt3dadd( -125.647, -141.36, -7.09649, 0.81 ) }
    dend_78 { pt3dadd( -126.273, -142.309, -6.92139, 0.29 ) }
    dend_78 { pt3dadd( -126.974, -143.28, -6.72606, 0.29 ) }
    dend_78 { pt3dadd( -127.21, -143.6, -6.66148, 0.52 ) }
    dend_78 { pt3dadd( -127.501, -143.976, -6.59051, 0.66 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 84/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.93848, 58.7563, 15.8716, 0.74 ) }
    dend_74 { pt3dadd( 5.91838, 59.0267, 15.8574, 0.74 ) }
    dend_74 { pt3dadd( 5.90869, 59.153, 15.8527, 0.74 ) }
    dend_74 { pt3dadd( 5.91416, 59.3876, 15.8094, 0.44 ) }
    dend_74 { pt3dadd( 5.93621, 59.7309, 15.7005, 0.29 ) }
    dend_74 { pt3dadd( 5.9396, 59.8711, 15.6296, 0.29 ) }
    dend_74 { pt3dadd( 5.94016, 60.0491, 15.5256, 0.66 ) }
    dend_74 { pt3dadd( 5.93529, 60.1829, 15.4343, 0.66 ) }
    dend_74 { pt3dadd( 5.92921, 60.7921, 14.9734, 0.22 ) }
    dend_74 { pt3dadd( 5.94981, 61.1402, 14.6413, 0.22 ) }
    dend_74 { pt3dadd( 6.02238, 61.6516, 14.1204, 0.37 ) }
    dend_74 { pt3dadd( 6.02913, 61.7064, 14.0636, 0.37 ) }
    dend_74 { pt3dadd( 6.06641, 62.0607, 13.702, 0.29 ) }
    dend_74 { pt3dadd( 6.0899, 62.3241, 13.4406, 0.29 ) }
    dend_74 { pt3dadd( 6.14858, 63.1959, 12.6566, 0.96 ) }
    dend_74 { pt3dadd( 6.18641, 63.6435, 12.301, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_74 { pt3dadd( 6.24635, 64.2023, 11.9254, 0.52 ) }
    dend_74 { pt3dadd( 6.26609, 64.4088, 11.8038, 0.52 ) }
    dend_74 { pt3dadd( 6.26893, 64.4486, 11.7848, 0.52 ) }
    dend_74 { pt3dadd( 6.26548, 64.7923, 11.6717, 0.52 ) }
    dend_74 { pt3dadd( 6.2618, 64.8767, 11.6647, 0.52 ) }
    dend_74 { pt3dadd( 6.2568, 65.0787, 11.6573, 0.52 ) }
    dend_74 { pt3dadd( 6.28546, 65.4588, 11.6687, 0.52 ) }
    dend_74 { pt3dadd( 6.29108, 65.542, 11.6635, 0.52 ) }
    dend_74 { pt3dadd( 6.30181, 65.8169, 11.6268, 0.52 ) }
    dend_74 { pt3dadd( 6.30335, 65.8979, 11.61, 0.52 ) }
    dend_74 { pt3dadd( 6.30329, 66.0806, 11.5621, 0.52 ) }
    dend_74 { pt3dadd( 6.29933, 66.2393, 11.5118, 0.52 ) }
    dend_74 { pt3dadd( 6.27845, 66.7344, 11.3303, 0.66 ) }
    dend_74 { pt3dadd( 6.27601, 66.8145, 11.3017, 0.66 ) }
    dend_74 { pt3dadd( 6.27392, 66.9563, 11.2616, 0.88 ) }
    dend_74 { pt3dadd( 6.27307, 66.9933, 11.2518, 0.88 ) }
    dend_74 { pt3dadd( 6.26849, 67.2267, 11.1996, 0.88 ) }
    dend_74 { pt3dadd( 6.26653, 67.3156, 11.1847, 0.88 ) }
    dend_74 { pt3dadd( 6.26158, 67.5523, 11.1609, 0.66 ) }
    dend_74 { pt3dadd( 6.25817, 68.0712, 11.1111, 0.29 ) }
    dend_74 { pt3dadd( 6.25521, 68.3845, 11.0827, 0.44 ) }
    dend_74 { pt3dadd( 6.25458, 68.6675, 11.0592, 0.59 ) }
    dend_74 { pt3dadd( 6.25243, 68.9053, 11.0355, 0.96 ) }
    dend_74 { pt3dadd( 6.2473, 69.2262, 11.0013, 1.33 ) }
    dend_74 { pt3dadd( 6.23366, 69.5157, 10.9704, 1.33 ) }
    dend_74 { pt3dadd( 6.21563, 69.7144, 10.9516, 1.11 ) }
    dend_74 { pt3dadd( 6.18528, 69.9525, 10.9342, 1.11 ) }
    dend_74 { pt3dadd( 6.03455, 70.7332, 10.873, 0.52 ) }
    dend_74 { pt3dadd( 6.02245, 70.7766, 10.8703, 0.52 ) }
    dend_74 { pt3dadd( 5.88691, 71.1276, 10.8556, 0.52 ) }
    dend_74 { pt3dadd( 5.79505, 71.3064, 10.8537, 0.44 ) }
    dend_74 { pt3dadd( 5.77153, 71.3441, 10.8546, 0.44 ) }
    dend_74 { pt3dadd( 5.58357, 71.6042, 10.8747, 0.44 ) }
    dend_74 { pt3dadd( 5.40552, 71.8409, 10.9101, 0.81 ) }
    dend_74 { pt3dadd( 5.2853, 72.0356, 10.935, 0.74 ) }
    dend_74 { pt3dadd( 5.14114, 72.3192, 10.9665, 0.81 ) }
    dend_74 { pt3dadd( 5.12663, 72.355, 10.9696, 0.81 ) }
    dend_74 { pt3dadd( 4.99982, 72.731, 10.995, 0.29 ) }
    dend_74 { pt3dadd( 4.92191, 73.0234, 11.0091, 0.29 ) }
    dend_74 { pt3dadd( 4.82139, 73.4549, 11.0215, 0.29 ) }
    dend_74 { pt3dadd( 4.81229, 73.4991, 11.0227, 0.29 ) }
    dend_74 { pt3dadd( 4.73911, 73.8942, 11.0342, 0.29 ) }
    dend_74 { pt3dadd( 4.6726, 74.2309, 11.0439, 1.11 ) }
    dend_74 { pt3dadd( 4.6089, 74.507, 11.0518, 1.47 ) }
    dend_74 { pt3dadd( 4.56351, 74.663, 11.0563, 2.28 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 45/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 5.93848, 58.7563, 15.8716, 0.29 ) }
    dend_73 { pt3dadd( 8.43773, 58.9112, 16.3149, 0.29 ) }
    dend_73 { pt3dadd( 9.14879, 58.9065, 17.0849, 0.29 ) }
    dend_73 { pt3dadd( 9.92755, 58.8593, 18.0637, 0.37 ) }
    dend_73 { pt3dadd( 10.1964, 58.838, 18.4559, 0.37 ) }
    dend_73 { pt3dadd( 10.6365, 58.8044, 19.1215, 1.03 ) }
    dend_73 { pt3dadd( 10.8736, 58.7922, 19.4776, 1.03 ) }
    dend_73 { pt3dadd( 13.7291, 58.7803, 24.2709, 0.81 ) }
    dend_73 { pt3dadd( 14.0913, 58.7932, 24.9332, 0.74 ) }
    dend_73 { pt3dadd( 14.9262, 58.8782, 26.5489, 0.37 ) }
    dend_73 { pt3dadd( 15.0636, 58.9111, 26.8163, 0.37 ) }
    dend_73 { pt3dadd( 15.3406, 59.0236, 27.332, 0.37 ) }
    dend_73 { pt3dadd( 16.0009, 59.4349, 28.3106, 0.81 ) }
    dend_73 { pt3dadd( 16.309, 59.7205, 28.5492, 1.25 ) }
    dend_73 { pt3dadd( 16.6799, 60.0562, 28.7722, 1.62 ) }
    dend_73 { pt3dadd( 18.0736, 61.1951, 29.333, 0.52 ) }
    dend_73 { pt3dadd( 18.6185, 61.633, 29.5203, 0.52 ) }
    dend_73 { pt3dadd( 19.2432, 62.1372, 29.678, 0.66 ) }
    dend_73 { pt3dadd( 20.4652, 63.1491, 30.0046, 0.52 ) }
    dend_73 { pt3dadd( 21.5927, 64.132, 30.3363, 0.44 ) }
    dend_73 { pt3dadd( 22.7227, 65.1177, 30.6669, 0.44 ) }
    dend_73 { pt3dadd( 23.4061, 65.7331, 30.9458, 0.44 ) }
    dend_73 { pt3dadd( 24.0473, 66.3728, 31.3624, 0.44 ) }
    dend_73 { pt3dadd( 25.3173, 67.8459, 32.6162, 0.44 ) }
    dend_73 { pt3dadd( 25.6599, 68.3451, 33.1348, 0.44 ) }
    dend_73 { pt3dadd( 25.6896, 68.3929, 33.1934, 0.44 ) }
    dend_73 { pt3dadd( 26.6369, 69.7255, 35.1145, 0.44 ) }
    dend_73 { pt3dadd( 26.8339, 69.914, 35.4172, 0.66 ) }
    dend_73 { pt3dadd( 26.9464, 69.9886, 35.5614, 0.66 ) }
    dend_73 { pt3dadd( 27.3902, 70.1967, 35.9704, 1.11 ) }
    dend_73 { pt3dadd( 27.8995, 70.4106, 36.4157, 1.11 ) }
    dend_73 { pt3dadd( 28.3036, 70.5967, 36.743, 1.03 ) }
    dend_73 { pt3dadd( 28.9561, 70.9698, 37.1868, 0.66 ) }
    dend_73 { pt3dadd( 30.5201, 72.2218, 38.385, 0.66 ) }
    dend_73 { pt3dadd( 30.7425, 72.46, 38.5747, 0.52 ) }
    dend_73 { pt3dadd( 31.0195, 72.8804, 38.8397, 0.52 ) }
    dend_73 { pt3dadd( 31.2768, 73.4177, 39.0949, 0.37 ) }
    dend_73 { pt3dadd( 31.6514, 74.4406, 39.448, 0.37 ) }
    dend_73 { pt3dadd( 31.86, 75.1608, 39.5886, 0.37 ) }
    dend_73 { pt3dadd( 31.9252, 75.3731, 39.6214, 0.52 ) }
    dend_73 { pt3dadd( 32.1643, 75.9939, 39.8143, 0.52 ) }
    dend_73 { pt3dadd( 32.3588, 76.3858, 39.9811, 0.74 ) }
    dend_73 { pt3dadd( 32.4044, 76.4497, 40.0259, 0.74 ) }
    dend_73 { pt3dadd( 32.6692, 76.662, 40.3717, 0.74 ) }
    dend_73 { pt3dadd( 33.8455, 77.2136, 42.2282, 0.74 ) }
    dend_73 { pt3dadd( 33.8952, 77.227, 42.3191, 0.74 ) }
    dend_73 { pt3dadd( 41.6916, 82.1593, 51.3458, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_67 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -13.9155, 57.332, 31.5173, 0.29 ) }
    dend_71 { pt3dadd( -15.109, 58.4276, 32.8874, 0.29 ) }
    dend_71 { pt3dadd( -15.3191, 58.6953, 33.1663, 0.29 ) }
    dend_71 { pt3dadd( -15.3863, 58.7971, 33.2584, 0.29 ) }
    dend_71 { pt3dadd( -15.8314, 59.5144, 33.8279, 0.29 ) }
    dend_71 { pt3dadd( -15.8587, 59.5642, 33.8716, 0.29 ) }
    dend_71 { pt3dadd( -16.4228, 60.6161, 34.7639, 0.29 ) }
    dend_71 { pt3dadd( -16.6051, 61.0609, 35.0833, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_71 { pt3dadd( -16.6972, 61.305, 35.2612, 0.29 ) }
    dend_71 { pt3dadd( -16.7927, 61.6209, 35.5054, 0.59 ) }
    dend_71 { pt3dadd( -17.0772, 62.8744, 36.4817, 0.29 ) }
    dend_71 { pt3dadd( -17.1869, 63.4567, 36.8907, 0.29 ) }
    dend_71 { pt3dadd( -17.199, 63.5401, 36.94, 0.29 ) }
    dend_71 { pt3dadd( -17.2706, 64.1452, 37.3134, 0.29 ) }
    dend_71 { pt3dadd( -17.3339, 65.0753, 37.8825, 0.29 ) }
    dend_71 { pt3dadd( -17.3313, 65.5766, 38.1664, 0.29 ) }
    dend_71 { pt3dadd( -17.3019, 65.9026, 38.2968, 1.03 ) }
    dend_71 { pt3dadd( -17.2309, 66.2928, 38.4762, 1.4 ) }
    dend_71 { pt3dadd( -20.7348, 73.4997, 44.1552, 1.4 ) }
    dend_71 { pt3dadd( -23.77, 80.8408, 49.919, 1.4 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 12/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -13.9155, 57.332, 31.5173, 0.44 ) }
    dend_68 { pt3dadd( -14.9262, 56.9776, 31.223, 0.44 ) }
    dend_68 { pt3dadd( -15.0832, 56.8425, 31.7045, 0.44 ) }
    dend_68 { pt3dadd( -15.3347, 56.5869, 32.5691, 0.44 ) }
    dend_68 { pt3dadd( -15.4613, 56.4477, 32.9433, 0.44 ) }
    dend_68 { pt3dadd( -15.5343, 56.375, 33.1035, 0.59 ) }
    dend_68 { pt3dadd( -15.727, 56.2059, 33.4337, 0.81 ) }
    dend_68 { pt3dadd( -17.4456, 54.7012, 36.5193, 0.29 ) }
    dend_68 { pt3dadd( -17.5309, 54.6291, 36.6735, 0.29 ) }
    dend_68 { pt3dadd( -17.8692, 54.3142, 37.2993, 0.29 ) }
    dend_68 { pt3dadd( -18.3021, 53.883, 38.1197, 0.29 ) }
    dend_68 { pt3dadd( -18.6071, 53.5747, 38.6647, 0.29 ) }
    dend_68 { pt3dadd( -19.0576, 53.1372, 39.2968, 0.29 ) }
    dend_68 { pt3dadd( -19.2139, 53.0404, 39.3439, 0.29 ) }
    dend_68 { pt3dadd( -19.7371, 52.7473, 39.5199, 0.29 ) }
    dend_68 { pt3dadd( -28.7669, 46.8466, 47.5463, 0.29 ) }
    dend_68 { pt3dadd( -37.1313, 41.157, 56.412, 0.29 ) }
    dend_68 { pt3dadd( -44.7634, 37.2031, 66.8067, 0.29 ) }
    dend_68 { pt3dadd( -52.5011, 32.3341, 76.6998, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 31/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -50.1727, 9.6203, 55.0843, 0.29 ) }
    dend_64 { pt3dadd( -57.2873, 5.10522, 59.4362, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 33/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -50.1727, 9.6203, 55.0843, 0.44 ) }
    dend_63 { pt3dadd( -61.829, 6.32187, 57.9498, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -65.4456, -47.331, -20.3978, 1.47 ) }
    dend_57 { pt3dadd( -65.8194, -47.0082, -20.7489, 1.47 ) }
    dend_57 { pt3dadd( -66.6523, -46.315, -21.4138, 0.44 ) }
    dend_57 { pt3dadd( -67.6742, -45.5183, -22.1277, 0.44 ) }
    dend_57 { pt3dadd( -67.7335, -45.4742, -22.1659, 0.44 ) }
    dend_57 { pt3dadd( -69.1108, -44.4491, -23.0535, 0.29 ) }
    dend_57 { pt3dadd( -70.4702, -43.4372, -23.9296, 0.29 ) }
    dend_57 { pt3dadd( -71.2502, -42.8695, -24.4493, 0.59 ) }
    dend_57 { pt3dadd( -72.1198, -42.3167, -25.0416, 0.29 ) }
    dend_57 { pt3dadd( -72.7322, -41.9795, -25.4017, 0.74 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 45/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -65.4456, -47.331, -20.3978, 0.44 ) }
    dend_56 { pt3dadd( -67.3167, -47.8643, -20.606, 0.44 ) }
    dend_56 { pt3dadd( -67.8338, -48.0084, -20.7374, 0.88 ) }
    dend_56 { pt3dadd( -68.1765, -48.0971, -20.8568, 1.4 ) }
    dend_56 { pt3dadd( -68.312, -48.1318, -20.909, 1.55 ) }
    dend_56 { pt3dadd( -68.3918, -48.1515, -20.9421, 1.55 ) }
    dend_56 { pt3dadd( -69.9912, -48.3969, -21.5628, 0.44 ) }
    dend_56 { pt3dadd( -70.2329, -48.4333, -21.6977, 1.4 ) }
    dend_56 { pt3dadd( -70.6455, -48.4826, -21.9458, 1.69 ) }
    dend_56 { pt3dadd( -71.0502, -48.5211, -22.1975, 1.25 ) }
    dend_56 { pt3dadd( -71.3028, -48.5383, -22.3668, 0.74 ) }
    dend_56 { pt3dadd( -72.715, -48.6021, -23.3547, 0.22 ) }
    dend_56 { pt3dadd( -73.5768, -48.6136, -23.9765, 0.96 ) }
    dend_56 { pt3dadd( -74.0663, -48.6111, -24.3613, 0.96 ) }
    dend_56 { pt3dadd( -74.4438, -48.6004, -24.6818, 0.52 ) }
    dend_56 { pt3dadd( -75.5891, -48.5392, -25.7338, 0.29 ) }
    dend_56 { pt3dadd( -75.6728, -48.5351, -25.8147, 0.29 ) }
    dend_56 { pt3dadd( -75.769, -48.5224, -25.9074, 0.59 ) }
    dend_56 { pt3dadd( -76.3457, -48.3561, -26.3411, 0.74 ) }
    dend_56 { pt3dadd( -76.7145, -48.1832, -26.4612, 0.96 ) }
    dend_56 { pt3dadd( -76.7726, -48.1491, -26.47, 0.96 ) }
    dend_56 { pt3dadd( -76.9516, -48.0378, -26.483, 1.18 ) }
    dend_56 { pt3dadd( -78.0784, -47.3863, -26.575, 1.18 ) }
    dend_56 { pt3dadd( -78.1293, -47.3583, -26.579, 1.18 ) }
    dend_56 { pt3dadd( -80.355, -46.1999, -26.755, 0.44 ) }
    dend_56 { pt3dadd( -80.9781, -45.8778, -26.8109, 0.44 ) }
    dend_56 { pt3dadd( -81.5726, -45.5833, -26.8843, 0.44 ) }
    dend_56 { pt3dadd( -82.083, -45.3663, -26.984, 0.81 ) }
    dend_56 { pt3dadd( -82.1455, -45.3461, -27.0011, 0.81 ) }
    dend_56 { pt3dadd( -82.486, -45.2557, -27.1079, 1.33 ) }
    dend_56 { pt3dadd( -83.4297, -45.1124, -27.4904, 1.33 ) }
    dend_56 { pt3dadd( -83.6927, -45.0752, -27.5833, 1.33 ) }
    dend_56 { pt3dadd( -84.8992, -44.8728, -27.9937, 0.22 ) }
    dend_56 { pt3dadd( -84.9551, -44.8627, -28.0129, 0.74 ) }
    dend_56 { pt3dadd( -85.0826, -44.8425, -28.0584, 0.74 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 80/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -34.8664, 43.9208, -36.8789, 0.29 ) }
    dend_48 { pt3dadd( -34.8502, 44.3368, -37.4968, 0.29 ) }
    dend_48 { pt3dadd( -34.8735, 44.6055, -38.3371, 0.29 ) }
    dend_48 { pt3dadd( -34.8828, 44.7165, -38.7225, 0.29 ) }
    dend_48 { pt3dadd( -34.9014, 44.9484, -39.5584, 0.74 ) }
    dend_48 { pt3dadd( -34.9074, 45.0137, -39.7905, 1.25 ) }
    dend_48 { pt3dadd( -34.9118, 45.0583, -39.9452, 1.47 ) }
    dend_48 { pt3dadd( -35.0502, 45.9321, -43.2063, 0.59 ) }
    dend_48 { pt3dadd( -35.0601, 45.9819, -43.4156, 0.59 ) }
    dend_48 { pt3dadd( -35.0634, 45.991, -43.4628, 0.59 ) }
    dend_48 { pt3dadd( -35.0827, 46.0255, -43.6531, 0.59 ) }
    dend_48 { pt3dadd( -35.0972, 46.0481, -43.7717, 0.66 ) }
    dend_48 { pt3dadd( -35.0972, 46.0481, -43.7717, 0.66 ) }
    dend_48 { pt3dadd( -35.1361, 46.125, -43.9086, 0.66 ) }
    dend_48 { pt3dadd( -35.3338, 46.538, -44.6592, 0.22 ) }
    dend_48 { pt3dadd( -35.4112, 46.6818, -45.0393, 0.22 ) }
    dend_48 { pt3dadd( -35.5138, 46.8574, -45.5536, 0.29 ) }
    dend_48 { pt3dadd( -35.537, 46.8926, -45.6604, 0.59 ) }
    dend_48 { pt3dadd( -35.5496, 46.9105, -45.7145, 0.74 ) }
    dend_48 { pt3dadd( -35.5915, 46.9456, -45.8844, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_48 { pt3dadd( -36.019, 47.1333, -47.5528, 0.96 ) }
    dend_48 { pt3dadd( -36.0808, 47.1497, -47.7648, 0.96 ) }
    dend_48 { pt3dadd( -36.1362, 47.1621, -47.9342, 0.96 ) }
    dend_48 { pt3dadd( -36.1682, 47.1683, -48.0268, 0.96 ) }
    dend_48 { pt3dadd( -36.963, 47.2978, -50.3151, 0.37 ) }
    dend_48 { pt3dadd( -37.6676, 47.3836, -52.3283, 0.15 ) }
    dend_48 { pt3dadd( -37.793, 47.3948, -52.6809, 0.74 ) }
    dend_48 { pt3dadd( -37.9394, 47.4039, -53.11, 1.18 ) }
    dend_48 { pt3dadd( -37.9647, 47.4054, -53.1864, 1.47 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 9/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -34.8664, 43.9208, -36.8789, 0.22 ) }
    dend_43 { pt3dadd( -35.6786, 44.6856, -36.8593, 0.22 ) }
    dend_43 { pt3dadd( -36.2052, 45.1704, -36.8496, 0.22 ) }
    dend_43 { pt3dadd( -36.724, 45.6137, -36.9047, 0.22 ) }
    dend_43 { pt3dadd( -37.2378, 46.0021, -36.9959, 0.22 ) }
    dend_43 { pt3dadd( -37.659, 46.2982, -37.0839, 0.29 ) }
    dend_43 { pt3dadd( -38.0858, 46.5812, -37.1779, 0.37 ) }
    dend_43 { pt3dadd( -38.1685, 46.6329, -37.2038, 0.37 ) }
    dend_43 { pt3dadd( -39.0415, 47.2008, -37.5064, 0.88 ) }
    dend_43 { pt3dadd( -39.5961, 47.5684, -37.7077, 1.18 ) }
    dend_43 { pt3dadd( -40.067, 47.9019, -37.8814, 1.18 ) }
    dend_43 { pt3dadd( -40.3957, 48.185, -38.0279, 1.11 ) }
    dend_43 { pt3dadd( -41.6575, 49.4841, -38.6652, 0.22 ) }
    dend_43 { pt3dadd( -42.0937, 50.0278, -38.9025, 0.22 ) }
    dend_43 { pt3dadd( -42.1337, 50.098, -38.9433, 0.22 ) }
    dend_43 { pt3dadd( -42.2419, 50.3966, -39.1631, 0.22 ) }
    dend_43 { pt3dadd( -42.4261, 51.2452, -39.9103, 0.66 ) }
    dend_43 { pt3dadd( -42.4442, 51.5004, -40.1559, 1.25 ) }
    dend_43 { pt3dadd( -42.425, 51.8313, -40.4858, 1.11 ) }
    dend_43 { pt3dadd( -42.3168, 53.6349, -42.2301, 1.25 ) }
    dend_43 { pt3dadd( -42.2598, 54.2164, -42.8333, 0.66 ) }
    dend_43 { pt3dadd( -42.2516, 54.2771, -42.897, 0.66 ) }
    dend_43 { pt3dadd( -42.0814, 55.3251, -43.9123, 0.22 ) }
    dend_43 { pt3dadd( -42.0088, 55.7478, -44.303, 0.22 ) }
    dend_43 { pt3dadd( -41.9477, 56.1167, -44.6056, 0.22 ) }
    dend_43 { pt3dadd( -41.671, 57.9438, -45.8703, 0.59 ) }
    dend_43 { pt3dadd( -41.6087, 58.2865, -46.1573, 1.18 ) }
    dend_43 { pt3dadd( -41.5113, 58.8556, -46.6706, 1.18 ) }
    dend_43 { pt3dadd( -41.4233, 59.1713, -47.6256, 0.52 ) }
    dend_43 { pt3dadd( -41.3454, 59.5224, -48.7347, 0.29 ) }
    dend_43 { pt3dadd( -41.3409, 59.5495, -48.8195, 0.29 ) }
    dend_43 { pt3dadd( -41.2597, 60.1445, -50.6575, 1.4 ) }
    dend_43 { pt3dadd( -41.2302, 60.3477, -51.2796, 1.69 ) }
    dend_43 { pt3dadd( -40.3837, 66.2415, -69.1583, 0.22 ) }
    dend_43 { pt3dadd( -40.3036, 66.7613, -70.6499, 0.22 ) }
    dend_43 { pt3dadd( -40.2483, 67.1263, -71.6361, 0.22 ) }
    dend_43 { pt3dadd( -40.0788, 68.3951, -74.7979, 1.4 ) }
    dend_43 { pt3dadd( -40.0395, 68.7479, -75.5958, 1.5 ) }
    dend_43 { pt3dadd( -40.0093, 69.0571, -76.1879, 1.5 ) }
    dend_43 { pt3dadd( -39.9734, 70.871, -77.3238, 0.29 ) }
    dend_43 { pt3dadd( -39.9015, 71.6468, -77.8094, 0.29 ) }
    dend_43 { pt3dadd( -39.6915, 73.184, -78.6763, 0.29 ) }
    dend_43 { pt3dadd( -39.6337, 73.5541, -78.8324, 0.29 ) }
    dend_43 { pt3dadd( -39.4103, 74.6862, -79.2824, 0.74 ) }
    dend_43 { pt3dadd( -39.2513, 75.2354, -79.4755, 1.11 ) }
    dend_43 { pt3dadd( -38.7905, 76.4241, -79.8097, 1.4 ) }
    dend_43 { pt3dadd( -38.6484, 76.7193, -79.8658, 1.69 ) }
    dend_43 { pt3dadd( -38.1878, 77.5822, -79.948, 0.74 ) }
    dend_43 { pt3dadd( -37.7178, 78.4807, -80.0369, 0.15 ) }
    dend_43 { pt3dadd( -37.5652, 78.8251, -80.0965, 0.15 ) }
    dend_43 { pt3dadd( -37.5334, 78.9155, -80.1243, 0.15 ) }
    dend_43 { pt3dadd( -37.3989, 79.5489, -80.4066, 0.44 ) }
    dend_43 { pt3dadd( -37.3213, 80.1845, -80.7514, 0.37 ) }
    dend_43 { pt3dadd( -37.3129, 80.5979, -80.9622, 0.37 ) }
    dend_43 { pt3dadd( -37.3784, 81.8458, -81.5511, 0.29 ) }
    dend_43 { pt3dadd( -37.4163, 82.1631, -81.6411, 0.29 ) }
    dend_43 { pt3dadd( -37.5574, 82.8662, -81.8059, 1.11 ) }
    dend_43 { pt3dadd( -37.7298, 83.4331, -81.841, 1.11 ) }
    dend_43 { pt3dadd( -38.7979, 85.9572, -81.5695, 1.11 ) }
    dend_43 { pt3dadd( -38.8175, 86.0968, -81.7223, 1.11 ) }
    dend_43 { pt3dadd( -38.8164, 86.2044, -81.899, 1.11 ) }
    dend_43 { pt3dadd( -38.8352, 87.5113, -83.7779, 0.29 ) }
    dend_43 { pt3dadd( -38.8234, 87.6764, -84.0341, 0.29 ) }
    dend_43 { pt3dadd( -38.8135, 87.8206, -84.2483, 0.29 ) }
    dend_43 { pt3dadd( -38.7383, 88.7779, -85.6901, 1.25 ) }
    dend_43 { pt3dadd( -38.7312, 88.881, -85.8367, 1.25 ) }
    dend_43 { pt3dadd( -38.7138, 89.1569, -86.1989, 1.55 ) }
    dend_43 { pt3dadd( -38.6468, 91.6584, -89.2961, 0.22 ) }
    dend_43 { pt3dadd( -38.6403, 92.0761, -89.8025, 0.22 ) }
    dend_43 { pt3dadd( -38.6396, 92.135, -89.8683, 0.22 ) }
    dend_43 { pt3dadd( -38.6349, 93.276, -90.998, 1.25 ) }
    dend_43 { pt3dadd( -38.6247, 93.6286, -91.3072, 1.47 ) }
    dend_43 { pt3dadd( -38.5484, 95.3728, -92.585, 0.74 ) }
    dend_43 { pt3dadd( -38.4649, 96.8579, -93.3992, 0.22 ) }
    dend_43 { pt3dadd( -38.404, 97.6604, -93.8099, 0.52 ) }
    dend_43 { pt3dadd( -38.371, 98.2717, -94.0673, 0.52 ) }
    dend_43 { pt3dadd( -38.346, 99.2003, -94.3485, 0.29 ) }
    dend_43 { pt3dadd( -38.3401, 99.8125, -94.4794, 0.44 ) }
    dend_43 { pt3dadd( -38.3507, 100.699, -94.5558, 0.74 ) }
    dend_43 { pt3dadd( -38.3875, 101.589, -94.5979, 1.18 ) }
    dend_43 { pt3dadd( -38.4373, 102.814, -94.6943, 0.22 ) }
    dend_43 { pt3dadd( -38.4383, 103.457, -94.7889, 0.22 ) }
    dend_43 { pt3dadd( -38.359, 103.946, -94.9343, 0.22 ) }
    dend_43 { pt3dadd( -38.3359, 104.009, -94.9953, 0.22 ) }
    dend_43 { pt3dadd( -37.9739, 104.708, -95.8953, 0.29 ) }
    dend_43 { pt3dadd( -37.9453, 104.753, -95.9665, 0.29 ) }
    dend_43 { pt3dadd( -37.4585, 105.492, -97.222, 0.29 ) }
    dend_43 { pt3dadd( -36.951, 106.212, -98.4929, 1.47 ) }
    dend_43 { pt3dadd( -35.4759, 108.214, -102.003, 0.52 ) }
    dend_43 { pt3dadd( -34.9784, 108.873, -103.133, 0.07 ) }
    dend_43 { pt3dadd( -34.3947, 109.621, -104.495, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -34.0375, 110.075, -105.316, 0.96 ) }
    dend_43 { pt3dadd( -33.4512, 110.861, -106.68, 0.15 ) }
    dend_43 { pt3dadd( -33.1116, 111.34, -107.486, 0.15 ) }
    dend_43 { pt3dadd( -32.4803, 112.231, -108.879, 1.84 ) }
    dend_43 { pt3dadd( -31.299, 114.142, -111.91, 0.66 ) }
    dend_43 { pt3dadd( -31.0904, 114.543, -112.516, 0.22 ) }
    dend_43 { pt3dadd( -30.8951, 114.982, -113.184, 0.22 ) }
    dend_43 { pt3dadd( -30.8644, 115.108, -113.364, 0.22 ) }
    dend_43 { pt3dadd( -30.8598, 115.161, -113.438, 0.22 ) }
    dend_43 { pt3dadd( -30.895, 115.5, -113.758, 0.22 ) }
    dend_43 { pt3dadd( -30.9276, 116.069, -114.028, 0.22 ) }
    dend_43 { pt3dadd( -30.8869, 116.379, -114.241, 0.22 ) }
    dend_43 { pt3dadd( -30.8689, 116.456, -114.303, 0.22 ) }
    dend_43 { pt3dadd( -30.8186, 116.81, -114.649, 0.81 ) }
    dend_43 { pt3dadd( -30.8007, 117.061, -114.97, 0.81 ) }
    dend_43 { pt3dadd( -30.605, 118.456, -116.837, 0.29 ) }
    dend_43 { pt3dadd( -30.5968, 118.511, -116.91, 0.29 ) }
    dend_43 { pt3dadd( -30.5764, 118.671, -117.121, 0.29 ) }
    dend_43 { pt3dadd( -30.4806, 119.528, -118.249, 1.55 ) }
    dend_43 { pt3dadd( -30.2998, 120.814, -120.34, 0.15 ) }
    dend_43 { pt3dadd( -30.1905, 121.445, -121.402, 0.15 ) }
    dend_43 { pt3dadd( -30.1425, 121.682, -121.799, 0.15 ) }
    dend_43 { pt3dadd( -29.9183, 122.473, -123.08, 1.18 ) }
    dend_43 { pt3dadd( -29.8876, 122.56, -123.217, 1.18 ) }
    dend_43 { pt3dadd( -28.8035, 125.094, -127.023, 0.37 ) }
    dend_43 { pt3dadd( -28.5715, 125.64, -127.827, 1.4 ) }
    dend_43 { pt3dadd( -28.2734, 126.381, -128.982, 0.07 ) }
    dend_43 { pt3dadd( -28.0485, 126.95, -129.864, 0.07 ) }
    dend_43 { pt3dadd( -28.0208, 127.026, -129.97, 0.07 ) }
    dend_43 { pt3dadd( -27.9527, 127.274, -130.261, 0.07 ) }
    dend_43 { pt3dadd( -27.9215, 127.687, -130.611, 0.07 ) }
    dend_43 { pt3dadd( -27.9186, 129.103, -131.847, 0.07 ) }
    dend_43 { pt3dadd( -27.931, 129.943, -132.536, 0.96 ) }
    dend_43 { pt3dadd( -27.9351, 130.44, -132.933, 1.25 ) }
    dend_43 { pt3dadd( -27.8923, 131.076, -133.454, 1.11 ) }
    dend_43 { pt3dadd( -27.6634, 132.814, -134.85, 0.29 ) }
    dend_43 { pt3dadd( -27.5802, 133.294, -135.311, 0.29 ) }
    dend_43 { pt3dadd( -27.4824, 133.792, -135.807, 0.29 ) }
    dend_43 { pt3dadd( -27.4238, 134.054, -136.092, 0.29 ) }
    dend_43 { pt3dadd( -27.135, 135.324, -137.624, 1.25 ) }
    dend_43 { pt3dadd( -27.0885, 135.572, -137.944, 1.4 ) }
    dend_43 { pt3dadd( -26.9029, 137.769, -140.922, 0.37 ) }
    dend_43 { pt3dadd( -26.9137, 138.028, -141.286, 0.74 ) }
    dend_43 { pt3dadd( -26.9744, 138.326, -141.741, 0.88 ) }
    dend_43 { pt3dadd( -27.0157, 138.437, -141.918, 0.88 ) }
    dend_43 { pt3dadd( -27.2476, 138.886, -142.66, 0.22 ) }
    dend_43 { pt3dadd( -27.5665, 139.402, -143.556, 0.44 ) }
    dend_43 { pt3dadd( -27.6635, 139.532, -143.761, 0.81 ) }
    dend_43 { pt3dadd( -28.4645, 140.523, -145.301, 0.37 ) }
    dend_43 { pt3dadd( -28.6534, 140.717, -145.57, 0.37 ) }
    dend_43 { pt3dadd( -29.7713, 141.758, -146.765, 0.07 ) }
    dend_43 { pt3dadd( -30.0222, 141.975, -146.967, 0.07 ) }
    dend_43 { pt3dadd( -30.8275, 142.668, -147.4, 0.74 ) }
    dend_43 { pt3dadd( -31.2634, 143.053, -147.573, 0.96 ) }
    dend_43 { pt3dadd( -32.597, 144.218, -147.853, 0.22 ) }
    dend_43 { pt3dadd( -33.1607, 144.701, -147.941, 0.22 ) }
    dend_43 { pt3dadd( -33.4246, 144.915, -147.962, 0.22 ) }
    dend_43 { pt3dadd( -33.6336, 145.094, -147.993, 0.22 ) }
    dend_43 { pt3dadd( -34.4193, 145.825, -148.309, 0.81 ) }
    dend_43 { pt3dadd( -34.5284, 145.935, -148.369, 0.81 ) }
    dend_43 { pt3dadd( -34.9503, 146.389, -148.693, 1.33 ) }
    dend_43 { pt3dadd( -35.613, 147.074, -149.336, 1.25 ) }
    dend_43 { pt3dadd( -35.7637, 147.236, -149.505, 1.25 ) }
    dend_43 { pt3dadd( -36.915, 148.628, -150.954, 0.29 ) }
    dend_43 { pt3dadd( -36.9548, 148.682, -151.01, 0.29 ) }
    dend_43 { pt3dadd( -37.3493, 149.297, -151.688, 0.88 ) }
    dend_43 { pt3dadd( -37.9446, 150.287, -152.841, 0.22 ) }
    dend_43 { pt3dadd( -38.1555, 150.645, -153.264, 0.52 ) }
    dend_43 { pt3dadd( -38.468, 151.147, -153.859, 0.52 ) }
    dend_43 { pt3dadd( -38.7793, 151.641, -154.418, 0.15 ) }
    dend_43 { pt3dadd( -39.4107, 152.637, -155.494, 0.96 ) }
    dend_43 { pt3dadd( -39.6271, 152.981, -155.847, 0.96 ) }
    dend_43 { pt3dadd( -39.7618, 153.192, -156.071, 1.03 ) }
    dend_43 { pt3dadd( -40.7356, 154.759, -157.735, 0.29 ) }
    dend_43 { pt3dadd( -40.9375, 155.144, -158.199, 0.29 ) }
    dend_43 { pt3dadd( -41.036, 155.374, -158.468, 0.29 ) }
    dend_43 { pt3dadd( -41.057, 155.431, -158.533, 0.29 ) }
    dend_43 { pt3dadd( -41.3389, 156.339, -159.528, 0.29 ) }
    dend_43 { pt3dadd( -41.5052, 156.957, -160.18, 1.55 ) }
    dend_43 { pt3dadd( -42.1996, 159.881, -162.978, 0.22 ) }
    dend_43 { pt3dadd( -42.318, 160.335, -163.403, 0.22 ) }
    dend_43 { pt3dadd( -42.3398, 160.408, -163.468, 0.22 ) }
    dend_43 { pt3dadd( -42.5672, 161.034, -163.973, 0.22 ) }
    dend_43 { pt3dadd( -42.5971, 161.101, -164.021, 0.22 ) }
    dend_43 { pt3dadd( -43.0367, 161.909, -164.617, 0.22 ) }
    dend_43 { pt3dadd( -43.5635, 162.7, -165.096, 0.88 ) }
    dend_43 { pt3dadd( -43.8049, 163.017, -165.331, 1.25 ) }
    dend_43 { pt3dadd( -44.2803, 163.595, -165.818, 1.03 ) }
    dend_43 { pt3dadd( -44.7827, 164.134, -166.335, 1.03 ) }
    dend_43 { pt3dadd( -46.3356, 165.65, -167.885, 0.44 ) }
    dend_43 { pt3dadd( -46.4429, 165.745, -167.993, 0.44 ) }
    dend_43 { pt3dadd( -46.8549, 166.105, -168.37, 0.44 ) }
    dend_43 { pt3dadd( -46.909, 166.153, -168.418, 0.44 ) }
    dend_43 { pt3dadd( -47.2699, 166.494, -168.713, 0.52 ) }
    dend_43 { pt3dadd( -47.5423, 166.779, -168.875, 0.52 ) }
    dend_43 { pt3dadd( -47.6127, 166.852, -168.887, 0.52 ) }
    dend_43 { pt3dadd( -48.0068, 167.285, -168.965, 0.52 ) }
    dend_43 { pt3dadd( -48.0068, 167.285, -168.965, 0.52 ) }
    dend_43 { pt3dadd( -48.144, 167.435, -168.991, 0.52 ) }
    dend_43 { pt3dadd( -48.8093, 168.165, -169.109, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -49.1785, 168.56, -169.168, 0.07 ) }
    dend_43 { pt3dadd( -49.6921, 168.954, -169.209, 0.07 ) }
    dend_43 { pt3dadd( -50.5038, 169.501, -169.242, 0.96 ) }
    dend_43 { pt3dadd( -50.8218, 169.701, -169.259, 1.18 ) }
    dend_43 { pt3dadd( -51.4265, 170.074, -169.289, 1.18 ) }
    dend_43 { pt3dadd( -51.7732, 170.292, -169.309, 1.18 ) }
    dend_43 { pt3dadd( -53.551, 171.522, -169.445, 0.22 ) }
    dend_43 { pt3dadd( -54.0796, 171.913, -169.495, 0.29 ) }
    dend_43 { pt3dadd( -55.1552, 172.721, -169.612, 0.96 ) }
    dend_43 { pt3dadd( -55.4808, 172.966, -169.65, 1.18 ) }
    dend_43 { pt3dadd( -56.3795, 173.706, -169.764, 0.37 ) }
    dend_43 { pt3dadd( -56.9412, 174.244, -169.842, 0.22 ) }
    dend_43 { pt3dadd( -57.2768, 174.671, -169.896, 0.22 ) }
    dend_43 { pt3dadd( -57.6587, 175.204, -169.94, 0.22 ) }
    dend_43 { pt3dadd( -57.7131, 175.29, -169.942, 0.22 ) }
    dend_43 { pt3dadd( -58.2273, 176.145, -169.94, 0.22 ) }
    dend_43 { pt3dadd( -58.5468, 176.801, -169.909, 0.29 ) }
    dend_43 { pt3dadd( -58.7337, 177.256, -169.89, 0.22 ) }
    dend_43 { pt3dadd( -58.8972, 177.688, -169.878, 0.22 ) }
    dend_43 { pt3dadd( -58.9449, 177.806, -169.877, 0.22 ) }
    dend_43 { pt3dadd( -59.0513, 177.99, -169.88, 0.22 ) }
    dend_43 { pt3dadd( -59.1716, 178.137, -169.89, 0.22 ) }
    dend_43 { pt3dadd( -59.5574, 178.529, -169.922, 0.81 ) }
    dend_43 { pt3dadd( -59.9447, 178.887, -169.953, 1.18 ) }
    dend_43 { pt3dadd( -60.0096, 178.947, -169.957, 1.18 ) }
    dend_43 { pt3dadd( -60.6391, 179.483, -169.997, 1.03 ) }
    dend_43 { pt3dadd( -60.8094, 179.623, -170.006, 1.03 ) }
    dend_43 { pt3dadd( -61.989, 180.618, -170.054, 0.29 ) }
    dend_43 { pt3dadd( -62.3829, 180.944, -170.064, 0.29 ) }
    dend_43 { pt3dadd( -62.4385, 180.994, -170.075, 0.29 ) }
    dend_43 { pt3dadd( -62.9524, 181.513, -170.255, 0.29 ) }
    dend_43 { pt3dadd( -63.2328, 181.844, -170.448, 0.29 ) }
    dend_43 { pt3dadd( -63.4556, 182.153, -170.677, 0.37 ) }
    dend_43 { pt3dadd( -63.4813, 182.207, -170.758, 0.37 ) }
    dend_43 { pt3dadd( -63.8527, 183.078, -172.205, 0.37 ) }
    dend_43 { pt3dadd( -63.9475, 183.323, -172.632, 1.11 ) }
    dend_43 { pt3dadd( -64.1048, 183.795, -173.517, 1.33 ) }
    dend_43 { pt3dadd( -64.1344, 183.885, -173.701, 1.33 ) }
    dend_43 { pt3dadd( -64.6756, 185.492, -177.228, 0.07 ) }
    dend_43 { pt3dadd( -64.765, 185.748, -177.818, 0.81 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -31.2586, 27.2746, -15.4651, 1.11 ) }
    dend_35 { pt3dadd( -31.9711, 26.9645, -15.6749, 1.11 ) }
    dend_35 { pt3dadd( -33.2464, 26.5856, -15.9875, 0.37 ) }
    dend_35 { pt3dadd( -33.8443, 26.4654, -16.0964, 0.37 ) }
    dend_35 { pt3dadd( -34.912, 26.293, -16.2644, 0.88 ) }
    dend_35 { pt3dadd( -35.4705, 26.2142, -16.358, 1.18 ) }
    dend_35 { pt3dadd( -36.1897, 26.1768, -16.5109, 1.25 ) }
    dend_35 { pt3dadd( -36.9807, 26.2266, -16.6869, 1.18 ) }
    dend_35 { pt3dadd( -37.9104, 26.3871, -16.8948, 0.59 ) }
    dend_35 { pt3dadd( -38.3602, 26.4874, -17.0125, 0.52 ) }
    dend_35 { pt3dadd( -38.8441, 26.6009, -17.1612, 0.52 ) }
    dend_35 { pt3dadd( -40.5141, 26.9684, -17.7025, 0.52 ) }
    dend_35 { pt3dadd( -41.0161, 27.0754, -17.8773, 0.52 ) }
    dend_35 { pt3dadd( -41.5175, 27.1889, -18.0559, 0.81 ) }
    dend_35 { pt3dadd( -42.1828, 27.3534, -18.2909, 1.11 ) }
    dend_35 { pt3dadd( -42.7645, 27.512, -18.4701, 1.18 ) }
    dend_35 { pt3dadd( -43.3461, 27.6887, -18.6658, 0.81 ) }
    dend_35 { pt3dadd( -44.492, 28.0397, -19.1228, 0.52 ) }
    dend_35 { pt3dadd( -45.1129, 28.2605, -19.4093, 1.03 ) }
    dend_35 { pt3dadd( -45.4758, 28.4185, -19.5918, 1.18 ) }
    dend_35 { pt3dadd( -46.3344, 28.8459, -20.0406, 1.11 ) }
    dend_35 { pt3dadd( -47.5695, 29.5021, -20.6895, 0.52 ) }
    dend_35 { pt3dadd( -48.2486, 29.8565, -21.0414, 0.22 ) }
    dend_35 { pt3dadd( -48.8455, 30.1332, -21.338, 0.59 ) }
    dend_35 { pt3dadd( -49.4004, 30.3287, -21.594, 0.74 ) }
    dend_35 { pt3dadd( -50.342, 30.5362, -21.9748, 0.37 ) }
    dend_35 { pt3dadd( -50.9046, 30.545, -22.1829, 0.37 ) }
    dend_35 { pt3dadd( -51.3582, 30.5014, -22.3224, 0.74 ) }
    dend_35 { pt3dadd( -52.0213, 30.4126, -22.5325, 1.18 ) }
    dend_35 { pt3dadd( -52.7516, 30.2765, -22.7803, 0.96 ) }
    dend_35 { pt3dadd( -53.3111, 30.1613, -22.9733, 0.44 ) }
    dend_35 { pt3dadd( -54.9823, 29.8349, -23.5499, 0.37 ) }
    dend_35 { pt3dadd( -55.5937, 29.7212, -23.7642, 0.37 ) }
    dend_35 { pt3dadd( -56.1287, 29.6386, -23.9517, 0.88 ) }
    dend_35 { pt3dadd( -56.8728, 29.5632, -24.2084, 1.55 ) }
    dend_35 { pt3dadd( -57.676, 29.5194, -24.4789, 1.69 ) }
    dend_35 { pt3dadd( -57.9999, 29.5246, -24.5715, 1.69 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 77/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -31.2586, 27.2746, -15.4651, 0.59 ) }
    dend_32 { pt3dadd( -31.9236, 27.7865, -14.5989, 0.59 ) }
    dend_32 { pt3dadd( -32.3153, 28.0495, -14.1581, 0.74 ) }
    dend_32 { pt3dadd( -33.3777, 28.68, -12.9695, 0.44 ) }
    dend_32 { pt3dadd( -34.1429, 29.1028, -12.1733, 0.37 ) }
    dend_32 { pt3dadd( -35.8233, 29.9694, -10.4939, 0.37 ) }
    dend_32 { pt3dadd( -36.6288, 30.3543, -9.72555, 0.52 ) }
    dend_32 { pt3dadd( -37.0036, 30.4965, -9.39021, 0.74 ) }
    dend_32 { pt3dadd( -38.353, 30.9072, -8.21878, 0.74 ) }
    dend_32 { pt3dadd( -39.083, 31.1203, -7.58773, 0.22 ) }
    dend_32 { pt3dadd( -39.6329, 31.2777, -7.07359, 0.74 ) }
    dend_32 { pt3dadd( -39.9771, 31.3852, -6.76042, 0.74 ) }
    dend_32 { pt3dadd( -40.5077, 31.5783, -6.24765, 0.74 ) }
    dend_32 { pt3dadd( -41.1842, 31.8663, -5.64526, 0.15 ) }
    dend_32 { pt3dadd( -42.289, 32.3091, -4.9146, 0.96 ) }
    dend_32 { pt3dadd( -42.796, 32.4903, -4.62472, 0.96 ) }
    dend_32 { pt3dadd( -43.1854, 32.6223, -4.45759, 0.96 ) }
    dend_32 { pt3dadd( -43.8001, 32.8164, -4.24229, 0.81 ) }
    dend_32 { pt3dadd( -44.4649, 33.0063, -4.09578, 0.44 ) }
    dend_32 { pt3dadd( -45.6969, 33.2979, -3.91506, 0.22 ) }
    dend_32 { pt3dadd( -45.9819, 33.3451, -3.88521, 0.52 ) }
    dend_32 { pt3dadd( -46.3051, 33.3911, -3.84216, 0.81 ) }
    dend_32 { pt3dadd( -47.1972, 33.5186, -3.70154, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_32 { pt3dadd( -48.232, 33.7025, -3.53902, 0.22 ) }
    dend_32 { pt3dadd( -48.7065, 33.8096, -3.46896, 0.37 ) }
    dend_32 { pt3dadd( -49.0299, 33.9207, -3.42709, 0.37 ) }
    dend_32 { pt3dadd( -49.0893, 33.9433, -3.42911, 0.37 ) }
    dend_32 { pt3dadd( -49.4374, 34.0652, -3.4691, 0.44 ) }
    dend_32 { pt3dadd( -50.7961, 34.5223, -3.72129, 0.29 ) }
    dend_32 { pt3dadd( -51.2422, 34.6658, -3.81033, 1.03 ) }
    dend_32 { pt3dadd( -52.0001, 34.9018, -3.96746, 1.03 ) }
    dend_32 { pt3dadd( -53.6853, 35.4182, -4.30476, 0.29 ) }
    dend_32 { pt3dadd( -54.6919, 35.7122, -4.55067, 0.29 ) }
    dend_32 { pt3dadd( -55.3109, 35.8965, -4.72041, 0.81 ) }
    dend_32 { pt3dadd( -56.2125, 36.1917, -4.99128, 0.52 ) }
    dend_32 { pt3dadd( -56.433, 36.2613, -5.05782, 0.96 ) }
    dend_32 { pt3dadd( -56.9351, 36.4072, -5.20404, 1.25 ) }
    dend_32 { pt3dadd( -57.9891, 36.7805, -5.46395, 0.81 ) }
    dend_32 { pt3dadd( -58.9165, 37.2, -5.82681, 0.29 ) }
    dend_32 { pt3dadd( -59.3939, 37.4416, -6.05343, 0.81 ) }
    dend_32 { pt3dadd( -66.7014, 40.2442, -5.08522, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 18/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -20.6589, 45.669, -14.6069, 1.33 ) }
    dend_19 { pt3dadd( -21.8049, 47.2877, -19.2701, 1.33 ) }
    dend_19 { pt3dadd( -21.9956, 47.564, -20.04, 1.18 ) }
    dend_19 { pt3dadd( -22.1575, 47.8116, -20.6659, 0.96 ) }
    dend_19 { pt3dadd( -22.6818, 48.6328, -22.6414, 0.44 ) }
    dend_19 { pt3dadd( -22.6982, 48.6592, -22.7003, 0.44 ) }
    dend_19 { pt3dadd( -23.2818, 49.6337, -24.6978, 0.37 ) }
    dend_19 { pt3dadd( -23.3466, 49.7512, -24.8572, 0.88 ) }
    dend_19 { pt3dadd( -23.5626, 50.1392, -25.3878, 0.22 ) }
    dend_19 { pt3dadd( -23.5808, 50.1731, -25.4288, 0.22 ) }
    dend_19 { pt3dadd( -23.9056, 50.8511, -26.0277, 1.11 ) }
    dend_19 { pt3dadd( -24.066, 51.2188, -26.2869, 1.47 ) }
    dend_19 { pt3dadd( -24.3803, 51.9378, -26.6595, 0.37 ) }
    dend_19 { pt3dadd( -24.4859, 52.1625, -26.7751, 0.22 ) }
    dend_19 { pt3dadd( -24.7022, 52.6055, -27.0008, 0.22 ) }
    dend_19 { pt3dadd( -25.0144, 53.2359, -27.29, 1.03 ) }
    dend_19 { pt3dadd( -25.5784, 54.3829, -27.7396, 0.22 ) }
    dend_19 { pt3dadd( -25.7593, 54.7536, -27.8698, 0.29 ) }
    dend_19 { pt3dadd( -25.9842, 55.2538, -28.0415, 0.29 ) }
    dend_19 { pt3dadd( -26.2079, 55.7811, -28.226, 0.81 ) }
    dend_19 { pt3dadd( -26.4562, 56.4099, -28.4428, 1.55 ) }
    dend_19 { pt3dadd( -26.6596, 56.9644, -28.6204, 1.55 ) }
    dend_19 { pt3dadd( -26.702, 57.0951, -28.6633, 1.55 ) }
    dend_19 { pt3dadd( -27.0516, 58.4635, -29.1436, 0.22 ) }
    dend_19 { pt3dadd( -27.1123, 58.768, -29.2571, 0.22 ) }
    dend_19 { pt3dadd( -27.1233, 58.8373, -29.2827, 0.22 ) }
    dend_19 { pt3dadd( -27.1731, 59.2407, -29.4385, 0.44 ) }
    dend_19 { pt3dadd( -27.2075, 59.5662, -29.5585, 0.59 ) }
    dend_19 { pt3dadd( -27.2549, 60.1527, -29.733, 0.22 ) }
    dend_19 { pt3dadd( -27.2573, 60.2172, -29.7436, 0.22 ) }
    dend_19 { pt3dadd( -27.2711, 60.7506, -29.857, 0.22 ) }
    dend_19 { pt3dadd( -27.2762, 60.8017, -29.8782, 0.22 ) }
    dend_19 { pt3dadd( -27.3116, 61.0316, -30.003, 0.22 ) }
    dend_19 { pt3dadd( -27.373, 61.5037, -30.295, 1.25 ) }
    dend_19 { pt3dadd( -27.4021, 61.7363, -30.4484, 1.25 ) }
    dend_19 { pt3dadd( -27.4576, 62.1878, -30.7433, 1.25 ) }
    dend_19 { pt3dadd( -27.6043, 63.6275, -31.6317, 0.44 ) }
    dend_19 { pt3dadd( -27.6573, 64.1016, -31.9306, 0.29 ) }
    dend_19 { pt3dadd( -27.7204, 64.6018, -32.2391, 0.29 ) }
    dend_19 { pt3dadd( -27.7586, 64.7828, -32.359, 0.29 ) }
    dend_19 { pt3dadd( -27.7983, 65.0035, -32.5014, 0.29 ) }
    dend_19 { pt3dadd( -27.9066, 65.777, -32.9531, 0.88 ) }
    dend_19 { pt3dadd( -27.9842, 66.6049, -33.391, 0.29 ) }
    dend_19 { pt3dadd( -28.0288, 67.1285, -33.7024, 0.29 ) }
    dend_19 { pt3dadd( -28.1302, 68.2025, -34.383, 1.25 ) }
    dend_19 { pt3dadd( -28.2133, 69.2364, -35.0433, 1.4 ) }
    dend_19 { pt3dadd( -28.2367, 69.6427, -35.3042, 1.4 ) }
    dend_19 { pt3dadd( -28.2663, 70.3291, -35.7786, 0.29 ) }
    dend_19 { pt3dadd( -28.2766, 71.21, -36.3792, 1.03 ) }
    dend_19 { pt3dadd( -28.2837, 71.3326, -36.4823, 1.03 ) }
    dend_19 { pt3dadd( -28.3587, 72.0463, -37.1231, 0.29 ) }
    dend_19 { pt3dadd( -28.3989, 72.2153, -37.2951, 0.44 ) }
    dend_19 { pt3dadd( -28.5953, 72.8222, -38.0824, 0.52 ) }
    dend_19 { pt3dadd( -28.6157, 72.8834, -38.1676, 0.66 ) }
    dend_19 { pt3dadd( -28.8767, 73.9601, -39.7129, 0.22 ) }
    dend_19 { pt3dadd( -28.9198, 74.3863, -40.3331, 1.11 ) }
    dend_19 { pt3dadd( -28.9188, 74.4474, -40.4238, 1.11 ) }
    dend_19 { pt3dadd( -28.7721, 75.494, -41.9215, 1.25 ) }
    dend_19 { pt3dadd( -28.5764, 76.1121, -42.7345, 0.52 ) }
    dend_19 { pt3dadd( -28.2998, 76.6907, -43.4682, 0.52 ) }
    dend_19 { pt3dadd( -28.0181, 77.0841, -43.9688, 0.44 ) }
    dend_19 { pt3dadd( -27.9827, 77.1268, -44.0227, 0.44 ) }
    dend_19 { pt3dadd( -27.4249, 77.7666, -44.7311, 0.96 ) }
    dend_19 { pt3dadd( -27.2022, 78.0121, -44.9513, 1.18 ) }
    dend_19 { pt3dadd( -27.0627, 78.1668, -45.0997, 1.11 ) }
    dend_19 { pt3dadd( -26.6675, 78.7009, -45.6268, 0.88 ) }
    dend_19 { pt3dadd( -26.1639, 79.3298, -46.2649, 0.22 ) }
    dend_19 { pt3dadd( -25.9038, 79.6464, -46.6144, 0.81 ) }
    dend_19 { pt3dadd( -25.7677, 79.8202, -46.8, 0.88 ) }
    dend_19 { pt3dadd( -25.6933, 79.9392, -46.9456, 0.88 ) }
    dend_19 { pt3dadd( -25.3519, 80.5739, -47.7871, 0.66 ) }
    dend_19 { pt3dadd( -25.0702, 81.1353, -48.568, 0.22 ) }
    dend_19 { pt3dadd( -24.8043, 81.7422, -49.5168, 0.81 ) }
    dend_19 { pt3dadd( -24.6728, 82.059, -50.0451, 0.81 ) }
    dend_19 { pt3dadd( -24.3363, 82.8091, -51.3158, 0.29 ) }
    dend_19 { pt3dadd( -24.3005, 82.8794, -51.4246, 0.29 ) }
    dend_19 { pt3dadd( -24.1093, 83.1958, -51.8577, 0.29 ) }
    dend_19 { pt3dadd( -24.0795, 83.2318, -51.9048, 0.29 ) }
    dend_19 { pt3dadd( -23.4156, 83.7315, -52.4362, 1.11 ) }
    dend_19 { pt3dadd( -23.0291, 83.9633, -52.6643, 1.47 ) }
    dend_19 { pt3dadd( -21.8376, 84.7101, -53.5519, 0.88 ) }
    dend_19 { pt3dadd( -21.7623, 84.7735, -53.6436, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_19 { pt3dadd( -20.9912, 85.6574, -55.0437, 0.29 ) }
    dend_19 { pt3dadd( -20.9044, 85.7784, -55.2476, 0.29 ) }
    dend_19 { pt3dadd( -20.8945, 85.819, -55.3743, 0.29 ) }
    dend_19 { pt3dadd( -20.8353, 86.3045, -57.1952, 0.29 ) }
    dend_19 { pt3dadd( -20.8396, 86.4153, -57.6773, 0.29 ) }
    dend_19 { pt3dadd( -20.8451, 86.473, -57.9288, 0.29 ) }
    dend_19 { pt3dadd( -20.8533, 86.5045, -58.0584, 0.29 ) }
    dend_19 { pt3dadd( -21.131, 87.5617, -62.2746, 1.33 ) }
    dend_19 { pt3dadd( -21.1614, 87.6709, -62.6837, 1.4 ) }
    dend_19 { pt3dadd( -21.1913, 87.7779, -63.0495, 1.4 ) }
    dend_19 { pt3dadd( -21.311, 88.093, -64.0978, 0.29 ) }
    dend_19 { pt3dadd( -21.3901, 88.2805, -64.654, 0.29 ) }
    dend_19 { pt3dadd( -21.4005, 88.3169, -64.7404, 0.29 ) }
    dend_19 { pt3dadd( -21.4299, 88.685, -65.3106, 0.81 ) }
    dend_19 { pt3dadd( -21.4289, 88.8278, -65.584, 0.96 ) }
    dend_19 { pt3dadd( -21.4276, 88.8577, -65.6456, 0.96 ) }
    dend_19 { pt3dadd( -21.3416, 89.7772, -67.6869, 0.22 ) }
    dend_19 { pt3dadd( -21.2855, 90.1014, -68.5146, 1.18 ) }
    dend_19 { pt3dadd( -21.2571, 90.1987, -68.7834, 1.03 ) }
    dend_19 { pt3dadd( -20.9762, 91.0428, -71.0072, 0.22 ) }
    dend_19 { pt3dadd( -20.9353, 91.1879, -71.3664, 0.22 ) }
    dend_19 { pt3dadd( -20.9024, 91.3247, -71.6832, 0.22 ) }
    dend_19 { pt3dadd( -20.7474, 92.1051, -73.3242, 0.22 ) }
    dend_19 { pt3dadd( -20.6873, 92.458, -74.0311, 1.33 ) }
    dend_19 { pt3dadd( -20.5354, 93.2125, -75.445, 0.29 ) }
    dend_19 { pt3dadd( -20.3647, 93.9152, -76.616, 1.18 ) }
    dend_19 { pt3dadd( -20.3189, 94.1696, -77.0217, 0.74 ) }
    dend_19 { pt3dadd( -20.3083, 94.2841, -77.1861, 0.74 ) }
    dend_19 { pt3dadd( -20.3986, 94.8098, -77.9633, 0.29 ) }
    dend_19 { pt3dadd( -20.4587, 94.9658, -78.2154, 0.29 ) }
    dend_19 { pt3dadd( -20.5541, 95.1672, -78.5694, 0.29 ) }
    dend_19 { pt3dadd( -20.8921, 95.7981, -79.694, 1.62 ) }
    dend_19 { pt3dadd( -20.9628, 95.921, -79.9306, 1.62 ) }
    dend_19 { pt3dadd( -21.9193, 97.4102, -83.0184, 0.29 ) }
    dend_19 { pt3dadd( -22.0584, 97.6022, -83.4498, 0.29 ) }
    dend_19 { pt3dadd( -22.2621, 97.8573, -84.0818, 0.29 ) }
    dend_19 { pt3dadd( -22.2791, 97.8801, -84.1422, 0.29 ) }
    dend_19 { pt3dadd( -22.7411, 98.4002, -85.6563, 1.11 ) }
    dend_19 { pt3dadd( -22.8325, 98.4734, -85.8981, 0.96 ) }
    dend_19 { pt3dadd( -22.8678, 98.4873, -85.9556, 0.96 ) }
    dend_19 { pt3dadd( -23.3853, 98.5787, -86.9751, 0.81 ) }
    dend_19 { pt3dadd( -23.5925, 98.606, -87.3937, 0.81 ) }
    dend_19 { pt3dadd( -24.2372, 98.7027, -88.6533, 0.22 ) }
    dend_19 { pt3dadd( -24.2809, 98.7114, -88.7368, 0.74 ) }
    dend_19 { pt3dadd( -24.3789, 98.7286, -88.9342, 0.74 ) }
    dend_19 { pt3dadd( -26.4809, 99.1572, -93.2527, 1.25 ) }
    dend_19 { pt3dadd( -27.8345, 99.4807, -96.0615, 0.22 ) }
    dend_19 { pt3dadd( -28.2742, 99.6019, -97.0681, 1.47 ) }
    dend_19 { pt3dadd( -29.0278, 99.8697, -99.0654, 0.15 ) }
    dend_19 { pt3dadd( -30.0943, 100.311, -102.098, 0.59 ) }
    dend_19 { pt3dadd( -30.3309, 100.429, -102.825, 0.22 ) }
    dend_19 { pt3dadd( -30.5228, 100.564, -103.512, 0.96 ) }
    dend_19 { pt3dadd( -31.1562, 101.256, -106.653, 1.11 ) }
    dend_19 { pt3dadd( -31.5483, 101.9, -109.43, 0.22 ) }
    dend_19 { pt3dadd( -31.5816, 102.013, -109.839, 0.22 ) }
    dend_19 { pt3dadd( -31.5909, 102.095, -110.074, 0.22 ) }
    dend_19 { pt3dadd( -31.6209, 102.427, -111.014, 1.33 ) }
    dend_19 { pt3dadd( -31.6418, 102.767, -111.819, 1.33 ) }
    dend_19 { pt3dadd( -31.6464, 102.812, -111.881, 1.33 ) }
    dend_19 { pt3dadd( -31.6995, 103.613, -112.622, 0.29 ) }
    dend_19 { pt3dadd( -31.7161, 103.792, -112.784, 0.29 ) }
    dend_19 { pt3dadd( -31.74, 103.985, -112.935, 0.29 ) }
    dend_19 { pt3dadd( -31.7727, 104.245, -113.161, 0.29 ) }
    dend_19 { pt3dadd( -31.7734, 104.361, -113.271, 0.29 ) }
    dend_19 { pt3dadd( -31.7694, 104.491, -113.522, 0.29 ) }
    dend_19 { pt3dadd( -31.7633, 104.647, -113.921, 0.29 ) }
    dend_19 { pt3dadd( -31.7552, 104.737, -114.153, 0.29 ) }
    dend_19 { pt3dadd( -31.6857, 105.402, -115.911, 1.47 ) }
    dend_19 { pt3dadd( -31.6831, 105.438, -116.001, 1.47 ) }
    dend_19 { pt3dadd( -31.6522, 106.597, -118.859, 0.29 ) }
    dend_19 { pt3dadd( -31.6541, 106.653, -118.99, 0.29 ) }
    dend_19 { pt3dadd( -31.6821, 106.967, -119.662, 0.29 ) }
    dend_19 { pt3dadd( -31.6886, 106.994, -119.722, 0.29 ) }
    dend_19 { pt3dadd( -31.773, 107.264, -120.272, 0.29 ) }
    dend_19 { pt3dadd( -31.801, 107.358, -120.448, 0.29 ) }
    dend_19 { pt3dadd( -31.8653, 107.879, -121.196, 0.29 ) }
    dend_19 { pt3dadd( -31.8751, 108.018, -121.401, 1.25 ) }
    dend_19 { pt3dadd( -31.9896, 109.783, -124.063, 0.29 ) }
    dend_19 { pt3dadd( -31.9992, 109.993, -124.365, 0.96 ) }
    dend_19 { pt3dadd( -32.0108, 110.326, -124.834, 1.4 ) }
    dend_19 { pt3dadd( -32.0289, 111.293, -126.166, 0.22 ) }
    dend_19 { pt3dadd( -32.0214, 112.087, -127.179, 0.37 ) }
    dend_19 { pt3dadd( -32.0123, 112.29, -127.409, 0.37 ) }
    dend_19 { pt3dadd( -31.8522, 113.206, -128.059, 0.37 ) }
    dend_19 { pt3dadd( -31.8398, 113.331, -128.157, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -20.6589, 45.669, -14.6069, 0.44 ) }
    dend_14 { pt3dadd( -20.8062, 45.7306, -14.5554, 0.44 ) }
    dend_14 { pt3dadd( -21.0462, 45.8472, -14.4806, 0.44 ) }
    dend_14 { pt3dadd( -22.0109, 46.4248, -14.2123, 0.44 ) }
    dend_14 { pt3dadd( -22.7519, 46.9698, -14.0289, 0.44 ) }
    dend_14 { pt3dadd( -23.8984, 47.9579, -13.6222, 0.44 ) }
    dend_14 { pt3dadd( -24.5225, 48.5973, -13.3402, 1.03 ) }
    dend_14 { pt3dadd( -24.8483, 48.99, -13.1667, 1.33 ) }
    dend_14 { pt3dadd( -25.3434, 49.6934, -12.8617, 1.18 ) }
    dend_14 { pt3dadd( -25.7869, 50.4729, -12.38, 0.96 ) }
    dend_14 { pt3dadd( -26.2905, 51.5036, -11.6094, 0.88 ) }
    dend_14 { pt3dadd( -26.753, 52.6041, -10.7048, 0.52 ) }
    dend_14 { pt3dadd( -26.8777, 52.953, -10.3768, 0.52 ) }
    dend_14 { pt3dadd( -26.927, 53.1234, -10.2071, 1.11 ) }
    dend_14 { pt3dadd( -27.3789, 55.2951, -7.99366, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_14 { pt3dadd( -27.4146, 55.7155, -7.59431, 1.11 ) }
    dend_14 { pt3dadd( -27.4233, 56.1646, -7.23019, 1.18 ) }
    dend_14 { pt3dadd( -27.4073, 56.4289, -7.03711, 1.77 ) }
    dend_14 { pt3dadd( -27.3679, 56.8781, -6.7846, 1.4 ) }
    dend_14 { pt3dadd( -27.2749, 57.7216, -6.50708, 0.81 ) }
    dend_14 { pt3dadd( -27.1163, 58.8434, -6.37152, 0.44 ) }
    dend_14 { pt3dadd( -27.0447, 59.4288, -6.26446, 0.44 ) }
    dend_14 { pt3dadd( -27.0002, 59.751, -6.19122, 0.44 ) }
    dend_14 { pt3dadd( -26.9092, 60.1837, -6.02908, 0.44 ) }
    dend_14 { pt3dadd( -26.823, 60.4993, -5.87472, 0.66 ) }
    dend_14 { pt3dadd( -26.5177, 61.3953, -5.12769, 0.59 ) }
    dend_14 { pt3dadd( -26.4057, 61.7099, -4.81745, 0.81 ) }
    dend_14 { pt3dadd( -26.1464, 62.4941, -4.02881, 0.44 ) }
    dend_14 { pt3dadd( -25.9125, 63.3803, -2.94326, 0.59 ) }
    dend_14 { pt3dadd( -25.8514, 63.6827, -2.55804, 0.44 ) }
    dend_14 { pt3dadd( -25.5832, 65.3837, -0.469381, 0.37 ) }
    dend_14 { pt3dadd( -25.5322, 65.7182, -0.107475, 1.25 ) }
    dend_14 { pt3dadd( -25.4495, 66.2841, 0.4377, 1.47 ) }
    dend_14 { pt3dadd( -25.1888, 68.4991, 2.22615, 0.88 ) }
    dend_14 { pt3dadd( -25.1138, 69.1883, 2.73532, 0.44 ) }
    dend_14 { pt3dadd( -24.9961, 69.9877, 3.24294, 0.52 ) }
    dend_14 { pt3dadd( -24.6953, 71.4236, 3.93916, 0.96 ) }
    dend_14 { pt3dadd( -24.4637, 72.2913, 4.32327, 1.03 ) }
    dend_14 { pt3dadd( -24.2184, 73.1298, 4.7178, 0.59 ) }
    dend_14 { pt3dadd( -23.4546, 75.7604, 5.88839, 0.59 ) }
    dend_14 { pt3dadd( -23.0967, 77.0439, 6.55269, 1.18 ) }
    dend_14 { pt3dadd( -22.873, 78.1315, 7.07815, 1.4 ) }
    dend_14 { pt3dadd( -22.8299, 78.5032, 7.24997, 1.4 ) }
    dend_14 { pt3dadd( -22.7201, 80.6914, 8.13476, 0.81 ) }
    dend_14 { pt3dadd( -22.7533, 81.6399, 8.44389, 0.29 ) }
    dend_14 { pt3dadd( -22.8439, 82.3022, 8.60464, 0.29 ) }
    dend_14 { pt3dadd( -23.4536, 84.4105, 9.48585, 0.52 ) }
    dend_14 { pt3dadd( -23.8761, 85.4052, 10.0516, 1.11 ) }
    dend_14 { pt3dadd( -24.2062, 86.0452, 10.4707, 1.25 ) }
    dend_14 { pt3dadd( -24.4633, 86.4616, 10.769, 1.4 ) }
    dend_14 { pt3dadd( -25.0609, 87.2948, 11.462, 1.03 ) }
    dend_14 { pt3dadd( -26.8064, 89.5035, 13.4731, 0.52 ) }
    dend_14 { pt3dadd( -27.5027, 90.2906, 14.2655, 0.96 ) }
    dend_14 { pt3dadd( -27.9446, 90.7603, 14.7002, 0.96 ) }
    dend_14 { pt3dadd( -28.4225, 91.2327, 15.0379, 0.59 ) }
    dend_14 { pt3dadd( -29.1597, 91.9455, 15.3355, 0.59 ) }
    dend_14 { pt3dadd( -29.6545, 92.4179, 15.3661, 1.03 ) }
    dend_14 { pt3dadd( -30.2981, 93.056, 15.2065, 1.33 ) }
    dend_14 { pt3dadd( -30.8961, 93.6683, 14.9939, 0.74 ) }
    dend_14 { pt3dadd( -32.4372, 95.2469, 14.4282, 0.59 ) }
    dend_14 { pt3dadd( -32.9603, 95.7815, 14.2227, 0.59 ) }
    dend_14 { pt3dadd( -33.211, 96.0345, 14.1242, 0.88 ) }
    dend_14 { pt3dadd( -33.8448, 96.6625, 13.8976, 0.88 ) }
    dend_14 { pt3dadd( -34.4323, 97.2512, 13.6879, 0.74 ) }
    dend_14 { pt3dadd( -35.3971, 98.2027, 13.3749, 0.37 ) }
    dend_14 { pt3dadd( -36.307, 99.0537, 13.1444, 0.37 ) }
    dend_14 { pt3dadd( -36.8346, 99.5113, 13.0204, 0.81 ) }
    dend_14 { pt3dadd( -37.5953, 100.139, 12.8604, 1.11 ) }
    dend_14 { pt3dadd( -37.991, 100.469, 12.7771, 1.03 ) }
    dend_14 { pt3dadd( -38.3378, 100.77, 12.6999, 1.03 ) }
    dend_14 { pt3dadd( -38.834, 101.245, 12.5719, 0.88 ) }
    dend_14 { pt3dadd( -39.7705, 102.219, 12.3635, 0.29 ) }
    dend_14 { pt3dadd( -40.2025, 102.707, 12.2734, 0.44 ) }
    dend_14 { pt3dadd( -40.9246, 103.583, 12.1381, 0.52 ) }
    dend_14 { pt3dadd( -41.1969, 103.925, 12.0982, 0.74 ) }
    dend_14 { pt3dadd( -41.4529, 104.251, 12.0659, 0.74 ) }
    dend_14 { pt3dadd( -42.3463, 105.429, 12.0218, 0.29 ) }
    dend_14 { pt3dadd( -42.7947, 106.067, 12.0161, 1.18 ) }
    dend_14 { pt3dadd( -43.0856, 106.57, 12.0363, 1.18 ) }
    dend_14 { pt3dadd( -43.2952, 106.983, 12.0677, 1.18 ) }
    dend_14 { pt3dadd( -43.5594, 107.561, 12.1134, 0.96 ) }
    dend_14 { pt3dadd( -43.8315, 108.244, 12.157, 0.88 ) }
    dend_14 { pt3dadd( -44.3424, 109.826, 12.2284, 0.37 ) }
    dend_14 { pt3dadd( -44.8539, 111.828, 12.2785, 0.29 ) }
    dend_14 { pt3dadd( -45.0127, 112.621, 12.2862, 0.29 ) }
    dend_14 { pt3dadd( -45.0867, 113.115, 12.2836, 0.44 ) }
    dend_14 { pt3dadd( -45.1154, 113.446, 12.276, 0.66 ) }
    dend_14 { pt3dadd( -45.1268, 113.851, 12.2189, 0.52 ) }
    dend_14 { pt3dadd( -45.0257, 114.963, 11.944, 0.52 ) }
    dend_14 { pt3dadd( -44.9186, 115.41, 11.758, 0.66 ) }
    dend_14 { pt3dadd( -44.7979, 115.758, 11.5254, 0.88 ) }
    dend_14 { pt3dadd( -44.62, 116.236, 11.1461, 0.88 ) }
    dend_14 { pt3dadd( -44.0956, 117.67, 9.82936, 1.03 ) }
    dend_14 { pt3dadd( -43.9182, 118.161, 9.34476, 1.25 ) }
    dend_14 { pt3dadd( -43.7543, 118.642, 8.85997, 1.4 ) }
    dend_14 { pt3dadd( -43.2108, 120.313, 7.23652, 0.44 ) }
    dend_14 { pt3dadd( -43.0265, 120.922, 6.7463, 0.37 ) }
    dend_14 { pt3dadd( -42.7173, 121.999, 6.06649, 0.88 ) }
    dend_14 { pt3dadd( -42.5768, 122.49, 5.86881, 1.18 ) }
    dend_14 { pt3dadd( -42.4065, 123.189, 5.68654, 1.4 ) }
    dend_14 { pt3dadd( -42.2944, 123.715, 5.61127, 1.03 ) }
    dend_14 { pt3dadd( -41.8496, 125.912, 5.55567, 0.29 ) }
    dend_14 { pt3dadd( -41.6932, 126.708, 5.56163, 0.29 ) }
    dend_14 { pt3dadd( -41.4994, 127.836, 5.61411, 0.37 ) }
    dend_14 { pt3dadd( -41.2828, 129.425, 5.65369, 0.37 ) }
    dend_14 { pt3dadd( -41.2123, 130.181, 5.65797, 0.88 ) }
    dend_14 { pt3dadd( -41.1914, 130.522, 5.65275, 1.25 ) }
    dend_14 { pt3dadd( -41.1733, 131.391, 5.61996, 1.47 ) }
    dend_14 { pt3dadd( -41.1725, 132.12, 5.57679, 1.03 ) }
    dend_14 { pt3dadd( -41.2007, 133.516, 5.45905, 0.44 ) }
    dend_14 { pt3dadd( -41.2201, 134.225, 5.3818, 0.44 ) }
    dend_14 { pt3dadd( -41.2953, 135.999, 5.16811, 0.44 ) }
    dend_14 { pt3dadd( -41.3161, 136.404, 5.114, 0.74 ) }
    dend_14 { pt3dadd( -41.3536, 136.985, 5.03128, 0.74 ) }
    dend_14 { pt3dadd( -41.3928, 137.556, 4.94795, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_14 { pt3dadd( -41.4833, 138.551, 4.80953, 0.81 ) }
    dend_14 { pt3dadd( -41.5226, 138.877, 4.7526, 1.4 ) }
    dend_14 { pt3dadd( -41.6789, 139.527, 4.5957, 2.06 ) }
    dend_14 { pt3dadd( -41.8324, 140.247, 4.40511, 2.06 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.41912, 46.4499, -0.527052, 1.55 ) }
    dend_8 { pt3dadd( -1.82773, 47.4382, -0.526667, 1.55 ) }
    dend_8 { pt3dadd( -2.02962, 47.975, -0.523642, 1.11 ) }
    dend_8 { pt3dadd( -2.28119, 49.0128, -0.491631, 0.74 ) }
    dend_8 { pt3dadd( -2.3726, 49.6821, -0.456899, 0.88 ) }
    dend_8 { pt3dadd( -2.40392, 50.3659, -0.409026, 1.33 ) }
    dend_8 { pt3dadd( -2.39169, 50.8125, -0.324623, 1.25 ) }
    dend_8 { pt3dadd( -2.24569, 51.5581, -0.0411637, 0.96 ) }
    dend_8 { pt3dadd( -1.83694, 52.7039, 0.568555, 0.66 ) }
    dend_8 { pt3dadd( -1.56174, 53.2088, 0.845691, 1.11 ) }
    dend_8 { pt3dadd( -1.21225, 53.7196, 1.12802, 1.4 ) }
    dend_8 { pt3dadd( -0.110596, 55.1225, 1.8777, 1.11 ) }
    dend_8 { pt3dadd( 0.749767, 56.1026, 2.39227, 0.81 ) }
    dend_8 { pt3dadd( 1.16249, 56.5115, 2.63282, 0.81 ) }
    dend_8 { pt3dadd( 2.44664, 57.7207, 3.35762, 0.44 ) }
    dend_8 { pt3dadd( 2.79214, 58.0643, 3.60303, 0.88 ) }
    dend_8 { pt3dadd( 3.05226, 58.3278, 3.80845, 0.88 ) }
    dend_8 { pt3dadd( 3.24025, 58.5245, 3.95901, 0.88 ) }
    dend_8 { pt3dadd( 4.39799, 59.7659, 5.02841, 0.59 ) }
    dend_8 { pt3dadd( 4.73669, 60.1161, 5.36742, 0.88 ) }
    dend_8 { pt3dadd( 5.93192, 61.4109, 6.67771, 1.4 ) }
    dend_8 { pt3dadd( 6.372, 61.9096, 7.13876, 1.33 ) }
    dend_8 { pt3dadd( 6.82785, 62.462, 7.61815, 1.33 ) }
    dend_8 { pt3dadd( 7.67488, 63.5652, 8.42915, 0.81 ) }
    dend_8 { pt3dadd( 8.10188, 64.1548, 8.77111, 0.96 ) }
    dend_8 { pt3dadd( 8.56924, 64.8057, 9.09435, 1.25 ) }
    dend_8 { pt3dadd( 8.87425, 65.2482, 9.25727, 1.25 ) }
    dend_8 { pt3dadd( 9.424, 66.1684, 9.59263, 0.88 ) }
    dend_8 { pt3dadd( 9.80707, 66.9286, 9.87155, 0.74 ) }
    dend_8 { pt3dadd( 9.99281, 67.4067, 10.0404, 0.74 ) }
    dend_8 { pt3dadd( 10.128, 67.8238, 10.1851, 0.74 ) }
    dend_8 { pt3dadd( 10.3197, 68.4238, 10.3914, 0.74 ) }
    dend_8 { pt3dadd( 10.3989, 68.702, 10.4767, 0.96 ) }
    dend_8 { pt3dadd( 10.5315, 69.2801, 10.6264, 1.03 ) }
    dend_8 { pt3dadd( 10.5876, 69.7204, 10.7603, 1.03 ) }
    dend_8 { pt3dadd( 10.602, 70.0227, 10.8548, 0.88 ) }
    dend_8 { pt3dadd( 10.5993, 70.5546, 11.0356, 0.59 ) }
    dend_8 { pt3dadd( 10.5804, 71.0235, 11.2317, 0.29 ) }
    dend_8 { pt3dadd( 10.5639, 71.5515, 11.493, 0.59 ) }
    dend_8 { pt3dadd( 10.5675, 71.9207, 11.7017, 0.59 ) }
    dend_8 { pt3dadd( 10.6038, 72.3117, 12.0009, 0.52 ) }
    dend_8 { pt3dadd( 10.6683, 72.6958, 12.39, 0.59 ) }
    dend_8 { pt3dadd( 10.768, 73.1662, 12.9447, 0.74 ) }
    dend_8 { pt3dadd( 10.8189, 73.3522, 13.1813, 0.74 ) }
    dend_8 { pt3dadd( 10.9197, 73.6179, 13.5023, 0.59 ) }
    dend_8 { pt3dadd( 11.2076, 74.4308, 14.2254, 0.29 ) }
    dend_8 { pt3dadd( 11.3832, 75.0191, 14.558, 0.81 ) }
    dend_8 { pt3dadd( 11.5079, 75.6104, 14.7454, 1.18 ) }
    dend_8 { pt3dadd( 11.5434, 75.8363, 14.7819, 1.62 ) }
    dend_8 { pt3dadd( 11.6761, 76.8782, 14.8916, 1.18 ) }
    dend_8 { pt3dadd( 11.8596, 78.5743, 14.9861, 0.81 ) }
    dend_8 { pt3dadd( 11.9746, 79.809, 14.9944, 0.74 ) }
    dend_8 { pt3dadd( 12.0416, 80.6489, 14.9884, 0.88 ) }
    dend_8 { pt3dadd( 12.0911, 81.5062, 14.9919, 0.96 ) }
    dend_8 { pt3dadd( 12.1221, 82.6521, 15.0125, 0.29 ) }
    dend_8 { pt3dadd( 12.1108, 83.114, 15.0349, 0.29 ) }
    dend_8 { pt3dadd( 12.1073, 83.3448, 15.0639, 0.29 ) }
    dend_8 { pt3dadd( 12.1095, 83.8295, 15.1685, 0.52 ) }
    dend_8 { pt3dadd( 12.1269, 84.2187, 15.2468, 0.96 ) }
    dend_8 { pt3dadd( 12.1608, 84.6216, 15.3134, 1.25 ) }
    dend_8 { pt3dadd( 12.2128, 85.1168, 15.3762, 1.25 ) }
    dend_8 { pt3dadd( 12.3107, 85.7936, 15.459, 1.25 ) }
    dend_8 { pt3dadd( 12.4252, 86.3828, 15.525, 1.25 ) }
    dend_8 { pt3dadd( 12.5367, 86.8237, 15.574, 1.18 ) }
    dend_8 { pt3dadd( 12.6995, 87.3589, 15.6312, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 69/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.41912, 46.4499, -0.527052, 1.84 ) }
    dend_3 { pt3dadd( -0.415651, 47.4701, -0.348667, 1.84 ) }
    dend_3 { pt3dadd( 0.988296, 48.9079, -0.0230693, 0.44 ) }
    dend_3 { pt3dadd( 1.42874, 49.3685, 0.0789284, 1.25 ) }
    dend_3 { pt3dadd( 1.71392, 49.678, 0.105518, 1.25 ) }
    dend_3 { pt3dadd( 2.18501, 50.2512, 0.113347, 1.03 ) }
    dend_3 { pt3dadd( 2.96081, 51.2779, 0.0954807, 0.59 ) }
    dend_3 { pt3dadd( 3.42772, 51.9443, 0.0611221, 1.18 ) }
    dend_3 { pt3dadd( 4.02555, 52.907, -0.0431871, 1.18 ) }
    dend_3 { pt3dadd( 4.95259, 54.5238, -0.242111, 0.66 ) }
    dend_3 { pt3dadd( 5.49519, 55.514, -0.392402, 0.52 ) }
    dend_3 { pt3dadd( 5.88117, 56.2641, -0.533478, 1.25 ) }
    dend_3 { pt3dadd( 6.23927, 57.0461, -0.694011, 1.25 ) }
    dend_3 { pt3dadd( 6.61046, 57.9486, -0.85398, 1.18 ) }
    dend_3 { pt3dadd( 6.89239, 58.7125, -0.920895, 0.66 ) }
    dend_3 { pt3dadd( 6.92976, 58.8253, -0.911417, 0.66 ) }
    dend_3 { pt3dadd( 7.03771, 59.1414, -0.879674, 0.66 ) }
    dend_3 { pt3dadd( 7.05235, 59.2142, -0.872608, 0.66 ) }
    dend_3 { pt3dadd( 7.08053, 59.7724, -0.81175, 0.66 ) }
    dend_3 { pt3dadd( 7.06946, 60.0974, -0.765691, 0.66 ) }
    dend_3 { pt3dadd( 7.05394, 60.5666, -0.765178, 0.66 ) }
    dend_3 { pt3dadd( 7.04367, 60.7668, -0.772189, 0.66 ) }
    dend_3 { pt3dadd( 7.01595, 61.021, -0.798317, 0.66 ) }
    dend_3 { pt3dadd( 7.00541, 61.0827, -0.807745, 0.66 ) }
    dend_3 { pt3dadd( 6.8868, 61.5852, -0.906445, 0.66 ) }
    dend_3 { pt3dadd( 6.79306, 62.0017, -0.991265, 0.66 ) }
    dend_3 { pt3dadd( 6.73579, 62.3295, -1.07956, 0.59 ) }
    dend_3 { pt3dadd( 6.69474, 62.6812, -1.18389, 0.22 ) }
    dend_3 { pt3dadd( 6.65537, 63.2465, -1.34682, 0.22 ) }
    dend_3 { pt3dadd( 6.64732, 63.513, -1.4152, 0.22 ) }
    dend_3 { pt3dadd( 6.64833, 63.7978, -1.48014, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_3 { pt3dadd( 6.68611, 64.4939, -1.60017, 0.22 ) }
    dend_3 { pt3dadd( 6.71375, 64.7738, -1.63938, 0.22 ) }
    dend_3 { pt3dadd( 6.75935, 65.0948, -1.66672, 0.59 ) }
    dend_3 { pt3dadd( 6.83591, 65.6137, -1.69329, 1.11 ) }
    dend_3 { pt3dadd( 6.84242, 65.6767, -1.69343, 1.11 ) }
    dend_3 { pt3dadd( 6.84843, 65.8625, -1.68333, 1.25 ) }
    dend_3 { pt3dadd( 6.83928, 66.1173, -1.65138, 1.25 ) }
    dend_3 { pt3dadd( 6.81818, 66.38, -1.61634, 0.88 ) }
    dend_3 { pt3dadd( 6.77737, 66.6962, -1.57949, 0.81 ) }
    dend_3 { pt3dadd( 6.72028, 67.0418, -1.5401, 0.96 ) }
    dend_3 { pt3dadd( 6.68679, 67.2385, -1.51866, 0.96 ) }
    dend_3 { pt3dadd( 6.63466, 67.4947, -1.49244, 0.59 ) }
    dend_3 { pt3dadd( 6.52773, 67.9161, -1.45512, 0.81 ) }
    dend_3 { pt3dadd( 6.25269, 68.8033, -1.40147, 0.29 ) }
    dend_3 { pt3dadd( 6.14148, 69.1159, -1.39154, 0.29 ) }
    dend_3 { pt3dadd( 6.03004, 69.3983, -1.3891, 0.44 ) }
    dend_3 { pt3dadd( 5.946, 69.6237, -1.38969, 0.44 ) }
    dend_3 { pt3dadd( 5.76317, 70.1097, -1.35447, 0.44 ) }
    dend_3 { pt3dadd( 5.5944, 70.5606, -1.29606, 0.29 ) }
    dend_3 { pt3dadd( 5.46012, 70.9245, -1.22398, 0.29 ) }
    dend_3 { pt3dadd( 5.36746, 71.1741, -1.16812, 0.59 ) }
    dend_3 { pt3dadd( 5.18484, 71.6966, -1.04157, 0.96 ) }
    dend_3 { pt3dadd( 4.90596, 72.5999, -0.837236, 1.11 ) }
    dend_3 { pt3dadd( 4.71239, 73.305, -0.697143, 0.81 ) }
    dend_3 { pt3dadd( 4.5949, 73.8729, -0.575469, 0.74 ) }
    dend_3 { pt3dadd( 4.5514, 74.1038, -0.513239, 0.52 ) }
    dend_3 { pt3dadd( 4.46571, 74.5624, -0.378044, 0.52 ) }
    dend_3 { pt3dadd( 4.35682, 75.1559, -0.200663, 0.81 ) }
    dend_3 { pt3dadd( 4.26296, 75.895, 0.0141503, 0.95 ) }
    dend_3 { pt3dadd( 4.17549, 76.9671, 0.372355, 1.55 ) }
    dend_3 { pt3dadd( 4.14049, 77.7582, 0.652742, 0.74 ) }
    dend_3 { pt3dadd( 4.13134, 78.1593, 0.795758, 0.66 ) }
    dend_3 { pt3dadd( 4.12351, 78.6642, 0.971903, 0.29 ) }
    dend_3 { pt3dadd( 4.12197, 79.1238, 1.13047, 0.29 ) }
    dend_3 { pt3dadd( 4.11961, 79.6643, 1.27294, 0.29 ) }
    dend_3 { pt3dadd( 4.1066, 80.1037, 1.32872, 0.37 ) }
    dend_3 { pt3dadd( 4.10635, 80.4406, 1.34423, 0.37 ) }
    dend_3 { pt3dadd( 4.08449, 80.8982, 1.40025, 0.44 ) }
    dend_3 { pt3dadd( 4.08449, 80.8982, 1.40025, 0.52 ) }
    dend_3 { pt3dadd( 4.00931, 81.4809, 1.52497, 0.81 ) }
    dend_3 { pt3dadd( 3.95719, 81.8516, 1.61506, 1.11 ) }
    dend_3 { pt3dadd( 3.90806, 82.242, 1.7208, 1.25 ) }
    dend_3 { pt3dadd( 3.751, 83.5781, 2.12807, 0.29 ) }
    dend_3 { pt3dadd( 3.7133, 83.9177, 2.23652, 0.29 ) }
    dend_3 { pt3dadd( 3.65052, 84.3967, 2.38307, 0.52 ) }
    dend_3 { pt3dadd( 3.61774, 84.6046, 2.44294, 0.81 ) }
    dend_3 { pt3dadd( 3.56819, 84.8551, 2.51849, 0.81 ) }
    dend_3 { pt3dadd( 3.4412, 85.4753, 2.69884, 0.29 ) }
    dend_3 { pt3dadd( 3.31953, 86.0522, 2.84444, 0.22 ) }
    dend_3 { pt3dadd( 3.18531, 86.6586, 2.98722, 0.15 ) }
    dend_3 { pt3dadd( 3.08043, 87.1224, 3.0893, 0.22 ) }
    dend_3 { pt3dadd( 2.86858, 88.1127, 3.28307, 0.22 ) }
    dend_3 { pt3dadd( 2.73833, 88.7233, 3.38723, 0.22 ) }
    dend_3 { pt3dadd( 2.6787, 89.0356, 3.43175, 0.22 ) }
    dend_3 { pt3dadd( 2.57492, 89.6691, 3.51421, 1.03 ) }
    dend_3 { pt3dadd( 2.55625, 89.8674, 3.52641, 1.33 ) }
    dend_3 { pt3dadd( 2.52235, 90.4722, 3.51231, 1.47 ) }
    dend_3 { pt3dadd( 2.52271, 90.7723, 3.48518, 1.62 ) }
    dend_3 { pt3dadd( 2.53247, 91.1738, 3.45163, 1.55 ) }
    dend_3 { pt3dadd( 2.54916, 91.5536, 3.42638, 1.55 ) }
    dend_3 { pt3dadd( 2.60382, 92.4794, 3.38243, 0.81 ) }
    dend_3 { pt3dadd( 2.65866, 93.2094, 3.33604, 0.22 ) }
    dend_3 { pt3dadd( 2.74789, 94.2013, 3.25851, 0.22 ) }
    dend_3 { pt3dadd( 2.7811, 94.5583, 3.22732, 0.22 ) }
    dend_3 { pt3dadd( 2.80056, 94.8371, 3.20085, 0.59 ) }
    dend_3 { pt3dadd( 2.80169, 95.0985, 3.17472, 0.59 ) }
    dend_3 { pt3dadd( 2.75912, 95.5291, 3.13711, 0.29 ) }
    dend_3 { pt3dadd( 2.73267, 95.6607, 3.10314, 0.29 ) }
    dend_3 { pt3dadd( 2.62296, 95.9593, 2.96981, 0.29 ) }
    dend_3 { pt3dadd( 2.54263, 96.1609, 2.87174, 0.22 ) }
    dend_3 { pt3dadd( 2.40919, 96.4987, 2.70947, 0.22 ) }
    dend_3 { pt3dadd( 2.34887, 96.6556, 2.64017, 0.22 ) }
    dend_3 { pt3dadd( 2.10492, 97.3628, 2.37486, 0.88 ) }
    dend_3 { pt3dadd( 2.02627, 97.7749, 2.24076, 1.33 ) }
    dend_3 { pt3dadd( 1.997, 98.2255, 2.11422, 1.55 ) }
    dend_3 { pt3dadd( 2.02121, 98.4768, 2.06448, 1.77 ) }
    dend_3 { pt3dadd( 2.07802, 98.7507, 2.0357, 1.47 ) }
    dend_3 { pt3dadd( 2.14393, 99.0351, 2.02411, 1.18 ) }
    dend_3 { pt3dadd( 2.39109, 99.9665, 2.054, 0.29 ) }
    dend_3 { pt3dadd( 2.47399, 100.227, 2.06787, 0.29 ) }
    dend_3 { pt3dadd( 2.72824, 100.906, 2.06446, 0.29 ) }
    dend_3 { pt3dadd( 3.03484, 101.664, 2.02782, 0.29 ) }
    dend_3 { pt3dadd( 3.24555, 102.155, 1.9876, 0.29 ) }
    dend_3 { pt3dadd( 3.49737, 102.708, 1.93033, 0.29 ) }
    dend_3 { pt3dadd( 3.65155, 103.034, 1.89159, 0.29 ) }
    dend_3 { pt3dadd( 4.14017, 103.982, 1.76295, 0.88 ) }
    dend_3 { pt3dadd( 4.14017, 103.982, 1.76295, 1.03 ) }
    dend_3 { pt3dadd( 4.4005, 104.371, 1.71453, 1.25 ) }
    dend_3 { pt3dadd( 4.70411, 104.803, 1.68503, 0.96 ) }
    dend_3 { pt3dadd( 4.85327, 105.044, 1.68395, 0.88 ) }
    dend_3 { pt3dadd( 5.05956, 105.426, 1.71645, 1.03 ) }
    dend_3 { pt3dadd( 5.08933, 105.484, 1.72359, 1.03 ) }
    dend_3 { pt3dadd( 5.34805, 106.04, 1.73584, 0.59 ) }
    dend_3 { pt3dadd( 5.39657, 106.159, 1.72962, 0.52 ) }
    dend_3 { pt3dadd( 5.51368, 106.471, 1.68518, 0.52 ) }
    dend_3 { pt3dadd( 5.5564, 106.59, 1.66353, 0.52 ) }
    dend_3 { pt3dadd( 5.88776, 107.505, 1.49514, 0.29 ) }
    dend_3 { pt3dadd( 6.11388, 108.118, 1.38586, 0.29 ) }
    dend_3 { pt3dadd( 6.28597, 108.487, 1.22701, 0.29 ) }
    dend_3 { pt3dadd( 6.48754, 108.859, 0.95716, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_3 { pt3dadd( 6.6597, 109.169, 0.681439, 1.18 ) }
    dend_3 { pt3dadd( 6.87953, 109.592, 0.275543, 1.25 ) }
    dend_3 { pt3dadd( 6.91291, 109.658, 0.204567, 0.96 ) }
    dend_3 { pt3dadd( 7.65675, 111.095, -1.48882, 0.22 ) }
    dend_3 { pt3dadd( 7.98465, 111.752, -2.30043, 0.15 ) }
    dend_3 { pt3dadd( 8.13402, 112.073, -2.70014, 0.15 ) }
    dend_3 { pt3dadd( 8.25656, 112.364, -3.05809, 0.15 ) }
    dend_3 { pt3dadd( 8.27044, 112.406, -3.105, 0.15 ) }
    dend_3 { pt3dadd( 8.30283, 112.605, -3.22943, 0.15 ) }
    dend_3 { pt3dadd( 8.28333, 112.804, -3.21763, 0.15 ) }
    dend_3 { pt3dadd( 8.2366, 113.111, -3.1558, 0.88 ) }
    dend_3 { pt3dadd( 8.14589, 113.628, -3.04352, 1.33 ) }
    dend_3 { pt3dadd( 8.10666, 113.884, -2.98372, 1.55 ) }
    dend_3 { pt3dadd( 8.01462, 114.693, -2.79303, 0.15 ) }
    dend_3 { pt3dadd( 7.98444, 115.159, -2.7141, 0.15 ) }
    dend_3 { pt3dadd( 7.98488, 115.487, -2.68387, 0.15 ) }
    dend_3 { pt3dadd( 7.98947, 115.551, -2.68377, 0.15 ) }
    dend_3 { pt3dadd( 8.06557, 115.944, -2.73444, 0.15 ) }
    dend_3 { pt3dadd( 8.20422, 116.339, -2.81388, 0.15 ) }
    dend_3 { pt3dadd( 8.54888, 116.967, -3.01776, 0.74 ) }
    dend_3 { pt3dadd( 8.73123, 117.235, -3.11471, 1.33 ) }
    dend_3 { pt3dadd( 8.81453, 117.35, -3.16342, 2.36 ) }
    dend_3 { pt3dadd( 8.93903, 117.542, -3.25244, 2.5 ) }
    dend_3 { pt3dadd( 9.00826, 117.676, -3.3277, 2.5 ) }
    // Section: dend_125, id: dend_125, parent: dend_123 (entry count 24/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( -6.41527, -56.7549, 19.3112, 0.22 ) }
    dend_125 { pt3dadd( -6.51589, -57.0201, 19.2925, 0.22 ) }
    dend_125 { pt3dadd( -6.73202, -57.5899, 19.2524, 0.22 ) }
    dend_125 { pt3dadd( -6.94245, -58.1446, 19.2133, 0.22 ) }
    dend_125 { pt3dadd( -7.20755, -58.8435, 19.1641, 0.22 ) }
    dend_125 { pt3dadd( -7.26998, -59.008, 19.1525, 0.22 ) }
    // Section: dend_124, id: dend_124, parent: dend_123 (entry count 30/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( -6.41527, -56.7549, 19.3112, 0.44 ) }
    dend_124 { pt3dadd( -6.07345, -57.1006, 19.2942, 0.44 ) }
    dend_124 { pt3dadd( -5.61037, -57.5554, 19.2645, 0.29 ) }
    dend_124 { pt3dadd( -5.43257, -57.73, 19.253, 0.29 ) }
    dend_124 { pt3dadd( -5.04574, -58.1099, 19.2282, 0.29 ) }
    dend_124 { pt3dadd( -4.72892, -58.4211, 19.2078, 0.29 ) }
    dend_124 { pt3dadd( -4.61438, -58.5335, 19.2004, 0.44 ) }
    dend_124 { pt3dadd( -4.58021, -58.5699, 19.1911, 0.44 ) }
    dend_124 { pt3dadd( -0.314253, -64.1581, 17.803, 0.44 ) }
    dend_124 { pt3dadd( 4.84496, -69.0855, 16.9047, 0.44 ) }
    dend_124 { pt3dadd( 10.4177, -73.2101, 14.8982, 0.44 ) }
    dend_124 { pt3dadd( 15.2802, -77.7007, 12.0469, 0.44 ) }
    dend_124 { pt3dadd( 19.7045, -82.8805, 9.76969, 0.44 ) }
    dend_124 { pt3dadd( 23.911, -88.0382, 7.06555, 0.44 ) }
    // Section: dend_122, id: dend_122, parent: dend_120 (entry count 44/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( -46.585, -62.6423, 24.1112, 0.29 ) }
    dend_122 { pt3dadd( -55.5951, -64.4424, 23.6949, 0.29 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 46/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -46.585, -62.6423, 24.1112, 0.52 ) }
    dend_121 { pt3dadd( -53.6801, -63.7573, 26.1307, 0.29 ) }
    dend_121 { pt3dadd( -60.3998, -65.4492, 28.8856, 0.29 ) }
    dend_121 { pt3dadd( -67.211, -67.8379, 30.7387, 0.29 ) }
    dend_121 { pt3dadd( -73.5774, -70.7952, 33.2103, 0.29 ) }
    // Section: dend_113, id: dend_113, parent: dend_111 (entry count 51/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( 8.05161, -55.7779, 8.96777, 0.74 ) }
    dend_113 { pt3dadd( 7.9943, -57.0274, 8.91849, 0.74 ) }
    dend_113 { pt3dadd( 7.93359, -58.3507, 8.8663, 0.59 ) }
    dend_113 { pt3dadd( 7.88863, -59.3306, 8.82765, 0.52 ) }
    dend_113 { pt3dadd( 7.84213, -60.3439, 8.78768, 0.66 ) }
    dend_113 { pt3dadd( 7.80232, -61.2117, 8.75346, 0.66 ) }
    dend_113 { pt3dadd( 7.76294, -62.0704, 8.71959, 0.66 ) }
    // Section: dend_112, id: dend_112, parent: dend_111 (entry count 58/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( 8.05161, -55.7779, 8.96777, 0.29 ) }
    dend_112 { pt3dadd( 8.88848, -56.119, 8.96512, 0.29 ) }
    dend_112 { pt3dadd( 9.71196, -56.4521, 8.98411, 0.29 ) }
    dend_112 { pt3dadd( 11.3445, -57.1629, 9.06746, 0.29 ) }
    dend_112 { pt3dadd( 12.0656, -57.4908, 9.09358, 0.29 ) }
    dend_112 { pt3dadd( 12.9456, -57.8837, 9.10831, 0.96 ) }
    dend_112 { pt3dadd( 13.4161, -58.0886, 9.12311, 1.11 ) }
    dend_112 { pt3dadd( 13.8264, -58.2753, 9.1483, 1.11 ) }
    dend_112 { pt3dadd( 14.4261, -58.5464, 9.18919, 0.88 ) }
    dend_112 { pt3dadd( 15.4371, -59.0026, 9.25059, 0.22 ) }
    dend_112 { pt3dadd( 16.2443, -59.3462, 9.31882, 0.22 ) }
    dend_112 { pt3dadd( 17.6587, -59.8839, 9.43177, 0.22 ) }
    dend_112 { pt3dadd( 18.1796, -60.0613, 9.49353, 0.29 ) }
    dend_112 { pt3dadd( 18.4192, -60.143, 9.5304, 0.59 ) }
    dend_112 { pt3dadd( 18.7505, -60.2537, 9.59172, 0.59 ) }
    dend_112 { pt3dadd( 19.9352, -60.7266, 9.8913, 0.29 ) }
    dend_112 { pt3dadd( 20.2066, -60.8584, 9.96558, 0.44 ) }
    dend_112 { pt3dadd( 20.2726, -60.8933, 9.98343, 0.44 ) }
    dend_112 { pt3dadd( 20.8425, -61.208, 10.1463, 0.44 ) }
    dend_112 { pt3dadd( 21.3472, -61.5401, 10.2815, 0.44 ) }
    dend_112 { pt3dadd( 21.7499, -61.8955, 10.3513, 0.44 ) }
    dend_112 { pt3dadd( 21.8418, -62.0251, 10.3368, 0.44 ) }
    dend_112 { pt3dadd( 31.2041, -66.4533, 12.3915, 0.44 ) }
    dend_112 { pt3dadd( 40.2993, -70.3413, 16.1156, 0.44 ) }
    dend_112 { pt3dadd( 49.6892, -73.1442, 20.1197, 0.44 ) }
    dend_112 { pt3dadd( 58.5136, -75.5305, 25.4673, 0.44 ) }
    dend_112 { pt3dadd( 67.0324, -77.4002, 31.4838, 0.44 ) }
    dend_112 { pt3dadd( 75.8684, -78.5838, 37.2179, 0.44 ) }
    // Section: dend_103, id: dend_103, parent: dend_99 (entry count 86/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 25.8098, -53.637, -56.2506, 0.81 ) }
    dend_103 { pt3dadd( 27.9891, -53.6185, -57.043, 0.81 ) }
    dend_103 { pt3dadd( 28.0745, -53.6167, -57.0765, 0.81 ) }
    dend_103 { pt3dadd( 29.2787, -53.6116, -57.4662, 0.81 ) }
    dend_103 { pt3dadd( 29.7387, -53.609, -57.5528, 0.96 ) }
    dend_103 { pt3dadd( 31.5767, -53.6025, -57.7989, 0.29 ) }
    dend_103 { pt3dadd( 32.2231, -53.605, -57.8725, 0.81 ) }
    dend_103 { pt3dadd( 33.0986, -53.6105, -57.9499, 0.29 ) }
    dend_103 { pt3dadd( 34.6175, -53.627, -58.0724, 0.22 ) }
    dend_103 { pt3dadd( 36.4252, -53.6519, -58.1182, 0.74 ) }
    dend_103 { pt3dadd( 36.572, -53.6555, -58.1231, 1.18 ) }
    dend_103 { pt3dadd( 37.2299, -53.6791, -58.1739, 1.4 ) }
    dend_103 { pt3dadd( 37.7431, -53.6808, -58.2403, 1.11 ) }
    dend_103 { pt3dadd( 38.6884, -53.6645, -58.4525, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_103 { pt3dadd( 39.775, -53.6061, -58.8936, 0.22 ) }
    dend_103 { pt3dadd( 40.4243, -53.5633, -59.2505, 0.22 ) }
    dend_103 { pt3dadd( 41.2511, -53.522, -59.7017, 0.22 ) }
    dend_103 { pt3dadd( 41.7298, -53.5087, -59.9637, 0.22 ) }
    dend_103 { pt3dadd( 42.0843, -53.5236, -60.1561, 0.81 ) }
    dend_103 { pt3dadd( 42.1712, -53.5359, -60.2073, 0.81 ) }
    dend_103 { pt3dadd( 42.8075, -53.6865, -60.6546, 0.81 ) }
    dend_103 { pt3dadd( 43.5735, -53.947, -61.2085, 0.22 ) }
    dend_103 { pt3dadd( 44.4943, -54.3201, -61.8811, 0.22 ) }
    dend_103 { pt3dadd( 45.0926, -54.5526, -62.3197, 0.22 ) }
    dend_103 { pt3dadd( 45.7584, -54.8041, -62.802, 0.81 ) }
    dend_103 { pt3dadd( 45.8296, -54.8315, -62.8523, 0.81 ) }
    dend_103 { pt3dadd( 46.398, -55.072, -63.2411, 1.33 ) }
    dend_103 { pt3dadd( 47.0192, -55.3415, -63.6468, 0.66 ) }
    dend_103 { pt3dadd( 47.8851, -55.7377, -64.182, 0.29 ) }
    dend_103 { pt3dadd( 48.6463, -56.0729, -64.6278, 0.29 ) }
    dend_103 { pt3dadd( 49.4071, -56.4107, -65.0445, 0.29 ) }
    dend_103 { pt3dadd( 50.1195, -56.7065, -65.4332, 0.37 ) }
    dend_103 { pt3dadd( 51.092, -57.1118, -65.96, 0.22 ) }
    dend_103 { pt3dadd( 51.3946, -57.2467, -66.1219, 0.96 ) }
    dend_103 { pt3dadd( 52.1199, -57.586, -66.507, 1.18 ) }
    dend_103 { pt3dadd( 52.374, -57.7011, -66.6429, 1.18 ) }
    dend_103 { pt3dadd( 54.0051, -58.3783, -67.5302, 0.22 ) }
    dend_103 { pt3dadd( 54.9641, -58.6964, -68.0654, 0.22 ) }
    dend_103 { pt3dadd( 55.5628, -58.858, -68.4065, 0.22 ) }
    dend_103 { pt3dadd( 56.0828, -58.9567, -68.6419, 1.25 ) }
    dend_103 { pt3dadd( 56.7896, -59.0665, -68.8995, 1.69 ) }
    dend_103 { pt3dadd( 57.748, -59.1939, -69.1862, 1.11 ) }
    dend_103 { pt3dadd( 59.1964, -59.3971, -69.4577, 0.22 ) }
    dend_103 { pt3dadd( 60.057, -59.5378, -69.5662, 0.22 ) }
    dend_103 { pt3dadd( 62.4853, -60.045, -69.784, 0.22 ) }
    dend_103 { pt3dadd( 63.057, -60.1871, -69.8205, 0.66 ) }
    dend_103 { pt3dadd( 63.7985, -60.41, -69.8705, 0.96 ) }
    dend_103 { pt3dadd( 65.6322, -61.057, -70.0077, 0.22 ) }
    dend_103 { pt3dadd( 66.5614, -61.4382, -70.1097, 0.22 ) }
    dend_103 { pt3dadd( 67.2811, -61.7478, -70.254, 0.66 ) }
    dend_103 { pt3dadd( 67.7749, -61.9451, -70.3857, 1.11 ) }
    dend_103 { pt3dadd( 69.1985, -62.3826, -70.7202, 0.22 ) }
    dend_103 { pt3dadd( 69.3818, -62.425, -70.7592, 0.22 ) }
    dend_103 { pt3dadd( 70.0096, -62.497, -70.8731, 0.22 ) }
    dend_103 { pt3dadd( 70.6749, -62.5333, -70.9579, 0.22 ) }
    dend_103 { pt3dadd( 72.7129, -62.6228, -71.1141, 0.96 ) }
    dend_103 { pt3dadd( 73.3369, -62.6647, -71.1487, 1.4 ) }
    dend_103 { pt3dadd( 73.4283, -62.6697, -71.1544, 1.4 ) }
    dend_103 { pt3dadd( 75.0811, -62.7083, -71.1194, 0.29 ) }
    dend_103 { pt3dadd( 75.6895, -62.7091, -71.078, 0.29 ) }
    dend_103 { pt3dadd( 75.8673, -62.7059, -71.0649, 0.29 ) }
    dend_103 { pt3dadd( 76.92, -62.7015, -71.0031, 0.29 ) }
    dend_103 { pt3dadd( 77.8527, -62.729, -70.9533, 0.29 ) }
    dend_103 { pt3dadd( 80.908, -62.9587, -70.8868, 1.18 ) }
    dend_103 { pt3dadd( 80.999, -62.9687, -70.8841, 1.18 ) }
    dend_103 { pt3dadd( 81.5356, -63.0438, -70.8694, 1.18 ) }
    dend_103 { pt3dadd( 83.6218, -63.4546, -70.8738, 0.22 ) }
    dend_103 { pt3dadd( 85.0597, -63.8643, -70.9358, 0.22 ) }
    dend_103 { pt3dadd( 86.1485, -64.2758, -71.0767, 0.22 ) }
    dend_103 { pt3dadd( 87.1479, -64.7513, -71.3312, 0.81 ) }
    dend_103 { pt3dadd( 87.7302, -65.0407, -71.5014, 0.81 ) }
    dend_103 { pt3dadd( 89.1204, -65.7836, -71.9647, 0.22 ) }
    dend_103 { pt3dadd( 90.1611, -66.4059, -72.4325, 0.22 ) }
    dend_103 { pt3dadd( 90.9362, -66.8911, -72.8423, 0.96 ) }
    dend_103 { pt3dadd( 91.6234, -67.3441, -73.2813, 1.55 ) }
    dend_103 { pt3dadd( 92.1625, -67.7067, -73.6858, 0.96 ) }
    dend_103 { pt3dadd( 92.4109, -67.8682, -73.883, 0.96 ) }
    dend_103 { pt3dadd( 93.4413, -68.514, -74.7407, 0.22 ) }
    dend_103 { pt3dadd( 94.4936, -69.1353, -75.6118, 0.22 ) }
    dend_103 { pt3dadd( 95.1149, -69.5022, -76.1133, 0.22 ) }
    dend_103 { pt3dadd( 95.7025, -69.8371, -76.5784, 0.22 ) }
    dend_103 { pt3dadd( 96.1751, -70.0973, -76.9348, 0.74 ) }
    dend_103 { pt3dadd( 96.8204, -70.4216, -77.3932, 1.18 ) }
    dend_103 { pt3dadd( 97.3953, -70.6858, -77.7562, 0.52 ) }
    dend_103 { pt3dadd( 97.5273, -70.7435, -77.8367, 0.52 ) }
    dend_103 { pt3dadd( 98.3273, -71.0645, -78.2915, 0.22 ) }
    dend_103 { pt3dadd( 99.0542, -71.3394, -78.7011, 0.22 ) }
    dend_103 { pt3dadd( 99.138, -71.3718, -78.7475, 0.22 ) }
    dend_103 { pt3dadd( 99.3148, -71.4429, -78.844, 0.96 ) }
    dend_103 { pt3dadd( 99.3946, -71.4836, -78.8904, 0.96 ) }
    dend_103 { pt3dadd( 100.051, -71.9029, -79.3369, 1.33 ) }
    dend_103 { pt3dadd( 100.697, -72.3985, -79.8354, 0.29 ) }
    dend_103 { pt3dadd( 101.394, -73.003, -80.4229, 0.29 ) }
    dend_103 { pt3dadd( 101.449, -73.0528, -80.4713, 0.29 ) }
    dend_103 { pt3dadd( 102.125, -73.7365, -81.1042, 0.29 ) }
    dend_103 { pt3dadd( 102.596, -74.2723, -81.5755, 0.74 ) }
    dend_103 { pt3dadd( 102.64, -74.3335, -81.6255, 0.74 ) }
    dend_103 { pt3dadd( 102.765, -74.5023, -81.7648, 0.74 ) }
    dend_103 { pt3dadd( 102.845, -74.5742, -81.8346, 0.74 ) }
    dend_103 { pt3dadd( 103.231, -74.8466, -82.1522, 0.74 ) }
    dend_103 { pt3dadd( 103.297, -74.8845, -82.2027, 0.74 ) }
    dend_103 { pt3dadd( 103.503, -74.9895, -82.3574, 0.74 ) }
    dend_103 { pt3dadd( 104.642, -75.3777, -83.1237, 0.22 ) }
    dend_103 { pt3dadd( 105.84, -75.6371, -83.8751, 0.22 ) }
    dend_103 { pt3dadd( 106.921, -75.7398, -84.4284, 0.22 ) }
    dend_103 { pt3dadd( 107.226, -75.7452, -84.5619, 1.25 ) }
    dend_103 { pt3dadd( 107.667, -75.7338, -84.7318, 1.47 ) }
    dend_103 { pt3dadd( 109.611, -75.572, -85.3905, 0.22 ) }
    dend_103 { pt3dadd( 110.458, -75.4493, -85.5353, 0.22 ) }
    dend_103 { pt3dadd( 112.021, -75.2246, -85.6497, 0.29 ) }
    dend_103 { pt3dadd( 112.738, -75.1343, -85.6698, 0.81 ) }
    dend_103 { pt3dadd( 113.354, -75.0747, -85.68, 1.25 ) }
    dend_103 { pt3dadd( 113.905, -75.0428, -85.6837, 1.33 ) }
    dend_103 { pt3dadd( 116.637, -75.0162, -85.7089, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_103 { pt3dadd( 118.141, -75.017, -85.7274, 0.22 ) }
    dend_103 { pt3dadd( 118.81, -75.0286, -85.7579, 0.22 ) }
    dend_103 { pt3dadd( 119.717, -75.0332, -85.7327, 0.59 ) }
    dend_103 { pt3dadd( 119.836, -75.036, -85.7259, 0.59 ) }
    dend_103 { pt3dadd( 120.227, -75.0539, -85.701, 0.96 ) }
    dend_103 { pt3dadd( 120.316, -75.0597, -85.6988, 0.96 ) }
    dend_103 { pt3dadd( 122.007, -75.1503, -85.3839, 0.29 ) }
    dend_103 { pt3dadd( 124.199, -75.2774, -84.9854, 0.29 ) }
    dend_103 { pt3dadd( 124.982, -75.3244, -84.8677, 0.29 ) }
    dend_103 { pt3dadd( 125.098, -75.3295, -84.8549, 0.29 ) }
    dend_103 { pt3dadd( 125.768, -75.3589, -84.836, 0.29 ) }
    dend_103 { pt3dadd( 128.82, -75.521, -85.1087, 0.22 ) }
    dend_103 { pt3dadd( 130.648, -75.6234, -85.3034, 0.96 ) }
    dend_103 { pt3dadd( 131.35, -75.6575, -85.4005, 1.33 ) }
    dend_103 { pt3dadd( 131.892, -75.6624, -85.4619, 0.81 ) }
    dend_103 { pt3dadd( 133.481, -75.6373, -85.663, 0.22 ) }
    dend_103 { pt3dadd( 134.455, -75.5845, -85.7993, 0.22 ) }
    dend_103 { pt3dadd( 137.201, -75.4395, -86.2578, 0.66 ) }
    dend_103 { pt3dadd( 137.488, -75.4219, -86.2728, 0.96 ) }
    dend_103 { pt3dadd( 138.277, -75.3613, -86.271, 0.29 ) }
    dend_103 { pt3dadd( 139.432, -75.2465, -86.1966, 0.22 ) }
    dend_103 { pt3dadd( 139.958, -75.1354, -86.1059, 0.81 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 22/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 25.8098, -53.637, -56.2506, 1.25 ) }
    dend_100 { pt3dadd( 25.8882, -53.7824, -56.4379, 1.25 ) }
    dend_100 { pt3dadd( 26.6441, -55.0665, -57.8952, 0.29 ) }
    dend_100 { pt3dadd( 27.0456, -55.7367, -58.5866, 0.29 ) }
    dend_100 { pt3dadd( 27.7891, -56.9783, -59.7696, 0.29 ) }
    dend_100 { pt3dadd( 28.1572, -57.6013, -60.314, 0.29 ) }
    dend_100 { pt3dadd( 28.7377, -58.5852, -61.163, 0.29 ) }
    dend_100 { pt3dadd( 29.0496, -59.1127, -61.566, 0.29 ) }
    dend_100 { pt3dadd( 29.2616, -59.4734, -61.7883, 0.96 ) }
    dend_100 { pt3dadd( 29.4779, -59.8427, -61.9908, 1.4 ) }
    dend_100 { pt3dadd( 29.8303, -60.4448, -62.3412, 0.88 ) }
    dend_100 { pt3dadd( 30.4983, -61.6129, -63.1217, 0.22 ) }
    dend_100 { pt3dadd( 30.9767, -62.4994, -63.838, 0.22 ) }
    dend_100 { pt3dadd( 31.398, -63.2644, -64.5231, 0.22 ) }
    dend_100 { pt3dadd( 32.0777, -64.3946, -65.6569, 0.22 ) }
    dend_100 { pt3dadd( 32.7674, -65.5658, -66.8636, 0.81 ) }
    dend_100 { pt3dadd( 33.0423, -66.0797, -67.4025, 1.33 ) }
    dend_100 { pt3dadd( 33.5869, -67.3349, -68.7149, 0.37 ) }
    dend_100 { pt3dadd( 33.7488, -67.8084, -69.2268, 0.37 ) }
    dend_100 { pt3dadd( 33.9359, -68.7712, -70.1917, 0.22 ) }
    dend_100 { pt3dadd( 33.9736, -69.8431, -71.1721, 0.22 ) }
    dend_100 { pt3dadd( 33.917, -70.9627, -72.0343, 0.88 ) }
    dend_100 { pt3dadd( 33.7915, -71.8111, -72.6405, 1.25 ) }
    dend_100 { pt3dadd( 33.737, -72.0492, -72.7901, 1.11 ) }
    dend_100 { pt3dadd( 33.4251, -73.1346, -73.5571, 0.44 ) }
    dend_100 { pt3dadd( 33.0703, -74.3776, -74.4994, 0.59 ) }
    dend_100 { pt3dadd( 33.0335, -74.5892, -74.6833, 1.11 ) }
    dend_100 { pt3dadd( 33.0235, -74.994, -75.0406, 1.11 ) }
    dend_100 { pt3dadd( 33.0324, -75.0847, -75.1303, 1.11 ) }
    dend_100 { pt3dadd( 33.2804, -76.56, -76.8141, 0.44 ) }
    dend_100 { pt3dadd( 33.4183, -77.0989, -77.4587, 0.22 ) }
    dend_100 { pt3dadd( 33.5649, -77.6424, -78.0537, 0.22 ) }
    dend_100 { pt3dadd( 33.6832, -78.1509, -78.5664, 0.22 ) }
    dend_100 { pt3dadd( 33.9129, -79.2149, -79.5473, 0.96 ) }
    dend_100 { pt3dadd( 34.1157, -80.2257, -80.3572, 1.77 ) }
    dend_100 { pt3dadd( 34.2996, -81.2345, -81.0249, 0.29 ) }
    dend_100 { pt3dadd( 34.3989, -81.9268, -81.4482, 0.29 ) }
    dend_100 { pt3dadd( 34.5004, -82.6456, -81.8484, 0.29 ) }
    dend_100 { pt3dadd( 34.5786, -83.1189, -82.0621, 0.29 ) }
    dend_100 { pt3dadd( 34.7032, -83.7812, -82.2576, 0.29 ) }
    dend_100 { pt3dadd( 34.7174, -83.8532, -82.273, 0.29 ) }
    dend_100 { pt3dadd( 34.8729, -84.6459, -82.4434, 0.29 ) }
    dend_100 { pt3dadd( 34.8904, -84.732, -82.462, 0.29 ) }
    dend_100 { pt3dadd( 35.0768, -85.6087, -82.6194, 1.03 ) }
    dend_100 { pt3dadd( 35.173, -86.1491, -82.6971, 1.4 ) }
    dend_100 { pt3dadd( 35.1854, -86.2333, -82.7157, 1.4 ) }
    dend_100 { pt3dadd( 35.3523, -87.535, -83.0755, 0.29 ) }
    dend_100 { pt3dadd( 35.4544, -88.3929, -83.3492, 0.29 ) }
    dend_100 { pt3dadd( 35.5424, -89.1376, -83.6076, 0.81 ) }
    dend_100 { pt3dadd( 35.6752, -89.9889, -83.92, 0.81 ) }
    dend_100 { pt3dadd( 35.9509, -91.5012, -84.5034, 0.22 ) }
    dend_100 { pt3dadd( 36.0855, -92.1536, -84.7624, 0.22 ) }
    dend_100 { pt3dadd( 36.2623, -92.9028, -85.0751, 0.74 ) }
    dend_100 { pt3dadd( 36.4328, -93.5237, -85.3399, 1.18 ) }
    dend_100 { pt3dadd( 36.8424, -94.8847, -85.8936, 0.29 ) }
    dend_100 { pt3dadd( 36.8689, -94.9627, -85.9203, 0.29 ) }
    dend_100 { pt3dadd( 37.2386, -96.0463, -86.2357, 0.29 ) }
    dend_100 { pt3dadd( 37.4091, -96.5523, -86.393, 0.88 ) }
    dend_100 { pt3dadd( 37.5191, -96.8959, -86.5045, 1.47 ) }
    dend_100 { pt3dadd( 37.946, -98.3242, -87.0034, 0.22 ) }
    dend_100 { pt3dadd( 38.3489, -99.5804, -87.5531, 0.22 ) }
    dend_100 { pt3dadd( 38.5823, -100.235, -87.9617, 0.74 ) }
    dend_100 { pt3dadd( 38.608, -100.303, -88.0157, 0.74 ) }
    dend_100 { pt3dadd( 38.7902, -100.752, -88.4762, 1.11 ) }
    dend_100 { pt3dadd( 38.9236, -101.07, -88.8578, 1.4 ) }
    dend_100 { pt3dadd( 39.4203, -102.27, -90.475, 0.29 ) }
    dend_100 { pt3dadd( 39.8475, -103.365, -92.0112, 0.81 ) }
    dend_100 { pt3dadd( 39.9825, -103.817, -92.7011, 1.4 ) }
    dend_100 { pt3dadd( 40.2522, -104.768, -94.2336, 0.29 ) }
    dend_100 { pt3dadd( 40.3353, -105.049, -94.7082, 0.29 ) }
    dend_100 { pt3dadd( 40.4614, -105.485, -95.4507, 0.66 ) }
    dend_100 { pt3dadd( 40.4826, -105.569, -95.5902, 0.66 ) }
    dend_100 { pt3dadd( 40.9598, -107.506, -98.5521, 0.29 ) }
    dend_100 { pt3dadd( 41.0702, -107.987, -99.3375, 0.29 ) }
    dend_100 { pt3dadd( 41.1228, -108.277, -99.8392, 0.29 ) }
    dend_100 { pt3dadd( 41.1301, -108.316, -99.917, 0.29 ) }
    dend_100 { pt3dadd( 41.2032, -108.621, -100.488, 0.29 ) }
    dend_100 { pt3dadd( 41.3583, -109.153, -101.273, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_100 { pt3dadd( 41.4095, -109.312, -101.421, 0.81 ) }
    dend_100 { pt3dadd( 41.6522, -110.114, -102.09, 1.25 ) }
    dend_100 { pt3dadd( 41.6726, -110.171, -102.133, 1.25 ) }
    dend_100 { pt3dadd( 42.189, -111.325, -102.89, 0.22 ) }
    dend_100 { pt3dadd( 42.5705, -112.035, -103.297, 0.22 ) }
    dend_100 { pt3dadd( 42.6546, -112.184, -103.38, 0.22 ) }
    dend_100 { pt3dadd( 42.9731, -112.799, -103.705, 0.22 ) }
    dend_100 { pt3dadd( 43.191, -113.286, -103.939, 1.03 ) }
    dend_100 { pt3dadd( 43.3515, -113.677, -104.132, 1.33 ) }
    dend_100 { pt3dadd( 43.3787, -113.75, -104.171, 1.33 ) }
    dend_100 { pt3dadd( 43.9679, -115.482, -105.073, 0.29 ) }
    dend_100 { pt3dadd( 44.2296, -116.275, -105.48, 0.29 ) }
    dend_100 { pt3dadd( 44.5306, -117.219, -105.943, 0.29 ) }
    dend_100 { pt3dadd( 44.7355, -117.831, -106.222, 0.74 ) }
    dend_100 { pt3dadd( 44.776, -117.947, -106.27, 0.74 ) }
    dend_100 { pt3dadd( 44.9154, -118.281, -106.389, 1.11 ) }
    dend_100 { pt3dadd( 44.9552, -118.36, -106.408, 1.11 ) }
    dend_100 { pt3dadd( 45.5547, -119.343, -106.664, 0.37 ) }
    dend_100 { pt3dadd( 45.916, -119.866, -106.809, 0.37 ) }
    dend_100 { pt3dadd( 45.9824, -119.976, -106.838, 0.37 ) }
    dend_100 { pt3dadd( 46.33, -120.613, -107.009, 0.37 ) }
    dend_100 { pt3dadd( 46.369, -120.689, -107.03, 0.37 ) }
    dend_100 { pt3dadd( 46.5523, -121.093, -107.134, 0.81 ) }
    dend_100 { pt3dadd( 46.7515, -121.607, -107.261, 0.81 ) }
    dend_100 { pt3dadd( 47.3227, -123.232, -107.653, 0.29 ) }
    dend_100 { pt3dadd( 47.5919, -124.19, -108.0, 0.29 ) }
    dend_100 { pt3dadd( 47.6095, -124.271, -108.035, 0.29 ) }
    dend_100 { pt3dadd( 47.7614, -125.075, -108.418, 0.29 ) }
    dend_100 { pt3dadd( 47.9171, -125.99, -108.874, 1.18 ) }
    dend_100 { pt3dadd( 48.0784, -126.883, -109.331, 1.47 ) }
    dend_100 { pt3dadd( 48.468, -129.039, -110.631, 0.29 ) }
    dend_100 { pt3dadd( 48.602, -129.79, -111.12, 0.29 ) }
    dend_100 { pt3dadd( 48.7255, -130.504, -111.537, 0.74 ) }
    dend_100 { pt3dadd( 48.9514, -131.844, -112.223, 0.29 ) }
    dend_100 { pt3dadd( 49.1329, -132.978, -112.72, 0.29 ) }
    dend_100 { pt3dadd( 49.3501, -134.54, -113.32, 0.81 ) }
    dend_100 { pt3dadd( 49.4205, -135.037, -113.471, 1.4 ) }
    dend_100 { pt3dadd( 49.7123, -137.114, -114.13, 0.22 ) }
    dend_100 { pt3dadd( 49.89, -138.396, -114.541, 0.22 ) }
    dend_100 { pt3dadd( 49.89, -138.396, -114.541, 0.96 ) }
    dend_100 { pt3dadd( 50.2573, -140.389, -115.142, 0.29 ) }
    dend_100 { pt3dadd( 50.2765, -140.471, -115.165, 0.29 ) }
    dend_100 { pt3dadd( 50.714, -141.777, -115.861, 0.29 ) }
    dend_100 { pt3dadd( 50.9112, -142.218, -116.237, 1.18 ) }
    dend_100 { pt3dadd( 51.1587, -142.685, -116.709, 1.18 ) }
    dend_100 { pt3dadd( 51.2892, -142.923, -116.956, 1.33 ) }
    dend_100 { pt3dadd( 51.3724, -143.062, -117.108, 1.33 ) }
    dend_100 { pt3dadd( 52.4258, -145.036, -119.265, 0.29 ) }
    dend_100 { pt3dadd( 52.6843, -145.638, -119.927, 0.29 ) }
    dend_100 { pt3dadd( 52.7116, -145.723, -120.014, 0.29 ) }
    dend_100 { pt3dadd( 52.9058, -146.449, -120.669, 0.29 ) }
    dend_100 { pt3dadd( 52.9229, -146.517, -120.721, 0.29 ) }
    dend_100 { pt3dadd( 53.1265, -147.281, -121.218, 0.59 ) }
    dend_100 { pt3dadd( 53.2525, -147.778, -121.451, 0.96 ) }
    dend_100 { pt3dadd( 53.5794, -149.167, -122.347, 0.29 ) }
    dend_100 { pt3dadd( 53.7745, -150.056, -123.167, 0.29 ) }
    dend_100 { pt3dadd( 53.8315, -150.321, -123.534, 0.74 ) }
    dend_100 { pt3dadd( 53.8713, -150.497, -123.823, 1.11 ) }
    dend_100 { pt3dadd( 53.9262, -150.732, -124.327, 1.47 ) }
    dend_100 { pt3dadd( 54.1788, -151.965, -127.347, 0.22 ) }
    dend_100 { pt3dadd( 54.3219, -152.911, -129.794, 0.22 ) }
    dend_100 { pt3dadd( 54.434, -153.958, -132.637, 1.11 ) }
    dend_100 { pt3dadd( 54.4539, -154.181, -133.263, 1.55 ) }
    dend_100 { pt3dadd( 54.5781, -155.765, -137.888, 0.37 ) }
    dend_100 { pt3dadd( 54.6239, -156.294, -139.52, 0.37 ) }
    dend_100 { pt3dadd( 54.6517, -156.521, -140.253, 0.74 ) }
    dend_100 { pt3dadd( 54.6517, -156.521, -140.253, 1.4 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 67/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -20.0076, -86.9352, -43.006, 0.74 ) }
    dend_98 { pt3dadd( -22.8689, -86.8289, -45.3019, 0.74 ) }
    dend_98 { pt3dadd( -22.925, -86.8274, -45.3427, 0.74 ) }
    dend_98 { pt3dadd( -26.3767, -87.0221, -47.9277, 0.29 ) }
    dend_98 { pt3dadd( -26.9203, -87.079, -48.3252, 0.29 ) }
    dend_98 { pt3dadd( -27.1053, -87.1072, -48.4548, 0.59 ) }
    dend_98 { pt3dadd( -30.3819, -87.8264, -50.5405, 0.96 ) }
    dend_98 { pt3dadd( -31.649, -88.194, -51.2228, 1.55 ) }
    dend_98 { pt3dadd( -33.8903, -88.9697, -52.3251, 0.59 ) }
    dend_98 { pt3dadd( -34.5135, -89.2207, -52.6051, 0.59 ) }
    dend_98 { pt3dadd( -37.2268, -90.3308, -53.7122, 1.03 ) }
    dend_98 { pt3dadd( -40.029, -91.4765, -54.7458, 0.22 ) }
    dend_98 { pt3dadd( -40.2288, -91.5586, -54.8052, 1.03 ) }
    dend_98 { pt3dadd( -40.6994, -91.7265, -54.9268, 1.03 ) }
    dend_98 { pt3dadd( -45.0679, -92.996, -55.8662, 0.74 ) }
    dend_98 { pt3dadd( -46.3072, -93.3205, -56.1333, 0.37 ) }
    dend_98 { pt3dadd( -46.3072, -93.3205, -56.1333, 1.03 ) }
    dend_98 { pt3dadd( -47.0185, -93.4905, -56.2742, 1.03 ) }
    dend_98 { pt3dadd( -50.5051, -94.3882, -56.9594, 0.29 ) }
    dend_98 { pt3dadd( -50.8484, -94.487, -57.0243, 0.88 ) }
    dend_98 { pt3dadd( -51.0744, -94.5633, -57.0556, 1.33 ) }
    dend_98 { pt3dadd( -53.1829, -95.2892, -57.3459, 0.44 ) }
    dend_98 { pt3dadd( -53.2385, -95.3081, -57.3496, 0.44 ) }
    dend_98 { pt3dadd( -54.4582, -95.7236, -57.3189, 1.25 ) }
    dend_98 { pt3dadd( -54.5892, -95.7607, -57.2844, 1.25 ) }
    dend_98 { pt3dadd( -54.9156, -95.8021, -57.1473, 1.62 ) }
    dend_98 { pt3dadd( -56.1622, -95.532, -56.1169, 0.59 ) }
    dend_98 { pt3dadd( -56.51, -95.2322, -55.5545, 0.96 ) }
    dend_98 { pt3dadd( -56.6026, -95.1124, -55.3485, 1.33 ) }
    dend_98 { pt3dadd( -57.245, -93.7689, -53.116, 0.29 ) }
    dend_98 { pt3dadd( -57.3679, -93.4042, -52.5203, 0.66 ) }
    dend_98 { pt3dadd( -57.3819, -93.2597, -52.3096, 1.11 ) }
    dend_98 { pt3dadd( -57.3565, -93.1348, -52.1531, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_98 { pt3dadd( -57.3126, -92.9806, -51.9816, 1.11 ) }
    dend_98 { pt3dadd( -57.2294, -92.6901, -51.6721, 0.66 ) }
    dend_98 { pt3dadd( -57.513, -92.76, -51.3025, 0.66 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 3/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -20.0076, -86.9352, -43.006, 1.33 ) }
    dend_97 { pt3dadd( -20.073, -87.1009, -43.0687, 1.33 ) }
    dend_97 { pt3dadd( -20.7174, -89.0134, -43.7932, 0.81 ) }
    dend_97 { pt3dadd( -21.0445, -89.9924, -44.2004, 0.44 ) }
    dend_97 { pt3dadd( -21.19, -90.4633, -44.4044, 0.44 ) }
    dend_97 { pt3dadd( -21.4975, -91.6154, -44.8919, 0.15 ) }
    dend_97 { pt3dadd( -21.664, -92.3945, -45.2147, 0.29 ) }
    dend_97 { pt3dadd( -21.7009, -92.7924, -45.3746, 0.74 ) }
    dend_97 { pt3dadd( -21.6858, -93.7067, -45.7059, 0.52 ) }
    dend_97 { pt3dadd( -21.678, -94.1028, -45.8764, 0.37 ) }
    dend_97 { pt3dadd( -21.6467, -94.8146, -46.2114, 0.37 ) }
    dend_97 { pt3dadd( -21.5639, -95.4592, -46.5233, 0.74 ) }
    dend_97 { pt3dadd( -21.3956, -96.1918, -46.814, 0.74 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 16/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -4.56134, -111.756, -85.8663, 0.29 ) }
    dend_90 { pt3dadd( -5.13976, -113.038, -87.0473, 0.29 ) }
    dend_90 { pt3dadd( -5.28886, -113.374, -87.3367, 0.29 ) }
    dend_90 { pt3dadd( -5.50294, -113.811, -87.6921, 0.29 ) }
    dend_90 { pt3dadd( -5.61462, -114.076, -87.9343, 0.81 ) }
    dend_90 { pt3dadd( -5.71877, -114.324, -88.1496, 0.81 ) }
    dend_90 { pt3dadd( -6.00589, -115.081, -88.7956, 0.15 ) }
    dend_90 { pt3dadd( -6.1634, -115.546, -89.1507, 0.22 ) }
    dend_90 { pt3dadd( -6.26235, -115.946, -89.4684, 0.96 ) }
    dend_90 { pt3dadd( -6.43076, -116.919, -90.27, 0.59 ) }
    dend_90 { pt3dadd( -6.57032, -117.87, -91.0586, 0.22 ) }
    dend_90 { pt3dadd( -6.65744, -118.484, -91.5602, 0.29 ) }
    dend_90 { pt3dadd( -6.71063, -118.8, -91.7983, 0.88 ) }
    dend_90 { pt3dadd( -6.79333, -119.251, -92.1255, 0.88 ) }
    dend_90 { pt3dadd( -6.95239, -120.052, -92.6438, 0.29 ) }
    dend_90 { pt3dadd( -7.03062, -120.334, -92.797, 0.52 ) }
    dend_90 { pt3dadd( -7.08282, -120.526, -92.8997, 0.66 ) }
    dend_90 { pt3dadd( -7.32643, -121.242, -93.2284, 0.22 ) }
    dend_90 { pt3dadd( -7.45379, -121.653, -93.4535, 0.22 ) }
    dend_90 { pt3dadd( -7.52858, -121.945, -93.6124, 0.22 ) }
    dend_90 { pt3dadd( -7.54778, -122.072, -93.679, 0.22 ) }
    dend_90 { pt3dadd( -7.57478, -122.539, -93.9412, 0.88 ) }
    dend_90 { pt3dadd( -7.5604, -122.728, -94.0765, 1.11 ) }
    dend_90 { pt3dadd( -7.40035, -123.799, -94.9491, 0.29 ) }
    dend_90 { pt3dadd( -7.35396, -124.132, -95.2569, 0.29 ) }
    dend_90 { pt3dadd( -7.31243, -124.58, -95.6807, 0.44 ) }
    dend_90 { pt3dadd( -7.30951, -124.626, -95.7251, 0.44 ) }
    dend_90 { pt3dadd( -7.28448, -125.59, -96.6291, 0.22 ) }
    dend_90 { pt3dadd( -7.24334, -125.901, -96.9844, 0.37 ) }
    dend_90 { pt3dadd( -7.14981, -126.38, -97.574, 0.22 ) }
    dend_90 { pt3dadd( -7.08635, -126.64, -97.9264, 0.81 ) }
    dend_90 { pt3dadd( -7.077, -126.678, -97.9785, 0.81 ) }
    dend_90 { pt3dadd( -7.02805, -126.887, -98.253, 1.33 ) }
    dend_90 { pt3dadd( -6.64514, -128.43, -100.339, 0.29 ) }
    dend_90 { pt3dadd( -6.59483, -128.62, -100.6, 0.29 ) }
    dend_90 { pt3dadd( -6.53912, -128.817, -100.86, 0.29 ) }
    dend_90 { pt3dadd( -6.45761, -129.068, -101.184, 0.74 ) }
    dend_90 { pt3dadd( -6.39189, -129.276, -101.428, 0.88 ) }
    dend_90 { pt3dadd( -6.06736, -130.333, -102.546, 0.22 ) }
    dend_90 { pt3dadd( -5.98708, -130.624, -102.788, 0.22 ) }
    dend_90 { pt3dadd( -5.89555, -130.922, -103.041, 0.22 ) }
    dend_90 { pt3dadd( -5.69851, -131.529, -103.517, 0.66 ) }
    dend_90 { pt3dadd( -5.61375, -131.794, -103.7, 1.11 ) }
    dend_90 { pt3dadd( -5.57182, -131.945, -103.787, 1.33 ) }
    dend_90 { pt3dadd( -5.3911, -132.728, -104.078, 0.22 ) }
    dend_90 { pt3dadd( -5.30939, -133.1, -104.23, 0.22 ) }
    dend_90 { pt3dadd( -5.21419, -133.686, -104.456, 0.22 ) }
    dend_90 { pt3dadd( -5.17612, -133.98, -104.553, 0.22 ) }
    dend_90 { pt3dadd( -5.16754, -134.048, -104.573, 0.59 ) }
    dend_90 { pt3dadd( -5.12625, -134.306, -104.644, 0.59 ) }
    dend_90 { pt3dadd( -4.94364, -135.226, -104.86, 0.22 ) }
    dend_90 { pt3dadd( -4.77681, -135.961, -105.043, 0.22 ) }
    dend_90 { pt3dadd( -4.70382, -136.272, -105.121, 0.22 ) }
    dend_90 { pt3dadd( -4.60376, -136.718, -105.225, 0.96 ) }
    dend_90 { pt3dadd( -4.48482, -137.294, -105.339, 0.22 ) }
    dend_90 { pt3dadd( -4.44702, -137.482, -105.376, 0.22 ) }
    dend_90 { pt3dadd( -4.38512, -137.794, -105.425, 0.22 ) }
    dend_90 { pt3dadd( -4.31925, -138.102, -105.486, 0.22 ) }
    dend_90 { pt3dadd( -4.25392, -138.415, -105.583, 0.22 ) }
    dend_90 { pt3dadd( -4.20464, -138.707, -105.688, 0.22 ) }
    dend_90 { pt3dadd( -4.1356, -139.339, -105.925, 0.59 ) }
    dend_90 { pt3dadd( -4.11732, -139.52, -106.001, 0.74 ) }
    dend_90 { pt3dadd( -4.08578, -139.877, -106.159, 0.74 ) }
    dend_90 { pt3dadd( -3.98816, -141.001, -106.655, 0.29 ) }
    dend_90 { pt3dadd( -3.9425, -141.622, -106.891, 0.29 ) }
    dend_90 { pt3dadd( -3.92178, -141.89, -106.98, 0.29 ) }
    dend_90 { pt3dadd( -3.8787, -142.464, -107.137, 0.59 ) }
    dend_90 { pt3dadd( -3.85403, -142.72, -107.195, 0.96 ) }
    dend_90 { pt3dadd( -3.81401, -143.057, -107.25, 0.96 ) }
    dend_90 { pt3dadd( -3.70055, -143.834, -107.292, 0.22 ) }
    dend_90 { pt3dadd( -3.61402, -144.355, -107.309, 0.22 ) }
    dend_90 { pt3dadd( -3.57593, -144.556, -107.309, 0.29 ) }
    dend_90 { pt3dadd( -3.47817, -145.077, -107.284, 0.22 ) }
    dend_90 { pt3dadd( -3.42928, -145.327, -107.273, 0.37 ) }
    dend_90 { pt3dadd( -3.36098, -145.575, -107.295, 0.37 ) }
    dend_90 { pt3dadd( -3.23707, -145.897, -107.359, 0.22 ) }
    dend_90 { pt3dadd( -3.05655, -146.294, -107.451, 0.29 ) }
    dend_90 { pt3dadd( -2.84685, -146.694, -107.548, 0.29 ) }
    dend_90 { pt3dadd( -2.82105, -146.739, -107.558, 0.29 ) }
    dend_90 { pt3dadd( -2.18935, -147.808, -107.78, 1.03 ) }
    dend_90 { pt3dadd( -1.92346, -148.279, -107.863, 1.03 ) }
    dend_90 { pt3dadd( -1.56628, -148.974, -107.959, 0.22 ) }
    dend_90 { pt3dadd( -1.2799, -149.619, -108.022, 0.22 ) }
    dend_90 { pt3dadd( -1.02547, -150.253, -108.063, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_90 { pt3dadd( -0.983078, -150.37, -108.065, 0.22 ) }
    dend_90 { pt3dadd( -0.767229, -151.114, -108.019, 0.22 ) }
    dend_90 { pt3dadd( -0.592143, -151.797, -107.978, 0.22 ) }
    dend_90 { pt3dadd( -0.47711, -152.36, -107.941, 0.22 ) }
    dend_90 { pt3dadd( -0.423961, -152.701, -107.928, 0.88 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 5/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -4.56134, -111.756, -85.8663, 0.22 ) }
    dend_89 { pt3dadd( -2.41745, -114.559, -89.7094, 0.22 ) }
    dend_89 { pt3dadd( -1.99212, -115.113, -90.3786, 0.22 ) }
    dend_89 { pt3dadd( -1.56587, -115.656, -90.9848, 0.22 ) }
    dend_89 { pt3dadd( -0.860817, -116.504, -91.9034, 0.22 ) }
    dend_89 { pt3dadd( -0.569883, -116.837, -92.2551, 0.66 ) }
    dend_89 { pt3dadd( 0.547957, -118.078, -93.5207, 0.15 ) }
    dend_89 { pt3dadd( 1.10405, -118.681, -93.9605, 0.15 ) }
    dend_89 { pt3dadd( 1.30929, -118.875, -94.1207, 0.15 ) }
    dend_89 { pt3dadd( 2.18499, -119.638, -94.7967, 0.74 ) }
    dend_89 { pt3dadd( 2.4092, -119.824, -94.9422, 0.96 ) }
    dend_89 { pt3dadd( 2.68135, -120.039, -95.105, 0.96 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 17/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 10.8798, -140.078, -76.168, 0.22 ) }
    dend_87 { pt3dadd( 10.7911, -140.802, -76.5362, 0.22 ) }
    dend_87 { pt3dadd( 10.7543, -141.264, -76.7603, 0.22 ) }
    dend_87 { pt3dadd( 10.7908, -141.756, -77.0154, 0.22 ) }
    dend_87 { pt3dadd( 10.8228, -141.953, -77.1132, 0.81 ) }
    dend_87 { pt3dadd( 10.8717, -142.173, -77.2107, 1.11 ) }
    dend_87 { pt3dadd( 10.9307, -142.385, -77.3013, 1.03 ) }
    dend_87 { pt3dadd( 10.9477, -142.426, -77.317, 1.03 ) }
    dend_87 { pt3dadd( 11.301, -143.164, -77.5932, 0.29 ) }
    dend_87 { pt3dadd( 11.4688, -143.505, -77.7087, 0.29 ) }
    dend_87 { pt3dadd( 11.6427, -143.895, -77.8417, 0.37 ) }
    dend_87 { pt3dadd( 11.7565, -144.183, -77.9372, 0.22 ) }
    dend_87 { pt3dadd( 11.8784, -144.539, -78.0645, 0.22 ) }
    dend_87 { pt3dadd( 11.9945, -144.92, -78.2008, 0.74 ) }
    dend_87 { pt3dadd( 12.0164, -145.009, -78.2316, 1.03 ) }
    dend_87 { pt3dadd( 12.151, -145.696, -78.5432, 0.22 ) }
    dend_87 { pt3dadd( 12.187, -145.956, -78.6763, 0.22 ) }
    dend_87 { pt3dadd( 12.2279, -146.39, -78.9037, 0.74 ) }
    dend_87 { pt3dadd( 12.2442, -146.559, -79.0068, 0.74 ) }
    dend_87 { pt3dadd( 12.2551, -146.695, -79.0937, 0.74 ) }
    dend_87 { pt3dadd( 12.2947, -147.44, -79.6193, 0.22 ) }
    dend_87 { pt3dadd( 12.3006, -147.649, -79.7803, 0.29 ) }
    dend_87 { pt3dadd( 12.3002, -147.8, -79.8985, 0.29 ) }
    dend_87 { pt3dadd( 12.2684, -148.47, -80.4104, 0.22 ) }
    dend_87 { pt3dadd( 12.242, -148.671, -80.5781, 0.22 ) }
    dend_87 { pt3dadd( 12.1722, -149.073, -80.9342, 0.37 ) }
    dend_87 { pt3dadd( 12.1669, -149.103, -80.9608, 0.81 ) }
    dend_87 { pt3dadd( 12.134, -149.367, -81.2342, 0.81 ) }
    dend_87 { pt3dadd( 12.1201, -149.498, -81.3803, 0.81 ) }
    dend_87 { pt3dadd( 12.0839, -150.111, -82.2169, 0.22 ) }
    dend_87 { pt3dadd( 12.0822, -150.315, -82.5246, 0.22 ) }
    dend_87 { pt3dadd( 12.0855, -150.498, -82.8159, 0.22 ) }
    dend_87 { pt3dadd( 12.1046, -151.066, -83.717, 0.88 ) }
    dend_87 { pt3dadd( 12.1142, -151.197, -83.93, 0.88 ) }
    dend_87 { pt3dadd( 12.228, -152.063, -85.2988, 0.37 ) }
    dend_87 { pt3dadd( 12.2505, -152.174, -85.4904, 0.52 ) }
    dend_87 { pt3dadd( 12.2636, -152.252, -85.6314, 0.74 ) }
    dend_87 { pt3dadd( 12.2844, -152.4, -85.8973, 0.74 ) }
    dend_87 { pt3dadd( 12.3934, -153.064, -87.0451, 0.22 ) }
    dend_87 { pt3dadd( 12.4283, -153.246, -87.3501, 0.59 ) }
    dend_87 { pt3dadd( 12.633, -154.277, -88.903, 0.29 ) }
    dend_87 { pt3dadd( 12.6676, -154.444, -89.15, 0.74 ) }
    dend_87 { pt3dadd( 12.6911, -154.558, -89.3125, 0.74 ) }
    dend_87 { pt3dadd( 12.7585, -154.994, -89.8838, 0.22 ) }
    dend_87 { pt3dadd( 12.7808, -155.217, -90.1294, 0.22 ) }
    dend_87 { pt3dadd( 12.7982, -155.519, -90.4027, 0.22 ) }
    dend_87 { pt3dadd( 12.8184, -156.009, -90.6779, 0.81 ) }
    dend_87 { pt3dadd( 12.8279, -156.189, -90.7696, 1.18 ) }
    dend_87 { pt3dadd( 12.8343, -156.49, -90.9031, 0.66 ) }
    dend_87 { pt3dadd( 12.838, -156.876, -91.0404, 0.29 ) }
    dend_87 { pt3dadd( 12.8452, -157.289, -91.1814, 0.29 ) }
    dend_87 { pt3dadd( 12.8523, -157.489, -91.2428, 0.44 ) }
    dend_87 { pt3dadd( 12.8691, -157.894, -91.3479, 0.15 ) }
    dend_87 { pt3dadd( 12.8928, -158.086, -91.4308, 0.15 ) }
    dend_87 { pt3dadd( 12.9667, -158.451, -91.6249, 0.59 ) }
    dend_87 { pt3dadd( 13.0036, -158.597, -91.7192, 0.96 ) }
    dend_87 { pt3dadd( 13.0659, -158.802, -91.8696, 0.96 ) }
    dend_87 { pt3dadd( 13.1189, -158.958, -91.9875, 0.96 ) }
    dend_87 { pt3dadd( 13.4468, -159.881, -92.6929, 0.29 ) }
    dend_87 { pt3dadd( 13.5347, -160.123, -92.8682, 0.29 ) }
    dend_87 { pt3dadd( 13.6739, -160.518, -93.1306, 0.37 ) }
    dend_87 { pt3dadd( 13.7818, -160.833, -93.3355, 1.03 ) }
    dend_87 { pt3dadd( 13.8585, -161.075, -93.4833, 1.25 ) }
    dend_87 { pt3dadd( 14.1488, -162.11, -94.1546, 0.29 ) }
    dend_87 { pt3dadd( 14.2174, -162.424, -94.3586, 0.29 ) }
    dend_87 { pt3dadd( 14.268, -162.714, -94.5588, 0.29 ) }
    dend_87 { pt3dadd( 14.3417, -163.228, -94.9151, 0.59 ) }
    dend_87 { pt3dadd( 14.3701, -163.463, -95.0887, 0.88 ) }
    dend_87 { pt3dadd( 14.5081, -164.745, -96.0942, 0.22 ) }
    dend_87 { pt3dadd( 14.5254, -164.991, -96.2922, 0.22 ) }
    dend_87 { pt3dadd( 14.5385, -165.233, -96.4912, 0.29 ) }
    dend_87 { pt3dadd( 14.5412, -165.468, -96.6795, 0.29 ) }
    dend_87 { pt3dadd( 14.5393, -165.914, -97.001, 0.29 ) }
    dend_87 { pt3dadd( 14.5429, -166.427, -97.336, 0.74 ) }
    dend_87 { pt3dadd( 14.5488, -166.64, -97.448, 1.25 ) }
    dend_87 { pt3dadd( 14.556, -166.774, -97.5147, 1.25 ) }
    dend_87 { pt3dadd( 14.6183, -168.045, -98.0936, 0.29 ) }
    dend_87 { pt3dadd( 14.6252, -168.327, -98.2045, 0.29 ) }
    dend_87 { pt3dadd( 14.6399, -168.693, -98.3072, 0.74 ) }
    dend_87 { pt3dadd( 14.6598, -168.98, -98.3628, 1.18 ) }
    dend_87 { pt3dadd( 14.692, -169.268, -98.4044, 0.74 ) }
    dend_87 { pt3dadd( 14.7651, -169.727, -98.4626, 0.22 ) }
    dend_87 { pt3dadd( 14.8487, -170.097, -98.4934, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_87 { pt3dadd( 14.9922, -170.763, -98.5804, 0.22 ) }
    dend_87 { pt3dadd( 15.0385, -170.975, -98.6237, 0.44 ) }
    dend_87 { pt3dadd( 15.0861, -171.204, -98.6831, 0.44 ) }
    dend_87 { pt3dadd( 15.1984, -171.777, -98.8688, 0.29 ) }
    dend_87 { pt3dadd( 15.2517, -172.056, -98.9754, 0.59 ) }
    dend_87 { pt3dadd( 15.3039, -172.377, -99.0855, 0.59 ) }
    dend_87 { pt3dadd( 15.3539, -172.806, -99.2071, 0.22 ) }
    dend_87 { pt3dadd( 15.3865, -173.113, -99.2636, 0.22 ) }
    dend_87 { pt3dadd( 15.4305, -173.474, -99.3023, 0.81 ) }
    dend_87 { pt3dadd( 15.4343, -173.514, -99.3003, 0.81 ) }
    dend_87 { pt3dadd( 15.5126, -174.386, -99.1954, 0.88 ) }
    dend_87 { pt3dadd( 15.5819, -175.04, -99.1415, 0.29 ) }
    dend_87 { pt3dadd( 15.6082, -175.24, -99.1285, 0.29 ) }
    dend_87 { pt3dadd( 15.6959, -175.73, -99.1186, 0.66 ) }
    dend_87 { pt3dadd( 15.8104, -176.307, -99.1327, 0.96 ) }
    dend_87 { pt3dadd( 15.8311, -176.406, -99.1445, 0.96 ) }
    dend_87 { pt3dadd( 16.0065, -177.204, -99.327, 0.22 ) }
    dend_87 { pt3dadd( 16.0548, -177.458, -99.3691, 0.22 ) }
    dend_87 { pt3dadd( 16.1104, -177.76, -99.4076, 0.22 ) }
    dend_87 { pt3dadd( 16.1414, -177.954, -99.4257, 0.22 ) }
    dend_87 { pt3dadd( 16.1844, -178.322, -99.4599, 0.96 ) }
    dend_87 { pt3dadd( 16.1927, -178.512, -99.4673, 1.18 ) }
    dend_87 { pt3dadd( 16.1497, -179.345, -99.4419, 0.15 ) }
    dend_87 { pt3dadd( 16.1203, -179.594, -99.4343, 0.15 ) }
    dend_87 { pt3dadd( 16.0836, -179.824, -99.4265, 0.15 ) }
    dend_87 { pt3dadd( 16.0123, -180.248, -99.3884, 0.22 ) }
    dend_87 { pt3dadd( 15.9877, -180.421, -99.364, 0.22 ) }
    dend_87 { pt3dadd( 15.9585, -180.665, -99.3269, 0.22 ) }
    dend_87 { pt3dadd( 15.9276, -181.012, -99.2702, 0.81 ) }
    dend_87 { pt3dadd( 15.8992, -181.337, -99.2103, 0.96 ) }
    dend_87 { pt3dadd( 15.8532, -181.91, -99.0814, 0.29 ) }
    dend_87 { pt3dadd( 15.8276, -182.222, -99.0019, 0.22 ) }
    dend_87 { pt3dadd( 15.7941, -182.506, -98.9285, 0.22 ) }
    dend_87 { pt3dadd( 15.7865, -182.545, -98.9237, 0.22 ) }
    dend_87 { pt3dadd( 15.6872, -182.882, -98.9278, 0.22 ) }
    dend_87 { pt3dadd( 15.5887, -183.17, -98.9593, 0.81 ) }
    dend_87 { pt3dadd( 15.5, -183.411, -99.0041, 1.18 ) }
    dend_87 { pt3dadd( 15.4346, -183.595, -99.0622, 1.18 ) }
    dend_87 { pt3dadd( 15.1571, -184.496, -99.4302, 0.22 ) }
    dend_87 { pt3dadd( 15.0695, -184.85, -99.5819, 0.22 ) }
    dend_87 { pt3dadd( 15.0158, -185.159, -99.7165, 0.22 ) }
    dend_87 { pt3dadd( 14.9918, -185.358, -99.8039, 0.22 ) }
    dend_87 { pt3dadd( 14.9316, -186.183, -100.131, 0.52 ) }
    dend_87 { pt3dadd( 14.9168, -186.463, -100.224, 1.03 ) }
    dend_87 { pt3dadd( 14.8833, -186.979, -100.353, 0.29 ) }
    dend_87 { pt3dadd( 14.8292, -187.366, -100.404, 0.29 ) }
    dend_87 { pt3dadd( 14.7926, -187.559, -100.413, 0.37 ) }
    dend_87 { pt3dadd( 14.714, -187.955, -100.404, 0.22 ) }
    dend_87 { pt3dadd( 14.6256, -188.391, -100.364, 0.22 ) }
    dend_87 { pt3dadd( 14.5633, -188.713, -100.336, 0.22 ) }
    dend_87 { pt3dadd( 14.3408, -189.877, -100.258, 1.47 ) }
    dend_87 { pt3dadd( 14.3135, -190.027, -100.247, 1.47 ) }
    dend_87 { pt3dadd( 14.2503, -190.467, -100.226, 0.29 ) }
    dend_87 { pt3dadd( 14.2258, -190.806, -100.219, 0.22 ) }
    dend_87 { pt3dadd( 14.2283, -191.193, -100.209, 0.22 ) }
    dend_87 { pt3dadd( 14.2709, -191.587, -100.219, 0.22 ) }
    dend_87 { pt3dadd( 14.2804, -191.632, -100.225, 0.22 ) }
    dend_87 { pt3dadd( 14.367, -192.0, -100.276, 0.59 ) }
    dend_87 { pt3dadd( 14.468, -192.385, -100.321, 0.96 ) }
    dend_87 { pt3dadd( 14.5768, -192.759, -100.354, 0.96 ) }
    dend_87 { pt3dadd( 14.7634, -193.395, -100.336, 0.22 ) }
    dend_87 { pt3dadd( 14.8439, -193.674, -100.297, 0.22 ) }
    dend_87 { pt3dadd( 14.8748, -193.802, -100.269, 0.22 ) }
    dend_87 { pt3dadd( 14.9511, -194.164, -100.149, 0.81 ) }
    dend_87 { pt3dadd( 14.9995, -194.398, -100.058, 0.81 ) }
    dend_87 { pt3dadd( 15.1005, -194.895, -99.8678, 0.22 ) }
    dend_87 { pt3dadd( 15.1422, -195.119, -99.7716, 0.22 ) }
    dend_87 { pt3dadd( 15.2338, -195.566, -99.5886, 0.22 ) }
    dend_87 { pt3dadd( 15.3152, -195.891, -99.4693, 0.59 ) }
    dend_87 { pt3dadd( 15.3922, -196.115, -99.399, 0.96 ) }
    dend_87 { pt3dadd( 15.4995, -196.402, -99.3247, 0.22 ) }
    dend_87 { pt3dadd( 15.6149, -196.685, -99.2781, 0.22 ) }
    dend_87 { pt3dadd( 15.6353, -196.736, -99.2709, 0.22 ) }
    dend_87 { pt3dadd( 15.7421, -197.055, -99.2432, 0.22 ) }
    dend_87 { pt3dadd( 15.7914, -197.303, -99.2145, 0.22 ) }
    dend_87 { pt3dadd( 15.8354, -197.713, -99.1444, 0.22 ) }
    dend_87 { pt3dadd( 15.837, -197.854, -99.1197, 0.29 ) }
    dend_87 { pt3dadd( 15.829, -198.015, -99.0938, 0.37 ) }
    dend_87 { pt3dadd( 15.7875, -198.464, -99.0283, 0.22 ) }
    dend_87 { pt3dadd( 15.6874, -199.1, -98.979, 0.74 ) }
    dend_87 { pt3dadd( 15.6258, -199.44, -98.9709, 1.4 ) }
    dend_87 { pt3dadd( 15.5583, -199.909, -99.0225, 0.22 ) }
    dend_87 { pt3dadd( 15.531, -200.14, -99.0736, 0.22 ) }
    dend_87 { pt3dadd( 15.5176, -200.346, -99.1409, 0.22 ) }
    dend_87 { pt3dadd( 15.5107, -200.857, -99.3606, 1.11 ) }
    dend_87 { pt3dadd( 15.5168, -201.075, -99.4858, 1.11 ) }
    dend_87 { pt3dadd( 15.5729, -201.787, -99.9178, 0.22 ) }
    dend_87 { pt3dadd( 15.5937, -201.921, -99.9983, 0.22 ) }
    dend_87 { pt3dadd( 15.6794, -202.337, -100.254, 0.22 ) }
    dend_87 { pt3dadd( 15.766, -202.686, -100.456, 0.74 ) }
    dend_87 { pt3dadd( 15.9781, -203.353, -100.791, 0.29 ) }
    dend_87 { pt3dadd( 16.0728, -203.606, -100.908, 0.29 ) }
    dend_87 { pt3dadd( 16.171, -203.817, -100.992, 0.59 ) }
    dend_87 { pt3dadd( 16.5174, -204.433, -101.228, 0.22 ) }
    dend_87 { pt3dadd( 16.7329, -204.732, -101.336, 0.22 ) }
    dend_87 { pt3dadd( 17.0128, -205.029, -101.494, 0.22 ) }
    dend_87 { pt3dadd( 17.231, -205.233, -101.615, 0.22 ) }
    dend_87 { pt3dadd( 17.5718, -205.537, -101.827, 1.25 ) }
    dend_87 { pt3dadd( 17.7435, -205.684, -101.94, 1.69 ) }
    dend_87 { pt3dadd( 17.8901, -205.802, -102.034, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_87 { pt3dadd( 18.9715, -206.658, -102.804, 0.29 ) }
    dend_87 { pt3dadd( 19.2693, -206.898, -103.041, 0.29 ) }
    dend_87 { pt3dadd( 19.3015, -206.923, -103.066, 0.29 ) }
    dend_87 { pt3dadd( 19.4572, -207.03, -103.196, 0.29 ) }
    dend_87 { pt3dadd( 19.5888, -207.11, -103.296, 0.29 ) }
    dend_87 { pt3dadd( 19.6215, -207.127, -103.315, 0.29 ) }
    dend_87 { pt3dadd( 19.8585, -207.247, -103.394, 0.29 ) }
    dend_87 { pt3dadd( 20.1356, -207.408, -103.548, 0.29 ) }
    dend_87 { pt3dadd( 20.7738, -207.836, -103.937, 0.29 ) }
    dend_87 { pt3dadd( 21.0044, -208.008, -104.088, 0.29 ) }
    dend_87 { pt3dadd( 21.3946, -208.33, -104.39, 1.33 ) }
    dend_87 { pt3dadd( 21.5818, -208.502, -104.543, 1.33 ) }
    dend_87 { pt3dadd( 22.4438, -209.387, -105.281, 0.22 ) }
    dend_87 { pt3dadd( 22.6538, -209.616, -105.474, 0.22 ) }
    dend_87 { pt3dadd( 22.7371, -209.716, -105.55, 0.22 ) }
    dend_87 { pt3dadd( 23.1543, -210.247, -105.943, 0.22 ) }
    dend_87 { pt3dadd( 23.3819, -210.537, -106.146, 1.03 ) }
    dend_87 { pt3dadd( 23.4832, -210.661, -106.222, 1.18 ) }
    dend_87 { pt3dadd( 24.2413, -211.587, -106.64, 0.22 ) }
    dend_87 { pt3dadd( 24.6443, -212.052, -106.837, 0.22 ) }
    dend_87 { pt3dadd( 24.8463, -212.285, -106.903, 0.22 ) }
    dend_87 { pt3dadd( 25.0583, -212.532, -106.925, 0.29 ) }
    dend_87 { pt3dadd( 25.2419, -212.746, -106.913, 0.29 ) }
    dend_87 { pt3dadd( 25.3739, -212.9, -106.858, 0.29 ) }
    dend_87 { pt3dadd( 25.486, -213.04, -106.75, 0.37 ) }
    dend_87 { pt3dadd( 25.786, -213.425, -106.42, 0.44 ) }
    dend_87 { pt3dadd( 25.8518, -213.524, -106.339, 0.44 ) }
    dend_87 { pt3dadd( 26.0424, -213.878, -106.103, 0.22 ) }
    dend_87 { pt3dadd( 26.1343, -214.057, -105.999, 0.22 ) }
    dend_87 { pt3dadd( 26.2503, -214.294, -105.886, 0.29 ) }
    dend_87 { pt3dadd( 26.3612, -214.521, -105.801, 0.29 ) }
    dend_87 { pt3dadd( 26.3888, -214.577, -105.788, 0.29 ) }
    dend_87 { pt3dadd( 26.5942, -215.044, -105.704, 0.22 ) }
    dend_87 { pt3dadd( 26.6934, -215.306, -105.677, 0.22 ) }
    dend_87 { pt3dadd( 26.7796, -215.584, -105.653, 0.22 ) }
    dend_87 { pt3dadd( 26.7895, -215.623, -105.65, 0.22 ) }
    dend_87 { pt3dadd( 26.8194, -215.777, -105.643, 0.22 ) }
    dend_87 { pt3dadd( 26.873, -216.12, -105.628, 0.66 ) }
    dend_87 { pt3dadd( 26.8983, -216.32, -105.62, 0.66 ) }
    dend_87 { pt3dadd( 26.9458, -216.722, -105.603, 0.15 ) }
    dend_87 { pt3dadd( 26.9787, -216.964, -105.59, 0.22 ) }
    dend_87 { pt3dadd( 27.0351, -217.353, -105.568, 0.22 ) }
    dend_87 { pt3dadd( 27.1001, -217.752, -105.544, 0.29 ) }
    dend_87 { pt3dadd( 27.1443, -217.994, -105.529, 0.22 ) }
    dend_87 { pt3dadd( 27.1661, -218.093, -105.522, 0.22 ) }
    dend_87 { pt3dadd( 27.2322, -218.329, -105.506, 0.66 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 46/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 10.8798, -140.078, -76.168, 0.37 ) }
    dend_86 { pt3dadd( 12.3546, -141.364, -77.3228, 0.37 ) }
    dend_86 { pt3dadd( 13.2437, -142.171, -78.0645, 0.29 ) }
    dend_86 { pt3dadd( 13.3098, -142.237, -78.1235, 0.29 ) }
    dend_86 { pt3dadd( 13.8229, -142.78, -78.7053, 0.29 ) }
    dend_86 { pt3dadd( 14.0838, -143.081, -79.0281, 0.29 ) }
    dend_86 { pt3dadd( 15.1092, -144.405, -80.4047, 0.52 ) }
    dend_86 { pt3dadd( 15.2243, -144.595, -80.612, 0.88 ) }
    dend_86 { pt3dadd( 15.3739, -144.914, -80.9605, 0.88 ) }
    dend_86 { pt3dadd( 16.1781, -146.639, -83.0813, 0.15 ) }
    dend_86 { pt3dadd( 16.3665, -147.059, -83.617, 0.15 ) }
    dend_86 { pt3dadd( 16.5195, -147.433, -84.0849, 0.15 ) }
    dend_86 { pt3dadd( 16.8415, -148.299, -85.0922, 0.81 ) }
    dend_86 { pt3dadd( 16.9118, -148.497, -85.3138, 0.81 ) }
    dend_86 { pt3dadd( 17.6316, -150.711, -87.5888, 0.22 ) }
    dend_86 { pt3dadd( 17.7733, -151.28, -88.0704, 0.22 ) }
    dend_86 { pt3dadd( 17.9149, -151.877, -88.5232, 0.22 ) }
    dend_86 { pt3dadd( 17.9859, -152.213, -88.7268, 0.59 ) }
    dend_86 { pt3dadd( 18.2306, -153.769, -89.3847, 0.15 ) }
    dend_86 { pt3dadd( 18.2864, -154.445, -89.5656, 0.15 ) }
    dend_86 { pt3dadd( 18.249, -155.572, -89.6386, 0.66 ) }
    dend_86 { pt3dadd( 18.2317, -156.034, -89.6826, 0.96 ) }
    dend_86 { pt3dadd( 18.2212, -157.082, -89.789, 0.22 ) }
    dend_86 { pt3dadd( 18.2212, -157.179, -89.7989, 0.22 ) }
    dend_86 { pt3dadd( 18.2287, -157.874, -89.8564, 0.22 ) }
    dend_86 { pt3dadd( 18.2565, -158.314, -89.9346, 0.22 ) }
    dend_86 { pt3dadd( 18.3488, -159.172, -90.1522, 0.22 ) }
    dend_86 { pt3dadd( 18.4613, -159.95, -90.3368, 0.22 ) }
    dend_86 { pt3dadd( 18.5317, -160.344, -90.4169, 0.66 ) }
    dend_86 { pt3dadd( 18.6199, -160.723, -90.4997, 0.66 ) }
    dend_86 { pt3dadd( 18.8684, -161.558, -90.6679, 0.29 ) }
    dend_86 { pt3dadd( 19.0588, -162.101, -90.8035, 0.29 ) }
    dend_86 { pt3dadd( 19.1977, -162.552, -90.9285, 0.66 ) }
    dend_86 { pt3dadd( 19.2941, -162.922, -91.0461, 0.66 ) }
    dend_86 { pt3dadd( 19.501, -163.895, -91.3642, 1.11 ) }
    dend_86 { pt3dadd( 19.6547, -164.775, -91.645, 0.88 ) }
    dend_86 { pt3dadd( 19.8893, -166.292, -92.1584, 0.22 ) }
    dend_86 { pt3dadd( 20.0108, -167.222, -92.4866, 0.22 ) }
    dend_86 { pt3dadd( 20.0966, -168.08, -92.7628, 0.22 ) }
    dend_86 { pt3dadd( 20.1346, -168.632, -92.9177, 0.22 ) }
    dend_86 { pt3dadd( 20.1483, -169.317, -93.0665, 0.81 ) }
    dend_86 { pt3dadd( 20.1509, -170.158, -93.2076, 0.81 ) }
    dend_86 { pt3dadd( 20.1499, -170.762, -93.2577, 0.81 ) }
    dend_86 { pt3dadd( 20.181, -171.864, -93.3238, 0.22 ) }
    dend_86 { pt3dadd( 20.1817, -172.311, -93.3447, 0.22 ) }
    dend_86 { pt3dadd( 20.1826, -173.029, -93.358, 0.22 ) }
    dend_86 { pt3dadd( 20.1888, -173.617, -93.3478, 0.81 ) }
    dend_86 { pt3dadd( 20.1811, -174.155, -93.3252, 0.81 ) }
    dend_86 { pt3dadd( 20.162, -174.648, -93.3152, 0.81 ) }
    dend_86 { pt3dadd( 20.1033, -175.751, -93.3161, 0.22 ) }
    dend_86 { pt3dadd( 20.0654, -176.489, -93.3162, 0.22 ) }
    dend_86 { pt3dadd( 19.9963, -177.492, -93.3229, 0.22 ) }
    dend_86 { pt3dadd( 19.9211, -178.255, -93.3447, 0.22 ) }
    dend_86 { pt3dadd( 19.8425, -178.936, -93.3719, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_86 { pt3dadd( 19.8151, -179.147, -93.3826, 0.59 ) }
    dend_86 { pt3dadd( 19.7949, -179.291, -93.3914, 0.59 ) }
    dend_86 { pt3dadd( 19.7321, -179.7, -93.4201, 0.81 ) }
    dend_86 { pt3dadd( 19.7054, -180.536, -93.525, 0.22 ) }
    dend_86 { pt3dadd( 19.7425, -180.843, -93.566, 0.22 ) }
    dend_86 { pt3dadd( 19.8457, -181.356, -93.6311, 0.59 ) }
    dend_86 { pt3dadd( 19.9431, -181.752, -93.6768, 0.59 ) }
    dend_86 { pt3dadd( 19.9906, -181.922, -93.6953, 0.59 ) }
    dend_86 { pt3dadd( 20.4172, -183.241, -93.8239, 0.22 ) }
    dend_86 { pt3dadd( 20.6571, -183.924, -93.8819, 0.22 ) }
    dend_86 { pt3dadd( 20.941, -184.653, -94.0024, 0.22 ) }
    dend_86 { pt3dadd( 21.1323, -185.101, -94.1038, 0.44 ) }
    dend_86 { pt3dadd( 21.1721, -185.185, -94.1257, 0.44 ) }
    dend_86 { pt3dadd( 21.2993, -185.439, -94.1963, 0.74 ) }
    dend_86 { pt3dadd( 21.4977, -185.802, -94.2993, 0.74 ) }
    dend_86 { pt3dadd( 22.1326, -187.064, -94.699, 0.15 ) }
    dend_86 { pt3dadd( 22.2311, -187.333, -94.7614, 0.15 ) }
    dend_86 { pt3dadd( 22.2869, -187.587, -94.7988, 0.15 ) }
    dend_86 { pt3dadd( 22.3747, -188.167, -94.8524, 0.15 ) }
    dend_86 { pt3dadd( 22.4069, -188.588, -94.8755, 0.66 ) }
    dend_86 { pt3dadd( 22.4284, -189.632, -94.9332, 1.03 ) }
    dend_86 { pt3dadd( 22.3841, -191.126, -94.9886, 0.22 ) }
    dend_86 { pt3dadd( 22.3308, -192.364, -95.0633, 0.22 ) }
    dend_86 { pt3dadd( 22.3169, -192.732, -95.0917, 0.52 ) }
    dend_86 { pt3dadd( 22.3267, -193.157, -95.1766, 0.59 ) }
    dend_86 { pt3dadd( 22.4334, -194.135, -95.5206, 0.15 ) }
    dend_86 { pt3dadd( 22.5544, -194.634, -95.7845, 0.15 ) }
    dend_86 { pt3dadd( 22.6009, -194.743, -95.8709, 0.52 ) }
    dend_86 { pt3dadd( 22.7728, -195.095, -96.1854, 0.74 ) }
    dend_86 { pt3dadd( 23.5174, -196.696, -97.6853, 0.15 ) }
    dend_86 { pt3dadd( 23.7399, -197.208, -98.1691, 0.15 ) }
    dend_86 { pt3dadd( 23.8239, -197.412, -98.3597, 0.59 ) }
    dend_86 { pt3dadd( 24.3735, -198.802, -99.6593, 0.22 ) }
    dend_86 { pt3dadd( 24.5324, -199.269, -100.067, 0.22 ) }
    dend_86 { pt3dadd( 24.7322, -199.981, -100.634, 0.66 ) }
    dend_86 { pt3dadd( 24.8052, -200.346, -100.865, 0.88 ) }
    dend_86 { pt3dadd( 24.8654, -200.737, -101.087, 0.88 ) }
    dend_86 { pt3dadd( 25.0378, -202.235, -101.806, 0.15 ) }
    dend_86 { pt3dadd( 25.1032, -202.898, -102.086, 0.15 ) }
    dend_86 { pt3dadd( 25.1395, -203.177, -102.206, 0.44 ) }
    dend_86 { pt3dadd( 25.2197, -203.672, -102.41, 0.22 ) }
    dend_86 { pt3dadd( 25.2977, -204.163, -102.616, 0.15 ) }
    dend_86 { pt3dadd( 25.3853, -204.904, -102.845, 0.15 ) }
    dend_86 { pt3dadd( 25.601, -206.285, -103.149, 0.88 ) }
    dend_86 { pt3dadd( 25.666, -206.557, -103.203, 0.88 ) }
    dend_86 { pt3dadd( 25.7892, -206.964, -103.262, 0.88 ) }
    dend_86 { pt3dadd( 25.8443, -207.111, -103.276, 0.88 ) }
    dend_86 { pt3dadd( 26.5511, -208.794, -103.301, 0.15 ) }
    dend_86 { pt3dadd( 26.9521, -209.733, -103.252, 0.22 ) }
    dend_86 { pt3dadd( 27.157, -210.218, -103.201, 0.22 ) }
    dend_86 { pt3dadd( 27.5129, -211.084, -103.123, 0.22 ) }
    dend_86 { pt3dadd( 27.6581, -211.466, -103.105, 0.22 ) }
    dend_86 { pt3dadd( 28.0479, -212.534, -103.087, 0.15 ) }
    dend_86 { pt3dadd( 28.1507, -212.83, -103.092, 0.15 ) }
    dend_86 { pt3dadd( 28.3402, -213.475, -103.091, 0.74 ) }
    dend_86 { pt3dadd( 28.5789, -214.322, -103.107, 0.74 ) }
    dend_86 { pt3dadd( 28.8223, -215.231, -103.134, 0.07 ) }
    dend_86 { pt3dadd( 28.9472, -215.721, -103.15, 0.07 ) }
    dend_86 { pt3dadd( 29.0794, -216.231, -103.188, 0.81 ) }
    dend_86 { pt3dadd( 29.2267, -216.832, -103.218, 0.81 ) }
    dend_86 { pt3dadd( 29.4192, -217.846, -103.237, 0.22 ) }
    dend_86 { pt3dadd( 29.5509, -218.732, -103.234, 0.22 ) }
    dend_86 { pt3dadd( 29.5927, -219.113, -103.222, 0.22 ) }
    dend_86 { pt3dadd( 29.6958, -220.208, -103.173, 0.81 ) }
    dend_86 { pt3dadd( 29.7672, -221.301, -103.112, 0.88 ) }
    dend_86 { pt3dadd( 29.81, -222.369, -103.034, 0.22 ) }
    dend_86 { pt3dadd( 29.8093, -223.05, -102.976, 0.22 ) }
    dend_86 { pt3dadd( 29.7984, -223.656, -102.917, 0.22 ) }
    dend_86 { pt3dadd( 29.7955, -224.083, -102.867, 0.22 ) }
    dend_86 { pt3dadd( 29.8181, -224.776, -102.763, 0.22 ) }
    dend_86 { pt3dadd( 29.8214, -224.856, -102.748, 0.22 ) }
    dend_86 { pt3dadd( 29.8523, -225.34, -102.65, 0.22 ) }
    dend_86 { pt3dadd( 29.8584, -225.446, -102.627, 0.22 ) }
    dend_86 { pt3dadd( 29.8777, -225.911, -102.485, 0.22 ) }
    dend_86 { pt3dadd( 29.9261, -226.862, -102.162, 0.44 ) }
    dend_86 { pt3dadd( 30.072, -228.517, -101.583, 0.22 ) }
    dend_86 { pt3dadd( 30.1728, -229.374, -101.295, 0.59 ) }
    dend_86 { pt3dadd( 30.2139, -229.671, -101.197, 0.88 ) }
    dend_86 { pt3dadd( 30.5176, -231.671, -100.558, 0.22 ) }
    dend_86 { pt3dadd( 30.7064, -232.715, -100.24, 0.22 ) }
    dend_86 { pt3dadd( 30.9649, -233.864, -99.9187, 0.22 ) }
    dend_86 { pt3dadd( 31.2185, -234.818, -99.6927, 0.74 ) }
    dend_86 { pt3dadd( 31.2415, -234.908, -99.6713, 0.74 ) }
    dend_86 { pt3dadd( 31.3538, -235.33, -99.5927, 0.74 ) }
    dend_86 { pt3dadd( 31.6284, -236.138, -99.5448, 0.29 ) }
    dend_86 { pt3dadd( 31.9479, -236.982, -99.5238, 0.29 ) }
    dend_86 { pt3dadd( 32.1254, -237.357, -99.5642, 0.29 ) }
    dend_86 { pt3dadd( 32.4064, -237.866, -99.6726, 0.52 ) }
    dend_86 { pt3dadd( 32.6204, -238.242, -99.779, 0.96 ) }
    dend_86 { pt3dadd( 33.4261, -239.616, -100.232, 0.22 ) }
    dend_86 { pt3dadd( 33.4823, -239.707, -100.267, 0.22 ) }
    dend_86 { pt3dadd( 34.3602, -240.968, -100.834, 0.59 ) }
    dend_86 { pt3dadd( 34.5389, -241.204, -100.948, 0.59 ) }
    dend_86 { pt3dadd( 35.2288, -242.069, -101.418, 0.22 ) }
    dend_86 { pt3dadd( 35.597, -242.544, -101.699, 0.52 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 95/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -54.7991, -58.6446, 21.3811, 0.22 ) }
    dend_83 { pt3dadd( -59.2689, -62.5518, 25.0587, 0.22 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 97/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -54.7991, -58.6446, 21.3811, 0.29 ) }
    dend_80 { pt3dadd( -60.5416, -61.827, 23.5802, 0.22 ) }
    dend_80 { pt3dadd( -65.9809, -65.8117, 25.0549, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 0/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -52.5011, 32.3341, 76.6998, 0.29 ) }
    dend_70 { pt3dadd( -56.9497, 28.0064, 85.69, 0.29 ) }
    dend_70 { pt3dadd( -63.8545, 25.1501, 93.7043, 0.29 ) }
    dend_70 { pt3dadd( -72.1555, 23.6082, 100.716, 0.29 ) }
    dend_70 { pt3dadd( -81.2325, 23.6418, 106.898, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 5/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -52.5011, 32.3341, 76.6998, 0.44 ) }
    dend_69 { pt3dadd( -58.1372, 27.4621, 86.5347, 0.29 ) }
    dend_69 { pt3dadd( -63.7141, 21.6611, 95.8646, 0.29 ) }
    dend_69 { pt3dadd( -69.4307, 14.7713, 104.301, 0.29 ) }
    dend_69 { pt3dadd( -76.4259, 9.63495, 113.083, 0.29 ) }
    dend_69 { pt3dadd( -83.6771, 5.44771, 122.177, 0.29 ) }
    dend_69 { pt3dadd( -90.0855, 1.84498, 132.117, 0.29 ) }
    dend_69 { pt3dadd( -95.507, -1.30657, 142.771, 0.29 ) }
    dend_69 { pt3dadd( -100.871, -4.74652, 153.36, 0.29 ) }
    dend_69 { pt3dadd( -103.492, -7.61252, 165.081, 0.29 ) }
    dend_69 { pt3dadd( -105.268, -11.612, 176.598, 0.29 ) }
    dend_69 { pt3dadd( -105.708, -17.2833, 187.469, 0.29 ) }
    dend_69 { pt3dadd( -104.58, -24.128, 197.531, 0.29 ) }
    dend_69 { pt3dadd( -102.228, -31.5027, 206.951, 0.29 ) }
    dend_69 { pt3dadd( -97.9868, -40.3908, 214.03, 0.29 ) }
    dend_69 { pt3dadd( -94.7508, -48.4757, 222.52, 0.29 ) }
    dend_69 { pt3dadd( -93.229, -57.6673, 230.314, 0.29 ) }
    dend_69 { pt3dadd( -90.4385, -66.5333, 238.127, 0.29 ) }
    dend_69 { pt3dadd( -87.2477, -75.1095, 246.116, 0.29 ) }
    dend_69 { pt3dadd( -84.6104, -82.9635, 255.037, 0.29 ) }
    dend_69 { pt3dadd( -81.904, -91.0425, 263.723, 0.29 ) }
    dend_69 { pt3dadd( -78.6287, -99.6243, 271.67, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 27/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -37.9647, 47.4054, -53.1864, 0.22 ) }
    dend_52 { pt3dadd( -38.685, 48.1385, -55.3955, 0.22 ) }
    dend_52 { pt3dadd( -38.7762, 48.2366, -55.678, 0.22 ) }
    dend_52 { pt3dadd( -38.8952, 48.3807, -56.073, 0.22 ) }
    dend_52 { pt3dadd( -39.0603, 48.5952, -56.6167, 0.22 ) }
    dend_52 { pt3dadd( -39.5486, 49.3133, -58.3998, 0.22 ) }
    dend_52 { pt3dadd( -39.6349, 49.4502, -58.732, 0.52 ) }
    dend_52 { pt3dadd( -39.665, 49.4997, -58.8431, 0.74 ) }
    dend_52 { pt3dadd( -39.7172, 49.6001, -59.0789, 0.74 ) }
    dend_52 { pt3dadd( -39.7479, 49.731, -59.3804, 0.88 ) }
    dend_52 { pt3dadd( -39.676, 50.4985, -60.8425, 0.22 ) }
    dend_52 { pt3dadd( -39.6632, 50.5446, -60.899, 0.37 ) }
    dend_52 { pt3dadd( -39.646, 50.6028, -60.9734, 0.37 ) }
    dend_52 { pt3dadd( -39.5898, 50.7749, -61.1842, 0.37 ) }
    dend_52 { pt3dadd( -39.4175, 51.2487, -61.7159, 0.15 ) }
    dend_52 { pt3dadd( -39.2928, 51.5281, -61.9828, 0.15 ) }
    dend_52 { pt3dadd( -39.2423, 51.6635, -62.1587, 0.15 ) }
    dend_52 { pt3dadd( -39.1517, 51.992, -62.7316, 0.29 ) }
    dend_52 { pt3dadd( -39.115, 52.1109, -62.9714, 0.59 ) }
    dend_52 { pt3dadd( -39.0862, 52.199, -63.1678, 1.03 ) }
    dend_52 { pt3dadd( -39.0629, 52.2614, -63.3221, 1.03 ) }
    dend_52 { pt3dadd( -38.5707, 53.091, -65.4736, 0.59 ) }
    dend_52 { pt3dadd( -38.5488, 53.1193, -65.5474, 0.59 ) }
    dend_52 { pt3dadd( -38.3214, 53.3544, -66.137, 0.22 ) }
    dend_52 { pt3dadd( -38.2117, 53.4547, -66.4227, 0.29 ) }
    dend_52 { pt3dadd( -38.0835, 53.5578, -66.7414, 0.29 ) }
    dend_52 { pt3dadd( -37.8741, 53.6966, -67.1723, 0.66 ) }
    dend_52 { pt3dadd( -37.7975, 53.7438, -67.2858, 0.66 ) }
    dend_52 { pt3dadd( -37.7207, 53.7941, -67.4195, 0.74 ) }
    dend_52 { pt3dadd( -37.2064, 54.1391, -68.4166, 0.74 ) }
    dend_52 { pt3dadd( -37.1861, 54.1535, -68.4976, 0.74 ) }
    dend_52 { pt3dadd( -36.8552, 54.3953, -69.8266, 0.22 ) }
    dend_52 { pt3dadd( -36.7266, 54.492, -70.3325, 0.22 ) }
    dend_52 { pt3dadd( -36.5858, 54.6052, -70.8453, 0.44 ) }
    dend_52 { pt3dadd( -36.4985, 54.683, -71.1548, 0.66 ) }
    dend_52 { pt3dadd( -35.5425, 55.6045, -74.3625, 0.81 ) }
    dend_52 { pt3dadd( -35.2591, 56.0399, -76.1073, 0.29 ) }
    dend_52 { pt3dadd( -35.2591, 56.0986, -76.3682, 0.22 ) }
    dend_52 { pt3dadd( -35.2783, 56.1787, -76.733, 0.22 ) }
    dend_52 { pt3dadd( -35.2908, 56.2101, -76.8867, 0.22 ) }
    dend_52 { pt3dadd( -35.298, 56.2247, -76.9577, 0.22 ) }
    dend_52 { pt3dadd( -35.5751, 56.7163, -79.2878, 0.44 ) }
    dend_52 { pt3dadd( -35.7066, 56.8714, -80.0496, 0.59 ) }
    dend_52 { pt3dadd( -35.7514, 56.9196, -80.2752, 0.74 ) }
    dend_52 { pt3dadd( -36.2876, 57.3521, -82.7569, 0.29 ) }
    dend_52 { pt3dadd( -36.3382, 57.3878, -82.9788, 0.59 ) }
    dend_52 { pt3dadd( -36.3809, 57.4171, -83.1587, 0.66 ) }
    dend_52 { pt3dadd( -36.9559, 57.7899, -85.3899, 0.07 ) }
    dend_52 { pt3dadd( -37.0742, 57.8577, -85.8176, 0.07 ) }
    dend_52 { pt3dadd( -38.1849, 58.4754, -89.4742, 0.66 ) }
    dend_52 { pt3dadd( -38.2081, 58.488, -89.5444, 0.88 ) }
    dend_52 { pt3dadd( -38.2756, 58.5248, -89.749, 0.88 ) }
    dend_52 { pt3dadd( -38.3237, 58.5531, -89.8945, 1.11 ) }
    dend_52 { pt3dadd( -39.1799, 59.1108, -92.4686, 0.29 ) }
    dend_52 { pt3dadd( -39.3316, 59.2207, -92.8962, 0.29 ) }
    dend_52 { pt3dadd( -39.3624, 59.25, -92.9673, 0.29 ) }
    dend_52 { pt3dadd( -39.7028, 59.5291, -93.6779, 0.15 ) }
    dend_52 { pt3dadd( -39.8654, 59.6483, -93.9899, 0.15 ) }
    dend_52 { pt3dadd( -39.9116, 59.6812, -94.0686, 0.15 ) }
    dend_52 { pt3dadd( -40.6327, 60.1514, -95.0518, 0.66 ) }
    dend_52 { pt3dadd( -40.8615, 60.2946, -95.3462, 0.96 ) }
    dend_52 { pt3dadd( -41.8559, 60.8979, -96.5944, 0.22 ) }
    dend_52 { pt3dadd( -41.9233, 60.9377, -96.6734, 0.22 ) }
    dend_52 { pt3dadd( -42.2182, 61.1088, -97.0109, 0.22 ) }
    dend_52 { pt3dadd( -42.2641, 61.1357, -97.0595, 0.22 ) }
    dend_52 { pt3dadd( -42.5144, 61.268, -97.3771, 0.22 ) }
    dend_52 { pt3dadd( -43.1395, 61.5957, -98.2575, 0.52 ) }
    dend_52 { pt3dadd( -43.2854, 61.6748, -98.4698, 0.81 ) }
    dend_52 { pt3dadd( -43.3459, 61.7062, -98.5654, 1.03 ) }
    dend_52 { pt3dadd( -43.3935, 61.7301, -98.6535, 1.03 ) }
    dend_52 { pt3dadd( -44.7126, 62.3764, -101.258, 0.37 ) }
    dend_52 { pt3dadd( -45.0135, 62.5231, -101.886, 0.37 ) }
    dend_52 { pt3dadd( -45.1235, 62.5769, -102.118, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_52 { pt3dadd( -45.4705, 62.7456, -102.878, 0.52 ) }
    dend_52 { pt3dadd( -46.0782, 63.0477, -104.248, 0.74 ) }
    dend_52 { pt3dadd( -46.1334, 63.0809, -104.392, 0.81 ) }
    dend_52 { pt3dadd( -46.1825, 63.1147, -104.536, 0.88 ) }
    dend_52 { pt3dadd( -46.2047, 63.127, -104.605, 0.88 ) }
    dend_52 { pt3dadd( -46.2379, 63.1426, -104.701, 1.03 ) }
    dend_52 { pt3dadd( -46.2675, 63.1547, -104.778, 1.03 ) }
    dend_52 { pt3dadd( -47.0515, 63.278, -107.049, 0.29 ) }
    dend_52 { pt3dadd( -47.3161, 63.2891, -107.846, 0.29 ) }
    dend_52 { pt3dadd( -47.5208, 63.2843, -108.467, 0.59 ) }
    dend_52 { pt3dadd( -47.5208, 63.2843, -108.467, 0.59 ) }
    dend_52 { pt3dadd( -47.5611, 63.2805, -108.588, 0.59 ) }
    dend_52 { pt3dadd( -48.9656, 63.1164, -112.684, 0.07 ) }
    dend_52 { pt3dadd( -49.0295, 63.1006, -112.873, 0.07 ) }
    dend_52 { pt3dadd( -49.0623, 63.0923, -112.98, 0.07 ) }
    dend_52 { pt3dadd( -49.0911, 63.0856, -113.072, 0.59 ) }
    dend_52 { pt3dadd( -49.1511, 63.0619, -113.347, 0.96 ) }
    dend_52 { pt3dadd( -49.1944, 63.0369, -113.62, 1.11 ) }
    dend_52 { pt3dadd( -49.56, 62.6131, -117.366, 0.37 ) }
    dend_52 { pt3dadd( -49.5872, 62.5644, -117.756, 0.59 ) }
    dend_52 { pt3dadd( -49.5975, 62.5238, -118.046, 0.74 ) }
    dend_52 { pt3dadd( -49.6637, 61.2848, -125.956, 0.29 ) }
    dend_52 { pt3dadd( -49.6602, 61.2332, -126.255, 0.29 ) }
    dend_52 { pt3dadd( -49.6516, 61.1358, -126.791, 0.29 ) }
    dend_52 { pt3dadd( -49.6507, 61.1169, -126.896, 0.29 ) }
    dend_52 { pt3dadd( -49.6396, 60.9991, -127.536, 0.29 ) }
    dend_52 { pt3dadd( -49.5907, 60.8646, -128.072, 0.29 ) }
    dend_52 { pt3dadd( -49.2244, 60.4777, -128.692, 0.52 ) }
    dend_52 { pt3dadd( -49.1895, 60.4379, -128.759, 0.81 ) }
    dend_52 { pt3dadd( -49.1623, 60.4047, -128.818, 0.81 ) }
    dend_52 { pt3dadd( -49.0466, 60.2565, -129.089, 1.11 ) }
    dend_52 { pt3dadd( -48.1851, 59.0536, -131.367, 0.22 ) }
    dend_52 { pt3dadd( -48.0443, 58.8646, -131.723, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 33/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -37.9647, 47.4054, -53.1864, 0.22 ) }
    dend_49 { pt3dadd( -40.6845, 46.0165, -58.6095, 0.22 ) }
    dend_49 { pt3dadd( -41.0151, 45.8588, -59.2064, 0.22 ) }
    dend_49 { pt3dadd( -41.2846, 45.7345, -59.6699, 0.74 ) }
    dend_49 { pt3dadd( -41.5189, 45.6267, -60.0552, 1.03 ) }
    dend_49 { pt3dadd( -43.1002, 44.906, -62.5447, 0.22 ) }
    dend_49 { pt3dadd( -43.4641, 44.7377, -63.1005, 0.22 ) }
    dend_49 { pt3dadd( -43.6257, 44.68, -63.247, 0.22 ) }
    dend_49 { pt3dadd( -43.6916, 44.6548, -63.3108, 0.22 ) }
    dend_49 { pt3dadd( -43.9125, 44.5655, -63.5324, 0.44 ) }
    dend_49 { pt3dadd( -44.0597, 44.5013, -63.6717, 0.44 ) }
    dend_49 { pt3dadd( -44.2308, 44.4223, -63.8032, 0.44 ) }
    dend_49 { pt3dadd( -44.9014, 44.2267, -64.6358, 0.15 ) }
    dend_49 { pt3dadd( -45.1365, 44.1863, -64.9464, 0.15 ) }
    dend_49 { pt3dadd( -45.9798, 44.1354, -66.2946, 0.81 ) }
    dend_49 { pt3dadd( -46.44, 44.1196, -67.0733, 1.18 ) }
    dend_49 { pt3dadd( -46.5544, 44.1173, -67.2735, 1.33 ) }
    dend_49 { pt3dadd( -48.3641, 44.1299, -70.4914, 0.59 ) }
    dend_49 { pt3dadd( -48.7265, 44.1429, -71.1517, 0.74 ) }
    dend_49 { pt3dadd( -50.5463, 44.2798, -74.4662, 0.29 ) }
    dend_49 { pt3dadd( -50.8476, 44.3107, -75.0152, 0.29 ) }
    dend_49 { pt3dadd( -50.9213, 44.3213, -75.1461, 0.37 ) }
    dend_49 { pt3dadd( -51.0543, 44.3421, -75.3548, 0.37 ) }
    dend_49 { pt3dadd( -51.1978, 44.3635, -75.5109, 0.37 ) }
    dend_49 { pt3dadd( -51.6567, 44.4698, -75.9109, 0.37 ) }
    dend_49 { pt3dadd( -52.3865, 44.753, -76.0827, 0.15 ) }
    dend_49 { pt3dadd( -53.0055, 44.9602, -76.3344, 0.15 ) }
    dend_49 { pt3dadd( -53.4337, 45.0459, -76.5403, 0.22 ) }
    dend_49 { pt3dadd( -53.5327, 45.0587, -76.6076, 0.29 ) }
    dend_49 { pt3dadd( -53.92, 45.0841, -76.9309, 0.29 ) }
    dend_49 { pt3dadd( -54.1235, 45.0948, -77.3079, 0.29 ) }
    dend_49 { pt3dadd( -54.8072, 45.1232, -78.9687, 0.88 ) }
    dend_49 { pt3dadd( -55.0241, 45.133, -79.5714, 0.96 ) }
    dend_49 { pt3dadd( -55.4368, 45.1596, -80.7361, 1.11 ) }
    dend_49 { pt3dadd( -55.4368, 45.1596, -80.7361, 1.11 ) }
    dend_49 { pt3dadd( -56.6529, 45.1496, -85.1435, 0.52 ) }
    dend_49 { pt3dadd( -56.8052, 45.1361, -85.7767, 0.66 ) }
    dend_49 { pt3dadd( -57.012, 45.1066, -86.7027, 0.66 ) }
    dend_49 { pt3dadd( -57.5711, 44.9849, -89.3006, 0.88 ) }
    dend_49 { pt3dadd( -57.6301, 44.9664, -89.5603, 0.88 ) }
    dend_49 { pt3dadd( -59.5756, 44.3623, -97.4095, 0.96 ) }
    dend_49 { pt3dadd( -59.6598, 44.3309, -97.7318, 1.11 ) }
    dend_49 { pt3dadd( -59.7156, 44.3136, -97.9367, 1.11 ) }
    dend_49 { pt3dadd( -60.1246, 44.1963, -99.389, 1.18 ) }
    dend_49 { pt3dadd( -60.2535, 44.1664, -99.8372, 1.33 ) }
    dend_49 { pt3dadd( -61.0256, 44.0701, -102.311, 0.37 ) }
    dend_49 { pt3dadd( -61.1104, 44.0746, -102.525, 0.37 ) }
    dend_49 { pt3dadd( -62.5242, 44.1807, -106.668, 0.37 ) }
    dend_49 { pt3dadd( -62.7683, 44.1866, -107.401, 0.74 ) }
    dend_49 { pt3dadd( -62.8717, 44.1808, -107.719, 0.74 ) }
    dend_49 { pt3dadd( -63.9822, 44.0432, -111.264, 0.81 ) }
    dend_49 { pt3dadd( -64.1648, 44.0064, -111.863, 0.81 ) }
    dend_49 { pt3dadd( -65.9705, 43.4498, -117.612, 0.29 ) }
    dend_49 { pt3dadd( -66.2765, 43.3238, -118.524, 0.29 ) }
    dend_49 { pt3dadd( -66.5041, 43.2183, -119.158, 0.74 ) }
    dend_49 { pt3dadd( -66.5821, 43.1782, -119.352, 1.03 ) }
    dend_49 { pt3dadd( -66.7081, 43.108, -119.617, 1.33 ) }
    dend_49 { pt3dadd( -68.9974, 41.8306, -123.874, 0.29 ) }
    dend_49 { pt3dadd( -69.3349, 41.6291, -124.438, 0.29 ) }
    dend_49 { pt3dadd( -69.4904, 41.5337, -124.723, 0.29 ) }
    dend_49 { pt3dadd( -70.058, 41.1794, -125.775, 0.66 ) }
    dend_49 { pt3dadd( -70.2017, 41.0798, -126.045, 0.81 ) }
    dend_49 { pt3dadd( -70.4633, 40.8833, -126.549, 0.66 ) }
    dend_49 { pt3dadd( -72.1837, 39.224, -129.947, 0.88 ) }
    dend_49 { pt3dadd( -72.2616, 39.1366, -130.127, 1.11 ) }
    dend_49 { pt3dadd( -72.388, 38.9729, -130.462, 1.55 ) }
    dend_49 { pt3dadd( -72.513, 38.7619, -130.869, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 0/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -64.765, 185.748, -177.818, 0.29 ) }
    dend_47 { pt3dadd( -65.1041, 186.781, -178.687, 0.29 ) }
    dend_47 { pt3dadd( -65.3743, 187.517, -179.37, 0.81 ) }
    dend_47 { pt3dadd( -65.9061, 188.756, -180.61, 0.29 ) }
    dend_47 { pt3dadd( -65.9637, 188.877, -180.737, 0.22 ) }
    dend_47 { pt3dadd( -66.0231, 188.973, -180.873, 0.22 ) }
    dend_47 { pt3dadd( -66.3975, 189.427, -181.678, 0.52 ) }
    dend_47 { pt3dadd( -66.501, 189.487, -181.965, 0.81 ) }
    dend_47 { pt3dadd( -66.6108, 189.518, -182.293, 0.29 ) }
    dend_47 { pt3dadd( -66.637, 189.521, -182.372, 0.29 ) }
    dend_47 { pt3dadd( -67.1941, 189.618, -184.091, 0.22 ) }
    dend_47 { pt3dadd( -67.3536, 189.654, -184.579, 0.22 ) }
    dend_47 { pt3dadd( -68.0291, 189.857, -186.839, 0.37 ) }
    dend_47 { pt3dadd( -68.089, 189.912, -187.145, 0.66 ) }
    dend_47 { pt3dadd( -68.1076, 189.938, -187.269, 0.66 ) }
    dend_47 { pt3dadd( -68.1265, 189.969, -187.384, 0.66 ) }
    dend_47 { pt3dadd( -68.1605, 190.043, -187.616, 0.66 ) }
    dend_47 { pt3dadd( -68.3038, 190.409, -188.664, 0.66 ) }
    dend_47 { pt3dadd( -68.4321, 191.137, -191.049, 0.44 ) }
    dend_47 { pt3dadd( -68.4401, 191.259, -191.483, 0.44 ) }
    dend_47 { pt3dadd( -68.4405, 191.51, -192.406, 0.52 ) }
    dend_47 { pt3dadd( -68.4334, 191.646, -192.913, 0.59 ) }
    dend_47 { pt3dadd( -68.412, 191.76, -193.334, 0.74 ) }
    dend_47 { pt3dadd( -68.0733, 192.945, -197.674, 0.22 ) }
    dend_47 { pt3dadd( -68.0524, 192.998, -197.867, 0.66 ) }
    dend_47 { pt3dadd( -68.0415, 193.021, -197.949, 0.66 ) }
    dend_47 { pt3dadd( -67.4273, 194.125, -201.924, 0.29 ) }
    dend_47 { pt3dadd( -67.3182, 194.341, -202.664, 0.52 ) }
    dend_47 { pt3dadd( -67.2991, 194.378, -202.791, 0.66 ) }
    dend_47 { pt3dadd( -67.2344, 194.525, -203.206, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -64.765, 185.748, -177.818, 0.15 ) }
    dend_44 { pt3dadd( -65.9646, 186.077, -176.637, 0.15 ) }
    dend_44 { pt3dadd( -66.0258, 186.097, -176.601, 0.15 ) }
    dend_44 { pt3dadd( -66.4169, 186.24, -176.501, 0.44 ) }
    dend_44 { pt3dadd( -66.7058, 186.356, -176.465, 0.15 ) }
    dend_44 { pt3dadd( -66.9106, 186.474, -176.453, 0.15 ) }
    dend_44 { pt3dadd( -67.2323, 186.741, -176.437, 0.15 ) }
    dend_44 { pt3dadd( -67.5966, 187.163, -176.551, 0.88 ) }
    dend_44 { pt3dadd( -67.8067, 187.452, -176.645, 1.03 ) }
    dend_44 { pt3dadd( -68.1074, 187.945, -176.814, 0.52 ) }
    dend_44 { pt3dadd( -68.618, 188.878, -177.14, 0.22 ) }
    dend_44 { pt3dadd( -69.0625, 189.717, -177.43, 0.22 ) }
    dend_44 { pt3dadd( -69.6446, 190.766, -177.895, 0.22 ) }
    dend_44 { pt3dadd( -69.7493, 190.94, -177.983, 0.22 ) }
    dend_44 { pt3dadd( -70.0801, 191.429, -178.277, 0.81 ) }
    dend_44 { pt3dadd( -70.3473, 191.766, -178.517, 1.33 ) }
    dend_44 { pt3dadd( -70.6619, 192.082, -178.788, 0.88 ) }
    dend_44 { pt3dadd( -71.8976, 193.037, -179.685, 0.22 ) }
    dend_44 { pt3dadd( -72.1231, 193.191, -179.815, 0.22 ) }
    dend_44 { pt3dadd( -72.4033, 193.363, -179.984, 0.22 ) }
    dend_44 { pt3dadd( -72.484, 193.403, -180.116, 0.22 ) }
    dend_44 { pt3dadd( -72.8416, 193.544, -180.918, 0.81 ) }
    dend_44 { pt3dadd( -73.0837, 193.604, -181.551, 1.4 ) }
    dend_44 { pt3dadd( -73.2565, 193.622, -182.038, 1.84 ) }
    dend_44 { pt3dadd( -73.539, 193.637, -182.83, 1.92 ) }
    dend_44 { pt3dadd( -75.1594, 193.688, -188.709, 0.37 ) }
    dend_44 { pt3dadd( -75.2253, 193.687, -188.969, 0.59 ) }
    dend_44 { pt3dadd( -75.3704, 193.676, -189.593, 0.44 ) }
    dend_44 { pt3dadd( -75.4589, 193.667, -190.025, 0.66 ) }
    dend_44 { pt3dadd( -75.5676, 193.653, -190.615, 1.25 ) }
    dend_44 { pt3dadd( -76.5948, 193.53, -196.691, 1.25 ) }
    dend_44 { pt3dadd( -76.7038, 193.531, -197.29, 1.25 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 62/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -57.9999, 29.5246, -24.5715, 0.22 ) }
    dend_37 { pt3dadd( -59.6985, 28.6398, -25.4586, 0.22 ) }
    dend_37 { pt3dadd( -60.7256, 28.0991, -25.969, 0.74 ) }
    dend_37 { pt3dadd( -61.238, 27.8083, -26.1787, 0.74 ) }
    dend_37 { pt3dadd( -62.012, 27.3561, -26.5142, 0.29 ) }
    dend_37 { pt3dadd( -62.8988, 26.8326, -26.9094, 1.03 ) }
    dend_37 { pt3dadd( -63.5698, 26.4275, -27.2149, 0.59 ) }
    dend_37 { pt3dadd( -63.9172, 26.2048, -27.3617, 0.44 ) }
    dend_37 { pt3dadd( -64.9866, 25.5099, -27.8269, 0.22 ) }
    dend_37 { pt3dadd( -65.8726, 24.9199, -28.2621, 0.59 ) }
    dend_37 { pt3dadd( -66.0352, 24.8197, -28.3479, 0.59 ) }
    dend_37 { pt3dadd( -66.2136, 24.7191, -28.4486, 0.59 ) }
    dend_37 { pt3dadd( -66.7384, 24.4304, -28.7492, 0.37 ) }
    dend_37 { pt3dadd( -67.4378, 24.0881, -29.0749, 0.15 ) }
    dend_37 { pt3dadd( -68.3812, 23.6383, -29.4665, 0.22 ) }
    dend_37 { pt3dadd( -69.3388, 23.1633, -29.7867, 0.22 ) }
    dend_37 { pt3dadd( -69.7757, 22.9451, -29.9228, 0.81 ) }
    dend_37 { pt3dadd( -70.2428, 22.7165, -30.0524, 0.81 ) }
    dend_37 { pt3dadd( -72.0372, 21.8527, -30.5007, 0.29 ) }
    dend_37 { pt3dadd( -72.4625, 21.653, -30.6098, 1.03 ) }
    dend_37 { pt3dadd( -72.9255, 21.448, -30.7083, 1.4 ) }
    dend_37 { pt3dadd( -73.3715, 21.2643, -30.8093, 1.11 ) }
    dend_37 { pt3dadd( -74.8533, 20.6946, -31.1651, 0.29 ) }
    dend_37 { pt3dadd( -75.7302, 20.3745, -31.3881, 0.29 ) }
    dend_37 { pt3dadd( -76.1219, 20.2317, -31.497, 0.74 ) }
    dend_37 { pt3dadd( -76.5298, 20.086, -31.613, 0.52 ) }
    dend_37 { pt3dadd( -78.1328, 19.4935, -32.1285, 0.29 ) }
    dend_37 { pt3dadd( -79.1422, 19.1133, -32.4878, 0.29 ) }
    dend_37 { pt3dadd( -79.3596, 19.0293, -32.5734, 0.66 ) }
    dend_37 { pt3dadd( -79.8731, 18.8212, -32.7862, 1.47 ) }
    dend_37 { pt3dadd( -80.4115, 18.6084, -33.0219, 1.47 ) }
    dend_37 { pt3dadd( -81.5916, 18.1575, -33.5602, 0.22 ) }
    dend_37 { pt3dadd( -81.7742, 18.0953, -33.6434, 0.59 ) }
    dend_37 { pt3dadd( -82.1454, 17.9614, -33.8163, 0.59 ) }
    dend_37 { pt3dadd( -82.4102, 17.8619, -33.9293, 0.52 ) }
    dend_37 { pt3dadd( -83.1635, 17.5724, -34.2279, 0.37 ) }
    dend_37 { pt3dadd( -83.7293, 17.345, -34.4357, 0.37 ) }
    dend_37 { pt3dadd( -84.1394, 17.1747, -34.5714, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_37 { pt3dadd( -85.4012, 16.6267, -35.0199, 0.29 ) }
    dend_37 { pt3dadd( -86.7248, 16.0406, -35.5075, 0.29 ) }
    dend_37 { pt3dadd( -87.1394, 15.858, -35.6619, 0.44 ) }
    dend_37 { pt3dadd( -87.6265, 15.6396, -35.847, 1.03 ) }
    dend_37 { pt3dadd( -88.0638, 15.4677, -36.0172, 1.11 ) }
    dend_37 { pt3dadd( -89.1137, 15.1455, -36.5074, 0.37 ) }
    dend_37 { pt3dadd( -89.5401, 15.0522, -36.7396, 0.74 ) }
    dend_37 { pt3dadd( -89.8265, 14.9942, -36.9198, 0.44 ) }
    dend_37 { pt3dadd( -90.0869, 14.9477, -37.0905, 0.44 ) }
    dend_37 { pt3dadd( -90.7114, 14.8846, -37.5731, 0.22 ) }
    dend_37 { pt3dadd( -92.004, 14.8253, -38.6841, 0.22 ) }
    dend_37 { pt3dadd( -92.3265, 14.831, -38.9709, 1.11 ) }
    dend_37 { pt3dadd( -92.7264, 14.8466, -39.3318, 1.03 ) }
    dend_37 { pt3dadd( -92.9441, 14.8613, -39.5372, 1.03 ) }
    dend_37 { pt3dadd( -94.3428, 14.971, -40.8772, 0.22 ) }
    dend_37 { pt3dadd( -95.3999, 15.0858, -41.8725, 0.22 ) }
    dend_37 { pt3dadd( -95.7294, 15.1467, -42.159, 0.88 ) }
    dend_37 { pt3dadd( -96.1087, 15.2375, -42.4751, 0.88 ) }
    dend_37 { pt3dadd( -96.7971, 15.4472, -42.9929, 0.66 ) }
    dend_37 { pt3dadd( -97.3187, 15.6396, -43.3451, 0.29 ) }
    dend_37 { pt3dadd( -97.9291, 15.9288, -43.6577, 0.29 ) }
    dend_37 { pt3dadd( -98.1384, 16.0721, -43.7872, 0.29 ) }
    dend_37 { pt3dadd( -98.4467, 16.3194, -44.0093, 0.74 ) }
    dend_37 { pt3dadd( -98.9285, 16.768, -44.3847, 1.03 ) }
    dend_37 { pt3dadd( -99.4048, 17.2747, -44.7643, 0.44 ) }
    dend_37 { pt3dadd( -99.5199, 17.417, -44.8636, 0.44 ) }
    dend_37 { pt3dadd( -100.294, 18.4389, -45.6324, 0.29 ) }
    dend_37 { pt3dadd( -100.54, 18.7777, -45.9013, 0.29 ) }
    dend_37 { pt3dadd( -100.655, 18.9415, -46.0413, 0.44 ) }
    dend_37 { pt3dadd( -100.999, 19.4504, -46.4948, 0.22 ) }
    dend_37 { pt3dadd( -101.247, 19.7896, -46.7645, 0.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 31/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -57.9999, 29.5246, -24.5715, 0.52 ) }
    dend_36 { pt3dadd( -58.7838, 30.0946, -24.7248, 0.52 ) }
    dend_36 { pt3dadd( -59.5419, 30.6326, -24.8586, 0.52 ) }
    dend_36 { pt3dadd( -60.0038, 30.8989, -24.8445, 0.22 ) }
    dend_36 { pt3dadd( -60.2326, 31.0083, -24.7499, 0.59 ) }
    dend_36 { pt3dadd( -60.5145, 31.1389, -24.5992, 0.96 ) }
    dend_36 { pt3dadd( -60.742, 31.2447, -24.4683, 0.88 ) }
    dend_36 { pt3dadd( -61.0867, 31.391, -24.217, 0.81 ) }
    dend_36 { pt3dadd( -62.1985, 31.8631, -23.359, 0.29 ) }
    dend_36 { pt3dadd( -63.5988, 32.4703, -22.2997, 0.52 ) }
    dend_36 { pt3dadd( -63.9044, 32.5999, -22.0565, 0.96 ) }
    dend_36 { pt3dadd( -64.1621, 32.7145, -21.8443, 0.96 ) }
    dend_36 { pt3dadd( -64.5453, 32.889, -21.5265, 0.44 ) }
    dend_36 { pt3dadd( -65.1823, 33.2429, -20.8435, 0.37 ) }
    dend_36 { pt3dadd( -65.3917, 33.3878, -20.5821, 0.37 ) }
    dend_36 { pt3dadd( -66.183, 33.9385, -19.7973, 0.88 ) }
    dend_36 { pt3dadd( -66.4414, 34.1074, -19.5585, 1.33 ) }
    dend_36 { pt3dadd( -66.4926, 34.1392, -19.5155, 1.33 ) }
    dend_36 { pt3dadd( -68.1002, 35.046, -18.1679, 0.59 ) }
    dend_36 { pt3dadd( -68.4714, 35.2483, -17.8897, 0.52 ) }
    dend_36 { pt3dadd( -69.9689, 35.9775, -17.0645, 0.22 ) }
    dend_36 { pt3dadd( -70.2023, 36.0753, -16.9544, 0.74 ) }
    dend_36 { pt3dadd( -70.5068, 36.1801, -16.8248, 0.74 ) }
    dend_36 { pt3dadd( -71.7811, 36.5721, -16.4617, 0.74 ) }
    dend_36 { pt3dadd( -72.6638, 36.8002, -16.3427, 0.29 ) }
    dend_36 { pt3dadd( -73.1307, 36.9129, -16.2573, 1.11 ) }
    dend_36 { pt3dadd( -74.7179, 37.2976, -15.9161, 0.96 ) }
    dend_36 { pt3dadd( -75.2803, 37.4537, -15.8314, 0.74 ) }
    dend_36 { pt3dadd( -76.472, 37.8165, -15.7282, 0.22 ) }
    dend_36 { pt3dadd( -76.7091, 37.8988, -15.6946, 0.74 ) }
    dend_36 { pt3dadd( -76.9393, 37.9792, -15.6548, 0.74 ) }
    dend_36 { pt3dadd( -78.6323, 38.6146, -15.3993, 0.29 ) }
    dend_36 { pt3dadd( -78.9935, 38.7629, -15.3653, 1.11 ) }
    dend_36 { pt3dadd( -79.239, 38.8696, -15.3114, 1.11 ) }
    dend_36 { pt3dadd( -81.1801, 39.7182, -14.5708, 0.44 ) }
    dend_36 { pt3dadd( -87.9345, 41.6421, -12.1128, 0.44 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 67/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -66.7014, 40.2442, -5.08522, 0.29 ) }
    dend_34 { pt3dadd( -73.4203, 42.4233, -3.27292, 0.29 ) }
    dend_34 { pt3dadd( -79.8011, 44.7847, -0.656419, 0.29 ) }
    dend_34 { pt3dadd( -86.1791, 47.9809, 0.747572, 0.29 ) }
    dend_34 { pt3dadd( -92.0947, 51.7892, 2.5202, 0.29 ) }
    dend_34 { pt3dadd( -98.2925, 54.9179, 4.68738, 0.29 ) }
    dend_34 { pt3dadd( -103.856, 58.3873, 7.81844, 0.29 ) }
    dend_34 { pt3dadd( -108.289, 62.1226, 12.1917, 0.29 ) }
    dend_34 { pt3dadd( -112.023, 66.3831, 16.7113, 0.29 ) }
    dend_34 { pt3dadd( -115.073, 70.4673, 21.872, 0.29 ) }
    dend_34 { pt3dadd( -116.826, 74.0677, 27.9389, 0.29 ) }
    dend_34 { pt3dadd( -118.074, 77.8948, 33.9857, 0.29 ) }
    dend_34 { pt3dadd( -119.974, 81.8785, 39.7487, 0.29 ) }
    dend_34 { pt3dadd( -122.391, 85.8144, 45.3491, 0.29 ) }
    dend_34 { pt3dadd( -124.327, 89.5312, 51.2845, 0.29 ) }
    dend_34 { pt3dadd( -125.991, 93.857, 56.8583, 0.29 ) }
    dend_34 { pt3dadd( -128.765, 98.2616, 61.8967, 0.29 ) }
    dend_34 { pt3dadd( -131.713, 101.903, 67.4514, 0.29 ) }
    dend_34 { pt3dadd( -135.581, 105.983, 72.0326, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -66.7014, 40.2442, -5.08522, 0.52 ) }
    dend_33 { pt3dadd( -73.9751, 43.023, -2.72607, 0.29 ) }
    dend_33 { pt3dadd( -81.5623, 44.7933, -0.314382, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -31.8398, 113.331, -128.157, 0.22 ) }
    dend_21 { pt3dadd( -31.3284, 114.362, -131.376, 0.22 ) }
    dend_21 { pt3dadd( -31.2319, 114.557, -131.984, 1.55 ) }
    dend_21 { pt3dadd( -31.0351, 114.954, -133.223, 0.29 ) }
    dend_21 { pt3dadd( -30.994, 115.037, -133.481, 0.29 ) }
    dend_21 { pt3dadd( -30.9739, 115.077, -133.608, 0.29 ) }
    dend_21 { pt3dadd( -30.871, 115.285, -134.256, 1.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 96/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -31.8398, 113.331, -128.157, 0.29 ) }
    dend_20 { pt3dadd( -32.9483, 113.03, -127.46, 0.29 ) }
    dend_20 { pt3dadd( -33.3451, 112.968, -127.02, 0.22 ) }
    dend_20 { pt3dadd( -33.5174, 112.951, -126.773, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( -34.3681, 112.876, -125.454, 1.11 ) }
    dend_20 { pt3dadd( -35.4073, 112.794, -123.788, 0.29 ) }
    dend_20 { pt3dadd( -35.6985, 112.771, -123.326, 0.29 ) }
    dend_20 { pt3dadd( -37.2472, 112.619, -120.558, 0.29 ) }
    dend_20 { pt3dadd( -37.8823, 112.558, -119.313, 0.22 ) }
    dend_20 { pt3dadd( -37.9713, 112.552, -119.134, 0.22 ) }
    dend_20 { pt3dadd( -38.0124, 112.551, -119.035, 0.22 ) }
    dend_20 { pt3dadd( -38.1837, 112.563, -118.552, 0.37 ) }
    dend_20 { pt3dadd( -38.253, 112.561, -118.358, 0.37 ) }
    dend_20 { pt3dadd( -39.3861, 112.33, -115.886, 0.22 ) }
    dend_20 { pt3dadd( -39.5771, 112.292, -115.444, 0.52 ) }
    dend_20 { pt3dadd( -40.4102, 112.14, -113.384, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -41.8324, 140.247, 4.40511, 0.44 ) }
    dend_18 { pt3dadd( -42.0283, 141.824, 3.47279, 0.44 ) }
    dend_18 { pt3dadd( -42.0955, 142.168, 3.32048, 0.44 ) }
    dend_18 { pt3dadd( -42.1417, 142.368, 3.25095, 0.44 ) }
    dend_18 { pt3dadd( -42.3218, 143.094, 3.03592, 0.52 ) }
    dend_18 { pt3dadd( -42.4746, 143.614, 2.88313, 0.44 ) }
    dend_18 { pt3dadd( -42.6787, 144.194, 2.71033, 0.22 ) }
    dend_18 { pt3dadd( -42.7979, 144.48, 2.65159, 0.22 ) }
    dend_18 { pt3dadd( -42.995, 144.821, 2.5388, 0.66 ) }
    dend_18 { pt3dadd( -43.0708, 144.928, 2.47172, 0.66 ) }
    dend_18 { pt3dadd( -43.4544, 145.321, 2.00255, 0.22 ) }
    dend_18 { pt3dadd( -43.6494, 145.481, 1.74745, 0.22 ) }
    dend_18 { pt3dadd( -44.0545, 145.782, 1.19819, 0.81 ) }
    dend_18 { pt3dadd( -44.4132, 146.025, 0.713779, 0.96 ) }
    dend_18 { pt3dadd( -45.1215, 146.464, -0.214611, 0.59 ) }
    dend_18 { pt3dadd( -45.6672, 146.789, -0.887672, 0.22 ) }
    dend_18 { pt3dadd( -46.1999, 147.094, -1.54835, 0.22 ) }
    dend_18 { pt3dadd( -46.3481, 147.181, -1.72996, 0.52 ) }
    dend_18 { pt3dadd( -46.443, 147.235, -1.83387, 0.52 ) }
    dend_18 { pt3dadd( -46.8268, 147.479, -2.22679, 0.22 ) }
    dend_18 { pt3dadd( -47.2009, 147.697, -2.43579, 0.37 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 33/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -41.8324, 140.247, 4.40511, 0.59 ) }
    dend_15 { pt3dadd( -39.8015, 141.087, 3.83759, 0.59 ) }
    dend_15 { pt3dadd( -39.3034, 141.312, 3.68886, 0.59 ) }
    dend_15 { pt3dadd( -38.704, 141.631, 3.43579, 0.59 ) }
    dend_15 { pt3dadd( -38.118, 141.988, 3.15935, 0.59 ) }
    dend_15 { pt3dadd( -37.1938, 142.63, 2.72858, 0.37 ) }
    dend_15 { pt3dadd( -36.9255, 142.835, 2.58932, 0.74 ) }
    dend_15 { pt3dadd( -36.4406, 143.323, 2.32983, 0.74 ) }
    dend_15 { pt3dadd( -35.6604, 144.262, 1.87445, 0.74 ) }
    dend_15 { pt3dadd( -35.3183, 144.768, 1.6425, 0.6 ) }
    dend_15 { pt3dadd( -34.8266, 145.593, 1.28506, 0.52 ) }
    dend_15 { pt3dadd( -34.3608, 146.522, 0.899705, 0.3 ) }
    dend_15 { pt3dadd( -33.8348, 147.618, 0.4845, 0.81 ) }
    dend_15 { pt3dadd( -33.4872, 148.35, 0.243064, 1.25 ) }
    dend_15 { pt3dadd( -32.4495, 150.448, -0.313195, 0.29 ) }
    dend_15 { pt3dadd( -32.231, 150.881, -0.423543, 0.52 ) }
    dend_15 { pt3dadd( -31.8141, 151.692, -0.521035, 0.44 ) }
    dend_15 { pt3dadd( -31.2172, 152.724, -0.534133, 0.44 ) }
    dend_15 { pt3dadd( -30.9272, 153.145, -0.504195, 1.33 ) }
    dend_15 { pt3dadd( -30.0232, 154.241, -0.282864, 0.52 ) }
    dend_15 { pt3dadd( -29.7634, 154.537, -0.167028, 0.88 ) }
    dend_15 { pt3dadd( -28.085, 156.549, 0.713716, 0.59 ) }
    dend_15 { pt3dadd( -27.1912, 157.759, 1.31772, 0.44 ) }
    dend_15 { pt3dadd( -26.9624, 158.199, 1.53005, 0.59 ) }
    dend_15 { pt3dadd( -26.8873, 158.639, 1.72609, 0.59 ) }
    dend_15 { pt3dadd( -27.2715, 159.806, 2.1096, 0.29 ) }
    dend_15 { pt3dadd( -27.5572, 160.327, 2.4115, 0.29 ) }
    dend_15 { pt3dadd( -27.8134, 160.703, 2.6473, 0.29 ) }
    dend_15 { pt3dadd( -27.8885, 160.811, 2.72592, 0.29 ) }
    dend_15 { pt3dadd( -28.421, 161.566, 3.30411, 1.33 ) }
    dend_15 { pt3dadd( -28.7747, 162.103, 3.71241, 1.33 ) }
    dend_15 { pt3dadd( -29.6731, 163.738, 4.91093, 0.37 ) }
    dend_15 { pt3dadd( -29.9943, 164.364, 5.30879, 0.37 ) }
    dend_15 { pt3dadd( -30.1408, 164.657, 5.47257, 0.88 ) }
    dend_15 { pt3dadd( -30.358, 165.104, 5.68334, 1.03 ) }
    dend_15 { pt3dadd( -30.8194, 166.052, 6.01655, 0.44 ) }
    dend_15 { pt3dadd( -31.0592, 166.596, 6.12173, 1.18 ) }
    dend_15 { pt3dadd( -31.4074, 167.531, 6.15225, 1.4 ) }
    dend_15 { pt3dadd( -31.7748, 168.674, 6.15967, 0.44 ) }
    dend_15 { pt3dadd( -31.8659, 168.994, 6.15182, 0.44 ) }
    dend_15 { pt3dadd( -32.0782, 169.885, 6.10596, 1.25 ) }
    dend_15 { pt3dadd( -32.3226, 171.252, 6.0015, 0.37 ) }
    dend_15 { pt3dadd( -32.4526, 172.267, 5.85308, 0.37 ) }
    dend_15 { pt3dadd( -32.4712, 172.714, 5.72498, 0.37 ) }
    dend_15 { pt3dadd( -32.4668, 173.309, 5.50134, 1.25 ) }
    dend_15 { pt3dadd( -32.4657, 173.885, 5.27337, 1.25 ) }
    dend_15 { pt3dadd( -32.4649, 174.757, 4.92238, 1.25 ) }
    dend_15 { pt3dadd( -32.4737, 175.646, 4.56688, 1.25 ) }
    dend_15 { pt3dadd( -32.4578, 177.656, 3.73018, 0.44 ) }
    dend_15 { pt3dadd( -32.4319, 178.392, 3.38161, 0.44 ) }
    dend_15 { pt3dadd( -32.3936, 179.154, 2.96481, 0.44 ) }
    dend_15 { pt3dadd( -32.3836, 179.561, 2.7167, 0.44 ) }
    dend_15 { pt3dadd( -32.3492, 180.164, 2.33534, 1.18 ) }
    dend_15 { pt3dadd( -32.2952, 180.808, 1.95331, 0.88 ) }
    dend_15 { pt3dadd( -32.1131, 182.349, 1.03747, 0.88 ) }
    dend_15 { pt3dadd( -31.9861, 183.151, 0.539173, 0.74 ) }
    dend_15 { pt3dadd( -31.9092, 183.561, 0.284076, 0.74 ) }
    dend_15 { pt3dadd( -31.7324, 184.72, -0.385083, 0.52 ) }
    dend_15 { pt3dadd( -31.6761, 185.282, -0.649787, 0.52 ) }
    dend_15 { pt3dadd( -31.6391, 185.716, -0.804866, 0.96 ) }
    dend_15 { pt3dadd( -31.6255, 185.863, -0.832539, 0.96 ) }
    dend_15 { pt3dadd( -31.559, 186.671, -0.912044, 0.44 ) }
    dend_15 { pt3dadd( -31.4531, 187.319, -0.942423, 0.81 ) }
    dend_15 { pt3dadd( -31.3586, 187.8, -0.954291, 0.44 ) }
    dend_15 { pt3dadd( -30.9886, 189.087, -0.95426, 0.22 ) }
    dend_15 { pt3dadd( -30.8635, 189.463, -0.92092, 0.74 ) }
    dend_15 { pt3dadd( -30.5135, 190.431, -0.810302, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_15 { pt3dadd( -29.879, 191.975, -0.565162, 0.44 ) }
    dend_15 { pt3dadd( -29.6044, 192.574, -0.458275, 1.69 ) }
    dend_15 { pt3dadd( -29.1951, 193.407, -0.289618, 1.69 ) }
    dend_15 { pt3dadd( -28.6496, 194.441, 0.0424419, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 4/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 12.6995, 87.3589, 15.6312, 0.29 ) }
    dend_10 { pt3dadd( 12.221, 89.659, 16.4808, 0.29 ) }
    dend_10 { pt3dadd( 12.1228, 90.2856, 16.6867, 0.66 ) }
    dend_10 { pt3dadd( 12.0752, 90.7053, 16.8142, 1.03 ) }
    dend_10 { pt3dadd( 12.0542, 90.9467, 16.8964, 1.03 ) }
    dend_10 { pt3dadd( 11.9457, 92.7599, 17.546, 0.44 ) }
    dend_10 { pt3dadd( 11.9302, 93.4151, 17.7866, 0.44 ) }
    dend_10 { pt3dadd( 11.9852, 94.0854, 18.0106, 0.59 ) }
    dend_10 { pt3dadd( 12.0456, 94.5624, 18.1874, 0.59 ) }
    dend_10 { pt3dadd( 12.2686, 95.893, 18.6921, 0.29 ) }
    dend_10 { pt3dadd( 12.337, 96.2134, 18.816, 0.66 ) }
    dend_10 { pt3dadd( 12.5277, 96.7453, 19.0331, 1.03 ) }
    dend_10 { pt3dadd( 12.6468, 96.9992, 19.1285, 1.4 ) }
    dend_10 { pt3dadd( 12.9581, 97.5923, 19.3412, 1.03 ) }
    dend_10 { pt3dadd( 13.2915, 98.159, 19.5144, 0.96 ) }
    dend_10 { pt3dadd( 13.2915, 98.159, 19.5144, 1.03 ) }
    dend_10 { pt3dadd( 13.7862, 98.8616, 19.6284, 1.03 ) }
    dend_10 { pt3dadd( 14.4466, 99.7827, 19.7647, 0.81 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 22/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 12.6995, 87.3589, 15.6312, 0.44 ) }
    dend_9 { pt3dadd( 13.8773, 88.6898, 16.0382, 0.44 ) }
    dend_9 { pt3dadd( 14.3733, 89.1662, 16.1787, 0.52 ) }
    dend_9 { pt3dadd( 14.876, 89.6048, 16.3119, 0.88 ) }
    dend_9 { pt3dadd( 15.2083, 89.8861, 16.3982, 0.96 ) }
    dend_9 { pt3dadd( 15.3946, 90.0424, 16.4546, 0.88 ) }
    dend_9 { pt3dadd( 17.1708, 91.5318, 17.0371, 0.44 ) }
    dend_9 { pt3dadd( 18.0748, 92.283, 17.3367, 0.44 ) }
    dend_9 { pt3dadd( 18.8925, 92.9741, 17.6141, 0.44 ) }
    dend_9 { pt3dadd( 19.3049, 93.3364, 17.7633, 0.44 ) }
    dend_9 { pt3dadd( 20.0445, 94.0082, 18.0365, 0.66 ) }
    dend_9 { pt3dadd( 20.6216, 94.5636, 18.2611, 1.03 ) }
    dend_9 { pt3dadd( 21.2862, 95.2854, 18.5479, 0.96 ) }
    dend_9 { pt3dadd( 21.721, 95.7998, 18.6754, 0.66 ) }
    dend_9 { pt3dadd( 22.4843, 96.7279, 18.795, 0.44 ) }
    dend_9 { pt3dadd( 23.1189, 97.489, 18.8174, 0.44 ) }
    dend_9 { pt3dadd( 23.4866, 97.9246, 18.7868, 0.88 ) }
    dend_9 { pt3dadd( 23.7417, 98.2269, 18.7519, 0.88 ) }
    dend_9 { pt3dadd( 24.9848, 99.7228, 18.5582, 0.37 ) }
    dend_9 { pt3dadd( 25.262, 100.07, 18.5179, 0.37 ) }
    dend_9 { pt3dadd( 25.5717, 100.47, 18.4874, 0.66 ) }
    dend_9 { pt3dadd( 25.9454, 101.05, 18.543, 0.96 ) }
    dend_9 { pt3dadd( 26.2476, 101.6, 18.6608, 0.88 ) }
    dend_9 { pt3dadd( 26.8064, 102.653, 18.9675, 0.44 ) }
    dend_9 { pt3dadd( 27.131, 103.312, 19.2379, 0.59 ) }
    dend_9 { pt3dadd( 27.4915, 104.114, 19.5758, 0.59 ) }
    dend_9 { pt3dadd( 28.2572, 105.978, 20.4057, 0.52 ) }
    dend_9 { pt3dadd( 28.5268, 106.712, 20.7614, 1.0 ) }
    dend_9 { pt3dadd( 34.8244, 116.811, 20.7986, 1.0 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 9.00826, 117.676, -3.3277, 0.29 ) }
    dend_7 { pt3dadd( 11.3292, 119.577, -1.81402, 0.29 ) }
    dend_7 { pt3dadd( 11.634, 119.849, -1.62163, 0.29 ) }
    dend_7 { pt3dadd( 12.1575, 120.352, -1.29723, 0.22 ) }
    dend_7 { pt3dadd( 12.5887, 120.784, -1.03399, 0.22 ) }
    dend_7 { pt3dadd( 12.8512, 121.069, -0.863588, 0.22 ) }
    dend_7 { pt3dadd( 13.1046, 121.36, -0.703268, 0.44 ) }
    dend_7 { pt3dadd( 13.3451, 121.698, -0.598448, 0.52 ) }
    dend_7 { pt3dadd( 13.4221, 121.828, -0.551274, 0.52 ) }
    dend_7 { pt3dadd( 13.4554, 121.896, -0.527293, 0.52 ) }
    dend_7 { pt3dadd( 13.8686, 122.693, -0.0606366, 0.07 ) }
    dend_7 { pt3dadd( 14.1511, 123.181, 0.304295, 0.07 ) }
    dend_7 { pt3dadd( 14.3977, 123.57, 0.636452, 0.37 ) }
    dend_7 { pt3dadd( 14.68, 123.977, 1.02064, 0.52 ) }
    dend_7 { pt3dadd( 14.9687, 124.405, 1.42518, 0.52 ) }
    dend_7 { pt3dadd( 15.6395, 125.445, 2.38114, 0.88 ) }
    dend_7 { pt3dadd( 15.7807, 125.679, 2.59276, 0.88 ) }
    dend_7 { pt3dadd( 15.8522, 125.81, 2.70292, 0.88 ) }
    dend_7 { pt3dadd( 16.2993, 126.663, 3.31912, 0.22 ) }
    dend_7 { pt3dadd( 16.5478, 127.124, 3.60499, 0.22 ) }
    dend_7 { pt3dadd( 16.6817, 127.36, 3.73639, 0.44 ) }
    dend_7 { pt3dadd( 16.7985, 127.567, 3.82296, 0.44 ) }
    dend_7 { pt3dadd( 17.135, 128.135, 4.07863, 0.37 ) }
    dend_7 { pt3dadd( 17.2239, 128.28, 4.14885, 0.37 ) }
    dend_7 { pt3dadd( 17.4017, 128.567, 4.29605, 0.37 ) }
    dend_7 { pt3dadd( 18.0689, 129.543, 4.86834, 0.44 ) }
    dend_7 { pt3dadd( 18.1625, 129.672, 4.94774, 0.74 ) }
    dend_7 { pt3dadd( 18.3372, 129.903, 5.10027, 0.74 ) }
    dend_7 { pt3dadd( 18.3746, 129.951, 5.13005, 0.74 ) }
    dend_7 { pt3dadd( 18.4419, 130.051, 5.17299, 0.81 ) }
    dend_7 { pt3dadd( 18.7191, 130.487, 5.26201, 0.52 ) }
    dend_7 { pt3dadd( 18.8577, 130.724, 5.23665, 0.29 ) }
    dend_7 { pt3dadd( 18.9503, 130.866, 5.21865, 0.29 ) }
    dend_7 { pt3dadd( 19.4218, 131.619, 5.12774, 0.22 ) }
    dend_7 { pt3dadd( 19.7767, 132.187, 5.05281, 0.22 ) }
    dend_7 { pt3dadd( 20.0737, 132.662, 4.9867, 0.59 ) }
    dend_7 { pt3dadd( 20.4344, 133.273, 4.90027, 0.74 ) }
    dend_7 { pt3dadd( 20.7802, 133.885, 4.80953, 0.81 ) }
    dend_7 { pt3dadd( 21.0771, 134.396, 4.7174, 0.81 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 90/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.00826, 117.676, -3.3277, 0.74 ) }
    dend_4 { pt3dadd( 8.95046, 118.221, -3.42896, 0.74 ) }
    dend_4 { pt3dadd( 8.81804, 119.427, -3.61588, 0.29 ) }
    dend_4 { pt3dadd( 8.81539, 119.61, -3.63777, 0.22 ) }
    dend_4 { pt3dadd( 8.81782, 119.823, -3.68422, 0.22 ) }
    dend_4 { pt3dadd( 8.81416, 120.186, -3.77417, 0.22 ) }
    dend_4 { pt3dadd( 8.80597, 120.427, -3.83593, 0.22 ) }
    dend_4 { pt3dadd( 8.75976, 121.274, -4.06215, 0.96 ) }
    dend_4 { pt3dadd( 8.66439, 122.231, -4.32561, 0.96 ) }
    dend_4 { pt3dadd( 8.535, 123.2, -4.61059, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_4 { pt3dadd( 8.43585, 123.818, -4.80211, 0.22 ) }
    dend_4 { pt3dadd( 8.38101, 124.073, -4.88254, 0.15 ) }
    dend_4 { pt3dadd( 8.28156, 124.427, -4.99004, 0.15 ) }
    dend_4 { pt3dadd( 8.15389, 124.749, -5.0739, 0.15 ) }
    dend_4 { pt3dadd( 8.07161, 124.923, -5.10331, 0.44 ) }
    dend_4 { pt3dadd( 8.02673, 125.042, -5.1071, 0.81 ) }
    dend_4 { pt3dadd( 7.9397, 125.449, -5.12949, 0.74 ) }
    dend_4 { pt3dadd( 7.92548, 125.634, -5.13901, 0.88 ) }
    dend_4 { pt3dadd( 7.93482, 125.886, -5.14746, 0.81 ) }
    dend_4 { pt3dadd( 8.00247, 126.597, -5.15194, 0.15 ) }
    dend_4 { pt3dadd( 8.02223, 126.737, -5.15255, 0.15 ) }
    dend_4 { pt3dadd( 8.10933, 127.197, -5.15307, 0.15 ) }
    dend_4 { pt3dadd( 8.21141, 127.589, -5.1057, 0.15 ) }
    dend_4 { pt3dadd( 8.37542, 128.127, -5.00189, 0.96 ) }
    dend_4 { pt3dadd( 8.39045, 128.174, -4.99078, 0.96 ) }
    dend_4 { pt3dadd( 8.45182, 128.359, -4.93905, 1.11 ) }
    dend_4 { pt3dadd( 8.5372, 128.638, -4.86091, 1.18 ) }
    dend_4 { pt3dadd( 8.92485, 129.96, -4.47991, 0.22 ) }
    dend_4 { pt3dadd( 9.15509, 130.743, -4.25504, 0.22 ) }
    dend_4 { pt3dadd( 9.22211, 130.984, -4.19048, 0.22 ) }
    dend_4 { pt3dadd( 9.33911, 131.358, -4.11653, 0.29 ) }
    dend_4 { pt3dadd( 9.47593, 131.765, -4.0601, 0.29 ) }
    dend_4 { pt3dadd( 9.62075, 132.158, -4.03364, 0.88 ) }
    dend_4 { pt3dadd( 9.68798, 132.318, -4.0403, 1.33 ) }
    dend_4 { pt3dadd( 9.89763, 132.771, -4.06459, 1.33 ) }
    dend_4 { pt3dadd( 10.4502, 133.873, -4.13573, 0.22 ) }
    dend_4 { pt3dadd( 10.5905, 134.177, -4.16106, 0.44 ) }
    dend_4 { pt3dadd( 10.7109, 134.457, -4.18763, 0.88 ) }
    dend_4 { pt3dadd( 10.8334, 134.775, -4.21951, 0.88 ) }
    dend_4 { pt3dadd( 10.9827, 135.219, -4.25712, 0.52 ) }
    dend_4 { pt3dadd( 11.0202, 135.349, -4.26547, 0.52 ) }
    dend_4 { pt3dadd( 11.2006, 136.331, -4.29825, 0.15 ) }
    dend_4 { pt3dadd( 11.2662, 136.679, -4.31389, 0.15 ) }
    dend_4 { pt3dadd( 11.2771, 136.736, -4.32003, 0.15 ) }
    dend_4 { pt3dadd( 11.3805, 137.202, -4.39613, 0.15 ) }
    dend_4 { pt3dadd( 11.4044, 137.292, -4.41548, 0.15 ) }
    dend_4 { pt3dadd( 11.5353, 137.704, -4.51446, 0.15 ) }
    dend_4 { pt3dadd( 11.6482, 137.968, -4.60723, 0.59 ) }
    dend_4 { pt3dadd( 11.9067, 138.568, -4.84206, 0.66 ) }
    dend_4 { pt3dadd( 12.0201, 138.828, -4.94901, 0.59 ) }
    dend_4 { pt3dadd( 12.0497, 138.895, -4.97729, 0.59 ) }
    dend_4 { pt3dadd( 12.2252, 139.301, -5.12078, 0.52 ) }
    dend_4 { pt3dadd( 12.6007, 140.193, -5.37072, 0.15 ) }
    dend_4 { pt3dadd( 12.7851, 140.644, -5.44907, 0.15 ) }
    dend_4 { pt3dadd( 12.8076, 140.699, -5.45007, 0.15 ) }
    dend_4 { pt3dadd( 12.9387, 141.029, -5.43397, 0.15 ) }
    dend_4 { pt3dadd( 13.107, 141.508, -5.38175, 0.88 ) }
    dend_4 { pt3dadd( 13.1977, 141.821, -5.32575, 1.18 ) }
    dend_4 { pt3dadd( 13.3138, 142.358, -5.18884, 0.74 ) }
    dend_4 { pt3dadd( 13.4524, 143.215, -4.96612, 0.22 ) }
    dend_4 { pt3dadd( 13.4832, 143.45, -4.90675, 0.22 ) }
    dend_4 { pt3dadd( 13.53, 143.891, -4.80199, 0.22 ) }
    dend_4 { pt3dadd( 13.5608, 144.244, -4.72711, 0.22 ) }
    dend_4 { pt3dadd( 13.589, 144.601, -4.65611, 0.22 ) }
    dend_4 { pt3dadd( 13.6262, 145.115, -4.56348, 0.37 ) }
    dend_4 { pt3dadd( 13.6411, 145.296, -4.53862, 0.59 ) }
    dend_4 { pt3dadd( 13.6886, 145.645, -4.49539, 0.59 ) }
    dend_4 { pt3dadd( 13.7047, 145.731, -4.48577, 0.44 ) }
    dend_4 { pt3dadd( 13.8136, 146.245, -4.43615, 0.29 ) }
    dend_4 { pt3dadd( 13.8753, 146.519, -4.41478, 0.29 ) }
    dend_4 { pt3dadd( 14.0161, 146.98, -4.39249, 0.15 ) }
    dend_4 { pt3dadd( 14.1493, 147.344, -4.37735, 0.15 ) }
    dend_4 { pt3dadd( 14.174, 147.399, -4.36744, 0.15 ) }
    dend_4 { pt3dadd( 14.3828, 147.769, -4.26333, 0.15 ) }
    dend_4 { pt3dadd( 14.6776, 148.213, -4.09839, 0.96 ) }
    dend_4 { pt3dadd( 15.071, 148.736, -3.87674, 1.18 ) }
    dend_4 { pt3dadd( 15.2285, 148.923, -3.78653, 0.96 ) }
    dend_4 { pt3dadd( 15.9952, 149.794, -3.33835, 0.15 ) }
    dend_4 { pt3dadd( 16.2788, 150.118, -3.19375, 0.15 ) }
    dend_4 { pt3dadd( 16.4364, 150.303, -3.11761, 0.15 ) }
    dend_4 { pt3dadd( 16.6437, 150.55, -3.01186, 0.29 ) }
    dend_4 { pt3dadd( 16.6437, 150.55, -3.01186, 0.74 ) }
    dend_4 { pt3dadd( 16.846, 150.856, -2.96163, 1.03 ) }
    dend_4 { pt3dadd( 17.1648, 151.451, -3.18255, 1.03 ) }
    dend_4 { pt3dadd( 17.2425, 151.636, -3.26698, 1.03 ) }
    // Section: dend_127, id: dend_127, parent: dend_125 (entry count 75/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( -7.26998, -59.008, 19.1525, 0.37 ) }
    dend_127 { pt3dadd( -6.90115, -59.3764, 19.0365, 0.37 ) }
    dend_127 { pt3dadd( -6.45614, -59.832, 18.8983, 0.37 ) }
    dend_127 { pt3dadd( -6.08971, -60.2071, 18.7845, 0.37 ) }
    dend_127 { pt3dadd( -6.05531, -60.2423, 18.7738, 0.37 ) }
    dend_127 { pt3dadd( -5.80267, -60.501, 18.6954, 0.74 ) }
    dend_127 { pt3dadd( -5.72058, -60.585, 18.6699, 1.11 ) }
    dend_127 { pt3dadd( -5.50842, -60.7985, 18.6123, 1.11 ) }
    dend_127 { pt3dadd( 1.22321, -64.8746, 15.5386, 1.11 ) }
    dend_127 { pt3dadd( 8.12218, -68.996, 12.9341, 1.11 ) }
    // Section: dend_126, id: dend_126, parent: dend_125 (entry count 85/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( -7.26998, -59.008, 19.1525, 0.22 ) }
    dend_126 { pt3dadd( -7.94053, -58.6604, 18.1271, 0.22 ) }
    dend_126 { pt3dadd( -8.02515, -58.6051, 17.9911, 0.37 ) }
    dend_126 { pt3dadd( -8.10015, -58.5482, 17.8653, 0.52 ) }
    dend_126 { pt3dadd( -8.5864, -58.12, 17.0063, 0.52 ) }
    dend_126 { pt3dadd( -8.65504, -58.0533, 16.8836, 0.74 ) }
    dend_126 { pt3dadd( -8.79482, -57.9175, 16.6339, 0.88 ) }
    dend_126 { pt3dadd( -8.88626, -57.7754, 16.4699, 1.03 ) }
    dend_126 { pt3dadd( -8.91163, -57.7267, 16.4161, 1.03 ) }
    dend_126 { pt3dadd( -8.95177, -57.6217, 16.3077, 1.03 ) }
    dend_126 { pt3dadd( -8.95, -57.4979, 16.2319, 1.03 ) }
    dend_126 { pt3dadd( -11.3311, -54.3023, 10.1539, 1.03 ) }
    dend_126 { pt3dadd( -12.5361, -51.3862, 3.60075, 1.03 ) }
    // Section: dend_115, id: dend_115, parent: dend_113 (entry count 98/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( 7.76294, -62.0704, 8.71959, 0.29 ) }
    dend_115 { pt3dadd( 8.34177, -62.7012, 9.44209, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_115 { pt3dadd( 8.93571, -63.4081, 10.2085, 0.44 ) }
    dend_115 { pt3dadd( 9.1687, -63.6938, 10.5093, 0.81 ) }
    dend_115 { pt3dadd( 9.2796, -63.8298, 10.6525, 0.81 ) }
    dend_115 { pt3dadd( 10.105, -64.842, 11.7181, 0.29 ) }
    dend_115 { pt3dadd( 10.3456, -65.1371, 12.0287, 0.29 ) }
    dend_115 { pt3dadd( 10.3716, -65.1813, 12.0772, 0.29 ) }
    dend_115 { pt3dadd( 10.3998, -65.2343, 12.1297, 0.66 ) }
    dend_115 { pt3dadd( 14.6583, -70.673, 18.9582, 0.66 ) }
    dend_115 { pt3dadd( 17.4696, -75.8271, 26.7031, 0.66 ) }
    // Section: dend_114, id: dend_114, parent: dend_113 (entry count 9/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 7.76294, -62.0704, 8.71959, 0.29 ) }
    dend_114 { pt3dadd( 7.59928, -62.6416, 8.6546, 0.29 ) }
    dend_114 { pt3dadd( 7.51688, -62.9291, 8.62188, 0.29 ) }
    dend_114 { pt3dadd( 7.41422, -63.2875, 8.58111, 0.29 ) }
    dend_114 { pt3dadd( 7.37587, -63.4214, 8.56589, 0.29 ) }
    dend_114 { pt3dadd( 5.18422, -68.1566, 8.57586, 0.29 ) }
    dend_114 { pt3dadd( 3.94843, -73.15, 9.37845, 0.29 ) }
    dend_114 { pt3dadd( 3.14178, -78.1572, 10.5529, 0.29 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 17/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 139.958, -75.1354, -86.1059, 0.29 ) }
    dend_105 { pt3dadd( 141.343, -74.8641, -86.8095, 0.29 ) }
    dend_105 { pt3dadd( 142.214, -74.6901, -87.2423, 0.29 ) }
    dend_105 { pt3dadd( 142.536, -74.6331, -87.4015, 0.66 ) }
    dend_105 { pt3dadd( 143.086, -74.5629, -87.5633, 0.66 ) }
    dend_105 { pt3dadd( 144.367, -74.3589, -87.8395, 0.22 ) }
    dend_105 { pt3dadd( 145.409, -74.1584, -88.0265, 0.22 ) }
    dend_105 { pt3dadd( 146.042, -73.9791, -88.1041, 0.59 ) }
    dend_105 { pt3dadd( 146.286, -73.895, -88.1221, 0.88 ) }
    dend_105 { pt3dadd( 148.537, -73.0719, -88.1098, 0.22 ) }
    dend_105 { pt3dadd( 149.498, -72.7216, -88.0644, 0.22 ) }
    dend_105 { pt3dadd( 149.838, -72.6057, -88.0292, 0.22 ) }
    dend_105 { pt3dadd( 150.31, -72.4197, -87.9601, 0.81 ) }
    dend_105 { pt3dadd( 150.835, -72.1961, -87.8854, 0.81 ) }
    dend_105 { pt3dadd( 152.588, -71.4681, -87.7407, 0.29 ) }
    dend_105 { pt3dadd( 153.212, -71.236, -87.7418, 0.88 ) }
    dend_105 { pt3dadd( 154.179, -70.9579, -87.7674, 0.66 ) }
    dend_105 { pt3dadd( 154.658, -70.8383, -87.7817, 0.22 ) }
    dend_105 { pt3dadd( 155.125, -70.7381, -87.7975, 0.29 ) }
    dend_105 { pt3dadd( 156.26, -70.5468, -87.895, 0.29 ) }
    dend_105 { pt3dadd( 156.946, -70.4389, -88.0464, 0.59 ) }
    dend_105 { pt3dadd( 157.344, -70.3763, -88.148, 0.96 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 39/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 139.958, -75.1354, -86.1059, 0.29 ) }
    dend_104 { pt3dadd( 139.7, -75.0158, -85.9721, 0.29 ) }
    dend_104 { pt3dadd( 139.447, -74.8685, -85.8561, 0.29 ) }
    dend_104 { pt3dadd( 139.311, -74.7784, -85.7962, 0.29 ) }
    dend_104 { pt3dadd( 139.198, -74.7117, -85.7436, 0.29 ) }
    dend_104 { pt3dadd( 139.036, -74.6358, -85.6472, 0.81 ) }
    dend_104 { pt3dadd( 138.913, -74.594, -85.5643, 0.22 ) }
    dend_104 { pt3dadd( 138.802, -74.5763, -85.48, 0.37 ) }
    dend_104 { pt3dadd( 138.655, -74.5538, -85.3624, 0.22 ) }
    dend_104 { pt3dadd( 138.389, -74.5408, -85.1315, 0.22 ) }
    dend_104 { pt3dadd( 138.099, -74.5779, -84.8532, 0.88 ) }
    dend_104 { pt3dadd( 137.973, -74.6206, -84.7158, 1.25 ) }
    dend_104 { pt3dadd( 137.915, -74.651, -84.6457, 1.33 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 52/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 54.6517, -156.521, -140.253, 0.37 ) }
    dend_102 { pt3dadd( 54.8775, -157.281, -142.539, 0.37 ) }
    dend_102 { pt3dadd( 54.946, -157.52, -143.17, 0.37 ) }
    dend_102 { pt3dadd( 54.9936, -157.682, -143.548, 0.96 ) }
    dend_102 { pt3dadd( 55.0319, -157.793, -143.79, 1.18 ) }
    dend_102 { pt3dadd( 55.4913, -158.933, -146.171, 0.52 ) }
    dend_102 { pt3dadd( 55.6086, -159.187, -146.69, 0.52 ) }
    dend_102 { pt3dadd( 55.7458, -159.387, -147.07, 0.52 ) }
    dend_102 { pt3dadd( 55.9592, -159.645, -147.624, 0.29 ) }
    dend_102 { pt3dadd( 56.1224, -159.804, -147.987, 0.29 ) }
    dend_102 { pt3dadd( 56.2696, -159.9, -148.232, 0.96 ) }
    dend_102 { pt3dadd( 56.4389, -159.955, -148.394, 0.96 ) }
    dend_102 { pt3dadd( 56.9999, -160.019, -149.032, 0.22 ) }
    dend_102 { pt3dadd( 57.4247, -159.992, -149.699, 0.88 ) }
    dend_102 { pt3dadd( 57.4516, -159.987, -149.754, 0.88 ) }
    dend_102 { pt3dadd( 57.5932, -159.956, -150.279, 1.25 ) }
    dend_102 { pt3dadd( 57.6041, -159.955, -150.331, 1.25 ) }
    dend_102 { pt3dadd( 57.7564, -159.965, -151.149, 1.25 ) }
    dend_102 { pt3dadd( 57.953, -160.011, -152.306, 0.96 ) }
    dend_102 { pt3dadd( 57.9645, -160.016, -152.357, 0.96 ) }
    dend_102 { pt3dadd( 58.461, -160.213, -154.255, 0.22 ) }
    dend_102 { pt3dadd( 58.6023, -160.269, -154.729, 0.59 ) }
    dend_102 { pt3dadd( 58.7154, -160.312, -155.061, 0.59 ) }
    dend_102 { pt3dadd( 58.7837, -160.334, -155.242, 0.96 ) }
    dend_102 { pt3dadd( 59.3524, -160.475, -156.578, 0.22 ) }
    dend_102 { pt3dadd( 59.411, -160.483, -156.717, 0.22 ) }
    dend_102 { pt3dadd( 59.7146, -160.495, -157.407, 0.66 ) }
    dend_102 { pt3dadd( 59.9114, -160.492, -157.89, 1.18 ) }
    dend_102 { pt3dadd( 60.5878, -160.439, -159.416, 0.22 ) }
    dend_102 { pt3dadd( 60.7928, -160.407, -159.823, 0.96 ) }
    dend_102 { pt3dadd( 61.5473, -160.249, -161.433, 0.22 ) }
    dend_102 { pt3dadd( 61.6657, -160.229, -161.732, 0.81 ) }
    dend_102 { pt3dadd( 61.6758, -160.23, -161.803, 0.81 ) }
    dend_102 { pt3dadd( 63.3602, -159.405, -158.782, 0.37 ) }
    dend_102 { pt3dadd( 63.8092, -159.203, -158.252, 0.88 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 87/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 54.6517, -156.521, -140.253, 0.29 ) }
    dend_101 { pt3dadd( 53.3685, -157.005, -141.912, 0.29 ) }
    dend_101 { pt3dadd( 53.0223, -157.169, -142.374, 0.29 ) }
    dend_101 { pt3dadd( 52.7437, -157.315, -142.751, 0.66 ) }
    dend_101 { pt3dadd( 52.2036, -157.628, -143.481, 0.66 ) }
    dend_101 { pt3dadd( 50.5094, -158.696, -145.704, 0.44 ) }
    dend_101 { pt3dadd( 50.358, -158.8, -145.895, 0.74 ) }
    dend_101 { pt3dadd( 50.0159, -159.075, -146.386, 0.29 ) }
    dend_101 { pt3dadd( 49.9872, -159.098, -146.43, 0.29 ) }
    dend_101 { pt3dadd( 49.7907, -159.255, -146.748, 0.96 ) }
    dend_101 { pt3dadd( 49.13, -159.784, -147.825, 0.52 ) }
    dend_101 { pt3dadd( 48.8567, -160.003, -148.265, 1.11 ) }
    dend_101 { pt3dadd( 47.1991, -161.315, -150.902, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_101 { pt3dadd( 47.1079, -161.386, -151.045, 1.03 ) }
    dend_101 { pt3dadd( 46.0148, -162.263, -152.725, 0.37 ) }
    dend_101 { pt3dadd( 45.9614, -162.307, -152.807, 0.37 ) }
    dend_101 { pt3dadd( 45.6811, -162.564, -153.243, 0.37 ) }
    dend_101 { pt3dadd( 45.2343, -162.998, -153.882, 0.37 ) }
    dend_101 { pt3dadd( 45.1368, -163.103, -153.993, 0.37 ) }
    dend_101 { pt3dadd( 44.8394, -163.434, -154.321, 0.37 ) }
    dend_101 { pt3dadd( 44.0281, -164.275, -155.254, 0.22 ) }
    dend_101 { pt3dadd( 43.8269, -164.462, -155.492, 0.52 ) }
    dend_101 { pt3dadd( 43.4142, -164.8, -155.997, 0.37 ) }
    dend_101 { pt3dadd( 42.7697, -165.283, -156.813, 0.81 ) }
    dend_101 { pt3dadd( 42.5299, -165.446, -157.114, 0.81 ) }
    dend_101 { pt3dadd( 41.2785, -166.243, -158.697, 0.44 ) }
    dend_101 { pt3dadd( 40.9447, -166.449, -159.111, 0.59 ) }
    dend_101 { pt3dadd( 39.9778, -167.07, -160.321, 0.22 ) }
    dend_101 { pt3dadd( 39.9778, -167.07, -160.321, 0.74 ) }
    dend_101 { pt3dadd( 38.605, -168.119, -162.117, 0.52 ) }
    dend_101 { pt3dadd( 37.9089, -168.669, -163.046, 0.96 ) }
    dend_101 { pt3dadd( 37.8784, -168.695, -163.088, 0.96 ) }
    dend_101 { pt3dadd( 37.323, -169.202, -163.923, 0.52 ) }
    dend_101 { pt3dadd( 37.0106, -169.509, -164.422, 0.52 ) }
    dend_101 { pt3dadd( 36.1263, -170.417, -165.886, 0.96 ) }
    dend_101 { pt3dadd( 36.0524, -170.503, -166.02, 0.96 ) }
    dend_101 { pt3dadd( 35.943, -170.626, -166.224, 0.96 ) }
    dend_101 { pt3dadd( 35.1622, -171.415, -167.709, 0.52 ) }
    dend_101 { pt3dadd( 35.1048, -171.46, -167.823, 0.88 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 26/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -65.9809, -65.8117, 25.0549, 0.29 ) }
    dend_82 { pt3dadd( -70.0715, -68.4373, 26.4307, 0.29 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 28/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -65.9809, -65.8117, 25.0549, 0.44 ) }
    dend_81 { pt3dadd( -73.7033, -70.7772, 26.9748, 0.29 ) }
    dend_81 { pt3dadd( -81.8177, -74.2294, 30.2699, 0.29 ) }
    dend_81 { pt3dadd( -89.8701, -77.4708, 33.9222, 0.29 ) }
    dend_81 { pt3dadd( -97.7597, -80.1164, 38.3524, 0.29 ) }
    dend_81 { pt3dadd( -105.863, -81.6681, 42.9445, 0.29 ) }
    dend_81 { pt3dadd( -113.132, -82.1787, 48.9626, 0.29 ) }
    dend_81 { pt3dadd( -120.159, -81.0033, 55.1752, 0.29 ) }
    dend_81 { pt3dadd( -127.277, -79.6412, 61.2443, 0.29 ) }
    dend_81 { pt3dadd( -135.142, -78.4766, 66.3581, 0.29 ) }
    dend_81 { pt3dadd( -142.118, -78.181, 72.7309, 0.29 ) }
    dend_81 { pt3dadd( -150.216, -78.5257, 77.5926, 0.29 ) }
    dend_81 { pt3dadd( -158.077, -78.2014, 82.8344, 0.29 ) }
    dend_81 { pt3dadd( -166.372, -77.6894, 87.342, 0.29 ) }
    dend_81 { pt3dadd( -175.596, -78.0442, 89.3781, 0.29 ) }
    dend_81 { pt3dadd( -184.428, -77.3246, 92.6723, 0.29 ) }
    dend_81 { pt3dadd( -193.465, -76.8826, 95.4132, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 45/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -72.513, 38.7619, -130.869, 0.52 ) }
    dend_51 { pt3dadd( -72.1958, 37.5367, -134.956, 0.52 ) }
    dend_51 { pt3dadd( -72.1797, 37.4742, -135.131, 0.52 ) }
    dend_51 { pt3dadd( -72.157, 37.3839, -135.344, 0.52 ) }
    dend_51 { pt3dadd( -72.131, 37.2775, -135.562, 0.59 ) }
    dend_51 { pt3dadd( -72.1, 37.1466, -135.803, 0.66 ) }
    dend_51 { pt3dadd( -72.0762, 37.0281, -136.019, 0.66 ) }
    dend_51 { pt3dadd( -71.8777, 35.8138, -137.69, 0.29 ) }
    dend_51 { pt3dadd( -71.8492, 35.5816, -138.02, 0.29 ) }
    dend_51 { pt3dadd( -71.8313, 35.4041, -138.366, 0.44 ) }
    dend_51 { pt3dadd( -71.8249, 35.3524, -138.49, 0.66 ) }
    dend_51 { pt3dadd( -71.6936, 34.7267, -140.36, 0.52 ) }
    dend_51 { pt3dadd( -71.6885, 34.7089, -140.42, 0.81 ) }
    dend_51 { pt3dadd( -71.6525, 34.6243, -140.744, 0.81 ) }
    dend_51 { pt3dadd( -71.2748, 33.9702, -143.644, 0.29 ) }
    dend_51 { pt3dadd( -71.2198, 33.9015, -144.0, 0.29 ) }
    dend_51 { pt3dadd( -71.0381, 33.7505, -144.954, 0.88 ) }
    dend_51 { pt3dadd( -70.9452, 33.7055, -145.339, 1.03 ) }
    dend_51 { pt3dadd( -70.8302, 33.6617, -145.802, 1.03 ) }
    dend_51 { pt3dadd( -70.7781, 33.6634, -146.143, 1.03 ) }
    dend_51 { pt3dadd( -70.7627, 33.6763, -146.335, 1.03 ) }
    dend_51 { pt3dadd( -70.7464, 33.7106, -146.725, 1.03 ) }
    dend_51 { pt3dadd( -70.7618, 33.7598, -147.128, 1.03 ) }
    dend_51 { pt3dadd( -70.7695, 33.7773, -147.253, 1.03 ) }
    dend_51 { pt3dadd( -71.0879, 34.3324, -150.911, 0.66 ) }
    dend_51 { pt3dadd( -71.094, 34.3417, -150.975, 0.66 ) }
    dend_51 { pt3dadd( -71.1087, 34.3633, -151.114, 0.74 ) }
    dend_51 { pt3dadd( -71.4035, 34.8157, -153.826, 0.15 ) }
    dend_51 { pt3dadd( -71.4217, 34.853, -154.019, 0.15 ) }
    dend_51 { pt3dadd( -71.4897, 34.9936, -154.634, 0.52 ) }
    dend_51 { pt3dadd( -71.4997, 35.0143, -154.702, 0.52 ) }
    dend_51 { pt3dadd( -71.5154, 35.0968, -155.161, 0.59 ) }
    dend_51 { pt3dadd( -71.4891, 35.0871, -155.267, 0.59 ) }
    dend_51 { pt3dadd( -71.2666, 34.9256, -155.492, 0.59 ) }
    dend_51 { pt3dadd( -71.0822, 34.7964, -155.658, 0.59 ) }
    dend_51 { pt3dadd( -70.1502, 34.186, -156.38, 0.15 ) }
    dend_51 { pt3dadd( -69.8662, 33.9968, -156.62, 0.15 ) }
    dend_51 { pt3dadd( -69.6653, 33.8646, -156.789, 0.74 ) }
    dend_51 { pt3dadd( -69.549, 33.7921, -156.903, 1.11 ) }
    dend_51 { pt3dadd( -69.3742, 33.6913, -157.093, 1.11 ) }
    dend_51 { pt3dadd( -68.6597, 33.3442, -157.897, 0.29 ) }
    dend_51 { pt3dadd( -68.0123, 33.0831, -158.628, 0.29 ) }
    dend_51 { pt3dadd( -67.8458, 33.0263, -158.835, 0.29 ) }
    dend_51 { pt3dadd( -67.1454, 32.8182, -159.765, 0.22 ) }
    dend_51 { pt3dadd( -67.0669, 32.7974, -159.873, 0.22 ) }
    dend_51 { pt3dadd( -66.8911, 32.7577, -160.132, 0.22 ) }
    dend_51 { pt3dadd( -66.8535, 32.754, -160.196, 0.22 ) }
    dend_51 { pt3dadd( -66.6035, 32.7518, -160.54, 0.66 ) }
    dend_51 { pt3dadd( -66.5219, 32.7496, -160.65, 0.66 ) }
    dend_51 { pt3dadd( -66.2832, 32.7263, -160.795, 0.88 ) }
    dend_51 { pt3dadd( -66.2315, 32.713, -160.827, 0.88 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -72.513, 38.7619, -130.869, 0.37 ) }
    dend_50 { pt3dadd( -73.2262, 38.2912, -131.153, 0.37 ) }
    dend_50 { pt3dadd( -73.6226, 38.0387, -131.3, 0.22 ) }
    dend_50 { pt3dadd( -74.1012, 37.7329, -131.521, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_50 { pt3dadd( -74.3973, 37.5366, -131.673, 0.81 ) }
    dend_50 { pt3dadd( -75.2411, 36.9415, -132.139, 0.52 ) }
    dend_50 { pt3dadd( -75.5147, 36.7392, -132.298, 0.37 ) }
    dend_50 { pt3dadd( -75.7683, 36.5124, -132.604, 0.37 ) }
    dend_50 { pt3dadd( -76.098, 36.166, -133.235, 0.37 ) }
    dend_50 { pt3dadd( -76.1602, 36.0893, -133.405, 0.66 ) }
    dend_50 { pt3dadd( -76.2252, 35.9965, -133.645, 0.81 ) }
    dend_50 { pt3dadd( -76.2417, 35.9717, -133.729, 0.96 ) }
    dend_50 { pt3dadd( -76.8294, 35.3188, -136.356, 0.37 ) }
    dend_50 { pt3dadd( -76.8666, 35.2917, -136.483, 0.37 ) }
    dend_50 { pt3dadd( -76.888, 35.2788, -136.55, 0.59 ) }
    dend_50 { pt3dadd( -76.9422, 35.2469, -136.71, 0.74 ) }
    dend_50 { pt3dadd( -77.5095, 34.8951, -138.305, 1.03 ) }
    dend_50 { pt3dadd( -77.7156, 34.7488, -138.869, 0.44 ) }
    dend_50 { pt3dadd( -77.9739, 34.5644, -139.502, 0.44 ) }
    dend_50 { pt3dadd( -78.9145, 33.8314, -141.949, 0.59 ) }
    dend_50 { pt3dadd( -79.0285, 33.7306, -142.267, 0.74 ) }
    dend_50 { pt3dadd( -79.1266, 33.6213, -142.578, 0.74 ) }
    dend_50 { pt3dadd( -79.1813, 33.5187, -142.816, 0.74 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 19/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -76.7038, 193.531, -197.29, 0.22 ) }
    dend_46 { pt3dadd( -77.2453, 194.681, -197.103, 0.22 ) }
    dend_46 { pt3dadd( -77.3137, 194.811, -197.096, 0.22 ) }
    dend_46 { pt3dadd( -77.3537, 194.963, -197.312, 0.22 ) }
    dend_46 { pt3dadd( -77.374, 195.081, -197.474, 0.22 ) }
    dend_46 { pt3dadd( -77.4411, 195.538, -198.042, 0.37 ) }
    dend_46 { pt3dadd( -77.4626, 195.685, -198.21, 0.66 ) }
    dend_46 { pt3dadd( -77.467, 195.733, -198.266, 0.88 ) }
    dend_46 { pt3dadd( -77.5693, 197.845, -200.637, 0.29 ) }
    dend_46 { pt3dadd( -77.5681, 198.179, -200.996, 0.29 ) }
    dend_46 { pt3dadd( -77.5601, 198.591, -201.42, 0.44 ) }
    dend_46 { pt3dadd( -77.5511, 198.842, -201.661, 0.52 ) }
    dend_46 { pt3dadd( -77.544, 199.284, -202.064, 0.22 ) }
    dend_46 { pt3dadd( -77.5499, 199.512, -202.241, 0.22 ) }
    dend_46 { pt3dadd( -77.5768, 199.637, -202.297, 0.37 ) }
    dend_46 { pt3dadd( -77.781, 200.111, -202.702, 0.22 ) }
    dend_46 { pt3dadd( -77.8568, 200.219, -202.855, 0.29 ) }
    dend_46 { pt3dadd( -77.9135, 200.292, -202.972, 0.66 ) }
    dend_46 { pt3dadd( -77.9329, 200.322, -203.026, 0.66 ) }
    dend_46 { pt3dadd( -78.1258, 200.882, -204.036, 0.37 ) }
    dend_46 { pt3dadd( -78.1289, 200.933, -204.119, 0.22 ) }
    dend_46 { pt3dadd( -78.1222, 200.967, -204.173, 0.15 ) }
    dend_46 { pt3dadd( -78.0314, 201.285, -204.668, 0.15 ) }
    dend_46 { pt3dadd( -77.8371, 201.685, -205.246, 0.88 ) }
    dend_46 { pt3dadd( -77.7499, 201.842, -205.453, 0.88 ) }
    dend_46 { pt3dadd( -77.3707, 202.483, -206.412, 0.44 ) }
    dend_46 { pt3dadd( -77.1003, 202.95, -207.17, 0.44 ) }
    dend_46 { pt3dadd( -77.0614, 203.02, -207.286, 0.74 ) }
    dend_46 { pt3dadd( -76.6932, 203.688, -208.43, 0.22 ) }
    dend_46 { pt3dadd( -76.6154, 203.824, -208.647, 0.22 ) }
    dend_46 { pt3dadd( -75.992, 204.807, -210.123, 0.22 ) }
    dend_46 { pt3dadd( -75.9151, 204.91, -210.289, 0.66 ) }
    dend_46 { pt3dadd( -75.7881, 205.105, -210.606, 0.66 ) }
    dend_46 { pt3dadd( -75.7082, 205.247, -210.839, 0.66 ) }
    dend_46 { pt3dadd( -75.5354, 205.615, -211.428, 0.15 ) }
    dend_46 { pt3dadd( -75.4786, 205.732, -211.593, 0.66 ) }
    dend_46 { pt3dadd( -74.8213, 207.105, -213.291, 0.15 ) }
    dend_46 { pt3dadd( -74.7348, 207.311, -213.547, 0.22 ) }
    dend_46 { pt3dadd( -74.6831, 207.456, -213.729, 0.22 ) }
    dend_46 { pt3dadd( -74.5824, 207.799, -214.186, 0.81 ) }
    dend_46 { pt3dadd( -74.5312, 208.011, -214.472, 0.81 ) }
    dend_46 { pt3dadd( -74.3376, 208.762, -215.439, 0.29 ) }
    dend_46 { pt3dadd( -74.2504, 209.068, -215.768, 0.29 ) }
    dend_46 { pt3dadd( -74.226, 209.149, -215.864, 0.52 ) }
    dend_46 { pt3dadd( -73.9633, 210.096, -217.093, 0.44 ) }
    dend_46 { pt3dadd( -73.9358, 210.213, -217.264, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -76.7038, 193.531, -197.29, 1.03 ) }
    dend_45 { pt3dadd( -76.0408, 192.48, -197.36, 1.03 ) }
    dend_45 { pt3dadd( -75.2429, 191.366, -197.417, 0.29 ) }
    dend_45 { pt3dadd( -74.7666, 190.766, -197.44, 0.29 ) }
    dend_45 { pt3dadd( -74.2796, 190.169, -197.465, 0.22 ) }
    dend_45 { pt3dadd( -73.928, 189.751, -197.478, 0.22 ) }
    dend_45 { pt3dadd( -73.5919, 189.363, -197.488, 0.37 ) }
    dend_45 { pt3dadd( -73.2068, 188.948, -197.489, 0.37 ) }
    dend_45 { pt3dadd( -72.2806, 188.058, -197.405, 0.22 ) }
    dend_45 { pt3dadd( -71.9277, 187.737, -197.365, 0.22 ) }
    dend_45 { pt3dadd( -71.5729, 187.43, -197.317, 0.37 ) }
    dend_45 { pt3dadd( -71.3688, 187.258, -197.287, 0.37 ) }
    dend_45 { pt3dadd( -70.0548, 186.125, -197.057, 0.22 ) }
    dend_45 { pt3dadd( -69.4737, 185.626, -197.143, 0.22 ) }
    dend_45 { pt3dadd( -69.4209, 185.584, -197.18, 0.22 ) }
    dend_45 { pt3dadd( -69.1972, 185.396, -197.498, 0.22 ) }
    dend_45 { pt3dadd( -69.0413, 185.215, -197.912, 0.22 ) }
    dend_45 { pt3dadd( -68.9337, 185.01, -198.428, 0.74 ) }
    dend_45 { pt3dadd( -68.5318, 183.629, -202.273, 0.59 ) }
    dend_45 { pt3dadd( -68.5048, 183.494, -202.63, 0.52 ) }
    dend_45 { pt3dadd( -68.496, 183.44, -202.769, 0.52 ) }
    dend_45 { pt3dadd( -68.4795, 183.124, -203.743, 0.29 ) }
    dend_45 { pt3dadd( -68.4944, 182.978, -204.298, 0.29 ) }
    dend_45 { pt3dadd( -68.5436, 182.702, -205.444, 0.37 ) }
    dend_45 { pt3dadd( -68.5647, 182.605, -205.853, 0.44 ) }
    dend_45 { pt3dadd( -68.5677, 182.586, -205.946, 0.44 ) }
    dend_45 { pt3dadd( -68.6323, 182.096, -208.383, 0.44 ) }
    dend_45 { pt3dadd( -68.6427, 182.022, -208.782, 0.44 ) }
    dend_45 { pt3dadd( -68.6828, 181.913, -209.345, 0.44 ) }
    dend_45 { pt3dadd( -68.932, 181.498, -211.371, 0.22 ) }
    dend_45 { pt3dadd( -68.9945, 181.397, -211.817, 0.22 ) }
    dend_45 { pt3dadd( -69.0522, 181.257, -212.304, 0.22 ) }
    dend_45 { pt3dadd( -69.0651, 181.149, -212.497, 0.37 ) }
    dend_45 { pt3dadd( -69.0678, 181.085, -212.61, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -101.247, 19.7896, -46.7645, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_39 { pt3dadd( -101.743, 20.0233, -49.008, 0.29 ) }
    dend_39 { pt3dadd( -101.832, 20.0561, -49.379, 0.66 ) }
    dend_39 { pt3dadd( -101.866, 20.0687, -49.5215, 0.66 ) }
    dend_39 { pt3dadd( -102.403, 20.2661, -51.7585, 0.29 ) }
    dend_39 { pt3dadd( -102.969, 20.4746, -54.1208, 1.18 ) }
    dend_39 { pt3dadd( -103.07, 20.5117, -54.5413, 1.62 ) }
    dend_39 { pt3dadd( -103.128, 20.5417, -54.8235, 1.62 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 7/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -101.247, 19.7896, -46.7645, 0.22 ) }
    dend_38 { pt3dadd( -101.042, 20.8795, -47.1065, 0.22 ) }
    dend_38 { pt3dadd( -101.022, 20.985, -47.1396, 0.37 ) }
    dend_38 { pt3dadd( -100.905, 21.6119, -47.3363, 0.29 ) }
    dend_38 { pt3dadd( -100.869, 21.802, -47.396, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_21 (entry count 12/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -30.871, 115.285, -134.256, 0.29 ) }
    dend_29 { pt3dadd( -32.0997, 115.475, -134.965, 0.29 ) }
    dend_29 { pt3dadd( -32.1738, 115.494, -135.005, 0.29 ) }
    dend_29 { pt3dadd( -33.1372, 115.873, -135.74, 0.59 ) }
    dend_29 { pt3dadd( -33.5064, 116.05, -136.075, 0.66 ) }
    dend_29 { pt3dadd( -33.8332, 116.242, -136.433, 0.52 ) }
    dend_29 { pt3dadd( -33.9175, 116.297, -136.531, 0.52 ) }
    dend_29 { pt3dadd( -34.439, 116.673, -137.188, 0.37 ) }
    dend_29 { pt3dadd( -35.592, 117.477, -138.724, 0.66 ) }
    dend_29 { pt3dadd( -36.1537, 117.832, -139.479, 0.74 ) }
    dend_29 { pt3dadd( -37.0745, 118.313, -140.671, 0.29 ) }
    dend_29 { pt3dadd( -37.799, 118.619, -141.565, 0.29 ) }
    dend_29 { pt3dadd( -38.7165, 118.971, -142.672, 0.66 ) }
    dend_29 { pt3dadd( -39.2026, 119.127, -143.239, 0.52 ) }
    dend_29 { pt3dadd( -40.067, 119.322, -144.116, 0.29 ) }
    dend_29 { pt3dadd( -40.8718, 119.431, -144.863, 0.52 ) }
    dend_29 { pt3dadd( -41.4456, 119.437, -145.321, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -30.871, 115.285, -134.256, 0.29 ) }
    dend_22 { pt3dadd( -30.5751, 115.72, -135.479, 0.29 ) }
    dend_22 { pt3dadd( -30.561, 115.741, -135.536, 0.29 ) }
    dend_22 { pt3dadd( -30.2795, 116.159, -136.676, 0.66 ) }
    dend_22 { pt3dadd( -29.7034, 117.008, -138.974, 0.66 ) }
    dend_22 { pt3dadd( -29.1056, 117.877, -141.266, 0.22 ) }
    dend_22 { pt3dadd( -29.0148, 118.012, -141.616, 0.29 ) }
    dend_22 { pt3dadd( -28.9517, 118.116, -141.902, 0.29 ) }
    dend_22 { pt3dadd( -28.702, 118.549, -143.053, 0.22 ) }
    dend_22 { pt3dadd( -28.6649, 118.615, -143.22, 0.59 ) }
    dend_22 { pt3dadd( -28.5819, 118.763, -143.505, 0.59 ) }
    dend_22 { pt3dadd( -28.3764, 119.167, -144.11, 0.59 ) }
    dend_22 { pt3dadd( -28.1888, 119.585, -144.768, 0.29 ) }
    dend_22 { pt3dadd( -28.1323, 119.72, -144.972, 0.29 ) }
    dend_22 { pt3dadd( -27.9317, 120.249, -145.677, 0.59 ) }
    dend_22 { pt3dadd( -27.8782, 120.388, -145.891, 1.03 ) }
    dend_22 { pt3dadd( -27.8007, 120.555, -146.159, 1.25 ) }
    dend_22 { pt3dadd( -27.235, 121.606, -147.816, 0.22 ) }
    dend_22 { pt3dadd( -27.1385, 121.764, -148.065, 0.22 ) }
    dend_22 { pt3dadd( -27.0248, 121.941, -148.344, 0.74 ) }
    dend_22 { pt3dadd( -26.3866, 122.905, -149.819, 0.22 ) }
    dend_22 { pt3dadd( -26.0792, 123.335, -150.462, 0.29 ) }
    dend_22 { pt3dadd( -25.9701, 123.479, -150.664, 0.29 ) }
    dend_22 { pt3dadd( -25.6288, 123.877, -151.116, 0.59 ) }
    dend_22 { pt3dadd( -25.5074, 124.015, -151.256, 0.66 ) }
    dend_22 { pt3dadd( -25.3509, 124.205, -151.379, 0.52 ) }
    dend_22 { pt3dadd( -25.0603, 124.602, -151.48, 0.22 ) }
    dend_22 { pt3dadd( -24.9444, 124.784, -151.522, 0.52 ) }
    dend_22 { pt3dadd( -24.7818, 125.032, -151.564, 0.81 ) }
    dend_22 { pt3dadd( -24.5192, 125.438, -151.568, 0.74 ) }
    dend_22 { pt3dadd( -24.0235, 126.127, -151.529, 0.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 60/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -28.6496, 194.441, 0.0424419, 0.22 ) }
    dend_17 { pt3dadd( -29.0548, 195.604, 0.00319385, 0.22 ) }
    dend_17 { pt3dadd( -29.4106, 196.516, -0.144573, 0.22 ) }
    dend_17 { pt3dadd( -30.1594, 198.277, -0.546742, 0.29 ) }
    dend_17 { pt3dadd( -30.728, 199.447, -0.912421, 0.29 ) }
    dend_17 { pt3dadd( -31.082, 200.099, -1.14788, 1.11 ) }
    dend_17 { pt3dadd( -31.3161, 200.495, -1.30191, 1.33 ) }
    dend_17 { pt3dadd( -32.3111, 202.032, -1.99959, 0.22 ) }
    dend_17 { pt3dadd( -32.6958, 202.551, -2.27476, 0.81 ) }
    dend_17 { pt3dadd( -33.8577, 203.931, -3.10456, 0.29 ) }
    dend_17 { pt3dadd( -34.8092, 205.006, -3.7635, 0.29 ) }
    dend_17 { pt3dadd( -35.3251, 205.641, -4.13217, 0.52 ) }
    dend_17 { pt3dadd( -35.3251, 205.641, -4.13217, 0.59 ) }
    dend_17 { pt3dadd( -35.665, 206.155, -4.34993, 0.37 ) }
    dend_17 { pt3dadd( -36.0528, 206.85, -4.62182, 0.81 ) }
    dend_17 { pt3dadd( -36.186, 207.169, -4.72327, 0.81 ) }
    dend_17 { pt3dadd( -36.6764, 208.703, -5.14962, 0.44 ) }
    dend_17 { pt3dadd( -36.8202, 209.314, -5.31374, 0.44 ) }
    dend_17 { pt3dadd( -36.9272, 209.847, -5.45106, 0.66 ) }
    dend_17 { pt3dadd( -37.0232, 210.54, -5.60177, 0.29 ) }
    dend_17 { pt3dadd( -37.0774, 211.242, -5.74743, 0.74 ) }
    dend_17 { pt3dadd( -37.1068, 211.675, -5.83103, 0.81 ) }
    dend_17 { pt3dadd( -37.2042, 213.237, -6.08141, 0.29 ) }
    dend_17 { pt3dadd( -37.2303, 213.853, -6.19281, 0.44 ) }
    dend_17 { pt3dadd( -37.2309, 214.812, -6.37871, 0.52 ) }
    dend_17 { pt3dadd( -37.191, 215.779, -6.58592, 0.44 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 86/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -28.6496, 194.441, 0.0424419, 0.44 ) }
    dend_16 { pt3dadd( -28.6305, 195.05, 0.604945, 0.44 ) }
    dend_16 { pt3dadd( -28.6493, 196.017, 1.45516, 0.44 ) }
    dend_16 { pt3dadd( -28.6587, 197.171, 2.39244, 0.44 ) }
    dend_16 { pt3dadd( -28.6409, 197.863, 2.92286, 1.18 ) }
    dend_16 { pt3dadd( -28.6944, 199.795, 4.84751, 0.59 ) }
    dend_16 { pt3dadd( -28.7379, 200.477, 5.6408, 0.37 ) }
    dend_16 { pt3dadd( -28.8123, 201.032, 6.36501, 0.37 ) }
    dend_16 { pt3dadd( -28.8965, 201.599, 7.16124, 0.59 ) }
    dend_16 { pt3dadd( -28.9449, 202.023, 7.7829, 1.18 ) }
    dend_16 { pt3dadd( -29.0971, 204.401, 11.197, 0.88 ) }
    dend_16 { pt3dadd( -29.1314, 205.254, 12.3959, 0.96 ) }
    dend_16 { pt3dadd( -29.1559, 205.814, 13.2134, 0.96 ) }
    dend_16 { pt3dadd( -29.1831, 206.501, 14.2166, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_16 { pt3dadd( -29.201, 206.694, 14.4809, 0.59 ) }
    dend_16 { pt3dadd( -29.3545, 207.254, 15.3802, 0.59 ) }
    dend_16 { pt3dadd( -29.6448, 208.06, 16.6715, 0.52 ) }
    dend_16 { pt3dadd( -29.8588, 208.43, 17.4172, 0.29 ) }
    dend_16 { pt3dadd( -29.9492, 208.553, 17.7155, 0.81 ) }
    dend_16 { pt3dadd( -30.1583, 208.795, 18.4015, 0.81 ) }
    dend_16 { pt3dadd( -31.5285, 210.251, 23.1343, 0.66 ) }
    dend_16 { pt3dadd( -31.6505, 210.404, 23.7503, 0.74 ) }
    dend_16 { pt3dadd( -31.6556, 210.425, 23.8334, 0.74 ) }
    dend_16 { pt3dadd( -31.6706, 210.557, 24.4166, 0.96 ) }
    dend_16 { pt3dadd( -31.6822, 210.935, 25.875, 0.29 ) }
    dend_16 { pt3dadd( -31.6771, 211.022, 26.1892, 0.81 ) }
    dend_16 { pt3dadd( -31.8093, 211.696, 28.3895, 0.22 ) }
    dend_16 { pt3dadd( -31.9677, 211.81, 28.9768, 1.33 ) }
    dend_16 { pt3dadd( -33.0231, 212.013, 31.2724, 0.29 ) }
    dend_16 { pt3dadd( -33.3538, 212.008, 31.7895, 0.29 ) }
    dend_16 { pt3dadd( -33.876, 211.924, 32.4176, 0.59 ) }
    dend_16 { pt3dadd( -34.8864, 211.549, 33.287, 0.29 ) }
    dend_16 { pt3dadd( -35.4784, 211.136, 33.5808, 0.29 ) }
    dend_16 { pt3dadd( -36.016, 210.571, 33.7617, 0.29 ) }
    dend_16 { pt3dadd( -36.1307, 210.382, 33.7699, 0.88 ) }
    dend_16 { pt3dadd( -36.3564, 209.886, 33.7641, 0.88 ) }
    dend_16 { pt3dadd( -36.3976, 209.28, 33.6395, 0.52 ) }
    dend_16 { pt3dadd( -35.5445, 208.958, 33.2727, 0.44 ) }
    dend_16 { pt3dadd( -35.1893, 208.904, 33.1405, 0.52 ) }
    dend_16 { pt3dadd( -33.8605, 208.934, 32.687, 0.66 ) }
    dend_16 { pt3dadd( -32.4158, 209.126, 32.2154, 0.52 ) }
    dend_16 { pt3dadd( -32.0597, 209.2, 32.11, 0.52 ) }
    dend_16 { pt3dadd( -30.8778, 209.457, 31.7613, 0.37 ) }
    dend_16 { pt3dadd( -30.38, 209.553, 31.586, 0.52 ) }
    dend_16 { pt3dadd( -29.5538, 209.667, 31.2421, 0.22 ) }
    dend_16 { pt3dadd( -29.0307, 209.69, 30.9922, 0.22 ) }
    dend_16 { pt3dadd( -28.3896, 209.647, 30.6503, 0.74 ) }
    dend_16 { pt3dadd( -27.2494, 209.452, 30.0294, 0.37 ) }
    dend_16 { pt3dadd( -25.8032, 209.092, 29.1817, 0.29 ) }
    dend_16 { pt3dadd( -25.0412, 208.853, 28.7225, 0.81 ) }
    dend_16 { pt3dadd( -24.843, 208.776, 28.5981, 0.96 ) }
    dend_16 { pt3dadd( -23.6249, 208.272, 27.8001, 0.29 ) }
    dend_16 { pt3dadd( -22.9484, 207.989, 27.3351, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.4466, 99.7827, 19.7647, 0.29 ) }
    dend_12 { pt3dadd( 14.1138, 100.813, 19.5029, 0.29 ) }
    dend_12 { pt3dadd( 13.8855, 101.626, 19.286, 0.29 ) }
    dend_12 { pt3dadd( 13.7292, 102.301, 19.0815, 0.59 ) }
    dend_12 { pt3dadd( 13.4512, 103.485, 18.7201, 0.59 ) }
    dend_12 { pt3dadd( 13.1844, 104.622, 18.3732, 0.52 ) }
    dend_12 { pt3dadd( 12.9268, 105.72, 18.0382, 0.52 ) }
    dend_12 { pt3dadd( 12.7284, 106.599, 17.7673, 0.52 ) }
    dend_12 { pt3dadd( 12.4107, 108.204, 17.2463, 0.52 ) }
    dend_12 { pt3dadd( 12.2321, 109.209, 16.9156, 0.52 ) }
    dend_12 { pt3dadd( 11.6786, 119.15, 13.2816, 0.52 ) }
    dend_12 { pt3dadd( 13.0535, 129.392, 10.9827, 0.52 ) }
    dend_12 { pt3dadd( 12.5742, 139.685, 8.59273, 0.52 ) }
    dend_12 { pt3dadd( 11.7551, 149.137, 3.81299, 0.52 ) }
    dend_12 { pt3dadd( 8.38794, 158.481, 0.0568008, 0.52 ) }
    dend_12 { pt3dadd( 6.29739, 168.125, -3.83667, 0.52 ) }
    dend_12 { pt3dadd( 5.16276, 178.184, -6.94782, 0.52 ) }
    dend_12 { pt3dadd( 1.67445, 188.047, -8.57871, 0.52 ) }
    dend_12 { pt3dadd( -1.30204, 198.17, -9.27376, 0.52 ) }
    dend_12 { pt3dadd( -4.37075, 208.088, -11.3502, 0.52 ) }
    dend_12 { pt3dadd( -5.63156, 218.341, -13.6255, 0.52 ) }
    dend_12 { pt3dadd( -5.26502, 228.811, -15.0234, 0.52 ) }
    dend_12 { pt3dadd( -4.83946, 239.358, -14.7073, 0.52 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 62/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 14.4466, 99.7827, 19.7647, 0.52 ) }
    dend_11 { pt3dadd( 14.4132, 99.9995, 21.0462, 0.52 ) }
    dend_11 { pt3dadd( 14.4009, 100.102, 21.6141, 0.44 ) }
    dend_11 { pt3dadd( 14.3989, 100.135, 21.7781, 0.74 ) }
    dend_11 { pt3dadd( 14.3998, 100.227, 22.1676, 0.74 ) }
    dend_11 { pt3dadd( 14.4168, 100.44, 22.8961, 0.52 ) }
    dend_11 { pt3dadd( 14.6801, 102.08, 26.9295, 0.52 ) }
    dend_11 { pt3dadd( 14.3387, 102.713, 31.26, 0.22 ) }
    dend_11 { pt3dadd( 14.2818, 102.714, 31.694, 0.22 ) }
    dend_11 { pt3dadd( 14.2005, 102.629, 32.0711, 0.22 ) }
    dend_11 { pt3dadd( 14.2741, 102.744, 31.8903, 0.22 ) }
    dend_11 { pt3dadd( 14.4423, 103.024, 31.5714, 0.74 ) }
    dend_11 { pt3dadd( 14.5386, 103.183, 31.4036, 1.11 ) }
    dend_11 { pt3dadd( 14.7658, 103.634, 31.6372, 0.96 ) }
    dend_11 { pt3dadd( 14.8938, 103.889, 31.7823, 1.25 ) }
    dend_11 { pt3dadd( 15.0662, 104.234, 31.9886, 1.25 ) }
    dend_11 { pt3dadd( 15.1496, 104.402, 32.0884, 1.25 ) }
    dend_11 { pt3dadd( 15.4533, 105.042, 32.4501, 1.25 ) }
    dend_11 { pt3dadd( 15.6956, 105.595, 32.7624, 0.52 ) }
    dend_11 { pt3dadd( 15.7454, 105.717, 32.8264, 0.66 ) }
    dend_11 { pt3dadd( 15.7628, 105.766, 32.8472, 0.66 ) }
    dend_11 { pt3dadd( 15.837, 105.969, 32.9141, 0.66 ) }
    dend_11 { pt3dadd( 15.8729, 106.061, 32.9481, 0.59 ) }
    dend_11 { pt3dadd( 16.0091, 106.404, 33.0704, 0.59 ) }
    dend_11 { pt3dadd( 16.2091, 106.918, 33.2811, 0.22 ) }
    dend_11 { pt3dadd( 16.3736, 107.35, 33.4604, 0.22 ) }
    dend_11 { pt3dadd( 16.592, 107.907, 33.6911, 0.22 ) }
    dend_11 { pt3dadd( 16.8502, 108.56, 33.9626, 0.81 ) }
    dend_11 { pt3dadd( 17.0559, 109.039, 34.1802, 0.81 ) }
    dend_11 { pt3dadd( 17.1635, 109.26, 34.2886, 0.44 ) }
    dend_11 { pt3dadd( 17.4289, 109.709, 34.5522, 0.22 ) }
    dend_11 { pt3dadd( 17.6712, 110.055, 34.7765, 0.22 ) }
    dend_11 { pt3dadd( 17.7114, 110.106, 34.8109, 0.22 ) }
    dend_11 { pt3dadd( 18.0431, 110.48, 35.0517, 0.29 ) }
    dend_11 { pt3dadd( 18.3381, 110.788, 35.2717, 0.29 ) }
    dend_11 { pt3dadd( 18.8126, 111.311, 35.6218, 0.29 ) }
    dend_11 { pt3dadd( 18.9989, 111.544, 35.7572, 0.88 ) }
    dend_11 { pt3dadd( 19.1173, 111.716, 35.8393, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_11 { pt3dadd( 19.3113, 112.033, 35.9624, 1.47 ) }
    dend_11 { pt3dadd( 19.4477, 112.289, 36.0358, 1.77 ) }
    dend_11 { pt3dadd( 19.8448, 113.139, 36.224, 0.59 ) }
    dend_11 { pt3dadd( 20.0666, 113.667, 36.3071, 0.44 ) }
    dend_11 { pt3dadd( 20.1939, 113.993, 36.356, 0.44 ) }
    dend_11 { pt3dadd( 20.2211, 114.066, 36.3665, 0.44 ) }
    dend_11 { pt3dadd( 20.3862, 114.491, 36.4282, 0.29 ) }
    dend_11 { pt3dadd( 20.6181, 115.052, 36.5107, 0.29 ) }
    dend_11 { pt3dadd( 20.781, 115.442, 36.5663, 0.52 ) }
    dend_11 { pt3dadd( 20.893, 115.713, 36.5986, 0.52 ) }
    dend_11 { pt3dadd( 21.0227, 116.033, 36.6493, 0.52 ) }
    dend_11 { pt3dadd( 21.237, 116.517, 36.7476, 0.29 ) }
    dend_11 { pt3dadd( 21.2566, 116.56, 36.7582, 0.29 ) }
    dend_11 { pt3dadd( 21.2797, 116.61, 36.7722, 0.29 ) }
    dend_11 { pt3dadd( 21.4472, 116.955, 36.8784, 0.44 ) }
    dend_11 { pt3dadd( 21.7519, 117.573, 37.0722, 1.03 ) }
    dend_11 { pt3dadd( 21.9248, 117.922, 37.1807, 1.03 ) }
    dend_11 { pt3dadd( 22.0802, 118.22, 37.2726, 1.03 ) }
    dend_11 { pt3dadd( 22.2845, 118.602, 37.3865, 1.11 ) }
    dend_11 { pt3dadd( 22.4425, 118.882, 37.4652, 1.11 ) }
    dend_11 { pt3dadd( 22.6486, 119.24, 37.5576, 1.18 ) }
    dend_11 { pt3dadd( 22.794, 119.485, 37.6012, 1.11 ) }
    dend_11 { pt3dadd( 22.9519, 119.73, 37.6286, 0.88 ) }
    dend_11 { pt3dadd( 22.9825, 119.768, 37.6321, 0.88 ) }
    dend_11 { pt3dadd( 23.4312, 120.268, 37.6677, 0.52 ) }
    dend_11 { pt3dadd( 23.4655, 120.305, 37.6699, 0.52 ) }
    dend_11 { pt3dadd( 23.825, 120.67, 37.6902, 0.52 ) }
    dend_11 { pt3dadd( 24.6013, 121.438, 37.7293, 0.22 ) }
    dend_11 { pt3dadd( 25.0613, 121.907, 37.7924, 0.22 ) }
    dend_11 { pt3dadd( 25.2127, 122.07, 37.8251, 0.59 ) }
    dend_11 { pt3dadd( 25.5144, 122.414, 37.915, 0.88 ) }
    dend_11 { pt3dadd( 25.6118, 122.536, 37.9543, 1.11 ) }
    dend_11 { pt3dadd( 25.6391, 122.58, 37.9765, 1.11 ) }
    dend_11 { pt3dadd( 26.0081, 123.398, 38.5809, 0.29 ) }
    dend_11 { pt3dadd( 26.0946, 123.633, 38.775, 0.29 ) }
    dend_11 { pt3dadd( 26.1012, 123.655, 38.8047, 0.29 ) }
    dend_11 { pt3dadd( 26.131, 123.774, 38.9901, 0.29 ) }
    dend_11 { pt3dadd( 26.2135, 124.153, 39.6373, 0.44 ) }
    dend_11 { pt3dadd( 26.2484, 124.316, 39.9682, 0.44 ) }
    dend_11 { pt3dadd( 26.2587, 124.388, 40.2132, 0.44 ) }
    dend_11 { pt3dadd( 26.3313, 124.772, 41.8937, 0.59 ) }
    dend_11 { pt3dadd( 29.1418, 128.901, 46.6923, 0.59 ) }
    dend_11 { pt3dadd( 31.0888, 132.678, 52.1718, 0.59 ) }
    dend_11 { pt3dadd( 33.0364, 136.235, 57.8042, 0.59 ) }
    dend_11 { pt3dadd( 34.3802, 140.049, 63.4347, 0.59 ) }
    dend_11 { pt3dadd( 36.3356, 142.891, 69.4773, 0.59 ) }
    dend_11 { pt3dadd( 37.4918, 144.721, 76.1085, 0.59 ) }
    dend_11 { pt3dadd( 38.0097, 146.659, 82.7872, 0.59 ) }
    dend_11 { pt3dadd( 39.8449, 147.781, 89.4327, 0.59 ) }
    dend_11 { pt3dadd( 41.8299, 148.299, 96.1146, 0.59 ) }
    dend_11 { pt3dadd( 43.9204, 150.202, 102.492, 0.59 ) }
    dend_11 { pt3dadd( 46.2411, 151.911, 108.847, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 52/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 17.2425, 151.636, -3.26698, 0.22 ) }
    dend_6 { pt3dadd( 18.8656, 152.76, -2.27229, 0.22 ) }
    dend_6 { pt3dadd( 19.45, 153.193, -1.92738, 0.81 ) }
    dend_6 { pt3dadd( 19.6482, 153.357, -1.81725, 0.81 ) }
    dend_6 { pt3dadd( 21.0188, 154.627, -1.07105, 0.22 ) }
    dend_6 { pt3dadd( 21.3976, 155.016, -0.874987, 0.22 ) }
    dend_6 { pt3dadd( 21.512, 155.143, -0.81804, 0.44 ) }
    dend_6 { pt3dadd( 21.7776, 155.554, -0.692648, 0.44 ) }
    dend_6 { pt3dadd( 22.1375, 156.2, -0.537338, 0.15 ) }
    dend_6 { pt3dadd( 22.3409, 156.639, -0.470292, 0.15 ) }
    dend_6 { pt3dadd( 22.5292, 157.224, -0.448687, 0.15 ) }
    dend_6 { pt3dadd( 22.601, 157.481, -0.432358, 0.66 ) }
    dend_6 { pt3dadd( 22.7164, 157.909, -0.399727, 1.03 ) }
    dend_6 { pt3dadd( 22.8424, 158.398, -0.354812, 0.66 ) }
    dend_6 { pt3dadd( 23.0059, 158.972, -0.300216, 0.22 ) }
    dend_6 { pt3dadd( 23.0809, 159.203, -0.279902, 0.22 ) }
    dend_6 { pt3dadd( 23.1814, 159.542, -0.246234, 0.22 ) }
    dend_6 { pt3dadd( 23.2784, 159.884, -0.212586, 0.22 ) }
    dend_6 { pt3dadd( 23.3072, 159.998, -0.201439, 0.22 ) }
    dend_6 { pt3dadd( 23.3783, 160.425, -0.16248, 0.74 ) }
    dend_6 { pt3dadd( 23.4184, 160.738, -0.139762, 0.59 ) }
    dend_6 { pt3dadd( 23.479, 161.177, -0.109468, 0.29 ) }
    dend_6 { pt3dadd( 23.5001, 161.329, -0.0990153, 0.22 ) }
    dend_6 { pt3dadd( 23.5239, 161.49, -0.0843123, 0.22 ) }
    dend_6 { pt3dadd( 23.7161, 162.697, 0.0508383, 0.15 ) }
    dend_6 { pt3dadd( 23.7798, 163.33, 0.146596, 0.15 ) }
    dend_6 { pt3dadd( 23.8095, 163.938, 0.258269, 0.15 ) }
    dend_6 { pt3dadd( 23.8282, 164.286, 0.324625, 0.15 ) }
    dend_6 { pt3dadd( 23.8555, 164.572, 0.369837, 0.29 ) }
    dend_6 { pt3dadd( 23.9401, 164.965, 0.409111, 0.29 ) }
    dend_6 { pt3dadd( 24.3304, 165.865, 0.410527, 1.77 ) }
    dend_6 { pt3dadd( 24.616, 166.279, 0.303454, 1.77 ) }
    dend_6 { pt3dadd( 25.1252, 166.754, 0.0743029, 1.77 ) }
    dend_6 { pt3dadd( 25.8974, 167.379, -0.453514, 0.22 ) }
    dend_6 { pt3dadd( 26.5622, 167.941, -1.07624, 0.22 ) }
    dend_6 { pt3dadd( 27.0603, 168.337, -1.61382, 0.22 ) }
    dend_6 { pt3dadd( 27.7558, 168.898, -2.51735, 0.44 ) }
    dend_6 { pt3dadd( 28.3641, 169.422, -3.43257, 0.22 ) }
    dend_6 { pt3dadd( 29.223, 170.226, -4.94931, 0.44 ) }
    dend_6 { pt3dadd( 29.712, 170.761, -6.02443, 0.44 ) }
    dend_6 { pt3dadd( 29.8057, 170.903, -6.30394, 0.44 ) }
    dend_6 { pt3dadd( 30.1395, 171.64, -7.68934, 0.22 ) }
    dend_6 { pt3dadd( 30.1914, 171.821, -8.01189, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 17.2425, 151.636, -3.26698, 0.29 ) }
    dend_5 { pt3dadd( 17.1162, 152.01, -3.18084, 0.29 ) }
    dend_5 { pt3dadd( 17.0305, 152.303, -3.14366, 0.37 ) }
    dend_5 { pt3dadd( 16.9371, 152.637, -3.11429, 0.37 ) }
    dend_5 { pt3dadd( 16.854, 152.945, -3.09046, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_5 { pt3dadd( 16.8187, 153.087, -3.08012, 0.29 ) }
    dend_5 { pt3dadd( 16.7973, 153.182, -3.07332, 0.29 ) }
    dend_5 { pt3dadd( 16.7004, 153.704, -3.05274, 0.22 ) }
    dend_5 { pt3dadd( 16.6556, 153.959, -3.0488, 0.22 ) }
    dend_5 { pt3dadd( 16.6492, 153.999, -3.04932, 0.29 ) }
    dend_5 { pt3dadd( 16.6076, 154.347, -3.06208, 0.29 ) }
    dend_5 { pt3dadd( 16.5788, 154.605, -3.07053, 0.29 ) }
    // Section: dend_131, id: dend_131, parent: dend_127 (entry count 7/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 8.12218, -68.996, 12.9341, 0.22 ) }
    dend_131 { pt3dadd( 14.4635, -72.4777, 11.9059, 0.22 ) }
    dend_131 { pt3dadd( 20.8109, -76.0878, 11.7067, 0.22 ) }
    dend_131 { pt3dadd( 26.6166, -80.4844, 11.664, 0.22 ) }
    dend_131 { pt3dadd( 32.2996, -84.8808, 10.4883, 0.22 ) }
    // Section: dend_128, id: dend_128, parent: dend_127 (entry count 12/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 8.12218, -68.996, 12.9341, 0.29 ) }
    dend_128 { pt3dadd( 18.7017, -74.6089, 11.6448, 0.22 ) }
    dend_128 { pt3dadd( 28.1359, -81.5973, 9.1362, 0.22 ) }
    dend_128 { pt3dadd( 36.7405, -89.8963, 8.63062, 0.22 ) }
    // Section: dend_117, id: dend_117, parent: dend_115 (entry count 16/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( 17.4696, -75.8271, 26.7031, 1.33 ) }
    dend_117 { pt3dadd( 18.7996, -80.1263, 32.6444, 1.33 ) }
    dend_117 { pt3dadd( 20.3131, -84.2777, 38.6508, 1.33 ) }
    // Section: dend_116, id: dend_116, parent: dend_115 (entry count 19/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( 17.4696, -75.8271, 26.7031, 0.44 ) }
    dend_116 { pt3dadd( 21.1716, -82.7306, 36.0626, 1.33 ) }
    dend_116 { pt3dadd( 23.4773, -89.0864, 46.241, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -103.128, 20.5417, -54.8235, 0.96 ) }
    dend_41 { pt3dadd( -103.212, 19.9776, -55.6247, 0.96 ) }
    dend_41 { pt3dadd( -103.297, 19.2233, -56.6796, 0.22 ) }
    dend_41 { pt3dadd( -103.313, 18.9755, -57.0074, 0.74 ) }
    dend_41 { pt3dadd( -103.337, 18.3103, -57.8506, 0.29 ) }
    dend_41 { pt3dadd( -103.341, 18.2044, -57.9849, 0.59 ) }
    dend_41 { pt3dadd( -103.384, 16.996, -59.5168, 0.22 ) }
    dend_41 { pt3dadd( -103.392, 16.6641, -59.9443, 0.22 ) }
    dend_41 { pt3dadd( -103.377, 16.4063, -60.2797, 0.59 ) }
    dend_41 { pt3dadd( -103.373, 16.3389, -60.3766, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 32/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -103.128, 20.5417, -54.8235, 0.29 ) }
    dend_40 { pt3dadd( -104.504, 20.9019, -56.8369, 0.29 ) }
    dend_40 { pt3dadd( -104.729, 20.9388, -57.1676, 0.59 ) }
    dend_40 { pt3dadd( -104.819, 20.949, -57.28, 0.66 ) }
    dend_40 { pt3dadd( -104.924, 20.957, -57.3955, 0.66 ) }
    dend_40 { pt3dadd( -105.386, 20.9828, -57.9054, 0.52 ) }
    dend_40 { pt3dadd( -105.562, 20.9832, -58.1042, 0.29 ) }
    dend_40 { pt3dadd( -106.287, 20.9372, -58.8862, 0.44 ) }
    dend_40 { pt3dadd( -106.748, 20.8952, -59.4287, 0.44 ) }
    dend_40 { pt3dadd( -107.742, 20.7943, -60.6388, 0.29 ) }
    dend_40 { pt3dadd( -108.418, 20.731, -61.4253, 0.59 ) }
    dend_40 { pt3dadd( -109.237, 20.6575, -62.37, 0.44 ) }
    dend_40 { pt3dadd( -109.343, 20.6455, -62.4873, 0.52 ) }
    dend_40 { pt3dadd( -110.417, 20.498, -63.5917, 0.22 ) }
    dend_40 { pt3dadd( -110.517, 20.4818, -63.6935, 0.59 ) }
    dend_40 { pt3dadd( -111.175, 20.3632, -64.3081, 0.59 ) }
    dend_40 { pt3dadd( -111.755, 20.2706, -64.762, 0.59 ) }
    dend_40 { pt3dadd( -112.906, 20.1466, -65.52, 0.22 ) }
    dend_40 { pt3dadd( -113.038, 20.1332, -65.5987, 0.44 ) }
    dend_40 { pt3dadd( -113.104, 20.1317, -65.6252, 0.44 ) }
    // Section: dend_28, id: dend_28, parent: dend_22 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -24.0235, 126.127, -151.529, 0.15 ) }
    dend_28 { pt3dadd( -23.4926, 126.34, -152.133, 0.15 ) }
    dend_28 { pt3dadd( -22.811, 126.596, -152.868, 0.52 ) }
    dend_28 { pt3dadd( -21.8641, 126.967, -153.867, 0.59 ) }
    dend_28 { pt3dadd( -21.4331, 127.14, -154.313, 0.22 ) }
    dend_28 { pt3dadd( -21.2134, 127.231, -154.536, 0.22 ) }
    dend_28 { pt3dadd( -21.018, 127.333, -154.819, 0.22 ) }
    dend_28 { pt3dadd( -20.9683, 127.371, -154.931, 0.22 ) }
    dend_28 { pt3dadd( -20.8456, 127.548, -155.471, 0.74 ) }
    dend_28 { pt3dadd( -20.8399, 127.565, -155.528, 0.74 ) }
    dend_28 { pt3dadd( -20.8357, 127.589, -155.611, 0.74 ) }
    dend_28 { pt3dadd( -20.7778, 128.302, -158.094, 0.22 ) }
    dend_28 { pt3dadd( -20.7766, 128.424, -158.523, 0.66 ) }
    dend_28 { pt3dadd( -20.7825, 128.85, -160.07, 0.37 ) }
    dend_28 { pt3dadd( -20.7841, 128.865, -160.13, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 67/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -24.0235, 126.127, -151.529, 0.22 ) }
    dend_23 { pt3dadd( -23.8452, 126.4, -151.471, 0.22 ) }
    dend_23 { pt3dadd( -23.66, 126.695, -151.405, 0.22 ) }
    dend_23 { pt3dadd( -23.4947, 126.975, -151.343, 0.81 ) }
    dend_23 { pt3dadd( -23.2062, 127.498, -151.227, 0.22 ) }
    dend_23 { pt3dadd( -23.0678, 127.761, -151.185, 0.37 ) }
    dend_23 { pt3dadd( -22.9386, 128.012, -151.152, 0.29 ) }
    dend_23 { pt3dadd( -22.801, 128.297, -151.126, 0.22 ) }
    dend_23 { pt3dadd( -22.7096, 128.5, -151.113, 0.22 ) }
    dend_23 { pt3dadd( -22.6713, 128.592, -151.106, 0.66 ) }
    dend_23 { pt3dadd( -22.4872, 129.086, -151.096, 0.15 ) }
    dend_23 { pt3dadd( -22.4733, 129.116, -151.094, 0.15 ) }
    dend_23 { pt3dadd( -22.3104, 129.421, -151.058, 0.15 ) }
    dend_23 { pt3dadd( -22.2746, 129.473, -151.055, 0.15 ) }
    dend_23 { pt3dadd( -22.0291, 129.802, -151.081, 0.88 ) }
    dend_23 { pt3dadd( -21.9531, 129.902, -151.096, 0.88 ) }
    dend_23 { pt3dadd( -21.6395, 130.285, -151.171, 0.15 ) }
    dend_23 { pt3dadd( -21.5803, 130.353, -151.189, 0.15 ) }
    dend_23 { pt3dadd( -21.101, 130.878, -151.37, 1.5 ) }
    dend_23 { pt3dadd( -20.6349, 131.376, -151.573, 0.29 ) }
    dend_23 { pt3dadd( -20.5259, 131.5, -151.635, 0.29 ) }
    dend_23 { pt3dadd( -20.3585, 131.71, -151.749, 0.29 ) }
    dend_23 { pt3dadd( -20.3157, 131.77, -151.782, 0.29 ) }
    dend_23 { pt3dadd( -20.2695, 131.834, -151.815, 0.29 ) }
    dend_23 { pt3dadd( -20.1297, 132.018, -151.889, 0.29 ) }
    dend_23 { pt3dadd( -19.8434, 132.317, -152.126, 1.03 ) }
    dend_23 { pt3dadd( -19.6382, 132.524, -152.398, 0.22 ) }
    dend_23 { pt3dadd( -19.5063, 132.647, -152.599, 0.22 ) }
    dend_23 { pt3dadd( -19.3943, 132.739, -152.775, 0.22 ) }
    dend_23 { pt3dadd( -19.2924, 132.81, -152.956, 0.37 ) }
    dend_23 { pt3dadd( -18.787, 133.076, -153.893, 0.59 ) }
    dend_23 { pt3dadd( -18.4367, 133.214, -154.552, 0.59 ) }
    dend_23 { pt3dadd( -18.2399, 133.29, -154.931, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_23 { pt3dadd( -18.1869, 133.316, -155.049, 0.22 ) }
    dend_23 { pt3dadd( -17.9906, 133.52, -155.825, 0.59 ) }
    dend_23 { pt3dadd( -17.9556, 133.579, -156.023, 0.59 ) }
    dend_23 { pt3dadd( -17.9455, 133.61, -156.115, 0.59 ) }
    dend_23 { pt3dadd( -17.9341, 133.735, -156.513, 0.22 ) }
    dend_23 { pt3dadd( -17.9639, 134.012, -157.391, 1.03 ) }
    dend_23 { pt3dadd( -18.1067, 134.642, -159.208, 0.29 ) }
    dend_23 { pt3dadd( -18.1337, 134.733, -159.443, 0.29 ) }
    dend_23 { pt3dadd( -18.2361, 135.029, -160.188, 0.29 ) }
    dend_23 { pt3dadd( -18.3022, 135.178, -160.577, 0.29 ) }
    dend_23 { pt3dadd( -18.32, 135.211, -160.663, 0.29 ) }
    dend_23 { pt3dadd( -18.3983, 135.359, -161.007, 0.29 ) }
    dend_23 { pt3dadd( -18.4327, 135.422, -161.142, 0.29 ) }
    dend_23 { pt3dadd( -18.7043, 135.91, -162.179, 1.25 ) }
    dend_23 { pt3dadd( -19.058, 136.591, -163.606, 0.29 ) }
    dend_23 { pt3dadd( -19.1128, 136.709, -163.858, 0.29 ) }
    dend_23 { pt3dadd( -19.2853, 137.065, -164.673, 1.33 ) }
    dend_23 { pt3dadd( -19.2931, 137.079, -164.71, 1.33 ) }
    // Section: dend_130, id: dend_130, parent: dend_128 (entry count 18/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 36.7405, -89.8963, 8.63062, 0.29 ) }
    dend_130 { pt3dadd( 40.084, -92.9321, -0.274091, 0.29 ) }
    // Section: dend_129, id: dend_129, parent: dend_128 (entry count 20/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 36.7405, -89.8963, 8.63062, 0.44 ) }
    dend_129 { pt3dadd( 43.507, -96.1051, 7.62184, 0.29 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 22/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -19.2931, 137.079, -164.71, 0.22 ) }
    dend_27 { pt3dadd( -18.8392, 138.398, -165.073, 0.22 ) }
    dend_27 { pt3dadd( -18.7662, 138.538, -165.111, 0.22 ) }
    dend_27 { pt3dadd( -18.5509, 138.854, -165.194, 0.22 ) }
    dend_27 { pt3dadd( -18.252, 139.167, -165.325, 0.59 ) }
    dend_27 { pt3dadd( -17.7915, 139.532, -165.525, 0.59 ) }
    dend_27 { pt3dadd( -16.9982, 140.048, -165.928, 0.29 ) }
    dend_27 { pt3dadd( -16.4925, 140.261, -166.204, 0.29 ) }
    dend_27 { pt3dadd( -16.0872, 140.379, -166.445, 0.29 ) }
    dend_27 { pt3dadd( -15.114, 140.577, -167.038, 0.22 ) }
    dend_27 { pt3dadd( -14.7286, 140.628, -167.27, 0.22 ) }
    dend_27 { pt3dadd( -13.9004, 140.703, -167.78, 0.96 ) }
    dend_27 { pt3dadd( -13.7519, 140.71, -167.882, 1.25 ) }
    dend_27 { pt3dadd( -12.36, 140.796, -168.872, 0.15 ) }
    dend_27 { pt3dadd( -12.091, 140.821, -169.06, 0.96 ) }
    dend_27 { pt3dadd( -11.8177, 140.862, -169.239, 0.96 ) }
    dend_27 { pt3dadd( -11.7261, 140.877, -169.297, 0.96 ) }
    dend_27 { pt3dadd( -10.6368, 141.061, -169.879, 0.22 ) }
    dend_27 { pt3dadd( -10.3321, 141.108, -170.025, 0.22 ) }
    dend_27 { pt3dadd( -10.1772, 141.136, -170.083, 0.22 ) }
    dend_27 { pt3dadd( -10.1062, 141.144, -170.106, 0.22 ) }
    dend_27 { pt3dadd( -9.78409, 141.132, -170.173, 0.37 ) }
    dend_27 { pt3dadd( -9.61392, 141.098, -170.192, 0.37 ) }
    dend_27 { pt3dadd( -9.08628, 140.922, -170.196, 0.52 ) }
    dend_27 { pt3dadd( -8.98845, 140.882, -170.196, 0.81 ) }
    dend_27 { pt3dadd( -8.51347, 140.711, -170.209, 0.81 ) }
    dend_27 { pt3dadd( -7.58513, 140.429, -170.27, 0.29 ) }
    dend_27 { pt3dadd( -7.19143, 140.343, -170.309, 0.29 ) }
    dend_27 { pt3dadd( -7.02033, 140.337, -170.345, 0.29 ) }
    dend_27 { pt3dadd( -6.68291, 140.388, -170.447, 0.29 ) }
    dend_27 { pt3dadd( -5.82242, 140.641, -170.765, 0.29 ) }
    dend_27 { pt3dadd( -5.46918, 140.792, -170.923, 0.66 ) }
    dend_27 { pt3dadd( -5.11421, 140.982, -171.1, 0.66 ) }
    dend_27 { pt3dadd( -4.13893, 141.535, -171.595, 0.22 ) }
    dend_27 { pt3dadd( -3.95474, 141.646, -171.692, 0.22 ) }
    dend_27 { pt3dadd( -3.66194, 141.837, -171.855, 0.22 ) }
    dend_27 { pt3dadd( -3.30938, 142.062, -172.06, 0.74 ) }
    dend_27 { pt3dadd( -3.05865, 142.197, -172.19, 0.74 ) }
    dend_27 { pt3dadd( -2.90767, 142.256, -172.262, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 61/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -19.2931, 137.079, -164.71, 0.07 ) }
    dend_24 { pt3dadd( -19.4468, 137.293, -165.282, 0.07 ) }
    dend_24 { pt3dadd( -19.4646, 137.323, -165.374, 0.15 ) }
    dend_24 { pt3dadd( -19.5015, 137.379, -165.526, 0.15 ) }
    dend_24 { pt3dadd( -19.5693, 137.451, -165.718, 0.15 ) }
    dend_24 { pt3dadd( -19.6828, 137.56, -165.989, 0.15 ) }
    dend_24 { pt3dadd( -20.5006, 138.404, -167.909, 0.88 ) }
    dend_24 { pt3dadd( -20.9815, 138.961, -169.139, 0.15 ) }
    dend_24 { pt3dadd( -21.1586, 139.182, -169.607, 1.4 ) }
    dend_24 { pt3dadd( -21.6353, 139.843, -170.928, 0.29 ) }
    dend_24 { pt3dadd( -21.7468, 140.008, -171.239, 0.52 ) }
    dend_24 { pt3dadd( -21.9484, 140.349, -171.827, 0.22 ) }
    dend_24 { pt3dadd( -22.0126, 140.479, -171.984, 0.22 ) }
    dend_24 { pt3dadd( -22.0486, 140.587, -172.095, 0.22 ) }
    dend_24 { pt3dadd( -22.0888, 140.793, -172.298, 0.22 ) }
    dend_24 { pt3dadd( -22.0948, 140.883, -172.377, 0.22 ) }
    dend_24 { pt3dadd( -22.1733, 141.998, -173.357, 1.03 ) }
    dend_24 { pt3dadd( -22.2042, 142.375, -173.706, 1.03 ) }
    dend_24 { pt3dadd( -22.2473, 142.876, -174.169, 0.22 ) }
    dend_24 { pt3dadd( -22.2769, 143.194, -174.526, 0.22 ) }
    dend_24 { pt3dadd( -22.2865, 143.303, -174.656, 0.22 ) }
    dend_24 { pt3dadd( -22.297, 143.458, -174.837, 0.22 ) }
    dend_24 { pt3dadd( -22.3287, 144.093, -175.552, 0.88 ) }
    dend_24 { pt3dadd( -22.3373, 144.354, -175.869, 1.11 ) }
    dend_24 { pt3dadd( -22.3692, 145.755, -177.502, 0.22 ) }
    dend_24 { pt3dadd( -22.3813, 146.004, -177.774, 0.37 ) }
    dend_24 { pt3dadd( -22.3968, 146.213, -177.975, 0.37 ) }
    dend_24 { pt3dadd( -22.4203, 146.456, -178.175, 0.37 ) }
    dend_24 { pt3dadd( -22.4331, 146.556, -178.239, 0.37 ) }
    dend_24 { pt3dadd( -22.5318, 147.213, -178.58, 1.47 ) }
    dend_24 { pt3dadd( -22.5934, 147.538, -178.683, 1.47 ) }
    dend_24 { pt3dadd( -22.8552, 148.42, -179.08, 0.22 ) }
    dend_24 { pt3dadd( -22.9402, 148.665, -179.207, 0.22 ) }
    dend_24 { pt3dadd( -23.1466, 149.251, -179.513, 1.25 ) }
    dend_24 { pt3dadd( -23.2673, 149.609, -179.697, 1.69 ) }
    dend_24 { pt3dadd( -23.3772, 149.949, -179.898, 1.69 ) }
    dend_24 { pt3dadd( -23.7948, 151.334, -180.765, 0.29 ) }
    dend_24 { pt3dadd( -23.87, 151.637, -180.959, 0.29 ) }
    dend_24 { pt3dadd( -23.9394, 152.118, -181.249, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_24 { pt3dadd( -23.9423, 152.473, -181.476, 0.74 ) }
    dend_24 { pt3dadd( -23.8346, 153.345, -182.074, 0.07 ) }
    dend_24 { pt3dadd( -23.8194, 153.404, -182.116, 0.15 ) }
    dend_24 { pt3dadd( -23.6041, 153.798, -182.357, 0.74 ) }
    dend_24 { pt3dadd( -23.143, 154.587, -182.992, 0.66 ) }
    dend_24 { pt3dadd( -22.7999, 155.213, -183.709, 0.66 ) }
    dend_24 { pt3dadd( -22.7347, 155.31, -183.853, 0.66 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 7/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -22.7347, 155.31, -183.853, 0.22 ) }
    dend_26 { pt3dadd( -22.5157, 156.006, -184.208, 0.22 ) }
    dend_26 { pt3dadd( -22.4218, 156.309, -184.351, 0.22 ) }
    dend_26 { pt3dadd( -22.4012, 156.385, -184.381, 0.22 ) }
    dend_26 { pt3dadd( -22.3062, 156.83, -184.527, 0.15 ) }
    dend_26 { pt3dadd( -22.206, 157.374, -184.674, 0.74 ) }
    dend_26 { pt3dadd( -22.1864, 157.496, -184.709, 0.66 ) }
    dend_26 { pt3dadd( -22.1766, 157.683, -184.763, 0.59 ) }
    dend_26 { pt3dadd( -22.1637, 157.984, -184.856, 0.29 ) }
    dend_26 { pt3dadd( -22.1601, 158.27, -184.939, 0.22 ) }
    dend_26 { pt3dadd( -22.1611, 158.506, -184.999, 0.22 ) }
    dend_26 { pt3dadd( -22.163, 158.947, -185.105, 0.22 ) }
    dend_26 { pt3dadd( -22.1634, 159.055, -185.137, 0.66 ) }
    dend_26 { pt3dadd( -22.162, 159.572, -185.33, 0.22 ) }
    dend_26 { pt3dadd( -22.1499, 159.859, -185.457, 0.52 ) }
    dend_26 { pt3dadd( -22.1433, 159.976, -185.512, 0.52 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -22.7347, 155.31, -183.853, 0.22 ) }
    dend_25 { pt3dadd( -22.7606, 155.942, -184.275, 0.22 ) }
    dend_25 { pt3dadd( -22.7465, 156.209, -184.45, 0.22 ) }
    dend_25 { pt3dadd( -22.701, 156.58, -184.722, 0.22 ) }
    dend_25 { pt3dadd( -22.6175, 157.352, -185.313, 1.11 ) }
    dend_25 { pt3dadd( -22.594, 157.597, -185.504, 1.11 ) }
    dend_25 { pt3dadd( -22.5051, 158.665, -186.327, 0.29 ) }
    dend_25 { pt3dadd( -22.4726, 158.968, -186.559, 0.29 ) }
    dend_25 { pt3dadd( -22.4115, 159.743, -187.102, 0.88 ) }
    dend_25 { pt3dadd( -22.3789, 160.634, -187.653, 0.22 ) }
    dend_25 { pt3dadd( -22.3805, 160.7, -187.693, 0.22 ) }
    dend_25 { pt3dadd( -22.3971, 160.966, -187.858, 0.22 ) }
    dend_25 { pt3dadd( -22.4484, 161.339, -188.129, 1.69 ) }
    dend_25 { pt3dadd( -22.6746, 162.705, -189.232, 0.22 ) }
    dend_25 { pt3dadd( -22.7436, 163.137, -189.627, 0.22 ) }
    dend_25 { pt3dadd( -22.891, 164.207, -190.737, 0.74 ) }
    dend_25 { pt3dadd( -22.9157, 164.377, -190.959, 0.81 ) }
    dend_25 { pt3dadd( -23.0485, 165.507, -192.687, 0.22 ) }
    dend_25 { pt3dadd( -23.0513, 165.553, -192.774, 0.22 ) }
    dend_25 { pt3dadd( -23.0434, 165.916, -193.634, 0.66 ) }
    dend_25 { pt3dadd( -23.0399, 165.944, -193.705, 0.81 ) }
    dend_25 { pt3dadd( -22.8743, 166.803, -195.958, 0.22 ) }
    dend_25 { pt3dadd( -22.8251, 167.001, -196.491, 0.22 ) }
    dend_25 { pt3dadd( -22.6331, 167.573, -198.012, 1.03 ) }
    dend_25 { pt3dadd( -22.5617, 167.774, -198.53, 0.66 ) }
    dend_25 { pt3dadd( -22.5113, 167.916, -198.92, 0.66 ) }
    dend_25 { pt3dadd( -22.1723, 168.698, -201.232, 0.15 ) }
    dend_25 { pt3dadd( -22.1187, 168.808, -201.572, 0.15 ) }
    dend_25 { pt3dadd( -22.089, 168.886, -201.819, 0.74 ) }
    dend_25 { pt3dadd( -22.0606, 168.967, -202.079, 0.74 ) }
    dend_25 { pt3dadd( -21.7822, 169.832, -204.977, 0.15 ) }
    dend_25 { pt3dadd( -21.7465, 169.939, -205.382, 0.44 ) }
    dend_25 { pt3dadd( -21.7212, 170.009, -205.668, 0.44 ) }
    dend_25 { pt3dadd( -21.6973, 170.104, -206.116, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_106 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_127 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_75, dend_60, dend_53, dend_0, dend_118, dend_107, dend_91, dend_76, dend_66, dend_61, dend_59, dend_54, dend_30, dend_1, dend_132, dend_119, dend_109, dend_108, dend_95, dend_92, dend_84, dend_77, dend_72, dend_67, dend_65, dend_62, dend_58, dend_55, dend_42, dend_31, dend_13, dend_2, dend_134, dend_133, dend_123, dend_120, dend_111, dend_110, dend_99, dend_96, dend_94, dend_93, dend_88, dend_85, dend_79, dend_78, dend_74, dend_73, dend_71, dend_68, dend_64, dend_63, dend_57, dend_56, dend_48, dend_43, dend_35, dend_32, dend_19, dend_14, dend_8, dend_3, dend_125, dend_124, dend_122, dend_121, dend_113, dend_112, dend_103, dend_100, dend_98, dend_97, dend_90, dend_89, dend_87, dend_86, dend_83, dend_80, dend_70, dend_69, dend_52, dend_49, dend_47, dend_44, dend_37, dend_36, dend_34, dend_33, dend_21, dend_20, dend_18, dend_15, dend_10, dend_9, dend_7, dend_4, dend_127, dend_126, dend_115, dend_114, dend_105, dend_104, dend_102, dend_101, dend_82, dend_81, dend_51, dend_50, dend_46, dend_45, dend_39, dend_38, dend_29, dend_22, dend_17, dend_16, dend_12, dend_11, dend_6, dend_5, dend_131, dend_128, dend_117, dend_116, dend_41, dend_40, dend_28, dend_23, dend_130, dend_129, dend_27, dend_24, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_111 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_106 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_59 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_54 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_92 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_84 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_62 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_134 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_133 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_120 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_96 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_88 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_85 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_79 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_78 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_73 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_43 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_32 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_19 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_14 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_3 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_124 OneSecGrp_SectionRef_68.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_112 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_103 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_100 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_98 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_87 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_86 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_70 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_69 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_52 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_49 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_37 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_34 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_15 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_81 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_16 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_12 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_11 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_75 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_76 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_60 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_91 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_77 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_53 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_13 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_61 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_95 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_118 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_107 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_35 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_132 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_67 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_109 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_72 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_111 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_119 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_65 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_123 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_125 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_113 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_55 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_99 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_83 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_57 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_110 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_58 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_108 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_33 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_10 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_71 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_80 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_114 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_126 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_127 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_36 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_82 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_56 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_93 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_115 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_64 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_94 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_63 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_97 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_9 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_117 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_38 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_122 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_39 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_131 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_116 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_41 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_7 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_128 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_40 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_129 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_130 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_121 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_4 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_5 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_18 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_6 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_50 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_21 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_51 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_20 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_29 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_22 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_104 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_28 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_105 OneSecGrp_SectionRef_105.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_23 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_17 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_27 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_102 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_24 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_101 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_26 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_25 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_47 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_44 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_45 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_46 OneSecGrp_SectionRef_113.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_0, dend_0, dend_0, axon_0, axon_0, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_118, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_132, dend_132, dend_132, dend_132, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_133, dend_123, dend_123, dend_123, dend_123, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_94, dend_93, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_63, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_125, dend_125, dend_125, dend_125, dend_125, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_122, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_80, dend_80, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_126, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_131, dend_131, dend_131, dend_131, dend_128, dend_128, dend_128, dend_117, dend_117, dend_116, dend_116, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_130, dend_129, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_94 all.append()
    dend_93 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_122 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_130 all.append()
    dend_129 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_106 nseg = 3
    dend_59 nseg = 13
    dend_54 nseg = 3
    dend_92 nseg = 3
    dend_84 nseg = 5
    dend_62 nseg = 3
    dend_134 nseg = 3
    dend_133 nseg = 3
    dend_120 nseg = 3
    dend_96 nseg = 3
    dend_88 nseg = 3
    dend_85 nseg = 3
    dend_79 nseg = 3
    dend_78 nseg = 9
    dend_73 nseg = 3
    dend_68 nseg = 3
    dend_43 nseg = 11
    dend_32 nseg = 3
    dend_19 nseg = 7
    dend_14 nseg = 5
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_124 nseg = 3
    dend_112 nseg = 3
    dend_103 nseg = 7
    dend_100 nseg = 7
    dend_98 nseg = 3
    dend_90 nseg = 3
    dend_87 nseg = 5
    dend_86 nseg = 5
    dend_70 nseg = 3
    dend_69 nseg = 13
    dend_52 nseg = 5
    dend_49 nseg = 5
    dend_37 nseg = 3
    dend_34 nseg = 7
    dend_15 nseg = 3
    dend_81 nseg = 7
    dend_16 nseg = 3
    dend_12 nseg = 7
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_BTC_87f7404d17_0_0


