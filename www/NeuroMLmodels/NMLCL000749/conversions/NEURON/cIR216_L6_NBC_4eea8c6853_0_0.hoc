// Cell: cIR216_L6_NBC_4eea8c6853_0_0
/*
{
  "id" : "cIR216_L6_NBC_4eea8c6853_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.69096, -9.75392, 0.0, 3.54463", "1.52222, -8.84351, 0.0, 6.43815", "1.35347, -7.93311, 0.0, 8.80214", "1.18473, -7.0227, 0.0, 10.0004", "1.01599, -6.11229, 0.0, 10.9716", "0.847242, -5.20188, 0.0, 11.7871", "0.678498, -4.29147, 0.0, 12.5324", "0.509755, -3.38107, 0.0, 13.2727", "0.341011, -2.47066, 0.0, 13.4566", "0.172268, -1.56025, 0.0, 13.5676", "0.00352426, -0.649843, 0.0, 13.7469", "-0.165219, 0.260565, 0.0, 13.8983", "-0.333963, 1.17097, 0.0, 14.0", "-0.502706, 2.08138, 0.0, 13.9192", "-0.67145, 2.99179, 0.0, 13.4728", "-0.840193, 3.9022, 0.0, 12.9681", "-1.00894, 4.8126, 0.0, 12.2669", "-1.17768, 5.72301, 0.0, 11.0106", "-1.34642, 6.63342, 0.0, 9.31796", "-1.51517, 7.54383, 0.0, 7.37652", "-1.68391, 8.45424, 0.0, 4.20409" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.62975, 7.48071, -1.86, 3.64", "-2.09568, 9.07445, -1.86, 3.64", "-3.04033, 12.3057, -1.86, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.38975, -7.41879, 8.54, 2.73", "-2.21517, -10.2533, 8.54, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.41975, 1.44321, -4.58, 0.68", "-4.53576, 0.371139, -5.21099, 0.68", "-4.62204, -0.361963, -5.63454, 0.45", "-4.84934, -1.80344, -6.42549, 0.45", "-5.11159, -3.40528, -7.32441, 0.45", "-5.20204, -3.92016, -7.62771, 1.14", "-5.53622, -5.83307, -8.88139, 0.23", "-5.64341, -6.51988, -9.36672, 0.23", "-5.85156, -7.55, -10.1598, 0.91", "-6.24211, -8.83736, -11.341, 0.23", "-6.56693, -9.56833, -12.1355, 0.91", "-7.08417, -10.5865, -13.3476, 0.23", "-7.35484, -11.0401, -13.9907, 0.23", "-7.73024, -11.6523, -14.9255, 0.68", "-8.37938, -12.7349, -16.6476, 0.23", "-8.65499, -13.2437, -17.4386, 0.23", "-8.89205, -13.7853, -18.1961, 1.14", "-9.38451, -15.2623, -20.0099, 0.23", "-9.49435, -15.8285, -20.6852, 0.23", "-9.55007, -16.4846, -21.4594, 1.14", "-9.63172, -17.6004, -22.8056, 0.23", "-9.69393, -18.1556, -23.6006, 0.23", "-9.79875, -18.7748, -24.6087, 0.91", "-9.97456, -19.6692, -26.1516, 0.91", "-10.1589, -20.3732, -27.5315, 0.23", "-10.353, -20.9053, -28.6405, 0.23", "-10.7106, -21.6937, -30.3103, 0.68", "-10.9611, -22.1985, -31.4653, 0.23", "-11.1466, -22.529, -32.237, 1.14", "-11.6735, -23.4243, -34.1225, 0.23", "-11.8127, -23.7269, -34.6584, 0.23", "-11.9287, -24.1245, -35.2541, 0.23", "-13.5966, -28.2918, -40.1871, 0.23", "-15.1187, -32.7681, -44.9185, 0.23", "-16.0593, -36.0456, -50.6054, 0.23", "-17.5717, -38.185, -56.6388, 0.23", "-19.7141, -41.6566, -61.8629, 0.23", "-23.5298, -44.2438, -66.5508, 0.23", "-26.9199, -46.9287, -71.5131, 0.23", "-30.2852, -48.9735, -76.7615, 0.23", "-33.6999, -52.0009, -81.5228, 0.23", "-36.1934, -54.6798, -87.0035, 0.23", "-38.874, -58.3684, -91.82, 0.23", "-41.7469, -62.6717, -96.0146, 0.23", "-44.7885, -66.4653, -100.526, 0.23", "-47.5353, -71.1851, -104.382, 0.23", "-50.0545, -76.6886, -107.331, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.43025, -9.09879, 1.04, 1.14", "4.22804, -11.4343, -0.114808, 1.14", "5.77341, -13.442, -1.10747, 1.14", "7.26939, -15.3855, -2.06841, 1.14", "8.16708, -16.5517, -2.64504, 1.14", "8.99608, -17.6287, -3.17755, 1.59", "9.98407, -18.9123, -3.81218, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.95025, 5.64321, -1.12, 1.59", "3.72564, 7.19956, -1.12, 1.59", "4.54271, 8.83957, -1.12, 1.59", "5.87617, 11.5161, -1.12, 1.59", "6.64889, 13.0671, -1.12, 1.59", "7.77519, 15.3278, -1.12, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.68391, 8.45424, 0.0, 0.825086", "-4.41759, 23.203, 0.0, 0.825086", "-7.15127, 37.9518, 0.0, 0.825086" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-3.04033, 12.3057, -1.86, 0.68", "-4.70205, 12.6852, -2.0161, 0.68", "-5.86087, 12.9706, -2.14268, 0.68", "-7.45, 13.3619, -2.31626, 1.14", "-8.36422, 13.5871, -2.41612, 0.23", "-10.4931, 14.1113, -2.64865, 0.23", "-11.7039, 14.4095, -2.78091, 0.91", "-13.7673, 14.8537, -2.9522, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.04033, 12.3057, -1.86, 1.82", "-0.534031, 14.8681, -2.58517, 1.82", "1.88082, 17.3535, -3.27433, 1.14", "3.71002, 19.2214, -3.76376, 0.68", "4.9368, 20.4393, -4.05486, 1.14", "8.16801, 23.5563, -4.82594, 0.45", "9.99837, 25.2709, -5.28036, 0.45", "11.1263, 26.2367, -5.55893, 1.59", "12.2953, 27.1848, -5.83306, 1.59", "13.9927, 28.5427, -6.18909, 0.68", "15.9805, 30.109, -6.60539, 0.68", "17.5746, 31.3072, -6.89621, 1.36", "19.1609, 32.4492, -7.19636, 2.05", "20.6734, 33.487, -7.51648, 0.91", "22.3654, 34.6603, -7.91986, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.21517, -10.2533, 8.54, 0.68", "-5.13624, -10.723, 8.38946, 0.68", "-8.36201, -11.2071, 8.24233, 0.68", "-10.3303, -11.4841, 8.11686, 0.23", "-11.7277, -11.6776, 8.01839, 0.91", "-13.5724, -11.9521, 7.88631, 0.91", "-15.3576, -12.2247, 7.73548, 0.23", "-16.7375, -12.4313, 7.59587, 0.23", "-19.0181, -12.8143, 7.35368, 0.68", "-20.6848, -13.145, 7.15238, 0.68", "-22.3889, -13.5143, 6.90002, 0.23", "-24.1975, -13.9474, 6.59745, 0.68", "-25.5309, -14.2975, 6.36398, 0.68", "-27.9269, -14.9857, 5.95718, 0.23", "-29.8285, -15.579, 5.66786, 0.23", "-31.2276, -16.0362, 5.46947, 0.68", "-32.2667, -16.3835, 5.38673, 0.68", "-33.7441, -16.8928, 5.35999, 0.68", "-35.6674, -17.5491, 5.40766, 0.23", "-37.3097, -18.0736, 5.52325, 0.45", "-38.8008, -18.5271, 5.71608, 0.45", "-41.5668, -19.3657, 6.14701, 0.23", "-42.5886, -19.692, 6.34862, 1.14", "-43.6058, -20.0376, 6.57898, 1.14", "-45.7629, -20.8079, 7.11262, 0.23", "-47.3565, -21.4342, 7.51166, 0.23", "-48.8005, -22.0661, 7.8515, 0.91", "-51.3285, -23.2594, 8.36035, 0.23", "-52.5563, -23.8622, 8.5938, 1.14", "-53.0983, -24.1341, 8.68789, 1.14", "-54.8059, -24.9891, 8.93136, 0.23", "-56.3145, -25.6993, 9.07454, 1.14", "-58.0072, -26.4227, 9.17775, 0.23", "-59.4838, -26.9642, 9.20783, 1.14", "-60.3663, -27.2578, 9.22796, 0.23", "-62.1713, -27.8112, 9.27121, 0.23", "-63.3835, -28.1686, 9.30889, 1.14", "-64.2852, -28.4198, 9.35359, 1.14", "-66.5832, -29.0925, 9.49952, 0.23", "-67.4872, -29.3838, 9.62691, 1.14", "-68.6455, -29.7843, 9.8581, 1.14", "-70.0069, -30.2728, 10.1931, 0.23", "-71.364, -30.7921, 10.6193, 0.91", "-72.8275, -31.3876, 11.1468, 0.23", "-75.3309, -32.5032, 12.0877, 0.23", "-75.8656, -32.7552, 12.2898, 1.14", "-77.3504, -33.4851, 12.7926, 1.14", "-79.2546, -34.4663, 13.3221, 0.23", "-80.2271, -34.9777, 13.5269, 0.23", "-82.7176, -36.2768, 13.9865, 0.68", "-84.4436, -37.1552, 14.2316, 0.23", "-86.2494, -38.0839, 14.4834, 1.14", "-88.3687, -39.1992, 14.7595, 0.23", "-90.1676, -40.1612, 14.9996, 0.91", "-92.442, -41.3917, 15.3731, 0.23", "-93.9359, -42.2047, 15.6604, 0.23", "-94.4613, -42.4972, 15.7868, 0.23", "-95.2945, -42.966, 16.0398, 0.23", "-96.8742, -43.8675, 16.6588, 0.91", "-98.0187, -44.5389, 17.1621, 0.91", "-99.5116, -45.3935, 17.7855, 0.23", "-100.94, -46.1902, 18.3535, 1.14", "-101.854, -46.6647, 18.7304, 1.14", "-103.891, -47.6664, 19.5667, 0.23", "-104.971, -48.1827, 19.9877, 0.68", "-107.245, -49.3114, 20.8517, 0.23", "-109.027, -50.2607, 21.5262, 0.91", "-111.2, -51.5679, 22.2851, 0.23", "-111.847, -52.0102, 22.493, 0.23", "-112.768, -52.7098, 22.7373, 0.23", "-114.068, -53.8234, 23.0311, 1.14", "-115.686, -55.3312, 23.3205, 0.23", "-116.886, -56.5265, 23.3796, 0.68", "-118.742, -58.4414, 23.1755, 0.23", "-120.233, -59.9733, 22.875, 0.91", "-121.94, -61.6228, 22.4558, 0.23", "-122.768, -62.3574, 22.2525, 0.91", "-124.831, -64.0295, 21.738, 0.23", "-126.612, -65.3199, 21.363, 0.91", "-128.413, -66.5023, 21.0671, 0.23", "-130.12, -67.5089, 20.8897, 0.91", "-132.344, -68.6117, 20.8426, 0.23", "-133.226, -68.9918, 20.8789, 0.91", "-134.693, -69.5052, 21.0461, 0.23", "-135.902, -69.8454, 21.1878, 0.91", "-136.352, -69.945, 21.2015, 0.91", "-138.802, -70.4308, 21.1805, 0.23", "-139.572, -70.5554, 21.1715, 0.23", "-141.111, -70.7888, 21.1541, 0.91", "-142.986, -71.0585, 21.135, 0.23", "-145.419, -71.388, 21.1166, 0.91", "-148.796, -71.8437, 21.1086, 0.23", "-150.854, -72.1243, 21.1288, 0.91" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.21517, -10.2533, 8.54, 0.91", "-0.931112, -12.9183, 9.2254, 0.91", "0.0410357, -14.9359, 9.74431, 0.91", "1.30241, -17.5537, 10.4176, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.98407, -18.9123, -3.81218, 0.91", "9.54972, -22.8107, -3.63055, 0.91", "9.13295, -26.5513, -3.45628, 0.91", "8.82627, -29.3039, -3.32804, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "9.98407, -18.9123, -3.81218, 0.23", "12.9567, -20.607, -3.52464, 0.23", "15.2946, -21.9282, -3.33967, 0.68", "18.4775, -23.7698, -3.13317, 0.68", "20.4004, -24.9651, -3.13479, 0.23", "21.4309, -25.6245, -3.18776, 0.91", "22.969, -26.6139, -3.31338, 0.91", "24.9253, -27.8812, -3.6253, 0.23", "26.6868, -28.9402, -4.02993, 0.91", "29.703, -30.6783, -4.78948, 0.23", "30.8666, -31.3382, -5.10302, 0.91", "32.435, -32.2069, -5.52649, 0.23", "34.4325, -33.3235, -6.03152, 1.14", "35.9113, -34.0936, -6.31538, 1.14", "38.8116, -35.5261, -6.67512, 0.23", "40.2677, -36.1983, -6.75493, 0.91", "41.8017, -36.9041, -6.7872, 0.91", "44.8652, -38.2079, -6.78425, 0.23", "47.4422, -39.1668, -6.69267, 0.68", "49.7736, -39.894, -6.57571, 0.23", "51.0339, -40.1671, -6.50127, 0.91", "53.8112, -40.5778, -6.323, 0.23", "56.635, -40.7898, -6.17379, 0.91", "59.053, -40.8147, -6.08941, 0.23", "60.7161, -40.7829, -6.12205, 0.91", "64.0519, -40.6904, -6.27699, 0.23", "65.074, -40.6729, -6.34932, 1.14", "67.1275, -40.6731, -6.54549, 1.14", "69.7616, -40.8494, -6.85491, 0.23", "72.8249, -41.2659, -7.26797, 0.68", "74.0071, -41.5022, -7.39472, 1.36", "76.3193, -42.1441, -7.51092, 0.23", "77.386, -42.4646, -7.51832, 0.45", "80.2927, -43.3705, -7.42644, 0.23", "82.2071, -43.9721, -7.25953, 0.91", "85.8432, -45.1325, -6.70623, 0.23", "89.2912, -46.1983, -6.10345, 1.14", "90.9912, -46.7054, -5.77416, 0.23", "92.4843, -47.1131, -5.46901, 0.91", "95.3706, -47.846, -4.81467, 0.23", "97.0805, -48.2665, -4.41872, 1.14", "99.8254, -48.9391, -3.83465, 0.23", "101.419, -49.3716, -3.50112, 0.91", "101.918, -49.526, -3.39801, 0.91", "104.272, -50.2904, -2.95866, 0.23", "105.808, -50.7613, -2.74655, 0.91", "108.421, -51.5837, -2.4768, 0.23", "110.335, -52.1971, -2.28987, 0.91", "112.498, -52.879, -2.10368, 0.23", "114.1, -53.3801, -1.9931, 0.68", "117.659, -54.5422, -1.81142, 0.23", "119.952, -55.3234, -1.65318, 0.23", "121.408, -55.805, -1.50337, 1.14", "122.379, -56.1183, -1.36181, 1.14", "125.234, -57.0688, -0.819774, 0.23", "126.9, -57.6154, -0.452659, 1.14", "129.774, -58.5167, 0.225817, 0.23", "133.925, -59.7206, 1.31825, 0.91", "135.858, -60.2741, 1.81974, 0.23", "138.001, -60.8719, 2.32491, 0.91", "141.108, -61.6802, 2.96716, 0.23", "143.418, -62.3004, 3.29079, 0.91", "146.498, -63.2824, 3.4913, 0.23", "150.487, -64.8125, 3.44886, 0.23", "153.654, -66.1496, 3.23324, 0.45", "155.931, -67.2139, 2.98493, 0.23", "158.914, -68.7372, 2.5143, 0.23", "161.356, -70.0782, 1.94821, 0.91", "162.959, -71.0163, 1.3974, 0.23", "164.126, -71.7425, 0.927278, 0.45", "164.994, -72.2959, 0.556561, 0.23", "166.564, -73.2097, -0.100299, 0.91", "169.046, -74.4004, -1.109, 0.23", "170.957, -75.1571, -1.90037, 0.91", "172.373, -75.676, -2.48245, 0.23", "172.831, -75.8405, -2.66852, 0.91", "174.471, -76.4149, -3.27691, 0.23", "176.284, -77.1273, -3.88416, 0.45", "178.551, -78.0736, -4.46995, 0.23", "179.304, -78.4015, -4.63591, 0.91", "180.205, -78.8325, -4.82269, 0.23", "181.8, -79.6974, -5.1159, 1.14", "184.223, -81.2223, -5.38932, 0.23", "185.537, -82.1928, -5.53992, 0.68", "186.281, -82.9216, -5.66188, 0.23", "187.506, -84.576, -5.94156, 0.23", "187.967, -86.0427, -6.176, 0.23", "187.374, -88.0716, -6.41866, 0.91", "185.93, -91.0961, -6.74808, 0.23", "184.351, -93.8275, -7.0502, 0.23", "183.315, -95.3821, -7.22392, 0.23", "181.186, -98.0682, -7.53383, 0.23", "178.421, -101.11, -7.89437, 0.68", "187.922, -107.344, -9.45832, 0.68", "197.421, -112.706, -12.8637, 0.68", "205.922, -118.515, -17.8667, 0.68", "214.08, -123.819, -23.8506, 0.68", "224.024, -127.275, -28.1157, 0.68", "234.316, -130.963, -31.2257, 0.68", "244.211, -135.452, -34.6529, 0.68", "254.792, -138.485, -37.4128, 0.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.77519, 15.3278, -1.12, 0.23", "8.9634, 16.2156, -1.35792, 0.23", "10.8535, 17.5278, -1.66456, 0.68", "11.4205, 17.9214, -1.75656, 0.68", "12.5849, 18.7297, -1.94545, 0.23", "13.9457, 19.6744, -2.16623, 0.91", "15.2034, 20.5475, -2.37028, 0.91", "16.2519, 21.3352, -2.53234, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.77519, 15.3278, -1.12, 0.68", "7.63619, 18.9142, -0.462814, 0.68", "7.58071, 21.1946, -0.137164, 0.68", "7.5633, 23.0574, 0.090277, 0.91", "7.63868, 26.2831, 0.2238, 0.23", "7.70425, 27.3969, 0.225829, 0.68", "8.00147, 31.356, 0.16099, 0.23", "8.2587, 33.9738, -0.0271421, 1.14", "8.43821, 35.4973, -0.182267, 1.14", "9.21388, 40.6935, -0.833319, 0.23", "9.83384, 43.9168, -1.30113, 0.91", "10.1613, 45.3215, -1.51817, 0.91", "10.695, 47.1859, -1.83909, 0.23", "11.4766, 49.7731, -2.26356, 0.23", "12.0109, 51.4848, -2.5413, 0.91", "12.5868, 53.2054, -2.78341, 0.91", "13.4305, 55.6857, -3.14314, 0.23", "14.4773, 58.6258, -3.55962, 0.68", "15.5849, 61.641, -4.01389, 0.23", "16.2663, 63.5519, -4.28857, 0.91", "17.4448, 66.9342, -4.81648, 0.23", "17.9737, 68.3622, -5.04798, 0.23", "18.2941, 69.1999, -5.17739, 1.14", "18.8141, 70.4823, -5.33331, 1.14", "19.6519, 72.4268, -5.51838, 0.23", "20.2204, 73.9031, -5.63923, 0.68", "21.1192, 76.6683, -5.86261, 0.23", "21.7232, 78.7902, -6.01677, 0.91", "22.5383, 82.1943, -6.218, 0.23", "23.0347, 84.7142, -6.32608, 1.14", "23.518, 88.5701, -6.52789, 0.23", "23.6414, 91.0863, -6.6655, 0.68", "23.6016, 92.5323, -6.78069, 0.23", "23.4297, 94.6947, -6.98861, 0.91", "23.2204, 96.1218, -7.13751, 0.91", "22.0914, 101.902, -7.80959, 0.23", "21.7178, 103.622, -8.05641, 1.14", "20.8905, 107.217, -8.70824, 0.23", "20.3225, 109.607, -9.19605, 0.91", "19.8133, 111.6, -9.63485, 0.91", "18.9644, 114.84, -10.3726, 0.23", "17.8386, 118.987, -11.4823, 0.91", "17.2489, 121.186, -12.1053, 0.23", "16.9151, 122.54, -12.4308, 0.45", "16.5304, 124.271, -12.8332, 0.23", "16.2514, 125.654, -13.1452, 0.91", "15.6235, 128.973, -13.9328, 0.23", "15.1736, 131.346, -14.5591, 1.14", "14.2515, 136.158, -16.035, 0.23", "13.5758, 139.502, -17.1899, 1.36", "12.7482, 143.358, -18.7917, 0.45", "12.2797, 145.359, -19.7844, 0.91", "11.5084, 148.343, -21.4595, 0.23", "10.917, 150.293, -22.7458, 0.68", "10.3774, 151.799, -23.9129, 0.68", "9.23545, 154.83, -26.335, 0.23", "8.61476, 156.588, -27.7499, 0.23", "8.33497, 157.514, -28.4371, 0.91", "7.95503, 159.562, -29.8745, 0.45", "7.86148, 161.447, -31.0941, 0.23", "8.03394, 163.014, -32.0458, 0.91", "8.57002, 165.004, -33.1302, 0.23", "8.97103, 166.011, -33.6626, 1.14", "10.0359, 167.894, -34.7153, 0.23", "11.1269, 169.49, -35.6576, 0.91", "12.6271, 171.551, -36.9502, 0.23", "13.3439, 172.546, -37.5866, 0.23", "14.4548, 174.194, -38.6789, 1.14", "16.2433, 177.223, -40.822, 0.23", "17.5552, 180.007, -42.8921, 1.14", "18.4988, 183.243, -45.5463, 0.23", "18.6658, 184.042, -46.2221, 0.23", "18.8667, 185.766, -47.7481, 0.68", "18.8354, 187.642, -49.551, 0.23", "18.3992, 189.337, -51.2924, 1.14", "17.071, 191.958, -54.2086, 0.23", "15.5866, 203.187, -59.225, 0.23", "12.5131, 215.072, -61.3139, 0.23", "11.3693, 226.999, -64.7039, 0.23", "8.78439, 238.733, -67.9128, 0.23", "8.24327, 250.818, -70.9317, 0.23", "6.23875, 262.832, -73.5685, 0.23", "2.70814, 274.447, -76.2247, 0.23", "-0.831013, 285.766, -79.841, 0.23", "-3.74982, 296.823, -84.5672, 0.23", "-5.82918, 307.275, -90.7538, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.15127, 37.9518, 0.0, 0.163069", "-9.88495, 52.7006, 0.0, 0.163069", "-12.6186, 67.4494, 0.0, 0.163069" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-13.7673, 14.8537, -2.9522, 0.23", "-13.7661, 15.4495, -5.1856, 0.23", "-13.7655, 15.7906, -6.46441, 0.23", "-13.7646, 16.2401, -8.14915, 0.91", "-13.7631, 17.0718, -11.2669, 0.23", "-13.7614, 17.957, -14.5851, 0.23", "-13.7608, 18.2857, -15.8173, 1.14" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-13.7673, 14.8537, -2.9522, 0.23", "-14.8692, 15.6434, -3.17814, 0.23", "-16.3783, 16.715, -3.46776, 0.91", "-18.2971, 18.0559, -3.82911, 0.68", "-20.141, 19.3582, -4.13258, 0.23", "-21.54, 20.3813, -4.4045, 0.68", "-22.7658, 21.2952, -4.66581, 0.23", "-23.3912, 21.7749, -4.83748, 1.14", "-24.2081, 22.3912, -5.11662, 1.14", "-26.1624, 23.8787, -5.96059, 0.23", "-27.898, 25.2307, -6.83712, 0.45", "-28.9745, 26.0564, -7.42066, 0.23", "-30.4378, 27.1193, -8.23517, 0.23", "-32.2058, 28.3238, -9.22804, 0.23", "-33.556, 29.1845, -9.98776, 0.91", "-34.287, 29.6028, -10.3915, 0.91", "-37.0013, 31.0017, -11.7133, 0.23", "-38.7061, 31.8334, -12.4719, 0.68", "-40.1393, 32.5055, -13.0296, 0.23", "-40.7026, 32.766, -13.2427, 0.91", "-42.0092, 33.3205, -13.7115, 0.91", "-44.3346, 34.2679, -14.5582, 0.23", "-45.5001, 34.7126, -14.9895, 2.05", "-46.6672, 35.1975, -15.3945, 2.05" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "22.3654, 34.6603, -7.91986, 0.68", "24.2704, 35.1544, -8.20791, 0.68", "27.113, 35.8045, -8.69666, 1.14", "29.8786, 36.4172, -9.10892, 0.68", "33.2947, 37.1847, -9.54692, 0.68", "35.5923, 37.7303, -9.79572, 0.68", "37.5545, 38.1962, -10.0082, 1.14", "40.7151, 38.9491, -10.2771, 0.68", "43.9672, 39.725, -10.4726, 0.68", "45.9659, 40.2325, -10.5919, 0.68", "47.3698, 40.563, -10.6361, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "22.3654, 34.6603, -7.91986, 0.68", "22.4524, 38.2671, -8.45255, 0.68", "22.5089, 40.2989, -8.67072, 1.14", "22.5854, 42.718, -8.86524, 0.23", "22.673, 46.391, -8.97797, 0.68", "22.6908, 49.054, -8.95386, 0.68", "22.6828, 50.4244, -8.91211, 0.68", "22.5738, 53.6536, -8.63541, 1.14", "22.3484, 58.1612, -8.17634, 0.23", "22.1741, 60.5951, -7.88944, 0.23", "21.8527, 64.0772, -7.41029, 0.68", "21.671, 65.3838, -7.23506, 0.68", "21.2519, 67.9511, -6.8868, 0.23", "20.8826, 69.7686, -6.64016, 0.91", "20.1484, 72.8007, -6.25658, 0.23", "19.6819, 74.6394, -6.11978, 0.68", "18.7262, 78.0599, -5.91229, 1.14" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-150.854, -72.1243, 21.1288, 0.23", "-153.244, -72.1297, 21.2456, 0.23", "-154.701, -72.1604, 21.3256, 0.68", "-156.619, -72.2374, 21.4269, 0.23", "-158.155, -72.3877, 21.4499, 0.45", "-161.467, -72.8963, 21.2203, 0.23", "-163.884, -73.3375, 20.9536, 0.45", "-164.721, -73.5397, 20.8326, 0.23", "-166.088, -73.9459, 20.5969, 0.68", "-168.954, -74.9156, 20.0154, 0.23", "-172.92, -76.3555, 19.283, 0.68", "-173.884, -76.7042, 19.1107, 0.23", "-174.875, -77.0579, 18.9894, 0.68", "-176.889, -77.7741, 18.8603, 0.23", "-178.266, -78.2267, 18.8536, 0.91", "-181.563, -79.2126, 19.0676, 0.23", "-183.42, -79.7304, 19.2673, 1.14", "-185.675, -80.3221, 19.4644, 0.23", "-187.166, -80.6624, 19.5816, 0.91", "-189.446, -81.1153, 19.7225, 0.23", "-190.683, -81.3423, 19.7662, 0.68", "-192.087, -81.5799, 19.7511, 0.23", "-193.914, -81.8819, 19.7499, 0.68", "-195.561, -82.1263, 19.7514, 0.23", "-196.98, -82.3877, 19.7922, 0.91", "-197.982, -82.6195, 19.8426, 0.23", "-199.785, -83.1145, 19.9475, 0.45", "-200.613, -83.3584, 20.0052, 0.23", "-202.589, -83.9569, 20.1388, 0.45", "-205.82, -84.8939, 20.2993, 0.23", "-207.414, -85.3534, 20.3874, 0.23", "-209.65, -85.9874, 20.5206, 0.68", "-212.371, -86.7323, 20.6925, 0.23", "-213.967, -87.1376, 20.7886, 0.23", "-216.509, -87.7111, 20.9214, 0.91" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-150.854, -72.1243, 21.1288, 0.23", "-154.42, -73.4078, 19.411, 0.23", "-155.597, -73.7737, 18.9392, 0.68", "-157.721, -74.3879, 18.2567, 0.23", "-159.424, -74.8618, 17.7779, 0.91", "-161.836, -75.533, 17.0997, 0.23", "-164.247, -76.2041, 16.4217, 0.45", "-166.532, -76.8079, 15.9904, 0.23", "-169.241, -77.4878, 15.4646, 0.68", "-169.977, -77.6652, 15.326, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "1.30241, -17.5537, 10.4176, 1.14", "2.78696, -20.585, 13.5133, 1.14", "4.60237, -24.3024, 17.0042, 1.14", "6.14985, -27.5191, 19.7354, 0.68", "7.42132, -30.1621, 21.9795, 0.68", "8.08182, -31.535, 23.1452, 0.91", "9.30453, -34.0767, 25.3033, 0.68", "10.3543, -36.37, 27.0614, 1.14", "11.1129, -38.018, 28.1024, 1.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.30241, -17.5537, 10.4176, 0.23", "2.06343, -21.4013, 9.05599, 0.23", "2.86682, -25.9261, 7.21307, 0.23", "3.82468, -31.2372, 5.00366, 0.23", "4.51522, -34.7105, 3.57981, 1.82", "4.9598, -37.1989, 2.50076, 1.82", "5.52154, -40.3316, 1.1243, 0.68", "6.07323, -43.7517, -0.49107, 0.23", "6.49252, -46.9439, -1.87802, 0.23", "6.65657, -49.0462, -2.84792, 0.91", "6.83843, -52.8824, -4.74892, 0.23", "6.83778, -54.9803, -5.74197, 0.23", "6.64509, -58.5456, -7.25227, 0.23", "6.45667, -60.2252, -7.82064, 0.68", "5.78043, -64.3862, -9.08608, 0.23", "5.47149, -66.0199, -9.50134, 1.36", "4.89929, -69.1161, -10.0544, 0.23", "4.52583, -71.0969, -10.3384, 0.23", "4.06989, -74.1141, -10.5882, 0.91", "3.87813, -76.8659, -10.6631, 0.91", "3.88128, -78.7693, -10.684, 0.91", "4.21776, -83.4254, -10.8879, 0.23", "4.56999, -85.8041, -11.1021, 0.23", "5.20329, -89.0542, -11.5939, 0.91", "6.14238, -93.0257, -12.3688, 0.23", "7.05234, -96.4853, -13.1641, 0.45", "8.32605, -100.943, -14.3217, 0.23", "9.4828, -104.955, -15.4689, 0.68", "10.7583, -109.76, -16.9906, 0.23", "11.2704, -112.108, -17.7701, 1.14", "11.3856, -112.793, -17.9877, 1.14", "11.6192, -114.462, -18.4261, 1.14", "12.0621, -118.197, -19.2783, 0.23", "12.392, -121.036, -19.8423, 0.91", "12.9559, -125.515, -20.6396, 0.23", "13.2176, -127.538, -20.9922, 1.14", "13.8216, -132.033, -21.8106, 0.23", "14.1402, -134.372, -22.2397, 1.14", "14.5932, -137.769, -22.8366, 0.23", "14.7911, -139.544, -23.1169, 1.14", "14.9736, -141.584, -23.4308, 1.14", "15.2427, -146.421, -24.22, 0.23", "15.2954, -149.248, -24.6794, 1.14", "15.2598, -153.014, -25.3142, 0.23", "15.1935, -155.622, -25.7586, 1.14", "15.1114, -159.726, -26.4337, 0.23", "15.0822, -162.098, -26.8289, 1.82", "15.0865, -166.577, -27.5496, 0.23", "15.0982, -167.729, -27.7458, 0.68", "15.1243, -169.833, -28.1155, 0.23", "15.1831, -172.897, -28.6278, 0.91", "15.2146, -176.042, -29.1053, 0.23", "15.2368, -177.412, -29.2058, 1.14", "15.3185, -179.627, -29.2719, 0.23", "15.3949, -181.109, -29.2696, 0.68", "15.6479, -185.26, -29.2129, 0.23", "15.7624, -186.737, -29.1744, 1.14", "16.3221, -192.271, -28.9652, 0.23", "16.6196, -195.113, -28.7038, 0.91", "16.7599, -196.465, -28.5282, 0.91", "17.0452, -199.35, -28.076, 0.23", "17.1792, -201.061, -27.7815, 1.14", "17.2416, -202.434, -27.553, 1.14", "17.1626, -208.669, -26.9583, 0.23", "17.0412, -211.2, -26.8011, 0.91", "16.9728, -212.229, -26.8166, 0.91", "16.7486, -215.418, -27.0997, 0.23", "16.6454, -216.987, -27.3831, 0.68", "16.4224, -220.979, -28.5935, 0.23", "16.3509, -222.267, -29.1551, 0.91", "16.1523, -225.58, -30.6262, 0.23", "16.0365, -227.488, -31.4225, 1.14", "15.9763, -228.473, -31.8027, 1.14", "15.8833, -229.905, -32.2634, 1.59", "15.6276, -233.19, -33.0072, 0.23", "15.4695, -234.749, -33.336, 1.14", "15.1704, -237.454, -33.833, 0.23", "15.0883, -238.313, -34.0173, 0.68", "14.9927, -239.731, -34.3754, 0.23", "14.9741, -241.098, -34.7531, 0.91", "15.1083, -242.882, -35.3446, 0.23", "15.3007, -244.602, -35.8405, 1.14", "15.7144, -247.766, -36.4357, 0.23", "16.0427, -250.117, -36.7287, 0.23", "16.3543, -252.327, -36.9016, 0.91", "16.9537, -256.618, -37.0529, 0.23", "17.487, -260.594, -37.0264, 1.14", "18.2517, -266.432, -36.7054, 0.23", "18.4427, -268.144, -36.5385, 0.91", "18.5305, -269.205, -36.4097, 0.91", "18.6433, -272.262, -36.0188, 0.23", "18.5689, -274.676, -35.8007, 1.14", "18.2274, -278.205, -35.7904, 0.23", "17.9655, -279.678, -35.8779, 0.68", "17.3714, -282.373, -35.9937, 0.23", "17.0411, -283.657, -36.0354, 1.14", "15.8859, -287.722, -36.1129, 0.23", "15.4989, -289.166, -36.1286, 0.91", "15.3272, -289.893, -36.1364, 0.91", "14.7588, -293.041, -35.9017, 0.23", "14.5617, -294.406, -35.6443, 0.91", "14.1672, -297.392, -34.8372, 0.23", "13.9955, -298.879, -34.3493, 1.14", "13.6699, -301.348, -33.5478, 0.23", "13.2251, -304.281, -32.6432, 0.91", "12.8359, -306.967, -32.083, 0.23", "12.6577, -308.448, -31.8756, 0.91", "12.3438, -311.224, -31.6741, 0.23", "12.0413, -314.037, -31.5806, 1.14", "11.973, -315.077, -31.6233, 1.14", "11.9069, -319.887, -32.3993, 0.23", "11.9903, -321.921, -32.917, 0.23", "12.0734, -322.764, -33.1757, 0.68", "11.6751, -334.735, -34.3789, 0.68", "12.6395, -346.723, -34.7207, 0.68", "15.1506, -358.428, -33.9356, 0.68", "18.5027, -369.877, -32.9326, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "8.82627, -29.3039, -3.32804, 1.59", "8.78681, -29.6536, -3.23778, 1.59", "8.49825, -32.2111, -2.57778, 1.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "8.82627, -29.3039, -3.32804, 0.23", "8.65434, -30.942, -4.84183, 0.23", "8.41239, -33.4036, -7.27905, 0.68", "8.20259, -36.0807, -9.91937, 0.23", "8.06512, -38.7215, -12.697, 0.91", "7.85656, -43.1298, -17.3942, 0.91", "7.72594, -45.7203, -20.1173, 0.23", "7.67113, -47.709, -22.3583, 0.23", "7.70542, -48.6448, -23.4738, 1.59", "8.09612, -52.0229, -27.5899, 0.23", "8.27534, -52.7178, -28.4251, 0.23", "8.67263, -53.6307, -29.3467, 0.23", "9.27779, -54.5654, -30.2649, 0.23", "10.3744, -55.9191, -31.7046, 1.14", "11.5808, -57.2246, -33.2401, 0.68", "12.7859, -58.5686, -34.774, 0.68", "13.8649, -59.9124, -36.2739, 0.68", "14.9696, -61.5726, -38.3681, 0.23", "15.9727, -63.6104, -40.9784, 0.23", "16.6039, -65.1486, -42.9227, 0.68", "17.1831, -66.7625, -45.0227, 0.23", "17.5202, -67.8454, -46.4891, 0.91", "18.4926, -71.8, -51.9869, 0.23", "18.6632, -73.1024, -53.6793, 0.23", "18.7876, -74.5887, -55.5984, 0.68", "19.9351, -82.1876, -65.2985, 0.68", "20.5978, -90.5196, -74.4761, 0.68", "22.8425, -98.9696, -83.3087, 0.68", "25.8559, -108.518, -90.8025, 0.68", "27.0424, -118.495, -98.2819, 0.68", "27.388, -129.337, -104.676, 0.68", "28.0463, -140.978, -109.629, 0.68", "31.4584, -151.831, -115.086, 0.68", "34.7825, -162.999, -120.002, 0.68", "39.171, -174.164, -124.055, 0.68", "44.2191, -185.221, -127.608, 0.68", "49.3898, -196.69, -129.462, 0.68", "54.3418, -208.308, -131.06, 0.68", "57.756, -220.462, -132.939, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "254.792, -138.485, -37.4128, 0.23", "265.395, -143.847, -38.6009, 0.23", "275.337, -150.232, -40.6964, 0.23", "284.022, -158.543, -41.8454, 0.23", "291.113, -168.124, -44.4241, 0.23", "297.838, -178.249, -44.7517, 0.23", "303.792, -188.883, -44.9538, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "254.792, -138.485, -37.4128, 0.23", "262.335, -142.187, -38.3268, 0.23", "270.148, -145.328, -38.2063, 0.23", "277.607, -149.119, -39.4517, 0.23", "284.64, -153.166, -41.9296, 0.23", "291.24, -157.485, -45.1164, 0.23", "298.159, -162.018, -47.0789, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "16.2519, 21.3352, -2.53234, 0.23", "18.1091, 22.5652, -3.07908, 0.23", "20.6615, 24.1928, -3.87841, 0.68", "23.3153, 25.8815, -4.6347, 0.23", "24.7411, 26.8305, -5.02036, 0.91", "25.6566, 27.4628, -5.28649, 0.91", "27.1419, 28.5335, -5.73516, 0.23", "29.3313, 30.1935, -6.33032, 1.59", "31.262, 31.7475, -6.8583, 0.23", "32.4019, 32.7237, -7.19719, 1.14", "34.3613, 34.394, -7.72368, 0.23", "35.2218, 35.0955, -7.95287, 0.23", "36.8138, 36.412, -8.4046, 1.14", "38.046, 37.3981, -8.83515, 0.23", "38.8958, 38.0383, -9.18138, 1.14", "40.1751, 38.9569, -9.7157, 1.14", "42.461, 40.5478, -10.6148, 0.23", "44.3929, 41.8624, -11.3348, 1.59", "47.2335, 43.7559, -12.335, 0.23", "49.0265, 44.9852, -12.897, 0.68", "51.3979, 46.634, -13.5099, 0.23", "52.9239, 47.753, -13.8319, 1.36", "54.4935, 48.9591, -14.0447, 0.23", "56.359, 50.48, -14.1859, 1.36", "59.5088, 53.2791, -14.2517, 0.23", "61.8524, 55.4849, -14.2969, 0.23", "63.1841, 56.8613, -14.3232, 0.23", "64.6713, 58.5565, -14.3828, 2.05", "66.3156, 60.6159, -14.4673, 0.23", "67.9592, 62.9321, -14.5604, 0.23", "68.8731, 64.3584, -14.612, 1.59", "70.2822, 66.6686, -14.7088, 0.23", "70.7751, 67.4749, -14.7358, 1.14", "71.4491, 68.6212, -14.778, 1.14", "72.1177, 69.7323, -14.8267, 0.23", "73.3049, 71.7093, -14.9467, 1.14", "74.2043, 73.1601, -14.9589, 0.23", "74.8659, 74.1105, -14.9605, 0.23", "75.6578, 75.1403, -14.9767, 0.91", "76.7318, 76.4548, -15.0201, 0.23", "77.808, 77.728, -15.0881, 1.36", "79.6863, 79.8712, -15.3907, 0.23", "81.6615, 82.0457, -15.8759, 0.23", "82.6838, 83.0619, -16.1948, 0.91", "83.3514, 83.6799, -16.4337, 0.91", "84.8618, 84.9281, -17.0881, 0.23", "86.4397, 86.0667, -17.8544, 0.91", "88.3659, 87.3426, -18.9299, 0.23", "89.9971, 88.3915, -19.8149, 1.14", "90.7313, 88.8266, -20.1745, 1.14", "92.5444, 89.8585, -20.9706, 0.23", "93.6569, 90.4378, -21.3815, 1.14", "95.4349, 91.3734, -21.8514, 0.23", "96.2966, 91.8237, -22.06, 1.14", "99.3406, 93.4449, -22.7134, 0.23", "100.456, 94.0514, -22.9309, 0.23", "102.611, 95.3104, -23.2769, 1.82", "104.947, 96.7166, -23.6239, 0.23", "107.776, 98.4673, -23.9949, 1.36", "108.559, 98.985, -24.0968, 0.23", "109.629, 99.7666, -24.2226, 0.68", "111.558, 101.257, -24.4238, 0.23", "112.535, 102.121, -24.519, 0.23", "113.338, 102.883, -24.591, 1.14", "114.14, 103.707, -24.6108, 1.14", "114.775, 104.4, -24.6498, 0.23", "115.255, 104.917, -24.717, 0.23", "116.072, 105.837, -24.9011, 1.14", "116.704, 106.602, -25.0734, 1.14", "117.754, 107.887, -25.4666, 0.23", "118.328, 108.58, -25.7129, 0.91", "119.536, 110.056, -26.2728, 0.23", "120.832, 111.689, -26.9206, 1.14", "121.984, 113.13, -27.4939, 0.23", "123.371, 114.786, -28.225, 1.14", "124.08, 115.602, -28.5999, 0.23", "124.894, 116.534, -29.012, 0.68", "126.18, 117.966, -29.5836, 0.23", "126.664, 118.451, -29.801, 0.91", "128.704, 120.496, -30.7316, 0.23", "129.457, 121.302, -31.0782, 0.23", "130.323, 122.304, -31.545, 0.23", "131.286, 123.548, -32.1955, 0.91", "132.379, 125.244, -33.1341, 0.23", "133.167, 126.881, -34.1179, 1.14", "133.417, 127.664, -34.603, 0.23", "133.661, 128.742, -35.3094, 0.91", "133.937, 130.654, -36.5531, 0.23", "134.025, 131.966, -37.3785, 0.91", "134.048, 133.741, -38.421, 0.23", "134.058, 134.796, -39.1038, 0.91", "134.083, 136.11, -39.9877, 0.23", "134.16, 137.74, -41.1014, 0.23", "134.19, 138.51, -41.6195, 0.91", "134.238, 139.535, -42.3179, 0.23", "134.371, 141.574, -43.6827, 1.14", "134.42, 142.334, -44.1955, 1.14", "134.568, 145.079, -45.9965, 0.23", "134.643, 146.522, -46.9594, 0.23", "134.674, 147.036, -47.2906, 0.45", "134.718, 147.711, -47.6862, 0.23", "134.742, 148.546, -48.0727, 0.23", "134.792, 150.24, -48.8263, 0.23", "141.687, 158.131, -49.9518, 0.23", "148.991, 165.223, -52.6068, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "16.2519, 21.3352, -2.53234, 0.23", "18.5513, 22.4997, -2.51981, 0.23", "22.6023, 24.5831, -2.52076, 0.91", "26.0532, 26.2951, -2.59896, 0.23", "28.0018, 27.2388, -2.64248, 0.91", "30.1344, 28.2506, -2.65735, 0.23", "32.0992, 29.1812, -2.63495, 0.23", "33.8349, 29.998, -2.62955, 0.91", "35.6384, 30.8867, -2.63397, 0.23", "37.7359, 31.9654, -2.5043, 0.91", "40.2655, 33.2974, -2.33591, 0.23", "42.5995, 34.5649, -2.11356, 0.68", "44.235, 35.4566, -1.95932, 0.23", "45.8201, 36.3442, -1.79981, 1.14", "48.1132, 37.7346, -1.52247, 0.23", "49.4393, 38.5726, -1.40899, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-5.82918, 307.275, -90.7538, 0.23", "-5.73105, 316.268, -93.9582, 0.23", "-6.82778, 324.583, -98.437, 0.23", "-6.84307, 333.174, -102.528, 0.23", "-8.64122, 341.922, -105.921, 0.23", "-12.1914, 349.95, -109.599, 0.23", "-17.0474, 357.799, -111.937, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.82918, 307.275, -90.7538, 0.23", "-6.48848, 316.198, -93.0957, 0.23", "-6.07727, 325.317, -94.6827, 0.23", "-5.18014, 334.546, -94.9688, 0.23", "-5.05101, 343.818, -95.4238, 0.23", "-4.63605, 353.064, -94.6998, 0.23", "-3.25355, 362.226, -94.3795, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-13.7608, 18.2857, -15.8173, 0.23", "-14.0576, 17.0867, -18.9774, 0.23", "-14.2185, 16.4532, -20.8733, 0.23", "-14.3815, 15.8661, -22.5324, 0.91", "-14.7808, 14.6708, -25.5713, 0.68", "-15.2291, 13.5549, -28.1496, 0.23", "-15.6504, 12.7322, -29.9453, 0.68", "-16.3874, 11.3533, -32.8245, 0.23", "-16.8052, 10.7751, -33.9754, 0.91", "-17.8467, 9.64437, -36.1629, 0.23", "-18.6252, 8.94351, -37.3568, 1.14", "-20.3978, 7.36667, -39.5853, 0.23", "-21.1379, 6.66267, -40.4583, 0.68", "-21.9402, 5.86923, -41.3321, 0.23", "-22.5532, 5.20524, -42.0187, 0.23", "-23.0405, 4.63148, -42.5581, 0.23", "-24.1758, 2.96369, -43.9963, 1.14", "-25.3094, 0.965566, -45.5525, 0.23", "-26.3999, -1.30321, -47.3583, 0.91", "-27.1999, -3.14099, -48.8557, 0.23", "-27.7339, -4.54525, -49.9779, 1.14", "-28.6665, -7.08757, -52.0492, 0.23", "-29.1228, -8.42619, -53.1584, 0.91", "-29.8237, -10.6889, -54.9802, 0.23", "-30.1886, -12.1406, -56.1174, 1.14", "-30.569, -14.0821, -57.745, 0.23", "-34.7071, -23.2203, -65.4637, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-13.7608, 18.2857, -15.8173, 0.23", "-11.5956, 18.34, -16.8772, 0.23", "-8.91279, 18.4946, -18.1162, 0.91", "-6.78328, 18.6047, -19.0291, 0.23", "-6.14095, 18.6599, -19.3226, 0.68", "-4.57463, 18.8553, -20.0941, 0.23", "-3.52532, 19.0408, -20.681, 1.14", "-0.924586, 19.5586, -22.239, 0.23", "1.0419, 19.9887, -23.6581, 0.91", "4.01188, 20.5912, -26.1088, 0.23", "5.30098, 20.8447, -27.2954, 1.36", "8.17518, 21.4711, -30.3346, 0.23", "9.45464, 21.7632, -31.9242, 0.91", "12.2929, 22.3708, -36.152, 0.23", "13.5719, 22.6429, -38.2755, 0.68", "14.8484, 22.8433, -40.6211, 0.91", "16.1962, 22.9776, -43.3068, 0.23", "16.8426, 23.01, -44.8615, 0.23", "17.4192, 23.1169, -46.6364, 1.14", "24.7795, 24.78, -53.7622, 1.14", "33.3569, 27.9729, -58.6946, 1.14" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-46.6672, 35.1975, -15.3945, 0.23", "-47.383, 36.2267, -15.2662, 0.23", "-48.0477, 37.1316, -15.175, 0.23", "-48.3319, 37.4958, -15.1505, 0.91", "-49.2693, 38.6408, -15.0481, 0.23", "-49.8374, 39.3097, -14.9899, 0.91", "-51.0307, 40.6774, -14.8856, 0.23", "-51.7843, 41.4801, -14.791, 1.14", "-52.9721, 42.6781, -14.6554, 0.23", "-53.8223, 43.5113, -14.5824, 0.91", "-54.5892, 44.2247, -14.5488, 0.23", "-55.2446, 44.7984, -14.4851, 0.91", "-56.2254, 45.5709, -14.3566, 0.23", "-57.021, 46.1548, -14.2308, 0.68", "-57.6031, 46.5272, -14.1484, 0.23", "-58.2275, 46.8632, -14.0701, 0.68", "-59.554, 47.4562, -13.899, 0.23", "-60.2008, 47.6854, -13.8136, 1.14", "-61.2337, 47.9704, -13.6947, 0.23", "-62.5018, 48.2483, -13.5346, 0.23", "-63.7912, 48.4684, -13.4136, 0.68", "-64.4341, 48.5684, -13.3885, 0.23", "-65.9023, 48.777, -13.433, 0.68", "-66.4448, 48.8554, -13.4625, 0.23", "-67.2241, 48.9772, -13.5303, 0.68", "-68.1006, 49.1514, -13.6417, 0.23", "-69.3015, 49.4347, -13.8383, 0.91", "-70.615, 49.8188, -14.0597, 0.23", "-71.7268, 50.2101, -14.2618, 0.91", "-72.8902, 50.6789, -14.4094, 0.23", "-73.4422, 50.9169, -14.4553, 0.23", "-74.5556, 51.4511, -14.522, 0.91", "-75.5517, 51.9766, -14.5302, 0.23", "-76.2078, 52.3601, -14.5128, 0.68", "-77.8677, 53.4125, -14.4164, 0.23", "-78.8631, 54.1012, -14.3357, 0.68", "-80.068, 55.0046, -14.2276, 0.23", "-81.1566, 55.9363, -14.078, 0.23", "-81.829, 56.5887, -13.9581, 0.23", "-82.3984, 57.2479, -13.8392, 0.68", "-82.7035, 57.6749, -13.7624, 0.23", "-82.9302, 58.0319, -13.6855, 0.91", "-83.9445, 59.7777, -13.2531, 0.23", "-84.324, 60.5038, -13.0916, 0.23", "-84.8393, 61.5522, -12.8326, 0.23", "-85.3624, 62.6009, -12.5727, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-46.6672, 35.1975, -15.3945, 0.45", "-48.2088, 34.749, -16.3689, 0.45", "-50.197, 34.0925, -17.5635, 0.91", "-51.2117, 33.7106, -18.2421, 0.23", "-52.6964, 33.0217, -19.3673, 0.91", "-53.2272, 32.7479, -19.7881, 0.91", "-53.8566, 32.4069, -20.307, 0.23", "-55.0072, 31.7215, -21.3093, 0.68", "-56.3, 30.8593, -22.4753, 0.23", "-57.6172, 29.9708, -23.6667, 1.14", "-58.3571, 29.472, -24.3565, 1.14", "-59.8131, 28.5258, -25.7438, 0.23", "-60.6891, 28.0194, -26.5639, 1.14", "-62.2776, 27.1709, -28.0539, 0.23", "-63.1953, 26.7427, -28.8357, 0.23", "-64.7604, 26.0693, -30.0849, 0.23", "-65.0619, 25.9364, -30.3019, 0.91", "-65.9722, 25.5463, -30.87, 1.59", "-68.064, 24.711, -32.0132, 0.23", "-70.1131, 23.9726, -32.9769, 1.36", "-71.8504, 23.3956, -33.6665, 0.91", "-74.343, 22.632, -34.4841, 0.23", "-76.2046, 22.0899, -35.032, 1.14", "-78.0946, 21.57, -35.5233, 0.23", "-79.229, 21.3135, -35.7641, 0.23", "-80.8852, 21.0024, -36.1046, 0.68", "-81.7633, 20.8707, -36.2886, 0.68", "-83.0019, 20.7098, -36.5707, 0.23", "-84.5755, 20.4809, -36.941, 0.91", "-85.9978, 20.2602, -37.3243, 0.23", "-86.6838, 20.1509, -37.5356, 0.91", "-87.8735, 19.9666, -37.9498, 0.23", "-90.0941, 19.6179, -38.7458, 1.14", "-90.9357, 19.4834, -39.0559, 0.23", "-92.118, 19.294, -39.5013, 0.68", "-93.6519, 19.0325, -40.0838, 0.23", "-94.843, 18.8385, -40.4895, 0.45", "-95.9083, 18.6527, -40.7682, 0.23", "-96.4374, 18.5617, -40.8727, 0.23", "-97.8829, 18.3129, -41.0327, 0.91", "-100.386, 17.8499, -41.1473, 0.23", "-102.157, 17.5213, -41.1721, 0.91", "-105.462, 16.9324, -41.1561, 0.23", "-106.353, 16.7725, -41.1384, 0.23", "-108.637, 16.3307, -41.049, 1.59", "-111.539, 15.7208, -40.828, 0.23", "-112.445, 15.5187, -40.7422, 0.91", "-113.023, 15.3892, -40.6845, 0.91", "-115.283, 14.8924, -40.4565, 0.23", "-117.349, 14.4036, -40.2622, 0.91", "-119.324, 13.9176, -40.1127, 0.23", "-120.383, 13.6535, -40.0331, 1.14", "-122.425, 13.1275, -39.9337, 0.23", "-123.504, 12.8346, -39.9289, 0.91", "-124.334, 12.6236, -39.9806, 0.23", "-125.413, 12.3611, -40.1608, 0.68", "-128.275, 11.6737, -40.8424, 0.23", "-129.477, 11.3785, -41.1543, 0.91", "-130.905, 11.0206, -41.5686, 0.23", "-132.563, 10.6221, -42.1015, 0.68", "-134.255, 10.2056, -42.6995, 0.23", "-135.513, 9.87706, -43.1859, 0.23", "-137.08, 9.40814, -43.8544, 0.91", "-138.849, 8.84314, -44.6096, 0.23", "-140.099, 8.43402, -45.1363, 1.14", "-141.92, 7.8102, -45.8861, 0.23", "-142.892, 7.50053, -46.2665, 0.91", "-144.436, 7.0986, -46.8886, 0.23", "-146.269, 6.74736, -47.6076, 0.91", "-147.31, 6.60466, -47.9781, 0.23", "-148.202, 6.53611, -48.2586, 0.68", "-149.179, 6.52562, -48.5598, 0.23", "-150.984, 6.60131, -49.0587, 0.91", "-152.779, 6.72839, -49.438, 0.23", "-153.67, 6.82051, -49.5766, 0.23", "-154.376, 6.8878, -49.6605, 0.91", "-155.137, 6.95017, -49.718, 0.23", "-157.108, 7.05962, -49.8134, 0.91", "-158.837, 7.11237, -49.7369, 0.23", "-160.181, 7.14187, -49.5347, 0.68", "-161.268, 7.14881, -49.2953, 0.23", "-163.572, 7.08797, -48.5925, 0.91", "-164.778, 7.04403, -48.1882, 0.23", "-167.126, 6.92662, -47.3195, 0.91", "-169.318, 6.80723, -46.4253, 0.23", "-170.724, 6.68317, -45.7579, 0.91", "-173.047, 6.49894, -44.4531, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "47.3698, 40.563, -10.6361, 0.23", "49.1767, 41.9371, -9.72565, 0.23", "50.3795, 42.7707, -9.092, 0.91", "51.9128, 43.7517, -8.19187, 0.23", "54.0808, 45.1056, -6.91482, 0.23", "54.7336, 45.5071, -6.53372, 0.91", "56.2216, 46.4565, -5.61722, 0.23", "57.3384, 47.1417, -4.8705, 0.68", "58.8978, 48.1642, -3.77961, 0.23", "60.017, 48.9821, -2.93079, 0.68", "61.4066, 50.1715, -1.88569, 0.23", "62.7088, 51.3656, -0.919248, 0.68", "63.3421, 51.9908, -0.477447, 0.23", "63.9828, 52.6328, -0.0700222, 0.91", "65.4414, 53.9826, 0.675603, 0.23", "66.565, 54.8979, 1.15266, 0.68", "68.2173, 56.0936, 1.70704, 0.23", "69.2806, 56.7377, 2.00674, 0.68", "71.5237, 57.9536, 2.68123, 0.23", "73.6455, 59.0137, 3.31764, 0.91", "75.0963, 59.7121, 3.67042, 0.23", "75.8495, 60.0723, 3.84398, 0.23", "78.4118, 61.4057, 4.41868, 0.68", "80.4864, 62.6162, 4.88139, 0.23", "81.7213, 63.4795, 5.15445, 0.91", "84.3575, 65.6024, 5.61092, 0.23", "85.0976, 66.2527, 5.68457, 0.23", "86.3007, 67.3874, 5.68738, 0.91", "88.064, 69.1427, 5.45008, 0.23", "89.3391, 70.4742, 5.16486, 0.91", "91.2536, 72.5182, 4.70226, 0.23", "92.6512, 74.024, 4.34931, 0.68", "94.3218, 75.7502, 3.83976, 0.23", "95.4606, 76.8648, 3.39914, 0.23", "96.5342, 77.8702, 2.84997, 0.91", "104.615, 81.6643, 3.33872, 0.91", "113.111, 83.3885, 5.26832, 0.91", "121.964, 83.5523, 5.00311, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "47.3698, 40.563, -10.6361, 0.23", "49.1112, 40.5999, -12.8378, 0.23", "50.579, 40.6052, -14.5999, 0.68", "52.7145, 40.5662, -17.105, 1.36", "55.1649, 40.4496, -19.8302, 0.23", "56.3883, 40.3744, -21.0909, 0.45", "58.3993, 40.2539, -23.0492, 0.45", "60.0857, 40.1563, -24.4656, 0.23", "61.5776, 40.0393, -25.5552, 1.14", "62.7758, 39.9715, -26.275, 1.14", "64.2137, 39.9629, -26.9742, 0.45", "67.9868, 40.242, -28.5031, 0.23", "69.6841, 40.4494, -29.0358, 1.14", "70.8996, 40.602, -29.3413, 0.23", "72.4215, 40.8386, -29.6405, 0.23", "74.6685, 41.1935, -30.0689, 0.91", "77.0937, 41.5838, -30.5916, 0.23", "77.7469, 41.6881, -30.7217, 0.68", "78.7899, 41.843, -30.9777, 0.68", "80.2851, 42.0477, -31.483, 0.23", "82.7455, 42.3489, -32.3563, 0.91", "85.731, 42.818, -33.446, 0.23", "87.1827, 43.0533, -33.9922, 1.14", "88.3004, 43.2168, -34.3938, 1.14", "91.945, 43.7347, -35.6446, 0.23", "93.8552, 43.9925, -36.2531, 0.68", "95.2608, 44.2171, -36.5782, 0.23", "98.1432, 44.7654, -37.0019, 1.14", "100.971, 45.48, -37.2808, 0.23", "102.341, 45.9408, -37.3096, 0.91", "103.151, 46.2905, -37.2809, 1.36", "105.646, 47.642, -37.2004, 0.23", "107.302, 48.6815, -37.0824, 0.91", "108.459, 49.5058, -36.9585, 0.91", "110.238, 50.8768, -36.7813, 0.23", "112.018, 52.214, -36.6207, 0.91", "114.678, 54.0698, -36.4369, 0.23", "116.391, 55.1714, -36.3591, 0.91", "118.642, 56.4496, -36.2445, 0.23", "119.296, 56.7935, -36.2055, 0.23", "121.129, 57.7031, -36.0843, 0.23", "123.395, 58.7461, -35.8729, 0.68", "125.075, 59.4468, -35.7366, 0.23", "126.949, 60.2349, -35.5709, 0.23", "128.918, 61.0152, -35.363, 0.68", "137.964, 61.9235, -39.2079, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "18.7262, 78.0599, -5.91229, 0.23", "16.8391, 79.2742, -6.26754, 0.23", "15.0419, 80.5674, -6.73397, 0.91", "12.4034, 82.8434, -7.56304, 0.23", "11.445, 83.8973, -8.03138, 1.14", "10.6432, 84.9889, -8.53112, 0.23", "9.84783, 86.2784, -9.10857, 0.68", "9.18016, 87.8871, -9.8399, 0.23", "8.67857, 89.8053, -10.7679, 1.36", "8.19691, 93.0135, -12.3613, 0.23", "8.04448, 94.6968, -13.1922, 0.91", "7.94201, 96.3703, -14.0066, 0.23", "7.86557, 98.3329, -14.9011, 0.68", "7.80883, 100.01, -15.6008, 0.23", "7.80882, 101.189, -16.0583, 1.14", "7.91935, 103.295, -16.8099, 0.23", "8.05284, 104.749, -17.3423, 0.23", "8.20776, 106.113, -17.8335, 0.91", "8.42986, 107.8, -18.4022, 0.23", "8.69628, 109.682, -18.9923, 0.23", "9.09197, 112.113, -19.7256, 1.14", "9.30524, 113.286, -20.0468, 1.14", "9.76227, 115.461, -20.6502, 0.23", "10.1229, 117.194, -21.1145, 0.23", "10.4046, 118.585, -21.4423, 0.23", "10.6001, 119.724, -21.7152, 0.23", "10.7312, 120.755, -21.9865, 0.45", "10.8511, 123.09, -22.8813, 0.23", "10.7955, 124.216, -23.4233, 0.91", "10.6589, 125.292, -24.0575, 0.91", "10.4015, 126.901, -25.1058, 0.68", "10.0526, 129.186, -26.6986, 1.36", "9.67653, 131.902, -28.6773, 0.23", "9.60552, 132.974, -29.4676, 0.23", "9.66823, 134.61, -30.6545, 0.23", "9.87486, 135.703, -31.4091, 1.14", "10.6385, 137.625, -32.4821, 0.23", "10.8786, 138.022, -32.6458, 0.68", "12.6257, 140.378, -33.3514, 0.23", "13.0916, 140.984, -33.4977, 1.14", "14.2132, 142.52, -33.7612, 0.23", "15.6719, 144.518, -34.0689, 0.91", "16.4685, 145.621, -34.1855, 0.23", "17.7587, 147.475, -34.3402, 0.68", "18.6552, 148.82, -34.3694, 0.68", "19.5115, 150.183, -34.3902, 0.23", "18.3996, 160.566, -37.5901, 0.23", "18.9092, 171.317, -39.5963, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "18.7262, 78.0599, -5.91229, 0.23", "19.2404, 78.8156, -5.7805, 0.23", "20.1207, 79.9887, -5.67299, 1.14", "21.4161, 81.6592, -5.57242, 0.23", "22.1665, 82.6418, -5.52415, 0.68", "22.8261, 83.5183, -5.4847, 0.23", "23.5683, 84.5151, -5.44131, 0.68", "24.7765, 86.1887, -5.44777, 0.23", "25.6081, 87.4235, -5.499, 0.91", "26.404, 88.7427, -5.56352, 0.23", "26.6538, 89.1941, -5.5568, 0.91", "27.5031, 90.8728, -5.4301, 0.23", "28.3877, 92.735, -5.20996, 0.91", "29.1727, 94.5108, -4.91003, 0.23", "29.4921, 95.258, -4.76507, 0.91", "30.4311, 97.3655, -4.25365, 0.23", "30.7595, 98.0314, -4.02754, 1.14", "31.051, 98.5277, -3.79363, 1.14", "31.5965, 99.2319, -3.31357, 0.23", "32.4064, 100.044, -2.63202, 0.91", "33.3619, 100.747, -1.90586, 0.23", "34.6435, 101.435, -1.05436, 0.23", "35.4984, 101.755, -0.470732, 0.91", "36.7882, 102.082, 0.400468, 0.23", "37.5591, 102.217, 0.90951, 0.91", "39.2476, 102.41, 1.96577, 0.23", "40.3263, 102.502, 2.58968, 0.68", "42.554, 102.645, 3.75873, 0.23", "43.4532, 102.686, 4.20541, 0.68", "44.1212, 102.708, 4.49899, 0.23", "45.2769, 102.739, 4.97237, 0.91", "46.019, 102.742, 5.23731, 0.23", "46.8491, 102.749, 5.49037, 0.23", "47.4788, 102.76, 5.64738, 0.23", "48.8251, 102.815, 6.00298, 0.91", "49.4496, 102.858, 6.17465, 0.23", "50.4102, 102.972, 6.39368, 0.68", "52.008, 103.251, 6.70014, 0.23", "52.6933, 103.417, 6.78632, 0.91", "54.0195, 103.837, 6.885, 0.23", "54.7189, 104.084, 6.91696, 0.91", "56.6428, 104.833, 6.94899, 0.23", "57.7975, 105.331, 6.91981, 0.91", "58.9901, 105.83, 6.8072, 0.23", "60.1116, 106.322, 6.62795, 0.68", "65.6977, 110.271, 7.40667, 0.68", "71.7537, 113.463, 7.17655, 0.68", "77.5663, 117.094, 7.64381, 0.68", "83.0505, 121.253, 8.06835, 0.68" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-169.977, -77.6652, 15.326, 0.23", "-172.02, -80.062, 15.6055, 0.23", "-173.283, -81.6099, 15.6693, 0.68", "-174.404, -83.0294, 15.6755, 0.23", "-176.006, -85.0745, 15.6501, 0.45", "-178.794, -88.6696, 15.5715, 0.23", "-180.583, -90.9559, 15.5092, 0.23", "-182.312, -93.287, 15.3606, 0.91", "-183.797, -95.3599, 15.2957, 0.23", "-184.423, -96.2603, 15.264, 0.23", "-185.344, -97.6245, 15.2152, 0.91", "-186.611, -99.6527, 15.1207, 0.23", "-187.282, -100.847, 15.113, 0.91", "-189.047, -104.566, 14.9284, 0.23", "-190.22, -107.445, 14.5895, 0.23", "-191.264, -110.168, 14.2341, 0.23", "-192.314, -113.134, 13.7925, 0.23", "-193.213, -115.977, 13.2956, 0.68", "-194.346, -119.858, 12.4727, 0.23", "-195.096, -122.975, 11.5869, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-169.977, -77.6652, 15.326, 0.23", "-172.814, -77.7936, 14.8667, 0.23", "-174.836, -77.9652, 14.621, 0.45", "-176.872, -78.1991, 14.4932, 0.23", "-177.881, -78.3244, 14.4134, 0.23", "-178.577, -78.4184, 14.3597, 0.23", "-179.494, -78.5449, 14.2492, 0.68", "-181.654, -78.9472, 13.9646, 0.23", "-182.782, -79.2059, 13.7969, 0.45", "-185.001, -79.7686, 13.3973, 0.23", "-187.395, -80.3782, 12.9415, 0.91", "-189.744, -80.9576, 12.4967, 0.23", "-191.675, -81.4516, 12.1107, 0.91", "-192.715, -81.7109, 11.9042, 0.23", "-193.351, -81.8701, 11.7735, 0.91", "-194.5, -82.1449, 11.5871, 0.23", "-195.993, -82.4383, 11.2078, 0.68", "-197.937, -82.7775, 10.624, 0.23", "-199.19, -82.9621, 10.1742, 0.68", "-200.621, -83.1995, 9.63257, 0.23", "-201.686, -83.3951, 9.16619, 0.91", "-205.173, -84.0943, 7.5214, 0.23", "-206.746, -84.4205, 6.72816, 0.23", "-207.773, -84.6194, 6.19603, 0.23", "-209.762, -85.008, 5.18663, 0.91", "-211.864, -85.4421, 4.11544, 0.23", "-213.041, -85.713, 3.53603, 0.23", "-214.077, -85.9611, 3.05086, 0.68", "-215.85, -86.3929, 2.14967, 0.23", "-217.014, -86.681, 1.53535, 0.91", "-218.812, -87.1247, 0.553487, 0.23", "-220.455, -87.5641, -0.27767, 0.91", "-222.544, -88.2188, -1.33005, 0.23", "-223.477, -88.5405, -1.79028, 0.23", "-224.8, -89.0463, -2.40974, 0.68", "-226.085, -89.5847, -2.96798, 0.23", "-227.397, -90.1929, -3.47265, 1.14", "-228.789, -90.8645, -3.9803, 0.23", "-230.076, -91.5136, -4.38646, 0.23", "-231.75, -92.4002, -4.92205, 0.91", "-233.23, -93.2111, -5.36327, 0.23", "-235.03, -94.2137, -5.99057, 1.14", "-235.815, -94.6366, -6.29946, 0.23", "-236.415, -94.9301, -6.5363, 0.91", "-237.86, -95.6454, -7.11677, 0.23", "-239.575, -96.4595, -7.88136, 1.14", "-242.189, -97.6305, -9.1337, 0.23", "-243.173, -98.0629, -9.62383, 0.23", "-244.427, -98.6495, -10.2996, 0.45", "-251.023, -101.372, -12.3287, 0.45" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "11.1129, -38.018, 28.1024, 0.23", "12.5655, -39.5275, 28.9382, 0.23", "14.0981, -41.2064, 29.8585, 0.91", "17.8175, -45.2935, 32.0211, 0.23", "20.5118, -48.2212, 33.5516, 0.91", "24.2481, -52.2586, 35.5317, 0.23", "25.4837, -53.6522, 36.1661, 0.23", "28.1235, -56.9334, 37.4593, 0.23", "28.9544, -58.1168, 37.9907, 0.68", "30.4654, -60.5683, 39.1259, 0.23", "31.639, -62.8255, 40.3616, 0.91", "33.352, -66.9327, 42.9208, 0.23", "33.6569, -67.7368, 43.5058, 0.91", "36.0588, -74.3213, 48.6632, 0.23", "36.5678, -75.6493, 49.7818, 0.91", "38.0356, -78.8587, 52.8989, 0.23", "38.8818, -80.2297, 54.5486, 0.91", "42.073, -83.921, 59.9037, 0.23", "42.9852, -84.7437, 61.1615, 0.23", "44.2431, -85.6764, 62.6529, 0.91", "48.2058, -88.2894, 66.9435, 0.23", "52.6609, -90.9254, 71.6064, 0.23", "57.0396, -93.4463, 76.1041, 0.23", "60.1479, -95.2908, 79.2637, 0.23", "64.029, -97.664, 83.3405, 0.23", "66.1628, -99.0263, 85.6055, 0.91", "71.3397, -102.347, 90.6043, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "11.1129, -38.018, 28.1024, 0.23", "11.5483, -41.8463, 28.0507, 0.23", "11.8045, -44.1602, 28.1126, 0.23", "12.1692, -47.6686, 28.2536, 0.91", "12.4234, -50.594, 28.472, 0.23", "12.5198, -51.9044, 28.5794, 0.23", "12.6934, -53.9035, 28.7451, 1.14", "13.0145, -57.2693, 29.0849, 0.23", "13.3055, -59.5022, 29.3156, 0.23", "13.7518, -61.9267, 29.5387, 0.91", "14.3131, -64.1325, 29.6737, 0.23", "15.15, -66.6398, 29.7969, 0.23", "15.6274, -67.8051, 29.8274, 0.91", "16.4073, -69.5305, 29.9225, 0.68", "17.5198, -71.9328, 30.1983, 0.23", "18.1177, -73.2571, 30.3916, 0.91", "19.703, -76.9973, 31.1861, 0.23", "20.2715, -78.5998, 31.5834, 0.91", "21.659, -83.3395, 32.8353, 0.23", "22.1938, -85.8797, 33.5638, 0.91", "22.3647, -87.3096, 34.0176, 0.91", "22.4995, -90.3105, 35.0052, 0.23", "22.421, -92.5198, 35.7298, 0.91", "22.1773, -94.4134, 36.3979, 0.23", "21.6911, -96.4023, 37.1653, 0.91", "20.965, -98.4618, 38.0783, 0.23", "20.4857, -99.542, 38.6141, 1.14", "20.0566, -100.334, 39.0497, 0.23", "18.2347, -103.618, 41.1735, 0.91", "17.2688, -105.353, 42.3635, 0.23", "16.7844, -106.265, 42.98, 1.14", "16.2249, -107.468, 43.8181, 0.23", "15.7491, -108.722, 44.7295, 0.91", "15.1162, -111.028, 46.4339, 0.23", "14.9321, -112.064, 47.1833, 0.91", "14.8404, -112.673, 47.6139, 0.23", "14.4663, -115.547, 49.741, 0.91", "14.1509, -117.919, 51.6091, 0.23", "13.8112, -120.494, 53.6504, 0.91", "13.5324, -122.441, 55.2136, 0.23", "13.3525, -123.636, 56.2152, 1.14", "12.9581, -125.986, 58.2105, 0.23", "12.4842, -128.198, 60.0261, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.49825, -32.2111, -2.57778, 0.23", "9.79762, -35.1624, -0.550226, 0.23", "10.4912, -36.5561, 0.673936, 0.23", "11.4936, -38.3496, 2.37643, 0.91", "11.9172, -39.0647, 3.04776, 0.23", "12.8791, -40.5866, 4.45851, 0.68", "13.8035, -41.9211, 5.83884, 0.23", "15.4963, -44.2509, 8.45533, 0.68", "15.9702, -44.8606, 9.19358, 0.68", "16.6672, -45.7205, 10.2134, 0.23", "17.6871, -46.9826, 11.6991, 1.14", "19.5443, -49.5563, 14.3578, 0.23", "19.8509, -50.0842, 14.8171, 0.23", "20.14, -50.6598, 15.2368, 0.23", "20.6675, -51.8395, 16.0428, 1.14", "21.7431, -54.4782, 17.8838, 0.23", "22.4198, -56.3518, 19.1193, 1.14", "23.5999, -59.7851, 21.3105, 0.23", "24.4683, -62.282, 22.9506, 0.23", "25.0746, -63.9832, 24.0755, 0.68", "26.244, -67.3135, 26.2261, 0.23", "26.7374, -68.759, 27.1319, 1.14", "27.5982, -71.3208, 28.7464, 0.23", "27.9177, -72.3808, 29.3422, 0.23", "28.2364, -73.4843, 29.8606, 0.23", "28.7679, -75.2751, 30.6487, 0.91", "29.2573, -76.9033, 31.3724, 0.23", "29.7252, -78.401, 32.1158, 0.91", "30.2012, -79.8543, 32.9613, 0.23", "30.7607, -81.4042, 34.0666, 0.91", "31.4336, -83.2705, 35.6803, 0.23", "32.6772, -86.5932, 38.8274, 0.23", "32.9749, -87.3633, 39.4883, 0.68", "33.9838, -89.7199, 41.4051, 1.14", "35.1693, -92.0126, 43.1772, 0.23", "36.9821, -95.1251, 45.3527, 0.23", "37.8584, -96.5056, 46.165, 0.23", "40.6832, -100.766, 48.2457, 0.23", "42.077, -102.88, 49.1294, 0.68", "44.9232, -107.262, 50.812, 0.23", "46.0652, -108.964, 51.3988, 0.68", "48.1241, -111.89, 52.3559, 0.23", "49.3791, -113.682, 53.0397, 0.23", "50.6744, -115.569, 53.9484, 0.91", "53.3614, -120.024, 55.9036, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.49825, -32.2111, -2.57778, 0.23", "6.97048, -33.9684, -2.69429, 0.23", "5.4949, -36.0182, -2.73243, 0.68", "3.75749, -38.6967, -2.8331, 0.68", "2.89267, -40.1499, -2.8836, 0.68", "2.13209, -41.5463, -2.91035, 0.68", "1.10687, -43.5272, -2.91794, 0.23", "0.378394, -45.2762, -2.84014, 0.23", "-0.39046, -47.5201, -2.70393, 0.23", "-0.867112, -49.0395, -2.56183, 0.23", "-1.54503, -51.0929, -2.35853, 1.14", "-1.92226, -52.2012, -2.23073, 1.14", "-2.93679, -54.9455, -1.71194, 0.23", "-3.71017, -56.9938, -1.18144, 0.91", "-4.47829, -59.138, -0.56729, 0.91", "-4.76603, -59.9524, -0.3355, 0.91", "-5.75418, -62.7803, 0.379188, 0.23", "-6.68154, -65.6509, 1.07374, 0.23", "-7.59074, -68.63, 1.77456, 0.23", "-8.14537, -70.654, 2.2322, 0.23", "-8.68625, -72.8357, 2.63764, 0.91", "-9.5972, -76.8156, 3.2354, 0.23", "-10.2852, -80.0288, 3.59338, 0.91", "-10.5326, -81.2586, 3.68601, 0.91", "-10.828, -82.918, 3.82174, 0.23", "-11.1573, -85.0153, 4.039, 0.68", "-11.5627, -87.555, 4.32197, 0.23", "-11.7417, -88.6317, 4.45475, 0.68", "-12.2226, -91.089, 4.73817, 0.23", "-12.4655, -92.1647, 4.88469, 1.14", "-12.9007, -93.8187, 5.15801, 1.14", "-13.6969, -96.3753, 5.65805, 0.23", "-14.7212, -99.057, 6.2026, 0.23", "-15.3883, -100.461, 6.51049, 0.91", "-16.1144, -101.742, 6.81323, 0.91", "-17.1721, -103.42, 7.3353, 0.23", "-18.2722, -105.023, 7.94774, 0.91", "-18.8872, -105.847, 8.32419, 0.91", "-20.4623, -107.715, 9.34067, 0.23", "-21.2512, -108.63, 9.86888, 0.23", "-23.2048, -110.918, 11.2271, 0.68", "-24.0594, -111.979, 11.8469, 0.23", "-24.6201, -112.76, 12.2705, 1.14", "-25.1311, -113.534, 12.6502, 1.14", "-26.435, -115.682, 13.5765, 0.23", "-27.0904, -116.758, 13.9788, 0.23", "-28.0839, -118.512, 14.4913, 1.14", "-29.0576, -120.427, 14.9406, 0.23", "-29.4407, -121.226, 15.0612, 0.68", "-29.9772, -122.488, 15.1641, 0.23", "-30.5684, -124.082, 15.2022, 0.23", "-31.1608, -126.168, 15.113, 0.68", "-31.7214, -128.693, 14.8915, 0.23", "-32.049, -131.067, 14.6306, 0.23", "-32.1855, -133.477, 14.3453, 0.45", "-32.1401, -134.872, 14.1434, 1.59", "-31.7325, -138.632, 13.5724, 0.23", "-31.6005, -139.446, 13.4447, 0.23", "-31.077, -141.809, 13.1132, 1.14", "-30.6866, -143.334, 12.919, 1.14", "-30.0006, -145.925, 12.5729, 0.23", "-29.5683, -147.521, 12.3566, 0.91", "-28.7097, -150.677, 11.9658, 0.23", "-28.4116, -151.973, 11.7997, 0.23", "-28.0595, -153.82, 11.5371, 1.14", "-27.8819, -154.902, 11.3828, 1.14", "-27.241, -159.333, 10.7131, 0.23", "-26.9489, -161.463, 10.3454, 1.14", "-26.6239, -164.418, 9.75412, 0.23", "-26.4523, -166.34, 9.30841, 1.14", "-26.4048, -166.9, 9.16226, 1.14", "-26.2111, -168.486, 8.80026, 0.23", "-26.0378, -169.294, 8.68429, 0.68", "-25.3781, -171.088, 8.62329, 0.23", "-24.4789, -172.47, 8.81913, 1.14", "-23.6402, -173.505, 9.08799, 1.14", "-21.4487, -175.894, 9.82439, 0.23", "-20.2049, -177.132, 10.2354, 0.91", "-19.4962, -177.836, 10.4206, 0.91", "-17.3611, -179.996, 10.8029, 0.23", "-16.4328, -181.045, 10.8852, 1.14", "-15.3918, -182.528, 10.8313, 1.36", "-14.1101, -184.829, 10.53, 0.23", "-12.879, -187.44, 10.1251, 0.23", "-12.123, -189.237, 9.84331, 0.91", "-11.5688, -190.711, 9.61239, 0.91", "-10.3033, -194.132, 9.13745, 0.23", "-9.75606, -195.654, 8.93445, 1.14", "-8.68252, -198.597, 8.59421, 0.23", "-8.05148, -200.322, 8.46485, 1.14", "-7.41514, -202.156, 8.37653, 0.23", "-7.06841, -203.194, 8.33184, 0.91", "-6.31558, -206.229, 8.30313, 0.23", "-6.10909, -208.17, 8.34594, 1.59", "-6.29544, -210.75, 8.51971, 0.23", "-6.58812, -212.219, 8.78214, 0.91", "-6.79441, -212.852, 8.96788, 0.91", "-7.93317, -215.599, 10.071, 0.23", "-8.6418, -216.987, 10.7963, 1.14", "-9.14702, -217.901, 11.3689, 1.14", "-10.4911, -220.459, 13.0822, 0.23", "-10.8672, -221.338, 13.6365, 0.91", "-11.4258, -222.954, 14.6308, 0.23", "-11.5893, -223.661, 15.0453, 0.91", "-11.8824, -225.44, 15.8552, 0.23", "-12.1534, -227.23, 16.4174, 0.91", "-12.6385, -229.913, 16.808, 0.23", "-12.8967, -231.206, 16.8641, 0.23", "-13.373, -233.168, 16.7328, 1.14", "-14.148, -236.062, 16.3186, 0.23", "-14.7749, -238.255, 15.784, 1.36", "-15.6479, -241.051, 14.9583, 0.23", "-16.1424, -242.63, 14.4237, 1.14", "-16.7587, -244.699, 13.6872, 0.23", "-17.1613, -246.038, 13.2117, 0.68", "-18.0526, -249.08, 12.2172, 0.23", "-18.3742, -250.317, 11.8316, 0.91", "-18.7894, -252.378, 11.2866, 0.23", "-18.9891, -253.72, 10.9973, 0.23", "-19.1614, -255.401, 10.6906, 0.23", "-21.5206, -264.326, 12.7239, 0.23", "-24.218, -273.032, 15.1688, 0.23", "-26.3411, -281.876, 17.7485, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "57.756, -220.462, -132.939, 0.23", "59.9171, -227.278, -137.717, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "57.756, -220.462, -132.939, 0.23", "58.252, -227.34, -137.211, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "49.4393, 38.5726, -1.40899, 0.23", "51.291, 38.3545, 0.163555, 0.23", "53.1232, 38.2292, 1.44768, 0.68", "55.8761, 38.1407, 3.2564, 0.23", "57.9816, 38.1751, 4.49509, 0.91", "60.2228, 38.2218, 5.69812, 0.23", "62.1354, 38.2623, 6.63903, 1.14", "66.4063, 38.4929, 8.55919, 0.23", "68.4415, 38.5847, 9.34208, 0.68", "73.8772, 38.8856, 11.3037, 0.23", "76.3976, 39.0292, 12.2289, 0.68", "80.8496, 39.3772, 13.9383, 0.23", "83.6474, 39.6331, 15.0481, 0.68", "89.6469, 40.3019, 17.4506, 0.23", "94.0579, 40.832, 19.1934, 0.23", "97.9378, 41.3655, 20.7662, 0.68", "101.968, 42.0298, 22.4389, 0.23", "104.374, 42.4988, 23.4423, 0.68", "107.338, 43.1915, 24.622, 0.23", "110.467, 44.1359, 25.8663, 0.23", "111.912, 44.5994, 26.3363, 0.23", "112.872, 44.931, 26.55, 0.23", "114.823, 45.6409, 26.923, 0.23", "118.1, 47.0034, 27.5324, 0.68", "119.99, 47.8862, 27.8524, 0.23", "121.508, 48.6729, 28.0228, 0.23", "124.701, 50.3033, 28.2015, 1.36", "134.857, 51.8157, 33.1919, 1.36", "144.396, 52.1192, 39.4965, 1.36", "154.409, 54.1681, 44.5831, 1.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "49.4393, 38.5726, -1.40899, 0.23", "50.0932, 39.0122, -1.24626, 0.23", "51.9276, 40.2452, -0.789788, 1.14", "53.9785, 41.6237, -0.279439, 0.23", "54.9137, 42.2523, -0.046724, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-34.7071, -23.2203, -65.4637, 0.23", "-37.861, -28.8391, -71.8471, 0.23", "-40.8304, -34.2375, -78.4898, 0.23", "-43.1588, -40.6347, -84.5643, 0.23", "-44.7613, -47.8069, -90.0633, 0.23", "-46.3277, -53.7, -96.8206, 0.23", "-47.0334, -59.9863, -103.408, 0.23", "-48.2887, -66.8357, -109.363, 0.23", "-48.232, -73.3515, -115.789, 0.23", "-47.6605, -80.6127, -121.413, 0.23", "-46.359, -87.3787, -127.471, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-34.7071, -23.2203, -65.4637, 0.23", "-36.6407, -27.346, -70.5614, 0.23", "-40.0168, -31.7252, -74.5737, 0.23", "-42.7075, -36.6938, -78.4887, 0.23", "-45.4823, -41.6082, -82.4059, 0.23", "-47.8395, -45.8751, -87.2042, 0.23", "-51.2857, -50.0937, -91.3121, 0.23", "-54.504, -54.8882, -95.008, 0.23", "-57.6204, -59.4543, -99.0456, 0.23", "-59.5795, -64.1217, -103.687, 0.23", "-61.7065, -68.7692, -108.268, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "33.3569, 27.9729, -58.6946, 0.23", "40.8385, 28.9944, -65.995, 0.23", "48.6598, 29.3357, -73.0019, 0.23", "57.7668, 31.3645, -77.8356, 0.23", "65.9016, 34.4213, -83.7631, 0.23", "74.6474, 39.2543, -87.2306, 0.23", "82.4318, 45.5311, -90.8537, 0.23", "90.3753, 52.6512, -91.7523, 0.23", "99.0505, 58.4872, -93.663, 0.23", "107.889, 64.3785, -94.3099, 0.23", "117.057, 69.6917, -94.9279, 0.23", "127.005, 73.2071, -95.1135, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "33.3569, 27.9729, -58.6946, 0.23", "38.9164, 30.1502, -62.8531, 0.23", "44.4305, 32.1495, -67.1528, 0.23", "50.6862, 32.6021, -70.8138, 0.23", "57.2008, 32.0797, -73.9949, 0.23", "63.2291, 31.2585, -77.9847, 0.23", "69.3663, 29.5043, -81.5174, 0.23", "75.7702, 27.2268, -84.199, 0.23", "81.7852, 24.5792, -87.4312, 0.23", "87.71, 21.0611, -90.0071, 0.23", "92.9256, 16.7301, -92.9833, 0.23", "98.2204, 11.9445, -95.0161, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-85.3624, 62.6009, -12.5727, 0.23", "-87.6455, 65.875, -13.1905, 0.23", "-89.5873, 68.5241, -13.5929, 0.23", "-91.8159, 71.7456, -14.0324, 0.45", "-93.1907, 73.8952, -14.2335, 0.23", "-94.5024, 76.2762, -14.2524, 0.68", "-96.227, 79.4065, -14.2773, 0.23", "-98.1781, 83.1091, -14.1144, 0.68", "-99.1621, 85.1081, -13.9892, 0.23", "-100.281, 87.6379, -13.6518, 0.68", "-102.163, 92.842, -12.6016, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-85.3624, 62.6009, -12.5727, 0.23", "-87.7012, 64.3325, -12.4173, 0.23", "-89.1276, 65.3881, -12.1046, 0.23", "-90.6656, 66.5261, -11.7674, 0.23", "-93.3397, 68.505, -11.1811, 0.68", "-96.3833, 70.7571, -10.5138, 0.23", "-100.022, 73.4493, -9.71614, 0.23", "-103.349, 76.0401, -8.72967, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "83.0505, 121.253, 8.06835, 0.23", "90.4574, 126.482, 10.1454, 0.23", "98.5686, 130.889, 11.0057, 0.23", "106.31, 136.054, 11.2553, 0.23", "113.718, 141.438, 9.4438, 0.23", "120.758, 147.618, 9.49594, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "83.0505, 121.253, 8.06835, 0.23", "92.2438, 127.279, 9.72302, 0.23", "100.982, 134.111, 10.9251, 0.23", "109.477, 140.919, 13.3796, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "12.4842, -128.198, 60.0261, 0.23", "14.1168, -131.703, 60.8844, 0.23", "15.5534, -134.946, 61.5523, 0.68", "17.2265, -138.96, 62.2256, 0.23", "18.2733, -141.568, 62.5889, 0.91", "19.0532, -143.499, 62.8608, 0.23", "19.6201, -144.858, 63.092, 0.23", "20.567, -147.053, 63.5417, 0.68", "21.5863, -149.237, 63.9309, 0.23", "22.3546, -150.78, 64.2675, 0.91", "24.0624, -153.912, 65.3048, 0.23", "26.32, -157.727, 66.8498, 0.91", "27.5092, -159.596, 67.7331, 0.23", "28.8682, -161.585, 68.806, 0.91", "31.5542, -165.435, 71.1504, 0.23", "33.6569, -168.466, 73.1071, 0.23", "34.6694, -169.922, 74.0851, 0.91", "36.2581, -172.219, 75.6972, 0.23", "37.5184, -174.093, 77.0768, 0.91", "39.9862, -177.717, 79.8463, 0.23", "40.9318, -179.051, 80.7928, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "12.4842, -128.198, 60.0261, 0.23", "10.9809, -132.027, 61.9282, 0.23", "9.29687, -136.402, 64.0043, 0.23", "8.03754, -139.668, 65.6767, 0.68", "7.38556, -141.435, 66.6777, 0.23", "6.94092, -142.585, 67.3512, 0.91", "5.12476, -146.962, 70.1034, 0.23", "4.42178, -148.582, 71.1822, 0.91", "2.71107, -152.264, 73.7038, 0.23", "1.10311, -155.681, 76.0125, 0.23", "0.476276, -157.097, 76.9116, 0.91", "-1.45802, -161.666, 79.4511, 0.23", "-1.96209, -162.841, 79.9516, 0.91", "-2.68307, -164.676, 80.4852, 0.23", "-3.32001, -166.476, 80.7829, 1.14", "-4.56345, -170.262, 81.099, 0.23", "-5.74819, -174.287, 81.3263, 0.91", "-6.95377, -178.712, 81.3241, 0.23", "-7.94473, -182.342, 81.3471, 0.68", "-8.9143, -185.655, 81.3761, 0.23", "-9.70357, -188.111, 81.3723, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "54.9137, 42.2523, -0.046724, 0.23", "57.0037, 41.9307, 2.03507, 0.23", "60.4378, 41.7547, 4.76867, 0.23", "63.1786, 41.817, 6.61542, 0.91", "64.8489, 41.9726, 7.62932, 0.23", "66.1393, 42.1554, 8.37498, 0.91", "68.8241, 42.5862, 9.76266, 0.23", "71.9727, 43.2999, 11.1359, 0.23", "74.7453, 43.989, 12.1246, 0.23", "78.1581, 44.8078, 13.2426, 0.23", "81.0352, 45.4415, 14.1233, 0.91", "83.6392, 46.0096, 14.9333, 0.23", "85.5038, 46.4426, 15.5474, 0.68", "87.732, 46.9812, 16.3581, 0.23", "89.4434, 47.4557, 17.0372, 0.23", "90.1974, 47.706, 17.3591, 0.23", "92.5472, 48.6919, 18.5279, 0.91", "94.2119, 49.5474, 19.4731, 0.23", "95.3811, 50.2533, 20.1768, 0.91", "98.101, 52.034, 21.664, 0.23", "100.444, 53.6825, 22.7969, 0.23", "102.045, 54.8685, 23.4853, 0.23", "103.432, 55.9219, 24.009, 0.68", "105.848, 57.7146, 24.8063, 0.23", "109.593, 60.4199, 25.8995, 0.23", "111.969, 61.9923, 26.4111, 0.23", "113.154, 62.6967, 26.6189, 0.23", "114.865, 63.5814, 26.8568, 0.23", "116.422, 64.2861, 27.0692, 0.68", "117.269, 64.5836, 27.2028, 0.68", "119.376, 65.1387, 27.8149, 0.23", "121.071, 65.468, 28.3514, 0.68", "122.28, 65.6687, 28.7537, 0.23", "123.709, 65.9161, 29.2402, 0.68", "126.392, 66.4694, 30.2014, 0.23", "128.674, 66.9846, 31.151, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "54.9137, 42.2523, -0.046724, 0.68", "56.6107, 43.3883, -0.31636, 0.68", "57.7203, 44.1084, -0.431874, 0.68", "60.3242, 45.7552, -0.608345, 0.23", "62.11, 46.8933, -0.669272, 0.23", "64.5669, 48.4492, -0.657538, 0.91", "67.4925, 50.2964, -0.561462, 0.23", "68.2051, 50.7499, -0.514761, 1.36", "68.9064, 51.2171, -0.43961, 1.36", "70.8335, 52.7296, -0.0110875, 0.23", "72.6434, 54.4761, 0.498231, 0.23", "73.5968, 55.5475, 0.786083, 0.23", "74.3433, 56.4871, 0.982014, 1.14", "75.7359, 58.2308, 1.15724, 1.14", "78.3559, 61.3765, 1.09016, 0.23", "79.7935, 62.9259, 0.792094, 0.68", "81.2484, 64.2554, 0.360472, 0.23", "83.3374, 65.8213, -0.279073, 0.68", "86.4871, 67.7279, -1.2091, 0.23", "88.5031, 68.6889, -1.69969, 0.23", "91.3375, 69.7184, -2.23733, 1.14", "94.3164, 70.5426, -2.41413, 0.23", "96.778, 71.0562, -2.19542, 0.68", "97.8853, 71.2274, -1.90163, 0.23", "100.804, 71.613, -0.620415, 0.91", "102.061, 71.7791, 0.0536511, 0.91", "104.116, 72.0634, 1.278, 0.23", "105.461, 72.2724, 2.04767, 0.23", "106.252, 72.4311, 2.46333, 0.23", "108.487, 73.0153, 3.48902, 0.68", "110.987, 73.8782, 4.41135, 0.23", "112.229, 74.3795, 4.77844, 0.68", "113.518, 74.9751, 5.03508, 0.23", "114.742, 75.5349, 5.1591, 0.23", "116.278, 76.1852, 5.24563, 0.23", "117.395, 76.625, 5.27898, 0.68", "120.328, 77.6593, 5.37897, 0.23", "122.502, 78.3811, 5.43843, 1.14", "125.603, 79.3195, 5.52406, 0.23", "128.324, 80.0541, 5.6198, 0.23", "130.252, 80.5405, 5.69759, 0.91", "133.538, 81.2886, 5.93205, 0.23", "143.909, 88.1104, 5.47341, 0.23", "154.94, 93.6568, 4.65618, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-46.359, -87.3787, -127.471, 0.23", "-49.2302, -97.142, -131.619, 0.23", "-53.9141, -105.942, -136.032, 0.23", "-59.2945, -115.012, -138.756, 0.23", "-64.1002, -124.655, -140.57, 0.23", "-67.5352, -135.072, -140.472, 0.23", "-71.1232, -145.274, -138.898, 0.23", "-73.4168, -155.783, -136.818, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-46.359, -87.3787, -127.471, 0.23", "-46.8381, -92.9781, -135.922, 0.23", "-48.3676, -99.3211, -143.717, 0.23", "-48.5248, -104.969, -152.158, 0.23", "-49.3586, -111.289, -160.093, 0.23", "-49.8137, -115.959, -169.04, 0.23", "-49.915, -119.606, -178.414, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-61.7065, -68.7692, -108.268, 0.23", "-65.4055, -75.3329, -114.555, 0.23", "-69.4173, -82.3234, -120.175, 0.23", "-73.7834, -89.4218, -125.371, 0.23", "-77.9463, -96.5818, -130.664, 0.23", "-81.9758, -102.918, -136.953, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-61.7065, -68.7692, -108.268, 0.23", "-65.2767, -75.5255, -114.908, 0.23", "-66.9733, -83.1662, -121.465, 0.23", "-67.1379, -90.9215, -128.162, 0.23", "-68.431, -98.5257, -134.863, 0.23", "-71.1646, -105.741, -141.482, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "127.005, 73.2071, -95.1135, 0.23", "132.176, 76.0127, -97.1018, 0.23", "137.126, 77.8521, -100.323, 0.23", "141.913, 79.1451, -104.01, 0.23", "146.383, 81.538, -107.576, 0.23", "150.837, 84.4656, -110.771, 0.23", "155.629, 87.5289, -113.287, 0.23", "160.694, 90.6105, -115.167, 0.23", "165.772, 93.6105, -117.129, 0.23", "171.433, 96.0924, -117.616, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "127.005, 73.2071, -95.1135, 0.23", "136.121, 78.9253, -98.6521, 0.23", "144.573, 84.2473, -103.987, 0.23", "153.382, 89.5416, -108.729, 0.23", "161.726, 96.5683, -111.981, 0.23", "170.028, 103.644, -115.242, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "98.2204, 11.9445, -95.0161, 0.23", "106.284, 8.97546, -100.964, 0.23", "114.051, 5.00956, -106.77, 0.23", "122.377, 2.09071, -112.358, 0.23", "129.13, -1.30772, -119.634, 0.23", "136.327, -3.79238, -126.808, 0.23", "142.543, -5.92975, -134.963, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "98.2204, 11.9445, -95.0161, 0.23", "105.931, 8.8357, -101.204, 0.23", "113.102, 7.45107, -108.539, 0.23", "121.112, 6.04615, -114.92, 0.23", "128.88, 5.37325, -121.7, 0.23", "136.436, 6.22905, -128.685, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "120.758, 147.618, 9.49594, 0.23", "130.246, 154.078, 10.2442, 0.23", "138.995, 161.338, 12.2239, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "120.758, 147.618, 9.49594, 0.23", "127.635, 152.5, 9.53767, 0.23", "134.248, 157.77, 9.61654, 0.23", "139.702, 164.208, 10.7895, 0.23", "144.261, 171.358, 12.024, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "40.9318, -179.051, 80.7928, 0.23", "44.639, -183.352, 84.4984, 0.23", "46.487, -185.497, 86.3456, 0.91", "51.4467, -191.252, 91.3032, 0.23", "53.3667, -193.48, 93.2224, 0.68", "57.1458, -197.865, 96.9999, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "40.9318, -179.051, 80.7928, 0.23", "41.3179, -181.654, 82.0939, 0.23", "41.7959, -184.878, 83.7049, 0.68", "42.099, -186.922, 84.7266, 0.23", "42.3112, -188.353, 85.4416, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.70357, -188.111, 81.3723, 0.23", "-9.13502, -189.764, 82.2478, 0.23", "-8.7499, -190.555, 82.6644, 0.68", "-7.05458, -193.563, 83.8774, 0.23", "-6.78998, -194.033, 84.0668, 0.23", "-5.9416, -195.538, 84.6738, 0.23", "-4.78819, -197.584, 85.4991, 0.91", "-3.9574, -198.932, 86.0775, 0.23", "-2.65724, -200.704, 86.7454, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.70357, -188.111, 81.3723, 0.23", "-10.5305, -189.079, 81.995, 0.23", "-11.2763, -189.916, 82.5126, 0.91", "-12.3937, -191.132, 83.3105, 0.23", "-12.6688, -191.415, 83.5075, 0.68", "-13.5562, -192.329, 84.1403, 0.23", "-13.8356, -192.613, 84.3704, 1.14", "-14.1387, -192.912, 84.6557, 1.14", "-15.1763, -194.027, 85.6969, 0.23", "-15.885, -194.828, 86.4347, 1.14", "-16.1063, -195.091, 86.6823, 1.14", "-17.3594, -196.662, 88.1801, 0.23", "-17.7517, -197.179, 88.703, 0.23", "-18.4845, -198.203, 89.8073, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "128.674, 66.9846, 31.151, 0.23", "129.168, 68.6863, 31.5161, 0.23", "129.46, 69.5363, 31.7007, 0.91", "131.352, 73.9898, 32.7442, 0.23", "132.684, 76.4981, 33.4778, 0.68", "133.961, 78.4181, 34.1528, 0.23", "135.314, 80.1876, 34.8388, 0.91", "136.37, 81.304, 35.3448, 0.23", "138.002, 82.732, 36.0821, 0.68", "140.451, 84.448, 37.1136, 0.23", "143.0, 86.0125, 38.2041, 0.23", "144.402, 86.7814, 38.7752, 0.23", "145.737, 87.4953, 39.3364, 0.91", "146.681, 87.9696, 39.742, 0.91", "154.338, 93.6309, 42.9543, 0.91", "161.814, 99.2261, 46.6492, 0.91", "167.795, 106.178, 50.8707, 0.91", "174.487, 113.307, 53.5023, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "128.674, 66.9846, 31.151, 0.23", "129.658, 67.0921, 31.6399, 0.23", "131.724, 67.2818, 32.6479, 0.45", "133.895, 67.4489, 33.6953, 0.23", "136.071, 67.6328, 34.8093, 0.68", "138.335, 67.865, 35.9859, 0.23", "140.838, 68.1389, 37.2908, 0.68", "141.875, 68.2729, 37.8295, 0.23", "142.952, 68.4165, 38.3858, 0.68", "145.121, 68.6976, 39.4852, 0.23", "147.942, 69.1265, 40.9682, 1.14", "149.32, 69.3624, 41.7013, 0.23", "149.964, 69.487, 42.0853, 0.91", "151.389, 69.8135, 42.9751, 0.23", "152.261, 70.0312, 43.5197, 1.14", "154.094, 70.4851, 44.6486, 0.23", "156.211, 71.0482, 46.1187, 0.91", "158.366, 71.628, 47.6757, 0.23", "160.456, 72.1938, 49.1782, 0.68", "163.02, 72.8918, 50.9793, 0.23", "164.129, 73.1924, 51.7826, 0.68", "166.5, 73.8116, 53.562, 0.23", "168.781, 74.391, 55.2844, 0.68", "170.845, 74.9208, 56.8523, 0.23", "172.457, 75.3403, 58.1111, 0.23", "176.386, 76.3528, 61.1425, 0.23", "179.063, 77.0414, 63.1025, 0.23", "181.078, 77.5596, 64.4834, 0.68", "184.592, 78.5408, 66.9164, 0.23", "186.938, 79.2273, 68.5063, 0.23", "189.276, 79.9733, 70.0841, 0.23", "191.741, 80.7869, 71.6352, 0.45", "192.834, 81.1604, 72.3093, 0.68", "196.509, 82.4634, 74.6147, 0.23", "198.349, 83.1209, 75.7632, 0.68", "201.562, 84.466, 77.9687, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "154.94, 93.6568, 4.65618, 0.23", "159.625, 96.0767, 4.91656, 0.23", "164.209, 98.4913, 5.86308, 0.23", "169.075, 100.36, 6.5422, 0.23", "173.914, 101.935, 7.80896, 0.23", "178.546, 103.053, 9.97556, 0.23", "183.043, 103.307, 12.6523, 0.23", "187.37, 104.272, 15.4348, 0.23", "191.442, 105.733, 18.3809, 0.23", "195.936, 106.94, 20.7765, 0.23", "200.042, 108.384, 23.6847, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "154.94, 93.6568, 4.65618, 0.23", "165.834, 99.261, 5.76118, 0.23", "176.765, 104.523, 7.67525, 0.23", "187.291, 110.955, 8.0797, 0.23", "198.34, 116.344, 7.45541, 0.23", "209.584, 121.027, 8.91462, 0.23", "220.326, 126.598, 11.0607, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "axon_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "axon_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_NBC_4eea8c6853_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_62
create dend_70
public dend_70
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, axon_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, axon_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999998479938421)
    connect dend_27(0), soma_0(0.4999998479938421)
    connect dend_26(0), soma_0(0.4999998479938421)
    connect dend_15(0), soma_0(0.4999998479938421)
    connect dend_0(0), soma_0(0.4999998479938421)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.69096, -9.75392, 0.0, 3.54463 ) }
    soma_0 { pt3dadd( 1.52222, -8.84351, 0.0, 6.43815 ) }
    soma_0 { pt3dadd( 1.35347, -7.93311, 0.0, 8.80214 ) }
    soma_0 { pt3dadd( 1.18473, -7.0227, 0.0, 10.0004 ) }
    soma_0 { pt3dadd( 1.01599, -6.11229, 0.0, 10.9716 ) }
    soma_0 { pt3dadd( 0.847242, -5.20188, 0.0, 11.7871 ) }
    soma_0 { pt3dadd( 0.678498, -4.29147, 0.0, 12.5324 ) }
    soma_0 { pt3dadd( 0.509755, -3.38107, 0.0, 13.2727 ) }
    soma_0 { pt3dadd( 0.341011, -2.47066, 0.0, 13.4566 ) }
    soma_0 { pt3dadd( 0.172268, -1.56025, 0.0, 13.5676 ) }
    soma_0 { pt3dadd( 0.00352426, -0.649843, 0.0, 13.7469 ) }
    soma_0 { pt3dadd( -0.165219, 0.260565, 0.0, 13.8983 ) }
    soma_0 { pt3dadd( -0.333963, 1.17097, 0.0, 14.0 ) }
    soma_0 { pt3dadd( -0.502706, 2.08138, 0.0, 13.9192 ) }
    soma_0 { pt3dadd( -0.67145, 2.99179, 0.0, 13.4728 ) }
    soma_0 { pt3dadd( -0.840193, 3.9022, 0.0, 12.9681 ) }
    soma_0 { pt3dadd( -1.00894, 4.8126, 0.0, 12.2669 ) }
    soma_0 { pt3dadd( -1.17768, 5.72301, 0.0, 11.0106 ) }
    soma_0 { pt3dadd( -1.34642, 6.63342, 0.0, 9.31796 ) }
    soma_0 { pt3dadd( -1.51517, 7.54383, 0.0, 7.37652 ) }
    soma_0 { pt3dadd( -1.68391, 8.45424, 0.0, 4.20409 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.62975, 7.48071, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.09568, 9.07445, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -3.04033, 12.3057, -1.86, 3.18 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.38975, -7.41879, 8.54, 2.73 ) }
    dend_27 { pt3dadd( -2.21517, -10.2533, 8.54, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.41975, 1.44321, -4.58, 0.68 ) }
    dend_26 { pt3dadd( -4.53576, 0.371139, -5.21099, 0.68 ) }
    dend_26 { pt3dadd( -4.62204, -0.361963, -5.63454, 0.45 ) }
    dend_26 { pt3dadd( -4.84934, -1.80344, -6.42549, 0.45 ) }
    dend_26 { pt3dadd( -5.11159, -3.40528, -7.32441, 0.45 ) }
    dend_26 { pt3dadd( -5.20204, -3.92016, -7.62771, 1.14 ) }
    dend_26 { pt3dadd( -5.53622, -5.83307, -8.88139, 0.23 ) }
    dend_26 { pt3dadd( -5.64341, -6.51988, -9.36672, 0.23 ) }
    dend_26 { pt3dadd( -5.85156, -7.55, -10.1598, 0.91 ) }
    dend_26 { pt3dadd( -6.24211, -8.83736, -11.341, 0.23 ) }
    dend_26 { pt3dadd( -6.56693, -9.56833, -12.1355, 0.91 ) }
    dend_26 { pt3dadd( -7.08417, -10.5865, -13.3476, 0.23 ) }
    dend_26 { pt3dadd( -7.35484, -11.0401, -13.9907, 0.23 ) }
    dend_26 { pt3dadd( -7.73024, -11.6523, -14.9255, 0.68 ) }
    dend_26 { pt3dadd( -8.37938, -12.7349, -16.6476, 0.23 ) }
    dend_26 { pt3dadd( -8.65499, -13.2437, -17.4386, 0.23 ) }
    dend_26 { pt3dadd( -8.89205, -13.7853, -18.1961, 1.14 ) }
    dend_26 { pt3dadd( -9.38451, -15.2623, -20.0099, 0.23 ) }
    dend_26 { pt3dadd( -9.49435, -15.8285, -20.6852, 0.23 ) }
    dend_26 { pt3dadd( -9.55007, -16.4846, -21.4594, 1.14 ) }
    dend_26 { pt3dadd( -9.63172, -17.6004, -22.8056, 0.23 ) }
    dend_26 { pt3dadd( -9.69393, -18.1556, -23.6006, 0.23 ) }
    dend_26 { pt3dadd( -9.79875, -18.7748, -24.6087, 0.91 ) }
    dend_26 { pt3dadd( -9.97456, -19.6692, -26.1516, 0.91 ) }
    dend_26 { pt3dadd( -10.1589, -20.3732, -27.5315, 0.23 ) }
    dend_26 { pt3dadd( -10.353, -20.9053, -28.6405, 0.23 ) }
    dend_26 { pt3dadd( -10.7106, -21.6937, -30.3103, 0.68 ) }
    dend_26 { pt3dadd( -10.9611, -22.1985, -31.4653, 0.23 ) }
    dend_26 { pt3dadd( -11.1466, -22.529, -32.237, 1.14 ) }
    dend_26 { pt3dadd( -11.6735, -23.4243, -34.1225, 0.23 ) }
    dend_26 { pt3dadd( -11.8127, -23.7269, -34.6584, 0.23 ) }
    dend_26 { pt3dadd( -11.9287, -24.1245, -35.2541, 0.23 ) }
    dend_26 { pt3dadd( -13.5966, -28.2918, -40.1871, 0.23 ) }
    dend_26 { pt3dadd( -15.1187, -32.7681, -44.9185, 0.23 ) }
    dend_26 { pt3dadd( -16.0593, -36.0456, -50.6054, 0.23 ) }
    dend_26 { pt3dadd( -17.5717, -38.185, -56.6388, 0.23 ) }
    dend_26 { pt3dadd( -19.7141, -41.6566, -61.8629, 0.23 ) }
    dend_26 { pt3dadd( -23.5298, -44.2438, -66.5508, 0.23 ) }
    dend_26 { pt3dadd( -26.9199, -46.9287, -71.5131, 0.23 ) }
    dend_26 { pt3dadd( -30.2852, -48.9735, -76.7615, 0.23 ) }
    dend_26 { pt3dadd( -33.6999, -52.0009, -81.5228, 0.23 ) }
    dend_26 { pt3dadd( -36.1934, -54.6798, -87.0035, 0.23 ) }
    dend_26 { pt3dadd( -38.874, -58.3684, -91.82, 0.23 ) }
    dend_26 { pt3dadd( -41.7469, -62.6717, -96.0146, 0.23 ) }
    dend_26 { pt3dadd( -44.7885, -66.4653, -100.526, 0.23 ) }
    dend_26 { pt3dadd( -47.5353, -71.1851, -104.382, 0.23 ) }
    dend_26 { pt3dadd( -50.0545, -76.6886, -107.331, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.43025, -9.09879, 1.04, 1.14 ) }
    dend_15 { pt3dadd( 4.22804, -11.4343, -0.114808, 1.14 ) }
    dend_15 { pt3dadd( 5.77341, -13.442, -1.10747, 1.14 ) }
    dend_15 { pt3dadd( 7.26939, -15.3855, -2.06841, 1.14 ) }
    dend_15 { pt3dadd( 8.16708, -16.5517, -2.64504, 1.14 ) }
    dend_15 { pt3dadd( 8.99608, -17.6287, -3.17755, 1.59 ) }
    dend_15 { pt3dadd( 9.98407, -18.9123, -3.81218, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.95025, 5.64321, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 3.72564, 7.19956, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 4.54271, 8.83957, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 5.87617, 11.5161, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.64889, 13.0671, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 7.77519, 15.3278, -1.12, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.68391, 8.45424, 0.0, 0.825086 ) }
    axon_0 { pt3dadd( -4.41759, 23.203, 0.0, 0.825086 ) }
    axon_0 { pt3dadd( -7.15127, 37.9518, 0.0, 0.825086 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -3.04033, 12.3057, -1.86, 0.68 ) }
    dend_56 { pt3dadd( -4.70205, 12.6852, -2.0161, 0.68 ) }
    dend_56 { pt3dadd( -5.86087, 12.9706, -2.14268, 0.68 ) }
    dend_56 { pt3dadd( -7.45, 13.3619, -2.31626, 1.14 ) }
    dend_56 { pt3dadd( -8.36422, 13.5871, -2.41612, 0.23 ) }
    dend_56 { pt3dadd( -10.4931, 14.1113, -2.64865, 0.23 ) }
    dend_56 { pt3dadd( -11.7039, 14.4095, -2.78091, 0.91 ) }
    dend_56 { pt3dadd( -13.7673, 14.8537, -2.9522, 1.82 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.04033, 12.3057, -1.86, 1.82 ) }
    dend_45 { pt3dadd( -0.534031, 14.8681, -2.58517, 1.82 ) }
    dend_45 { pt3dadd( 1.88082, 17.3535, -3.27433, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( 3.71002, 19.2214, -3.76376, 0.68 ) }
    dend_45 { pt3dadd( 4.9368, 20.4393, -4.05486, 1.14 ) }
    dend_45 { pt3dadd( 8.16801, 23.5563, -4.82594, 0.45 ) }
    dend_45 { pt3dadd( 9.99837, 25.2709, -5.28036, 0.45 ) }
    dend_45 { pt3dadd( 11.1263, 26.2367, -5.55893, 1.59 ) }
    dend_45 { pt3dadd( 12.2953, 27.1848, -5.83306, 1.59 ) }
    dend_45 { pt3dadd( 13.9927, 28.5427, -6.18909, 0.68 ) }
    dend_45 { pt3dadd( 15.9805, 30.109, -6.60539, 0.68 ) }
    dend_45 { pt3dadd( 17.5746, 31.3072, -6.89621, 1.36 ) }
    dend_45 { pt3dadd( 19.1609, 32.4492, -7.19636, 2.05 ) }
    dend_45 { pt3dadd( 20.6734, 33.487, -7.51648, 0.91 ) }
    dend_45 { pt3dadd( 22.3654, 34.6603, -7.91986, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.21517, -10.2533, 8.54, 0.68 ) }
    dend_39 { pt3dadd( -5.13624, -10.723, 8.38946, 0.68 ) }
    dend_39 { pt3dadd( -8.36201, -11.2071, 8.24233, 0.68 ) }
    dend_39 { pt3dadd( -10.3303, -11.4841, 8.11686, 0.23 ) }
    dend_39 { pt3dadd( -11.7277, -11.6776, 8.01839, 0.91 ) }
    dend_39 { pt3dadd( -13.5724, -11.9521, 7.88631, 0.91 ) }
    dend_39 { pt3dadd( -15.3576, -12.2247, 7.73548, 0.23 ) }
    dend_39 { pt3dadd( -16.7375, -12.4313, 7.59587, 0.23 ) }
    dend_39 { pt3dadd( -19.0181, -12.8143, 7.35368, 0.68 ) }
    dend_39 { pt3dadd( -20.6848, -13.145, 7.15238, 0.68 ) }
    dend_39 { pt3dadd( -22.3889, -13.5143, 6.90002, 0.23 ) }
    dend_39 { pt3dadd( -24.1975, -13.9474, 6.59745, 0.68 ) }
    dend_39 { pt3dadd( -25.5309, -14.2975, 6.36398, 0.68 ) }
    dend_39 { pt3dadd( -27.9269, -14.9857, 5.95718, 0.23 ) }
    dend_39 { pt3dadd( -29.8285, -15.579, 5.66786, 0.23 ) }
    dend_39 { pt3dadd( -31.2276, -16.0362, 5.46947, 0.68 ) }
    dend_39 { pt3dadd( -32.2667, -16.3835, 5.38673, 0.68 ) }
    dend_39 { pt3dadd( -33.7441, -16.8928, 5.35999, 0.68 ) }
    dend_39 { pt3dadd( -35.6674, -17.5491, 5.40766, 0.23 ) }
    dend_39 { pt3dadd( -37.3097, -18.0736, 5.52325, 0.45 ) }
    dend_39 { pt3dadd( -38.8008, -18.5271, 5.71608, 0.45 ) }
    dend_39 { pt3dadd( -41.5668, -19.3657, 6.14701, 0.23 ) }
    dend_39 { pt3dadd( -42.5886, -19.692, 6.34862, 1.14 ) }
    dend_39 { pt3dadd( -43.6058, -20.0376, 6.57898, 1.14 ) }
    dend_39 { pt3dadd( -45.7629, -20.8079, 7.11262, 0.23 ) }
    dend_39 { pt3dadd( -47.3565, -21.4342, 7.51166, 0.23 ) }
    dend_39 { pt3dadd( -48.8005, -22.0661, 7.8515, 0.91 ) }
    dend_39 { pt3dadd( -51.3285, -23.2594, 8.36035, 0.23 ) }
    dend_39 { pt3dadd( -52.5563, -23.8622, 8.5938, 1.14 ) }
    dend_39 { pt3dadd( -53.0983, -24.1341, 8.68789, 1.14 ) }
    dend_39 { pt3dadd( -54.8059, -24.9891, 8.93136, 0.23 ) }
    dend_39 { pt3dadd( -56.3145, -25.6993, 9.07454, 1.14 ) }
    dend_39 { pt3dadd( -58.0072, -26.4227, 9.17775, 0.23 ) }
    dend_39 { pt3dadd( -59.4838, -26.9642, 9.20783, 1.14 ) }
    dend_39 { pt3dadd( -60.3663, -27.2578, 9.22796, 0.23 ) }
    dend_39 { pt3dadd( -62.1713, -27.8112, 9.27121, 0.23 ) }
    dend_39 { pt3dadd( -63.3835, -28.1686, 9.30889, 1.14 ) }
    dend_39 { pt3dadd( -64.2852, -28.4198, 9.35359, 1.14 ) }
    dend_39 { pt3dadd( -66.5832, -29.0925, 9.49952, 0.23 ) }
    dend_39 { pt3dadd( -67.4872, -29.3838, 9.62691, 1.14 ) }
    dend_39 { pt3dadd( -68.6455, -29.7843, 9.8581, 1.14 ) }
    dend_39 { pt3dadd( -70.0069, -30.2728, 10.1931, 0.23 ) }
    dend_39 { pt3dadd( -71.364, -30.7921, 10.6193, 0.91 ) }
    dend_39 { pt3dadd( -72.8275, -31.3876, 11.1468, 0.23 ) }
    dend_39 { pt3dadd( -75.3309, -32.5032, 12.0877, 0.23 ) }
    dend_39 { pt3dadd( -75.8656, -32.7552, 12.2898, 1.14 ) }
    dend_39 { pt3dadd( -77.3504, -33.4851, 12.7926, 1.14 ) }
    dend_39 { pt3dadd( -79.2546, -34.4663, 13.3221, 0.23 ) }
    dend_39 { pt3dadd( -80.2271, -34.9777, 13.5269, 0.23 ) }
    dend_39 { pt3dadd( -82.7176, -36.2768, 13.9865, 0.68 ) }
    dend_39 { pt3dadd( -84.4436, -37.1552, 14.2316, 0.23 ) }
    dend_39 { pt3dadd( -86.2494, -38.0839, 14.4834, 1.14 ) }
    dend_39 { pt3dadd( -88.3687, -39.1992, 14.7595, 0.23 ) }
    dend_39 { pt3dadd( -90.1676, -40.1612, 14.9996, 0.91 ) }
    dend_39 { pt3dadd( -92.442, -41.3917, 15.3731, 0.23 ) }
    dend_39 { pt3dadd( -93.9359, -42.2047, 15.6604, 0.23 ) }
    dend_39 { pt3dadd( -94.4613, -42.4972, 15.7868, 0.23 ) }
    dend_39 { pt3dadd( -95.2945, -42.966, 16.0398, 0.23 ) }
    dend_39 { pt3dadd( -96.8742, -43.8675, 16.6588, 0.91 ) }
    dend_39 { pt3dadd( -98.0187, -44.5389, 17.1621, 0.91 ) }
    dend_39 { pt3dadd( -99.5116, -45.3935, 17.7855, 0.23 ) }
    dend_39 { pt3dadd( -100.94, -46.1902, 18.3535, 1.14 ) }
    dend_39 { pt3dadd( -101.854, -46.6647, 18.7304, 1.14 ) }
    dend_39 { pt3dadd( -103.891, -47.6664, 19.5667, 0.23 ) }
    dend_39 { pt3dadd( -104.971, -48.1827, 19.9877, 0.68 ) }
    dend_39 { pt3dadd( -107.245, -49.3114, 20.8517, 0.23 ) }
    dend_39 { pt3dadd( -109.027, -50.2607, 21.5262, 0.91 ) }
    dend_39 { pt3dadd( -111.2, -51.5679, 22.2851, 0.23 ) }
    dend_39 { pt3dadd( -111.847, -52.0102, 22.493, 0.23 ) }
    dend_39 { pt3dadd( -112.768, -52.7098, 22.7373, 0.23 ) }
    dend_39 { pt3dadd( -114.068, -53.8234, 23.0311, 1.14 ) }
    dend_39 { pt3dadd( -115.686, -55.3312, 23.3205, 0.23 ) }
    dend_39 { pt3dadd( -116.886, -56.5265, 23.3796, 0.68 ) }
    dend_39 { pt3dadd( -118.742, -58.4414, 23.1755, 0.23 ) }
    dend_39 { pt3dadd( -120.233, -59.9733, 22.875, 0.91 ) }
    dend_39 { pt3dadd( -121.94, -61.6228, 22.4558, 0.23 ) }
    dend_39 { pt3dadd( -122.768, -62.3574, 22.2525, 0.91 ) }
    dend_39 { pt3dadd( -124.831, -64.0295, 21.738, 0.23 ) }
    dend_39 { pt3dadd( -126.612, -65.3199, 21.363, 0.91 ) }
    dend_39 { pt3dadd( -128.413, -66.5023, 21.0671, 0.23 ) }
    dend_39 { pt3dadd( -130.12, -67.5089, 20.8897, 0.91 ) }
    dend_39 { pt3dadd( -132.344, -68.6117, 20.8426, 0.23 ) }
    dend_39 { pt3dadd( -133.226, -68.9918, 20.8789, 0.91 ) }
    dend_39 { pt3dadd( -134.693, -69.5052, 21.0461, 0.23 ) }
    dend_39 { pt3dadd( -135.902, -69.8454, 21.1878, 0.91 ) }
    dend_39 { pt3dadd( -136.352, -69.945, 21.2015, 0.91 ) }
    dend_39 { pt3dadd( -138.802, -70.4308, 21.1805, 0.23 ) }
    dend_39 { pt3dadd( -139.572, -70.5554, 21.1715, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( -141.111, -70.7888, 21.1541, 0.91 ) }
    dend_39 { pt3dadd( -142.986, -71.0585, 21.135, 0.23 ) }
    dend_39 { pt3dadd( -145.419, -71.388, 21.1166, 0.91 ) }
    dend_39 { pt3dadd( -148.796, -71.8437, 21.1086, 0.23 ) }
    dend_39 { pt3dadd( -150.854, -72.1243, 21.1288, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.21517, -10.2533, 8.54, 0.91 ) }
    dend_28 { pt3dadd( -0.931112, -12.9183, 9.2254, 0.91 ) }
    dend_28 { pt3dadd( 0.0410357, -14.9359, 9.74431, 0.91 ) }
    dend_28 { pt3dadd( 1.30241, -17.5537, 10.4176, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.98407, -18.9123, -3.81218, 0.91 ) }
    dend_19 { pt3dadd( 9.54972, -22.8107, -3.63055, 0.91 ) }
    dend_19 { pt3dadd( 9.13295, -26.5513, -3.45628, 0.91 ) }
    dend_19 { pt3dadd( 8.82627, -29.3039, -3.32804, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 9.98407, -18.9123, -3.81218, 0.23 ) }
    dend_16 { pt3dadd( 12.9567, -20.607, -3.52464, 0.23 ) }
    dend_16 { pt3dadd( 15.2946, -21.9282, -3.33967, 0.68 ) }
    dend_16 { pt3dadd( 18.4775, -23.7698, -3.13317, 0.68 ) }
    dend_16 { pt3dadd( 20.4004, -24.9651, -3.13479, 0.23 ) }
    dend_16 { pt3dadd( 21.4309, -25.6245, -3.18776, 0.91 ) }
    dend_16 { pt3dadd( 22.969, -26.6139, -3.31338, 0.91 ) }
    dend_16 { pt3dadd( 24.9253, -27.8812, -3.6253, 0.23 ) }
    dend_16 { pt3dadd( 26.6868, -28.9402, -4.02993, 0.91 ) }
    dend_16 { pt3dadd( 29.703, -30.6783, -4.78948, 0.23 ) }
    dend_16 { pt3dadd( 30.8666, -31.3382, -5.10302, 0.91 ) }
    dend_16 { pt3dadd( 32.435, -32.2069, -5.52649, 0.23 ) }
    dend_16 { pt3dadd( 34.4325, -33.3235, -6.03152, 1.14 ) }
    dend_16 { pt3dadd( 35.9113, -34.0936, -6.31538, 1.14 ) }
    dend_16 { pt3dadd( 38.8116, -35.5261, -6.67512, 0.23 ) }
    dend_16 { pt3dadd( 40.2677, -36.1983, -6.75493, 0.91 ) }
    dend_16 { pt3dadd( 41.8017, -36.9041, -6.7872, 0.91 ) }
    dend_16 { pt3dadd( 44.8652, -38.2079, -6.78425, 0.23 ) }
    dend_16 { pt3dadd( 47.4422, -39.1668, -6.69267, 0.68 ) }
    dend_16 { pt3dadd( 49.7736, -39.894, -6.57571, 0.23 ) }
    dend_16 { pt3dadd( 51.0339, -40.1671, -6.50127, 0.91 ) }
    dend_16 { pt3dadd( 53.8112, -40.5778, -6.323, 0.23 ) }
    dend_16 { pt3dadd( 56.635, -40.7898, -6.17379, 0.91 ) }
    dend_16 { pt3dadd( 59.053, -40.8147, -6.08941, 0.23 ) }
    dend_16 { pt3dadd( 60.7161, -40.7829, -6.12205, 0.91 ) }
    dend_16 { pt3dadd( 64.0519, -40.6904, -6.27699, 0.23 ) }
    dend_16 { pt3dadd( 65.074, -40.6729, -6.34932, 1.14 ) }
    dend_16 { pt3dadd( 67.1275, -40.6731, -6.54549, 1.14 ) }
    dend_16 { pt3dadd( 69.7616, -40.8494, -6.85491, 0.23 ) }
    dend_16 { pt3dadd( 72.8249, -41.2659, -7.26797, 0.68 ) }
    dend_16 { pt3dadd( 74.0071, -41.5022, -7.39472, 1.36 ) }
    dend_16 { pt3dadd( 76.3193, -42.1441, -7.51092, 0.23 ) }
    dend_16 { pt3dadd( 77.386, -42.4646, -7.51832, 0.45 ) }
    dend_16 { pt3dadd( 80.2927, -43.3705, -7.42644, 0.23 ) }
    dend_16 { pt3dadd( 82.2071, -43.9721, -7.25953, 0.91 ) }
    dend_16 { pt3dadd( 85.8432, -45.1325, -6.70623, 0.23 ) }
    dend_16 { pt3dadd( 89.2912, -46.1983, -6.10345, 1.14 ) }
    dend_16 { pt3dadd( 90.9912, -46.7054, -5.77416, 0.23 ) }
    dend_16 { pt3dadd( 92.4843, -47.1131, -5.46901, 0.91 ) }
    dend_16 { pt3dadd( 95.3706, -47.846, -4.81467, 0.23 ) }
    dend_16 { pt3dadd( 97.0805, -48.2665, -4.41872, 1.14 ) }
    dend_16 { pt3dadd( 99.8254, -48.9391, -3.83465, 0.23 ) }
    dend_16 { pt3dadd( 101.419, -49.3716, -3.50112, 0.91 ) }
    dend_16 { pt3dadd( 101.918, -49.526, -3.39801, 0.91 ) }
    dend_16 { pt3dadd( 104.272, -50.2904, -2.95866, 0.23 ) }
    dend_16 { pt3dadd( 105.808, -50.7613, -2.74655, 0.91 ) }
    dend_16 { pt3dadd( 108.421, -51.5837, -2.4768, 0.23 ) }
    dend_16 { pt3dadd( 110.335, -52.1971, -2.28987, 0.91 ) }
    dend_16 { pt3dadd( 112.498, -52.879, -2.10368, 0.23 ) }
    dend_16 { pt3dadd( 114.1, -53.3801, -1.9931, 0.68 ) }
    dend_16 { pt3dadd( 117.659, -54.5422, -1.81142, 0.23 ) }
    dend_16 { pt3dadd( 119.952, -55.3234, -1.65318, 0.23 ) }
    dend_16 { pt3dadd( 121.408, -55.805, -1.50337, 1.14 ) }
    dend_16 { pt3dadd( 122.379, -56.1183, -1.36181, 1.14 ) }
    dend_16 { pt3dadd( 125.234, -57.0688, -0.819774, 0.23 ) }
    dend_16 { pt3dadd( 126.9, -57.6154, -0.452659, 1.14 ) }
    dend_16 { pt3dadd( 129.774, -58.5167, 0.225817, 0.23 ) }
    dend_16 { pt3dadd( 133.925, -59.7206, 1.31825, 0.91 ) }
    dend_16 { pt3dadd( 135.858, -60.2741, 1.81974, 0.23 ) }
    dend_16 { pt3dadd( 138.001, -60.8719, 2.32491, 0.91 ) }
    dend_16 { pt3dadd( 141.108, -61.6802, 2.96716, 0.23 ) }
    dend_16 { pt3dadd( 143.418, -62.3004, 3.29079, 0.91 ) }
    dend_16 { pt3dadd( 146.498, -63.2824, 3.4913, 0.23 ) }
    dend_16 { pt3dadd( 150.487, -64.8125, 3.44886, 0.23 ) }
    dend_16 { pt3dadd( 153.654, -66.1496, 3.23324, 0.45 ) }
    dend_16 { pt3dadd( 155.931, -67.2139, 2.98493, 0.23 ) }
    dend_16 { pt3dadd( 158.914, -68.7372, 2.5143, 0.23 ) }
    dend_16 { pt3dadd( 161.356, -70.0782, 1.94821, 0.91 ) }
    dend_16 { pt3dadd( 162.959, -71.0163, 1.3974, 0.23 ) }
    dend_16 { pt3dadd( 164.126, -71.7425, 0.927278, 0.45 ) }
    dend_16 { pt3dadd( 164.994, -72.2959, 0.556561, 0.23 ) }
    dend_16 { pt3dadd( 166.564, -73.2097, -0.100299, 0.91 ) }
    dend_16 { pt3dadd( 169.046, -74.4004, -1.109, 0.23 ) }
    dend_16 { pt3dadd( 170.957, -75.1571, -1.90037, 0.91 ) }
    dend_16 { pt3dadd( 172.373, -75.676, -2.48245, 0.23 ) }
    dend_16 { pt3dadd( 172.831, -75.8405, -2.66852, 0.91 ) }
    dend_16 { pt3dadd( 174.471, -76.4149, -3.27691, 0.23 ) }
    dend_16 { pt3dadd( 176.284, -77.1273, -3.88416, 0.45 ) }
    dend_16 { pt3dadd( 178.551, -78.0736, -4.46995, 0.23 ) }
    dend_16 { pt3dadd( 179.304, -78.4015, -4.63591, 0.91 ) }
    dend_16 { pt3dadd( 180.205, -78.8325, -4.82269, 0.23 ) }
    dend_16 { pt3dadd( 181.8, -79.6974, -5.1159, 1.14 ) }
    dend_16 { pt3dadd( 184.223, -81.2223, -5.38932, 0.23 ) }
    dend_16 { pt3dadd( 185.537, -82.1928, -5.53992, 0.68 ) }
    dend_16 { pt3dadd( 186.281, -82.9216, -5.66188, 0.23 ) }
    dend_16 { pt3dadd( 187.506, -84.576, -5.94156, 0.23 ) }
    dend_16 { pt3dadd( 187.967, -86.0427, -6.176, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 187.374, -88.0716, -6.41866, 0.91 ) }
    dend_16 { pt3dadd( 185.93, -91.0961, -6.74808, 0.23 ) }
    dend_16 { pt3dadd( 184.351, -93.8275, -7.0502, 0.23 ) }
    dend_16 { pt3dadd( 183.315, -95.3821, -7.22392, 0.23 ) }
    dend_16 { pt3dadd( 181.186, -98.0682, -7.53383, 0.23 ) }
    dend_16 { pt3dadd( 178.421, -101.11, -7.89437, 0.68 ) }
    dend_16 { pt3dadd( 187.922, -107.344, -9.45832, 0.68 ) }
    dend_16 { pt3dadd( 197.421, -112.706, -12.8637, 0.68 ) }
    dend_16 { pt3dadd( 205.922, -118.515, -17.8667, 0.68 ) }
    dend_16 { pt3dadd( 214.08, -123.819, -23.8506, 0.68 ) }
    dend_16 { pt3dadd( 224.024, -127.275, -28.1157, 0.68 ) }
    dend_16 { pt3dadd( 234.316, -130.963, -31.2257, 0.68 ) }
    dend_16 { pt3dadd( 244.211, -135.452, -34.6529, 0.68 ) }
    dend_16 { pt3dadd( 254.792, -138.485, -37.4128, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.77519, 15.3278, -1.12, 0.23 ) }
    dend_4 { pt3dadd( 8.9634, 16.2156, -1.35792, 0.23 ) }
    dend_4 { pt3dadd( 10.8535, 17.5278, -1.66456, 0.68 ) }
    dend_4 { pt3dadd( 11.4205, 17.9214, -1.75656, 0.68 ) }
    dend_4 { pt3dadd( 12.5849, 18.7297, -1.94545, 0.23 ) }
    dend_4 { pt3dadd( 13.9457, 19.6744, -2.16623, 0.91 ) }
    dend_4 { pt3dadd( 15.2034, 20.5475, -2.37028, 0.91 ) }
    dend_4 { pt3dadd( 16.2519, 21.3352, -2.53234, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.77519, 15.3278, -1.12, 0.68 ) }
    dend_1 { pt3dadd( 7.63619, 18.9142, -0.462814, 0.68 ) }
    dend_1 { pt3dadd( 7.58071, 21.1946, -0.137164, 0.68 ) }
    dend_1 { pt3dadd( 7.5633, 23.0574, 0.090277, 0.91 ) }
    dend_1 { pt3dadd( 7.63868, 26.2831, 0.2238, 0.23 ) }
    dend_1 { pt3dadd( 7.70425, 27.3969, 0.225829, 0.68 ) }
    dend_1 { pt3dadd( 8.00147, 31.356, 0.16099, 0.23 ) }
    dend_1 { pt3dadd( 8.2587, 33.9738, -0.0271421, 1.14 ) }
    dend_1 { pt3dadd( 8.43821, 35.4973, -0.182267, 1.14 ) }
    dend_1 { pt3dadd( 9.21388, 40.6935, -0.833319, 0.23 ) }
    dend_1 { pt3dadd( 9.83384, 43.9168, -1.30113, 0.91 ) }
    dend_1 { pt3dadd( 10.1613, 45.3215, -1.51817, 0.91 ) }
    dend_1 { pt3dadd( 10.695, 47.1859, -1.83909, 0.23 ) }
    dend_1 { pt3dadd( 11.4766, 49.7731, -2.26356, 0.23 ) }
    dend_1 { pt3dadd( 12.0109, 51.4848, -2.5413, 0.91 ) }
    dend_1 { pt3dadd( 12.5868, 53.2054, -2.78341, 0.91 ) }
    dend_1 { pt3dadd( 13.4305, 55.6857, -3.14314, 0.23 ) }
    dend_1 { pt3dadd( 14.4773, 58.6258, -3.55962, 0.68 ) }
    dend_1 { pt3dadd( 15.5849, 61.641, -4.01389, 0.23 ) }
    dend_1 { pt3dadd( 16.2663, 63.5519, -4.28857, 0.91 ) }
    dend_1 { pt3dadd( 17.4448, 66.9342, -4.81648, 0.23 ) }
    dend_1 { pt3dadd( 17.9737, 68.3622, -5.04798, 0.23 ) }
    dend_1 { pt3dadd( 18.2941, 69.1999, -5.17739, 1.14 ) }
    dend_1 { pt3dadd( 18.8141, 70.4823, -5.33331, 1.14 ) }
    dend_1 { pt3dadd( 19.6519, 72.4268, -5.51838, 0.23 ) }
    dend_1 { pt3dadd( 20.2204, 73.9031, -5.63923, 0.68 ) }
    dend_1 { pt3dadd( 21.1192, 76.6683, -5.86261, 0.23 ) }
    dend_1 { pt3dadd( 21.7232, 78.7902, -6.01677, 0.91 ) }
    dend_1 { pt3dadd( 22.5383, 82.1943, -6.218, 0.23 ) }
    dend_1 { pt3dadd( 23.0347, 84.7142, -6.32608, 1.14 ) }
    dend_1 { pt3dadd( 23.518, 88.5701, -6.52789, 0.23 ) }
    dend_1 { pt3dadd( 23.6414, 91.0863, -6.6655, 0.68 ) }
    dend_1 { pt3dadd( 23.6016, 92.5323, -6.78069, 0.23 ) }
    dend_1 { pt3dadd( 23.4297, 94.6947, -6.98861, 0.91 ) }
    dend_1 { pt3dadd( 23.2204, 96.1218, -7.13751, 0.91 ) }
    dend_1 { pt3dadd( 22.0914, 101.902, -7.80959, 0.23 ) }
    dend_1 { pt3dadd( 21.7178, 103.622, -8.05641, 1.14 ) }
    dend_1 { pt3dadd( 20.8905, 107.217, -8.70824, 0.23 ) }
    dend_1 { pt3dadd( 20.3225, 109.607, -9.19605, 0.91 ) }
    dend_1 { pt3dadd( 19.8133, 111.6, -9.63485, 0.91 ) }
    dend_1 { pt3dadd( 18.9644, 114.84, -10.3726, 0.23 ) }
    dend_1 { pt3dadd( 17.8386, 118.987, -11.4823, 0.91 ) }
    dend_1 { pt3dadd( 17.2489, 121.186, -12.1053, 0.23 ) }
    dend_1 { pt3dadd( 16.9151, 122.54, -12.4308, 0.45 ) }
    dend_1 { pt3dadd( 16.5304, 124.271, -12.8332, 0.23 ) }
    dend_1 { pt3dadd( 16.2514, 125.654, -13.1452, 0.91 ) }
    dend_1 { pt3dadd( 15.6235, 128.973, -13.9328, 0.23 ) }
    dend_1 { pt3dadd( 15.1736, 131.346, -14.5591, 1.14 ) }
    dend_1 { pt3dadd( 14.2515, 136.158, -16.035, 0.23 ) }
    dend_1 { pt3dadd( 13.5758, 139.502, -17.1899, 1.36 ) }
    dend_1 { pt3dadd( 12.7482, 143.358, -18.7917, 0.45 ) }
    dend_1 { pt3dadd( 12.2797, 145.359, -19.7844, 0.91 ) }
    dend_1 { pt3dadd( 11.5084, 148.343, -21.4595, 0.23 ) }
    dend_1 { pt3dadd( 10.917, 150.293, -22.7458, 0.68 ) }
    dend_1 { pt3dadd( 10.3774, 151.799, -23.9129, 0.68 ) }
    dend_1 { pt3dadd( 9.23545, 154.83, -26.335, 0.23 ) }
    dend_1 { pt3dadd( 8.61476, 156.588, -27.7499, 0.23 ) }
    dend_1 { pt3dadd( 8.33497, 157.514, -28.4371, 0.91 ) }
    dend_1 { pt3dadd( 7.95503, 159.562, -29.8745, 0.45 ) }
    dend_1 { pt3dadd( 7.86148, 161.447, -31.0941, 0.23 ) }
    dend_1 { pt3dadd( 8.03394, 163.014, -32.0458, 0.91 ) }
    dend_1 { pt3dadd( 8.57002, 165.004, -33.1302, 0.23 ) }
    dend_1 { pt3dadd( 8.97103, 166.011, -33.6626, 1.14 ) }
    dend_1 { pt3dadd( 10.0359, 167.894, -34.7153, 0.23 ) }
    dend_1 { pt3dadd( 11.1269, 169.49, -35.6576, 0.91 ) }
    dend_1 { pt3dadd( 12.6271, 171.551, -36.9502, 0.23 ) }
    dend_1 { pt3dadd( 13.3439, 172.546, -37.5866, 0.23 ) }
    dend_1 { pt3dadd( 14.4548, 174.194, -38.6789, 1.14 ) }
    dend_1 { pt3dadd( 16.2433, 177.223, -40.822, 0.23 ) }
    dend_1 { pt3dadd( 17.5552, 180.007, -42.8921, 1.14 ) }
    dend_1 { pt3dadd( 18.4988, 183.243, -45.5463, 0.23 ) }
    dend_1 { pt3dadd( 18.6658, 184.042, -46.2221, 0.23 ) }
    dend_1 { pt3dadd( 18.8667, 185.766, -47.7481, 0.68 ) }
    dend_1 { pt3dadd( 18.8354, 187.642, -49.551, 0.23 ) }
    dend_1 { pt3dadd( 18.3992, 189.337, -51.2924, 1.14 ) }
    dend_1 { pt3dadd( 17.071, 191.958, -54.2086, 0.23 ) }
    dend_1 { pt3dadd( 15.5866, 203.187, -59.225, 0.23 ) }
    dend_1 { pt3dadd( 12.5131, 215.072, -61.3139, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 11.3693, 226.999, -64.7039, 0.23 ) }
    dend_1 { pt3dadd( 8.78439, 238.733, -67.9128, 0.23 ) }
    dend_1 { pt3dadd( 8.24327, 250.818, -70.9317, 0.23 ) }
    dend_1 { pt3dadd( 6.23875, 262.832, -73.5685, 0.23 ) }
    dend_1 { pt3dadd( 2.70814, 274.447, -76.2247, 0.23 ) }
    dend_1 { pt3dadd( -0.831013, 285.766, -79.841, 0.23 ) }
    dend_1 { pt3dadd( -3.74982, 296.823, -84.5672, 0.23 ) }
    dend_1 { pt3dadd( -5.82918, 307.275, -90.7538, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.15127, 37.9518, 0.0, 0.163069 ) }
    axon_1 { pt3dadd( -9.88495, 52.7006, 0.0, 0.163069 ) }
    axon_1 { pt3dadd( -12.6186, 67.4494, 0.0, 0.163069 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 11/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -13.7673, 14.8537, -2.9522, 0.23 ) }
    dend_62 { pt3dadd( -13.7661, 15.4495, -5.1856, 0.23 ) }
    dend_62 { pt3dadd( -13.7655, 15.7906, -6.46441, 0.23 ) }
    dend_62 { pt3dadd( -13.7646, 16.2401, -8.14915, 0.91 ) }
    dend_62 { pt3dadd( -13.7631, 17.0718, -11.2669, 0.23 ) }
    dend_62 { pt3dadd( -13.7614, 17.957, -14.5851, 0.23 ) }
    dend_62 { pt3dadd( -13.7608, 18.2857, -15.8173, 1.14 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 18/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -13.7673, 14.8537, -2.9522, 0.23 ) }
    dend_57 { pt3dadd( -14.8692, 15.6434, -3.17814, 0.23 ) }
    dend_57 { pt3dadd( -16.3783, 16.715, -3.46776, 0.91 ) }
    dend_57 { pt3dadd( -18.2971, 18.0559, -3.82911, 0.68 ) }
    dend_57 { pt3dadd( -20.141, 19.3582, -4.13258, 0.23 ) }
    dend_57 { pt3dadd( -21.54, 20.3813, -4.4045, 0.68 ) }
    dend_57 { pt3dadd( -22.7658, 21.2952, -4.66581, 0.23 ) }
    dend_57 { pt3dadd( -23.3912, 21.7749, -4.83748, 1.14 ) }
    dend_57 { pt3dadd( -24.2081, 22.3912, -5.11662, 1.14 ) }
    dend_57 { pt3dadd( -26.1624, 23.8787, -5.96059, 0.23 ) }
    dend_57 { pt3dadd( -27.898, 25.2307, -6.83712, 0.45 ) }
    dend_57 { pt3dadd( -28.9745, 26.0564, -7.42066, 0.23 ) }
    dend_57 { pt3dadd( -30.4378, 27.1193, -8.23517, 0.23 ) }
    dend_57 { pt3dadd( -32.2058, 28.3238, -9.22804, 0.23 ) }
    dend_57 { pt3dadd( -33.556, 29.1845, -9.98776, 0.91 ) }
    dend_57 { pt3dadd( -34.287, 29.6028, -10.3915, 0.91 ) }
    dend_57 { pt3dadd( -37.0013, 31.0017, -11.7133, 0.23 ) }
    dend_57 { pt3dadd( -38.7061, 31.8334, -12.4719, 0.68 ) }
    dend_57 { pt3dadd( -40.1393, 32.5055, -13.0296, 0.23 ) }
    dend_57 { pt3dadd( -40.7026, 32.766, -13.2427, 0.91 ) }
    dend_57 { pt3dadd( -42.0092, 33.3205, -13.7115, 0.91 ) }
    dend_57 { pt3dadd( -44.3346, 34.2679, -14.5582, 0.23 ) }
    dend_57 { pt3dadd( -45.5001, 34.7126, -14.9895, 2.05 ) }
    dend_57 { pt3dadd( -46.6672, 35.1975, -15.3945, 2.05 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 22.3654, 34.6603, -7.91986, 0.68 ) }
    dend_53 { pt3dadd( 24.2704, 35.1544, -8.20791, 0.68 ) }
    dend_53 { pt3dadd( 27.113, 35.8045, -8.69666, 1.14 ) }
    dend_53 { pt3dadd( 29.8786, 36.4172, -9.10892, 0.68 ) }
    dend_53 { pt3dadd( 33.2947, 37.1847, -9.54692, 0.68 ) }
    dend_53 { pt3dadd( 35.5923, 37.7303, -9.79572, 0.68 ) }
    dend_53 { pt3dadd( 37.5545, 38.1962, -10.0082, 1.14 ) }
    dend_53 { pt3dadd( 40.7151, 38.9491, -10.2771, 0.68 ) }
    dend_53 { pt3dadd( 43.9672, 39.725, -10.4726, 0.68 ) }
    dend_53 { pt3dadd( 45.9659, 40.2325, -10.5919, 0.68 ) }
    dend_53 { pt3dadd( 47.3698, 40.563, -10.6361, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 22.3654, 34.6603, -7.91986, 0.68 ) }
    dend_46 { pt3dadd( 22.4524, 38.2671, -8.45255, 0.68 ) }
    dend_46 { pt3dadd( 22.5089, 40.2989, -8.67072, 1.14 ) }
    dend_46 { pt3dadd( 22.5854, 42.718, -8.86524, 0.23 ) }
    dend_46 { pt3dadd( 22.673, 46.391, -8.97797, 0.68 ) }
    dend_46 { pt3dadd( 22.6908, 49.054, -8.95386, 0.68 ) }
    dend_46 { pt3dadd( 22.6828, 50.4244, -8.91211, 0.68 ) }
    dend_46 { pt3dadd( 22.5738, 53.6536, -8.63541, 1.14 ) }
    dend_46 { pt3dadd( 22.3484, 58.1612, -8.17634, 0.23 ) }
    dend_46 { pt3dadd( 22.1741, 60.5951, -7.88944, 0.23 ) }
    dend_46 { pt3dadd( 21.8527, 64.0772, -7.41029, 0.68 ) }
    dend_46 { pt3dadd( 21.671, 65.3838, -7.23506, 0.68 ) }
    dend_46 { pt3dadd( 21.2519, 67.9511, -6.8868, 0.23 ) }
    dend_46 { pt3dadd( 20.8826, 69.7686, -6.64016, 0.91 ) }
    dend_46 { pt3dadd( 20.1484, 72.8007, -6.25658, 0.23 ) }
    dend_46 { pt3dadd( 19.6819, 74.6394, -6.11978, 0.68 ) }
    dend_46 { pt3dadd( 18.7262, 78.0599, -5.91229, 1.14 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -150.854, -72.1243, 21.1288, 0.23 ) }
    dend_43 { pt3dadd( -153.244, -72.1297, 21.2456, 0.23 ) }
    dend_43 { pt3dadd( -154.701, -72.1604, 21.3256, 0.68 ) }
    dend_43 { pt3dadd( -156.619, -72.2374, 21.4269, 0.23 ) }
    dend_43 { pt3dadd( -158.155, -72.3877, 21.4499, 0.45 ) }
    dend_43 { pt3dadd( -161.467, -72.8963, 21.2203, 0.23 ) }
    dend_43 { pt3dadd( -163.884, -73.3375, 20.9536, 0.45 ) }
    dend_43 { pt3dadd( -164.721, -73.5397, 20.8326, 0.23 ) }
    dend_43 { pt3dadd( -166.088, -73.9459, 20.5969, 0.68 ) }
    dend_43 { pt3dadd( -168.954, -74.9156, 20.0154, 0.23 ) }
    dend_43 { pt3dadd( -172.92, -76.3555, 19.283, 0.68 ) }
    dend_43 { pt3dadd( -173.884, -76.7042, 19.1107, 0.23 ) }
    dend_43 { pt3dadd( -174.875, -77.0579, 18.9894, 0.68 ) }
    dend_43 { pt3dadd( -176.889, -77.7741, 18.8603, 0.23 ) }
    dend_43 { pt3dadd( -178.266, -78.2267, 18.8536, 0.91 ) }
    dend_43 { pt3dadd( -181.563, -79.2126, 19.0676, 0.23 ) }
    dend_43 { pt3dadd( -183.42, -79.7304, 19.2673, 1.14 ) }
    dend_43 { pt3dadd( -185.675, -80.3221, 19.4644, 0.23 ) }
    dend_43 { pt3dadd( -187.166, -80.6624, 19.5816, 0.91 ) }
    dend_43 { pt3dadd( -189.446, -81.1153, 19.7225, 0.23 ) }
    dend_43 { pt3dadd( -190.683, -81.3423, 19.7662, 0.68 ) }
    dend_43 { pt3dadd( -192.087, -81.5799, 19.7511, 0.23 ) }
    dend_43 { pt3dadd( -193.914, -81.8819, 19.7499, 0.68 ) }
    dend_43 { pt3dadd( -195.561, -82.1263, 19.7514, 0.23 ) }
    dend_43 { pt3dadd( -196.98, -82.3877, 19.7922, 0.91 ) }
    dend_43 { pt3dadd( -197.982, -82.6195, 19.8426, 0.23 ) }
    dend_43 { pt3dadd( -199.785, -83.1145, 19.9475, 0.45 ) }
    dend_43 { pt3dadd( -200.613, -83.3584, 20.0052, 0.23 ) }
    dend_43 { pt3dadd( -202.589, -83.9569, 20.1388, 0.45 ) }
    dend_43 { pt3dadd( -205.82, -84.8939, 20.2993, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -207.414, -85.3534, 20.3874, 0.23 ) }
    dend_43 { pt3dadd( -209.65, -85.9874, 20.5206, 0.68 ) }
    dend_43 { pt3dadd( -212.371, -86.7323, 20.6925, 0.23 ) }
    dend_43 { pt3dadd( -213.967, -87.1376, 20.7886, 0.23 ) }
    dend_43 { pt3dadd( -216.509, -87.7111, 20.9214, 0.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -150.854, -72.1243, 21.1288, 0.23 ) }
    dend_40 { pt3dadd( -154.42, -73.4078, 19.411, 0.23 ) }
    dend_40 { pt3dadd( -155.597, -73.7737, 18.9392, 0.68 ) }
    dend_40 { pt3dadd( -157.721, -74.3879, 18.2567, 0.23 ) }
    dend_40 { pt3dadd( -159.424, -74.8618, 17.7779, 0.91 ) }
    dend_40 { pt3dadd( -161.836, -75.533, 17.0997, 0.23 ) }
    dend_40 { pt3dadd( -164.247, -76.2041, 16.4217, 0.45 ) }
    dend_40 { pt3dadd( -166.532, -76.8079, 15.9904, 0.23 ) }
    dend_40 { pt3dadd( -169.241, -77.4878, 15.4646, 0.68 ) }
    dend_40 { pt3dadd( -169.977, -77.6652, 15.326, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 15/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 1.30241, -17.5537, 10.4176, 1.14 ) }
    dend_30 { pt3dadd( 2.78696, -20.585, 13.5133, 1.14 ) }
    dend_30 { pt3dadd( 4.60237, -24.3024, 17.0042, 1.14 ) }
    dend_30 { pt3dadd( 6.14985, -27.5191, 19.7354, 0.68 ) }
    dend_30 { pt3dadd( 7.42132, -30.1621, 21.9795, 0.68 ) }
    dend_30 { pt3dadd( 8.08182, -31.535, 23.1452, 0.91 ) }
    dend_30 { pt3dadd( 9.30453, -34.0767, 25.3033, 0.68 ) }
    dend_30 { pt3dadd( 10.3543, -36.37, 27.0614, 1.14 ) }
    dend_30 { pt3dadd( 11.1129, -38.018, 28.1024, 1.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.30241, -17.5537, 10.4176, 0.23 ) }
    dend_29 { pt3dadd( 2.06343, -21.4013, 9.05599, 0.23 ) }
    dend_29 { pt3dadd( 2.86682, -25.9261, 7.21307, 0.23 ) }
    dend_29 { pt3dadd( 3.82468, -31.2372, 5.00366, 0.23 ) }
    dend_29 { pt3dadd( 4.51522, -34.7105, 3.57981, 1.82 ) }
    dend_29 { pt3dadd( 4.9598, -37.1989, 2.50076, 1.82 ) }
    dend_29 { pt3dadd( 5.52154, -40.3316, 1.1243, 0.68 ) }
    dend_29 { pt3dadd( 6.07323, -43.7517, -0.49107, 0.23 ) }
    dend_29 { pt3dadd( 6.49252, -46.9439, -1.87802, 0.23 ) }
    dend_29 { pt3dadd( 6.65657, -49.0462, -2.84792, 0.91 ) }
    dend_29 { pt3dadd( 6.83843, -52.8824, -4.74892, 0.23 ) }
    dend_29 { pt3dadd( 6.83778, -54.9803, -5.74197, 0.23 ) }
    dend_29 { pt3dadd( 6.64509, -58.5456, -7.25227, 0.23 ) }
    dend_29 { pt3dadd( 6.45667, -60.2252, -7.82064, 0.68 ) }
    dend_29 { pt3dadd( 5.78043, -64.3862, -9.08608, 0.23 ) }
    dend_29 { pt3dadd( 5.47149, -66.0199, -9.50134, 1.36 ) }
    dend_29 { pt3dadd( 4.89929, -69.1161, -10.0544, 0.23 ) }
    dend_29 { pt3dadd( 4.52583, -71.0969, -10.3384, 0.23 ) }
    dend_29 { pt3dadd( 4.06989, -74.1141, -10.5882, 0.91 ) }
    dend_29 { pt3dadd( 3.87813, -76.8659, -10.6631, 0.91 ) }
    dend_29 { pt3dadd( 3.88128, -78.7693, -10.684, 0.91 ) }
    dend_29 { pt3dadd( 4.21776, -83.4254, -10.8879, 0.23 ) }
    dend_29 { pt3dadd( 4.56999, -85.8041, -11.1021, 0.23 ) }
    dend_29 { pt3dadd( 5.20329, -89.0542, -11.5939, 0.91 ) }
    dend_29 { pt3dadd( 6.14238, -93.0257, -12.3688, 0.23 ) }
    dend_29 { pt3dadd( 7.05234, -96.4853, -13.1641, 0.45 ) }
    dend_29 { pt3dadd( 8.32605, -100.943, -14.3217, 0.23 ) }
    dend_29 { pt3dadd( 9.4828, -104.955, -15.4689, 0.68 ) }
    dend_29 { pt3dadd( 10.7583, -109.76, -16.9906, 0.23 ) }
    dend_29 { pt3dadd( 11.2704, -112.108, -17.7701, 1.14 ) }
    dend_29 { pt3dadd( 11.3856, -112.793, -17.9877, 1.14 ) }
    dend_29 { pt3dadd( 11.6192, -114.462, -18.4261, 1.14 ) }
    dend_29 { pt3dadd( 12.0621, -118.197, -19.2783, 0.23 ) }
    dend_29 { pt3dadd( 12.392, -121.036, -19.8423, 0.91 ) }
    dend_29 { pt3dadd( 12.9559, -125.515, -20.6396, 0.23 ) }
    dend_29 { pt3dadd( 13.2176, -127.538, -20.9922, 1.14 ) }
    dend_29 { pt3dadd( 13.8216, -132.033, -21.8106, 0.23 ) }
    dend_29 { pt3dadd( 14.1402, -134.372, -22.2397, 1.14 ) }
    dend_29 { pt3dadd( 14.5932, -137.769, -22.8366, 0.23 ) }
    dend_29 { pt3dadd( 14.7911, -139.544, -23.1169, 1.14 ) }
    dend_29 { pt3dadd( 14.9736, -141.584, -23.4308, 1.14 ) }
    dend_29 { pt3dadd( 15.2427, -146.421, -24.22, 0.23 ) }
    dend_29 { pt3dadd( 15.2954, -149.248, -24.6794, 1.14 ) }
    dend_29 { pt3dadd( 15.2598, -153.014, -25.3142, 0.23 ) }
    dend_29 { pt3dadd( 15.1935, -155.622, -25.7586, 1.14 ) }
    dend_29 { pt3dadd( 15.1114, -159.726, -26.4337, 0.23 ) }
    dend_29 { pt3dadd( 15.0822, -162.098, -26.8289, 1.82 ) }
    dend_29 { pt3dadd( 15.0865, -166.577, -27.5496, 0.23 ) }
    dend_29 { pt3dadd( 15.0982, -167.729, -27.7458, 0.68 ) }
    dend_29 { pt3dadd( 15.1243, -169.833, -28.1155, 0.23 ) }
    dend_29 { pt3dadd( 15.1831, -172.897, -28.6278, 0.91 ) }
    dend_29 { pt3dadd( 15.2146, -176.042, -29.1053, 0.23 ) }
    dend_29 { pt3dadd( 15.2368, -177.412, -29.2058, 1.14 ) }
    dend_29 { pt3dadd( 15.3185, -179.627, -29.2719, 0.23 ) }
    dend_29 { pt3dadd( 15.3949, -181.109, -29.2696, 0.68 ) }
    dend_29 { pt3dadd( 15.6479, -185.26, -29.2129, 0.23 ) }
    dend_29 { pt3dadd( 15.7624, -186.737, -29.1744, 1.14 ) }
    dend_29 { pt3dadd( 16.3221, -192.271, -28.9652, 0.23 ) }
    dend_29 { pt3dadd( 16.6196, -195.113, -28.7038, 0.91 ) }
    dend_29 { pt3dadd( 16.7599, -196.465, -28.5282, 0.91 ) }
    dend_29 { pt3dadd( 17.0452, -199.35, -28.076, 0.23 ) }
    dend_29 { pt3dadd( 17.1792, -201.061, -27.7815, 1.14 ) }
    dend_29 { pt3dadd( 17.2416, -202.434, -27.553, 1.14 ) }
    dend_29 { pt3dadd( 17.1626, -208.669, -26.9583, 0.23 ) }
    dend_29 { pt3dadd( 17.0412, -211.2, -26.8011, 0.91 ) }
    dend_29 { pt3dadd( 16.9728, -212.229, -26.8166, 0.91 ) }
    dend_29 { pt3dadd( 16.7486, -215.418, -27.0997, 0.23 ) }
    dend_29 { pt3dadd( 16.6454, -216.987, -27.3831, 0.68 ) }
    dend_29 { pt3dadd( 16.4224, -220.979, -28.5935, 0.23 ) }
    dend_29 { pt3dadd( 16.3509, -222.267, -29.1551, 0.91 ) }
    dend_29 { pt3dadd( 16.1523, -225.58, -30.6262, 0.23 ) }
    dend_29 { pt3dadd( 16.0365, -227.488, -31.4225, 1.14 ) }
    dend_29 { pt3dadd( 15.9763, -228.473, -31.8027, 1.14 ) }
    dend_29 { pt3dadd( 15.8833, -229.905, -32.2634, 1.59 ) }
    dend_29 { pt3dadd( 15.6276, -233.19, -33.0072, 0.23 ) }
    dend_29 { pt3dadd( 15.4695, -234.749, -33.336, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 15.1704, -237.454, -33.833, 0.23 ) }
    dend_29 { pt3dadd( 15.0883, -238.313, -34.0173, 0.68 ) }
    dend_29 { pt3dadd( 14.9927, -239.731, -34.3754, 0.23 ) }
    dend_29 { pt3dadd( 14.9741, -241.098, -34.7531, 0.91 ) }
    dend_29 { pt3dadd( 15.1083, -242.882, -35.3446, 0.23 ) }
    dend_29 { pt3dadd( 15.3007, -244.602, -35.8405, 1.14 ) }
    dend_29 { pt3dadd( 15.7144, -247.766, -36.4357, 0.23 ) }
    dend_29 { pt3dadd( 16.0427, -250.117, -36.7287, 0.23 ) }
    dend_29 { pt3dadd( 16.3543, -252.327, -36.9016, 0.91 ) }
    dend_29 { pt3dadd( 16.9537, -256.618, -37.0529, 0.23 ) }
    dend_29 { pt3dadd( 17.487, -260.594, -37.0264, 1.14 ) }
    dend_29 { pt3dadd( 18.2517, -266.432, -36.7054, 0.23 ) }
    dend_29 { pt3dadd( 18.4427, -268.144, -36.5385, 0.91 ) }
    dend_29 { pt3dadd( 18.5305, -269.205, -36.4097, 0.91 ) }
    dend_29 { pt3dadd( 18.6433, -272.262, -36.0188, 0.23 ) }
    dend_29 { pt3dadd( 18.5689, -274.676, -35.8007, 1.14 ) }
    dend_29 { pt3dadd( 18.2274, -278.205, -35.7904, 0.23 ) }
    dend_29 { pt3dadd( 17.9655, -279.678, -35.8779, 0.68 ) }
    dend_29 { pt3dadd( 17.3714, -282.373, -35.9937, 0.23 ) }
    dend_29 { pt3dadd( 17.0411, -283.657, -36.0354, 1.14 ) }
    dend_29 { pt3dadd( 15.8859, -287.722, -36.1129, 0.23 ) }
    dend_29 { pt3dadd( 15.4989, -289.166, -36.1286, 0.91 ) }
    dend_29 { pt3dadd( 15.3272, -289.893, -36.1364, 0.91 ) }
    dend_29 { pt3dadd( 14.7588, -293.041, -35.9017, 0.23 ) }
    dend_29 { pt3dadd( 14.5617, -294.406, -35.6443, 0.91 ) }
    dend_29 { pt3dadd( 14.1672, -297.392, -34.8372, 0.23 ) }
    dend_29 { pt3dadd( 13.9955, -298.879, -34.3493, 1.14 ) }
    dend_29 { pt3dadd( 13.6699, -301.348, -33.5478, 0.23 ) }
    dend_29 { pt3dadd( 13.2251, -304.281, -32.6432, 0.91 ) }
    dend_29 { pt3dadd( 12.8359, -306.967, -32.083, 0.23 ) }
    dend_29 { pt3dadd( 12.6577, -308.448, -31.8756, 0.91 ) }
    dend_29 { pt3dadd( 12.3438, -311.224, -31.6741, 0.23 ) }
    dend_29 { pt3dadd( 12.0413, -314.037, -31.5806, 1.14 ) }
    dend_29 { pt3dadd( 11.973, -315.077, -31.6233, 1.14 ) }
    dend_29 { pt3dadd( 11.9069, -319.887, -32.3993, 0.23 ) }
    dend_29 { pt3dadd( 11.9903, -321.921, -32.917, 0.23 ) }
    dend_29 { pt3dadd( 12.0734, -322.764, -33.1757, 0.68 ) }
    dend_29 { pt3dadd( 11.6751, -334.735, -34.3789, 0.68 ) }
    dend_29 { pt3dadd( 12.6395, -346.723, -34.7207, 0.68 ) }
    dend_29 { pt3dadd( 15.1506, -358.428, -33.9356, 0.68 ) }
    dend_29 { pt3dadd( 18.5027, -369.877, -32.9326, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 8.82627, -29.3039, -3.32804, 1.59 ) }
    dend_23 { pt3dadd( 8.78681, -29.6536, -3.23778, 1.59 ) }
    dend_23 { pt3dadd( 8.49825, -32.2111, -2.57778, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 8.82627, -29.3039, -3.32804, 0.23 ) }
    dend_20 { pt3dadd( 8.65434, -30.942, -4.84183, 0.23 ) }
    dend_20 { pt3dadd( 8.41239, -33.4036, -7.27905, 0.68 ) }
    dend_20 { pt3dadd( 8.20259, -36.0807, -9.91937, 0.23 ) }
    dend_20 { pt3dadd( 8.06512, -38.7215, -12.697, 0.91 ) }
    dend_20 { pt3dadd( 7.85656, -43.1298, -17.3942, 0.91 ) }
    dend_20 { pt3dadd( 7.72594, -45.7203, -20.1173, 0.23 ) }
    dend_20 { pt3dadd( 7.67113, -47.709, -22.3583, 0.23 ) }
    dend_20 { pt3dadd( 7.70542, -48.6448, -23.4738, 1.59 ) }
    dend_20 { pt3dadd( 8.09612, -52.0229, -27.5899, 0.23 ) }
    dend_20 { pt3dadd( 8.27534, -52.7178, -28.4251, 0.23 ) }
    dend_20 { pt3dadd( 8.67263, -53.6307, -29.3467, 0.23 ) }
    dend_20 { pt3dadd( 9.27779, -54.5654, -30.2649, 0.23 ) }
    dend_20 { pt3dadd( 10.3744, -55.9191, -31.7046, 1.14 ) }
    dend_20 { pt3dadd( 11.5808, -57.2246, -33.2401, 0.68 ) }
    dend_20 { pt3dadd( 12.7859, -58.5686, -34.774, 0.68 ) }
    dend_20 { pt3dadd( 13.8649, -59.9124, -36.2739, 0.68 ) }
    dend_20 { pt3dadd( 14.9696, -61.5726, -38.3681, 0.23 ) }
    dend_20 { pt3dadd( 15.9727, -63.6104, -40.9784, 0.23 ) }
    dend_20 { pt3dadd( 16.6039, -65.1486, -42.9227, 0.68 ) }
    dend_20 { pt3dadd( 17.1831, -66.7625, -45.0227, 0.23 ) }
    dend_20 { pt3dadd( 17.5202, -67.8454, -46.4891, 0.91 ) }
    dend_20 { pt3dadd( 18.4926, -71.8, -51.9869, 0.23 ) }
    dend_20 { pt3dadd( 18.6632, -73.1024, -53.6793, 0.23 ) }
    dend_20 { pt3dadd( 18.7876, -74.5887, -55.5984, 0.68 ) }
    dend_20 { pt3dadd( 19.9351, -82.1876, -65.2985, 0.68 ) }
    dend_20 { pt3dadd( 20.5978, -90.5196, -74.4761, 0.68 ) }
    dend_20 { pt3dadd( 22.8425, -98.9696, -83.3087, 0.68 ) }
    dend_20 { pt3dadd( 25.8559, -108.518, -90.8025, 0.68 ) }
    dend_20 { pt3dadd( 27.0424, -118.495, -98.2819, 0.68 ) }
    dend_20 { pt3dadd( 27.388, -129.337, -104.676, 0.68 ) }
    dend_20 { pt3dadd( 28.0463, -140.978, -109.629, 0.68 ) }
    dend_20 { pt3dadd( 31.4584, -151.831, -115.086, 0.68 ) }
    dend_20 { pt3dadd( 34.7825, -162.999, -120.002, 0.68 ) }
    dend_20 { pt3dadd( 39.171, -174.164, -124.055, 0.68 ) }
    dend_20 { pt3dadd( 44.2191, -185.221, -127.608, 0.68 ) }
    dend_20 { pt3dadd( 49.3898, -196.69, -129.462, 0.68 ) }
    dend_20 { pt3dadd( 54.3418, -208.308, -131.06, 0.68 ) }
    dend_20 { pt3dadd( 57.756, -220.462, -132.939, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 254.792, -138.485, -37.4128, 0.23 ) }
    dend_18 { pt3dadd( 265.395, -143.847, -38.6009, 0.23 ) }
    dend_18 { pt3dadd( 275.337, -150.232, -40.6964, 0.23 ) }
    dend_18 { pt3dadd( 284.022, -158.543, -41.8454, 0.23 ) }
    dend_18 { pt3dadd( 291.113, -168.124, -44.4241, 0.23 ) }
    dend_18 { pt3dadd( 297.838, -178.249, -44.7517, 0.23 ) }
    dend_18 { pt3dadd( 303.792, -188.883, -44.9538, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 254.792, -138.485, -37.4128, 0.23 ) }
    dend_17 { pt3dadd( 262.335, -142.187, -38.3268, 0.23 ) }
    dend_17 { pt3dadd( 270.148, -145.328, -38.2063, 0.23 ) }
    dend_17 { pt3dadd( 277.607, -149.119, -39.4517, 0.23 ) }
    dend_17 { pt3dadd( 284.64, -153.166, -41.9296, 0.23 ) }
    dend_17 { pt3dadd( 291.24, -157.485, -45.1164, 0.23 ) }
    dend_17 { pt3dadd( 298.159, -162.018, -47.0789, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 16.2519, 21.3352, -2.53234, 0.23 ) }
    dend_14 { pt3dadd( 18.1091, 22.5652, -3.07908, 0.23 ) }
    dend_14 { pt3dadd( 20.6615, 24.1928, -3.87841, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 23.3153, 25.8815, -4.6347, 0.23 ) }
    dend_14 { pt3dadd( 24.7411, 26.8305, -5.02036, 0.91 ) }
    dend_14 { pt3dadd( 25.6566, 27.4628, -5.28649, 0.91 ) }
    dend_14 { pt3dadd( 27.1419, 28.5335, -5.73516, 0.23 ) }
    dend_14 { pt3dadd( 29.3313, 30.1935, -6.33032, 1.59 ) }
    dend_14 { pt3dadd( 31.262, 31.7475, -6.8583, 0.23 ) }
    dend_14 { pt3dadd( 32.4019, 32.7237, -7.19719, 1.14 ) }
    dend_14 { pt3dadd( 34.3613, 34.394, -7.72368, 0.23 ) }
    dend_14 { pt3dadd( 35.2218, 35.0955, -7.95287, 0.23 ) }
    dend_14 { pt3dadd( 36.8138, 36.412, -8.4046, 1.14 ) }
    dend_14 { pt3dadd( 38.046, 37.3981, -8.83515, 0.23 ) }
    dend_14 { pt3dadd( 38.8958, 38.0383, -9.18138, 1.14 ) }
    dend_14 { pt3dadd( 40.1751, 38.9569, -9.7157, 1.14 ) }
    dend_14 { pt3dadd( 42.461, 40.5478, -10.6148, 0.23 ) }
    dend_14 { pt3dadd( 44.3929, 41.8624, -11.3348, 1.59 ) }
    dend_14 { pt3dadd( 47.2335, 43.7559, -12.335, 0.23 ) }
    dend_14 { pt3dadd( 49.0265, 44.9852, -12.897, 0.68 ) }
    dend_14 { pt3dadd( 51.3979, 46.634, -13.5099, 0.23 ) }
    dend_14 { pt3dadd( 52.9239, 47.753, -13.8319, 1.36 ) }
    dend_14 { pt3dadd( 54.4935, 48.9591, -14.0447, 0.23 ) }
    dend_14 { pt3dadd( 56.359, 50.48, -14.1859, 1.36 ) }
    dend_14 { pt3dadd( 59.5088, 53.2791, -14.2517, 0.23 ) }
    dend_14 { pt3dadd( 61.8524, 55.4849, -14.2969, 0.23 ) }
    dend_14 { pt3dadd( 63.1841, 56.8613, -14.3232, 0.23 ) }
    dend_14 { pt3dadd( 64.6713, 58.5565, -14.3828, 2.05 ) }
    dend_14 { pt3dadd( 66.3156, 60.6159, -14.4673, 0.23 ) }
    dend_14 { pt3dadd( 67.9592, 62.9321, -14.5604, 0.23 ) }
    dend_14 { pt3dadd( 68.8731, 64.3584, -14.612, 1.59 ) }
    dend_14 { pt3dadd( 70.2822, 66.6686, -14.7088, 0.23 ) }
    dend_14 { pt3dadd( 70.7751, 67.4749, -14.7358, 1.14 ) }
    dend_14 { pt3dadd( 71.4491, 68.6212, -14.778, 1.14 ) }
    dend_14 { pt3dadd( 72.1177, 69.7323, -14.8267, 0.23 ) }
    dend_14 { pt3dadd( 73.3049, 71.7093, -14.9467, 1.14 ) }
    dend_14 { pt3dadd( 74.2043, 73.1601, -14.9589, 0.23 ) }
    dend_14 { pt3dadd( 74.8659, 74.1105, -14.9605, 0.23 ) }
    dend_14 { pt3dadd( 75.6578, 75.1403, -14.9767, 0.91 ) }
    dend_14 { pt3dadd( 76.7318, 76.4548, -15.0201, 0.23 ) }
    dend_14 { pt3dadd( 77.808, 77.728, -15.0881, 1.36 ) }
    dend_14 { pt3dadd( 79.6863, 79.8712, -15.3907, 0.23 ) }
    dend_14 { pt3dadd( 81.6615, 82.0457, -15.8759, 0.23 ) }
    dend_14 { pt3dadd( 82.6838, 83.0619, -16.1948, 0.91 ) }
    dend_14 { pt3dadd( 83.3514, 83.6799, -16.4337, 0.91 ) }
    dend_14 { pt3dadd( 84.8618, 84.9281, -17.0881, 0.23 ) }
    dend_14 { pt3dadd( 86.4397, 86.0667, -17.8544, 0.91 ) }
    dend_14 { pt3dadd( 88.3659, 87.3426, -18.9299, 0.23 ) }
    dend_14 { pt3dadd( 89.9971, 88.3915, -19.8149, 1.14 ) }
    dend_14 { pt3dadd( 90.7313, 88.8266, -20.1745, 1.14 ) }
    dend_14 { pt3dadd( 92.5444, 89.8585, -20.9706, 0.23 ) }
    dend_14 { pt3dadd( 93.6569, 90.4378, -21.3815, 1.14 ) }
    dend_14 { pt3dadd( 95.4349, 91.3734, -21.8514, 0.23 ) }
    dend_14 { pt3dadd( 96.2966, 91.8237, -22.06, 1.14 ) }
    dend_14 { pt3dadd( 99.3406, 93.4449, -22.7134, 0.23 ) }
    dend_14 { pt3dadd( 100.456, 94.0514, -22.9309, 0.23 ) }
    dend_14 { pt3dadd( 102.611, 95.3104, -23.2769, 1.82 ) }
    dend_14 { pt3dadd( 104.947, 96.7166, -23.6239, 0.23 ) }
    dend_14 { pt3dadd( 107.776, 98.4673, -23.9949, 1.36 ) }
    dend_14 { pt3dadd( 108.559, 98.985, -24.0968, 0.23 ) }
    dend_14 { pt3dadd( 109.629, 99.7666, -24.2226, 0.68 ) }
    dend_14 { pt3dadd( 111.558, 101.257, -24.4238, 0.23 ) }
    dend_14 { pt3dadd( 112.535, 102.121, -24.519, 0.23 ) }
    dend_14 { pt3dadd( 113.338, 102.883, -24.591, 1.14 ) }
    dend_14 { pt3dadd( 114.14, 103.707, -24.6108, 1.14 ) }
    dend_14 { pt3dadd( 114.775, 104.4, -24.6498, 0.23 ) }
    dend_14 { pt3dadd( 115.255, 104.917, -24.717, 0.23 ) }
    dend_14 { pt3dadd( 116.072, 105.837, -24.9011, 1.14 ) }
    dend_14 { pt3dadd( 116.704, 106.602, -25.0734, 1.14 ) }
    dend_14 { pt3dadd( 117.754, 107.887, -25.4666, 0.23 ) }
    dend_14 { pt3dadd( 118.328, 108.58, -25.7129, 0.91 ) }
    dend_14 { pt3dadd( 119.536, 110.056, -26.2728, 0.23 ) }
    dend_14 { pt3dadd( 120.832, 111.689, -26.9206, 1.14 ) }
    dend_14 { pt3dadd( 121.984, 113.13, -27.4939, 0.23 ) }
    dend_14 { pt3dadd( 123.371, 114.786, -28.225, 1.14 ) }
    dend_14 { pt3dadd( 124.08, 115.602, -28.5999, 0.23 ) }
    dend_14 { pt3dadd( 124.894, 116.534, -29.012, 0.68 ) }
    dend_14 { pt3dadd( 126.18, 117.966, -29.5836, 0.23 ) }
    dend_14 { pt3dadd( 126.664, 118.451, -29.801, 0.91 ) }
    dend_14 { pt3dadd( 128.704, 120.496, -30.7316, 0.23 ) }
    dend_14 { pt3dadd( 129.457, 121.302, -31.0782, 0.23 ) }
    dend_14 { pt3dadd( 130.323, 122.304, -31.545, 0.23 ) }
    dend_14 { pt3dadd( 131.286, 123.548, -32.1955, 0.91 ) }
    dend_14 { pt3dadd( 132.379, 125.244, -33.1341, 0.23 ) }
    dend_14 { pt3dadd( 133.167, 126.881, -34.1179, 1.14 ) }
    dend_14 { pt3dadd( 133.417, 127.664, -34.603, 0.23 ) }
    dend_14 { pt3dadd( 133.661, 128.742, -35.3094, 0.91 ) }
    dend_14 { pt3dadd( 133.937, 130.654, -36.5531, 0.23 ) }
    dend_14 { pt3dadd( 134.025, 131.966, -37.3785, 0.91 ) }
    dend_14 { pt3dadd( 134.048, 133.741, -38.421, 0.23 ) }
    dend_14 { pt3dadd( 134.058, 134.796, -39.1038, 0.91 ) }
    dend_14 { pt3dadd( 134.083, 136.11, -39.9877, 0.23 ) }
    dend_14 { pt3dadd( 134.16, 137.74, -41.1014, 0.23 ) }
    dend_14 { pt3dadd( 134.19, 138.51, -41.6195, 0.91 ) }
    dend_14 { pt3dadd( 134.238, 139.535, -42.3179, 0.23 ) }
    dend_14 { pt3dadd( 134.371, 141.574, -43.6827, 1.14 ) }
    dend_14 { pt3dadd( 134.42, 142.334, -44.1955, 1.14 ) }
    dend_14 { pt3dadd( 134.568, 145.079, -45.9965, 0.23 ) }
    dend_14 { pt3dadd( 134.643, 146.522, -46.9594, 0.23 ) }
    dend_14 { pt3dadd( 134.674, 147.036, -47.2906, 0.45 ) }
    dend_14 { pt3dadd( 134.718, 147.711, -47.6862, 0.23 ) }
    dend_14 { pt3dadd( 134.742, 148.546, -48.0727, 0.23 ) }
    dend_14 { pt3dadd( 134.792, 150.24, -48.8263, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 141.687, 158.131, -49.9518, 0.23 ) }
    dend_14 { pt3dadd( 148.991, 165.223, -52.6068, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 16.2519, 21.3352, -2.53234, 0.23 ) }
    dend_5 { pt3dadd( 18.5513, 22.4997, -2.51981, 0.23 ) }
    dend_5 { pt3dadd( 22.6023, 24.5831, -2.52076, 0.91 ) }
    dend_5 { pt3dadd( 26.0532, 26.2951, -2.59896, 0.23 ) }
    dend_5 { pt3dadd( 28.0018, 27.2388, -2.64248, 0.91 ) }
    dend_5 { pt3dadd( 30.1344, 28.2506, -2.65735, 0.23 ) }
    dend_5 { pt3dadd( 32.0992, 29.1812, -2.63495, 0.23 ) }
    dend_5 { pt3dadd( 33.8349, 29.998, -2.62955, 0.91 ) }
    dend_5 { pt3dadd( 35.6384, 30.8867, -2.63397, 0.23 ) }
    dend_5 { pt3dadd( 37.7359, 31.9654, -2.5043, 0.91 ) }
    dend_5 { pt3dadd( 40.2655, 33.2974, -2.33591, 0.23 ) }
    dend_5 { pt3dadd( 42.5995, 34.5649, -2.11356, 0.68 ) }
    dend_5 { pt3dadd( 44.235, 35.4566, -1.95932, 0.23 ) }
    dend_5 { pt3dadd( 45.8201, 36.3442, -1.79981, 1.14 ) }
    dend_5 { pt3dadd( 48.1132, 37.7346, -1.52247, 0.23 ) }
    dend_5 { pt3dadd( 49.4393, 38.5726, -1.40899, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 18/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -5.82918, 307.275, -90.7538, 0.23 ) }
    dend_3 { pt3dadd( -5.73105, 316.268, -93.9582, 0.23 ) }
    dend_3 { pt3dadd( -6.82778, 324.583, -98.437, 0.23 ) }
    dend_3 { pt3dadd( -6.84307, 333.174, -102.528, 0.23 ) }
    dend_3 { pt3dadd( -8.64122, 341.922, -105.921, 0.23 ) }
    dend_3 { pt3dadd( -12.1914, 349.95, -109.599, 0.23 ) }
    dend_3 { pt3dadd( -17.0474, 357.799, -111.937, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.82918, 307.275, -90.7538, 0.23 ) }
    dend_2 { pt3dadd( -6.48848, 316.198, -93.0957, 0.23 ) }
    dend_2 { pt3dadd( -6.07727, 325.317, -94.6827, 0.23 ) }
    dend_2 { pt3dadd( -5.18014, 334.546, -94.9688, 0.23 ) }
    dend_2 { pt3dadd( -5.05101, 343.818, -95.4238, 0.23 ) }
    dend_2 { pt3dadd( -4.63605, 353.064, -94.6998, 0.23 ) }
    dend_2 { pt3dadd( -3.25355, 362.226, -94.3795, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_62 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -13.7608, 18.2857, -15.8173, 0.23 ) }
    dend_70 { pt3dadd( -14.0576, 17.0867, -18.9774, 0.23 ) }
    dend_70 { pt3dadd( -14.2185, 16.4532, -20.8733, 0.23 ) }
    dend_70 { pt3dadd( -14.3815, 15.8661, -22.5324, 0.91 ) }
    dend_70 { pt3dadd( -14.7808, 14.6708, -25.5713, 0.68 ) }
    dend_70 { pt3dadd( -15.2291, 13.5549, -28.1496, 0.23 ) }
    dend_70 { pt3dadd( -15.6504, 12.7322, -29.9453, 0.68 ) }
    dend_70 { pt3dadd( -16.3874, 11.3533, -32.8245, 0.23 ) }
    dend_70 { pt3dadd( -16.8052, 10.7751, -33.9754, 0.91 ) }
    dend_70 { pt3dadd( -17.8467, 9.64437, -36.1629, 0.23 ) }
    dend_70 { pt3dadd( -18.6252, 8.94351, -37.3568, 1.14 ) }
    dend_70 { pt3dadd( -20.3978, 7.36667, -39.5853, 0.23 ) }
    dend_70 { pt3dadd( -21.1379, 6.66267, -40.4583, 0.68 ) }
    dend_70 { pt3dadd( -21.9402, 5.86923, -41.3321, 0.23 ) }
    dend_70 { pt3dadd( -22.5532, 5.20524, -42.0187, 0.23 ) }
    dend_70 { pt3dadd( -23.0405, 4.63148, -42.5581, 0.23 ) }
    dend_70 { pt3dadd( -24.1758, 2.96369, -43.9963, 1.14 ) }
    dend_70 { pt3dadd( -25.3094, 0.965566, -45.5525, 0.23 ) }
    dend_70 { pt3dadd( -26.3999, -1.30321, -47.3583, 0.91 ) }
    dend_70 { pt3dadd( -27.1999, -3.14099, -48.8557, 0.23 ) }
    dend_70 { pt3dadd( -27.7339, -4.54525, -49.9779, 1.14 ) }
    dend_70 { pt3dadd( -28.6665, -7.08757, -52.0492, 0.23 ) }
    dend_70 { pt3dadd( -29.1228, -8.42619, -53.1584, 0.91 ) }
    dend_70 { pt3dadd( -29.8237, -10.6889, -54.9802, 0.23 ) }
    dend_70 { pt3dadd( -30.1886, -12.1406, -56.1174, 1.14 ) }
    dend_70 { pt3dadd( -30.569, -14.0821, -57.745, 0.23 ) }
    dend_70 { pt3dadd( -34.7071, -23.2203, -65.4637, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 59/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -13.7608, 18.2857, -15.8173, 0.23 ) }
    dend_63 { pt3dadd( -11.5956, 18.34, -16.8772, 0.23 ) }
    dend_63 { pt3dadd( -8.91279, 18.4946, -18.1162, 0.91 ) }
    dend_63 { pt3dadd( -6.78328, 18.6047, -19.0291, 0.23 ) }
    dend_63 { pt3dadd( -6.14095, 18.6599, -19.3226, 0.68 ) }
    dend_63 { pt3dadd( -4.57463, 18.8553, -20.0941, 0.23 ) }
    dend_63 { pt3dadd( -3.52532, 19.0408, -20.681, 1.14 ) }
    dend_63 { pt3dadd( -0.924586, 19.5586, -22.239, 0.23 ) }
    dend_63 { pt3dadd( 1.0419, 19.9887, -23.6581, 0.91 ) }
    dend_63 { pt3dadd( 4.01188, 20.5912, -26.1088, 0.23 ) }
    dend_63 { pt3dadd( 5.30098, 20.8447, -27.2954, 1.36 ) }
    dend_63 { pt3dadd( 8.17518, 21.4711, -30.3346, 0.23 ) }
    dend_63 { pt3dadd( 9.45464, 21.7632, -31.9242, 0.91 ) }
    dend_63 { pt3dadd( 12.2929, 22.3708, -36.152, 0.23 ) }
    dend_63 { pt3dadd( 13.5719, 22.6429, -38.2755, 0.68 ) }
    dend_63 { pt3dadd( 14.8484, 22.8433, -40.6211, 0.91 ) }
    dend_63 { pt3dadd( 16.1962, 22.9776, -43.3068, 0.23 ) }
    dend_63 { pt3dadd( 16.8426, 23.01, -44.8615, 0.23 ) }
    dend_63 { pt3dadd( 17.4192, 23.1169, -46.6364, 1.14 ) }
    dend_63 { pt3dadd( 24.7795, 24.78, -53.7622, 1.14 ) }
    dend_63 { pt3dadd( 33.3569, 27.9729, -58.6946, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -46.6672, 35.1975, -15.3945, 0.23 ) }
    dend_59 { pt3dadd( -47.383, 36.2267, -15.2662, 0.23 ) }
    dend_59 { pt3dadd( -48.0477, 37.1316, -15.175, 0.23 ) }
    dend_59 { pt3dadd( -48.3319, 37.4958, -15.1505, 0.91 ) }
    dend_59 { pt3dadd( -49.2693, 38.6408, -15.0481, 0.23 ) }
    dend_59 { pt3dadd( -49.8374, 39.3097, -14.9899, 0.91 ) }
    dend_59 { pt3dadd( -51.0307, 40.6774, -14.8856, 0.23 ) }
    dend_59 { pt3dadd( -51.7843, 41.4801, -14.791, 1.14 ) }
    dend_59 { pt3dadd( -52.9721, 42.6781, -14.6554, 0.23 ) }
    dend_59 { pt3dadd( -53.8223, 43.5113, -14.5824, 0.91 ) }
    dend_59 { pt3dadd( -54.5892, 44.2247, -14.5488, 0.23 ) }
    dend_59 { pt3dadd( -55.2446, 44.7984, -14.4851, 0.91 ) }
    dend_59 { pt3dadd( -56.2254, 45.5709, -14.3566, 0.23 ) }
    dend_59 { pt3dadd( -57.021, 46.1548, -14.2308, 0.68 ) }
    dend_59 { pt3dadd( -57.6031, 46.5272, -14.1484, 0.23 ) }
    dend_59 { pt3dadd( -58.2275, 46.8632, -14.0701, 0.68 ) }
    dend_59 { pt3dadd( -59.554, 47.4562, -13.899, 0.23 ) }
    dend_59 { pt3dadd( -60.2008, 47.6854, -13.8136, 1.14 ) }
    dend_59 { pt3dadd( -61.2337, 47.9704, -13.6947, 0.23 ) }
    dend_59 { pt3dadd( -62.5018, 48.2483, -13.5346, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_59 { pt3dadd( -63.7912, 48.4684, -13.4136, 0.68 ) }
    dend_59 { pt3dadd( -64.4341, 48.5684, -13.3885, 0.23 ) }
    dend_59 { pt3dadd( -65.9023, 48.777, -13.433, 0.68 ) }
    dend_59 { pt3dadd( -66.4448, 48.8554, -13.4625, 0.23 ) }
    dend_59 { pt3dadd( -67.2241, 48.9772, -13.5303, 0.68 ) }
    dend_59 { pt3dadd( -68.1006, 49.1514, -13.6417, 0.23 ) }
    dend_59 { pt3dadd( -69.3015, 49.4347, -13.8383, 0.91 ) }
    dend_59 { pt3dadd( -70.615, 49.8188, -14.0597, 0.23 ) }
    dend_59 { pt3dadd( -71.7268, 50.2101, -14.2618, 0.91 ) }
    dend_59 { pt3dadd( -72.8902, 50.6789, -14.4094, 0.23 ) }
    dend_59 { pt3dadd( -73.4422, 50.9169, -14.4553, 0.23 ) }
    dend_59 { pt3dadd( -74.5556, 51.4511, -14.522, 0.91 ) }
    dend_59 { pt3dadd( -75.5517, 51.9766, -14.5302, 0.23 ) }
    dend_59 { pt3dadd( -76.2078, 52.3601, -14.5128, 0.68 ) }
    dend_59 { pt3dadd( -77.8677, 53.4125, -14.4164, 0.23 ) }
    dend_59 { pt3dadd( -78.8631, 54.1012, -14.3357, 0.68 ) }
    dend_59 { pt3dadd( -80.068, 55.0046, -14.2276, 0.23 ) }
    dend_59 { pt3dadd( -81.1566, 55.9363, -14.078, 0.23 ) }
    dend_59 { pt3dadd( -81.829, 56.5887, -13.9581, 0.23 ) }
    dend_59 { pt3dadd( -82.3984, 57.2479, -13.8392, 0.68 ) }
    dend_59 { pt3dadd( -82.7035, 57.6749, -13.7624, 0.23 ) }
    dend_59 { pt3dadd( -82.9302, 58.0319, -13.6855, 0.91 ) }
    dend_59 { pt3dadd( -83.9445, 59.7777, -13.2531, 0.23 ) }
    dend_59 { pt3dadd( -84.324, 60.5038, -13.0916, 0.23 ) }
    dend_59 { pt3dadd( -84.8393, 61.5522, -12.8326, 0.23 ) }
    dend_59 { pt3dadd( -85.3624, 62.6009, -12.5727, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -46.6672, 35.1975, -15.3945, 0.45 ) }
    dend_58 { pt3dadd( -48.2088, 34.749, -16.3689, 0.45 ) }
    dend_58 { pt3dadd( -50.197, 34.0925, -17.5635, 0.91 ) }
    dend_58 { pt3dadd( -51.2117, 33.7106, -18.2421, 0.23 ) }
    dend_58 { pt3dadd( -52.6964, 33.0217, -19.3673, 0.91 ) }
    dend_58 { pt3dadd( -53.2272, 32.7479, -19.7881, 0.91 ) }
    dend_58 { pt3dadd( -53.8566, 32.4069, -20.307, 0.23 ) }
    dend_58 { pt3dadd( -55.0072, 31.7215, -21.3093, 0.68 ) }
    dend_58 { pt3dadd( -56.3, 30.8593, -22.4753, 0.23 ) }
    dend_58 { pt3dadd( -57.6172, 29.9708, -23.6667, 1.14 ) }
    dend_58 { pt3dadd( -58.3571, 29.472, -24.3565, 1.14 ) }
    dend_58 { pt3dadd( -59.8131, 28.5258, -25.7438, 0.23 ) }
    dend_58 { pt3dadd( -60.6891, 28.0194, -26.5639, 1.14 ) }
    dend_58 { pt3dadd( -62.2776, 27.1709, -28.0539, 0.23 ) }
    dend_58 { pt3dadd( -63.1953, 26.7427, -28.8357, 0.23 ) }
    dend_58 { pt3dadd( -64.7604, 26.0693, -30.0849, 0.23 ) }
    dend_58 { pt3dadd( -65.0619, 25.9364, -30.3019, 0.91 ) }
    dend_58 { pt3dadd( -65.9722, 25.5463, -30.87, 1.59 ) }
    dend_58 { pt3dadd( -68.064, 24.711, -32.0132, 0.23 ) }
    dend_58 { pt3dadd( -70.1131, 23.9726, -32.9769, 1.36 ) }
    dend_58 { pt3dadd( -71.8504, 23.3956, -33.6665, 0.91 ) }
    dend_58 { pt3dadd( -74.343, 22.632, -34.4841, 0.23 ) }
    dend_58 { pt3dadd( -76.2046, 22.0899, -35.032, 1.14 ) }
    dend_58 { pt3dadd( -78.0946, 21.57, -35.5233, 0.23 ) }
    dend_58 { pt3dadd( -79.229, 21.3135, -35.7641, 0.23 ) }
    dend_58 { pt3dadd( -80.8852, 21.0024, -36.1046, 0.68 ) }
    dend_58 { pt3dadd( -81.7633, 20.8707, -36.2886, 0.68 ) }
    dend_58 { pt3dadd( -83.0019, 20.7098, -36.5707, 0.23 ) }
    dend_58 { pt3dadd( -84.5755, 20.4809, -36.941, 0.91 ) }
    dend_58 { pt3dadd( -85.9978, 20.2602, -37.3243, 0.23 ) }
    dend_58 { pt3dadd( -86.6838, 20.1509, -37.5356, 0.91 ) }
    dend_58 { pt3dadd( -87.8735, 19.9666, -37.9498, 0.23 ) }
    dend_58 { pt3dadd( -90.0941, 19.6179, -38.7458, 1.14 ) }
    dend_58 { pt3dadd( -90.9357, 19.4834, -39.0559, 0.23 ) }
    dend_58 { pt3dadd( -92.118, 19.294, -39.5013, 0.68 ) }
    dend_58 { pt3dadd( -93.6519, 19.0325, -40.0838, 0.23 ) }
    dend_58 { pt3dadd( -94.843, 18.8385, -40.4895, 0.45 ) }
    dend_58 { pt3dadd( -95.9083, 18.6527, -40.7682, 0.23 ) }
    dend_58 { pt3dadd( -96.4374, 18.5617, -40.8727, 0.23 ) }
    dend_58 { pt3dadd( -97.8829, 18.3129, -41.0327, 0.91 ) }
    dend_58 { pt3dadd( -100.386, 17.8499, -41.1473, 0.23 ) }
    dend_58 { pt3dadd( -102.157, 17.5213, -41.1721, 0.91 ) }
    dend_58 { pt3dadd( -105.462, 16.9324, -41.1561, 0.23 ) }
    dend_58 { pt3dadd( -106.353, 16.7725, -41.1384, 0.23 ) }
    dend_58 { pt3dadd( -108.637, 16.3307, -41.049, 1.59 ) }
    dend_58 { pt3dadd( -111.539, 15.7208, -40.828, 0.23 ) }
    dend_58 { pt3dadd( -112.445, 15.5187, -40.7422, 0.91 ) }
    dend_58 { pt3dadd( -113.023, 15.3892, -40.6845, 0.91 ) }
    dend_58 { pt3dadd( -115.283, 14.8924, -40.4565, 0.23 ) }
    dend_58 { pt3dadd( -117.349, 14.4036, -40.2622, 0.91 ) }
    dend_58 { pt3dadd( -119.324, 13.9176, -40.1127, 0.23 ) }
    dend_58 { pt3dadd( -120.383, 13.6535, -40.0331, 1.14 ) }
    dend_58 { pt3dadd( -122.425, 13.1275, -39.9337, 0.23 ) }
    dend_58 { pt3dadd( -123.504, 12.8346, -39.9289, 0.91 ) }
    dend_58 { pt3dadd( -124.334, 12.6236, -39.9806, 0.23 ) }
    dend_58 { pt3dadd( -125.413, 12.3611, -40.1608, 0.68 ) }
    dend_58 { pt3dadd( -128.275, 11.6737, -40.8424, 0.23 ) }
    dend_58 { pt3dadd( -129.477, 11.3785, -41.1543, 0.91 ) }
    dend_58 { pt3dadd( -130.905, 11.0206, -41.5686, 0.23 ) }
    dend_58 { pt3dadd( -132.563, 10.6221, -42.1015, 0.68 ) }
    dend_58 { pt3dadd( -134.255, 10.2056, -42.6995, 0.23 ) }
    dend_58 { pt3dadd( -135.513, 9.87706, -43.1859, 0.23 ) }
    dend_58 { pt3dadd( -137.08, 9.40814, -43.8544, 0.91 ) }
    dend_58 { pt3dadd( -138.849, 8.84314, -44.6096, 0.23 ) }
    dend_58 { pt3dadd( -140.099, 8.43402, -45.1363, 1.14 ) }
    dend_58 { pt3dadd( -141.92, 7.8102, -45.8861, 0.23 ) }
    dend_58 { pt3dadd( -142.892, 7.50053, -46.2665, 0.91 ) }
    dend_58 { pt3dadd( -144.436, 7.0986, -46.8886, 0.23 ) }
    dend_58 { pt3dadd( -146.269, 6.74736, -47.6076, 0.91 ) }
    dend_58 { pt3dadd( -147.31, 6.60466, -47.9781, 0.23 ) }
    dend_58 { pt3dadd( -148.202, 6.53611, -48.2586, 0.68 ) }
    dend_58 { pt3dadd( -149.179, 6.52562, -48.5598, 0.23 ) }
    dend_58 { pt3dadd( -150.984, 6.60131, -49.0587, 0.91 ) }
    dend_58 { pt3dadd( -152.779, 6.72839, -49.438, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( -153.67, 6.82051, -49.5766, 0.23 ) }
    dend_58 { pt3dadd( -154.376, 6.8878, -49.6605, 0.91 ) }
    dend_58 { pt3dadd( -155.137, 6.95017, -49.718, 0.23 ) }
    dend_58 { pt3dadd( -157.108, 7.05962, -49.8134, 0.91 ) }
    dend_58 { pt3dadd( -158.837, 7.11237, -49.7369, 0.23 ) }
    dend_58 { pt3dadd( -160.181, 7.14187, -49.5347, 0.68 ) }
    dend_58 { pt3dadd( -161.268, 7.14881, -49.2953, 0.23 ) }
    dend_58 { pt3dadd( -163.572, 7.08797, -48.5925, 0.91 ) }
    dend_58 { pt3dadd( -164.778, 7.04403, -48.1882, 0.23 ) }
    dend_58 { pt3dadd( -167.126, 6.92662, -47.3195, 0.91 ) }
    dend_58 { pt3dadd( -169.318, 6.80723, -46.4253, 0.23 ) }
    dend_58 { pt3dadd( -170.724, 6.68317, -45.7579, 0.91 ) }
    dend_58 { pt3dadd( -173.047, 6.49894, -44.4531, 0.23 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 47.3698, 40.563, -10.6361, 0.23 ) }
    dend_55 { pt3dadd( 49.1767, 41.9371, -9.72565, 0.23 ) }
    dend_55 { pt3dadd( 50.3795, 42.7707, -9.092, 0.91 ) }
    dend_55 { pt3dadd( 51.9128, 43.7517, -8.19187, 0.23 ) }
    dend_55 { pt3dadd( 54.0808, 45.1056, -6.91482, 0.23 ) }
    dend_55 { pt3dadd( 54.7336, 45.5071, -6.53372, 0.91 ) }
    dend_55 { pt3dadd( 56.2216, 46.4565, -5.61722, 0.23 ) }
    dend_55 { pt3dadd( 57.3384, 47.1417, -4.8705, 0.68 ) }
    dend_55 { pt3dadd( 58.8978, 48.1642, -3.77961, 0.23 ) }
    dend_55 { pt3dadd( 60.017, 48.9821, -2.93079, 0.68 ) }
    dend_55 { pt3dadd( 61.4066, 50.1715, -1.88569, 0.23 ) }
    dend_55 { pt3dadd( 62.7088, 51.3656, -0.919248, 0.68 ) }
    dend_55 { pt3dadd( 63.3421, 51.9908, -0.477447, 0.23 ) }
    dend_55 { pt3dadd( 63.9828, 52.6328, -0.0700222, 0.91 ) }
    dend_55 { pt3dadd( 65.4414, 53.9826, 0.675603, 0.23 ) }
    dend_55 { pt3dadd( 66.565, 54.8979, 1.15266, 0.68 ) }
    dend_55 { pt3dadd( 68.2173, 56.0936, 1.70704, 0.23 ) }
    dend_55 { pt3dadd( 69.2806, 56.7377, 2.00674, 0.68 ) }
    dend_55 { pt3dadd( 71.5237, 57.9536, 2.68123, 0.23 ) }
    dend_55 { pt3dadd( 73.6455, 59.0137, 3.31764, 0.91 ) }
    dend_55 { pt3dadd( 75.0963, 59.7121, 3.67042, 0.23 ) }
    dend_55 { pt3dadd( 75.8495, 60.0723, 3.84398, 0.23 ) }
    dend_55 { pt3dadd( 78.4118, 61.4057, 4.41868, 0.68 ) }
    dend_55 { pt3dadd( 80.4864, 62.6162, 4.88139, 0.23 ) }
    dend_55 { pt3dadd( 81.7213, 63.4795, 5.15445, 0.91 ) }
    dend_55 { pt3dadd( 84.3575, 65.6024, 5.61092, 0.23 ) }
    dend_55 { pt3dadd( 85.0976, 66.2527, 5.68457, 0.23 ) }
    dend_55 { pt3dadd( 86.3007, 67.3874, 5.68738, 0.91 ) }
    dend_55 { pt3dadd( 88.064, 69.1427, 5.45008, 0.23 ) }
    dend_55 { pt3dadd( 89.3391, 70.4742, 5.16486, 0.91 ) }
    dend_55 { pt3dadd( 91.2536, 72.5182, 4.70226, 0.23 ) }
    dend_55 { pt3dadd( 92.6512, 74.024, 4.34931, 0.68 ) }
    dend_55 { pt3dadd( 94.3218, 75.7502, 3.83976, 0.23 ) }
    dend_55 { pt3dadd( 95.4606, 76.8648, 3.39914, 0.23 ) }
    dend_55 { pt3dadd( 96.5342, 77.8702, 2.84997, 0.91 ) }
    dend_55 { pt3dadd( 104.615, 81.6643, 3.33872, 0.91 ) }
    dend_55 { pt3dadd( 113.111, 83.3885, 5.26832, 0.91 ) }
    dend_55 { pt3dadd( 121.964, 83.5523, 5.00311, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 47.3698, 40.563, -10.6361, 0.23 ) }
    dend_54 { pt3dadd( 49.1112, 40.5999, -12.8378, 0.23 ) }
    dend_54 { pt3dadd( 50.579, 40.6052, -14.5999, 0.68 ) }
    dend_54 { pt3dadd( 52.7145, 40.5662, -17.105, 1.36 ) }
    dend_54 { pt3dadd( 55.1649, 40.4496, -19.8302, 0.23 ) }
    dend_54 { pt3dadd( 56.3883, 40.3744, -21.0909, 0.45 ) }
    dend_54 { pt3dadd( 58.3993, 40.2539, -23.0492, 0.45 ) }
    dend_54 { pt3dadd( 60.0857, 40.1563, -24.4656, 0.23 ) }
    dend_54 { pt3dadd( 61.5776, 40.0393, -25.5552, 1.14 ) }
    dend_54 { pt3dadd( 62.7758, 39.9715, -26.275, 1.14 ) }
    dend_54 { pt3dadd( 64.2137, 39.9629, -26.9742, 0.45 ) }
    dend_54 { pt3dadd( 67.9868, 40.242, -28.5031, 0.23 ) }
    dend_54 { pt3dadd( 69.6841, 40.4494, -29.0358, 1.14 ) }
    dend_54 { pt3dadd( 70.8996, 40.602, -29.3413, 0.23 ) }
    dend_54 { pt3dadd( 72.4215, 40.8386, -29.6405, 0.23 ) }
    dend_54 { pt3dadd( 74.6685, 41.1935, -30.0689, 0.91 ) }
    dend_54 { pt3dadd( 77.0937, 41.5838, -30.5916, 0.23 ) }
    dend_54 { pt3dadd( 77.7469, 41.6881, -30.7217, 0.68 ) }
    dend_54 { pt3dadd( 78.7899, 41.843, -30.9777, 0.68 ) }
    dend_54 { pt3dadd( 80.2851, 42.0477, -31.483, 0.23 ) }
    dend_54 { pt3dadd( 82.7455, 42.3489, -32.3563, 0.91 ) }
    dend_54 { pt3dadd( 85.731, 42.818, -33.446, 0.23 ) }
    dend_54 { pt3dadd( 87.1827, 43.0533, -33.9922, 1.14 ) }
    dend_54 { pt3dadd( 88.3004, 43.2168, -34.3938, 1.14 ) }
    dend_54 { pt3dadd( 91.945, 43.7347, -35.6446, 0.23 ) }
    dend_54 { pt3dadd( 93.8552, 43.9925, -36.2531, 0.68 ) }
    dend_54 { pt3dadd( 95.2608, 44.2171, -36.5782, 0.23 ) }
    dend_54 { pt3dadd( 98.1432, 44.7654, -37.0019, 1.14 ) }
    dend_54 { pt3dadd( 100.971, 45.48, -37.2808, 0.23 ) }
    dend_54 { pt3dadd( 102.341, 45.9408, -37.3096, 0.91 ) }
    dend_54 { pt3dadd( 103.151, 46.2905, -37.2809, 1.36 ) }
    dend_54 { pt3dadd( 105.646, 47.642, -37.2004, 0.23 ) }
    dend_54 { pt3dadd( 107.302, 48.6815, -37.0824, 0.91 ) }
    dend_54 { pt3dadd( 108.459, 49.5058, -36.9585, 0.91 ) }
    dend_54 { pt3dadd( 110.238, 50.8768, -36.7813, 0.23 ) }
    dend_54 { pt3dadd( 112.018, 52.214, -36.6207, 0.91 ) }
    dend_54 { pt3dadd( 114.678, 54.0698, -36.4369, 0.23 ) }
    dend_54 { pt3dadd( 116.391, 55.1714, -36.3591, 0.91 ) }
    dend_54 { pt3dadd( 118.642, 56.4496, -36.2445, 0.23 ) }
    dend_54 { pt3dadd( 119.296, 56.7935, -36.2055, 0.23 ) }
    dend_54 { pt3dadd( 121.129, 57.7031, -36.0843, 0.23 ) }
    dend_54 { pt3dadd( 123.395, 58.7461, -35.8729, 0.68 ) }
    dend_54 { pt3dadd( 125.075, 59.4468, -35.7366, 0.23 ) }
    dend_54 { pt3dadd( 126.949, 60.2349, -35.5709, 0.23 ) }
    dend_54 { pt3dadd( 128.918, 61.0152, -35.363, 0.68 ) }
    dend_54 { pt3dadd( 137.964, 61.9235, -39.2079, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 18.7262, 78.0599, -5.91229, 0.23 ) }
    dend_52 { pt3dadd( 16.8391, 79.2742, -6.26754, 0.23 ) }
    dend_52 { pt3dadd( 15.0419, 80.5674, -6.73397, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( 12.4034, 82.8434, -7.56304, 0.23 ) }
    dend_52 { pt3dadd( 11.445, 83.8973, -8.03138, 1.14 ) }
    dend_52 { pt3dadd( 10.6432, 84.9889, -8.53112, 0.23 ) }
    dend_52 { pt3dadd( 9.84783, 86.2784, -9.10857, 0.68 ) }
    dend_52 { pt3dadd( 9.18016, 87.8871, -9.8399, 0.23 ) }
    dend_52 { pt3dadd( 8.67857, 89.8053, -10.7679, 1.36 ) }
    dend_52 { pt3dadd( 8.19691, 93.0135, -12.3613, 0.23 ) }
    dend_52 { pt3dadd( 8.04448, 94.6968, -13.1922, 0.91 ) }
    dend_52 { pt3dadd( 7.94201, 96.3703, -14.0066, 0.23 ) }
    dend_52 { pt3dadd( 7.86557, 98.3329, -14.9011, 0.68 ) }
    dend_52 { pt3dadd( 7.80883, 100.01, -15.6008, 0.23 ) }
    dend_52 { pt3dadd( 7.80882, 101.189, -16.0583, 1.14 ) }
    dend_52 { pt3dadd( 7.91935, 103.295, -16.8099, 0.23 ) }
    dend_52 { pt3dadd( 8.05284, 104.749, -17.3423, 0.23 ) }
    dend_52 { pt3dadd( 8.20776, 106.113, -17.8335, 0.91 ) }
    dend_52 { pt3dadd( 8.42986, 107.8, -18.4022, 0.23 ) }
    dend_52 { pt3dadd( 8.69628, 109.682, -18.9923, 0.23 ) }
    dend_52 { pt3dadd( 9.09197, 112.113, -19.7256, 1.14 ) }
    dend_52 { pt3dadd( 9.30524, 113.286, -20.0468, 1.14 ) }
    dend_52 { pt3dadd( 9.76227, 115.461, -20.6502, 0.23 ) }
    dend_52 { pt3dadd( 10.1229, 117.194, -21.1145, 0.23 ) }
    dend_52 { pt3dadd( 10.4046, 118.585, -21.4423, 0.23 ) }
    dend_52 { pt3dadd( 10.6001, 119.724, -21.7152, 0.23 ) }
    dend_52 { pt3dadd( 10.7312, 120.755, -21.9865, 0.45 ) }
    dend_52 { pt3dadd( 10.8511, 123.09, -22.8813, 0.23 ) }
    dend_52 { pt3dadd( 10.7955, 124.216, -23.4233, 0.91 ) }
    dend_52 { pt3dadd( 10.6589, 125.292, -24.0575, 0.91 ) }
    dend_52 { pt3dadd( 10.4015, 126.901, -25.1058, 0.68 ) }
    dend_52 { pt3dadd( 10.0526, 129.186, -26.6986, 1.36 ) }
    dend_52 { pt3dadd( 9.67653, 131.902, -28.6773, 0.23 ) }
    dend_52 { pt3dadd( 9.60552, 132.974, -29.4676, 0.23 ) }
    dend_52 { pt3dadd( 9.66823, 134.61, -30.6545, 0.23 ) }
    dend_52 { pt3dadd( 9.87486, 135.703, -31.4091, 1.14 ) }
    dend_52 { pt3dadd( 10.6385, 137.625, -32.4821, 0.23 ) }
    dend_52 { pt3dadd( 10.8786, 138.022, -32.6458, 0.68 ) }
    dend_52 { pt3dadd( 12.6257, 140.378, -33.3514, 0.23 ) }
    dend_52 { pt3dadd( 13.0916, 140.984, -33.4977, 1.14 ) }
    dend_52 { pt3dadd( 14.2132, 142.52, -33.7612, 0.23 ) }
    dend_52 { pt3dadd( 15.6719, 144.518, -34.0689, 0.91 ) }
    dend_52 { pt3dadd( 16.4685, 145.621, -34.1855, 0.23 ) }
    dend_52 { pt3dadd( 17.7587, 147.475, -34.3402, 0.68 ) }
    dend_52 { pt3dadd( 18.6552, 148.82, -34.3694, 0.68 ) }
    dend_52 { pt3dadd( 19.5115, 150.183, -34.3902, 0.23 ) }
    dend_52 { pt3dadd( 18.3996, 160.566, -37.5901, 0.23 ) }
    dend_52 { pt3dadd( 18.9092, 171.317, -39.5963, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 18.7262, 78.0599, -5.91229, 0.23 ) }
    dend_47 { pt3dadd( 19.2404, 78.8156, -5.7805, 0.23 ) }
    dend_47 { pt3dadd( 20.1207, 79.9887, -5.67299, 1.14 ) }
    dend_47 { pt3dadd( 21.4161, 81.6592, -5.57242, 0.23 ) }
    dend_47 { pt3dadd( 22.1665, 82.6418, -5.52415, 0.68 ) }
    dend_47 { pt3dadd( 22.8261, 83.5183, -5.4847, 0.23 ) }
    dend_47 { pt3dadd( 23.5683, 84.5151, -5.44131, 0.68 ) }
    dend_47 { pt3dadd( 24.7765, 86.1887, -5.44777, 0.23 ) }
    dend_47 { pt3dadd( 25.6081, 87.4235, -5.499, 0.91 ) }
    dend_47 { pt3dadd( 26.404, 88.7427, -5.56352, 0.23 ) }
    dend_47 { pt3dadd( 26.6538, 89.1941, -5.5568, 0.91 ) }
    dend_47 { pt3dadd( 27.5031, 90.8728, -5.4301, 0.23 ) }
    dend_47 { pt3dadd( 28.3877, 92.735, -5.20996, 0.91 ) }
    dend_47 { pt3dadd( 29.1727, 94.5108, -4.91003, 0.23 ) }
    dend_47 { pt3dadd( 29.4921, 95.258, -4.76507, 0.91 ) }
    dend_47 { pt3dadd( 30.4311, 97.3655, -4.25365, 0.23 ) }
    dend_47 { pt3dadd( 30.7595, 98.0314, -4.02754, 1.14 ) }
    dend_47 { pt3dadd( 31.051, 98.5277, -3.79363, 1.14 ) }
    dend_47 { pt3dadd( 31.5965, 99.2319, -3.31357, 0.23 ) }
    dend_47 { pt3dadd( 32.4064, 100.044, -2.63202, 0.91 ) }
    dend_47 { pt3dadd( 33.3619, 100.747, -1.90586, 0.23 ) }
    dend_47 { pt3dadd( 34.6435, 101.435, -1.05436, 0.23 ) }
    dend_47 { pt3dadd( 35.4984, 101.755, -0.470732, 0.91 ) }
    dend_47 { pt3dadd( 36.7882, 102.082, 0.400468, 0.23 ) }
    dend_47 { pt3dadd( 37.5591, 102.217, 0.90951, 0.91 ) }
    dend_47 { pt3dadd( 39.2476, 102.41, 1.96577, 0.23 ) }
    dend_47 { pt3dadd( 40.3263, 102.502, 2.58968, 0.68 ) }
    dend_47 { pt3dadd( 42.554, 102.645, 3.75873, 0.23 ) }
    dend_47 { pt3dadd( 43.4532, 102.686, 4.20541, 0.68 ) }
    dend_47 { pt3dadd( 44.1212, 102.708, 4.49899, 0.23 ) }
    dend_47 { pt3dadd( 45.2769, 102.739, 4.97237, 0.91 ) }
    dend_47 { pt3dadd( 46.019, 102.742, 5.23731, 0.23 ) }
    dend_47 { pt3dadd( 46.8491, 102.749, 5.49037, 0.23 ) }
    dend_47 { pt3dadd( 47.4788, 102.76, 5.64738, 0.23 ) }
    dend_47 { pt3dadd( 48.8251, 102.815, 6.00298, 0.91 ) }
    dend_47 { pt3dadd( 49.4496, 102.858, 6.17465, 0.23 ) }
    dend_47 { pt3dadd( 50.4102, 102.972, 6.39368, 0.68 ) }
    dend_47 { pt3dadd( 52.008, 103.251, 6.70014, 0.23 ) }
    dend_47 { pt3dadd( 52.6933, 103.417, 6.78632, 0.91 ) }
    dend_47 { pt3dadd( 54.0195, 103.837, 6.885, 0.23 ) }
    dend_47 { pt3dadd( 54.7189, 104.084, 6.91696, 0.91 ) }
    dend_47 { pt3dadd( 56.6428, 104.833, 6.94899, 0.23 ) }
    dend_47 { pt3dadd( 57.7975, 105.331, 6.91981, 0.91 ) }
    dend_47 { pt3dadd( 58.9901, 105.83, 6.8072, 0.23 ) }
    dend_47 { pt3dadd( 60.1116, 106.322, 6.62795, 0.68 ) }
    dend_47 { pt3dadd( 65.6977, 110.271, 7.40667, 0.68 ) }
    dend_47 { pt3dadd( 71.7537, 113.463, 7.17655, 0.68 ) }
    dend_47 { pt3dadd( 77.5663, 117.094, 7.64381, 0.68 ) }
    dend_47 { pt3dadd( 83.0505, 121.253, 8.06835, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 94/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -169.977, -77.6652, 15.326, 0.23 ) }
    dend_42 { pt3dadd( -172.02, -80.062, 15.6055, 0.23 ) }
    dend_42 { pt3dadd( -173.283, -81.6099, 15.6693, 0.68 ) }
    dend_42 { pt3dadd( -174.404, -83.0294, 15.6755, 0.23 ) }
    dend_42 { pt3dadd( -176.006, -85.0745, 15.6501, 0.45 ) }
    dend_42 { pt3dadd( -178.794, -88.6696, 15.5715, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_42 { pt3dadd( -180.583, -90.9559, 15.5092, 0.23 ) }
    dend_42 { pt3dadd( -182.312, -93.287, 15.3606, 0.91 ) }
    dend_42 { pt3dadd( -183.797, -95.3599, 15.2957, 0.23 ) }
    dend_42 { pt3dadd( -184.423, -96.2603, 15.264, 0.23 ) }
    dend_42 { pt3dadd( -185.344, -97.6245, 15.2152, 0.91 ) }
    dend_42 { pt3dadd( -186.611, -99.6527, 15.1207, 0.23 ) }
    dend_42 { pt3dadd( -187.282, -100.847, 15.113, 0.91 ) }
    dend_42 { pt3dadd( -189.047, -104.566, 14.9284, 0.23 ) }
    dend_42 { pt3dadd( -190.22, -107.445, 14.5895, 0.23 ) }
    dend_42 { pt3dadd( -191.264, -110.168, 14.2341, 0.23 ) }
    dend_42 { pt3dadd( -192.314, -113.134, 13.7925, 0.23 ) }
    dend_42 { pt3dadd( -193.213, -115.977, 13.2956, 0.68 ) }
    dend_42 { pt3dadd( -194.346, -119.858, 12.4727, 0.23 ) }
    dend_42 { pt3dadd( -195.096, -122.975, 11.5869, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -169.977, -77.6652, 15.326, 0.23 ) }
    dend_41 { pt3dadd( -172.814, -77.7936, 14.8667, 0.23 ) }
    dend_41 { pt3dadd( -174.836, -77.9652, 14.621, 0.45 ) }
    dend_41 { pt3dadd( -176.872, -78.1991, 14.4932, 0.23 ) }
    dend_41 { pt3dadd( -177.881, -78.3244, 14.4134, 0.23 ) }
    dend_41 { pt3dadd( -178.577, -78.4184, 14.3597, 0.23 ) }
    dend_41 { pt3dadd( -179.494, -78.5449, 14.2492, 0.68 ) }
    dend_41 { pt3dadd( -181.654, -78.9472, 13.9646, 0.23 ) }
    dend_41 { pt3dadd( -182.782, -79.2059, 13.7969, 0.45 ) }
    dend_41 { pt3dadd( -185.001, -79.7686, 13.3973, 0.23 ) }
    dend_41 { pt3dadd( -187.395, -80.3782, 12.9415, 0.91 ) }
    dend_41 { pt3dadd( -189.744, -80.9576, 12.4967, 0.23 ) }
    dend_41 { pt3dadd( -191.675, -81.4516, 12.1107, 0.91 ) }
    dend_41 { pt3dadd( -192.715, -81.7109, 11.9042, 0.23 ) }
    dend_41 { pt3dadd( -193.351, -81.8701, 11.7735, 0.91 ) }
    dend_41 { pt3dadd( -194.5, -82.1449, 11.5871, 0.23 ) }
    dend_41 { pt3dadd( -195.993, -82.4383, 11.2078, 0.68 ) }
    dend_41 { pt3dadd( -197.937, -82.7775, 10.624, 0.23 ) }
    dend_41 { pt3dadd( -199.19, -82.9621, 10.1742, 0.68 ) }
    dend_41 { pt3dadd( -200.621, -83.1995, 9.63257, 0.23 ) }
    dend_41 { pt3dadd( -201.686, -83.3951, 9.16619, 0.91 ) }
    dend_41 { pt3dadd( -205.173, -84.0943, 7.5214, 0.23 ) }
    dend_41 { pt3dadd( -206.746, -84.4205, 6.72816, 0.23 ) }
    dend_41 { pt3dadd( -207.773, -84.6194, 6.19603, 0.23 ) }
    dend_41 { pt3dadd( -209.762, -85.008, 5.18663, 0.91 ) }
    dend_41 { pt3dadd( -211.864, -85.4421, 4.11544, 0.23 ) }
    dend_41 { pt3dadd( -213.041, -85.713, 3.53603, 0.23 ) }
    dend_41 { pt3dadd( -214.077, -85.9611, 3.05086, 0.68 ) }
    dend_41 { pt3dadd( -215.85, -86.3929, 2.14967, 0.23 ) }
    dend_41 { pt3dadd( -217.014, -86.681, 1.53535, 0.91 ) }
    dend_41 { pt3dadd( -218.812, -87.1247, 0.553487, 0.23 ) }
    dend_41 { pt3dadd( -220.455, -87.5641, -0.27767, 0.91 ) }
    dend_41 { pt3dadd( -222.544, -88.2188, -1.33005, 0.23 ) }
    dend_41 { pt3dadd( -223.477, -88.5405, -1.79028, 0.23 ) }
    dend_41 { pt3dadd( -224.8, -89.0463, -2.40974, 0.68 ) }
    dend_41 { pt3dadd( -226.085, -89.5847, -2.96798, 0.23 ) }
    dend_41 { pt3dadd( -227.397, -90.1929, -3.47265, 1.14 ) }
    dend_41 { pt3dadd( -228.789, -90.8645, -3.9803, 0.23 ) }
    dend_41 { pt3dadd( -230.076, -91.5136, -4.38646, 0.23 ) }
    dend_41 { pt3dadd( -231.75, -92.4002, -4.92205, 0.91 ) }
    dend_41 { pt3dadd( -233.23, -93.2111, -5.36327, 0.23 ) }
    dend_41 { pt3dadd( -235.03, -94.2137, -5.99057, 1.14 ) }
    dend_41 { pt3dadd( -235.815, -94.6366, -6.29946, 0.23 ) }
    dend_41 { pt3dadd( -236.415, -94.9301, -6.5363, 0.91 ) }
    dend_41 { pt3dadd( -237.86, -95.6454, -7.11677, 0.23 ) }
    dend_41 { pt3dadd( -239.575, -96.4595, -7.88136, 1.14 ) }
    dend_41 { pt3dadd( -242.189, -97.6305, -9.1337, 0.23 ) }
    dend_41 { pt3dadd( -243.173, -98.0629, -9.62383, 0.23 ) }
    dend_41 { pt3dadd( -244.427, -98.6495, -10.2996, 0.45 ) }
    dend_41 { pt3dadd( -251.023, -101.372, -12.3287, 0.45 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 11.1129, -38.018, 28.1024, 0.23 ) }
    dend_38 { pt3dadd( 12.5655, -39.5275, 28.9382, 0.23 ) }
    dend_38 { pt3dadd( 14.0981, -41.2064, 29.8585, 0.91 ) }
    dend_38 { pt3dadd( 17.8175, -45.2935, 32.0211, 0.23 ) }
    dend_38 { pt3dadd( 20.5118, -48.2212, 33.5516, 0.91 ) }
    dend_38 { pt3dadd( 24.2481, -52.2586, 35.5317, 0.23 ) }
    dend_38 { pt3dadd( 25.4837, -53.6522, 36.1661, 0.23 ) }
    dend_38 { pt3dadd( 28.1235, -56.9334, 37.4593, 0.23 ) }
    dend_38 { pt3dadd( 28.9544, -58.1168, 37.9907, 0.68 ) }
    dend_38 { pt3dadd( 30.4654, -60.5683, 39.1259, 0.23 ) }
    dend_38 { pt3dadd( 31.639, -62.8255, 40.3616, 0.91 ) }
    dend_38 { pt3dadd( 33.352, -66.9327, 42.9208, 0.23 ) }
    dend_38 { pt3dadd( 33.6569, -67.7368, 43.5058, 0.91 ) }
    dend_38 { pt3dadd( 36.0588, -74.3213, 48.6632, 0.23 ) }
    dend_38 { pt3dadd( 36.5678, -75.6493, 49.7818, 0.91 ) }
    dend_38 { pt3dadd( 38.0356, -78.8587, 52.8989, 0.23 ) }
    dend_38 { pt3dadd( 38.8818, -80.2297, 54.5486, 0.91 ) }
    dend_38 { pt3dadd( 42.073, -83.921, 59.9037, 0.23 ) }
    dend_38 { pt3dadd( 42.9852, -84.7437, 61.1615, 0.23 ) }
    dend_38 { pt3dadd( 44.2431, -85.6764, 62.6529, 0.91 ) }
    dend_38 { pt3dadd( 48.2058, -88.2894, 66.9435, 0.23 ) }
    dend_38 { pt3dadd( 52.6609, -90.9254, 71.6064, 0.23 ) }
    dend_38 { pt3dadd( 57.0396, -93.4463, 76.1041, 0.23 ) }
    dend_38 { pt3dadd( 60.1479, -95.2908, 79.2637, 0.23 ) }
    dend_38 { pt3dadd( 64.029, -97.664, 83.3405, 0.23 ) }
    dend_38 { pt3dadd( 66.1628, -99.0263, 85.6055, 0.91 ) }
    dend_38 { pt3dadd( 71.3397, -102.347, 90.6043, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 11.1129, -38.018, 28.1024, 0.23 ) }
    dend_31 { pt3dadd( 11.5483, -41.8463, 28.0507, 0.23 ) }
    dend_31 { pt3dadd( 11.8045, -44.1602, 28.1126, 0.23 ) }
    dend_31 { pt3dadd( 12.1692, -47.6686, 28.2536, 0.91 ) }
    dend_31 { pt3dadd( 12.4234, -50.594, 28.472, 0.23 ) }
    dend_31 { pt3dadd( 12.5198, -51.9044, 28.5794, 0.23 ) }
    dend_31 { pt3dadd( 12.6934, -53.9035, 28.7451, 1.14 ) }
    dend_31 { pt3dadd( 13.0145, -57.2693, 29.0849, 0.23 ) }
    dend_31 { pt3dadd( 13.3055, -59.5022, 29.3156, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 13.7518, -61.9267, 29.5387, 0.91 ) }
    dend_31 { pt3dadd( 14.3131, -64.1325, 29.6737, 0.23 ) }
    dend_31 { pt3dadd( 15.15, -66.6398, 29.7969, 0.23 ) }
    dend_31 { pt3dadd( 15.6274, -67.8051, 29.8274, 0.91 ) }
    dend_31 { pt3dadd( 16.4073, -69.5305, 29.9225, 0.68 ) }
    dend_31 { pt3dadd( 17.5198, -71.9328, 30.1983, 0.23 ) }
    dend_31 { pt3dadd( 18.1177, -73.2571, 30.3916, 0.91 ) }
    dend_31 { pt3dadd( 19.703, -76.9973, 31.1861, 0.23 ) }
    dend_31 { pt3dadd( 20.2715, -78.5998, 31.5834, 0.91 ) }
    dend_31 { pt3dadd( 21.659, -83.3395, 32.8353, 0.23 ) }
    dend_31 { pt3dadd( 22.1938, -85.8797, 33.5638, 0.91 ) }
    dend_31 { pt3dadd( 22.3647, -87.3096, 34.0176, 0.91 ) }
    dend_31 { pt3dadd( 22.4995, -90.3105, 35.0052, 0.23 ) }
    dend_31 { pt3dadd( 22.421, -92.5198, 35.7298, 0.91 ) }
    dend_31 { pt3dadd( 22.1773, -94.4134, 36.3979, 0.23 ) }
    dend_31 { pt3dadd( 21.6911, -96.4023, 37.1653, 0.91 ) }
    dend_31 { pt3dadd( 20.965, -98.4618, 38.0783, 0.23 ) }
    dend_31 { pt3dadd( 20.4857, -99.542, 38.6141, 1.14 ) }
    dend_31 { pt3dadd( 20.0566, -100.334, 39.0497, 0.23 ) }
    dend_31 { pt3dadd( 18.2347, -103.618, 41.1735, 0.91 ) }
    dend_31 { pt3dadd( 17.2688, -105.353, 42.3635, 0.23 ) }
    dend_31 { pt3dadd( 16.7844, -106.265, 42.98, 1.14 ) }
    dend_31 { pt3dadd( 16.2249, -107.468, 43.8181, 0.23 ) }
    dend_31 { pt3dadd( 15.7491, -108.722, 44.7295, 0.91 ) }
    dend_31 { pt3dadd( 15.1162, -111.028, 46.4339, 0.23 ) }
    dend_31 { pt3dadd( 14.9321, -112.064, 47.1833, 0.91 ) }
    dend_31 { pt3dadd( 14.8404, -112.673, 47.6139, 0.23 ) }
    dend_31 { pt3dadd( 14.4663, -115.547, 49.741, 0.91 ) }
    dend_31 { pt3dadd( 14.1509, -117.919, 51.6091, 0.23 ) }
    dend_31 { pt3dadd( 13.8112, -120.494, 53.6504, 0.91 ) }
    dend_31 { pt3dadd( 13.5324, -122.441, 55.2136, 0.23 ) }
    dend_31 { pt3dadd( 13.3525, -123.636, 56.2152, 1.14 ) }
    dend_31 { pt3dadd( 12.9581, -125.986, 58.2105, 0.23 ) }
    dend_31 { pt3dadd( 12.4842, -128.198, 60.0261, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.49825, -32.2111, -2.57778, 0.23 ) }
    dend_25 { pt3dadd( 9.79762, -35.1624, -0.550226, 0.23 ) }
    dend_25 { pt3dadd( 10.4912, -36.5561, 0.673936, 0.23 ) }
    dend_25 { pt3dadd( 11.4936, -38.3496, 2.37643, 0.91 ) }
    dend_25 { pt3dadd( 11.9172, -39.0647, 3.04776, 0.23 ) }
    dend_25 { pt3dadd( 12.8791, -40.5866, 4.45851, 0.68 ) }
    dend_25 { pt3dadd( 13.8035, -41.9211, 5.83884, 0.23 ) }
    dend_25 { pt3dadd( 15.4963, -44.2509, 8.45533, 0.68 ) }
    dend_25 { pt3dadd( 15.9702, -44.8606, 9.19358, 0.68 ) }
    dend_25 { pt3dadd( 16.6672, -45.7205, 10.2134, 0.23 ) }
    dend_25 { pt3dadd( 17.6871, -46.9826, 11.6991, 1.14 ) }
    dend_25 { pt3dadd( 19.5443, -49.5563, 14.3578, 0.23 ) }
    dend_25 { pt3dadd( 19.8509, -50.0842, 14.8171, 0.23 ) }
    dend_25 { pt3dadd( 20.14, -50.6598, 15.2368, 0.23 ) }
    dend_25 { pt3dadd( 20.6675, -51.8395, 16.0428, 1.14 ) }
    dend_25 { pt3dadd( 21.7431, -54.4782, 17.8838, 0.23 ) }
    dend_25 { pt3dadd( 22.4198, -56.3518, 19.1193, 1.14 ) }
    dend_25 { pt3dadd( 23.5999, -59.7851, 21.3105, 0.23 ) }
    dend_25 { pt3dadd( 24.4683, -62.282, 22.9506, 0.23 ) }
    dend_25 { pt3dadd( 25.0746, -63.9832, 24.0755, 0.68 ) }
    dend_25 { pt3dadd( 26.244, -67.3135, 26.2261, 0.23 ) }
    dend_25 { pt3dadd( 26.7374, -68.759, 27.1319, 1.14 ) }
    dend_25 { pt3dadd( 27.5982, -71.3208, 28.7464, 0.23 ) }
    dend_25 { pt3dadd( 27.9177, -72.3808, 29.3422, 0.23 ) }
    dend_25 { pt3dadd( 28.2364, -73.4843, 29.8606, 0.23 ) }
    dend_25 { pt3dadd( 28.7679, -75.2751, 30.6487, 0.91 ) }
    dend_25 { pt3dadd( 29.2573, -76.9033, 31.3724, 0.23 ) }
    dend_25 { pt3dadd( 29.7252, -78.401, 32.1158, 0.91 ) }
    dend_25 { pt3dadd( 30.2012, -79.8543, 32.9613, 0.23 ) }
    dend_25 { pt3dadd( 30.7607, -81.4042, 34.0666, 0.91 ) }
    dend_25 { pt3dadd( 31.4336, -83.2705, 35.6803, 0.23 ) }
    dend_25 { pt3dadd( 32.6772, -86.5932, 38.8274, 0.23 ) }
    dend_25 { pt3dadd( 32.9749, -87.3633, 39.4883, 0.68 ) }
    dend_25 { pt3dadd( 33.9838, -89.7199, 41.4051, 1.14 ) }
    dend_25 { pt3dadd( 35.1693, -92.0126, 43.1772, 0.23 ) }
    dend_25 { pt3dadd( 36.9821, -95.1251, 45.3527, 0.23 ) }
    dend_25 { pt3dadd( 37.8584, -96.5056, 46.165, 0.23 ) }
    dend_25 { pt3dadd( 40.6832, -100.766, 48.2457, 0.23 ) }
    dend_25 { pt3dadd( 42.077, -102.88, 49.1294, 0.68 ) }
    dend_25 { pt3dadd( 44.9232, -107.262, 50.812, 0.23 ) }
    dend_25 { pt3dadd( 46.0652, -108.964, 51.3988, 0.68 ) }
    dend_25 { pt3dadd( 48.1241, -111.89, 52.3559, 0.23 ) }
    dend_25 { pt3dadd( 49.3791, -113.682, 53.0397, 0.23 ) }
    dend_25 { pt3dadd( 50.6744, -115.569, 53.9484, 0.91 ) }
    dend_25 { pt3dadd( 53.3614, -120.024, 55.9036, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 79/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.49825, -32.2111, -2.57778, 0.23 ) }
    dend_24 { pt3dadd( 6.97048, -33.9684, -2.69429, 0.23 ) }
    dend_24 { pt3dadd( 5.4949, -36.0182, -2.73243, 0.68 ) }
    dend_24 { pt3dadd( 3.75749, -38.6967, -2.8331, 0.68 ) }
    dend_24 { pt3dadd( 2.89267, -40.1499, -2.8836, 0.68 ) }
    dend_24 { pt3dadd( 2.13209, -41.5463, -2.91035, 0.68 ) }
    dend_24 { pt3dadd( 1.10687, -43.5272, -2.91794, 0.23 ) }
    dend_24 { pt3dadd( 0.378394, -45.2762, -2.84014, 0.23 ) }
    dend_24 { pt3dadd( -0.39046, -47.5201, -2.70393, 0.23 ) }
    dend_24 { pt3dadd( -0.867112, -49.0395, -2.56183, 0.23 ) }
    dend_24 { pt3dadd( -1.54503, -51.0929, -2.35853, 1.14 ) }
    dend_24 { pt3dadd( -1.92226, -52.2012, -2.23073, 1.14 ) }
    dend_24 { pt3dadd( -2.93679, -54.9455, -1.71194, 0.23 ) }
    dend_24 { pt3dadd( -3.71017, -56.9938, -1.18144, 0.91 ) }
    dend_24 { pt3dadd( -4.47829, -59.138, -0.56729, 0.91 ) }
    dend_24 { pt3dadd( -4.76603, -59.9524, -0.3355, 0.91 ) }
    dend_24 { pt3dadd( -5.75418, -62.7803, 0.379188, 0.23 ) }
    dend_24 { pt3dadd( -6.68154, -65.6509, 1.07374, 0.23 ) }
    dend_24 { pt3dadd( -7.59074, -68.63, 1.77456, 0.23 ) }
    dend_24 { pt3dadd( -8.14537, -70.654, 2.2322, 0.23 ) }
    dend_24 { pt3dadd( -8.68625, -72.8357, 2.63764, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_24 { pt3dadd( -9.5972, -76.8156, 3.2354, 0.23 ) }
    dend_24 { pt3dadd( -10.2852, -80.0288, 3.59338, 0.91 ) }
    dend_24 { pt3dadd( -10.5326, -81.2586, 3.68601, 0.91 ) }
    dend_24 { pt3dadd( -10.828, -82.918, 3.82174, 0.23 ) }
    dend_24 { pt3dadd( -11.1573, -85.0153, 4.039, 0.68 ) }
    dend_24 { pt3dadd( -11.5627, -87.555, 4.32197, 0.23 ) }
    dend_24 { pt3dadd( -11.7417, -88.6317, 4.45475, 0.68 ) }
    dend_24 { pt3dadd( -12.2226, -91.089, 4.73817, 0.23 ) }
    dend_24 { pt3dadd( -12.4655, -92.1647, 4.88469, 1.14 ) }
    dend_24 { pt3dadd( -12.9007, -93.8187, 5.15801, 1.14 ) }
    dend_24 { pt3dadd( -13.6969, -96.3753, 5.65805, 0.23 ) }
    dend_24 { pt3dadd( -14.7212, -99.057, 6.2026, 0.23 ) }
    dend_24 { pt3dadd( -15.3883, -100.461, 6.51049, 0.91 ) }
    dend_24 { pt3dadd( -16.1144, -101.742, 6.81323, 0.91 ) }
    dend_24 { pt3dadd( -17.1721, -103.42, 7.3353, 0.23 ) }
    dend_24 { pt3dadd( -18.2722, -105.023, 7.94774, 0.91 ) }
    dend_24 { pt3dadd( -18.8872, -105.847, 8.32419, 0.91 ) }
    dend_24 { pt3dadd( -20.4623, -107.715, 9.34067, 0.23 ) }
    dend_24 { pt3dadd( -21.2512, -108.63, 9.86888, 0.23 ) }
    dend_24 { pt3dadd( -23.2048, -110.918, 11.2271, 0.68 ) }
    dend_24 { pt3dadd( -24.0594, -111.979, 11.8469, 0.23 ) }
    dend_24 { pt3dadd( -24.6201, -112.76, 12.2705, 1.14 ) }
    dend_24 { pt3dadd( -25.1311, -113.534, 12.6502, 1.14 ) }
    dend_24 { pt3dadd( -26.435, -115.682, 13.5765, 0.23 ) }
    dend_24 { pt3dadd( -27.0904, -116.758, 13.9788, 0.23 ) }
    dend_24 { pt3dadd( -28.0839, -118.512, 14.4913, 1.14 ) }
    dend_24 { pt3dadd( -29.0576, -120.427, 14.9406, 0.23 ) }
    dend_24 { pt3dadd( -29.4407, -121.226, 15.0612, 0.68 ) }
    dend_24 { pt3dadd( -29.9772, -122.488, 15.1641, 0.23 ) }
    dend_24 { pt3dadd( -30.5684, -124.082, 15.2022, 0.23 ) }
    dend_24 { pt3dadd( -31.1608, -126.168, 15.113, 0.68 ) }
    dend_24 { pt3dadd( -31.7214, -128.693, 14.8915, 0.23 ) }
    dend_24 { pt3dadd( -32.049, -131.067, 14.6306, 0.23 ) }
    dend_24 { pt3dadd( -32.1855, -133.477, 14.3453, 0.45 ) }
    dend_24 { pt3dadd( -32.1401, -134.872, 14.1434, 1.59 ) }
    dend_24 { pt3dadd( -31.7325, -138.632, 13.5724, 0.23 ) }
    dend_24 { pt3dadd( -31.6005, -139.446, 13.4447, 0.23 ) }
    dend_24 { pt3dadd( -31.077, -141.809, 13.1132, 1.14 ) }
    dend_24 { pt3dadd( -30.6866, -143.334, 12.919, 1.14 ) }
    dend_24 { pt3dadd( -30.0006, -145.925, 12.5729, 0.23 ) }
    dend_24 { pt3dadd( -29.5683, -147.521, 12.3566, 0.91 ) }
    dend_24 { pt3dadd( -28.7097, -150.677, 11.9658, 0.23 ) }
    dend_24 { pt3dadd( -28.4116, -151.973, 11.7997, 0.23 ) }
    dend_24 { pt3dadd( -28.0595, -153.82, 11.5371, 1.14 ) }
    dend_24 { pt3dadd( -27.8819, -154.902, 11.3828, 1.14 ) }
    dend_24 { pt3dadd( -27.241, -159.333, 10.7131, 0.23 ) }
    dend_24 { pt3dadd( -26.9489, -161.463, 10.3454, 1.14 ) }
    dend_24 { pt3dadd( -26.6239, -164.418, 9.75412, 0.23 ) }
    dend_24 { pt3dadd( -26.4523, -166.34, 9.30841, 1.14 ) }
    dend_24 { pt3dadd( -26.4048, -166.9, 9.16226, 1.14 ) }
    dend_24 { pt3dadd( -26.2111, -168.486, 8.80026, 0.23 ) }
    dend_24 { pt3dadd( -26.0378, -169.294, 8.68429, 0.68 ) }
    dend_24 { pt3dadd( -25.3781, -171.088, 8.62329, 0.23 ) }
    dend_24 { pt3dadd( -24.4789, -172.47, 8.81913, 1.14 ) }
    dend_24 { pt3dadd( -23.6402, -173.505, 9.08799, 1.14 ) }
    dend_24 { pt3dadd( -21.4487, -175.894, 9.82439, 0.23 ) }
    dend_24 { pt3dadd( -20.2049, -177.132, 10.2354, 0.91 ) }
    dend_24 { pt3dadd( -19.4962, -177.836, 10.4206, 0.91 ) }
    dend_24 { pt3dadd( -17.3611, -179.996, 10.8029, 0.23 ) }
    dend_24 { pt3dadd( -16.4328, -181.045, 10.8852, 1.14 ) }
    dend_24 { pt3dadd( -15.3918, -182.528, 10.8313, 1.36 ) }
    dend_24 { pt3dadd( -14.1101, -184.829, 10.53, 0.23 ) }
    dend_24 { pt3dadd( -12.879, -187.44, 10.1251, 0.23 ) }
    dend_24 { pt3dadd( -12.123, -189.237, 9.84331, 0.91 ) }
    dend_24 { pt3dadd( -11.5688, -190.711, 9.61239, 0.91 ) }
    dend_24 { pt3dadd( -10.3033, -194.132, 9.13745, 0.23 ) }
    dend_24 { pt3dadd( -9.75606, -195.654, 8.93445, 1.14 ) }
    dend_24 { pt3dadd( -8.68252, -198.597, 8.59421, 0.23 ) }
    dend_24 { pt3dadd( -8.05148, -200.322, 8.46485, 1.14 ) }
    dend_24 { pt3dadd( -7.41514, -202.156, 8.37653, 0.23 ) }
    dend_24 { pt3dadd( -7.06841, -203.194, 8.33184, 0.91 ) }
    dend_24 { pt3dadd( -6.31558, -206.229, 8.30313, 0.23 ) }
    dend_24 { pt3dadd( -6.10909, -208.17, 8.34594, 1.59 ) }
    dend_24 { pt3dadd( -6.29544, -210.75, 8.51971, 0.23 ) }
    dend_24 { pt3dadd( -6.58812, -212.219, 8.78214, 0.91 ) }
    dend_24 { pt3dadd( -6.79441, -212.852, 8.96788, 0.91 ) }
    dend_24 { pt3dadd( -7.93317, -215.599, 10.071, 0.23 ) }
    dend_24 { pt3dadd( -8.6418, -216.987, 10.7963, 1.14 ) }
    dend_24 { pt3dadd( -9.14702, -217.901, 11.3689, 1.14 ) }
    dend_24 { pt3dadd( -10.4911, -220.459, 13.0822, 0.23 ) }
    dend_24 { pt3dadd( -10.8672, -221.338, 13.6365, 0.91 ) }
    dend_24 { pt3dadd( -11.4258, -222.954, 14.6308, 0.23 ) }
    dend_24 { pt3dadd( -11.5893, -223.661, 15.0453, 0.91 ) }
    dend_24 { pt3dadd( -11.8824, -225.44, 15.8552, 0.23 ) }
    dend_24 { pt3dadd( -12.1534, -227.23, 16.4174, 0.91 ) }
    dend_24 { pt3dadd( -12.6385, -229.913, 16.808, 0.23 ) }
    dend_24 { pt3dadd( -12.8967, -231.206, 16.8641, 0.23 ) }
    dend_24 { pt3dadd( -13.373, -233.168, 16.7328, 1.14 ) }
    dend_24 { pt3dadd( -14.148, -236.062, 16.3186, 0.23 ) }
    dend_24 { pt3dadd( -14.7749, -238.255, 15.784, 1.36 ) }
    dend_24 { pt3dadd( -15.6479, -241.051, 14.9583, 0.23 ) }
    dend_24 { pt3dadd( -16.1424, -242.63, 14.4237, 1.14 ) }
    dend_24 { pt3dadd( -16.7587, -244.699, 13.6872, 0.23 ) }
    dend_24 { pt3dadd( -17.1613, -246.038, 13.2117, 0.68 ) }
    dend_24 { pt3dadd( -18.0526, -249.08, 12.2172, 0.23 ) }
    dend_24 { pt3dadd( -18.3742, -250.317, 11.8316, 0.91 ) }
    dend_24 { pt3dadd( -18.7894, -252.378, 11.2866, 0.23 ) }
    dend_24 { pt3dadd( -18.9891, -253.72, 10.9973, 0.23 ) }
    dend_24 { pt3dadd( -19.1614, -255.401, 10.6906, 0.23 ) }
    dend_24 { pt3dadd( -21.5206, -264.326, 12.7239, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( -24.218, -273.032, 15.1688, 0.23 ) }
    dend_24 { pt3dadd( -26.3411, -281.876, 17.7485, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 57.756, -220.462, -132.939, 0.23 ) }
    dend_22 { pt3dadd( 59.9171, -227.278, -137.717, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 57.756, -220.462, -132.939, 0.23 ) }
    dend_21 { pt3dadd( 58.252, -227.34, -137.211, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 49.4393, 38.5726, -1.40899, 0.23 ) }
    dend_13 { pt3dadd( 51.291, 38.3545, 0.163555, 0.23 ) }
    dend_13 { pt3dadd( 53.1232, 38.2292, 1.44768, 0.68 ) }
    dend_13 { pt3dadd( 55.8761, 38.1407, 3.2564, 0.23 ) }
    dend_13 { pt3dadd( 57.9816, 38.1751, 4.49509, 0.91 ) }
    dend_13 { pt3dadd( 60.2228, 38.2218, 5.69812, 0.23 ) }
    dend_13 { pt3dadd( 62.1354, 38.2623, 6.63903, 1.14 ) }
    dend_13 { pt3dadd( 66.4063, 38.4929, 8.55919, 0.23 ) }
    dend_13 { pt3dadd( 68.4415, 38.5847, 9.34208, 0.68 ) }
    dend_13 { pt3dadd( 73.8772, 38.8856, 11.3037, 0.23 ) }
    dend_13 { pt3dadd( 76.3976, 39.0292, 12.2289, 0.68 ) }
    dend_13 { pt3dadd( 80.8496, 39.3772, 13.9383, 0.23 ) }
    dend_13 { pt3dadd( 83.6474, 39.6331, 15.0481, 0.68 ) }
    dend_13 { pt3dadd( 89.6469, 40.3019, 17.4506, 0.23 ) }
    dend_13 { pt3dadd( 94.0579, 40.832, 19.1934, 0.23 ) }
    dend_13 { pt3dadd( 97.9378, 41.3655, 20.7662, 0.68 ) }
    dend_13 { pt3dadd( 101.968, 42.0298, 22.4389, 0.23 ) }
    dend_13 { pt3dadd( 104.374, 42.4988, 23.4423, 0.68 ) }
    dend_13 { pt3dadd( 107.338, 43.1915, 24.622, 0.23 ) }
    dend_13 { pt3dadd( 110.467, 44.1359, 25.8663, 0.23 ) }
    dend_13 { pt3dadd( 111.912, 44.5994, 26.3363, 0.23 ) }
    dend_13 { pt3dadd( 112.872, 44.931, 26.55, 0.23 ) }
    dend_13 { pt3dadd( 114.823, 45.6409, 26.923, 0.23 ) }
    dend_13 { pt3dadd( 118.1, 47.0034, 27.5324, 0.68 ) }
    dend_13 { pt3dadd( 119.99, 47.8862, 27.8524, 0.23 ) }
    dend_13 { pt3dadd( 121.508, 48.6729, 28.0228, 0.23 ) }
    dend_13 { pt3dadd( 124.701, 50.3033, 28.2015, 1.36 ) }
    dend_13 { pt3dadd( 134.857, 51.8157, 33.1919, 1.36 ) }
    dend_13 { pt3dadd( 144.396, 52.1192, 39.4965, 1.36 ) }
    dend_13 { pt3dadd( 154.409, 54.1681, 44.5831, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 49.4393, 38.5726, -1.40899, 0.23 ) }
    dend_6 { pt3dadd( 50.0932, 39.0122, -1.24626, 0.23 ) }
    dend_6 { pt3dadd( 51.9276, 40.2452, -0.789788, 1.14 ) }
    dend_6 { pt3dadd( 53.9785, 41.6237, -0.279439, 0.23 ) }
    dend_6 { pt3dadd( 54.9137, 42.2523, -0.046724, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 41/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -34.7071, -23.2203, -65.4637, 0.23 ) }
    dend_74 { pt3dadd( -37.861, -28.8391, -71.8471, 0.23 ) }
    dend_74 { pt3dadd( -40.8304, -34.2375, -78.4898, 0.23 ) }
    dend_74 { pt3dadd( -43.1588, -40.6347, -84.5643, 0.23 ) }
    dend_74 { pt3dadd( -44.7613, -47.8069, -90.0633, 0.23 ) }
    dend_74 { pt3dadd( -46.3277, -53.7, -96.8206, 0.23 ) }
    dend_74 { pt3dadd( -47.0334, -59.9863, -103.408, 0.23 ) }
    dend_74 { pt3dadd( -48.2887, -66.8357, -109.363, 0.23 ) }
    dend_74 { pt3dadd( -48.232, -73.3515, -115.789, 0.23 ) }
    dend_74 { pt3dadd( -47.6605, -80.6127, -121.413, 0.23 ) }
    dend_74 { pt3dadd( -46.359, -87.3787, -127.471, 0.23 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 52/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -34.7071, -23.2203, -65.4637, 0.23 ) }
    dend_71 { pt3dadd( -36.6407, -27.346, -70.5614, 0.23 ) }
    dend_71 { pt3dadd( -40.0168, -31.7252, -74.5737, 0.23 ) }
    dend_71 { pt3dadd( -42.7075, -36.6938, -78.4887, 0.23 ) }
    dend_71 { pt3dadd( -45.4823, -41.6082, -82.4059, 0.23 ) }
    dend_71 { pt3dadd( -47.8395, -45.8751, -87.2042, 0.23 ) }
    dend_71 { pt3dadd( -51.2857, -50.0937, -91.3121, 0.23 ) }
    dend_71 { pt3dadd( -54.504, -54.8882, -95.008, 0.23 ) }
    dend_71 { pt3dadd( -57.6204, -59.4543, -99.0456, 0.23 ) }
    dend_71 { pt3dadd( -59.5795, -64.1217, -103.687, 0.23 ) }
    dend_71 { pt3dadd( -61.7065, -68.7692, -108.268, 0.23 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 63/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 33.3569, 27.9729, -58.6946, 0.23 ) }
    dend_67 { pt3dadd( 40.8385, 28.9944, -65.995, 0.23 ) }
    dend_67 { pt3dadd( 48.6598, 29.3357, -73.0019, 0.23 ) }
    dend_67 { pt3dadd( 57.7668, 31.3645, -77.8356, 0.23 ) }
    dend_67 { pt3dadd( 65.9016, 34.4213, -83.7631, 0.23 ) }
    dend_67 { pt3dadd( 74.6474, 39.2543, -87.2306, 0.23 ) }
    dend_67 { pt3dadd( 82.4318, 45.5311, -90.8537, 0.23 ) }
    dend_67 { pt3dadd( 90.3753, 52.6512, -91.7523, 0.23 ) }
    dend_67 { pt3dadd( 99.0505, 58.4872, -93.663, 0.23 ) }
    dend_67 { pt3dadd( 107.889, 64.3785, -94.3099, 0.23 ) }
    dend_67 { pt3dadd( 117.057, 69.6917, -94.9279, 0.23 ) }
    dend_67 { pt3dadd( 127.005, 73.2071, -95.1135, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 33.3569, 27.9729, -58.6946, 0.23 ) }
    dend_64 { pt3dadd( 38.9164, 30.1502, -62.8531, 0.23 ) }
    dend_64 { pt3dadd( 44.4305, 32.1495, -67.1528, 0.23 ) }
    dend_64 { pt3dadd( 50.6862, 32.6021, -70.8138, 0.23 ) }
    dend_64 { pt3dadd( 57.2008, 32.0797, -73.9949, 0.23 ) }
    dend_64 { pt3dadd( 63.2291, 31.2585, -77.9847, 0.23 ) }
    dend_64 { pt3dadd( 69.3663, 29.5043, -81.5174, 0.23 ) }
    dend_64 { pt3dadd( 75.7702, 27.2268, -84.199, 0.23 ) }
    dend_64 { pt3dadd( 81.7852, 24.5792, -87.4312, 0.23 ) }
    dend_64 { pt3dadd( 87.71, 21.0611, -90.0071, 0.23 ) }
    dend_64 { pt3dadd( 92.9256, 16.7301, -92.9833, 0.23 ) }
    dend_64 { pt3dadd( 98.2204, 11.9445, -95.0161, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -85.3624, 62.6009, -12.5727, 0.23 ) }
    dend_61 { pt3dadd( -87.6455, 65.875, -13.1905, 0.23 ) }
    dend_61 { pt3dadd( -89.5873, 68.5241, -13.5929, 0.23 ) }
    dend_61 { pt3dadd( -91.8159, 71.7456, -14.0324, 0.45 ) }
    dend_61 { pt3dadd( -93.1907, 73.8952, -14.2335, 0.23 ) }
    dend_61 { pt3dadd( -94.5024, 76.2762, -14.2524, 0.68 ) }
    dend_61 { pt3dadd( -96.227, 79.4065, -14.2773, 0.23 ) }
    dend_61 { pt3dadd( -98.1781, 83.1091, -14.1144, 0.68 ) }
    dend_61 { pt3dadd( -99.1621, 85.1081, -13.9892, 0.23 ) }
    dend_61 { pt3dadd( -100.281, 87.6379, -13.6518, 0.68 ) }
    dend_61 { pt3dadd( -102.163, 92.842, -12.6016, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -85.3624, 62.6009, -12.5727, 0.23 ) }
    dend_60 { pt3dadd( -87.7012, 64.3325, -12.4173, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -89.1276, 65.3881, -12.1046, 0.23 ) }
    dend_60 { pt3dadd( -90.6656, 66.5261, -11.7674, 0.23 ) }
    dend_60 { pt3dadd( -93.3397, 68.505, -11.1811, 0.68 ) }
    dend_60 { pt3dadd( -96.3833, 70.7571, -10.5138, 0.23 ) }
    dend_60 { pt3dadd( -100.022, 73.4493, -9.71614, 0.23 ) }
    dend_60 { pt3dadd( -103.349, 76.0401, -8.72967, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 83.0505, 121.253, 8.06835, 0.23 ) }
    dend_49 { pt3dadd( 90.4574, 126.482, 10.1454, 0.23 ) }
    dend_49 { pt3dadd( 98.5686, 130.889, 11.0057, 0.23 ) }
    dend_49 { pt3dadd( 106.31, 136.054, 11.2553, 0.23 ) }
    dend_49 { pt3dadd( 113.718, 141.438, 9.4438, 0.23 ) }
    dend_49 { pt3dadd( 120.758, 147.618, 9.49594, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 83.0505, 121.253, 8.06835, 0.23 ) }
    dend_48 { pt3dadd( 92.2438, 127.279, 9.72302, 0.23 ) }
    dend_48 { pt3dadd( 100.982, 134.111, 10.9251, 0.23 ) }
    dend_48 { pt3dadd( 109.477, 140.919, 13.3796, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 12.4842, -128.198, 60.0261, 0.23 ) }
    dend_35 { pt3dadd( 14.1168, -131.703, 60.8844, 0.23 ) }
    dend_35 { pt3dadd( 15.5534, -134.946, 61.5523, 0.68 ) }
    dend_35 { pt3dadd( 17.2265, -138.96, 62.2256, 0.23 ) }
    dend_35 { pt3dadd( 18.2733, -141.568, 62.5889, 0.91 ) }
    dend_35 { pt3dadd( 19.0532, -143.499, 62.8608, 0.23 ) }
    dend_35 { pt3dadd( 19.6201, -144.858, 63.092, 0.23 ) }
    dend_35 { pt3dadd( 20.567, -147.053, 63.5417, 0.68 ) }
    dend_35 { pt3dadd( 21.5863, -149.237, 63.9309, 0.23 ) }
    dend_35 { pt3dadd( 22.3546, -150.78, 64.2675, 0.91 ) }
    dend_35 { pt3dadd( 24.0624, -153.912, 65.3048, 0.23 ) }
    dend_35 { pt3dadd( 26.32, -157.727, 66.8498, 0.91 ) }
    dend_35 { pt3dadd( 27.5092, -159.596, 67.7331, 0.23 ) }
    dend_35 { pt3dadd( 28.8682, -161.585, 68.806, 0.91 ) }
    dend_35 { pt3dadd( 31.5542, -165.435, 71.1504, 0.23 ) }
    dend_35 { pt3dadd( 33.6569, -168.466, 73.1071, 0.23 ) }
    dend_35 { pt3dadd( 34.6694, -169.922, 74.0851, 0.91 ) }
    dend_35 { pt3dadd( 36.2581, -172.219, 75.6972, 0.23 ) }
    dend_35 { pt3dadd( 37.5184, -174.093, 77.0768, 0.91 ) }
    dend_35 { pt3dadd( 39.9862, -177.717, 79.8463, 0.23 ) }
    dend_35 { pt3dadd( 40.9318, -179.051, 80.7928, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 12.4842, -128.198, 60.0261, 0.23 ) }
    dend_32 { pt3dadd( 10.9809, -132.027, 61.9282, 0.23 ) }
    dend_32 { pt3dadd( 9.29687, -136.402, 64.0043, 0.23 ) }
    dend_32 { pt3dadd( 8.03754, -139.668, 65.6767, 0.68 ) }
    dend_32 { pt3dadd( 7.38556, -141.435, 66.6777, 0.23 ) }
    dend_32 { pt3dadd( 6.94092, -142.585, 67.3512, 0.91 ) }
    dend_32 { pt3dadd( 5.12476, -146.962, 70.1034, 0.23 ) }
    dend_32 { pt3dadd( 4.42178, -148.582, 71.1822, 0.91 ) }
    dend_32 { pt3dadd( 2.71107, -152.264, 73.7038, 0.23 ) }
    dend_32 { pt3dadd( 1.10311, -155.681, 76.0125, 0.23 ) }
    dend_32 { pt3dadd( 0.476276, -157.097, 76.9116, 0.91 ) }
    dend_32 { pt3dadd( -1.45802, -161.666, 79.4511, 0.23 ) }
    dend_32 { pt3dadd( -1.96209, -162.841, 79.9516, 0.91 ) }
    dend_32 { pt3dadd( -2.68307, -164.676, 80.4852, 0.23 ) }
    dend_32 { pt3dadd( -3.32001, -166.476, 80.7829, 1.14 ) }
    dend_32 { pt3dadd( -4.56345, -170.262, 81.099, 0.23 ) }
    dend_32 { pt3dadd( -5.74819, -174.287, 81.3263, 0.91 ) }
    dend_32 { pt3dadd( -6.95377, -178.712, 81.3241, 0.23 ) }
    dend_32 { pt3dadd( -7.94473, -182.342, 81.3471, 0.68 ) }
    dend_32 { pt3dadd( -8.9143, -185.655, 81.3761, 0.23 ) }
    dend_32 { pt3dadd( -9.70357, -188.111, 81.3723, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 54.9137, 42.2523, -0.046724, 0.23 ) }
    dend_10 { pt3dadd( 57.0037, 41.9307, 2.03507, 0.23 ) }
    dend_10 { pt3dadd( 60.4378, 41.7547, 4.76867, 0.23 ) }
    dend_10 { pt3dadd( 63.1786, 41.817, 6.61542, 0.91 ) }
    dend_10 { pt3dadd( 64.8489, 41.9726, 7.62932, 0.23 ) }
    dend_10 { pt3dadd( 66.1393, 42.1554, 8.37498, 0.91 ) }
    dend_10 { pt3dadd( 68.8241, 42.5862, 9.76266, 0.23 ) }
    dend_10 { pt3dadd( 71.9727, 43.2999, 11.1359, 0.23 ) }
    dend_10 { pt3dadd( 74.7453, 43.989, 12.1246, 0.23 ) }
    dend_10 { pt3dadd( 78.1581, 44.8078, 13.2426, 0.23 ) }
    dend_10 { pt3dadd( 81.0352, 45.4415, 14.1233, 0.91 ) }
    dend_10 { pt3dadd( 83.6392, 46.0096, 14.9333, 0.23 ) }
    dend_10 { pt3dadd( 85.5038, 46.4426, 15.5474, 0.68 ) }
    dend_10 { pt3dadd( 87.732, 46.9812, 16.3581, 0.23 ) }
    dend_10 { pt3dadd( 89.4434, 47.4557, 17.0372, 0.23 ) }
    dend_10 { pt3dadd( 90.1974, 47.706, 17.3591, 0.23 ) }
    dend_10 { pt3dadd( 92.5472, 48.6919, 18.5279, 0.91 ) }
    dend_10 { pt3dadd( 94.2119, 49.5474, 19.4731, 0.23 ) }
    dend_10 { pt3dadd( 95.3811, 50.2533, 20.1768, 0.91 ) }
    dend_10 { pt3dadd( 98.101, 52.034, 21.664, 0.23 ) }
    dend_10 { pt3dadd( 100.444, 53.6825, 22.7969, 0.23 ) }
    dend_10 { pt3dadd( 102.045, 54.8685, 23.4853, 0.23 ) }
    dend_10 { pt3dadd( 103.432, 55.9219, 24.009, 0.68 ) }
    dend_10 { pt3dadd( 105.848, 57.7146, 24.8063, 0.23 ) }
    dend_10 { pt3dadd( 109.593, 60.4199, 25.8995, 0.23 ) }
    dend_10 { pt3dadd( 111.969, 61.9923, 26.4111, 0.23 ) }
    dend_10 { pt3dadd( 113.154, 62.6967, 26.6189, 0.23 ) }
    dend_10 { pt3dadd( 114.865, 63.5814, 26.8568, 0.23 ) }
    dend_10 { pt3dadd( 116.422, 64.2861, 27.0692, 0.68 ) }
    dend_10 { pt3dadd( 117.269, 64.5836, 27.2028, 0.68 ) }
    dend_10 { pt3dadd( 119.376, 65.1387, 27.8149, 0.23 ) }
    dend_10 { pt3dadd( 121.071, 65.468, 28.3514, 0.68 ) }
    dend_10 { pt3dadd( 122.28, 65.6687, 28.7537, 0.23 ) }
    dend_10 { pt3dadd( 123.709, 65.9161, 29.2402, 0.68 ) }
    dend_10 { pt3dadd( 126.392, 66.4694, 30.2014, 0.23 ) }
    dend_10 { pt3dadd( 128.674, 66.9846, 31.151, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 54.9137, 42.2523, -0.046724, 0.68 ) }
    dend_7 { pt3dadd( 56.6107, 43.3883, -0.31636, 0.68 ) }
    dend_7 { pt3dadd( 57.7203, 44.1084, -0.431874, 0.68 ) }
    dend_7 { pt3dadd( 60.3242, 45.7552, -0.608345, 0.23 ) }
    dend_7 { pt3dadd( 62.11, 46.8933, -0.669272, 0.23 ) }
    dend_7 { pt3dadd( 64.5669, 48.4492, -0.657538, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 67.4925, 50.2964, -0.561462, 0.23 ) }
    dend_7 { pt3dadd( 68.2051, 50.7499, -0.514761, 1.36 ) }
    dend_7 { pt3dadd( 68.9064, 51.2171, -0.43961, 1.36 ) }
    dend_7 { pt3dadd( 70.8335, 52.7296, -0.0110875, 0.23 ) }
    dend_7 { pt3dadd( 72.6434, 54.4761, 0.498231, 0.23 ) }
    dend_7 { pt3dadd( 73.5968, 55.5475, 0.786083, 0.23 ) }
    dend_7 { pt3dadd( 74.3433, 56.4871, 0.982014, 1.14 ) }
    dend_7 { pt3dadd( 75.7359, 58.2308, 1.15724, 1.14 ) }
    dend_7 { pt3dadd( 78.3559, 61.3765, 1.09016, 0.23 ) }
    dend_7 { pt3dadd( 79.7935, 62.9259, 0.792094, 0.68 ) }
    dend_7 { pt3dadd( 81.2484, 64.2554, 0.360472, 0.23 ) }
    dend_7 { pt3dadd( 83.3374, 65.8213, -0.279073, 0.68 ) }
    dend_7 { pt3dadd( 86.4871, 67.7279, -1.2091, 0.23 ) }
    dend_7 { pt3dadd( 88.5031, 68.6889, -1.69969, 0.23 ) }
    dend_7 { pt3dadd( 91.3375, 69.7184, -2.23733, 1.14 ) }
    dend_7 { pt3dadd( 94.3164, 70.5426, -2.41413, 0.23 ) }
    dend_7 { pt3dadd( 96.778, 71.0562, -2.19542, 0.68 ) }
    dend_7 { pt3dadd( 97.8853, 71.2274, -1.90163, 0.23 ) }
    dend_7 { pt3dadd( 100.804, 71.613, -0.620415, 0.91 ) }
    dend_7 { pt3dadd( 102.061, 71.7791, 0.0536511, 0.91 ) }
    dend_7 { pt3dadd( 104.116, 72.0634, 1.278, 0.23 ) }
    dend_7 { pt3dadd( 105.461, 72.2724, 2.04767, 0.23 ) }
    dend_7 { pt3dadd( 106.252, 72.4311, 2.46333, 0.23 ) }
    dend_7 { pt3dadd( 108.487, 73.0153, 3.48902, 0.68 ) }
    dend_7 { pt3dadd( 110.987, 73.8782, 4.41135, 0.23 ) }
    dend_7 { pt3dadd( 112.229, 74.3795, 4.77844, 0.68 ) }
    dend_7 { pt3dadd( 113.518, 74.9751, 5.03508, 0.23 ) }
    dend_7 { pt3dadd( 114.742, 75.5349, 5.1591, 0.23 ) }
    dend_7 { pt3dadd( 116.278, 76.1852, 5.24563, 0.23 ) }
    dend_7 { pt3dadd( 117.395, 76.625, 5.27898, 0.68 ) }
    dend_7 { pt3dadd( 120.328, 77.6593, 5.37897, 0.23 ) }
    dend_7 { pt3dadd( 122.502, 78.3811, 5.43843, 1.14 ) }
    dend_7 { pt3dadd( 125.603, 79.3195, 5.52406, 0.23 ) }
    dend_7 { pt3dadd( 128.324, 80.0541, 5.6198, 0.23 ) }
    dend_7 { pt3dadd( 130.252, 80.5405, 5.69759, 0.91 ) }
    dend_7 { pt3dadd( 133.538, 81.2886, 5.93205, 0.23 ) }
    dend_7 { pt3dadd( 143.909, 88.1104, 5.47341, 0.23 ) }
    dend_7 { pt3dadd( 154.94, 93.6568, 4.65618, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -46.359, -87.3787, -127.471, 0.23 ) }
    dend_76 { pt3dadd( -49.2302, -97.142, -131.619, 0.23 ) }
    dend_76 { pt3dadd( -53.9141, -105.942, -136.032, 0.23 ) }
    dend_76 { pt3dadd( -59.2945, -115.012, -138.756, 0.23 ) }
    dend_76 { pt3dadd( -64.1002, -124.655, -140.57, 0.23 ) }
    dend_76 { pt3dadd( -67.5352, -135.072, -140.472, 0.23 ) }
    dend_76 { pt3dadd( -71.1232, -145.274, -138.898, 0.23 ) }
    dend_76 { pt3dadd( -73.4168, -155.783, -136.818, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 46/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -46.359, -87.3787, -127.471, 0.23 ) }
    dend_75 { pt3dadd( -46.8381, -92.9781, -135.922, 0.23 ) }
    dend_75 { pt3dadd( -48.3676, -99.3211, -143.717, 0.23 ) }
    dend_75 { pt3dadd( -48.5248, -104.969, -152.158, 0.23 ) }
    dend_75 { pt3dadd( -49.3586, -111.289, -160.093, 0.23 ) }
    dend_75 { pt3dadd( -49.8137, -115.959, -169.04, 0.23 ) }
    dend_75 { pt3dadd( -49.915, -119.606, -178.414, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 53/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -61.7065, -68.7692, -108.268, 0.23 ) }
    dend_73 { pt3dadd( -65.4055, -75.3329, -114.555, 0.23 ) }
    dend_73 { pt3dadd( -69.4173, -82.3234, -120.175, 0.23 ) }
    dend_73 { pt3dadd( -73.7834, -89.4218, -125.371, 0.23 ) }
    dend_73 { pt3dadd( -77.9463, -96.5818, -130.664, 0.23 ) }
    dend_73 { pt3dadd( -81.9758, -102.918, -136.953, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -61.7065, -68.7692, -108.268, 0.23 ) }
    dend_72 { pt3dadd( -65.2767, -75.5255, -114.908, 0.23 ) }
    dend_72 { pt3dadd( -66.9733, -83.1662, -121.465, 0.23 ) }
    dend_72 { pt3dadd( -67.1379, -90.9215, -128.162, 0.23 ) }
    dend_72 { pt3dadd( -68.431, -98.5257, -134.863, 0.23 ) }
    dend_72 { pt3dadd( -71.1646, -105.741, -141.482, 0.23 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 127.005, 73.2071, -95.1135, 0.23 ) }
    dend_69 { pt3dadd( 132.176, 76.0127, -97.1018, 0.23 ) }
    dend_69 { pt3dadd( 137.126, 77.8521, -100.323, 0.23 ) }
    dend_69 { pt3dadd( 141.913, 79.1451, -104.01, 0.23 ) }
    dend_69 { pt3dadd( 146.383, 81.538, -107.576, 0.23 ) }
    dend_69 { pt3dadd( 150.837, 84.4656, -110.771, 0.23 ) }
    dend_69 { pt3dadd( 155.629, 87.5289, -113.287, 0.23 ) }
    dend_69 { pt3dadd( 160.694, 90.6105, -115.167, 0.23 ) }
    dend_69 { pt3dadd( 165.772, 93.6105, -117.129, 0.23 ) }
    dend_69 { pt3dadd( 171.433, 96.0924, -117.616, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 127.005, 73.2071, -95.1135, 0.23 ) }
    dend_68 { pt3dadd( 136.121, 78.9253, -98.6521, 0.23 ) }
    dend_68 { pt3dadd( 144.573, 84.2473, -103.987, 0.23 ) }
    dend_68 { pt3dadd( 153.382, 89.5416, -108.729, 0.23 ) }
    dend_68 { pt3dadd( 161.726, 96.5683, -111.981, 0.23 ) }
    dend_68 { pt3dadd( 170.028, 103.644, -115.242, 0.23 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 81/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 98.2204, 11.9445, -95.0161, 0.23 ) }
    dend_66 { pt3dadd( 106.284, 8.97546, -100.964, 0.23 ) }
    dend_66 { pt3dadd( 114.051, 5.00956, -106.77, 0.23 ) }
    dend_66 { pt3dadd( 122.377, 2.09071, -112.358, 0.23 ) }
    dend_66 { pt3dadd( 129.13, -1.30772, -119.634, 0.23 ) }
    dend_66 { pt3dadd( 136.327, -3.79238, -126.808, 0.23 ) }
    dend_66 { pt3dadd( 142.543, -5.92975, -134.963, 0.23 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 88/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 98.2204, 11.9445, -95.0161, 0.23 ) }
    dend_65 { pt3dadd( 105.931, 8.8357, -101.204, 0.23 ) }
    dend_65 { pt3dadd( 113.102, 7.45107, -108.539, 0.23 ) }
    dend_65 { pt3dadd( 121.112, 6.04615, -114.92, 0.23 ) }
    dend_65 { pt3dadd( 128.88, 5.37325, -121.7, 0.23 ) }
    dend_65 { pt3dadd( 136.436, 6.22905, -128.685, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 120.758, 147.618, 9.49594, 0.23 ) }
    dend_51 { pt3dadd( 130.246, 154.078, 10.2442, 0.23 ) }
    dend_51 { pt3dadd( 138.995, 161.338, 12.2239, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 97/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 120.758, 147.618, 9.49594, 0.23 ) }
    dend_50 { pt3dadd( 127.635, 152.5, 9.53767, 0.23 ) }
    dend_50 { pt3dadd( 134.248, 157.77, 9.61654, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 139.702, 164.208, 10.7895, 0.23 ) }
    dend_50 { pt3dadd( 144.261, 171.358, 12.024, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 2/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 40.9318, -179.051, 80.7928, 0.23 ) }
    dend_37 { pt3dadd( 44.639, -183.352, 84.4984, 0.23 ) }
    dend_37 { pt3dadd( 46.487, -185.497, 86.3456, 0.91 ) }
    dend_37 { pt3dadd( 51.4467, -191.252, 91.3032, 0.23 ) }
    dend_37 { pt3dadd( 53.3667, -193.48, 93.2224, 0.68 ) }
    dend_37 { pt3dadd( 57.1458, -197.865, 96.9999, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 40.9318, -179.051, 80.7928, 0.23 ) }
    dend_36 { pt3dadd( 41.3179, -181.654, 82.0939, 0.23 ) }
    dend_36 { pt3dadd( 41.7959, -184.878, 83.7049, 0.68 ) }
    dend_36 { pt3dadd( 42.099, -186.922, 84.7266, 0.23 ) }
    dend_36 { pt3dadd( 42.3112, -188.353, 85.4416, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.70357, -188.111, 81.3723, 0.23 ) }
    dend_34 { pt3dadd( -9.13502, -189.764, 82.2478, 0.23 ) }
    dend_34 { pt3dadd( -8.7499, -190.555, 82.6644, 0.68 ) }
    dend_34 { pt3dadd( -7.05458, -193.563, 83.8774, 0.23 ) }
    dend_34 { pt3dadd( -6.78998, -194.033, 84.0668, 0.23 ) }
    dend_34 { pt3dadd( -5.9416, -195.538, 84.6738, 0.23 ) }
    dend_34 { pt3dadd( -4.78819, -197.584, 85.4991, 0.91 ) }
    dend_34 { pt3dadd( -3.9574, -198.932, 86.0775, 0.23 ) }
    dend_34 { pt3dadd( -2.65724, -200.704, 86.7454, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.70357, -188.111, 81.3723, 0.23 ) }
    dend_33 { pt3dadd( -10.5305, -189.079, 81.995, 0.23 ) }
    dend_33 { pt3dadd( -11.2763, -189.916, 82.5126, 0.91 ) }
    dend_33 { pt3dadd( -12.3937, -191.132, 83.3105, 0.23 ) }
    dend_33 { pt3dadd( -12.6688, -191.415, 83.5075, 0.68 ) }
    dend_33 { pt3dadd( -13.5562, -192.329, 84.1403, 0.23 ) }
    dend_33 { pt3dadd( -13.8356, -192.613, 84.3704, 1.14 ) }
    dend_33 { pt3dadd( -14.1387, -192.912, 84.6557, 1.14 ) }
    dend_33 { pt3dadd( -15.1763, -194.027, 85.6969, 0.23 ) }
    dend_33 { pt3dadd( -15.885, -194.828, 86.4347, 1.14 ) }
    dend_33 { pt3dadd( -16.1063, -195.091, 86.6823, 1.14 ) }
    dend_33 { pt3dadd( -17.3594, -196.662, 88.1801, 0.23 ) }
    dend_33 { pt3dadd( -17.7517, -197.179, 88.703, 0.23 ) }
    dend_33 { pt3dadd( -18.4845, -198.203, 89.8073, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 128.674, 66.9846, 31.151, 0.23 ) }
    dend_12 { pt3dadd( 129.168, 68.6863, 31.5161, 0.23 ) }
    dend_12 { pt3dadd( 129.46, 69.5363, 31.7007, 0.91 ) }
    dend_12 { pt3dadd( 131.352, 73.9898, 32.7442, 0.23 ) }
    dend_12 { pt3dadd( 132.684, 76.4981, 33.4778, 0.68 ) }
    dend_12 { pt3dadd( 133.961, 78.4181, 34.1528, 0.23 ) }
    dend_12 { pt3dadd( 135.314, 80.1876, 34.8388, 0.91 ) }
    dend_12 { pt3dadd( 136.37, 81.304, 35.3448, 0.23 ) }
    dend_12 { pt3dadd( 138.002, 82.732, 36.0821, 0.68 ) }
    dend_12 { pt3dadd( 140.451, 84.448, 37.1136, 0.23 ) }
    dend_12 { pt3dadd( 143.0, 86.0125, 38.2041, 0.23 ) }
    dend_12 { pt3dadd( 144.402, 86.7814, 38.7752, 0.23 ) }
    dend_12 { pt3dadd( 145.737, 87.4953, 39.3364, 0.91 ) }
    dend_12 { pt3dadd( 146.681, 87.9696, 39.742, 0.91 ) }
    dend_12 { pt3dadd( 154.338, 93.6309, 42.9543, 0.91 ) }
    dend_12 { pt3dadd( 161.814, 99.2261, 46.6492, 0.91 ) }
    dend_12 { pt3dadd( 167.795, 106.178, 50.8707, 0.91 ) }
    dend_12 { pt3dadd( 174.487, 113.307, 53.5023, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 128.674, 66.9846, 31.151, 0.23 ) }
    dend_11 { pt3dadd( 129.658, 67.0921, 31.6399, 0.23 ) }
    dend_11 { pt3dadd( 131.724, 67.2818, 32.6479, 0.45 ) }
    dend_11 { pt3dadd( 133.895, 67.4489, 33.6953, 0.23 ) }
    dend_11 { pt3dadd( 136.071, 67.6328, 34.8093, 0.68 ) }
    dend_11 { pt3dadd( 138.335, 67.865, 35.9859, 0.23 ) }
    dend_11 { pt3dadd( 140.838, 68.1389, 37.2908, 0.68 ) }
    dend_11 { pt3dadd( 141.875, 68.2729, 37.8295, 0.23 ) }
    dend_11 { pt3dadd( 142.952, 68.4165, 38.3858, 0.68 ) }
    dend_11 { pt3dadd( 145.121, 68.6976, 39.4852, 0.23 ) }
    dend_11 { pt3dadd( 147.942, 69.1265, 40.9682, 1.14 ) }
    dend_11 { pt3dadd( 149.32, 69.3624, 41.7013, 0.23 ) }
    dend_11 { pt3dadd( 149.964, 69.487, 42.0853, 0.91 ) }
    dend_11 { pt3dadd( 151.389, 69.8135, 42.9751, 0.23 ) }
    dend_11 { pt3dadd( 152.261, 70.0312, 43.5197, 1.14 ) }
    dend_11 { pt3dadd( 154.094, 70.4851, 44.6486, 0.23 ) }
    dend_11 { pt3dadd( 156.211, 71.0482, 46.1187, 0.91 ) }
    dend_11 { pt3dadd( 158.366, 71.628, 47.6757, 0.23 ) }
    dend_11 { pt3dadd( 160.456, 72.1938, 49.1782, 0.68 ) }
    dend_11 { pt3dadd( 163.02, 72.8918, 50.9793, 0.23 ) }
    dend_11 { pt3dadd( 164.129, 73.1924, 51.7826, 0.68 ) }
    dend_11 { pt3dadd( 166.5, 73.8116, 53.562, 0.23 ) }
    dend_11 { pt3dadd( 168.781, 74.391, 55.2844, 0.68 ) }
    dend_11 { pt3dadd( 170.845, 74.9208, 56.8523, 0.23 ) }
    dend_11 { pt3dadd( 172.457, 75.3403, 58.1111, 0.23 ) }
    dend_11 { pt3dadd( 176.386, 76.3528, 61.1425, 0.23 ) }
    dend_11 { pt3dadd( 179.063, 77.0414, 63.1025, 0.23 ) }
    dend_11 { pt3dadd( 181.078, 77.5596, 64.4834, 0.68 ) }
    dend_11 { pt3dadd( 184.592, 78.5408, 66.9164, 0.23 ) }
    dend_11 { pt3dadd( 186.938, 79.2273, 68.5063, 0.23 ) }
    dend_11 { pt3dadd( 189.276, 79.9733, 70.0841, 0.23 ) }
    dend_11 { pt3dadd( 191.741, 80.7869, 71.6352, 0.45 ) }
    dend_11 { pt3dadd( 192.834, 81.1604, 72.3093, 0.68 ) }
    dend_11 { pt3dadd( 196.509, 82.4634, 74.6147, 0.23 ) }
    dend_11 { pt3dadd( 198.349, 83.1209, 75.7632, 0.68 ) }
    dend_11 { pt3dadd( 201.562, 84.466, 77.9687, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 154.94, 93.6568, 4.65618, 0.23 ) }
    dend_9 { pt3dadd( 159.625, 96.0767, 4.91656, 0.23 ) }
    dend_9 { pt3dadd( 164.209, 98.4913, 5.86308, 0.23 ) }
    dend_9 { pt3dadd( 169.075, 100.36, 6.5422, 0.23 ) }
    dend_9 { pt3dadd( 173.914, 101.935, 7.80896, 0.23 ) }
    dend_9 { pt3dadd( 178.546, 103.053, 9.97556, 0.23 ) }
    dend_9 { pt3dadd( 183.043, 103.307, 12.6523, 0.23 ) }
    dend_9 { pt3dadd( 187.37, 104.272, 15.4348, 0.23 ) }
    dend_9 { pt3dadd( 191.442, 105.733, 18.3809, 0.23 ) }
    dend_9 { pt3dadd( 195.936, 106.94, 20.7765, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 200.042, 108.384, 23.6847, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 154.94, 93.6568, 4.65618, 0.23 ) }
    dend_8 { pt3dadd( 165.834, 99.261, 5.76118, 0.23 ) }
    dend_8 { pt3dadd( 176.765, 104.523, 7.67525, 0.23 ) }
    dend_8 { pt3dadd( 187.291, 110.955, 8.0797, 0.23 ) }
    dend_8 { pt3dadd( 198.34, 116.344, 7.45541, 0.23 ) }
    dend_8 { pt3dadd( 209.584, 121.027, 8.91462, 0.23 ) }
    dend_8 { pt3dadd( 220.326, 126.598, 11.0607, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, axon_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, axon_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_44 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_57 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_70 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_63 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_58 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_55 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_49 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_35 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_7 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_76 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_75 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_73 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_72 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_69 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_68 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_53 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_60 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_48 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_37 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_51 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_50 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 7
    dend_39 nseg = 9
    dend_16 nseg = 15
    dend_1 nseg = 17
    dend_57 nseg = 3
    dend_46 nseg = 3
    dend_43 nseg = 3
    dend_29 nseg = 19
    dend_20 nseg = 13
    dend_18 nseg = 3
    dend_17 nseg = 3
    dend_14 nseg = 11
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_70 nseg = 3
    dend_63 nseg = 3
    dend_59 nseg = 3
    dend_58 nseg = 7
    dend_55 nseg = 5
    dend_54 nseg = 5
    dend_52 nseg = 5
    dend_47 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 5
    dend_38 nseg = 5
    dend_31 nseg = 5
    dend_25 nseg = 5
    dend_24 nseg = 13
    dend_13 nseg = 5
    dend_74 nseg = 5
    dend_71 nseg = 3
    dend_67 nseg = 5
    dend_64 nseg = 5
    dend_49 nseg = 3
    dend_35 nseg = 3
    dend_32 nseg = 3
    dend_10 nseg = 5
    dend_7 nseg = 5
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 3
    dend_68 nseg = 3
    dend_66 nseg = 3
    dend_65 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 5
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_NBC_4eea8c6853_0_0


