// Cell: cACint209_L23_DBC_d6b3e3e96c_0_0
/*
{
  "id" : "cACint209_L23_DBC_d6b3e3e96c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.77789, -9.10671, 0.213384, 1.9414", "-1.61905, -8.1823, 0.19421, 2.74435", "-1.46021, -7.25789, 0.175037, 3.60731", "-1.30137, -6.33348, 0.155863, 4.45639", "-1.14253, -5.40907, 0.13669, 5.44814", "-0.98369, -4.48466, 0.117516, 6.63999", "-0.824851, -3.56025, 0.0983425, 7.51786", "-0.666011, -2.63584, 0.079169, 8.28149", "-0.507172, -1.71143, 0.0599954, 9.04511", "-0.348332, -0.787014, 0.0408218, 9.54017", "-0.189493, 0.137397, 0.0216482, 9.79406", "-0.0306533, 1.06181, 0.0024746, 9.91581", "0.128186, 1.98622, -0.016699, 9.60599", "0.287026, 2.91063, -0.0358726, 9.02434", "0.445865, 3.83504, -0.0550462, 8.24064", "0.604705, 4.75945, -0.0742198, 6.93834", "0.763544, 5.68386, -0.0933933, 5.63916", "0.922383, 6.60827, -0.112567, 4.40137", "1.08122, 7.53268, -0.131741, 3.22963", "1.24006, 8.4571, -0.150914, 2.07547", "1.3989, 9.38151, -0.170088, 1.29813" ]
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.00698, -7.21508, 2.18969, 2.77", "-1.22888, -9.24928, 2.18969, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998602831057
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-5.20698, 3.51993, 1.30969, 1.66", "-6.26676, 4.04265, 1.52175, 1.66", "-9.25666, 5.51737, 2.12003, 1.11", "-12.168, 6.95334, 2.70258, 1.11", "-15.5315, 8.61235, 3.37563, 1.11", "-19.2981, 10.4701, 4.12931, 1.11", "-24.1952, 12.8856, 5.10922, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998602831057
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.04302, 8.67842, 7.37969, 2.77", "2.32658, 10.1851, 6.77399, 2.77", "2.49528, 11.1806, 6.34247, 2.49", "2.89919, 13.1947, 5.48429, 1.66", "3.2095, 14.5999, 4.91575, 1.66", "3.54048, 16.0988, 4.30932, 1.38", "4.0006, 18.1824, 3.4663, 1.38", "4.41432, 20.1161, 2.63278, 1.11", "4.85992, 22.332, 1.66219, 1.11", "5.1016, 23.5887, 1.15497, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998602831057
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.3989, 9.38151, -0.170088, 0.55", "3.93909, 24.1649, -0.170088, 0.55", "6.47928, 38.9482, -0.170088, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-1.22888, -9.24928, 2.18969, 1.38", "-0.832778, -10.1654, 2.17926, 1.38", "-0.490917, -10.9562, 2.17026, 1.11", "-0.0726642, -11.9236, 2.15925, 1.11", "0.304925, -12.797, 2.14931, 0.83", "0.728147, -13.7759, 2.13817, 1.11", "0.976338, -14.35, 2.13163, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.22888, -9.24928, 2.18969, 1.38", "-1.41768, -10.3239, 3.28721, 1.38", "-1.58512, -11.5365, 4.50206, 1.66", "-1.92751, -14.894, 7.6595, 1.38", "-2.2667, -17.9634, 10.5586, 1.11", "-2.62045, -20.9111, 13.293, 1.38", "-2.99639, -24.0128, 16.0162, 1.11", "-3.11556, -24.9024, 16.7808, 1.11", "-3.46936, -27.8178, 19.0674, 1.38", "-3.6808, -30.096, 20.515, 1.11", "-3.95242, -33.0174, 21.9993, 1.38", "-4.2228, -35.6438, 23.1811, 0.55", "-4.41653, -37.3953, 23.883, 0.55", "-4.73598, -40.0295, 24.8358, 0.83", "-5.04849, -43.0521, 25.7077, 0.83", "-5.15868, -45.6679, 26.1936, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-24.1952, 12.8856, 5.10922, 0.83", "-26.2485, 12.9353, 2.02237, 0.83", "-27.5307, 12.9659, 0.095497, 0.83", "-28.8942, 12.966, -1.93688, 0.83", "-31.1653, 12.7797, -5.18808, 0.83", "-34.3502, 12.4393, -9.53438, 0.83", "-35.1149, 12.3575, -10.578, 0.83", "-37.7373, 12.0446, -14.246, 0.83", "-40.239, 11.6694, -17.8509, 0.55", "-42.8441, 11.2533, -21.4369, 0.55", "-45.4702, 10.6716, -24.7175, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-24.1952, 12.8856, 5.10922, 0.83", "-24.6008, 14.1573, 5.62847, 0.83", "-24.7985, 14.8029, 5.93436, 0.83", "-25.053, 15.5374, 6.29787, 0.83", "-25.7788, 17.3059, 7.40124, 0.83", "-26.3146, 18.6115, 8.21581, 0.83", "-26.7831, 19.753, 8.92804, 0.83", "-27.3607, 21.2271, 9.92018, 0.83", "-27.7774, 22.3169, 10.6778, 0.83", "-28.9363, 25.0713, 12.7994, 1.11" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "5.1016, 23.5887, 1.15497, 0.83", "4.66266, 26.7671, 2.11585, 0.83", "4.27624, 29.5653, 2.96176, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.1016, 23.5887, 1.15497, 0.83", "6.48356, 23.797, -1.41125, 0.83", "7.28887, 23.9376, -2.78702, 0.83", "11.9566, 24.5953, -10.0365, 0.55", "12.7474, 24.7067, -11.2647, 0.55", "14.6086, 24.9689, -14.1553, 0.55", "16.4597, 25.2298, -17.0304, 0.55", "18.9175, 25.4164, -20.6164, 0.83", "23.1534, 25.6187, -26.5538, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "6.47928, 38.9482, -0.170088, 0.28", "9.01947, 53.7316, -0.170088, 0.28", "11.5597, 68.5149, -0.170088, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "0.976338, -14.35, 2.13163, 1.11", "1.6877, -15.9164, 3.87493, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.976338, -14.35, 2.13163, 1.38", "1.02979, -15.8686, 3.00373, 1.38", "1.07261, -18.2715, 4.32584, 1.38", "1.17579, -22.8839, 6.6691, 0.83", "1.28314, -25.3342, 7.75336, 0.83", "1.3833, -26.5661, 8.26239, 0.83", "1.60713, -28.5238, 9.01123, 0.83", "1.94798, -31.0925, 9.98235, 0.83", "2.34584, -33.5135, 10.8249, 0.83", "3.17777, -37.6873, 11.8567, 0.83", "3.45706, -39.1915, 12.1958, 0.83", "3.95909, -41.5206, 12.6721, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-5.15868, -45.6679, 26.1936, 0.55", "-6.4842, -48.2529, 27.9956, 0.55", "-7.77064, -50.7616, 29.7445, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.15868, -45.6679, 26.1936, 0.83", "-5.78233, -47.7112, 23.5197, 0.83", "-6.32394, -49.5601, 21.5458, 0.83", "-6.69241, -51.1383, 20.1214, 0.83", "-8.52186, -59.3401, 14.0481, 0.83", "-8.86554, -61.0149, 13.0073, 0.55", "-9.31614, -63.1074, 11.8474, 0.55", "-10.1345, -66.5342, 10.194, 0.83", "-10.8726, -69.5184, 9.03284, 0.55", "-11.8496, -73.4755, 8.07179, 0.55", "-12.4453, -76.4136, 7.87396, 0.55", "-12.7577, -77.9509, 7.78608, 0.55", "-13.0017, -79.0932, 7.73485, 0.55", "-13.7195, -82.5745, 7.69145, 0.83", "-14.465, -86.528, 8.07229, 0.55", "-14.599, -87.6876, 8.27183, 0.55", "-14.7703, -89.5592, 8.65573, 0.55", "-14.8249, -90.6467, 8.91063, 0.55", "-14.9087, -93.9131, 9.84824, 0.83", "-14.9856, -97.9876, 11.3787, 0.55", "-14.988, -100.088, 12.3644, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-45.4702, 10.6716, -24.7175, 0.55", "-50.1784, 10.2842, -25.1476, 0.55", "-53.5946, 10.0289, -25.3568, 0.55", "-56.3565, 9.86994, -25.3139, 0.55", "-58.6754, 9.68685, -25.1174, 0.28", "-60.4288, 9.48095, -24.8354, 0.83", "-63.2949, 9.10114, -24.1964, 0.28", "-66.1482, 8.64103, -23.2084, 0.55", "-69.3564, 8.02044, -21.9103, 0.55", "-72.1462, 7.35565, -20.6183, 0.55", "-75.1077, 6.38539, -19.2698, 0.83", "-77.3852, 5.52207, -18.2755, 0.28", "-78.4779, 5.1197, -17.8553, 0.55", "-79.6241, 4.68641, -17.6715, 0.28", "-81.2157, 4.11157, -17.8449, 0.55", "-85.3594, 2.76272, -19.7735, 0.55", "-86.6473, 2.38748, -20.6179, 0.28", "-89.6808, 1.51547, -22.8631, 0.55", "-94.4383, 0.259977, -26.677, 0.28", "-96.2505, -0.16615, -28.2548, 0.55", "-101.451, -1.28471, -33.3581, 0.28", "-102.429, -1.49847, -34.4893, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-45.4702, 10.6716, -24.7175, 1.11", "-45.7841, 8.69144, -25.5398, 1.11", "-46.0452, 7.04454, -26.2495, 0.28", "-46.3856, 5.18774, -27.0235, 0.55", "-46.7822, 2.90713, -27.9274, 0.55", "-47.1202, 0.851413, -28.6574, 0.28", "-47.3686, -0.700222, -29.1891, 0.55", "-47.7032, -3.0364, -29.9503, 0.55", "-47.8371, -4.28936, -30.3338, 0.83", "-47.918, -5.45422, -30.6139, 0.55", "-48.0777, -7.6841, -30.9992, 0.55", "-48.2718, -9.57434, -31.2295, 0.83", "-48.5143, -11.0499, -31.3325, 0.83", "-48.9951, -13.0588, -31.4755, 0.83", "-49.7499, -15.6498, -31.7156, 0.55", "-50.1257, -16.7892, -31.8208, 0.55", "-50.6862, -18.3213, -32.0311, 1.38", "-51.6807, -20.786, -32.2294, 0.28", "-52.9909, -23.8356, -32.3854, 0.55", "-53.7534, -25.5394, -32.4225, 0.55", "-54.5326, -27.2915, -32.4425, 0.28", "-55.9974, -30.2133, -32.0228, 0.83", "-57.6737, -32.9459, -30.6908, 0.28", "-58.197, -33.6213, -30.0703, 0.55", "-58.4239, -33.8655, -29.7275, 0.28", "-59.2598, -34.6451, -28.3632, 0.55", "-61.4728, -36.6086, -24.5555, 0.55", "-63.1362, -38.1351, -21.4278, 0.28", "-63.5643, -38.5183, -20.6429, 0.83", "-64.6143, -39.4299, -18.655, 0.28", "-64.7882, -39.5915, -18.3019, 0.55", "-65.5837, -40.4672, -16.4495, 0.28", "-65.7712, -41.1097, -15.6051, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-28.9363, 25.0713, 12.7994, 0.55", "-32.0884, 27.8241, 14.6639, 0.55", "-33.7899, 29.7493, 15.7018, 0.55", "-36.0952, 32.6726, 17.1083, 0.55", "-37.624, 34.5921, 18.0806, 0.55", "-39.3857, 36.7202, 19.2215, 0.83", "-41.6067, 39.2686, 20.6155, 0.55", "-44.1181, 42.1722, 22.1148, 0.83", "-46.5304, 44.5634, 23.3629, 0.55", "-48.6722, 46.5791, 24.4625, 0.83", "-51.2431, 48.7031, 25.7257, 0.83", "-53.8063, 50.4218, 26.866, 0.55", "-55.7116, 51.3852, 27.6709, 0.55", "-59.404, 52.5187, 29.0031, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-28.9363, 25.0713, 12.7994, 0.55", "-29.7189, 26.5851, 12.7361, 0.55", "-30.0556, 27.4001, 13.0013, 0.83", "-30.4706, 28.3945, 13.3717, 0.55", "-30.7253, 28.9918, 13.6482, 0.83", "-31.137, 30.0512, 14.1438, 0.55", "-31.3194, 30.5903, 14.4167, 0.83", "-32.267, 34.1142, 16.3278, 0.83", "-32.7487, 36.1414, 17.6209, 0.83", "-33.0592, 37.6464, 18.6591, 0.55", "-33.2907, 38.8183, 19.4586, 0.55", "-33.7905, 41.0702, 20.8779, 0.83", "-34.0327, 42.2216, 21.586, 0.83", "-34.5624, 44.8134, 23.0492, 0.83", "-34.9409, 46.836, 24.2279, 0.55", "-35.3427, 48.6813, 25.2035, 0.55", "-36.0418, 50.9999, 26.4335, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "4.27624, 29.5653, 2.96176, 0.83", "4.40562, 30.8226, 2.92002, 0.83", "4.62414, 32.7401, 2.93579, 0.83", "4.97209, 35.2186, 3.01196, 0.83", "5.35466, 37.9426, 3.10006, 0.83", "5.60611, 39.4525, 3.12165, 0.83", "6.00509, 42.0631, 3.18392, 0.83", "6.49733, 44.7466, 3.05943, 0.83", "6.90403, 46.2896, 3.01224, 0.83", "7.30413, 47.5187, 3.07819, 0.83", "8.18065, 49.8928, 3.39249, 0.83", "9.08136, 51.9161, 3.79799, 0.83", "11.3048, 56.1431, 4.9047, 0.83", "13.5347, 59.7111, 6.13286, 0.83", "16.8741, 64.3486, 8.07017, 0.83", "18.259, 66.0303, 8.89109, 0.83", "20.6573, 68.5548, 10.3904, 0.83", "23.4011, 71.1306, 12.0964, 0.83", "26.0759, 73.3816, 13.7484, 0.83", "27.6919, 74.6119, 14.574, 0.83", "30.0091, 76.2171, 15.534, 0.83", "33.1919, 78.4421, 16.5848, 0.83", "35.0814, 79.8672, 17.0633, 0.83", "38.0747, 82.209, 17.3296, 0.83", "40.3335, 84.1414, 17.1058, 1.11", "42.2969, 85.9129, 16.5512, 0.83", "43.9407, 87.504, 15.8348, 0.83", "45.3011, 88.9206, 15.0757, 0.83", "48.4223, 92.4737, 13.4301, 0.83", "49.5765, 93.9165, 12.936, 0.83", "51.8548, 96.7812, 12.5089, 0.83", "52.9088, 98.0771, 12.6014, 0.83", "54.6359, 100.171, 13.0811, 0.83", "57.103, 103.28, 14.0599, 0.55", "58.8653, 105.589, 14.9512, 0.83", "61.0194, 108.48, 16.0246, 0.55", "62.8998, 111.204, 16.8736, 0.55", "63.1876, 111.642, 16.9712, 0.28", "64.0058, 113.058, 17.1308, 1.11", "65.2378, 115.736, 17.2563, 1.11", "65.7729, 117.616, 17.3876, 0.55", "66.0983, 119.851, 17.605, 0.83", "66.2159, 121.627, 17.8819, 1.38", "66.3451, 123.9, 18.291, 0.83", "66.5165, 127.515, 19.0515, 0.83", "66.552, 128.974, 19.3803, 0.28", "66.5826, 130.438, 19.6609, 0.83", "66.6328, 132.369, 19.9434, 0.83", "66.6591, 134.438, 20.1497, 0.83", "66.7182, 136.334, 20.2697, 1.38", "66.83, 138.241, 20.2144, 0.83", "67.0343, 141.345, 20.0438, 0.55", "67.127, 142.828, 19.9706, 0.55", "67.1522, 143.869, 19.9684, 0.55", "67.2086, 145.14, 19.9215, 0.83", "67.2972, 146.64, 19.8371, 0.55", "67.3935, 147.696, 19.7397, 0.83", "67.6207, 149.176, 19.5313, 0.55", "67.8301, 150.664, 19.2437, 0.55", "68.4929, 154.955, 18.1486, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "4.27624, 29.5653, 2.96176, 0.55", "3.71677, 30.8456, 2.28549, 0.55", "3.27233, 31.8675, 1.73662, 0.83", "2.74846, 33.0721, 1.08966, 0.55", "1.88829, 35.0499, 0.0273738, 0.83", "0.852729, 37.431, -1.2515, 0.55", "0.189491, 38.956, -2.07057, 0.55", "0.0106351, 39.397, -2.31402, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "23.1534, 25.6187, -26.5538, 0.28", "24.7637, 24.4145, -25.7199, 0.28", "27.1239, 22.6847, -24.7484, 0.55", "29.4549, 20.9317, -23.9156, 0.55", "31.6551, 19.2961, -23.2773, 0.55", "34.0736, 17.6446, -22.4482, 0.28", "35.4656, 16.8065, -21.8625, 0.55", "37.1872, 15.9912, -21.0862, 0.28", "38.6531, 15.4757, -20.2946, 0.55", "40.586, 15.0584, -19.0699, 0.28", "44.5766, 14.5218, -16.2209, 0.55", "47.205, 14.3402, -14.0446, 0.28", "48.5153, 14.3326, -12.857, 0.55", "50.2883, 14.4432, -11.0795, 0.28", "50.9976, 14.5467, -10.326, 0.83", "52.6477, 14.905, -8.38858, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "23.1534, 25.6187, -26.5538, 0.55", "23.8996, 26.4943, -26.2153, 0.55", "24.8428, 27.6012, -25.7874, 0.55", "25.3984, 28.2532, -25.5354, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "1.6877, -15.9164, 3.87493, 0.83", "3.27556, -16.2023, 4.90696, 0.83", "4.73518, -16.3596, 5.77532, 0.83", "6.38763, -16.4696, 6.74056, 0.83", "8.0563, -16.4932, 7.70473, 0.83", "10.083, -16.4017, 8.85046, 0.83", "12.3858, -16.2458, 10.1307, 0.83", "14.3739, -16.0543, 11.1954, 0.83", "16.6049, -15.7339, 12.4145, 0.83", "19.0629, -15.2619, 13.7668, 0.83", "21.3271, -14.7334, 14.9401, 0.83", "21.7242, -14.6371, 15.1304, 0.83", "21.9701, -14.5889, 15.247, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "1.6877, -15.9164, 3.87493, 0.83", "1.33392, -17.3981, 3.85228, 0.83", "1.03092, -18.8281, 3.87209, 0.83", "0.78402, -19.9536, 3.91736, 0.55", "0.454989, -21.3616, 3.90324, 0.83", "0.199315, -22.5583, 3.77088, 0.83", "-0.0585297, -23.9527, 3.5353, 0.83", "-0.347263, -25.7954, 3.11824, 0.55", "-0.572218, -27.3286, 2.76468, 0.83", "-0.815449, -29.0142, 2.36264, 0.83", "-1.15531, -31.2931, 1.86098, 0.83", "-1.33304, -32.3635, 1.66929, 0.55", "-1.59601, -33.788, 1.42556, 0.83", "-1.96326, -35.6375, 1.21341, 0.55", "-2.18782, -36.8593, 1.09515, 0.55", "-2.40208, -38.0844, 1.0093, 0.55", "-2.67445, -39.4395, 0.888391, 0.55", "-2.97107, -40.8375, 0.641034, 0.55", "-3.34194, -42.7117, 0.145515, 0.55", "-3.69186, -44.4937, -0.459378, 0.28", "-3.9576, -45.7355, -0.915536, 0.55", "-4.28956, -47.1064, -1.38646, 0.28", "-4.45516, -47.7892, -1.62351, 0.55", "-4.59618, -48.3636, -1.79948, 0.28", "-5.02255, -50.0758, -2.29096, 0.55", "-5.19088, -50.7798, -2.42886, 0.55", "-5.57888, -52.7357, -2.74843, 0.55", "-5.74056, -54.281, -2.96053, 0.55", "-5.75372, -54.5677, -2.98809, 0.28", "-5.679, -55.3933, -3.11995, 0.55", "-5.53375, -56.1834, -3.37275, 0.28", "-5.37103, -56.9446, -3.68868, 0.55", "-5.17173, -57.7027, -4.08073, 0.55", "-4.92231, -58.8725, -4.78315, 0.55", "-4.395, -61.4988, -6.64881, 0.55", "-3.94774, -63.8106, -8.39198, 0.55", "-3.83095, -64.4948, -8.89547, 0.28", "-3.6955, -65.2845, -9.42797, 0.55", "-3.48743, -67.3532, -10.7029, 0.55", "-3.39026, -69.1537, -11.6499, 0.28", "-3.43459, -70.9177, -12.3037, 0.55", "-3.52582, -72.6014, -12.7012, 0.55", "-3.79866, -75.0138, -13.277, 0.55", "-4.13938, -77.271, -13.7967, 0.55", "-4.36418, -78.9021, -14.1804, 0.55", "-4.5484, -80.0532, -14.4956, 0.55", "-4.92324, -82.7145, -15.5048, 0.83", "-5.12971, -85.6076, -16.8163, 0.55", "-5.12455, -87.3158, -17.6412, 0.55", "-4.9655, -89.1004, -18.5078, 0.55", "-4.72618, -90.6723, -19.2558, 0.55", "-4.23124, -93.1214, -20.2903, 0.55", "-3.49859, -95.9224, -21.2349, 0.55", "-3.17029, -97.1397, -21.5689, 0.55", "-2.88285, -98.3034, -21.8888, 0.55", "-2.60187, -99.6988, -22.2831, 0.83", "-2.13787, -102.212, -23.0782, 0.55", "-1.78914, -105.094, -24.1472, 0.83", "-1.78809, -107.799, -25.432, 0.55", "-2.00317, -110.091, -26.7611, 0.28", "-2.17726, -111.092, -27.478, 0.55", "-2.45608, -112.245, -28.5034, 0.83", "-2.82195, -113.628, -30.0621, 0.83", "-3.24515, -115.516, -32.937, 0.55", "-3.41536, -116.629, -34.9186, 0.55", "-3.53839, -117.668, -36.8912, 1.11", "-3.61677, -119.044, -39.5857, 0.55", "-3.591, -120.583, -42.7063, 0.83", "-3.20184, -123.542, -49.0654, 0.28", "-3.09981, -123.919, -49.961, 0.28", "-2.7423, -125.12, -52.9311, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "3.95909, -41.5206, 12.6721, 0.55", "4.87839, -43.2924, 12.6497, 0.55", "5.96158, -45.5227, 12.8138, 0.83", "6.72762, -47.2049, 13.0019, 0.55", "7.81862, -50.0133, 13.3294, 0.55", "8.68984, -53.0767, 13.655, 0.55", "9.02551, -54.5627, 13.8009, 0.55", "9.47857, -57.5571, 14.1, 0.83", "9.62768, -59.2057, 14.2651, 0.55", "9.70214, -62.1793, 14.5159, 0.55", "9.58339, -65.3129, 14.6176, 0.55", "9.3871, -67.2591, 14.575, 0.55", "8.91367, -70.708, 14.2699, 0.55", "8.62171, -72.3385, 13.9997, 0.83", "8.17119, -74.5278, 13.5506, 0.55", "7.68994, -76.5405, 13.0491, 0.83", "7.27688, -78.0714, 12.6809, 0.83", "6.35742, -80.6162, 12.0559, 0.55", "5.58236, -82.3879, 11.5656, 0.83", "4.95113, -83.6626, 11.1684, 0.83", "4.09656, -85.205, 10.6839, 0.83", "2.8495, -87.1538, 9.95034, 0.55", "1.89611, -88.5463, 9.28293, 0.55", "0.0455999, -91.2856, 7.7783, 0.55", "-1.49637, -93.6655, 6.328, 1.11", "-2.62988, -95.4987, 5.15291, 0.55", "-3.96533, -97.8258, 3.57567, 0.55", "-4.81338, -99.3872, 2.45064, 0.55", "-5.51198, -100.865, 1.4737, 1.11", "-5.93441, -102.109, 0.796956, 0.55", "-5.99778, -102.529, 0.619122, 0.83", "-5.99146, -103.318, 0.375943, 0.28", "-5.95359, -103.816, 0.291149, 0.55", "-5.85395, -104.778, 0.153571, 0.28", "-5.76301, -106.214, -0.0166137, 0.83", "-5.77793, -108.154, -0.231173, 0.28", "-5.84965, -110.082, -0.492601, 0.55", "-5.93374, -111.741, -0.713787, 0.28", "-6.0061, -112.451, -0.799155, 0.83", "-6.27848, -114.344, -1.02822, 0.28", "-6.61228, -116.161, -1.22905, 0.28", "-6.89206, -117.444, -1.32865, 0.83", "-7.44051, -119.281, -1.5071, 0.28", "-8.00742, -121.225, -1.68736, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "3.95909, -41.5206, 12.6721, 0.55", "1.56526, -42.2255, 12.8778, 0.55", "-1.42771, -43.0139, 13.1737, 0.55", "-3.8476, -43.6266, 13.7904, 0.55", "-6.81431, -44.3063, 14.8113, 0.55", "-9.01124, -44.7819, 15.7744, 0.55", "-9.7238, -44.9402, 16.1505, 0.55", "-10.4879, -45.1013, 16.6575, 1.11", "-14.0689, -45.9905, 19.4978, 0.55", "-14.9035, -46.2539, 20.2874, 0.55", "-16.0824, -46.6728, 21.584, 0.83", "-17.245, -47.1913, 22.8801, 0.28", "-19.1086, -48.0834, 24.9812, 0.55", "-19.7747, -48.4526, 25.67, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-14.988, -100.088, 12.3644, 0.55", "-14.0642, -100.961, 12.9051, 0.55", "-12.8173, -102.18, 13.6238, 0.55", "-11.3436, -103.638, 14.4959, 0.55", "-9.35922, -105.687, 15.7083, 0.55", "-8.12397, -106.978, 16.4833, 0.83", "-7.25213, -107.848, 17.081, 1.11", "-6.53668, -108.502, 17.6096, 0.83", "-5.57376, -109.232, 18.3864, 0.83", "-4.59665, -109.866, 19.2486, 0.83", "-3.56124, -110.41, 20.2314, 0.83", "-2.00726, -111.217, 21.7418, 0.55", "-0.983565, -111.772, 22.7832, 0.55", "0.39957, -112.717, 24.1524, 0.83", "-0.238687, -114.107, 23.2556, 0.55", "-0.976656, -115.454, 22.6919, 0.55", "-1.66165, -116.719, 22.1701, 0.55", "-2.71402, -118.667, 21.3693, 0.83", "-3.70015, -120.303, 20.642, 0.55", "-4.97759, -122.155, 19.6363, 0.55", "-6.71407, -124.366, 18.2545, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-14.988, -100.088, 12.3644, 1.11", "-14.9229, -101.211, 12.6331, 1.11", "-14.8838, -102.69, 12.944, 0.55", "-14.8762, -103.617, 13.1306, 0.55", "-14.8486, -104.814, 13.35, 0.55", "-14.8709, -106.474, 13.6787, 0.55", "-14.9084, -108.484, 14.0802, 0.55", "-14.9177, -110.321, 14.4542, 0.55", "-14.9312, -111.175, 14.6259, 0.28", "-14.9867, -112.529, 14.863, 0.83", "-15.1901, -114.717, 15.1738, 0.55", "-15.2928, -115.555, 15.2752, 0.55", "-15.4195, -116.56, 15.3918, 0.28", "-15.5532, -117.412, 15.4935, 0.83", "-15.7911, -118.707, 15.6378, 0.55", "-16.2098, -120.486, 15.8176, 0.83", "-16.4443, -121.329, 15.8837, 0.55", "-16.6999, -121.967, 15.929, 0.55", "-17.1038, -122.802, 15.9774, 0.83", "-17.6035, -123.722, 16.0254, 0.83", "-18.4047, -124.95, 16.0853, 0.55", "-18.8838, -125.665, 16.1236, 0.55", "-19.7055, -126.837, 16.1914, 0.55", "-20.341, -127.67, 16.2517, 0.83", "-21.1057, -128.635, 16.3326, 0.28", "-21.8892, -129.595, 16.4403, 0.55", "-23.1177, -131.121, 16.6438, 0.55", "-23.7818, -131.986, 16.7795, 0.55", "-24.299, -132.681, 16.9175, 0.55", "-24.8611, -133.354, 17.0625, 0.55", "-26.0953, -134.726, 17.3565, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-59.404, 52.5187, 29.0031, 0.55", "-62.0129, 52.1943, 29.2722, 0.55", "-64.1629, 51.9269, 29.494, 0.55", "-67.0904, 51.5628, 29.7959, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-59.404, 52.5187, 29.0031, 0.55", "-59.9095, 49.9119, 28.4282, 0.55", "-60.27, 48.0527, 28.0183, 0.55", "-60.9441, 44.5762, 27.2516, 0.55", "-61.2521, 42.9882, 26.9015, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "0.0106351, 39.397, -2.31402, 0.55", "-4.3419, 39.5072, -2.57293, 0.55", "-5.87704, 39.5795, -2.71498, 0.55", "-8.49544, 39.7445, -3.14642, 0.55", "-15.7057, 39.9261, -4.23489, 0.55", "-17.2812, 39.9167, -4.50852, 0.55", "-18.4731, 39.8611, -4.72946, 0.55", "-20.0649, 39.7192, -5.01638, 0.55", "-24.4912, 39.0081, -5.97879, 0.55", "-28.3522, 38.154, -7.01899, 0.55", "-30.8715, 37.4296, -7.88179, 0.55", "-32.7793, 36.8317, -8.49436, 0.55", "-35.9472, 35.891, -9.20873, 0.55", "-39.2417, 34.9998, -9.79593, 0.55", "-41.7595, 34.5477, -10.1203, 0.55", "-43.6475, 34.4132, -10.3815, 0.55", "-46.6617, 34.4104, -10.7728, 0.55", "-54.4302, 35.062, -12.1547, 0.55", "-56.7768, 35.475, -12.6602, 0.55", "-62.0982, 36.7383, -14.063, 0.55", "-65.5595, 37.6895, -15.1393, 0.55", "-68.174, 38.5505, -16.2573, 0.55", "-72.4395, 40.184, -18.8197, 0.55", "-74.9947, 41.3888, -21.195, 0.55", "-76.0163, 41.8813, -22.384, 0.55", "-77.3638, 42.5689, -24.3404, 0.55", "-80.1148, 43.9943, -28.6899, 0.55", "-82.0627, 44.9856, -31.9295, 0.55", "-84.3672, 46.0927, -36.0005, 0.55", "-85.4724, 46.6169, -38.1017, 0.55", "-87.7855, 47.8364, -42.5935, 0.55", "-89.3753, 48.6909, -45.6022, 0.55", "-90.8286, 49.4447, -47.7627, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.0106351, 39.397, -2.31402, 0.55", "-0.770021, 42.1721, -4.24028, 0.55", "-1.23983, 43.8422, -5.39954, 0.55", "-1.78613, 45.7842, -6.74752, 0.55", "-2.31809, 47.6753, -8.06015, 0.83", "-2.69794, 49.0255, -8.99743, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "21.9701, -14.5889, 15.247, 0.55", "24.3292, -14.3863, 14.3758, 0.55", "26.9066, -14.2696, 13.4215, 0.55", "30.1589, -14.2321, 12.2988, 0.55", "35.7406, -14.1679, 10.372, 0.55", "38.8184, -14.1325, 9.30964, 0.55", "41.8347, -14.0978, 8.26844, 0.55", "43.9107, -14.1438, 7.5074, 0.83", "46.4344, -14.3699, 6.45698, 0.83" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "21.9701, -14.5889, 15.247, 0.55", "23.424, -14.2926, 13.7044, 0.55", "24.3187, -14.0448, 12.7395, 0.55", "28.1716, -12.7706, 8.52738, 0.55", "31.5531, -11.4404, 4.91864, 0.55", "33.365, -10.5881, 3.0202, 0.83", "36.3644, -8.96314, 0.00640345, 0.55", "37.5035, -8.2414, -1.12658, 0.55", "38.2141, -7.59667, -1.74289, 0.28", "39.1923, -5.82226, -2.12856, 0.55", "39.9943, -3.56747, -2.05049, 0.55", "40.4642, -1.91316, -1.78605, 0.83", "41.0634, 0.844203, -1.04786, 0.28", "41.5104, 3.30446, -0.388379, 0.55", "41.7432, 4.93563, 0.0259428, 0.55", "41.8958, 6.68463, 0.376059, 0.28", "41.9628, 8.20583, 0.546788, 0.55", "41.9231, 10.7244, 0.641535, 0.28", "41.8611, 12.4139, 0.625372, 0.55", "41.6906, 13.8798, 0.654772, 0.28", "41.409, 16.1064, 0.691312, 0.55", "41.2472, 17.7034, 0.703649, 0.55", "41.042, 20.4751, 0.748971, 0.55", "41.0059, 21.9408, 0.755218, 0.55", "41.007, 24.2579, 0.816014, 0.55", "41.1121, 25.8299, 0.904127, 0.55", "41.3125, 27.1134, 1.01975, 0.55", "41.6776, 28.7522, 1.31204, 0.28", "41.8534, 29.4547, 1.46654, 0.55", "42.2347, 30.9178, 1.8071, 0.28", "42.5659, 32.3563, 2.19248, 0.55", "42.8798, 33.8808, 2.65371, 0.55", "43.3818, 36.3926, 3.46928, 0.28", "43.6647, 37.8098, 3.93781, 0.55", "43.9635, 39.4724, 4.56027, 0.28", "44.3686, 42.2325, 5.69057, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-8.00742, -121.225, -1.68736, 0.55", "-6.66072, -123.758, -1.29962, 0.55", "-6.31877, -124.761, -1.1102, 0.55", "-5.77617, -126.395, -0.751495, 0.83", "-5.39538, -127.375, -0.48445, 0.28", "-4.62167, -128.795, -0.0465752, 0.55", "-4.25704, -129.464, 0.159784, 0.28", "-3.21574, -131.43, 1.0224, 0.55", "-2.71073, -132.276, 1.42526, 0.28", "-1.82929, -133.704, 2.10736, 0.83", "-0.373143, -135.484, 2.9708, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-8.00742, -121.225, -1.68736, 0.55", "-11.1087, -121.453, -2.66791, 0.55", "-11.7645, -121.571, -2.81126, 0.28", "-13.3647, -121.86, -3.16107, 0.55", "-14.2921, -122.027, -3.36378, 0.28", "-16.0582, -122.345, -3.74985, 0.55", "-17.6777, -122.637, -4.10388, 0.28", "-20.2181, -122.919, -4.57978, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-6.71407, -124.366, 18.2545, 0.55", "-8.03442, -125.609, 19.2375, 0.55", "-9.83399, -127.304, 20.5774, 0.55", "-10.8682, -128.278, 21.3474, 0.83", "-12.0262, -129.369, 22.2096, 0.83", "-13.4104, -130.672, 23.2402, 0.55", "-14.5674, -131.762, 24.1016, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.71407, -124.366, 18.2545, 0.55", "-6.76987, -125.991, 18.5025, 0.55", "-6.94316, -128.1, 18.9109, 0.55", "-7.22162, -132.27, 19.7964, 0.55", "-7.35399, -134.723, 20.328, 0.83", "-7.44919, -137.551, 21.0021, 0.55", "-7.55129, -140.701, 21.7577, 0.83", "-7.64124, -143.577, 22.478, 0.55", "-7.71111, -146.114, 23.175, 0.55", "-7.76803, -147.605, 23.6203, 1.11", "-7.75721, -150.26, 24.4354, 0.55", "-7.74475, -152.669, 25.2226, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-2.69794, 49.0255, -8.99743, 0.55", "-3.85119, 51.9445, -11.3122, 0.55", "-4.47376, 53.5203, -12.5618, 0.55", "-4.79833, 54.3418, -13.2133, 0.28", "-5.34696, 55.7304, -14.3145, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-2.69794, 49.0255, -8.99743, 0.55", "-5.29998, 48.7326, -9.49865, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "46.4344, -14.3699, 6.45698, 0.55", "47.838, -14.0918, 9.03411, 0.55", "48.7703, -13.8804, 11.1756, 0.55", "50.762, -13.6423, 16.588, 0.55", "53.072, -13.4438, 23.3371, 0.55", "54.3734, -13.4246, 27.0851, 0.28", "55.0939, -13.4429, 29.0233, 0.55", "57.2926, -13.7099, 34.9708, 0.83", "58.8357, -14.0562, 39.0733, 0.83", "60.5934, -14.6092, 43.1363, 0.83", "61.7499, -14.9926, 45.231, 0.55", "63.0301, -15.3964, 47.3112, 0.83", "66.1376, -16.4284, 51.8876, 0.55", "68.4008, -17.0762, 54.5106, 0.55", "70.508, -17.5623, 56.7199, 0.83", "73.0022, -18.2338, 59.2626, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "46.4344, -14.3699, 6.45698, 0.83", "47.9788, -16.0095, 5.82288, 0.83", "49.9521, -18.2237, 4.56752, 0.83", "51.2693, -19.7016, 3.72958, 0.55", "52.1013, -20.6352, 3.20027, 0.55", "54.0825, -22.8582, 1.93988, 0.83", "55.3051, -24.23, 1.16211, 0.83", "57.201, -26.2948, -0.467736, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.29998, 48.7326, -9.49865, 0.55", "-10.6332, 45.8516, -10.1253, 0.55", "-14.8016, 43.7505, -10.6678, 0.55", "-19.9988, 41.1307, -11.3441, 0.55", "-24.0544, 39.0864, -11.8719, 0.55", "-29.8105, 36.1849, -12.621, 0.55", "-34.994, 33.5721, -13.2956, 0.55", "-39.1712, 31.3624, -13.9271, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.29998, 48.7326, -9.49865, 0.55", "-8.55359, 50.7668, -8.95502, 0.55", "-11.249, 52.4953, -8.43456, 0.55", "-12.5858, 53.2737, -8.08469, 0.55", "-17.067, 55.5832, -6.40073, 0.55", "-24.4211, 59.3053, -3.34263, 0.55", "-27.0226, 60.6183, -2.25928, 0.55", "-29.1575, 61.7004, -1.27687, 0.55", "-35.6005, 64.7932, 2.07462, 0.55", "-41.3553, 67.4868, 5.20422, 0.55", "-43.4211, 68.3964, 6.41638, 0.83", "-45.9849, 69.5746, 7.89835, 0.55", "-47.4242, 70.2654, 8.73797, 0.55", "-52.2875, 72.4792, 11.5501, 0.55", "-55.4658, 74.3094, 13.1699, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "57.201, -26.2948, -0.467736, 0.55", "56.5758, -27.1854, -1.44032, 0.55", "54.7856, -29.7352, -4.22491, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "57.201, -26.2948, -0.467736, 0.83", "57.6423, -27.8941, -0.115478, 0.83", "57.9405, -29.0123, 0.101832, 0.55", "58.4479, -30.9384, 0.459943, 0.83", "59.0061, -32.9098, 0.822864, 0.83", "59.7721, -35.4544, 1.35138, 0.55", "60.1248, -36.7413, 1.63084, 0.28", "60.3985, -37.8913, 1.8858, 0.55", "60.6719, -39.5428, 2.21049, 0.28", "60.7166, -40.3633, 2.43415, 1.11", "60.5067, -42.1246, 3.07273, 0.55", "60.1041, -43.6298, 3.72434, 0.55", "59.3118, -45.6389, 4.7461, 0.55", "58.1831, -47.4469, 6.08567, 0.55", "56.2957, -49.7499, 8.23995, 0.55", "55.3535, -50.6471, 9.20341, 0.83", "54.6684, -51.2008, 9.88743, 0.28", "53.8106, -51.7973, 10.7913, 0.55", "50.5466, -53.6189, 14.3226, 0.55", "49.9345, -53.9328, 15.0599, 0.83", "48.47, -54.6606, 16.6326, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "48.47, -54.6606, 16.6326, 0.28", "47.5526, -56.9864, 17.5802, 0.28", "47.0925, -58.1528, 18.0554, 0.83", "46.4686, -59.7345, 18.6999, 0.28", "45.5274, -62.1204, 19.6719, 0.55", "44.8783, -63.7662, 20.3425, 0.28", "43.9231, -66.1877, 21.3291, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "48.47, -54.6606, 16.6326, 0.55", "45.7052, -55.7022, 17.3725, 0.55", "43.5869, -56.718, 18.1137, 1.11", "41.0617, -58.1284, 18.9377, 0.55", "38.7138, -59.6059, 19.6293, 0.55", "36.7663, -61.0227, 20.1625, 0.83", "33.6534, -63.4776, 21.057, 0.28", "31.5127, -65.4015, 21.9856, 0.83", "30.0096, -66.8714, 22.7899, 0.28", "28.8694, -68.1712, 23.5796, 0.55", "27.5991, -69.8719, 24.6785, 0.55", "25.6503, -72.6248, 26.4549, 1.11", "23.3287, -76.2197, 28.8994, 0.28", "22.9327, -76.8159, 29.3773, 0.55", "22.2367, -77.7992, 30.2703, 0.28", "21.387, -78.9811, 31.3547, 0.55", "20.3073, -80.3614, 32.5944, 0.55", "19.004, -82.1939, 34.0409, 1.11", "17.2488, -84.4412, 35.712, 0.28", "16.1958, -85.4779, 36.6553, 0.55", "15.1636, -86.3199, 37.5714, 0.55", "13.7571, -87.3781, 39.0205, 0.55", "12.1319, -88.6102, 40.8554, 0.28", "10.0148, -90.2477, 43.2736, 0.55", "7.77566, -91.9983, 45.9422, 0.55", "6.29493, -93.1882, 47.8394, 0.55", "4.05373, -94.9418, 50.8418, 0.55", "3.04085, -95.7721, 52.2615, 0.55", "2.21258, -96.4163, 53.3814, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_13", "dend_0", "dend_30", "dend_23", "dend_19", "dend_14", "dend_4", "dend_1", "dend_36", "dend_31", "dend_29", "dend_24", "dend_21", "dend_20", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_26", "dend_25", "dend_18", "dend_17", "dend_11", "dend_6", "dend_40", "dend_39", "dend_35", "dend_34", "dend_28", "dend_27", "dend_10", "dend_7", "dend_46", "dend_41", "dend_9", "dend_8", "dend_45", "dend_42", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_22", "dend_13", "dend_0", "dend_30", "dend_23", "dend_19", "dend_14", "dend_4", "dend_1", "dend_36", "dend_31", "dend_29", "dend_24", "dend_21", "dend_20", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_26", "dend_25", "dend_18", "dend_17", "dend_11", "dend_6", "dend_40", "dend_39", "dend_35", "dend_34", "dend_28", "dend_27", "dend_10", "dend_7", "dend_46", "dend_41", "dend_9", "dend_8", "dend_45", "dend_42", "dend_44", "dend_43" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_13", "dend_0", "axon_0", "dend_30", "dend_23", "dend_19", "dend_14", "dend_4", "dend_1", "axon_1", "dend_36", "dend_31", "dend_29", "dend_24", "dend_21", "dend_20", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_38", "dend_37", "dend_33", "dend_32", "dend_26", "dend_25", "dend_18", "dend_17", "dend_11", "dend_6", "dend_40", "dend_39", "dend_35", "dend_34", "dend_28", "dend_27", "dend_10", "dend_7", "dend_46", "dend_41", "dend_9", "dend_8", "dend_45", "dend_42", "dend_44", "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_22", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_DBC_d6b3e3e96c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_30
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_22, dend_13, dend_0, axon_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, axon_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_10, dend_10, dend_10, dend_7, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_22(0), soma_0(0.4999998602831057)
    connect dend_13(0), soma_0(0.4999998602831057)
    connect dend_0(0), soma_0(0.4999998602831057)
    connect axon_0(0), soma_0(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.77789, -9.10671, 0.213384, 1.9414 ) }
    soma_0 { pt3dadd( -1.61905, -8.1823, 0.19421, 2.74435 ) }
    soma_0 { pt3dadd( -1.46021, -7.25789, 0.175037, 3.60731 ) }
    soma_0 { pt3dadd( -1.30137, -6.33348, 0.155863, 4.45639 ) }
    soma_0 { pt3dadd( -1.14253, -5.40907, 0.13669, 5.44814 ) }
    soma_0 { pt3dadd( -0.98369, -4.48466, 0.117516, 6.63999 ) }
    soma_0 { pt3dadd( -0.824851, -3.56025, 0.0983425, 7.51786 ) }
    soma_0 { pt3dadd( -0.666011, -2.63584, 0.079169, 8.28149 ) }
    soma_0 { pt3dadd( -0.507172, -1.71143, 0.0599954, 9.04511 ) }
    soma_0 { pt3dadd( -0.348332, -0.787014, 0.0408218, 9.54017 ) }
    soma_0 { pt3dadd( -0.189493, 0.137397, 0.0216482, 9.79406 ) }
    soma_0 { pt3dadd( -0.0306533, 1.06181, 0.0024746, 9.91581 ) }
    soma_0 { pt3dadd( 0.128186, 1.98622, -0.016699, 9.60599 ) }
    soma_0 { pt3dadd( 0.287026, 2.91063, -0.0358726, 9.02434 ) }
    soma_0 { pt3dadd( 0.445865, 3.83504, -0.0550462, 8.24064 ) }
    soma_0 { pt3dadd( 0.604705, 4.75945, -0.0742198, 6.93834 ) }
    soma_0 { pt3dadd( 0.763544, 5.68386, -0.0933933, 5.63916 ) }
    soma_0 { pt3dadd( 0.922383, 6.60827, -0.112567, 4.40137 ) }
    soma_0 { pt3dadd( 1.08122, 7.53268, -0.131741, 3.22963 ) }
    soma_0 { pt3dadd( 1.24006, 8.4571, -0.150914, 2.07547 ) }
    soma_0 { pt3dadd( 1.3989, 9.38151, -0.170088, 1.29813 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.00698, -7.21508, 2.18969, 2.77 ) }
    dend_22 { pt3dadd( -1.22888, -9.24928, 2.18969, 2.77 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 23/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -5.20698, 3.51993, 1.30969, 1.66 ) }
    dend_13 { pt3dadd( -6.26676, 4.04265, 1.52175, 1.66 ) }
    dend_13 { pt3dadd( -9.25666, 5.51737, 2.12003, 1.11 ) }
    dend_13 { pt3dadd( -12.168, 6.95334, 2.70258, 1.11 ) }
    dend_13 { pt3dadd( -15.5315, 8.61235, 3.37563, 1.11 ) }
    dend_13 { pt3dadd( -19.2981, 10.4701, 4.12931, 1.11 ) }
    dend_13 { pt3dadd( -24.1952, 12.8856, 5.10922, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.04302, 8.67842, 7.37969, 2.77 ) }
    dend_0 { pt3dadd( 2.32658, 10.1851, 6.77399, 2.77 ) }
    dend_0 { pt3dadd( 2.49528, 11.1806, 6.34247, 2.49 ) }
    dend_0 { pt3dadd( 2.89919, 13.1947, 5.48429, 1.66 ) }
    dend_0 { pt3dadd( 3.2095, 14.5999, 4.91575, 1.66 ) }
    dend_0 { pt3dadd( 3.54048, 16.0988, 4.30932, 1.38 ) }
    dend_0 { pt3dadd( 4.0006, 18.1824, 3.4663, 1.38 ) }
    dend_0 { pt3dadd( 4.41432, 20.1161, 2.63278, 1.11 ) }
    dend_0 { pt3dadd( 4.85992, 22.332, 1.66219, 1.11 ) }
    dend_0 { pt3dadd( 5.1016, 23.5887, 1.15497, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.3989, 9.38151, -0.170088, 0.55 ) }
    axon_0 { pt3dadd( 3.93909, 24.1649, -0.170088, 0.55 ) }
    axon_0 { pt3dadd( 6.47928, 38.9482, -0.170088, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 43/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -1.22888, -9.24928, 2.18969, 1.38 ) }
    dend_30 { pt3dadd( -0.832778, -10.1654, 2.17926, 1.38 ) }
    dend_30 { pt3dadd( -0.490917, -10.9562, 2.17026, 1.11 ) }
    dend_30 { pt3dadd( -0.0726642, -11.9236, 2.15925, 1.11 ) }
    dend_30 { pt3dadd( 0.304925, -12.797, 2.14931, 0.83 ) }
    dend_30 { pt3dadd( 0.728147, -13.7759, 2.13817, 1.11 ) }
    dend_30 { pt3dadd( 0.976338, -14.35, 2.13163, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 50/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.22888, -9.24928, 2.18969, 1.38 ) }
    dend_23 { pt3dadd( -1.41768, -10.3239, 3.28721, 1.38 ) }
    dend_23 { pt3dadd( -1.58512, -11.5365, 4.50206, 1.66 ) }
    dend_23 { pt3dadd( -1.92751, -14.894, 7.6595, 1.38 ) }
    dend_23 { pt3dadd( -2.2667, -17.9634, 10.5586, 1.11 ) }
    dend_23 { pt3dadd( -2.62045, -20.9111, 13.293, 1.38 ) }
    dend_23 { pt3dadd( -2.99639, -24.0128, 16.0162, 1.11 ) }
    dend_23 { pt3dadd( -3.11556, -24.9024, 16.7808, 1.11 ) }
    dend_23 { pt3dadd( -3.46936, -27.8178, 19.0674, 1.38 ) }
    dend_23 { pt3dadd( -3.6808, -30.096, 20.515, 1.11 ) }
    dend_23 { pt3dadd( -3.95242, -33.0174, 21.9993, 1.38 ) }
    dend_23 { pt3dadd( -4.2228, -35.6438, 23.1811, 0.55 ) }
    dend_23 { pt3dadd( -4.41653, -37.3953, 23.883, 0.55 ) }
    dend_23 { pt3dadd( -4.73598, -40.0295, 24.8358, 0.83 ) }
    dend_23 { pt3dadd( -5.04849, -43.0521, 25.7077, 0.83 ) }
    dend_23 { pt3dadd( -5.15868, -45.6679, 26.1936, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -24.1952, 12.8856, 5.10922, 0.83 ) }
    dend_19 { pt3dadd( -26.2485, 12.9353, 2.02237, 0.83 ) }
    dend_19 { pt3dadd( -27.5307, 12.9659, 0.095497, 0.83 ) }
    dend_19 { pt3dadd( -28.8942, 12.966, -1.93688, 0.83 ) }
    dend_19 { pt3dadd( -31.1653, 12.7797, -5.18808, 0.83 ) }
    dend_19 { pt3dadd( -34.3502, 12.4393, -9.53438, 0.83 ) }
    dend_19 { pt3dadd( -35.1149, 12.3575, -10.578, 0.83 ) }
    dend_19 { pt3dadd( -37.7373, 12.0446, -14.246, 0.83 ) }
    dend_19 { pt3dadd( -40.239, 11.6694, -17.8509, 0.55 ) }
    dend_19 { pt3dadd( -42.8441, 11.2533, -21.4369, 0.55 ) }
    dend_19 { pt3dadd( -45.4702, 10.6716, -24.7175, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 77/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -24.1952, 12.8856, 5.10922, 0.83 ) }
    dend_14 { pt3dadd( -24.6008, 14.1573, 5.62847, 0.83 ) }
    dend_14 { pt3dadd( -24.7985, 14.8029, 5.93436, 0.83 ) }
    dend_14 { pt3dadd( -25.053, 15.5374, 6.29787, 0.83 ) }
    dend_14 { pt3dadd( -25.7788, 17.3059, 7.40124, 0.83 ) }
    dend_14 { pt3dadd( -26.3146, 18.6115, 8.21581, 0.83 ) }
    dend_14 { pt3dadd( -26.7831, 19.753, 8.92804, 0.83 ) }
    dend_14 { pt3dadd( -27.3607, 21.2271, 9.92018, 0.83 ) }
    dend_14 { pt3dadd( -27.7774, 22.3169, 10.6778, 0.83 ) }
    dend_14 { pt3dadd( -28.9363, 25.0713, 12.7994, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 87/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 5.1016, 23.5887, 1.15497, 0.83 ) }
    dend_4 { pt3dadd( 4.66266, 26.7671, 2.11585, 0.83 ) }
    dend_4 { pt3dadd( 4.27624, 29.5653, 2.96176, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.1016, 23.5887, 1.15497, 0.83 ) }
    dend_1 { pt3dadd( 6.48356, 23.797, -1.41125, 0.83 ) }
    dend_1 { pt3dadd( 7.28887, 23.9376, -2.78702, 0.83 ) }
    dend_1 { pt3dadd( 11.9566, 24.5953, -10.0365, 0.55 ) }
    dend_1 { pt3dadd( 12.7474, 24.7067, -11.2647, 0.55 ) }
    dend_1 { pt3dadd( 14.6086, 24.9689, -14.1553, 0.55 ) }
    dend_1 { pt3dadd( 16.4597, 25.2298, -17.0304, 0.55 ) }
    dend_1 { pt3dadd( 18.9175, 25.4164, -20.6164, 0.83 ) }
    dend_1 { pt3dadd( 23.1534, 25.6187, -26.5538, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 99/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 6.47928, 38.9482, -0.170088, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_1 { pt3dadd( 9.01947, 53.7316, -0.170088, 0.28 ) }
    axon_1 { pt3dadd( 11.5597, 68.5149, -0.170088, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_30 (entry count 2/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 0.976338, -14.35, 2.13163, 1.11 ) }
    dend_36 { pt3dadd( 1.6877, -15.9164, 3.87493, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 4/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.976338, -14.35, 2.13163, 1.38 ) }
    dend_31 { pt3dadd( 1.02979, -15.8686, 3.00373, 1.38 ) }
    dend_31 { pt3dadd( 1.07261, -18.2715, 4.32584, 1.38 ) }
    dend_31 { pt3dadd( 1.17579, -22.8839, 6.6691, 0.83 ) }
    dend_31 { pt3dadd( 1.28314, -25.3342, 7.75336, 0.83 ) }
    dend_31 { pt3dadd( 1.3833, -26.5661, 8.26239, 0.83 ) }
    dend_31 { pt3dadd( 1.60713, -28.5238, 9.01123, 0.83 ) }
    dend_31 { pt3dadd( 1.94798, -31.0925, 9.98235, 0.83 ) }
    dend_31 { pt3dadd( 2.34584, -33.5135, 10.8249, 0.83 ) }
    dend_31 { pt3dadd( 3.17777, -37.6873, 11.8567, 0.83 ) }
    dend_31 { pt3dadd( 3.45706, -39.1915, 12.1958, 0.83 ) }
    dend_31 { pt3dadd( 3.95909, -41.5206, 12.6721, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 16/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -5.15868, -45.6679, 26.1936, 0.55 ) }
    dend_29 { pt3dadd( -6.4842, -48.2529, 27.9956, 0.55 ) }
    dend_29 { pt3dadd( -7.77064, -50.7616, 29.7445, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.15868, -45.6679, 26.1936, 0.83 ) }
    dend_24 { pt3dadd( -5.78233, -47.7112, 23.5197, 0.83 ) }
    dend_24 { pt3dadd( -6.32394, -49.5601, 21.5458, 0.83 ) }
    dend_24 { pt3dadd( -6.69241, -51.1383, 20.1214, 0.83 ) }
    dend_24 { pt3dadd( -8.52186, -59.3401, 14.0481, 0.83 ) }
    dend_24 { pt3dadd( -8.86554, -61.0149, 13.0073, 0.55 ) }
    dend_24 { pt3dadd( -9.31614, -63.1074, 11.8474, 0.55 ) }
    dend_24 { pt3dadd( -10.1345, -66.5342, 10.194, 0.83 ) }
    dend_24 { pt3dadd( -10.8726, -69.5184, 9.03284, 0.55 ) }
    dend_24 { pt3dadd( -11.8496, -73.4755, 8.07179, 0.55 ) }
    dend_24 { pt3dadd( -12.4453, -76.4136, 7.87396, 0.55 ) }
    dend_24 { pt3dadd( -12.7577, -77.9509, 7.78608, 0.55 ) }
    dend_24 { pt3dadd( -13.0017, -79.0932, 7.73485, 0.55 ) }
    dend_24 { pt3dadd( -13.7195, -82.5745, 7.69145, 0.83 ) }
    dend_24 { pt3dadd( -14.465, -86.528, 8.07229, 0.55 ) }
    dend_24 { pt3dadd( -14.599, -87.6876, 8.27183, 0.55 ) }
    dend_24 { pt3dadd( -14.7703, -89.5592, 8.65573, 0.55 ) }
    dend_24 { pt3dadd( -14.8249, -90.6467, 8.91063, 0.55 ) }
    dend_24 { pt3dadd( -14.9087, -93.9131, 9.84824, 0.83 ) }
    dend_24 { pt3dadd( -14.9856, -97.9876, 11.3787, 0.55 ) }
    dend_24 { pt3dadd( -14.988, -100.088, 12.3644, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -45.4702, 10.6716, -24.7175, 0.55 ) }
    dend_21 { pt3dadd( -50.1784, 10.2842, -25.1476, 0.55 ) }
    dend_21 { pt3dadd( -53.5946, 10.0289, -25.3568, 0.55 ) }
    dend_21 { pt3dadd( -56.3565, 9.86994, -25.3139, 0.55 ) }
    dend_21 { pt3dadd( -58.6754, 9.68685, -25.1174, 0.28 ) }
    dend_21 { pt3dadd( -60.4288, 9.48095, -24.8354, 0.83 ) }
    dend_21 { pt3dadd( -63.2949, 9.10114, -24.1964, 0.28 ) }
    dend_21 { pt3dadd( -66.1482, 8.64103, -23.2084, 0.55 ) }
    dend_21 { pt3dadd( -69.3564, 8.02044, -21.9103, 0.55 ) }
    dend_21 { pt3dadd( -72.1462, 7.35565, -20.6183, 0.55 ) }
    dend_21 { pt3dadd( -75.1077, 6.38539, -19.2698, 0.83 ) }
    dend_21 { pt3dadd( -77.3852, 5.52207, -18.2755, 0.28 ) }
    dend_21 { pt3dadd( -78.4779, 5.1197, -17.8553, 0.55 ) }
    dend_21 { pt3dadd( -79.6241, 4.68641, -17.6715, 0.28 ) }
    dend_21 { pt3dadd( -81.2157, 4.11157, -17.8449, 0.55 ) }
    dend_21 { pt3dadd( -85.3594, 2.76272, -19.7735, 0.55 ) }
    dend_21 { pt3dadd( -86.6473, 2.38748, -20.6179, 0.28 ) }
    dend_21 { pt3dadd( -89.6808, 1.51547, -22.8631, 0.55 ) }
    dend_21 { pt3dadd( -94.4383, 0.259977, -26.677, 0.28 ) }
    dend_21 { pt3dadd( -96.2505, -0.16615, -28.2548, 0.55 ) }
    dend_21 { pt3dadd( -101.451, -1.28471, -33.3581, 0.28 ) }
    dend_21 { pt3dadd( -102.429, -1.49847, -34.4893, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 62/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -45.4702, 10.6716, -24.7175, 1.11 ) }
    dend_20 { pt3dadd( -45.7841, 8.69144, -25.5398, 1.11 ) }
    dend_20 { pt3dadd( -46.0452, 7.04454, -26.2495, 0.28 ) }
    dend_20 { pt3dadd( -46.3856, 5.18774, -27.0235, 0.55 ) }
    dend_20 { pt3dadd( -46.7822, 2.90713, -27.9274, 0.55 ) }
    dend_20 { pt3dadd( -47.1202, 0.851413, -28.6574, 0.28 ) }
    dend_20 { pt3dadd( -47.3686, -0.700222, -29.1891, 0.55 ) }
    dend_20 { pt3dadd( -47.7032, -3.0364, -29.9503, 0.55 ) }
    dend_20 { pt3dadd( -47.8371, -4.28936, -30.3338, 0.83 ) }
    dend_20 { pt3dadd( -47.918, -5.45422, -30.6139, 0.55 ) }
    dend_20 { pt3dadd( -48.0777, -7.6841, -30.9992, 0.55 ) }
    dend_20 { pt3dadd( -48.2718, -9.57434, -31.2295, 0.83 ) }
    dend_20 { pt3dadd( -48.5143, -11.0499, -31.3325, 0.83 ) }
    dend_20 { pt3dadd( -48.9951, -13.0588, -31.4755, 0.83 ) }
    dend_20 { pt3dadd( -49.7499, -15.6498, -31.7156, 0.55 ) }
    dend_20 { pt3dadd( -50.1257, -16.7892, -31.8208, 0.55 ) }
    dend_20 { pt3dadd( -50.6862, -18.3213, -32.0311, 1.38 ) }
    dend_20 { pt3dadd( -51.6807, -20.786, -32.2294, 0.28 ) }
    dend_20 { pt3dadd( -52.9909, -23.8356, -32.3854, 0.55 ) }
    dend_20 { pt3dadd( -53.7534, -25.5394, -32.4225, 0.55 ) }
    dend_20 { pt3dadd( -54.5326, -27.2915, -32.4425, 0.28 ) }
    dend_20 { pt3dadd( -55.9974, -30.2133, -32.0228, 0.83 ) }
    dend_20 { pt3dadd( -57.6737, -32.9459, -30.6908, 0.28 ) }
    dend_20 { pt3dadd( -58.197, -33.6213, -30.0703, 0.55 ) }
    dend_20 { pt3dadd( -58.4239, -33.8655, -29.7275, 0.28 ) }
    dend_20 { pt3dadd( -59.2598, -34.6451, -28.3632, 0.55 ) }
    dend_20 { pt3dadd( -61.4728, -36.6086, -24.5555, 0.55 ) }
    dend_20 { pt3dadd( -63.1362, -38.1351, -21.4278, 0.28 ) }
    dend_20 { pt3dadd( -63.5643, -38.5183, -20.6429, 0.83 ) }
    dend_20 { pt3dadd( -64.6143, -39.4299, -18.655, 0.28 ) }
    dend_20 { pt3dadd( -64.7882, -39.5915, -18.3019, 0.55 ) }
    dend_20 { pt3dadd( -65.5837, -40.4672, -16.4495, 0.28 ) }
    dend_20 { pt3dadd( -65.7712, -41.1097, -15.6051, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 95/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -28.9363, 25.0713, 12.7994, 0.55 ) }
    dend_16 { pt3dadd( -32.0884, 27.8241, 14.6639, 0.55 ) }
    dend_16 { pt3dadd( -33.7899, 29.7493, 15.7018, 0.55 ) }
    dend_16 { pt3dadd( -36.0952, 32.6726, 17.1083, 0.55 ) }
    dend_16 { pt3dadd( -37.624, 34.5921, 18.0806, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -39.3857, 36.7202, 19.2215, 0.83 ) }
    dend_16 { pt3dadd( -41.6067, 39.2686, 20.6155, 0.55 ) }
    dend_16 { pt3dadd( -44.1181, 42.1722, 22.1148, 0.83 ) }
    dend_16 { pt3dadd( -46.5304, 44.5634, 23.3629, 0.55 ) }
    dend_16 { pt3dadd( -48.6722, 46.5791, 24.4625, 0.83 ) }
    dend_16 { pt3dadd( -51.2431, 48.7031, 25.7257, 0.83 ) }
    dend_16 { pt3dadd( -53.8063, 50.4218, 26.866, 0.55 ) }
    dend_16 { pt3dadd( -55.7116, 51.3852, 27.6709, 0.55 ) }
    dend_16 { pt3dadd( -59.404, 52.5187, 29.0031, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -28.9363, 25.0713, 12.7994, 0.55 ) }
    dend_15 { pt3dadd( -29.7189, 26.5851, 12.7361, 0.55 ) }
    dend_15 { pt3dadd( -30.0556, 27.4001, 13.0013, 0.83 ) }
    dend_15 { pt3dadd( -30.4706, 28.3945, 13.3717, 0.55 ) }
    dend_15 { pt3dadd( -30.7253, 28.9918, 13.6482, 0.83 ) }
    dend_15 { pt3dadd( -31.137, 30.0512, 14.1438, 0.55 ) }
    dend_15 { pt3dadd( -31.3194, 30.5903, 14.4167, 0.83 ) }
    dend_15 { pt3dadd( -32.267, 34.1142, 16.3278, 0.83 ) }
    dend_15 { pt3dadd( -32.7487, 36.1414, 17.6209, 0.83 ) }
    dend_15 { pt3dadd( -33.0592, 37.6464, 18.6591, 0.55 ) }
    dend_15 { pt3dadd( -33.2907, 38.8183, 19.4586, 0.55 ) }
    dend_15 { pt3dadd( -33.7905, 41.0702, 20.8779, 0.83 ) }
    dend_15 { pt3dadd( -34.0327, 42.2216, 21.586, 0.83 ) }
    dend_15 { pt3dadd( -34.5624, 44.8134, 23.0492, 0.83 ) }
    dend_15 { pt3dadd( -34.9409, 46.836, 24.2279, 0.55 ) }
    dend_15 { pt3dadd( -35.3427, 48.6813, 25.2035, 0.55 ) }
    dend_15 { pt3dadd( -36.0418, 50.9999, 26.4335, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 4.27624, 29.5653, 2.96176, 0.83 ) }
    dend_12 { pt3dadd( 4.40562, 30.8226, 2.92002, 0.83 ) }
    dend_12 { pt3dadd( 4.62414, 32.7401, 2.93579, 0.83 ) }
    dend_12 { pt3dadd( 4.97209, 35.2186, 3.01196, 0.83 ) }
    dend_12 { pt3dadd( 5.35466, 37.9426, 3.10006, 0.83 ) }
    dend_12 { pt3dadd( 5.60611, 39.4525, 3.12165, 0.83 ) }
    dend_12 { pt3dadd( 6.00509, 42.0631, 3.18392, 0.83 ) }
    dend_12 { pt3dadd( 6.49733, 44.7466, 3.05943, 0.83 ) }
    dend_12 { pt3dadd( 6.90403, 46.2896, 3.01224, 0.83 ) }
    dend_12 { pt3dadd( 7.30413, 47.5187, 3.07819, 0.83 ) }
    dend_12 { pt3dadd( 8.18065, 49.8928, 3.39249, 0.83 ) }
    dend_12 { pt3dadd( 9.08136, 51.9161, 3.79799, 0.83 ) }
    dend_12 { pt3dadd( 11.3048, 56.1431, 4.9047, 0.83 ) }
    dend_12 { pt3dadd( 13.5347, 59.7111, 6.13286, 0.83 ) }
    dend_12 { pt3dadd( 16.8741, 64.3486, 8.07017, 0.83 ) }
    dend_12 { pt3dadd( 18.259, 66.0303, 8.89109, 0.83 ) }
    dend_12 { pt3dadd( 20.6573, 68.5548, 10.3904, 0.83 ) }
    dend_12 { pt3dadd( 23.4011, 71.1306, 12.0964, 0.83 ) }
    dend_12 { pt3dadd( 26.0759, 73.3816, 13.7484, 0.83 ) }
    dend_12 { pt3dadd( 27.6919, 74.6119, 14.574, 0.83 ) }
    dend_12 { pt3dadd( 30.0091, 76.2171, 15.534, 0.83 ) }
    dend_12 { pt3dadd( 33.1919, 78.4421, 16.5848, 0.83 ) }
    dend_12 { pt3dadd( 35.0814, 79.8672, 17.0633, 0.83 ) }
    dend_12 { pt3dadd( 38.0747, 82.209, 17.3296, 0.83 ) }
    dend_12 { pt3dadd( 40.3335, 84.1414, 17.1058, 1.11 ) }
    dend_12 { pt3dadd( 42.2969, 85.9129, 16.5512, 0.83 ) }
    dend_12 { pt3dadd( 43.9407, 87.504, 15.8348, 0.83 ) }
    dend_12 { pt3dadd( 45.3011, 88.9206, 15.0757, 0.83 ) }
    dend_12 { pt3dadd( 48.4223, 92.4737, 13.4301, 0.83 ) }
    dend_12 { pt3dadd( 49.5765, 93.9165, 12.936, 0.83 ) }
    dend_12 { pt3dadd( 51.8548, 96.7812, 12.5089, 0.83 ) }
    dend_12 { pt3dadd( 52.9088, 98.0771, 12.6014, 0.83 ) }
    dend_12 { pt3dadd( 54.6359, 100.171, 13.0811, 0.83 ) }
    dend_12 { pt3dadd( 57.103, 103.28, 14.0599, 0.55 ) }
    dend_12 { pt3dadd( 58.8653, 105.589, 14.9512, 0.83 ) }
    dend_12 { pt3dadd( 61.0194, 108.48, 16.0246, 0.55 ) }
    dend_12 { pt3dadd( 62.8998, 111.204, 16.8736, 0.55 ) }
    dend_12 { pt3dadd( 63.1876, 111.642, 16.9712, 0.28 ) }
    dend_12 { pt3dadd( 64.0058, 113.058, 17.1308, 1.11 ) }
    dend_12 { pt3dadd( 65.2378, 115.736, 17.2563, 1.11 ) }
    dend_12 { pt3dadd( 65.7729, 117.616, 17.3876, 0.55 ) }
    dend_12 { pt3dadd( 66.0983, 119.851, 17.605, 0.83 ) }
    dend_12 { pt3dadd( 66.2159, 121.627, 17.8819, 1.38 ) }
    dend_12 { pt3dadd( 66.3451, 123.9, 18.291, 0.83 ) }
    dend_12 { pt3dadd( 66.5165, 127.515, 19.0515, 0.83 ) }
    dend_12 { pt3dadd( 66.552, 128.974, 19.3803, 0.28 ) }
    dend_12 { pt3dadd( 66.5826, 130.438, 19.6609, 0.83 ) }
    dend_12 { pt3dadd( 66.6328, 132.369, 19.9434, 0.83 ) }
    dend_12 { pt3dadd( 66.6591, 134.438, 20.1497, 0.83 ) }
    dend_12 { pt3dadd( 66.7182, 136.334, 20.2697, 1.38 ) }
    dend_12 { pt3dadd( 66.83, 138.241, 20.2144, 0.83 ) }
    dend_12 { pt3dadd( 67.0343, 141.345, 20.0438, 0.55 ) }
    dend_12 { pt3dadd( 67.127, 142.828, 19.9706, 0.55 ) }
    dend_12 { pt3dadd( 67.1522, 143.869, 19.9684, 0.55 ) }
    dend_12 { pt3dadd( 67.2086, 145.14, 19.9215, 0.83 ) }
    dend_12 { pt3dadd( 67.2972, 146.64, 19.8371, 0.55 ) }
    dend_12 { pt3dadd( 67.3935, 147.696, 19.7397, 0.83 ) }
    dend_12 { pt3dadd( 67.6207, 149.176, 19.5313, 0.55 ) }
    dend_12 { pt3dadd( 67.8301, 150.664, 19.2437, 0.55 ) }
    dend_12 { pt3dadd( 68.4929, 154.955, 18.1486, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 4.27624, 29.5653, 2.96176, 0.55 ) }
    dend_5 { pt3dadd( 3.71677, 30.8456, 2.28549, 0.55 ) }
    dend_5 { pt3dadd( 3.27233, 31.8675, 1.73662, 0.83 ) }
    dend_5 { pt3dadd( 2.74846, 33.0721, 1.08966, 0.55 ) }
    dend_5 { pt3dadd( 1.88829, 35.0499, 0.0273738, 0.83 ) }
    dend_5 { pt3dadd( 0.852729, 37.431, -1.2515, 0.55 ) }
    dend_5 { pt3dadd( 0.189491, 38.956, -2.07057, 0.55 ) }
    dend_5 { pt3dadd( 0.0106351, 39.397, -2.31402, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 94/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 23.1534, 25.6187, -26.5538, 0.28 ) }
    dend_3 { pt3dadd( 24.7637, 24.4145, -25.7199, 0.28 ) }
    dend_3 { pt3dadd( 27.1239, 22.6847, -24.7484, 0.55 ) }
    dend_3 { pt3dadd( 29.4549, 20.9317, -23.9156, 0.55 ) }
    dend_3 { pt3dadd( 31.6551, 19.2961, -23.2773, 0.55 ) }
    dend_3 { pt3dadd( 34.0736, 17.6446, -22.4482, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_3 { pt3dadd( 35.4656, 16.8065, -21.8625, 0.55 ) }
    dend_3 { pt3dadd( 37.1872, 15.9912, -21.0862, 0.28 ) }
    dend_3 { pt3dadd( 38.6531, 15.4757, -20.2946, 0.55 ) }
    dend_3 { pt3dadd( 40.586, 15.0584, -19.0699, 0.28 ) }
    dend_3 { pt3dadd( 44.5766, 14.5218, -16.2209, 0.55 ) }
    dend_3 { pt3dadd( 47.205, 14.3402, -14.0446, 0.28 ) }
    dend_3 { pt3dadd( 48.5153, 14.3326, -12.857, 0.55 ) }
    dend_3 { pt3dadd( 50.2883, 14.4432, -11.0795, 0.28 ) }
    dend_3 { pt3dadd( 50.9976, 14.5467, -10.326, 0.83 ) }
    dend_3 { pt3dadd( 52.6477, 14.905, -8.38858, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 10/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 23.1534, 25.6187, -26.5538, 0.55 ) }
    dend_2 { pt3dadd( 23.8996, 26.4943, -26.2153, 0.55 ) }
    dend_2 { pt3dadd( 24.8428, 27.6012, -25.7874, 0.55 ) }
    dend_2 { pt3dadd( 25.3984, 28.2532, -25.5354, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 14/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 1.6877, -15.9164, 3.87493, 0.83 ) }
    dend_38 { pt3dadd( 3.27556, -16.2023, 4.90696, 0.83 ) }
    dend_38 { pt3dadd( 4.73518, -16.3596, 5.77532, 0.83 ) }
    dend_38 { pt3dadd( 6.38763, -16.4696, 6.74056, 0.83 ) }
    dend_38 { pt3dadd( 8.0563, -16.4932, 7.70473, 0.83 ) }
    dend_38 { pt3dadd( 10.083, -16.4017, 8.85046, 0.83 ) }
    dend_38 { pt3dadd( 12.3858, -16.2458, 10.1307, 0.83 ) }
    dend_38 { pt3dadd( 14.3739, -16.0543, 11.1954, 0.83 ) }
    dend_38 { pt3dadd( 16.6049, -15.7339, 12.4145, 0.83 ) }
    dend_38 { pt3dadd( 19.0629, -15.2619, 13.7668, 0.83 ) }
    dend_38 { pt3dadd( 21.3271, -14.7334, 14.9401, 0.83 ) }
    dend_38 { pt3dadd( 21.7242, -14.6371, 15.1304, 0.83 ) }
    dend_38 { pt3dadd( 21.9701, -14.5889, 15.247, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 27/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 1.6877, -15.9164, 3.87493, 0.83 ) }
    dend_37 { pt3dadd( 1.33392, -17.3981, 3.85228, 0.83 ) }
    dend_37 { pt3dadd( 1.03092, -18.8281, 3.87209, 0.83 ) }
    dend_37 { pt3dadd( 0.78402, -19.9536, 3.91736, 0.55 ) }
    dend_37 { pt3dadd( 0.454989, -21.3616, 3.90324, 0.83 ) }
    dend_37 { pt3dadd( 0.199315, -22.5583, 3.77088, 0.83 ) }
    dend_37 { pt3dadd( -0.0585297, -23.9527, 3.5353, 0.83 ) }
    dend_37 { pt3dadd( -0.347263, -25.7954, 3.11824, 0.55 ) }
    dend_37 { pt3dadd( -0.572218, -27.3286, 2.76468, 0.83 ) }
    dend_37 { pt3dadd( -0.815449, -29.0142, 2.36264, 0.83 ) }
    dend_37 { pt3dadd( -1.15531, -31.2931, 1.86098, 0.83 ) }
    dend_37 { pt3dadd( -1.33304, -32.3635, 1.66929, 0.55 ) }
    dend_37 { pt3dadd( -1.59601, -33.788, 1.42556, 0.83 ) }
    dend_37 { pt3dadd( -1.96326, -35.6375, 1.21341, 0.55 ) }
    dend_37 { pt3dadd( -2.18782, -36.8593, 1.09515, 0.55 ) }
    dend_37 { pt3dadd( -2.40208, -38.0844, 1.0093, 0.55 ) }
    dend_37 { pt3dadd( -2.67445, -39.4395, 0.888391, 0.55 ) }
    dend_37 { pt3dadd( -2.97107, -40.8375, 0.641034, 0.55 ) }
    dend_37 { pt3dadd( -3.34194, -42.7117, 0.145515, 0.55 ) }
    dend_37 { pt3dadd( -3.69186, -44.4937, -0.459378, 0.28 ) }
    dend_37 { pt3dadd( -3.9576, -45.7355, -0.915536, 0.55 ) }
    dend_37 { pt3dadd( -4.28956, -47.1064, -1.38646, 0.28 ) }
    dend_37 { pt3dadd( -4.45516, -47.7892, -1.62351, 0.55 ) }
    dend_37 { pt3dadd( -4.59618, -48.3636, -1.79948, 0.28 ) }
    dend_37 { pt3dadd( -5.02255, -50.0758, -2.29096, 0.55 ) }
    dend_37 { pt3dadd( -5.19088, -50.7798, -2.42886, 0.55 ) }
    dend_37 { pt3dadd( -5.57888, -52.7357, -2.74843, 0.55 ) }
    dend_37 { pt3dadd( -5.74056, -54.281, -2.96053, 0.55 ) }
    dend_37 { pt3dadd( -5.75372, -54.5677, -2.98809, 0.28 ) }
    dend_37 { pt3dadd( -5.679, -55.3933, -3.11995, 0.55 ) }
    dend_37 { pt3dadd( -5.53375, -56.1834, -3.37275, 0.28 ) }
    dend_37 { pt3dadd( -5.37103, -56.9446, -3.68868, 0.55 ) }
    dend_37 { pt3dadd( -5.17173, -57.7027, -4.08073, 0.55 ) }
    dend_37 { pt3dadd( -4.92231, -58.8725, -4.78315, 0.55 ) }
    dend_37 { pt3dadd( -4.395, -61.4988, -6.64881, 0.55 ) }
    dend_37 { pt3dadd( -3.94774, -63.8106, -8.39198, 0.55 ) }
    dend_37 { pt3dadd( -3.83095, -64.4948, -8.89547, 0.28 ) }
    dend_37 { pt3dadd( -3.6955, -65.2845, -9.42797, 0.55 ) }
    dend_37 { pt3dadd( -3.48743, -67.3532, -10.7029, 0.55 ) }
    dend_37 { pt3dadd( -3.39026, -69.1537, -11.6499, 0.28 ) }
    dend_37 { pt3dadd( -3.43459, -70.9177, -12.3037, 0.55 ) }
    dend_37 { pt3dadd( -3.52582, -72.6014, -12.7012, 0.55 ) }
    dend_37 { pt3dadd( -3.79866, -75.0138, -13.277, 0.55 ) }
    dend_37 { pt3dadd( -4.13938, -77.271, -13.7967, 0.55 ) }
    dend_37 { pt3dadd( -4.36418, -78.9021, -14.1804, 0.55 ) }
    dend_37 { pt3dadd( -4.5484, -80.0532, -14.4956, 0.55 ) }
    dend_37 { pt3dadd( -4.92324, -82.7145, -15.5048, 0.83 ) }
    dend_37 { pt3dadd( -5.12971, -85.6076, -16.8163, 0.55 ) }
    dend_37 { pt3dadd( -5.12455, -87.3158, -17.6412, 0.55 ) }
    dend_37 { pt3dadd( -4.9655, -89.1004, -18.5078, 0.55 ) }
    dend_37 { pt3dadd( -4.72618, -90.6723, -19.2558, 0.55 ) }
    dend_37 { pt3dadd( -4.23124, -93.1214, -20.2903, 0.55 ) }
    dend_37 { pt3dadd( -3.49859, -95.9224, -21.2349, 0.55 ) }
    dend_37 { pt3dadd( -3.17029, -97.1397, -21.5689, 0.55 ) }
    dend_37 { pt3dadd( -2.88285, -98.3034, -21.8888, 0.55 ) }
    dend_37 { pt3dadd( -2.60187, -99.6988, -22.2831, 0.83 ) }
    dend_37 { pt3dadd( -2.13787, -102.212, -23.0782, 0.55 ) }
    dend_37 { pt3dadd( -1.78914, -105.094, -24.1472, 0.83 ) }
    dend_37 { pt3dadd( -1.78809, -107.799, -25.432, 0.55 ) }
    dend_37 { pt3dadd( -2.00317, -110.091, -26.7611, 0.28 ) }
    dend_37 { pt3dadd( -2.17726, -111.092, -27.478, 0.55 ) }
    dend_37 { pt3dadd( -2.45608, -112.245, -28.5034, 0.83 ) }
    dend_37 { pt3dadd( -2.82195, -113.628, -30.0621, 0.83 ) }
    dend_37 { pt3dadd( -3.24515, -115.516, -32.937, 0.55 ) }
    dend_37 { pt3dadd( -3.41536, -116.629, -34.9186, 0.55 ) }
    dend_37 { pt3dadd( -3.53839, -117.668, -36.8912, 1.11 ) }
    dend_37 { pt3dadd( -3.61677, -119.044, -39.5857, 0.55 ) }
    dend_37 { pt3dadd( -3.591, -120.583, -42.7063, 0.83 ) }
    dend_37 { pt3dadd( -3.20184, -123.542, -49.0654, 0.28 ) }
    dend_37 { pt3dadd( -3.09981, -123.919, -49.961, 0.28 ) }
    dend_37 { pt3dadd( -2.7423, -125.12, -52.9311, 0.83 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 98/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 3.95909, -41.5206, 12.6721, 0.55 ) }
    dend_33 { pt3dadd( 4.87839, -43.2924, 12.6497, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 5.96158, -45.5227, 12.8138, 0.83 ) }
    dend_33 { pt3dadd( 6.72762, -47.2049, 13.0019, 0.55 ) }
    dend_33 { pt3dadd( 7.81862, -50.0133, 13.3294, 0.55 ) }
    dend_33 { pt3dadd( 8.68984, -53.0767, 13.655, 0.55 ) }
    dend_33 { pt3dadd( 9.02551, -54.5627, 13.8009, 0.55 ) }
    dend_33 { pt3dadd( 9.47857, -57.5571, 14.1, 0.83 ) }
    dend_33 { pt3dadd( 9.62768, -59.2057, 14.2651, 0.55 ) }
    dend_33 { pt3dadd( 9.70214, -62.1793, 14.5159, 0.55 ) }
    dend_33 { pt3dadd( 9.58339, -65.3129, 14.6176, 0.55 ) }
    dend_33 { pt3dadd( 9.3871, -67.2591, 14.575, 0.55 ) }
    dend_33 { pt3dadd( 8.91367, -70.708, 14.2699, 0.55 ) }
    dend_33 { pt3dadd( 8.62171, -72.3385, 13.9997, 0.83 ) }
    dend_33 { pt3dadd( 8.17119, -74.5278, 13.5506, 0.55 ) }
    dend_33 { pt3dadd( 7.68994, -76.5405, 13.0491, 0.83 ) }
    dend_33 { pt3dadd( 7.27688, -78.0714, 12.6809, 0.83 ) }
    dend_33 { pt3dadd( 6.35742, -80.6162, 12.0559, 0.55 ) }
    dend_33 { pt3dadd( 5.58236, -82.3879, 11.5656, 0.83 ) }
    dend_33 { pt3dadd( 4.95113, -83.6626, 11.1684, 0.83 ) }
    dend_33 { pt3dadd( 4.09656, -85.205, 10.6839, 0.83 ) }
    dend_33 { pt3dadd( 2.8495, -87.1538, 9.95034, 0.55 ) }
    dend_33 { pt3dadd( 1.89611, -88.5463, 9.28293, 0.55 ) }
    dend_33 { pt3dadd( 0.0455999, -91.2856, 7.7783, 0.55 ) }
    dend_33 { pt3dadd( -1.49637, -93.6655, 6.328, 1.11 ) }
    dend_33 { pt3dadd( -2.62988, -95.4987, 5.15291, 0.55 ) }
    dend_33 { pt3dadd( -3.96533, -97.8258, 3.57567, 0.55 ) }
    dend_33 { pt3dadd( -4.81338, -99.3872, 2.45064, 0.55 ) }
    dend_33 { pt3dadd( -5.51198, -100.865, 1.4737, 1.11 ) }
    dend_33 { pt3dadd( -5.93441, -102.109, 0.796956, 0.55 ) }
    dend_33 { pt3dadd( -5.99778, -102.529, 0.619122, 0.83 ) }
    dend_33 { pt3dadd( -5.99146, -103.318, 0.375943, 0.28 ) }
    dend_33 { pt3dadd( -5.95359, -103.816, 0.291149, 0.55 ) }
    dend_33 { pt3dadd( -5.85395, -104.778, 0.153571, 0.28 ) }
    dend_33 { pt3dadd( -5.76301, -106.214, -0.0166137, 0.83 ) }
    dend_33 { pt3dadd( -5.77793, -108.154, -0.231173, 0.28 ) }
    dend_33 { pt3dadd( -5.84965, -110.082, -0.492601, 0.55 ) }
    dend_33 { pt3dadd( -5.93374, -111.741, -0.713787, 0.28 ) }
    dend_33 { pt3dadd( -6.0061, -112.451, -0.799155, 0.83 ) }
    dend_33 { pt3dadd( -6.27848, -114.344, -1.02822, 0.28 ) }
    dend_33 { pt3dadd( -6.61228, -116.161, -1.22905, 0.28 ) }
    dend_33 { pt3dadd( -6.89206, -117.444, -1.32865, 0.83 ) }
    dend_33 { pt3dadd( -7.44051, -119.281, -1.5071, 0.28 ) }
    dend_33 { pt3dadd( -8.00742, -121.225, -1.68736, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 42/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 3.95909, -41.5206, 12.6721, 0.55 ) }
    dend_32 { pt3dadd( 1.56526, -42.2255, 12.8778, 0.55 ) }
    dend_32 { pt3dadd( -1.42771, -43.0139, 13.1737, 0.55 ) }
    dend_32 { pt3dadd( -3.8476, -43.6266, 13.7904, 0.55 ) }
    dend_32 { pt3dadd( -6.81431, -44.3063, 14.8113, 0.55 ) }
    dend_32 { pt3dadd( -9.01124, -44.7819, 15.7744, 0.55 ) }
    dend_32 { pt3dadd( -9.7238, -44.9402, 16.1505, 0.55 ) }
    dend_32 { pt3dadd( -10.4879, -45.1013, 16.6575, 1.11 ) }
    dend_32 { pt3dadd( -14.0689, -45.9905, 19.4978, 0.55 ) }
    dend_32 { pt3dadd( -14.9035, -46.2539, 20.2874, 0.55 ) }
    dend_32 { pt3dadd( -16.0824, -46.6728, 21.584, 0.83 ) }
    dend_32 { pt3dadd( -17.245, -47.1913, 22.8801, 0.28 ) }
    dend_32 { pt3dadd( -19.1086, -48.0834, 24.9812, 0.55 ) }
    dend_32 { pt3dadd( -19.7747, -48.4526, 25.67, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -14.988, -100.088, 12.3644, 0.55 ) }
    dend_26 { pt3dadd( -14.0642, -100.961, 12.9051, 0.55 ) }
    dend_26 { pt3dadd( -12.8173, -102.18, 13.6238, 0.55 ) }
    dend_26 { pt3dadd( -11.3436, -103.638, 14.4959, 0.55 ) }
    dend_26 { pt3dadd( -9.35922, -105.687, 15.7083, 0.55 ) }
    dend_26 { pt3dadd( -8.12397, -106.978, 16.4833, 0.83 ) }
    dend_26 { pt3dadd( -7.25213, -107.848, 17.081, 1.11 ) }
    dend_26 { pt3dadd( -6.53668, -108.502, 17.6096, 0.83 ) }
    dend_26 { pt3dadd( -5.57376, -109.232, 18.3864, 0.83 ) }
    dend_26 { pt3dadd( -4.59665, -109.866, 19.2486, 0.83 ) }
    dend_26 { pt3dadd( -3.56124, -110.41, 20.2314, 0.83 ) }
    dend_26 { pt3dadd( -2.00726, -111.217, 21.7418, 0.55 ) }
    dend_26 { pt3dadd( -0.983565, -111.772, 22.7832, 0.55 ) }
    dend_26 { pt3dadd( 0.39957, -112.717, 24.1524, 0.83 ) }
    dend_26 { pt3dadd( -0.238687, -114.107, 23.2556, 0.55 ) }
    dend_26 { pt3dadd( -0.976656, -115.454, 22.6919, 0.55 ) }
    dend_26 { pt3dadd( -1.66165, -116.719, 22.1701, 0.55 ) }
    dend_26 { pt3dadd( -2.71402, -118.667, 21.3693, 0.83 ) }
    dend_26 { pt3dadd( -3.70015, -120.303, 20.642, 0.55 ) }
    dend_26 { pt3dadd( -4.97759, -122.155, 19.6363, 0.55 ) }
    dend_26 { pt3dadd( -6.71407, -124.366, 18.2545, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 77/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -14.988, -100.088, 12.3644, 1.11 ) }
    dend_25 { pt3dadd( -14.9229, -101.211, 12.6331, 1.11 ) }
    dend_25 { pt3dadd( -14.8838, -102.69, 12.944, 0.55 ) }
    dend_25 { pt3dadd( -14.8762, -103.617, 13.1306, 0.55 ) }
    dend_25 { pt3dadd( -14.8486, -104.814, 13.35, 0.55 ) }
    dend_25 { pt3dadd( -14.8709, -106.474, 13.6787, 0.55 ) }
    dend_25 { pt3dadd( -14.9084, -108.484, 14.0802, 0.55 ) }
    dend_25 { pt3dadd( -14.9177, -110.321, 14.4542, 0.55 ) }
    dend_25 { pt3dadd( -14.9312, -111.175, 14.6259, 0.28 ) }
    dend_25 { pt3dadd( -14.9867, -112.529, 14.863, 0.83 ) }
    dend_25 { pt3dadd( -15.1901, -114.717, 15.1738, 0.55 ) }
    dend_25 { pt3dadd( -15.2928, -115.555, 15.2752, 0.55 ) }
    dend_25 { pt3dadd( -15.4195, -116.56, 15.3918, 0.28 ) }
    dend_25 { pt3dadd( -15.5532, -117.412, 15.4935, 0.83 ) }
    dend_25 { pt3dadd( -15.7911, -118.707, 15.6378, 0.55 ) }
    dend_25 { pt3dadd( -16.2098, -120.486, 15.8176, 0.83 ) }
    dend_25 { pt3dadd( -16.4443, -121.329, 15.8837, 0.55 ) }
    dend_25 { pt3dadd( -16.6999, -121.967, 15.929, 0.55 ) }
    dend_25 { pt3dadd( -17.1038, -122.802, 15.9774, 0.83 ) }
    dend_25 { pt3dadd( -17.6035, -123.722, 16.0254, 0.83 ) }
    dend_25 { pt3dadd( -18.4047, -124.95, 16.0853, 0.55 ) }
    dend_25 { pt3dadd( -18.8838, -125.665, 16.1236, 0.55 ) }
    dend_25 { pt3dadd( -19.7055, -126.837, 16.1914, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_25 { pt3dadd( -20.341, -127.67, 16.2517, 0.83 ) }
    dend_25 { pt3dadd( -21.1057, -128.635, 16.3326, 0.28 ) }
    dend_25 { pt3dadd( -21.8892, -129.595, 16.4403, 0.55 ) }
    dend_25 { pt3dadd( -23.1177, -131.121, 16.6438, 0.55 ) }
    dend_25 { pt3dadd( -23.7818, -131.986, 16.7795, 0.55 ) }
    dend_25 { pt3dadd( -24.299, -132.681, 16.9175, 0.55 ) }
    dend_25 { pt3dadd( -24.8611, -133.354, 17.0625, 0.55 ) }
    dend_25 { pt3dadd( -26.0953, -134.726, 17.3565, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 8/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -59.404, 52.5187, 29.0031, 0.55 ) }
    dend_18 { pt3dadd( -62.0129, 52.1943, 29.2722, 0.55 ) }
    dend_18 { pt3dadd( -64.1629, 51.9269, 29.494, 0.55 ) }
    dend_18 { pt3dadd( -67.0904, 51.5628, 29.7959, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 12/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -59.404, 52.5187, 29.0031, 0.55 ) }
    dend_17 { pt3dadd( -59.9095, 49.9119, 28.4282, 0.55 ) }
    dend_17 { pt3dadd( -60.27, 48.0527, 28.0183, 0.55 ) }
    dend_17 { pt3dadd( -60.9441, 44.5762, 27.2516, 0.55 ) }
    dend_17 { pt3dadd( -61.2521, 42.9882, 26.9015, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 17/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 0.0106351, 39.397, -2.31402, 0.55 ) }
    dend_11 { pt3dadd( -4.3419, 39.5072, -2.57293, 0.55 ) }
    dend_11 { pt3dadd( -5.87704, 39.5795, -2.71498, 0.55 ) }
    dend_11 { pt3dadd( -8.49544, 39.7445, -3.14642, 0.55 ) }
    dend_11 { pt3dadd( -15.7057, 39.9261, -4.23489, 0.55 ) }
    dend_11 { pt3dadd( -17.2812, 39.9167, -4.50852, 0.55 ) }
    dend_11 { pt3dadd( -18.4731, 39.8611, -4.72946, 0.55 ) }
    dend_11 { pt3dadd( -20.0649, 39.7192, -5.01638, 0.55 ) }
    dend_11 { pt3dadd( -24.4912, 39.0081, -5.97879, 0.55 ) }
    dend_11 { pt3dadd( -28.3522, 38.154, -7.01899, 0.55 ) }
    dend_11 { pt3dadd( -30.8715, 37.4296, -7.88179, 0.55 ) }
    dend_11 { pt3dadd( -32.7793, 36.8317, -8.49436, 0.55 ) }
    dend_11 { pt3dadd( -35.9472, 35.891, -9.20873, 0.55 ) }
    dend_11 { pt3dadd( -39.2417, 34.9998, -9.79593, 0.55 ) }
    dend_11 { pt3dadd( -41.7595, 34.5477, -10.1203, 0.55 ) }
    dend_11 { pt3dadd( -43.6475, 34.4132, -10.3815, 0.55 ) }
    dend_11 { pt3dadd( -46.6617, 34.4104, -10.7728, 0.55 ) }
    dend_11 { pt3dadd( -54.4302, 35.062, -12.1547, 0.55 ) }
    dend_11 { pt3dadd( -56.7768, 35.475, -12.6602, 0.55 ) }
    dend_11 { pt3dadd( -62.0982, 36.7383, -14.063, 0.55 ) }
    dend_11 { pt3dadd( -65.5595, 37.6895, -15.1393, 0.55 ) }
    dend_11 { pt3dadd( -68.174, 38.5505, -16.2573, 0.55 ) }
    dend_11 { pt3dadd( -72.4395, 40.184, -18.8197, 0.55 ) }
    dend_11 { pt3dadd( -74.9947, 41.3888, -21.195, 0.55 ) }
    dend_11 { pt3dadd( -76.0163, 41.8813, -22.384, 0.55 ) }
    dend_11 { pt3dadd( -77.3638, 42.5689, -24.3404, 0.55 ) }
    dend_11 { pt3dadd( -80.1148, 43.9943, -28.6899, 0.55 ) }
    dend_11 { pt3dadd( -82.0627, 44.9856, -31.9295, 0.55 ) }
    dend_11 { pt3dadd( -84.3672, 46.0927, -36.0005, 0.55 ) }
    dend_11 { pt3dadd( -85.4724, 46.6169, -38.1017, 0.55 ) }
    dend_11 { pt3dadd( -87.7855, 47.8364, -42.5935, 0.55 ) }
    dend_11 { pt3dadd( -89.3753, 48.6909, -45.6022, 0.55 ) }
    dend_11 { pt3dadd( -90.8286, 49.4447, -47.7627, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 50/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.0106351, 39.397, -2.31402, 0.55 ) }
    dend_6 { pt3dadd( -0.770021, 42.1721, -4.24028, 0.55 ) }
    dend_6 { pt3dadd( -1.23983, 43.8422, -5.39954, 0.55 ) }
    dend_6 { pt3dadd( -1.78613, 45.7842, -6.74752, 0.55 ) }
    dend_6 { pt3dadd( -2.31809, 47.6753, -8.06015, 0.83 ) }
    dend_6 { pt3dadd( -2.69794, 49.0255, -8.99743, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 21.9701, -14.5889, 15.247, 0.55 ) }
    dend_40 { pt3dadd( 24.3292, -14.3863, 14.3758, 0.55 ) }
    dend_40 { pt3dadd( 26.9066, -14.2696, 13.4215, 0.55 ) }
    dend_40 { pt3dadd( 30.1589, -14.2321, 12.2988, 0.55 ) }
    dend_40 { pt3dadd( 35.7406, -14.1679, 10.372, 0.55 ) }
    dend_40 { pt3dadd( 38.8184, -14.1325, 9.30964, 0.55 ) }
    dend_40 { pt3dadd( 41.8347, -14.0978, 8.26844, 0.55 ) }
    dend_40 { pt3dadd( 43.9107, -14.1438, 7.5074, 0.83 ) }
    dend_40 { pt3dadd( 46.4344, -14.3699, 6.45698, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 65/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 21.9701, -14.5889, 15.247, 0.55 ) }
    dend_39 { pt3dadd( 23.424, -14.2926, 13.7044, 0.55 ) }
    dend_39 { pt3dadd( 24.3187, -14.0448, 12.7395, 0.55 ) }
    dend_39 { pt3dadd( 28.1716, -12.7706, 8.52738, 0.55 ) }
    dend_39 { pt3dadd( 31.5531, -11.4404, 4.91864, 0.55 ) }
    dend_39 { pt3dadd( 33.365, -10.5881, 3.0202, 0.83 ) }
    dend_39 { pt3dadd( 36.3644, -8.96314, 0.00640345, 0.55 ) }
    dend_39 { pt3dadd( 37.5035, -8.2414, -1.12658, 0.55 ) }
    dend_39 { pt3dadd( 38.2141, -7.59667, -1.74289, 0.28 ) }
    dend_39 { pt3dadd( 39.1923, -5.82226, -2.12856, 0.55 ) }
    dend_39 { pt3dadd( 39.9943, -3.56747, -2.05049, 0.55 ) }
    dend_39 { pt3dadd( 40.4642, -1.91316, -1.78605, 0.83 ) }
    dend_39 { pt3dadd( 41.0634, 0.844203, -1.04786, 0.28 ) }
    dend_39 { pt3dadd( 41.5104, 3.30446, -0.388379, 0.55 ) }
    dend_39 { pt3dadd( 41.7432, 4.93563, 0.0259428, 0.55 ) }
    dend_39 { pt3dadd( 41.8958, 6.68463, 0.376059, 0.28 ) }
    dend_39 { pt3dadd( 41.9628, 8.20583, 0.546788, 0.55 ) }
    dend_39 { pt3dadd( 41.9231, 10.7244, 0.641535, 0.28 ) }
    dend_39 { pt3dadd( 41.8611, 12.4139, 0.625372, 0.55 ) }
    dend_39 { pt3dadd( 41.6906, 13.8798, 0.654772, 0.28 ) }
    dend_39 { pt3dadd( 41.409, 16.1064, 0.691312, 0.55 ) }
    dend_39 { pt3dadd( 41.2472, 17.7034, 0.703649, 0.55 ) }
    dend_39 { pt3dadd( 41.042, 20.4751, 0.748971, 0.55 ) }
    dend_39 { pt3dadd( 41.0059, 21.9408, 0.755218, 0.55 ) }
    dend_39 { pt3dadd( 41.007, 24.2579, 0.816014, 0.55 ) }
    dend_39 { pt3dadd( 41.1121, 25.8299, 0.904127, 0.55 ) }
    dend_39 { pt3dadd( 41.3125, 27.1134, 1.01975, 0.55 ) }
    dend_39 { pt3dadd( 41.6776, 28.7522, 1.31204, 0.28 ) }
    dend_39 { pt3dadd( 41.8534, 29.4547, 1.46654, 0.55 ) }
    dend_39 { pt3dadd( 42.2347, 30.9178, 1.8071, 0.28 ) }
    dend_39 { pt3dadd( 42.5659, 32.3563, 2.19248, 0.55 ) }
    dend_39 { pt3dadd( 42.8798, 33.8808, 2.65371, 0.55 ) }
    dend_39 { pt3dadd( 43.3818, 36.3926, 3.46928, 0.28 ) }
    dend_39 { pt3dadd( 43.6647, 37.8098, 3.93781, 0.55 ) }
    dend_39 { pt3dadd( 43.9635, 39.4724, 4.56027, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_39 { pt3dadd( 44.3686, 42.2325, 5.69057, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 1/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -8.00742, -121.225, -1.68736, 0.55 ) }
    dend_35 { pt3dadd( -6.66072, -123.758, -1.29962, 0.55 ) }
    dend_35 { pt3dadd( -6.31877, -124.761, -1.1102, 0.55 ) }
    dend_35 { pt3dadd( -5.77617, -126.395, -0.751495, 0.83 ) }
    dend_35 { pt3dadd( -5.39538, -127.375, -0.48445, 0.28 ) }
    dend_35 { pt3dadd( -4.62167, -128.795, -0.0465752, 0.55 ) }
    dend_35 { pt3dadd( -4.25704, -129.464, 0.159784, 0.28 ) }
    dend_35 { pt3dadd( -3.21574, -131.43, 1.0224, 0.55 ) }
    dend_35 { pt3dadd( -2.71073, -132.276, 1.42526, 0.28 ) }
    dend_35 { pt3dadd( -1.82929, -133.704, 2.10736, 0.83 ) }
    dend_35 { pt3dadd( -0.373143, -135.484, 2.9708, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 12/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -8.00742, -121.225, -1.68736, 0.55 ) }
    dend_34 { pt3dadd( -11.1087, -121.453, -2.66791, 0.55 ) }
    dend_34 { pt3dadd( -11.7645, -121.571, -2.81126, 0.28 ) }
    dend_34 { pt3dadd( -13.3647, -121.86, -3.16107, 0.55 ) }
    dend_34 { pt3dadd( -14.2921, -122.027, -3.36378, 0.28 ) }
    dend_34 { pt3dadd( -16.0582, -122.345, -3.74985, 0.55 ) }
    dend_34 { pt3dadd( -17.6777, -122.637, -4.10388, 0.28 ) }
    dend_34 { pt3dadd( -20.2181, -122.919, -4.57978, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 20/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -6.71407, -124.366, 18.2545, 0.55 ) }
    dend_28 { pt3dadd( -8.03442, -125.609, 19.2375, 0.55 ) }
    dend_28 { pt3dadd( -9.83399, -127.304, 20.5774, 0.55 ) }
    dend_28 { pt3dadd( -10.8682, -128.278, 21.3474, 0.83 ) }
    dend_28 { pt3dadd( -12.0262, -129.369, 22.2096, 0.83 ) }
    dend_28 { pt3dadd( -13.4104, -130.672, 23.2402, 0.55 ) }
    dend_28 { pt3dadd( -14.5674, -131.762, 24.1016, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 27/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.71407, -124.366, 18.2545, 0.55 ) }
    dend_27 { pt3dadd( -6.76987, -125.991, 18.5025, 0.55 ) }
    dend_27 { pt3dadd( -6.94316, -128.1, 18.9109, 0.55 ) }
    dend_27 { pt3dadd( -7.22162, -132.27, 19.7964, 0.55 ) }
    dend_27 { pt3dadd( -7.35399, -134.723, 20.328, 0.83 ) }
    dend_27 { pt3dadd( -7.44919, -137.551, 21.0021, 0.55 ) }
    dend_27 { pt3dadd( -7.55129, -140.701, 21.7577, 0.83 ) }
    dend_27 { pt3dadd( -7.64124, -143.577, 22.478, 0.55 ) }
    dend_27 { pt3dadd( -7.71111, -146.114, 23.175, 0.55 ) }
    dend_27 { pt3dadd( -7.76803, -147.605, 23.6203, 1.11 ) }
    dend_27 { pt3dadd( -7.75721, -150.26, 24.4354, 0.55 ) }
    dend_27 { pt3dadd( -7.74475, -152.669, 25.2226, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 39/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -2.69794, 49.0255, -8.99743, 0.55 ) }
    dend_10 { pt3dadd( -3.85119, 51.9445, -11.3122, 0.55 ) }
    dend_10 { pt3dadd( -4.47376, 53.5203, -12.5618, 0.55 ) }
    dend_10 { pt3dadd( -4.79833, 54.3418, -13.2133, 0.28 ) }
    dend_10 { pt3dadd( -5.34696, 55.7304, -14.3145, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 44/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -2.69794, 49.0255, -8.99743, 0.55 ) }
    dend_7 { pt3dadd( -5.29998, 48.7326, -9.49865, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 46/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 46.4344, -14.3699, 6.45698, 0.55 ) }
    dend_46 { pt3dadd( 47.838, -14.0918, 9.03411, 0.55 ) }
    dend_46 { pt3dadd( 48.7703, -13.8804, 11.1756, 0.55 ) }
    dend_46 { pt3dadd( 50.762, -13.6423, 16.588, 0.55 ) }
    dend_46 { pt3dadd( 53.072, -13.4438, 23.3371, 0.55 ) }
    dend_46 { pt3dadd( 54.3734, -13.4246, 27.0851, 0.28 ) }
    dend_46 { pt3dadd( 55.0939, -13.4429, 29.0233, 0.55 ) }
    dend_46 { pt3dadd( 57.2926, -13.7099, 34.9708, 0.83 ) }
    dend_46 { pt3dadd( 58.8357, -14.0562, 39.0733, 0.83 ) }
    dend_46 { pt3dadd( 60.5934, -14.6092, 43.1363, 0.83 ) }
    dend_46 { pt3dadd( 61.7499, -14.9926, 45.231, 0.55 ) }
    dend_46 { pt3dadd( 63.0301, -15.3964, 47.3112, 0.83 ) }
    dend_46 { pt3dadd( 66.1376, -16.4284, 51.8876, 0.55 ) }
    dend_46 { pt3dadd( 68.4008, -17.0762, 54.5106, 0.55 ) }
    dend_46 { pt3dadd( 70.508, -17.5623, 56.7199, 0.83 ) }
    dend_46 { pt3dadd( 73.0022, -18.2338, 59.2626, 0.83 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 62/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 46.4344, -14.3699, 6.45698, 0.83 ) }
    dend_41 { pt3dadd( 47.9788, -16.0095, 5.82288, 0.83 ) }
    dend_41 { pt3dadd( 49.9521, -18.2237, 4.56752, 0.83 ) }
    dend_41 { pt3dadd( 51.2693, -19.7016, 3.72958, 0.55 ) }
    dend_41 { pt3dadd( 52.1013, -20.6352, 3.20027, 0.55 ) }
    dend_41 { pt3dadd( 54.0825, -22.8582, 1.93988, 0.83 ) }
    dend_41 { pt3dadd( 55.3051, -24.23, 1.16211, 0.83 ) }
    dend_41 { pt3dadd( 57.201, -26.2948, -0.467736, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 70/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.29998, 48.7326, -9.49865, 0.55 ) }
    dend_9 { pt3dadd( -10.6332, 45.8516, -10.1253, 0.55 ) }
    dend_9 { pt3dadd( -14.8016, 43.7505, -10.6678, 0.55 ) }
    dend_9 { pt3dadd( -19.9988, 41.1307, -11.3441, 0.55 ) }
    dend_9 { pt3dadd( -24.0544, 39.0864, -11.8719, 0.55 ) }
    dend_9 { pt3dadd( -29.8105, 36.1849, -12.621, 0.55 ) }
    dend_9 { pt3dadd( -34.994, 33.5721, -13.2956, 0.55 ) }
    dend_9 { pt3dadd( -39.1712, 31.3624, -13.9271, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 78/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.29998, 48.7326, -9.49865, 0.55 ) }
    dend_8 { pt3dadd( -8.55359, 50.7668, -8.95502, 0.55 ) }
    dend_8 { pt3dadd( -11.249, 52.4953, -8.43456, 0.55 ) }
    dend_8 { pt3dadd( -12.5858, 53.2737, -8.08469, 0.55 ) }
    dend_8 { pt3dadd( -17.067, 55.5832, -6.40073, 0.55 ) }
    dend_8 { pt3dadd( -24.4211, 59.3053, -3.34263, 0.55 ) }
    dend_8 { pt3dadd( -27.0226, 60.6183, -2.25928, 0.55 ) }
    dend_8 { pt3dadd( -29.1575, 61.7004, -1.27687, 0.55 ) }
    dend_8 { pt3dadd( -35.6005, 64.7932, 2.07462, 0.55 ) }
    dend_8 { pt3dadd( -41.3553, 67.4868, 5.20422, 0.55 ) }
    dend_8 { pt3dadd( -43.4211, 68.3964, 6.41638, 0.83 ) }
    dend_8 { pt3dadd( -45.9849, 69.5746, 7.89835, 0.55 ) }
    dend_8 { pt3dadd( -47.4242, 70.2654, 8.73797, 0.55 ) }
    dend_8 { pt3dadd( -52.2875, 72.4792, 11.5501, 0.55 ) }
    dend_8 { pt3dadd( -55.4658, 74.3094, 13.1699, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 93/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 57.201, -26.2948, -0.467736, 0.55 ) }
    dend_45 { pt3dadd( 56.5758, -27.1854, -1.44032, 0.55 ) }
    dend_45 { pt3dadd( 54.7856, -29.7352, -4.22491, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 96/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 57.201, -26.2948, -0.467736, 0.83 ) }
    dend_42 { pt3dadd( 57.6423, -27.8941, -0.115478, 0.83 ) }
    dend_42 { pt3dadd( 57.9405, -29.0123, 0.101832, 0.55 ) }
    dend_42 { pt3dadd( 58.4479, -30.9384, 0.459943, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( 59.0061, -32.9098, 0.822864, 0.83 ) }
    dend_42 { pt3dadd( 59.7721, -35.4544, 1.35138, 0.55 ) }
    dend_42 { pt3dadd( 60.1248, -36.7413, 1.63084, 0.28 ) }
    dend_42 { pt3dadd( 60.3985, -37.8913, 1.8858, 0.55 ) }
    dend_42 { pt3dadd( 60.6719, -39.5428, 2.21049, 0.28 ) }
    dend_42 { pt3dadd( 60.7166, -40.3633, 2.43415, 1.11 ) }
    dend_42 { pt3dadd( 60.5067, -42.1246, 3.07273, 0.55 ) }
    dend_42 { pt3dadd( 60.1041, -43.6298, 3.72434, 0.55 ) }
    dend_42 { pt3dadd( 59.3118, -45.6389, 4.7461, 0.55 ) }
    dend_42 { pt3dadd( 58.1831, -47.4469, 6.08567, 0.55 ) }
    dend_42 { pt3dadd( 56.2957, -49.7499, 8.23995, 0.55 ) }
    dend_42 { pt3dadd( 55.3535, -50.6471, 9.20341, 0.83 ) }
    dend_42 { pt3dadd( 54.6684, -51.2008, 9.88743, 0.28 ) }
    dend_42 { pt3dadd( 53.8106, -51.7973, 10.7913, 0.55 ) }
    dend_42 { pt3dadd( 50.5466, -53.6189, 14.3226, 0.55 ) }
    dend_42 { pt3dadd( 49.9345, -53.9328, 15.0599, 0.83 ) }
    dend_42 { pt3dadd( 48.47, -54.6606, 16.6326, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 48.47, -54.6606, 16.6326, 0.28 ) }
    dend_44 { pt3dadd( 47.5526, -56.9864, 17.5802, 0.28 ) }
    dend_44 { pt3dadd( 47.0925, -58.1528, 18.0554, 0.83 ) }
    dend_44 { pt3dadd( 46.4686, -59.7345, 18.6999, 0.28 ) }
    dend_44 { pt3dadd( 45.5274, -62.1204, 19.6719, 0.55 ) }
    dend_44 { pt3dadd( 44.8783, -63.7662, 20.3425, 0.28 ) }
    dend_44 { pt3dadd( 43.9231, -66.1877, 21.3291, 0.83 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 24/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 48.47, -54.6606, 16.6326, 0.55 ) }
    dend_43 { pt3dadd( 45.7052, -55.7022, 17.3725, 0.55 ) }
    dend_43 { pt3dadd( 43.5869, -56.718, 18.1137, 1.11 ) }
    dend_43 { pt3dadd( 41.0617, -58.1284, 18.9377, 0.55 ) }
    dend_43 { pt3dadd( 38.7138, -59.6059, 19.6293, 0.55 ) }
    dend_43 { pt3dadd( 36.7663, -61.0227, 20.1625, 0.83 ) }
    dend_43 { pt3dadd( 33.6534, -63.4776, 21.057, 0.28 ) }
    dend_43 { pt3dadd( 31.5127, -65.4015, 21.9856, 0.83 ) }
    dend_43 { pt3dadd( 30.0096, -66.8714, 22.7899, 0.28 ) }
    dend_43 { pt3dadd( 28.8694, -68.1712, 23.5796, 0.55 ) }
    dend_43 { pt3dadd( 27.5991, -69.8719, 24.6785, 0.55 ) }
    dend_43 { pt3dadd( 25.6503, -72.6248, 26.4549, 1.11 ) }
    dend_43 { pt3dadd( 23.3287, -76.2197, 28.8994, 0.28 ) }
    dend_43 { pt3dadd( 22.9327, -76.8159, 29.3773, 0.55 ) }
    dend_43 { pt3dadd( 22.2367, -77.7992, 30.2703, 0.28 ) }
    dend_43 { pt3dadd( 21.387, -78.9811, 31.3547, 0.55 ) }
    dend_43 { pt3dadd( 20.3073, -80.3614, 32.5944, 0.55 ) }
    dend_43 { pt3dadd( 19.004, -82.1939, 34.0409, 1.11 ) }
    dend_43 { pt3dadd( 17.2488, -84.4412, 35.712, 0.28 ) }
    dend_43 { pt3dadd( 16.1958, -85.4779, 36.6553, 0.55 ) }
    dend_43 { pt3dadd( 15.1636, -86.3199, 37.5714, 0.55 ) }
    dend_43 { pt3dadd( 13.7571, -87.3781, 39.0205, 0.55 ) }
    dend_43 { pt3dadd( 12.1319, -88.6102, 40.8554, 0.28 ) }
    dend_43 { pt3dadd( 10.0148, -90.2477, 43.2736, 0.55 ) }
    dend_43 { pt3dadd( 7.77566, -91.9983, 45.9422, 0.55 ) }
    dend_43 { pt3dadd( 6.29493, -93.1882, 47.8394, 0.55 ) }
    dend_43 { pt3dadd( 4.05373, -94.9418, 50.8418, 0.55 ) }
    dend_43 { pt3dadd( 3.04085, -95.7721, 52.2615, 0.55 ) }
    dend_43 { pt3dadd( 2.21258, -96.4163, 53.3814, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
    ModelViewParmSubset_2 = new SectionList()
    dend_22 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_22, dend_13, dend_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_22, dend_13, dend_0, axon_0, dend_30, dend_23, dend_19, dend_14, dend_4, dend_1, axon_1, dend_36, dend_31, dend_29, dend_24, dend_21, dend_20, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_38, dend_37, dend_33, dend_32, dend_26, dend_25, dend_18, dend_17, dend_11, dend_6, dend_40, dend_39, dend_35, dend_34, dend_28, dend_27, dend_10, dend_7, dend_46, dend_41, dend_9, dend_8, dend_45, dend_42, dend_44, dend_43]}
    ModelViewParmSubset_5 = new SectionList()
    dend_22 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_23 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_24 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_21 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_11 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_39 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_46 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_22 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_30 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_13 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_38 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_14 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_7 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_19 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_40 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_41 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_42 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_44 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_34 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_25 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_28 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_27 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_22, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_10, dend_10, dend_10, dend_7, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_22 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_23 nseg = 3
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_16 nseg = 3
    dend_12 nseg = 7
    dend_37 nseg = 7
    dend_33 nseg = 5
    dend_11 nseg = 5
    dend_39 nseg = 3
    dend_46 nseg = 3
    dend_8 nseg = 3
    dend_43 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_DBC_d6b3e3e96c_0_0


