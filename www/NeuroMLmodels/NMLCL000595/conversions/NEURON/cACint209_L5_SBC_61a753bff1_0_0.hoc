// Cell: cACint209_L5_SBC_61a753bff1_0_0
/*
{
  "id" : "cACint209_L5_SBC_61a753bff1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.0539, -10.2039, 0.0, 4.14336", "-1.01121, -9.20625, 0.0, 7.24872", "-0.968511, -8.20857, 0.0, 9.44401", "-0.925815, -7.2109, 0.0, 10.5422", "-0.88312, -6.21322, 0.0, 11.4092", "-0.840424, -5.21554, 0.0, 11.9642", "-0.797728, -4.21787, 0.0, 12.4342", "-0.755032, -3.22019, 0.0, 12.6614", "-0.712337, -2.22251, 0.0, 12.6364", "-0.669641, -1.22484, 0.0, 12.5104", "-0.626945, -0.227159, 0.0, 12.2671", "-0.584249, 0.770517, 0.0, 12.0239", "-0.541554, 1.76819, 0.0, 11.4645", "-0.498858, 2.76587, 0.0, 10.6882", "-0.456162, 3.76355, 0.0, 9.91399", "-0.413466, 4.76122, 0.0, 9.47101", "-0.370771, 5.7589, 0.0, 9.20688", "-0.328075, 6.75658, 0.0, 8.75449", "-0.285379, 7.75425, 0.0, 8.25522", "-0.242683, 8.75193, 0.0, 6.57349", "-0.199988, 9.74961, 0.0, 3.81" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.284736, 6.97344, 0.16, 6.82", "0.98987, 9.26469, 0.671045, 6.82", "2.11021, 12.905, 1.48301, 6.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.66527, -9.39505, 1.27, 5.68", "-3.58606, -12.3027, 0.477974, 3.64", "-4.48116, -15.1292, -0.291952, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.30527, 6.92594, 0.0100002, 1.59", "-4.89756, 7.46263, -0.0214756, 1.59", "-7.40025, 8.30618, -0.070948, 1.36", "-8.71802, 8.75033, -0.0969972, 1.36", "-11.7805, 9.78257, -0.157536, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.199988, 9.74961, 0.0, 0.483248", "0.441352, 24.7359, 0.0, 0.483248", "1.08269, 39.7222, 0.0, 0.483248" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "2.11021, 12.905, 1.48301, 1.14", "-0.228587, 17.4641, 1.32084, 1.14", "-1.27778, 19.5094, 1.24809, 1.14", "-1.95653, 20.8325, 1.20103, 1.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.11021, 12.905, 1.48301, 0.91", "6.22947, 14.0111, 0.708394, 0.91", "8.14602, 14.5257, 0.347992, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.48116, -15.1292, -0.291952, 0.91", "-6.47113, -15.4499, -1.1633, 0.91", "-8.95183, -15.55, -2.12733, 0.91", "-11.201, -15.5271, -2.98504, 1.14", "-12.8337, -15.5013, -3.6316, 0.91", "-15.8105, -15.5041, -4.79582, 0.68", "-17.3049, -15.5549, -5.3694, 0.91", "-20.1385, -15.6369, -6.42189, 1.36", "-22.7794, -15.7359, -7.32215, 0.68", "-24.6129, -15.8873, -7.91473, 0.68", "-26.9575, -16.2326, -8.63038, 1.59", "-30.0466, -16.862, -9.51705, 1.14", "-31.4059, -17.1611, -9.88092, 0.68", "-34.2531, -17.8084, -10.63, 1.14", "-36.5301, -18.3284, -11.2242, 0.23", "-38.3521, -18.7466, -11.7097, 1.14", "-40.6034, -19.3088, -12.3608, 0.91", "-44.3887, -20.3947, -13.5173, 0.23", "-46.2334, -21.0492, -14.1151, 0.91", "-47.8453, -21.7925, -14.6809, 0.91", "-48.9012, -22.4744, -15.0731, 1.14", "-50.3176, -23.9021, -15.5987, 0.45", "-51.1201, -25.128, -15.8796, 0.45", "-51.8737, -26.6498, -16.1174, 0.91", "-52.5441, -28.2398, -16.2858, 0.45", "-53.1498, -29.8625, -16.3957, 1.59", "-54.2151, -33.0517, -16.5451, 0.45", "-54.9857, -35.6898, -16.6095, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.48116, -15.1292, -0.291952, 2.95", "-5.13702, -19.1301, 0.00514323, 2.95", "-5.80578, -23.2097, 0.308077, 2.95", "-6.09095, -24.9493, 0.437256, 3.41" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-11.7805, 9.78257, -0.157536, 1.14", "-13.251, 8.49839, -0.990531, 1.14", "-14.2155, 7.49911, -1.62958, 0.45", "-15.096, 6.52824, -2.24027, 1.59", "-16.8746, 4.61813, -3.45871, 0.45", "-18.1893, 3.27388, -4.3905, 0.91", "-18.826, 2.66355, -4.84535, 1.59", "-20.351, 1.13983, -5.98207, 0.23", "-20.9717, 0.582561, -6.47783, 0.23", "-21.6311, 0.189771, -7.07223, 0.23", "-22.9217, 0.237979, -8.12123, 0.68", "-24.2407, 0.487351, -8.96992, 0.68", "-25.256, 0.605868, -9.51884, 0.68", "-26.9474, 0.646464, -10.2815, 1.59", "-28.2915, 0.492895, -10.8239, 1.59", "-30.2394, 0.108947, -11.5206, 0.23", "-32.0143, -0.34556, -12.0874, 0.91", "-33.7019, -0.791965, -12.5775, 0.91", "-35.1574, -1.1525, -12.9394, 0.91", "-37.0234, -1.54904, -13.3656, 0.23", "-39.6532, -2.02252, -13.969, 0.68", "-41.1467, -2.22523, -14.3137, 0.68", "-43.1273, -2.41197, -14.7838, 0.23", "-44.9524, -2.51841, -15.2295, 0.45", "-47.2426, -2.60972, -15.8061, 0.45", "-48.701, -2.64096, -16.1776, 0.23", "-50.1593, -2.65979, -16.5487, 0.23", "-52.2618, -2.66788, -17.0777, 1.36", "-54.099, -2.696, -17.5495, 0.45", "-56.5472, -2.7401, -18.1726, 0.91", "-58.0615, -2.81237, -18.5385, 0.91", "-59.3035, -2.8845, -18.8301, 1.36", "-61.1369, -3.00564, -19.2443, 0.23", "-63.2363, -3.14729, -19.6988, 0.23", "-64.2885, -3.23359, -19.935, 0.91", "-67.0911, -3.61562, -20.5995, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-11.7805, 9.78257, -0.157536, 0.23", "-13.8557, 10.2234, 0.336464, 0.23", "-15.9901, 10.6679, 0.903708, 0.68", "-17.9326, 11.0635, 1.5156, 0.23", "-18.7849, 11.2289, 1.80034, 0.45", "-20.5664, 11.5808, 2.46573, 0.91", "-22.4237, 11.9746, 3.19457, 0.23", "-23.2337, 12.1353, 3.57939, 0.68", "-24.3602, 12.447, 4.26144, 0.23", "-24.9331, 12.6508, 4.68356, 0.68", "-26.2032, 13.1832, 5.66982, 0.23", "-26.8663, 13.4577, 6.18175, 0.68", "-28.2852, 13.9603, 7.24162, 0.23", "-29.7508, 14.3758, 8.25054, 0.68", "-32.3481, 14.9892, 9.89601, 0.23", "-33.5849, 15.2274, 10.5956, 0.45", "-35.6809, 15.4994, 11.5564, 0.23", "-37.1119, 15.6151, 12.0441, 0.23", "-38.482, 15.7338, 12.3176, 0.23", "-39.7398, 15.8854, 12.4498, 0.23", "-41.0869, 16.1916, 12.5074, 0.23", "-42.6282, 16.7154, 12.5527, 0.23", "-44.8953, 17.7293, 12.6144, 0.45", "-47.3299, 18.9568, 12.7186, 0.23", "-48.7163, 19.6693, 12.7987, 0.68", "-50.8351, 20.6797, 12.939, 0.23", "-53.0478, 21.6929, 13.1255, 0.23", "-55.3766, 22.7233, 13.3147, 0.23", "-57.6607, 23.6949, 13.5057, 0.23", "-60.1437, 24.6336, 13.7009, 0.23", "-63.1511, 25.6231, 13.8931, 0.45", "-63.9787, 25.8542, 13.9206, 0.23", "-65.2589, 26.1513, 13.9479, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.08269, 39.7222, 0.0, 1.59", "1.72403, 54.7085, 0.0, 1.59", "2.36537, 69.6947, 0.0, 1.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.95653, 20.8325, 1.20103, 0.23", "-2.30322, 20.5278, 3.19205, 0.23", "-2.14658, 19.7414, 4.23506, 0.91", "-1.83694, 18.065, 5.77948, 0.23", "-1.80664, 16.7372, 7.1215, 0.23", "-1.98941, 15.8222, 8.52915, 0.23", "-2.2413, 15.2762, 9.64594, 0.91", "-2.9393, 14.4809, 11.1184, 0.23", "-3.39332, 14.2059, 11.7472, 0.23", "-4.65861, 13.5876, 13.3246, 0.91", "-6.19584, 13.0039, 15.2026, 0.23", "-7.96619, 12.5013, 17.1647, 0.23", "-9.88287, 12.1271, 19.2182, 0.68", "-13.1031, 11.646, 22.5445, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.95653, 20.8325, 1.20103, 0.68", "-1.74196, 23.7277, 1.11508, 0.68", "-1.5861, 25.7608, 1.10306, 0.68", "-1.50768, 26.9138, 1.11524, 1.36", "-1.28144, 30.1394, 1.17589, 0.68", "-1.21817, 31.3257, 1.19232, 0.68", "-1.1825, 33.7592, 1.22146, 1.59", "-1.20209, 34.9135, 1.27046, 1.59", "-1.39205, 37.8224, 1.49857, 0.23", "-1.6246, 39.3201, 1.66048, 0.23", "-2.08073, 41.1048, 1.89982, 1.14", "-2.69874, 43.1018, 2.19218, 0.91", "-3.20411, 44.5339, 2.41003, 0.91", "-3.8496, 46.3129, 2.69426, 1.36", "-4.58254, 48.1614, 3.02592, 0.68", "-5.34369, 50.0297, 3.38738, 1.14", "-6.06665, 51.929, 3.77979, 0.45", "-6.51479, 53.2849, 4.03096, 1.59", "-7.10002, 55.2262, 4.27936, 2.27" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "8.14602, 14.5257, 0.347992, 0.91", "8.28378, 14.5691, -0.38887, 0.91", "8.46887, 14.4311, -1.48509, 0.91", "8.84526, 14.0886, -3.16803, 0.68", "9.04293, 13.8901, -3.90706, 0.68", "9.26937, 13.6267, -4.65637, 1.14", "9.65099, 13.1184, -5.78979, 0.68", "10.1171, 12.3305, -6.99253, 0.23", "10.3568, 11.7728, -7.55719, 0.23", "10.4818, 11.3879, -7.84345, 0.23", "10.6691, 10.6203, -8.32332, 1.14", "10.8566, 9.86096, -8.76093, 1.82", "11.0472, 9.03263, -9.17879, 0.68", "11.2036, 7.96743, -9.61113, 1.14", "11.2567, 7.12958, -9.93492, 0.45", "11.2686, 6.44476, -10.1914, 0.45" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "8.14602, 14.5257, 0.347992, 1.14", "9.6278, 14.6502, 0.273249, 1.14", "10.4614, 14.7201, 0.231203, 1.59", "11.9545, 14.8455, 0.15589, 1.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-54.9857, -35.6898, -16.6095, 0.23", "-57.3422, -36.613, -16.5617, 0.23", "-58.967, -37.3658, -16.5695, 0.68", "-60.9892, -38.4541, -16.5841, 0.23", "-61.8318, -38.9635, -16.5936, 0.23", "-63.6212, -40.1223, -16.6272, 0.23", "-65.4885, -41.4203, -16.6797, 0.91", "-66.7528, -42.4157, -16.7469, 0.23", "-67.9263, -43.44, -16.8105, 0.91", "-68.9152, -44.324, -16.8557, 0.23", "-70.1474, -45.3894, -16.904, 1.59", "-71.9255, -46.816, -16.9714, 0.23", "-73.0939, -47.6702, -17.0084, 0.23", "-75.273, -49.0773, -17.084, 0.23", "-76.5578, -49.8077, -17.1381, 1.59", "-77.3533, -50.2164, -17.1728, 0.23", "-79.0706, -51.0043, -17.2598, 0.68", "-80.9224, -51.7624, -17.3955, 0.23", "-82.2782, -52.2988, -17.5601, 1.14", "-82.8519, -52.5333, -17.6564, 1.14", "-83.9025, -52.9955, -17.8675, 0.23", "-85.5858, -53.8104, -18.2, 0.68", "-87.2713, -54.6918, -18.5282, 0.23", "-89.2865, -55.7701, -18.8494, 1.14", "-91.8855, -57.2098, -19.1766, 0.23", "-93.3916, -58.0729, -19.3134, 0.91", "-96.278, -59.8018, -19.4935, 0.23", "-97.1049, -60.3324, -19.5218, 0.91", "-100.108, -62.3763, -19.5252, 0.23", "-102.518, -64.1369, -19.4043, 1.14", "-104.623, -65.7112, -19.2461, 0.45", "-106.03, -66.81, -19.1341, 1.14", "-107.14, -67.7194, -19.0579, 1.14", "-108.487, -68.91, -18.9604, 0.23", "-109.406, -69.9356, -18.9029, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-54.9857, -35.6898, -16.6095, 0.45", "-57.3618, -38.3987, -17.381, 0.45", "-59.0579, -40.3323, -17.9317, 1.14", "-60.1205, -41.5437, -18.2768, 0.23", "-61.5166, -43.1352, -18.73, 1.36", "-62.9307, -44.7474, -19.1892, 0.45" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.09095, -24.9493, 0.437256, 0.23", "-5.46727, -26.4477, 0.307441, 0.23", "-4.7419, -28.237, 0.133964, 0.23", "-3.95501, -30.1109, -0.0517381, 1.14", "-3.1367, -31.9796, -0.248553, 0.23", "-2.54965, -33.2792, -0.396753, 0.91", "-2.09768, -34.2694, -0.517119, 0.91", "-1.02225, -36.6744, -0.827103, 0.23", "-0.218335, -38.4353, -1.06913, 1.14", "0.332452, -39.6401, -1.24607, 1.14", "1.32156, -41.8562, -1.59258, 0.45", "2.27218, -44.0069, -1.95135, 0.45", "2.74646, -45.1337, -2.13299, 0.91", "3.53828, -47.0579, -2.44104, 0.23", "4.2613, -48.8945, -2.70107, 0.23", "5.08429, -51.0447, -2.96345, 0.68", "6.0437, -53.5295, -3.23638, 0.23", "6.69306, -55.1737, -3.3887, 0.91", "7.61, -57.4478, -3.53744, 1.14", "9.1803, -61.2892, -3.61298, 0.23", "9.69331, -62.5296, -3.57647, 0.23", "10.4151, -64.3197, -3.44921, 0.68", "11.3045, -66.5839, -3.20496, 0.23", "12.413, -69.4109, -2.7964, 1.36", "13.1908, -71.4239, -2.44253, 0.68", "14.1151, -73.968, -1.97702, 0.23", "14.3849, -74.7722, -1.83294, 0.91", "15.1299, -77.1217, -1.41895, 0.23", "15.6096, -78.7057, -1.17225, 0.91", "16.2722, -80.9676, -0.897347, 1.14", "17.068, -83.6983, -0.652674, 0.23", "17.4657, -85.0699, -0.548221, 0.91", "18.1169, -87.3062, -0.397218, 0.23", "18.3619, -88.1178, -0.374693, 0.91", "18.713, -89.2247, -0.38537, 0.91", "19.632, -91.7697, -0.457378, 0.23", "20.404, -93.6777, -0.55569, 2.05", "20.7446, -94.4973, -0.61493, 2.05", "22.7358, -99.1721, -1.04691, 0.23", "23.4177, -100.742, -1.20477, 0.91", "25.2153, -104.846, -1.67501, 0.23", "25.7476, -106.048, -1.83421, 0.23", "26.2204, -107.079, -1.97979, 1.14", "26.6822, -108.055, -2.1234, 1.14", "28.3366, -111.435, -2.61067, 0.23", "29.1012, -112.908, -2.81075, 0.23", "29.6879, -113.995, -2.94352, 0.91", "30.3818, -115.218, -3.07938, 0.91", "31.9996, -117.839, -3.3648, 0.23", "32.8636, -119.158, -3.49696, 1.14", "34.8778, -121.964, -3.76942, 0.23", "36.0673, -123.554, -3.91771, 0.23", "36.6607, -124.329, -3.99561, 0.91", "37.4817, -125.324, -4.08304, 0.91", "38.746, -126.716, -4.20903, 0.23", "39.5249, -127.516, -4.29831, 0.68", "40.584, -128.544, -4.40867, 0.23", "41.8279, -129.722, -4.54505, 0.91", "45.3362, -132.934, -4.95706, 0.23", "46.1751, -133.675, -5.05848, 1.14", "47.2852, -134.595, -5.20647, 1.14", "49.9715, -136.775, -5.50823, 0.23", "50.8983, -137.523, -5.5571, 0.23", "52.5838, -138.928, -5.55881, 0.68", "53.828, -140.116, -5.43056, 0.23", "55.1276, -141.59, -5.14292, 0.91", "56.0328, -142.812, -4.78081, 0.23", "57.3034, -144.686, -4.06302, 0.23", "58.0784, -145.816, -3.61539, 0.68", "59.6018, -148.036, -2.77414, 0.23", "60.9429, -149.847, -2.09816, 0.68", "63.3997, -152.937, -0.995926, 0.23", "66.3602, -156.338, 0.0385796, 0.23", "68.0401, -158.165, 0.548312, 0.23", "69.322, -159.457, 0.910879, 0.68", "71.9803, -161.905, 1.55602, 0.23", "74.4011, -163.981, 2.12418, 0.23", "76.3378, -165.583, 2.47354, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.09095, -24.9493, 0.437256, 2.27", "-7.792, -28.378, 0.350482, 2.27", "-8.59691, -30.0004, 0.309421, 2.73", "-9.45791, -31.7359, 0.2655, 3.64" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.10002, 55.2262, 4.27936, 0.23", "-4.71407, 56.6144, 5.99224, 0.23", "-2.90611, 57.2881, 7.01747, 0.91", "-1.14743, 57.904, 7.91207, 0.23", "0.400483, 58.4644, 8.72074, 0.23", "1.79353, 58.9491, 9.424, 0.91", "3.60418, 59.6142, 10.2894, 0.23", "4.56481, 59.9111, 10.7054, 0.23", "5.43224, 60.2543, 11.0877, 0.23", "6.82724, 61.0298, 11.6951, 0.23", "7.98875, 61.954, 12.2214, 1.36", "8.96676, 62.8637, 12.6717, 1.36", "11.0153, 65.0694, 13.5654, 0.23", "12.2819, 66.4359, 14.0572, 0.23", "13.334, 67.5815, 14.3926, 0.23", "14.7996, 69.3055, 14.7588, 0.23", "16.5237, 71.4617, 15.1159, 1.14", "18.1744, 73.6232, 15.4391, 0.23", "19.3889, 75.2648, 15.6088, 0.23", "21.0358, 77.5647, 15.8309, 0.45", "22.511, 79.8544, 16.0297, 0.23", "23.3772, 81.4055, 16.1401, 0.68", "24.457, 83.8942, 16.2914, 0.23", "24.8637, 85.0569, 16.4089, 0.23", "25.2873, 86.5609, 16.6011, 0.91", "25.5621, 87.5751, 16.7479, 0.91", "25.8774, 88.5793, 16.8908, 0.23", "26.7893, 91.1285, 17.3436, 0.68", "28.1122, 94.3923, 17.9482, 0.23", "28.5608, 95.4566, 18.1836, 0.91", "29.5866, 97.8532, 18.7308, 0.23", "30.7452, 100.522, 19.3775, 0.68", "31.9968, 103.385, 20.1255, 0.23", "33.2717, 106.515, 20.9693, 0.68", "33.9688, 108.486, 21.5089, 0.23", "34.6203, 110.828, 22.2008, 0.68", "34.9318, 112.462, 22.7356, 0.23", "35.0669, 113.801, 23.2304, 0.23", "35.1738, 115.568, 23.8734, 0.23", "35.2281, 117.66, 24.7049, 0.68", "35.2683, 120.7, 25.9303, 0.23", "35.2238, 123.266, 27.0396, 0.68", "35.0483, 125.911, 28.1712, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-7.10002, 55.2262, 4.27936, 0.23", "-8.33205, 57.4157, 4.59935, 0.23", "-9.44043, 59.2323, 4.8965, 0.91", "-11.728, 62.7498, 5.50421, 0.23", "-12.5636, 63.9202, 5.71403, 0.91", "-13.4515, 65.1078, 5.92776, 0.91", "-14.8319, 66.9896, 6.25664, 0.23", "-16.4731, 69.2289, 6.67372, 0.23", "-18.0626, 71.4204, 7.03157, 0.23", "-19.2668, 73.2148, 7.26867, 0.68", "-20.0273, 74.4533, 7.40612, 0.23", "-20.7651, 75.8313, 7.53554, 0.23", "-21.1376, 76.6283, 7.60936, 0.23", "-21.9662, 78.6145, 7.82908, 1.59", "-22.9601, 81.16, 8.15128, 0.68", "-23.6191, 82.8198, 8.37354, 0.23", "-24.064, 83.7755, 8.51338, 0.91", "-24.8572, 85.213, 8.7396, 0.23", "-25.286, 85.9138, 8.85272, 0.91", "-26.0735, 87.1171, 9.06922, 0.23", "-26.8082, 88.1815, 9.24618, 1.14", "-27.5173, 89.1782, 9.38482, 1.14", "-28.3659, 90.2712, 9.53656, 0.23", "-29.5255, 91.6399, 9.7531, 0.23", "-30.9357, 93.1843, 10.0818, 0.91", "-31.9842, 94.2417, 10.36, 0.23", "-33.3684, 95.5093, 10.7854, 0.23", "-34.4182, 96.3756, 11.1367, 0.91", "-36.1774, 97.6776, 11.7945, 0.23", "-37.6832, 98.7415, 12.3967, 0.68", "-38.3272, 99.2157, 12.6562, 0.68", "-39.4974, 100.114, 13.1408, 0.23", "-40.7834, 101.156, 13.6429, 0.68", "-41.9867, 102.121, 14.0446, 0.23", "-43.3086, 103.083, 14.4332, 0.23", "-45.4236, 104.473, 14.9429, 0.91", "-47.0917, 105.44, 15.2446, 0.23", "-49.326, 106.618, 15.5172, 0.23", "-51.9475, 107.903, 15.7365, 0.91", "-54.059, 108.863, 15.8417, 0.23", "-55.7966, 109.573, 15.9072, 0.91", "-57.5852, 110.286, 15.9379, 0.23", "-60.4228, 111.491, 15.9242, 0.23", "-62.3133, 112.344, 15.8972, 0.91", "-64.1719, 113.3, 15.8515, 0.23", "-65.1411, 113.847, 15.8267, 0.68", "-66.8742, 114.816, 15.8504, 0.23", "-68.2129, 115.564, 15.9361, 0.91", "-69.5539, 116.283, 16.0803, 0.23", "-70.7333, 116.928, 16.2582, 0.68", "-71.8928, 117.56, 16.4721, 0.23", "-74.2473, 118.84, 16.9496, 0.91", "-76.8048, 120.221, 17.5121, 0.23", "-79.1733, 121.549, 18.0443, 0.23", "-80.9334, 122.603, 18.4388, 0.91", "-82.3663, 123.546, 18.756, 0.23", "-83.0304, 124.035, 18.8836, 0.68", "-84.0572, 124.926, 19.0391, 0.23", "-85.0118, 125.912, 19.1237, 0.91", "-86.4459, 127.646, 19.1291, 0.23", "-87.2532, 128.715, 19.0735, 0.91", "-88.2871, 130.188, 18.9638, 0.23", "-89.0517, 131.281, 18.853, 1.14", "-90.6567, 133.542, 18.5259, 0.23", "-92.217, 135.657, 18.1624, 0.91", "-93.5159, 137.326, 17.829, 0.23", "-94.6514, 138.691, 17.5343, 0.91", "-96.1727, 140.459, 17.1285, 0.23", "-97.3205, 141.71, 16.7985, 0.23", "-98.5996, 142.994, 16.4227, 0.91", "-100.259, 144.608, 15.9421, 0.23", "-101.114, 145.417, 15.6991, 0.23", "-101.97, 146.2, 15.4666, 0.68", "-102.553, 146.699, 15.3344, 0.23", "-103.958, 147.868, 15.0527, 0.68", "-105.53, 149.108, 14.7486, 0.23", "-106.731, 150.031, 14.573, 0.23", "-107.536, 150.658, 14.4703, 0.68", "-108.551, 151.441, 14.3696, 0.23", "-109.466, 152.176, 14.2946, 0.23", "-110.395, 152.926, 14.2381, 0.45", "-112.341, 154.502, 14.1301, 0.23", "-113.719, 155.687, 14.0405, 1.82", "-114.72, 156.576, 13.976, 0.68", "-116.743, 158.451, 13.8548, 0.23", "-118.339, 159.901, 13.8141, 0.91", "-119.854, 161.294, 13.7726, 0.23", "-121.082, 162.405, 13.7445, 0.23", "-121.82, 163.083, 13.745, 0.91", "-122.844, 164.053, 13.7478, 0.23", "-123.952, 165.123, 13.7815, 1.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "11.9545, 14.8455, 0.15589, 0.68", "13.7747, 13.7796, -0.012671, 0.68", "15.7315, 12.6443, -0.07999, 0.68", "17.4179, 11.624, -0.0766959, 0.68", "19.0682, 10.4825, -0.0139493, 1.14", "21.0388, 9.06555, 0.0453726, 1.59", "23.8023, 7.05787, 0.113634, 0.68", "26.1289, 5.36386, 0.208633, 1.82", "28.585, 3.565, 0.304979, 0.91", "32.7567, 0.449227, 0.401304, 0.68", "34.8956, -1.15854, 0.387551, 0.68", "37.132, -2.86597, 0.304664, 1.14", "38.6618, -4.04746, 0.207917, 1.14", "41.9826, -6.62359, -0.076151, 1.82", "44.6825, -8.65563, -0.359496, 0.23", "46.7149, -10.123, -0.608212, 0.91", "49.0351, -11.8937, -0.865173, 1.14", "50.5824, -13.1538, -1.06358, 2.05" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.9545, 14.8455, 0.15589, 0.45", "13.6628, 14.9784, 0.112784, 0.45", "16.4025, 15.1881, 0.0701504, 0.91", "18.6714, 15.3939, 0.0516854, 0.45", "21.3866, 15.6561, 0.0510262, 1.14", "24.8886, 16.117, 0.101881, 0.68", "28.5804, 16.7127, 0.192062, 0.45", "30.6997, 17.1314, 0.268375, 0.91", "32.368, 17.5541, 0.350074, 0.91", "35.4211, 18.4669, 0.544693, 2.05", "39.8885, 19.9129, 0.879153, 0.68", "42.5559, 20.8501, 1.09083, 1.14", "44.8805, 21.7601, 1.28965, 0.68", "46.0243, 22.2495, 1.39134, 1.59", "48.5013, 23.3585, 1.61581, 1.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-9.45791, -31.7359, 0.2655, 0.68", "-11.7869, -32.3759, 0.465792, 0.68", "-14.0903, -32.9699, 0.739203, 0.68", "-15.3924, -33.288, 0.917348, 1.14", "-17.9309, -33.821, 1.26099, 0.68", "-19.7578, -34.1521, 1.5079, 1.36", "-21.3983, -34.4111, 1.71809, 0.45", "-23.3243, -34.608, 1.9676, 1.14", "-25.1867, -34.7188, 2.21756, 0.23", "-26.8345, -34.8472, 2.43035, 0.45", "-27.6396, -34.9433, 2.51372, 0.45", "-29.513, -35.2836, 2.64679, 1.14", "-31.0433, -35.6834, 2.70957, 0.23", "-32.4049, -36.1763, 2.7318, 0.91", "-34.2608, -37.0098, 2.79002, 0.45", "-35.3654, -37.5805, 2.84947, 1.14", "-36.9281, -38.4315, 2.96182, 0.23", "-38.2921, -39.1948, 3.09263, 0.91", "-39.847, -40.0508, 3.28132, 0.68", "-41.2938, -40.8034, 3.49727, 0.23", "-42.3276, -41.2924, 3.69513, 0.91", "-43.7888, -41.8989, 4.03462, 0.23", "-45.611, -42.595, 4.50015, 0.91", "-46.6208, -42.9773, 4.76514, 0.68", "-48.1882, -43.599, 5.17828, 0.68", "-50.0127, -44.391, 5.65333, 1.36", "-51.5806, -45.1175, 6.06464, 0.23", "-52.2706, -45.457, 6.2422, 0.23", "-53.595, -46.1408, 6.5628, 1.36", "-54.4539, -46.6367, 6.76252, 1.36", "-55.3998, -47.2535, 6.976, 0.23", "-56.7126, -48.2157, 7.22031, 0.91", "-57.9325, -49.2085, 7.39217, 0.91", "-59.131, -50.24, 7.52893, 0.23", "-60.3446, -51.3387, 7.63636, 0.91", "-61.3102, -52.2443, 7.68729, 0.23", "-62.3901, -53.3396, 7.70438, 0.23", "-63.1871, -54.2742, 7.68964, 0.23", "-63.6939, -54.9256, 7.6819, 1.14", "-64.2322, -55.6487, 7.69173, 0.45", "-64.7956, -56.4163, 7.72021, 1.59", "-66.2562, -58.4708, 7.86643, 0.68", "-67.7839, -60.6542, 8.1184, 0.68", "-68.7777, -62.0285, 8.32996, 0.23", "-69.7199, -63.276, 8.55606, 0.91", "-70.3692, -64.0769, 8.7267, 0.91", "-70.886, -64.6365, 8.87271, 0.23", "-71.6779, -65.3974, 9.10509, 0.91", "-72.8471, -66.4306, 9.43785, 0.23", "-73.7639, -67.2122, 9.67081, 0.45", "-74.7372, -68.0276, 9.89502, 1.14", "-75.632, -68.7719, 10.0904, 0.23", "-76.9374, -69.8515, 10.3576, 0.91", "-78.3078, -70.9673, 10.6325, 0.91", "-79.1734, -71.6593, 10.8037, 0.23", "-80.3553, -72.5845, 11.0481, 0.68", "-81.297, -73.3217, 11.2663, 0.23", "-81.7446, -73.655, 11.3838, 0.23", "-83.0115, -74.5197, 11.7358, 0.91", "-84.3012, -75.3676, 12.1332, 2.05", "-86.0042, -76.5151, 12.6918, 0.68", "-87.3731, -77.4586, 13.1766, 1.36", "-88.7665, -78.4427, 13.6891, 0.45", "-89.8326, -79.2174, 14.0944, 0.45", "-91.0574, -80.1264, 14.5655, 0.23", "-91.7682, -80.6564, 14.8435, 0.91", "-92.6187, -81.2772, 15.1657, 0.23", "-93.2432, -81.7124, 15.3837, 0.23", "-94.5544, -82.6089, 15.8049, 1.14", "-95.2782, -83.0814, 16.0231, 1.14", "-96.9745, -84.1074, 16.4987, 0.23", "-97.4887, -84.3911, 16.6363, 0.91", "-98.6018, -84.9848, 16.9118, 1.59", "-99.4659, -85.4539, 17.1447, 0.45", "-99.955, -85.7192, 17.2863, 1.14", "-101.58, -86.589, 17.7921, 0.23", "-102.367, -87.0098, 18.0439, 1.36", "-103.213, -87.4754, 18.3381, 1.36", "-105.556, -88.8179, 19.1974, 0.23", "-106.556, -89.4189, 19.5716, 1.36", "-106.903, -89.6461, 19.7009, 2.27", "-108.329, -90.6965, 20.2166, 0.23", "-109.342, -91.4682, 20.5879, 0.68", "-110.015, -92.0019, 20.8295, 0.23", "-110.787, -92.6747, 21.0712, 0.91", "-111.426, -93.3114, 21.2639, 0.23", "-112.167, -94.164, 21.4891, 1.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-9.45791, -31.7359, 0.2655, 2.27", "-9.62169, -35.3045, 0.1535, 2.27", "-9.66282, -36.2004, 0.125381, 2.27" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-123.952, 165.123, 13.7815, 0.23", "-126.279, 165.725, 13.9922, 0.23", "-127.53, 166.026, 14.1075, 0.91", "-129.371, 166.422, 14.2785, 0.23", "-130.588, 166.647, 14.4162, 0.91", "-131.463, 166.795, 14.5245, 0.23", "-132.87, 167.032, 14.6834, 0.23", "-133.548, 167.119, 14.7627, 0.23", "-134.512, 167.252, 14.8422, 0.91", "-136.105, 167.444, 14.9108, 0.23", "-136.684, 167.505, 14.9325, 0.68", "-137.722, 167.605, 14.9706, 0.23", "-138.174, 167.651, 14.9936, 1.14", "-139.534, 167.779, 15.0863, 0.23", "-141.227, 167.926, 15.2446, 1.14", "-142.424, 168.027, 15.3788, 0.23", "-143.722, 168.128, 15.578, 0.68", "-144.44, 168.181, 15.724, 0.23", "-145.936, 168.326, 16.0687, 0.91", "-147.884, 168.565, 16.5681, 0.23", "-149.308, 168.815, 16.93, 0.23", "-150.1, 168.973, 17.1182, 0.91", "-151.27, 169.252, 17.3853, 0.23", "-152.201, 169.515, 17.5757, 0.68", "-153.292, 169.867, 17.7865, 0.23", "-154.275, 170.188, 17.9367, 0.23", "-155.089, 170.407, 18.0283, 0.68", "-156.084, 170.666, 18.1067, 0.23", "-157.443, 170.987, 18.1749, 0.23", "-158.414, 171.169, 18.2141, 0.68", "-159.223, 171.287, 18.2357, 0.23", "-160.528, 171.373, 18.2487, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-123.952, 165.123, 13.7815, 0.23", "-125.094, 166.253, 14.1737, 0.23", "-125.364, 166.565, 14.2688, 0.68", "-126.114, 167.499, 14.5538, 0.23", "-126.893, 168.517, 14.7607, 0.23", "-127.437, 169.231, 14.8616, 0.68", "-128.125, 170.131, 14.9611, 0.23", "-128.622, 170.814, 15.0226, 0.68", "-129.678, 172.231, 15.094, 0.23", "-130.642, 173.485, 15.105, 0.91", "-131.875, 175.048, 15.103, 0.23", "-132.613, 175.948, 15.0922, 0.23", "-133.515, 176.989, 15.066, 0.91", "-134.538, 178.137, 15.0271, 0.23", "-135.329, 179.006, 14.9938, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "50.5824, -13.1538, -1.06358, 0.45", "51.4398, -15.2788, -1.64504, 0.45", "51.9028, -16.3372, -1.88882, 0.91", "52.396, -17.2022, -2.04522, 0.23", "52.8127, -17.8513, -2.15545, 0.91", "53.2669, -18.4892, -2.25469, 0.91", "54.5727, -20.1724, -2.48407, 0.23", "55.4494, -21.1786, -2.59911, 1.59", "57.3792, -23.2641, -2.85948, 0.45", "58.4519, -24.3674, -3.00957, 0.45", "59.7916, -25.7005, -3.21348, 1.36", "62.3657, -28.169, -3.61658, 0.68", "64.0733, -29.7355, -3.91541, 0.68", "65.5268, -31.0162, -4.18583, 1.14", "68.3527, -33.3855, -4.72124, 0.45", "69.0432, -33.9251, -4.84548, 1.14", "70.4454, -34.9842, -5.10562, 0.23", "71.9912, -36.128, -5.40173, 1.36", "72.5132, -36.5195, -5.4961, 2.05", "74.2072, -37.8622, -5.79255, 0.23", "75.8906, -39.3364, -6.10614, 0.23", "77.2705, -40.6103, -6.35932, 1.14", "78.6652, -42.0042, -6.62757, 0.23", "79.5388, -42.9663, -6.79026, 1.36", "80.5685, -44.2129, -7.01246, 1.59", "81.7207, -45.8682, -7.32574, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "50.5824, -13.1538, -1.06358, 0.68", "55.5174, -13.968, -0.649813, 0.68", "57.7944, -14.3371, -0.495625, 0.23", "59.2984, -14.5741, -0.449104, 0.68", "61.2591, -14.8954, -0.408468, 0.23", "63.0424, -15.2497, -0.367484, 0.91", "66.3969, -16.0013, -0.271861, 0.23", "69.2022, -16.6688, -0.137463, 1.14", "74.7422, -17.9378, 0.22124, 0.45", "76.4177, -18.2835, 0.359576, 0.91", "80.4069, -18.9529, 0.734883, 0.23", "84.3205, -19.4398, 1.12895, 0.91", "87.8258, -19.693, 1.50697, 0.23", "92.2331, -19.7266, 1.98133, 0.91", "96.8329, -19.3976, 2.44621, 0.23", "100.511, -18.8039, 2.71965, 0.68", "102.601, -18.2301, 2.80364, 0.23", "104.634, -17.5079, 2.78598, 1.14", "106.702, -16.6745, 2.65751, 0.23", "109.738, -15.3432, 2.35759, 0.91", "112.319, -14.1899, 2.01098, 0.23", "114.504, -13.2179, 1.67995, 1.14", "116.57, -12.3322, 1.37832, 0.23", "119.358, -11.1651, 0.941181, 1.82", "120.79, -10.5922, 0.706516, 2.27", "124.984, -8.95208, -0.0958621, 0.23", "125.9, -8.6438, -0.26875, 0.23", "129.244, -7.64036, -0.867934, 0.68", "132.204, -6.88941, -1.32001, 0.23", "134.514, -6.43387, -1.62235, 1.36", "138.202, -6.01347, -1.97059, 0.23", "141.945, -5.90754, -2.16679, 0.23", "143.468, -5.95532, -2.21238, 1.14", "147.197, -6.33293, -2.20472, 0.23", "149.058, -6.59853, -2.12313, 0.68", "152.104, -7.08002, -1.91712, 0.23", "152.913, -7.22296, -1.85058, 1.59", "154.168, -7.45209, -1.74653, 0.23", "156.673, -7.91482, -1.53809, 1.36", "160.264, -8.51715, -1.24708, 0.23", "163.584, -8.94154, -0.994818, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "48.5013, 23.3585, 1.61581, 0.23", "51.9816, 24.3471, 1.49433, 0.23", "54.2741, 25.0559, 1.49098, 0.23", "56.0651, 25.6, 1.51731, 1.36", "58.5409, 26.3582, 1.51966, 1.36", "61.9315, 27.3854, 1.4994, 0.23", "63.525, 27.8507, 1.48363, 0.23", "66.7231, 28.791, 1.45091, 0.91", "70.2274, 29.7011, 1.38965, 0.23", "72.9952, 30.3015, 1.3257, 1.59", "74.0157, 30.4768, 1.29119, 1.59", "77.6035, 30.9349, 1.14122, 0.45", "79.4281, 31.1075, 1.0088, 0.45", "82.3338, 31.2959, 0.763215, 0.23", "84.0004, 31.3675, 0.622689, 1.14", "86.4213, 31.431, 0.46857, 0.23", "87.9996, 31.4623, 0.376999, 0.68", "90.9147, 31.5486, 0.236108, 0.23", "94.3069, 31.7287, 0.117287, 1.14", "98.2044, 32.1084, -0.00134762, 0.23", "100.61, 32.448, -0.0666252, 0.23", "101.927, 32.7109, -0.0908403, 1.59", "104.822, 33.4387, -0.137437, 0.23", "106.187, 33.8836, -0.160891, 0.23", "107.562, 34.4538, -0.204698, 0.68", "109.043, 35.1916, -0.328874, 0.68", "112.09, 36.7797, -0.722955, 0.23", "113.443, 37.4362, -0.939682, 0.23", "114.66, 37.9765, -1.16934, 1.82", "115.37, 38.2453, -1.30588, 1.82", "117.824, 38.999, -1.74743, 0.23", "119.892, 39.5313, -2.10369, 0.68", "122.974, 40.19, -2.58069, 0.23", "124.198, 40.4453, -2.73922, 0.91", "126.23, 40.8768, -2.97352, 0.23", "128.465, 41.4022, -3.20462, 1.14", "131.516, 42.1877, -3.4508, 0.23", "133.753, 42.8246, -3.65064, 1.14", "135.969, 43.5288, -3.8399, 0.23", "137.554, 44.0537, -3.97196, 0.91", "139.691, 44.8198, -4.15943, 0.23", "141.929, 45.6652, -4.35723, 1.36", "143.723, 46.3437, -4.51146, 0.23", "145.887, 47.1931, -4.68655, 0.91", "149.462, 48.6678, -4.96472, 0.23", "151.485, 49.5062, -5.10707, 1.14", "152.597, 49.9671, -5.18521, 0.23", "153.781, 50.4717, -5.26612, 1.14", "156.06, 51.4683, -5.37823, 0.23", "157.793, 52.3249, -5.50561, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "48.5013, 23.3585, 1.61581, 0.23", "50.347, 24.6395, 1.41007, 0.23", "51.3324, 25.3325, 1.31025, 0.91", "52.8687, 26.3666, 1.17637, 0.23", "54.4414, 27.3282, 1.0544, 0.68", "56.0863, 28.2025, 0.96575, 0.68", "58.8674, 29.6114, 0.8748, 0.23", "60.2361, 30.2602, 0.829599, 0.91", "61.7438, 30.9806, 0.795693, 0.91", "64.568, 32.3443, 0.762854, 0.23", "67.3017, 33.7286, 0.745645, 0.68", "69.9116, 35.0971, 0.689059, 0.23", "71.6549, 36.0572, 0.619293, 0.91", "73.5468, 37.1742, 0.506209, 0.91", "75.2423, 38.3142, 0.340857, 0.23", "77.3274, 39.9879, 0.0141184, 1.14", "79.2446, 41.7704, -0.3928, 0.23", "80.3217, 42.8911, -0.642864, 0.23", "81.1106, 43.8465, -0.802901, 0.23", "82.7861, 46.118, -1.09218, 0.91", "84.6292, 48.8486, -1.32253, 0.45", "85.2801, 49.9026, -1.36746, 0.45", "86.731, 52.4456, -1.4159, 1.59", "88.8116, 56.0478, -1.40123, 0.45", "89.5524, 57.2868, -1.3718, 0.68", "90.1344, 58.2247, -1.31649, 0.23", "91.2442, 59.8623, -1.21655, 0.91", "92.9652, 62.215, -1.13314, 0.23", "93.9814, 63.4837, -1.12005, 0.23", "94.5668, 64.1626, -1.12847, 1.36", "95.2636, 65.0112, -1.12924, 1.36", "96.6739, 66.7916, -1.11203, 0.23", "98.1621, 68.7475, -1.06046, 0.68", "99.4448, 70.4816, -0.988183, 0.23", "101.385, 73.1334, -0.859627, 1.14", "103.347, 75.8738, -0.718426, 0.23", "104.761, 77.9016, -0.599968, 0.91", "105.656, 79.2142, -0.502661, 1.59", "106.568, 80.5648, -0.406718, 0.91", "107.936, 82.6559, -0.256159, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-112.167, -94.164, 21.4891, 0.23", "-113.527, -94.7231, 23.1321, 0.23", "-113.956, -94.9128, 23.6324, 1.14", "-115.461, -95.5572, 25.3526, 0.23", "-116.034, -95.8179, 26.0071, 0.91", "-117.911, -96.7865, 28.0492, 0.23", "-118.84, -97.2992, 29.0709, 0.91", "-120.796, -98.4781, 31.1486, 0.23", "-122.029, -99.2421, 32.4598, 0.91", "-123.17, -99.9605, 33.6368, 0.23", "-124.575, -100.842, 35.1253, 1.14", "-126.463, -102.051, 37.1194, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-112.167, -94.164, 21.4891, 0.23", "-113.936, -97.8102, 21.183, 0.23", "-115.143, -100.392, 20.9057, 1.59", "-116.912, -104.267, 20.392, 0.23", "-118.135, -106.764, 19.9129, 1.36", "-119.14, -108.588, 19.491, 0.23", "-120.186, -110.255, 19.0623, 0.23", "-121.622, -111.943, 18.5199, 1.36", "-123.529, -113.645, 17.8319, 2.27", "-125.736, -115.158, 17.1215, 0.23", "-127.725, -116.178, 16.6164, 1.14", "-129.722, -116.955, 16.2168, 0.23", "-132.085, -117.659, 15.9044, 1.14", "-133.032, -117.818, 15.8636, 1.14", "-134.949, -117.966, 15.8891, 0.23", "-135.838, -117.974, 15.9263, 0.23", "-137.013, -117.801, 15.9769, 1.36", "-137.824, -117.491, 16.0469, 1.36", "-141.065, -115.804, 16.4543, 0.23", "-141.726, -115.419, 16.5511, 0.23", "-143.753, -114.103, 16.8627, 0.23", "-146.244, -112.433, 17.206, 1.14", "-148.141, -111.213, 17.4501, 0.23", "-151.15, -109.653, 17.827, 0.23", "-152.898, -109.06, 17.9814, 1.36", "-155.609, -108.292, 18.2122, 0.23", "-157.961, -107.801, 18.3804, 1.14", "-159.767, -107.543, 18.3764, 1.14", "-164.015, -107.243, 18.134, 0.23", "-167.663, -107.484, 17.8359, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.66282, -36.2004, 0.125381, 0.23", "-9.49626, -39.2166, 2.28329, 0.23", "-9.54662, -40.0183, 2.7907, 0.23", "-9.71511, -41.67, 3.82807, 0.23", "-9.84236, -42.9118, 4.5498, 1.14", "-10.0544, -44.8616, 5.60129, 0.23", "-10.2328, -46.4185, 6.40834, 1.14", "-10.5664, -48.8522, 7.4906, 0.23", "-10.8971, -51.3314, 8.55361, 0.23", "-11.1367, -53.3934, 9.39842, 1.36", "-11.662, -57.5067, 11.013, 0.23", "-11.8414, -58.7965, 11.478, 0.23", "-12.0783, -60.6342, 12.1104, 0.91", "-12.1772, -61.5487, 12.4085, 0.91", "-12.4336, -63.9913, 13.1597, 0.23", "-12.6324, -65.8999, 13.7657, 0.23", "-12.766, -68.0273, 14.4372, 0.68", "-12.8839, -72.0588, 15.7674, 0.23", "-12.8652, -73.2655, 16.198, 1.36", "-12.8201, -74.2812, 16.5755, 1.36", "-12.5927, -76.8628, 17.5428, 0.45", "-12.2675, -79.0213, 18.334, 1.14", "-11.7746, -81.4966, 19.2823, 0.23", "-11.3223, -83.3219, 19.962, 0.45", "-10.62, -86.0301, 20.9958, 0.23", "-10.0538, -88.1327, 21.7868, 0.23", "-9.55822, -89.9809, 22.5028, 0.91", "-8.99025, -92.6624, 23.5887, 0.23", "-8.49754, -95.3595, 24.6829, 0.91", "-8.27297, -96.7843, 25.2511, 0.23", "-7.99171, -98.8967, 26.1146, 1.14", "-7.88794, -101.473, 27.215, 0.23", "-7.99715, -103.638, 28.1156, 0.91", "-8.27021, -105.132, 28.7219, 0.23", "-8.91502, -107.897, 29.8678, 0.23", "-9.21659, -109.01, 30.3196, 0.91", "-10.4065, -112.731, 31.8236, 0.23", "-11.0399, -114.571, 32.5138, 1.14", "-12.5103, -118.458, 33.9943, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-9.66282, -36.2004, 0.125381, 1.59", "-9.76048, -37.5723, 0.131659, 1.59", "-9.91064, -39.6816, 0.141312, 2.27" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.91064, -39.6816, 0.141312, 0.23", "-9.55608, -43.6751, 1.21349, 0.23", "-9.2634, -46.477, 1.96358, 0.45", "-8.95811, -48.5236, 2.5209, 1.36", "-8.4421, -51.2201, 3.19344, 1.36", "-7.79403, -54.266, 3.91377, 0.91", "-7.0892, -57.3232, 4.59009, 1.14", "-6.64571, -59.1965, 4.9526, 1.14", "-5.49001, -63.8968, 5.75002, 0.91", "-4.71553, -66.9875, 6.20279, 1.14", "-4.21603, -69.0433, 6.46231, 1.14", "-3.62634, -71.5774, 6.74747, 0.23", "-2.97982, -74.722, 7.06637, 0.23", "-2.69488, -76.4512, 7.23389, 0.23", "-2.43862, -78.6232, 7.44597, 2.05", "-2.10873, -82.1024, 7.85376, 1.59", "-1.91435, -84.2828, 8.1254, 1.59", "-1.6974, -86.7283, 8.46431, 0.45", "-1.44879, -89.1505, 8.85086, 1.14", "-1.19507, -91.5827, 9.2749, 1.14", "-0.868835, -95.0467, 9.88298, 1.59", "-0.64237, -97.4696, 10.2766, 1.14", "-0.312776, -101.659, 10.8884, 0.68", "-0.148666, -103.995, 11.2016, 1.14", "0.0428693, -107.148, 11.592, 0.23", "0.183805, -110.102, 11.9302, 1.59", "0.228166, -112.712, 12.1942, 0.68", "0.233454, -114.65, 12.3772, 0.91", "0.210664, -117.462, 12.6297, 0.91", "0.18067, -121.675, 13.0188, 1.36", "0.198556, -125.894, 13.4741, 0.91", "0.334248, -131.592, 14.1951, 1.14", "0.421073, -134.399, 14.6075, 0.68", "0.527285, -137.173, 15.047, 1.14", "0.599593, -140.67, 15.5982, 0.23", "0.600081, -143.51, 16.0367, 0.68", "0.525879, -146.703, 16.5106, 0.45", "0.44655, -148.697, 16.7814, 2.05", "0.126126, -153.694, 17.3765, 0.91", "-0.33982, -159.536, 17.9929, 0.45", "-0.557877, -161.796, 18.1981, 0.91", "-0.881039, -164.636, 18.4046, 0.91", "-1.28234, -167.84, 18.5843, 0.23", "-1.48808, -169.595, 18.6693, 0.91", "-1.83208, -173.101, 18.8809, 0.45", "-2.07932, -176.299, 19.1535, 1.36", "-2.27619, -179.081, 19.4463, 0.68", "-2.35986, -180.279, 19.5953, 1.14", "-2.51504, -182.759, 19.9567, 0.23", "-2.5639, -184.865, 20.3137, 0.68", "-2.49599, -187.342, 20.7894, 0.23", "-2.39121, -189.085, 21.1436, 0.91", "-2.21196, -191.163, 21.5813, 0.91", "-1.7943, -195.968, 22.5483, 0.23", "-1.55427, -199.291, 23.1568, 1.36", "-1.264, -204.509, 24.0818, 0.23", "-1.15154, -207.013, 24.5093, 1.14", "-1.12091, -208.09, 24.69, 1.14", "-1.08434, -211.323, 25.2515, 0.23", "-1.12549, -214.227, 25.7603, 0.91", "-1.19438, -216.047, 26.0742, 1.82", "-1.28948, -217.774, 26.3916, 1.82", "-1.49479, -222.274, 27.2787, 0.45", "-1.57997, -224.517, 27.7608, 1.14", "-1.60846, -225.917, 28.0996, 1.14", "-1.61696, -228.305, 28.711, 0.23", "-1.56033, -231.867, 29.6417, 0.23", "-1.51468, -233.259, 30.0165, 1.36", "-1.40912, -235.079, 30.4972, 1.36", "-1.1726, -238.201, 31.2596, 0.23", "-0.9385, -240.938, 31.9271, 0.91", "-0.739353, -242.838, 32.3892, 0.91", "-0.26452, -246.59, 33.282, 0.23", "0.0765064, -249.138, 33.8708, 0.45", "0.506015, -252.208, 34.5612, 0.91", "0.930476, -255.027, 35.2022, 0.45", "1.22191, -257.23, 35.6957, 1.14", "1.38914, -258.964, 36.085, 1.14", "1.59278, -261.761, 36.743, 0.23", "1.64583, -262.841, 37.0047, 1.14", "1.73601, -264.954, 37.5295, 1.14", "1.92105, -269.477, 38.6477, 0.23", "2.07501, -273.35, 39.6274, 0.68", "2.1819, -275.453, 40.1684, 1.59", "2.286, -276.803, 40.5284, 2.05", "2.86541, -281.645, 41.8577, 0.23", "3.15796, -283.337, 42.3564, 1.14", "3.47489, -284.596, 42.7598, 1.59", "4.44819, -287.491, 43.7294, 0.45", "5.36037, -289.914, 44.6119, 0.91", "6.51904, -292.793, 45.7771, 0.23", "7.5328, -295.153, 46.8127, 1.14", "8.16788, -296.526, 47.4628, 1.14", "10.2939, -300.881, 49.6322, 0.23", "11.6717, -303.492, 51.004, 0.23", "12.6263, -305.253, 51.935, 0.68", "13.1639, -306.222, 52.4377, 0.68", "14.4231, -308.569, 53.5723, 0.23", "15.7572, -311.067, 54.751, 1.36", "17.4485, -314.222, 56.1567, 0.45", "18.6606, -316.411, 57.0279, 1.14", "19.5299, -318.012, 57.6054, 0.23", "20.6074, -320.14, 58.3331, 2.5" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.91064, -39.6816, 0.141312, 0.91", "-12.2892, -43.2785, 0.81238, 0.91", "-14.122, -46.0502, 1.32948, 0.91", "-15.7526, -48.516, 1.78953, 0.68", "-16.7145, -49.9706, 2.06091, 1.36", "-18.1267, -52.1062, 2.45933, 1.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "20.6074, -320.14, 58.3331, 0.23", "23.3225, -320.24, 58.4485, 0.23", "25.213, -320.312, 58.5508, 0.91", "27.7518, -320.428, 58.7145, 0.23", "30.0142, -320.532, 58.8603, 1.14", "32.4937, -320.645, 59.0202, 0.23", "33.1608, -320.675, 59.0632, 0.68", "34.3877, -320.619, 59.1837, 0.23", "34.8972, -320.572, 59.2249, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "20.6074, -320.14, 58.3331, 0.23", "19.6181, -323.403, 58.528, 0.23", "19.3355, -324.421, 58.6154, 0.91", "18.9778, -325.75, 58.7756, 0.45", "18.7649, -326.526, 58.8855, 1.36", "18.2369, -328.278, 59.1238, 0.23", "17.9056, -329.348, 59.2843, 1.14", "17.0413, -332.092, 59.7585, 0.23", "16.4111, -333.901, 60.1206, 0.23", "15.8487, -335.492, 60.472, 1.59", "15.142, -337.654, 60.9586, 0.91", "14.549, -339.733, 61.4384, 0.23", "14.1584, -341.395, 61.8663, 1.14", "13.721, -343.894, 62.5606, 0.23", "13.5196, -345.649, 63.061, 0.91", "13.3865, -347.892, 63.7142, 0.23", "13.3567, -349.696, 64.2356, 1.14", "13.3737, -351.777, 64.7768, 0.23", "13.4341, -353.549, 65.2031, 1.36", "13.4582, -354.057, 65.309, 1.36", "13.5845, -357.458, 65.9167, 0.23", "13.6289, -359.303, 66.1336, 0.91", "13.6859, -361.46, 66.2287, 0.23", "13.7687, -363.284, 66.194, 1.36", "13.8735, -364.317, 66.1331, 1.36", "14.5082, -367.926, 65.7856, 0.23", "15.2075, -370.614, 65.4242, 1.14", "15.8474, -372.543, 65.1041, 0.23", "16.3041, -373.781, 64.8658, 1.36", "17.3387, -376.29, 64.3139, 0.23", "18.2883, -378.274, 63.8436, 1.82", "18.6438, -378.836, 63.7038, 1.82", "19.2716, -379.621, 63.5685, 0.45" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-18.1267, -52.1062, 2.45933, 0.68", "-19.6367, -52.4213, 1.62205, 0.68", "-21.1603, -52.6494, 0.697479, 1.14", "-22.8677, -52.9215, -0.357578, 0.23", "-23.941, -53.1432, -1.03335, 0.23", "-25.033, -53.4835, -1.67168, 1.14", "-25.9091, -53.7893, -2.11798, 0.23", "-26.9347, -54.142, -2.55547, 0.45", "-27.6681, -54.4071, -2.81825, 0.45", "-28.7452, -54.7827, -3.1747, 1.14", "-31.1099, -55.5809, -3.92965, 0.23", "-32.8546, -56.0853, -4.47502, 0.91", "-33.9783, -56.2835, -4.83426, 0.91", "-35.1446, -56.2836, -5.24789, 0.45", "-36.4346, -56.0598, -5.78969, 0.45", "-37.3855, -55.6658, -6.28934, 0.45", "-38.2244, -54.9685, -6.93052, 0.91", "-39.1107, -53.7712, -7.94297, 0.45", "-39.544, -52.8914, -8.59139, 0.45", "-39.7853, -52.0868, -9.08464, 0.45", "-39.9897, -51.1871, -9.46589, 0.45", "-39.4643, -51.9095, -9.52201, 1.36", "-38.6582, -52.5575, -9.81714, 1.36", "-37.7745, -53.3515, -10.1069, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-18.1267, -52.1062, 2.45933, 0.23", "-18.3801, -54.1071, 2.86079, 0.23", "-18.4753, -55.0356, 3.04986, 0.91", "-18.5613, -56.2876, 3.31668, 0.91", "-18.6262, -57.752, 3.62127, 0.91", "-18.6527, -59.388, 3.96357, 0.23", "-18.6369, -61.2501, 4.3602, 0.68", "-18.5613, -63.2495, 4.80134, 0.45", "-18.4309, -65.4796, 5.29923, 0.91", "-18.2971, -67.268, 5.69302, 0.68", "-18.1259, -69.3146, 6.12143, 1.59", "-17.7904, -73.5509, 7.00216, 0.45", "-17.6415, -75.3563, 7.36763, 0.45", "-17.5448, -76.5767, 7.60696, 1.59", "-17.4852, -77.5871, 7.79192, 1.59", "-17.4321, -80.2086, 8.22006, 0.23", "-17.4818, -82.0332, 8.48267, 0.68", "-17.6746, -84.6616, 8.82167, 0.23", "-17.8497, -86.267, 9.01511, 1.36", "-18.2236, -88.9685, 9.31858, 0.45", "-18.8855, -92.7346, 9.71272, 0.45", "-19.2709, -94.5378, 9.89012, 0.45", "-19.6073, -95.8965, 10.0075, 1.36", "-20.0394, -97.3397, 10.1283, 1.59", "-20.513, -98.7242, 10.2511, 0.23", "-20.9797, -99.9526, 10.3704, 0.45", "-21.9057, -102.324, 10.6183, 0.23", "-22.2384, -103.221, 10.7295, 0.23", "-22.8361, -104.83, 10.9805, 1.14", "-23.8236, -107.441, 11.4652, 0.23", "-24.4148, -108.985, 11.7856, 1.14", "-25.1295, -110.879, 12.2378, 0.23", "-25.7724, -112.555, 12.6764, 0.45", "-26.3444, -114.114, 13.1529, 0.23", "-26.8119, -115.371, 13.5808, 1.14", "-27.046, -115.991, 13.8154, 1.14", "-27.6356, -117.484, 14.405, 0.23", "-27.9816, -118.306, 14.7439, 0.91", "-28.7232, -120.087, 15.4393, 0.23", "-29.1307, -121.235, 15.8951, 1.14", "-29.5746, -122.687, 16.4721, 0.23", "-29.8139, -123.726, 16.8564, 0.91", "-29.8947, -124.295, 17.0422, 0.23", "-29.9519, -125.098, 17.2916, 0.68", "-30.0433, -127.084, 17.8411, 0.23", "-30.0798, -128.27, 18.1669, 0.68", "-30.1718, -130.074, 18.6278, 0.23", "-30.2684, -131.301, 18.9653, 0.91", "-30.6741, -134.444, 19.8169, 0.23", "-30.8573, -135.688, 20.1543, 0.68", "-31.0839, -136.954, 20.4891, 0.23", "-31.3681, -138.264, 20.8584, 0.91", "-32.1116, -140.917, 21.6539, 0.23", "-32.7178, -142.738, 22.2146, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "19.2716, -379.621, 63.5685, 0.23", "20.01, -380.77, 63.6162, 0.23", "20.9093, -382.108, 63.6163, 0.91", "21.7729, -383.28, 63.5914, 0.23", "22.7456, -384.643, 63.5221, 0.91", "23.3941, -385.57, 63.4649, 0.23", "24.2666, -386.839, 63.3465, 0.68", "24.9692, -387.889, 63.1888, 0.23", "25.7858, -389.084, 62.9312, 0.91", "26.6195, -390.24, 62.5893, 0.23", "27.3007, -391.194, 62.2425, 0.91", "28.2337, -392.621, 61.6963, 0.23", "29.0326, -393.897, 61.1792, 1.14", "30.1217, -395.743, 60.4208, 0.23", "30.9119, -397.125, 59.8174, 0.68", "31.6771, -398.389, 59.2345, 0.23", "32.5388, -399.895, 58.4972, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.2716, -379.621, 63.5685, 0.23", "19.5252, -380.259, 63.3769, 0.23", "19.8384, -381.047, 63.1403, 0.68", "19.9908, -381.43, 63.0252, 0.23", "20.3918, -382.438, 62.7223, 0.91" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_3", "dend_0", "axon_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "axon_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_SBC_61a753bff1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_3
create dend_21
public dend_21
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_4
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_24, dend_3, dend_0, axon_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, axon_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.49999929751125366)
    connect dend_3(0), soma_0(0.49999929751125366)
    connect dend_0(0), soma_0(0.49999929751125366)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.0539, -10.2039, 0.0, 4.14336 ) }
    soma_0 { pt3dadd( -1.01121, -9.20625, 0.0, 7.24872 ) }
    soma_0 { pt3dadd( -0.968511, -8.20857, 0.0, 9.44401 ) }
    soma_0 { pt3dadd( -0.925815, -7.2109, 0.0, 10.5422 ) }
    soma_0 { pt3dadd( -0.88312, -6.21322, 0.0, 11.4092 ) }
    soma_0 { pt3dadd( -0.840424, -5.21554, 0.0, 11.9642 ) }
    soma_0 { pt3dadd( -0.797728, -4.21787, 0.0, 12.4342 ) }
    soma_0 { pt3dadd( -0.755032, -3.22019, 0.0, 12.6614 ) }
    soma_0 { pt3dadd( -0.712337, -2.22251, 0.0, 12.6364 ) }
    soma_0 { pt3dadd( -0.669641, -1.22484, 0.0, 12.5104 ) }
    soma_0 { pt3dadd( -0.626945, -0.227159, 0.0, 12.2671 ) }
    soma_0 { pt3dadd( -0.584249, 0.770517, 0.0, 12.0239 ) }
    soma_0 { pt3dadd( -0.541554, 1.76819, 0.0, 11.4645 ) }
    soma_0 { pt3dadd( -0.498858, 2.76587, 0.0, 10.6882 ) }
    soma_0 { pt3dadd( -0.456162, 3.76355, 0.0, 9.91399 ) }
    soma_0 { pt3dadd( -0.413466, 4.76122, 0.0, 9.47101 ) }
    soma_0 { pt3dadd( -0.370771, 5.7589, 0.0, 9.20688 ) }
    soma_0 { pt3dadd( -0.328075, 6.75658, 0.0, 8.75449 ) }
    soma_0 { pt3dadd( -0.285379, 7.75425, 0.0, 8.25522 ) }
    soma_0 { pt3dadd( -0.242683, 8.75193, 0.0, 6.57349 ) }
    soma_0 { pt3dadd( -0.199988, 9.74961, 0.0, 3.81 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.284736, 6.97344, 0.16, 6.82 ) }
    dend_24 { pt3dadd( 0.98987, 9.26469, 0.671045, 6.82 ) }
    dend_24 { pt3dadd( 2.11021, 12.905, 1.48301, 6.59 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.66527, -9.39505, 1.27, 5.68 ) }
    dend_3 { pt3dadd( -3.58606, -12.3027, 0.477974, 3.64 ) }
    dend_3 { pt3dadd( -4.48116, -15.1292, -0.291952, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.30527, 6.92594, 0.0100002, 1.59 ) }
    dend_0 { pt3dadd( -4.89756, 7.46263, -0.0214756, 1.59 ) }
    dend_0 { pt3dadd( -7.40025, 8.30618, -0.070948, 1.36 ) }
    dend_0 { pt3dadd( -8.71802, 8.75033, -0.0969972, 1.36 ) }
    dend_0 { pt3dadd( -11.7805, 9.78257, -0.157536, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.199988, 9.74961, 0.0, 0.483248 ) }
    axon_0 { pt3dadd( 0.441352, 24.7359, 0.0, 0.483248 ) }
    axon_0 { pt3dadd( 1.08269, 39.7222, 0.0, 0.483248 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 2.11021, 12.905, 1.48301, 1.14 ) }
    dend_34 { pt3dadd( -0.228587, 17.4641, 1.32084, 1.14 ) }
    dend_34 { pt3dadd( -1.27778, 19.5094, 1.24809, 1.14 ) }
    dend_34 { pt3dadd( -1.95653, 20.8325, 1.20103, 1.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.11021, 12.905, 1.48301, 0.91 ) }
    dend_25 { pt3dadd( 6.22947, 14.0111, 0.708394, 0.91 ) }
    dend_25 { pt3dadd( 8.14602, 14.5257, 0.347992, 0.91 ) }
    // Section: dend_21, id: dend_21, parent: dend_3 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.48116, -15.1292, -0.291952, 0.91 ) }
    dend_21 { pt3dadd( -6.47113, -15.4499, -1.1633, 0.91 ) }
    dend_21 { pt3dadd( -8.95183, -15.55, -2.12733, 0.91 ) }
    dend_21 { pt3dadd( -11.201, -15.5271, -2.98504, 1.14 ) }
    dend_21 { pt3dadd( -12.8337, -15.5013, -3.6316, 0.91 ) }
    dend_21 { pt3dadd( -15.8105, -15.5041, -4.79582, 0.68 ) }
    dend_21 { pt3dadd( -17.3049, -15.5549, -5.3694, 0.91 ) }
    dend_21 { pt3dadd( -20.1385, -15.6369, -6.42189, 1.36 ) }
    dend_21 { pt3dadd( -22.7794, -15.7359, -7.32215, 0.68 ) }
    dend_21 { pt3dadd( -24.6129, -15.8873, -7.91473, 0.68 ) }
    dend_21 { pt3dadd( -26.9575, -16.2326, -8.63038, 1.59 ) }
    dend_21 { pt3dadd( -30.0466, -16.862, -9.51705, 1.14 ) }
    dend_21 { pt3dadd( -31.4059, -17.1611, -9.88092, 0.68 ) }
    dend_21 { pt3dadd( -34.2531, -17.8084, -10.63, 1.14 ) }
    dend_21 { pt3dadd( -36.5301, -18.3284, -11.2242, 0.23 ) }
    dend_21 { pt3dadd( -38.3521, -18.7466, -11.7097, 1.14 ) }
    dend_21 { pt3dadd( -40.6034, -19.3088, -12.3608, 0.91 ) }
    dend_21 { pt3dadd( -44.3887, -20.3947, -13.5173, 0.23 ) }
    dend_21 { pt3dadd( -46.2334, -21.0492, -14.1151, 0.91 ) }
    dend_21 { pt3dadd( -47.8453, -21.7925, -14.6809, 0.91 ) }
    dend_21 { pt3dadd( -48.9012, -22.4744, -15.0731, 1.14 ) }
    dend_21 { pt3dadd( -50.3176, -23.9021, -15.5987, 0.45 ) }
    dend_21 { pt3dadd( -51.1201, -25.128, -15.8796, 0.45 ) }
    dend_21 { pt3dadd( -51.8737, -26.6498, -16.1174, 0.91 ) }
    dend_21 { pt3dadd( -52.5441, -28.2398, -16.2858, 0.45 ) }
    dend_21 { pt3dadd( -53.1498, -29.8625, -16.3957, 1.59 ) }
    dend_21 { pt3dadd( -54.2151, -33.0517, -16.5451, 0.45 ) }
    dend_21 { pt3dadd( -54.9857, -35.6898, -16.6095, 1.82 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.48116, -15.1292, -0.291952, 2.95 ) }
    dend_4 { pt3dadd( -5.13702, -19.1301, 0.00514323, 2.95 ) }
    dend_4 { pt3dadd( -5.80578, -23.2097, 0.308077, 2.95 ) }
    dend_4 { pt3dadd( -6.09095, -24.9493, 0.437256, 3.41 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -11.7805, 9.78257, -0.157536, 1.14 ) }
    dend_2 { pt3dadd( -13.251, 8.49839, -0.990531, 1.14 ) }
    dend_2 { pt3dadd( -14.2155, 7.49911, -1.62958, 0.45 ) }
    dend_2 { pt3dadd( -15.096, 6.52824, -2.24027, 1.59 ) }
    dend_2 { pt3dadd( -16.8746, 4.61813, -3.45871, 0.45 ) }
    dend_2 { pt3dadd( -18.1893, 3.27388, -4.3905, 0.91 ) }
    dend_2 { pt3dadd( -18.826, 2.66355, -4.84535, 1.59 ) }
    dend_2 { pt3dadd( -20.351, 1.13983, -5.98207, 0.23 ) }
    dend_2 { pt3dadd( -20.9717, 0.582561, -6.47783, 0.23 ) }
    dend_2 { pt3dadd( -21.6311, 0.189771, -7.07223, 0.23 ) }
    dend_2 { pt3dadd( -22.9217, 0.237979, -8.12123, 0.68 ) }
    dend_2 { pt3dadd( -24.2407, 0.487351, -8.96992, 0.68 ) }
    dend_2 { pt3dadd( -25.256, 0.605868, -9.51884, 0.68 ) }
    dend_2 { pt3dadd( -26.9474, 0.646464, -10.2815, 1.59 ) }
    dend_2 { pt3dadd( -28.2915, 0.492895, -10.8239, 1.59 ) }
    dend_2 { pt3dadd( -30.2394, 0.108947, -11.5206, 0.23 ) }
    dend_2 { pt3dadd( -32.0143, -0.34556, -12.0874, 0.91 ) }
    dend_2 { pt3dadd( -33.7019, -0.791965, -12.5775, 0.91 ) }
    dend_2 { pt3dadd( -35.1574, -1.1525, -12.9394, 0.91 ) }
    dend_2 { pt3dadd( -37.0234, -1.54904, -13.3656, 0.23 ) }
    dend_2 { pt3dadd( -39.6532, -2.02252, -13.969, 0.68 ) }
    dend_2 { pt3dadd( -41.1467, -2.22523, -14.3137, 0.68 ) }
    dend_2 { pt3dadd( -43.1273, -2.41197, -14.7838, 0.23 ) }
    dend_2 { pt3dadd( -44.9524, -2.51841, -15.2295, 0.45 ) }
    dend_2 { pt3dadd( -47.2426, -2.60972, -15.8061, 0.45 ) }
    dend_2 { pt3dadd( -48.701, -2.64096, -16.1776, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( -50.1593, -2.65979, -16.5487, 0.23 ) }
    dend_2 { pt3dadd( -52.2618, -2.66788, -17.0777, 1.36 ) }
    dend_2 { pt3dadd( -54.099, -2.696, -17.5495, 0.45 ) }
    dend_2 { pt3dadd( -56.5472, -2.7401, -18.1726, 0.91 ) }
    dend_2 { pt3dadd( -58.0615, -2.81237, -18.5385, 0.91 ) }
    dend_2 { pt3dadd( -59.3035, -2.8845, -18.8301, 1.36 ) }
    dend_2 { pt3dadd( -61.1369, -3.00564, -19.2443, 0.23 ) }
    dend_2 { pt3dadd( -63.2363, -3.14729, -19.6988, 0.23 ) }
    dend_2 { pt3dadd( -64.2885, -3.23359, -19.935, 0.91 ) }
    dend_2 { pt3dadd( -67.0911, -3.61562, -20.5995, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -11.7805, 9.78257, -0.157536, 0.23 ) }
    dend_1 { pt3dadd( -13.8557, 10.2234, 0.336464, 0.23 ) }
    dend_1 { pt3dadd( -15.9901, 10.6679, 0.903708, 0.68 ) }
    dend_1 { pt3dadd( -17.9326, 11.0635, 1.5156, 0.23 ) }
    dend_1 { pt3dadd( -18.7849, 11.2289, 1.80034, 0.45 ) }
    dend_1 { pt3dadd( -20.5664, 11.5808, 2.46573, 0.91 ) }
    dend_1 { pt3dadd( -22.4237, 11.9746, 3.19457, 0.23 ) }
    dend_1 { pt3dadd( -23.2337, 12.1353, 3.57939, 0.68 ) }
    dend_1 { pt3dadd( -24.3602, 12.447, 4.26144, 0.23 ) }
    dend_1 { pt3dadd( -24.9331, 12.6508, 4.68356, 0.68 ) }
    dend_1 { pt3dadd( -26.2032, 13.1832, 5.66982, 0.23 ) }
    dend_1 { pt3dadd( -26.8663, 13.4577, 6.18175, 0.68 ) }
    dend_1 { pt3dadd( -28.2852, 13.9603, 7.24162, 0.23 ) }
    dend_1 { pt3dadd( -29.7508, 14.3758, 8.25054, 0.68 ) }
    dend_1 { pt3dadd( -32.3481, 14.9892, 9.89601, 0.23 ) }
    dend_1 { pt3dadd( -33.5849, 15.2274, 10.5956, 0.45 ) }
    dend_1 { pt3dadd( -35.6809, 15.4994, 11.5564, 0.23 ) }
    dend_1 { pt3dadd( -37.1119, 15.6151, 12.0441, 0.23 ) }
    dend_1 { pt3dadd( -38.482, 15.7338, 12.3176, 0.23 ) }
    dend_1 { pt3dadd( -39.7398, 15.8854, 12.4498, 0.23 ) }
    dend_1 { pt3dadd( -41.0869, 16.1916, 12.5074, 0.23 ) }
    dend_1 { pt3dadd( -42.6282, 16.7154, 12.5527, 0.23 ) }
    dend_1 { pt3dadd( -44.8953, 17.7293, 12.6144, 0.45 ) }
    dend_1 { pt3dadd( -47.3299, 18.9568, 12.7186, 0.23 ) }
    dend_1 { pt3dadd( -48.7163, 19.6693, 12.7987, 0.68 ) }
    dend_1 { pt3dadd( -50.8351, 20.6797, 12.939, 0.23 ) }
    dend_1 { pt3dadd( -53.0478, 21.6929, 13.1255, 0.23 ) }
    dend_1 { pt3dadd( -55.3766, 22.7233, 13.3147, 0.23 ) }
    dend_1 { pt3dadd( -57.6607, 23.6949, 13.5057, 0.23 ) }
    dend_1 { pt3dadd( -60.1437, 24.6336, 13.7009, 0.23 ) }
    dend_1 { pt3dadd( -63.1511, 25.6231, 13.8931, 0.45 ) }
    dend_1 { pt3dadd( -63.9787, 25.8542, 13.9206, 0.23 ) }
    dend_1 { pt3dadd( -65.2589, 26.1513, 13.9479, 0.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.08269, 39.7222, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 1.72403, 54.7085, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 2.36537, 69.6947, 0.0, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.95653, 20.8325, 1.20103, 0.23 ) }
    dend_40 { pt3dadd( -2.30322, 20.5278, 3.19205, 0.23 ) }
    dend_40 { pt3dadd( -2.14658, 19.7414, 4.23506, 0.91 ) }
    dend_40 { pt3dadd( -1.83694, 18.065, 5.77948, 0.23 ) }
    dend_40 { pt3dadd( -1.80664, 16.7372, 7.1215, 0.23 ) }
    dend_40 { pt3dadd( -1.98941, 15.8222, 8.52915, 0.23 ) }
    dend_40 { pt3dadd( -2.2413, 15.2762, 9.64594, 0.91 ) }
    dend_40 { pt3dadd( -2.9393, 14.4809, 11.1184, 0.23 ) }
    dend_40 { pt3dadd( -3.39332, 14.2059, 11.7472, 0.23 ) }
    dend_40 { pt3dadd( -4.65861, 13.5876, 13.3246, 0.91 ) }
    dend_40 { pt3dadd( -6.19584, 13.0039, 15.2026, 0.23 ) }
    dend_40 { pt3dadd( -7.96619, 12.5013, 17.1647, 0.23 ) }
    dend_40 { pt3dadd( -9.88287, 12.1271, 19.2182, 0.68 ) }
    dend_40 { pt3dadd( -13.1031, 11.646, 22.5445, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.95653, 20.8325, 1.20103, 0.68 ) }
    dend_35 { pt3dadd( -1.74196, 23.7277, 1.11508, 0.68 ) }
    dend_35 { pt3dadd( -1.5861, 25.7608, 1.10306, 0.68 ) }
    dend_35 { pt3dadd( -1.50768, 26.9138, 1.11524, 1.36 ) }
    dend_35 { pt3dadd( -1.28144, 30.1394, 1.17589, 0.68 ) }
    dend_35 { pt3dadd( -1.21817, 31.3257, 1.19232, 0.68 ) }
    dend_35 { pt3dadd( -1.1825, 33.7592, 1.22146, 1.59 ) }
    dend_35 { pt3dadd( -1.20209, 34.9135, 1.27046, 1.59 ) }
    dend_35 { pt3dadd( -1.39205, 37.8224, 1.49857, 0.23 ) }
    dend_35 { pt3dadd( -1.6246, 39.3201, 1.66048, 0.23 ) }
    dend_35 { pt3dadd( -2.08073, 41.1048, 1.89982, 1.14 ) }
    dend_35 { pt3dadd( -2.69874, 43.1018, 2.19218, 0.91 ) }
    dend_35 { pt3dadd( -3.20411, 44.5339, 2.41003, 0.91 ) }
    dend_35 { pt3dadd( -3.8496, 46.3129, 2.69426, 1.36 ) }
    dend_35 { pt3dadd( -4.58254, 48.1614, 3.02592, 0.68 ) }
    dend_35 { pt3dadd( -5.34369, 50.0297, 3.38738, 1.14 ) }
    dend_35 { pt3dadd( -6.06665, 51.929, 3.77979, 0.45 ) }
    dend_35 { pt3dadd( -6.51479, 53.2849, 4.03096, 1.59 ) }
    dend_35 { pt3dadd( -7.10002, 55.2262, 4.27936, 2.27 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 8.14602, 14.5257, 0.347992, 0.91 ) }
    dend_33 { pt3dadd( 8.28378, 14.5691, -0.38887, 0.91 ) }
    dend_33 { pt3dadd( 8.46887, 14.4311, -1.48509, 0.91 ) }
    dend_33 { pt3dadd( 8.84526, 14.0886, -3.16803, 0.68 ) }
    dend_33 { pt3dadd( 9.04293, 13.8901, -3.90706, 0.68 ) }
    dend_33 { pt3dadd( 9.26937, 13.6267, -4.65637, 1.14 ) }
    dend_33 { pt3dadd( 9.65099, 13.1184, -5.78979, 0.68 ) }
    dend_33 { pt3dadd( 10.1171, 12.3305, -6.99253, 0.23 ) }
    dend_33 { pt3dadd( 10.3568, 11.7728, -7.55719, 0.23 ) }
    dend_33 { pt3dadd( 10.4818, 11.3879, -7.84345, 0.23 ) }
    dend_33 { pt3dadd( 10.6691, 10.6203, -8.32332, 1.14 ) }
    dend_33 { pt3dadd( 10.8566, 9.86096, -8.76093, 1.82 ) }
    dend_33 { pt3dadd( 11.0472, 9.03263, -9.17879, 0.68 ) }
    dend_33 { pt3dadd( 11.2036, 7.96743, -9.61113, 1.14 ) }
    dend_33 { pt3dadd( 11.2567, 7.12958, -9.93492, 0.45 ) }
    dend_33 { pt3dadd( 11.2686, 6.44476, -10.1914, 0.45 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 8.14602, 14.5257, 0.347992, 1.14 ) }
    dend_26 { pt3dadd( 9.6278, 14.6502, 0.273249, 1.14 ) }
    dend_26 { pt3dadd( 10.4614, 14.7201, 0.231203, 1.59 ) }
    dend_26 { pt3dadd( 11.9545, 14.8455, 0.15589, 1.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -54.9857, -35.6898, -16.6095, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -57.3422, -36.613, -16.5617, 0.23 ) }
    dend_23 { pt3dadd( -58.967, -37.3658, -16.5695, 0.68 ) }
    dend_23 { pt3dadd( -60.9892, -38.4541, -16.5841, 0.23 ) }
    dend_23 { pt3dadd( -61.8318, -38.9635, -16.5936, 0.23 ) }
    dend_23 { pt3dadd( -63.6212, -40.1223, -16.6272, 0.23 ) }
    dend_23 { pt3dadd( -65.4885, -41.4203, -16.6797, 0.91 ) }
    dend_23 { pt3dadd( -66.7528, -42.4157, -16.7469, 0.23 ) }
    dend_23 { pt3dadd( -67.9263, -43.44, -16.8105, 0.91 ) }
    dend_23 { pt3dadd( -68.9152, -44.324, -16.8557, 0.23 ) }
    dend_23 { pt3dadd( -70.1474, -45.3894, -16.904, 1.59 ) }
    dend_23 { pt3dadd( -71.9255, -46.816, -16.9714, 0.23 ) }
    dend_23 { pt3dadd( -73.0939, -47.6702, -17.0084, 0.23 ) }
    dend_23 { pt3dadd( -75.273, -49.0773, -17.084, 0.23 ) }
    dend_23 { pt3dadd( -76.5578, -49.8077, -17.1381, 1.59 ) }
    dend_23 { pt3dadd( -77.3533, -50.2164, -17.1728, 0.23 ) }
    dend_23 { pt3dadd( -79.0706, -51.0043, -17.2598, 0.68 ) }
    dend_23 { pt3dadd( -80.9224, -51.7624, -17.3955, 0.23 ) }
    dend_23 { pt3dadd( -82.2782, -52.2988, -17.5601, 1.14 ) }
    dend_23 { pt3dadd( -82.8519, -52.5333, -17.6564, 1.14 ) }
    dend_23 { pt3dadd( -83.9025, -52.9955, -17.8675, 0.23 ) }
    dend_23 { pt3dadd( -85.5858, -53.8104, -18.2, 0.68 ) }
    dend_23 { pt3dadd( -87.2713, -54.6918, -18.5282, 0.23 ) }
    dend_23 { pt3dadd( -89.2865, -55.7701, -18.8494, 1.14 ) }
    dend_23 { pt3dadd( -91.8855, -57.2098, -19.1766, 0.23 ) }
    dend_23 { pt3dadd( -93.3916, -58.0729, -19.3134, 0.91 ) }
    dend_23 { pt3dadd( -96.278, -59.8018, -19.4935, 0.23 ) }
    dend_23 { pt3dadd( -97.1049, -60.3324, -19.5218, 0.91 ) }
    dend_23 { pt3dadd( -100.108, -62.3763, -19.5252, 0.23 ) }
    dend_23 { pt3dadd( -102.518, -64.1369, -19.4043, 1.14 ) }
    dend_23 { pt3dadd( -104.623, -65.7112, -19.2461, 0.45 ) }
    dend_23 { pt3dadd( -106.03, -66.81, -19.1341, 1.14 ) }
    dend_23 { pt3dadd( -107.14, -67.7194, -19.0579, 1.14 ) }
    dend_23 { pt3dadd( -108.487, -68.91, -18.9604, 0.23 ) }
    dend_23 { pt3dadd( -109.406, -69.9356, -18.9029, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -54.9857, -35.6898, -16.6095, 0.45 ) }
    dend_22 { pt3dadd( -57.3618, -38.3987, -17.381, 0.45 ) }
    dend_22 { pt3dadd( -59.0579, -40.3323, -17.9317, 1.14 ) }
    dend_22 { pt3dadd( -60.1205, -41.5437, -18.2768, 0.23 ) }
    dend_22 { pt3dadd( -61.5166, -43.1352, -18.73, 1.36 ) }
    dend_22 { pt3dadd( -62.9307, -44.7474, -19.1892, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_4 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.09095, -24.9493, 0.437256, 0.23 ) }
    dend_20 { pt3dadd( -5.46727, -26.4477, 0.307441, 0.23 ) }
    dend_20 { pt3dadd( -4.7419, -28.237, 0.133964, 0.23 ) }
    dend_20 { pt3dadd( -3.95501, -30.1109, -0.0517381, 1.14 ) }
    dend_20 { pt3dadd( -3.1367, -31.9796, -0.248553, 0.23 ) }
    dend_20 { pt3dadd( -2.54965, -33.2792, -0.396753, 0.91 ) }
    dend_20 { pt3dadd( -2.09768, -34.2694, -0.517119, 0.91 ) }
    dend_20 { pt3dadd( -1.02225, -36.6744, -0.827103, 0.23 ) }
    dend_20 { pt3dadd( -0.218335, -38.4353, -1.06913, 1.14 ) }
    dend_20 { pt3dadd( 0.332452, -39.6401, -1.24607, 1.14 ) }
    dend_20 { pt3dadd( 1.32156, -41.8562, -1.59258, 0.45 ) }
    dend_20 { pt3dadd( 2.27218, -44.0069, -1.95135, 0.45 ) }
    dend_20 { pt3dadd( 2.74646, -45.1337, -2.13299, 0.91 ) }
    dend_20 { pt3dadd( 3.53828, -47.0579, -2.44104, 0.23 ) }
    dend_20 { pt3dadd( 4.2613, -48.8945, -2.70107, 0.23 ) }
    dend_20 { pt3dadd( 5.08429, -51.0447, -2.96345, 0.68 ) }
    dend_20 { pt3dadd( 6.0437, -53.5295, -3.23638, 0.23 ) }
    dend_20 { pt3dadd( 6.69306, -55.1737, -3.3887, 0.91 ) }
    dend_20 { pt3dadd( 7.61, -57.4478, -3.53744, 1.14 ) }
    dend_20 { pt3dadd( 9.1803, -61.2892, -3.61298, 0.23 ) }
    dend_20 { pt3dadd( 9.69331, -62.5296, -3.57647, 0.23 ) }
    dend_20 { pt3dadd( 10.4151, -64.3197, -3.44921, 0.68 ) }
    dend_20 { pt3dadd( 11.3045, -66.5839, -3.20496, 0.23 ) }
    dend_20 { pt3dadd( 12.413, -69.4109, -2.7964, 1.36 ) }
    dend_20 { pt3dadd( 13.1908, -71.4239, -2.44253, 0.68 ) }
    dend_20 { pt3dadd( 14.1151, -73.968, -1.97702, 0.23 ) }
    dend_20 { pt3dadd( 14.3849, -74.7722, -1.83294, 0.91 ) }
    dend_20 { pt3dadd( 15.1299, -77.1217, -1.41895, 0.23 ) }
    dend_20 { pt3dadd( 15.6096, -78.7057, -1.17225, 0.91 ) }
    dend_20 { pt3dadd( 16.2722, -80.9676, -0.897347, 1.14 ) }
    dend_20 { pt3dadd( 17.068, -83.6983, -0.652674, 0.23 ) }
    dend_20 { pt3dadd( 17.4657, -85.0699, -0.548221, 0.91 ) }
    dend_20 { pt3dadd( 18.1169, -87.3062, -0.397218, 0.23 ) }
    dend_20 { pt3dadd( 18.3619, -88.1178, -0.374693, 0.91 ) }
    dend_20 { pt3dadd( 18.713, -89.2247, -0.38537, 0.91 ) }
    dend_20 { pt3dadd( 19.632, -91.7697, -0.457378, 0.23 ) }
    dend_20 { pt3dadd( 20.404, -93.6777, -0.55569, 2.05 ) }
    dend_20 { pt3dadd( 20.7446, -94.4973, -0.61493, 2.05 ) }
    dend_20 { pt3dadd( 22.7358, -99.1721, -1.04691, 0.23 ) }
    dend_20 { pt3dadd( 23.4177, -100.742, -1.20477, 0.91 ) }
    dend_20 { pt3dadd( 25.2153, -104.846, -1.67501, 0.23 ) }
    dend_20 { pt3dadd( 25.7476, -106.048, -1.83421, 0.23 ) }
    dend_20 { pt3dadd( 26.2204, -107.079, -1.97979, 1.14 ) }
    dend_20 { pt3dadd( 26.6822, -108.055, -2.1234, 1.14 ) }
    dend_20 { pt3dadd( 28.3366, -111.435, -2.61067, 0.23 ) }
    dend_20 { pt3dadd( 29.1012, -112.908, -2.81075, 0.23 ) }
    dend_20 { pt3dadd( 29.6879, -113.995, -2.94352, 0.91 ) }
    dend_20 { pt3dadd( 30.3818, -115.218, -3.07938, 0.91 ) }
    dend_20 { pt3dadd( 31.9996, -117.839, -3.3648, 0.23 ) }
    dend_20 { pt3dadd( 32.8636, -119.158, -3.49696, 1.14 ) }
    dend_20 { pt3dadd( 34.8778, -121.964, -3.76942, 0.23 ) }
    dend_20 { pt3dadd( 36.0673, -123.554, -3.91771, 0.23 ) }
    dend_20 { pt3dadd( 36.6607, -124.329, -3.99561, 0.91 ) }
    dend_20 { pt3dadd( 37.4817, -125.324, -4.08304, 0.91 ) }
    dend_20 { pt3dadd( 38.746, -126.716, -4.20903, 0.23 ) }
    dend_20 { pt3dadd( 39.5249, -127.516, -4.29831, 0.68 ) }
    dend_20 { pt3dadd( 40.584, -128.544, -4.40867, 0.23 ) }
    dend_20 { pt3dadd( 41.8279, -129.722, -4.54505, 0.91 ) }
    dend_20 { pt3dadd( 45.3362, -132.934, -4.95706, 0.23 ) }
    dend_20 { pt3dadd( 46.1751, -133.675, -5.05848, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 47.2852, -134.595, -5.20647, 1.14 ) }
    dend_20 { pt3dadd( 49.9715, -136.775, -5.50823, 0.23 ) }
    dend_20 { pt3dadd( 50.8983, -137.523, -5.5571, 0.23 ) }
    dend_20 { pt3dadd( 52.5838, -138.928, -5.55881, 0.68 ) }
    dend_20 { pt3dadd( 53.828, -140.116, -5.43056, 0.23 ) }
    dend_20 { pt3dadd( 55.1276, -141.59, -5.14292, 0.91 ) }
    dend_20 { pt3dadd( 56.0328, -142.812, -4.78081, 0.23 ) }
    dend_20 { pt3dadd( 57.3034, -144.686, -4.06302, 0.23 ) }
    dend_20 { pt3dadd( 58.0784, -145.816, -3.61539, 0.68 ) }
    dend_20 { pt3dadd( 59.6018, -148.036, -2.77414, 0.23 ) }
    dend_20 { pt3dadd( 60.9429, -149.847, -2.09816, 0.68 ) }
    dend_20 { pt3dadd( 63.3997, -152.937, -0.995926, 0.23 ) }
    dend_20 { pt3dadd( 66.3602, -156.338, 0.0385796, 0.23 ) }
    dend_20 { pt3dadd( 68.0401, -158.165, 0.548312, 0.23 ) }
    dend_20 { pt3dadd( 69.322, -159.457, 0.910879, 0.68 ) }
    dend_20 { pt3dadd( 71.9803, -161.905, 1.55602, 0.23 ) }
    dend_20 { pt3dadd( 74.4011, -163.981, 2.12418, 0.23 ) }
    dend_20 { pt3dadd( 76.3378, -165.583, 2.47354, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.09095, -24.9493, 0.437256, 2.27 ) }
    dend_5 { pt3dadd( -7.792, -28.378, 0.350482, 2.27 ) }
    dend_5 { pt3dadd( -8.59691, -30.0004, 0.309421, 2.73 ) }
    dend_5 { pt3dadd( -9.45791, -31.7359, 0.2655, 3.64 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.10002, 55.2262, 4.27936, 0.23 ) }
    dend_39 { pt3dadd( -4.71407, 56.6144, 5.99224, 0.23 ) }
    dend_39 { pt3dadd( -2.90611, 57.2881, 7.01747, 0.91 ) }
    dend_39 { pt3dadd( -1.14743, 57.904, 7.91207, 0.23 ) }
    dend_39 { pt3dadd( 0.400483, 58.4644, 8.72074, 0.23 ) }
    dend_39 { pt3dadd( 1.79353, 58.9491, 9.424, 0.91 ) }
    dend_39 { pt3dadd( 3.60418, 59.6142, 10.2894, 0.23 ) }
    dend_39 { pt3dadd( 4.56481, 59.9111, 10.7054, 0.23 ) }
    dend_39 { pt3dadd( 5.43224, 60.2543, 11.0877, 0.23 ) }
    dend_39 { pt3dadd( 6.82724, 61.0298, 11.6951, 0.23 ) }
    dend_39 { pt3dadd( 7.98875, 61.954, 12.2214, 1.36 ) }
    dend_39 { pt3dadd( 8.96676, 62.8637, 12.6717, 1.36 ) }
    dend_39 { pt3dadd( 11.0153, 65.0694, 13.5654, 0.23 ) }
    dend_39 { pt3dadd( 12.2819, 66.4359, 14.0572, 0.23 ) }
    dend_39 { pt3dadd( 13.334, 67.5815, 14.3926, 0.23 ) }
    dend_39 { pt3dadd( 14.7996, 69.3055, 14.7588, 0.23 ) }
    dend_39 { pt3dadd( 16.5237, 71.4617, 15.1159, 1.14 ) }
    dend_39 { pt3dadd( 18.1744, 73.6232, 15.4391, 0.23 ) }
    dend_39 { pt3dadd( 19.3889, 75.2648, 15.6088, 0.23 ) }
    dend_39 { pt3dadd( 21.0358, 77.5647, 15.8309, 0.45 ) }
    dend_39 { pt3dadd( 22.511, 79.8544, 16.0297, 0.23 ) }
    dend_39 { pt3dadd( 23.3772, 81.4055, 16.1401, 0.68 ) }
    dend_39 { pt3dadd( 24.457, 83.8942, 16.2914, 0.23 ) }
    dend_39 { pt3dadd( 24.8637, 85.0569, 16.4089, 0.23 ) }
    dend_39 { pt3dadd( 25.2873, 86.5609, 16.6011, 0.91 ) }
    dend_39 { pt3dadd( 25.5621, 87.5751, 16.7479, 0.91 ) }
    dend_39 { pt3dadd( 25.8774, 88.5793, 16.8908, 0.23 ) }
    dend_39 { pt3dadd( 26.7893, 91.1285, 17.3436, 0.68 ) }
    dend_39 { pt3dadd( 28.1122, 94.3923, 17.9482, 0.23 ) }
    dend_39 { pt3dadd( 28.5608, 95.4566, 18.1836, 0.91 ) }
    dend_39 { pt3dadd( 29.5866, 97.8532, 18.7308, 0.23 ) }
    dend_39 { pt3dadd( 30.7452, 100.522, 19.3775, 0.68 ) }
    dend_39 { pt3dadd( 31.9968, 103.385, 20.1255, 0.23 ) }
    dend_39 { pt3dadd( 33.2717, 106.515, 20.9693, 0.68 ) }
    dend_39 { pt3dadd( 33.9688, 108.486, 21.5089, 0.23 ) }
    dend_39 { pt3dadd( 34.6203, 110.828, 22.2008, 0.68 ) }
    dend_39 { pt3dadd( 34.9318, 112.462, 22.7356, 0.23 ) }
    dend_39 { pt3dadd( 35.0669, 113.801, 23.2304, 0.23 ) }
    dend_39 { pt3dadd( 35.1738, 115.568, 23.8734, 0.23 ) }
    dend_39 { pt3dadd( 35.2281, 117.66, 24.7049, 0.68 ) }
    dend_39 { pt3dadd( 35.2683, 120.7, 25.9303, 0.23 ) }
    dend_39 { pt3dadd( 35.2238, 123.266, 27.0396, 0.68 ) }
    dend_39 { pt3dadd( 35.0483, 125.911, 28.1712, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -7.10002, 55.2262, 4.27936, 0.23 ) }
    dend_36 { pt3dadd( -8.33205, 57.4157, 4.59935, 0.23 ) }
    dend_36 { pt3dadd( -9.44043, 59.2323, 4.8965, 0.91 ) }
    dend_36 { pt3dadd( -11.728, 62.7498, 5.50421, 0.23 ) }
    dend_36 { pt3dadd( -12.5636, 63.9202, 5.71403, 0.91 ) }
    dend_36 { pt3dadd( -13.4515, 65.1078, 5.92776, 0.91 ) }
    dend_36 { pt3dadd( -14.8319, 66.9896, 6.25664, 0.23 ) }
    dend_36 { pt3dadd( -16.4731, 69.2289, 6.67372, 0.23 ) }
    dend_36 { pt3dadd( -18.0626, 71.4204, 7.03157, 0.23 ) }
    dend_36 { pt3dadd( -19.2668, 73.2148, 7.26867, 0.68 ) }
    dend_36 { pt3dadd( -20.0273, 74.4533, 7.40612, 0.23 ) }
    dend_36 { pt3dadd( -20.7651, 75.8313, 7.53554, 0.23 ) }
    dend_36 { pt3dadd( -21.1376, 76.6283, 7.60936, 0.23 ) }
    dend_36 { pt3dadd( -21.9662, 78.6145, 7.82908, 1.59 ) }
    dend_36 { pt3dadd( -22.9601, 81.16, 8.15128, 0.68 ) }
    dend_36 { pt3dadd( -23.6191, 82.8198, 8.37354, 0.23 ) }
    dend_36 { pt3dadd( -24.064, 83.7755, 8.51338, 0.91 ) }
    dend_36 { pt3dadd( -24.8572, 85.213, 8.7396, 0.23 ) }
    dend_36 { pt3dadd( -25.286, 85.9138, 8.85272, 0.91 ) }
    dend_36 { pt3dadd( -26.0735, 87.1171, 9.06922, 0.23 ) }
    dend_36 { pt3dadd( -26.8082, 88.1815, 9.24618, 1.14 ) }
    dend_36 { pt3dadd( -27.5173, 89.1782, 9.38482, 1.14 ) }
    dend_36 { pt3dadd( -28.3659, 90.2712, 9.53656, 0.23 ) }
    dend_36 { pt3dadd( -29.5255, 91.6399, 9.7531, 0.23 ) }
    dend_36 { pt3dadd( -30.9357, 93.1843, 10.0818, 0.91 ) }
    dend_36 { pt3dadd( -31.9842, 94.2417, 10.36, 0.23 ) }
    dend_36 { pt3dadd( -33.3684, 95.5093, 10.7854, 0.23 ) }
    dend_36 { pt3dadd( -34.4182, 96.3756, 11.1367, 0.91 ) }
    dend_36 { pt3dadd( -36.1774, 97.6776, 11.7945, 0.23 ) }
    dend_36 { pt3dadd( -37.6832, 98.7415, 12.3967, 0.68 ) }
    dend_36 { pt3dadd( -38.3272, 99.2157, 12.6562, 0.68 ) }
    dend_36 { pt3dadd( -39.4974, 100.114, 13.1408, 0.23 ) }
    dend_36 { pt3dadd( -40.7834, 101.156, 13.6429, 0.68 ) }
    dend_36 { pt3dadd( -41.9867, 102.121, 14.0446, 0.23 ) }
    dend_36 { pt3dadd( -43.3086, 103.083, 14.4332, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -45.4236, 104.473, 14.9429, 0.91 ) }
    dend_36 { pt3dadd( -47.0917, 105.44, 15.2446, 0.23 ) }
    dend_36 { pt3dadd( -49.326, 106.618, 15.5172, 0.23 ) }
    dend_36 { pt3dadd( -51.9475, 107.903, 15.7365, 0.91 ) }
    dend_36 { pt3dadd( -54.059, 108.863, 15.8417, 0.23 ) }
    dend_36 { pt3dadd( -55.7966, 109.573, 15.9072, 0.91 ) }
    dend_36 { pt3dadd( -57.5852, 110.286, 15.9379, 0.23 ) }
    dend_36 { pt3dadd( -60.4228, 111.491, 15.9242, 0.23 ) }
    dend_36 { pt3dadd( -62.3133, 112.344, 15.8972, 0.91 ) }
    dend_36 { pt3dadd( -64.1719, 113.3, 15.8515, 0.23 ) }
    dend_36 { pt3dadd( -65.1411, 113.847, 15.8267, 0.68 ) }
    dend_36 { pt3dadd( -66.8742, 114.816, 15.8504, 0.23 ) }
    dend_36 { pt3dadd( -68.2129, 115.564, 15.9361, 0.91 ) }
    dend_36 { pt3dadd( -69.5539, 116.283, 16.0803, 0.23 ) }
    dend_36 { pt3dadd( -70.7333, 116.928, 16.2582, 0.68 ) }
    dend_36 { pt3dadd( -71.8928, 117.56, 16.4721, 0.23 ) }
    dend_36 { pt3dadd( -74.2473, 118.84, 16.9496, 0.91 ) }
    dend_36 { pt3dadd( -76.8048, 120.221, 17.5121, 0.23 ) }
    dend_36 { pt3dadd( -79.1733, 121.549, 18.0443, 0.23 ) }
    dend_36 { pt3dadd( -80.9334, 122.603, 18.4388, 0.91 ) }
    dend_36 { pt3dadd( -82.3663, 123.546, 18.756, 0.23 ) }
    dend_36 { pt3dadd( -83.0304, 124.035, 18.8836, 0.68 ) }
    dend_36 { pt3dadd( -84.0572, 124.926, 19.0391, 0.23 ) }
    dend_36 { pt3dadd( -85.0118, 125.912, 19.1237, 0.91 ) }
    dend_36 { pt3dadd( -86.4459, 127.646, 19.1291, 0.23 ) }
    dend_36 { pt3dadd( -87.2532, 128.715, 19.0735, 0.91 ) }
    dend_36 { pt3dadd( -88.2871, 130.188, 18.9638, 0.23 ) }
    dend_36 { pt3dadd( -89.0517, 131.281, 18.853, 1.14 ) }
    dend_36 { pt3dadd( -90.6567, 133.542, 18.5259, 0.23 ) }
    dend_36 { pt3dadd( -92.217, 135.657, 18.1624, 0.91 ) }
    dend_36 { pt3dadd( -93.5159, 137.326, 17.829, 0.23 ) }
    dend_36 { pt3dadd( -94.6514, 138.691, 17.5343, 0.91 ) }
    dend_36 { pt3dadd( -96.1727, 140.459, 17.1285, 0.23 ) }
    dend_36 { pt3dadd( -97.3205, 141.71, 16.7985, 0.23 ) }
    dend_36 { pt3dadd( -98.5996, 142.994, 16.4227, 0.91 ) }
    dend_36 { pt3dadd( -100.259, 144.608, 15.9421, 0.23 ) }
    dend_36 { pt3dadd( -101.114, 145.417, 15.6991, 0.23 ) }
    dend_36 { pt3dadd( -101.97, 146.2, 15.4666, 0.68 ) }
    dend_36 { pt3dadd( -102.553, 146.699, 15.3344, 0.23 ) }
    dend_36 { pt3dadd( -103.958, 147.868, 15.0527, 0.68 ) }
    dend_36 { pt3dadd( -105.53, 149.108, 14.7486, 0.23 ) }
    dend_36 { pt3dadd( -106.731, 150.031, 14.573, 0.23 ) }
    dend_36 { pt3dadd( -107.536, 150.658, 14.4703, 0.68 ) }
    dend_36 { pt3dadd( -108.551, 151.441, 14.3696, 0.23 ) }
    dend_36 { pt3dadd( -109.466, 152.176, 14.2946, 0.23 ) }
    dend_36 { pt3dadd( -110.395, 152.926, 14.2381, 0.45 ) }
    dend_36 { pt3dadd( -112.341, 154.502, 14.1301, 0.23 ) }
    dend_36 { pt3dadd( -113.719, 155.687, 14.0405, 1.82 ) }
    dend_36 { pt3dadd( -114.72, 156.576, 13.976, 0.68 ) }
    dend_36 { pt3dadd( -116.743, 158.451, 13.8548, 0.23 ) }
    dend_36 { pt3dadd( -118.339, 159.901, 13.8141, 0.91 ) }
    dend_36 { pt3dadd( -119.854, 161.294, 13.7726, 0.23 ) }
    dend_36 { pt3dadd( -121.082, 162.405, 13.7445, 0.23 ) }
    dend_36 { pt3dadd( -121.82, 163.083, 13.745, 0.91 ) }
    dend_36 { pt3dadd( -122.844, 164.053, 13.7478, 0.23 ) }
    dend_36 { pt3dadd( -123.952, 165.123, 13.7815, 1.36 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 11.9545, 14.8455, 0.15589, 0.68 ) }
    dend_30 { pt3dadd( 13.7747, 13.7796, -0.012671, 0.68 ) }
    dend_30 { pt3dadd( 15.7315, 12.6443, -0.07999, 0.68 ) }
    dend_30 { pt3dadd( 17.4179, 11.624, -0.0766959, 0.68 ) }
    dend_30 { pt3dadd( 19.0682, 10.4825, -0.0139493, 1.14 ) }
    dend_30 { pt3dadd( 21.0388, 9.06555, 0.0453726, 1.59 ) }
    dend_30 { pt3dadd( 23.8023, 7.05787, 0.113634, 0.68 ) }
    dend_30 { pt3dadd( 26.1289, 5.36386, 0.208633, 1.82 ) }
    dend_30 { pt3dadd( 28.585, 3.565, 0.304979, 0.91 ) }
    dend_30 { pt3dadd( 32.7567, 0.449227, 0.401304, 0.68 ) }
    dend_30 { pt3dadd( 34.8956, -1.15854, 0.387551, 0.68 ) }
    dend_30 { pt3dadd( 37.132, -2.86597, 0.304664, 1.14 ) }
    dend_30 { pt3dadd( 38.6618, -4.04746, 0.207917, 1.14 ) }
    dend_30 { pt3dadd( 41.9826, -6.62359, -0.076151, 1.82 ) }
    dend_30 { pt3dadd( 44.6825, -8.65563, -0.359496, 0.23 ) }
    dend_30 { pt3dadd( 46.7149, -10.123, -0.608212, 0.91 ) }
    dend_30 { pt3dadd( 49.0351, -11.8937, -0.865173, 1.14 ) }
    dend_30 { pt3dadd( 50.5824, -13.1538, -1.06358, 2.05 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.9545, 14.8455, 0.15589, 0.45 ) }
    dend_27 { pt3dadd( 13.6628, 14.9784, 0.112784, 0.45 ) }
    dend_27 { pt3dadd( 16.4025, 15.1881, 0.0701504, 0.91 ) }
    dend_27 { pt3dadd( 18.6714, 15.3939, 0.0516854, 0.45 ) }
    dend_27 { pt3dadd( 21.3866, 15.6561, 0.0510262, 1.14 ) }
    dend_27 { pt3dadd( 24.8886, 16.117, 0.101881, 0.68 ) }
    dend_27 { pt3dadd( 28.5804, 16.7127, 0.192062, 0.45 ) }
    dend_27 { pt3dadd( 30.6997, 17.1314, 0.268375, 0.91 ) }
    dend_27 { pt3dadd( 32.368, 17.5541, 0.350074, 0.91 ) }
    dend_27 { pt3dadd( 35.4211, 18.4669, 0.544693, 2.05 ) }
    dend_27 { pt3dadd( 39.8885, 19.9129, 0.879153, 0.68 ) }
    dend_27 { pt3dadd( 42.5559, 20.8501, 1.09083, 1.14 ) }
    dend_27 { pt3dadd( 44.8805, 21.7601, 1.28965, 0.68 ) }
    dend_27 { pt3dadd( 46.0243, 22.2495, 1.39134, 1.59 ) }
    dend_27 { pt3dadd( 48.5013, 23.3585, 1.61581, 1.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -9.45791, -31.7359, 0.2655, 0.68 ) }
    dend_17 { pt3dadd( -11.7869, -32.3759, 0.465792, 0.68 ) }
    dend_17 { pt3dadd( -14.0903, -32.9699, 0.739203, 0.68 ) }
    dend_17 { pt3dadd( -15.3924, -33.288, 0.917348, 1.14 ) }
    dend_17 { pt3dadd( -17.9309, -33.821, 1.26099, 0.68 ) }
    dend_17 { pt3dadd( -19.7578, -34.1521, 1.5079, 1.36 ) }
    dend_17 { pt3dadd( -21.3983, -34.4111, 1.71809, 0.45 ) }
    dend_17 { pt3dadd( -23.3243, -34.608, 1.9676, 1.14 ) }
    dend_17 { pt3dadd( -25.1867, -34.7188, 2.21756, 0.23 ) }
    dend_17 { pt3dadd( -26.8345, -34.8472, 2.43035, 0.45 ) }
    dend_17 { pt3dadd( -27.6396, -34.9433, 2.51372, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( -29.513, -35.2836, 2.64679, 1.14 ) }
    dend_17 { pt3dadd( -31.0433, -35.6834, 2.70957, 0.23 ) }
    dend_17 { pt3dadd( -32.4049, -36.1763, 2.7318, 0.91 ) }
    dend_17 { pt3dadd( -34.2608, -37.0098, 2.79002, 0.45 ) }
    dend_17 { pt3dadd( -35.3654, -37.5805, 2.84947, 1.14 ) }
    dend_17 { pt3dadd( -36.9281, -38.4315, 2.96182, 0.23 ) }
    dend_17 { pt3dadd( -38.2921, -39.1948, 3.09263, 0.91 ) }
    dend_17 { pt3dadd( -39.847, -40.0508, 3.28132, 0.68 ) }
    dend_17 { pt3dadd( -41.2938, -40.8034, 3.49727, 0.23 ) }
    dend_17 { pt3dadd( -42.3276, -41.2924, 3.69513, 0.91 ) }
    dend_17 { pt3dadd( -43.7888, -41.8989, 4.03462, 0.23 ) }
    dend_17 { pt3dadd( -45.611, -42.595, 4.50015, 0.91 ) }
    dend_17 { pt3dadd( -46.6208, -42.9773, 4.76514, 0.68 ) }
    dend_17 { pt3dadd( -48.1882, -43.599, 5.17828, 0.68 ) }
    dend_17 { pt3dadd( -50.0127, -44.391, 5.65333, 1.36 ) }
    dend_17 { pt3dadd( -51.5806, -45.1175, 6.06464, 0.23 ) }
    dend_17 { pt3dadd( -52.2706, -45.457, 6.2422, 0.23 ) }
    dend_17 { pt3dadd( -53.595, -46.1408, 6.5628, 1.36 ) }
    dend_17 { pt3dadd( -54.4539, -46.6367, 6.76252, 1.36 ) }
    dend_17 { pt3dadd( -55.3998, -47.2535, 6.976, 0.23 ) }
    dend_17 { pt3dadd( -56.7126, -48.2157, 7.22031, 0.91 ) }
    dend_17 { pt3dadd( -57.9325, -49.2085, 7.39217, 0.91 ) }
    dend_17 { pt3dadd( -59.131, -50.24, 7.52893, 0.23 ) }
    dend_17 { pt3dadd( -60.3446, -51.3387, 7.63636, 0.91 ) }
    dend_17 { pt3dadd( -61.3102, -52.2443, 7.68729, 0.23 ) }
    dend_17 { pt3dadd( -62.3901, -53.3396, 7.70438, 0.23 ) }
    dend_17 { pt3dadd( -63.1871, -54.2742, 7.68964, 0.23 ) }
    dend_17 { pt3dadd( -63.6939, -54.9256, 7.6819, 1.14 ) }
    dend_17 { pt3dadd( -64.2322, -55.6487, 7.69173, 0.45 ) }
    dend_17 { pt3dadd( -64.7956, -56.4163, 7.72021, 1.59 ) }
    dend_17 { pt3dadd( -66.2562, -58.4708, 7.86643, 0.68 ) }
    dend_17 { pt3dadd( -67.7839, -60.6542, 8.1184, 0.68 ) }
    dend_17 { pt3dadd( -68.7777, -62.0285, 8.32996, 0.23 ) }
    dend_17 { pt3dadd( -69.7199, -63.276, 8.55606, 0.91 ) }
    dend_17 { pt3dadd( -70.3692, -64.0769, 8.7267, 0.91 ) }
    dend_17 { pt3dadd( -70.886, -64.6365, 8.87271, 0.23 ) }
    dend_17 { pt3dadd( -71.6779, -65.3974, 9.10509, 0.91 ) }
    dend_17 { pt3dadd( -72.8471, -66.4306, 9.43785, 0.23 ) }
    dend_17 { pt3dadd( -73.7639, -67.2122, 9.67081, 0.45 ) }
    dend_17 { pt3dadd( -74.7372, -68.0276, 9.89502, 1.14 ) }
    dend_17 { pt3dadd( -75.632, -68.7719, 10.0904, 0.23 ) }
    dend_17 { pt3dadd( -76.9374, -69.8515, 10.3576, 0.91 ) }
    dend_17 { pt3dadd( -78.3078, -70.9673, 10.6325, 0.91 ) }
    dend_17 { pt3dadd( -79.1734, -71.6593, 10.8037, 0.23 ) }
    dend_17 { pt3dadd( -80.3553, -72.5845, 11.0481, 0.68 ) }
    dend_17 { pt3dadd( -81.297, -73.3217, 11.2663, 0.23 ) }
    dend_17 { pt3dadd( -81.7446, -73.655, 11.3838, 0.23 ) }
    dend_17 { pt3dadd( -83.0115, -74.5197, 11.7358, 0.91 ) }
    dend_17 { pt3dadd( -84.3012, -75.3676, 12.1332, 2.05 ) }
    dend_17 { pt3dadd( -86.0042, -76.5151, 12.6918, 0.68 ) }
    dend_17 { pt3dadd( -87.3731, -77.4586, 13.1766, 1.36 ) }
    dend_17 { pt3dadd( -88.7665, -78.4427, 13.6891, 0.45 ) }
    dend_17 { pt3dadd( -89.8326, -79.2174, 14.0944, 0.45 ) }
    dend_17 { pt3dadd( -91.0574, -80.1264, 14.5655, 0.23 ) }
    dend_17 { pt3dadd( -91.7682, -80.6564, 14.8435, 0.91 ) }
    dend_17 { pt3dadd( -92.6187, -81.2772, 15.1657, 0.23 ) }
    dend_17 { pt3dadd( -93.2432, -81.7124, 15.3837, 0.23 ) }
    dend_17 { pt3dadd( -94.5544, -82.6089, 15.8049, 1.14 ) }
    dend_17 { pt3dadd( -95.2782, -83.0814, 16.0231, 1.14 ) }
    dend_17 { pt3dadd( -96.9745, -84.1074, 16.4987, 0.23 ) }
    dend_17 { pt3dadd( -97.4887, -84.3911, 16.6363, 0.91 ) }
    dend_17 { pt3dadd( -98.6018, -84.9848, 16.9118, 1.59 ) }
    dend_17 { pt3dadd( -99.4659, -85.4539, 17.1447, 0.45 ) }
    dend_17 { pt3dadd( -99.955, -85.7192, 17.2863, 1.14 ) }
    dend_17 { pt3dadd( -101.58, -86.589, 17.7921, 0.23 ) }
    dend_17 { pt3dadd( -102.367, -87.0098, 18.0439, 1.36 ) }
    dend_17 { pt3dadd( -103.213, -87.4754, 18.3381, 1.36 ) }
    dend_17 { pt3dadd( -105.556, -88.8179, 19.1974, 0.23 ) }
    dend_17 { pt3dadd( -106.556, -89.4189, 19.5716, 1.36 ) }
    dend_17 { pt3dadd( -106.903, -89.6461, 19.7009, 2.27 ) }
    dend_17 { pt3dadd( -108.329, -90.6965, 20.2166, 0.23 ) }
    dend_17 { pt3dadd( -109.342, -91.4682, 20.5879, 0.68 ) }
    dend_17 { pt3dadd( -110.015, -92.0019, 20.8295, 0.23 ) }
    dend_17 { pt3dadd( -110.787, -92.6747, 21.0712, 0.91 ) }
    dend_17 { pt3dadd( -111.426, -93.3114, 21.2639, 0.23 ) }
    dend_17 { pt3dadd( -112.167, -94.164, 21.4891, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -9.45791, -31.7359, 0.2655, 2.27 ) }
    dend_6 { pt3dadd( -9.62169, -35.3045, 0.1535, 2.27 ) }
    dend_6 { pt3dadd( -9.66282, -36.2004, 0.125381, 2.27 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -123.952, 165.123, 13.7815, 0.23 ) }
    dend_38 { pt3dadd( -126.279, 165.725, 13.9922, 0.23 ) }
    dend_38 { pt3dadd( -127.53, 166.026, 14.1075, 0.91 ) }
    dend_38 { pt3dadd( -129.371, 166.422, 14.2785, 0.23 ) }
    dend_38 { pt3dadd( -130.588, 166.647, 14.4162, 0.91 ) }
    dend_38 { pt3dadd( -131.463, 166.795, 14.5245, 0.23 ) }
    dend_38 { pt3dadd( -132.87, 167.032, 14.6834, 0.23 ) }
    dend_38 { pt3dadd( -133.548, 167.119, 14.7627, 0.23 ) }
    dend_38 { pt3dadd( -134.512, 167.252, 14.8422, 0.91 ) }
    dend_38 { pt3dadd( -136.105, 167.444, 14.9108, 0.23 ) }
    dend_38 { pt3dadd( -136.684, 167.505, 14.9325, 0.68 ) }
    dend_38 { pt3dadd( -137.722, 167.605, 14.9706, 0.23 ) }
    dend_38 { pt3dadd( -138.174, 167.651, 14.9936, 1.14 ) }
    dend_38 { pt3dadd( -139.534, 167.779, 15.0863, 0.23 ) }
    dend_38 { pt3dadd( -141.227, 167.926, 15.2446, 1.14 ) }
    dend_38 { pt3dadd( -142.424, 168.027, 15.3788, 0.23 ) }
    dend_38 { pt3dadd( -143.722, 168.128, 15.578, 0.68 ) }
    dend_38 { pt3dadd( -144.44, 168.181, 15.724, 0.23 ) }
    dend_38 { pt3dadd( -145.936, 168.326, 16.0687, 0.91 ) }
    dend_38 { pt3dadd( -147.884, 168.565, 16.5681, 0.23 ) }
    dend_38 { pt3dadd( -149.308, 168.815, 16.93, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -150.1, 168.973, 17.1182, 0.91 ) }
    dend_38 { pt3dadd( -151.27, 169.252, 17.3853, 0.23 ) }
    dend_38 { pt3dadd( -152.201, 169.515, 17.5757, 0.68 ) }
    dend_38 { pt3dadd( -153.292, 169.867, 17.7865, 0.23 ) }
    dend_38 { pt3dadd( -154.275, 170.188, 17.9367, 0.23 ) }
    dend_38 { pt3dadd( -155.089, 170.407, 18.0283, 0.68 ) }
    dend_38 { pt3dadd( -156.084, 170.666, 18.1067, 0.23 ) }
    dend_38 { pt3dadd( -157.443, 170.987, 18.1749, 0.23 ) }
    dend_38 { pt3dadd( -158.414, 171.169, 18.2141, 0.68 ) }
    dend_38 { pt3dadd( -159.223, 171.287, 18.2357, 0.23 ) }
    dend_38 { pt3dadd( -160.528, 171.373, 18.2487, 0.91 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -123.952, 165.123, 13.7815, 0.23 ) }
    dend_37 { pt3dadd( -125.094, 166.253, 14.1737, 0.23 ) }
    dend_37 { pt3dadd( -125.364, 166.565, 14.2688, 0.68 ) }
    dend_37 { pt3dadd( -126.114, 167.499, 14.5538, 0.23 ) }
    dend_37 { pt3dadd( -126.893, 168.517, 14.7607, 0.23 ) }
    dend_37 { pt3dadd( -127.437, 169.231, 14.8616, 0.68 ) }
    dend_37 { pt3dadd( -128.125, 170.131, 14.9611, 0.23 ) }
    dend_37 { pt3dadd( -128.622, 170.814, 15.0226, 0.68 ) }
    dend_37 { pt3dadd( -129.678, 172.231, 15.094, 0.23 ) }
    dend_37 { pt3dadd( -130.642, 173.485, 15.105, 0.91 ) }
    dend_37 { pt3dadd( -131.875, 175.048, 15.103, 0.23 ) }
    dend_37 { pt3dadd( -132.613, 175.948, 15.0922, 0.23 ) }
    dend_37 { pt3dadd( -133.515, 176.989, 15.066, 0.91 ) }
    dend_37 { pt3dadd( -134.538, 178.137, 15.0271, 0.23 ) }
    dend_37 { pt3dadd( -135.329, 179.006, 14.9938, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 50.5824, -13.1538, -1.06358, 0.45 ) }
    dend_32 { pt3dadd( 51.4398, -15.2788, -1.64504, 0.45 ) }
    dend_32 { pt3dadd( 51.9028, -16.3372, -1.88882, 0.91 ) }
    dend_32 { pt3dadd( 52.396, -17.2022, -2.04522, 0.23 ) }
    dend_32 { pt3dadd( 52.8127, -17.8513, -2.15545, 0.91 ) }
    dend_32 { pt3dadd( 53.2669, -18.4892, -2.25469, 0.91 ) }
    dend_32 { pt3dadd( 54.5727, -20.1724, -2.48407, 0.23 ) }
    dend_32 { pt3dadd( 55.4494, -21.1786, -2.59911, 1.59 ) }
    dend_32 { pt3dadd( 57.3792, -23.2641, -2.85948, 0.45 ) }
    dend_32 { pt3dadd( 58.4519, -24.3674, -3.00957, 0.45 ) }
    dend_32 { pt3dadd( 59.7916, -25.7005, -3.21348, 1.36 ) }
    dend_32 { pt3dadd( 62.3657, -28.169, -3.61658, 0.68 ) }
    dend_32 { pt3dadd( 64.0733, -29.7355, -3.91541, 0.68 ) }
    dend_32 { pt3dadd( 65.5268, -31.0162, -4.18583, 1.14 ) }
    dend_32 { pt3dadd( 68.3527, -33.3855, -4.72124, 0.45 ) }
    dend_32 { pt3dadd( 69.0432, -33.9251, -4.84548, 1.14 ) }
    dend_32 { pt3dadd( 70.4454, -34.9842, -5.10562, 0.23 ) }
    dend_32 { pt3dadd( 71.9912, -36.128, -5.40173, 1.36 ) }
    dend_32 { pt3dadd( 72.5132, -36.5195, -5.4961, 2.05 ) }
    dend_32 { pt3dadd( 74.2072, -37.8622, -5.79255, 0.23 ) }
    dend_32 { pt3dadd( 75.8906, -39.3364, -6.10614, 0.23 ) }
    dend_32 { pt3dadd( 77.2705, -40.6103, -6.35932, 1.14 ) }
    dend_32 { pt3dadd( 78.6652, -42.0042, -6.62757, 0.23 ) }
    dend_32 { pt3dadd( 79.5388, -42.9663, -6.79026, 1.36 ) }
    dend_32 { pt3dadd( 80.5685, -44.2129, -7.01246, 1.59 ) }
    dend_32 { pt3dadd( 81.7207, -45.8682, -7.32574, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 50.5824, -13.1538, -1.06358, 0.68 ) }
    dend_31 { pt3dadd( 55.5174, -13.968, -0.649813, 0.68 ) }
    dend_31 { pt3dadd( 57.7944, -14.3371, -0.495625, 0.23 ) }
    dend_31 { pt3dadd( 59.2984, -14.5741, -0.449104, 0.68 ) }
    dend_31 { pt3dadd( 61.2591, -14.8954, -0.408468, 0.23 ) }
    dend_31 { pt3dadd( 63.0424, -15.2497, -0.367484, 0.91 ) }
    dend_31 { pt3dadd( 66.3969, -16.0013, -0.271861, 0.23 ) }
    dend_31 { pt3dadd( 69.2022, -16.6688, -0.137463, 1.14 ) }
    dend_31 { pt3dadd( 74.7422, -17.9378, 0.22124, 0.45 ) }
    dend_31 { pt3dadd( 76.4177, -18.2835, 0.359576, 0.91 ) }
    dend_31 { pt3dadd( 80.4069, -18.9529, 0.734883, 0.23 ) }
    dend_31 { pt3dadd( 84.3205, -19.4398, 1.12895, 0.91 ) }
    dend_31 { pt3dadd( 87.8258, -19.693, 1.50697, 0.23 ) }
    dend_31 { pt3dadd( 92.2331, -19.7266, 1.98133, 0.91 ) }
    dend_31 { pt3dadd( 96.8329, -19.3976, 2.44621, 0.23 ) }
    dend_31 { pt3dadd( 100.511, -18.8039, 2.71965, 0.68 ) }
    dend_31 { pt3dadd( 102.601, -18.2301, 2.80364, 0.23 ) }
    dend_31 { pt3dadd( 104.634, -17.5079, 2.78598, 1.14 ) }
    dend_31 { pt3dadd( 106.702, -16.6745, 2.65751, 0.23 ) }
    dend_31 { pt3dadd( 109.738, -15.3432, 2.35759, 0.91 ) }
    dend_31 { pt3dadd( 112.319, -14.1899, 2.01098, 0.23 ) }
    dend_31 { pt3dadd( 114.504, -13.2179, 1.67995, 1.14 ) }
    dend_31 { pt3dadd( 116.57, -12.3322, 1.37832, 0.23 ) }
    dend_31 { pt3dadd( 119.358, -11.1651, 0.941181, 1.82 ) }
    dend_31 { pt3dadd( 120.79, -10.5922, 0.706516, 2.27 ) }
    dend_31 { pt3dadd( 124.984, -8.95208, -0.0958621, 0.23 ) }
    dend_31 { pt3dadd( 125.9, -8.6438, -0.26875, 0.23 ) }
    dend_31 { pt3dadd( 129.244, -7.64036, -0.867934, 0.68 ) }
    dend_31 { pt3dadd( 132.204, -6.88941, -1.32001, 0.23 ) }
    dend_31 { pt3dadd( 134.514, -6.43387, -1.62235, 1.36 ) }
    dend_31 { pt3dadd( 138.202, -6.01347, -1.97059, 0.23 ) }
    dend_31 { pt3dadd( 141.945, -5.90754, -2.16679, 0.23 ) }
    dend_31 { pt3dadd( 143.468, -5.95532, -2.21238, 1.14 ) }
    dend_31 { pt3dadd( 147.197, -6.33293, -2.20472, 0.23 ) }
    dend_31 { pt3dadd( 149.058, -6.59853, -2.12313, 0.68 ) }
    dend_31 { pt3dadd( 152.104, -7.08002, -1.91712, 0.23 ) }
    dend_31 { pt3dadd( 152.913, -7.22296, -1.85058, 1.59 ) }
    dend_31 { pt3dadd( 154.168, -7.45209, -1.74653, 0.23 ) }
    dend_31 { pt3dadd( 156.673, -7.91482, -1.53809, 1.36 ) }
    dend_31 { pt3dadd( 160.264, -8.51715, -1.24708, 0.23 ) }
    dend_31 { pt3dadd( 163.584, -8.94154, -0.994818, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 48.5013, 23.3585, 1.61581, 0.23 ) }
    dend_29 { pt3dadd( 51.9816, 24.3471, 1.49433, 0.23 ) }
    dend_29 { pt3dadd( 54.2741, 25.0559, 1.49098, 0.23 ) }
    dend_29 { pt3dadd( 56.0651, 25.6, 1.51731, 1.36 ) }
    dend_29 { pt3dadd( 58.5409, 26.3582, 1.51966, 1.36 ) }
    dend_29 { pt3dadd( 61.9315, 27.3854, 1.4994, 0.23 ) }
    dend_29 { pt3dadd( 63.525, 27.8507, 1.48363, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 66.7231, 28.791, 1.45091, 0.91 ) }
    dend_29 { pt3dadd( 70.2274, 29.7011, 1.38965, 0.23 ) }
    dend_29 { pt3dadd( 72.9952, 30.3015, 1.3257, 1.59 ) }
    dend_29 { pt3dadd( 74.0157, 30.4768, 1.29119, 1.59 ) }
    dend_29 { pt3dadd( 77.6035, 30.9349, 1.14122, 0.45 ) }
    dend_29 { pt3dadd( 79.4281, 31.1075, 1.0088, 0.45 ) }
    dend_29 { pt3dadd( 82.3338, 31.2959, 0.763215, 0.23 ) }
    dend_29 { pt3dadd( 84.0004, 31.3675, 0.622689, 1.14 ) }
    dend_29 { pt3dadd( 86.4213, 31.431, 0.46857, 0.23 ) }
    dend_29 { pt3dadd( 87.9996, 31.4623, 0.376999, 0.68 ) }
    dend_29 { pt3dadd( 90.9147, 31.5486, 0.236108, 0.23 ) }
    dend_29 { pt3dadd( 94.3069, 31.7287, 0.117287, 1.14 ) }
    dend_29 { pt3dadd( 98.2044, 32.1084, -0.00134762, 0.23 ) }
    dend_29 { pt3dadd( 100.61, 32.448, -0.0666252, 0.23 ) }
    dend_29 { pt3dadd( 101.927, 32.7109, -0.0908403, 1.59 ) }
    dend_29 { pt3dadd( 104.822, 33.4387, -0.137437, 0.23 ) }
    dend_29 { pt3dadd( 106.187, 33.8836, -0.160891, 0.23 ) }
    dend_29 { pt3dadd( 107.562, 34.4538, -0.204698, 0.68 ) }
    dend_29 { pt3dadd( 109.043, 35.1916, -0.328874, 0.68 ) }
    dend_29 { pt3dadd( 112.09, 36.7797, -0.722955, 0.23 ) }
    dend_29 { pt3dadd( 113.443, 37.4362, -0.939682, 0.23 ) }
    dend_29 { pt3dadd( 114.66, 37.9765, -1.16934, 1.82 ) }
    dend_29 { pt3dadd( 115.37, 38.2453, -1.30588, 1.82 ) }
    dend_29 { pt3dadd( 117.824, 38.999, -1.74743, 0.23 ) }
    dend_29 { pt3dadd( 119.892, 39.5313, -2.10369, 0.68 ) }
    dend_29 { pt3dadd( 122.974, 40.19, -2.58069, 0.23 ) }
    dend_29 { pt3dadd( 124.198, 40.4453, -2.73922, 0.91 ) }
    dend_29 { pt3dadd( 126.23, 40.8768, -2.97352, 0.23 ) }
    dend_29 { pt3dadd( 128.465, 41.4022, -3.20462, 1.14 ) }
    dend_29 { pt3dadd( 131.516, 42.1877, -3.4508, 0.23 ) }
    dend_29 { pt3dadd( 133.753, 42.8246, -3.65064, 1.14 ) }
    dend_29 { pt3dadd( 135.969, 43.5288, -3.8399, 0.23 ) }
    dend_29 { pt3dadd( 137.554, 44.0537, -3.97196, 0.91 ) }
    dend_29 { pt3dadd( 139.691, 44.8198, -4.15943, 0.23 ) }
    dend_29 { pt3dadd( 141.929, 45.6652, -4.35723, 1.36 ) }
    dend_29 { pt3dadd( 143.723, 46.3437, -4.51146, 0.23 ) }
    dend_29 { pt3dadd( 145.887, 47.1931, -4.68655, 0.91 ) }
    dend_29 { pt3dadd( 149.462, 48.6678, -4.96472, 0.23 ) }
    dend_29 { pt3dadd( 151.485, 49.5062, -5.10707, 1.14 ) }
    dend_29 { pt3dadd( 152.597, 49.9671, -5.18521, 0.23 ) }
    dend_29 { pt3dadd( 153.781, 50.4717, -5.26612, 1.14 ) }
    dend_29 { pt3dadd( 156.06, 51.4683, -5.37823, 0.23 ) }
    dend_29 { pt3dadd( 157.793, 52.3249, -5.50561, 1.36 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 48.5013, 23.3585, 1.61581, 0.23 ) }
    dend_28 { pt3dadd( 50.347, 24.6395, 1.41007, 0.23 ) }
    dend_28 { pt3dadd( 51.3324, 25.3325, 1.31025, 0.91 ) }
    dend_28 { pt3dadd( 52.8687, 26.3666, 1.17637, 0.23 ) }
    dend_28 { pt3dadd( 54.4414, 27.3282, 1.0544, 0.68 ) }
    dend_28 { pt3dadd( 56.0863, 28.2025, 0.96575, 0.68 ) }
    dend_28 { pt3dadd( 58.8674, 29.6114, 0.8748, 0.23 ) }
    dend_28 { pt3dadd( 60.2361, 30.2602, 0.829599, 0.91 ) }
    dend_28 { pt3dadd( 61.7438, 30.9806, 0.795693, 0.91 ) }
    dend_28 { pt3dadd( 64.568, 32.3443, 0.762854, 0.23 ) }
    dend_28 { pt3dadd( 67.3017, 33.7286, 0.745645, 0.68 ) }
    dend_28 { pt3dadd( 69.9116, 35.0971, 0.689059, 0.23 ) }
    dend_28 { pt3dadd( 71.6549, 36.0572, 0.619293, 0.91 ) }
    dend_28 { pt3dadd( 73.5468, 37.1742, 0.506209, 0.91 ) }
    dend_28 { pt3dadd( 75.2423, 38.3142, 0.340857, 0.23 ) }
    dend_28 { pt3dadd( 77.3274, 39.9879, 0.0141184, 1.14 ) }
    dend_28 { pt3dadd( 79.2446, 41.7704, -0.3928, 0.23 ) }
    dend_28 { pt3dadd( 80.3217, 42.8911, -0.642864, 0.23 ) }
    dend_28 { pt3dadd( 81.1106, 43.8465, -0.802901, 0.23 ) }
    dend_28 { pt3dadd( 82.7861, 46.118, -1.09218, 0.91 ) }
    dend_28 { pt3dadd( 84.6292, 48.8486, -1.32253, 0.45 ) }
    dend_28 { pt3dadd( 85.2801, 49.9026, -1.36746, 0.45 ) }
    dend_28 { pt3dadd( 86.731, 52.4456, -1.4159, 1.59 ) }
    dend_28 { pt3dadd( 88.8116, 56.0478, -1.40123, 0.45 ) }
    dend_28 { pt3dadd( 89.5524, 57.2868, -1.3718, 0.68 ) }
    dend_28 { pt3dadd( 90.1344, 58.2247, -1.31649, 0.23 ) }
    dend_28 { pt3dadd( 91.2442, 59.8623, -1.21655, 0.91 ) }
    dend_28 { pt3dadd( 92.9652, 62.215, -1.13314, 0.23 ) }
    dend_28 { pt3dadd( 93.9814, 63.4837, -1.12005, 0.23 ) }
    dend_28 { pt3dadd( 94.5668, 64.1626, -1.12847, 1.36 ) }
    dend_28 { pt3dadd( 95.2636, 65.0112, -1.12924, 1.36 ) }
    dend_28 { pt3dadd( 96.6739, 66.7916, -1.11203, 0.23 ) }
    dend_28 { pt3dadd( 98.1621, 68.7475, -1.06046, 0.68 ) }
    dend_28 { pt3dadd( 99.4448, 70.4816, -0.988183, 0.23 ) }
    dend_28 { pt3dadd( 101.385, 73.1334, -0.859627, 1.14 ) }
    dend_28 { pt3dadd( 103.347, 75.8738, -0.718426, 0.23 ) }
    dend_28 { pt3dadd( 104.761, 77.9016, -0.599968, 0.91 ) }
    dend_28 { pt3dadd( 105.656, 79.2142, -0.502661, 1.59 ) }
    dend_28 { pt3dadd( 106.568, 80.5648, -0.406718, 0.91 ) }
    dend_28 { pt3dadd( 107.936, 82.6559, -0.256159, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -112.167, -94.164, 21.4891, 0.23 ) }
    dend_19 { pt3dadd( -113.527, -94.7231, 23.1321, 0.23 ) }
    dend_19 { pt3dadd( -113.956, -94.9128, 23.6324, 1.14 ) }
    dend_19 { pt3dadd( -115.461, -95.5572, 25.3526, 0.23 ) }
    dend_19 { pt3dadd( -116.034, -95.8179, 26.0071, 0.91 ) }
    dend_19 { pt3dadd( -117.911, -96.7865, 28.0492, 0.23 ) }
    dend_19 { pt3dadd( -118.84, -97.2992, 29.0709, 0.91 ) }
    dend_19 { pt3dadd( -120.796, -98.4781, 31.1486, 0.23 ) }
    dend_19 { pt3dadd( -122.029, -99.2421, 32.4598, 0.91 ) }
    dend_19 { pt3dadd( -123.17, -99.9605, 33.6368, 0.23 ) }
    dend_19 { pt3dadd( -124.575, -100.842, 35.1253, 1.14 ) }
    dend_19 { pt3dadd( -126.463, -102.051, 37.1194, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -112.167, -94.164, 21.4891, 0.23 ) }
    dend_18 { pt3dadd( -113.936, -97.8102, 21.183, 0.23 ) }
    dend_18 { pt3dadd( -115.143, -100.392, 20.9057, 1.59 ) }
    dend_18 { pt3dadd( -116.912, -104.267, 20.392, 0.23 ) }
    dend_18 { pt3dadd( -118.135, -106.764, 19.9129, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -119.14, -108.588, 19.491, 0.23 ) }
    dend_18 { pt3dadd( -120.186, -110.255, 19.0623, 0.23 ) }
    dend_18 { pt3dadd( -121.622, -111.943, 18.5199, 1.36 ) }
    dend_18 { pt3dadd( -123.529, -113.645, 17.8319, 2.27 ) }
    dend_18 { pt3dadd( -125.736, -115.158, 17.1215, 0.23 ) }
    dend_18 { pt3dadd( -127.725, -116.178, 16.6164, 1.14 ) }
    dend_18 { pt3dadd( -129.722, -116.955, 16.2168, 0.23 ) }
    dend_18 { pt3dadd( -132.085, -117.659, 15.9044, 1.14 ) }
    dend_18 { pt3dadd( -133.032, -117.818, 15.8636, 1.14 ) }
    dend_18 { pt3dadd( -134.949, -117.966, 15.8891, 0.23 ) }
    dend_18 { pt3dadd( -135.838, -117.974, 15.9263, 0.23 ) }
    dend_18 { pt3dadd( -137.013, -117.801, 15.9769, 1.36 ) }
    dend_18 { pt3dadd( -137.824, -117.491, 16.0469, 1.36 ) }
    dend_18 { pt3dadd( -141.065, -115.804, 16.4543, 0.23 ) }
    dend_18 { pt3dadd( -141.726, -115.419, 16.5511, 0.23 ) }
    dend_18 { pt3dadd( -143.753, -114.103, 16.8627, 0.23 ) }
    dend_18 { pt3dadd( -146.244, -112.433, 17.206, 1.14 ) }
    dend_18 { pt3dadd( -148.141, -111.213, 17.4501, 0.23 ) }
    dend_18 { pt3dadd( -151.15, -109.653, 17.827, 0.23 ) }
    dend_18 { pt3dadd( -152.898, -109.06, 17.9814, 1.36 ) }
    dend_18 { pt3dadd( -155.609, -108.292, 18.2122, 0.23 ) }
    dend_18 { pt3dadd( -157.961, -107.801, 18.3804, 1.14 ) }
    dend_18 { pt3dadd( -159.767, -107.543, 18.3764, 1.14 ) }
    dend_18 { pt3dadd( -164.015, -107.243, 18.134, 0.23 ) }
    dend_18 { pt3dadd( -167.663, -107.484, 17.8359, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.66282, -36.2004, 0.125381, 0.23 ) }
    dend_16 { pt3dadd( -9.49626, -39.2166, 2.28329, 0.23 ) }
    dend_16 { pt3dadd( -9.54662, -40.0183, 2.7907, 0.23 ) }
    dend_16 { pt3dadd( -9.71511, -41.67, 3.82807, 0.23 ) }
    dend_16 { pt3dadd( -9.84236, -42.9118, 4.5498, 1.14 ) }
    dend_16 { pt3dadd( -10.0544, -44.8616, 5.60129, 0.23 ) }
    dend_16 { pt3dadd( -10.2328, -46.4185, 6.40834, 1.14 ) }
    dend_16 { pt3dadd( -10.5664, -48.8522, 7.4906, 0.23 ) }
    dend_16 { pt3dadd( -10.8971, -51.3314, 8.55361, 0.23 ) }
    dend_16 { pt3dadd( -11.1367, -53.3934, 9.39842, 1.36 ) }
    dend_16 { pt3dadd( -11.662, -57.5067, 11.013, 0.23 ) }
    dend_16 { pt3dadd( -11.8414, -58.7965, 11.478, 0.23 ) }
    dend_16 { pt3dadd( -12.0783, -60.6342, 12.1104, 0.91 ) }
    dend_16 { pt3dadd( -12.1772, -61.5487, 12.4085, 0.91 ) }
    dend_16 { pt3dadd( -12.4336, -63.9913, 13.1597, 0.23 ) }
    dend_16 { pt3dadd( -12.6324, -65.8999, 13.7657, 0.23 ) }
    dend_16 { pt3dadd( -12.766, -68.0273, 14.4372, 0.68 ) }
    dend_16 { pt3dadd( -12.8839, -72.0588, 15.7674, 0.23 ) }
    dend_16 { pt3dadd( -12.8652, -73.2655, 16.198, 1.36 ) }
    dend_16 { pt3dadd( -12.8201, -74.2812, 16.5755, 1.36 ) }
    dend_16 { pt3dadd( -12.5927, -76.8628, 17.5428, 0.45 ) }
    dend_16 { pt3dadd( -12.2675, -79.0213, 18.334, 1.14 ) }
    dend_16 { pt3dadd( -11.7746, -81.4966, 19.2823, 0.23 ) }
    dend_16 { pt3dadd( -11.3223, -83.3219, 19.962, 0.45 ) }
    dend_16 { pt3dadd( -10.62, -86.0301, 20.9958, 0.23 ) }
    dend_16 { pt3dadd( -10.0538, -88.1327, 21.7868, 0.23 ) }
    dend_16 { pt3dadd( -9.55822, -89.9809, 22.5028, 0.91 ) }
    dend_16 { pt3dadd( -8.99025, -92.6624, 23.5887, 0.23 ) }
    dend_16 { pt3dadd( -8.49754, -95.3595, 24.6829, 0.91 ) }
    dend_16 { pt3dadd( -8.27297, -96.7843, 25.2511, 0.23 ) }
    dend_16 { pt3dadd( -7.99171, -98.8967, 26.1146, 1.14 ) }
    dend_16 { pt3dadd( -7.88794, -101.473, 27.215, 0.23 ) }
    dend_16 { pt3dadd( -7.99715, -103.638, 28.1156, 0.91 ) }
    dend_16 { pt3dadd( -8.27021, -105.132, 28.7219, 0.23 ) }
    dend_16 { pt3dadd( -8.91502, -107.897, 29.8678, 0.23 ) }
    dend_16 { pt3dadd( -9.21659, -109.01, 30.3196, 0.91 ) }
    dend_16 { pt3dadd( -10.4065, -112.731, 31.8236, 0.23 ) }
    dend_16 { pt3dadd( -11.0399, -114.571, 32.5138, 1.14 ) }
    dend_16 { pt3dadd( -12.5103, -118.458, 33.9943, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -9.66282, -36.2004, 0.125381, 1.59 ) }
    dend_7 { pt3dadd( -9.76048, -37.5723, 0.131659, 1.59 ) }
    dend_7 { pt3dadd( -9.91064, -39.6816, 0.141312, 2.27 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.91064, -39.6816, 0.141312, 0.23 ) }
    dend_11 { pt3dadd( -9.55608, -43.6751, 1.21349, 0.23 ) }
    dend_11 { pt3dadd( -9.2634, -46.477, 1.96358, 0.45 ) }
    dend_11 { pt3dadd( -8.95811, -48.5236, 2.5209, 1.36 ) }
    dend_11 { pt3dadd( -8.4421, -51.2201, 3.19344, 1.36 ) }
    dend_11 { pt3dadd( -7.79403, -54.266, 3.91377, 0.91 ) }
    dend_11 { pt3dadd( -7.0892, -57.3232, 4.59009, 1.14 ) }
    dend_11 { pt3dadd( -6.64571, -59.1965, 4.9526, 1.14 ) }
    dend_11 { pt3dadd( -5.49001, -63.8968, 5.75002, 0.91 ) }
    dend_11 { pt3dadd( -4.71553, -66.9875, 6.20279, 1.14 ) }
    dend_11 { pt3dadd( -4.21603, -69.0433, 6.46231, 1.14 ) }
    dend_11 { pt3dadd( -3.62634, -71.5774, 6.74747, 0.23 ) }
    dend_11 { pt3dadd( -2.97982, -74.722, 7.06637, 0.23 ) }
    dend_11 { pt3dadd( -2.69488, -76.4512, 7.23389, 0.23 ) }
    dend_11 { pt3dadd( -2.43862, -78.6232, 7.44597, 2.05 ) }
    dend_11 { pt3dadd( -2.10873, -82.1024, 7.85376, 1.59 ) }
    dend_11 { pt3dadd( -1.91435, -84.2828, 8.1254, 1.59 ) }
    dend_11 { pt3dadd( -1.6974, -86.7283, 8.46431, 0.45 ) }
    dend_11 { pt3dadd( -1.44879, -89.1505, 8.85086, 1.14 ) }
    dend_11 { pt3dadd( -1.19507, -91.5827, 9.2749, 1.14 ) }
    dend_11 { pt3dadd( -0.868835, -95.0467, 9.88298, 1.59 ) }
    dend_11 { pt3dadd( -0.64237, -97.4696, 10.2766, 1.14 ) }
    dend_11 { pt3dadd( -0.312776, -101.659, 10.8884, 0.68 ) }
    dend_11 { pt3dadd( -0.148666, -103.995, 11.2016, 1.14 ) }
    dend_11 { pt3dadd( 0.0428693, -107.148, 11.592, 0.23 ) }
    dend_11 { pt3dadd( 0.183805, -110.102, 11.9302, 1.59 ) }
    dend_11 { pt3dadd( 0.228166, -112.712, 12.1942, 0.68 ) }
    dend_11 { pt3dadd( 0.233454, -114.65, 12.3772, 0.91 ) }
    dend_11 { pt3dadd( 0.210664, -117.462, 12.6297, 0.91 ) }
    dend_11 { pt3dadd( 0.18067, -121.675, 13.0188, 1.36 ) }
    dend_11 { pt3dadd( 0.198556, -125.894, 13.4741, 0.91 ) }
    dend_11 { pt3dadd( 0.334248, -131.592, 14.1951, 1.14 ) }
    dend_11 { pt3dadd( 0.421073, -134.399, 14.6075, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 0.527285, -137.173, 15.047, 1.14 ) }
    dend_11 { pt3dadd( 0.599593, -140.67, 15.5982, 0.23 ) }
    dend_11 { pt3dadd( 0.600081, -143.51, 16.0367, 0.68 ) }
    dend_11 { pt3dadd( 0.525879, -146.703, 16.5106, 0.45 ) }
    dend_11 { pt3dadd( 0.44655, -148.697, 16.7814, 2.05 ) }
    dend_11 { pt3dadd( 0.126126, -153.694, 17.3765, 0.91 ) }
    dend_11 { pt3dadd( -0.33982, -159.536, 17.9929, 0.45 ) }
    dend_11 { pt3dadd( -0.557877, -161.796, 18.1981, 0.91 ) }
    dend_11 { pt3dadd( -0.881039, -164.636, 18.4046, 0.91 ) }
    dend_11 { pt3dadd( -1.28234, -167.84, 18.5843, 0.23 ) }
    dend_11 { pt3dadd( -1.48808, -169.595, 18.6693, 0.91 ) }
    dend_11 { pt3dadd( -1.83208, -173.101, 18.8809, 0.45 ) }
    dend_11 { pt3dadd( -2.07932, -176.299, 19.1535, 1.36 ) }
    dend_11 { pt3dadd( -2.27619, -179.081, 19.4463, 0.68 ) }
    dend_11 { pt3dadd( -2.35986, -180.279, 19.5953, 1.14 ) }
    dend_11 { pt3dadd( -2.51504, -182.759, 19.9567, 0.23 ) }
    dend_11 { pt3dadd( -2.5639, -184.865, 20.3137, 0.68 ) }
    dend_11 { pt3dadd( -2.49599, -187.342, 20.7894, 0.23 ) }
    dend_11 { pt3dadd( -2.39121, -189.085, 21.1436, 0.91 ) }
    dend_11 { pt3dadd( -2.21196, -191.163, 21.5813, 0.91 ) }
    dend_11 { pt3dadd( -1.7943, -195.968, 22.5483, 0.23 ) }
    dend_11 { pt3dadd( -1.55427, -199.291, 23.1568, 1.36 ) }
    dend_11 { pt3dadd( -1.264, -204.509, 24.0818, 0.23 ) }
    dend_11 { pt3dadd( -1.15154, -207.013, 24.5093, 1.14 ) }
    dend_11 { pt3dadd( -1.12091, -208.09, 24.69, 1.14 ) }
    dend_11 { pt3dadd( -1.08434, -211.323, 25.2515, 0.23 ) }
    dend_11 { pt3dadd( -1.12549, -214.227, 25.7603, 0.91 ) }
    dend_11 { pt3dadd( -1.19438, -216.047, 26.0742, 1.82 ) }
    dend_11 { pt3dadd( -1.28948, -217.774, 26.3916, 1.82 ) }
    dend_11 { pt3dadd( -1.49479, -222.274, 27.2787, 0.45 ) }
    dend_11 { pt3dadd( -1.57997, -224.517, 27.7608, 1.14 ) }
    dend_11 { pt3dadd( -1.60846, -225.917, 28.0996, 1.14 ) }
    dend_11 { pt3dadd( -1.61696, -228.305, 28.711, 0.23 ) }
    dend_11 { pt3dadd( -1.56033, -231.867, 29.6417, 0.23 ) }
    dend_11 { pt3dadd( -1.51468, -233.259, 30.0165, 1.36 ) }
    dend_11 { pt3dadd( -1.40912, -235.079, 30.4972, 1.36 ) }
    dend_11 { pt3dadd( -1.1726, -238.201, 31.2596, 0.23 ) }
    dend_11 { pt3dadd( -0.9385, -240.938, 31.9271, 0.91 ) }
    dend_11 { pt3dadd( -0.739353, -242.838, 32.3892, 0.91 ) }
    dend_11 { pt3dadd( -0.26452, -246.59, 33.282, 0.23 ) }
    dend_11 { pt3dadd( 0.0765064, -249.138, 33.8708, 0.45 ) }
    dend_11 { pt3dadd( 0.506015, -252.208, 34.5612, 0.91 ) }
    dend_11 { pt3dadd( 0.930476, -255.027, 35.2022, 0.45 ) }
    dend_11 { pt3dadd( 1.22191, -257.23, 35.6957, 1.14 ) }
    dend_11 { pt3dadd( 1.38914, -258.964, 36.085, 1.14 ) }
    dend_11 { pt3dadd( 1.59278, -261.761, 36.743, 0.23 ) }
    dend_11 { pt3dadd( 1.64583, -262.841, 37.0047, 1.14 ) }
    dend_11 { pt3dadd( 1.73601, -264.954, 37.5295, 1.14 ) }
    dend_11 { pt3dadd( 1.92105, -269.477, 38.6477, 0.23 ) }
    dend_11 { pt3dadd( 2.07501, -273.35, 39.6274, 0.68 ) }
    dend_11 { pt3dadd( 2.1819, -275.453, 40.1684, 1.59 ) }
    dend_11 { pt3dadd( 2.286, -276.803, 40.5284, 2.05 ) }
    dend_11 { pt3dadd( 2.86541, -281.645, 41.8577, 0.23 ) }
    dend_11 { pt3dadd( 3.15796, -283.337, 42.3564, 1.14 ) }
    dend_11 { pt3dadd( 3.47489, -284.596, 42.7598, 1.59 ) }
    dend_11 { pt3dadd( 4.44819, -287.491, 43.7294, 0.45 ) }
    dend_11 { pt3dadd( 5.36037, -289.914, 44.6119, 0.91 ) }
    dend_11 { pt3dadd( 6.51904, -292.793, 45.7771, 0.23 ) }
    dend_11 { pt3dadd( 7.5328, -295.153, 46.8127, 1.14 ) }
    dend_11 { pt3dadd( 8.16788, -296.526, 47.4628, 1.14 ) }
    dend_11 { pt3dadd( 10.2939, -300.881, 49.6322, 0.23 ) }
    dend_11 { pt3dadd( 11.6717, -303.492, 51.004, 0.23 ) }
    dend_11 { pt3dadd( 12.6263, -305.253, 51.935, 0.68 ) }
    dend_11 { pt3dadd( 13.1639, -306.222, 52.4377, 0.68 ) }
    dend_11 { pt3dadd( 14.4231, -308.569, 53.5723, 0.23 ) }
    dend_11 { pt3dadd( 15.7572, -311.067, 54.751, 1.36 ) }
    dend_11 { pt3dadd( 17.4485, -314.222, 56.1567, 0.45 ) }
    dend_11 { pt3dadd( 18.6606, -316.411, 57.0279, 1.14 ) }
    dend_11 { pt3dadd( 19.5299, -318.012, 57.6054, 0.23 ) }
    dend_11 { pt3dadd( 20.6074, -320.14, 58.3331, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.91064, -39.6816, 0.141312, 0.91 ) }
    dend_8 { pt3dadd( -12.2892, -43.2785, 0.81238, 0.91 ) }
    dend_8 { pt3dadd( -14.122, -46.0502, 1.32948, 0.91 ) }
    dend_8 { pt3dadd( -15.7526, -48.516, 1.78953, 0.68 ) }
    dend_8 { pt3dadd( -16.7145, -49.9706, 2.06091, 1.36 ) }
    dend_8 { pt3dadd( -18.1267, -52.1062, 2.45933, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 76/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 20.6074, -320.14, 58.3331, 0.23 ) }
    dend_15 { pt3dadd( 23.3225, -320.24, 58.4485, 0.23 ) }
    dend_15 { pt3dadd( 25.213, -320.312, 58.5508, 0.91 ) }
    dend_15 { pt3dadd( 27.7518, -320.428, 58.7145, 0.23 ) }
    dend_15 { pt3dadd( 30.0142, -320.532, 58.8603, 1.14 ) }
    dend_15 { pt3dadd( 32.4937, -320.645, 59.0202, 0.23 ) }
    dend_15 { pt3dadd( 33.1608, -320.675, 59.0632, 0.68 ) }
    dend_15 { pt3dadd( 34.3877, -320.619, 59.1837, 0.23 ) }
    dend_15 { pt3dadd( 34.8972, -320.572, 59.2249, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 20.6074, -320.14, 58.3331, 0.23 ) }
    dend_12 { pt3dadd( 19.6181, -323.403, 58.528, 0.23 ) }
    dend_12 { pt3dadd( 19.3355, -324.421, 58.6154, 0.91 ) }
    dend_12 { pt3dadd( 18.9778, -325.75, 58.7756, 0.45 ) }
    dend_12 { pt3dadd( 18.7649, -326.526, 58.8855, 1.36 ) }
    dend_12 { pt3dadd( 18.2369, -328.278, 59.1238, 0.23 ) }
    dend_12 { pt3dadd( 17.9056, -329.348, 59.2843, 1.14 ) }
    dend_12 { pt3dadd( 17.0413, -332.092, 59.7585, 0.23 ) }
    dend_12 { pt3dadd( 16.4111, -333.901, 60.1206, 0.23 ) }
    dend_12 { pt3dadd( 15.8487, -335.492, 60.472, 1.59 ) }
    dend_12 { pt3dadd( 15.142, -337.654, 60.9586, 0.91 ) }
    dend_12 { pt3dadd( 14.549, -339.733, 61.4384, 0.23 ) }
    dend_12 { pt3dadd( 14.1584, -341.395, 61.8663, 1.14 ) }
    dend_12 { pt3dadd( 13.721, -343.894, 62.5606, 0.23 ) }
    dend_12 { pt3dadd( 13.5196, -345.649, 63.061, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 13.3865, -347.892, 63.7142, 0.23 ) }
    dend_12 { pt3dadd( 13.3567, -349.696, 64.2356, 1.14 ) }
    dend_12 { pt3dadd( 13.3737, -351.777, 64.7768, 0.23 ) }
    dend_12 { pt3dadd( 13.4341, -353.549, 65.2031, 1.36 ) }
    dend_12 { pt3dadd( 13.4582, -354.057, 65.309, 1.36 ) }
    dend_12 { pt3dadd( 13.5845, -357.458, 65.9167, 0.23 ) }
    dend_12 { pt3dadd( 13.6289, -359.303, 66.1336, 0.91 ) }
    dend_12 { pt3dadd( 13.6859, -361.46, 66.2287, 0.23 ) }
    dend_12 { pt3dadd( 13.7687, -363.284, 66.194, 1.36 ) }
    dend_12 { pt3dadd( 13.8735, -364.317, 66.1331, 1.36 ) }
    dend_12 { pt3dadd( 14.5082, -367.926, 65.7856, 0.23 ) }
    dend_12 { pt3dadd( 15.2075, -370.614, 65.4242, 1.14 ) }
    dend_12 { pt3dadd( 15.8474, -372.543, 65.1041, 0.23 ) }
    dend_12 { pt3dadd( 16.3041, -373.781, 64.8658, 1.36 ) }
    dend_12 { pt3dadd( 17.3387, -376.29, 64.3139, 0.23 ) }
    dend_12 { pt3dadd( 18.2883, -378.274, 63.8436, 1.82 ) }
    dend_12 { pt3dadd( 18.6438, -378.836, 63.7038, 1.82 ) }
    dend_12 { pt3dadd( 19.2716, -379.621, 63.5685, 0.45 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -18.1267, -52.1062, 2.45933, 0.68 ) }
    dend_10 { pt3dadd( -19.6367, -52.4213, 1.62205, 0.68 ) }
    dend_10 { pt3dadd( -21.1603, -52.6494, 0.697479, 1.14 ) }
    dend_10 { pt3dadd( -22.8677, -52.9215, -0.357578, 0.23 ) }
    dend_10 { pt3dadd( -23.941, -53.1432, -1.03335, 0.23 ) }
    dend_10 { pt3dadd( -25.033, -53.4835, -1.67168, 1.14 ) }
    dend_10 { pt3dadd( -25.9091, -53.7893, -2.11798, 0.23 ) }
    dend_10 { pt3dadd( -26.9347, -54.142, -2.55547, 0.45 ) }
    dend_10 { pt3dadd( -27.6681, -54.4071, -2.81825, 0.45 ) }
    dend_10 { pt3dadd( -28.7452, -54.7827, -3.1747, 1.14 ) }
    dend_10 { pt3dadd( -31.1099, -55.5809, -3.92965, 0.23 ) }
    dend_10 { pt3dadd( -32.8546, -56.0853, -4.47502, 0.91 ) }
    dend_10 { pt3dadd( -33.9783, -56.2835, -4.83426, 0.91 ) }
    dend_10 { pt3dadd( -35.1446, -56.2836, -5.24789, 0.45 ) }
    dend_10 { pt3dadd( -36.4346, -56.0598, -5.78969, 0.45 ) }
    dend_10 { pt3dadd( -37.3855, -55.6658, -6.28934, 0.45 ) }
    dend_10 { pt3dadd( -38.2244, -54.9685, -6.93052, 0.91 ) }
    dend_10 { pt3dadd( -39.1107, -53.7712, -7.94297, 0.45 ) }
    dend_10 { pt3dadd( -39.544, -52.8914, -8.59139, 0.45 ) }
    dend_10 { pt3dadd( -39.7853, -52.0868, -9.08464, 0.45 ) }
    dend_10 { pt3dadd( -39.9897, -51.1871, -9.46589, 0.45 ) }
    dend_10 { pt3dadd( -39.4643, -51.9095, -9.52201, 1.36 ) }
    dend_10 { pt3dadd( -38.6582, -52.5575, -9.81714, 1.36 ) }
    dend_10 { pt3dadd( -37.7745, -53.3515, -10.1069, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 42/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -18.1267, -52.1062, 2.45933, 0.23 ) }
    dend_9 { pt3dadd( -18.3801, -54.1071, 2.86079, 0.23 ) }
    dend_9 { pt3dadd( -18.4753, -55.0356, 3.04986, 0.91 ) }
    dend_9 { pt3dadd( -18.5613, -56.2876, 3.31668, 0.91 ) }
    dend_9 { pt3dadd( -18.6262, -57.752, 3.62127, 0.91 ) }
    dend_9 { pt3dadd( -18.6527, -59.388, 3.96357, 0.23 ) }
    dend_9 { pt3dadd( -18.6369, -61.2501, 4.3602, 0.68 ) }
    dend_9 { pt3dadd( -18.5613, -63.2495, 4.80134, 0.45 ) }
    dend_9 { pt3dadd( -18.4309, -65.4796, 5.29923, 0.91 ) }
    dend_9 { pt3dadd( -18.2971, -67.268, 5.69302, 0.68 ) }
    dend_9 { pt3dadd( -18.1259, -69.3146, 6.12143, 1.59 ) }
    dend_9 { pt3dadd( -17.7904, -73.5509, 7.00216, 0.45 ) }
    dend_9 { pt3dadd( -17.6415, -75.3563, 7.36763, 0.45 ) }
    dend_9 { pt3dadd( -17.5448, -76.5767, 7.60696, 1.59 ) }
    dend_9 { pt3dadd( -17.4852, -77.5871, 7.79192, 1.59 ) }
    dend_9 { pt3dadd( -17.4321, -80.2086, 8.22006, 0.23 ) }
    dend_9 { pt3dadd( -17.4818, -82.0332, 8.48267, 0.68 ) }
    dend_9 { pt3dadd( -17.6746, -84.6616, 8.82167, 0.23 ) }
    dend_9 { pt3dadd( -17.8497, -86.267, 9.01511, 1.36 ) }
    dend_9 { pt3dadd( -18.2236, -88.9685, 9.31858, 0.45 ) }
    dend_9 { pt3dadd( -18.8855, -92.7346, 9.71272, 0.45 ) }
    dend_9 { pt3dadd( -19.2709, -94.5378, 9.89012, 0.45 ) }
    dend_9 { pt3dadd( -19.6073, -95.8965, 10.0075, 1.36 ) }
    dend_9 { pt3dadd( -20.0394, -97.3397, 10.1283, 1.59 ) }
    dend_9 { pt3dadd( -20.513, -98.7242, 10.2511, 0.23 ) }
    dend_9 { pt3dadd( -20.9797, -99.9526, 10.3704, 0.45 ) }
    dend_9 { pt3dadd( -21.9057, -102.324, 10.6183, 0.23 ) }
    dend_9 { pt3dadd( -22.2384, -103.221, 10.7295, 0.23 ) }
    dend_9 { pt3dadd( -22.8361, -104.83, 10.9805, 1.14 ) }
    dend_9 { pt3dadd( -23.8236, -107.441, 11.4652, 0.23 ) }
    dend_9 { pt3dadd( -24.4148, -108.985, 11.7856, 1.14 ) }
    dend_9 { pt3dadd( -25.1295, -110.879, 12.2378, 0.23 ) }
    dend_9 { pt3dadd( -25.7724, -112.555, 12.6764, 0.45 ) }
    dend_9 { pt3dadd( -26.3444, -114.114, 13.1529, 0.23 ) }
    dend_9 { pt3dadd( -26.8119, -115.371, 13.5808, 1.14 ) }
    dend_9 { pt3dadd( -27.046, -115.991, 13.8154, 1.14 ) }
    dend_9 { pt3dadd( -27.6356, -117.484, 14.405, 0.23 ) }
    dend_9 { pt3dadd( -27.9816, -118.306, 14.7439, 0.91 ) }
    dend_9 { pt3dadd( -28.7232, -120.087, 15.4393, 0.23 ) }
    dend_9 { pt3dadd( -29.1307, -121.235, 15.8951, 1.14 ) }
    dend_9 { pt3dadd( -29.5746, -122.687, 16.4721, 0.23 ) }
    dend_9 { pt3dadd( -29.8139, -123.726, 16.8564, 0.91 ) }
    dend_9 { pt3dadd( -29.8947, -124.295, 17.0422, 0.23 ) }
    dend_9 { pt3dadd( -29.9519, -125.098, 17.2916, 0.68 ) }
    dend_9 { pt3dadd( -30.0433, -127.084, 17.8411, 0.23 ) }
    dend_9 { pt3dadd( -30.0798, -128.27, 18.1669, 0.68 ) }
    dend_9 { pt3dadd( -30.1718, -130.074, 18.6278, 0.23 ) }
    dend_9 { pt3dadd( -30.2684, -131.301, 18.9653, 0.91 ) }
    dend_9 { pt3dadd( -30.6741, -134.444, 19.8169, 0.23 ) }
    dend_9 { pt3dadd( -30.8573, -135.688, 20.1543, 0.68 ) }
    dend_9 { pt3dadd( -31.0839, -136.954, 20.4891, 0.23 ) }
    dend_9 { pt3dadd( -31.3681, -138.264, 20.8584, 0.91 ) }
    dend_9 { pt3dadd( -32.1116, -140.917, 21.6539, 0.23 ) }
    dend_9 { pt3dadd( -32.7178, -142.738, 22.2146, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 19.2716, -379.621, 63.5685, 0.23 ) }
    dend_14 { pt3dadd( 20.01, -380.77, 63.6162, 0.23 ) }
    dend_14 { pt3dadd( 20.9093, -382.108, 63.6163, 0.91 ) }
    dend_14 { pt3dadd( 21.7729, -383.28, 63.5914, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( 22.7456, -384.643, 63.5221, 0.91 ) }
    dend_14 { pt3dadd( 23.3941, -385.57, 63.4649, 0.23 ) }
    dend_14 { pt3dadd( 24.2666, -386.839, 63.3465, 0.68 ) }
    dend_14 { pt3dadd( 24.9692, -387.889, 63.1888, 0.23 ) }
    dend_14 { pt3dadd( 25.7858, -389.084, 62.9312, 0.91 ) }
    dend_14 { pt3dadd( 26.6195, -390.24, 62.5893, 0.23 ) }
    dend_14 { pt3dadd( 27.3007, -391.194, 62.2425, 0.91 ) }
    dend_14 { pt3dadd( 28.2337, -392.621, 61.6963, 0.23 ) }
    dend_14 { pt3dadd( 29.0326, -393.897, 61.1792, 1.14 ) }
    dend_14 { pt3dadd( 30.1217, -395.743, 60.4208, 0.23 ) }
    dend_14 { pt3dadd( 30.9119, -397.125, 59.8174, 0.68 ) }
    dend_14 { pt3dadd( 31.6771, -398.389, 59.2345, 0.23 ) }
    dend_14 { pt3dadd( 32.5388, -399.895, 58.4972, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.2716, -379.621, 63.5685, 0.23 ) }
    dend_13 { pt3dadd( 19.5252, -380.259, 63.3769, 0.23 ) }
    dend_13 { pt3dadd( 19.8384, -381.047, 63.1403, 0.68 ) }
    dend_13 { pt3dadd( 19.9908, -381.43, 63.0252, 0.23 ) }
    dend_13 { pt3dadd( 20.3918, -382.438, 62.7223, 0.91 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_24, dend_3, dend_0, axon_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, axon_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_5 = new SectionList()
    dend_24 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_3 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_4 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_23 nseg = 3
    dend_20 nseg = 9
    dend_39 nseg = 5
    dend_36 nseg = 9
    dend_30 nseg = 3
    dend_17 nseg = 7
    dend_32 nseg = 3
    dend_31 nseg = 5
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_18 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 15
    dend_12 nseg = 3
    dend_9 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_SBC_61a753bff1_0_0


